NO

Initial ITS
Start location: l6
   0: l0 -> l2 : deltaext^0'=deltaext^post0, __disjvr_1^0'=__disjvr_1^post0, deltext^0'=deltext^post0, delta_new^0'=delta_new^post0, __disjvr_0^0'=__disjvr_0^post0, wntext^0'=wntext^post0, deltaext_new^0'=deltaext_new^post0, delta^0'=delta^post0, wnt^0'=wnt^post0, (__disjvr_0^0-__disjvr_0^post0 == 0 /\ -wnt^post0+wnt^0 == 0 /\ wntext^0-wntext^post0 == 0 /\ deltext^0-deltext^post0 == 0 /\ deltaext^0-deltaext^post0 == 0 /\ __disjvr_1^0-__disjvr_1^post0 == 0 /\ -delta^post0+delta^0 == 0 /\ -deltaext_new^post0+deltaext_new^0 == 0 /\ -__disjvr_0^0+__disjvr_0^post0 == 0 /\ delta_new^0-delta_new^post0 == 0), cost: 1
   2: l0 -> l3 : deltaext^0'=deltaext^post2, __disjvr_1^0'=__disjvr_1^post2, deltext^0'=deltext^post2, delta_new^0'=delta_new^post2, __disjvr_0^0'=__disjvr_0^post2, wntext^0'=wntext^post2, deltaext_new^0'=deltaext_new^post2, delta^0'=delta^post2, wnt^0'=wnt^post2, (-__disjvr_1^0+__disjvr_1^post2 == 0 /\ __disjvr_1^0-__disjvr_1^post2 == 0 /\ delta^0-delta^post2 == 0 /\ -wnt^post2+wnt^0 == 0 /\ delta_new^0-delta_new^post2 == 0 /\ -wntext^post2+wntext^0 == 0 /\ deltaext^0-deltaext^post2 == 0 /\ deltext^0-deltext^post2 == 0 /\ deltaext_new^0-deltaext_new^post2 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0), cost: 1
   1: l2 -> l1 : deltaext^0'=deltaext^post1, __disjvr_1^0'=__disjvr_1^post1, deltext^0'=deltext^post1, delta_new^0'=delta_new^post1, __disjvr_0^0'=__disjvr_0^post1, wntext^0'=wntext^post1, deltaext_new^0'=deltaext_new^post1, delta^0'=delta^post1, wnt^0'=wnt^post1, (-wnt^post1+wnt^0 == 0 /\ delta^post1-delta_new^0 == 0 /\ -deltaext_new^post1+deltaext_new^0 == 0 /\ deltaext^post1-deltaext_new^0 == 0 /\ deltext^0-deltext^post1 == 0 /\ -__disjvr_1^post1+__disjvr_1^0 == 0 /\ -wntext^post1+wntext^0 == 0 /\ -__disjvr_0^post1+__disjvr_0^0 == 0 /\ delta_new^0-delta_new^post1 == 0), cost: 1
   8: l1 -> l4 : deltaext^0'=deltaext^post8, __disjvr_1^0'=__disjvr_1^post8, deltext^0'=deltext^post8, delta_new^0'=delta_new^post8, __disjvr_0^0'=__disjvr_0^post8, wntext^0'=wntext^post8, deltaext_new^0'=deltaext_new^post8, delta^0'=delta^post8, wnt^0'=wnt^post8, (-delta^post8+delta^0 == 0 /\ -wnt^post8+wnt^0 == 0 /\ __disjvr_1^0-__disjvr_1^post8 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0 /\ deltaext^0-deltaext^post8 == 0 /\ -delta_new^post8+delta_new^0 == 0 /\ -3+2*deltaext^0-wnt^0 <= 0 /\ 3-2*deltaext^0+wnt^0 <= 0 /\ -deltaext^0+deltaext_new^post8 == 0 /\ -deltext^post8+deltext^0 == 0 /\ -wntext^post8+wntext^0 == 0), cost: 1
   9: l1 -> l4 : deltaext^0'=deltaext^post9, __disjvr_1^0'=__disjvr_1^post9, deltext^0'=deltext^post9, delta_new^0'=delta_new^post9, __disjvr_0^0'=__disjvr_0^post9, wntext^0'=wntext^post9, deltaext_new^0'=deltaext_new^post9, delta^0'=delta^post9, wnt^0'=wnt^post9, (-wnt^post9+wnt^0 == 0 /\ -deltaext^0+deltaext_new^post9 == 0 /\ -delta^post9+delta^0 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0 /\ wntext^0-wntext^post9 == 0 /\ deltext^0-deltext^post9 == 0 /\ -2+2*deltaext^0-wnt^0 <= 0 /\ 2-2*deltaext^0+wnt^0 <= 0 /\ -delta_new^post9+delta_new^0 == 0 /\ -__disjvr_1^post9+__disjvr_1^0 == 0 /\ deltaext^0-deltaext^post9 == 0), cost: 1
  10: l1 -> l4 : deltaext^0'=deltaext^post10, __disjvr_1^0'=__disjvr_1^post10, deltext^0'=deltext^post10, delta_new^0'=delta_new^post10, __disjvr_0^0'=__disjvr_0^post10, wntext^0'=wntext^post10, deltaext_new^0'=deltaext_new^post10, delta^0'=delta^post10, wnt^0'=wnt^post10, (deltext^0-deltext^post10 == 0 /\ -wnt^post10+wnt^0 == 0 /\ delta_new^0-delta_new^post10 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ -wntext^post10+wntext^0 == 0 /\ delta^0-delta^post10 == 0 /\ __disjvr_1^0-__disjvr_1^post10 == 0 /\ 1+deltaext_new^post10-deltaext^0 == 0 /\ -__disjvr_0^post10+__disjvr_0^0 == 0 /\ deltaext^0-deltaext^post10 == 0), cost: 1
  11: l1 -> l4 : deltaext^0'=deltaext^post11, __disjvr_1^0'=__disjvr_1^post11, deltext^0'=deltext^post11, delta_new^0'=delta_new^post11, __disjvr_0^0'=__disjvr_0^post11, wntext^0'=wntext^post11, deltaext_new^0'=deltaext_new^post11, delta^0'=delta^post11, wnt^0'=wnt^post11, (delta^0-delta^post11 == 0 /\ -wntext^post11+wntext^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ -1-deltaext^0+deltaext_new^post11 == 0 /\ -wnt^post11+wnt^0 == 0 /\ __disjvr_1^0-__disjvr_1^post11 == 0 /\ -__disjvr_0^post11+__disjvr_0^0 == 0 /\ delta_new^0-delta_new^post11 == 0 /\ deltaext^0-deltaext^post11 == 0 /\ deltext^0-deltext^post11 == 0), cost: 1
   3: l3 -> l1 : deltaext^0'=deltaext^post3, __disjvr_1^0'=__disjvr_1^post3, deltext^0'=deltext^post3, delta_new^0'=delta_new^post3, __disjvr_0^0'=__disjvr_0^post3, wntext^0'=wntext^post3, deltaext_new^0'=deltaext_new^post3, delta^0'=delta^post3, wnt^0'=wnt^post3, (-deltaext_new^post3+deltaext_new^0 == 0 /\ -wnt^post3+wnt^0 == 0 /\ -delta_new^0+delta^post3 == 0 /\ -delta_new^post3+delta_new^0 == 0 /\ __disjvr_0^0-__disjvr_0^post3 == 0 /\ -deltaext_new^0+deltaext^post3 == 0 /\ -deltext^post3+deltext^0 == 0 /\ __disjvr_1^0-__disjvr_1^post3 == 0 /\ -wntext^post3+wntext^0 == 0), cost: 1
   4: l4 -> l0 : deltaext^0'=deltaext^post4, __disjvr_1^0'=__disjvr_1^post4, deltext^0'=deltext^post4, delta_new^0'=delta_new^post4, __disjvr_0^0'=__disjvr_0^post4, wntext^0'=wntext^post4, deltaext_new^0'=deltaext_new^post4, delta^0'=delta^post4, wnt^0'=wnt^post4, (-1-deltaext^0-wntext^0+2*delta^0 <= 0 /\ 1+deltaext^0+wntext^0-2*delta^0 <= 0 /\ deltaext^0-deltaext^post4 == 0 /\ -deltaext_new^post4+deltaext_new^0 == 0 /\ -deltext^post4+deltext^0 == 0 /\ delta_new^post4-delta^0 == 0 /\ wntext^0-wntext^post4 == 0 /\ -delta^post4+delta^0 == 0 /\ -wnt^post4+wnt^0 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ __disjvr_1^0-__disjvr_1^post4 == 0), cost: 1
   5: l4 -> l0 : deltaext^0'=deltaext^post5, __disjvr_1^0'=__disjvr_1^post5, deltext^0'=deltext^post5, delta_new^0'=delta_new^post5, __disjvr_0^0'=__disjvr_0^post5, wntext^0'=wntext^post5, deltaext_new^0'=deltaext_new^post5, delta^0'=delta^post5, wnt^0'=wnt^post5, (deltaext^0+wntext^0-2*delta^0 <= 0 /\ delta_new^post5-delta^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0 /\ -wnt^post5+wnt^0 == 0 /\ wntext^0-wntext^post5 == 0 /\ -delta^post5+delta^0 == 0 /\ deltaext^0-deltaext^post5 == 0 /\ deltext^0-deltext^post5 == 0 /\ -deltaext_new^post5+deltaext_new^0 == 0 /\ -deltaext^0-wntext^0+2*delta^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0), cost: 1
   6: l4 -> l0 : deltaext^0'=deltaext^post6, __disjvr_1^0'=__disjvr_1^post6, deltext^0'=deltext^post6, delta_new^0'=delta_new^post6, __disjvr_0^0'=__disjvr_0^post6, wntext^0'=wntext^post6, deltaext_new^0'=deltaext_new^post6, delta^0'=delta^post6, wnt^0'=wnt^post6, (-wntext^post6+wntext^0 == 0 /\ deltext^0-deltext^post6 == 0 /\ 1+delta_new^post6-delta^0 == 0 /\ -wnt^post6+wnt^0 == 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ delta^0-delta^post6 == 0 /\ __disjvr_1^0-__disjvr_1^post6 == 0 /\ deltaext^0-deltaext^post6 == 0 /\ deltaext_new^0-deltaext_new^post6 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0), cost: 1
   7: l4 -> l0 : deltaext^0'=deltaext^post7, __disjvr_1^0'=__disjvr_1^post7, deltext^0'=deltext^post7, delta_new^0'=delta_new^post7, __disjvr_0^0'=__disjvr_0^post7, wntext^0'=wntext^post7, deltaext_new^0'=deltaext_new^post7, delta^0'=delta^post7, wnt^0'=wnt^post7, (__disjvr_1^0-__disjvr_1^post7 == 0 /\ -1+delta_new^post7-delta^0 == 0 /\ -deltext^post7+deltext^0 == 0 /\ -wntext^post7+wntext^0 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0 /\ deltaext_new^0-deltaext_new^post7 == 0 /\ -delta^post7+delta^0 == 0 /\ -wnt^post7+wnt^0 == 0 /\ -deltaext^post7+deltaext^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 1
  12: l5 -> l1 : deltaext^0'=deltaext^post12, __disjvr_1^0'=__disjvr_1^post12, deltext^0'=deltext^post12, delta_new^0'=delta_new^post12, __disjvr_0^0'=__disjvr_0^post12, wntext^0'=wntext^post12, deltaext_new^0'=deltaext_new^post12, delta^0'=delta^post12, wnt^0'=wnt^post12, (-wnt^post12+wnt^0 == 0 /\ -3+wntext^0 <= 0 /\ -wnt^0 <= 0 /\ __disjvr_1^0-__disjvr_1^post12 == 0 /\ -delta^post12+delta^0 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ deltaext_new^0-deltaext_new^post12 == 0 /\ -delta^0 <= 0 /\ -delta_new^post12+delta_new^0 == 0 /\ deltaext^0-deltaext^post12 == 0 /\ -3+delta^0 <= 0 /\ -wntext^post12+wntext^0 == 0 /\ -deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ -deltext^post12+deltext^0 == 0 /\ -wntext^0 <= 0), cost: 1
  13: l6 -> l5 : deltaext^0'=deltaext^post13, __disjvr_1^0'=__disjvr_1^post13, deltext^0'=deltext^post13, delta_new^0'=delta_new^post13, __disjvr_0^0'=__disjvr_0^post13, wntext^0'=wntext^post13, deltaext_new^0'=deltaext_new^post13, delta^0'=delta^post13, wnt^0'=wnt^post13, (-delta^post13+delta^0 == 0 /\ __disjvr_1^0-__disjvr_1^post13 == 0 /\ -deltaext_new^post13+deltaext_new^0 == 0 /\ wntext^0-wntext^post13 == 0 /\ -delta_new^post13+delta_new^0 == 0 /\ deltaext^0-deltaext^post13 == 0 /\ deltext^0-deltext^post13 == 0 /\ -wnt^post13+wnt^0 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : deltaext^0'=deltaext^post0, __disjvr_1^0'=__disjvr_1^post0, deltext^0'=deltext^post0, delta_new^0'=delta_new^post0, __disjvr_0^0'=__disjvr_0^post0, wntext^0'=wntext^post0, deltaext_new^0'=deltaext_new^post0, delta^0'=delta^post0, wnt^0'=wnt^post0, (__disjvr_0^0-__disjvr_0^post0 == 0 /\ -wnt^post0+wnt^0 == 0 /\ wntext^0-wntext^post0 == 0 /\ deltext^0-deltext^post0 == 0 /\ deltaext^0-deltaext^post0 == 0 /\ __disjvr_1^0-__disjvr_1^post0 == 0 /\ -delta^post0+delta^0 == 0 /\ -deltaext_new^post0+deltaext_new^0 == 0 /\ -__disjvr_0^0+__disjvr_0^post0 == 0 /\ delta_new^0-delta_new^post0 == 0), cost: 1
New rule:
l0 -> l2 : 0 == 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l1 : deltaext^0'=deltaext^post1, __disjvr_1^0'=__disjvr_1^post1, deltext^0'=deltext^post1, delta_new^0'=delta_new^post1, __disjvr_0^0'=__disjvr_0^post1, wntext^0'=wntext^post1, deltaext_new^0'=deltaext_new^post1, delta^0'=delta^post1, wnt^0'=wnt^post1, (-wnt^post1+wnt^0 == 0 /\ delta^post1-delta_new^0 == 0 /\ -deltaext_new^post1+deltaext_new^0 == 0 /\ deltaext^post1-deltaext_new^0 == 0 /\ deltext^0-deltext^post1 == 0 /\ -__disjvr_1^post1+__disjvr_1^0 == 0 /\ -wntext^post1+wntext^0 == 0 /\ -__disjvr_0^post1+__disjvr_0^0 == 0 /\ delta_new^0-delta_new^post1 == 0), cost: 1
New rule:
l2 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l0 -> l3 : deltaext^0'=deltaext^post2, __disjvr_1^0'=__disjvr_1^post2, deltext^0'=deltext^post2, delta_new^0'=delta_new^post2, __disjvr_0^0'=__disjvr_0^post2, wntext^0'=wntext^post2, deltaext_new^0'=deltaext_new^post2, delta^0'=delta^post2, wnt^0'=wnt^post2, (-__disjvr_1^0+__disjvr_1^post2 == 0 /\ __disjvr_1^0-__disjvr_1^post2 == 0 /\ delta^0-delta^post2 == 0 /\ -wnt^post2+wnt^0 == 0 /\ delta_new^0-delta_new^post2 == 0 /\ -wntext^post2+wntext^0 == 0 /\ deltaext^0-deltaext^post2 == 0 /\ deltext^0-deltext^post2 == 0 /\ deltaext_new^0-deltaext_new^post2 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0), cost: 1
New rule:
l0 -> l3 : 0 == 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : deltaext^0'=deltaext^post3, __disjvr_1^0'=__disjvr_1^post3, deltext^0'=deltext^post3, delta_new^0'=delta_new^post3, __disjvr_0^0'=__disjvr_0^post3, wntext^0'=wntext^post3, deltaext_new^0'=deltaext_new^post3, delta^0'=delta^post3, wnt^0'=wnt^post3, (-deltaext_new^post3+deltaext_new^0 == 0 /\ -wnt^post3+wnt^0 == 0 /\ -delta_new^0+delta^post3 == 0 /\ -delta_new^post3+delta_new^0 == 0 /\ __disjvr_0^0-__disjvr_0^post3 == 0 /\ -deltaext_new^0+deltaext^post3 == 0 /\ -deltext^post3+deltext^0 == 0 /\ __disjvr_1^0-__disjvr_1^post3 == 0 /\ -wntext^post3+wntext^0 == 0), cost: 1
New rule:
l3 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l0 : deltaext^0'=deltaext^post4, __disjvr_1^0'=__disjvr_1^post4, deltext^0'=deltext^post4, delta_new^0'=delta_new^post4, __disjvr_0^0'=__disjvr_0^post4, wntext^0'=wntext^post4, deltaext_new^0'=deltaext_new^post4, delta^0'=delta^post4, wnt^0'=wnt^post4, (-1-deltaext^0-wntext^0+2*delta^0 <= 0 /\ 1+deltaext^0+wntext^0-2*delta^0 <= 0 /\ deltaext^0-deltaext^post4 == 0 /\ -deltaext_new^post4+deltaext_new^0 == 0 /\ -deltext^post4+deltext^0 == 0 /\ delta_new^post4-delta^0 == 0 /\ wntext^0-wntext^post4 == 0 /\ -delta^post4+delta^0 == 0 /\ -wnt^post4+wnt^0 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ __disjvr_1^0-__disjvr_1^post4 == 0), cost: 1
New rule:
l4 -> l0 : delta_new^0'=delta^0, -1-deltaext^0-wntext^0+2*delta^0 == 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l0 : deltaext^0'=deltaext^post5, __disjvr_1^0'=__disjvr_1^post5, deltext^0'=deltext^post5, delta_new^0'=delta_new^post5, __disjvr_0^0'=__disjvr_0^post5, wntext^0'=wntext^post5, deltaext_new^0'=deltaext_new^post5, delta^0'=delta^post5, wnt^0'=wnt^post5, (deltaext^0+wntext^0-2*delta^0 <= 0 /\ delta_new^post5-delta^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0 /\ -wnt^post5+wnt^0 == 0 /\ wntext^0-wntext^post5 == 0 /\ -delta^post5+delta^0 == 0 /\ deltaext^0-deltaext^post5 == 0 /\ deltext^0-deltext^post5 == 0 /\ -deltaext_new^post5+deltaext_new^0 == 0 /\ -deltaext^0-wntext^0+2*delta^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0), cost: 1
New rule:
l4 -> l0 : delta_new^0'=delta^0, deltaext^0+wntext^0-2*delta^0 == 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l0 : deltaext^0'=deltaext^post6, __disjvr_1^0'=__disjvr_1^post6, deltext^0'=deltext^post6, delta_new^0'=delta_new^post6, __disjvr_0^0'=__disjvr_0^post6, wntext^0'=wntext^post6, deltaext_new^0'=deltaext_new^post6, delta^0'=delta^post6, wnt^0'=wnt^post6, (-wntext^post6+wntext^0 == 0 /\ deltext^0-deltext^post6 == 0 /\ 1+delta_new^post6-delta^0 == 0 /\ -wnt^post6+wnt^0 == 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ delta^0-delta^post6 == 0 /\ __disjvr_1^0-__disjvr_1^post6 == 0 /\ deltaext^0-deltaext^post6 == 0 /\ deltaext_new^0-deltaext_new^post6 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0), cost: 1
New rule:
l4 -> l0 : delta_new^0'=-1+delta^0, 2+deltaext^0+wntext^0-2*delta^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l0 : deltaext^0'=deltaext^post7, __disjvr_1^0'=__disjvr_1^post7, deltext^0'=deltext^post7, delta_new^0'=delta_new^post7, __disjvr_0^0'=__disjvr_0^post7, wntext^0'=wntext^post7, deltaext_new^0'=deltaext_new^post7, delta^0'=delta^post7, wnt^0'=wnt^post7, (__disjvr_1^0-__disjvr_1^post7 == 0 /\ -1+delta_new^post7-delta^0 == 0 /\ -deltext^post7+deltext^0 == 0 /\ -wntext^post7+wntext^0 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0 /\ deltaext_new^0-deltaext_new^post7 == 0 /\ -delta^post7+delta^0 == 0 /\ -wnt^post7+wnt^0 == 0 /\ -deltaext^post7+deltaext^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 1
New rule:
l4 -> l0 : delta_new^0'=1+delta^0, 1-deltaext^0-wntext^0+2*delta^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : deltaext^0'=deltaext^post8, __disjvr_1^0'=__disjvr_1^post8, deltext^0'=deltext^post8, delta_new^0'=delta_new^post8, __disjvr_0^0'=__disjvr_0^post8, wntext^0'=wntext^post8, deltaext_new^0'=deltaext_new^post8, delta^0'=delta^post8, wnt^0'=wnt^post8, (-delta^post8+delta^0 == 0 /\ -wnt^post8+wnt^0 == 0 /\ __disjvr_1^0-__disjvr_1^post8 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0 /\ deltaext^0-deltaext^post8 == 0 /\ -delta_new^post8+delta_new^0 == 0 /\ -3+2*deltaext^0-wnt^0 <= 0 /\ 3-2*deltaext^0+wnt^0 <= 0 /\ -deltaext^0+deltaext_new^post8 == 0 /\ -deltext^post8+deltext^0 == 0 /\ -wntext^post8+wntext^0 == 0), cost: 1
New rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -3+2*deltaext^0-wnt^0 == 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : deltaext^0'=deltaext^post9, __disjvr_1^0'=__disjvr_1^post9, deltext^0'=deltext^post9, delta_new^0'=delta_new^post9, __disjvr_0^0'=__disjvr_0^post9, wntext^0'=wntext^post9, deltaext_new^0'=deltaext_new^post9, delta^0'=delta^post9, wnt^0'=wnt^post9, (-wnt^post9+wnt^0 == 0 /\ -deltaext^0+deltaext_new^post9 == 0 /\ -delta^post9+delta^0 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0 /\ wntext^0-wntext^post9 == 0 /\ deltext^0-deltext^post9 == 0 /\ -2+2*deltaext^0-wnt^0 <= 0 /\ 2-2*deltaext^0+wnt^0 <= 0 /\ -delta_new^post9+delta_new^0 == 0 /\ -__disjvr_1^post9+__disjvr_1^0 == 0 /\ deltaext^0-deltaext^post9 == 0), cost: 1
New rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -2+2*deltaext^0-wnt^0 == 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : deltaext^0'=deltaext^post10, __disjvr_1^0'=__disjvr_1^post10, deltext^0'=deltext^post10, delta_new^0'=delta_new^post10, __disjvr_0^0'=__disjvr_0^post10, wntext^0'=wntext^post10, deltaext_new^0'=deltaext_new^post10, delta^0'=delta^post10, wnt^0'=wnt^post10, (deltext^0-deltext^post10 == 0 /\ -wnt^post10+wnt^0 == 0 /\ delta_new^0-delta_new^post10 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ -wntext^post10+wntext^0 == 0 /\ delta^0-delta^post10 == 0 /\ __disjvr_1^0-__disjvr_1^post10 == 0 /\ 1+deltaext_new^post10-deltaext^0 == 0 /\ -__disjvr_0^post10+__disjvr_0^0 == 0 /\ deltaext^0-deltaext^post10 == 0), cost: 1
New rule:
l1 -> l4 : deltaext_new^0'=-1+deltaext^0, 4-2*deltaext^0+wnt^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : deltaext^0'=deltaext^post11, __disjvr_1^0'=__disjvr_1^post11, deltext^0'=deltext^post11, delta_new^0'=delta_new^post11, __disjvr_0^0'=__disjvr_0^post11, wntext^0'=wntext^post11, deltaext_new^0'=deltaext_new^post11, delta^0'=delta^post11, wnt^0'=wnt^post11, (delta^0-delta^post11 == 0 /\ -wntext^post11+wntext^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ -1-deltaext^0+deltaext_new^post11 == 0 /\ -wnt^post11+wnt^0 == 0 /\ __disjvr_1^0-__disjvr_1^post11 == 0 /\ -__disjvr_0^post11+__disjvr_0^0 == 0 /\ delta_new^0-delta_new^post11 == 0 /\ deltaext^0-deltaext^post11 == 0 /\ deltext^0-deltext^post11 == 0), cost: 1
New rule:
l1 -> l4 : deltaext_new^0'=1+deltaext^0, -1+2*deltaext^0-wnt^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l1 : deltaext^0'=deltaext^post12, __disjvr_1^0'=__disjvr_1^post12, deltext^0'=deltext^post12, delta_new^0'=delta_new^post12, __disjvr_0^0'=__disjvr_0^post12, wntext^0'=wntext^post12, deltaext_new^0'=deltaext_new^post12, delta^0'=delta^post12, wnt^0'=wnt^post12, (-wnt^post12+wnt^0 == 0 /\ -3+wntext^0 <= 0 /\ -wnt^0 <= 0 /\ __disjvr_1^0-__disjvr_1^post12 == 0 /\ -delta^post12+delta^0 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ deltaext_new^0-deltaext_new^post12 == 0 /\ -delta^0 <= 0 /\ -delta_new^post12+delta_new^0 == 0 /\ deltaext^0-deltaext^post12 == 0 /\ -3+delta^0 <= 0 /\ -wntext^post12+wntext^0 == 0 /\ -deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ -deltext^post12+deltext^0 == 0 /\ -wntext^0 <= 0), cost: 1
New rule:
l5 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : deltaext^0'=deltaext^post13, __disjvr_1^0'=__disjvr_1^post13, deltext^0'=deltext^post13, delta_new^0'=delta_new^post13, __disjvr_0^0'=__disjvr_0^post13, wntext^0'=wntext^post13, deltaext_new^0'=deltaext_new^post13, delta^0'=delta^post13, wnt^0'=wnt^post13, (-delta^post13+delta^0 == 0 /\ __disjvr_1^0-__disjvr_1^post13 == 0 /\ -deltaext_new^post13+deltaext_new^0 == 0 /\ wntext^0-wntext^post13 == 0 /\ -delta_new^post13+delta_new^0 == 0 /\ deltaext^0-deltaext^post13 == 0 /\ deltext^0-deltext^post13 == 0 /\ -wnt^post13+wnt^0 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0), cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
  14: l0 -> l2 : 0 == 0, cost: 1
  16: l0 -> l3 : 0 == 0, cost: 1
  15: l2 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, TRUE, cost: 1
  22: l1 -> l4 : deltaext_new^0'=deltaext^0, -3+2*deltaext^0-wnt^0 == 0, cost: 1
  23: l1 -> l4 : deltaext_new^0'=deltaext^0, -2+2*deltaext^0-wnt^0 == 0, cost: 1
  24: l1 -> l4 : deltaext_new^0'=-1+deltaext^0, 4-2*deltaext^0+wnt^0 <= 0, cost: 1
  25: l1 -> l4 : deltaext_new^0'=1+deltaext^0, -1+2*deltaext^0-wnt^0 <= 0, cost: 1
  17: l3 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, TRUE, cost: 1
  18: l4 -> l0 : delta_new^0'=delta^0, -1-deltaext^0-wntext^0+2*delta^0 == 0, cost: 1
  19: l4 -> l0 : delta_new^0'=delta^0, deltaext^0+wntext^0-2*delta^0 == 0, cost: 1
  20: l4 -> l0 : delta_new^0'=-1+delta^0, 2+deltaext^0+wntext^0-2*delta^0 <= 0, cost: 1
  21: l4 -> l0 : delta_new^0'=1+delta^0, 1-deltaext^0-wntext^0+2*delta^0 <= 0, cost: 1
  26: l5 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 1
  27: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 1
New rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2

Applied deletion
Removed the following rules: 26 27

Eliminating location l2 by chaining:

Applied chaining
First rule:
l0 -> l2 : 0 == 0, cost: 1
Second rule:
l2 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, TRUE, cost: 1
New rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 14 15

Eliminating location l3 by chaining:

Applied chaining
First rule:
l0 -> l3 : 0 == 0, cost: 1
Second rule:
l3 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, TRUE, cost: 1
New rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 16 17

Eliminated locations on linear paths
Start location: l6
  29: l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
  22: l1 -> l4 : deltaext_new^0'=deltaext^0, -3+2*deltaext^0-wnt^0 == 0, cost: 1
  23: l1 -> l4 : deltaext_new^0'=deltaext^0, -2+2*deltaext^0-wnt^0 == 0, cost: 1
  24: l1 -> l4 : deltaext_new^0'=-1+deltaext^0, 4-2*deltaext^0+wnt^0 <= 0, cost: 1
  25: l1 -> l4 : deltaext_new^0'=1+deltaext^0, -1+2*deltaext^0-wnt^0 <= 0, cost: 1
  18: l4 -> l0 : delta_new^0'=delta^0, -1-deltaext^0-wntext^0+2*delta^0 == 0, cost: 1
  19: l4 -> l0 : delta_new^0'=delta^0, deltaext^0+wntext^0-2*delta^0 == 0, cost: 1
  20: l4 -> l0 : delta_new^0'=-1+delta^0, 2+deltaext^0+wntext^0-2*delta^0 <= 0, cost: 1
  21: l4 -> l0 : delta_new^0'=1+delta^0, 1-deltaext^0-wntext^0+2*delta^0 <= 0, cost: 1
  28: l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2


Eliminating location l4 by chaining:

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -3+2*deltaext^0-wnt^0 == 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=delta^0, -1-deltaext^0-wntext^0+2*delta^0 == 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -3+2*deltaext^0-wnt^0 == 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=delta^0, deltaext^0+wntext^0-2*delta^0 == 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -3+2*deltaext^0-wnt^0 == 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=-1+delta^0, 2+deltaext^0+wntext^0-2*delta^0 <= 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -3+2*deltaext^0-wnt^0 == 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=1+delta^0, 1-deltaext^0-wntext^0+2*delta^0 <= 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, (-3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -2+2*deltaext^0-wnt^0 == 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=delta^0, -1-deltaext^0-wntext^0+2*delta^0 == 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -2+2*deltaext^0-wnt^0 == 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=delta^0, deltaext^0+wntext^0-2*delta^0 == 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -2+2*deltaext^0-wnt^0 == 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=-1+delta^0, 2+deltaext^0+wntext^0-2*delta^0 <= 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=deltaext^0, -2+2*deltaext^0-wnt^0 == 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=1+delta^0, 1-deltaext^0-wntext^0+2*delta^0 <= 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, (-2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=-1+deltaext^0, 4-2*deltaext^0+wnt^0 <= 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=delta^0, -1-deltaext^0-wntext^0+2*delta^0 == 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=-1+deltaext^0, 4-2*deltaext^0+wnt^0 <= 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=delta^0, deltaext^0+wntext^0-2*delta^0 == 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=-1+deltaext^0, 4-2*deltaext^0+wnt^0 <= 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=-1+delta^0, 2+deltaext^0+wntext^0-2*delta^0 <= 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=-1+deltaext^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=-1+deltaext^0, 4-2*deltaext^0+wnt^0 <= 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=1+delta^0, 1-deltaext^0-wntext^0+2*delta^0 <= 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=-1+deltaext^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=1+deltaext^0, -1+2*deltaext^0-wnt^0 <= 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=delta^0, -1-deltaext^0-wntext^0+2*delta^0 == 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=1+deltaext^0, -1+2*deltaext^0-wnt^0 <= 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=delta^0, deltaext^0+wntext^0-2*delta^0 == 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=1+deltaext^0, -1+2*deltaext^0-wnt^0 <= 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=-1+delta^0, 2+deltaext^0+wntext^0-2*delta^0 <= 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=1+deltaext^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 2

Applied chaining
First rule:
l1 -> l4 : deltaext_new^0'=1+deltaext^0, -1+2*deltaext^0-wnt^0 <= 0, cost: 1
Second rule:
l4 -> l0 : delta_new^0'=1+delta^0, 1-deltaext^0-wntext^0+2*delta^0 <= 0, cost: 1
New rule:
l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=1+deltaext^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2

Applied deletion
Removed the following rules: 18 19 20 21 22 23 24 25

Eliminated locations on tree-shaped paths
Start location: l6
  29: l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
  30: l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 2
  31: l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 2
  32: l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 2
  33: l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, (-3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2
  34: l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 2
  35: l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 2
  36: l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 2
  37: l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, (-2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2
  38: l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 2
  39: l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 2
  40: l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=-1+deltaext^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 2
  41: l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=-1+deltaext^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2
  42: l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 2
  43: l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 2
  44: l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=1+deltaext^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 2
  45: l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=1+deltaext^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2
  28: l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (0 == 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (0 == 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (0 == 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (0 == 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (0 == 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (0 == 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, (-3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (0 == 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (0 == 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (0 == 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (0 == 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (0 == 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (0 == 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, (-2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (0 == 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (0 == 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (0 == 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (0 == 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=-1+deltaext^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=-1+delta^0, (0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=-1+delta^0, (0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=-1+delta^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=-1+deltaext^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=1+delta^0, (0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=1+delta^0, (0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=1+delta^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (0 == 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (0 == 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (0 == 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (0 == 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=-1+delta^0, deltaext_new^0'=1+deltaext^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=-1+delta^0, (0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=-1+delta^0, (0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=-1+delta^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l0 : delta_new^0'=1+delta^0, deltaext_new^0'=1+deltaext^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 2
Second rule:
l0 -> l1 : deltaext^0'=deltaext_new^0, delta^0'=delta_new^0, 0 == 0, cost: 2
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=1+delta^0, (0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=1+delta^0, (0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=1+delta^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied deletion
Removed the following rules: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45

Eliminated locations on tree-shaped paths
Start location: l6
  46: l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
  47: l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
  48: l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
  49: l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
  50: l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
  51: l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
  52: l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
  53: l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
  54: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
  55: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
  56: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=-1+delta^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4
  57: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=1+delta^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
  58: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
  59: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
  60: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=-1+delta^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4
  61: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=1+delta^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
  28: l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2


Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=delta^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4

Simplified simple loops
Start location: l6
  56: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=-1+delta^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4
  57: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=1+delta^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
  60: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=-1+delta^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4
  61: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=1+delta^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
  62: l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
  63: l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
  64: l1 -> l1 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
  65: l1 -> l1 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
  66: l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
  67: l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
  68: l1 -> l1 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
  69: l1 -> l1 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
  70: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
  71: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
  72: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
  73: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
  28: l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2


Applied acceleration
Original rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=-1+delta^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0-n, delta_new^0'=-n+delta^0, deltaext_new^0'=deltaext^0-n, delta^0'=-n+delta^0, (-2+2*deltaext^0-2*n-wnt^0 >= 0 /\ -1-deltaext^0-n-wntext^0+2*delta^0 >= 0 /\ -1+n >= 0), cost: 4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hILPDM.txt

Applied instantiation
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0-n, delta_new^0'=-n+delta^0, deltaext_new^0'=deltaext^0-n, delta^0'=-n+delta^0, (-2+2*deltaext^0-2*n-wnt^0 >= 0 /\ -1-deltaext^0-n-wntext^0+2*delta^0 >= 0 /\ -1+n >= 0), cost: 4*n
New rule:
l1 -> l1 : deltaext^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=1+deltaext^0+wntext^0-delta^0, deltaext_new^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta^0'=1+deltaext^0+wntext^0-delta^0, (0 >= 0 /\ 4*deltaext^0+2*wntext^0-4*delta^0-wnt^0 >= 0 /\ -2-deltaext^0-wntext^0+2*delta^0 >= 0), cost: -4-4*deltaext^0-4*wntext^0+8*delta^0

Applied acceleration
Original rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=-1+deltaext^0, delta^0'=1+delta^0, (4-2*deltaext^0+wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0-n0, delta_new^0'=delta^0+n0, deltaext_new^0'=deltaext^0-n0, delta^0'=delta^0+n0, (-2+2*deltaext^0-2*n0-wnt^0 >= 0 /\ -1+n0 >= 0 /\ 2+deltaext^0+wntext^0-2*delta^0-3*n0 >= 0), cost: 4*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lcPNKG.txt

Applied acceleration
Original rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=-1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=-1+delta^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0+n1, delta_new^0'=-n1+delta^0, deltaext_new^0'=deltaext^0+n1, delta^0'=-n1+delta^0, (-1+n1 >= 0 /\ 3-2*deltaext^0-2*n1+wnt^0 >= 0 /\ 1-deltaext^0-3*n1-wntext^0+2*delta^0 >= 0), cost: 4*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lEGfeg.txt

Applied acceleration
Original rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=1+delta^0, deltaext_new^0'=1+deltaext^0, delta^0'=1+delta^0, (-1+2*deltaext^0-wnt^0 <= 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : deltaext^0'=deltaext^0+n2, delta_new^0'=delta^0+n2, deltaext_new^0'=deltaext^0+n2, delta^0'=delta^0+n2, (deltaext^0+wntext^0-2*delta^0-n2 >= 0 /\ -1+n2 >= 0 /\ 3-2*deltaext^0-2*n2+wnt^0 >= 0), cost: 4*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_mAdNKn.txt

Applied instantiation
Original rule:
l1 -> l1 : deltaext^0'=deltaext^0+n2, delta_new^0'=delta^0+n2, deltaext_new^0'=deltaext^0+n2, delta^0'=delta^0+n2, (deltaext^0+wntext^0-2*delta^0-n2 >= 0 /\ -1+n2 >= 0 /\ 3-2*deltaext^0-2*n2+wnt^0 >= 0), cost: 4*n2
New rule:
l1 -> l1 : deltaext^0'=2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=deltaext^0+wntext^0-delta^0, deltaext_new^0'=2*deltaext^0+wntext^0-2*delta^0, delta^0'=deltaext^0+wntext^0-delta^0, (0 >= 0 /\ 3-4*deltaext^0-2*wntext^0+4*delta^0+wnt^0 >= 0 /\ -1+deltaext^0+wntext^0-2*delta^0 >= 0), cost: 4*deltaext^0+4*wntext^0-8*delta^0

Applied nonterm
Original rule:
l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> [7] : (-1-deltaext^0-wntext^0+2*delta^0 >= 0 /\ 1+deltaext^0+wntext^0-2*delta^0 >= 0 /\ -1+n3 >= 0 /\ -3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jkIKeL.txt

Applied nonterm
Original rule:
l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> [7] : (deltaext^0+wntext^0-2*delta^0 >= 0 /\ -1+n4 >= 0 /\ -3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0 /\ -deltaext^0-wntext^0+2*delta^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jgCbNi.txt

Applied acceleration
Original rule:
l1 -> l1 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -3+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=-n5+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-n5+delta^0, (-3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0 /\ -deltaext^0-2*n5-wntext^0+2*delta^0 >= 0 /\ -1+n5 >= 0), cost: 4*n5
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FeMfPm.txt

Applied acceleration
Original rule:
l1 -> l1 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-3+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=n6+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n6+delta^0, (1+deltaext^0-2*n6+wntext^0-2*delta^0 >= 0 /\ -3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0 /\ -1+n6 >= 0), cost: 4*n6
Sub-proof via acceration calculus written to file:///tmp/tmpnam_edAbCe.txt

Applied nonterm
Original rule:
l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> [7] : (-1-deltaext^0-wntext^0+2*delta^0 >= 0 /\ 1+deltaext^0+wntext^0-2*delta^0 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0 /\ -1+n7 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gNCEmo.txt

Applied nonterm
Original rule:
l1 -> l1 : delta_new^0'=delta^0, deltaext_new^0'=deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> [7] : (deltaext^0+wntext^0-2*delta^0 >= 0 /\ -1+n8 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0 /\ -deltaext^0-wntext^0+2*delta^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oNgGkg.txt

Applied acceleration
Original rule:
l1 -> l1 : delta_new^0'=-1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-1+delta^0, (2+deltaext^0+wntext^0-2*delta^0 <= 0 /\ -2+2*deltaext^0-wnt^0 == 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=delta^0-n9, deltaext_new^0'=deltaext^0, delta^0'=delta^0-n9, (-deltaext^0-wntext^0+2*delta^0-2*n9 >= 0 /\ -1+n9 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0), cost: 4*n9
Sub-proof via acceration calculus written to file:///tmp/tmpnam_LglPDO.txt

Applied acceleration
Original rule:
l1 -> l1 : delta_new^0'=1+delta^0, deltaext_new^0'=deltaext^0, delta^0'=1+delta^0, (-2+2*deltaext^0-wnt^0 == 0 /\ 1-deltaext^0-wntext^0+2*delta^0 <= 0), cost: 4
New rule:
l1 -> l1 : delta_new^0'=n10+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n10+delta^0, (1+deltaext^0+wntext^0-2*n10-2*delta^0 >= 0 /\ -1+n10 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0), cost: 4*n10
Sub-proof via acceration calculus written to file:///tmp/tmpnam_focNdp.txt

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=1+deltaext^0+wntext^0-delta^0, deltaext_new^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta^0'=1+deltaext^0+wntext^0-delta^0, (0 >= 0 /\ 4*deltaext^0+2*wntext^0-4*delta^0-wnt^0 >= 0 /\ -2-deltaext^0-wntext^0+2*delta^0 >= 0), cost: -4-4*deltaext^0-4*wntext^0+8*delta^0
New rule:
l1 -> l1 : deltaext^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=1+deltaext^0+wntext^0-delta^0, deltaext_new^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta^0'=1+deltaext^0+wntext^0-delta^0, (4*deltaext^0+2*wntext^0-4*delta^0-wnt^0 >= 0 /\ -2-deltaext^0-wntext^0+2*delta^0 >= 0), cost: -4-4*deltaext^0-4*wntext^0+8*delta^0

Applied simplification
Original rule:
l1 -> l1 : deltaext^0'=2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=deltaext^0+wntext^0-delta^0, deltaext_new^0'=2*deltaext^0+wntext^0-2*delta^0, delta^0'=deltaext^0+wntext^0-delta^0, (0 >= 0 /\ 3-4*deltaext^0-2*wntext^0+4*delta^0+wnt^0 >= 0 /\ -1+deltaext^0+wntext^0-2*delta^0 >= 0), cost: 4*deltaext^0+4*wntext^0-8*delta^0
New rule:
l1 -> l1 : deltaext^0'=2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=deltaext^0+wntext^0-delta^0, deltaext_new^0'=2*deltaext^0+wntext^0-2*delta^0, delta^0'=deltaext^0+wntext^0-delta^0, (3-4*deltaext^0-2*wntext^0+4*delta^0+wnt^0 >= 0 /\ -1+deltaext^0+wntext^0-2*delta^0 >= 0), cost: 4*deltaext^0+4*wntext^0-8*delta^0

Applied deletion
Removed the following rules: 56 57 60 61 62 63 64 65 66 67 68 69

Accelerated simple loops
Start location: l6
  70: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
  71: l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
  72: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
  73: l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
  75: l1 -> l1 : deltaext^0'=deltaext^0-n0, delta_new^0'=delta^0+n0, deltaext_new^0'=deltaext^0-n0, delta^0'=delta^0+n0, (-2+2*deltaext^0-2*n0-wnt^0 >= 0 /\ -1+n0 >= 0 /\ 2+deltaext^0+wntext^0-2*delta^0-3*n0 >= 0), cost: 4*n0
  76: l1 -> l1 : deltaext^0'=deltaext^0+n1, delta_new^0'=-n1+delta^0, deltaext_new^0'=deltaext^0+n1, delta^0'=-n1+delta^0, (-1+n1 >= 0 /\ 3-2*deltaext^0-2*n1+wnt^0 >= 0 /\ 1-deltaext^0-3*n1-wntext^0+2*delta^0 >= 0), cost: 4*n1
  78: l1 -> [7] : (-1-deltaext^0-wntext^0+2*delta^0 >= 0 /\ 1+deltaext^0+wntext^0-2*delta^0 >= 0 /\ -1+n3 >= 0 /\ -3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0), cost: NONTERM
  79: l1 -> [7] : (deltaext^0+wntext^0-2*delta^0 >= 0 /\ -1+n4 >= 0 /\ -3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0 /\ -deltaext^0-wntext^0+2*delta^0 >= 0), cost: NONTERM
  80: l1 -> l1 : delta_new^0'=-n5+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-n5+delta^0, (-3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0 /\ -deltaext^0-2*n5-wntext^0+2*delta^0 >= 0 /\ -1+n5 >= 0), cost: 4*n5
  81: l1 -> l1 : delta_new^0'=n6+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n6+delta^0, (1+deltaext^0-2*n6+wntext^0-2*delta^0 >= 0 /\ -3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0 /\ -1+n6 >= 0), cost: 4*n6
  82: l1 -> [7] : (-1-deltaext^0-wntext^0+2*delta^0 >= 0 /\ 1+deltaext^0+wntext^0-2*delta^0 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0 /\ -1+n7 >= 0), cost: NONTERM
  83: l1 -> [7] : (deltaext^0+wntext^0-2*delta^0 >= 0 /\ -1+n8 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0 /\ -deltaext^0-wntext^0+2*delta^0 >= 0), cost: NONTERM
  84: l1 -> l1 : delta_new^0'=delta^0-n9, deltaext_new^0'=deltaext^0, delta^0'=delta^0-n9, (-deltaext^0-wntext^0+2*delta^0-2*n9 >= 0 /\ -1+n9 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0), cost: 4*n9
  85: l1 -> l1 : delta_new^0'=n10+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n10+delta^0, (1+deltaext^0+wntext^0-2*n10-2*delta^0 >= 0 /\ -1+n10 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0), cost: 4*n10
  86: l1 -> l1 : deltaext^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=1+deltaext^0+wntext^0-delta^0, deltaext_new^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta^0'=1+deltaext^0+wntext^0-delta^0, (4*deltaext^0+2*wntext^0-4*delta^0-wnt^0 >= 0 /\ -2-deltaext^0-wntext^0+2*delta^0 >= 0), cost: -4-4*deltaext^0-4*wntext^0+8*delta^0
  87: l1 -> l1 : deltaext^0'=2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=deltaext^0+wntext^0-delta^0, deltaext_new^0'=2*deltaext^0+wntext^0-2*delta^0, delta^0'=deltaext^0+wntext^0-delta^0, (3-4*deltaext^0-2*wntext^0+4*delta^0+wnt^0 >= 0 /\ -1+deltaext^0+wntext^0-2*delta^0 >= 0), cost: 4*deltaext^0+4*wntext^0-8*delta^0
  28: l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2


Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
New rule:
l6 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 6

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0), cost: 4
New rule:
l6 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+wntext^0 <= 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 6

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
New rule:
l6 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0 >= 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+wntext^0 <= 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ wntext^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 6

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -1+2*deltaext^0-wnt^0 <= 0), cost: 4
New rule:
l6 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0 >= 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+wntext^0 <= 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ wntext^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 6

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : deltaext^0'=deltaext^0-n0, delta_new^0'=delta^0+n0, deltaext_new^0'=deltaext^0-n0, delta^0'=delta^0+n0, (-2+2*deltaext^0-2*n0-wnt^0 >= 0 /\ -1+n0 >= 0 /\ 2+deltaext^0+wntext^0-2*delta^0-3*n0 >= 0), cost: 4*n0
New rule:
l6 -> l1 : deltaext^0'=deltaext^0-n0, delta_new^0'=delta^0+n0, deltaext_new^0'=deltaext^0-n0, delta^0'=delta^0+n0, (-3+wntext^0 <= 0 /\ -2+2*deltaext^0-2*n0-wnt^0 >= 0 /\ -1+n0 >= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0-3*n0 >= 0 /\ wnt^0 >= 0), cost: 2+4*n0

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : deltaext^0'=deltaext^0+n1, delta_new^0'=-n1+delta^0, deltaext_new^0'=deltaext^0+n1, delta^0'=-n1+delta^0, (-1+n1 >= 0 /\ 3-2*deltaext^0-2*n1+wnt^0 >= 0 /\ 1-deltaext^0-3*n1-wntext^0+2*delta^0 >= 0), cost: 4*n1
New rule:
l6 -> l1 : deltaext^0'=deltaext^0+n1, delta_new^0'=-n1+delta^0, deltaext_new^0'=deltaext^0+n1, delta^0'=-n1+delta^0, (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ -1+n1 >= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ 3-2*deltaext^0-2*n1+wnt^0 >= 0 /\ 1-deltaext^0-3*n1-wntext^0+2*delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n1

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> [7] : (-1-deltaext^0-wntext^0+2*delta^0 >= 0 /\ 1+deltaext^0+wntext^0-2*delta^0 >= 0 /\ -1+n3 >= 0 /\ -3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0), cost: NONTERM
New rule:
l6 -> [7] : (1+deltaext^0+wntext^0-2*delta^0 == 0 /\ wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> [7] : (deltaext^0+wntext^0-2*delta^0 >= 0 /\ -1+n4 >= 0 /\ -3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0 /\ -deltaext^0-wntext^0+2*delta^0 >= 0), cost: NONTERM
New rule:
l6 -> [7] : (-3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ -deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : delta_new^0'=-n5+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-n5+delta^0, (-3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0 /\ -deltaext^0-2*n5-wntext^0+2*delta^0 >= 0 /\ -1+n5 >= 0), cost: 4*n5
New rule:
l6 -> l1 : delta_new^0'=-n5+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-n5+delta^0, (wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ -3+delta^0 <= 0 /\ -deltaext^0-2*n5-wntext^0+2*delta^0 >= 0 /\ -1+n5 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n5

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : delta_new^0'=n6+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n6+delta^0, (1+deltaext^0-2*n6+wntext^0-2*delta^0 >= 0 /\ -3+2*deltaext^0-wnt^0 >= 0 /\ 3-2*deltaext^0+wnt^0 >= 0 /\ -1+n6 >= 0), cost: 4*n6
New rule:
l6 -> l1 : delta_new^0'=n6+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n6+delta^0, (-3+wntext^0 <= 0 /\ 1+deltaext^0-2*n6+wntext^0-2*delta^0 >= 0 /\ wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ delta^0 >= 0 /\ -1+n6 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n6

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> [7] : (-1-deltaext^0-wntext^0+2*delta^0 >= 0 /\ 1+deltaext^0+wntext^0-2*delta^0 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0 /\ -1+n7 >= 0), cost: NONTERM
New rule:
l6 -> [7] : (1+deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+wntext^0 <= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> [7] : (deltaext^0+wntext^0-2*delta^0 >= 0 /\ -1+n8 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0 /\ -deltaext^0-wntext^0+2*delta^0 >= 0), cost: NONTERM
New rule:
l6 -> [7] : (-3+wntext^0 <= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ -deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : delta_new^0'=delta^0-n9, deltaext_new^0'=deltaext^0, delta^0'=delta^0-n9, (-deltaext^0-wntext^0+2*delta^0-2*n9 >= 0 /\ -1+n9 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0), cost: 4*n9
New rule:
l6 -> l1 : delta_new^0'=delta^0-n9, deltaext_new^0'=deltaext^0, delta^0'=delta^0-n9, (-deltaext^0-wntext^0+2*delta^0-2*n9 >= 0 /\ -1+n9 >= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n9

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : delta_new^0'=n10+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n10+delta^0, (1+deltaext^0+wntext^0-2*n10-2*delta^0 >= 0 /\ -1+n10 >= 0 /\ -2+2*deltaext^0-wnt^0 >= 0 /\ 2-2*deltaext^0+wnt^0 >= 0), cost: 4*n10
New rule:
l6 -> l1 : delta_new^0'=n10+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n10+delta^0, (-3+wntext^0 <= 0 /\ 1+deltaext^0+wntext^0-2*n10-2*delta^0 >= 0 /\ -1+n10 >= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n10

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : deltaext^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=1+deltaext^0+wntext^0-delta^0, deltaext_new^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta^0'=1+deltaext^0+wntext^0-delta^0, (4*deltaext^0+2*wntext^0-4*delta^0-wnt^0 >= 0 /\ -2-deltaext^0-wntext^0+2*delta^0 >= 0), cost: -4-4*deltaext^0-4*wntext^0+8*delta^0
New rule:
l6 -> l1 : deltaext^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=1+deltaext^0+wntext^0-delta^0, deltaext_new^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta^0'=1+deltaext^0+wntext^0-delta^0, (4*deltaext^0+2*wntext^0-4*delta^0-wnt^0 >= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ -2-deltaext^0-wntext^0+2*delta^0 >= 0 /\ wnt^0 >= 0), cost: -2-4*deltaext^0-4*wntext^0+8*delta^0

Applied chaining
First rule:
l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l1 -> l1 : deltaext^0'=2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=deltaext^0+wntext^0-delta^0, deltaext_new^0'=2*deltaext^0+wntext^0-2*delta^0, delta^0'=deltaext^0+wntext^0-delta^0, (3-4*deltaext^0-2*wntext^0+4*delta^0+wnt^0 >= 0 /\ -1+deltaext^0+wntext^0-2*delta^0 >= 0), cost: 4*deltaext^0+4*wntext^0-8*delta^0
New rule:
l6 -> l1 : deltaext^0'=2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=deltaext^0+wntext^0-delta^0, deltaext_new^0'=2*deltaext^0+wntext^0-2*delta^0, delta^0'=deltaext^0+wntext^0-delta^0, (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ 3-4*deltaext^0-2*wntext^0+4*delta^0+wnt^0 >= 0 /\ wntext^0 >= 0 /\ delta^0 >= 0 /\ -1+deltaext^0+wntext^0-2*delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*deltaext^0+4*wntext^0-8*delta^0

Applied deletion
Removed the following rules: 70 71 72 73 75 76 78 79 80 81 82 83 84 85 86 87

Chained accelerated rules with incoming rules
Start location: l6
  28: l6 -> l1 : (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2
  88: l6 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (-1-deltaext^0-wntext^0+2*delta^0 == 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 6
  89: l6 -> l1 : deltaext^0'=-1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=-1+deltaext^0, (deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+wntext^0 <= 0 /\ 4-2*deltaext^0+wnt^0 <= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 6
  90: l6 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0 >= 0 /\ -1-deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+wntext^0 <= 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ wntext^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 6
  91: l6 -> l1 : deltaext^0'=1+deltaext^0, delta_new^0'=delta^0, deltaext_new^0'=1+deltaext^0, (deltaext^0 >= 0 /\ deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+wntext^0 <= 0 /\ -1+2*deltaext^0-wnt^0 <= 0 /\ wntext^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 6
  92: l6 -> l1 : deltaext^0'=deltaext^0-n0, delta_new^0'=delta^0+n0, deltaext_new^0'=deltaext^0-n0, delta^0'=delta^0+n0, (-3+wntext^0 <= 0 /\ -2+2*deltaext^0-2*n0-wnt^0 >= 0 /\ -1+n0 >= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ 2+deltaext^0+wntext^0-2*delta^0-3*n0 >= 0 /\ wnt^0 >= 0), cost: 2+4*n0
  93: l6 -> l1 : deltaext^0'=deltaext^0+n1, delta_new^0'=-n1+delta^0, deltaext_new^0'=deltaext^0+n1, delta^0'=-n1+delta^0, (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ -1+n1 >= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ 3-2*deltaext^0-2*n1+wnt^0 >= 0 /\ 1-deltaext^0-3*n1-wntext^0+2*delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n1
  94: l6 -> [7] : (1+deltaext^0+wntext^0-2*delta^0 == 0 /\ wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM
  95: l6 -> [7] : (-3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ -deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM
  96: l6 -> l1 : delta_new^0'=-n5+delta^0, deltaext_new^0'=deltaext^0, delta^0'=-n5+delta^0, (wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ -3+delta^0 <= 0 /\ -deltaext^0-2*n5-wntext^0+2*delta^0 >= 0 /\ -1+n5 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n5
  97: l6 -> l1 : delta_new^0'=n6+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n6+delta^0, (-3+wntext^0 <= 0 /\ 1+deltaext^0-2*n6+wntext^0-2*delta^0 >= 0 /\ wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ delta^0 >= 0 /\ -1+n6 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n6
  98: l6 -> [7] : (1+deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+wntext^0 <= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM
  99: l6 -> [7] : (-3+wntext^0 <= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ -deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM
 100: l6 -> l1 : delta_new^0'=delta^0-n9, deltaext_new^0'=deltaext^0, delta^0'=delta^0-n9, (-deltaext^0-wntext^0+2*delta^0-2*n9 >= 0 /\ -1+n9 >= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n9
 101: l6 -> l1 : delta_new^0'=n10+delta^0, deltaext_new^0'=deltaext^0, delta^0'=n10+delta^0, (-3+wntext^0 <= 0 /\ 1+deltaext^0+wntext^0-2*n10-2*delta^0 >= 0 /\ -1+n10 >= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*n10
 102: l6 -> l1 : deltaext^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=1+deltaext^0+wntext^0-delta^0, deltaext_new^0'=1+2*deltaext^0+wntext^0-2*delta^0, delta^0'=1+deltaext^0+wntext^0-delta^0, (4*deltaext^0+2*wntext^0-4*delta^0-wnt^0 >= 0 /\ wntext^0 >= 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ -2-deltaext^0-wntext^0+2*delta^0 >= 0 /\ wnt^0 >= 0), cost: -2-4*deltaext^0-4*wntext^0+8*delta^0
 103: l6 -> l1 : deltaext^0'=2*deltaext^0+wntext^0-2*delta^0, delta_new^0'=deltaext^0+wntext^0-delta^0, deltaext_new^0'=2*deltaext^0+wntext^0-2*delta^0, delta^0'=deltaext^0+wntext^0-delta^0, (deltaext^0 >= 0 /\ -3+wntext^0 <= 0 /\ 3-4*deltaext^0-2*wntext^0+4*delta^0+wnt^0 >= 0 /\ wntext^0 >= 0 /\ delta^0 >= 0 /\ -1+deltaext^0+wntext^0-2*delta^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: 2+4*deltaext^0+4*wntext^0-8*delta^0


Removed unreachable locations and irrelevant leafs
Start location: l6
  94: l6 -> [7] : (1+deltaext^0+wntext^0-2*delta^0 == 0 /\ wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM
  95: l6 -> [7] : (-3+wntext^0 <= 0 /\ wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ -deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM
  98: l6 -> [7] : (1+deltaext^0+wntext^0-2*delta^0 == 0 /\ -3+wntext^0 <= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM
  99: l6 -> [7] : (-3+wntext^0 <= 0 /\ 2-2*deltaext^0+wnt^0 == 0 /\ wntext^0 >= 0 /\ -deltaext^0-wntext^0+2*delta^0 == 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 94 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (1+deltaext^0+wntext^0-2*delta^0 == 0 /\ wntext^0 >= 0 /\ 3-2*deltaext^0+wnt^0 == 0 /\ -3+delta^0 <= 0 /\ -3+wnt^0 <= 0 /\ -3+deltext^0 <= 0 /\ wnt^0 >= 0)
