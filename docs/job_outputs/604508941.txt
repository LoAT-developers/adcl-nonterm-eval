YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l19, true>
<l1, l2, true>
<l3, l4, ((0 + arraySize^0) <= (0 + i^0))>
<l3, l5, ((1 + i^0) <= (0 + arraySize^0)), par{i^0 -> (1 + i^0)}>
<l6, l7, true>
<l8, l5, ((0 + arraySize^0) <= (0 + i17^0)), par{i^0 -> 0}>
<l8, l9, ((1 + i17^0) <= (0 + arraySize^0)), par{i17^0 -> (1 + i17^0)}>
<l10, l11, true>
<l12, l9, ((0 + arraySize^0) <= (0 + i15^0)) /\ (undef81 = 0), par{i17^0 -> 0}>
<l12, l13, ((1 + i15^0) <= (0 + arraySize^0)), par{i15^0 -> (1 + i15^0)}>
<l14, l15, true>
<l16, l13, ((0 + arraySize^0) <= (0 + i13^0)) /\ (undef112 = 0), par{i15^0 -> 0}>
<l16, l17, ((1 + i13^0) <= (0 + arraySize^0)), par{i13^0 -> (1 + i13^0)}>
<l17, l16, true>
<l15, l17, ((0 + arraySize^0) <= (0 + i^0)) /\ (undef143 = 0), par{i13^0 -> 0}>
<l15, l14, ((1 + i^0) <= (0 + arraySize^0)), par{i^0 -> (1 + i^0)}>
<l13, l12, true>
<l11, l14, ((0 + arraySize^0) <= (0 + i11^0)), par{i^0 -> 0}>
<l11, l10, ((1 + i11^0) <= (0 + arraySize^0)), par{i11^0 -> (1 + i11^0)}>
<l9, l8, true>
<l7, l10, ((0 + arraySize^0) <= (0 + i9^0)) /\ (undef204 = 0), par{i11^0 -> 0}>
<l7, l6, ((1 + i9^0) <= (0 + arraySize^0)), par{i9^0 -> (1 + i9^0)}>
<l5, l3, true>
<l2, l6, ((0 + arraySize^0) <= (0 + i7^0)) /\ (undef235 = 0), par{i9^0 -> 0}>
<l2, l1, ((1 + i7^0) <= (0 + arraySize^0)), par{i7^0 -> (1 + i7^0)}>
<l18, l1, (undef254 = undef254) /\ (undef255 = undef255) /\ (undef256 = 0), par{i7^0 -> 0, i^0 -> 0, tmp^0 -> undef254, tmp___0^0 -> undef255}>
<l19, l18, true>

Fresh variables:
undef81, undef112, undef143, undef204, undef235, undef254, undef255, undef256, 

Undef variables:
undef81, undef112, undef143, undef204, undef235, undef254, undef255, undef256, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, (i7^0 = 0) /\ (i^0 = 0) /\ (undef254 = undef254) /\ (undef255 = undef255) /\ (undef256 = 0)>
<l1, l6, ((0 + arraySize^0) <= (0 + i7^0)) /\ (undef235 = 0), par{i9^0 -> 0}>
<l1, l1, ((1 + i7^0) <= (0 + arraySize^0)), par{i7^0 -> (1 + i7^0)}>
<l5, l4, ((0 + arraySize^0) <= (0 + i^0))>
<l5, l5, ((1 + i^0) <= (0 + arraySize^0)), par{i^0 -> (1 + i^0)}>
<l6, l10, ((0 + arraySize^0) <= (0 + i9^0)) /\ (undef204 = 0), par{i11^0 -> 0}>
<l6, l6, ((1 + i9^0) <= (0 + arraySize^0)), par{i9^0 -> (1 + i9^0)}>
<l9, l5, ((0 + arraySize^0) <= (0 + i17^0)), par{i^0 -> 0}>
<l9, l9, ((1 + i17^0) <= (0 + arraySize^0)), par{i17^0 -> (1 + i17^0)}>
<l10, l14, ((0 + arraySize^0) <= (0 + i11^0)), par{i^0 -> 0}>
<l10, l10, ((1 + i11^0) <= (0 + arraySize^0)), par{i11^0 -> (1 + i11^0)}>
<l13, l9, ((0 + arraySize^0) <= (0 + i15^0)) /\ (undef81 = 0), par{i17^0 -> 0}>
<l13, l13, ((1 + i15^0) <= (0 + arraySize^0)), par{i15^0 -> (1 + i15^0)}>
<l14, l17, ((0 + arraySize^0) <= (0 + i^0)) /\ (undef143 = 0), par{i13^0 -> 0}>
<l14, l14, ((1 + i^0) <= (0 + arraySize^0)), par{i^0 -> (1 + i^0)}>
<l17, l13, ((0 + arraySize^0) <= (0 + i13^0)) /\ (undef112 = 0), par{i15^0 -> 0}>
<l17, l17, ((1 + i13^0) <= (0 + arraySize^0)), par{i13^0 -> (1 + i13^0)}>

Fresh variables:
undef81, undef112, undef143, undef204, undef235, undef254, undef255, undef256, 

Undef variables:
undef81, undef112, undef143, undef204, undef235, undef254, undef255, undef256, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 1 + i7^0 <= arraySize^0, {i7^0 -> 1 + i7^0, rest remain the same}>
Variables:
arraySize^0, i7^0

Graph 2:
Transitions:
<l6, l6, 1 + i9^0 <= arraySize^0, {i9^0 -> 1 + i9^0, rest remain the same}>
Variables:
arraySize^0, i9^0

Graph 3:
Transitions:
<l10, l10, 1 + i11^0 <= arraySize^0, {i11^0 -> 1 + i11^0, rest remain the same}>
Variables:
arraySize^0, i11^0

Graph 4:
Transitions:
<l14, l14, 1 + i^0 <= arraySize^0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
arraySize^0, i^0

Graph 5:
Transitions:
<l17, l17, 1 + i13^0 <= arraySize^0, {i13^0 -> 1 + i13^0, rest remain the same}>
Variables:
arraySize^0, i13^0

Graph 6:
Transitions:
<l13, l13, 1 + i15^0 <= arraySize^0, {i15^0 -> 1 + i15^0, rest remain the same}>
Variables:
arraySize^0, i15^0

Graph 7:
Transitions:
<l9, l9, 1 + i17^0 <= arraySize^0, {i17^0 -> 1 + i17^0, rest remain the same}>
Variables:
arraySize^0, i17^0

Graph 8:
Transitions:
<l5, l5, 1 + i^0 <= arraySize^0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
arraySize^0, i^0

Graph 9:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l1, i7^0 = 0 /\ i^0 = 0 /\ undef256 = 0, {all remain the same}>

Graph 2
<l1, l6, arraySize^0 <= i7^0 /\ undef235 = 0, {i9^0 -> 0, rest remain the same}>

Graph 3
<l6, l10, arraySize^0 <= i9^0 /\ undef204 = 0, {i11^0 -> 0, rest remain the same}>

Graph 4
<l10, l14, arraySize^0 <= i11^0, {i^0 -> 0, rest remain the same}>

Graph 5
<l14, l17, arraySize^0 <= i^0 /\ undef143 = 0, {i13^0 -> 0, rest remain the same}>

Graph 6
<l17, l13, arraySize^0 <= i13^0 /\ undef112 = 0, {i15^0 -> 0, rest remain the same}>

Graph 7
<l13, l9, arraySize^0 <= i15^0 /\ undef81 = 0, {i17^0 -> 0, rest remain the same}>

Graph 8
<l9, l5, arraySize^0 <= i17^0, {i^0 -> 0, rest remain the same}>

Graph 9
<l5, l4, arraySize^0 <= i^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 4 , 9 )
( 5 , 8 )
( 6 , 2 )
( 9 , 7 )
( 10 , 3 )
( 13 , 6 )
( 14 , 4 )
( 17 , 5 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001228

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000584s
[33mRanking function: [36m-1 + arraySize^0 - i7^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001105

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000578s
[33mRanking function: [36m-1 + arraySize^0 - i9^0[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.001003

Checking conditional termination of SCC {l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000476s
[33mRanking function: [36m-1 + arraySize^0 - i11^0[0m
New Graphs: 
Proving termination of subgraph 4
Checking unfeasibility...
Time used: 0.000783

Checking conditional termination of SCC {l14}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000466s
[33mRanking function: [36m-1 + arraySize^0 - i^0[0m
New Graphs: 
Proving termination of subgraph 5
Checking unfeasibility...
Time used: 0.000851

Checking conditional termination of SCC {l17}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000462s
[33mRanking function: [36m-1 + arraySize^0 - i13^0[0m
New Graphs: 
Proving termination of subgraph 6
Checking unfeasibility...
Time used: 0.000834

Checking conditional termination of SCC {l13}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000504s
[33mRanking function: [36m-1 + arraySize^0 - i15^0[0m
New Graphs: 
Proving termination of subgraph 7
Checking unfeasibility...
Time used: 0.000822

Checking conditional termination of SCC {l9}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000503s
[33mRanking function: [36m-1 + arraySize^0 - i17^0[0m
New Graphs: 
Proving termination of subgraph 8
Checking unfeasibility...
Time used: 0.000797

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000516s
[33mRanking function: [36m-1 + arraySize^0 - i^0[0m
New Graphs: 
Proving termination of subgraph 9
Analyzing SCC {l4}...
No cycles found.

[32mProgram Terminates[0m
