NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> 0}>
<l2, l2, (1 = arg2), par{arg1 -> 1, arg2 -> 2}>
<l2, l2, (arg2 < 10) /\ (arg2 > 1) /\ (1 = arg1), par{arg1 -> 1, arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 < 10) /\ (arg2 > 1) /\ (0 = arg1), par{arg1 -> 0, arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 10) /\ (1 = arg1), par{arg1 -> 1, arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 > 10) /\ (0 = arg1), par{arg1 -> 0, arg2 -> (arg2 - 1)}>
<l2, l2, (10 = arg2), par{arg1 -> 0, arg2 -> 9}>
<l3, l1, true, par{arg1 -> undef15, arg2 -> undef16}>

Fresh variables:
undef15, undef16, 

Undef variables:
undef15, undef16, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = 0) /\ (arg2 = undef16) /\ (undef15 > 0) /\ (undef16 > ~(1))>
<l2, l2, (1 = arg2), par{arg1 -> 1, arg2 -> 2}>
<l2, l2, (arg2 < 10) /\ (arg2 > 1) /\ (1 = arg1), par{arg1 -> 1, arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 < 10) /\ (arg2 > 1) /\ (0 = arg1), par{arg1 -> 0, arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 10) /\ (1 = arg1), par{arg1 -> 1, arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 > 10) /\ (0 = arg1), par{arg1 -> 0, arg2 -> (arg2 - 1)}>
<l2, l2, (10 = arg2), par{arg1 -> 0, arg2 -> 9}>

Fresh variables:
undef15, undef16, 

Undef variables:
undef15, undef16, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
Variables:
arg2, arg1

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= undef16 /\ 1 <= undef15 /\ arg1 = 0 /\ arg2 = undef16, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.185958

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002279s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.033478s
Trying to remove transition: <l2, l2, arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001891s
Time used: 4.00143
Trying to remove transition: <l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.265119s
Time used: 0.26206
Trying to remove transition: <l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.176585s
Time used: 0.173021
Trying to remove transition: <l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.005638s
Time used: 4.00157
Trying to remove transition: <l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.005886s
Time used: 4.00219
Trying to remove transition: <l2, l2, arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.447870s
Time used: 1.44459
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.054381s
Time used: 0.044963
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.296784s
Time used: 0.29678

LOG: SAT solveNonLinear - Elapsed time: 0.351166s
Cost: 1; Total time: 0.341743
[31mFailed at location 2: arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l2: arg2 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006308s
Remaining time after improvement: 0.99735
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg2 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
New Graphs: 
Calling Safety with literal arg2 <= 0 and entry <l0, l2, 0 <= undef16 /\ 1 <= undef15 /\ arg1 = 0 /\ arg2 = undef16, {all remain the same}>

LOG: CALL check - Post:arg2 <= 0 - Process 1
* Exit transition: <l0, l2, 0 <= undef16 /\ 1 <= undef15 /\ arg1 = 0 /\ arg2 = undef16, {all remain the same}>
* Postcondition  : arg2 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000588s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000636s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg2 <= 0 , 
Narrowing transition: 
<l2, l2, arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
Variables:
arg2, arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001051s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.034042s
Trying to remove transition: <l2, l2, arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003020s
Time used: 4.0023
Trying to remove transition: <l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.272269s
Time used: 0.268739
Trying to remove transition: <l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.187567s
Time used: 0.183646
Trying to remove transition: <l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.008151s
Time used: 4.0038
Trying to remove transition: <l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.006376s
Time used: 4.00241
Trying to remove transition: <l2, l2, arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.451131s
Time used: 1.44765
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.330988s
Time used: 1.32128
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.652427s
Time used: 0.652398

LOG: SAT solveNonLinear - Elapsed time: 1.983415s
Cost: 1; Total time: 1.97368
[31mFailed at location 2: arg2 <= 9 + arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: arg2 <= 9 + arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006761s
Remaining time after improvement: 0.997539
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg2 <= 9 + arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg2 <= 9 + arg1 /\ arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 + arg1 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 + arg1 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg2 <= 9 + arg1 /\ arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg2 <= 9 + arg1 /\ arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 + arg1 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 + arg1 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg2 <= 9 + arg1 /\ arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
New Graphs: 
Transitions:
<l2, l2, arg2 <= 9 + arg1 /\ arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>
<l2, l2, 2 <= arg2 /\ arg2 <= 9 + arg1 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 2 <= arg2 /\ arg2 <= 9 + arg1 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg2 <= 9 + arg1 /\ arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001043s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.032173s
Trying to remove transition: <l2, l2, arg2 <= 9 + arg1 /\ arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.004222s
Time used: 4.0036
Trying to remove transition: <l2, l2, 2 <= arg2 /\ arg2 <= 9 + arg1 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.012730s
Time used: 4.00106
Trying to remove transition: <l2, l2, 2 <= arg2 /\ arg2 <= 9 + arg1 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.036411s
Time used: 4.01328
Trying to remove transition: <l2, l2, arg2 <= 9 + arg1 /\ arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.028012s
Time used: 4.00136
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.013639s
Time used: 4.00155
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.015586s
Time used: 4.00075
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.011545s
Time used: 1.00058
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.020881s
Time used: 4.00158

Proving non-termination of subgraph 1
Transitions:
<l2, l2, arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>
Variables:
arg2, arg1

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 2 <= arg1 /\ 11 <= arg2, {all remain the same}>
<l2, end, 1 + arg1 <= 0 /\ 11 <= arg2, {all remain the same}>
<l2, end, 2 <= arg1 /\ 2 <= arg2 /\ arg2 <= 9, {all remain the same}>
<l2, end, 1 + arg1 <= 0 /\ 2 <= arg2 /\ arg2 <= 9, {all remain the same}>
<l2, end, arg2 <= 0 /\ 2 <= arg1, {all remain the same}>
<l2, end, arg2 <= 0 /\ arg1 = 1, {all remain the same}>
<l2, end, arg1 <= 0 /\ arg2 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.017882s
Time used: 0.017711
Improving Solution with cost 7 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000969s
Time used: 1.00096

LOG: SAT solveNonLinear - Elapsed time: 1.018851s
Cost: 7; Total time: 1.01867
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 <= 1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 3
Strengthening exit transition (result): 
<l2, end, 1 + arg1 <= 0 /\ 11 <= arg2, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, 1 + arg1 <= 0 /\ 2 <= arg2 /\ arg2 <= 9, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, arg2 <= 0 /\ arg1 = 1, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, arg1 <= 0 /\ arg2 <= 0, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= 1 /\ arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= 1 /\ arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 1 + arg1 <= 0 /\ 11 <= arg2, {all remain the same}>
<l2, end, 1 + arg1 <= 0 /\ 2 <= arg2 /\ arg2 <= 9, {all remain the same}>
<l2, end, arg2 <= 0 /\ arg1 = 1, {all remain the same}>
<l2, end, arg1 <= 0 /\ arg2 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.015603s
Time used: 0.015435
Improving Solution with cost 4 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.008940s
Time used: 1.00893

LOG: SAT solveNonLinear - Elapsed time: 1.024542s
Cost: 4; Total time: 1.02437
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 0 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 2
Strengthening exit transition (result): 
<l2, end, arg2 <= 0 /\ arg1 = 1, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, arg2 <= 0 /\ arg1 = 0, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ arg1 <= 1 /\ arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ arg1 <= 1 /\ arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg2 <= 0 /\ arg1 = 1, {all remain the same}>
<l2, end, arg2 <= 0 /\ arg1 = 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011939s
Time used: 0.011775
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.020504s
Time used: 0.020501

LOG: SAT solveNonLinear - Elapsed time: 0.032442s
Cost: 1; Total time: 0.032276
[31mFailed at location 2: 1 <= arg2[0m
Before Improving: 
[36mQuasi-invariant at l2: 1 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008457s
Remaining time after improvement: 0.99864
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 2

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ arg1 <= 1 /\ arg2 = 1, {arg1 -> 1, arg2 -> 2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= arg2 /\ arg2 <= 9 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 11 <= arg2 /\ arg1 = 1, {arg1 -> 1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 11 <= arg2 /\ arg1 = 0, {arg1 -> 0, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ arg1 <= 1 /\ arg2 = 10, {arg1 -> 0, arg2 -> 9, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: arg1 <= 1, 0 <= arg1, 1 <= arg2, 
OPEN EXITS: 
<l2, end, 0 <= arg1 /\ 1 <= arg2 /\ arg1 <= 1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 0 <= undef16 /\ 1 <= undef15 /\ arg1 = 0 /\ arg2 = undef16, {all remain the same}>
Conditions: 0 <= arg1, 1 <= arg2, arg1 <= 1, 
OPEN EXITS: 
<l0, l2, 0 <= undef16 /\ 1 <= arg2 /\ 1 <= undef15 /\ arg1 = 0 /\ arg2 = undef16, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
