YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int), main_z -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l5, not((main_x >= 0))>
<l2, l3, (main_x >= 0)>
<l3, l4, true, seq{main_x -> (main_x + main_y), main_y -> main_z, main_z -> (~(main_z) - 1)}>
<l4, l2, true>
<l5, l6, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l7, true, seq{main__func_return_ -> 0}>
<l7, l8, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l8, l9, true, seq{main_x -> varCall_1}>
<l9, l10, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l10, l11, true, seq{main_y -> varCall_2}>
<l11, l12, true, seq{varCall_3 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l12, l1, true, seq{main_z -> varCall_3}>
<l1, l2, true>
<l2, l3, (main_x >= 0)>
<l2, l5, not((main_x >= 0))>
<l3, l4, true, seq{main_x -> (main_x + main_y), main_y -> main_z, main_z -> (~(main_z) - 1)}>
<l4, l2, true>
<l5, l6, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
6, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [5 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 20, col: 1> | <line: 24, col: 9> <line: 25, col: 9> <line: 26, col: 9>
main | function | [integer, ()] | <line: 22, col: 1>
x | local variable | integer | <line: 23, col: 5> | <line: 24, col: 5> <line: 27, col: 12> <line: 28, col: 9> <line: 28, col: 13>
y | local variable | integer | <line: 23, col: 5> | <line: 25, col: 5> <line: 28, col: 17> <line: 29, col: 9>
z | local variable | integer | <line: 23, col: 5> | <line: 26, col: 5> <line: 29, col: 13> <line: 30, col: 9> <line: 30, col: 14>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef4) /\ (main_y = undef5) /\ (main_z = undef6)>
<l2, l2, (main_x >= 0), par{main_x -> (main_x + main_y), main_y -> main_z, main_z -> (~(main_z) - 1)}>
<l2, l6, not((main_x >= 0))>

Fresh variables:
undef4, undef5, undef6, 

Undef variables:
undef4, undef5, undef6, 

Abstraction variables:

Exit nodes:
6, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 0 <= main_x, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>
Variables:
main_x, main_y, main_z

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef4 /\ main_y = undef5 /\ main_z = undef6, {all remain the same}>

Graph 2
<l2, l6, 1 + main_x <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 6 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002198

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000671s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001599s
[29344 : 29346]
[29344 : 29347]
Successful child: 29346
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:1 + main_x <= 0 - Process 1
* Exit transition: <l0, l2, main_x = undef4 /\ main_y = undef5 /\ main_z = undef6, {all remain the same}>
* Postcondition  : 1 + main_x <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000423s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000485s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: 1 + main_x <= 0 , 
Narrowing transition: 
<l2, l2, 0 <= main_x, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 0 <= main_x, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>
Variables:
main_x, main_y, main_z
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000517s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001258s
[29344 : 29351]
[29344 : 29352]
Successful child: 29351
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= main_x /\ 0 <= 1134 + main_x + main_y /\ 0 <= 1134 + main_y + main_z, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= main_x /\ 0 <= 1134 + main_x + main_y /\ 0 <= 1134 + main_y + main_z, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>
[33mRanking function: [36m2268 + 2*main_x + 2*main_y + main_z[0m
New Graphs: 
[29344 : 29356]
[29344 : 29357]
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: 0 <= 1134 + main_x + main_y , 0 <= 1134 + main_y + main_z , 
Narrowing transition: 
<l2, l2, 0 <= main_x, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l2, l2, 0 <= main_x /\ 0 <= 1134 + main_x + main_y /\ 1135 + main_y + main_z <= 0, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>
<l2, l2, 0 <= main_x /\ 1135 + main_x + main_y <= 0, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>
Variables:
main_x, main_y, main_z
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000610s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004674s
[33mPiecewise ranking function: [36mmin(0,main_x)[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= main_x /\ 0 <= 1134 + main_x + main_y /\ 1135 + main_y + main_z <= 0, {main_x -> main_x + main_y, main_y -> main_z, main_z -> -1 - main_z, rest remain the same}>
Variables:
main_x, main_y, main_z
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000457s
[33mRanking function: [36m(1134 / 1135) + (2 / 1135)*main_x + (1 / 1135)*main_y[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l6}...
No cycles found.

[32mProgram Terminates[0m
