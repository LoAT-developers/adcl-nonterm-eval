YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_i -> Â¿functionCall(__VERIFIER_nondet_int), main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_n -> Â¿functionCall(__VERIFIER_nondet_int), main_b -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, (main_b >= 1)>
<l1, l4, not((main_b >= 1))>
<l2, l3, true, seq{main_t -> 1}>
<l3, l6, true>
<l4, l5, true, seq{main_t -> ~(1)}>
<l5, l6, true>
<l6, l7, true>
<l7, l14, not((main_x <= main_n))>
<l7, l8, (main_x <= main_n)>
<l8, l9, (main_b >= 1)>
<l8, l11, not((main_b >= 1))>
<l9, l10, true, seq{main_x -> (main_x + main_t)}>
<l10, l13, true>
<l11, l12, true, seq{main_x -> (main_x - main_t)}>
<l12, l13, true>
<l13, l7, true>
<l14, l15, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l16, true, seq{main__func_return_ -> 0}>
<l16, l17, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l17, l18, true, seq{main_i -> varCall_1}>
<l18, l19, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l19, l20, true, seq{main_x -> varCall_2}>
<l20, l21, true, seq{varCall_3 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l21, l22, true, seq{main_n -> varCall_3}>
<l22, l23, true, seq{varCall_4 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l23, l1, true, seq{main_b -> varCall_4}>
<l1, l2, (main_b >= 1)>
<l1, l4, not((main_b >= 1))>
<l2, l3, true, seq{main_t -> 1}>
<l3, l6, true>
<l4, l5, true, seq{main_t -> ~(1)}>
<l5, l6, true>
<l6, l7, true>
<l7, l8, (main_x <= main_n)>
<l7, l14, not((main_x <= main_n))>
<l8, l9, (main_b >= 1)>
<l8, l11, not((main_b >= 1))>
<l9, l10, true, seq{main_x -> (main_x + main_t)}>
<l10, l13, true>
<l11, l12, true, seq{main_x -> (main_x - main_t)}>
<l12, l13, true>
<l13, l7, true>
<l14, l15, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
15, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [7 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 15, col: 6> <line: 16, col: 6> <line: 17, col: 6> <line: 18, col: 6>
main | function | [integer, ()] | <line: 13, col: 1>
i | local variable | integer | <line: 14, col: 5> | <line: 15, col: 2>
x | local variable | integer | <line: 14, col: 5> | <line: 16, col: 2> <line: 24, col: 9> <line: 26, col: 4> <line: 26, col: 8> <line: 28, col: 4> <line: 28, col: 8>
n | local variable | integer | <line: 14, col: 5> | <line: 17, col: 2> <line: 24, col: 14>
b | local variable | integer | <line: 14, col: 5> | <line: 18, col: 2> <line: 19, col: 6> <line: 25, col: 7>
t | local variable | integer | <line: 14, col: 5> | <line: 20, col: 3> <line: 22, col: 3> <line: 26, col: 12> <line: 28, col: 12>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l7, (main_x = undef6) /\ (main_n = undef7) /\ (main_b = undef8) /\ (undef8 >= 1), par{main_t -> 1}>
<l0, l7, (main_x = undef6) /\ (main_n = undef7) /\ (main_b = undef8) /\ not((undef8 >= 1)), par{main_t -> ~(1)}>
<l7, l7, (main_x <= main_n) /\ (main_b >= 1), par{main_x -> (main_x + main_t)}>
<l7, l7, (main_x <= main_n) /\ not((main_b >= 1)), par{main_x -> (main_x - main_t)}>
<l7, l15, not((main_x <= main_n))>

Fresh variables:
undef5, undef6, undef7, undef8, 

Undef variables:
undef5, undef6, undef7, undef8, 

Abstraction variables:

Exit nodes:
15, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l7, l7, main_x <= main_n /\ 1 <= main_b, {main_x -> main_x + main_t, rest remain the same}>
<l7, l7, main_x <= main_n /\ main_b <= 0, {main_x -> main_x - main_t, rest remain the same}>
Variables:
main_x, main_n, main_b, main_t

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l7, 1 <= undef8 /\ main_x = undef6 /\ main_n = undef7 /\ main_b = undef8, {main_t -> 1, rest remain the same}>
<l0, l7, undef8 <= 0 /\ main_x = undef6 /\ main_n = undef7 /\ main_b = undef8, {main_t -> -1, rest remain the same}>

Graph 2
<l7, l15, 1 + main_n <= main_x, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 7 , 1 )
( 15 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003977

Checking conditional termination of SCC {l7}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001216s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002535s
[3025 : 3027]
[3025 : 3028]
Successful child: 3027
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l7, l7, main_x <= main_n /\ 1 <= main_b, {main_x -> main_x + main_t, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l7, l7, main_x <= main_n /\ main_b <= 0, {main_x -> main_x - main_t, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l7, l7, main_x <= main_n /\ main_b <= 0, {main_x -> main_x - main_t, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l7, l7, main_x <= main_n /\ 1 <= main_b, {main_x -> main_x + main_t, rest remain the same}>
New Graphs: 
Transitions:
<l7, l7, main_x <= main_n /\ 1 <= main_b, {main_x -> main_x + main_t, rest remain the same}>
Variables:
main_x, main_n, main_b, main_t
Checking conditional termination of SCC {l7}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000456s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001205s
[3025 : 3032]
[3025 : 3033]
Successful child: 3032
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l7, l7, main_x <= main_n /\ 1 <= main_b /\ 1 <= main_t, {main_x -> main_x + main_t, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l7, l7, main_x <= main_n /\ 1 <= main_b /\ 1 <= main_t, {main_x -> main_x + main_t, rest remain the same}>
[33mRanking function: [36m-main_x + main_n[0m
New Graphs: 

LOG: CALL check - Post:1 <= main_b - Process 1
* Exit transition: <l0, l7, undef8 <= 0 /\ main_x = undef6 /\ main_n = undef7 /\ main_b = undef8, {main_t -> -1, rest remain the same}>
* Postcondition  : 1 <= main_b

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000410s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000466s
INVARIANTS: 
7: 
Quasi-INVARIANTS to narrow Graph: 
7: 1 <= main_b , 

LOG: CALL check - Post:1 <= main_t - Process 2
* Exit transition: <l0, l7, undef8 <= 0 /\ main_x = undef6 /\ main_n = undef7 /\ main_b = undef8, {main_t -> -1, rest remain the same}>
* Postcondition  : 1 <= main_t

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000313s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000358s
INVARIANTS: 
7: 
Quasi-INVARIANTS to narrow Graph: 
7: 1 <= main_t , 
Narrowing transition: 
<l7, l7, main_x <= main_n /\ 1 <= main_b, {main_x -> main_x + main_t, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l7, l7, main_x <= main_n /\ main_b <= 0, {main_x -> main_x - main_t, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l7, l7, main_x <= main_n /\ main_t <= 0 /\ 1 <= main_b, {main_x -> main_x + main_t, rest remain the same}>
<l7, l7, main_x <= main_n /\ main_b <= 0, {main_x -> main_x - main_t, rest remain the same}>
Variables:
main_x, main_n, main_b, main_t
Checking conditional termination of SCC {l7}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000935s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002492s
[3025 : 3037]
[3025 : 3038]
Successful child: 3037
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l7, l7, main_x <= main_n /\ main_t <= 0 /\ 1 <= main_b, {main_x -> main_x + main_t, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l7, l7, main_x <= main_n /\ main_b <= 0, {main_x -> main_x - main_t, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l7, l7, main_x <= main_n /\ main_t <= 0 /\ 1 <= main_b, {main_x -> main_x + main_t, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l7, l7, main_x <= main_n /\ main_b <= 0, {main_x -> main_x - main_t, rest remain the same}>
New Graphs: 
Transitions:
<l7, l7, main_x <= main_n /\ main_b <= 0, {main_x -> main_x - main_t, rest remain the same}>
Variables:
main_x, main_n, main_b, main_t
Checking conditional termination of SCC {l7}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000583s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001530s
[3025 : 3042]
[3025 : 3043]
Successful child: 3042
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l7, l7, main_x <= main_n /\ main_b <= 0 /\ 1 + main_t <= 0, {main_x -> main_x - main_t, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l7, l7, main_x <= main_n /\ main_b <= 0 /\ 1 + main_t <= 0, {main_x -> main_x - main_t, rest remain the same}>
[33mRanking function: [36m-main_x + main_n - main_t[0m
New Graphs: 
INVARIANTS: 
7: main_b <= 0 , 
Quasi-INVARIANTS to narrow Graph: 
7: 
INVARIANTS: 
7: 1 + main_t <= 0 , 
Quasi-INVARIANTS to narrow Graph: 
7: 
Proving termination of subgraph 2
Analyzing SCC {l15}...
No cycles found.

[32mProgram Terminates[0m
