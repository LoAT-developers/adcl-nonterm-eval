unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2
   0: f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, (arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ 1+x4 > 0 /\ arg2 > 0), cost: 1
   1: f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, (-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ 1+x9 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
   3: f1_0_main_Load -> f117_0_createList_LE : arg1'=arg1p4, arg2'=arg2p4, (arg1 > 0 /\ 1+arg1p4 > 0 /\ arg2 > 0), cost: 1
   2: f180_0_main_InvokeMethod -> f370_0_growReduce_NONNULL : arg1'=arg1p3, arg2'=arg2p3, (x10 > 0 /\ arg1 > 0 /\ arg2p3-arg2 <= 0 /\ -arg1p3 == 0 /\ arg2p3 > 0 /\ arg2 > 0), cost: 1
   5: f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=arg1p6, arg2'=arg2p6, (-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0 /\ 1-arg1p6 == 0), cost: 1
   6: f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=arg1p7, arg2'=arg2p7, (1-arg1 == 0 /\ -2+arg2p7 > 0 /\ 2-arg1p7 == 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0), cost: 1
   7: f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=arg1p8, arg2'=arg2p8, (-arg1p8 == 0 /\ 2-arg1 == 0 /\ -4+arg2p8-arg2 <= 0 /\ -4+arg2p8 > 0 /\ arg2 > 0), cost: 1
   4: f117_0_createList_LE -> f117_0_createList_LE : arg1'=arg1p5, arg2'=arg2p5, (-1+arg1 > 0 /\ -1+arg1-arg1p5 == 0 /\ -1 < 0), cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2
   3: f1_0_main_Load -> f117_0_createList_LE : arg1'=arg1p4, arg2'=arg2p4, (arg1 > 0 /\ 1+arg1p4 > 0 /\ arg2 > 0), cost: 1
   9: f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, (arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
  10: f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, (-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
  11: f180_0_main_InvokeMethod -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p3, (arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0), cost: 1
  13: f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=1, arg2'=arg2p6, (-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0), cost: 1
  14: f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=2, arg2'=arg2p7, (1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0), cost: 1
  15: f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p8, (2-arg1 == 0 /\ -4+arg2p8-arg2 <= 0 /\ -4+arg2p8 > 0 /\ arg2 > 0), cost: 1
  12: f117_0_createList_LE -> f117_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p5, -1+arg1 > 0, cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, T, cost: 1

	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, (arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ 1+x4 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, (arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, (-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ 1+x9 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, (-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f180_0_main_InvokeMethod -> f370_0_growReduce_NONNULL : arg1'=arg1p3, arg2'=arg2p3, (x10 > 0 /\ arg1 > 0 /\ arg2p3-arg2 <= 0 /\ -arg1p3 == 0 /\ arg2p3 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f180_0_main_InvokeMethod -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p3, (0 == 0 /\ x10 > 0 /\ arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg1p3 = 0
		
	Simplified Guard

	Original rule:
	f180_0_main_InvokeMethod -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p3, (0 == 0 /\ x10 > 0 /\ arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f180_0_main_InvokeMethod -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p3, (x10 > 0 /\ arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f180_0_main_InvokeMethod -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p3, (x10 > 0 /\ arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f180_0_main_InvokeMethod -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p3, (arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f117_0_createList_LE -> f117_0_createList_LE : arg1'=arg1p5, arg2'=arg2p5, (-1+arg1 > 0 /\ -1+arg1-arg1p5 == 0 /\ -1 < 0), cost: 1
	New rule:
	f117_0_createList_LE -> f117_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p5, (0 == 0 /\ -1+arg1 > 0 /\ -1 < 0), cost: 1
	
		propagated equality arg1p5 = -1+arg1
		
	Simplified Guard

	Original rule:
	f117_0_createList_LE -> f117_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p5, (0 == 0 /\ -1+arg1 > 0 /\ -1 < 0), cost: 1
	New rule:
	f117_0_createList_LE -> f117_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p5, -1+arg1 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=arg1p6, arg2'=arg2p6, (-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0 /\ 1-arg1p6 == 0), cost: 1
	New rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=1, arg2'=arg2p6, (0 == 0 /\ -arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0), cost: 1
	
		propagated equality arg1p6 = 1
		
	Simplified Guard

	Original rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=1, arg2'=arg2p6, (0 == 0 /\ -arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0), cost: 1
	New rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=1, arg2'=arg2p6, (-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=arg1p7, arg2'=arg2p7, (1-arg1 == 0 /\ -2+arg2p7 > 0 /\ 2-arg1p7 == 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=2, arg2'=arg2p7, (0 == 0 /\ 1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg1p7 = 2
		
	Simplified Guard

	Original rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=2, arg2'=arg2p7, (0 == 0 /\ 1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=2, arg2'=arg2p7, (1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=arg1p8, arg2'=arg2p8, (-arg1p8 == 0 /\ 2-arg1 == 0 /\ -4+arg2p8-arg2 <= 0 /\ -4+arg2p8 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p8, (0 == 0 /\ 2-arg1 == 0 /\ -4+arg2p8-arg2 <= 0 /\ -4+arg2p8 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg1p8 = 0
		
	Simplified Guard

	Original rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p8, (0 == 0 /\ 2-arg1 == 0 /\ -4+arg2p8-arg2 <= 0 /\ -4+arg2p8 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p8, (2-arg1 == 0 /\ -4+arg2p8-arg2 <= 0 /\ -4+arg2p8 > 0 /\ arg2 > 0), cost: 1

Step with 8

	Trace

	8[T]
	
	Blocked

	[{}, {}]

Step with 3

	Trace

	8[T], 3[(arg1 > 0 /\ 1+arg1p4 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 12

	Trace

	8[T], 3[(arg1 > 0 /\ 1+arg1p4 > 0 /\ arg2 > 0)], 12[(-1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2
   3: f1_0_main_Load -> f117_0_createList_LE : arg1'=arg1p4, arg2'=arg2p4, (arg1 > 0 /\ 1+arg1p4 > 0 /\ arg2 > 0), cost: 1
   9: f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, (arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
  10: f1_0_main_Load -> f180_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, (-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
  11: f180_0_main_InvokeMethod -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p3, (arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0), cost: 1
  13: f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=1, arg2'=arg2p6, (-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0), cost: 1
  14: f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=2, arg2'=arg2p7, (1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0), cost: 1
  15: f370_0_growReduce_NONNULL -> f370_0_growReduce_NONNULL : arg1'=0, arg2'=arg2p8, (2-arg1 == 0 /\ -4+arg2p8-arg2 <= 0 /\ -4+arg2p8 > 0 /\ arg2 > 0), cost: 1
  12: f117_0_createList_LE -> f117_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p5, -1+arg1 > 0, cost: 1
  16: f117_0_createList_LE -> f117_0_createList_LE : arg1'=-n+arg1, arg2'=arg2p5, (-n+arg1 > 0 /\ -1+n >= 0), cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, T, cost: 1

	Loop Acceleration

	Original rule:
	f117_0_createList_LE -> f117_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p5, (-1+arg1 > 0), cost: 1
	New rule:
	f117_0_createList_LE -> f117_0_createList_LE : arg1'=-n+arg1, arg2'=arg2p5, (-n+arg1 > 0 /\ -1+n >= 0), cost: 1

		-1+arg1 > 0 [0]: montonic decrease yields -n+arg1 > 0
		
		-1+arg1 > 0 [1]: eventual increase yields (1 <= 0 /\ -1+arg1 > 0)
		
		Replacement map: {-1+arg1 > 0 -> -n+arg1 > 0}

	Trace

	8[T], 3[(arg1 > 0 /\ 1+arg1p4 > 0 /\ arg2 > 0)], 16[(-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {}, {12[T], 16[T]}]

Backtrack

	Trace

	8[T], 3[(arg1 > 0 /\ 1+arg1p4 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {16[T]}]

Step with 12

	Trace

	8[T], 3[(arg1 > 0 /\ 1+arg1p4 > 0 /\ arg2 > 0)], 12[(-1+arg1 > 0)]
	
	Blocked

	[{}, {}, {16[T]}, {}]

Covered

	Trace

	8[T], 3[(arg1 > 0 /\ 1+arg1p4 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {12[T], 16[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {3[T]}]

Step with 9

	Trace

	8[T], 9[(arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T]}, {}]

Step with 11

	Trace

	8[T], 9[(arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T]}, {}, {}]

Step with 13

	Trace

	8[T], 9[(arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)]
	
	Blocked

	[{}, {3[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 14

	Trace

	8[T], 9[(arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)], 14[(1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T]}, {}, {}, {13[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 15

	Trace

	8[T], 9[(arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)], 14[(1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0)], 15[(2-arg1 == 0 /\ -4+arg2p8-arg2 <= 0 /\ -4+arg2p8 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T]}, {}, {}, {13[T]}, {14[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	8[T], 9[(arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)], 14[(1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T]}, {}, {}, {13[T]}, {14[T], 15[T]}]

Backtrack

	Trace

	8[T], 9[(arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)]
	
	Blocked

	[{}, {3[T]}, {}, {}, {13[T], 14[T]}]

Backtrack

	Trace

	8[T], 9[(arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T]}, {}, {13[T]}]

Backtrack

	Trace

	8[T], 9[(arg1p1-arg1 <= 0 /\ -2+arg2p1 > 0 /\ arg1p1 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T]}, {11[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {3[T], 9[T]}]

Step with 10

	Trace

	8[T], 10[(-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 9[T]}, {}]

Step with 11

	Trace

	8[T], 10[(-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 9[T]}, {}, {}]

Step with 13

	Trace

	8[T], 10[(-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)]
	
	Blocked

	[{}, {3[T], 9[T]}, {}, {15[T]}, {}]

Step with 14

	Trace

	8[T], 10[(-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)], 14[(1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 9[T]}, {}, {15[T]}, {13[T]}, {}]

Step with 15

	Trace

	8[T], 10[(-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)], 14[(1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0)], 15[(2-arg1 == 0 /\ -4+arg2p8-arg2 <= 0 /\ -4+arg2p8 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 9[T]}, {}, {15[T]}, {13[T]}, {14[T]}, {}]

Backtrack

	Trace

	8[T], 10[(-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)], 14[(1-arg1 == 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 9[T]}, {}, {15[T]}, {13[T]}, {14[T], 15[T]}]

Backtrack

	Trace

	8[T], 10[(-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)], 13[(-arg1 == 0 /\ -6+arg2 > 0 /\ 1+arg2p6 > 0 /\ 7+arg2p6-arg2 <= 0)]
	
	Blocked

	[{}, {3[T], 9[T]}, {}, {15[T]}, {13[T], 14[T]}]

Backtrack

	Trace

	8[T], 10[(-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 11[(arg1 > 0 /\ arg2p3-arg2 <= 0 /\ arg2p3 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 9[T]}, {}, {13[T], 15[T]}]

Backtrack

	Trace

	8[T], 10[(-1-arg1+arg2p2 <= 0 /\ arg1p2 > 0 /\ -1+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 9[T]}, {11[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {3[T], 9[T], 10[T]}]

Backtrack

	Trace

	Blocked

	[{8[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
