NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, true, par{arg1 -> 0, arg2 -> 0}>
<l2, l2, (arg2 > ~(1)) /\ (arg1 > ~(1)) /\ (arg2 >= arg1) /\ ((arg2 - arg1) >= 1), par{arg1 -> (arg1 + 1)}>
<l2, l2, (arg1 > ~(1)) /\ ((arg2 - arg1) = 0) /\ (arg2 > ~(1)) /\ (arg2 >= arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 + 2)}>
<l3, l1, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = 0) /\ (arg2 = 0)>
<l2, l2, (arg2 > ~(1)) /\ (arg1 > ~(1)) /\ (arg2 >= arg1) /\ ((arg2 - arg1) >= 1), par{arg1 -> (arg1 + 1)}>
<l2, l2, (arg1 > ~(1)) /\ ((arg2 - arg1) = 0) /\ (arg2 > ~(1)) /\ (arg2 >= arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 + 2)}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, arg1 = 0 /\ arg2 = 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.012627

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001242s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008266s
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.055296s
Time used: 0.055009
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.051374s
Time used: 0.050678
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002053s
Time used: 4.00107
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.011796s
Time used: 4.00053
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.013815s
Time used: 1.00075
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.041054s
Time used: 0.0288
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000603s
Time used: 1.00055

LOG: SAT solveNonLinear - Elapsed time: 1.041657s
Cost: 1; Total time: 1.02935
[33mQuasi-ranking function: [36m50000 - 2*arg1 + arg2[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001143s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012755s
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.076401s
Time used: 0.076173
Trying to remove transition: <l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.106671s
Time used: 0.105913
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002187s
Time used: 4.00091
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.011784s
Time used: 4.00141
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.011817s
Time used: 1.00073
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.037032s
Time used: 0.026058
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000848s
Time used: 1.0008

LOG: SAT solveNonLinear - Elapsed time: 1.037880s
Cost: 1; Total time: 1.02686
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: arg1 <= arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - arg1[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg2 /\ 50001 <= arg1 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001226s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.030713s
Trying to remove transition: <l2, l2, 0 <= arg2 /\ 50001 <= arg1 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.094806s
Time used: 0.094505
Trying to remove transition: <l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.138472s
Time used: 0.137402
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.011047s
Time used: 4.00132
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.010720s
Time used: 4.00075
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.015061s
Time used: 1.00471
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.043374s
Time used: 0.03267
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000797s
Time used: 1.00075

LOG: SAT solveNonLinear - Elapsed time: 1.044171s
Cost: 1; Total time: 1.03342
[33mQuasi-ranking function: [36m50000 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 50001 <= arg1 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001237s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.018966s
Trying to remove transition: <l2, l2, 50001 <= arg1 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.096657s
Time used: 0.096424
Trying to remove transition: <l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.136546s
Time used: 0.135791
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.010094s
Time used: 4.00123
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.012957s
Time used: 4.00323
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.007616s
Time used: 1.00106
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.044821s
Time used: 0.033517
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001340s
Time used: 1.00128

LOG: SAT solveNonLinear - Elapsed time: 1.046162s
Cost: 1; Total time: 1.03479
[33mQuasi-ranking function: [36m50000 - arg1 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 <= arg1 + arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 50001 <= arg1 /\ 50001 <= arg1 + arg2 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001409s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.028442s
Trying to remove transition: <l2, l2, 50001 <= arg1 /\ 50001 <= arg1 + arg2 /\ 50001 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.096769s
Time used: 0.096514
Trying to remove transition: <l2, l2, 0 <= arg2 /\ 1 + arg1 <= arg2 /\ 50001 <= arg1 /\ 50001 <= arg1 + arg2 /\ 50001 + arg2 <= 2*arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.162803s
Time used: 0.161955
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.011104s
Time used: 4.00158
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.010840s
Time used: 4.00124
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.010502s
Time used: 1.00071
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.021988s
Time used: 4.0017
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, arg1 = 0 /\ arg2 = 0, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, arg1 = 0 /\ arg2 = 0, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010613s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.010745s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 0 <= arg1 /\ 1 + arg2 <= arg1, {all remain the same}>
<l2, end, 0 <= arg2 /\ 1 + arg1 <= 0 /\ 1 + arg1 <= arg2, {all remain the same}>
<l2, end, arg2 <= arg1 /\ 1 + arg1 <= 0 /\ 1 + arg2 <= 0, {all remain the same}>
<l2, end, 1 + arg1 <= 0 /\ 1 + arg1 <= arg2 /\ 1 + arg2 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.016339s
Time used: 0.016097
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.022308s
Time used: 0.022299

LOG: SAT solveNonLinear - Elapsed time: 0.038646s
Cost: 2; Total time: 0.038396
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 0 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 3
Strengthening exit transition (result): 
<l2, end, 0 <= arg1 /\ 1 + arg2 <= arg1, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 0 <= arg1 /\ 1 + arg2 <= arg1, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011376s
Time used: 0.01127

LOG: SAT solveNonLinear - Elapsed time: 0.011376s
Cost: 0; Total time: 0.01127
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg2 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 2 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 0 <= arg1, arg1 <= arg2, 
OPEN EXITS: 
<l2, end, arg1 <= arg2 /\ 0 <= arg1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, arg1 = 0 /\ arg2 = 0, {all remain the same}>
Conditions: arg1 <= arg2, 0 <= arg1, 
OPEN EXITS: 
<l0, l2, arg1 <= arg2 /\ arg1 = 0 /\ arg2 = 0, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
