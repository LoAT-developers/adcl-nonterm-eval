NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> 5}>
<l2, l2, (arg2 < 0) /\ (arg2 < (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> ((~(1) * arg2) + 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 < (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> ((~(1) * arg2) + 1)}>
<l2, l2, (arg2 <= arg1) /\ (arg2 < 0) /\ (arg2 >= (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> 0}>
<l2, l2, (arg2 <= arg1) /\ (arg2 > 0) /\ (arg2 >= (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> 0}>
<l2, l2, (arg2 > arg1) /\ (arg2 < 0) /\ (arg2 >= (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> ((~(1) * arg2) - 1)}>
<l2, l2, (arg2 > arg1) /\ (arg2 > 0) /\ (arg2 >= (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> ((~(1) * arg2) - 1)}>
<l3, l1, true, par{arg1 -> undef15, arg2 -> undef16}>

Fresh variables:
undef15, undef16, 

Undef variables:
undef15, undef16, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = 5) /\ (arg2 = undef16) /\ (undef15 > 0) /\ (undef16 > ~(1))>
<l2, l2, (arg2 < 0) /\ (arg2 < (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> ((~(1) * arg2) + 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 < (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> ((~(1) * arg2) + 1)}>
<l2, l2, (arg2 <= arg1) /\ (arg2 < 0) /\ (arg2 >= (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> 0}>
<l2, l2, (arg2 <= arg1) /\ (arg2 > 0) /\ (arg2 >= (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> 0}>
<l2, l2, (arg2 > arg1) /\ (arg2 > 0) /\ (arg2 >= (0 - arg1)), par{arg1 -> (arg1 + 1), arg2 -> ((~(1) * arg2) - 1)}>

Fresh variables:
undef15, undef16, 

Undef variables:
undef15, undef16, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 <= arg2, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 + arg2 <= 0, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 <= arg2, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= undef16 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.013197
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l2: 0 <= 1 + arg1[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 <= arg2, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Checking unfeasibility...
Time used: 0.009879

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002494s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.305544s
Trying to remove transition: <l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.017750s
Time used: 0.017073
Trying to remove transition: <l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018292s
Time used: 0.017209
Trying to remove transition: <l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018244s
Time used: 0.017317
Trying to remove transition: <l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.014804s
Time used: 0.013862
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001788s
Time used: 4.00081
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.146167s
Time used: 0.126767
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001265s
Time used: 1.00125

LOG: SAT solveNonLinear - Elapsed time: 1.147432s
Cost: 1; Total time: 1.12802
[31mFailed at location 2: arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l2: 0 <= arg2[0m
[36mQuasi-invariant at l2: arg2 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010295s
Remaining time after improvement: 0.994456
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 0 <= arg2[0m
[36mQuasi-invariant at l2: arg2 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
New Graphs: 
Calling Safety with literal arg2 <= 0 and entry <l0, l2, 0 <= undef16 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>

LOG: CALL check - Post:arg2 <= 0 - Process 1
* Exit transition: <l0, l2, 0 <= undef16 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>
* Postcondition  : arg2 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001368s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001474s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg2 <= 0 , 0 <= arg2 , 
Narrowing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: Narrow transition size 2
It's unfeasible. Removing transition: 
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>
It's unfeasible. Removing transition: 
<l2, l2, arg2 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 0, rest remain the same}>
Narrowing transition: 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001216s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.027117s
Trying to remove transition: <l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011028s
Time used: 0.010794
Trying to remove transition: <l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011841s
Time used: 0.011327
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.017448s
Time used: 4.01682
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.071332s
Time used: 0.060552
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000783s
Time used: 1.00075

LOG: SAT solveNonLinear - Elapsed time: 1.072116s
Cost: 1; Total time: 1.0613
[31mFailed at location 2: 1 + arg2 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: 1 + arg2 <= arg1[0m
[36mQuasi-invariant at l2: 1 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.017834s
Remaining time after improvement: 0.996817
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 + arg2 <= arg1[0m
[36mQuasi-invariant at l2: 1 <= arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
New Graphs: 
Calling Safety with literal 1 + arg2 <= arg1 and entry <l0, l2, 0 <= undef16 /\ 1 <= arg2 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>

LOG: CALL check - Post:1 + arg2 <= arg1 - Process 2
* Exit transition: <l0, l2, 0 <= undef16 /\ 1 <= arg2 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>
* Postcondition  : 1 + arg2 <= arg1

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001113s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001231s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: 1 + arg2 <= arg1 , 1 <= arg2 , 
Narrowing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, arg1 <= arg2 /\ 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002609s
[33mRanking function: [36m-arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001371s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.036785s
Trying to remove transition: <l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.012125s
Time used: 0.011886
Trying to remove transition: <l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010428s
Time used: 0.009875
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002869s
Time used: 4.00225
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.080056s
Time used: 0.068132
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000689s
Time used: 1.00067

LOG: SAT solveNonLinear - Elapsed time: 1.080745s
Cost: 1; Total time: 1.0688
[31mFailed at location 2: arg2 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: 0 <= arg2[0m
[36mQuasi-invariant at l2: arg2 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.025131s
Remaining time after improvement: 0.995996
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 0 <= arg2[0m
[36mQuasi-invariant at l2: arg2 <= arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
New Graphs: 
Calling Safety with literal arg2 <= arg1 and entry <l0, l2, arg1 <= arg2 /\ 0 <= undef16 /\ 1 <= arg2 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>

LOG: CALL check - Post:arg2 <= arg1 - Process 3
* Exit transition: <l0, l2, arg1 <= arg2 /\ 0 <= undef16 /\ 1 <= arg2 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>
* Postcondition  : arg2 <= arg1

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001366s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001503s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg2 <= arg1 , 0 <= arg2 , 
Narrowing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, arg1 <= arg2 /\ 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002584s
[33mRanking function: [36m-arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001396s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.036799s
Trying to remove transition: <l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.012267s
Time used: 0.012029
Trying to remove transition: <l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010945s
Time used: 0.010055
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002530s
Time used: 4.00175
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.014191s
Time used: 4.0011
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.025440s
Time used: 1.01294
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.033634s
Time used: 0.021273
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.032358s
Time used: 1.03158

LOG: SAT solveNonLinear - Elapsed time: 1.065993s
Cost: 1; Total time: 1.05285
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: 0 <= 1 + arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 50001 <= arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 50001 <= arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001609s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.107672s
Trying to remove transition: <l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 50001 <= arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.015893s
Time used: 0.015519
Trying to remove transition: <l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 50001 <= arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.015732s
Time used: 0.015035
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003045s
Time used: 4.00141
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.014811s
Time used: 4.00185
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.058515s
Time used: 1.04567
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.015702s
Time used: 4.00285

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>
<l2, l2, 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2 /\ 0 <= 1 + arg1, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 0 <= arg1 + arg2 /\ 0 <= arg2 /\ 1 + arg2 <= arg1 /\ 0 <= 1 + arg1, {all remain the same}>
<l2, end, 0 <= arg1 + arg2 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1, {all remain the same}>
<l2, end, 0 <= arg1 + arg2 /\ 0 <= arg2 /\ 0 <= 1 + arg1 /\ arg1 = arg2, {all remain the same}>
<l2, end, 0 <= arg2 /\ 1 + arg1 + arg2 <= 0 /\ 1 + arg1 <= arg2 /\ 0 <= 1 + arg1, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020411s
Time used: 0.020135
Improving Solution with cost 3 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.047512s
Time used: 0.047504

LOG: SAT solveNonLinear - Elapsed time: 0.067923s
Cost: 3; Total time: 0.067639
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 0 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1
Strengthening exit transition (result): 
<l2, end, 0 <= arg1 /\ 0 <= arg1 + arg2 /\ 0 <= arg2 /\ 1 + arg2 <= arg1, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, 0 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, 0 <= arg1 /\ 0 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg2, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= 0 /\ 0 <= 1 + arg1 /\ arg1 = arg2, {arg1 -> 1 + arg1, arg2 -> 1 - arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 + arg1 <= arg2 /\ 1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 - arg2, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 0 <= arg1 /\ 0 <= arg1 + arg2 /\ 0 <= arg2 /\ 1 + arg2 <= arg1, {all remain the same}>
<l2, end, 0 <= arg1 /\ 0 <= arg1 + arg2 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0, {all remain the same}>
<l2, end, 0 <= arg1 /\ 0 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.017803s
Time used: 0.017697
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.002795s
Time used: 5.00215
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.004731s
Time used: 5.00077
> Checking if the negation of the conditions of every pending exit is quasi-invariant... YES
Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 0 <= arg1 + arg2, 0 <= arg2, arg1 <= arg2, 1 + arg1 <= arg2, 0 <= arg1, 
Transition: <l2, end, true, {all remain the same}>
Conditions: 1 + arg1 + arg2 <= 0, 1 + arg2 <= 0, 1 + arg2 <= arg1, arg2 <= arg1, 0 <= arg1, 
OPEN EXITS: 
<l2, end, 0 <= arg1 /\ 0 <= arg1 + arg2 /\ 0 <= arg2 /\ 1 + arg1 <= arg2, {all remain the same}>
<l2, end, 0 <= arg1 /\ 1 + arg1 + arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 + arg2 <= 0, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 0 <= undef16 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>
Conditions: 0 <= arg1, 0 <= arg1 + arg2, 0 <= arg2, 1 + arg1 <= arg2, 
Transition: <l0, l2, 0 <= undef16 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>
Conditions: 0 <= arg1, 1 + arg1 + arg2 <= 0, 1 + arg2 <= arg1, 1 + arg2 <= 0, 
OPEN EXITS: 
<l0, l2, 0 <= arg1 + arg2 /\ 0 <= arg2 /\ 0 <= undef16 /\ 1 + arg1 <= arg2 /\ 1 <= undef15 /\ arg2 = undef16 /\ arg1 = 5, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
