NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f1_0_main_New -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (1-arg3p1 == 0 /\ -1+arg2p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ -1+arg2p1 > 0 /\ arg2-arg4p1 == 0 /\ arg1 > 0), cost: 1
   1: f909_0_main_GE -> f1058_0_size_NULL : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg2 > 0 /\ 1+arg1p2 > 0 /\ -arg3+arg4 <= 0 /\ arg1 > 0), cost: 1
   5: f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ 4-arg3p6+arg3 == 0 /\ arg1p6 > 0 /\ -arg4p6+arg4 == 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
   2: f1058_0_size_NULL -> f1097_0_outputList_NULL : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (1+arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
   3: f1058_0_size_NULL -> f1058_0_size_NULL : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (1+arg1p4 > 0 /\ arg1 > 0), cost: 1
   4: f1097_0_outputList_NULL -> f1097_0_outputList_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (1+arg1p5 > 0 /\ arg1 > 0), cost: 1
   6: __init -> f1_0_main_New : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   1: f909_0_main_GE -> f1058_0_size_NULL : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg2 > 0 /\ 1+arg1p2 > 0 /\ -arg3+arg4 <= 0 /\ arg1 > 0), cost: 1
   5: f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ 4-arg3p6+arg3 == 0 /\ arg1p6 > 0 /\ -arg4p6+arg4 == 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
   2: f1058_0_size_NULL -> f1097_0_outputList_NULL : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (1+arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
   3: f1058_0_size_NULL -> f1058_0_size_NULL : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (1+arg1p4 > 0 /\ arg1 > 0), cost: 1
   4: f1097_0_outputList_NULL -> f1097_0_outputList_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (1+arg1p5 > 0 /\ arg1 > 0), cost: 1
   7: __init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (-1+arg2p1-arg1p7 <= 0 /\ arg2p7-arg4p1 == 0 /\ arg1p1-arg1p7 <= 0 /\ 1-arg3p1 == 0 /\ arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0 /\ arg1p7 > 0), cost: 1

	Eliminating location f1_0_main_New by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_New : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, T, cost: 1
	Second rule:
	f1_0_main_New -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (1-arg3p1 == 0 /\ -1+arg2p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ -1+arg2p1 > 0 /\ arg2-arg4p1 == 0 /\ arg1 > 0), cost: 1
	New rule:
	__init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (-1+arg2p1-arg1p7 <= 0 /\ arg2p7-arg4p1 == 0 /\ arg1p1-arg1p7 <= 0 /\ 1-arg3p1 == 0 /\ arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0 /\ arg1p7 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 6

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   1: f909_0_main_GE -> f1058_0_size_NULL : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg2 > 0 /\ 1+arg1p2 > 0 /\ -arg3+arg4 <= 0 /\ arg1 > 0), cost: 1
   8: f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=4+arg3, (arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ arg1p6 > 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
   2: f1058_0_size_NULL -> f1097_0_outputList_NULL : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (1+arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
   3: f1058_0_size_NULL -> f1058_0_size_NULL : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (1+arg1p4 > 0 /\ arg1 > 0), cost: 1
   4: f1097_0_outputList_NULL -> f1097_0_outputList_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (1+arg1p5 > 0 /\ arg1 > 0), cost: 1
   9: __init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=1, arg4'=arg2p7, (arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ 4-arg3p6+arg3 == 0 /\ arg1p6 > 0 /\ -arg4p6+arg4 == 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=4+arg3, arg4'=arg4, (0 == 0 /\ arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ arg1p6 > 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p6 = 4+arg3
		
		propagated equality arg4p6 = arg4
		
	Simplified Guard

	Original rule:
	f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=4+arg3, arg4'=arg4, (0 == 0 /\ arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ arg1p6 > 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=4+arg3, arg4'=arg4, (arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ arg1p6 > 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=4+arg3, arg4'=arg4, (arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ arg1p6 > 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=4+arg3, (arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ arg1p6 > 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	__init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (-1+arg2p1-arg1p7 <= 0 /\ arg2p7-arg4p1 == 0 /\ arg1p1-arg1p7 <= 0 /\ 1-arg3p1 == 0 /\ arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0 /\ arg1p7 > 0), cost: 1
	New rule:
	__init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=1, arg4'=arg2p7, (0 == 0 /\ -1+arg2p1-arg1p7 <= 0 /\ arg1p1-arg1p7 <= 0 /\ arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0 /\ arg1p7 > 0), cost: 1
	
		propagated equality arg4p1 = arg2p7
		
		propagated equality arg3p1 = 1
		
	Simplified Guard

	Original rule:
	__init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=1, arg4'=arg2p7, (0 == 0 /\ -1+arg2p1-arg1p7 <= 0 /\ arg1p1-arg1p7 <= 0 /\ arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0 /\ arg1p7 > 0), cost: 1
	New rule:
	__init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=1, arg4'=arg2p7, (-1+arg2p1-arg1p7 <= 0 /\ arg1p1-arg1p7 <= 0 /\ arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0 /\ arg1p7 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=1, arg4'=arg2p7, (-1+arg2p1-arg1p7 <= 0 /\ arg1p1-arg1p7 <= 0 /\ arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0 /\ arg1p7 > 0), cost: 1
	New rule:
	__init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=1, arg4'=arg2p7, (arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0), cost: 1

Step with 9

	Trace

	9[(arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0)]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	9[(arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0)], 1[(arg2 > 0 /\ 1+arg1p2 > 0 /\ -arg3+arg4 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 2

	Trace

	9[(arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0)], 1[(arg2 > 0 /\ 1+arg1p2 > 0 /\ -arg3+arg4 <= 0 /\ arg1 > 0)], 2[(1+arg1 > 0 /\ 1+arg1p3 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 4

	Trace

	9[(arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0)], 1[(arg2 > 0 /\ 1+arg1p2 > 0 /\ -arg3+arg4 <= 0 /\ arg1 > 0)], 2[(1+arg1 > 0 /\ 1+arg1p3 > 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   1: f909_0_main_GE -> f1058_0_size_NULL : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg2 > 0 /\ 1+arg1p2 > 0 /\ -arg3+arg4 <= 0 /\ arg1 > 0), cost: 1
   8: f909_0_main_GE -> f909_0_main_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=4+arg3, (arg1p6-arg1 <= 0 /\ -1-arg3+arg4 > 0 /\ arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ 1+arg4 > 0 /\ -6+arg2p6 > 0 /\ arg1p6 > 0 /\ -2-arg3+arg4 > 0 /\ arg1 > 0), cost: 1
   2: f1058_0_size_NULL -> f1097_0_outputList_NULL : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (1+arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
   3: f1058_0_size_NULL -> f1058_0_size_NULL : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (1+arg1p4 > 0 /\ arg1 > 0), cost: 1
   4: f1097_0_outputList_NULL -> f1097_0_outputList_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (1+arg1p5 > 0 /\ arg1 > 0), cost: 1
  10: f1097_0_outputList_NULL -> LoAT_sink : (1+arg1p5 > 0 /\ -arg1p5+arg1 <= 0 /\ arg1 > 0), cost: NONTERM
   9: __init -> f909_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=1, arg4'=arg2p7, (arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0), cost: 1

	Certificate of Non-Termination

	Original rule:
	f1097_0_outputList_NULL -> f1097_0_outputList_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (1+arg1p5 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1097_0_outputList_NULL -> LoAT_sink : (1+arg1p5 > 0 /\ -arg1p5+arg1 <= 0 /\ arg1 > 0), cost: NONTERM

		1+arg1p5 > 0 [0]: monotonic increase yields 1+arg1p5 > 0
		
		arg1 > 0 [0]: eventual decrease yields (arg1p5 > 0 /\ arg1 > 0)
		
		arg1 > 0 [1]: eventual increase yields (-arg1p5+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {1+arg1p5 > 0 -> 1+arg1p5 > 0, arg1 > 0 -> (-arg1p5+arg1 <= 0 /\ arg1 > 0)}

Step with 10

	Trace

	9[(arg1p1 > 0 /\ -1+arg2p1 > 0 /\ 1+arg2p7 > 0)], 1[(arg2 > 0 /\ 1+arg1p2 > 0 /\ -arg3+arg4 <= 0 /\ arg1 > 0)], 2[(1+arg1 > 0 /\ 1+arg1p3 > 0)], 10[(1+arg1p5 > 0 /\ -arg1p5+arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {10[T]}]

Refute

	Counterexample

	[ arg1=1 arg2=2 arg3=1 arg4=0 ] 9 [ arg1=0 arg2=0 arg3=0 arg4=0 ] 1 [ arg1=1 arg2=0 arg3=0 arg4=0 ] 2 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 ] 10
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
