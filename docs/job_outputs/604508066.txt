unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3
   0: f1_0_main_Load -> f191_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ -arg2p1+arg2 == 0 /\ -1-arg1p1+arg2 == 0 /\ arg1 > 0 /\ -arg3p1 == 0), cost: 1
   1: f191_0_main_LE -> f191_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg3 > 0 /\ -arg2p2+arg1 == 0 /\ -1+arg1-arg1p2 == 0 /\ arg2 > 0), cost: 1
   2: f191_0_main_LE -> f191_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg2p3+arg1 == 0 /\ -1+arg1-arg1p3 == 0 /\ 1-arg3p3 == 0 /\ arg2 > 0), cost: 1
   3: f191_0_main_LE -> f270_0_length_FieldAccess : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg1p4 > 0 /\ -1+arg2 < 0), cost: 1
   4: f270_0_length_FieldAccess -> f270_0_length_FieldAccess : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0), cost: 1
   5: __init -> f1_0_main_Load : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3
   1: f191_0_main_LE -> f191_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg3 > 0 /\ -arg2p2+arg1 == 0 /\ -1+arg1-arg1p2 == 0 /\ arg2 > 0), cost: 1
   2: f191_0_main_LE -> f191_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg2p3+arg1 == 0 /\ -1+arg1-arg1p3 == 0 /\ 1-arg3p3 == 0 /\ arg2 > 0), cost: 1
   3: f191_0_main_LE -> f270_0_length_FieldAccess : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg1p4 > 0 /\ -1+arg2 < 0), cost: 1
   4: f270_0_length_FieldAccess -> f270_0_length_FieldAccess : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0), cost: 1
   6: __init -> f191_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2p6 > 0 /\ -1-arg1p1+arg2p6 == 0 /\ -arg2p1+arg2p6 == 0 /\ arg1p6 > 0 /\ -arg3p1 == 0), cost: 1

	Eliminating location f1_0_main_Load by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_Load : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, T, cost: 1
	Second rule:
	f1_0_main_Load -> f191_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ -arg2p1+arg2 == 0 /\ -1-arg1p1+arg2 == 0 /\ arg1 > 0 /\ -arg3p1 == 0), cost: 1
	New rule:
	__init -> f191_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2p6 > 0 /\ -1-arg1p1+arg2p6 == 0 /\ -arg2p1+arg2p6 == 0 /\ arg1p6 > 0 /\ -arg3p1 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 5

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3
   3: f191_0_main_LE -> f270_0_length_FieldAccess : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg1p4 > 0 /\ -1+arg2 < 0), cost: 1
   7: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=arg3p2, (arg3 > 0 /\ arg2 > 0), cost: 1
   8: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=1, arg2 > 0, cost: 1
   4: f270_0_length_FieldAccess -> f270_0_length_FieldAccess : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0), cost: 1
   9: __init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (1+arg2p6 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg3 > 0 /\ -arg2p2+arg1 == 0 /\ -1+arg1-arg1p2 == 0 /\ arg2 > 0), cost: 1
	New rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=arg3p2, (0 == 0 /\ arg3 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg2p2 = arg1
		
		propagated equality arg1p2 = -1+arg1
		
	Simplified Guard

	Original rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=arg3p2, (0 == 0 /\ arg3 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=arg3p2, (arg3 > 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg2p3+arg1 == 0 /\ -1+arg1-arg1p3 == 0 /\ 1-arg3p3 == 0 /\ arg2 > 0), cost: 1
	New rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=1, (0 == 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg2p3 = arg1
		
		propagated equality arg1p3 = -1+arg1
		
		propagated equality arg3p3 = 1
		
	Simplified Guard

	Original rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=1, (0 == 0 /\ arg2 > 0), cost: 1
	New rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=1, arg2 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	__init -> f191_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2p6 > 0 /\ -1-arg1p1+arg2p6 == 0 /\ -arg2p1+arg2p6 == 0 /\ arg1p6 > 0 /\ -arg3p1 == 0), cost: 1
	New rule:
	__init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (0 == 0 /\ 1+arg2p6 > 0 /\ arg1p6 > 0), cost: 1
	
		propagated equality arg1p1 = -1+arg2p6
		
		propagated equality arg2p1 = arg2p6
		
		propagated equality arg3p1 = 0
		
	Simplified Guard

	Original rule:
	__init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (0 == 0 /\ 1+arg2p6 > 0 /\ arg1p6 > 0), cost: 1
	New rule:
	__init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (1+arg2p6 > 0 /\ arg1p6 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (1+arg2p6 > 0 /\ arg1p6 > 0), cost: 1
	New rule:
	__init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (1+arg2p6 > 0), cost: 1

Step with 9

	Trace

	9[(1+arg2p6 > 0)]
	
	Blocked

	[{}, {}]

Step with 3

	Trace

	9[(1+arg2p6 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)]
	
	Blocked

	[{}, {3[T]}]

Step with 8

	Trace

	9[(1+arg2p6 > 0)], 8[(arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   3: f191_0_main_LE -> f270_0_length_FieldAccess : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg1p4 > 0 /\ -1+arg2 < 0), cost: 1
   7: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=arg3p2, (arg3 > 0 /\ arg2 > 0), cost: 1
   8: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=1, arg2 > 0, cost: 1
  10: f191_0_main_LE -> f191_0_main_LE : arg1'=-n+arg1, arg2'=1-n+arg1, arg3'=1, (2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0), cost: 1
   4: f270_0_length_FieldAccess -> f270_0_length_FieldAccess : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0), cost: 1
   9: __init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (1+arg2p6 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=1, (arg2 > 0), cost: 1
	New rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-n+arg1, arg2'=1-n+arg1, arg3'=1, (2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0), cost: 1

		arg2 > 0 [0]: eventual decrease yields (2-n+arg1 > 0 /\ arg2 > 0)
		
		Replacement map: {arg2 > 0 -> (2-n+arg1 > 0 /\ arg2 > 0)}

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {8[T], 10[T]}]

Step with 3

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {8[T], 10[T]}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {8[T], 10[T]}, {}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {8[T], 10[T]}, {}, {}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {8[T], 10[T]}, {}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {8[T], 10[T]}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 8[T], 10[T]}]

Step with 7

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 7[(arg3 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 8[T], 10[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   3: f191_0_main_LE -> f270_0_length_FieldAccess : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg1p4 > 0 /\ -1+arg2 < 0), cost: 1
   7: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=arg3p2, (arg3 > 0 /\ arg2 > 0), cost: 1
   8: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=1, arg2 > 0, cost: 1
  10: f191_0_main_LE -> f191_0_main_LE : arg1'=-n+arg1, arg2'=1-n+arg1, arg3'=1, (2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0), cost: 1
  11: f191_0_main_LE -> f191_0_main_LE : arg1'=-n2+arg1, arg2'=1-n2+arg1, arg3'=arg3p2, (-1+n2 >= 0 /\ arg3 > 0 /\ 2-n2+arg1 > 0 /\ arg3p2 > 0 /\ arg2 > 0), cost: 1
   4: f270_0_length_FieldAccess -> f270_0_length_FieldAccess : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0), cost: 1
   9: __init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (1+arg2p6 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=arg3p2, (arg3 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-n2+arg1, arg2'=1-n2+arg1, arg3'=arg3p2, (-1+n2 >= 0 /\ arg3 > 0 /\ 2-n2+arg1 > 0 /\ arg3p2 > 0 /\ arg2 > 0), cost: 1

		arg3 > 0 [0]: eventual decrease yields (arg3 > 0 /\ arg3p2 > 0)
		
		arg3 > 0 [1]: eventual increase yields (arg3 > 0 /\ arg3-arg3p2 <= 0)
		
		arg2 > 0 [0]: eventual decrease yields (2-n2+arg1 > 0 /\ arg2 > 0)
		
		Replacement map: {arg3 > 0 -> (arg3 > 0 /\ arg3p2 > 0), arg2 > 0 -> (2-n2+arg1 > 0 /\ arg2 > 0)}

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 11[(-1+n2 >= 0 /\ arg3 > 0 /\ 2-n2+arg1 > 0 /\ arg3p2 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 8[T], 10[T]}, {7[T], 11[T]}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   3: f191_0_main_LE -> f270_0_length_FieldAccess : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg1p4 > 0 /\ -1+arg2 < 0), cost: 1
   7: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=arg3p2, (arg3 > 0 /\ arg2 > 0), cost: 1
   8: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=1, arg2 > 0, cost: 1
  10: f191_0_main_LE -> f191_0_main_LE : arg1'=-n+arg1, arg2'=1-n+arg1, arg3'=1, (2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0), cost: 1
  11: f191_0_main_LE -> f191_0_main_LE : arg1'=-n2+arg1, arg2'=1-n2+arg1, arg3'=arg3p2, (-1+n2 >= 0 /\ arg3 > 0 /\ 2-n2+arg1 > 0 /\ arg3p2 > 0 /\ arg2 > 0), cost: 1
  12: f191_0_main_LE -> f191_0_main_LE : arg1'=-n2*n3+arg1-n3*n1, arg2'=1-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1, arg3'=arg3p2, (-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0), cost: 1
   4: f270_0_length_FieldAccess -> f270_0_length_FieldAccess : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0), cost: 1
   9: __init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (1+arg2p6 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-n2+arg1-n1, arg2'=1-n2+arg1-n1, arg3'=arg3p2, (1+arg1-n1 > 0 /\ -1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ 2+arg1-n1 > 0 /\ -1+n1 >= 0 /\ arg2 > 0), cost: 1
	New rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-n2*n3+arg1-n3*n1, arg2'=1-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1, arg3'=arg3p2, (-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0), cost: 1

		1+arg1-n1 > 0 [0]: montonic decrease yields 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0, dependencies: -1+n2 >= 0 2-n2+arg1-n1 > 0
		
		1+arg1-n1 > 0 [1]: eventual decrease yields (1+arg1-n1 > 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0)
		
		1+arg1-n1 > 0 [2]: eventual increase yields (1+arg1-n1 > 0 /\ n2+n1 <= 0)
		
		-1+n2 >= 0 [0]: monotonic increase yields -1+n2 >= 0
		
		2-n2+arg1-n1 > 0 [0]: montonic decrease yields 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0, dependencies: 1+arg1-n1 > 0 -1+n1 >= 0
		
		2-n2+arg1-n1 > 0 [1]: eventual decrease yields (2-n2+arg1-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0)
		
		2-n2+arg1-n1 > 0 [2]: eventual increase yields (2-n2+arg1-n1 > 0 /\ n2+n1 <= 0)
		
		arg3p2 > 0 [0]: monotonic increase yields arg3p2 > 0
		
		2+arg1-n1 > 0 [0]: montonic decrease yields 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0, dependencies: 1+arg1-n1 > 0
		
		2+arg1-n1 > 0 [1]: eventual increase yields (n2+n1 <= 0 /\ 2+arg1-n1 > 0)
		
		-1+n1 >= 0 [0]: monotonic increase yields -1+n1 >= 0
		
		arg2 > 0 [0]: eventual decrease yields (1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ arg2 > 0), dependencies: -1+n2 >= 0 -1+n1 >= 0
		
		Replacement map: {1+arg1-n1 > 0 -> 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0, -1+n2 >= 0 -> -1+n2 >= 0, 2-n2+arg1-n1 > 0 -> (2-n2+arg1-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0), arg3p2 > 0 -> arg3p2 > 0, 2+arg1-n1 > 0 -> 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0, -1+n1 >= 0 -> -1+n1 >= 0, arg2 > 0 -> (1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ arg2 > 0)}

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {12[T]}]

Step with 3

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {12[T]}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {12[T]}, {}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {12[T]}, {}, {}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {12[T]}, {}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {12[T]}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 12[T]}]

Step with 7

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 7[(arg3 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 12[T]}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 12[T]}]

Step with 8

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 8[(arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 12[T]}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 8[T], 12[T]}]

Step with 10

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 8[T], 12[T]}, {10[T]}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   3: f191_0_main_LE -> f270_0_length_FieldAccess : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg1p4 > 0 /\ -1+arg2 < 0), cost: 1
   7: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=arg3p2, (arg3 > 0 /\ arg2 > 0), cost: 1
   8: f191_0_main_LE -> f191_0_main_LE : arg1'=-1+arg1, arg2'=arg1, arg3'=1, arg2 > 0, cost: 1
  10: f191_0_main_LE -> f191_0_main_LE : arg1'=-n+arg1, arg2'=1-n+arg1, arg3'=1, (2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0), cost: 1
  11: f191_0_main_LE -> f191_0_main_LE : arg1'=-n2+arg1, arg2'=1-n2+arg1, arg3'=arg3p2, (-1+n2 >= 0 /\ arg3 > 0 /\ 2-n2+arg1 > 0 /\ arg3p2 > 0 /\ arg2 > 0), cost: 1
  12: f191_0_main_LE -> f191_0_main_LE : arg1'=-n2*n3+arg1-n3*n1, arg2'=1-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1, arg3'=arg3p2, (-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0), cost: 1
  13: f191_0_main_LE -> f191_0_main_LE : arg1'=-n5*n-n5*n31*n11+arg1-n5*n31*n22, arg2'=1-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1, arg3'=1, (2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0), cost: 1
   4: f270_0_length_FieldAccess -> f270_0_length_FieldAccess : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0), cost: 1
   9: __init -> f191_0_main_LE : arg1'=-1+arg2p6, arg2'=arg2p6, arg3'=0, (1+arg2p6 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-n31*n11-n-n31*n22+arg1, arg2'=1-n31*n11-n-n31*n22+arg1, arg3'=1, (2-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 /\ -1+n22 >= 0 /\ 1-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 /\ 2-n11-n22+arg1 > 0 /\ 2-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 /\ 2-n31*n11-n-n31*n22+arg1 > 0 /\ 1-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ -1+n >= 0 /\ 1-n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ arg2 > 0), cost: 1
	New rule:
	f191_0_main_LE -> f191_0_main_LE : arg1'=-n5*n-n5*n31*n11+arg1-n5*n31*n22, arg2'=1-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1, arg3'=1, (2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0), cost: 1

		2-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 [0]: montonic decrease yields 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0, dependencies: 1-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0
		
		2-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 [1]: eventual decrease yields (2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 2-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0)
		
		2-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 [2]: eventual increase yields (2-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 /\ n31*n11+n+n31*n22 <= 0)
		
		-1+n22 >= 0 [0]: monotonic increase yields -1+n22 >= 0
		
		1-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 [0]: montonic decrease yields 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0, dependencies: 2-n31*n11-n-n31*n22+arg1 > 0 -1+n >= 0
		
		1-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 [1]: eventual decrease yields (1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0)
		
		1-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 [2]: eventual increase yields (1-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 /\ n31*n11+n+n31*n22 <= 0)
		
		2-n11-n22+arg1 > 0 [0]: montonic decrease yields 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0, dependencies: -1+n22 >= 0 -1+n31 >= 0 -1+n11 >= 0 -1+n >= 0
		
		2-n11-n22+arg1 > 0 [1]: eventual decrease yields (2-n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0)
		
		2-n11-n22+arg1 > 0 [2]: eventual increase yields (2-n11-n22+arg1 > 0 /\ n31*n11+n+n31*n22 <= 0)
		
		2-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 [0]: montonic decrease yields 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0, dependencies: 1-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0
		
		2-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 [1]: eventual increase yields (2-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 /\ n31*n11+n+n31*n22 <= 0)
		
		2-n31*n11-n-n31*n22+arg1 > 0 [0]: montonic decrease yields 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0, dependencies: -1+n22 >= 0 2-n11-n22+arg1 > 0 -1+n11 >= 0
		
		2-n31*n11-n-n31*n22+arg1 > 0 [1]: eventual decrease yields (2-n31*n11-n-n31*n22+arg1 > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0)
		
		2-n31*n11-n-n31*n22+arg1 > 0 [2]: eventual increase yields (2-n31*n11-n-n31*n22+arg1 > 0 /\ n31*n11+n+n31*n22 <= 0)
		
		1-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 [0]: montonic decrease yields 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0, dependencies: -1+n22 >= 0 1-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0
		
		1-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 [1]: eventual increase yields (1-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 /\ n31*n11+n+n31*n22 <= 0)
		
		-1+n31 >= 0 [0]: monotonic increase yields -1+n31 >= 0
		
		-1+n11 >= 0 [0]: monotonic increase yields -1+n11 >= 0
		
		-1+n >= 0 [0]: monotonic increase yields -1+n >= 0
		
		1-n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 [0]: montonic decrease yields 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0, dependencies: -1+n22 >= 0 2-n11-n22+arg1 > 0 -1+n11 >= 0 -1+n >= 0
		
		1-n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 [1]: eventual increase yields (1-n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ n31*n11+n+n31*n22 <= 0)
		
		arg2 > 0 [0]: eventual decrease yields (1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ arg2 > 0), dependencies: -1+n22 >= 0 -1+n31 >= 0 -1+n11 >= 0 -1+n >= 0
		
		Replacement map: {2-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 -> 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0, -1+n22 >= 0 -> -1+n22 >= 0, 1-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 -> 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0, 2-n11-n22+arg1 > 0 -> 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0, 2-(-1+n31)*n22-n11-n22-n11*(-1+n31)+arg1 > 0 -> 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0, 2-n31*n11-n-n31*n22+arg1 > 0 -> 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0, 1-(-1+n31)*n22-n11-n11*(-1+n31)+arg1 > 0 -> 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0, -1+n31 >= 0 -> -1+n31 >= 0, -1+n11 >= 0 -> -1+n11 >= 0, -1+n >= 0 -> -1+n >= 0, 1-n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 -> 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0, arg2 > 0 -> (1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ arg2 > 0)}

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {13[T]}]

Step with 3

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {13[T]}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {13[T]}, {}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {13[T]}, {}, {}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {13[T]}, {}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {13[T]}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 13[T]}]

Step with 7

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 7[(arg3 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 13[T]}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 13[T]}]

Step with 8

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 8[(arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 13[T]}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 8[T], 13[T]}]

Step with 10

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 8[T], 13[T]}, {10[T]}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 8[T], 10[T], 13[T]}]

Step with 11

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 11[(-1+n2 >= 0 /\ arg3 > 0 /\ 2-n2+arg1 > 0 /\ arg3p2 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 8[T], 10[T], 13[T]}, {11[T]}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 8[T], 10[T], 11[T], 13[T]}]

Step with 12

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 8[T], 10[T], 11[T], 13[T]}, {12[T]}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T]}, {3[T], 7[T], 8[T], 10[T], 11[T], 12[T], 13[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}]

Step with 12

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {12[T]}]

Step with 13

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {12[T]}, {13[T]}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {12[T], 13[T]}]

Step with 3

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {12[T], 13[T]}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {12[T], 13[T]}, {}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {12[T], 13[T]}, {}, {}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {12[T], 13[T]}, {}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {12[T], 13[T]}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {3[T], 12[T], 13[T]}]

Step with 7

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 7[(arg3 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {3[T], 12[T], 13[T]}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {3[T], 7[T], 12[T], 13[T]}]

Step with 8

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 8[(arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {3[T], 7[T], 12[T], 13[T]}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {3[T], 7[T], 8[T], 12[T], 13[T]}]

Step with 10

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {3[T], 7[T], 8[T], 12[T], 13[T]}, {10[T]}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {3[T], 7[T], 8[T], 10[T], 12[T], 13[T]}]

Step with 11

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)], 11[(-1+n2 >= 0 /\ arg3 > 0 /\ 2-n2+arg1 > 0 /\ arg3p2 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {3[T], 7[T], 8[T], 10[T], 12[T], 13[T]}, {11[T]}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 13[T]}, {3[T], 7[T], 8[T], 10[T], 11[T], 12[T], 13[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 12[T], 13[T]}]

Step with 8

	Trace

	9[(1+arg2p6 > 0)], 8[(arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 11[T], 12[T], 13[T]}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}]

Step with 10

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T]}]

Step with 11

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 11[(-1+n2 >= 0 /\ arg3 > 0 /\ 2-n2+arg1 > 0 /\ arg3p2 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T]}, {11[T]}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T]}]

Step with 12

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 12[(-1+n2 >= 0 /\ 2-n2+arg1-n1 > 0 /\ arg3p2 > 0 /\ -1+n3 >= 0 /\ 1-(-2+n3)*n1-n2+arg1-n2*(-2+n3)-n1 > 0 /\ 2-n2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ 2-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ -1+n1 >= 0 /\ 1-n2*(-1+n3)+arg1-(-1+n3)*n1-n1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T]}, {12[T]}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T]}]

Step with 13

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 13[(2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ -1+n5 >= 0 /\ -1+n22 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ 1-n31*n11-n31*n22*(-2+n5)-n*(-2+n5)-n-n31*n22+arg1-n31*n11*(-2+n5) > 0 /\ 2-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22+arg1 > 0 /\ 2-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n22-n11*(-1+n31)+arg1 > 0 /\ -1+n31 >= 0 /\ -1+n11 >= 0 /\ 1-(-1+n5)*n31*n22-(-1+n31)*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-1+n31)+arg1 > 0 /\ 1-(-1+n5)*n31*n22-n11-(-1+n5)*n-(-1+n5)*n31*n11-n11*(-2+n31)-n22+arg1-n22*(-2+n31) > 0 /\ 2-n31*n11-(-1+n5)*n31*n22-n-(-1+n5)*n-(-1+n5)*n31*n11-n31*n22+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T]}, {13[T]}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 13[T]}]

Step with 3

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 13[T]}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 13[T]}, {}, {}]

Step with 4

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 13[T]}, {}, {}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)], 4[(1+arg1p5 > 0 /\ arg1 > 0 /\ 1+arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 13[T]}, {}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 3[(arg1p4 > 0 /\ -1+arg2 < 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 13[T]}, {4[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {3[T], 10[T], 11[T], 12[T], 13[T]}]

Step with 7

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 7[(arg3 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {3[T], 10[T], 11[T], 12[T], 13[T]}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {3[T], 7[T], 10[T], 11[T], 12[T], 13[T]}]

Step with 8

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 8[(arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {3[T], 7[T], 10[T], 11[T], 12[T], 13[T]}, {}]

Covered

	Trace

	9[(1+arg2p6 > 0)], 10[(2-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 11[T], 12[T], 13[T]}, {3[T], 7[T], 8[T], 10[T], 11[T], 12[T], 13[T]}]

Backtrack

	Trace

	9[(1+arg2p6 > 0)]
	
	Blocked

	[{}, {3[T], 7[T], 8[T], 10[T], 11[T], 12[T], 13[T]}]

Backtrack

	Trace

	Blocked

	[{9[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
