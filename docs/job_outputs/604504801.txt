NO

Initial ITS
Start location: l10
   0: l0 -> l1 : tmp___08^0'=tmp___08^post0, length4^0'=length4^post0, tmp^0'=tmp^post0, i5^0'=i5^post0, s^0'=s^post0, (-s^post0+s^0 == 0 /\ tmp___08^0-tmp___08^post0 == 0 /\ length4^0-i5^0 <= 0 /\ i5^0-i5^post0 == 0 /\ -length4^post0+length4^0 == 0 /\ tmp^0-tmp^post0 == 0), cost: 1
   1: l0 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=length4^post1, tmp^0'=tmp^post1, i5^0'=i5^post1, s^0'=s^post1, (0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ -s^post1+s^0 == 0 /\ length4^0-length4^post1 == 0 /\ 1-length4^0+i5^0 <= 0 /\ -1+i5^post1-i5^0 == 0), cost: 1
   7: l1 -> l7 : tmp___08^0'=tmp___08^post7, length4^0'=length4^post7, tmp^0'=tmp^post7, i5^0'=i5^post7, s^0'=s^post7, (-tmp^post7+tmp^0 == 0 /\ s^0-s^post7 == 0 /\ i5^0-i5^post7 == 0 /\ length4^0-length4^post7 == 0 /\ tmp___08^0-tmp___08^post7 == 0), cost: 1
   2: l2 -> l0 : tmp___08^0'=tmp___08^post2, length4^0'=length4^post2, tmp^0'=tmp^post2, i5^0'=i5^post2, s^0'=s^post2, (tmp___08^0-tmp___08^post2 == 0 /\ -length4^post2+length4^0 == 0 /\ -s^post2+s^0 == 0 /\ i5^0-i5^post2 == 0 /\ tmp^0-tmp^post2 == 0), cost: 1
   3: l3 -> l4 : tmp___08^0'=tmp___08^post3, length4^0'=length4^post3, tmp^0'=tmp^post3, i5^0'=i5^post3, s^0'=s^post3, (tmp___08^0-tmp___08^post3 == 0 /\ -s^post3+s^0 == 0 /\ length4^0-length4^post3 == 0 /\ tmp^0-tmp^post3 == 0 /\ -i5^post3+i5^0 == 0), cost: 1
  12: l4 -> l5 : tmp___08^0'=tmp___08^post12, length4^0'=length4^post12, tmp^0'=tmp^post12, i5^0'=i5^post12, s^0'=s^post12, (-tmp^post12+tmp^0 == 0 /\ length4^0-length4^post12 == 0 /\ tmp___08^0-tmp___08^post12 == 0 /\ -i5^post12+i5^0 == 0 /\ -s^post12+s^0 == 0), cost: 1
   4: l5 -> l3 : tmp___08^0'=tmp___08^post4, length4^0'=length4^post4, tmp^0'=tmp^post4, i5^0'=i5^post4, s^0'=s^post4, (i5^0-i5^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -s^post4+s^0 == 0 /\ length4^0-length4^post4 == 0 /\ tmp___08^0-tmp___08^post4 == 0), cost: 1
   5: l5 -> l6 : tmp___08^0'=tmp___08^post5, length4^0'=length4^post5, tmp^0'=tmp^post5, i5^0'=i5^post5, s^0'=s^post5, (s^0-s^post5 == 0 /\ tmp___08^0-tmp___08^post5 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -i5^post5+i5^0 == 0 /\ length4^0-length4^post5 == 0), cost: 1
   6: l5 -> l3 : tmp___08^0'=tmp___08^post6, length4^0'=length4^post6, tmp^0'=tmp^post6, i5^0'=i5^post6, s^0'=s^post6, (-s^post6+s^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ tmp___08^0-tmp___08^post6 == 0 /\ -i5^post6+i5^0 == 0 /\ length4^0-length4^post6 == 0), cost: 1
   9: l7 -> l8 : tmp___08^0'=tmp___08^post9, length4^0'=length4^post9, tmp^0'=tmp^post9, i5^0'=i5^post9, s^0'=s^post9, (-tmp^post9+tmp^0 == 0 /\ s^0-s^post9 == 0 /\ i5^0-i5^post9 == 0 /\ length4^0-length4^post9 == 0 /\ tmp___08^0-tmp___08^post9 == 0), cost: 1
  10: l7 -> l8 : tmp___08^0'=tmp___08^post10, length4^0'=length4^post10, tmp^0'=tmp^post10, i5^0'=i5^post10, s^0'=s^post10, (-i5^post10+i5^0 == 0 /\ tmp^0-tmp^post10 == 0 /\ tmp___08^0-tmp___08^post10 == 0 /\ length4^0-length4^post10 == 0 /\ -s^post10+s^0 == 0), cost: 1
  11: l7 -> l4 : tmp___08^0'=tmp___08^post11, length4^0'=length4^post11, tmp^0'=tmp^post11, i5^0'=i5^post11, s^0'=s^post11, (-length4^post11+length4^0 == 0 /\ -s^post11+s^0 == 0 /\ i5^0-i5^post11 == 0 /\ tmp^0-tmp^post11 == 0 /\ tmp___08^0-tmp___08^post11 == 0), cost: 1
   8: l8 -> l1 : tmp___08^0'=tmp___08^post8, length4^0'=length4^post8, tmp^0'=tmp^post8, i5^0'=i5^post8, s^0'=s^post8, (-s^post8+s^0 == 0 /\ tmp^0-tmp^post8 == 0 /\ tmp___08^0-tmp___08^post8 == 0 /\ -i5^post8+i5^0 == 0 /\ length4^0-length4^post8 == 0), cost: 1
  13: l9 -> l2 : tmp___08^0'=tmp___08^post13, length4^0'=length4^post13, tmp^0'=tmp^post13, i5^0'=i5^post13, s^0'=s^post13, (0 == 0 /\ -s^post13+length4^post13 == 0 /\ s^post13-tmp^post13 == 0 /\ tmp___08^0-tmp___08^post13 == 0 /\ i5^post13 == 0), cost: 1
  14: l10 -> l9 : tmp___08^0'=tmp___08^post14, length4^0'=length4^post14, tmp^0'=tmp^post14, i5^0'=i5^post14, s^0'=s^post14, (-s^post14+s^0 == 0 /\ tmp___08^0-tmp___08^post14 == 0 /\ length4^0-length4^post14 == 0 /\ tmp^0-tmp^post14 == 0 /\ -i5^post14+i5^0 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l10
   0: l0 -> l1 : tmp___08^0'=tmp___08^post0, length4^0'=length4^post0, tmp^0'=tmp^post0, i5^0'=i5^post0, s^0'=s^post0, (-s^post0+s^0 == 0 /\ tmp___08^0-tmp___08^post0 == 0 /\ length4^0-i5^0 <= 0 /\ i5^0-i5^post0 == 0 /\ -length4^post0+length4^0 == 0 /\ tmp^0-tmp^post0 == 0), cost: 1
   1: l0 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=length4^post1, tmp^0'=tmp^post1, i5^0'=i5^post1, s^0'=s^post1, (0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ -s^post1+s^0 == 0 /\ length4^0-length4^post1 == 0 /\ 1-length4^0+i5^0 <= 0 /\ -1+i5^post1-i5^0 == 0), cost: 1
   7: l1 -> l7 : tmp___08^0'=tmp___08^post7, length4^0'=length4^post7, tmp^0'=tmp^post7, i5^0'=i5^post7, s^0'=s^post7, (-tmp^post7+tmp^0 == 0 /\ s^0-s^post7 == 0 /\ i5^0-i5^post7 == 0 /\ length4^0-length4^post7 == 0 /\ tmp___08^0-tmp___08^post7 == 0), cost: 1
   2: l2 -> l0 : tmp___08^0'=tmp___08^post2, length4^0'=length4^post2, tmp^0'=tmp^post2, i5^0'=i5^post2, s^0'=s^post2, (tmp___08^0-tmp___08^post2 == 0 /\ -length4^post2+length4^0 == 0 /\ -s^post2+s^0 == 0 /\ i5^0-i5^post2 == 0 /\ tmp^0-tmp^post2 == 0), cost: 1
   3: l3 -> l4 : tmp___08^0'=tmp___08^post3, length4^0'=length4^post3, tmp^0'=tmp^post3, i5^0'=i5^post3, s^0'=s^post3, (tmp___08^0-tmp___08^post3 == 0 /\ -s^post3+s^0 == 0 /\ length4^0-length4^post3 == 0 /\ tmp^0-tmp^post3 == 0 /\ -i5^post3+i5^0 == 0), cost: 1
  12: l4 -> l5 : tmp___08^0'=tmp___08^post12, length4^0'=length4^post12, tmp^0'=tmp^post12, i5^0'=i5^post12, s^0'=s^post12, (-tmp^post12+tmp^0 == 0 /\ length4^0-length4^post12 == 0 /\ tmp___08^0-tmp___08^post12 == 0 /\ -i5^post12+i5^0 == 0 /\ -s^post12+s^0 == 0), cost: 1
   4: l5 -> l3 : tmp___08^0'=tmp___08^post4, length4^0'=length4^post4, tmp^0'=tmp^post4, i5^0'=i5^post4, s^0'=s^post4, (i5^0-i5^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -s^post4+s^0 == 0 /\ length4^0-length4^post4 == 0 /\ tmp___08^0-tmp___08^post4 == 0), cost: 1
   6: l5 -> l3 : tmp___08^0'=tmp___08^post6, length4^0'=length4^post6, tmp^0'=tmp^post6, i5^0'=i5^post6, s^0'=s^post6, (-s^post6+s^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ tmp___08^0-tmp___08^post6 == 0 /\ -i5^post6+i5^0 == 0 /\ length4^0-length4^post6 == 0), cost: 1
   9: l7 -> l8 : tmp___08^0'=tmp___08^post9, length4^0'=length4^post9, tmp^0'=tmp^post9, i5^0'=i5^post9, s^0'=s^post9, (-tmp^post9+tmp^0 == 0 /\ s^0-s^post9 == 0 /\ i5^0-i5^post9 == 0 /\ length4^0-length4^post9 == 0 /\ tmp___08^0-tmp___08^post9 == 0), cost: 1
  10: l7 -> l8 : tmp___08^0'=tmp___08^post10, length4^0'=length4^post10, tmp^0'=tmp^post10, i5^0'=i5^post10, s^0'=s^post10, (-i5^post10+i5^0 == 0 /\ tmp^0-tmp^post10 == 0 /\ tmp___08^0-tmp___08^post10 == 0 /\ length4^0-length4^post10 == 0 /\ -s^post10+s^0 == 0), cost: 1
  11: l7 -> l4 : tmp___08^0'=tmp___08^post11, length4^0'=length4^post11, tmp^0'=tmp^post11, i5^0'=i5^post11, s^0'=s^post11, (-length4^post11+length4^0 == 0 /\ -s^post11+s^0 == 0 /\ i5^0-i5^post11 == 0 /\ tmp^0-tmp^post11 == 0 /\ tmp___08^0-tmp___08^post11 == 0), cost: 1
   8: l8 -> l1 : tmp___08^0'=tmp___08^post8, length4^0'=length4^post8, tmp^0'=tmp^post8, i5^0'=i5^post8, s^0'=s^post8, (-s^post8+s^0 == 0 /\ tmp^0-tmp^post8 == 0 /\ tmp___08^0-tmp___08^post8 == 0 /\ -i5^post8+i5^0 == 0 /\ length4^0-length4^post8 == 0), cost: 1
  13: l9 -> l2 : tmp___08^0'=tmp___08^post13, length4^0'=length4^post13, tmp^0'=tmp^post13, i5^0'=i5^post13, s^0'=s^post13, (0 == 0 /\ -s^post13+length4^post13 == 0 /\ s^post13-tmp^post13 == 0 /\ tmp___08^0-tmp___08^post13 == 0 /\ i5^post13 == 0), cost: 1
  14: l10 -> l9 : tmp___08^0'=tmp___08^post14, length4^0'=length4^post14, tmp^0'=tmp^post14, i5^0'=i5^post14, s^0'=s^post14, (-s^post14+s^0 == 0 /\ tmp___08^0-tmp___08^post14 == 0 /\ length4^0-length4^post14 == 0 /\ tmp^0-tmp^post14 == 0 /\ -i5^post14+i5^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : tmp___08^0'=tmp___08^post0, length4^0'=length4^post0, tmp^0'=tmp^post0, i5^0'=i5^post0, s^0'=s^post0, (-s^post0+s^0 == 0 /\ tmp___08^0-tmp___08^post0 == 0 /\ length4^0-i5^0 <= 0 /\ i5^0-i5^post0 == 0 /\ -length4^post0+length4^0 == 0 /\ tmp^0-tmp^post0 == 0), cost: 1
New rule:
l0 -> l1 : length4^0-i5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=length4^post1, tmp^0'=tmp^post1, i5^0'=i5^post1, s^0'=s^post1, (0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ -s^post1+s^0 == 0 /\ length4^0-length4^post1 == 0 /\ 1-length4^0+i5^0 <= 0 /\ -1+i5^post1-i5^0 == 0), cost: 1
New rule:
l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : tmp___08^0'=tmp___08^post2, length4^0'=length4^post2, tmp^0'=tmp^post2, i5^0'=i5^post2, s^0'=s^post2, (tmp___08^0-tmp___08^post2 == 0 /\ -length4^post2+length4^0 == 0 /\ -s^post2+s^0 == 0 /\ i5^0-i5^post2 == 0 /\ tmp^0-tmp^post2 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l4 : tmp___08^0'=tmp___08^post3, length4^0'=length4^post3, tmp^0'=tmp^post3, i5^0'=i5^post3, s^0'=s^post3, (tmp___08^0-tmp___08^post3 == 0 /\ -s^post3+s^0 == 0 /\ length4^0-length4^post3 == 0 /\ tmp^0-tmp^post3 == 0 /\ -i5^post3+i5^0 == 0), cost: 1
New rule:
l3 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l3 : tmp___08^0'=tmp___08^post4, length4^0'=length4^post4, tmp^0'=tmp^post4, i5^0'=i5^post4, s^0'=s^post4, (i5^0-i5^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -s^post4+s^0 == 0 /\ length4^0-length4^post4 == 0 /\ tmp___08^0-tmp___08^post4 == 0), cost: 1
New rule:
l5 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l3 : tmp___08^0'=tmp___08^post6, length4^0'=length4^post6, tmp^0'=tmp^post6, i5^0'=i5^post6, s^0'=s^post6, (-s^post6+s^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ tmp___08^0-tmp___08^post6 == 0 /\ -i5^post6+i5^0 == 0 /\ length4^0-length4^post6 == 0), cost: 1
New rule:
l5 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l7 : tmp___08^0'=tmp___08^post7, length4^0'=length4^post7, tmp^0'=tmp^post7, i5^0'=i5^post7, s^0'=s^post7, (-tmp^post7+tmp^0 == 0 /\ s^0-s^post7 == 0 /\ i5^0-i5^post7 == 0 /\ length4^0-length4^post7 == 0 /\ tmp___08^0-tmp___08^post7 == 0), cost: 1
New rule:
l1 -> l7 : TRUE, cost: 1

Applied preprocessing
Original rule:
l8 -> l1 : tmp___08^0'=tmp___08^post8, length4^0'=length4^post8, tmp^0'=tmp^post8, i5^0'=i5^post8, s^0'=s^post8, (-s^post8+s^0 == 0 /\ tmp^0-tmp^post8 == 0 /\ tmp___08^0-tmp___08^post8 == 0 /\ -i5^post8+i5^0 == 0 /\ length4^0-length4^post8 == 0), cost: 1
New rule:
l8 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l8 : tmp___08^0'=tmp___08^post9, length4^0'=length4^post9, tmp^0'=tmp^post9, i5^0'=i5^post9, s^0'=s^post9, (-tmp^post9+tmp^0 == 0 /\ s^0-s^post9 == 0 /\ i5^0-i5^post9 == 0 /\ length4^0-length4^post9 == 0 /\ tmp___08^0-tmp___08^post9 == 0), cost: 1
New rule:
l7 -> l8 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l8 : tmp___08^0'=tmp___08^post10, length4^0'=length4^post10, tmp^0'=tmp^post10, i5^0'=i5^post10, s^0'=s^post10, (-i5^post10+i5^0 == 0 /\ tmp^0-tmp^post10 == 0 /\ tmp___08^0-tmp___08^post10 == 0 /\ length4^0-length4^post10 == 0 /\ -s^post10+s^0 == 0), cost: 1
New rule:
l7 -> l8 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l4 : tmp___08^0'=tmp___08^post11, length4^0'=length4^post11, tmp^0'=tmp^post11, i5^0'=i5^post11, s^0'=s^post11, (-length4^post11+length4^0 == 0 /\ -s^post11+s^0 == 0 /\ i5^0-i5^post11 == 0 /\ tmp^0-tmp^post11 == 0 /\ tmp___08^0-tmp___08^post11 == 0), cost: 1
New rule:
l7 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : tmp___08^0'=tmp___08^post12, length4^0'=length4^post12, tmp^0'=tmp^post12, i5^0'=i5^post12, s^0'=s^post12, (-tmp^post12+tmp^0 == 0 /\ length4^0-length4^post12 == 0 /\ tmp___08^0-tmp___08^post12 == 0 /\ -i5^post12+i5^0 == 0 /\ -s^post12+s^0 == 0), cost: 1
New rule:
l4 -> l5 : TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l2 : tmp___08^0'=tmp___08^post13, length4^0'=length4^post13, tmp^0'=tmp^post13, i5^0'=i5^post13, s^0'=s^post13, (0 == 0 /\ -s^post13+length4^post13 == 0 /\ s^post13-tmp^post13 == 0 /\ tmp___08^0-tmp___08^post13 == 0 /\ i5^post13 == 0), cost: 1
New rule:
l9 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l10 -> l9 : tmp___08^0'=tmp___08^post14, length4^0'=length4^post14, tmp^0'=tmp^post14, i5^0'=i5^post14, s^0'=s^post14, (-s^post14+s^0 == 0 /\ tmp___08^0-tmp___08^post14 == 0 /\ length4^0-length4^post14 == 0 /\ tmp^0-tmp^post14 == 0 /\ -i5^post14+i5^0 == 0), cost: 1
New rule:
l10 -> l9 : TRUE, cost: 1

Simplified rules
Start location: l10
  15: l0 -> l1 : length4^0-i5^0 <= 0, cost: 1
  16: l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1
  20: l1 -> l7 : TRUE, cost: 1
  17: l2 -> l0 : TRUE, cost: 1
  18: l3 -> l4 : TRUE, cost: 1
  24: l4 -> l5 : TRUE, cost: 1
  19: l5 -> l3 : TRUE, cost: 1
  22: l7 -> l8 : TRUE, cost: 1
  23: l7 -> l4 : TRUE, cost: 1
  21: l8 -> l1 : TRUE, cost: 1
  25: l9 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 1
  26: l10 -> l9 : TRUE, cost: 1


Eliminating location l9 by chaining:

Applied chaining
First rule:
l10 -> l9 : TRUE, cost: 1
Second rule:
l9 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 1
New rule:
l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 25 26

Eliminating location l8 by chaining:

Applied chaining
First rule:
l7 -> l8 : TRUE, cost: 1
Second rule:
l8 -> l1 : TRUE, cost: 1
New rule:
l7 -> l1 : TRUE, cost: 2

Applied deletion
Removed the following rules: 21 22

Eliminating location l5 by chaining:

Applied chaining
First rule:
l4 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l3 : TRUE, cost: 1
New rule:
l4 -> l3 : TRUE, cost: 2

Applied deletion
Removed the following rules: 19 24

Eliminating location l3 by chaining:

Applied chaining
First rule:
l4 -> l3 : TRUE, cost: 2
Second rule:
l3 -> l4 : TRUE, cost: 1
New rule:
l4 -> l4 : TRUE, cost: 3

Applied deletion
Removed the following rules: 18 29

Eliminated locations on linear paths
Start location: l10
  15: l0 -> l1 : length4^0-i5^0 <= 0, cost: 1
  16: l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1
  20: l1 -> l7 : TRUE, cost: 1
  17: l2 -> l0 : TRUE, cost: 1
  30: l4 -> l4 : TRUE, cost: 3
  23: l7 -> l4 : TRUE, cost: 1
  28: l7 -> l1 : TRUE, cost: 2
  27: l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2


Applied nonterm
Original rule:
l4 -> l4 : TRUE, cost: 3
New rule:
l4 -> [11] : n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_OeCefH.txt

Applied deletion
Removed the following rules: 30

Accelerated simple loops
Start location: l10
  15: l0 -> l1 : length4^0-i5^0 <= 0, cost: 1
  16: l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1
  20: l1 -> l7 : TRUE, cost: 1
  17: l2 -> l0 : TRUE, cost: 1
  31: l4 -> [11] : n >= 0, cost: NONTERM
  23: l7 -> l4 : TRUE, cost: 1
  28: l7 -> l1 : TRUE, cost: 2
  27: l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2


Applied chaining
First rule:
l7 -> l4 : TRUE, cost: 1
Second rule:
l4 -> [11] : n >= 0, cost: NONTERM
New rule:
l7 -> [11] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 31

Chained accelerated rules with incoming rules
Start location: l10
  15: l0 -> l1 : length4^0-i5^0 <= 0, cost: 1
  16: l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1
  20: l1 -> l7 : TRUE, cost: 1
  17: l2 -> l0 : TRUE, cost: 1
  23: l7 -> l4 : TRUE, cost: 1
  28: l7 -> l1 : TRUE, cost: 2
  32: l7 -> [11] : TRUE, cost: NONTERM
  27: l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l10
  15: l0 -> l1 : length4^0-i5^0 <= 0, cost: 1
  16: l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1
  20: l1 -> l7 : TRUE, cost: 1
  17: l2 -> l0 : TRUE, cost: 1
  28: l7 -> l1 : TRUE, cost: 2
  32: l7 -> [11] : TRUE, cost: NONTERM
  27: l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : length4^0-i5^0 <= 0, cost: 1
New rule:
l2 -> l1 : length4^0-i5^0 <= 0, cost: 2

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1
New rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 15 16 17

Eliminating location l7 by chaining:

Applied chaining
First rule:
l1 -> l7 : TRUE, cost: 1
Second rule:
l7 -> l1 : TRUE, cost: 2
New rule:
l1 -> l1 : TRUE, cost: 3

Applied chaining
First rule:
l1 -> l7 : TRUE, cost: 1
Second rule:
l7 -> [11] : TRUE, cost: NONTERM
New rule:
l1 -> [11] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 20 28 32

Eliminated locations on tree-shaped paths
Start location: l10
  35: l1 -> l1 : TRUE, cost: 3
  36: l1 -> [11] : TRUE, cost: NONTERM
  33: l2 -> l1 : length4^0-i5^0 <= 0, cost: 2
  34: l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 2
  27: l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2


Applied nonterm
Original rule:
l1 -> l1 : TRUE, cost: 3
New rule:
l1 -> [12] : n0 >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lLiOkk.txt

Applied deletion
Removed the following rules: 35

Applied acceleration
Original rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 2
New rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=i5^0+n1, (length4^0-i5^0-n1 >= 0 /\ -1+n1 >= 0), cost: 2*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PAAKIN.txt

Applied instantiation
Original rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=i5^0+n1, (length4^0-i5^0-n1 >= 0 /\ -1+n1 >= 0), cost: 2*n1
New rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, (0 >= 0 /\ -1+length4^0-i5^0 >= 0), cost: 2*length4^0-2*i5^0

Applied simplification
Original rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, (0 >= 0 /\ -1+length4^0-i5^0 >= 0), cost: 2*length4^0-2*i5^0
New rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, -1+length4^0-i5^0 >= 0, cost: 2*length4^0-2*i5^0

Applied deletion
Removed the following rules: 34

Accelerated simple loops
Start location: l10
  36: l1 -> [11] : TRUE, cost: NONTERM
  37: l1 -> [12] : n0 >= 0, cost: NONTERM
  33: l2 -> l1 : length4^0-i5^0 <= 0, cost: 2
  39: l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, -1+length4^0-i5^0 >= 0, cost: 2*length4^0-2*i5^0
  27: l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2


Applied chaining
First rule:
l2 -> l1 : length4^0-i5^0 <= 0, cost: 2
Second rule:
l1 -> [12] : n0 >= 0, cost: NONTERM
New rule:
l2 -> [12] : length4^0-i5^0 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 37

Applied chaining
First rule:
l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2
Second rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, -1+length4^0-i5^0 >= 0, cost: 2*length4^0-2*i5^0
New rule:
l10 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=tmp^post13, s^0'=tmp^post13, -1+tmp^post13 >= 0, cost: 2+2*tmp^post13

Applied deletion
Removed the following rules: 39

Chained accelerated rules with incoming rules
Start location: l10
  36: l1 -> [11] : TRUE, cost: NONTERM
  33: l2 -> l1 : length4^0-i5^0 <= 0, cost: 2
  40: l2 -> [12] : length4^0-i5^0 <= 0, cost: NONTERM
  27: l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2
  41: l10 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=tmp^post13, s^0'=tmp^post13, -1+tmp^post13 >= 0, cost: 2+2*tmp^post13


Eliminating location l1 by chaining:

Applied chaining
First rule:
l2 -> l1 : length4^0-i5^0 <= 0, cost: 2
Second rule:
l1 -> [11] : TRUE, cost: NONTERM
New rule:
l2 -> [11] : length4^0-i5^0 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 33 36

Eliminated locations on linear paths
Start location: l10
  40: l2 -> [12] : length4^0-i5^0 <= 0, cost: NONTERM
  42: l2 -> [11] : length4^0-i5^0 <= 0, cost: NONTERM
  27: l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2
  41: l10 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=tmp^post13, s^0'=tmp^post13, -1+tmp^post13 >= 0, cost: 2+2*tmp^post13


Eliminating location l2 by chaining:

Applied chaining
First rule:
l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2
Second rule:
l2 -> [12] : length4^0-i5^0 <= 0, cost: NONTERM
New rule:
l10 -> [12] : (0 == 0 /\ tmp^post13 <= 0), cost: NONTERM

Applied simplification
Original rule:
l10 -> [12] : (0 == 0 /\ tmp^post13 <= 0), cost: NONTERM
New rule:
l10 -> [12] : tmp^post13 <= 0, cost: NONTERM

Applied chaining
First rule:
l10 -> l2 : length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=0, s^0'=tmp^post13, 0 == 0, cost: 2
Second rule:
l2 -> [11] : length4^0-i5^0 <= 0, cost: NONTERM
New rule:
l10 -> [11] : (0 == 0 /\ tmp^post13 <= 0), cost: NONTERM

Applied simplification
Original rule:
l10 -> [11] : (0 == 0 /\ tmp^post13 <= 0), cost: NONTERM
New rule:
l10 -> [11] : tmp^post13 <= 0, cost: NONTERM

Applied chaining
First rule:
l10 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=tmp^post13, s^0'=tmp^post13, -1+tmp^post13 >= 0, cost: 2+2*tmp^post13
Second rule:
l2 -> [12] : length4^0-i5^0 <= 0, cost: NONTERM
New rule:
l10 -> [12] : (0 <= 0 /\ -1+tmp^post13 >= 0), cost: NONTERM

Applied simplification
Original rule:
l10 -> [12] : (0 <= 0 /\ -1+tmp^post13 >= 0), cost: NONTERM
New rule:
l10 -> [12] : -1+tmp^post13 >= 0, cost: NONTERM

Applied chaining
First rule:
l10 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=tmp^post13, tmp^0'=tmp^post13, i5^0'=tmp^post13, s^0'=tmp^post13, -1+tmp^post13 >= 0, cost: 2+2*tmp^post13
Second rule:
l2 -> [11] : length4^0-i5^0 <= 0, cost: NONTERM
New rule:
l10 -> [11] : (0 <= 0 /\ -1+tmp^post13 >= 0), cost: NONTERM

Applied simplification
Original rule:
l10 -> [11] : (0 <= 0 /\ -1+tmp^post13 >= 0), cost: NONTERM
New rule:
l10 -> [11] : -1+tmp^post13 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 27 40 41 42

Eliminated locations on tree-shaped paths
Start location: l10
  43: l10 -> [12] : tmp^post13 <= 0, cost: NONTERM
  44: l10 -> [11] : tmp^post13 <= 0, cost: NONTERM
  45: l10 -> [12] : -1+tmp^post13 >= 0, cost: NONTERM
  46: l10 -> [11] : -1+tmp^post13 >= 0, cost: NONTERM


Removed duplicate rules (ignoring updates)
Start location: l10
  44: l10 -> [11] : tmp^post13 <= 0, cost: NONTERM
  46: l10 -> [11] : -1+tmp^post13 >= 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 44 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  tmp^post13 <= 0
