NO

Initial ITS

Start location: l5
Program variables: __rho_1^0 __rho_2^0 p^0 start^0 x^0
   0: l0 -> l1 : __rho_1^0'=__rho_1^post1, __rho_2^0'=__rho_2^post1, p^0'=p^post1, start^0'=start^post1, x^0'=x^post1, (-x^post1+x^0 == 0 /\ -start^post1+start^0 == 0 /\ __rho_2^0 <= 0 /\ p^post1 == 0 /\ -__rho_2^post1+__rho_2^0 == 0 /\ -__rho_1^post1+__rho_1^0 == 0), cost: 1
   1: l0 -> l1 : __rho_1^0'=__rho_1^post2, __rho_2^0'=__rho_2^post2, p^0'=p^post2, start^0'=start^post2, x^0'=x^post2, (__rho_1^0-__rho_1^post2 == 0 /\ -__rho_2^post2+__rho_2^0 == 0 /\ 1-__rho_2^0 <= 0 /\ -1+p^post2 == 0 /\ x^0-x^post2 == 0 /\ start^0-start^post2 == 0), cost: 1
   2: l1 -> l0 : __rho_1^0'=__rho_1^post3, __rho_2^0'=__rho_2^post3, p^0'=p^post3, start^0'=start^post3, x^0'=x^post3, (0 == 0 /\ p^0-p^post3 == 0 /\ -start^post3+start^0 == 0 /\ -x^post3+x^0 == 0 /\ -__rho_1^post3+__rho_1^0 == 0), cost: 1
   3: l2 -> l3 : __rho_1^0'=__rho_1^post4, __rho_2^0'=__rho_2^post4, p^0'=p^post4, start^0'=start^post4, x^0'=x^post4, (__rho_1^0 <= 0 /\ -p^post4+p^0 == 0 /\ __rho_1^0-__rho_1^post4 == 0 /\ -__rho_2^post4+__rho_2^0 == 0 /\ 2-x^0+x^post4 == 0 /\ start^0-start^post4 == 0), cost: 1
   4: l2 -> l3 : __rho_1^0'=__rho_1^post5, __rho_2^0'=__rho_2^post5, p^0'=p^post5, start^0'=start^post5, x^0'=x^post5, (p^0-p^post5 == 0 /\ 1+x^post5-x^0 == 0 /\ -__rho_2^post5+__rho_2^0 == 0 /\ 1-__rho_1^0 <= 0 /\ -__rho_1^post5+__rho_1^0 == 0 /\ -start^post5+start^0 == 0), cost: 1
   5: l3 -> l1 : __rho_1^0'=__rho_1^post6, __rho_2^0'=__rho_2^post6, p^0'=p^post6, start^0'=start^post6, x^0'=x^post6, (-__rho_2^post6+__rho_2^0 == 0 /\ -p^post6+p^0 == 0 /\ -x^post6+x^0 == 0 /\ start^0-start^post6 == 0 /\ x^0 <= 0 /\ __rho_1^0-__rho_1^post6 == 0), cost: 1
   6: l3 -> l2 : __rho_1^0'=__rho_1^post7, __rho_2^0'=__rho_2^post7, p^0'=p^post7, start^0'=start^post7, x^0'=x^post7, (0 == 0 /\ start^0-start^post7 == 0 /\ p^0-p^post7 == 0 /\ -x^post7+x^0 == 0 /\ 1-x^0 <= 0 /\ -__rho_2^post7+__rho_2^0 == 0), cost: 1
   7: l4 -> l3 : __rho_1^0'=__rho_1^post8, __rho_2^0'=__rho_2^post8, p^0'=p^post8, start^0'=start^post8, x^0'=x^post8, (__rho_2^0-__rho_2^post8 == 0 /\ p^post8 == 0 /\ __rho_1^0-__rho_1^post8 == 0 /\ x^0-x^post8 == 0 /\ start^post8 == 0 /\ -1+start^2 == 0 /\ start^1 == 0), cost: 1
   8: l5 -> l4 : __rho_1^0'=__rho_1^post9, __rho_2^0'=__rho_2^post9, p^0'=p^post9, start^0'=start^post9, x^0'=x^post9, (-start^post9+start^0 == 0 /\ -__rho_1^post9+__rho_1^0 == 0 /\ -x^post9+x^0 == 0 /\ p^0-p^post9 == 0 /\ -__rho_2^post9+__rho_2^0 == 0), cost: 1

Chained Linear Paths

Start location: l5
Program variables: __rho_1^0 __rho_2^0 p^0 start^0 x^0
   0: l0 -> l1 : __rho_1^0'=__rho_1^post1, __rho_2^0'=__rho_2^post1, p^0'=p^post1, start^0'=start^post1, x^0'=x^post1, (-x^post1+x^0 == 0 /\ -start^post1+start^0 == 0 /\ __rho_2^0 <= 0 /\ p^post1 == 0 /\ -__rho_2^post1+__rho_2^0 == 0 /\ -__rho_1^post1+__rho_1^0 == 0), cost: 1
   1: l0 -> l1 : __rho_1^0'=__rho_1^post2, __rho_2^0'=__rho_2^post2, p^0'=p^post2, start^0'=start^post2, x^0'=x^post2, (__rho_1^0-__rho_1^post2 == 0 /\ -__rho_2^post2+__rho_2^0 == 0 /\ 1-__rho_2^0 <= 0 /\ -1+p^post2 == 0 /\ x^0-x^post2 == 0 /\ start^0-start^post2 == 0), cost: 1
   2: l1 -> l0 : __rho_1^0'=__rho_1^post3, __rho_2^0'=__rho_2^post3, p^0'=p^post3, start^0'=start^post3, x^0'=x^post3, (0 == 0 /\ p^0-p^post3 == 0 /\ -start^post3+start^0 == 0 /\ -x^post3+x^0 == 0 /\ -__rho_1^post3+__rho_1^0 == 0), cost: 1
   3: l2 -> l3 : __rho_1^0'=__rho_1^post4, __rho_2^0'=__rho_2^post4, p^0'=p^post4, start^0'=start^post4, x^0'=x^post4, (__rho_1^0 <= 0 /\ -p^post4+p^0 == 0 /\ __rho_1^0-__rho_1^post4 == 0 /\ -__rho_2^post4+__rho_2^0 == 0 /\ 2-x^0+x^post4 == 0 /\ start^0-start^post4 == 0), cost: 1
   4: l2 -> l3 : __rho_1^0'=__rho_1^post5, __rho_2^0'=__rho_2^post5, p^0'=p^post5, start^0'=start^post5, x^0'=x^post5, (p^0-p^post5 == 0 /\ 1+x^post5-x^0 == 0 /\ -__rho_2^post5+__rho_2^0 == 0 /\ 1-__rho_1^0 <= 0 /\ -__rho_1^post5+__rho_1^0 == 0 /\ -start^post5+start^0 == 0), cost: 1
   5: l3 -> l1 : __rho_1^0'=__rho_1^post6, __rho_2^0'=__rho_2^post6, p^0'=p^post6, start^0'=start^post6, x^0'=x^post6, (-__rho_2^post6+__rho_2^0 == 0 /\ -p^post6+p^0 == 0 /\ -x^post6+x^0 == 0 /\ start^0-start^post6 == 0 /\ x^0 <= 0 /\ __rho_1^0-__rho_1^post6 == 0), cost: 1
   6: l3 -> l2 : __rho_1^0'=__rho_1^post7, __rho_2^0'=__rho_2^post7, p^0'=p^post7, start^0'=start^post7, x^0'=x^post7, (0 == 0 /\ start^0-start^post7 == 0 /\ p^0-p^post7 == 0 /\ -x^post7+x^0 == 0 /\ 1-x^0 <= 0 /\ -__rho_2^post7+__rho_2^0 == 0), cost: 1
   9: l5 -> l3 : __rho_1^0'=__rho_1^post8, __rho_2^0'=__rho_2^post8, p^0'=p^post8, start^0'=start^post8, x^0'=x^post8, (-start^post9+start^0 == 0 /\ -__rho_1^post9+__rho_1^0 == 0 /\ -x^post9+x^0 == 0 /\ p^0-p^post9 == 0 /\ p^post8 == 0 /\ x^post9-x^post8 == 0 /\ __rho_2^post9-__rho_2^post8 == 0 /\ start^post8 == 0 /\ -__rho_2^post9+__rho_2^0 == 0 /\ -1+start^2 == 0 /\ __rho_1^post9-__rho_1^post8 == 0 /\ start^1 == 0), cost: 1

	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l5 -> l4 : __rho_1^0'=__rho_1^post9, __rho_2^0'=__rho_2^post9, p^0'=p^post9, start^0'=start^post9, x^0'=x^post9, (-start^post9+start^0 == 0 /\ -__rho_1^post9+__rho_1^0 == 0 /\ -x^post9+x^0 == 0 /\ p^0-p^post9 == 0 /\ -__rho_2^post9+__rho_2^0 == 0), cost: 1
	Second rule:
	l4 -> l3 : __rho_1^0'=__rho_1^post8, __rho_2^0'=__rho_2^post8, p^0'=p^post8, start^0'=start^post8, x^0'=x^post8, (__rho_2^0-__rho_2^post8 == 0 /\ p^post8 == 0 /\ __rho_1^0-__rho_1^post8 == 0 /\ x^0-x^post8 == 0 /\ start^post8 == 0 /\ -1+start^2 == 0 /\ start^1 == 0), cost: 1
	New rule:
	l5 -> l3 : __rho_1^0'=__rho_1^post8, __rho_2^0'=__rho_2^post8, p^0'=p^post8, start^0'=start^post8, x^0'=x^post8, (-start^post9+start^0 == 0 /\ -__rho_1^post9+__rho_1^0 == 0 /\ -x^post9+x^0 == 0 /\ p^0-p^post9 == 0 /\ p^post8 == 0 /\ x^post9-x^post8 == 0 /\ __rho_2^post9-__rho_2^post8 == 0 /\ start^post8 == 0 /\ -__rho_2^post9+__rho_2^0 == 0 /\ -1+start^2 == 0 /\ __rho_1^post9-__rho_1^post8 == 0 /\ start^1 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 8

Simplified Transitions

Start location: l5
Program variables: __rho_1^0 __rho_2^0 p^0 start^0 x^0
  10: l0 -> l1 : p^0'=0, __rho_2^0 <= 0, cost: 1
  11: l0 -> l1 : p^0'=1, 1-__rho_2^0 <= 0, cost: 1
  12: l1 -> l0 : __rho_2^0'=__rho_2^post3, T, cost: 1
  13: l2 -> l3 : x^0'=-2+x^0, __rho_1^0 <= 0, cost: 1
  14: l2 -> l3 : x^0'=-1+x^0, 1-__rho_1^0 <= 0, cost: 1
  15: l3 -> l1 : x^0 <= 0, cost: 1
  16: l3 -> l2 : __rho_1^0'=__rho_1^post7, 1-x^0 <= 0, cost: 1
  17: l5 -> l3 : p^0'=0, start^0'=0, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : __rho_1^0'=__rho_1^post1, __rho_2^0'=__rho_2^post1, p^0'=p^post1, start^0'=start^post1, x^0'=x^post1, (-x^post1+x^0 == 0 /\ -start^post1+start^0 == 0 /\ __rho_2^0 <= 0 /\ p^post1 == 0 /\ -__rho_2^post1+__rho_2^0 == 0 /\ -__rho_1^post1+__rho_1^0 == 0), cost: 1
	New rule:
	l0 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=0, start^0'=start^0, x^0'=x^0, (0 == 0 /\ __rho_2^0 <= 0), cost: 1
	
		propagated equality x^post1 = x^0
		
		propagated equality start^post1 = start^0
		
		propagated equality p^post1 = 0
		
		propagated equality __rho_2^post1 = __rho_2^0
		
		propagated equality __rho_1^post1 = __rho_1^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=0, start^0'=start^0, x^0'=x^0, (0 == 0 /\ __rho_2^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=0, start^0'=start^0, x^0'=x^0, __rho_2^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=0, start^0'=start^0, x^0'=x^0, __rho_2^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : p^0'=0, __rho_2^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l1 : __rho_1^0'=__rho_1^post2, __rho_2^0'=__rho_2^post2, p^0'=p^post2, start^0'=start^post2, x^0'=x^post2, (__rho_1^0-__rho_1^post2 == 0 /\ -__rho_2^post2+__rho_2^0 == 0 /\ 1-__rho_2^0 <= 0 /\ -1+p^post2 == 0 /\ x^0-x^post2 == 0 /\ start^0-start^post2 == 0), cost: 1
	New rule:
	l0 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=1, start^0'=start^0, x^0'=x^0, (0 == 0 /\ 1-__rho_2^0 <= 0), cost: 1
	
		propagated equality __rho_1^post2 = __rho_1^0
		
		propagated equality __rho_2^post2 = __rho_2^0
		
		propagated equality p^post2 = 1
		
		propagated equality x^post2 = x^0
		
		propagated equality start^post2 = start^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=1, start^0'=start^0, x^0'=x^0, (0 == 0 /\ 1-__rho_2^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=1, start^0'=start^0, x^0'=x^0, 1-__rho_2^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=1, start^0'=start^0, x^0'=x^0, 1-__rho_2^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : p^0'=1, 1-__rho_2^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l0 : __rho_1^0'=__rho_1^post3, __rho_2^0'=__rho_2^post3, p^0'=p^post3, start^0'=start^post3, x^0'=x^post3, (0 == 0 /\ p^0-p^post3 == 0 /\ -start^post3+start^0 == 0 /\ -x^post3+x^0 == 0 /\ -__rho_1^post3+__rho_1^0 == 0), cost: 1
	New rule:
	l1 -> l0 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^post3, p^0'=p^0, start^0'=start^0, x^0'=x^0, 0 == 0, cost: 1
	
		propagated equality p^post3 = p^0
		
		propagated equality start^post3 = start^0
		
		propagated equality x^post3 = x^0
		
		propagated equality __rho_1^post3 = __rho_1^0
		
	Simplified Guard

	Original rule:
	l1 -> l0 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^post3, p^0'=p^0, start^0'=start^0, x^0'=x^0, 0 == 0, cost: 1
	New rule:
	l1 -> l0 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^post3, p^0'=p^0, start^0'=start^0, x^0'=x^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l0 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^post3, p^0'=p^0, start^0'=start^0, x^0'=x^0, T, cost: 1
	New rule:
	l1 -> l0 : __rho_2^0'=__rho_2^post3, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : __rho_1^0'=__rho_1^post4, __rho_2^0'=__rho_2^post4, p^0'=p^post4, start^0'=start^post4, x^0'=x^post4, (__rho_1^0 <= 0 /\ -p^post4+p^0 == 0 /\ __rho_1^0-__rho_1^post4 == 0 /\ -__rho_2^post4+__rho_2^0 == 0 /\ 2-x^0+x^post4 == 0 /\ start^0-start^post4 == 0), cost: 1
	New rule:
	l2 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=-2+x^0, (0 == 0 /\ __rho_1^0 <= 0), cost: 1
	
		propagated equality p^post4 = p^0
		
		propagated equality __rho_1^post4 = __rho_1^0
		
		propagated equality __rho_2^post4 = __rho_2^0
		
		propagated equality x^post4 = -2+x^0
		
		propagated equality start^post4 = start^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=-2+x^0, (0 == 0 /\ __rho_1^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=-2+x^0, __rho_1^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=-2+x^0, __rho_1^0 <= 0, cost: 1
	New rule:
	l2 -> l3 : x^0'=-2+x^0, __rho_1^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : __rho_1^0'=__rho_1^post5, __rho_2^0'=__rho_2^post5, p^0'=p^post5, start^0'=start^post5, x^0'=x^post5, (p^0-p^post5 == 0 /\ 1+x^post5-x^0 == 0 /\ -__rho_2^post5+__rho_2^0 == 0 /\ 1-__rho_1^0 <= 0 /\ -__rho_1^post5+__rho_1^0 == 0 /\ -start^post5+start^0 == 0), cost: 1
	New rule:
	l2 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=-1+x^0, (0 == 0 /\ 1-__rho_1^0 <= 0), cost: 1
	
		propagated equality p^post5 = p^0
		
		propagated equality x^post5 = -1+x^0
		
		propagated equality __rho_2^post5 = __rho_2^0
		
		propagated equality __rho_1^post5 = __rho_1^0
		
		propagated equality start^post5 = start^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=-1+x^0, (0 == 0 /\ 1-__rho_1^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=-1+x^0, 1-__rho_1^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=-1+x^0, 1-__rho_1^0 <= 0, cost: 1
	New rule:
	l2 -> l3 : x^0'=-1+x^0, 1-__rho_1^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l1 : __rho_1^0'=__rho_1^post6, __rho_2^0'=__rho_2^post6, p^0'=p^post6, start^0'=start^post6, x^0'=x^post6, (-__rho_2^post6+__rho_2^0 == 0 /\ -p^post6+p^0 == 0 /\ -x^post6+x^0 == 0 /\ start^0-start^post6 == 0 /\ x^0 <= 0 /\ __rho_1^0-__rho_1^post6 == 0), cost: 1
	New rule:
	l3 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=x^0, (0 == 0 /\ x^0 <= 0), cost: 1
	
		propagated equality __rho_2^post6 = __rho_2^0
		
		propagated equality p^post6 = p^0
		
		propagated equality x^post6 = x^0
		
		propagated equality start^post6 = start^0
		
		propagated equality __rho_1^post6 = __rho_1^0
		
	Simplified Guard

	Original rule:
	l3 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=x^0, (0 == 0 /\ x^0 <= 0), cost: 1
	New rule:
	l3 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=x^0, x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l1 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=x^0, x^0 <= 0, cost: 1
	New rule:
	l3 -> l1 : x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l2 : __rho_1^0'=__rho_1^post7, __rho_2^0'=__rho_2^post7, p^0'=p^post7, start^0'=start^post7, x^0'=x^post7, (0 == 0 /\ start^0-start^post7 == 0 /\ p^0-p^post7 == 0 /\ -x^post7+x^0 == 0 /\ 1-x^0 <= 0 /\ -__rho_2^post7+__rho_2^0 == 0), cost: 1
	New rule:
	l3 -> l2 : __rho_1^0'=__rho_1^post7, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=x^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	
		propagated equality start^post7 = start^0
		
		propagated equality p^post7 = p^0
		
		propagated equality x^post7 = x^0
		
		propagated equality __rho_2^post7 = __rho_2^0
		
	Simplified Guard

	Original rule:
	l3 -> l2 : __rho_1^0'=__rho_1^post7, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=x^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	New rule:
	l3 -> l2 : __rho_1^0'=__rho_1^post7, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=x^0, 1-x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l2 : __rho_1^0'=__rho_1^post7, __rho_2^0'=__rho_2^0, p^0'=p^0, start^0'=start^0, x^0'=x^0, 1-x^0 <= 0, cost: 1
	New rule:
	l3 -> l2 : __rho_1^0'=__rho_1^post7, 1-x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l3 : __rho_1^0'=__rho_1^post8, __rho_2^0'=__rho_2^post8, p^0'=p^post8, start^0'=start^post8, x^0'=x^post8, (-start^post9+start^0 == 0 /\ -__rho_1^post9+__rho_1^0 == 0 /\ -x^post9+x^0 == 0 /\ p^0-p^post9 == 0 /\ p^post8 == 0 /\ x^post9-x^post8 == 0 /\ __rho_2^post9-__rho_2^post8 == 0 /\ start^post8 == 0 /\ -__rho_2^post9+__rho_2^0 == 0 /\ -1+start^2 == 0 /\ __rho_1^post9-__rho_1^post8 == 0 /\ start^1 == 0), cost: 1
	New rule:
	l5 -> l3 : __rho_1^0'=__rho_1^post9, __rho_2^0'=__rho_2^post9, p^0'=0, start^0'=0, x^0'=x^post9, (0 == 0 /\ -start^post9+start^0 == 0 /\ -__rho_1^post9+__rho_1^0 == 0 /\ -x^post9+x^0 == 0 /\ p^0-p^post9 == 0 /\ -__rho_2^post9+__rho_2^0 == 0 /\ -1+start^2 == 0 /\ start^1 == 0), cost: 1
	
		propagated equality p^post8 = 0
		
		propagated equality x^post8 = x^post9
		
		propagated equality __rho_2^post8 = __rho_2^post9
		
		propagated equality start^post8 = 0
		
		propagated equality __rho_1^post8 = __rho_1^post9
		
	Propagated Equalities

	Original rule:
	l5 -> l3 : __rho_1^0'=__rho_1^post9, __rho_2^0'=__rho_2^post9, p^0'=0, start^0'=0, x^0'=x^post9, (0 == 0 /\ -start^post9+start^0 == 0 /\ -__rho_1^post9+__rho_1^0 == 0 /\ -x^post9+x^0 == 0 /\ p^0-p^post9 == 0 /\ -__rho_2^post9+__rho_2^0 == 0 /\ -1+start^2 == 0 /\ start^1 == 0), cost: 1
	New rule:
	l5 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=0, start^0'=0, x^0'=x^0, 0 == 0, cost: 1
	
		propagated equality start^post9 = start^0
		
		propagated equality __rho_1^post9 = __rho_1^0
		
		propagated equality x^post9 = x^0
		
		propagated equality p^post9 = p^0
		
		propagated equality __rho_2^post9 = __rho_2^0
		
		propagated equality start^2 = 1
		
		propagated equality start^1 = 0
		
	Simplified Guard

	Original rule:
	l5 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=0, start^0'=0, x^0'=x^0, 0 == 0, cost: 1
	New rule:
	l5 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=0, start^0'=0, x^0'=x^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l3 : __rho_1^0'=__rho_1^0, __rho_2^0'=__rho_2^0, p^0'=0, start^0'=0, x^0'=x^0, T, cost: 1
	New rule:
	l5 -> l3 : p^0'=0, start^0'=0, T, cost: 1

Step with 17

	Trace

	17[T]
	
	Blocked

	[{}, {}]

Step with 15

	Trace

	17[T], 15[(x^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 12

	Trace

	17[T], 15[(x^0 <= 0)], 12[T]
	
	Blocked

	[{}, {}, {}, {}]

Step with 10

	Trace

	17[T], 15[(x^0 <= 0)], 12[T], 10[(__rho_2^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Nonterm

Start location: l5
Program variables: __rho_1^0 __rho_2^0 p^0 start^0 x^0
  10: l0 -> l1 : p^0'=0, __rho_2^0 <= 0, cost: 1
  11: l0 -> l1 : p^0'=1, 1-__rho_2^0 <= 0, cost: 1
  12: l1 -> l0 : __rho_2^0'=__rho_2^post3, T, cost: 1
  18: l1 -> LoAT_sink : (-1+n >= 0 /\ -__rho_2^post31 >= 0), cost: NONTERM
  13: l2 -> l3 : x^0'=-2+x^0, __rho_1^0 <= 0, cost: 1
  14: l2 -> l3 : x^0'=-1+x^0, 1-__rho_1^0 <= 0, cost: 1
  15: l3 -> l1 : x^0 <= 0, cost: 1
  16: l3 -> l2 : __rho_1^0'=__rho_1^post7, 1-x^0 <= 0, cost: 1
  17: l5 -> l3 : p^0'=0, start^0'=0, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l1 -> l1 : __rho_2^0'=__rho_2^post31, p^0'=0, __rho_2^post31 <= 0, cost: 1
	New rule:
	l1 -> LoAT_sink : (-1+n >= 0 /\ -__rho_2^post31 >= 0), cost: NONTERM

		-__rho_2^post31 >= 0 [0]: monotonic increase yields -__rho_2^post31 >= 0
		
		Replacement map: {-__rho_2^post31 >= 0 -> -__rho_2^post31 >= 0}

Step with 18

	Trace

	17[T], 15[(x^0 <= 0)], 18[(-1+n >= 0 /\ -__rho_2^post31 >= 0)]
	
	Blocked

	[{}, {}, {}, {18[T]}]

Refute

	Counterexample

	[ __rho_1^0=0 __rho_2^0=0 p^0=0 start^0=0 x^0=0 ] 17 [ __rho_1^0=0 __rho_2^0=0 p^0=0 start^0=0 x^0=0 ] 15 [ __rho_1^0=0 __rho_2^0=0 p^0=p^0 start^0=start^0 x^0=0 ] 18
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
