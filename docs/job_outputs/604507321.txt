unknown

Initial ITS

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
   0: l0 -> l1 : bitchanged48^0'=bitchanged48^post1, c^0'=c^post1, codeword50^0'=codeword50^post1, d^0'=d^post1, ddim53^0'=ddim53^post1, dotp14^0'=dotp14^post1, f36^0'=f36^post1, g51^0'=g51^post1, h031^0'=h031^post1, h132^0'=h132^post1, i13^0'=i13^post1, i19^0'=i19^post1, i25^0'=i25^post1, i37^0'=i37^post1, i61^0'=i61^post1, j20^0'=j20^post1, j26^0'=j26^post1, j55^0'=j55^post1, j62^0'=j62^post1, k63^0'=k63^post1, m64^0'=m64^post1, mask47^0'=mask47^post1, n35^0'=n35^post1, n45^0'=n45^post1, n65^0'=n65^post1, numbasis49^0'=numbasis49^post1, p66^0'=p66^post1, ret_codebook57^0'=ret_codebook57^post1, ret_latsynth38^0'=ret_latsynth38^post1, ret_mac15^0'=ret_mac15^post1, sqr11^0'=sqr11^post1, sum027^0'=sum027^post1, sum128^0'=sum128^post1, sum21^0'=sum21^post1, t44^0'=t44^post1, theta54^0'=theta54^post1, tmp^0'=tmp^post1, tmp___0^0'=tmp___0^post1, tmpmask56^0'=tmpmask56^post1, x029^0'=x029^post1, x130^0'=x130^post1, x43^0'=x43^post1, (-x130^post1+x130^0 == 0 /\ sum21^0-sum21^post1 == 0 /\ -n35^post1+n35^0 == 0 /\ -i25^post1+i25^0 == 0 /\ -i37^post1+i37^0 == 0 /\ ret_codebook57^0-ret_codebook57^post1 == 0 /\ x029^0-x029^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ -tmpmask56^post1+tmpmask56^0 == 0 /\ -i13^post1+i13^0 == 0 /\ -n45^post1+n45^0 == 0 /\ h031^0-h031^post1 == 0 /\ -h132^post1+h132^0 == 0 /\ mask47^0-mask47^post1 == 0 /\ g51^0-g51^post1 == 0 /\ -t44^post1+t44^0 == 0 /\ m64^0-m64^post1 == 0 /\ -theta54^post1+theta54^0 == 0 /\ -sum128^post1+sum128^0 == 0 /\ -j26^post1+j26^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post1 == 0 /\ -f36^post1+f36^0 == 0 /\ ddim53^0-ddim53^post1 == 0 /\ -codeword50^post1+codeword50^0 == 0 /\ -bitchanged48^post1+bitchanged48^0 == 0 /\ -dotp14^post1+dotp14^0 == 0 /\ -p66^post1+p66^0 == 0 /\ j55^0-j55^post1 == 0 /\ -d^post1+d^0 == 0 /\ -ret_mac15^post1+ret_mac15^0 == 0 /\ sqr11^0-sqr11^post1 == 0 /\ i19^0-i19^post1 == 0 /\ j62^0-j62^post1 == 0 /\ -numbasis49^post1+numbasis49^0 == 0 /\ i61^0-i61^post1 == 0 /\ n65^0-n65^post1 == 0 /\ tmp___0^0-tmp___0^post1 == 0 /\ c^0-c^post1 == 0 /\ -j20^post1+j20^0 == 0 /\ -sum027^post1+sum027^0 == 0 /\ -k63^post1+k63^0 == 0 /\ -x43^post1+x43^0 == 0), cost: 1
  19: l1 -> l4 : bitchanged48^0'=bitchanged48^post20, c^0'=c^post20, codeword50^0'=codeword50^post20, d^0'=d^post20, ddim53^0'=ddim53^post20, dotp14^0'=dotp14^post20, f36^0'=f36^post20, g51^0'=g51^post20, h031^0'=h031^post20, h132^0'=h132^post20, i13^0'=i13^post20, i19^0'=i19^post20, i25^0'=i25^post20, i37^0'=i37^post20, i61^0'=i61^post20, j20^0'=j20^post20, j26^0'=j26^post20, j55^0'=j55^post20, j62^0'=j62^post20, k63^0'=k63^post20, m64^0'=m64^post20, mask47^0'=mask47^post20, n35^0'=n35^post20, n45^0'=n45^post20, n65^0'=n65^post20, numbasis49^0'=numbasis49^post20, p66^0'=p66^post20, ret_codebook57^0'=ret_codebook57^post20, ret_latsynth38^0'=ret_latsynth38^post20, ret_mac15^0'=ret_mac15^post20, sqr11^0'=sqr11^post20, sum027^0'=sum027^post20, sum128^0'=sum128^post20, sum21^0'=sum21^post20, t44^0'=t44^post20, theta54^0'=theta54^post20, tmp^0'=tmp^post20, tmp___0^0'=tmp___0^post20, tmpmask56^0'=tmpmask56^post20, x029^0'=x029^post20, x130^0'=x130^post20, x43^0'=x43^post20, (0 == 0 /\ -i61^post20+i61^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ numbasis49^0-numbasis49^post20 == 0 /\ x43^0-x43^post20 == 0 /\ 100-j26^0 <= 0 /\ -d^post20+d^0 == 0 /\ sum128^0-sum128^post20 == 0 /\ -dotp14^post20+dotp14^0 == 0 /\ -bitchanged48^post20+bitchanged48^0 == 0 /\ theta54^0-theta54^post20 == 0 /\ -codeword50^post20+codeword50^0 == 0 /\ 2-n35^post20+i37^post20 == 0 /\ -g51^post20+g51^0 == 0 /\ sum027^0-sum027^post20 == 0 /\ -i19^post20+i19^0 == 0 /\ ret_mac15^0-ret_mac15^post20 == 0 /\ ddim53^0-ddim53^post20 == 0 /\ -n45^post20+n45^0 == 0 /\ k63^0-k63^post20 == 0 /\ -j62^post20+j62^0 == 0 /\ h132^0-h132^post20 == 0 /\ ret_latsynth38^0-ret_latsynth38^post20 == 0 /\ -100+n35^post20 == 0 /\ f36^1-d^0 == 0 /\ m64^0-m64^post20 == 0 /\ c^0-c^post20 == 0 /\ -ret_codebook57^post20+ret_codebook57^0 == 0 /\ -sqr11^post20+sqr11^0 == 0 /\ -i13^post20+i13^0 == 0 /\ -h031^post20+h031^0 == 0 /\ x029^0-x029^post20 == 0 /\ -tmpmask56^post20+tmpmask56^0 == 0 /\ -sum21^post20+sum21^0 == 0 /\ -tmp___0^post20+tmp___0^0 == 0 /\ -mask47^post20+mask47^0 == 0 /\ -j55^post20+j55^0 == 0 /\ -p66^post20+p66^0 == 0 /\ -n65^post20+n65^0 == 0 /\ -x130^post20+x130^0 == 0 /\ j26^0-j26^post20 == 0 /\ i25^0-i25^post20 == 0 /\ t44^0-t44^post20 == 0 /\ -j20^post20+j20^0 == 0), cost: 1
  20: l1 -> l2 : bitchanged48^0'=bitchanged48^post21, c^0'=c^post21, codeword50^0'=codeword50^post21, d^0'=d^post21, ddim53^0'=ddim53^post21, dotp14^0'=dotp14^post21, f36^0'=f36^post21, g51^0'=g51^post21, h031^0'=h031^post21, h132^0'=h132^post21, i13^0'=i13^post21, i19^0'=i19^post21, i25^0'=i25^post21, i37^0'=i37^post21, i61^0'=i61^post21, j20^0'=j20^post21, j26^0'=j26^post21, j55^0'=j55^post21, j62^0'=j62^post21, k63^0'=k63^post21, m64^0'=m64^post21, mask47^0'=mask47^post21, n35^0'=n35^post21, n45^0'=n45^post21, n65^0'=n65^post21, numbasis49^0'=numbasis49^post21, p66^0'=p66^post21, ret_codebook57^0'=ret_codebook57^post21, ret_latsynth38^0'=ret_latsynth38^post21, ret_mac15^0'=ret_mac15^post21, sqr11^0'=sqr11^post21, sum027^0'=sum027^post21, sum128^0'=sum128^post21, sum21^0'=sum21^post21, t44^0'=t44^post21, theta54^0'=theta54^post21, tmp^0'=tmp^post21, tmp___0^0'=tmp___0^post21, tmpmask56^0'=tmpmask56^post21, x029^0'=x029^post21, x130^0'=x130^post21, x43^0'=x43^post21, (0 == 0 /\ bitchanged48^0-bitchanged48^post21 == 0 /\ -x43^post21+x43^0 == 0 /\ k63^0-k63^post21 == 0 /\ -x130^post21+x130^0 == 0 /\ sqr11^0-sqr11^post21 == 0 /\ -i19^post21+i19^0 == 0 /\ m64^0-m64^post21 == 0 /\ -h031^post21+h031^0 == 0 /\ -g51^post21+g51^0 == 0 /\ sum128^post21 == 0 /\ i13^0-i13^post21 == 0 /\ -99+j26^0 <= 0 /\ t44^0-t44^post21 == 0 /\ j55^0-j55^post21 == 0 /\ -j20^post21+j20^0 == 0 /\ h132^0-h132^post21 == 0 /\ -c^post21+c^0 == 0 /\ f36^0-f36^post21 == 0 /\ -dotp14^post21+dotp14^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post21 == 0 /\ -ret_mac15^post21+ret_mac15^0 == 0 /\ sum21^0-sum21^post21 == 0 /\ tmp___0^0-tmp___0^post21 == 0 /\ -tmpmask56^post21+tmpmask56^0 == 0 /\ -mask47^post21+mask47^0 == 0 /\ i25^post21 == 0 /\ -i37^post21+i37^0 == 0 /\ -n65^post21+n65^0 == 0 /\ -n45^post21+n45^0 == 0 /\ -i61^post21+i61^0 == 0 /\ j26^0-j26^post21 == 0 /\ -p66^post21+p66^0 == 0 /\ -ret_codebook57^post21+ret_codebook57^0 == 0 /\ d^0-d^post21 == 0 /\ -ddim53^post21+ddim53^0 == 0 /\ n35^0-n35^post21 == 0 /\ sum027^post21 == 0 /\ numbasis49^0-numbasis49^post21 == 0 /\ -j62^post21+j62^0 == 0 /\ -codeword50^post21+codeword50^0 == 0 /\ -theta54^post21+theta54^0 == 0 /\ tmp^0-tmp^post21 == 0), cost: 1
   1: l2 -> l3 : bitchanged48^0'=bitchanged48^post2, c^0'=c^post2, codeword50^0'=codeword50^post2, d^0'=d^post2, ddim53^0'=ddim53^post2, dotp14^0'=dotp14^post2, f36^0'=f36^post2, g51^0'=g51^post2, h031^0'=h031^post2, h132^0'=h132^post2, i13^0'=i13^post2, i19^0'=i19^post2, i25^0'=i25^post2, i37^0'=i37^post2, i61^0'=i61^post2, j20^0'=j20^post2, j26^0'=j26^post2, j55^0'=j55^post2, j62^0'=j62^post2, k63^0'=k63^post2, m64^0'=m64^post2, mask47^0'=mask47^post2, n35^0'=n35^post2, n45^0'=n45^post2, n65^0'=n65^post2, numbasis49^0'=numbasis49^post2, p66^0'=p66^post2, ret_codebook57^0'=ret_codebook57^post2, ret_latsynth38^0'=ret_latsynth38^post2, ret_mac15^0'=ret_mac15^post2, sqr11^0'=sqr11^post2, sum027^0'=sum027^post2, sum128^0'=sum128^post2, sum21^0'=sum21^post2, t44^0'=t44^post2, theta54^0'=theta54^post2, tmp^0'=tmp^post2, tmp___0^0'=tmp___0^post2, tmpmask56^0'=tmpmask56^post2, x029^0'=x029^post2, x130^0'=x130^post2, x43^0'=x43^post2, (-i61^post2+i61^0 == 0 /\ d^0-d^post2 == 0 /\ ret_latsynth38^0-ret_latsynth38^post2 == 0 /\ n35^0-n35^post2 == 0 /\ -sum128^post2+sum128^0 == 0 /\ -sum21^post2+sum21^0 == 0 /\ -theta54^post2+theta54^0 == 0 /\ h132^0-h132^post2 == 0 /\ -codeword50^post2+codeword50^0 == 0 /\ -ddim53^post2+ddim53^0 == 0 /\ t44^0-t44^post2 == 0 /\ -n65^post2+n65^0 == 0 /\ -h031^post2+h031^0 == 0 /\ -i13^post2+i13^0 == 0 /\ bitchanged48^0-bitchanged48^post2 == 0 /\ k63^0-k63^post2 == 0 /\ -j62^post2+j62^0 == 0 /\ -x130^post2+x130^0 == 0 /\ m64^0-m64^post2 == 0 /\ ret_mac15^0-ret_mac15^post2 == 0 /\ i37^0-i37^post2 == 0 /\ x029^0-x029^post2 == 0 /\ i25^0-i25^post2 == 0 /\ f36^0-f36^post2 == 0 /\ sum027^0-sum027^post2 == 0 /\ -n45^post2+n45^0 == 0 /\ numbasis49^0-numbasis49^post2 == 0 /\ -mask47^post2+mask47^0 == 0 /\ -dotp14^post2+dotp14^0 == 0 /\ -c^post2+c^0 == 0 /\ -j55^post2+j55^0 == 0 /\ tmp^0-tmp^post2 == 0 /\ -sqr11^post2+sqr11^0 == 0 /\ -ret_codebook57^post2+ret_codebook57^0 == 0 /\ -i19^post2+i19^0 == 0 /\ j26^0-j26^post2 == 0 /\ -tmp___0^post2+tmp___0^0 == 0 /\ p66^0-p66^post2 == 0 /\ -tmpmask56^post2+tmpmask56^0 == 0 /\ -x43^post2+x43^0 == 0 /\ g51^0-g51^post2 == 0 /\ -j20^post2+j20^0 == 0), cost: 1
  17: l3 -> l0 : bitchanged48^0'=bitchanged48^post18, c^0'=c^post18, codeword50^0'=codeword50^post18, d^0'=d^post18, ddim53^0'=ddim53^post18, dotp14^0'=dotp14^post18, f36^0'=f36^post18, g51^0'=g51^post18, h031^0'=h031^post18, h132^0'=h132^post18, i13^0'=i13^post18, i19^0'=i19^post18, i25^0'=i25^post18, i37^0'=i37^post18, i61^0'=i61^post18, j20^0'=j20^post18, j26^0'=j26^post18, j55^0'=j55^post18, j62^0'=j62^post18, k63^0'=k63^post18, m64^0'=m64^post18, mask47^0'=mask47^post18, n35^0'=n35^post18, n45^0'=n45^post18, n65^0'=n65^post18, numbasis49^0'=numbasis49^post18, p66^0'=p66^post18, ret_codebook57^0'=ret_codebook57^post18, ret_latsynth38^0'=ret_latsynth38^post18, ret_mac15^0'=ret_mac15^post18, sqr11^0'=sqr11^post18, sum027^0'=sum027^post18, sum128^0'=sum128^post18, sum21^0'=sum21^post18, t44^0'=t44^post18, theta54^0'=theta54^post18, tmp^0'=tmp^post18, tmp___0^0'=tmp___0^post18, tmpmask56^0'=tmpmask56^post18, x029^0'=x029^post18, x130^0'=x130^post18, x43^0'=x43^post18, (-tmp___0^post18+tmp___0^0 == 0 /\ -t44^post18+t44^0 == 0 /\ -sum128^post18+sum128^0 == 0 /\ -sum027^post18+sum027^0 == 0 /\ -x130^post18+x130^0 == 0 /\ -x43^post18+x43^0 == 0 /\ i25^0-i25^post18 == 0 /\ f36^0-f36^post18 == 0 /\ -i13^post18+i13^0 == 0 /\ -i19^post18+i19^0 == 0 /\ -i37^post18+i37^0 == 0 /\ -h031^post18+h031^0 == 0 /\ ddim53^0-ddim53^post18 == 0 /\ n65^0-n65^post18 == 0 /\ -j20^post18+j20^0 == 0 /\ -dotp14^post18+dotp14^0 == 0 /\ -d^post18+d^0 == 0 /\ -k63^post18+k63^0 == 0 /\ x029^0-x029^post18 == 0 /\ tmp^0-tmp^post18 == 0 /\ numbasis49^0-numbasis49^post18 == 0 /\ mask47^0-mask47^post18 == 0 /\ -tmpmask56^post18+tmpmask56^0 == 0 /\ -ret_mac15^post18+ret_mac15^0 == 0 /\ g51^0-g51^post18 == 0 /\ -2+j26^post18-j26^0 == 0 /\ m64^0-m64^post18 == 0 /\ sqr11^0-sqr11^post18 == 0 /\ -n35^post18+n35^0 == 0 /\ c^0-c^post18 == 0 /\ -n45^post18+n45^0 == 0 /\ -p66^post18+p66^0 == 0 /\ ret_codebook57^0-ret_codebook57^post18 == 0 /\ -theta54^post18+theta54^0 == 0 /\ j55^0-j55^post18 == 0 /\ h132^0-h132^post18 == 0 /\ 32-i25^0 <= 0 /\ -bitchanged48^post18+bitchanged48^0 == 0 /\ j62^0-j62^post18 == 0 /\ ret_latsynth38^0-ret_latsynth38^post18 == 0 /\ i61^0-i61^post18 == 0 /\ sum21^0-sum21^post18 == 0 /\ -codeword50^post18+codeword50^0 == 0), cost: 1
  18: l3 -> l2 : bitchanged48^0'=bitchanged48^post19, c^0'=c^post19, codeword50^0'=codeword50^post19, d^0'=d^post19, ddim53^0'=ddim53^post19, dotp14^0'=dotp14^post19, f36^0'=f36^post19, g51^0'=g51^post19, h031^0'=h031^post19, h132^0'=h132^post19, i13^0'=i13^post19, i19^0'=i19^post19, i25^0'=i25^post19, i37^0'=i37^post19, i61^0'=i61^post19, j20^0'=j20^post19, j26^0'=j26^post19, j55^0'=j55^post19, j62^0'=j62^post19, k63^0'=k63^post19, m64^0'=m64^post19, mask47^0'=mask47^post19, n35^0'=n35^post19, n45^0'=n45^post19, n65^0'=n65^post19, numbasis49^0'=numbasis49^post19, p66^0'=p66^post19, ret_codebook57^0'=ret_codebook57^post19, ret_latsynth38^0'=ret_latsynth38^post19, ret_mac15^0'=ret_mac15^post19, sqr11^0'=sqr11^post19, sum027^0'=sum027^post19, sum128^0'=sum128^post19, sum21^0'=sum21^post19, t44^0'=t44^post19, theta54^0'=theta54^post19, tmp^0'=tmp^post19, tmp___0^0'=tmp___0^post19, tmpmask56^0'=tmpmask56^post19, x029^0'=x029^post19, x130^0'=x130^post19, x43^0'=x43^post19, (0 == 0 /\ codeword50^0-codeword50^post19 == 0 /\ -2+i25^post19-i25^0 == 0 /\ -31+i25^0 <= 0 /\ -theta54^post19+theta54^0 == 0 /\ -i13^post19+i13^0 == 0 /\ -j62^post19+j62^0 == 0 /\ i19^0-i19^post19 == 0 /\ numbasis49^0-numbasis49^post19 == 0 /\ -p66^post19+p66^0 == 0 /\ -n65^post19+n65^0 == 0 /\ t44^0-t44^post19 == 0 /\ tmp___0^0-tmp___0^post19 == 0 /\ -j20^post19+j20^0 == 0 /\ -f36^post19+f36^0 == 0 /\ n35^0-n35^post19 == 0 /\ ret_codebook57^0-ret_codebook57^post19 == 0 /\ ret_latsynth38^0-ret_latsynth38^post19 == 0 /\ mask47^0-mask47^post19 == 0 /\ -sum21^post19+sum21^0 == 0 /\ c^0-c^post19 == 0 /\ dotp14^0-dotp14^post19 == 0 /\ sqr11^0-sqr11^post19 == 0 /\ -i37^post19+i37^0 == 0 /\ tmp^0-tmp^post19 == 0 /\ j55^0-j55^post19 == 0 /\ -k63^post19+k63^0 == 0 /\ -bitchanged48^post19+bitchanged48^0 == 0 /\ x43^0-x43^post19 == 0 /\ -j26^post19+j26^0 == 0 /\ -d^post19+d^0 == 0 /\ -ret_mac15^post19+ret_mac15^0 == 0 /\ g51^0-g51^post19 == 0 /\ i61^0-i61^post19 == 0 /\ ddim53^0-ddim53^post19 == 0 /\ -n45^post19+n45^0 == 0 /\ -tmpmask56^post19+tmpmask56^0 == 0 /\ m64^0-m64^post19 == 0), cost: 1
   2: l4 -> l5 : bitchanged48^0'=bitchanged48^post3, c^0'=c^post3, codeword50^0'=codeword50^post3, d^0'=d^post3, ddim53^0'=ddim53^post3, dotp14^0'=dotp14^post3, f36^0'=f36^post3, g51^0'=g51^post3, h031^0'=h031^post3, h132^0'=h132^post3, i13^0'=i13^post3, i19^0'=i19^post3, i25^0'=i25^post3, i37^0'=i37^post3, i61^0'=i61^post3, j20^0'=j20^post3, j26^0'=j26^post3, j55^0'=j55^post3, j62^0'=j62^post3, k63^0'=k63^post3, m64^0'=m64^post3, mask47^0'=mask47^post3, n35^0'=n35^post3, n45^0'=n45^post3, n65^0'=n65^post3, numbasis49^0'=numbasis49^post3, p66^0'=p66^post3, ret_codebook57^0'=ret_codebook57^post3, ret_latsynth38^0'=ret_latsynth38^post3, ret_mac15^0'=ret_mac15^post3, sqr11^0'=sqr11^post3, sum027^0'=sum027^post3, sum128^0'=sum128^post3, sum21^0'=sum21^post3, t44^0'=t44^post3, theta54^0'=theta54^post3, tmp^0'=tmp^post3, tmp___0^0'=tmp___0^post3, tmpmask56^0'=tmpmask56^post3, x029^0'=x029^post3, x130^0'=x130^post3, x43^0'=x43^post3, (-x43^post3+x43^0 == 0 /\ -x130^post3+x130^0 == 0 /\ d^0-d^post3 == 0 /\ -i61^post3+i61^0 == 0 /\ -h031^post3+h031^0 == 0 /\ sqr11^0-sqr11^post3 == 0 /\ -g51^post3+g51^0 == 0 /\ -i19^post3+i19^0 == 0 /\ k63^0-k63^post3 == 0 /\ i13^0-i13^post3 == 0 /\ bitchanged48^0-bitchanged48^post3 == 0 /\ h132^0-h132^post3 == 0 /\ n65^0-n65^post3 == 0 /\ numbasis49^0-numbasis49^post3 == 0 /\ f36^0-f36^post3 == 0 /\ -dotp14^post3+dotp14^0 == 0 /\ -j62^post3+j62^0 == 0 /\ -codeword50^post3+codeword50^0 == 0 /\ -theta54^post3+theta54^0 == 0 /\ tmp___0^0-tmp___0^post3 == 0 /\ -p66^post3+p66^0 == 0 /\ -n45^post3+n45^0 == 0 /\ -tmpmask56^post3+tmpmask56^0 == 0 /\ -ret_mac15^post3+ret_mac15^0 == 0 /\ mask47^0-mask47^post3 == 0 /\ -sum128^post3+sum128^0 == 0 /\ m64^0-m64^post3 == 0 /\ -sum21^post3+sum21^0 == 0 /\ t44^0-t44^post3 == 0 /\ i25^0-i25^post3 == 0 /\ ret_codebook57^0-ret_codebook57^post3 == 0 /\ -n35^post3+n35^0 == 0 /\ -c^post3+c^0 == 0 /\ tmp^0-tmp^post3 == 0 /\ sum027^0-sum027^post3 == 0 /\ -ddim53^post3+ddim53^0 == 0 /\ -j55^post3+j55^0 == 0 /\ -j20^post3+j20^0 == 0 /\ j26^0-j26^post3 == 0 /\ i37^0-i37^post3 == 0 /\ x029^0-x029^post3 == 0 /\ ret_latsynth38^0-ret_latsynth38^post3 == 0), cost: 1
  15: l5 -> l6 : bitchanged48^0'=bitchanged48^post16, c^0'=c^post16, codeword50^0'=codeword50^post16, d^0'=d^post16, ddim53^0'=ddim53^post16, dotp14^0'=dotp14^post16, f36^0'=f36^post16, g51^0'=g51^post16, h031^0'=h031^post16, h132^0'=h132^post16, i13^0'=i13^post16, i19^0'=i19^post16, i25^0'=i25^post16, i37^0'=i37^post16, i61^0'=i61^post16, j20^0'=j20^post16, j26^0'=j26^post16, j55^0'=j55^post16, j62^0'=j62^post16, k63^0'=k63^post16, m64^0'=m64^post16, mask47^0'=mask47^post16, n35^0'=n35^post16, n45^0'=n45^post16, n65^0'=n65^post16, numbasis49^0'=numbasis49^post16, p66^0'=p66^post16, ret_codebook57^0'=ret_codebook57^post16, ret_latsynth38^0'=ret_latsynth38^post16, ret_mac15^0'=ret_mac15^post16, sqr11^0'=sqr11^post16, sum027^0'=sum027^post16, sum128^0'=sum128^post16, sum21^0'=sum21^post16, t44^0'=t44^post16, theta54^0'=theta54^post16, tmp^0'=tmp^post16, tmp___0^0'=tmp___0^post16, tmpmask56^0'=tmpmask56^post16, x029^0'=x029^post16, x130^0'=x130^post16, x43^0'=x43^post16, (0 == 0 /\ i25^0-i25^post16 == 0 /\ -dotp14^post16+dotp14^0 == 0 /\ j55^0-j55^post16 == 0 /\ ret_latsynth38^post16-f36^0 == 0 /\ f36^0-f36^post16 == 0 /\ sum21^0-sum21^post16 == 0 /\ -i37^post16+i37^0 == 0 /\ m64^0-m64^post16 == 0 /\ -i19^post16+i19^0 == 0 /\ -i13^post16+i13^0 == 0 /\ i61^0-i61^post16 == 0 /\ ret_codebook57^0-ret_codebook57^post16 == 0 /\ -h031^post16+h031^0 == 0 /\ ddim53^0-ddim53^post16 == 0 /\ -sum128^post16+sum128^0 == 0 /\ -tmp___0^post16+tmp___0^0 == 0 /\ x130^0-x130^post16 == 0 /\ -tmpmask56^post16+tmpmask56^0 == 0 /\ -k63^post16+k63^0 == 0 /\ -mask47^post16+mask47^0 == 0 /\ -bitchanged48^post16+bitchanged48^0 == 0 /\ 1+i37^0 <= 0 /\ x029^0-x029^post16 == 0 /\ j26^0-j26^post16 == 0 /\ -ret_latsynth38^post16+d^post16 == 0 /\ g51^0-g51^post16 == 0 /\ tmp^0-tmp^post16 == 0 /\ -theta54^post16+theta54^0 == 0 /\ -ret_mac15^post16+ret_mac15^0 == 0 /\ n45^post16 == 0 /\ -p66^post16+p66^0 == 0 /\ t44^0-t44^post16 == 0 /\ sqr11^0-sqr11^post16 == 0 /\ -sum027^post16+sum027^0 == 0 /\ n35^0-n35^post16 == 0 /\ h132^0-h132^post16 == 0 /\ -j20^post16+j20^0 == 0 /\ -j62^post16+j62^0 == 0 /\ c^0-c^post16 == 0 /\ n65^0-n65^post16 == 0 /\ -codeword50^post16+codeword50^0 == 0 /\ numbasis49^0-numbasis49^post16 == 0), cost: 1
  16: l5 -> l4 : bitchanged48^0'=bitchanged48^post17, c^0'=c^post17, codeword50^0'=codeword50^post17, d^0'=d^post17, ddim53^0'=ddim53^post17, dotp14^0'=dotp14^post17, f36^0'=f36^post17, g51^0'=g51^post17, h031^0'=h031^post17, h132^0'=h132^post17, i13^0'=i13^post17, i19^0'=i19^post17, i25^0'=i25^post17, i37^0'=i37^post17, i61^0'=i61^post17, j20^0'=j20^post17, j26^0'=j26^post17, j55^0'=j55^post17, j62^0'=j62^post17, k63^0'=k63^post17, m64^0'=m64^post17, mask47^0'=mask47^post17, n35^0'=n35^post17, n45^0'=n45^post17, n65^0'=n65^post17, numbasis49^0'=numbasis49^post17, p66^0'=p66^post17, ret_codebook57^0'=ret_codebook57^post17, ret_latsynth38^0'=ret_latsynth38^post17, ret_mac15^0'=ret_mac15^post17, sqr11^0'=sqr11^post17, sum027^0'=sum027^post17, sum128^0'=sum128^post17, sum21^0'=sum21^post17, t44^0'=t44^post17, theta54^0'=theta54^post17, tmp^0'=tmp^post17, tmp___0^0'=tmp___0^post17, tmpmask56^0'=tmpmask56^post17, x029^0'=x029^post17, x130^0'=x130^post17, x43^0'=x43^post17, (0 == 0 /\ -bitchanged48^post17+bitchanged48^0 == 0 /\ -dotp14^post17+dotp14^0 == 0 /\ -theta54^post17+theta54^0 == 0 /\ j55^0-j55^post17 == 0 /\ i25^0-i25^post17 == 0 /\ -codeword50^post17+codeword50^0 == 0 /\ i61^0-i61^post17 == 0 /\ sqr11^0-sqr11^post17 == 0 /\ ddim53^0-ddim53^post17 == 0 /\ -sum128^post17+sum128^0 == 0 /\ -i19^post17+i19^0 == 0 /\ -numbasis49^post17+numbasis49^0 == 0 /\ -j26^post17+j26^0 == 0 /\ -j62^post17+j62^0 == 0 /\ tmp___0^0-tmp___0^post17 == 0 /\ d^0-d^post17 == 0 /\ 1+i37^post17-i37^0 == 0 /\ n65^0-n65^post17 == 0 /\ t44^0-t44^post17 == 0 /\ g51^0-g51^post17 == 0 /\ x43^0-x43^post17 == 0 /\ c^0-c^post17 == 0 /\ n35^0-n35^post17 == 0 /\ -i37^0 <= 0 /\ -p66^post17+p66^0 == 0 /\ mask47^0-mask47^post17 == 0 /\ ret_codebook57^0-ret_codebook57^post17 == 0 /\ -ret_mac15^post17+ret_mac15^0 == 0 /\ -x029^post17+x029^0 == 0 /\ -sum21^post17+sum21^0 == 0 /\ sum027^0-sum027^post17 == 0 /\ -tmpmask56^post17+tmpmask56^0 == 0 /\ -n45^post17+n45^0 == 0 /\ -i13^post17+i13^0 == 0 /\ -k63^post17+k63^0 == 0 /\ -x130^post17+x130^0 == 0 /\ -h031^post17+h031^0 == 0 /\ tmp^0-tmp^post17 == 0 /\ h132^0-h132^post17 == 0 /\ ret_latsynth38^0-ret_latsynth38^post17 == 0 /\ -j20^post17+j20^0 == 0 /\ m64^0-m64^post17 == 0), cost: 1
   3: l6 -> l7 : bitchanged48^0'=bitchanged48^post4, c^0'=c^post4, codeword50^0'=codeword50^post4, d^0'=d^post4, ddim53^0'=ddim53^post4, dotp14^0'=dotp14^post4, f36^0'=f36^post4, g51^0'=g51^post4, h031^0'=h031^post4, h132^0'=h132^post4, i13^0'=i13^post4, i19^0'=i19^post4, i25^0'=i25^post4, i37^0'=i37^post4, i61^0'=i61^post4, j20^0'=j20^post4, j26^0'=j26^post4, j55^0'=j55^post4, j62^0'=j62^post4, k63^0'=k63^post4, m64^0'=m64^post4, mask47^0'=mask47^post4, n35^0'=n35^post4, n45^0'=n45^post4, n65^0'=n65^post4, numbasis49^0'=numbasis49^post4, p66^0'=p66^post4, ret_codebook57^0'=ret_codebook57^post4, ret_latsynth38^0'=ret_latsynth38^post4, ret_mac15^0'=ret_mac15^post4, sqr11^0'=sqr11^post4, sum027^0'=sum027^post4, sum128^0'=sum128^post4, sum21^0'=sum21^post4, t44^0'=t44^post4, theta54^0'=theta54^post4, tmp^0'=tmp^post4, tmp___0^0'=tmp___0^post4, tmpmask56^0'=tmpmask56^post4, x029^0'=x029^post4, x130^0'=x130^post4, x43^0'=x43^post4, (sqr11^0-sqr11^post4 == 0 /\ c^0-c^post4 == 0 /\ i19^0-i19^post4 == 0 /\ h031^0-h031^post4 == 0 /\ codeword50^0-codeword50^post4 == 0 /\ -d^post4+d^0 == 0 /\ -sum128^post4+sum128^0 == 0 /\ -bitchanged48^post4+bitchanged48^0 == 0 /\ j55^0-j55^post4 == 0 /\ t44^0-t44^post4 == 0 /\ -f36^post4+f36^0 == 0 /\ n65^0-n65^post4 == 0 /\ numbasis49^0-numbasis49^post4 == 0 /\ sum21^0-sum21^post4 == 0 /\ -ret_mac15^post4+ret_mac15^0 == 0 /\ -i37^post4+i37^0 == 0 /\ -x130^post4+x130^0 == 0 /\ i25^0-i25^post4 == 0 /\ tmp___0^0-tmp___0^post4 == 0 /\ x029^0-x029^post4 == 0 /\ m64^0-m64^post4 == 0 /\ mask47^0-mask47^post4 == 0 /\ -tmpmask56^post4+tmpmask56^0 == 0 /\ -n45^post4+n45^0 == 0 /\ -n35^post4+n35^0 == 0 /\ -k63^post4+k63^0 == 0 /\ -j20^post4+j20^0 == 0 /\ -j26^post4+j26^0 == 0 /\ -j62^post4+j62^0 == 0 /\ sum027^0-sum027^post4 == 0 /\ i61^0-i61^post4 == 0 /\ ret_latsynth38^0-ret_latsynth38^post4 == 0 /\ dotp14^0-dotp14^post4 == 0 /\ ret_codebook57^0-ret_codebook57^post4 == 0 /\ -theta54^post4+theta54^0 == 0 /\ x43^0-x43^post4 == 0 /\ ddim53^0-ddim53^post4 == 0 /\ g51^0-g51^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -h132^post4+h132^0 == 0 /\ -p66^post4+p66^0 == 0 /\ -i13^post4+i13^0 == 0), cost: 1
  12: l7 -> l16 : bitchanged48^0'=bitchanged48^post13, c^0'=c^post13, codeword50^0'=codeword50^post13, d^0'=d^post13, ddim53^0'=ddim53^post13, dotp14^0'=dotp14^post13, f36^0'=f36^post13, g51^0'=g51^post13, h031^0'=h031^post13, h132^0'=h132^post13, i13^0'=i13^post13, i19^0'=i19^post13, i25^0'=i25^post13, i37^0'=i37^post13, i61^0'=i61^post13, j20^0'=j20^post13, j26^0'=j26^post13, j55^0'=j55^post13, j62^0'=j62^post13, k63^0'=k63^post13, m64^0'=m64^post13, mask47^0'=mask47^post13, n35^0'=n35^post13, n45^0'=n45^post13, n65^0'=n65^post13, numbasis49^0'=numbasis49^post13, p66^0'=p66^post13, ret_codebook57^0'=ret_codebook57^post13, ret_latsynth38^0'=ret_latsynth38^post13, ret_mac15^0'=ret_mac15^post13, sqr11^0'=sqr11^post13, sum027^0'=sum027^post13, sum128^0'=sum128^post13, sum21^0'=sum21^post13, t44^0'=t44^post13, theta54^0'=theta54^post13, tmp^0'=tmp^post13, tmp___0^0'=tmp___0^post13, tmpmask56^0'=tmpmask56^post13, x029^0'=x029^post13, x130^0'=x130^post13, x43^0'=x43^post13, (0 == 0 /\ -j20^post13+j20^0 == 0 /\ d^0-d^post13 == 0 /\ j26^0-j26^post13 == 0 /\ -sum21^post13+sum21^0 == 0 /\ 50-n45^0 <= 0 /\ -sum128^post13+sum128^0 == 0 /\ h132^0-h132^post13 == 0 /\ -1-bitchanged48^post13+j55^post13 == 0 /\ -1+theta54^post13 == 0 /\ -17+numbasis49^post13 == 0 /\ t44^0-t44^post13 == 0 /\ -h031^post13+h031^0 == 0 /\ -i13^post13+i13^0 == 0 /\ -x130^post13+x130^0 == 0 /\ -n65^post13+n65^0 == 0 /\ -p66^post13+p66^0 == 0 /\ -i61^post13+i61^0 == 0 /\ x029^0-x029^post13 == 0 /\ m64^0-m64^post13 == 0 /\ i37^0-i37^post13 == 0 /\ n35^0-n35^post13 == 0 /\ ret_latsynth38^0-ret_latsynth38^post13 == 0 /\ -1+bitchanged48^post13 == 0 /\ i25^0-i25^post13 == 0 /\ f36^0-f36^post13 == 0 /\ -sum027^post13+sum027^0 == 0 /\ -j62^post13+j62^0 == 0 /\ sqr11^0-sqr11^post13 == 0 /\ -dotp14^post13+dotp14^0 == 0 /\ -c^post13+c^0 == 0 /\ -d^0+g51^post13 == 0 /\ tmp^0-tmp^post13 == 0 /\ mask47^post13-d^0 == 0 /\ ddim53^post13-c^0 == 0 /\ -i19^post13+i19^0 == 0 /\ -x43^post13+x43^0 == 0 /\ -tmp___0^post13+tmp___0^0 == 0 /\ -n45^post13+n45^0 == 0 /\ -ret_mac15^post13+ret_mac15^0 == 0 /\ k63^0-k63^post13 == 0 /\ -ret_codebook57^post13+ret_codebook57^0 == 0), cost: 1
  13: l7 -> l6 : bitchanged48^0'=bitchanged48^post14, c^0'=c^post14, codeword50^0'=codeword50^post14, d^0'=d^post14, ddim53^0'=ddim53^post14, dotp14^0'=dotp14^post14, f36^0'=f36^post14, g51^0'=g51^post14, h031^0'=h031^post14, h132^0'=h132^post14, i13^0'=i13^post14, i19^0'=i19^post14, i25^0'=i25^post14, i37^0'=i37^post14, i61^0'=i61^post14, j20^0'=j20^post14, j26^0'=j26^post14, j55^0'=j55^post14, j62^0'=j62^post14, k63^0'=k63^post14, m64^0'=m64^post14, mask47^0'=mask47^post14, n35^0'=n35^post14, n45^0'=n45^post14, n65^0'=n65^post14, numbasis49^0'=numbasis49^post14, p66^0'=p66^post14, ret_codebook57^0'=ret_codebook57^post14, ret_latsynth38^0'=ret_latsynth38^post14, ret_mac15^0'=ret_mac15^post14, sqr11^0'=sqr11^post14, sum027^0'=sum027^post14, sum128^0'=sum128^post14, sum21^0'=sum21^post14, t44^0'=t44^post14, theta54^0'=theta54^post14, tmp^0'=tmp^post14, tmp___0^0'=tmp___0^post14, tmpmask56^0'=tmpmask56^post14, x029^0'=x029^post14, x130^0'=x130^post14, x43^0'=x43^post14, (0 == 0 /\ -mask47^post14+mask47^0 == 0 /\ -j62^post14+j62^0 == 0 /\ i25^0-i25^post14 == 0 /\ -i37^post14+i37^0 == 0 /\ -h031^post14+h031^0 == 0 /\ d^0-d^post14 == 0 /\ f36^0-f36^post14 == 0 /\ -1+n45^post14-n45^0 == 0 /\ -i19^post14+i19^0 == 0 /\ -i13^post14+i13^0 == 0 /\ -x029^post14+x029^0 == 0 /\ -x130^post14+x130^0 == 0 /\ sqr11^0-sqr11^post14 == 0 /\ k63^0-k63^post14 == 0 /\ i61^0-i61^post14 == 0 /\ bitchanged48^0-bitchanged48^post14 == 0 /\ tmp___0^0-tmp___0^post14 == 0 /\ n65^0-n65^post14 == 0 /\ numbasis49^0-numbasis49^post14 == 0 /\ -codeword50^post14+codeword50^0 == 0 /\ j55^0-j55^post14 == 0 /\ -theta54^post14+theta54^0 == 0 /\ -j26^post14+j26^0 == 0 /\ -ddim53^post14+ddim53^0 == 0 /\ -ret_mac15^post14+ret_mac15^0 == 0 /\ -sum128^post14+sum128^0 == 0 /\ -sum21^post14+sum21^0 == 0 /\ g51^0-g51^post14 == 0 /\ -p66^post14+p66^0 == 0 /\ ret_codebook57^0-ret_codebook57^post14 == 0 /\ -tmpmask56^post14+tmpmask56^0 == 0 /\ -n35^post14+n35^0 == 0 /\ -j20^post14+j20^0 == 0 /\ -49+n45^0 <= 0 /\ h132^0-h132^post14 == 0 /\ -c^post14+c^0 == 0 /\ m64^0-m64^post14 == 0 /\ sum027^0-sum027^post14 == 0 /\ -dotp14^post14+dotp14^0 == 0 /\ -tmp^post14+tmp^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post14 == 0), cost: 1
   4: l8 -> l9 : bitchanged48^0'=bitchanged48^post5, c^0'=c^post5, codeword50^0'=codeword50^post5, d^0'=d^post5, ddim53^0'=ddim53^post5, dotp14^0'=dotp14^post5, f36^0'=f36^post5, g51^0'=g51^post5, h031^0'=h031^post5, h132^0'=h132^post5, i13^0'=i13^post5, i19^0'=i19^post5, i25^0'=i25^post5, i37^0'=i37^post5, i61^0'=i61^post5, j20^0'=j20^post5, j26^0'=j26^post5, j55^0'=j55^post5, j62^0'=j62^post5, k63^0'=k63^post5, m64^0'=m64^post5, mask47^0'=mask47^post5, n35^0'=n35^post5, n45^0'=n45^post5, n65^0'=n65^post5, numbasis49^0'=numbasis49^post5, p66^0'=p66^post5, ret_codebook57^0'=ret_codebook57^post5, ret_latsynth38^0'=ret_latsynth38^post5, ret_mac15^0'=ret_mac15^post5, sqr11^0'=sqr11^post5, sum027^0'=sum027^post5, sum128^0'=sum128^post5, sum21^0'=sum21^post5, t44^0'=t44^post5, theta54^0'=theta54^post5, tmp^0'=tmp^post5, tmp___0^0'=tmp___0^post5, tmpmask56^0'=tmpmask56^post5, x029^0'=x029^post5, x130^0'=x130^post5, x43^0'=x43^post5, (-g51^post5+g51^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post5 == 0 /\ m64^0-m64^post5 == 0 /\ -i19^post5+i19^0 == 0 /\ -i13^post5+i13^0 == 0 /\ -x43^post5+x43^0 == 0 /\ -sum21^post5+sum21^0 == 0 /\ -codeword50^post5+codeword50^0 == 0 /\ -c^post5+c^0 == 0 /\ -sum128^post5+sum128^0 == 0 /\ -x130^post5+x130^0 == 0 /\ -h031^post5+h031^0 == 0 /\ -ddim53^post5+ddim53^0 == 0 /\ -dotp14^post5+dotp14^0 == 0 /\ -tmp___0^post5+tmp___0^0 == 0 /\ -j20^post5+j20^0 == 0 /\ 4-j62^0 <= 0 /\ h132^0-h132^post5 == 0 /\ t44^0-t44^post5 == 0 /\ k63^0-k63^post5 == 0 /\ sum027^0-sum027^post5 == 0 /\ ret_mac15^0-ret_mac15^post5 == 0 /\ -sqr11^post5+sqr11^0 == 0 /\ bitchanged48^0-bitchanged48^post5 == 0 /\ j26^0-j26^post5 == 0 /\ f36^0-f36^post5 == 0 /\ -n45^post5+n45^0 == 0 /\ -n65^post5+n65^0 == 0 /\ i37^0-i37^post5 == 0 /\ -j62^post5+j62^0 == 0 /\ i25^0-i25^post5 == 0 /\ -mask47^post5+mask47^0 == 0 /\ j55^0-j55^post5 == 0 /\ -tmpmask56^post5+tmpmask56^0 == 0 /\ -1+i61^post5-i61^0 == 0 /\ tmp^0-tmp^post5 == 0 /\ numbasis49^0-numbasis49^post5 == 0 /\ -ret_codebook57^post5+ret_codebook57^0 == 0 /\ p66^0-p66^post5 == 0 /\ n35^0-n35^post5 == 0 /\ d^0-d^post5 == 0 /\ -theta54^post5+theta54^0 == 0 /\ x029^0-x029^post5 == 0), cost: 1
   5: l8 -> l10 : bitchanged48^0'=bitchanged48^post6, c^0'=c^post6, codeword50^0'=codeword50^post6, d^0'=d^post6, ddim53^0'=ddim53^post6, dotp14^0'=dotp14^post6, f36^0'=f36^post6, g51^0'=g51^post6, h031^0'=h031^post6, h132^0'=h132^post6, i13^0'=i13^post6, i19^0'=i19^post6, i25^0'=i25^post6, i37^0'=i37^post6, i61^0'=i61^post6, j20^0'=j20^post6, j26^0'=j26^post6, j55^0'=j55^post6, j62^0'=j62^post6, k63^0'=k63^post6, m64^0'=m64^post6, mask47^0'=mask47^post6, n35^0'=n35^post6, n45^0'=n45^post6, n65^0'=n65^post6, numbasis49^0'=numbasis49^post6, p66^0'=p66^post6, ret_codebook57^0'=ret_codebook57^post6, ret_latsynth38^0'=ret_latsynth38^post6, ret_mac15^0'=ret_mac15^post6, sqr11^0'=sqr11^post6, sum027^0'=sum027^post6, sum128^0'=sum128^post6, sum21^0'=sum21^post6, t44^0'=t44^post6, theta54^0'=theta54^post6, tmp^0'=tmp^post6, tmp___0^0'=tmp___0^post6, tmpmask56^0'=tmpmask56^post6, x029^0'=x029^post6, x130^0'=x130^post6, x43^0'=x43^post6, (-theta54^post6+theta54^0 == 0 /\ -dotp14^post6+dotp14^0 == 0 /\ -1+j62^post6-j62^0 == 0 /\ -ddim53^post6+ddim53^0 == 0 /\ sqr11^0-sqr11^post6 == 0 /\ -codeword50^post6+codeword50^0 == 0 /\ -c^post6+c^0 == 0 /\ -x130^post6+x130^0 == 0 /\ -x43^post6+x43^0 == 0 /\ -sum128^post6+sum128^0 == 0 /\ -3+j62^0 <= 0 /\ -n45^post6+n45^0 == 0 /\ -i19^post6+i19^0 == 0 /\ -numbasis49^post6+numbasis49^0 == 0 /\ -tmpmask56^post6+tmpmask56^0 == 0 /\ bitchanged48^0-bitchanged48^post6 == 0 /\ tmp___0^0-tmp___0^post6 == 0 /\ k63^0-k63^post6 == 0 /\ t44^0-t44^post6 == 0 /\ n65^0-n65^post6 == 0 /\ h132^0-h132^post6 == 0 /\ m64^0-m64^post6 == 0 /\ f36^0-f36^post6 == 0 /\ -g51^post6+g51^0 == 0 /\ -j20^post6+j20^0 == 0 /\ j26^0-j26^post6 == 0 /\ -p66^post6+p66^0 == 0 /\ j55^0-j55^post6 == 0 /\ ret_codebook57^0-ret_codebook57^post6 == 0 /\ -ret_mac15^post6+ret_mac15^0 == 0 /\ -sum21^post6+sum21^0 == 0 /\ i37^0-i37^post6 == 0 /\ sum027^0-sum027^post6 == 0 /\ -mask47^post6+mask47^0 == 0 /\ x029^0-x029^post6 == 0 /\ tmp^0-tmp^post6 == 0 /\ ret_latsynth38^0-ret_latsynth38^post6 == 0 /\ -n35^post6+n35^0 == 0 /\ i25^0-i25^post6 == 0 /\ -i13^post6+i13^0 == 0 /\ -i61^post6+i61^0 == 0 /\ d^0-d^post6 == 0 /\ -h031^post6+h031^0 == 0), cost: 1
  28: l9 -> l11 : bitchanged48^0'=bitchanged48^post29, c^0'=c^post29, codeword50^0'=codeword50^post29, d^0'=d^post29, ddim53^0'=ddim53^post29, dotp14^0'=dotp14^post29, f36^0'=f36^post29, g51^0'=g51^post29, h031^0'=h031^post29, h132^0'=h132^post29, i13^0'=i13^post29, i19^0'=i19^post29, i25^0'=i25^post29, i37^0'=i37^post29, i61^0'=i61^post29, j20^0'=j20^post29, j26^0'=j26^post29, j55^0'=j55^post29, j62^0'=j62^post29, k63^0'=k63^post29, m64^0'=m64^post29, mask47^0'=mask47^post29, n35^0'=n35^post29, n45^0'=n45^post29, n65^0'=n65^post29, numbasis49^0'=numbasis49^post29, p66^0'=p66^post29, ret_codebook57^0'=ret_codebook57^post29, ret_latsynth38^0'=ret_latsynth38^post29, ret_mac15^0'=ret_mac15^post29, sqr11^0'=sqr11^post29, sum027^0'=sum027^post29, sum128^0'=sum128^post29, sum21^0'=sum21^post29, t44^0'=t44^post29, theta54^0'=theta54^post29, tmp^0'=tmp^post29, tmp___0^0'=tmp___0^post29, tmpmask56^0'=tmpmask56^post29, x029^0'=x029^post29, x130^0'=x130^post29, x43^0'=x43^post29, (-ret_mac15^post29+ret_mac15^0 == 0 /\ tmp^0-tmp^post29 == 0 /\ ddim53^0-ddim53^post29 == 0 /\ t44^0-t44^post29 == 0 /\ d^0-d^post29 == 0 /\ -x130^post29+x130^0 == 0 /\ -x43^post29+x43^0 == 0 /\ sum21^0-sum21^post29 == 0 /\ n65^0-n65^post29 == 0 /\ -j20^post29+j20^0 == 0 /\ -n45^post29+n45^0 == 0 /\ sqr11^0-sqr11^post29 == 0 /\ i25^0-i25^post29 == 0 /\ numbasis49^0-numbasis49^post29 == 0 /\ -i19^post29+i19^0 == 0 /\ mask47^0-mask47^post29 == 0 /\ -k63^post29+k63^0 == 0 /\ -h031^post29+h031^0 == 0 /\ -theta54^post29+theta54^0 == 0 /\ sum027^0-sum027^post29 == 0 /\ -tmpmask56^post29+tmpmask56^0 == 0 /\ m64^0-m64^post29 == 0 /\ -i37^post29+i37^0 == 0 /\ -p66^post29+p66^0 == 0 /\ bitchanged48^0-bitchanged48^post29 == 0 /\ -c^post29+c^0 == 0 /\ -dotp14^post29+dotp14^0 == 0 /\ -codeword50^post29+codeword50^0 == 0 /\ tmp___0^0-tmp___0^post29 == 0 /\ ret_codebook57^0-ret_codebook57^post29 == 0 /\ f36^0-f36^post29 == 0 /\ g51^0-g51^post29 == 0 /\ j55^0-j55^post29 == 0 /\ j62^0-j62^post29 == 0 /\ -j26^post29+j26^0 == 0 /\ i61^0-i61^post29 == 0 /\ ret_latsynth38^0-ret_latsynth38^post29 == 0 /\ -n35^post29+n35^0 == 0 /\ x029^0-x029^post29 == 0 /\ -i13^post29+i13^0 == 0 /\ h132^0-h132^post29 == 0 /\ -sum128^post29+sum128^0 == 0), cost: 1
  29: l10 -> l8 : bitchanged48^0'=bitchanged48^post30, c^0'=c^post30, codeword50^0'=codeword50^post30, d^0'=d^post30, ddim53^0'=ddim53^post30, dotp14^0'=dotp14^post30, f36^0'=f36^post30, g51^0'=g51^post30, h031^0'=h031^post30, h132^0'=h132^post30, i13^0'=i13^post30, i19^0'=i19^post30, i25^0'=i25^post30, i37^0'=i37^post30, i61^0'=i61^post30, j20^0'=j20^post30, j26^0'=j26^post30, j55^0'=j55^post30, j62^0'=j62^post30, k63^0'=k63^post30, m64^0'=m64^post30, mask47^0'=mask47^post30, n35^0'=n35^post30, n45^0'=n45^post30, n65^0'=n65^post30, numbasis49^0'=numbasis49^post30, p66^0'=p66^post30, ret_codebook57^0'=ret_codebook57^post30, ret_latsynth38^0'=ret_latsynth38^post30, ret_mac15^0'=ret_mac15^post30, sqr11^0'=sqr11^post30, sum027^0'=sum027^post30, sum128^0'=sum128^post30, sum21^0'=sum21^post30, t44^0'=t44^post30, theta54^0'=theta54^post30, tmp^0'=tmp^post30, tmp___0^0'=tmp___0^post30, tmpmask56^0'=tmpmask56^post30, x029^0'=x029^post30, x130^0'=x130^post30, x43^0'=x43^post30, (-ret_latsynth38^post30+ret_latsynth38^0 == 0 /\ -p66^post30+p66^0 == 0 /\ ddim53^0-ddim53^post30 == 0 /\ -n45^post30+n45^0 == 0 /\ -ret_mac15^post30+ret_mac15^0 == 0 /\ -numbasis49^post30+numbasis49^0 == 0 /\ -n35^post30+n35^0 == 0 /\ -sum128^post30+sum128^0 == 0 /\ c^0-c^post30 == 0 /\ -k63^post30+k63^0 == 0 /\ -bitchanged48^post30+bitchanged48^0 == 0 /\ codeword50^0-codeword50^post30 == 0 /\ i25^0-i25^post30 == 0 /\ -j20^post30+j20^0 == 0 /\ mask47^0-mask47^post30 == 0 /\ x029^0-x029^post30 == 0 /\ -theta54^post30+theta54^0 == 0 /\ m64^0-m64^post30 == 0 /\ t44^0-t44^post30 == 0 /\ -tmpmask56^post30+tmpmask56^0 == 0 /\ sqr11^0-sqr11^post30 == 0 /\ -x43^post30+x43^0 == 0 /\ sum21^0-sum21^post30 == 0 /\ i19^0-i19^post30 == 0 /\ -h132^post30+h132^0 == 0 /\ -i37^post30+i37^0 == 0 /\ -f36^post30+f36^0 == 0 /\ -tmp___0^post30+tmp___0^0 == 0 /\ -i13^post30+i13^0 == 0 /\ -d^post30+d^0 == 0 /\ sum027^0-sum027^post30 == 0 /\ n65^0-n65^post30 == 0 /\ -h031^post30+h031^0 == 0 /\ tmp^0-tmp^post30 == 0 /\ j55^0-j55^post30 == 0 /\ j62^0-j62^post30 == 0 /\ g51^0-g51^post30 == 0 /\ ret_codebook57^0-ret_codebook57^post30 == 0 /\ -x130^post30+x130^0 == 0 /\ dotp14^0-dotp14^post30 == 0 /\ -j26^post30+j26^0 == 0 /\ i61^0-i61^post30 == 0), cost: 1
   6: l11 -> l12 : bitchanged48^0'=bitchanged48^post7, c^0'=c^post7, codeword50^0'=codeword50^post7, d^0'=d^post7, ddim53^0'=ddim53^post7, dotp14^0'=dotp14^post7, f36^0'=f36^post7, g51^0'=g51^post7, h031^0'=h031^post7, h132^0'=h132^post7, i13^0'=i13^post7, i19^0'=i19^post7, i25^0'=i25^post7, i37^0'=i37^post7, i61^0'=i61^post7, j20^0'=j20^post7, j26^0'=j26^post7, j55^0'=j55^post7, j62^0'=j62^post7, k63^0'=k63^post7, m64^0'=m64^post7, mask47^0'=mask47^post7, n35^0'=n35^post7, n45^0'=n45^post7, n65^0'=n65^post7, numbasis49^0'=numbasis49^post7, p66^0'=p66^post7, ret_codebook57^0'=ret_codebook57^post7, ret_latsynth38^0'=ret_latsynth38^post7, ret_mac15^0'=ret_mac15^post7, sqr11^0'=sqr11^post7, sum027^0'=sum027^post7, sum128^0'=sum128^post7, sum21^0'=sum21^post7, t44^0'=t44^post7, theta54^0'=theta54^post7, tmp^0'=tmp^post7, tmp___0^0'=tmp___0^post7, tmpmask56^0'=tmpmask56^post7, x029^0'=x029^post7, x130^0'=x130^post7, x43^0'=x43^post7, (-3-n65^0+n65^post7 == 0 /\ g51^0-g51^post7 == 0 /\ -f36^post7+f36^0 == 0 /\ -d^post7+d^0 == 0 /\ -bitchanged48^post7+bitchanged48^0 == 0 /\ -h132^post7+h132^0 == 0 /\ c^0-c^post7 == 0 /\ -ret_latsynth38^post7+ret_latsynth38^0 == 0 /\ -ret_mac15^post7+ret_mac15^0 == 0 /\ -i13^post7+i13^0 == 0 /\ -x43^post7+x43^0 == 0 /\ h031^0-h031^post7 == 0 /\ -x130^post7+x130^0 == 0 /\ codeword50^0-codeword50^post7 == 0 /\ i25^0-i25^post7 == 0 /\ sum21^0-sum21^post7 == 0 /\ -j20^post7+j20^0 == 0 /\ t44^0-t44^post7 == 0 /\ sqr11^0-sqr11^post7 == 0 /\ 7+p66^post7-p66^0 == 0 /\ -7+k63^post7-k63^0 == 0 /\ numbasis49^0-numbasis49^post7 == 0 /\ mask47^0-mask47^post7 == 0 /\ -i37^post7+i37^0 == 0 /\ tmp___0^0-tmp___0^post7 == 0 /\ -n35^post7+n35^0 == 0 /\ sum027^0-sum027^post7 == 0 /\ -n45^post7+n45^0 == 0 /\ -tmpmask56^post7+tmpmask56^0 == 0 /\ ret_codebook57^0-ret_codebook57^post7 == 0 /\ i19^0-i19^post7 == 0 /\ dotp14^0-dotp14^post7 == 0 /\ ddim53^0-ddim53^post7 == 0 /\ 8-i61^0 <= 0 /\ -3-m64^0+m64^post7 == 0 /\ j55^0-j55^post7 == 0 /\ -theta54^post7+theta54^0 == 0 /\ x029^0-x029^post7 == 0 /\ -sum128^post7+sum128^0 == 0 /\ j62^0-j62^post7 == 0 /\ tmp^0-tmp^post7 == 0 /\ i61^0-i61^post7 == 0 /\ -j26^post7+j26^0 == 0), cost: 1
   7: l11 -> l10 : bitchanged48^0'=bitchanged48^post8, c^0'=c^post8, codeword50^0'=codeword50^post8, d^0'=d^post8, ddim53^0'=ddim53^post8, dotp14^0'=dotp14^post8, f36^0'=f36^post8, g51^0'=g51^post8, h031^0'=h031^post8, h132^0'=h132^post8, i13^0'=i13^post8, i19^0'=i19^post8, i25^0'=i25^post8, i37^0'=i37^post8, i61^0'=i61^post8, j20^0'=j20^post8, j26^0'=j26^post8, j55^0'=j55^post8, j62^0'=j62^post8, k63^0'=k63^post8, m64^0'=m64^post8, mask47^0'=mask47^post8, n35^0'=n35^post8, n45^0'=n45^post8, n65^0'=n65^post8, numbasis49^0'=numbasis49^post8, p66^0'=p66^post8, ret_codebook57^0'=ret_codebook57^post8, ret_latsynth38^0'=ret_latsynth38^post8, ret_mac15^0'=ret_mac15^post8, sqr11^0'=sqr11^post8, sum027^0'=sum027^post8, sum128^0'=sum128^post8, sum21^0'=sum21^post8, t44^0'=t44^post8, theta54^0'=theta54^post8, tmp^0'=tmp^post8, tmp___0^0'=tmp___0^post8, tmpmask56^0'=tmpmask56^post8, x029^0'=x029^post8, x130^0'=x130^post8, x43^0'=x43^post8, (c^0-c^post8 == 0 /\ j55^0-j55^post8 == 0 /\ -bitchanged48^post8+bitchanged48^0 == 0 /\ ddim53^0-ddim53^post8 == 0 /\ ret_mac15^0-ret_mac15^post8 == 0 /\ -n45^post8+n45^0 == 0 /\ -dotp14^post8+dotp14^0 == 0 /\ x029^0-x029^post8 == 0 /\ -mask47^post8+mask47^0 == 0 /\ d^0-d^post8 == 0 /\ -i37^post8+i37^0 == 0 /\ -7+i61^0 <= 0 /\ -sum128^post8+sum128^0 == 0 /\ j62^post8 == 0 /\ n35^0-n35^post8 == 0 /\ -ret_codebook57^post8+ret_codebook57^0 == 0 /\ -i19^post8+i19^0 == 0 /\ -x43^post8+x43^0 == 0 /\ j26^0-j26^post8 == 0 /\ -tmp___0^post8+tmp___0^0 == 0 /\ i25^0-i25^post8 == 0 /\ -tmpmask56^post8+tmpmask56^0 == 0 /\ numbasis49^0-numbasis49^post8 == 0 /\ -j20^post8+j20^0 == 0 /\ tmp^0-tmp^post8 == 0 /\ sum21^0-sum21^post8 == 0 /\ k63^0-k63^post8 == 0 /\ -theta54^post8+theta54^0 == 0 /\ g51^0-g51^post8 == 0 /\ m64^0-m64^post8 == 0 /\ t44^0-t44^post8 == 0 /\ sum027^0-sum027^post8 == 0 /\ -sqr11^post8+sqr11^0 == 0 /\ -codeword50^post8+codeword50^0 == 0 /\ -n65^post8+n65^0 == 0 /\ -h031^post8+h031^0 == 0 /\ -p66^post8+p66^0 == 0 /\ -i13^post8+i13^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post8 == 0 /\ -x130^post8+x130^0 == 0 /\ h132^0-h132^post8 == 0 /\ f36^0-f36^post8 == 0 /\ -i61^post8+i61^0 == 0), cost: 1
  27: l12 -> l13 : bitchanged48^0'=bitchanged48^post28, c^0'=c^post28, codeword50^0'=codeword50^post28, d^0'=d^post28, ddim53^0'=ddim53^post28, dotp14^0'=dotp14^post28, f36^0'=f36^post28, g51^0'=g51^post28, h031^0'=h031^post28, h132^0'=h132^post28, i13^0'=i13^post28, i19^0'=i19^post28, i25^0'=i25^post28, i37^0'=i37^post28, i61^0'=i61^post28, j20^0'=j20^post28, j26^0'=j26^post28, j55^0'=j55^post28, j62^0'=j62^post28, k63^0'=k63^post28, m64^0'=m64^post28, mask47^0'=mask47^post28, n35^0'=n35^post28, n45^0'=n45^post28, n65^0'=n65^post28, numbasis49^0'=numbasis49^post28, p66^0'=p66^post28, ret_codebook57^0'=ret_codebook57^post28, ret_latsynth38^0'=ret_latsynth38^post28, ret_mac15^0'=ret_mac15^post28, sqr11^0'=sqr11^post28, sum027^0'=sum027^post28, sum128^0'=sum128^post28, sum21^0'=sum21^post28, t44^0'=t44^post28, theta54^0'=theta54^post28, tmp^0'=tmp^post28, tmp___0^0'=tmp___0^post28, tmpmask56^0'=tmpmask56^post28, x029^0'=x029^post28, x130^0'=x130^post28, x43^0'=x43^post28, (j26^0-j26^post28 == 0 /\ -codeword50^post28+codeword50^0 == 0 /\ h132^0-h132^post28 == 0 /\ -dotp14^post28+dotp14^0 == 0 /\ f36^0-f36^post28 == 0 /\ -ret_mac15^post28+ret_mac15^0 == 0 /\ -n45^post28+n45^0 == 0 /\ -tmp___0^post28+tmp___0^0 == 0 /\ j55^0-j55^post28 == 0 /\ -n65^post28+n65^0 == 0 /\ -p66^post28+p66^0 == 0 /\ numbasis49^0-numbasis49^post28 == 0 /\ ddim53^0-ddim53^post28 == 0 /\ i25^0-i25^post28 == 0 /\ d^0-d^post28 == 0 /\ n35^0-n35^post28 == 0 /\ ret_codebook57^0-ret_codebook57^post28 == 0 /\ -sum027^post28+sum027^0 == 0 /\ -mask47^post28+mask47^0 == 0 /\ -i37^post28+i37^0 == 0 /\ -i19^post28+i19^0 == 0 /\ -j62^post28+j62^0 == 0 /\ -h031^post28+h031^0 == 0 /\ tmp^0-tmp^post28 == 0 /\ m64^0-m64^post28 == 0 /\ c^0-c^post28 == 0 /\ -i13^post28+i13^0 == 0 /\ -theta54^post28+theta54^0 == 0 /\ -tmpmask56^post28+tmpmask56^0 == 0 /\ -x43^post28+x43^0 == 0 /\ -x130^post28+x130^0 == 0 /\ x029^0-x029^post28 == 0 /\ t44^0-t44^post28 == 0 /\ ret_latsynth38^0-ret_latsynth38^post28 == 0 /\ -j20^post28+j20^0 == 0 /\ -i61^post28+i61^0 == 0 /\ g51^0-g51^post28 == 0 /\ sum21^0-sum21^post28 == 0 /\ sqr11^0-sqr11^post28 == 0 /\ -bitchanged48^post28+bitchanged48^0 == 0 /\ k63^0-k63^post28 == 0 /\ -sum128^post28+sum128^0 == 0), cost: 1
   8: l13 -> l14 : bitchanged48^0'=bitchanged48^post9, c^0'=c^post9, codeword50^0'=codeword50^post9, d^0'=d^post9, ddim53^0'=ddim53^post9, dotp14^0'=dotp14^post9, f36^0'=f36^post9, g51^0'=g51^post9, h031^0'=h031^post9, h132^0'=h132^post9, i13^0'=i13^post9, i19^0'=i19^post9, i25^0'=i25^post9, i37^0'=i37^post9, i61^0'=i61^post9, j20^0'=j20^post9, j26^0'=j26^post9, j55^0'=j55^post9, j62^0'=j62^post9, k63^0'=k63^post9, m64^0'=m64^post9, mask47^0'=mask47^post9, n35^0'=n35^post9, n45^0'=n45^post9, n65^0'=n65^post9, numbasis49^0'=numbasis49^post9, p66^0'=p66^post9, ret_codebook57^0'=ret_codebook57^post9, ret_latsynth38^0'=ret_latsynth38^post9, ret_mac15^0'=ret_mac15^post9, sqr11^0'=sqr11^post9, sum027^0'=sum027^post9, sum128^0'=sum128^post9, sum21^0'=sum21^post9, t44^0'=t44^post9, theta54^0'=theta54^post9, tmp^0'=tmp^post9, tmp___0^0'=tmp___0^post9, tmpmask56^0'=tmpmask56^post9, x029^0'=x029^post9, x130^0'=x130^post9, x43^0'=x43^post9, (sum128^0-sum128^post9 == 0 /\ -ret_mac15^post9+ret_mac15^0 == 0 /\ -n65^post9+n65^0 == 0 /\ -sum21^post9+sum21^0 == 0 /\ -p66^post9+p66^0 == 0 /\ h132^0-h132^post9 == 0 /\ -ret_codebook57^post9+ret_codebook57^0 == 0 /\ numbasis49^0-numbasis49^post9 == 0 /\ sum027^0-sum027^post9 == 0 /\ -x029^post9+x029^0 == 0 /\ j26^0-j26^post9 == 0 /\ -tmp___0^post9+tmp___0^0 == 0 /\ ddim53^0-ddim53^post9 == 0 /\ theta54^0-theta54^post9 == 0 /\ d^0-d^post9 == 0 /\ n35^0-n35^post9 == 0 /\ -n45^post9+n45^0 == 0 /\ -j20^post9+j20^0 == 0 /\ i25^0-i25^post9 == 0 /\ -mask47^post9+mask47^0 == 0 /\ -j55^post9+j55^0 == 0 /\ -dotp14^post9+dotp14^0 == 0 /\ -tmp^post9+tmp^0 == 0 /\ k63^0-k63^post9 == 0 /\ -x130^post9+x130^0 == 0 /\ -i61^post9+i61^0 == 0 /\ m64^0-m64^post9 == 0 /\ -i19^post9+i19^0 == 0 /\ c^0-c^post9 == 0 /\ -i37^post9+i37^0 == 0 /\ -h031^post9+h031^0 == 0 /\ g51^0-g51^post9 == 0 /\ 9-k63^0 <= 0 /\ -tmpmask56^post9+tmpmask56^0 == 0 /\ -i13^post9+i13^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post9 == 0 /\ -bitchanged48^post9+bitchanged48^0 == 0 /\ t44^0-t44^post9 == 0 /\ f36^0-f36^post9 == 0 /\ -j62^post9+j62^0 == 0 /\ x43^0-x43^post9 == 0 /\ -codeword50^post9+codeword50^0 == 0 /\ sqr11^0-sqr11^post9 == 0), cost: 1
   9: l13 -> l9 : bitchanged48^0'=bitchanged48^post10, c^0'=c^post10, codeword50^0'=codeword50^post10, d^0'=d^post10, ddim53^0'=ddim53^post10, dotp14^0'=dotp14^post10, f36^0'=f36^post10, g51^0'=g51^post10, h031^0'=h031^post10, h132^0'=h132^post10, i13^0'=i13^post10, i19^0'=i19^post10, i25^0'=i25^post10, i37^0'=i37^post10, i61^0'=i61^post10, j20^0'=j20^post10, j26^0'=j26^post10, j55^0'=j55^post10, j62^0'=j62^post10, k63^0'=k63^post10, m64^0'=m64^post10, mask47^0'=mask47^post10, n35^0'=n35^post10, n45^0'=n45^post10, n65^0'=n65^post10, numbasis49^0'=numbasis49^post10, p66^0'=p66^post10, ret_codebook57^0'=ret_codebook57^post10, ret_latsynth38^0'=ret_latsynth38^post10, ret_mac15^0'=ret_mac15^post10, sqr11^0'=sqr11^post10, sum027^0'=sum027^post10, sum128^0'=sum128^post10, sum21^0'=sum21^post10, t44^0'=t44^post10, theta54^0'=theta54^post10, tmp^0'=tmp^post10, tmp___0^0'=tmp___0^post10, tmpmask56^0'=tmpmask56^post10, x029^0'=x029^post10, x130^0'=x130^post10, x43^0'=x43^post10, (i19^0-i19^post10 == 0 /\ numbasis49^0-numbasis49^post10 == 0 /\ -n45^post10+n45^0 == 0 /\ -n65^post10+n65^0 == 0 /\ -tmpmask56^post10+tmpmask56^0 == 0 /\ -mask47^post10+mask47^0 == 0 /\ -j26^post10+j26^0 == 0 /\ -j20^post10+j20^0 == 0 /\ -j62^post10+j62^0 == 0 /\ k63^0-k63^post10 == 0 /\ ddim53^0-ddim53^post10 == 0 /\ ret_latsynth38^0-ret_latsynth38^post10 == 0 /\ c^0-c^post10 == 0 /\ tmp___0^0-tmp___0^post10 == 0 /\ -theta54^post10+theta54^0 == 0 /\ -dotp14^post10+dotp14^0 == 0 /\ -d^post10+d^0 == 0 /\ -i37^post10+i37^0 == 0 /\ -ret_mac15^post10+ret_mac15^0 == 0 /\ -ret_codebook57^post10+ret_codebook57^0 == 0 /\ i25^0-i25^post10 == 0 /\ i61^post10 == 0 /\ -x029^post10+x029^0 == 0 /\ j55^0-j55^post10 == 0 /\ t44^0-t44^post10 == 0 /\ x43^0-x43^post10 == 0 /\ -sum21^post10+sum21^0 == 0 /\ -codeword50^post10+codeword50^0 == 0 /\ -bitchanged48^post10+bitchanged48^0 == 0 /\ n35^0-n35^post10 == 0 /\ -sum128^post10+sum128^0 == 0 /\ g51^0-g51^post10 == 0 /\ m64^0-m64^post10 == 0 /\ sqr11^0-sqr11^post10 == 0 /\ -8+k63^0 <= 0 /\ -f36^post10+f36^0 == 0 /\ -tmp^post10+tmp^0 == 0 /\ -p66^post10+p66^0 == 0 /\ -i13^post10+i13^0 == 0 /\ sum027^0-sum027^post10 == 0 /\ h132^0-h132^post10 == 0 /\ -h031^post10+h031^0 == 0 /\ -x130^post10+x130^0 == 0), cost: 1
  10: l15 -> l12 : bitchanged48^0'=bitchanged48^post11, c^0'=c^post11, codeword50^0'=codeword50^post11, d^0'=d^post11, ddim53^0'=ddim53^post11, dotp14^0'=dotp14^post11, f36^0'=f36^post11, g51^0'=g51^post11, h031^0'=h031^post11, h132^0'=h132^post11, i13^0'=i13^post11, i19^0'=i19^post11, i25^0'=i25^post11, i37^0'=i37^post11, i61^0'=i61^post11, j20^0'=j20^post11, j26^0'=j26^post11, j55^0'=j55^post11, j62^0'=j62^post11, k63^0'=k63^post11, m64^0'=m64^post11, mask47^0'=mask47^post11, n35^0'=n35^post11, n45^0'=n45^post11, n65^0'=n65^post11, numbasis49^0'=numbasis49^post11, p66^0'=p66^post11, ret_codebook57^0'=ret_codebook57^post11, ret_latsynth38^0'=ret_latsynth38^post11, ret_mac15^0'=ret_mac15^post11, sqr11^0'=sqr11^post11, sum027^0'=sum027^post11, sum128^0'=sum128^post11, sum21^0'=sum21^post11, t44^0'=t44^post11, theta54^0'=theta54^post11, tmp^0'=tmp^post11, tmp___0^0'=tmp___0^post11, tmpmask56^0'=tmpmask56^post11, x029^0'=x029^post11, x130^0'=x130^post11, x43^0'=x43^post11, (h031^0-h031^post11 == 0 /\ t44^0-t44^post11 == 0 /\ -ret_latsynth38^post11+ret_latsynth38^0 == 0 /\ mask47^0-mask47^post11 == 0 /\ -g51^0+ret_codebook57^post11 == 0 /\ -ret_mac15^post11+ret_mac15^0 == 0 /\ -i13^post11+i13^0 == 0 /\ -d^post11+d^0 == 0 /\ i19^0-i19^post11 == 0 /\ i25^0-i25^post11 == 0 /\ sum21^0-sum21^post11 == 0 /\ -x130^post11+x130^0 == 0 /\ -1+k63^post11 == 0 /\ -n35^post11+n35^0 == 0 /\ -13+n65^post11 == 0 /\ -j20^post11+j20^0 == 0 /\ -f36^post11+f36^0 == 0 /\ sqr11^0-sqr11^post11 == 0 /\ -theta54^post11+theta54^0 == 0 /\ sum027^0-sum027^post11 == 0 /\ m64^post11 == 0 /\ x029^0-x029^post11 == 0 /\ -i37^post11+i37^0 == 0 /\ c^0-c^post11 == 0 /\ dotp14^0-dotp14^post11 == 0 /\ -bitchanged48^post11+bitchanged48^0 == 0 /\ tmp^0-tmp^post11 == 0 /\ -sum128^post11+sum128^0 == 0 /\ j55^0-j55^post11 == 0 /\ -j26^post11+j26^0 == 0 /\ x43^0-x43^post11 == 0 /\ -n45^post11+n45^0 == 0 /\ -numbasis49^post11+numbasis49^0 == 0 /\ -h132^post11+h132^0 == 0 /\ -codeword50^post11+codeword50^0 == 0 /\ g51^0-g51^post11 == 0 /\ i61^0-i61^post11 == 0 /\ 1-j55^0+numbasis49^0 <= 0 /\ ddim53^0-ddim53^post11 == 0 /\ -8+p66^post11 == 0 /\ j62^0-j62^post11 == 0 /\ -tmpmask56^post11+tmpmask56^0 == 0 /\ tmp___0^post11-ret_codebook57^post11 == 0), cost: 1
  11: l15 -> l16 : bitchanged48^0'=bitchanged48^post12, c^0'=c^post12, codeword50^0'=codeword50^post12, d^0'=d^post12, ddim53^0'=ddim53^post12, dotp14^0'=dotp14^post12, f36^0'=f36^post12, g51^0'=g51^post12, h031^0'=h031^post12, h132^0'=h132^post12, i13^0'=i13^post12, i19^0'=i19^post12, i25^0'=i25^post12, i37^0'=i37^post12, i61^0'=i61^post12, j20^0'=j20^post12, j26^0'=j26^post12, j55^0'=j55^post12, j62^0'=j62^post12, k63^0'=k63^post12, m64^0'=m64^post12, mask47^0'=mask47^post12, n35^0'=n35^post12, n45^0'=n45^post12, n65^0'=n65^post12, numbasis49^0'=numbasis49^post12, p66^0'=p66^post12, ret_codebook57^0'=ret_codebook57^post12, ret_latsynth38^0'=ret_latsynth38^post12, ret_mac15^0'=ret_mac15^post12, sqr11^0'=sqr11^post12, sum027^0'=sum027^post12, sum128^0'=sum128^post12, sum21^0'=sum21^post12, t44^0'=t44^post12, theta54^0'=theta54^post12, tmp^0'=tmp^post12, tmp___0^0'=tmp___0^post12, tmpmask56^0'=tmpmask56^post12, x029^0'=x029^post12, x130^0'=x130^post12, x43^0'=x43^post12, (-1-j55^0+j55^post12 == 0 /\ -tmpmask56^post12+tmpmask56^0 == 0 /\ -n35^post12+n35^0 == 0 /\ -i25^post12+i25^0 == 0 /\ -i37^post12+i37^0 == 0 /\ -i13^post12+i13^0 == 0 /\ -n45^post12+n45^0 == 0 /\ -numbasis49^post12+numbasis49^0 == 0 /\ mask47^0-mask47^post12 == 0 /\ m64^0-m64^post12 == 0 /\ -bitchanged48^post12+bitchanged48^0 == 0 /\ c^0-c^post12 == 0 /\ -j26^post12+j26^0 == 0 /\ -theta54^post12+theta54^0 == 0 /\ -codeword50^post12+codeword50^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post12 == 0 /\ -sum128^post12+sum128^0 == 0 /\ n65^0-n65^post12 == 0 /\ -tmp___0^post12+tmp___0^0 == 0 /\ -x130^post12+x130^0 == 0 /\ -x43^post12+x43^0 == 0 /\ t44^0-t44^post12 == 0 /\ -p66^post12+p66^0 == 0 /\ -f36^post12+f36^0 == 0 /\ -h132^post12+h132^0 == 0 /\ j55^0-numbasis49^0 <= 0 /\ j62^0-j62^post12 == 0 /\ i61^0-i61^post12 == 0 /\ sum21^0-sum21^post12 == 0 /\ i19^0-i19^post12 == 0 /\ x029^0-x029^post12 == 0 /\ tmp^0-tmp^post12 == 0 /\ dotp14^0-dotp14^post12 == 0 /\ g51^0-g51^post12 == 0 /\ sqr11^0-sqr11^post12 == 0 /\ -j20^post12+j20^0 == 0 /\ -d^post12+d^0 == 0 /\ sum027^0-sum027^post12 == 0 /\ -ret_codebook57^post12+ret_codebook57^0 == 0 /\ -k63^post12+k63^0 == 0 /\ h031^0-h031^post12 == 0 /\ ddim53^0-ddim53^post12 == 0 /\ -ret_mac15^post12+ret_mac15^0 == 0), cost: 1
  14: l16 -> l15 : bitchanged48^0'=bitchanged48^post15, c^0'=c^post15, codeword50^0'=codeword50^post15, d^0'=d^post15, ddim53^0'=ddim53^post15, dotp14^0'=dotp14^post15, f36^0'=f36^post15, g51^0'=g51^post15, h031^0'=h031^post15, h132^0'=h132^post15, i13^0'=i13^post15, i19^0'=i19^post15, i25^0'=i25^post15, i37^0'=i37^post15, i61^0'=i61^post15, j20^0'=j20^post15, j26^0'=j26^post15, j55^0'=j55^post15, j62^0'=j62^post15, k63^0'=k63^post15, m64^0'=m64^post15, mask47^0'=mask47^post15, n35^0'=n35^post15, n45^0'=n45^post15, n65^0'=n65^post15, numbasis49^0'=numbasis49^post15, p66^0'=p66^post15, ret_codebook57^0'=ret_codebook57^post15, ret_latsynth38^0'=ret_latsynth38^post15, ret_mac15^0'=ret_mac15^post15, sqr11^0'=sqr11^post15, sum027^0'=sum027^post15, sum128^0'=sum128^post15, sum21^0'=sum21^post15, t44^0'=t44^post15, theta54^0'=theta54^post15, tmp^0'=tmp^post15, tmp___0^0'=tmp___0^post15, tmpmask56^0'=tmpmask56^post15, x029^0'=x029^post15, x130^0'=x130^post15, x43^0'=x43^post15, (x029^0-x029^post15 == 0 /\ f36^0-f36^post15 == 0 /\ -i13^post15+i13^0 == 0 /\ sum21^0-sum21^post15 == 0 /\ -bitchanged48^post15+bitchanged48^0 == 0 /\ -h031^post15+h031^0 == 0 /\ -theta54^post15+theta54^0 == 0 /\ -codeword50^post15+codeword50^0 == 0 /\ -dotp14^post15+dotp14^0 == 0 /\ -d^post15+d^0 == 0 /\ j55^0-j55^post15 == 0 /\ tmp^0-tmp^post15 == 0 /\ -ret_mac15^post15+ret_mac15^0 == 0 /\ n65^0-n65^post15 == 0 /\ -sum128^post15+sum128^0 == 0 /\ -t44^post15+t44^0 == 0 /\ numbasis49^0-numbasis49^post15 == 0 /\ ret_latsynth38^0-ret_latsynth38^post15 == 0 /\ -x130^post15+x130^0 == 0 /\ ddim53^0-ddim53^post15 == 0 /\ -p66^post15+p66^0 == 0 /\ -i37^post15+i37^0 == 0 /\ i25^0-i25^post15 == 0 /\ m64^0-m64^post15 == 0 /\ g51^0-g51^post15 == 0 /\ sqr11^0-sqr11^post15 == 0 /\ mask47^0-mask47^post15 == 0 /\ -n45^post15+n45^0 == 0 /\ ret_codebook57^0-ret_codebook57^post15 == 0 /\ c^0-c^post15 == 0 /\ -k63^post15+k63^0 == 0 /\ -j20^post15+j20^0 == 0 /\ -j26^post15+j26^0 == 0 /\ -n35^post15+n35^0 == 0 /\ -j62^post15+j62^0 == 0 /\ h132^0-h132^post15 == 0 /\ i61^0-i61^post15 == 0 /\ -sum027^post15+sum027^0 == 0 /\ -x43^post15+x43^0 == 0 /\ -i19^post15+i19^0 == 0 /\ -tmpmask56^post15+tmpmask56^0 == 0 /\ tmp___0^0-tmp___0^post15 == 0), cost: 1
  21: l17 -> l18 : bitchanged48^0'=bitchanged48^post22, c^0'=c^post22, codeword50^0'=codeword50^post22, d^0'=d^post22, ddim53^0'=ddim53^post22, dotp14^0'=dotp14^post22, f36^0'=f36^post22, g51^0'=g51^post22, h031^0'=h031^post22, h132^0'=h132^post22, i13^0'=i13^post22, i19^0'=i19^post22, i25^0'=i25^post22, i37^0'=i37^post22, i61^0'=i61^post22, j20^0'=j20^post22, j26^0'=j26^post22, j55^0'=j55^post22, j62^0'=j62^post22, k63^0'=k63^post22, m64^0'=m64^post22, mask47^0'=mask47^post22, n35^0'=n35^post22, n45^0'=n45^post22, n65^0'=n65^post22, numbasis49^0'=numbasis49^post22, p66^0'=p66^post22, ret_codebook57^0'=ret_codebook57^post22, ret_latsynth38^0'=ret_latsynth38^post22, ret_mac15^0'=ret_mac15^post22, sqr11^0'=sqr11^post22, sum027^0'=sum027^post22, sum128^0'=sum128^post22, sum21^0'=sum21^post22, t44^0'=t44^post22, theta54^0'=theta54^post22, tmp^0'=tmp^post22, tmp___0^0'=tmp___0^post22, tmpmask56^0'=tmpmask56^post22, x029^0'=x029^post22, x130^0'=x130^post22, x43^0'=x43^post22, (sqr11^0-sqr11^post22 == 0 /\ -1-i19^0+i19^post22 == 0 /\ tmp^0-tmp^post22 == 0 /\ c^0-c^post22 == 0 /\ codeword50^0-codeword50^post22 == 0 /\ -k63^post22+k63^0 == 0 /\ -sum128^post22+sum128^0 == 0 /\ -bitchanged48^post22+bitchanged48^0 == 0 /\ g51^0-g51^post22 == 0 /\ 50-j20^0 <= 0 /\ h031^0-h031^post22 == 0 /\ m64^0-m64^post22 == 0 /\ -i37^post22+i37^0 == 0 /\ t44^0-t44^post22 == 0 /\ -h132^post22+h132^0 == 0 /\ -d^post22+d^0 == 0 /\ i61^0-i61^post22 == 0 /\ sum21^0-sum21^post22 == 0 /\ mask47^0-mask47^post22 == 0 /\ -numbasis49^post22+numbasis49^0 == 0 /\ -tmpmask56^post22+tmpmask56^0 == 0 /\ n65^0-n65^post22 == 0 /\ -x43^post22+x43^0 == 0 /\ -ret_mac15^post22+ret_mac15^0 == 0 /\ -n45^post22+n45^0 == 0 /\ -j20^post22+j20^0 == 0 /\ j55^0-j55^post22 == 0 /\ dotp14^0-dotp14^post22 == 0 /\ ddim53^0-ddim53^post22 == 0 /\ -theta54^post22+theta54^0 == 0 /\ sum027^0-sum027^post22 == 0 /\ j62^0-j62^post22 == 0 /\ tmp___0^0-tmp___0^post22 == 0 /\ -j26^post22+j26^0 == 0 /\ -f36^post22+f36^0 == 0 /\ x029^0-x029^post22 == 0 /\ ret_latsynth38^0-ret_latsynth38^post22 == 0 /\ -i25^post22+i25^0 == 0 /\ -i13^post22+i13^0 == 0 /\ ret_codebook57^0-ret_codebook57^post22 == 0 /\ -n35^post22+n35^0 == 0 /\ -x130^post22+x130^0 == 0 /\ -p66^post22+p66^0 == 0), cost: 1
  22: l17 -> l19 : bitchanged48^0'=bitchanged48^post23, c^0'=c^post23, codeword50^0'=codeword50^post23, d^0'=d^post23, ddim53^0'=ddim53^post23, dotp14^0'=dotp14^post23, f36^0'=f36^post23, g51^0'=g51^post23, h031^0'=h031^post23, h132^0'=h132^post23, i13^0'=i13^post23, i19^0'=i19^post23, i25^0'=i25^post23, i37^0'=i37^post23, i61^0'=i61^post23, j20^0'=j20^post23, j26^0'=j26^post23, j55^0'=j55^post23, j62^0'=j62^post23, k63^0'=k63^post23, m64^0'=m64^post23, mask47^0'=mask47^post23, n35^0'=n35^post23, n45^0'=n45^post23, n65^0'=n65^post23, numbasis49^0'=numbasis49^post23, p66^0'=p66^post23, ret_codebook57^0'=ret_codebook57^post23, ret_latsynth38^0'=ret_latsynth38^post23, ret_mac15^0'=ret_mac15^post23, sqr11^0'=sqr11^post23, sum027^0'=sum027^post23, sum128^0'=sum128^post23, sum21^0'=sum21^post23, t44^0'=t44^post23, theta54^0'=theta54^post23, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post23, tmpmask56^0'=tmpmask56^post23, x029^0'=x029^post23, x130^0'=x130^post23, x43^0'=x43^post23, (0 == 0 /\ -theta54^post23+theta54^0 == 0 /\ -h132^post23+h132^0 == 0 /\ -i37^post23+i37^0 == 0 /\ -i25^post23+i25^0 == 0 /\ x029^0-x029^post23 == 0 /\ g51^0-g51^post23 == 0 /\ ret_codebook57^0-ret_codebook57^post23 == 0 /\ -i13^post23+i13^0 == 0 /\ mask47^0-mask47^post23 == 0 /\ c^0-c^post23 == 0 /\ -x43^post23+x43^0 == 0 /\ h031^0-h031^post23 == 0 /\ tmp^0-tmp^post23 == 0 /\ m64^0-m64^post23 == 0 /\ -j26^post23+j26^0 == 0 /\ -n35^post23+n35^0 == 0 /\ -t44^post23+t44^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post23 == 0 /\ -d^post23+d^0 == 0 /\ -1+j20^post23-j20^0 == 0 /\ -sum128^post23+sum128^0 == 0 /\ dotp14^0-dotp14^post23 == 0 /\ j55^0-j55^post23 == 0 /\ i19^0-i19^post23 == 0 /\ j62^0-j62^post23 == 0 /\ sqr11^0-sqr11^post23 == 0 /\ i61^0-i61^post23 == 0 /\ -ret_mac15^post23+ret_mac15^0 == 0 /\ n65^0-n65^post23 == 0 /\ -x130^post23+x130^0 == 0 /\ -p66^post23+p66^0 == 0 /\ ddim53^0-ddim53^post23 == 0 /\ -numbasis49^post23+numbasis49^0 == 0 /\ -bitchanged48^post23+bitchanged48^0 == 0 /\ -49+j20^0 <= 0 /\ -n45^post23+n45^0 == 0 /\ -tmpmask56^post23+tmpmask56^0 == 0 /\ -k63^post23+k63^0 == 0 /\ -codeword50^post23+codeword50^0 == 0 /\ tmp___0^0-tmp___0^post23 == 0 /\ -sum027^post23+sum027^0 == 0 /\ -f36^post23+f36^0 == 0), cost: 1
  31: l18 -> l20 : bitchanged48^0'=bitchanged48^post32, c^0'=c^post32, codeword50^0'=codeword50^post32, d^0'=d^post32, ddim53^0'=ddim53^post32, dotp14^0'=dotp14^post32, f36^0'=f36^post32, g51^0'=g51^post32, h031^0'=h031^post32, h132^0'=h132^post32, i13^0'=i13^post32, i19^0'=i19^post32, i25^0'=i25^post32, i37^0'=i37^post32, i61^0'=i61^post32, j20^0'=j20^post32, j26^0'=j26^post32, j55^0'=j55^post32, j62^0'=j62^post32, k63^0'=k63^post32, m64^0'=m64^post32, mask47^0'=mask47^post32, n35^0'=n35^post32, n45^0'=n45^post32, n65^0'=n65^post32, numbasis49^0'=numbasis49^post32, p66^0'=p66^post32, ret_codebook57^0'=ret_codebook57^post32, ret_latsynth38^0'=ret_latsynth38^post32, ret_mac15^0'=ret_mac15^post32, sqr11^0'=sqr11^post32, sum027^0'=sum027^post32, sum128^0'=sum128^post32, sum21^0'=sum21^post32, t44^0'=t44^post32, theta54^0'=theta54^post32, tmp^0'=tmp^post32, tmp___0^0'=tmp___0^post32, tmpmask56^0'=tmpmask56^post32, x029^0'=x029^post32, x130^0'=x130^post32, x43^0'=x43^post32, (-n45^post32+n45^0 == 0 /\ ddim53^0-ddim53^post32 == 0 /\ -n65^post32+n65^0 == 0 /\ h132^0-h132^post32 == 0 /\ -j26^post32+j26^0 == 0 /\ -j62^post32+j62^0 == 0 /\ -tmpmask56^post32+tmpmask56^0 == 0 /\ -ret_codebook57^post32+ret_codebook57^0 == 0 /\ -p66^post32+p66^0 == 0 /\ d^0-d^post32 == 0 /\ k63^0-k63^post32 == 0 /\ -j20^post32+j20^0 == 0 /\ numbasis49^0-numbasis49^post32 == 0 /\ -mask47^post32+mask47^0 == 0 /\ -theta54^post32+theta54^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post32 == 0 /\ tmp___0^0-tmp___0^post32 == 0 /\ bitchanged48^0-bitchanged48^post32 == 0 /\ i25^0-i25^post32 == 0 /\ j55^0-j55^post32 == 0 /\ -codeword50^post32+codeword50^0 == 0 /\ -ret_mac15^post32+ret_mac15^0 == 0 /\ -x029^post32+x029^0 == 0 /\ -x130^post32+x130^0 == 0 /\ -sum128^post32+sum128^0 == 0 /\ t44^0-t44^post32 == 0 /\ sqr11^0-sqr11^post32 == 0 /\ -dotp14^post32+dotp14^0 == 0 /\ -i37^post32+i37^0 == 0 /\ -h031^post32+h031^0 == 0 /\ -i61^post32+i61^0 == 0 /\ -i13^post32+i13^0 == 0 /\ -i19^post32+i19^0 == 0 /\ n35^0-n35^post32 == 0 /\ -sum21^post32+sum21^0 == 0 /\ -tmp^post32+tmp^0 == 0 /\ m64^0-m64^post32 == 0 /\ g51^0-g51^post32 == 0 /\ f36^0-f36^post32 == 0 /\ x43^0-x43^post32 == 0 /\ sum027^0-sum027^post32 == 0 /\ -c^post32+c^0 == 0), cost: 1
  32: l19 -> l17 : bitchanged48^0'=bitchanged48^post33, c^0'=c^post33, codeword50^0'=codeword50^post33, d^0'=d^post33, ddim53^0'=ddim53^post33, dotp14^0'=dotp14^post33, f36^0'=f36^post33, g51^0'=g51^post33, h031^0'=h031^post33, h132^0'=h132^post33, i13^0'=i13^post33, i19^0'=i19^post33, i25^0'=i25^post33, i37^0'=i37^post33, i61^0'=i61^post33, j20^0'=j20^post33, j26^0'=j26^post33, j55^0'=j55^post33, j62^0'=j62^post33, k63^0'=k63^post33, m64^0'=m64^post33, mask47^0'=mask47^post33, n35^0'=n35^post33, n45^0'=n45^post33, n65^0'=n65^post33, numbasis49^0'=numbasis49^post33, p66^0'=p66^post33, ret_codebook57^0'=ret_codebook57^post33, ret_latsynth38^0'=ret_latsynth38^post33, ret_mac15^0'=ret_mac15^post33, sqr11^0'=sqr11^post33, sum027^0'=sum027^post33, sum128^0'=sum128^post33, sum21^0'=sum21^post33, t44^0'=t44^post33, theta54^0'=theta54^post33, tmp^0'=tmp^post33, tmp___0^0'=tmp___0^post33, tmpmask56^0'=tmpmask56^post33, x029^0'=x029^post33, x130^0'=x130^post33, x43^0'=x43^post33, (-j20^post33+j20^0 == 0 /\ x029^0-x029^post33 == 0 /\ k63^0-k63^post33 == 0 /\ -j26^post33+j26^0 == 0 /\ ddim53^0-ddim53^post33 == 0 /\ f36^0-f36^post33 == 0 /\ i25^0-i25^post33 == 0 /\ -j62^post33+j62^0 == 0 /\ -x130^post33+x130^0 == 0 /\ numbasis49^0-numbasis49^post33 == 0 /\ -theta54^post33+theta54^0 == 0 /\ -d^post33+d^0 == 0 /\ -i13^post33+i13^0 == 0 /\ -h031^post33+h031^0 == 0 /\ -i61^post33+i61^0 == 0 /\ -p66^post33+p66^0 == 0 /\ g51^0-g51^post33 == 0 /\ -n65^post33+n65^0 == 0 /\ j55^0-j55^post33 == 0 /\ t44^0-t44^post33 == 0 /\ ret_codebook57^0-ret_codebook57^post33 == 0 /\ n35^0-n35^post33 == 0 /\ ret_latsynth38^0-ret_latsynth38^post33 == 0 /\ -tmp^post33+tmp^0 == 0 /\ -sum128^post33+sum128^0 == 0 /\ mask47^0-mask47^post33 == 0 /\ -sum21^post33+sum21^0 == 0 /\ h132^0-h132^post33 == 0 /\ c^0-c^post33 == 0 /\ m64^0-m64^post33 == 0 /\ -x43^post33+x43^0 == 0 /\ sqr11^0-sqr11^post33 == 0 /\ -codeword50^post33+codeword50^0 == 0 /\ -bitchanged48^post33+bitchanged48^0 == 0 /\ -tmpmask56^post33+tmpmask56^0 == 0 /\ -ret_mac15^post33+ret_mac15^0 == 0 /\ -dotp14^post33+dotp14^0 == 0 /\ -i37^post33+i37^0 == 0 /\ tmp___0^0-tmp___0^post33 == 0 /\ -i19^post33+i19^0 == 0 /\ sum027^0-sum027^post33 == 0 /\ -n45^post33+n45^0 == 0), cost: 1
  23: l20 -> l0 : bitchanged48^0'=bitchanged48^post24, c^0'=c^post24, codeword50^0'=codeword50^post24, d^0'=d^post24, ddim53^0'=ddim53^post24, dotp14^0'=dotp14^post24, f36^0'=f36^post24, g51^0'=g51^post24, h031^0'=h031^post24, h132^0'=h132^post24, i13^0'=i13^post24, i19^0'=i19^post24, i25^0'=i25^post24, i37^0'=i37^post24, i61^0'=i61^post24, j20^0'=j20^post24, j26^0'=j26^post24, j55^0'=j55^post24, j62^0'=j62^post24, k63^0'=k63^post24, m64^0'=m64^post24, mask47^0'=mask47^post24, n35^0'=n35^post24, n45^0'=n45^post24, n65^0'=n65^post24, numbasis49^0'=numbasis49^post24, p66^0'=p66^post24, ret_codebook57^0'=ret_codebook57^post24, ret_latsynth38^0'=ret_latsynth38^post24, ret_mac15^0'=ret_mac15^post24, sqr11^0'=sqr11^post24, sum027^0'=sum027^post24, sum128^0'=sum128^post24, sum21^0'=sum21^post24, t44^0'=t44^post24, theta54^0'=theta54^post24, tmp^0'=tmp^post24, tmp___0^0'=tmp___0^post24, tmpmask56^0'=tmpmask56^post24, x029^0'=x029^post24, x130^0'=x130^post24, x43^0'=x43^post24, (mask47^0-mask47^post24 == 0 /\ -f36^post24+f36^0 == 0 /\ c^0-c^post24 == 0 /\ m64^0-m64^post24 == 0 /\ -i25^post24+i25^0 == 0 /\ -tmp___0^post24+tmp___0^0 == 0 /\ -i37^post24+i37^0 == 0 /\ -i13^post24+i13^0 == 0 /\ g51^0-g51^post24 == 0 /\ -d^post24+d^0 == 0 /\ ret_codebook57^0-ret_codebook57^post24 == 0 /\ -sum21^post24+sum21^0 == 0 /\ -h132^post24+h132^0 == 0 /\ -sum128^post24+sum128^0 == 0 /\ codeword50^0-codeword50^post24 == 0 /\ h031^0-h031^post24 == 0 /\ t44^0-t44^post24 == 0 /\ j26^post24 == 0 /\ -x130^post24+x130^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post24 == 0 /\ -j62^post24+j62^0 == 0 /\ -ret_mac15^post24+ret_mac15^0 == 0 /\ -p66^post24+p66^0 == 0 /\ -numbasis49^post24+numbasis49^0 == 0 /\ x029^0-x029^post24 == 0 /\ -k63^post24+k63^0 == 0 /\ -tmpmask56^post24+tmpmask56^0 == 0 /\ j55^0-j55^post24 == 0 /\ sqr11^0-sqr11^post24 == 0 /\ sum027^0-sum027^post24 == 0 /\ -n45^post24+n45^0 == 0 /\ -j20^post24+j20^0 == 0 /\ i19^0-i19^post24 == 0 /\ dotp14^0-dotp14^post24 == 0 /\ i61^0-i61^post24 == 0 /\ ddim53^0-ddim53^post24 == 0 /\ -theta54^post24+theta54^0 == 0 /\ n65^0-n65^post24 == 0 /\ n35^0-n35^post24 == 0 /\ 50-i19^0 <= 0 /\ -bitchanged48^post24+bitchanged48^0 == 0 /\ -x43^post24+x43^0 == 0 /\ tmp^0-tmp^post24 == 0), cost: 1
  24: l20 -> l19 : bitchanged48^0'=bitchanged48^post25, c^0'=c^post25, codeword50^0'=codeword50^post25, d^0'=d^post25, ddim53^0'=ddim53^post25, dotp14^0'=dotp14^post25, f36^0'=f36^post25, g51^0'=g51^post25, h031^0'=h031^post25, h132^0'=h132^post25, i13^0'=i13^post25, i19^0'=i19^post25, i25^0'=i25^post25, i37^0'=i37^post25, i61^0'=i61^post25, j20^0'=j20^post25, j26^0'=j26^post25, j55^0'=j55^post25, j62^0'=j62^post25, k63^0'=k63^post25, m64^0'=m64^post25, mask47^0'=mask47^post25, n35^0'=n35^post25, n45^0'=n45^post25, n65^0'=n65^post25, numbasis49^0'=numbasis49^post25, p66^0'=p66^post25, ret_codebook57^0'=ret_codebook57^post25, ret_latsynth38^0'=ret_latsynth38^post25, ret_mac15^0'=ret_mac15^post25, sqr11^0'=sqr11^post25, sum027^0'=sum027^post25, sum128^0'=sum128^post25, sum21^0'=sum21^post25, t44^0'=t44^post25, theta54^0'=theta54^post25, tmp^0'=tmp^post25, tmp___0^0'=tmp___0^post25, tmpmask56^0'=tmpmask56^post25, x029^0'=x029^post25, x130^0'=x130^post25, x43^0'=x43^post25, (d^0-d^post25 == 0 /\ x43^0-x43^post25 == 0 /\ -i61^post25+i61^0 == 0 /\ -49+i19^0 <= 0 /\ -sum128^post25+sum128^0 == 0 /\ -theta54^post25+theta54^0 == 0 /\ ret_mac15^0-ret_mac15^post25 == 0 /\ -i19^post25+i19^0 == 0 /\ -mask47^post25+mask47^0 == 0 /\ -tmpmask56^post25+tmpmask56^0 == 0 /\ -ret_codebook57^post25+ret_codebook57^0 == 0 /\ n35^0-n35^post25 == 0 /\ -ddim53^post25+ddim53^0 == 0 /\ bitchanged48^0-bitchanged48^post25 == 0 /\ -j62^post25+j62^0 == 0 /\ -codeword50^post25+codeword50^0 == 0 /\ -g51^post25+g51^0 == 0 /\ k63^0-k63^post25 == 0 /\ h132^0-h132^post25 == 0 /\ f36^0-f36^post25 == 0 /\ m64^0-m64^post25 == 0 /\ -dotp14^post25+dotp14^0 == 0 /\ -tmp___0^post25+tmp___0^0 == 0 /\ -n45^post25+n45^0 == 0 /\ t44^0-t44^post25 == 0 /\ numbasis49^0-numbasis49^post25 == 0 /\ j20^post25 == 0 /\ i25^0-i25^post25 == 0 /\ sum027^0-sum027^post25 == 0 /\ -n65^post25+n65^0 == 0 /\ -p66^post25+p66^0 == 0 /\ tmp^0-tmp^post25 == 0 /\ -i13^post25+i13^0 == 0 /\ -sqr11^post25+sqr11^0 == 0 /\ -j55^post25+j55^0 == 0 /\ -x130^post25+x130^0 == 0 /\ -h031^post25+h031^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post25 == 0 /\ -c^post25+c^0 == 0 /\ x029^0-x029^post25 == 0 /\ j26^0-j26^post25 == 0 /\ i37^0-i37^post25 == 0 /\ sum21^post25 == 0), cost: 1
  25: l21 -> l18 : bitchanged48^0'=bitchanged48^post26, c^0'=c^post26, codeword50^0'=codeword50^post26, d^0'=d^post26, ddim53^0'=ddim53^post26, dotp14^0'=dotp14^post26, f36^0'=f36^post26, g51^0'=g51^post26, h031^0'=h031^post26, h132^0'=h132^post26, i13^0'=i13^post26, i19^0'=i19^post26, i25^0'=i25^post26, i37^0'=i37^post26, i61^0'=i61^post26, j20^0'=j20^post26, j26^0'=j26^post26, j55^0'=j55^post26, j62^0'=j62^post26, k63^0'=k63^post26, m64^0'=m64^post26, mask47^0'=mask47^post26, n35^0'=n35^post26, n45^0'=n45^post26, n65^0'=n65^post26, numbasis49^0'=numbasis49^post26, p66^0'=p66^post26, ret_codebook57^0'=ret_codebook57^post26, ret_latsynth38^0'=ret_latsynth38^post26, ret_mac15^0'=ret_mac15^post26, sqr11^0'=sqr11^post26, sum027^0'=sum027^post26, sum128^0'=sum128^post26, sum21^0'=sum21^post26, t44^0'=t44^post26, theta54^0'=theta54^post26, tmp^0'=tmp^post26, tmp___0^0'=tmp___0^post26, tmpmask56^0'=tmpmask56^post26, x029^0'=x029^post26, x130^0'=x130^post26, x43^0'=x43^post26, (-x43^post26+x43^0 == 0 /\ -x130^post26+x130^0 == 0 /\ -sum128^post26+sum128^0 == 0 /\ bitchanged48^0-bitchanged48^post26 == 0 /\ sqr11^0-sqr11^post26 == 0 /\ -dotp14^post26+dotp14^0 == 0 /\ -h031^post26+h031^0 == 0 /\ j55^0-j55^post26 == 0 /\ -g51^post26+g51^0 == 0 /\ c^post26-tmp^post26 == 0 /\ i13^0-i13^post26 == 0 /\ t44^0-t44^post26 == 0 /\ h132^0-h132^post26 == 0 /\ 150-i13^0 <= 0 /\ n65^0-n65^post26 == 0 /\ numbasis49^0-numbasis49^post26 == 0 /\ -i37^post26+i37^0 == 0 /\ i25^0-i25^post26 == 0 /\ sum21^0-sum21^post26 == 0 /\ tmp___0^0-tmp___0^post26 == 0 /\ m64^0-m64^post26 == 0 /\ -n45^post26+n45^0 == 0 /\ -tmpmask56^post26+tmpmask56^0 == 0 /\ -k63^post26+k63^0 == 0 /\ mask47^0-mask47^post26 == 0 /\ -j26^post26+j26^0 == 0 /\ -j62^post26+j62^0 == 0 /\ -p66^post26+p66^0 == 0 /\ f36^0-f36^post26 == 0 /\ i19^post26 == 0 /\ sum027^0-sum027^post26 == 0 /\ -j20^post26+j20^0 == 0 /\ -n35^post26+n35^0 == 0 /\ -theta54^post26+theta54^0 == 0 /\ i61^0-i61^post26 == 0 /\ ret_latsynth38^0-ret_latsynth38^post26 == 0 /\ ret_codebook57^0-ret_codebook57^post26 == 0 /\ d^0-d^post26 == 0 /\ -ddim53^post26+ddim53^0 == 0 /\ ret_mac15^post26-sqr11^0 == 0 /\ x029^0-x029^post26 == 0 /\ -ret_mac15^post26+tmp^post26 == 0 /\ -codeword50^post26+codeword50^0 == 0), cost: 1
  26: l21 -> l22 : bitchanged48^0'=bitchanged48^post27, c^0'=c^post27, codeword50^0'=codeword50^post27, d^0'=d^post27, ddim53^0'=ddim53^post27, dotp14^0'=dotp14^post27, f36^0'=f36^post27, g51^0'=g51^post27, h031^0'=h031^post27, h132^0'=h132^post27, i13^0'=i13^post27, i19^0'=i19^post27, i25^0'=i25^post27, i37^0'=i37^post27, i61^0'=i61^post27, j20^0'=j20^post27, j26^0'=j26^post27, j55^0'=j55^post27, j62^0'=j62^post27, k63^0'=k63^post27, m64^0'=m64^post27, mask47^0'=mask47^post27, n35^0'=n35^post27, n45^0'=n45^post27, n65^0'=n65^post27, numbasis49^0'=numbasis49^post27, p66^0'=p66^post27, ret_codebook57^0'=ret_codebook57^post27, ret_latsynth38^0'=ret_latsynth38^post27, ret_mac15^0'=ret_mac15^post27, sqr11^0'=sqr11^post27, sum027^0'=sum027^post27, sum128^0'=sum128^post27, sum21^0'=sum21^post27, t44^0'=t44^post27, theta54^0'=theta54^post27, tmp^0'=tmp^post27, tmp___0^0'=tmp___0^post27, tmpmask56^0'=tmpmask56^post27, x029^0'=x029^post27, x130^0'=x130^post27, x43^0'=x43^post27, (0 == 0 /\ i19^0-i19^post27 == 0 /\ ddim53^0-ddim53^post27 == 0 /\ -bitchanged48^post27+bitchanged48^0 == 0 /\ -sum128^post27+sum128^0 == 0 /\ -x43^post27+x43^0 == 0 /\ -tmp___0^post27+tmp___0^0 == 0 /\ c^0-c^post27 == 0 /\ -k63^post27+k63^0 == 0 /\ -tmpmask56^post27+tmpmask56^0 == 0 /\ x029^0-x029^post27 == 0 /\ -ret_mac15^post27+ret_mac15^0 == 0 /\ mask47^0-mask47^post27 == 0 /\ -i37^post27+i37^0 == 0 /\ n65^0-n65^post27 == 0 /\ -n45^post27+n45^0 == 0 /\ -1+i13^post27-i13^0 == 0 /\ i25^0-i25^post27 == 0 /\ -numbasis49^post27+numbasis49^0 == 0 /\ -theta54^post27+theta54^0 == 0 /\ j62^0-j62^post27 == 0 /\ tmp^0-tmp^post27 == 0 /\ -j20^post27+j20^0 == 0 /\ -149+i13^0 <= 0 /\ t44^0-t44^post27 == 0 /\ -d^post27+d^0 == 0 /\ -j26^post27+j26^0 == 0 /\ g51^0-g51^post27 == 0 /\ sum027^0-sum027^post27 == 0 /\ m64^0-m64^post27 == 0 /\ -codeword50^post27+codeword50^0 == 0 /\ -x130^post27+x130^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post27 == 0 /\ i61^0-i61^post27 == 0 /\ ret_codebook57^0-ret_codebook57^post27 == 0 /\ sum21^0-sum21^post27 == 0 /\ -n35^post27+n35^0 == 0 /\ -f36^post27+f36^0 == 0 /\ -h031^post27+h031^0 == 0 /\ h132^0-h132^post27 == 0 /\ j55^0-j55^post27 == 0 /\ -p66^post27+p66^0 == 0), cost: 1
  30: l22 -> l21 : bitchanged48^0'=bitchanged48^post31, c^0'=c^post31, codeword50^0'=codeword50^post31, d^0'=d^post31, ddim53^0'=ddim53^post31, dotp14^0'=dotp14^post31, f36^0'=f36^post31, g51^0'=g51^post31, h031^0'=h031^post31, h132^0'=h132^post31, i13^0'=i13^post31, i19^0'=i19^post31, i25^0'=i25^post31, i37^0'=i37^post31, i61^0'=i61^post31, j20^0'=j20^post31, j26^0'=j26^post31, j55^0'=j55^post31, j62^0'=j62^post31, k63^0'=k63^post31, m64^0'=m64^post31, mask47^0'=mask47^post31, n35^0'=n35^post31, n45^0'=n45^post31, n65^0'=n65^post31, numbasis49^0'=numbasis49^post31, p66^0'=p66^post31, ret_codebook57^0'=ret_codebook57^post31, ret_latsynth38^0'=ret_latsynth38^post31, ret_mac15^0'=ret_mac15^post31, sqr11^0'=sqr11^post31, sum027^0'=sum027^post31, sum128^0'=sum128^post31, sum21^0'=sum21^post31, t44^0'=t44^post31, theta54^0'=theta54^post31, tmp^0'=tmp^post31, tmp___0^0'=tmp___0^post31, tmpmask56^0'=tmpmask56^post31, x029^0'=x029^post31, x130^0'=x130^post31, x43^0'=x43^post31, (ddim53^0-ddim53^post31 == 0 /\ h132^0-h132^post31 == 0 /\ j26^0-j26^post31 == 0 /\ x029^0-x029^post31 == 0 /\ -p66^post31+p66^0 == 0 /\ numbasis49^0-numbasis49^post31 == 0 /\ -n45^post31+n45^0 == 0 /\ d^0-d^post31 == 0 /\ i25^0-i25^post31 == 0 /\ -j55^post31+j55^0 == 0 /\ n35^0-n35^post31 == 0 /\ -j20^post31+j20^0 == 0 /\ -tmpmask56^post31+tmpmask56^0 == 0 /\ -mask47^post31+mask47^0 == 0 /\ -dotp14^post31+dotp14^0 == 0 /\ -tmp___0^post31+tmp___0^0 == 0 /\ k63^0-k63^post31 == 0 /\ tmp^0-tmp^post31 == 0 /\ -i61^post31+i61^0 == 0 /\ bitchanged48^0-bitchanged48^post31 == 0 /\ ret_latsynth38^0-ret_latsynth38^post31 == 0 /\ g51^0-g51^post31 == 0 /\ -sum027^post31+sum027^0 == 0 /\ -theta54^post31+theta54^0 == 0 /\ m64^0-m64^post31 == 0 /\ -i37^post31+i37^0 == 0 /\ -i19^post31+i19^0 == 0 /\ -i13^post31+i13^0 == 0 /\ t44^0-t44^post31 == 0 /\ c^0-c^post31 == 0 /\ -h031^post31+h031^0 == 0 /\ -ret_codebook57^post31+ret_codebook57^0 == 0 /\ -ret_mac15^post31+ret_mac15^0 == 0 /\ sqr11^0-sqr11^post31 == 0 /\ -sum128^post31+sum128^0 == 0 /\ -n65^post31+n65^0 == 0 /\ -j62^post31+j62^0 == 0 /\ -x43^post31+x43^0 == 0 /\ sum21^0-sum21^post31 == 0 /\ -codeword50^post31+codeword50^0 == 0 /\ -x130^post31+x130^0 == 0 /\ f36^0-f36^post31 == 0), cost: 1
  33: l23 -> l22 : bitchanged48^0'=bitchanged48^post34, c^0'=c^post34, codeword50^0'=codeword50^post34, d^0'=d^post34, ddim53^0'=ddim53^post34, dotp14^0'=dotp14^post34, f36^0'=f36^post34, g51^0'=g51^post34, h031^0'=h031^post34, h132^0'=h132^post34, i13^0'=i13^post34, i19^0'=i19^post34, i25^0'=i25^post34, i37^0'=i37^post34, i61^0'=i61^post34, j20^0'=j20^post34, j26^0'=j26^post34, j55^0'=j55^post34, j62^0'=j62^post34, k63^0'=k63^post34, m64^0'=m64^post34, mask47^0'=mask47^post34, n35^0'=n35^post34, n45^0'=n45^post34, n65^0'=n65^post34, numbasis49^0'=numbasis49^post34, p66^0'=p66^post34, ret_codebook57^0'=ret_codebook57^post34, ret_latsynth38^0'=ret_latsynth38^post34, ret_mac15^0'=ret_mac15^post34, sqr11^0'=sqr11^post34, sum027^0'=sum027^post34, sum128^0'=sum128^post34, sum21^0'=sum21^post34, t44^0'=t44^post34, theta54^0'=theta54^post34, tmp^0'=tmp^post34, tmp___0^0'=tmp___0^post34, tmpmask56^0'=tmpmask56^post34, x029^0'=x029^post34, x130^0'=x130^post34, x43^0'=x43^post34, (0 == 0 /\ -j62^post34+j62^0 == 0 /\ -n65^post34+n65^0 == 0 /\ -j26^post34+j26^0 == 0 /\ -i19^post34+i19^0 == 0 /\ -i37^post34+i37^0 == 0 /\ -p66^post34+p66^0 == 0 /\ i25^0-i25^post34 == 0 /\ -mask47^post34+mask47^0 == 0 /\ sum21^0-sum21^post34 == 0 /\ -theta54^post34+theta54^0 == 0 /\ numbasis49^0-numbasis49^post34 == 0 /\ -tmpmask56^post34+tmpmask56^0 == 0 /\ x029^0-x029^post34 == 0 /\ ret_codebook57^0-ret_codebook57^post34 == 0 /\ tmp^0-tmp^post34 == 0 /\ -j20^post34+j20^0 == 0 /\ -n45^post34+n45^0 == 0 /\ k63^0-k63^post34 == 0 /\ i61^0-i61^post34 == 0 /\ -3+c^post34 == 0 /\ g51^0-g51^post34 == 0 /\ -t44^post34+t44^0 == 0 /\ -sum128^post34+sum128^0 == 0 /\ j55^0-j55^post34 == 0 /\ -bitchanged48^post34+bitchanged48^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post34 == 0 /\ h031^0-h031^post34 == 0 /\ -h132^post34+h132^0 == 0 /\ ddim53^0-ddim53^post34 == 0 /\ -codeword50^post34+codeword50^0 == 0 /\ -f36^post34+f36^0 == 0 /\ i13^post34 == 0 /\ -ret_mac15^post34+ret_mac15^0 == 0 /\ n35^0-n35^post34 == 0 /\ -x43^post34+x43^0 == 0 /\ -x130^post34+x130^0 == 0 /\ tmp___0^0-tmp___0^post34 == 0 /\ m64^0-m64^post34 == 0 /\ -43690+d^post34 == 0 /\ sqr11^post34-c^post34 == 0 /\ -sum027^post34+sum027^0 == 0), cost: 1
  34: l24 -> l23 : bitchanged48^0'=bitchanged48^post35, c^0'=c^post35, codeword50^0'=codeword50^post35, d^0'=d^post35, ddim53^0'=ddim53^post35, dotp14^0'=dotp14^post35, f36^0'=f36^post35, g51^0'=g51^post35, h031^0'=h031^post35, h132^0'=h132^post35, i13^0'=i13^post35, i19^0'=i19^post35, i25^0'=i25^post35, i37^0'=i37^post35, i61^0'=i61^post35, j20^0'=j20^post35, j26^0'=j26^post35, j55^0'=j55^post35, j62^0'=j62^post35, k63^0'=k63^post35, m64^0'=m64^post35, mask47^0'=mask47^post35, n35^0'=n35^post35, n45^0'=n45^post35, n65^0'=n65^post35, numbasis49^0'=numbasis49^post35, p66^0'=p66^post35, ret_codebook57^0'=ret_codebook57^post35, ret_latsynth38^0'=ret_latsynth38^post35, ret_mac15^0'=ret_mac15^post35, sqr11^0'=sqr11^post35, sum027^0'=sum027^post35, sum128^0'=sum128^post35, sum21^0'=sum21^post35, t44^0'=t44^post35, theta54^0'=theta54^post35, tmp^0'=tmp^post35, tmp___0^0'=tmp___0^post35, tmpmask56^0'=tmpmask56^post35, x029^0'=x029^post35, x130^0'=x130^post35, x43^0'=x43^post35, (f36^0-f36^post35 == 0 /\ i61^0-i61^post35 == 0 /\ -tmp___0^post35+tmp___0^0 == 0 /\ -j26^post35+j26^0 == 0 /\ -j20^post35+j20^0 == 0 /\ -codeword50^post35+codeword50^0 == 0 /\ -dotp14^post35+dotp14^0 == 0 /\ -sum21^post35+sum21^0 == 0 /\ i25^0-i25^post35 == 0 /\ -d^post35+d^0 == 0 /\ j55^0-j55^post35 == 0 /\ t44^0-t44^post35 == 0 /\ ddim53^0-ddim53^post35 == 0 /\ numbasis49^0-numbasis49^post35 == 0 /\ -n65^post35+n65^0 == 0 /\ -p66^post35+p66^0 == 0 /\ -h031^post35+h031^0 == 0 /\ -i13^post35+i13^0 == 0 /\ n35^0-n35^post35 == 0 /\ -x130^post35+x130^0 == 0 /\ m64^0-m64^post35 == 0 /\ c^0-c^post35 == 0 /\ ret_latsynth38^0-ret_latsynth38^post35 == 0 /\ g51^0-g51^post35 == 0 /\ -sum128^post35+sum128^0 == 0 /\ x029^0-x029^post35 == 0 /\ -n45^post35+n45^0 == 0 /\ -bitchanged48^post35+bitchanged48^0 == 0 /\ -mask47^post35+mask47^0 == 0 /\ -j62^post35+j62^0 == 0 /\ h132^0-h132^post35 == 0 /\ i19^0-i19^post35 == 0 /\ -theta54^post35+theta54^0 == 0 /\ sqr11^0-sqr11^post35 == 0 /\ -tmpmask56^post35+tmpmask56^0 == 0 /\ -ret_codebook57^post35+ret_codebook57^0 == 0 /\ -ret_mac15^post35+ret_mac15^0 == 0 /\ k63^0-k63^post35 == 0 /\ -i37^post35+i37^0 == 0 /\ sum027^0-sum027^post35 == 0 /\ -x43^post35+x43^0 == 0 /\ tmp^0-tmp^post35 == 0), cost: 1

Chained Linear Paths

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
   0: l0 -> l1 : bitchanged48^0'=bitchanged48^post1, c^0'=c^post1, codeword50^0'=codeword50^post1, d^0'=d^post1, ddim53^0'=ddim53^post1, dotp14^0'=dotp14^post1, f36^0'=f36^post1, g51^0'=g51^post1, h031^0'=h031^post1, h132^0'=h132^post1, i13^0'=i13^post1, i19^0'=i19^post1, i25^0'=i25^post1, i37^0'=i37^post1, i61^0'=i61^post1, j20^0'=j20^post1, j26^0'=j26^post1, j55^0'=j55^post1, j62^0'=j62^post1, k63^0'=k63^post1, m64^0'=m64^post1, mask47^0'=mask47^post1, n35^0'=n35^post1, n45^0'=n45^post1, n65^0'=n65^post1, numbasis49^0'=numbasis49^post1, p66^0'=p66^post1, ret_codebook57^0'=ret_codebook57^post1, ret_latsynth38^0'=ret_latsynth38^post1, ret_mac15^0'=ret_mac15^post1, sqr11^0'=sqr11^post1, sum027^0'=sum027^post1, sum128^0'=sum128^post1, sum21^0'=sum21^post1, t44^0'=t44^post1, theta54^0'=theta54^post1, tmp^0'=tmp^post1, tmp___0^0'=tmp___0^post1, tmpmask56^0'=tmpmask56^post1, x029^0'=x029^post1, x130^0'=x130^post1, x43^0'=x43^post1, (-x130^post1+x130^0 == 0 /\ sum21^0-sum21^post1 == 0 /\ -n35^post1+n35^0 == 0 /\ -i25^post1+i25^0 == 0 /\ -i37^post1+i37^0 == 0 /\ ret_codebook57^0-ret_codebook57^post1 == 0 /\ x029^0-x029^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ -tmpmask56^post1+tmpmask56^0 == 0 /\ -i13^post1+i13^0 == 0 /\ -n45^post1+n45^0 == 0 /\ h031^0-h031^post1 == 0 /\ -h132^post1+h132^0 == 0 /\ mask47^0-mask47^post1 == 0 /\ g51^0-g51^post1 == 0 /\ -t44^post1+t44^0 == 0 /\ m64^0-m64^post1 == 0 /\ -theta54^post1+theta54^0 == 0 /\ -sum128^post1+sum128^0 == 0 /\ -j26^post1+j26^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post1 == 0 /\ -f36^post1+f36^0 == 0 /\ ddim53^0-ddim53^post1 == 0 /\ -codeword50^post1+codeword50^0 == 0 /\ -bitchanged48^post1+bitchanged48^0 == 0 /\ -dotp14^post1+dotp14^0 == 0 /\ -p66^post1+p66^0 == 0 /\ j55^0-j55^post1 == 0 /\ -d^post1+d^0 == 0 /\ -ret_mac15^post1+ret_mac15^0 == 0 /\ sqr11^0-sqr11^post1 == 0 /\ i19^0-i19^post1 == 0 /\ j62^0-j62^post1 == 0 /\ -numbasis49^post1+numbasis49^0 == 0 /\ i61^0-i61^post1 == 0 /\ n65^0-n65^post1 == 0 /\ tmp___0^0-tmp___0^post1 == 0 /\ c^0-c^post1 == 0 /\ -j20^post1+j20^0 == 0 /\ -sum027^post1+sum027^0 == 0 /\ -k63^post1+k63^0 == 0 /\ -x43^post1+x43^0 == 0), cost: 1
  19: l1 -> l4 : bitchanged48^0'=bitchanged48^post20, c^0'=c^post20, codeword50^0'=codeword50^post20, d^0'=d^post20, ddim53^0'=ddim53^post20, dotp14^0'=dotp14^post20, f36^0'=f36^post20, g51^0'=g51^post20, h031^0'=h031^post20, h132^0'=h132^post20, i13^0'=i13^post20, i19^0'=i19^post20, i25^0'=i25^post20, i37^0'=i37^post20, i61^0'=i61^post20, j20^0'=j20^post20, j26^0'=j26^post20, j55^0'=j55^post20, j62^0'=j62^post20, k63^0'=k63^post20, m64^0'=m64^post20, mask47^0'=mask47^post20, n35^0'=n35^post20, n45^0'=n45^post20, n65^0'=n65^post20, numbasis49^0'=numbasis49^post20, p66^0'=p66^post20, ret_codebook57^0'=ret_codebook57^post20, ret_latsynth38^0'=ret_latsynth38^post20, ret_mac15^0'=ret_mac15^post20, sqr11^0'=sqr11^post20, sum027^0'=sum027^post20, sum128^0'=sum128^post20, sum21^0'=sum21^post20, t44^0'=t44^post20, theta54^0'=theta54^post20, tmp^0'=tmp^post20, tmp___0^0'=tmp___0^post20, tmpmask56^0'=tmpmask56^post20, x029^0'=x029^post20, x130^0'=x130^post20, x43^0'=x43^post20, (0 == 0 /\ -i61^post20+i61^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ numbasis49^0-numbasis49^post20 == 0 /\ x43^0-x43^post20 == 0 /\ 100-j26^0 <= 0 /\ -d^post20+d^0 == 0 /\ sum128^0-sum128^post20 == 0 /\ -dotp14^post20+dotp14^0 == 0 /\ -bitchanged48^post20+bitchanged48^0 == 0 /\ theta54^0-theta54^post20 == 0 /\ -codeword50^post20+codeword50^0 == 0 /\ 2-n35^post20+i37^post20 == 0 /\ -g51^post20+g51^0 == 0 /\ sum027^0-sum027^post20 == 0 /\ -i19^post20+i19^0 == 0 /\ ret_mac15^0-ret_mac15^post20 == 0 /\ ddim53^0-ddim53^post20 == 0 /\ -n45^post20+n45^0 == 0 /\ k63^0-k63^post20 == 0 /\ -j62^post20+j62^0 == 0 /\ h132^0-h132^post20 == 0 /\ ret_latsynth38^0-ret_latsynth38^post20 == 0 /\ -100+n35^post20 == 0 /\ f36^1-d^0 == 0 /\ m64^0-m64^post20 == 0 /\ c^0-c^post20 == 0 /\ -ret_codebook57^post20+ret_codebook57^0 == 0 /\ -sqr11^post20+sqr11^0 == 0 /\ -i13^post20+i13^0 == 0 /\ -h031^post20+h031^0 == 0 /\ x029^0-x029^post20 == 0 /\ -tmpmask56^post20+tmpmask56^0 == 0 /\ -sum21^post20+sum21^0 == 0 /\ -tmp___0^post20+tmp___0^0 == 0 /\ -mask47^post20+mask47^0 == 0 /\ -j55^post20+j55^0 == 0 /\ -p66^post20+p66^0 == 0 /\ -n65^post20+n65^0 == 0 /\ -x130^post20+x130^0 == 0 /\ j26^0-j26^post20 == 0 /\ i25^0-i25^post20 == 0 /\ t44^0-t44^post20 == 0 /\ -j20^post20+j20^0 == 0), cost: 1
  20: l1 -> l2 : bitchanged48^0'=bitchanged48^post21, c^0'=c^post21, codeword50^0'=codeword50^post21, d^0'=d^post21, ddim53^0'=ddim53^post21, dotp14^0'=dotp14^post21, f36^0'=f36^post21, g51^0'=g51^post21, h031^0'=h031^post21, h132^0'=h132^post21, i13^0'=i13^post21, i19^0'=i19^post21, i25^0'=i25^post21, i37^0'=i37^post21, i61^0'=i61^post21, j20^0'=j20^post21, j26^0'=j26^post21, j55^0'=j55^post21, j62^0'=j62^post21, k63^0'=k63^post21, m64^0'=m64^post21, mask47^0'=mask47^post21, n35^0'=n35^post21, n45^0'=n45^post21, n65^0'=n65^post21, numbasis49^0'=numbasis49^post21, p66^0'=p66^post21, ret_codebook57^0'=ret_codebook57^post21, ret_latsynth38^0'=ret_latsynth38^post21, ret_mac15^0'=ret_mac15^post21, sqr11^0'=sqr11^post21, sum027^0'=sum027^post21, sum128^0'=sum128^post21, sum21^0'=sum21^post21, t44^0'=t44^post21, theta54^0'=theta54^post21, tmp^0'=tmp^post21, tmp___0^0'=tmp___0^post21, tmpmask56^0'=tmpmask56^post21, x029^0'=x029^post21, x130^0'=x130^post21, x43^0'=x43^post21, (0 == 0 /\ bitchanged48^0-bitchanged48^post21 == 0 /\ -x43^post21+x43^0 == 0 /\ k63^0-k63^post21 == 0 /\ -x130^post21+x130^0 == 0 /\ sqr11^0-sqr11^post21 == 0 /\ -i19^post21+i19^0 == 0 /\ m64^0-m64^post21 == 0 /\ -h031^post21+h031^0 == 0 /\ -g51^post21+g51^0 == 0 /\ sum128^post21 == 0 /\ i13^0-i13^post21 == 0 /\ -99+j26^0 <= 0 /\ t44^0-t44^post21 == 0 /\ j55^0-j55^post21 == 0 /\ -j20^post21+j20^0 == 0 /\ h132^0-h132^post21 == 0 /\ -c^post21+c^0 == 0 /\ f36^0-f36^post21 == 0 /\ -dotp14^post21+dotp14^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post21 == 0 /\ -ret_mac15^post21+ret_mac15^0 == 0 /\ sum21^0-sum21^post21 == 0 /\ tmp___0^0-tmp___0^post21 == 0 /\ -tmpmask56^post21+tmpmask56^0 == 0 /\ -mask47^post21+mask47^0 == 0 /\ i25^post21 == 0 /\ -i37^post21+i37^0 == 0 /\ -n65^post21+n65^0 == 0 /\ -n45^post21+n45^0 == 0 /\ -i61^post21+i61^0 == 0 /\ j26^0-j26^post21 == 0 /\ -p66^post21+p66^0 == 0 /\ -ret_codebook57^post21+ret_codebook57^0 == 0 /\ d^0-d^post21 == 0 /\ -ddim53^post21+ddim53^0 == 0 /\ n35^0-n35^post21 == 0 /\ sum027^post21 == 0 /\ numbasis49^0-numbasis49^post21 == 0 /\ -j62^post21+j62^0 == 0 /\ -codeword50^post21+codeword50^0 == 0 /\ -theta54^post21+theta54^0 == 0 /\ tmp^0-tmp^post21 == 0), cost: 1
   1: l2 -> l3 : bitchanged48^0'=bitchanged48^post2, c^0'=c^post2, codeword50^0'=codeword50^post2, d^0'=d^post2, ddim53^0'=ddim53^post2, dotp14^0'=dotp14^post2, f36^0'=f36^post2, g51^0'=g51^post2, h031^0'=h031^post2, h132^0'=h132^post2, i13^0'=i13^post2, i19^0'=i19^post2, i25^0'=i25^post2, i37^0'=i37^post2, i61^0'=i61^post2, j20^0'=j20^post2, j26^0'=j26^post2, j55^0'=j55^post2, j62^0'=j62^post2, k63^0'=k63^post2, m64^0'=m64^post2, mask47^0'=mask47^post2, n35^0'=n35^post2, n45^0'=n45^post2, n65^0'=n65^post2, numbasis49^0'=numbasis49^post2, p66^0'=p66^post2, ret_codebook57^0'=ret_codebook57^post2, ret_latsynth38^0'=ret_latsynth38^post2, ret_mac15^0'=ret_mac15^post2, sqr11^0'=sqr11^post2, sum027^0'=sum027^post2, sum128^0'=sum128^post2, sum21^0'=sum21^post2, t44^0'=t44^post2, theta54^0'=theta54^post2, tmp^0'=tmp^post2, tmp___0^0'=tmp___0^post2, tmpmask56^0'=tmpmask56^post2, x029^0'=x029^post2, x130^0'=x130^post2, x43^0'=x43^post2, (-i61^post2+i61^0 == 0 /\ d^0-d^post2 == 0 /\ ret_latsynth38^0-ret_latsynth38^post2 == 0 /\ n35^0-n35^post2 == 0 /\ -sum128^post2+sum128^0 == 0 /\ -sum21^post2+sum21^0 == 0 /\ -theta54^post2+theta54^0 == 0 /\ h132^0-h132^post2 == 0 /\ -codeword50^post2+codeword50^0 == 0 /\ -ddim53^post2+ddim53^0 == 0 /\ t44^0-t44^post2 == 0 /\ -n65^post2+n65^0 == 0 /\ -h031^post2+h031^0 == 0 /\ -i13^post2+i13^0 == 0 /\ bitchanged48^0-bitchanged48^post2 == 0 /\ k63^0-k63^post2 == 0 /\ -j62^post2+j62^0 == 0 /\ -x130^post2+x130^0 == 0 /\ m64^0-m64^post2 == 0 /\ ret_mac15^0-ret_mac15^post2 == 0 /\ i37^0-i37^post2 == 0 /\ x029^0-x029^post2 == 0 /\ i25^0-i25^post2 == 0 /\ f36^0-f36^post2 == 0 /\ sum027^0-sum027^post2 == 0 /\ -n45^post2+n45^0 == 0 /\ numbasis49^0-numbasis49^post2 == 0 /\ -mask47^post2+mask47^0 == 0 /\ -dotp14^post2+dotp14^0 == 0 /\ -c^post2+c^0 == 0 /\ -j55^post2+j55^0 == 0 /\ tmp^0-tmp^post2 == 0 /\ -sqr11^post2+sqr11^0 == 0 /\ -ret_codebook57^post2+ret_codebook57^0 == 0 /\ -i19^post2+i19^0 == 0 /\ j26^0-j26^post2 == 0 /\ -tmp___0^post2+tmp___0^0 == 0 /\ p66^0-p66^post2 == 0 /\ -tmpmask56^post2+tmpmask56^0 == 0 /\ -x43^post2+x43^0 == 0 /\ g51^0-g51^post2 == 0 /\ -j20^post2+j20^0 == 0), cost: 1
  17: l3 -> l0 : bitchanged48^0'=bitchanged48^post18, c^0'=c^post18, codeword50^0'=codeword50^post18, d^0'=d^post18, ddim53^0'=ddim53^post18, dotp14^0'=dotp14^post18, f36^0'=f36^post18, g51^0'=g51^post18, h031^0'=h031^post18, h132^0'=h132^post18, i13^0'=i13^post18, i19^0'=i19^post18, i25^0'=i25^post18, i37^0'=i37^post18, i61^0'=i61^post18, j20^0'=j20^post18, j26^0'=j26^post18, j55^0'=j55^post18, j62^0'=j62^post18, k63^0'=k63^post18, m64^0'=m64^post18, mask47^0'=mask47^post18, n35^0'=n35^post18, n45^0'=n45^post18, n65^0'=n65^post18, numbasis49^0'=numbasis49^post18, p66^0'=p66^post18, ret_codebook57^0'=ret_codebook57^post18, ret_latsynth38^0'=ret_latsynth38^post18, ret_mac15^0'=ret_mac15^post18, sqr11^0'=sqr11^post18, sum027^0'=sum027^post18, sum128^0'=sum128^post18, sum21^0'=sum21^post18, t44^0'=t44^post18, theta54^0'=theta54^post18, tmp^0'=tmp^post18, tmp___0^0'=tmp___0^post18, tmpmask56^0'=tmpmask56^post18, x029^0'=x029^post18, x130^0'=x130^post18, x43^0'=x43^post18, (-tmp___0^post18+tmp___0^0 == 0 /\ -t44^post18+t44^0 == 0 /\ -sum128^post18+sum128^0 == 0 /\ -sum027^post18+sum027^0 == 0 /\ -x130^post18+x130^0 == 0 /\ -x43^post18+x43^0 == 0 /\ i25^0-i25^post18 == 0 /\ f36^0-f36^post18 == 0 /\ -i13^post18+i13^0 == 0 /\ -i19^post18+i19^0 == 0 /\ -i37^post18+i37^0 == 0 /\ -h031^post18+h031^0 == 0 /\ ddim53^0-ddim53^post18 == 0 /\ n65^0-n65^post18 == 0 /\ -j20^post18+j20^0 == 0 /\ -dotp14^post18+dotp14^0 == 0 /\ -d^post18+d^0 == 0 /\ -k63^post18+k63^0 == 0 /\ x029^0-x029^post18 == 0 /\ tmp^0-tmp^post18 == 0 /\ numbasis49^0-numbasis49^post18 == 0 /\ mask47^0-mask47^post18 == 0 /\ -tmpmask56^post18+tmpmask56^0 == 0 /\ -ret_mac15^post18+ret_mac15^0 == 0 /\ g51^0-g51^post18 == 0 /\ -2+j26^post18-j26^0 == 0 /\ m64^0-m64^post18 == 0 /\ sqr11^0-sqr11^post18 == 0 /\ -n35^post18+n35^0 == 0 /\ c^0-c^post18 == 0 /\ -n45^post18+n45^0 == 0 /\ -p66^post18+p66^0 == 0 /\ ret_codebook57^0-ret_codebook57^post18 == 0 /\ -theta54^post18+theta54^0 == 0 /\ j55^0-j55^post18 == 0 /\ h132^0-h132^post18 == 0 /\ 32-i25^0 <= 0 /\ -bitchanged48^post18+bitchanged48^0 == 0 /\ j62^0-j62^post18 == 0 /\ ret_latsynth38^0-ret_latsynth38^post18 == 0 /\ i61^0-i61^post18 == 0 /\ sum21^0-sum21^post18 == 0 /\ -codeword50^post18+codeword50^0 == 0), cost: 1
  18: l3 -> l2 : bitchanged48^0'=bitchanged48^post19, c^0'=c^post19, codeword50^0'=codeword50^post19, d^0'=d^post19, ddim53^0'=ddim53^post19, dotp14^0'=dotp14^post19, f36^0'=f36^post19, g51^0'=g51^post19, h031^0'=h031^post19, h132^0'=h132^post19, i13^0'=i13^post19, i19^0'=i19^post19, i25^0'=i25^post19, i37^0'=i37^post19, i61^0'=i61^post19, j20^0'=j20^post19, j26^0'=j26^post19, j55^0'=j55^post19, j62^0'=j62^post19, k63^0'=k63^post19, m64^0'=m64^post19, mask47^0'=mask47^post19, n35^0'=n35^post19, n45^0'=n45^post19, n65^0'=n65^post19, numbasis49^0'=numbasis49^post19, p66^0'=p66^post19, ret_codebook57^0'=ret_codebook57^post19, ret_latsynth38^0'=ret_latsynth38^post19, ret_mac15^0'=ret_mac15^post19, sqr11^0'=sqr11^post19, sum027^0'=sum027^post19, sum128^0'=sum128^post19, sum21^0'=sum21^post19, t44^0'=t44^post19, theta54^0'=theta54^post19, tmp^0'=tmp^post19, tmp___0^0'=tmp___0^post19, tmpmask56^0'=tmpmask56^post19, x029^0'=x029^post19, x130^0'=x130^post19, x43^0'=x43^post19, (0 == 0 /\ codeword50^0-codeword50^post19 == 0 /\ -2+i25^post19-i25^0 == 0 /\ -31+i25^0 <= 0 /\ -theta54^post19+theta54^0 == 0 /\ -i13^post19+i13^0 == 0 /\ -j62^post19+j62^0 == 0 /\ i19^0-i19^post19 == 0 /\ numbasis49^0-numbasis49^post19 == 0 /\ -p66^post19+p66^0 == 0 /\ -n65^post19+n65^0 == 0 /\ t44^0-t44^post19 == 0 /\ tmp___0^0-tmp___0^post19 == 0 /\ -j20^post19+j20^0 == 0 /\ -f36^post19+f36^0 == 0 /\ n35^0-n35^post19 == 0 /\ ret_codebook57^0-ret_codebook57^post19 == 0 /\ ret_latsynth38^0-ret_latsynth38^post19 == 0 /\ mask47^0-mask47^post19 == 0 /\ -sum21^post19+sum21^0 == 0 /\ c^0-c^post19 == 0 /\ dotp14^0-dotp14^post19 == 0 /\ sqr11^0-sqr11^post19 == 0 /\ -i37^post19+i37^0 == 0 /\ tmp^0-tmp^post19 == 0 /\ j55^0-j55^post19 == 0 /\ -k63^post19+k63^0 == 0 /\ -bitchanged48^post19+bitchanged48^0 == 0 /\ x43^0-x43^post19 == 0 /\ -j26^post19+j26^0 == 0 /\ -d^post19+d^0 == 0 /\ -ret_mac15^post19+ret_mac15^0 == 0 /\ g51^0-g51^post19 == 0 /\ i61^0-i61^post19 == 0 /\ ddim53^0-ddim53^post19 == 0 /\ -n45^post19+n45^0 == 0 /\ -tmpmask56^post19+tmpmask56^0 == 0 /\ m64^0-m64^post19 == 0), cost: 1
   2: l4 -> l5 : bitchanged48^0'=bitchanged48^post3, c^0'=c^post3, codeword50^0'=codeword50^post3, d^0'=d^post3, ddim53^0'=ddim53^post3, dotp14^0'=dotp14^post3, f36^0'=f36^post3, g51^0'=g51^post3, h031^0'=h031^post3, h132^0'=h132^post3, i13^0'=i13^post3, i19^0'=i19^post3, i25^0'=i25^post3, i37^0'=i37^post3, i61^0'=i61^post3, j20^0'=j20^post3, j26^0'=j26^post3, j55^0'=j55^post3, j62^0'=j62^post3, k63^0'=k63^post3, m64^0'=m64^post3, mask47^0'=mask47^post3, n35^0'=n35^post3, n45^0'=n45^post3, n65^0'=n65^post3, numbasis49^0'=numbasis49^post3, p66^0'=p66^post3, ret_codebook57^0'=ret_codebook57^post3, ret_latsynth38^0'=ret_latsynth38^post3, ret_mac15^0'=ret_mac15^post3, sqr11^0'=sqr11^post3, sum027^0'=sum027^post3, sum128^0'=sum128^post3, sum21^0'=sum21^post3, t44^0'=t44^post3, theta54^0'=theta54^post3, tmp^0'=tmp^post3, tmp___0^0'=tmp___0^post3, tmpmask56^0'=tmpmask56^post3, x029^0'=x029^post3, x130^0'=x130^post3, x43^0'=x43^post3, (-x43^post3+x43^0 == 0 /\ -x130^post3+x130^0 == 0 /\ d^0-d^post3 == 0 /\ -i61^post3+i61^0 == 0 /\ -h031^post3+h031^0 == 0 /\ sqr11^0-sqr11^post3 == 0 /\ -g51^post3+g51^0 == 0 /\ -i19^post3+i19^0 == 0 /\ k63^0-k63^post3 == 0 /\ i13^0-i13^post3 == 0 /\ bitchanged48^0-bitchanged48^post3 == 0 /\ h132^0-h132^post3 == 0 /\ n65^0-n65^post3 == 0 /\ numbasis49^0-numbasis49^post3 == 0 /\ f36^0-f36^post3 == 0 /\ -dotp14^post3+dotp14^0 == 0 /\ -j62^post3+j62^0 == 0 /\ -codeword50^post3+codeword50^0 == 0 /\ -theta54^post3+theta54^0 == 0 /\ tmp___0^0-tmp___0^post3 == 0 /\ -p66^post3+p66^0 == 0 /\ -n45^post3+n45^0 == 0 /\ -tmpmask56^post3+tmpmask56^0 == 0 /\ -ret_mac15^post3+ret_mac15^0 == 0 /\ mask47^0-mask47^post3 == 0 /\ -sum128^post3+sum128^0 == 0 /\ m64^0-m64^post3 == 0 /\ -sum21^post3+sum21^0 == 0 /\ t44^0-t44^post3 == 0 /\ i25^0-i25^post3 == 0 /\ ret_codebook57^0-ret_codebook57^post3 == 0 /\ -n35^post3+n35^0 == 0 /\ -c^post3+c^0 == 0 /\ tmp^0-tmp^post3 == 0 /\ sum027^0-sum027^post3 == 0 /\ -ddim53^post3+ddim53^0 == 0 /\ -j55^post3+j55^0 == 0 /\ -j20^post3+j20^0 == 0 /\ j26^0-j26^post3 == 0 /\ i37^0-i37^post3 == 0 /\ x029^0-x029^post3 == 0 /\ ret_latsynth38^0-ret_latsynth38^post3 == 0), cost: 1
  15: l5 -> l6 : bitchanged48^0'=bitchanged48^post16, c^0'=c^post16, codeword50^0'=codeword50^post16, d^0'=d^post16, ddim53^0'=ddim53^post16, dotp14^0'=dotp14^post16, f36^0'=f36^post16, g51^0'=g51^post16, h031^0'=h031^post16, h132^0'=h132^post16, i13^0'=i13^post16, i19^0'=i19^post16, i25^0'=i25^post16, i37^0'=i37^post16, i61^0'=i61^post16, j20^0'=j20^post16, j26^0'=j26^post16, j55^0'=j55^post16, j62^0'=j62^post16, k63^0'=k63^post16, m64^0'=m64^post16, mask47^0'=mask47^post16, n35^0'=n35^post16, n45^0'=n45^post16, n65^0'=n65^post16, numbasis49^0'=numbasis49^post16, p66^0'=p66^post16, ret_codebook57^0'=ret_codebook57^post16, ret_latsynth38^0'=ret_latsynth38^post16, ret_mac15^0'=ret_mac15^post16, sqr11^0'=sqr11^post16, sum027^0'=sum027^post16, sum128^0'=sum128^post16, sum21^0'=sum21^post16, t44^0'=t44^post16, theta54^0'=theta54^post16, tmp^0'=tmp^post16, tmp___0^0'=tmp___0^post16, tmpmask56^0'=tmpmask56^post16, x029^0'=x029^post16, x130^0'=x130^post16, x43^0'=x43^post16, (0 == 0 /\ i25^0-i25^post16 == 0 /\ -dotp14^post16+dotp14^0 == 0 /\ j55^0-j55^post16 == 0 /\ ret_latsynth38^post16-f36^0 == 0 /\ f36^0-f36^post16 == 0 /\ sum21^0-sum21^post16 == 0 /\ -i37^post16+i37^0 == 0 /\ m64^0-m64^post16 == 0 /\ -i19^post16+i19^0 == 0 /\ -i13^post16+i13^0 == 0 /\ i61^0-i61^post16 == 0 /\ ret_codebook57^0-ret_codebook57^post16 == 0 /\ -h031^post16+h031^0 == 0 /\ ddim53^0-ddim53^post16 == 0 /\ -sum128^post16+sum128^0 == 0 /\ -tmp___0^post16+tmp___0^0 == 0 /\ x130^0-x130^post16 == 0 /\ -tmpmask56^post16+tmpmask56^0 == 0 /\ -k63^post16+k63^0 == 0 /\ -mask47^post16+mask47^0 == 0 /\ -bitchanged48^post16+bitchanged48^0 == 0 /\ 1+i37^0 <= 0 /\ x029^0-x029^post16 == 0 /\ j26^0-j26^post16 == 0 /\ -ret_latsynth38^post16+d^post16 == 0 /\ g51^0-g51^post16 == 0 /\ tmp^0-tmp^post16 == 0 /\ -theta54^post16+theta54^0 == 0 /\ -ret_mac15^post16+ret_mac15^0 == 0 /\ n45^post16 == 0 /\ -p66^post16+p66^0 == 0 /\ t44^0-t44^post16 == 0 /\ sqr11^0-sqr11^post16 == 0 /\ -sum027^post16+sum027^0 == 0 /\ n35^0-n35^post16 == 0 /\ h132^0-h132^post16 == 0 /\ -j20^post16+j20^0 == 0 /\ -j62^post16+j62^0 == 0 /\ c^0-c^post16 == 0 /\ n65^0-n65^post16 == 0 /\ -codeword50^post16+codeword50^0 == 0 /\ numbasis49^0-numbasis49^post16 == 0), cost: 1
  16: l5 -> l4 : bitchanged48^0'=bitchanged48^post17, c^0'=c^post17, codeword50^0'=codeword50^post17, d^0'=d^post17, ddim53^0'=ddim53^post17, dotp14^0'=dotp14^post17, f36^0'=f36^post17, g51^0'=g51^post17, h031^0'=h031^post17, h132^0'=h132^post17, i13^0'=i13^post17, i19^0'=i19^post17, i25^0'=i25^post17, i37^0'=i37^post17, i61^0'=i61^post17, j20^0'=j20^post17, j26^0'=j26^post17, j55^0'=j55^post17, j62^0'=j62^post17, k63^0'=k63^post17, m64^0'=m64^post17, mask47^0'=mask47^post17, n35^0'=n35^post17, n45^0'=n45^post17, n65^0'=n65^post17, numbasis49^0'=numbasis49^post17, p66^0'=p66^post17, ret_codebook57^0'=ret_codebook57^post17, ret_latsynth38^0'=ret_latsynth38^post17, ret_mac15^0'=ret_mac15^post17, sqr11^0'=sqr11^post17, sum027^0'=sum027^post17, sum128^0'=sum128^post17, sum21^0'=sum21^post17, t44^0'=t44^post17, theta54^0'=theta54^post17, tmp^0'=tmp^post17, tmp___0^0'=tmp___0^post17, tmpmask56^0'=tmpmask56^post17, x029^0'=x029^post17, x130^0'=x130^post17, x43^0'=x43^post17, (0 == 0 /\ -bitchanged48^post17+bitchanged48^0 == 0 /\ -dotp14^post17+dotp14^0 == 0 /\ -theta54^post17+theta54^0 == 0 /\ j55^0-j55^post17 == 0 /\ i25^0-i25^post17 == 0 /\ -codeword50^post17+codeword50^0 == 0 /\ i61^0-i61^post17 == 0 /\ sqr11^0-sqr11^post17 == 0 /\ ddim53^0-ddim53^post17 == 0 /\ -sum128^post17+sum128^0 == 0 /\ -i19^post17+i19^0 == 0 /\ -numbasis49^post17+numbasis49^0 == 0 /\ -j26^post17+j26^0 == 0 /\ -j62^post17+j62^0 == 0 /\ tmp___0^0-tmp___0^post17 == 0 /\ d^0-d^post17 == 0 /\ 1+i37^post17-i37^0 == 0 /\ n65^0-n65^post17 == 0 /\ t44^0-t44^post17 == 0 /\ g51^0-g51^post17 == 0 /\ x43^0-x43^post17 == 0 /\ c^0-c^post17 == 0 /\ n35^0-n35^post17 == 0 /\ -i37^0 <= 0 /\ -p66^post17+p66^0 == 0 /\ mask47^0-mask47^post17 == 0 /\ ret_codebook57^0-ret_codebook57^post17 == 0 /\ -ret_mac15^post17+ret_mac15^0 == 0 /\ -x029^post17+x029^0 == 0 /\ -sum21^post17+sum21^0 == 0 /\ sum027^0-sum027^post17 == 0 /\ -tmpmask56^post17+tmpmask56^0 == 0 /\ -n45^post17+n45^0 == 0 /\ -i13^post17+i13^0 == 0 /\ -k63^post17+k63^0 == 0 /\ -x130^post17+x130^0 == 0 /\ -h031^post17+h031^0 == 0 /\ tmp^0-tmp^post17 == 0 /\ h132^0-h132^post17 == 0 /\ ret_latsynth38^0-ret_latsynth38^post17 == 0 /\ -j20^post17+j20^0 == 0 /\ m64^0-m64^post17 == 0), cost: 1
   3: l6 -> l7 : bitchanged48^0'=bitchanged48^post4, c^0'=c^post4, codeword50^0'=codeword50^post4, d^0'=d^post4, ddim53^0'=ddim53^post4, dotp14^0'=dotp14^post4, f36^0'=f36^post4, g51^0'=g51^post4, h031^0'=h031^post4, h132^0'=h132^post4, i13^0'=i13^post4, i19^0'=i19^post4, i25^0'=i25^post4, i37^0'=i37^post4, i61^0'=i61^post4, j20^0'=j20^post4, j26^0'=j26^post4, j55^0'=j55^post4, j62^0'=j62^post4, k63^0'=k63^post4, m64^0'=m64^post4, mask47^0'=mask47^post4, n35^0'=n35^post4, n45^0'=n45^post4, n65^0'=n65^post4, numbasis49^0'=numbasis49^post4, p66^0'=p66^post4, ret_codebook57^0'=ret_codebook57^post4, ret_latsynth38^0'=ret_latsynth38^post4, ret_mac15^0'=ret_mac15^post4, sqr11^0'=sqr11^post4, sum027^0'=sum027^post4, sum128^0'=sum128^post4, sum21^0'=sum21^post4, t44^0'=t44^post4, theta54^0'=theta54^post4, tmp^0'=tmp^post4, tmp___0^0'=tmp___0^post4, tmpmask56^0'=tmpmask56^post4, x029^0'=x029^post4, x130^0'=x130^post4, x43^0'=x43^post4, (sqr11^0-sqr11^post4 == 0 /\ c^0-c^post4 == 0 /\ i19^0-i19^post4 == 0 /\ h031^0-h031^post4 == 0 /\ codeword50^0-codeword50^post4 == 0 /\ -d^post4+d^0 == 0 /\ -sum128^post4+sum128^0 == 0 /\ -bitchanged48^post4+bitchanged48^0 == 0 /\ j55^0-j55^post4 == 0 /\ t44^0-t44^post4 == 0 /\ -f36^post4+f36^0 == 0 /\ n65^0-n65^post4 == 0 /\ numbasis49^0-numbasis49^post4 == 0 /\ sum21^0-sum21^post4 == 0 /\ -ret_mac15^post4+ret_mac15^0 == 0 /\ -i37^post4+i37^0 == 0 /\ -x130^post4+x130^0 == 0 /\ i25^0-i25^post4 == 0 /\ tmp___0^0-tmp___0^post4 == 0 /\ x029^0-x029^post4 == 0 /\ m64^0-m64^post4 == 0 /\ mask47^0-mask47^post4 == 0 /\ -tmpmask56^post4+tmpmask56^0 == 0 /\ -n45^post4+n45^0 == 0 /\ -n35^post4+n35^0 == 0 /\ -k63^post4+k63^0 == 0 /\ -j20^post4+j20^0 == 0 /\ -j26^post4+j26^0 == 0 /\ -j62^post4+j62^0 == 0 /\ sum027^0-sum027^post4 == 0 /\ i61^0-i61^post4 == 0 /\ ret_latsynth38^0-ret_latsynth38^post4 == 0 /\ dotp14^0-dotp14^post4 == 0 /\ ret_codebook57^0-ret_codebook57^post4 == 0 /\ -theta54^post4+theta54^0 == 0 /\ x43^0-x43^post4 == 0 /\ ddim53^0-ddim53^post4 == 0 /\ g51^0-g51^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -h132^post4+h132^0 == 0 /\ -p66^post4+p66^0 == 0 /\ -i13^post4+i13^0 == 0), cost: 1
  12: l7 -> l16 : bitchanged48^0'=bitchanged48^post13, c^0'=c^post13, codeword50^0'=codeword50^post13, d^0'=d^post13, ddim53^0'=ddim53^post13, dotp14^0'=dotp14^post13, f36^0'=f36^post13, g51^0'=g51^post13, h031^0'=h031^post13, h132^0'=h132^post13, i13^0'=i13^post13, i19^0'=i19^post13, i25^0'=i25^post13, i37^0'=i37^post13, i61^0'=i61^post13, j20^0'=j20^post13, j26^0'=j26^post13, j55^0'=j55^post13, j62^0'=j62^post13, k63^0'=k63^post13, m64^0'=m64^post13, mask47^0'=mask47^post13, n35^0'=n35^post13, n45^0'=n45^post13, n65^0'=n65^post13, numbasis49^0'=numbasis49^post13, p66^0'=p66^post13, ret_codebook57^0'=ret_codebook57^post13, ret_latsynth38^0'=ret_latsynth38^post13, ret_mac15^0'=ret_mac15^post13, sqr11^0'=sqr11^post13, sum027^0'=sum027^post13, sum128^0'=sum128^post13, sum21^0'=sum21^post13, t44^0'=t44^post13, theta54^0'=theta54^post13, tmp^0'=tmp^post13, tmp___0^0'=tmp___0^post13, tmpmask56^0'=tmpmask56^post13, x029^0'=x029^post13, x130^0'=x130^post13, x43^0'=x43^post13, (0 == 0 /\ -j20^post13+j20^0 == 0 /\ d^0-d^post13 == 0 /\ j26^0-j26^post13 == 0 /\ -sum21^post13+sum21^0 == 0 /\ 50-n45^0 <= 0 /\ -sum128^post13+sum128^0 == 0 /\ h132^0-h132^post13 == 0 /\ -1-bitchanged48^post13+j55^post13 == 0 /\ -1+theta54^post13 == 0 /\ -17+numbasis49^post13 == 0 /\ t44^0-t44^post13 == 0 /\ -h031^post13+h031^0 == 0 /\ -i13^post13+i13^0 == 0 /\ -x130^post13+x130^0 == 0 /\ -n65^post13+n65^0 == 0 /\ -p66^post13+p66^0 == 0 /\ -i61^post13+i61^0 == 0 /\ x029^0-x029^post13 == 0 /\ m64^0-m64^post13 == 0 /\ i37^0-i37^post13 == 0 /\ n35^0-n35^post13 == 0 /\ ret_latsynth38^0-ret_latsynth38^post13 == 0 /\ -1+bitchanged48^post13 == 0 /\ i25^0-i25^post13 == 0 /\ f36^0-f36^post13 == 0 /\ -sum027^post13+sum027^0 == 0 /\ -j62^post13+j62^0 == 0 /\ sqr11^0-sqr11^post13 == 0 /\ -dotp14^post13+dotp14^0 == 0 /\ -c^post13+c^0 == 0 /\ -d^0+g51^post13 == 0 /\ tmp^0-tmp^post13 == 0 /\ mask47^post13-d^0 == 0 /\ ddim53^post13-c^0 == 0 /\ -i19^post13+i19^0 == 0 /\ -x43^post13+x43^0 == 0 /\ -tmp___0^post13+tmp___0^0 == 0 /\ -n45^post13+n45^0 == 0 /\ -ret_mac15^post13+ret_mac15^0 == 0 /\ k63^0-k63^post13 == 0 /\ -ret_codebook57^post13+ret_codebook57^0 == 0), cost: 1
  13: l7 -> l6 : bitchanged48^0'=bitchanged48^post14, c^0'=c^post14, codeword50^0'=codeword50^post14, d^0'=d^post14, ddim53^0'=ddim53^post14, dotp14^0'=dotp14^post14, f36^0'=f36^post14, g51^0'=g51^post14, h031^0'=h031^post14, h132^0'=h132^post14, i13^0'=i13^post14, i19^0'=i19^post14, i25^0'=i25^post14, i37^0'=i37^post14, i61^0'=i61^post14, j20^0'=j20^post14, j26^0'=j26^post14, j55^0'=j55^post14, j62^0'=j62^post14, k63^0'=k63^post14, m64^0'=m64^post14, mask47^0'=mask47^post14, n35^0'=n35^post14, n45^0'=n45^post14, n65^0'=n65^post14, numbasis49^0'=numbasis49^post14, p66^0'=p66^post14, ret_codebook57^0'=ret_codebook57^post14, ret_latsynth38^0'=ret_latsynth38^post14, ret_mac15^0'=ret_mac15^post14, sqr11^0'=sqr11^post14, sum027^0'=sum027^post14, sum128^0'=sum128^post14, sum21^0'=sum21^post14, t44^0'=t44^post14, theta54^0'=theta54^post14, tmp^0'=tmp^post14, tmp___0^0'=tmp___0^post14, tmpmask56^0'=tmpmask56^post14, x029^0'=x029^post14, x130^0'=x130^post14, x43^0'=x43^post14, (0 == 0 /\ -mask47^post14+mask47^0 == 0 /\ -j62^post14+j62^0 == 0 /\ i25^0-i25^post14 == 0 /\ -i37^post14+i37^0 == 0 /\ -h031^post14+h031^0 == 0 /\ d^0-d^post14 == 0 /\ f36^0-f36^post14 == 0 /\ -1+n45^post14-n45^0 == 0 /\ -i19^post14+i19^0 == 0 /\ -i13^post14+i13^0 == 0 /\ -x029^post14+x029^0 == 0 /\ -x130^post14+x130^0 == 0 /\ sqr11^0-sqr11^post14 == 0 /\ k63^0-k63^post14 == 0 /\ i61^0-i61^post14 == 0 /\ bitchanged48^0-bitchanged48^post14 == 0 /\ tmp___0^0-tmp___0^post14 == 0 /\ n65^0-n65^post14 == 0 /\ numbasis49^0-numbasis49^post14 == 0 /\ -codeword50^post14+codeword50^0 == 0 /\ j55^0-j55^post14 == 0 /\ -theta54^post14+theta54^0 == 0 /\ -j26^post14+j26^0 == 0 /\ -ddim53^post14+ddim53^0 == 0 /\ -ret_mac15^post14+ret_mac15^0 == 0 /\ -sum128^post14+sum128^0 == 0 /\ -sum21^post14+sum21^0 == 0 /\ g51^0-g51^post14 == 0 /\ -p66^post14+p66^0 == 0 /\ ret_codebook57^0-ret_codebook57^post14 == 0 /\ -tmpmask56^post14+tmpmask56^0 == 0 /\ -n35^post14+n35^0 == 0 /\ -j20^post14+j20^0 == 0 /\ -49+n45^0 <= 0 /\ h132^0-h132^post14 == 0 /\ -c^post14+c^0 == 0 /\ m64^0-m64^post14 == 0 /\ sum027^0-sum027^post14 == 0 /\ -dotp14^post14+dotp14^0 == 0 /\ -tmp^post14+tmp^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post14 == 0), cost: 1
   4: l8 -> l9 : bitchanged48^0'=bitchanged48^post5, c^0'=c^post5, codeword50^0'=codeword50^post5, d^0'=d^post5, ddim53^0'=ddim53^post5, dotp14^0'=dotp14^post5, f36^0'=f36^post5, g51^0'=g51^post5, h031^0'=h031^post5, h132^0'=h132^post5, i13^0'=i13^post5, i19^0'=i19^post5, i25^0'=i25^post5, i37^0'=i37^post5, i61^0'=i61^post5, j20^0'=j20^post5, j26^0'=j26^post5, j55^0'=j55^post5, j62^0'=j62^post5, k63^0'=k63^post5, m64^0'=m64^post5, mask47^0'=mask47^post5, n35^0'=n35^post5, n45^0'=n45^post5, n65^0'=n65^post5, numbasis49^0'=numbasis49^post5, p66^0'=p66^post5, ret_codebook57^0'=ret_codebook57^post5, ret_latsynth38^0'=ret_latsynth38^post5, ret_mac15^0'=ret_mac15^post5, sqr11^0'=sqr11^post5, sum027^0'=sum027^post5, sum128^0'=sum128^post5, sum21^0'=sum21^post5, t44^0'=t44^post5, theta54^0'=theta54^post5, tmp^0'=tmp^post5, tmp___0^0'=tmp___0^post5, tmpmask56^0'=tmpmask56^post5, x029^0'=x029^post5, x130^0'=x130^post5, x43^0'=x43^post5, (-g51^post5+g51^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post5 == 0 /\ m64^0-m64^post5 == 0 /\ -i19^post5+i19^0 == 0 /\ -i13^post5+i13^0 == 0 /\ -x43^post5+x43^0 == 0 /\ -sum21^post5+sum21^0 == 0 /\ -codeword50^post5+codeword50^0 == 0 /\ -c^post5+c^0 == 0 /\ -sum128^post5+sum128^0 == 0 /\ -x130^post5+x130^0 == 0 /\ -h031^post5+h031^0 == 0 /\ -ddim53^post5+ddim53^0 == 0 /\ -dotp14^post5+dotp14^0 == 0 /\ -tmp___0^post5+tmp___0^0 == 0 /\ -j20^post5+j20^0 == 0 /\ 4-j62^0 <= 0 /\ h132^0-h132^post5 == 0 /\ t44^0-t44^post5 == 0 /\ k63^0-k63^post5 == 0 /\ sum027^0-sum027^post5 == 0 /\ ret_mac15^0-ret_mac15^post5 == 0 /\ -sqr11^post5+sqr11^0 == 0 /\ bitchanged48^0-bitchanged48^post5 == 0 /\ j26^0-j26^post5 == 0 /\ f36^0-f36^post5 == 0 /\ -n45^post5+n45^0 == 0 /\ -n65^post5+n65^0 == 0 /\ i37^0-i37^post5 == 0 /\ -j62^post5+j62^0 == 0 /\ i25^0-i25^post5 == 0 /\ -mask47^post5+mask47^0 == 0 /\ j55^0-j55^post5 == 0 /\ -tmpmask56^post5+tmpmask56^0 == 0 /\ -1+i61^post5-i61^0 == 0 /\ tmp^0-tmp^post5 == 0 /\ numbasis49^0-numbasis49^post5 == 0 /\ -ret_codebook57^post5+ret_codebook57^0 == 0 /\ p66^0-p66^post5 == 0 /\ n35^0-n35^post5 == 0 /\ d^0-d^post5 == 0 /\ -theta54^post5+theta54^0 == 0 /\ x029^0-x029^post5 == 0), cost: 1
   5: l8 -> l10 : bitchanged48^0'=bitchanged48^post6, c^0'=c^post6, codeword50^0'=codeword50^post6, d^0'=d^post6, ddim53^0'=ddim53^post6, dotp14^0'=dotp14^post6, f36^0'=f36^post6, g51^0'=g51^post6, h031^0'=h031^post6, h132^0'=h132^post6, i13^0'=i13^post6, i19^0'=i19^post6, i25^0'=i25^post6, i37^0'=i37^post6, i61^0'=i61^post6, j20^0'=j20^post6, j26^0'=j26^post6, j55^0'=j55^post6, j62^0'=j62^post6, k63^0'=k63^post6, m64^0'=m64^post6, mask47^0'=mask47^post6, n35^0'=n35^post6, n45^0'=n45^post6, n65^0'=n65^post6, numbasis49^0'=numbasis49^post6, p66^0'=p66^post6, ret_codebook57^0'=ret_codebook57^post6, ret_latsynth38^0'=ret_latsynth38^post6, ret_mac15^0'=ret_mac15^post6, sqr11^0'=sqr11^post6, sum027^0'=sum027^post6, sum128^0'=sum128^post6, sum21^0'=sum21^post6, t44^0'=t44^post6, theta54^0'=theta54^post6, tmp^0'=tmp^post6, tmp___0^0'=tmp___0^post6, tmpmask56^0'=tmpmask56^post6, x029^0'=x029^post6, x130^0'=x130^post6, x43^0'=x43^post6, (-theta54^post6+theta54^0 == 0 /\ -dotp14^post6+dotp14^0 == 0 /\ -1+j62^post6-j62^0 == 0 /\ -ddim53^post6+ddim53^0 == 0 /\ sqr11^0-sqr11^post6 == 0 /\ -codeword50^post6+codeword50^0 == 0 /\ -c^post6+c^0 == 0 /\ -x130^post6+x130^0 == 0 /\ -x43^post6+x43^0 == 0 /\ -sum128^post6+sum128^0 == 0 /\ -3+j62^0 <= 0 /\ -n45^post6+n45^0 == 0 /\ -i19^post6+i19^0 == 0 /\ -numbasis49^post6+numbasis49^0 == 0 /\ -tmpmask56^post6+tmpmask56^0 == 0 /\ bitchanged48^0-bitchanged48^post6 == 0 /\ tmp___0^0-tmp___0^post6 == 0 /\ k63^0-k63^post6 == 0 /\ t44^0-t44^post6 == 0 /\ n65^0-n65^post6 == 0 /\ h132^0-h132^post6 == 0 /\ m64^0-m64^post6 == 0 /\ f36^0-f36^post6 == 0 /\ -g51^post6+g51^0 == 0 /\ -j20^post6+j20^0 == 0 /\ j26^0-j26^post6 == 0 /\ -p66^post6+p66^0 == 0 /\ j55^0-j55^post6 == 0 /\ ret_codebook57^0-ret_codebook57^post6 == 0 /\ -ret_mac15^post6+ret_mac15^0 == 0 /\ -sum21^post6+sum21^0 == 0 /\ i37^0-i37^post6 == 0 /\ sum027^0-sum027^post6 == 0 /\ -mask47^post6+mask47^0 == 0 /\ x029^0-x029^post6 == 0 /\ tmp^0-tmp^post6 == 0 /\ ret_latsynth38^0-ret_latsynth38^post6 == 0 /\ -n35^post6+n35^0 == 0 /\ i25^0-i25^post6 == 0 /\ -i13^post6+i13^0 == 0 /\ -i61^post6+i61^0 == 0 /\ d^0-d^post6 == 0 /\ -h031^post6+h031^0 == 0), cost: 1
  28: l9 -> l11 : bitchanged48^0'=bitchanged48^post29, c^0'=c^post29, codeword50^0'=codeword50^post29, d^0'=d^post29, ddim53^0'=ddim53^post29, dotp14^0'=dotp14^post29, f36^0'=f36^post29, g51^0'=g51^post29, h031^0'=h031^post29, h132^0'=h132^post29, i13^0'=i13^post29, i19^0'=i19^post29, i25^0'=i25^post29, i37^0'=i37^post29, i61^0'=i61^post29, j20^0'=j20^post29, j26^0'=j26^post29, j55^0'=j55^post29, j62^0'=j62^post29, k63^0'=k63^post29, m64^0'=m64^post29, mask47^0'=mask47^post29, n35^0'=n35^post29, n45^0'=n45^post29, n65^0'=n65^post29, numbasis49^0'=numbasis49^post29, p66^0'=p66^post29, ret_codebook57^0'=ret_codebook57^post29, ret_latsynth38^0'=ret_latsynth38^post29, ret_mac15^0'=ret_mac15^post29, sqr11^0'=sqr11^post29, sum027^0'=sum027^post29, sum128^0'=sum128^post29, sum21^0'=sum21^post29, t44^0'=t44^post29, theta54^0'=theta54^post29, tmp^0'=tmp^post29, tmp___0^0'=tmp___0^post29, tmpmask56^0'=tmpmask56^post29, x029^0'=x029^post29, x130^0'=x130^post29, x43^0'=x43^post29, (-ret_mac15^post29+ret_mac15^0 == 0 /\ tmp^0-tmp^post29 == 0 /\ ddim53^0-ddim53^post29 == 0 /\ t44^0-t44^post29 == 0 /\ d^0-d^post29 == 0 /\ -x130^post29+x130^0 == 0 /\ -x43^post29+x43^0 == 0 /\ sum21^0-sum21^post29 == 0 /\ n65^0-n65^post29 == 0 /\ -j20^post29+j20^0 == 0 /\ -n45^post29+n45^0 == 0 /\ sqr11^0-sqr11^post29 == 0 /\ i25^0-i25^post29 == 0 /\ numbasis49^0-numbasis49^post29 == 0 /\ -i19^post29+i19^0 == 0 /\ mask47^0-mask47^post29 == 0 /\ -k63^post29+k63^0 == 0 /\ -h031^post29+h031^0 == 0 /\ -theta54^post29+theta54^0 == 0 /\ sum027^0-sum027^post29 == 0 /\ -tmpmask56^post29+tmpmask56^0 == 0 /\ m64^0-m64^post29 == 0 /\ -i37^post29+i37^0 == 0 /\ -p66^post29+p66^0 == 0 /\ bitchanged48^0-bitchanged48^post29 == 0 /\ -c^post29+c^0 == 0 /\ -dotp14^post29+dotp14^0 == 0 /\ -codeword50^post29+codeword50^0 == 0 /\ tmp___0^0-tmp___0^post29 == 0 /\ ret_codebook57^0-ret_codebook57^post29 == 0 /\ f36^0-f36^post29 == 0 /\ g51^0-g51^post29 == 0 /\ j55^0-j55^post29 == 0 /\ j62^0-j62^post29 == 0 /\ -j26^post29+j26^0 == 0 /\ i61^0-i61^post29 == 0 /\ ret_latsynth38^0-ret_latsynth38^post29 == 0 /\ -n35^post29+n35^0 == 0 /\ x029^0-x029^post29 == 0 /\ -i13^post29+i13^0 == 0 /\ h132^0-h132^post29 == 0 /\ -sum128^post29+sum128^0 == 0), cost: 1
  29: l10 -> l8 : bitchanged48^0'=bitchanged48^post30, c^0'=c^post30, codeword50^0'=codeword50^post30, d^0'=d^post30, ddim53^0'=ddim53^post30, dotp14^0'=dotp14^post30, f36^0'=f36^post30, g51^0'=g51^post30, h031^0'=h031^post30, h132^0'=h132^post30, i13^0'=i13^post30, i19^0'=i19^post30, i25^0'=i25^post30, i37^0'=i37^post30, i61^0'=i61^post30, j20^0'=j20^post30, j26^0'=j26^post30, j55^0'=j55^post30, j62^0'=j62^post30, k63^0'=k63^post30, m64^0'=m64^post30, mask47^0'=mask47^post30, n35^0'=n35^post30, n45^0'=n45^post30, n65^0'=n65^post30, numbasis49^0'=numbasis49^post30, p66^0'=p66^post30, ret_codebook57^0'=ret_codebook57^post30, ret_latsynth38^0'=ret_latsynth38^post30, ret_mac15^0'=ret_mac15^post30, sqr11^0'=sqr11^post30, sum027^0'=sum027^post30, sum128^0'=sum128^post30, sum21^0'=sum21^post30, t44^0'=t44^post30, theta54^0'=theta54^post30, tmp^0'=tmp^post30, tmp___0^0'=tmp___0^post30, tmpmask56^0'=tmpmask56^post30, x029^0'=x029^post30, x130^0'=x130^post30, x43^0'=x43^post30, (-ret_latsynth38^post30+ret_latsynth38^0 == 0 /\ -p66^post30+p66^0 == 0 /\ ddim53^0-ddim53^post30 == 0 /\ -n45^post30+n45^0 == 0 /\ -ret_mac15^post30+ret_mac15^0 == 0 /\ -numbasis49^post30+numbasis49^0 == 0 /\ -n35^post30+n35^0 == 0 /\ -sum128^post30+sum128^0 == 0 /\ c^0-c^post30 == 0 /\ -k63^post30+k63^0 == 0 /\ -bitchanged48^post30+bitchanged48^0 == 0 /\ codeword50^0-codeword50^post30 == 0 /\ i25^0-i25^post30 == 0 /\ -j20^post30+j20^0 == 0 /\ mask47^0-mask47^post30 == 0 /\ x029^0-x029^post30 == 0 /\ -theta54^post30+theta54^0 == 0 /\ m64^0-m64^post30 == 0 /\ t44^0-t44^post30 == 0 /\ -tmpmask56^post30+tmpmask56^0 == 0 /\ sqr11^0-sqr11^post30 == 0 /\ -x43^post30+x43^0 == 0 /\ sum21^0-sum21^post30 == 0 /\ i19^0-i19^post30 == 0 /\ -h132^post30+h132^0 == 0 /\ -i37^post30+i37^0 == 0 /\ -f36^post30+f36^0 == 0 /\ -tmp___0^post30+tmp___0^0 == 0 /\ -i13^post30+i13^0 == 0 /\ -d^post30+d^0 == 0 /\ sum027^0-sum027^post30 == 0 /\ n65^0-n65^post30 == 0 /\ -h031^post30+h031^0 == 0 /\ tmp^0-tmp^post30 == 0 /\ j55^0-j55^post30 == 0 /\ j62^0-j62^post30 == 0 /\ g51^0-g51^post30 == 0 /\ ret_codebook57^0-ret_codebook57^post30 == 0 /\ -x130^post30+x130^0 == 0 /\ dotp14^0-dotp14^post30 == 0 /\ -j26^post30+j26^0 == 0 /\ i61^0-i61^post30 == 0), cost: 1
   6: l11 -> l12 : bitchanged48^0'=bitchanged48^post7, c^0'=c^post7, codeword50^0'=codeword50^post7, d^0'=d^post7, ddim53^0'=ddim53^post7, dotp14^0'=dotp14^post7, f36^0'=f36^post7, g51^0'=g51^post7, h031^0'=h031^post7, h132^0'=h132^post7, i13^0'=i13^post7, i19^0'=i19^post7, i25^0'=i25^post7, i37^0'=i37^post7, i61^0'=i61^post7, j20^0'=j20^post7, j26^0'=j26^post7, j55^0'=j55^post7, j62^0'=j62^post7, k63^0'=k63^post7, m64^0'=m64^post7, mask47^0'=mask47^post7, n35^0'=n35^post7, n45^0'=n45^post7, n65^0'=n65^post7, numbasis49^0'=numbasis49^post7, p66^0'=p66^post7, ret_codebook57^0'=ret_codebook57^post7, ret_latsynth38^0'=ret_latsynth38^post7, ret_mac15^0'=ret_mac15^post7, sqr11^0'=sqr11^post7, sum027^0'=sum027^post7, sum128^0'=sum128^post7, sum21^0'=sum21^post7, t44^0'=t44^post7, theta54^0'=theta54^post7, tmp^0'=tmp^post7, tmp___0^0'=tmp___0^post7, tmpmask56^0'=tmpmask56^post7, x029^0'=x029^post7, x130^0'=x130^post7, x43^0'=x43^post7, (-3-n65^0+n65^post7 == 0 /\ g51^0-g51^post7 == 0 /\ -f36^post7+f36^0 == 0 /\ -d^post7+d^0 == 0 /\ -bitchanged48^post7+bitchanged48^0 == 0 /\ -h132^post7+h132^0 == 0 /\ c^0-c^post7 == 0 /\ -ret_latsynth38^post7+ret_latsynth38^0 == 0 /\ -ret_mac15^post7+ret_mac15^0 == 0 /\ -i13^post7+i13^0 == 0 /\ -x43^post7+x43^0 == 0 /\ h031^0-h031^post7 == 0 /\ -x130^post7+x130^0 == 0 /\ codeword50^0-codeword50^post7 == 0 /\ i25^0-i25^post7 == 0 /\ sum21^0-sum21^post7 == 0 /\ -j20^post7+j20^0 == 0 /\ t44^0-t44^post7 == 0 /\ sqr11^0-sqr11^post7 == 0 /\ 7+p66^post7-p66^0 == 0 /\ -7+k63^post7-k63^0 == 0 /\ numbasis49^0-numbasis49^post7 == 0 /\ mask47^0-mask47^post7 == 0 /\ -i37^post7+i37^0 == 0 /\ tmp___0^0-tmp___0^post7 == 0 /\ -n35^post7+n35^0 == 0 /\ sum027^0-sum027^post7 == 0 /\ -n45^post7+n45^0 == 0 /\ -tmpmask56^post7+tmpmask56^0 == 0 /\ ret_codebook57^0-ret_codebook57^post7 == 0 /\ i19^0-i19^post7 == 0 /\ dotp14^0-dotp14^post7 == 0 /\ ddim53^0-ddim53^post7 == 0 /\ 8-i61^0 <= 0 /\ -3-m64^0+m64^post7 == 0 /\ j55^0-j55^post7 == 0 /\ -theta54^post7+theta54^0 == 0 /\ x029^0-x029^post7 == 0 /\ -sum128^post7+sum128^0 == 0 /\ j62^0-j62^post7 == 0 /\ tmp^0-tmp^post7 == 0 /\ i61^0-i61^post7 == 0 /\ -j26^post7+j26^0 == 0), cost: 1
   7: l11 -> l10 : bitchanged48^0'=bitchanged48^post8, c^0'=c^post8, codeword50^0'=codeword50^post8, d^0'=d^post8, ddim53^0'=ddim53^post8, dotp14^0'=dotp14^post8, f36^0'=f36^post8, g51^0'=g51^post8, h031^0'=h031^post8, h132^0'=h132^post8, i13^0'=i13^post8, i19^0'=i19^post8, i25^0'=i25^post8, i37^0'=i37^post8, i61^0'=i61^post8, j20^0'=j20^post8, j26^0'=j26^post8, j55^0'=j55^post8, j62^0'=j62^post8, k63^0'=k63^post8, m64^0'=m64^post8, mask47^0'=mask47^post8, n35^0'=n35^post8, n45^0'=n45^post8, n65^0'=n65^post8, numbasis49^0'=numbasis49^post8, p66^0'=p66^post8, ret_codebook57^0'=ret_codebook57^post8, ret_latsynth38^0'=ret_latsynth38^post8, ret_mac15^0'=ret_mac15^post8, sqr11^0'=sqr11^post8, sum027^0'=sum027^post8, sum128^0'=sum128^post8, sum21^0'=sum21^post8, t44^0'=t44^post8, theta54^0'=theta54^post8, tmp^0'=tmp^post8, tmp___0^0'=tmp___0^post8, tmpmask56^0'=tmpmask56^post8, x029^0'=x029^post8, x130^0'=x130^post8, x43^0'=x43^post8, (c^0-c^post8 == 0 /\ j55^0-j55^post8 == 0 /\ -bitchanged48^post8+bitchanged48^0 == 0 /\ ddim53^0-ddim53^post8 == 0 /\ ret_mac15^0-ret_mac15^post8 == 0 /\ -n45^post8+n45^0 == 0 /\ -dotp14^post8+dotp14^0 == 0 /\ x029^0-x029^post8 == 0 /\ -mask47^post8+mask47^0 == 0 /\ d^0-d^post8 == 0 /\ -i37^post8+i37^0 == 0 /\ -7+i61^0 <= 0 /\ -sum128^post8+sum128^0 == 0 /\ j62^post8 == 0 /\ n35^0-n35^post8 == 0 /\ -ret_codebook57^post8+ret_codebook57^0 == 0 /\ -i19^post8+i19^0 == 0 /\ -x43^post8+x43^0 == 0 /\ j26^0-j26^post8 == 0 /\ -tmp___0^post8+tmp___0^0 == 0 /\ i25^0-i25^post8 == 0 /\ -tmpmask56^post8+tmpmask56^0 == 0 /\ numbasis49^0-numbasis49^post8 == 0 /\ -j20^post8+j20^0 == 0 /\ tmp^0-tmp^post8 == 0 /\ sum21^0-sum21^post8 == 0 /\ k63^0-k63^post8 == 0 /\ -theta54^post8+theta54^0 == 0 /\ g51^0-g51^post8 == 0 /\ m64^0-m64^post8 == 0 /\ t44^0-t44^post8 == 0 /\ sum027^0-sum027^post8 == 0 /\ -sqr11^post8+sqr11^0 == 0 /\ -codeword50^post8+codeword50^0 == 0 /\ -n65^post8+n65^0 == 0 /\ -h031^post8+h031^0 == 0 /\ -p66^post8+p66^0 == 0 /\ -i13^post8+i13^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post8 == 0 /\ -x130^post8+x130^0 == 0 /\ h132^0-h132^post8 == 0 /\ f36^0-f36^post8 == 0 /\ -i61^post8+i61^0 == 0), cost: 1
  27: l12 -> l13 : bitchanged48^0'=bitchanged48^post28, c^0'=c^post28, codeword50^0'=codeword50^post28, d^0'=d^post28, ddim53^0'=ddim53^post28, dotp14^0'=dotp14^post28, f36^0'=f36^post28, g51^0'=g51^post28, h031^0'=h031^post28, h132^0'=h132^post28, i13^0'=i13^post28, i19^0'=i19^post28, i25^0'=i25^post28, i37^0'=i37^post28, i61^0'=i61^post28, j20^0'=j20^post28, j26^0'=j26^post28, j55^0'=j55^post28, j62^0'=j62^post28, k63^0'=k63^post28, m64^0'=m64^post28, mask47^0'=mask47^post28, n35^0'=n35^post28, n45^0'=n45^post28, n65^0'=n65^post28, numbasis49^0'=numbasis49^post28, p66^0'=p66^post28, ret_codebook57^0'=ret_codebook57^post28, ret_latsynth38^0'=ret_latsynth38^post28, ret_mac15^0'=ret_mac15^post28, sqr11^0'=sqr11^post28, sum027^0'=sum027^post28, sum128^0'=sum128^post28, sum21^0'=sum21^post28, t44^0'=t44^post28, theta54^0'=theta54^post28, tmp^0'=tmp^post28, tmp___0^0'=tmp___0^post28, tmpmask56^0'=tmpmask56^post28, x029^0'=x029^post28, x130^0'=x130^post28, x43^0'=x43^post28, (j26^0-j26^post28 == 0 /\ -codeword50^post28+codeword50^0 == 0 /\ h132^0-h132^post28 == 0 /\ -dotp14^post28+dotp14^0 == 0 /\ f36^0-f36^post28 == 0 /\ -ret_mac15^post28+ret_mac15^0 == 0 /\ -n45^post28+n45^0 == 0 /\ -tmp___0^post28+tmp___0^0 == 0 /\ j55^0-j55^post28 == 0 /\ -n65^post28+n65^0 == 0 /\ -p66^post28+p66^0 == 0 /\ numbasis49^0-numbasis49^post28 == 0 /\ ddim53^0-ddim53^post28 == 0 /\ i25^0-i25^post28 == 0 /\ d^0-d^post28 == 0 /\ n35^0-n35^post28 == 0 /\ ret_codebook57^0-ret_codebook57^post28 == 0 /\ -sum027^post28+sum027^0 == 0 /\ -mask47^post28+mask47^0 == 0 /\ -i37^post28+i37^0 == 0 /\ -i19^post28+i19^0 == 0 /\ -j62^post28+j62^0 == 0 /\ -h031^post28+h031^0 == 0 /\ tmp^0-tmp^post28 == 0 /\ m64^0-m64^post28 == 0 /\ c^0-c^post28 == 0 /\ -i13^post28+i13^0 == 0 /\ -theta54^post28+theta54^0 == 0 /\ -tmpmask56^post28+tmpmask56^0 == 0 /\ -x43^post28+x43^0 == 0 /\ -x130^post28+x130^0 == 0 /\ x029^0-x029^post28 == 0 /\ t44^0-t44^post28 == 0 /\ ret_latsynth38^0-ret_latsynth38^post28 == 0 /\ -j20^post28+j20^0 == 0 /\ -i61^post28+i61^0 == 0 /\ g51^0-g51^post28 == 0 /\ sum21^0-sum21^post28 == 0 /\ sqr11^0-sqr11^post28 == 0 /\ -bitchanged48^post28+bitchanged48^0 == 0 /\ k63^0-k63^post28 == 0 /\ -sum128^post28+sum128^0 == 0), cost: 1
   8: l13 -> l14 : bitchanged48^0'=bitchanged48^post9, c^0'=c^post9, codeword50^0'=codeword50^post9, d^0'=d^post9, ddim53^0'=ddim53^post9, dotp14^0'=dotp14^post9, f36^0'=f36^post9, g51^0'=g51^post9, h031^0'=h031^post9, h132^0'=h132^post9, i13^0'=i13^post9, i19^0'=i19^post9, i25^0'=i25^post9, i37^0'=i37^post9, i61^0'=i61^post9, j20^0'=j20^post9, j26^0'=j26^post9, j55^0'=j55^post9, j62^0'=j62^post9, k63^0'=k63^post9, m64^0'=m64^post9, mask47^0'=mask47^post9, n35^0'=n35^post9, n45^0'=n45^post9, n65^0'=n65^post9, numbasis49^0'=numbasis49^post9, p66^0'=p66^post9, ret_codebook57^0'=ret_codebook57^post9, ret_latsynth38^0'=ret_latsynth38^post9, ret_mac15^0'=ret_mac15^post9, sqr11^0'=sqr11^post9, sum027^0'=sum027^post9, sum128^0'=sum128^post9, sum21^0'=sum21^post9, t44^0'=t44^post9, theta54^0'=theta54^post9, tmp^0'=tmp^post9, tmp___0^0'=tmp___0^post9, tmpmask56^0'=tmpmask56^post9, x029^0'=x029^post9, x130^0'=x130^post9, x43^0'=x43^post9, (sum128^0-sum128^post9 == 0 /\ -ret_mac15^post9+ret_mac15^0 == 0 /\ -n65^post9+n65^0 == 0 /\ -sum21^post9+sum21^0 == 0 /\ -p66^post9+p66^0 == 0 /\ h132^0-h132^post9 == 0 /\ -ret_codebook57^post9+ret_codebook57^0 == 0 /\ numbasis49^0-numbasis49^post9 == 0 /\ sum027^0-sum027^post9 == 0 /\ -x029^post9+x029^0 == 0 /\ j26^0-j26^post9 == 0 /\ -tmp___0^post9+tmp___0^0 == 0 /\ ddim53^0-ddim53^post9 == 0 /\ theta54^0-theta54^post9 == 0 /\ d^0-d^post9 == 0 /\ n35^0-n35^post9 == 0 /\ -n45^post9+n45^0 == 0 /\ -j20^post9+j20^0 == 0 /\ i25^0-i25^post9 == 0 /\ -mask47^post9+mask47^0 == 0 /\ -j55^post9+j55^0 == 0 /\ -dotp14^post9+dotp14^0 == 0 /\ -tmp^post9+tmp^0 == 0 /\ k63^0-k63^post9 == 0 /\ -x130^post9+x130^0 == 0 /\ -i61^post9+i61^0 == 0 /\ m64^0-m64^post9 == 0 /\ -i19^post9+i19^0 == 0 /\ c^0-c^post9 == 0 /\ -i37^post9+i37^0 == 0 /\ -h031^post9+h031^0 == 0 /\ g51^0-g51^post9 == 0 /\ 9-k63^0 <= 0 /\ -tmpmask56^post9+tmpmask56^0 == 0 /\ -i13^post9+i13^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post9 == 0 /\ -bitchanged48^post9+bitchanged48^0 == 0 /\ t44^0-t44^post9 == 0 /\ f36^0-f36^post9 == 0 /\ -j62^post9+j62^0 == 0 /\ x43^0-x43^post9 == 0 /\ -codeword50^post9+codeword50^0 == 0 /\ sqr11^0-sqr11^post9 == 0), cost: 1
   9: l13 -> l9 : bitchanged48^0'=bitchanged48^post10, c^0'=c^post10, codeword50^0'=codeword50^post10, d^0'=d^post10, ddim53^0'=ddim53^post10, dotp14^0'=dotp14^post10, f36^0'=f36^post10, g51^0'=g51^post10, h031^0'=h031^post10, h132^0'=h132^post10, i13^0'=i13^post10, i19^0'=i19^post10, i25^0'=i25^post10, i37^0'=i37^post10, i61^0'=i61^post10, j20^0'=j20^post10, j26^0'=j26^post10, j55^0'=j55^post10, j62^0'=j62^post10, k63^0'=k63^post10, m64^0'=m64^post10, mask47^0'=mask47^post10, n35^0'=n35^post10, n45^0'=n45^post10, n65^0'=n65^post10, numbasis49^0'=numbasis49^post10, p66^0'=p66^post10, ret_codebook57^0'=ret_codebook57^post10, ret_latsynth38^0'=ret_latsynth38^post10, ret_mac15^0'=ret_mac15^post10, sqr11^0'=sqr11^post10, sum027^0'=sum027^post10, sum128^0'=sum128^post10, sum21^0'=sum21^post10, t44^0'=t44^post10, theta54^0'=theta54^post10, tmp^0'=tmp^post10, tmp___0^0'=tmp___0^post10, tmpmask56^0'=tmpmask56^post10, x029^0'=x029^post10, x130^0'=x130^post10, x43^0'=x43^post10, (i19^0-i19^post10 == 0 /\ numbasis49^0-numbasis49^post10 == 0 /\ -n45^post10+n45^0 == 0 /\ -n65^post10+n65^0 == 0 /\ -tmpmask56^post10+tmpmask56^0 == 0 /\ -mask47^post10+mask47^0 == 0 /\ -j26^post10+j26^0 == 0 /\ -j20^post10+j20^0 == 0 /\ -j62^post10+j62^0 == 0 /\ k63^0-k63^post10 == 0 /\ ddim53^0-ddim53^post10 == 0 /\ ret_latsynth38^0-ret_latsynth38^post10 == 0 /\ c^0-c^post10 == 0 /\ tmp___0^0-tmp___0^post10 == 0 /\ -theta54^post10+theta54^0 == 0 /\ -dotp14^post10+dotp14^0 == 0 /\ -d^post10+d^0 == 0 /\ -i37^post10+i37^0 == 0 /\ -ret_mac15^post10+ret_mac15^0 == 0 /\ -ret_codebook57^post10+ret_codebook57^0 == 0 /\ i25^0-i25^post10 == 0 /\ i61^post10 == 0 /\ -x029^post10+x029^0 == 0 /\ j55^0-j55^post10 == 0 /\ t44^0-t44^post10 == 0 /\ x43^0-x43^post10 == 0 /\ -sum21^post10+sum21^0 == 0 /\ -codeword50^post10+codeword50^0 == 0 /\ -bitchanged48^post10+bitchanged48^0 == 0 /\ n35^0-n35^post10 == 0 /\ -sum128^post10+sum128^0 == 0 /\ g51^0-g51^post10 == 0 /\ m64^0-m64^post10 == 0 /\ sqr11^0-sqr11^post10 == 0 /\ -8+k63^0 <= 0 /\ -f36^post10+f36^0 == 0 /\ -tmp^post10+tmp^0 == 0 /\ -p66^post10+p66^0 == 0 /\ -i13^post10+i13^0 == 0 /\ sum027^0-sum027^post10 == 0 /\ h132^0-h132^post10 == 0 /\ -h031^post10+h031^0 == 0 /\ -x130^post10+x130^0 == 0), cost: 1
  10: l15 -> l12 : bitchanged48^0'=bitchanged48^post11, c^0'=c^post11, codeword50^0'=codeword50^post11, d^0'=d^post11, ddim53^0'=ddim53^post11, dotp14^0'=dotp14^post11, f36^0'=f36^post11, g51^0'=g51^post11, h031^0'=h031^post11, h132^0'=h132^post11, i13^0'=i13^post11, i19^0'=i19^post11, i25^0'=i25^post11, i37^0'=i37^post11, i61^0'=i61^post11, j20^0'=j20^post11, j26^0'=j26^post11, j55^0'=j55^post11, j62^0'=j62^post11, k63^0'=k63^post11, m64^0'=m64^post11, mask47^0'=mask47^post11, n35^0'=n35^post11, n45^0'=n45^post11, n65^0'=n65^post11, numbasis49^0'=numbasis49^post11, p66^0'=p66^post11, ret_codebook57^0'=ret_codebook57^post11, ret_latsynth38^0'=ret_latsynth38^post11, ret_mac15^0'=ret_mac15^post11, sqr11^0'=sqr11^post11, sum027^0'=sum027^post11, sum128^0'=sum128^post11, sum21^0'=sum21^post11, t44^0'=t44^post11, theta54^0'=theta54^post11, tmp^0'=tmp^post11, tmp___0^0'=tmp___0^post11, tmpmask56^0'=tmpmask56^post11, x029^0'=x029^post11, x130^0'=x130^post11, x43^0'=x43^post11, (h031^0-h031^post11 == 0 /\ t44^0-t44^post11 == 0 /\ -ret_latsynth38^post11+ret_latsynth38^0 == 0 /\ mask47^0-mask47^post11 == 0 /\ -g51^0+ret_codebook57^post11 == 0 /\ -ret_mac15^post11+ret_mac15^0 == 0 /\ -i13^post11+i13^0 == 0 /\ -d^post11+d^0 == 0 /\ i19^0-i19^post11 == 0 /\ i25^0-i25^post11 == 0 /\ sum21^0-sum21^post11 == 0 /\ -x130^post11+x130^0 == 0 /\ -1+k63^post11 == 0 /\ -n35^post11+n35^0 == 0 /\ -13+n65^post11 == 0 /\ -j20^post11+j20^0 == 0 /\ -f36^post11+f36^0 == 0 /\ sqr11^0-sqr11^post11 == 0 /\ -theta54^post11+theta54^0 == 0 /\ sum027^0-sum027^post11 == 0 /\ m64^post11 == 0 /\ x029^0-x029^post11 == 0 /\ -i37^post11+i37^0 == 0 /\ c^0-c^post11 == 0 /\ dotp14^0-dotp14^post11 == 0 /\ -bitchanged48^post11+bitchanged48^0 == 0 /\ tmp^0-tmp^post11 == 0 /\ -sum128^post11+sum128^0 == 0 /\ j55^0-j55^post11 == 0 /\ -j26^post11+j26^0 == 0 /\ x43^0-x43^post11 == 0 /\ -n45^post11+n45^0 == 0 /\ -numbasis49^post11+numbasis49^0 == 0 /\ -h132^post11+h132^0 == 0 /\ -codeword50^post11+codeword50^0 == 0 /\ g51^0-g51^post11 == 0 /\ i61^0-i61^post11 == 0 /\ 1-j55^0+numbasis49^0 <= 0 /\ ddim53^0-ddim53^post11 == 0 /\ -8+p66^post11 == 0 /\ j62^0-j62^post11 == 0 /\ -tmpmask56^post11+tmpmask56^0 == 0 /\ tmp___0^post11-ret_codebook57^post11 == 0), cost: 1
  11: l15 -> l16 : bitchanged48^0'=bitchanged48^post12, c^0'=c^post12, codeword50^0'=codeword50^post12, d^0'=d^post12, ddim53^0'=ddim53^post12, dotp14^0'=dotp14^post12, f36^0'=f36^post12, g51^0'=g51^post12, h031^0'=h031^post12, h132^0'=h132^post12, i13^0'=i13^post12, i19^0'=i19^post12, i25^0'=i25^post12, i37^0'=i37^post12, i61^0'=i61^post12, j20^0'=j20^post12, j26^0'=j26^post12, j55^0'=j55^post12, j62^0'=j62^post12, k63^0'=k63^post12, m64^0'=m64^post12, mask47^0'=mask47^post12, n35^0'=n35^post12, n45^0'=n45^post12, n65^0'=n65^post12, numbasis49^0'=numbasis49^post12, p66^0'=p66^post12, ret_codebook57^0'=ret_codebook57^post12, ret_latsynth38^0'=ret_latsynth38^post12, ret_mac15^0'=ret_mac15^post12, sqr11^0'=sqr11^post12, sum027^0'=sum027^post12, sum128^0'=sum128^post12, sum21^0'=sum21^post12, t44^0'=t44^post12, theta54^0'=theta54^post12, tmp^0'=tmp^post12, tmp___0^0'=tmp___0^post12, tmpmask56^0'=tmpmask56^post12, x029^0'=x029^post12, x130^0'=x130^post12, x43^0'=x43^post12, (-1-j55^0+j55^post12 == 0 /\ -tmpmask56^post12+tmpmask56^0 == 0 /\ -n35^post12+n35^0 == 0 /\ -i25^post12+i25^0 == 0 /\ -i37^post12+i37^0 == 0 /\ -i13^post12+i13^0 == 0 /\ -n45^post12+n45^0 == 0 /\ -numbasis49^post12+numbasis49^0 == 0 /\ mask47^0-mask47^post12 == 0 /\ m64^0-m64^post12 == 0 /\ -bitchanged48^post12+bitchanged48^0 == 0 /\ c^0-c^post12 == 0 /\ -j26^post12+j26^0 == 0 /\ -theta54^post12+theta54^0 == 0 /\ -codeword50^post12+codeword50^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post12 == 0 /\ -sum128^post12+sum128^0 == 0 /\ n65^0-n65^post12 == 0 /\ -tmp___0^post12+tmp___0^0 == 0 /\ -x130^post12+x130^0 == 0 /\ -x43^post12+x43^0 == 0 /\ t44^0-t44^post12 == 0 /\ -p66^post12+p66^0 == 0 /\ -f36^post12+f36^0 == 0 /\ -h132^post12+h132^0 == 0 /\ j55^0-numbasis49^0 <= 0 /\ j62^0-j62^post12 == 0 /\ i61^0-i61^post12 == 0 /\ sum21^0-sum21^post12 == 0 /\ i19^0-i19^post12 == 0 /\ x029^0-x029^post12 == 0 /\ tmp^0-tmp^post12 == 0 /\ dotp14^0-dotp14^post12 == 0 /\ g51^0-g51^post12 == 0 /\ sqr11^0-sqr11^post12 == 0 /\ -j20^post12+j20^0 == 0 /\ -d^post12+d^0 == 0 /\ sum027^0-sum027^post12 == 0 /\ -ret_codebook57^post12+ret_codebook57^0 == 0 /\ -k63^post12+k63^0 == 0 /\ h031^0-h031^post12 == 0 /\ ddim53^0-ddim53^post12 == 0 /\ -ret_mac15^post12+ret_mac15^0 == 0), cost: 1
  14: l16 -> l15 : bitchanged48^0'=bitchanged48^post15, c^0'=c^post15, codeword50^0'=codeword50^post15, d^0'=d^post15, ddim53^0'=ddim53^post15, dotp14^0'=dotp14^post15, f36^0'=f36^post15, g51^0'=g51^post15, h031^0'=h031^post15, h132^0'=h132^post15, i13^0'=i13^post15, i19^0'=i19^post15, i25^0'=i25^post15, i37^0'=i37^post15, i61^0'=i61^post15, j20^0'=j20^post15, j26^0'=j26^post15, j55^0'=j55^post15, j62^0'=j62^post15, k63^0'=k63^post15, m64^0'=m64^post15, mask47^0'=mask47^post15, n35^0'=n35^post15, n45^0'=n45^post15, n65^0'=n65^post15, numbasis49^0'=numbasis49^post15, p66^0'=p66^post15, ret_codebook57^0'=ret_codebook57^post15, ret_latsynth38^0'=ret_latsynth38^post15, ret_mac15^0'=ret_mac15^post15, sqr11^0'=sqr11^post15, sum027^0'=sum027^post15, sum128^0'=sum128^post15, sum21^0'=sum21^post15, t44^0'=t44^post15, theta54^0'=theta54^post15, tmp^0'=tmp^post15, tmp___0^0'=tmp___0^post15, tmpmask56^0'=tmpmask56^post15, x029^0'=x029^post15, x130^0'=x130^post15, x43^0'=x43^post15, (x029^0-x029^post15 == 0 /\ f36^0-f36^post15 == 0 /\ -i13^post15+i13^0 == 0 /\ sum21^0-sum21^post15 == 0 /\ -bitchanged48^post15+bitchanged48^0 == 0 /\ -h031^post15+h031^0 == 0 /\ -theta54^post15+theta54^0 == 0 /\ -codeword50^post15+codeword50^0 == 0 /\ -dotp14^post15+dotp14^0 == 0 /\ -d^post15+d^0 == 0 /\ j55^0-j55^post15 == 0 /\ tmp^0-tmp^post15 == 0 /\ -ret_mac15^post15+ret_mac15^0 == 0 /\ n65^0-n65^post15 == 0 /\ -sum128^post15+sum128^0 == 0 /\ -t44^post15+t44^0 == 0 /\ numbasis49^0-numbasis49^post15 == 0 /\ ret_latsynth38^0-ret_latsynth38^post15 == 0 /\ -x130^post15+x130^0 == 0 /\ ddim53^0-ddim53^post15 == 0 /\ -p66^post15+p66^0 == 0 /\ -i37^post15+i37^0 == 0 /\ i25^0-i25^post15 == 0 /\ m64^0-m64^post15 == 0 /\ g51^0-g51^post15 == 0 /\ sqr11^0-sqr11^post15 == 0 /\ mask47^0-mask47^post15 == 0 /\ -n45^post15+n45^0 == 0 /\ ret_codebook57^0-ret_codebook57^post15 == 0 /\ c^0-c^post15 == 0 /\ -k63^post15+k63^0 == 0 /\ -j20^post15+j20^0 == 0 /\ -j26^post15+j26^0 == 0 /\ -n35^post15+n35^0 == 0 /\ -j62^post15+j62^0 == 0 /\ h132^0-h132^post15 == 0 /\ i61^0-i61^post15 == 0 /\ -sum027^post15+sum027^0 == 0 /\ -x43^post15+x43^0 == 0 /\ -i19^post15+i19^0 == 0 /\ -tmpmask56^post15+tmpmask56^0 == 0 /\ tmp___0^0-tmp___0^post15 == 0), cost: 1
  21: l17 -> l18 : bitchanged48^0'=bitchanged48^post22, c^0'=c^post22, codeword50^0'=codeword50^post22, d^0'=d^post22, ddim53^0'=ddim53^post22, dotp14^0'=dotp14^post22, f36^0'=f36^post22, g51^0'=g51^post22, h031^0'=h031^post22, h132^0'=h132^post22, i13^0'=i13^post22, i19^0'=i19^post22, i25^0'=i25^post22, i37^0'=i37^post22, i61^0'=i61^post22, j20^0'=j20^post22, j26^0'=j26^post22, j55^0'=j55^post22, j62^0'=j62^post22, k63^0'=k63^post22, m64^0'=m64^post22, mask47^0'=mask47^post22, n35^0'=n35^post22, n45^0'=n45^post22, n65^0'=n65^post22, numbasis49^0'=numbasis49^post22, p66^0'=p66^post22, ret_codebook57^0'=ret_codebook57^post22, ret_latsynth38^0'=ret_latsynth38^post22, ret_mac15^0'=ret_mac15^post22, sqr11^0'=sqr11^post22, sum027^0'=sum027^post22, sum128^0'=sum128^post22, sum21^0'=sum21^post22, t44^0'=t44^post22, theta54^0'=theta54^post22, tmp^0'=tmp^post22, tmp___0^0'=tmp___0^post22, tmpmask56^0'=tmpmask56^post22, x029^0'=x029^post22, x130^0'=x130^post22, x43^0'=x43^post22, (sqr11^0-sqr11^post22 == 0 /\ -1-i19^0+i19^post22 == 0 /\ tmp^0-tmp^post22 == 0 /\ c^0-c^post22 == 0 /\ codeword50^0-codeword50^post22 == 0 /\ -k63^post22+k63^0 == 0 /\ -sum128^post22+sum128^0 == 0 /\ -bitchanged48^post22+bitchanged48^0 == 0 /\ g51^0-g51^post22 == 0 /\ 50-j20^0 <= 0 /\ h031^0-h031^post22 == 0 /\ m64^0-m64^post22 == 0 /\ -i37^post22+i37^0 == 0 /\ t44^0-t44^post22 == 0 /\ -h132^post22+h132^0 == 0 /\ -d^post22+d^0 == 0 /\ i61^0-i61^post22 == 0 /\ sum21^0-sum21^post22 == 0 /\ mask47^0-mask47^post22 == 0 /\ -numbasis49^post22+numbasis49^0 == 0 /\ -tmpmask56^post22+tmpmask56^0 == 0 /\ n65^0-n65^post22 == 0 /\ -x43^post22+x43^0 == 0 /\ -ret_mac15^post22+ret_mac15^0 == 0 /\ -n45^post22+n45^0 == 0 /\ -j20^post22+j20^0 == 0 /\ j55^0-j55^post22 == 0 /\ dotp14^0-dotp14^post22 == 0 /\ ddim53^0-ddim53^post22 == 0 /\ -theta54^post22+theta54^0 == 0 /\ sum027^0-sum027^post22 == 0 /\ j62^0-j62^post22 == 0 /\ tmp___0^0-tmp___0^post22 == 0 /\ -j26^post22+j26^0 == 0 /\ -f36^post22+f36^0 == 0 /\ x029^0-x029^post22 == 0 /\ ret_latsynth38^0-ret_latsynth38^post22 == 0 /\ -i25^post22+i25^0 == 0 /\ -i13^post22+i13^0 == 0 /\ ret_codebook57^0-ret_codebook57^post22 == 0 /\ -n35^post22+n35^0 == 0 /\ -x130^post22+x130^0 == 0 /\ -p66^post22+p66^0 == 0), cost: 1
  22: l17 -> l19 : bitchanged48^0'=bitchanged48^post23, c^0'=c^post23, codeword50^0'=codeword50^post23, d^0'=d^post23, ddim53^0'=ddim53^post23, dotp14^0'=dotp14^post23, f36^0'=f36^post23, g51^0'=g51^post23, h031^0'=h031^post23, h132^0'=h132^post23, i13^0'=i13^post23, i19^0'=i19^post23, i25^0'=i25^post23, i37^0'=i37^post23, i61^0'=i61^post23, j20^0'=j20^post23, j26^0'=j26^post23, j55^0'=j55^post23, j62^0'=j62^post23, k63^0'=k63^post23, m64^0'=m64^post23, mask47^0'=mask47^post23, n35^0'=n35^post23, n45^0'=n45^post23, n65^0'=n65^post23, numbasis49^0'=numbasis49^post23, p66^0'=p66^post23, ret_codebook57^0'=ret_codebook57^post23, ret_latsynth38^0'=ret_latsynth38^post23, ret_mac15^0'=ret_mac15^post23, sqr11^0'=sqr11^post23, sum027^0'=sum027^post23, sum128^0'=sum128^post23, sum21^0'=sum21^post23, t44^0'=t44^post23, theta54^0'=theta54^post23, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post23, tmpmask56^0'=tmpmask56^post23, x029^0'=x029^post23, x130^0'=x130^post23, x43^0'=x43^post23, (0 == 0 /\ -theta54^post23+theta54^0 == 0 /\ -h132^post23+h132^0 == 0 /\ -i37^post23+i37^0 == 0 /\ -i25^post23+i25^0 == 0 /\ x029^0-x029^post23 == 0 /\ g51^0-g51^post23 == 0 /\ ret_codebook57^0-ret_codebook57^post23 == 0 /\ -i13^post23+i13^0 == 0 /\ mask47^0-mask47^post23 == 0 /\ c^0-c^post23 == 0 /\ -x43^post23+x43^0 == 0 /\ h031^0-h031^post23 == 0 /\ tmp^0-tmp^post23 == 0 /\ m64^0-m64^post23 == 0 /\ -j26^post23+j26^0 == 0 /\ -n35^post23+n35^0 == 0 /\ -t44^post23+t44^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post23 == 0 /\ -d^post23+d^0 == 0 /\ -1+j20^post23-j20^0 == 0 /\ -sum128^post23+sum128^0 == 0 /\ dotp14^0-dotp14^post23 == 0 /\ j55^0-j55^post23 == 0 /\ i19^0-i19^post23 == 0 /\ j62^0-j62^post23 == 0 /\ sqr11^0-sqr11^post23 == 0 /\ i61^0-i61^post23 == 0 /\ -ret_mac15^post23+ret_mac15^0 == 0 /\ n65^0-n65^post23 == 0 /\ -x130^post23+x130^0 == 0 /\ -p66^post23+p66^0 == 0 /\ ddim53^0-ddim53^post23 == 0 /\ -numbasis49^post23+numbasis49^0 == 0 /\ -bitchanged48^post23+bitchanged48^0 == 0 /\ -49+j20^0 <= 0 /\ -n45^post23+n45^0 == 0 /\ -tmpmask56^post23+tmpmask56^0 == 0 /\ -k63^post23+k63^0 == 0 /\ -codeword50^post23+codeword50^0 == 0 /\ tmp___0^0-tmp___0^post23 == 0 /\ -sum027^post23+sum027^0 == 0 /\ -f36^post23+f36^0 == 0), cost: 1
  31: l18 -> l20 : bitchanged48^0'=bitchanged48^post32, c^0'=c^post32, codeword50^0'=codeword50^post32, d^0'=d^post32, ddim53^0'=ddim53^post32, dotp14^0'=dotp14^post32, f36^0'=f36^post32, g51^0'=g51^post32, h031^0'=h031^post32, h132^0'=h132^post32, i13^0'=i13^post32, i19^0'=i19^post32, i25^0'=i25^post32, i37^0'=i37^post32, i61^0'=i61^post32, j20^0'=j20^post32, j26^0'=j26^post32, j55^0'=j55^post32, j62^0'=j62^post32, k63^0'=k63^post32, m64^0'=m64^post32, mask47^0'=mask47^post32, n35^0'=n35^post32, n45^0'=n45^post32, n65^0'=n65^post32, numbasis49^0'=numbasis49^post32, p66^0'=p66^post32, ret_codebook57^0'=ret_codebook57^post32, ret_latsynth38^0'=ret_latsynth38^post32, ret_mac15^0'=ret_mac15^post32, sqr11^0'=sqr11^post32, sum027^0'=sum027^post32, sum128^0'=sum128^post32, sum21^0'=sum21^post32, t44^0'=t44^post32, theta54^0'=theta54^post32, tmp^0'=tmp^post32, tmp___0^0'=tmp___0^post32, tmpmask56^0'=tmpmask56^post32, x029^0'=x029^post32, x130^0'=x130^post32, x43^0'=x43^post32, (-n45^post32+n45^0 == 0 /\ ddim53^0-ddim53^post32 == 0 /\ -n65^post32+n65^0 == 0 /\ h132^0-h132^post32 == 0 /\ -j26^post32+j26^0 == 0 /\ -j62^post32+j62^0 == 0 /\ -tmpmask56^post32+tmpmask56^0 == 0 /\ -ret_codebook57^post32+ret_codebook57^0 == 0 /\ -p66^post32+p66^0 == 0 /\ d^0-d^post32 == 0 /\ k63^0-k63^post32 == 0 /\ -j20^post32+j20^0 == 0 /\ numbasis49^0-numbasis49^post32 == 0 /\ -mask47^post32+mask47^0 == 0 /\ -theta54^post32+theta54^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post32 == 0 /\ tmp___0^0-tmp___0^post32 == 0 /\ bitchanged48^0-bitchanged48^post32 == 0 /\ i25^0-i25^post32 == 0 /\ j55^0-j55^post32 == 0 /\ -codeword50^post32+codeword50^0 == 0 /\ -ret_mac15^post32+ret_mac15^0 == 0 /\ -x029^post32+x029^0 == 0 /\ -x130^post32+x130^0 == 0 /\ -sum128^post32+sum128^0 == 0 /\ t44^0-t44^post32 == 0 /\ sqr11^0-sqr11^post32 == 0 /\ -dotp14^post32+dotp14^0 == 0 /\ -i37^post32+i37^0 == 0 /\ -h031^post32+h031^0 == 0 /\ -i61^post32+i61^0 == 0 /\ -i13^post32+i13^0 == 0 /\ -i19^post32+i19^0 == 0 /\ n35^0-n35^post32 == 0 /\ -sum21^post32+sum21^0 == 0 /\ -tmp^post32+tmp^0 == 0 /\ m64^0-m64^post32 == 0 /\ g51^0-g51^post32 == 0 /\ f36^0-f36^post32 == 0 /\ x43^0-x43^post32 == 0 /\ sum027^0-sum027^post32 == 0 /\ -c^post32+c^0 == 0), cost: 1
  32: l19 -> l17 : bitchanged48^0'=bitchanged48^post33, c^0'=c^post33, codeword50^0'=codeword50^post33, d^0'=d^post33, ddim53^0'=ddim53^post33, dotp14^0'=dotp14^post33, f36^0'=f36^post33, g51^0'=g51^post33, h031^0'=h031^post33, h132^0'=h132^post33, i13^0'=i13^post33, i19^0'=i19^post33, i25^0'=i25^post33, i37^0'=i37^post33, i61^0'=i61^post33, j20^0'=j20^post33, j26^0'=j26^post33, j55^0'=j55^post33, j62^0'=j62^post33, k63^0'=k63^post33, m64^0'=m64^post33, mask47^0'=mask47^post33, n35^0'=n35^post33, n45^0'=n45^post33, n65^0'=n65^post33, numbasis49^0'=numbasis49^post33, p66^0'=p66^post33, ret_codebook57^0'=ret_codebook57^post33, ret_latsynth38^0'=ret_latsynth38^post33, ret_mac15^0'=ret_mac15^post33, sqr11^0'=sqr11^post33, sum027^0'=sum027^post33, sum128^0'=sum128^post33, sum21^0'=sum21^post33, t44^0'=t44^post33, theta54^0'=theta54^post33, tmp^0'=tmp^post33, tmp___0^0'=tmp___0^post33, tmpmask56^0'=tmpmask56^post33, x029^0'=x029^post33, x130^0'=x130^post33, x43^0'=x43^post33, (-j20^post33+j20^0 == 0 /\ x029^0-x029^post33 == 0 /\ k63^0-k63^post33 == 0 /\ -j26^post33+j26^0 == 0 /\ ddim53^0-ddim53^post33 == 0 /\ f36^0-f36^post33 == 0 /\ i25^0-i25^post33 == 0 /\ -j62^post33+j62^0 == 0 /\ -x130^post33+x130^0 == 0 /\ numbasis49^0-numbasis49^post33 == 0 /\ -theta54^post33+theta54^0 == 0 /\ -d^post33+d^0 == 0 /\ -i13^post33+i13^0 == 0 /\ -h031^post33+h031^0 == 0 /\ -i61^post33+i61^0 == 0 /\ -p66^post33+p66^0 == 0 /\ g51^0-g51^post33 == 0 /\ -n65^post33+n65^0 == 0 /\ j55^0-j55^post33 == 0 /\ t44^0-t44^post33 == 0 /\ ret_codebook57^0-ret_codebook57^post33 == 0 /\ n35^0-n35^post33 == 0 /\ ret_latsynth38^0-ret_latsynth38^post33 == 0 /\ -tmp^post33+tmp^0 == 0 /\ -sum128^post33+sum128^0 == 0 /\ mask47^0-mask47^post33 == 0 /\ -sum21^post33+sum21^0 == 0 /\ h132^0-h132^post33 == 0 /\ c^0-c^post33 == 0 /\ m64^0-m64^post33 == 0 /\ -x43^post33+x43^0 == 0 /\ sqr11^0-sqr11^post33 == 0 /\ -codeword50^post33+codeword50^0 == 0 /\ -bitchanged48^post33+bitchanged48^0 == 0 /\ -tmpmask56^post33+tmpmask56^0 == 0 /\ -ret_mac15^post33+ret_mac15^0 == 0 /\ -dotp14^post33+dotp14^0 == 0 /\ -i37^post33+i37^0 == 0 /\ tmp___0^0-tmp___0^post33 == 0 /\ -i19^post33+i19^0 == 0 /\ sum027^0-sum027^post33 == 0 /\ -n45^post33+n45^0 == 0), cost: 1
  23: l20 -> l0 : bitchanged48^0'=bitchanged48^post24, c^0'=c^post24, codeword50^0'=codeword50^post24, d^0'=d^post24, ddim53^0'=ddim53^post24, dotp14^0'=dotp14^post24, f36^0'=f36^post24, g51^0'=g51^post24, h031^0'=h031^post24, h132^0'=h132^post24, i13^0'=i13^post24, i19^0'=i19^post24, i25^0'=i25^post24, i37^0'=i37^post24, i61^0'=i61^post24, j20^0'=j20^post24, j26^0'=j26^post24, j55^0'=j55^post24, j62^0'=j62^post24, k63^0'=k63^post24, m64^0'=m64^post24, mask47^0'=mask47^post24, n35^0'=n35^post24, n45^0'=n45^post24, n65^0'=n65^post24, numbasis49^0'=numbasis49^post24, p66^0'=p66^post24, ret_codebook57^0'=ret_codebook57^post24, ret_latsynth38^0'=ret_latsynth38^post24, ret_mac15^0'=ret_mac15^post24, sqr11^0'=sqr11^post24, sum027^0'=sum027^post24, sum128^0'=sum128^post24, sum21^0'=sum21^post24, t44^0'=t44^post24, theta54^0'=theta54^post24, tmp^0'=tmp^post24, tmp___0^0'=tmp___0^post24, tmpmask56^0'=tmpmask56^post24, x029^0'=x029^post24, x130^0'=x130^post24, x43^0'=x43^post24, (mask47^0-mask47^post24 == 0 /\ -f36^post24+f36^0 == 0 /\ c^0-c^post24 == 0 /\ m64^0-m64^post24 == 0 /\ -i25^post24+i25^0 == 0 /\ -tmp___0^post24+tmp___0^0 == 0 /\ -i37^post24+i37^0 == 0 /\ -i13^post24+i13^0 == 0 /\ g51^0-g51^post24 == 0 /\ -d^post24+d^0 == 0 /\ ret_codebook57^0-ret_codebook57^post24 == 0 /\ -sum21^post24+sum21^0 == 0 /\ -h132^post24+h132^0 == 0 /\ -sum128^post24+sum128^0 == 0 /\ codeword50^0-codeword50^post24 == 0 /\ h031^0-h031^post24 == 0 /\ t44^0-t44^post24 == 0 /\ j26^post24 == 0 /\ -x130^post24+x130^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post24 == 0 /\ -j62^post24+j62^0 == 0 /\ -ret_mac15^post24+ret_mac15^0 == 0 /\ -p66^post24+p66^0 == 0 /\ -numbasis49^post24+numbasis49^0 == 0 /\ x029^0-x029^post24 == 0 /\ -k63^post24+k63^0 == 0 /\ -tmpmask56^post24+tmpmask56^0 == 0 /\ j55^0-j55^post24 == 0 /\ sqr11^0-sqr11^post24 == 0 /\ sum027^0-sum027^post24 == 0 /\ -n45^post24+n45^0 == 0 /\ -j20^post24+j20^0 == 0 /\ i19^0-i19^post24 == 0 /\ dotp14^0-dotp14^post24 == 0 /\ i61^0-i61^post24 == 0 /\ ddim53^0-ddim53^post24 == 0 /\ -theta54^post24+theta54^0 == 0 /\ n65^0-n65^post24 == 0 /\ n35^0-n35^post24 == 0 /\ 50-i19^0 <= 0 /\ -bitchanged48^post24+bitchanged48^0 == 0 /\ -x43^post24+x43^0 == 0 /\ tmp^0-tmp^post24 == 0), cost: 1
  24: l20 -> l19 : bitchanged48^0'=bitchanged48^post25, c^0'=c^post25, codeword50^0'=codeword50^post25, d^0'=d^post25, ddim53^0'=ddim53^post25, dotp14^0'=dotp14^post25, f36^0'=f36^post25, g51^0'=g51^post25, h031^0'=h031^post25, h132^0'=h132^post25, i13^0'=i13^post25, i19^0'=i19^post25, i25^0'=i25^post25, i37^0'=i37^post25, i61^0'=i61^post25, j20^0'=j20^post25, j26^0'=j26^post25, j55^0'=j55^post25, j62^0'=j62^post25, k63^0'=k63^post25, m64^0'=m64^post25, mask47^0'=mask47^post25, n35^0'=n35^post25, n45^0'=n45^post25, n65^0'=n65^post25, numbasis49^0'=numbasis49^post25, p66^0'=p66^post25, ret_codebook57^0'=ret_codebook57^post25, ret_latsynth38^0'=ret_latsynth38^post25, ret_mac15^0'=ret_mac15^post25, sqr11^0'=sqr11^post25, sum027^0'=sum027^post25, sum128^0'=sum128^post25, sum21^0'=sum21^post25, t44^0'=t44^post25, theta54^0'=theta54^post25, tmp^0'=tmp^post25, tmp___0^0'=tmp___0^post25, tmpmask56^0'=tmpmask56^post25, x029^0'=x029^post25, x130^0'=x130^post25, x43^0'=x43^post25, (d^0-d^post25 == 0 /\ x43^0-x43^post25 == 0 /\ -i61^post25+i61^0 == 0 /\ -49+i19^0 <= 0 /\ -sum128^post25+sum128^0 == 0 /\ -theta54^post25+theta54^0 == 0 /\ ret_mac15^0-ret_mac15^post25 == 0 /\ -i19^post25+i19^0 == 0 /\ -mask47^post25+mask47^0 == 0 /\ -tmpmask56^post25+tmpmask56^0 == 0 /\ -ret_codebook57^post25+ret_codebook57^0 == 0 /\ n35^0-n35^post25 == 0 /\ -ddim53^post25+ddim53^0 == 0 /\ bitchanged48^0-bitchanged48^post25 == 0 /\ -j62^post25+j62^0 == 0 /\ -codeword50^post25+codeword50^0 == 0 /\ -g51^post25+g51^0 == 0 /\ k63^0-k63^post25 == 0 /\ h132^0-h132^post25 == 0 /\ f36^0-f36^post25 == 0 /\ m64^0-m64^post25 == 0 /\ -dotp14^post25+dotp14^0 == 0 /\ -tmp___0^post25+tmp___0^0 == 0 /\ -n45^post25+n45^0 == 0 /\ t44^0-t44^post25 == 0 /\ numbasis49^0-numbasis49^post25 == 0 /\ j20^post25 == 0 /\ i25^0-i25^post25 == 0 /\ sum027^0-sum027^post25 == 0 /\ -n65^post25+n65^0 == 0 /\ -p66^post25+p66^0 == 0 /\ tmp^0-tmp^post25 == 0 /\ -i13^post25+i13^0 == 0 /\ -sqr11^post25+sqr11^0 == 0 /\ -j55^post25+j55^0 == 0 /\ -x130^post25+x130^0 == 0 /\ -h031^post25+h031^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post25 == 0 /\ -c^post25+c^0 == 0 /\ x029^0-x029^post25 == 0 /\ j26^0-j26^post25 == 0 /\ i37^0-i37^post25 == 0 /\ sum21^post25 == 0), cost: 1
  25: l21 -> l18 : bitchanged48^0'=bitchanged48^post26, c^0'=c^post26, codeword50^0'=codeword50^post26, d^0'=d^post26, ddim53^0'=ddim53^post26, dotp14^0'=dotp14^post26, f36^0'=f36^post26, g51^0'=g51^post26, h031^0'=h031^post26, h132^0'=h132^post26, i13^0'=i13^post26, i19^0'=i19^post26, i25^0'=i25^post26, i37^0'=i37^post26, i61^0'=i61^post26, j20^0'=j20^post26, j26^0'=j26^post26, j55^0'=j55^post26, j62^0'=j62^post26, k63^0'=k63^post26, m64^0'=m64^post26, mask47^0'=mask47^post26, n35^0'=n35^post26, n45^0'=n45^post26, n65^0'=n65^post26, numbasis49^0'=numbasis49^post26, p66^0'=p66^post26, ret_codebook57^0'=ret_codebook57^post26, ret_latsynth38^0'=ret_latsynth38^post26, ret_mac15^0'=ret_mac15^post26, sqr11^0'=sqr11^post26, sum027^0'=sum027^post26, sum128^0'=sum128^post26, sum21^0'=sum21^post26, t44^0'=t44^post26, theta54^0'=theta54^post26, tmp^0'=tmp^post26, tmp___0^0'=tmp___0^post26, tmpmask56^0'=tmpmask56^post26, x029^0'=x029^post26, x130^0'=x130^post26, x43^0'=x43^post26, (-x43^post26+x43^0 == 0 /\ -x130^post26+x130^0 == 0 /\ -sum128^post26+sum128^0 == 0 /\ bitchanged48^0-bitchanged48^post26 == 0 /\ sqr11^0-sqr11^post26 == 0 /\ -dotp14^post26+dotp14^0 == 0 /\ -h031^post26+h031^0 == 0 /\ j55^0-j55^post26 == 0 /\ -g51^post26+g51^0 == 0 /\ c^post26-tmp^post26 == 0 /\ i13^0-i13^post26 == 0 /\ t44^0-t44^post26 == 0 /\ h132^0-h132^post26 == 0 /\ 150-i13^0 <= 0 /\ n65^0-n65^post26 == 0 /\ numbasis49^0-numbasis49^post26 == 0 /\ -i37^post26+i37^0 == 0 /\ i25^0-i25^post26 == 0 /\ sum21^0-sum21^post26 == 0 /\ tmp___0^0-tmp___0^post26 == 0 /\ m64^0-m64^post26 == 0 /\ -n45^post26+n45^0 == 0 /\ -tmpmask56^post26+tmpmask56^0 == 0 /\ -k63^post26+k63^0 == 0 /\ mask47^0-mask47^post26 == 0 /\ -j26^post26+j26^0 == 0 /\ -j62^post26+j62^0 == 0 /\ -p66^post26+p66^0 == 0 /\ f36^0-f36^post26 == 0 /\ i19^post26 == 0 /\ sum027^0-sum027^post26 == 0 /\ -j20^post26+j20^0 == 0 /\ -n35^post26+n35^0 == 0 /\ -theta54^post26+theta54^0 == 0 /\ i61^0-i61^post26 == 0 /\ ret_latsynth38^0-ret_latsynth38^post26 == 0 /\ ret_codebook57^0-ret_codebook57^post26 == 0 /\ d^0-d^post26 == 0 /\ -ddim53^post26+ddim53^0 == 0 /\ ret_mac15^post26-sqr11^0 == 0 /\ x029^0-x029^post26 == 0 /\ -ret_mac15^post26+tmp^post26 == 0 /\ -codeword50^post26+codeword50^0 == 0), cost: 1
  26: l21 -> l22 : bitchanged48^0'=bitchanged48^post27, c^0'=c^post27, codeword50^0'=codeword50^post27, d^0'=d^post27, ddim53^0'=ddim53^post27, dotp14^0'=dotp14^post27, f36^0'=f36^post27, g51^0'=g51^post27, h031^0'=h031^post27, h132^0'=h132^post27, i13^0'=i13^post27, i19^0'=i19^post27, i25^0'=i25^post27, i37^0'=i37^post27, i61^0'=i61^post27, j20^0'=j20^post27, j26^0'=j26^post27, j55^0'=j55^post27, j62^0'=j62^post27, k63^0'=k63^post27, m64^0'=m64^post27, mask47^0'=mask47^post27, n35^0'=n35^post27, n45^0'=n45^post27, n65^0'=n65^post27, numbasis49^0'=numbasis49^post27, p66^0'=p66^post27, ret_codebook57^0'=ret_codebook57^post27, ret_latsynth38^0'=ret_latsynth38^post27, ret_mac15^0'=ret_mac15^post27, sqr11^0'=sqr11^post27, sum027^0'=sum027^post27, sum128^0'=sum128^post27, sum21^0'=sum21^post27, t44^0'=t44^post27, theta54^0'=theta54^post27, tmp^0'=tmp^post27, tmp___0^0'=tmp___0^post27, tmpmask56^0'=tmpmask56^post27, x029^0'=x029^post27, x130^0'=x130^post27, x43^0'=x43^post27, (0 == 0 /\ i19^0-i19^post27 == 0 /\ ddim53^0-ddim53^post27 == 0 /\ -bitchanged48^post27+bitchanged48^0 == 0 /\ -sum128^post27+sum128^0 == 0 /\ -x43^post27+x43^0 == 0 /\ -tmp___0^post27+tmp___0^0 == 0 /\ c^0-c^post27 == 0 /\ -k63^post27+k63^0 == 0 /\ -tmpmask56^post27+tmpmask56^0 == 0 /\ x029^0-x029^post27 == 0 /\ -ret_mac15^post27+ret_mac15^0 == 0 /\ mask47^0-mask47^post27 == 0 /\ -i37^post27+i37^0 == 0 /\ n65^0-n65^post27 == 0 /\ -n45^post27+n45^0 == 0 /\ -1+i13^post27-i13^0 == 0 /\ i25^0-i25^post27 == 0 /\ -numbasis49^post27+numbasis49^0 == 0 /\ -theta54^post27+theta54^0 == 0 /\ j62^0-j62^post27 == 0 /\ tmp^0-tmp^post27 == 0 /\ -j20^post27+j20^0 == 0 /\ -149+i13^0 <= 0 /\ t44^0-t44^post27 == 0 /\ -d^post27+d^0 == 0 /\ -j26^post27+j26^0 == 0 /\ g51^0-g51^post27 == 0 /\ sum027^0-sum027^post27 == 0 /\ m64^0-m64^post27 == 0 /\ -codeword50^post27+codeword50^0 == 0 /\ -x130^post27+x130^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post27 == 0 /\ i61^0-i61^post27 == 0 /\ ret_codebook57^0-ret_codebook57^post27 == 0 /\ sum21^0-sum21^post27 == 0 /\ -n35^post27+n35^0 == 0 /\ -f36^post27+f36^0 == 0 /\ -h031^post27+h031^0 == 0 /\ h132^0-h132^post27 == 0 /\ j55^0-j55^post27 == 0 /\ -p66^post27+p66^0 == 0), cost: 1
  30: l22 -> l21 : bitchanged48^0'=bitchanged48^post31, c^0'=c^post31, codeword50^0'=codeword50^post31, d^0'=d^post31, ddim53^0'=ddim53^post31, dotp14^0'=dotp14^post31, f36^0'=f36^post31, g51^0'=g51^post31, h031^0'=h031^post31, h132^0'=h132^post31, i13^0'=i13^post31, i19^0'=i19^post31, i25^0'=i25^post31, i37^0'=i37^post31, i61^0'=i61^post31, j20^0'=j20^post31, j26^0'=j26^post31, j55^0'=j55^post31, j62^0'=j62^post31, k63^0'=k63^post31, m64^0'=m64^post31, mask47^0'=mask47^post31, n35^0'=n35^post31, n45^0'=n45^post31, n65^0'=n65^post31, numbasis49^0'=numbasis49^post31, p66^0'=p66^post31, ret_codebook57^0'=ret_codebook57^post31, ret_latsynth38^0'=ret_latsynth38^post31, ret_mac15^0'=ret_mac15^post31, sqr11^0'=sqr11^post31, sum027^0'=sum027^post31, sum128^0'=sum128^post31, sum21^0'=sum21^post31, t44^0'=t44^post31, theta54^0'=theta54^post31, tmp^0'=tmp^post31, tmp___0^0'=tmp___0^post31, tmpmask56^0'=tmpmask56^post31, x029^0'=x029^post31, x130^0'=x130^post31, x43^0'=x43^post31, (ddim53^0-ddim53^post31 == 0 /\ h132^0-h132^post31 == 0 /\ j26^0-j26^post31 == 0 /\ x029^0-x029^post31 == 0 /\ -p66^post31+p66^0 == 0 /\ numbasis49^0-numbasis49^post31 == 0 /\ -n45^post31+n45^0 == 0 /\ d^0-d^post31 == 0 /\ i25^0-i25^post31 == 0 /\ -j55^post31+j55^0 == 0 /\ n35^0-n35^post31 == 0 /\ -j20^post31+j20^0 == 0 /\ -tmpmask56^post31+tmpmask56^0 == 0 /\ -mask47^post31+mask47^0 == 0 /\ -dotp14^post31+dotp14^0 == 0 /\ -tmp___0^post31+tmp___0^0 == 0 /\ k63^0-k63^post31 == 0 /\ tmp^0-tmp^post31 == 0 /\ -i61^post31+i61^0 == 0 /\ bitchanged48^0-bitchanged48^post31 == 0 /\ ret_latsynth38^0-ret_latsynth38^post31 == 0 /\ g51^0-g51^post31 == 0 /\ -sum027^post31+sum027^0 == 0 /\ -theta54^post31+theta54^0 == 0 /\ m64^0-m64^post31 == 0 /\ -i37^post31+i37^0 == 0 /\ -i19^post31+i19^0 == 0 /\ -i13^post31+i13^0 == 0 /\ t44^0-t44^post31 == 0 /\ c^0-c^post31 == 0 /\ -h031^post31+h031^0 == 0 /\ -ret_codebook57^post31+ret_codebook57^0 == 0 /\ -ret_mac15^post31+ret_mac15^0 == 0 /\ sqr11^0-sqr11^post31 == 0 /\ -sum128^post31+sum128^0 == 0 /\ -n65^post31+n65^0 == 0 /\ -j62^post31+j62^0 == 0 /\ -x43^post31+x43^0 == 0 /\ sum21^0-sum21^post31 == 0 /\ -codeword50^post31+codeword50^0 == 0 /\ -x130^post31+x130^0 == 0 /\ f36^0-f36^post31 == 0), cost: 1
  35: l24 -> l22 : bitchanged48^0'=bitchanged48^post34, c^0'=c^post34, codeword50^0'=codeword50^post34, d^0'=d^post34, ddim53^0'=ddim53^post34, dotp14^0'=dotp14^post34, f36^0'=f36^post34, g51^0'=g51^post34, h031^0'=h031^post34, h132^0'=h132^post34, i13^0'=i13^post34, i19^0'=i19^post34, i25^0'=i25^post34, i37^0'=i37^post34, i61^0'=i61^post34, j20^0'=j20^post34, j26^0'=j26^post34, j55^0'=j55^post34, j62^0'=j62^post34, k63^0'=k63^post34, m64^0'=m64^post34, mask47^0'=mask47^post34, n35^0'=n35^post34, n45^0'=n45^post34, n65^0'=n65^post34, numbasis49^0'=numbasis49^post34, p66^0'=p66^post34, ret_codebook57^0'=ret_codebook57^post34, ret_latsynth38^0'=ret_latsynth38^post34, ret_mac15^0'=ret_mac15^post34, sqr11^0'=sqr11^post34, sum027^0'=sum027^post34, sum128^0'=sum128^post34, sum21^0'=sum21^post34, t44^0'=t44^post34, theta54^0'=theta54^post34, tmp^0'=tmp^post34, tmp___0^0'=tmp___0^post34, tmpmask56^0'=tmpmask56^post34, x029^0'=x029^post34, x130^0'=x130^post34, x43^0'=x43^post34, (0 == 0 /\ -g51^post34+g51^post35 == 0 /\ f36^0-f36^post35 == 0 /\ -ret_latsynth38^post34+ret_latsynth38^post35 == 0 /\ -n65^post34+n65^post35 == 0 /\ i61^0-i61^post35 == 0 /\ -tmp___0^post35+tmp___0^0 == 0 /\ sum21^post35-sum21^post34 == 0 /\ -j26^post35+j26^0 == 0 /\ -j62^post34+j62^post35 == 0 /\ -theta54^post34+theta54^post35 == 0 /\ -j20^post35+j20^0 == 0 /\ -codeword50^post35+codeword50^0 == 0 /\ -mask47^post34+mask47^post35 == 0 /\ -dotp14^post35+dotp14^0 == 0 /\ i61^post35-i61^post34 == 0 /\ -sum21^post35+sum21^0 == 0 /\ i25^0-i25^post35 == 0 /\ -codeword50^post34+codeword50^post35 == 0 /\ -d^post35+d^0 == 0 /\ j55^0-j55^post35 == 0 /\ t44^0-t44^post35 == 0 /\ i37^post35-i37^post34 == 0 /\ -3+c^post34 == 0 /\ ddim53^0-ddim53^post35 == 0 /\ numbasis49^0-numbasis49^post35 == 0 /\ j26^post35-j26^post34 == 0 /\ -n65^post35+n65^0 == 0 /\ x130^post35-x130^post34 == 0 /\ -n45^post34+n45^post35 == 0 /\ -p66^post35+p66^0 == 0 /\ -h031^post35+h031^0 == 0 /\ -ddim53^post34+ddim53^post35 == 0 /\ -x43^post34+x43^post35 == 0 /\ -i13^post35+i13^0 == 0 /\ n35^0-n35^post35 == 0 /\ -x130^post35+x130^0 == 0 /\ m64^0-m64^post35 == 0 /\ c^0-c^post35 == 0 /\ ret_latsynth38^0-ret_latsynth38^post35 == 0 /\ -t44^post34+t44^post35 == 0 /\ -n35^post34+n35^post35 == 0 /\ -h132^post34+h132^post35 == 0 /\ g51^0-g51^post35 == 0 /\ bitchanged48^post35-bitchanged48^post34 == 0 /\ -sum128^post35+sum128^0 == 0 /\ x029^0-x029^post35 == 0 /\ i13^post34 == 0 /\ -n45^post35+n45^0 == 0 /\ -sum128^post34+sum128^post35 == 0 /\ -bitchanged48^post35+bitchanged48^0 == 0 /\ -numbasis49^post34+numbasis49^post35 == 0 /\ -mask47^post35+mask47^0 == 0 /\ -j62^post35+j62^0 == 0 /\ h031^post35-h031^post34 == 0 /\ -ret_mac15^post34+ret_mac15^post35 == 0 /\ -x029^post34+x029^post35 == 0 /\ -f36^post34+f36^post35 == 0 /\ h132^0-h132^post35 == 0 /\ -tmp^post34+tmp^post35 == 0 /\ tmp___0^post35-tmp___0^post34 == 0 /\ -j55^post34+j55^post35 == 0 /\ -tmpmask56^post34+tmpmask56^post35 == 0 /\ -m64^post34+m64^post35 == 0 /\ -p66^post34+p66^post35 == 0 /\ i19^0-i19^post35 == 0 /\ -theta54^post35+theta54^0 == 0 /\ -43690+d^post34 == 0 /\ -i19^post34+i19^post35 == 0 /\ sqr11^0-sqr11^post35 == 0 /\ -k63^post34+k63^post35 == 0 /\ -tmpmask56^post35+tmpmask56^0 == 0 /\ -ret_codebook57^post35+ret_codebook57^0 == 0 /\ -ret_mac15^post35+ret_mac15^0 == 0 /\ -sum027^post34+sum027^post35 == 0 /\ k63^0-k63^post35 == 0 /\ -i37^post35+i37^0 == 0 /\ sqr11^post34-c^post34 == 0 /\ sum027^0-sum027^post35 == 0 /\ -x43^post35+x43^0 == 0 /\ tmp^0-tmp^post35 == 0 /\ i25^post35-i25^post34 == 0 /\ ret_codebook57^post35-ret_codebook57^post34 == 0 /\ j20^post35-j20^post34 == 0), cost: 1

	Eliminating location l23 by chaining:

	Applied chaining

	First rule:
	l24 -> l23 : bitchanged48^0'=bitchanged48^post35, c^0'=c^post35, codeword50^0'=codeword50^post35, d^0'=d^post35, ddim53^0'=ddim53^post35, dotp14^0'=dotp14^post35, f36^0'=f36^post35, g51^0'=g51^post35, h031^0'=h031^post35, h132^0'=h132^post35, i13^0'=i13^post35, i19^0'=i19^post35, i25^0'=i25^post35, i37^0'=i37^post35, i61^0'=i61^post35, j20^0'=j20^post35, j26^0'=j26^post35, j55^0'=j55^post35, j62^0'=j62^post35, k63^0'=k63^post35, m64^0'=m64^post35, mask47^0'=mask47^post35, n35^0'=n35^post35, n45^0'=n45^post35, n65^0'=n65^post35, numbasis49^0'=numbasis49^post35, p66^0'=p66^post35, ret_codebook57^0'=ret_codebook57^post35, ret_latsynth38^0'=ret_latsynth38^post35, ret_mac15^0'=ret_mac15^post35, sqr11^0'=sqr11^post35, sum027^0'=sum027^post35, sum128^0'=sum128^post35, sum21^0'=sum21^post35, t44^0'=t44^post35, theta54^0'=theta54^post35, tmp^0'=tmp^post35, tmp___0^0'=tmp___0^post35, tmpmask56^0'=tmpmask56^post35, x029^0'=x029^post35, x130^0'=x130^post35, x43^0'=x43^post35, (f36^0-f36^post35 == 0 /\ i61^0-i61^post35 == 0 /\ -tmp___0^post35+tmp___0^0 == 0 /\ -j26^post35+j26^0 == 0 /\ -j20^post35+j20^0 == 0 /\ -codeword50^post35+codeword50^0 == 0 /\ -dotp14^post35+dotp14^0 == 0 /\ -sum21^post35+sum21^0 == 0 /\ i25^0-i25^post35 == 0 /\ -d^post35+d^0 == 0 /\ j55^0-j55^post35 == 0 /\ t44^0-t44^post35 == 0 /\ ddim53^0-ddim53^post35 == 0 /\ numbasis49^0-numbasis49^post35 == 0 /\ -n65^post35+n65^0 == 0 /\ -p66^post35+p66^0 == 0 /\ -h031^post35+h031^0 == 0 /\ -i13^post35+i13^0 == 0 /\ n35^0-n35^post35 == 0 /\ -x130^post35+x130^0 == 0 /\ m64^0-m64^post35 == 0 /\ c^0-c^post35 == 0 /\ ret_latsynth38^0-ret_latsynth38^post35 == 0 /\ g51^0-g51^post35 == 0 /\ -sum128^post35+sum128^0 == 0 /\ x029^0-x029^post35 == 0 /\ -n45^post35+n45^0 == 0 /\ -bitchanged48^post35+bitchanged48^0 == 0 /\ -mask47^post35+mask47^0 == 0 /\ -j62^post35+j62^0 == 0 /\ h132^0-h132^post35 == 0 /\ i19^0-i19^post35 == 0 /\ -theta54^post35+theta54^0 == 0 /\ sqr11^0-sqr11^post35 == 0 /\ -tmpmask56^post35+tmpmask56^0 == 0 /\ -ret_codebook57^post35+ret_codebook57^0 == 0 /\ -ret_mac15^post35+ret_mac15^0 == 0 /\ k63^0-k63^post35 == 0 /\ -i37^post35+i37^0 == 0 /\ sum027^0-sum027^post35 == 0 /\ -x43^post35+x43^0 == 0 /\ tmp^0-tmp^post35 == 0), cost: 1
	Second rule:
	l23 -> l22 : bitchanged48^0'=bitchanged48^post34, c^0'=c^post34, codeword50^0'=codeword50^post34, d^0'=d^post34, ddim53^0'=ddim53^post34, dotp14^0'=dotp14^post34, f36^0'=f36^post34, g51^0'=g51^post34, h031^0'=h031^post34, h132^0'=h132^post34, i13^0'=i13^post34, i19^0'=i19^post34, i25^0'=i25^post34, i37^0'=i37^post34, i61^0'=i61^post34, j20^0'=j20^post34, j26^0'=j26^post34, j55^0'=j55^post34, j62^0'=j62^post34, k63^0'=k63^post34, m64^0'=m64^post34, mask47^0'=mask47^post34, n35^0'=n35^post34, n45^0'=n45^post34, n65^0'=n65^post34, numbasis49^0'=numbasis49^post34, p66^0'=p66^post34, ret_codebook57^0'=ret_codebook57^post34, ret_latsynth38^0'=ret_latsynth38^post34, ret_mac15^0'=ret_mac15^post34, sqr11^0'=sqr11^post34, sum027^0'=sum027^post34, sum128^0'=sum128^post34, sum21^0'=sum21^post34, t44^0'=t44^post34, theta54^0'=theta54^post34, tmp^0'=tmp^post34, tmp___0^0'=tmp___0^post34, tmpmask56^0'=tmpmask56^post34, x029^0'=x029^post34, x130^0'=x130^post34, x43^0'=x43^post34, (0 == 0 /\ -j62^post34+j62^0 == 0 /\ -n65^post34+n65^0 == 0 /\ -j26^post34+j26^0 == 0 /\ -i19^post34+i19^0 == 0 /\ -i37^post34+i37^0 == 0 /\ -p66^post34+p66^0 == 0 /\ i25^0-i25^post34 == 0 /\ -mask47^post34+mask47^0 == 0 /\ sum21^0-sum21^post34 == 0 /\ -theta54^post34+theta54^0 == 0 /\ numbasis49^0-numbasis49^post34 == 0 /\ -tmpmask56^post34+tmpmask56^0 == 0 /\ x029^0-x029^post34 == 0 /\ ret_codebook57^0-ret_codebook57^post34 == 0 /\ tmp^0-tmp^post34 == 0 /\ -j20^post34+j20^0 == 0 /\ -n45^post34+n45^0 == 0 /\ k63^0-k63^post34 == 0 /\ i61^0-i61^post34 == 0 /\ -3+c^post34 == 0 /\ g51^0-g51^post34 == 0 /\ -t44^post34+t44^0 == 0 /\ -sum128^post34+sum128^0 == 0 /\ j55^0-j55^post34 == 0 /\ -bitchanged48^post34+bitchanged48^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post34 == 0 /\ h031^0-h031^post34 == 0 /\ -h132^post34+h132^0 == 0 /\ ddim53^0-ddim53^post34 == 0 /\ -codeword50^post34+codeword50^0 == 0 /\ -f36^post34+f36^0 == 0 /\ i13^post34 == 0 /\ -ret_mac15^post34+ret_mac15^0 == 0 /\ n35^0-n35^post34 == 0 /\ -x43^post34+x43^0 == 0 /\ -x130^post34+x130^0 == 0 /\ tmp___0^0-tmp___0^post34 == 0 /\ m64^0-m64^post34 == 0 /\ -43690+d^post34 == 0 /\ sqr11^post34-c^post34 == 0 /\ -sum027^post34+sum027^0 == 0), cost: 1
	New rule:
	l24 -> l22 : bitchanged48^0'=bitchanged48^post34, c^0'=c^post34, codeword50^0'=codeword50^post34, d^0'=d^post34, ddim53^0'=ddim53^post34, dotp14^0'=dotp14^post34, f36^0'=f36^post34, g51^0'=g51^post34, h031^0'=h031^post34, h132^0'=h132^post34, i13^0'=i13^post34, i19^0'=i19^post34, i25^0'=i25^post34, i37^0'=i37^post34, i61^0'=i61^post34, j20^0'=j20^post34, j26^0'=j26^post34, j55^0'=j55^post34, j62^0'=j62^post34, k63^0'=k63^post34, m64^0'=m64^post34, mask47^0'=mask47^post34, n35^0'=n35^post34, n45^0'=n45^post34, n65^0'=n65^post34, numbasis49^0'=numbasis49^post34, p66^0'=p66^post34, ret_codebook57^0'=ret_codebook57^post34, ret_latsynth38^0'=ret_latsynth38^post34, ret_mac15^0'=ret_mac15^post34, sqr11^0'=sqr11^post34, sum027^0'=sum027^post34, sum128^0'=sum128^post34, sum21^0'=sum21^post34, t44^0'=t44^post34, theta54^0'=theta54^post34, tmp^0'=tmp^post34, tmp___0^0'=tmp___0^post34, tmpmask56^0'=tmpmask56^post34, x029^0'=x029^post34, x130^0'=x130^post34, x43^0'=x43^post34, (0 == 0 /\ -g51^post34+g51^post35 == 0 /\ f36^0-f36^post35 == 0 /\ -ret_latsynth38^post34+ret_latsynth38^post35 == 0 /\ -n65^post34+n65^post35 == 0 /\ i61^0-i61^post35 == 0 /\ -tmp___0^post35+tmp___0^0 == 0 /\ sum21^post35-sum21^post34 == 0 /\ -j26^post35+j26^0 == 0 /\ -j62^post34+j62^post35 == 0 /\ -theta54^post34+theta54^post35 == 0 /\ -j20^post35+j20^0 == 0 /\ -codeword50^post35+codeword50^0 == 0 /\ -mask47^post34+mask47^post35 == 0 /\ -dotp14^post35+dotp14^0 == 0 /\ i61^post35-i61^post34 == 0 /\ -sum21^post35+sum21^0 == 0 /\ i25^0-i25^post35 == 0 /\ -codeword50^post34+codeword50^post35 == 0 /\ -d^post35+d^0 == 0 /\ j55^0-j55^post35 == 0 /\ t44^0-t44^post35 == 0 /\ i37^post35-i37^post34 == 0 /\ -3+c^post34 == 0 /\ ddim53^0-ddim53^post35 == 0 /\ numbasis49^0-numbasis49^post35 == 0 /\ j26^post35-j26^post34 == 0 /\ -n65^post35+n65^0 == 0 /\ x130^post35-x130^post34 == 0 /\ -n45^post34+n45^post35 == 0 /\ -p66^post35+p66^0 == 0 /\ -h031^post35+h031^0 == 0 /\ -ddim53^post34+ddim53^post35 == 0 /\ -x43^post34+x43^post35 == 0 /\ -i13^post35+i13^0 == 0 /\ n35^0-n35^post35 == 0 /\ -x130^post35+x130^0 == 0 /\ m64^0-m64^post35 == 0 /\ c^0-c^post35 == 0 /\ ret_latsynth38^0-ret_latsynth38^post35 == 0 /\ -t44^post34+t44^post35 == 0 /\ -n35^post34+n35^post35 == 0 /\ -h132^post34+h132^post35 == 0 /\ g51^0-g51^post35 == 0 /\ bitchanged48^post35-bitchanged48^post34 == 0 /\ -sum128^post35+sum128^0 == 0 /\ x029^0-x029^post35 == 0 /\ i13^post34 == 0 /\ -n45^post35+n45^0 == 0 /\ -sum128^post34+sum128^post35 == 0 /\ -bitchanged48^post35+bitchanged48^0 == 0 /\ -numbasis49^post34+numbasis49^post35 == 0 /\ -mask47^post35+mask47^0 == 0 /\ -j62^post35+j62^0 == 0 /\ h031^post35-h031^post34 == 0 /\ -ret_mac15^post34+ret_mac15^post35 == 0 /\ -x029^post34+x029^post35 == 0 /\ -f36^post34+f36^post35 == 0 /\ h132^0-h132^post35 == 0 /\ -tmp^post34+tmp^post35 == 0 /\ tmp___0^post35-tmp___0^post34 == 0 /\ -j55^post34+j55^post35 == 0 /\ -tmpmask56^post34+tmpmask56^post35 == 0 /\ -m64^post34+m64^post35 == 0 /\ -p66^post34+p66^post35 == 0 /\ i19^0-i19^post35 == 0 /\ -theta54^post35+theta54^0 == 0 /\ -43690+d^post34 == 0 /\ -i19^post34+i19^post35 == 0 /\ sqr11^0-sqr11^post35 == 0 /\ -k63^post34+k63^post35 == 0 /\ -tmpmask56^post35+tmpmask56^0 == 0 /\ -ret_codebook57^post35+ret_codebook57^0 == 0 /\ -ret_mac15^post35+ret_mac15^0 == 0 /\ -sum027^post34+sum027^post35 == 0 /\ k63^0-k63^post35 == 0 /\ -i37^post35+i37^0 == 0 /\ sqr11^post34-c^post34 == 0 /\ sum027^0-sum027^post35 == 0 /\ -x43^post35+x43^0 == 0 /\ tmp^0-tmp^post35 == 0 /\ i25^post35-i25^post34 == 0 /\ ret_codebook57^post35-ret_codebook57^post34 == 0 /\ j20^post35-j20^post34 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 33 34

Simplified Transitions

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  68: l19 -> l17 : T, cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : bitchanged48^0'=bitchanged48^post1, c^0'=c^post1, codeword50^0'=codeword50^post1, d^0'=d^post1, ddim53^0'=ddim53^post1, dotp14^0'=dotp14^post1, f36^0'=f36^post1, g51^0'=g51^post1, h031^0'=h031^post1, h132^0'=h132^post1, i13^0'=i13^post1, i19^0'=i19^post1, i25^0'=i25^post1, i37^0'=i37^post1, i61^0'=i61^post1, j20^0'=j20^post1, j26^0'=j26^post1, j55^0'=j55^post1, j62^0'=j62^post1, k63^0'=k63^post1, m64^0'=m64^post1, mask47^0'=mask47^post1, n35^0'=n35^post1, n45^0'=n45^post1, n65^0'=n65^post1, numbasis49^0'=numbasis49^post1, p66^0'=p66^post1, ret_codebook57^0'=ret_codebook57^post1, ret_latsynth38^0'=ret_latsynth38^post1, ret_mac15^0'=ret_mac15^post1, sqr11^0'=sqr11^post1, sum027^0'=sum027^post1, sum128^0'=sum128^post1, sum21^0'=sum21^post1, t44^0'=t44^post1, theta54^0'=theta54^post1, tmp^0'=tmp^post1, tmp___0^0'=tmp___0^post1, tmpmask56^0'=tmpmask56^post1, x029^0'=x029^post1, x130^0'=x130^post1, x43^0'=x43^post1, (-x130^post1+x130^0 == 0 /\ sum21^0-sum21^post1 == 0 /\ -n35^post1+n35^0 == 0 /\ -i25^post1+i25^0 == 0 /\ -i37^post1+i37^0 == 0 /\ ret_codebook57^0-ret_codebook57^post1 == 0 /\ x029^0-x029^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ -tmpmask56^post1+tmpmask56^0 == 0 /\ -i13^post1+i13^0 == 0 /\ -n45^post1+n45^0 == 0 /\ h031^0-h031^post1 == 0 /\ -h132^post1+h132^0 == 0 /\ mask47^0-mask47^post1 == 0 /\ g51^0-g51^post1 == 0 /\ -t44^post1+t44^0 == 0 /\ m64^0-m64^post1 == 0 /\ -theta54^post1+theta54^0 == 0 /\ -sum128^post1+sum128^0 == 0 /\ -j26^post1+j26^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post1 == 0 /\ -f36^post1+f36^0 == 0 /\ ddim53^0-ddim53^post1 == 0 /\ -codeword50^post1+codeword50^0 == 0 /\ -bitchanged48^post1+bitchanged48^0 == 0 /\ -dotp14^post1+dotp14^0 == 0 /\ -p66^post1+p66^0 == 0 /\ j55^0-j55^post1 == 0 /\ -d^post1+d^0 == 0 /\ -ret_mac15^post1+ret_mac15^0 == 0 /\ sqr11^0-sqr11^post1 == 0 /\ i19^0-i19^post1 == 0 /\ j62^0-j62^post1 == 0 /\ -numbasis49^post1+numbasis49^0 == 0 /\ i61^0-i61^post1 == 0 /\ n65^0-n65^post1 == 0 /\ tmp___0^0-tmp___0^post1 == 0 /\ c^0-c^post1 == 0 /\ -j20^post1+j20^0 == 0 /\ -sum027^post1+sum027^0 == 0 /\ -k63^post1+k63^0 == 0 /\ -x43^post1+x43^0 == 0), cost: 1
	New rule:
	l0 -> l1 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality x130^post1 = x130^0
		
		propagated equality sum21^post1 = sum21^0
		
		propagated equality n35^post1 = n35^0
		
		propagated equality i25^post1 = i25^0
		
		propagated equality i37^post1 = i37^0
		
		propagated equality ret_codebook57^post1 = ret_codebook57^0
		
		propagated equality x029^post1 = x029^0
		
		propagated equality tmp^post1 = tmp^0
		
		propagated equality tmpmask56^post1 = tmpmask56^0
		
		propagated equality i13^post1 = i13^0
		
		propagated equality n45^post1 = n45^0
		
		propagated equality h031^post1 = h031^0
		
		propagated equality h132^post1 = h132^0
		
		propagated equality mask47^post1 = mask47^0
		
		propagated equality g51^post1 = g51^0
		
		propagated equality t44^post1 = t44^0
		
		propagated equality m64^post1 = m64^0
		
		propagated equality theta54^post1 = theta54^0
		
		propagated equality sum128^post1 = sum128^0
		
		propagated equality j26^post1 = j26^0
		
		propagated equality ret_latsynth38^post1 = ret_latsynth38^0
		
		propagated equality f36^post1 = f36^0
		
		propagated equality ddim53^post1 = ddim53^0
		
		propagated equality codeword50^post1 = codeword50^0
		
		propagated equality bitchanged48^post1 = bitchanged48^0
		
		propagated equality dotp14^post1 = dotp14^0
		
		propagated equality p66^post1 = p66^0
		
		propagated equality j55^post1 = j55^0
		
		propagated equality d^post1 = d^0
		
		propagated equality ret_mac15^post1 = ret_mac15^0
		
		propagated equality sqr11^post1 = sqr11^0
		
		propagated equality i19^post1 = i19^0
		
		propagated equality j62^post1 = j62^0
		
		propagated equality numbasis49^post1 = numbasis49^0
		
		propagated equality i61^post1 = i61^0
		
		propagated equality n65^post1 = n65^0
		
		propagated equality tmp___0^post1 = tmp___0^0
		
		propagated equality c^post1 = c^0
		
		propagated equality j20^post1 = j20^0
		
		propagated equality sum027^post1 = sum027^0
		
		propagated equality k63^post1 = k63^0
		
		propagated equality x43^post1 = x43^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l0 -> l1 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l0 -> l1 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : bitchanged48^0'=bitchanged48^post2, c^0'=c^post2, codeword50^0'=codeword50^post2, d^0'=d^post2, ddim53^0'=ddim53^post2, dotp14^0'=dotp14^post2, f36^0'=f36^post2, g51^0'=g51^post2, h031^0'=h031^post2, h132^0'=h132^post2, i13^0'=i13^post2, i19^0'=i19^post2, i25^0'=i25^post2, i37^0'=i37^post2, i61^0'=i61^post2, j20^0'=j20^post2, j26^0'=j26^post2, j55^0'=j55^post2, j62^0'=j62^post2, k63^0'=k63^post2, m64^0'=m64^post2, mask47^0'=mask47^post2, n35^0'=n35^post2, n45^0'=n45^post2, n65^0'=n65^post2, numbasis49^0'=numbasis49^post2, p66^0'=p66^post2, ret_codebook57^0'=ret_codebook57^post2, ret_latsynth38^0'=ret_latsynth38^post2, ret_mac15^0'=ret_mac15^post2, sqr11^0'=sqr11^post2, sum027^0'=sum027^post2, sum128^0'=sum128^post2, sum21^0'=sum21^post2, t44^0'=t44^post2, theta54^0'=theta54^post2, tmp^0'=tmp^post2, tmp___0^0'=tmp___0^post2, tmpmask56^0'=tmpmask56^post2, x029^0'=x029^post2, x130^0'=x130^post2, x43^0'=x43^post2, (-i61^post2+i61^0 == 0 /\ d^0-d^post2 == 0 /\ ret_latsynth38^0-ret_latsynth38^post2 == 0 /\ n35^0-n35^post2 == 0 /\ -sum128^post2+sum128^0 == 0 /\ -sum21^post2+sum21^0 == 0 /\ -theta54^post2+theta54^0 == 0 /\ h132^0-h132^post2 == 0 /\ -codeword50^post2+codeword50^0 == 0 /\ -ddim53^post2+ddim53^0 == 0 /\ t44^0-t44^post2 == 0 /\ -n65^post2+n65^0 == 0 /\ -h031^post2+h031^0 == 0 /\ -i13^post2+i13^0 == 0 /\ bitchanged48^0-bitchanged48^post2 == 0 /\ k63^0-k63^post2 == 0 /\ -j62^post2+j62^0 == 0 /\ -x130^post2+x130^0 == 0 /\ m64^0-m64^post2 == 0 /\ ret_mac15^0-ret_mac15^post2 == 0 /\ i37^0-i37^post2 == 0 /\ x029^0-x029^post2 == 0 /\ i25^0-i25^post2 == 0 /\ f36^0-f36^post2 == 0 /\ sum027^0-sum027^post2 == 0 /\ -n45^post2+n45^0 == 0 /\ numbasis49^0-numbasis49^post2 == 0 /\ -mask47^post2+mask47^0 == 0 /\ -dotp14^post2+dotp14^0 == 0 /\ -c^post2+c^0 == 0 /\ -j55^post2+j55^0 == 0 /\ tmp^0-tmp^post2 == 0 /\ -sqr11^post2+sqr11^0 == 0 /\ -ret_codebook57^post2+ret_codebook57^0 == 0 /\ -i19^post2+i19^0 == 0 /\ j26^0-j26^post2 == 0 /\ -tmp___0^post2+tmp___0^0 == 0 /\ p66^0-p66^post2 == 0 /\ -tmpmask56^post2+tmpmask56^0 == 0 /\ -x43^post2+x43^0 == 0 /\ g51^0-g51^post2 == 0 /\ -j20^post2+j20^0 == 0), cost: 1
	New rule:
	l2 -> l3 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality i61^post2 = i61^0
		
		propagated equality d^post2 = d^0
		
		propagated equality ret_latsynth38^post2 = ret_latsynth38^0
		
		propagated equality n35^post2 = n35^0
		
		propagated equality sum128^post2 = sum128^0
		
		propagated equality sum21^post2 = sum21^0
		
		propagated equality theta54^post2 = theta54^0
		
		propagated equality h132^post2 = h132^0
		
		propagated equality codeword50^post2 = codeword50^0
		
		propagated equality ddim53^post2 = ddim53^0
		
		propagated equality t44^post2 = t44^0
		
		propagated equality n65^post2 = n65^0
		
		propagated equality h031^post2 = h031^0
		
		propagated equality i13^post2 = i13^0
		
		propagated equality bitchanged48^post2 = bitchanged48^0
		
		propagated equality k63^post2 = k63^0
		
		propagated equality j62^post2 = j62^0
		
		propagated equality x130^post2 = x130^0
		
		propagated equality m64^post2 = m64^0
		
		propagated equality ret_mac15^post2 = ret_mac15^0
		
		propagated equality i37^post2 = i37^0
		
		propagated equality x029^post2 = x029^0
		
		propagated equality i25^post2 = i25^0
		
		propagated equality f36^post2 = f36^0
		
		propagated equality sum027^post2 = sum027^0
		
		propagated equality n45^post2 = n45^0
		
		propagated equality numbasis49^post2 = numbasis49^0
		
		propagated equality mask47^post2 = mask47^0
		
		propagated equality dotp14^post2 = dotp14^0
		
		propagated equality c^post2 = c^0
		
		propagated equality j55^post2 = j55^0
		
		propagated equality tmp^post2 = tmp^0
		
		propagated equality sqr11^post2 = sqr11^0
		
		propagated equality ret_codebook57^post2 = ret_codebook57^0
		
		propagated equality i19^post2 = i19^0
		
		propagated equality j26^post2 = j26^0
		
		propagated equality tmp___0^post2 = tmp___0^0
		
		propagated equality p66^post2 = p66^0
		
		propagated equality tmpmask56^post2 = tmpmask56^0
		
		propagated equality x43^post2 = x43^0
		
		propagated equality g51^post2 = g51^0
		
		propagated equality j20^post2 = j20^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l2 -> l3 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l2 -> l3 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l5 : bitchanged48^0'=bitchanged48^post3, c^0'=c^post3, codeword50^0'=codeword50^post3, d^0'=d^post3, ddim53^0'=ddim53^post3, dotp14^0'=dotp14^post3, f36^0'=f36^post3, g51^0'=g51^post3, h031^0'=h031^post3, h132^0'=h132^post3, i13^0'=i13^post3, i19^0'=i19^post3, i25^0'=i25^post3, i37^0'=i37^post3, i61^0'=i61^post3, j20^0'=j20^post3, j26^0'=j26^post3, j55^0'=j55^post3, j62^0'=j62^post3, k63^0'=k63^post3, m64^0'=m64^post3, mask47^0'=mask47^post3, n35^0'=n35^post3, n45^0'=n45^post3, n65^0'=n65^post3, numbasis49^0'=numbasis49^post3, p66^0'=p66^post3, ret_codebook57^0'=ret_codebook57^post3, ret_latsynth38^0'=ret_latsynth38^post3, ret_mac15^0'=ret_mac15^post3, sqr11^0'=sqr11^post3, sum027^0'=sum027^post3, sum128^0'=sum128^post3, sum21^0'=sum21^post3, t44^0'=t44^post3, theta54^0'=theta54^post3, tmp^0'=tmp^post3, tmp___0^0'=tmp___0^post3, tmpmask56^0'=tmpmask56^post3, x029^0'=x029^post3, x130^0'=x130^post3, x43^0'=x43^post3, (-x43^post3+x43^0 == 0 /\ -x130^post3+x130^0 == 0 /\ d^0-d^post3 == 0 /\ -i61^post3+i61^0 == 0 /\ -h031^post3+h031^0 == 0 /\ sqr11^0-sqr11^post3 == 0 /\ -g51^post3+g51^0 == 0 /\ -i19^post3+i19^0 == 0 /\ k63^0-k63^post3 == 0 /\ i13^0-i13^post3 == 0 /\ bitchanged48^0-bitchanged48^post3 == 0 /\ h132^0-h132^post3 == 0 /\ n65^0-n65^post3 == 0 /\ numbasis49^0-numbasis49^post3 == 0 /\ f36^0-f36^post3 == 0 /\ -dotp14^post3+dotp14^0 == 0 /\ -j62^post3+j62^0 == 0 /\ -codeword50^post3+codeword50^0 == 0 /\ -theta54^post3+theta54^0 == 0 /\ tmp___0^0-tmp___0^post3 == 0 /\ -p66^post3+p66^0 == 0 /\ -n45^post3+n45^0 == 0 /\ -tmpmask56^post3+tmpmask56^0 == 0 /\ -ret_mac15^post3+ret_mac15^0 == 0 /\ mask47^0-mask47^post3 == 0 /\ -sum128^post3+sum128^0 == 0 /\ m64^0-m64^post3 == 0 /\ -sum21^post3+sum21^0 == 0 /\ t44^0-t44^post3 == 0 /\ i25^0-i25^post3 == 0 /\ ret_codebook57^0-ret_codebook57^post3 == 0 /\ -n35^post3+n35^0 == 0 /\ -c^post3+c^0 == 0 /\ tmp^0-tmp^post3 == 0 /\ sum027^0-sum027^post3 == 0 /\ -ddim53^post3+ddim53^0 == 0 /\ -j55^post3+j55^0 == 0 /\ -j20^post3+j20^0 == 0 /\ j26^0-j26^post3 == 0 /\ i37^0-i37^post3 == 0 /\ x029^0-x029^post3 == 0 /\ ret_latsynth38^0-ret_latsynth38^post3 == 0), cost: 1
	New rule:
	l4 -> l5 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality x43^post3 = x43^0
		
		propagated equality x130^post3 = x130^0
		
		propagated equality d^post3 = d^0
		
		propagated equality i61^post3 = i61^0
		
		propagated equality h031^post3 = h031^0
		
		propagated equality sqr11^post3 = sqr11^0
		
		propagated equality g51^post3 = g51^0
		
		propagated equality i19^post3 = i19^0
		
		propagated equality k63^post3 = k63^0
		
		propagated equality i13^post3 = i13^0
		
		propagated equality bitchanged48^post3 = bitchanged48^0
		
		propagated equality h132^post3 = h132^0
		
		propagated equality n65^post3 = n65^0
		
		propagated equality numbasis49^post3 = numbasis49^0
		
		propagated equality f36^post3 = f36^0
		
		propagated equality dotp14^post3 = dotp14^0
		
		propagated equality j62^post3 = j62^0
		
		propagated equality codeword50^post3 = codeword50^0
		
		propagated equality theta54^post3 = theta54^0
		
		propagated equality tmp___0^post3 = tmp___0^0
		
		propagated equality p66^post3 = p66^0
		
		propagated equality n45^post3 = n45^0
		
		propagated equality tmpmask56^post3 = tmpmask56^0
		
		propagated equality ret_mac15^post3 = ret_mac15^0
		
		propagated equality mask47^post3 = mask47^0
		
		propagated equality sum128^post3 = sum128^0
		
		propagated equality m64^post3 = m64^0
		
		propagated equality sum21^post3 = sum21^0
		
		propagated equality t44^post3 = t44^0
		
		propagated equality i25^post3 = i25^0
		
		propagated equality ret_codebook57^post3 = ret_codebook57^0
		
		propagated equality n35^post3 = n35^0
		
		propagated equality c^post3 = c^0
		
		propagated equality tmp^post3 = tmp^0
		
		propagated equality sum027^post3 = sum027^0
		
		propagated equality ddim53^post3 = ddim53^0
		
		propagated equality j55^post3 = j55^0
		
		propagated equality j20^post3 = j20^0
		
		propagated equality j26^post3 = j26^0
		
		propagated equality i37^post3 = i37^0
		
		propagated equality x029^post3 = x029^0
		
		propagated equality ret_latsynth38^post3 = ret_latsynth38^0
		
	Simplified Guard

	Original rule:
	l4 -> l5 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l4 -> l5 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l5 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l4 -> l5 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l7 : bitchanged48^0'=bitchanged48^post4, c^0'=c^post4, codeword50^0'=codeword50^post4, d^0'=d^post4, ddim53^0'=ddim53^post4, dotp14^0'=dotp14^post4, f36^0'=f36^post4, g51^0'=g51^post4, h031^0'=h031^post4, h132^0'=h132^post4, i13^0'=i13^post4, i19^0'=i19^post4, i25^0'=i25^post4, i37^0'=i37^post4, i61^0'=i61^post4, j20^0'=j20^post4, j26^0'=j26^post4, j55^0'=j55^post4, j62^0'=j62^post4, k63^0'=k63^post4, m64^0'=m64^post4, mask47^0'=mask47^post4, n35^0'=n35^post4, n45^0'=n45^post4, n65^0'=n65^post4, numbasis49^0'=numbasis49^post4, p66^0'=p66^post4, ret_codebook57^0'=ret_codebook57^post4, ret_latsynth38^0'=ret_latsynth38^post4, ret_mac15^0'=ret_mac15^post4, sqr11^0'=sqr11^post4, sum027^0'=sum027^post4, sum128^0'=sum128^post4, sum21^0'=sum21^post4, t44^0'=t44^post4, theta54^0'=theta54^post4, tmp^0'=tmp^post4, tmp___0^0'=tmp___0^post4, tmpmask56^0'=tmpmask56^post4, x029^0'=x029^post4, x130^0'=x130^post4, x43^0'=x43^post4, (sqr11^0-sqr11^post4 == 0 /\ c^0-c^post4 == 0 /\ i19^0-i19^post4 == 0 /\ h031^0-h031^post4 == 0 /\ codeword50^0-codeword50^post4 == 0 /\ -d^post4+d^0 == 0 /\ -sum128^post4+sum128^0 == 0 /\ -bitchanged48^post4+bitchanged48^0 == 0 /\ j55^0-j55^post4 == 0 /\ t44^0-t44^post4 == 0 /\ -f36^post4+f36^0 == 0 /\ n65^0-n65^post4 == 0 /\ numbasis49^0-numbasis49^post4 == 0 /\ sum21^0-sum21^post4 == 0 /\ -ret_mac15^post4+ret_mac15^0 == 0 /\ -i37^post4+i37^0 == 0 /\ -x130^post4+x130^0 == 0 /\ i25^0-i25^post4 == 0 /\ tmp___0^0-tmp___0^post4 == 0 /\ x029^0-x029^post4 == 0 /\ m64^0-m64^post4 == 0 /\ mask47^0-mask47^post4 == 0 /\ -tmpmask56^post4+tmpmask56^0 == 0 /\ -n45^post4+n45^0 == 0 /\ -n35^post4+n35^0 == 0 /\ -k63^post4+k63^0 == 0 /\ -j20^post4+j20^0 == 0 /\ -j26^post4+j26^0 == 0 /\ -j62^post4+j62^0 == 0 /\ sum027^0-sum027^post4 == 0 /\ i61^0-i61^post4 == 0 /\ ret_latsynth38^0-ret_latsynth38^post4 == 0 /\ dotp14^0-dotp14^post4 == 0 /\ ret_codebook57^0-ret_codebook57^post4 == 0 /\ -theta54^post4+theta54^0 == 0 /\ x43^0-x43^post4 == 0 /\ ddim53^0-ddim53^post4 == 0 /\ g51^0-g51^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -h132^post4+h132^0 == 0 /\ -p66^post4+p66^0 == 0 /\ -i13^post4+i13^0 == 0), cost: 1
	New rule:
	l6 -> l7 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality sqr11^post4 = sqr11^0
		
		propagated equality c^post4 = c^0
		
		propagated equality i19^post4 = i19^0
		
		propagated equality h031^post4 = h031^0
		
		propagated equality codeword50^post4 = codeword50^0
		
		propagated equality d^post4 = d^0
		
		propagated equality sum128^post4 = sum128^0
		
		propagated equality bitchanged48^post4 = bitchanged48^0
		
		propagated equality j55^post4 = j55^0
		
		propagated equality t44^post4 = t44^0
		
		propagated equality f36^post4 = f36^0
		
		propagated equality n65^post4 = n65^0
		
		propagated equality numbasis49^post4 = numbasis49^0
		
		propagated equality sum21^post4 = sum21^0
		
		propagated equality ret_mac15^post4 = ret_mac15^0
		
		propagated equality i37^post4 = i37^0
		
		propagated equality x130^post4 = x130^0
		
		propagated equality i25^post4 = i25^0
		
		propagated equality tmp___0^post4 = tmp___0^0
		
		propagated equality x029^post4 = x029^0
		
		propagated equality m64^post4 = m64^0
		
		propagated equality mask47^post4 = mask47^0
		
		propagated equality tmpmask56^post4 = tmpmask56^0
		
		propagated equality n45^post4 = n45^0
		
		propagated equality n35^post4 = n35^0
		
		propagated equality k63^post4 = k63^0
		
		propagated equality j20^post4 = j20^0
		
		propagated equality j26^post4 = j26^0
		
		propagated equality j62^post4 = j62^0
		
		propagated equality sum027^post4 = sum027^0
		
		propagated equality i61^post4 = i61^0
		
		propagated equality ret_latsynth38^post4 = ret_latsynth38^0
		
		propagated equality dotp14^post4 = dotp14^0
		
		propagated equality ret_codebook57^post4 = ret_codebook57^0
		
		propagated equality theta54^post4 = theta54^0
		
		propagated equality x43^post4 = x43^0
		
		propagated equality ddim53^post4 = ddim53^0
		
		propagated equality g51^post4 = g51^0
		
		propagated equality tmp^post4 = tmp^0
		
		propagated equality h132^post4 = h132^0
		
		propagated equality p66^post4 = p66^0
		
		propagated equality i13^post4 = i13^0
		
	Simplified Guard

	Original rule:
	l6 -> l7 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l6 -> l7 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l7 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l6 -> l7 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l9 : bitchanged48^0'=bitchanged48^post5, c^0'=c^post5, codeword50^0'=codeword50^post5, d^0'=d^post5, ddim53^0'=ddim53^post5, dotp14^0'=dotp14^post5, f36^0'=f36^post5, g51^0'=g51^post5, h031^0'=h031^post5, h132^0'=h132^post5, i13^0'=i13^post5, i19^0'=i19^post5, i25^0'=i25^post5, i37^0'=i37^post5, i61^0'=i61^post5, j20^0'=j20^post5, j26^0'=j26^post5, j55^0'=j55^post5, j62^0'=j62^post5, k63^0'=k63^post5, m64^0'=m64^post5, mask47^0'=mask47^post5, n35^0'=n35^post5, n45^0'=n45^post5, n65^0'=n65^post5, numbasis49^0'=numbasis49^post5, p66^0'=p66^post5, ret_codebook57^0'=ret_codebook57^post5, ret_latsynth38^0'=ret_latsynth38^post5, ret_mac15^0'=ret_mac15^post5, sqr11^0'=sqr11^post5, sum027^0'=sum027^post5, sum128^0'=sum128^post5, sum21^0'=sum21^post5, t44^0'=t44^post5, theta54^0'=theta54^post5, tmp^0'=tmp^post5, tmp___0^0'=tmp___0^post5, tmpmask56^0'=tmpmask56^post5, x029^0'=x029^post5, x130^0'=x130^post5, x43^0'=x43^post5, (-g51^post5+g51^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post5 == 0 /\ m64^0-m64^post5 == 0 /\ -i19^post5+i19^0 == 0 /\ -i13^post5+i13^0 == 0 /\ -x43^post5+x43^0 == 0 /\ -sum21^post5+sum21^0 == 0 /\ -codeword50^post5+codeword50^0 == 0 /\ -c^post5+c^0 == 0 /\ -sum128^post5+sum128^0 == 0 /\ -x130^post5+x130^0 == 0 /\ -h031^post5+h031^0 == 0 /\ -ddim53^post5+ddim53^0 == 0 /\ -dotp14^post5+dotp14^0 == 0 /\ -tmp___0^post5+tmp___0^0 == 0 /\ -j20^post5+j20^0 == 0 /\ 4-j62^0 <= 0 /\ h132^0-h132^post5 == 0 /\ t44^0-t44^post5 == 0 /\ k63^0-k63^post5 == 0 /\ sum027^0-sum027^post5 == 0 /\ ret_mac15^0-ret_mac15^post5 == 0 /\ -sqr11^post5+sqr11^0 == 0 /\ bitchanged48^0-bitchanged48^post5 == 0 /\ j26^0-j26^post5 == 0 /\ f36^0-f36^post5 == 0 /\ -n45^post5+n45^0 == 0 /\ -n65^post5+n65^0 == 0 /\ i37^0-i37^post5 == 0 /\ -j62^post5+j62^0 == 0 /\ i25^0-i25^post5 == 0 /\ -mask47^post5+mask47^0 == 0 /\ j55^0-j55^post5 == 0 /\ -tmpmask56^post5+tmpmask56^0 == 0 /\ -1+i61^post5-i61^0 == 0 /\ tmp^0-tmp^post5 == 0 /\ numbasis49^0-numbasis49^post5 == 0 /\ -ret_codebook57^post5+ret_codebook57^0 == 0 /\ p66^0-p66^post5 == 0 /\ n35^0-n35^post5 == 0 /\ d^0-d^post5 == 0 /\ -theta54^post5+theta54^0 == 0 /\ x029^0-x029^post5 == 0), cost: 1
	New rule:
	l8 -> l9 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=1+i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 4-j62^0 <= 0), cost: 1
	
		propagated equality g51^post5 = g51^0
		
		propagated equality ret_latsynth38^post5 = ret_latsynth38^0
		
		propagated equality m64^post5 = m64^0
		
		propagated equality i19^post5 = i19^0
		
		propagated equality i13^post5 = i13^0
		
		propagated equality x43^post5 = x43^0
		
		propagated equality sum21^post5 = sum21^0
		
		propagated equality codeword50^post5 = codeword50^0
		
		propagated equality c^post5 = c^0
		
		propagated equality sum128^post5 = sum128^0
		
		propagated equality x130^post5 = x130^0
		
		propagated equality h031^post5 = h031^0
		
		propagated equality ddim53^post5 = ddim53^0
		
		propagated equality dotp14^post5 = dotp14^0
		
		propagated equality tmp___0^post5 = tmp___0^0
		
		propagated equality j20^post5 = j20^0
		
		propagated equality h132^post5 = h132^0
		
		propagated equality t44^post5 = t44^0
		
		propagated equality k63^post5 = k63^0
		
		propagated equality sum027^post5 = sum027^0
		
		propagated equality ret_mac15^post5 = ret_mac15^0
		
		propagated equality sqr11^post5 = sqr11^0
		
		propagated equality bitchanged48^post5 = bitchanged48^0
		
		propagated equality j26^post5 = j26^0
		
		propagated equality f36^post5 = f36^0
		
		propagated equality n45^post5 = n45^0
		
		propagated equality n65^post5 = n65^0
		
		propagated equality i37^post5 = i37^0
		
		propagated equality j62^post5 = j62^0
		
		propagated equality i25^post5 = i25^0
		
		propagated equality mask47^post5 = mask47^0
		
		propagated equality j55^post5 = j55^0
		
		propagated equality tmpmask56^post5 = tmpmask56^0
		
		propagated equality i61^post5 = 1+i61^0
		
		propagated equality tmp^post5 = tmp^0
		
		propagated equality numbasis49^post5 = numbasis49^0
		
		propagated equality ret_codebook57^post5 = ret_codebook57^0
		
		propagated equality p66^post5 = p66^0
		
		propagated equality n35^post5 = n35^0
		
		propagated equality d^post5 = d^0
		
		propagated equality theta54^post5 = theta54^0
		
		propagated equality x029^post5 = x029^0
		
	Simplified Guard

	Original rule:
	l8 -> l9 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=1+i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 4-j62^0 <= 0), cost: 1
	New rule:
	l8 -> l9 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=1+i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 4-j62^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l9 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=1+i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 4-j62^0 <= 0, cost: 1
	New rule:
	l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l10 : bitchanged48^0'=bitchanged48^post6, c^0'=c^post6, codeword50^0'=codeword50^post6, d^0'=d^post6, ddim53^0'=ddim53^post6, dotp14^0'=dotp14^post6, f36^0'=f36^post6, g51^0'=g51^post6, h031^0'=h031^post6, h132^0'=h132^post6, i13^0'=i13^post6, i19^0'=i19^post6, i25^0'=i25^post6, i37^0'=i37^post6, i61^0'=i61^post6, j20^0'=j20^post6, j26^0'=j26^post6, j55^0'=j55^post6, j62^0'=j62^post6, k63^0'=k63^post6, m64^0'=m64^post6, mask47^0'=mask47^post6, n35^0'=n35^post6, n45^0'=n45^post6, n65^0'=n65^post6, numbasis49^0'=numbasis49^post6, p66^0'=p66^post6, ret_codebook57^0'=ret_codebook57^post6, ret_latsynth38^0'=ret_latsynth38^post6, ret_mac15^0'=ret_mac15^post6, sqr11^0'=sqr11^post6, sum027^0'=sum027^post6, sum128^0'=sum128^post6, sum21^0'=sum21^post6, t44^0'=t44^post6, theta54^0'=theta54^post6, tmp^0'=tmp^post6, tmp___0^0'=tmp___0^post6, tmpmask56^0'=tmpmask56^post6, x029^0'=x029^post6, x130^0'=x130^post6, x43^0'=x43^post6, (-theta54^post6+theta54^0 == 0 /\ -dotp14^post6+dotp14^0 == 0 /\ -1+j62^post6-j62^0 == 0 /\ -ddim53^post6+ddim53^0 == 0 /\ sqr11^0-sqr11^post6 == 0 /\ -codeword50^post6+codeword50^0 == 0 /\ -c^post6+c^0 == 0 /\ -x130^post6+x130^0 == 0 /\ -x43^post6+x43^0 == 0 /\ -sum128^post6+sum128^0 == 0 /\ -3+j62^0 <= 0 /\ -n45^post6+n45^0 == 0 /\ -i19^post6+i19^0 == 0 /\ -numbasis49^post6+numbasis49^0 == 0 /\ -tmpmask56^post6+tmpmask56^0 == 0 /\ bitchanged48^0-bitchanged48^post6 == 0 /\ tmp___0^0-tmp___0^post6 == 0 /\ k63^0-k63^post6 == 0 /\ t44^0-t44^post6 == 0 /\ n65^0-n65^post6 == 0 /\ h132^0-h132^post6 == 0 /\ m64^0-m64^post6 == 0 /\ f36^0-f36^post6 == 0 /\ -g51^post6+g51^0 == 0 /\ -j20^post6+j20^0 == 0 /\ j26^0-j26^post6 == 0 /\ -p66^post6+p66^0 == 0 /\ j55^0-j55^post6 == 0 /\ ret_codebook57^0-ret_codebook57^post6 == 0 /\ -ret_mac15^post6+ret_mac15^0 == 0 /\ -sum21^post6+sum21^0 == 0 /\ i37^0-i37^post6 == 0 /\ sum027^0-sum027^post6 == 0 /\ -mask47^post6+mask47^0 == 0 /\ x029^0-x029^post6 == 0 /\ tmp^0-tmp^post6 == 0 /\ ret_latsynth38^0-ret_latsynth38^post6 == 0 /\ -n35^post6+n35^0 == 0 /\ i25^0-i25^post6 == 0 /\ -i13^post6+i13^0 == 0 /\ -i61^post6+i61^0 == 0 /\ d^0-d^post6 == 0 /\ -h031^post6+h031^0 == 0), cost: 1
	New rule:
	l8 -> l10 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=1+j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -3+j62^0 <= 0), cost: 1
	
		propagated equality theta54^post6 = theta54^0
		
		propagated equality dotp14^post6 = dotp14^0
		
		propagated equality j62^post6 = 1+j62^0
		
		propagated equality ddim53^post6 = ddim53^0
		
		propagated equality sqr11^post6 = sqr11^0
		
		propagated equality codeword50^post6 = codeword50^0
		
		propagated equality c^post6 = c^0
		
		propagated equality x130^post6 = x130^0
		
		propagated equality x43^post6 = x43^0
		
		propagated equality sum128^post6 = sum128^0
		
		propagated equality n45^post6 = n45^0
		
		propagated equality i19^post6 = i19^0
		
		propagated equality numbasis49^post6 = numbasis49^0
		
		propagated equality tmpmask56^post6 = tmpmask56^0
		
		propagated equality bitchanged48^post6 = bitchanged48^0
		
		propagated equality tmp___0^post6 = tmp___0^0
		
		propagated equality k63^post6 = k63^0
		
		propagated equality t44^post6 = t44^0
		
		propagated equality n65^post6 = n65^0
		
		propagated equality h132^post6 = h132^0
		
		propagated equality m64^post6 = m64^0
		
		propagated equality f36^post6 = f36^0
		
		propagated equality g51^post6 = g51^0
		
		propagated equality j20^post6 = j20^0
		
		propagated equality j26^post6 = j26^0
		
		propagated equality p66^post6 = p66^0
		
		propagated equality j55^post6 = j55^0
		
		propagated equality ret_codebook57^post6 = ret_codebook57^0
		
		propagated equality ret_mac15^post6 = ret_mac15^0
		
		propagated equality sum21^post6 = sum21^0
		
		propagated equality i37^post6 = i37^0
		
		propagated equality sum027^post6 = sum027^0
		
		propagated equality mask47^post6 = mask47^0
		
		propagated equality x029^post6 = x029^0
		
		propagated equality tmp^post6 = tmp^0
		
		propagated equality ret_latsynth38^post6 = ret_latsynth38^0
		
		propagated equality n35^post6 = n35^0
		
		propagated equality i25^post6 = i25^0
		
		propagated equality i13^post6 = i13^0
		
		propagated equality i61^post6 = i61^0
		
		propagated equality d^post6 = d^0
		
		propagated equality h031^post6 = h031^0
		
	Simplified Guard

	Original rule:
	l8 -> l10 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=1+j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -3+j62^0 <= 0), cost: 1
	New rule:
	l8 -> l10 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=1+j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -3+j62^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l10 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=1+j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -3+j62^0 <= 0, cost: 1
	New rule:
	l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l11 -> l12 : bitchanged48^0'=bitchanged48^post7, c^0'=c^post7, codeword50^0'=codeword50^post7, d^0'=d^post7, ddim53^0'=ddim53^post7, dotp14^0'=dotp14^post7, f36^0'=f36^post7, g51^0'=g51^post7, h031^0'=h031^post7, h132^0'=h132^post7, i13^0'=i13^post7, i19^0'=i19^post7, i25^0'=i25^post7, i37^0'=i37^post7, i61^0'=i61^post7, j20^0'=j20^post7, j26^0'=j26^post7, j55^0'=j55^post7, j62^0'=j62^post7, k63^0'=k63^post7, m64^0'=m64^post7, mask47^0'=mask47^post7, n35^0'=n35^post7, n45^0'=n45^post7, n65^0'=n65^post7, numbasis49^0'=numbasis49^post7, p66^0'=p66^post7, ret_codebook57^0'=ret_codebook57^post7, ret_latsynth38^0'=ret_latsynth38^post7, ret_mac15^0'=ret_mac15^post7, sqr11^0'=sqr11^post7, sum027^0'=sum027^post7, sum128^0'=sum128^post7, sum21^0'=sum21^post7, t44^0'=t44^post7, theta54^0'=theta54^post7, tmp^0'=tmp^post7, tmp___0^0'=tmp___0^post7, tmpmask56^0'=tmpmask56^post7, x029^0'=x029^post7, x130^0'=x130^post7, x43^0'=x43^post7, (-3-n65^0+n65^post7 == 0 /\ g51^0-g51^post7 == 0 /\ -f36^post7+f36^0 == 0 /\ -d^post7+d^0 == 0 /\ -bitchanged48^post7+bitchanged48^0 == 0 /\ -h132^post7+h132^0 == 0 /\ c^0-c^post7 == 0 /\ -ret_latsynth38^post7+ret_latsynth38^0 == 0 /\ -ret_mac15^post7+ret_mac15^0 == 0 /\ -i13^post7+i13^0 == 0 /\ -x43^post7+x43^0 == 0 /\ h031^0-h031^post7 == 0 /\ -x130^post7+x130^0 == 0 /\ codeword50^0-codeword50^post7 == 0 /\ i25^0-i25^post7 == 0 /\ sum21^0-sum21^post7 == 0 /\ -j20^post7+j20^0 == 0 /\ t44^0-t44^post7 == 0 /\ sqr11^0-sqr11^post7 == 0 /\ 7+p66^post7-p66^0 == 0 /\ -7+k63^post7-k63^0 == 0 /\ numbasis49^0-numbasis49^post7 == 0 /\ mask47^0-mask47^post7 == 0 /\ -i37^post7+i37^0 == 0 /\ tmp___0^0-tmp___0^post7 == 0 /\ -n35^post7+n35^0 == 0 /\ sum027^0-sum027^post7 == 0 /\ -n45^post7+n45^0 == 0 /\ -tmpmask56^post7+tmpmask56^0 == 0 /\ ret_codebook57^0-ret_codebook57^post7 == 0 /\ i19^0-i19^post7 == 0 /\ dotp14^0-dotp14^post7 == 0 /\ ddim53^0-ddim53^post7 == 0 /\ 8-i61^0 <= 0 /\ -3-m64^0+m64^post7 == 0 /\ j55^0-j55^post7 == 0 /\ -theta54^post7+theta54^0 == 0 /\ x029^0-x029^post7 == 0 /\ -sum128^post7+sum128^0 == 0 /\ j62^0-j62^post7 == 0 /\ tmp^0-tmp^post7 == 0 /\ i61^0-i61^post7 == 0 /\ -j26^post7+j26^0 == 0), cost: 1
	New rule:
	l11 -> l12 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=7+k63^0, m64^0'=3+m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=3+n65^0, numbasis49^0'=numbasis49^0, p66^0'=-7+p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 8-i61^0 <= 0), cost: 1
	
		propagated equality n65^post7 = 3+n65^0
		
		propagated equality g51^post7 = g51^0
		
		propagated equality f36^post7 = f36^0
		
		propagated equality d^post7 = d^0
		
		propagated equality bitchanged48^post7 = bitchanged48^0
		
		propagated equality h132^post7 = h132^0
		
		propagated equality c^post7 = c^0
		
		propagated equality ret_latsynth38^post7 = ret_latsynth38^0
		
		propagated equality ret_mac15^post7 = ret_mac15^0
		
		propagated equality i13^post7 = i13^0
		
		propagated equality x43^post7 = x43^0
		
		propagated equality h031^post7 = h031^0
		
		propagated equality x130^post7 = x130^0
		
		propagated equality codeword50^post7 = codeword50^0
		
		propagated equality i25^post7 = i25^0
		
		propagated equality sum21^post7 = sum21^0
		
		propagated equality j20^post7 = j20^0
		
		propagated equality t44^post7 = t44^0
		
		propagated equality sqr11^post7 = sqr11^0
		
		propagated equality p66^post7 = -7+p66^0
		
		propagated equality k63^post7 = 7+k63^0
		
		propagated equality numbasis49^post7 = numbasis49^0
		
		propagated equality mask47^post7 = mask47^0
		
		propagated equality i37^post7 = i37^0
		
		propagated equality tmp___0^post7 = tmp___0^0
		
		propagated equality n35^post7 = n35^0
		
		propagated equality sum027^post7 = sum027^0
		
		propagated equality n45^post7 = n45^0
		
		propagated equality tmpmask56^post7 = tmpmask56^0
		
		propagated equality ret_codebook57^post7 = ret_codebook57^0
		
		propagated equality i19^post7 = i19^0
		
		propagated equality dotp14^post7 = dotp14^0
		
		propagated equality ddim53^post7 = ddim53^0
		
		propagated equality m64^post7 = 3+m64^0
		
		propagated equality j55^post7 = j55^0
		
		propagated equality theta54^post7 = theta54^0
		
		propagated equality x029^post7 = x029^0
		
		propagated equality sum128^post7 = sum128^0
		
		propagated equality j62^post7 = j62^0
		
		propagated equality tmp^post7 = tmp^0
		
		propagated equality i61^post7 = i61^0
		
		propagated equality j26^post7 = j26^0
		
	Simplified Guard

	Original rule:
	l11 -> l12 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=7+k63^0, m64^0'=3+m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=3+n65^0, numbasis49^0'=numbasis49^0, p66^0'=-7+p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 8-i61^0 <= 0), cost: 1
	New rule:
	l11 -> l12 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=7+k63^0, m64^0'=3+m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=3+n65^0, numbasis49^0'=numbasis49^0, p66^0'=-7+p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 8-i61^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l11 -> l12 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=7+k63^0, m64^0'=3+m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=3+n65^0, numbasis49^0'=numbasis49^0, p66^0'=-7+p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 8-i61^0 <= 0, cost: 1
	New rule:
	l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l11 -> l10 : bitchanged48^0'=bitchanged48^post8, c^0'=c^post8, codeword50^0'=codeword50^post8, d^0'=d^post8, ddim53^0'=ddim53^post8, dotp14^0'=dotp14^post8, f36^0'=f36^post8, g51^0'=g51^post8, h031^0'=h031^post8, h132^0'=h132^post8, i13^0'=i13^post8, i19^0'=i19^post8, i25^0'=i25^post8, i37^0'=i37^post8, i61^0'=i61^post8, j20^0'=j20^post8, j26^0'=j26^post8, j55^0'=j55^post8, j62^0'=j62^post8, k63^0'=k63^post8, m64^0'=m64^post8, mask47^0'=mask47^post8, n35^0'=n35^post8, n45^0'=n45^post8, n65^0'=n65^post8, numbasis49^0'=numbasis49^post8, p66^0'=p66^post8, ret_codebook57^0'=ret_codebook57^post8, ret_latsynth38^0'=ret_latsynth38^post8, ret_mac15^0'=ret_mac15^post8, sqr11^0'=sqr11^post8, sum027^0'=sum027^post8, sum128^0'=sum128^post8, sum21^0'=sum21^post8, t44^0'=t44^post8, theta54^0'=theta54^post8, tmp^0'=tmp^post8, tmp___0^0'=tmp___0^post8, tmpmask56^0'=tmpmask56^post8, x029^0'=x029^post8, x130^0'=x130^post8, x43^0'=x43^post8, (c^0-c^post8 == 0 /\ j55^0-j55^post8 == 0 /\ -bitchanged48^post8+bitchanged48^0 == 0 /\ ddim53^0-ddim53^post8 == 0 /\ ret_mac15^0-ret_mac15^post8 == 0 /\ -n45^post8+n45^0 == 0 /\ -dotp14^post8+dotp14^0 == 0 /\ x029^0-x029^post8 == 0 /\ -mask47^post8+mask47^0 == 0 /\ d^0-d^post8 == 0 /\ -i37^post8+i37^0 == 0 /\ -7+i61^0 <= 0 /\ -sum128^post8+sum128^0 == 0 /\ j62^post8 == 0 /\ n35^0-n35^post8 == 0 /\ -ret_codebook57^post8+ret_codebook57^0 == 0 /\ -i19^post8+i19^0 == 0 /\ -x43^post8+x43^0 == 0 /\ j26^0-j26^post8 == 0 /\ -tmp___0^post8+tmp___0^0 == 0 /\ i25^0-i25^post8 == 0 /\ -tmpmask56^post8+tmpmask56^0 == 0 /\ numbasis49^0-numbasis49^post8 == 0 /\ -j20^post8+j20^0 == 0 /\ tmp^0-tmp^post8 == 0 /\ sum21^0-sum21^post8 == 0 /\ k63^0-k63^post8 == 0 /\ -theta54^post8+theta54^0 == 0 /\ g51^0-g51^post8 == 0 /\ m64^0-m64^post8 == 0 /\ t44^0-t44^post8 == 0 /\ sum027^0-sum027^post8 == 0 /\ -sqr11^post8+sqr11^0 == 0 /\ -codeword50^post8+codeword50^0 == 0 /\ -n65^post8+n65^0 == 0 /\ -h031^post8+h031^0 == 0 /\ -p66^post8+p66^0 == 0 /\ -i13^post8+i13^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post8 == 0 /\ -x130^post8+x130^0 == 0 /\ h132^0-h132^post8 == 0 /\ f36^0-f36^post8 == 0 /\ -i61^post8+i61^0 == 0), cost: 1
	New rule:
	l11 -> l10 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -7+i61^0 <= 0), cost: 1
	
		propagated equality c^post8 = c^0
		
		propagated equality j55^post8 = j55^0
		
		propagated equality bitchanged48^post8 = bitchanged48^0
		
		propagated equality ddim53^post8 = ddim53^0
		
		propagated equality ret_mac15^post8 = ret_mac15^0
		
		propagated equality n45^post8 = n45^0
		
		propagated equality dotp14^post8 = dotp14^0
		
		propagated equality x029^post8 = x029^0
		
		propagated equality mask47^post8 = mask47^0
		
		propagated equality d^post8 = d^0
		
		propagated equality i37^post8 = i37^0
		
		propagated equality sum128^post8 = sum128^0
		
		propagated equality j62^post8 = 0
		
		propagated equality n35^post8 = n35^0
		
		propagated equality ret_codebook57^post8 = ret_codebook57^0
		
		propagated equality i19^post8 = i19^0
		
		propagated equality x43^post8 = x43^0
		
		propagated equality j26^post8 = j26^0
		
		propagated equality tmp___0^post8 = tmp___0^0
		
		propagated equality i25^post8 = i25^0
		
		propagated equality tmpmask56^post8 = tmpmask56^0
		
		propagated equality numbasis49^post8 = numbasis49^0
		
		propagated equality j20^post8 = j20^0
		
		propagated equality tmp^post8 = tmp^0
		
		propagated equality sum21^post8 = sum21^0
		
		propagated equality k63^post8 = k63^0
		
		propagated equality theta54^post8 = theta54^0
		
		propagated equality g51^post8 = g51^0
		
		propagated equality m64^post8 = m64^0
		
		propagated equality t44^post8 = t44^0
		
		propagated equality sum027^post8 = sum027^0
		
		propagated equality sqr11^post8 = sqr11^0
		
		propagated equality codeword50^post8 = codeword50^0
		
		propagated equality n65^post8 = n65^0
		
		propagated equality h031^post8 = h031^0
		
		propagated equality p66^post8 = p66^0
		
		propagated equality i13^post8 = i13^0
		
		propagated equality ret_latsynth38^post8 = ret_latsynth38^0
		
		propagated equality x130^post8 = x130^0
		
		propagated equality h132^post8 = h132^0
		
		propagated equality f36^post8 = f36^0
		
		propagated equality i61^post8 = i61^0
		
	Simplified Guard

	Original rule:
	l11 -> l10 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -7+i61^0 <= 0), cost: 1
	New rule:
	l11 -> l10 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -7+i61^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l11 -> l10 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -7+i61^0 <= 0, cost: 1
	New rule:
	l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l13 -> l14 : bitchanged48^0'=bitchanged48^post9, c^0'=c^post9, codeword50^0'=codeword50^post9, d^0'=d^post9, ddim53^0'=ddim53^post9, dotp14^0'=dotp14^post9, f36^0'=f36^post9, g51^0'=g51^post9, h031^0'=h031^post9, h132^0'=h132^post9, i13^0'=i13^post9, i19^0'=i19^post9, i25^0'=i25^post9, i37^0'=i37^post9, i61^0'=i61^post9, j20^0'=j20^post9, j26^0'=j26^post9, j55^0'=j55^post9, j62^0'=j62^post9, k63^0'=k63^post9, m64^0'=m64^post9, mask47^0'=mask47^post9, n35^0'=n35^post9, n45^0'=n45^post9, n65^0'=n65^post9, numbasis49^0'=numbasis49^post9, p66^0'=p66^post9, ret_codebook57^0'=ret_codebook57^post9, ret_latsynth38^0'=ret_latsynth38^post9, ret_mac15^0'=ret_mac15^post9, sqr11^0'=sqr11^post9, sum027^0'=sum027^post9, sum128^0'=sum128^post9, sum21^0'=sum21^post9, t44^0'=t44^post9, theta54^0'=theta54^post9, tmp^0'=tmp^post9, tmp___0^0'=tmp___0^post9, tmpmask56^0'=tmpmask56^post9, x029^0'=x029^post9, x130^0'=x130^post9, x43^0'=x43^post9, (sum128^0-sum128^post9 == 0 /\ -ret_mac15^post9+ret_mac15^0 == 0 /\ -n65^post9+n65^0 == 0 /\ -sum21^post9+sum21^0 == 0 /\ -p66^post9+p66^0 == 0 /\ h132^0-h132^post9 == 0 /\ -ret_codebook57^post9+ret_codebook57^0 == 0 /\ numbasis49^0-numbasis49^post9 == 0 /\ sum027^0-sum027^post9 == 0 /\ -x029^post9+x029^0 == 0 /\ j26^0-j26^post9 == 0 /\ -tmp___0^post9+tmp___0^0 == 0 /\ ddim53^0-ddim53^post9 == 0 /\ theta54^0-theta54^post9 == 0 /\ d^0-d^post9 == 0 /\ n35^0-n35^post9 == 0 /\ -n45^post9+n45^0 == 0 /\ -j20^post9+j20^0 == 0 /\ i25^0-i25^post9 == 0 /\ -mask47^post9+mask47^0 == 0 /\ -j55^post9+j55^0 == 0 /\ -dotp14^post9+dotp14^0 == 0 /\ -tmp^post9+tmp^0 == 0 /\ k63^0-k63^post9 == 0 /\ -x130^post9+x130^0 == 0 /\ -i61^post9+i61^0 == 0 /\ m64^0-m64^post9 == 0 /\ -i19^post9+i19^0 == 0 /\ c^0-c^post9 == 0 /\ -i37^post9+i37^0 == 0 /\ -h031^post9+h031^0 == 0 /\ g51^0-g51^post9 == 0 /\ 9-k63^0 <= 0 /\ -tmpmask56^post9+tmpmask56^0 == 0 /\ -i13^post9+i13^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post9 == 0 /\ -bitchanged48^post9+bitchanged48^0 == 0 /\ t44^0-t44^post9 == 0 /\ f36^0-f36^post9 == 0 /\ -j62^post9+j62^0 == 0 /\ x43^0-x43^post9 == 0 /\ -codeword50^post9+codeword50^0 == 0 /\ sqr11^0-sqr11^post9 == 0), cost: 1
	New rule:
	l13 -> l14 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 9-k63^0 <= 0), cost: 1
	
		propagated equality sum128^post9 = sum128^0
		
		propagated equality ret_mac15^post9 = ret_mac15^0
		
		propagated equality n65^post9 = n65^0
		
		propagated equality sum21^post9 = sum21^0
		
		propagated equality p66^post9 = p66^0
		
		propagated equality h132^post9 = h132^0
		
		propagated equality ret_codebook57^post9 = ret_codebook57^0
		
		propagated equality numbasis49^post9 = numbasis49^0
		
		propagated equality sum027^post9 = sum027^0
		
		propagated equality x029^post9 = x029^0
		
		propagated equality j26^post9 = j26^0
		
		propagated equality tmp___0^post9 = tmp___0^0
		
		propagated equality ddim53^post9 = ddim53^0
		
		propagated equality theta54^post9 = theta54^0
		
		propagated equality d^post9 = d^0
		
		propagated equality n35^post9 = n35^0
		
		propagated equality n45^post9 = n45^0
		
		propagated equality j20^post9 = j20^0
		
		propagated equality i25^post9 = i25^0
		
		propagated equality mask47^post9 = mask47^0
		
		propagated equality j55^post9 = j55^0
		
		propagated equality dotp14^post9 = dotp14^0
		
		propagated equality tmp^post9 = tmp^0
		
		propagated equality k63^post9 = k63^0
		
		propagated equality x130^post9 = x130^0
		
		propagated equality i61^post9 = i61^0
		
		propagated equality m64^post9 = m64^0
		
		propagated equality i19^post9 = i19^0
		
		propagated equality c^post9 = c^0
		
		propagated equality i37^post9 = i37^0
		
		propagated equality h031^post9 = h031^0
		
		propagated equality g51^post9 = g51^0
		
		propagated equality tmpmask56^post9 = tmpmask56^0
		
		propagated equality i13^post9 = i13^0
		
		propagated equality ret_latsynth38^post9 = ret_latsynth38^0
		
		propagated equality bitchanged48^post9 = bitchanged48^0
		
		propagated equality t44^post9 = t44^0
		
		propagated equality f36^post9 = f36^0
		
		propagated equality j62^post9 = j62^0
		
		propagated equality x43^post9 = x43^0
		
		propagated equality codeword50^post9 = codeword50^0
		
		propagated equality sqr11^post9 = sqr11^0
		
	Simplified Guard

	Original rule:
	l13 -> l14 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 9-k63^0 <= 0), cost: 1
	New rule:
	l13 -> l14 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 9-k63^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l14 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 9-k63^0 <= 0, cost: 1
	New rule:
	l13 -> l14 : 9-k63^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l13 -> l9 : bitchanged48^0'=bitchanged48^post10, c^0'=c^post10, codeword50^0'=codeword50^post10, d^0'=d^post10, ddim53^0'=ddim53^post10, dotp14^0'=dotp14^post10, f36^0'=f36^post10, g51^0'=g51^post10, h031^0'=h031^post10, h132^0'=h132^post10, i13^0'=i13^post10, i19^0'=i19^post10, i25^0'=i25^post10, i37^0'=i37^post10, i61^0'=i61^post10, j20^0'=j20^post10, j26^0'=j26^post10, j55^0'=j55^post10, j62^0'=j62^post10, k63^0'=k63^post10, m64^0'=m64^post10, mask47^0'=mask47^post10, n35^0'=n35^post10, n45^0'=n45^post10, n65^0'=n65^post10, numbasis49^0'=numbasis49^post10, p66^0'=p66^post10, ret_codebook57^0'=ret_codebook57^post10, ret_latsynth38^0'=ret_latsynth38^post10, ret_mac15^0'=ret_mac15^post10, sqr11^0'=sqr11^post10, sum027^0'=sum027^post10, sum128^0'=sum128^post10, sum21^0'=sum21^post10, t44^0'=t44^post10, theta54^0'=theta54^post10, tmp^0'=tmp^post10, tmp___0^0'=tmp___0^post10, tmpmask56^0'=tmpmask56^post10, x029^0'=x029^post10, x130^0'=x130^post10, x43^0'=x43^post10, (i19^0-i19^post10 == 0 /\ numbasis49^0-numbasis49^post10 == 0 /\ -n45^post10+n45^0 == 0 /\ -n65^post10+n65^0 == 0 /\ -tmpmask56^post10+tmpmask56^0 == 0 /\ -mask47^post10+mask47^0 == 0 /\ -j26^post10+j26^0 == 0 /\ -j20^post10+j20^0 == 0 /\ -j62^post10+j62^0 == 0 /\ k63^0-k63^post10 == 0 /\ ddim53^0-ddim53^post10 == 0 /\ ret_latsynth38^0-ret_latsynth38^post10 == 0 /\ c^0-c^post10 == 0 /\ tmp___0^0-tmp___0^post10 == 0 /\ -theta54^post10+theta54^0 == 0 /\ -dotp14^post10+dotp14^0 == 0 /\ -d^post10+d^0 == 0 /\ -i37^post10+i37^0 == 0 /\ -ret_mac15^post10+ret_mac15^0 == 0 /\ -ret_codebook57^post10+ret_codebook57^0 == 0 /\ i25^0-i25^post10 == 0 /\ i61^post10 == 0 /\ -x029^post10+x029^0 == 0 /\ j55^0-j55^post10 == 0 /\ t44^0-t44^post10 == 0 /\ x43^0-x43^post10 == 0 /\ -sum21^post10+sum21^0 == 0 /\ -codeword50^post10+codeword50^0 == 0 /\ -bitchanged48^post10+bitchanged48^0 == 0 /\ n35^0-n35^post10 == 0 /\ -sum128^post10+sum128^0 == 0 /\ g51^0-g51^post10 == 0 /\ m64^0-m64^post10 == 0 /\ sqr11^0-sqr11^post10 == 0 /\ -8+k63^0 <= 0 /\ -f36^post10+f36^0 == 0 /\ -tmp^post10+tmp^0 == 0 /\ -p66^post10+p66^0 == 0 /\ -i13^post10+i13^0 == 0 /\ sum027^0-sum027^post10 == 0 /\ h132^0-h132^post10 == 0 /\ -h031^post10+h031^0 == 0 /\ -x130^post10+x130^0 == 0), cost: 1
	New rule:
	l13 -> l9 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -8+k63^0 <= 0), cost: 1
	
		propagated equality i19^post10 = i19^0
		
		propagated equality numbasis49^post10 = numbasis49^0
		
		propagated equality n45^post10 = n45^0
		
		propagated equality n65^post10 = n65^0
		
		propagated equality tmpmask56^post10 = tmpmask56^0
		
		propagated equality mask47^post10 = mask47^0
		
		propagated equality j26^post10 = j26^0
		
		propagated equality j20^post10 = j20^0
		
		propagated equality j62^post10 = j62^0
		
		propagated equality k63^post10 = k63^0
		
		propagated equality ddim53^post10 = ddim53^0
		
		propagated equality ret_latsynth38^post10 = ret_latsynth38^0
		
		propagated equality c^post10 = c^0
		
		propagated equality tmp___0^post10 = tmp___0^0
		
		propagated equality theta54^post10 = theta54^0
		
		propagated equality dotp14^post10 = dotp14^0
		
		propagated equality d^post10 = d^0
		
		propagated equality i37^post10 = i37^0
		
		propagated equality ret_mac15^post10 = ret_mac15^0
		
		propagated equality ret_codebook57^post10 = ret_codebook57^0
		
		propagated equality i25^post10 = i25^0
		
		propagated equality i61^post10 = 0
		
		propagated equality x029^post10 = x029^0
		
		propagated equality j55^post10 = j55^0
		
		propagated equality t44^post10 = t44^0
		
		propagated equality x43^post10 = x43^0
		
		propagated equality sum21^post10 = sum21^0
		
		propagated equality codeword50^post10 = codeword50^0
		
		propagated equality bitchanged48^post10 = bitchanged48^0
		
		propagated equality n35^post10 = n35^0
		
		propagated equality sum128^post10 = sum128^0
		
		propagated equality g51^post10 = g51^0
		
		propagated equality m64^post10 = m64^0
		
		propagated equality sqr11^post10 = sqr11^0
		
		propagated equality f36^post10 = f36^0
		
		propagated equality tmp^post10 = tmp^0
		
		propagated equality p66^post10 = p66^0
		
		propagated equality i13^post10 = i13^0
		
		propagated equality sum027^post10 = sum027^0
		
		propagated equality h132^post10 = h132^0
		
		propagated equality h031^post10 = h031^0
		
		propagated equality x130^post10 = x130^0
		
	Simplified Guard

	Original rule:
	l13 -> l9 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -8+k63^0 <= 0), cost: 1
	New rule:
	l13 -> l9 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -8+k63^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l9 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -8+k63^0 <= 0, cost: 1
	New rule:
	l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l15 -> l12 : bitchanged48^0'=bitchanged48^post11, c^0'=c^post11, codeword50^0'=codeword50^post11, d^0'=d^post11, ddim53^0'=ddim53^post11, dotp14^0'=dotp14^post11, f36^0'=f36^post11, g51^0'=g51^post11, h031^0'=h031^post11, h132^0'=h132^post11, i13^0'=i13^post11, i19^0'=i19^post11, i25^0'=i25^post11, i37^0'=i37^post11, i61^0'=i61^post11, j20^0'=j20^post11, j26^0'=j26^post11, j55^0'=j55^post11, j62^0'=j62^post11, k63^0'=k63^post11, m64^0'=m64^post11, mask47^0'=mask47^post11, n35^0'=n35^post11, n45^0'=n45^post11, n65^0'=n65^post11, numbasis49^0'=numbasis49^post11, p66^0'=p66^post11, ret_codebook57^0'=ret_codebook57^post11, ret_latsynth38^0'=ret_latsynth38^post11, ret_mac15^0'=ret_mac15^post11, sqr11^0'=sqr11^post11, sum027^0'=sum027^post11, sum128^0'=sum128^post11, sum21^0'=sum21^post11, t44^0'=t44^post11, theta54^0'=theta54^post11, tmp^0'=tmp^post11, tmp___0^0'=tmp___0^post11, tmpmask56^0'=tmpmask56^post11, x029^0'=x029^post11, x130^0'=x130^post11, x43^0'=x43^post11, (h031^0-h031^post11 == 0 /\ t44^0-t44^post11 == 0 /\ -ret_latsynth38^post11+ret_latsynth38^0 == 0 /\ mask47^0-mask47^post11 == 0 /\ -g51^0+ret_codebook57^post11 == 0 /\ -ret_mac15^post11+ret_mac15^0 == 0 /\ -i13^post11+i13^0 == 0 /\ -d^post11+d^0 == 0 /\ i19^0-i19^post11 == 0 /\ i25^0-i25^post11 == 0 /\ sum21^0-sum21^post11 == 0 /\ -x130^post11+x130^0 == 0 /\ -1+k63^post11 == 0 /\ -n35^post11+n35^0 == 0 /\ -13+n65^post11 == 0 /\ -j20^post11+j20^0 == 0 /\ -f36^post11+f36^0 == 0 /\ sqr11^0-sqr11^post11 == 0 /\ -theta54^post11+theta54^0 == 0 /\ sum027^0-sum027^post11 == 0 /\ m64^post11 == 0 /\ x029^0-x029^post11 == 0 /\ -i37^post11+i37^0 == 0 /\ c^0-c^post11 == 0 /\ dotp14^0-dotp14^post11 == 0 /\ -bitchanged48^post11+bitchanged48^0 == 0 /\ tmp^0-tmp^post11 == 0 /\ -sum128^post11+sum128^0 == 0 /\ j55^0-j55^post11 == 0 /\ -j26^post11+j26^0 == 0 /\ x43^0-x43^post11 == 0 /\ -n45^post11+n45^0 == 0 /\ -numbasis49^post11+numbasis49^0 == 0 /\ -h132^post11+h132^0 == 0 /\ -codeword50^post11+codeword50^0 == 0 /\ g51^0-g51^post11 == 0 /\ i61^0-i61^post11 == 0 /\ 1-j55^0+numbasis49^0 <= 0 /\ ddim53^0-ddim53^post11 == 0 /\ -8+p66^post11 == 0 /\ j62^0-j62^post11 == 0 /\ -tmpmask56^post11+tmpmask56^0 == 0 /\ tmp___0^post11-ret_codebook57^post11 == 0), cost: 1
	New rule:
	l15 -> l12 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=1, m64^0'=0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=13, numbasis49^0'=numbasis49^0, p66^0'=8, ret_codebook57^0'=g51^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=g51^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 1-j55^0+numbasis49^0 <= 0), cost: 1
	
		propagated equality h031^post11 = h031^0
		
		propagated equality t44^post11 = t44^0
		
		propagated equality ret_latsynth38^post11 = ret_latsynth38^0
		
		propagated equality mask47^post11 = mask47^0
		
		propagated equality ret_codebook57^post11 = g51^0
		
		propagated equality ret_mac15^post11 = ret_mac15^0
		
		propagated equality i13^post11 = i13^0
		
		propagated equality d^post11 = d^0
		
		propagated equality i19^post11 = i19^0
		
		propagated equality i25^post11 = i25^0
		
		propagated equality sum21^post11 = sum21^0
		
		propagated equality x130^post11 = x130^0
		
		propagated equality k63^post11 = 1
		
		propagated equality n35^post11 = n35^0
		
		propagated equality n65^post11 = 13
		
		propagated equality j20^post11 = j20^0
		
		propagated equality f36^post11 = f36^0
		
		propagated equality sqr11^post11 = sqr11^0
		
		propagated equality theta54^post11 = theta54^0
		
		propagated equality sum027^post11 = sum027^0
		
		propagated equality m64^post11 = 0
		
		propagated equality x029^post11 = x029^0
		
		propagated equality i37^post11 = i37^0
		
		propagated equality c^post11 = c^0
		
		propagated equality dotp14^post11 = dotp14^0
		
		propagated equality bitchanged48^post11 = bitchanged48^0
		
		propagated equality tmp^post11 = tmp^0
		
		propagated equality sum128^post11 = sum128^0
		
		propagated equality j55^post11 = j55^0
		
		propagated equality j26^post11 = j26^0
		
		propagated equality x43^post11 = x43^0
		
		propagated equality n45^post11 = n45^0
		
		propagated equality numbasis49^post11 = numbasis49^0
		
		propagated equality h132^post11 = h132^0
		
		propagated equality codeword50^post11 = codeword50^0
		
		propagated equality g51^post11 = g51^0
		
		propagated equality i61^post11 = i61^0
		
		propagated equality ddim53^post11 = ddim53^0
		
		propagated equality p66^post11 = 8
		
		propagated equality j62^post11 = j62^0
		
		propagated equality tmpmask56^post11 = tmpmask56^0
		
		propagated equality tmp___0^post11 = g51^0
		
	Simplified Guard

	Original rule:
	l15 -> l12 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=1, m64^0'=0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=13, numbasis49^0'=numbasis49^0, p66^0'=8, ret_codebook57^0'=g51^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=g51^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 1-j55^0+numbasis49^0 <= 0), cost: 1
	New rule:
	l15 -> l12 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=1, m64^0'=0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=13, numbasis49^0'=numbasis49^0, p66^0'=8, ret_codebook57^0'=g51^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=g51^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l15 -> l12 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=1, m64^0'=0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=13, numbasis49^0'=numbasis49^0, p66^0'=8, ret_codebook57^0'=g51^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=g51^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
	New rule:
	l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l15 -> l16 : bitchanged48^0'=bitchanged48^post12, c^0'=c^post12, codeword50^0'=codeword50^post12, d^0'=d^post12, ddim53^0'=ddim53^post12, dotp14^0'=dotp14^post12, f36^0'=f36^post12, g51^0'=g51^post12, h031^0'=h031^post12, h132^0'=h132^post12, i13^0'=i13^post12, i19^0'=i19^post12, i25^0'=i25^post12, i37^0'=i37^post12, i61^0'=i61^post12, j20^0'=j20^post12, j26^0'=j26^post12, j55^0'=j55^post12, j62^0'=j62^post12, k63^0'=k63^post12, m64^0'=m64^post12, mask47^0'=mask47^post12, n35^0'=n35^post12, n45^0'=n45^post12, n65^0'=n65^post12, numbasis49^0'=numbasis49^post12, p66^0'=p66^post12, ret_codebook57^0'=ret_codebook57^post12, ret_latsynth38^0'=ret_latsynth38^post12, ret_mac15^0'=ret_mac15^post12, sqr11^0'=sqr11^post12, sum027^0'=sum027^post12, sum128^0'=sum128^post12, sum21^0'=sum21^post12, t44^0'=t44^post12, theta54^0'=theta54^post12, tmp^0'=tmp^post12, tmp___0^0'=tmp___0^post12, tmpmask56^0'=tmpmask56^post12, x029^0'=x029^post12, x130^0'=x130^post12, x43^0'=x43^post12, (-1-j55^0+j55^post12 == 0 /\ -tmpmask56^post12+tmpmask56^0 == 0 /\ -n35^post12+n35^0 == 0 /\ -i25^post12+i25^0 == 0 /\ -i37^post12+i37^0 == 0 /\ -i13^post12+i13^0 == 0 /\ -n45^post12+n45^0 == 0 /\ -numbasis49^post12+numbasis49^0 == 0 /\ mask47^0-mask47^post12 == 0 /\ m64^0-m64^post12 == 0 /\ -bitchanged48^post12+bitchanged48^0 == 0 /\ c^0-c^post12 == 0 /\ -j26^post12+j26^0 == 0 /\ -theta54^post12+theta54^0 == 0 /\ -codeword50^post12+codeword50^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post12 == 0 /\ -sum128^post12+sum128^0 == 0 /\ n65^0-n65^post12 == 0 /\ -tmp___0^post12+tmp___0^0 == 0 /\ -x130^post12+x130^0 == 0 /\ -x43^post12+x43^0 == 0 /\ t44^0-t44^post12 == 0 /\ -p66^post12+p66^0 == 0 /\ -f36^post12+f36^0 == 0 /\ -h132^post12+h132^0 == 0 /\ j55^0-numbasis49^0 <= 0 /\ j62^0-j62^post12 == 0 /\ i61^0-i61^post12 == 0 /\ sum21^0-sum21^post12 == 0 /\ i19^0-i19^post12 == 0 /\ x029^0-x029^post12 == 0 /\ tmp^0-tmp^post12 == 0 /\ dotp14^0-dotp14^post12 == 0 /\ g51^0-g51^post12 == 0 /\ sqr11^0-sqr11^post12 == 0 /\ -j20^post12+j20^0 == 0 /\ -d^post12+d^0 == 0 /\ sum027^0-sum027^post12 == 0 /\ -ret_codebook57^post12+ret_codebook57^0 == 0 /\ -k63^post12+k63^0 == 0 /\ h031^0-h031^post12 == 0 /\ ddim53^0-ddim53^post12 == 0 /\ -ret_mac15^post12+ret_mac15^0 == 0), cost: 1
	New rule:
	l15 -> l16 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=1+j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ j55^0-numbasis49^0 <= 0), cost: 1
	
		propagated equality j55^post12 = 1+j55^0
		
		propagated equality tmpmask56^post12 = tmpmask56^0
		
		propagated equality n35^post12 = n35^0
		
		propagated equality i25^post12 = i25^0
		
		propagated equality i37^post12 = i37^0
		
		propagated equality i13^post12 = i13^0
		
		propagated equality n45^post12 = n45^0
		
		propagated equality numbasis49^post12 = numbasis49^0
		
		propagated equality mask47^post12 = mask47^0
		
		propagated equality m64^post12 = m64^0
		
		propagated equality bitchanged48^post12 = bitchanged48^0
		
		propagated equality c^post12 = c^0
		
		propagated equality j26^post12 = j26^0
		
		propagated equality theta54^post12 = theta54^0
		
		propagated equality codeword50^post12 = codeword50^0
		
		propagated equality ret_latsynth38^post12 = ret_latsynth38^0
		
		propagated equality sum128^post12 = sum128^0
		
		propagated equality n65^post12 = n65^0
		
		propagated equality tmp___0^post12 = tmp___0^0
		
		propagated equality x130^post12 = x130^0
		
		propagated equality x43^post12 = x43^0
		
		propagated equality t44^post12 = t44^0
		
		propagated equality p66^post12 = p66^0
		
		propagated equality f36^post12 = f36^0
		
		propagated equality h132^post12 = h132^0
		
		propagated equality j62^post12 = j62^0
		
		propagated equality i61^post12 = i61^0
		
		propagated equality sum21^post12 = sum21^0
		
		propagated equality i19^post12 = i19^0
		
		propagated equality x029^post12 = x029^0
		
		propagated equality tmp^post12 = tmp^0
		
		propagated equality dotp14^post12 = dotp14^0
		
		propagated equality g51^post12 = g51^0
		
		propagated equality sqr11^post12 = sqr11^0
		
		propagated equality j20^post12 = j20^0
		
		propagated equality d^post12 = d^0
		
		propagated equality sum027^post12 = sum027^0
		
		propagated equality ret_codebook57^post12 = ret_codebook57^0
		
		propagated equality k63^post12 = k63^0
		
		propagated equality h031^post12 = h031^0
		
		propagated equality ddim53^post12 = ddim53^0
		
		propagated equality ret_mac15^post12 = ret_mac15^0
		
	Simplified Guard

	Original rule:
	l15 -> l16 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=1+j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ j55^0-numbasis49^0 <= 0), cost: 1
	New rule:
	l15 -> l16 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=1+j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, j55^0-numbasis49^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l15 -> l16 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=1+j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, j55^0-numbasis49^0 <= 0, cost: 1
	New rule:
	l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l16 : bitchanged48^0'=bitchanged48^post13, c^0'=c^post13, codeword50^0'=codeword50^post13, d^0'=d^post13, ddim53^0'=ddim53^post13, dotp14^0'=dotp14^post13, f36^0'=f36^post13, g51^0'=g51^post13, h031^0'=h031^post13, h132^0'=h132^post13, i13^0'=i13^post13, i19^0'=i19^post13, i25^0'=i25^post13, i37^0'=i37^post13, i61^0'=i61^post13, j20^0'=j20^post13, j26^0'=j26^post13, j55^0'=j55^post13, j62^0'=j62^post13, k63^0'=k63^post13, m64^0'=m64^post13, mask47^0'=mask47^post13, n35^0'=n35^post13, n45^0'=n45^post13, n65^0'=n65^post13, numbasis49^0'=numbasis49^post13, p66^0'=p66^post13, ret_codebook57^0'=ret_codebook57^post13, ret_latsynth38^0'=ret_latsynth38^post13, ret_mac15^0'=ret_mac15^post13, sqr11^0'=sqr11^post13, sum027^0'=sum027^post13, sum128^0'=sum128^post13, sum21^0'=sum21^post13, t44^0'=t44^post13, theta54^0'=theta54^post13, tmp^0'=tmp^post13, tmp___0^0'=tmp___0^post13, tmpmask56^0'=tmpmask56^post13, x029^0'=x029^post13, x130^0'=x130^post13, x43^0'=x43^post13, (0 == 0 /\ -j20^post13+j20^0 == 0 /\ d^0-d^post13 == 0 /\ j26^0-j26^post13 == 0 /\ -sum21^post13+sum21^0 == 0 /\ 50-n45^0 <= 0 /\ -sum128^post13+sum128^0 == 0 /\ h132^0-h132^post13 == 0 /\ -1-bitchanged48^post13+j55^post13 == 0 /\ -1+theta54^post13 == 0 /\ -17+numbasis49^post13 == 0 /\ t44^0-t44^post13 == 0 /\ -h031^post13+h031^0 == 0 /\ -i13^post13+i13^0 == 0 /\ -x130^post13+x130^0 == 0 /\ -n65^post13+n65^0 == 0 /\ -p66^post13+p66^0 == 0 /\ -i61^post13+i61^0 == 0 /\ x029^0-x029^post13 == 0 /\ m64^0-m64^post13 == 0 /\ i37^0-i37^post13 == 0 /\ n35^0-n35^post13 == 0 /\ ret_latsynth38^0-ret_latsynth38^post13 == 0 /\ -1+bitchanged48^post13 == 0 /\ i25^0-i25^post13 == 0 /\ f36^0-f36^post13 == 0 /\ -sum027^post13+sum027^0 == 0 /\ -j62^post13+j62^0 == 0 /\ sqr11^0-sqr11^post13 == 0 /\ -dotp14^post13+dotp14^0 == 0 /\ -c^post13+c^0 == 0 /\ -d^0+g51^post13 == 0 /\ tmp^0-tmp^post13 == 0 /\ mask47^post13-d^0 == 0 /\ ddim53^post13-c^0 == 0 /\ -i19^post13+i19^0 == 0 /\ -x43^post13+x43^0 == 0 /\ -tmp___0^post13+tmp___0^0 == 0 /\ -n45^post13+n45^0 == 0 /\ -ret_mac15^post13+ret_mac15^0 == 0 /\ k63^0-k63^post13 == 0 /\ -ret_codebook57^post13+ret_codebook57^0 == 0), cost: 1
	New rule:
	l7 -> l16 : bitchanged48^0'=1, c^0'=c^0, codeword50^0'=codeword50^post13, d^0'=d^0, ddim53^0'=c^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=d^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=2, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=d^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=17, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=1, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^post13, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 50-n45^0 <= 0), cost: 1
	
		propagated equality j20^post13 = j20^0
		
		propagated equality d^post13 = d^0
		
		propagated equality j26^post13 = j26^0
		
		propagated equality sum21^post13 = sum21^0
		
		propagated equality sum128^post13 = sum128^0
		
		propagated equality h132^post13 = h132^0
		
		propagated equality bitchanged48^post13 = -1+j55^post13
		
		propagated equality theta54^post13 = 1
		
		propagated equality numbasis49^post13 = 17
		
		propagated equality t44^post13 = t44^0
		
		propagated equality h031^post13 = h031^0
		
		propagated equality i13^post13 = i13^0
		
		propagated equality x130^post13 = x130^0
		
		propagated equality n65^post13 = n65^0
		
		propagated equality p66^post13 = p66^0
		
		propagated equality i61^post13 = i61^0
		
		propagated equality x029^post13 = x029^0
		
		propagated equality m64^post13 = m64^0
		
		propagated equality i37^post13 = i37^0
		
		propagated equality n35^post13 = n35^0
		
		propagated equality ret_latsynth38^post13 = ret_latsynth38^0
		
		propagated equality j55^post13 = 2
		
		propagated equality i25^post13 = i25^0
		
		propagated equality f36^post13 = f36^0
		
		propagated equality sum027^post13 = sum027^0
		
		propagated equality j62^post13 = j62^0
		
		propagated equality sqr11^post13 = sqr11^0
		
		propagated equality dotp14^post13 = dotp14^0
		
		propagated equality c^post13 = c^0
		
		propagated equality g51^post13 = d^0
		
		propagated equality tmp^post13 = tmp^0
		
		propagated equality mask47^post13 = d^0
		
		propagated equality ddim53^post13 = c^0
		
		propagated equality i19^post13 = i19^0
		
		propagated equality x43^post13 = x43^0
		
		propagated equality tmp___0^post13 = tmp___0^0
		
		propagated equality n45^post13 = n45^0
		
		propagated equality ret_mac15^post13 = ret_mac15^0
		
		propagated equality k63^post13 = k63^0
		
		propagated equality ret_codebook57^post13 = ret_codebook57^0
		
	Simplified Guard

	Original rule:
	l7 -> l16 : bitchanged48^0'=1, c^0'=c^0, codeword50^0'=codeword50^post13, d^0'=d^0, ddim53^0'=c^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=d^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=2, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=d^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=17, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=1, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^post13, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 50-n45^0 <= 0), cost: 1
	New rule:
	l7 -> l16 : bitchanged48^0'=1, c^0'=c^0, codeword50^0'=codeword50^post13, d^0'=d^0, ddim53^0'=c^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=d^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=2, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=d^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=17, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=1, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^post13, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 50-n45^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l16 : bitchanged48^0'=1, c^0'=c^0, codeword50^0'=codeword50^post13, d^0'=d^0, ddim53^0'=c^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=d^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=2, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=d^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=17, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=1, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^post13, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 50-n45^0 <= 0, cost: 1
	New rule:
	l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l6 : bitchanged48^0'=bitchanged48^post14, c^0'=c^post14, codeword50^0'=codeword50^post14, d^0'=d^post14, ddim53^0'=ddim53^post14, dotp14^0'=dotp14^post14, f36^0'=f36^post14, g51^0'=g51^post14, h031^0'=h031^post14, h132^0'=h132^post14, i13^0'=i13^post14, i19^0'=i19^post14, i25^0'=i25^post14, i37^0'=i37^post14, i61^0'=i61^post14, j20^0'=j20^post14, j26^0'=j26^post14, j55^0'=j55^post14, j62^0'=j62^post14, k63^0'=k63^post14, m64^0'=m64^post14, mask47^0'=mask47^post14, n35^0'=n35^post14, n45^0'=n45^post14, n65^0'=n65^post14, numbasis49^0'=numbasis49^post14, p66^0'=p66^post14, ret_codebook57^0'=ret_codebook57^post14, ret_latsynth38^0'=ret_latsynth38^post14, ret_mac15^0'=ret_mac15^post14, sqr11^0'=sqr11^post14, sum027^0'=sum027^post14, sum128^0'=sum128^post14, sum21^0'=sum21^post14, t44^0'=t44^post14, theta54^0'=theta54^post14, tmp^0'=tmp^post14, tmp___0^0'=tmp___0^post14, tmpmask56^0'=tmpmask56^post14, x029^0'=x029^post14, x130^0'=x130^post14, x43^0'=x43^post14, (0 == 0 /\ -mask47^post14+mask47^0 == 0 /\ -j62^post14+j62^0 == 0 /\ i25^0-i25^post14 == 0 /\ -i37^post14+i37^0 == 0 /\ -h031^post14+h031^0 == 0 /\ d^0-d^post14 == 0 /\ f36^0-f36^post14 == 0 /\ -1+n45^post14-n45^0 == 0 /\ -i19^post14+i19^0 == 0 /\ -i13^post14+i13^0 == 0 /\ -x029^post14+x029^0 == 0 /\ -x130^post14+x130^0 == 0 /\ sqr11^0-sqr11^post14 == 0 /\ k63^0-k63^post14 == 0 /\ i61^0-i61^post14 == 0 /\ bitchanged48^0-bitchanged48^post14 == 0 /\ tmp___0^0-tmp___0^post14 == 0 /\ n65^0-n65^post14 == 0 /\ numbasis49^0-numbasis49^post14 == 0 /\ -codeword50^post14+codeword50^0 == 0 /\ j55^0-j55^post14 == 0 /\ -theta54^post14+theta54^0 == 0 /\ -j26^post14+j26^0 == 0 /\ -ddim53^post14+ddim53^0 == 0 /\ -ret_mac15^post14+ret_mac15^0 == 0 /\ -sum128^post14+sum128^0 == 0 /\ -sum21^post14+sum21^0 == 0 /\ g51^0-g51^post14 == 0 /\ -p66^post14+p66^0 == 0 /\ ret_codebook57^0-ret_codebook57^post14 == 0 /\ -tmpmask56^post14+tmpmask56^0 == 0 /\ -n35^post14+n35^0 == 0 /\ -j20^post14+j20^0 == 0 /\ -49+n45^0 <= 0 /\ h132^0-h132^post14 == 0 /\ -c^post14+c^0 == 0 /\ m64^0-m64^post14 == 0 /\ sum027^0-sum027^post14 == 0 /\ -dotp14^post14+dotp14^0 == 0 /\ -tmp^post14+tmp^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post14 == 0), cost: 1
	New rule:
	l7 -> l6 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=1+n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^post14, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^post14, (0 == 0 /\ -49+n45^0 <= 0), cost: 1
	
		propagated equality mask47^post14 = mask47^0
		
		propagated equality j62^post14 = j62^0
		
		propagated equality i25^post14 = i25^0
		
		propagated equality i37^post14 = i37^0
		
		propagated equality h031^post14 = h031^0
		
		propagated equality d^post14 = d^0
		
		propagated equality f36^post14 = f36^0
		
		propagated equality n45^post14 = 1+n45^0
		
		propagated equality i19^post14 = i19^0
		
		propagated equality i13^post14 = i13^0
		
		propagated equality x029^post14 = x029^0
		
		propagated equality x130^post14 = x130^0
		
		propagated equality sqr11^post14 = sqr11^0
		
		propagated equality k63^post14 = k63^0
		
		propagated equality i61^post14 = i61^0
		
		propagated equality bitchanged48^post14 = bitchanged48^0
		
		propagated equality tmp___0^post14 = tmp___0^0
		
		propagated equality n65^post14 = n65^0
		
		propagated equality numbasis49^post14 = numbasis49^0
		
		propagated equality codeword50^post14 = codeword50^0
		
		propagated equality j55^post14 = j55^0
		
		propagated equality theta54^post14 = theta54^0
		
		propagated equality j26^post14 = j26^0
		
		propagated equality ddim53^post14 = ddim53^0
		
		propagated equality ret_mac15^post14 = ret_mac15^0
		
		propagated equality sum128^post14 = sum128^0
		
		propagated equality sum21^post14 = sum21^0
		
		propagated equality g51^post14 = g51^0
		
		propagated equality p66^post14 = p66^0
		
		propagated equality ret_codebook57^post14 = ret_codebook57^0
		
		propagated equality tmpmask56^post14 = tmpmask56^0
		
		propagated equality n35^post14 = n35^0
		
		propagated equality j20^post14 = j20^0
		
		propagated equality h132^post14 = h132^0
		
		propagated equality c^post14 = c^0
		
		propagated equality m64^post14 = m64^0
		
		propagated equality sum027^post14 = sum027^0
		
		propagated equality dotp14^post14 = dotp14^0
		
		propagated equality tmp^post14 = tmp^0
		
		propagated equality ret_latsynth38^post14 = ret_latsynth38^0
		
	Simplified Guard

	Original rule:
	l7 -> l6 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=1+n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^post14, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^post14, (0 == 0 /\ -49+n45^0 <= 0), cost: 1
	New rule:
	l7 -> l6 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=1+n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^post14, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l6 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=1+n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^post14, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
	New rule:
	l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l16 -> l15 : bitchanged48^0'=bitchanged48^post15, c^0'=c^post15, codeword50^0'=codeword50^post15, d^0'=d^post15, ddim53^0'=ddim53^post15, dotp14^0'=dotp14^post15, f36^0'=f36^post15, g51^0'=g51^post15, h031^0'=h031^post15, h132^0'=h132^post15, i13^0'=i13^post15, i19^0'=i19^post15, i25^0'=i25^post15, i37^0'=i37^post15, i61^0'=i61^post15, j20^0'=j20^post15, j26^0'=j26^post15, j55^0'=j55^post15, j62^0'=j62^post15, k63^0'=k63^post15, m64^0'=m64^post15, mask47^0'=mask47^post15, n35^0'=n35^post15, n45^0'=n45^post15, n65^0'=n65^post15, numbasis49^0'=numbasis49^post15, p66^0'=p66^post15, ret_codebook57^0'=ret_codebook57^post15, ret_latsynth38^0'=ret_latsynth38^post15, ret_mac15^0'=ret_mac15^post15, sqr11^0'=sqr11^post15, sum027^0'=sum027^post15, sum128^0'=sum128^post15, sum21^0'=sum21^post15, t44^0'=t44^post15, theta54^0'=theta54^post15, tmp^0'=tmp^post15, tmp___0^0'=tmp___0^post15, tmpmask56^0'=tmpmask56^post15, x029^0'=x029^post15, x130^0'=x130^post15, x43^0'=x43^post15, (x029^0-x029^post15 == 0 /\ f36^0-f36^post15 == 0 /\ -i13^post15+i13^0 == 0 /\ sum21^0-sum21^post15 == 0 /\ -bitchanged48^post15+bitchanged48^0 == 0 /\ -h031^post15+h031^0 == 0 /\ -theta54^post15+theta54^0 == 0 /\ -codeword50^post15+codeword50^0 == 0 /\ -dotp14^post15+dotp14^0 == 0 /\ -d^post15+d^0 == 0 /\ j55^0-j55^post15 == 0 /\ tmp^0-tmp^post15 == 0 /\ -ret_mac15^post15+ret_mac15^0 == 0 /\ n65^0-n65^post15 == 0 /\ -sum128^post15+sum128^0 == 0 /\ -t44^post15+t44^0 == 0 /\ numbasis49^0-numbasis49^post15 == 0 /\ ret_latsynth38^0-ret_latsynth38^post15 == 0 /\ -x130^post15+x130^0 == 0 /\ ddim53^0-ddim53^post15 == 0 /\ -p66^post15+p66^0 == 0 /\ -i37^post15+i37^0 == 0 /\ i25^0-i25^post15 == 0 /\ m64^0-m64^post15 == 0 /\ g51^0-g51^post15 == 0 /\ sqr11^0-sqr11^post15 == 0 /\ mask47^0-mask47^post15 == 0 /\ -n45^post15+n45^0 == 0 /\ ret_codebook57^0-ret_codebook57^post15 == 0 /\ c^0-c^post15 == 0 /\ -k63^post15+k63^0 == 0 /\ -j20^post15+j20^0 == 0 /\ -j26^post15+j26^0 == 0 /\ -n35^post15+n35^0 == 0 /\ -j62^post15+j62^0 == 0 /\ h132^0-h132^post15 == 0 /\ i61^0-i61^post15 == 0 /\ -sum027^post15+sum027^0 == 0 /\ -x43^post15+x43^0 == 0 /\ -i19^post15+i19^0 == 0 /\ -tmpmask56^post15+tmpmask56^0 == 0 /\ tmp___0^0-tmp___0^post15 == 0), cost: 1
	New rule:
	l16 -> l15 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality x029^post15 = x029^0
		
		propagated equality f36^post15 = f36^0
		
		propagated equality i13^post15 = i13^0
		
		propagated equality sum21^post15 = sum21^0
		
		propagated equality bitchanged48^post15 = bitchanged48^0
		
		propagated equality h031^post15 = h031^0
		
		propagated equality theta54^post15 = theta54^0
		
		propagated equality codeword50^post15 = codeword50^0
		
		propagated equality dotp14^post15 = dotp14^0
		
		propagated equality d^post15 = d^0
		
		propagated equality j55^post15 = j55^0
		
		propagated equality tmp^post15 = tmp^0
		
		propagated equality ret_mac15^post15 = ret_mac15^0
		
		propagated equality n65^post15 = n65^0
		
		propagated equality sum128^post15 = sum128^0
		
		propagated equality t44^post15 = t44^0
		
		propagated equality numbasis49^post15 = numbasis49^0
		
		propagated equality ret_latsynth38^post15 = ret_latsynth38^0
		
		propagated equality x130^post15 = x130^0
		
		propagated equality ddim53^post15 = ddim53^0
		
		propagated equality p66^post15 = p66^0
		
		propagated equality i37^post15 = i37^0
		
		propagated equality i25^post15 = i25^0
		
		propagated equality m64^post15 = m64^0
		
		propagated equality g51^post15 = g51^0
		
		propagated equality sqr11^post15 = sqr11^0
		
		propagated equality mask47^post15 = mask47^0
		
		propagated equality n45^post15 = n45^0
		
		propagated equality ret_codebook57^post15 = ret_codebook57^0
		
		propagated equality c^post15 = c^0
		
		propagated equality k63^post15 = k63^0
		
		propagated equality j20^post15 = j20^0
		
		propagated equality j26^post15 = j26^0
		
		propagated equality n35^post15 = n35^0
		
		propagated equality j62^post15 = j62^0
		
		propagated equality h132^post15 = h132^0
		
		propagated equality i61^post15 = i61^0
		
		propagated equality sum027^post15 = sum027^0
		
		propagated equality x43^post15 = x43^0
		
		propagated equality i19^post15 = i19^0
		
		propagated equality tmpmask56^post15 = tmpmask56^0
		
		propagated equality tmp___0^post15 = tmp___0^0
		
	Simplified Guard

	Original rule:
	l16 -> l15 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l16 -> l15 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l16 -> l15 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l16 -> l15 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l6 : bitchanged48^0'=bitchanged48^post16, c^0'=c^post16, codeword50^0'=codeword50^post16, d^0'=d^post16, ddim53^0'=ddim53^post16, dotp14^0'=dotp14^post16, f36^0'=f36^post16, g51^0'=g51^post16, h031^0'=h031^post16, h132^0'=h132^post16, i13^0'=i13^post16, i19^0'=i19^post16, i25^0'=i25^post16, i37^0'=i37^post16, i61^0'=i61^post16, j20^0'=j20^post16, j26^0'=j26^post16, j55^0'=j55^post16, j62^0'=j62^post16, k63^0'=k63^post16, m64^0'=m64^post16, mask47^0'=mask47^post16, n35^0'=n35^post16, n45^0'=n45^post16, n65^0'=n65^post16, numbasis49^0'=numbasis49^post16, p66^0'=p66^post16, ret_codebook57^0'=ret_codebook57^post16, ret_latsynth38^0'=ret_latsynth38^post16, ret_mac15^0'=ret_mac15^post16, sqr11^0'=sqr11^post16, sum027^0'=sum027^post16, sum128^0'=sum128^post16, sum21^0'=sum21^post16, t44^0'=t44^post16, theta54^0'=theta54^post16, tmp^0'=tmp^post16, tmp___0^0'=tmp___0^post16, tmpmask56^0'=tmpmask56^post16, x029^0'=x029^post16, x130^0'=x130^post16, x43^0'=x43^post16, (0 == 0 /\ i25^0-i25^post16 == 0 /\ -dotp14^post16+dotp14^0 == 0 /\ j55^0-j55^post16 == 0 /\ ret_latsynth38^post16-f36^0 == 0 /\ f36^0-f36^post16 == 0 /\ sum21^0-sum21^post16 == 0 /\ -i37^post16+i37^0 == 0 /\ m64^0-m64^post16 == 0 /\ -i19^post16+i19^0 == 0 /\ -i13^post16+i13^0 == 0 /\ i61^0-i61^post16 == 0 /\ ret_codebook57^0-ret_codebook57^post16 == 0 /\ -h031^post16+h031^0 == 0 /\ ddim53^0-ddim53^post16 == 0 /\ -sum128^post16+sum128^0 == 0 /\ -tmp___0^post16+tmp___0^0 == 0 /\ x130^0-x130^post16 == 0 /\ -tmpmask56^post16+tmpmask56^0 == 0 /\ -k63^post16+k63^0 == 0 /\ -mask47^post16+mask47^0 == 0 /\ -bitchanged48^post16+bitchanged48^0 == 0 /\ 1+i37^0 <= 0 /\ x029^0-x029^post16 == 0 /\ j26^0-j26^post16 == 0 /\ -ret_latsynth38^post16+d^post16 == 0 /\ g51^0-g51^post16 == 0 /\ tmp^0-tmp^post16 == 0 /\ -theta54^post16+theta54^0 == 0 /\ -ret_mac15^post16+ret_mac15^0 == 0 /\ n45^post16 == 0 /\ -p66^post16+p66^0 == 0 /\ t44^0-t44^post16 == 0 /\ sqr11^0-sqr11^post16 == 0 /\ -sum027^post16+sum027^0 == 0 /\ n35^0-n35^post16 == 0 /\ h132^0-h132^post16 == 0 /\ -j20^post16+j20^0 == 0 /\ -j62^post16+j62^0 == 0 /\ c^0-c^post16 == 0 /\ n65^0-n65^post16 == 0 /\ -codeword50^post16+codeword50^0 == 0 /\ numbasis49^0-numbasis49^post16 == 0), cost: 1
	New rule:
	l5 -> l6 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=f36^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=f36^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^post16, (0 == 0 /\ 1+i37^0 <= 0), cost: 1
	
		propagated equality i25^post16 = i25^0
		
		propagated equality dotp14^post16 = dotp14^0
		
		propagated equality j55^post16 = j55^0
		
		propagated equality ret_latsynth38^post16 = f36^0
		
		propagated equality f36^post16 = f36^0
		
		propagated equality sum21^post16 = sum21^0
		
		propagated equality i37^post16 = i37^0
		
		propagated equality m64^post16 = m64^0
		
		propagated equality i19^post16 = i19^0
		
		propagated equality i13^post16 = i13^0
		
		propagated equality i61^post16 = i61^0
		
		propagated equality ret_codebook57^post16 = ret_codebook57^0
		
		propagated equality h031^post16 = h031^0
		
		propagated equality ddim53^post16 = ddim53^0
		
		propagated equality sum128^post16 = sum128^0
		
		propagated equality tmp___0^post16 = tmp___0^0
		
		propagated equality x130^post16 = x130^0
		
		propagated equality tmpmask56^post16 = tmpmask56^0
		
		propagated equality k63^post16 = k63^0
		
		propagated equality mask47^post16 = mask47^0
		
		propagated equality bitchanged48^post16 = bitchanged48^0
		
		propagated equality x029^post16 = x029^0
		
		propagated equality j26^post16 = j26^0
		
		propagated equality d^post16 = f36^0
		
		propagated equality g51^post16 = g51^0
		
		propagated equality tmp^post16 = tmp^0
		
		propagated equality theta54^post16 = theta54^0
		
		propagated equality ret_mac15^post16 = ret_mac15^0
		
		propagated equality n45^post16 = 0
		
		propagated equality p66^post16 = p66^0
		
		propagated equality t44^post16 = t44^0
		
		propagated equality sqr11^post16 = sqr11^0
		
		propagated equality sum027^post16 = sum027^0
		
		propagated equality n35^post16 = n35^0
		
		propagated equality h132^post16 = h132^0
		
		propagated equality j20^post16 = j20^0
		
		propagated equality j62^post16 = j62^0
		
		propagated equality c^post16 = c^0
		
		propagated equality n65^post16 = n65^0
		
		propagated equality codeword50^post16 = codeword50^0
		
		propagated equality numbasis49^post16 = numbasis49^0
		
	Simplified Guard

	Original rule:
	l5 -> l6 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=f36^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=f36^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^post16, (0 == 0 /\ 1+i37^0 <= 0), cost: 1
	New rule:
	l5 -> l6 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=f36^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=f36^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l6 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=f36^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=f36^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
	New rule:
	l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l4 : bitchanged48^0'=bitchanged48^post17, c^0'=c^post17, codeword50^0'=codeword50^post17, d^0'=d^post17, ddim53^0'=ddim53^post17, dotp14^0'=dotp14^post17, f36^0'=f36^post17, g51^0'=g51^post17, h031^0'=h031^post17, h132^0'=h132^post17, i13^0'=i13^post17, i19^0'=i19^post17, i25^0'=i25^post17, i37^0'=i37^post17, i61^0'=i61^post17, j20^0'=j20^post17, j26^0'=j26^post17, j55^0'=j55^post17, j62^0'=j62^post17, k63^0'=k63^post17, m64^0'=m64^post17, mask47^0'=mask47^post17, n35^0'=n35^post17, n45^0'=n45^post17, n65^0'=n65^post17, numbasis49^0'=numbasis49^post17, p66^0'=p66^post17, ret_codebook57^0'=ret_codebook57^post17, ret_latsynth38^0'=ret_latsynth38^post17, ret_mac15^0'=ret_mac15^post17, sqr11^0'=sqr11^post17, sum027^0'=sum027^post17, sum128^0'=sum128^post17, sum21^0'=sum21^post17, t44^0'=t44^post17, theta54^0'=theta54^post17, tmp^0'=tmp^post17, tmp___0^0'=tmp___0^post17, tmpmask56^0'=tmpmask56^post17, x029^0'=x029^post17, x130^0'=x130^post17, x43^0'=x43^post17, (0 == 0 /\ -bitchanged48^post17+bitchanged48^0 == 0 /\ -dotp14^post17+dotp14^0 == 0 /\ -theta54^post17+theta54^0 == 0 /\ j55^0-j55^post17 == 0 /\ i25^0-i25^post17 == 0 /\ -codeword50^post17+codeword50^0 == 0 /\ i61^0-i61^post17 == 0 /\ sqr11^0-sqr11^post17 == 0 /\ ddim53^0-ddim53^post17 == 0 /\ -sum128^post17+sum128^0 == 0 /\ -i19^post17+i19^0 == 0 /\ -numbasis49^post17+numbasis49^0 == 0 /\ -j26^post17+j26^0 == 0 /\ -j62^post17+j62^0 == 0 /\ tmp___0^0-tmp___0^post17 == 0 /\ d^0-d^post17 == 0 /\ 1+i37^post17-i37^0 == 0 /\ n65^0-n65^post17 == 0 /\ t44^0-t44^post17 == 0 /\ g51^0-g51^post17 == 0 /\ x43^0-x43^post17 == 0 /\ c^0-c^post17 == 0 /\ n35^0-n35^post17 == 0 /\ -i37^0 <= 0 /\ -p66^post17+p66^0 == 0 /\ mask47^0-mask47^post17 == 0 /\ ret_codebook57^0-ret_codebook57^post17 == 0 /\ -ret_mac15^post17+ret_mac15^0 == 0 /\ -x029^post17+x029^0 == 0 /\ -sum21^post17+sum21^0 == 0 /\ sum027^0-sum027^post17 == 0 /\ -tmpmask56^post17+tmpmask56^0 == 0 /\ -n45^post17+n45^0 == 0 /\ -i13^post17+i13^0 == 0 /\ -k63^post17+k63^0 == 0 /\ -x130^post17+x130^0 == 0 /\ -h031^post17+h031^0 == 0 /\ tmp^0-tmp^post17 == 0 /\ h132^0-h132^post17 == 0 /\ ret_latsynth38^0-ret_latsynth38^post17 == 0 /\ -j20^post17+j20^0 == 0 /\ m64^0-m64^post17 == 0), cost: 1
	New rule:
	l5 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post17, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=-1+i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -i37^0 <= 0), cost: 1
	
		propagated equality bitchanged48^post17 = bitchanged48^0
		
		propagated equality dotp14^post17 = dotp14^0
		
		propagated equality theta54^post17 = theta54^0
		
		propagated equality j55^post17 = j55^0
		
		propagated equality i25^post17 = i25^0
		
		propagated equality codeword50^post17 = codeword50^0
		
		propagated equality i61^post17 = i61^0
		
		propagated equality sqr11^post17 = sqr11^0
		
		propagated equality ddim53^post17 = ddim53^0
		
		propagated equality sum128^post17 = sum128^0
		
		propagated equality i19^post17 = i19^0
		
		propagated equality numbasis49^post17 = numbasis49^0
		
		propagated equality j26^post17 = j26^0
		
		propagated equality j62^post17 = j62^0
		
		propagated equality tmp___0^post17 = tmp___0^0
		
		propagated equality d^post17 = d^0
		
		propagated equality i37^post17 = -1+i37^0
		
		propagated equality n65^post17 = n65^0
		
		propagated equality t44^post17 = t44^0
		
		propagated equality g51^post17 = g51^0
		
		propagated equality x43^post17 = x43^0
		
		propagated equality c^post17 = c^0
		
		propagated equality n35^post17 = n35^0
		
		propagated equality p66^post17 = p66^0
		
		propagated equality mask47^post17 = mask47^0
		
		propagated equality ret_codebook57^post17 = ret_codebook57^0
		
		propagated equality ret_mac15^post17 = ret_mac15^0
		
		propagated equality x029^post17 = x029^0
		
		propagated equality sum21^post17 = sum21^0
		
		propagated equality sum027^post17 = sum027^0
		
		propagated equality tmpmask56^post17 = tmpmask56^0
		
		propagated equality n45^post17 = n45^0
		
		propagated equality i13^post17 = i13^0
		
		propagated equality k63^post17 = k63^0
		
		propagated equality x130^post17 = x130^0
		
		propagated equality h031^post17 = h031^0
		
		propagated equality tmp^post17 = tmp^0
		
		propagated equality h132^post17 = h132^0
		
		propagated equality ret_latsynth38^post17 = ret_latsynth38^0
		
		propagated equality j20^post17 = j20^0
		
		propagated equality m64^post17 = m64^0
		
	Simplified Guard

	Original rule:
	l5 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post17, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=-1+i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -i37^0 <= 0), cost: 1
	New rule:
	l5 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post17, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=-1+i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -i37^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post17, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=-1+i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -i37^0 <= 0, cost: 1
	New rule:
	l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l0 : bitchanged48^0'=bitchanged48^post18, c^0'=c^post18, codeword50^0'=codeword50^post18, d^0'=d^post18, ddim53^0'=ddim53^post18, dotp14^0'=dotp14^post18, f36^0'=f36^post18, g51^0'=g51^post18, h031^0'=h031^post18, h132^0'=h132^post18, i13^0'=i13^post18, i19^0'=i19^post18, i25^0'=i25^post18, i37^0'=i37^post18, i61^0'=i61^post18, j20^0'=j20^post18, j26^0'=j26^post18, j55^0'=j55^post18, j62^0'=j62^post18, k63^0'=k63^post18, m64^0'=m64^post18, mask47^0'=mask47^post18, n35^0'=n35^post18, n45^0'=n45^post18, n65^0'=n65^post18, numbasis49^0'=numbasis49^post18, p66^0'=p66^post18, ret_codebook57^0'=ret_codebook57^post18, ret_latsynth38^0'=ret_latsynth38^post18, ret_mac15^0'=ret_mac15^post18, sqr11^0'=sqr11^post18, sum027^0'=sum027^post18, sum128^0'=sum128^post18, sum21^0'=sum21^post18, t44^0'=t44^post18, theta54^0'=theta54^post18, tmp^0'=tmp^post18, tmp___0^0'=tmp___0^post18, tmpmask56^0'=tmpmask56^post18, x029^0'=x029^post18, x130^0'=x130^post18, x43^0'=x43^post18, (-tmp___0^post18+tmp___0^0 == 0 /\ -t44^post18+t44^0 == 0 /\ -sum128^post18+sum128^0 == 0 /\ -sum027^post18+sum027^0 == 0 /\ -x130^post18+x130^0 == 0 /\ -x43^post18+x43^0 == 0 /\ i25^0-i25^post18 == 0 /\ f36^0-f36^post18 == 0 /\ -i13^post18+i13^0 == 0 /\ -i19^post18+i19^0 == 0 /\ -i37^post18+i37^0 == 0 /\ -h031^post18+h031^0 == 0 /\ ddim53^0-ddim53^post18 == 0 /\ n65^0-n65^post18 == 0 /\ -j20^post18+j20^0 == 0 /\ -dotp14^post18+dotp14^0 == 0 /\ -d^post18+d^0 == 0 /\ -k63^post18+k63^0 == 0 /\ x029^0-x029^post18 == 0 /\ tmp^0-tmp^post18 == 0 /\ numbasis49^0-numbasis49^post18 == 0 /\ mask47^0-mask47^post18 == 0 /\ -tmpmask56^post18+tmpmask56^0 == 0 /\ -ret_mac15^post18+ret_mac15^0 == 0 /\ g51^0-g51^post18 == 0 /\ -2+j26^post18-j26^0 == 0 /\ m64^0-m64^post18 == 0 /\ sqr11^0-sqr11^post18 == 0 /\ -n35^post18+n35^0 == 0 /\ c^0-c^post18 == 0 /\ -n45^post18+n45^0 == 0 /\ -p66^post18+p66^0 == 0 /\ ret_codebook57^0-ret_codebook57^post18 == 0 /\ -theta54^post18+theta54^0 == 0 /\ j55^0-j55^post18 == 0 /\ h132^0-h132^post18 == 0 /\ 32-i25^0 <= 0 /\ -bitchanged48^post18+bitchanged48^0 == 0 /\ j62^0-j62^post18 == 0 /\ ret_latsynth38^0-ret_latsynth38^post18 == 0 /\ i61^0-i61^post18 == 0 /\ sum21^0-sum21^post18 == 0 /\ -codeword50^post18+codeword50^0 == 0), cost: 1
	New rule:
	l3 -> l0 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=2+j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 32-i25^0 <= 0), cost: 1
	
		propagated equality tmp___0^post18 = tmp___0^0
		
		propagated equality t44^post18 = t44^0
		
		propagated equality sum128^post18 = sum128^0
		
		propagated equality sum027^post18 = sum027^0
		
		propagated equality x130^post18 = x130^0
		
		propagated equality x43^post18 = x43^0
		
		propagated equality i25^post18 = i25^0
		
		propagated equality f36^post18 = f36^0
		
		propagated equality i13^post18 = i13^0
		
		propagated equality i19^post18 = i19^0
		
		propagated equality i37^post18 = i37^0
		
		propagated equality h031^post18 = h031^0
		
		propagated equality ddim53^post18 = ddim53^0
		
		propagated equality n65^post18 = n65^0
		
		propagated equality j20^post18 = j20^0
		
		propagated equality dotp14^post18 = dotp14^0
		
		propagated equality d^post18 = d^0
		
		propagated equality k63^post18 = k63^0
		
		propagated equality x029^post18 = x029^0
		
		propagated equality tmp^post18 = tmp^0
		
		propagated equality numbasis49^post18 = numbasis49^0
		
		propagated equality mask47^post18 = mask47^0
		
		propagated equality tmpmask56^post18 = tmpmask56^0
		
		propagated equality ret_mac15^post18 = ret_mac15^0
		
		propagated equality g51^post18 = g51^0
		
		propagated equality j26^post18 = 2+j26^0
		
		propagated equality m64^post18 = m64^0
		
		propagated equality sqr11^post18 = sqr11^0
		
		propagated equality n35^post18 = n35^0
		
		propagated equality c^post18 = c^0
		
		propagated equality n45^post18 = n45^0
		
		propagated equality p66^post18 = p66^0
		
		propagated equality ret_codebook57^post18 = ret_codebook57^0
		
		propagated equality theta54^post18 = theta54^0
		
		propagated equality j55^post18 = j55^0
		
		propagated equality h132^post18 = h132^0
		
		propagated equality bitchanged48^post18 = bitchanged48^0
		
		propagated equality j62^post18 = j62^0
		
		propagated equality ret_latsynth38^post18 = ret_latsynth38^0
		
		propagated equality i61^post18 = i61^0
		
		propagated equality sum21^post18 = sum21^0
		
		propagated equality codeword50^post18 = codeword50^0
		
	Simplified Guard

	Original rule:
	l3 -> l0 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=2+j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 32-i25^0 <= 0), cost: 1
	New rule:
	l3 -> l0 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=2+j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 32-i25^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l0 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=2+j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 32-i25^0 <= 0, cost: 1
	New rule:
	l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l2 : bitchanged48^0'=bitchanged48^post19, c^0'=c^post19, codeword50^0'=codeword50^post19, d^0'=d^post19, ddim53^0'=ddim53^post19, dotp14^0'=dotp14^post19, f36^0'=f36^post19, g51^0'=g51^post19, h031^0'=h031^post19, h132^0'=h132^post19, i13^0'=i13^post19, i19^0'=i19^post19, i25^0'=i25^post19, i37^0'=i37^post19, i61^0'=i61^post19, j20^0'=j20^post19, j26^0'=j26^post19, j55^0'=j55^post19, j62^0'=j62^post19, k63^0'=k63^post19, m64^0'=m64^post19, mask47^0'=mask47^post19, n35^0'=n35^post19, n45^0'=n45^post19, n65^0'=n65^post19, numbasis49^0'=numbasis49^post19, p66^0'=p66^post19, ret_codebook57^0'=ret_codebook57^post19, ret_latsynth38^0'=ret_latsynth38^post19, ret_mac15^0'=ret_mac15^post19, sqr11^0'=sqr11^post19, sum027^0'=sum027^post19, sum128^0'=sum128^post19, sum21^0'=sum21^post19, t44^0'=t44^post19, theta54^0'=theta54^post19, tmp^0'=tmp^post19, tmp___0^0'=tmp___0^post19, tmpmask56^0'=tmpmask56^post19, x029^0'=x029^post19, x130^0'=x130^post19, x43^0'=x43^post19, (0 == 0 /\ codeword50^0-codeword50^post19 == 0 /\ -2+i25^post19-i25^0 == 0 /\ -31+i25^0 <= 0 /\ -theta54^post19+theta54^0 == 0 /\ -i13^post19+i13^0 == 0 /\ -j62^post19+j62^0 == 0 /\ i19^0-i19^post19 == 0 /\ numbasis49^0-numbasis49^post19 == 0 /\ -p66^post19+p66^0 == 0 /\ -n65^post19+n65^0 == 0 /\ t44^0-t44^post19 == 0 /\ tmp___0^0-tmp___0^post19 == 0 /\ -j20^post19+j20^0 == 0 /\ -f36^post19+f36^0 == 0 /\ n35^0-n35^post19 == 0 /\ ret_codebook57^0-ret_codebook57^post19 == 0 /\ ret_latsynth38^0-ret_latsynth38^post19 == 0 /\ mask47^0-mask47^post19 == 0 /\ -sum21^post19+sum21^0 == 0 /\ c^0-c^post19 == 0 /\ dotp14^0-dotp14^post19 == 0 /\ sqr11^0-sqr11^post19 == 0 /\ -i37^post19+i37^0 == 0 /\ tmp^0-tmp^post19 == 0 /\ j55^0-j55^post19 == 0 /\ -k63^post19+k63^0 == 0 /\ -bitchanged48^post19+bitchanged48^0 == 0 /\ x43^0-x43^post19 == 0 /\ -j26^post19+j26^0 == 0 /\ -d^post19+d^0 == 0 /\ -ret_mac15^post19+ret_mac15^0 == 0 /\ g51^0-g51^post19 == 0 /\ i61^0-i61^post19 == 0 /\ ddim53^0-ddim53^post19 == 0 /\ -n45^post19+n45^0 == 0 /\ -tmpmask56^post19+tmpmask56^0 == 0 /\ m64^0-m64^post19 == 0), cost: 1
	New rule:
	l3 -> l2 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^post19, h132^0'=h132^post19, i13^0'=i13^0, i19^0'=i19^0, i25^0'=2+i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^post19, x130^0'=x130^post19, x43^0'=x43^0, (0 == 0 /\ -31+i25^0 <= 0), cost: 1
	
		propagated equality codeword50^post19 = codeword50^0
		
		propagated equality i25^post19 = 2+i25^0
		
		propagated equality theta54^post19 = theta54^0
		
		propagated equality i13^post19 = i13^0
		
		propagated equality j62^post19 = j62^0
		
		propagated equality i19^post19 = i19^0
		
		propagated equality numbasis49^post19 = numbasis49^0
		
		propagated equality p66^post19 = p66^0
		
		propagated equality n65^post19 = n65^0
		
		propagated equality t44^post19 = t44^0
		
		propagated equality tmp___0^post19 = tmp___0^0
		
		propagated equality j20^post19 = j20^0
		
		propagated equality f36^post19 = f36^0
		
		propagated equality n35^post19 = n35^0
		
		propagated equality ret_codebook57^post19 = ret_codebook57^0
		
		propagated equality ret_latsynth38^post19 = ret_latsynth38^0
		
		propagated equality mask47^post19 = mask47^0
		
		propagated equality sum21^post19 = sum21^0
		
		propagated equality c^post19 = c^0
		
		propagated equality dotp14^post19 = dotp14^0
		
		propagated equality sqr11^post19 = sqr11^0
		
		propagated equality i37^post19 = i37^0
		
		propagated equality tmp^post19 = tmp^0
		
		propagated equality j55^post19 = j55^0
		
		propagated equality k63^post19 = k63^0
		
		propagated equality bitchanged48^post19 = bitchanged48^0
		
		propagated equality x43^post19 = x43^0
		
		propagated equality j26^post19 = j26^0
		
		propagated equality d^post19 = d^0
		
		propagated equality ret_mac15^post19 = ret_mac15^0
		
		propagated equality g51^post19 = g51^0
		
		propagated equality i61^post19 = i61^0
		
		propagated equality ddim53^post19 = ddim53^0
		
		propagated equality n45^post19 = n45^0
		
		propagated equality tmpmask56^post19 = tmpmask56^0
		
		propagated equality m64^post19 = m64^0
		
	Simplified Guard

	Original rule:
	l3 -> l2 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^post19, h132^0'=h132^post19, i13^0'=i13^0, i19^0'=i19^0, i25^0'=2+i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^post19, x130^0'=x130^post19, x43^0'=x43^0, (0 == 0 /\ -31+i25^0 <= 0), cost: 1
	New rule:
	l3 -> l2 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^post19, h132^0'=h132^post19, i13^0'=i13^0, i19^0'=i19^0, i25^0'=2+i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^post19, x130^0'=x130^post19, x43^0'=x43^0, -31+i25^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l2 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^post19, h132^0'=h132^post19, i13^0'=i13^0, i19^0'=i19^0, i25^0'=2+i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^post19, x130^0'=x130^post19, x43^0'=x43^0, -31+i25^0 <= 0, cost: 1
	New rule:
	l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l4 : bitchanged48^0'=bitchanged48^post20, c^0'=c^post20, codeword50^0'=codeword50^post20, d^0'=d^post20, ddim53^0'=ddim53^post20, dotp14^0'=dotp14^post20, f36^0'=f36^post20, g51^0'=g51^post20, h031^0'=h031^post20, h132^0'=h132^post20, i13^0'=i13^post20, i19^0'=i19^post20, i25^0'=i25^post20, i37^0'=i37^post20, i61^0'=i61^post20, j20^0'=j20^post20, j26^0'=j26^post20, j55^0'=j55^post20, j62^0'=j62^post20, k63^0'=k63^post20, m64^0'=m64^post20, mask47^0'=mask47^post20, n35^0'=n35^post20, n45^0'=n45^post20, n65^0'=n65^post20, numbasis49^0'=numbasis49^post20, p66^0'=p66^post20, ret_codebook57^0'=ret_codebook57^post20, ret_latsynth38^0'=ret_latsynth38^post20, ret_mac15^0'=ret_mac15^post20, sqr11^0'=sqr11^post20, sum027^0'=sum027^post20, sum128^0'=sum128^post20, sum21^0'=sum21^post20, t44^0'=t44^post20, theta54^0'=theta54^post20, tmp^0'=tmp^post20, tmp___0^0'=tmp___0^post20, tmpmask56^0'=tmpmask56^post20, x029^0'=x029^post20, x130^0'=x130^post20, x43^0'=x43^post20, (0 == 0 /\ -i61^post20+i61^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ numbasis49^0-numbasis49^post20 == 0 /\ x43^0-x43^post20 == 0 /\ 100-j26^0 <= 0 /\ -d^post20+d^0 == 0 /\ sum128^0-sum128^post20 == 0 /\ -dotp14^post20+dotp14^0 == 0 /\ -bitchanged48^post20+bitchanged48^0 == 0 /\ theta54^0-theta54^post20 == 0 /\ -codeword50^post20+codeword50^0 == 0 /\ 2-n35^post20+i37^post20 == 0 /\ -g51^post20+g51^0 == 0 /\ sum027^0-sum027^post20 == 0 /\ -i19^post20+i19^0 == 0 /\ ret_mac15^0-ret_mac15^post20 == 0 /\ ddim53^0-ddim53^post20 == 0 /\ -n45^post20+n45^0 == 0 /\ k63^0-k63^post20 == 0 /\ -j62^post20+j62^0 == 0 /\ h132^0-h132^post20 == 0 /\ ret_latsynth38^0-ret_latsynth38^post20 == 0 /\ -100+n35^post20 == 0 /\ f36^1-d^0 == 0 /\ m64^0-m64^post20 == 0 /\ c^0-c^post20 == 0 /\ -ret_codebook57^post20+ret_codebook57^0 == 0 /\ -sqr11^post20+sqr11^0 == 0 /\ -i13^post20+i13^0 == 0 /\ -h031^post20+h031^0 == 0 /\ x029^0-x029^post20 == 0 /\ -tmpmask56^post20+tmpmask56^0 == 0 /\ -sum21^post20+sum21^0 == 0 /\ -tmp___0^post20+tmp___0^0 == 0 /\ -mask47^post20+mask47^0 == 0 /\ -j55^post20+j55^0 == 0 /\ -p66^post20+p66^0 == 0 /\ -n65^post20+n65^0 == 0 /\ -x130^post20+x130^0 == 0 /\ j26^0-j26^post20 == 0 /\ i25^0-i25^post20 == 0 /\ t44^0-t44^post20 == 0 /\ -j20^post20+j20^0 == 0), cost: 1
	New rule:
	l1 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post20, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=98, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=100, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 100-j26^0 <= 0 /\ f36^1-d^0 == 0), cost: 1
	
		propagated equality i61^post20 = i61^0
		
		propagated equality tmp^post20 = tmp^0
		
		propagated equality numbasis49^post20 = numbasis49^0
		
		propagated equality x43^post20 = x43^0
		
		propagated equality d^post20 = d^0
		
		propagated equality sum128^post20 = sum128^0
		
		propagated equality dotp14^post20 = dotp14^0
		
		propagated equality bitchanged48^post20 = bitchanged48^0
		
		propagated equality theta54^post20 = theta54^0
		
		propagated equality codeword50^post20 = codeword50^0
		
		propagated equality i37^post20 = -2+n35^post20
		
		propagated equality g51^post20 = g51^0
		
		propagated equality sum027^post20 = sum027^0
		
		propagated equality i19^post20 = i19^0
		
		propagated equality ret_mac15^post20 = ret_mac15^0
		
		propagated equality ddim53^post20 = ddim53^0
		
		propagated equality n45^post20 = n45^0
		
		propagated equality k63^post20 = k63^0
		
		propagated equality j62^post20 = j62^0
		
		propagated equality h132^post20 = h132^0
		
		propagated equality ret_latsynth38^post20 = ret_latsynth38^0
		
		propagated equality n35^post20 = 100
		
		propagated equality m64^post20 = m64^0
		
		propagated equality c^post20 = c^0
		
		propagated equality ret_codebook57^post20 = ret_codebook57^0
		
		propagated equality sqr11^post20 = sqr11^0
		
		propagated equality i13^post20 = i13^0
		
		propagated equality h031^post20 = h031^0
		
		propagated equality x029^post20 = x029^0
		
		propagated equality tmpmask56^post20 = tmpmask56^0
		
		propagated equality sum21^post20 = sum21^0
		
		propagated equality tmp___0^post20 = tmp___0^0
		
		propagated equality mask47^post20 = mask47^0
		
		propagated equality j55^post20 = j55^0
		
		propagated equality p66^post20 = p66^0
		
		propagated equality n65^post20 = n65^0
		
		propagated equality x130^post20 = x130^0
		
		propagated equality j26^post20 = j26^0
		
		propagated equality i25^post20 = i25^0
		
		propagated equality t44^post20 = t44^0
		
		propagated equality j20^post20 = j20^0
		
	Propagated Equalities

	Original rule:
	l1 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post20, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=98, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=100, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 100-j26^0 <= 0 /\ f36^1-d^0 == 0), cost: 1
	New rule:
	l1 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post20, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=98, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=100, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 100-j26^0 <= 0), cost: 1
	
		propagated equality f36^1 = d^0
		
	Simplified Guard

	Original rule:
	l1 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post20, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=98, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=100, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 100-j26^0 <= 0), cost: 1
	New rule:
	l1 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post20, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=98, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=100, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 100-j26^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l4 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^post20, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=98, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=100, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 100-j26^0 <= 0, cost: 1
	New rule:
	l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l2 : bitchanged48^0'=bitchanged48^post21, c^0'=c^post21, codeword50^0'=codeword50^post21, d^0'=d^post21, ddim53^0'=ddim53^post21, dotp14^0'=dotp14^post21, f36^0'=f36^post21, g51^0'=g51^post21, h031^0'=h031^post21, h132^0'=h132^post21, i13^0'=i13^post21, i19^0'=i19^post21, i25^0'=i25^post21, i37^0'=i37^post21, i61^0'=i61^post21, j20^0'=j20^post21, j26^0'=j26^post21, j55^0'=j55^post21, j62^0'=j62^post21, k63^0'=k63^post21, m64^0'=m64^post21, mask47^0'=mask47^post21, n35^0'=n35^post21, n45^0'=n45^post21, n65^0'=n65^post21, numbasis49^0'=numbasis49^post21, p66^0'=p66^post21, ret_codebook57^0'=ret_codebook57^post21, ret_latsynth38^0'=ret_latsynth38^post21, ret_mac15^0'=ret_mac15^post21, sqr11^0'=sqr11^post21, sum027^0'=sum027^post21, sum128^0'=sum128^post21, sum21^0'=sum21^post21, t44^0'=t44^post21, theta54^0'=theta54^post21, tmp^0'=tmp^post21, tmp___0^0'=tmp___0^post21, tmpmask56^0'=tmpmask56^post21, x029^0'=x029^post21, x130^0'=x130^post21, x43^0'=x43^post21, (0 == 0 /\ bitchanged48^0-bitchanged48^post21 == 0 /\ -x43^post21+x43^0 == 0 /\ k63^0-k63^post21 == 0 /\ -x130^post21+x130^0 == 0 /\ sqr11^0-sqr11^post21 == 0 /\ -i19^post21+i19^0 == 0 /\ m64^0-m64^post21 == 0 /\ -h031^post21+h031^0 == 0 /\ -g51^post21+g51^0 == 0 /\ sum128^post21 == 0 /\ i13^0-i13^post21 == 0 /\ -99+j26^0 <= 0 /\ t44^0-t44^post21 == 0 /\ j55^0-j55^post21 == 0 /\ -j20^post21+j20^0 == 0 /\ h132^0-h132^post21 == 0 /\ -c^post21+c^0 == 0 /\ f36^0-f36^post21 == 0 /\ -dotp14^post21+dotp14^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post21 == 0 /\ -ret_mac15^post21+ret_mac15^0 == 0 /\ sum21^0-sum21^post21 == 0 /\ tmp___0^0-tmp___0^post21 == 0 /\ -tmpmask56^post21+tmpmask56^0 == 0 /\ -mask47^post21+mask47^0 == 0 /\ i25^post21 == 0 /\ -i37^post21+i37^0 == 0 /\ -n65^post21+n65^0 == 0 /\ -n45^post21+n45^0 == 0 /\ -i61^post21+i61^0 == 0 /\ j26^0-j26^post21 == 0 /\ -p66^post21+p66^0 == 0 /\ -ret_codebook57^post21+ret_codebook57^0 == 0 /\ d^0-d^post21 == 0 /\ -ddim53^post21+ddim53^0 == 0 /\ n35^0-n35^post21 == 0 /\ sum027^post21 == 0 /\ numbasis49^0-numbasis49^post21 == 0 /\ -j62^post21+j62^0 == 0 /\ -codeword50^post21+codeword50^0 == 0 /\ -theta54^post21+theta54^0 == 0 /\ tmp^0-tmp^post21 == 0), cost: 1
	New rule:
	l1 -> l2 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=0, sum128^0'=0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^post21, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -99+j26^0 <= 0), cost: 1
	
		propagated equality bitchanged48^post21 = bitchanged48^0
		
		propagated equality x43^post21 = x43^0
		
		propagated equality k63^post21 = k63^0
		
		propagated equality x130^post21 = x130^0
		
		propagated equality sqr11^post21 = sqr11^0
		
		propagated equality i19^post21 = i19^0
		
		propagated equality m64^post21 = m64^0
		
		propagated equality h031^post21 = h031^0
		
		propagated equality g51^post21 = g51^0
		
		propagated equality sum128^post21 = 0
		
		propagated equality i13^post21 = i13^0
		
		propagated equality t44^post21 = t44^0
		
		propagated equality j55^post21 = j55^0
		
		propagated equality j20^post21 = j20^0
		
		propagated equality h132^post21 = h132^0
		
		propagated equality c^post21 = c^0
		
		propagated equality f36^post21 = f36^0
		
		propagated equality dotp14^post21 = dotp14^0
		
		propagated equality ret_latsynth38^post21 = ret_latsynth38^0
		
		propagated equality ret_mac15^post21 = ret_mac15^0
		
		propagated equality sum21^post21 = sum21^0
		
		propagated equality tmp___0^post21 = tmp___0^0
		
		propagated equality tmpmask56^post21 = tmpmask56^0
		
		propagated equality mask47^post21 = mask47^0
		
		propagated equality i25^post21 = 0
		
		propagated equality i37^post21 = i37^0
		
		propagated equality n65^post21 = n65^0
		
		propagated equality n45^post21 = n45^0
		
		propagated equality i61^post21 = i61^0
		
		propagated equality j26^post21 = j26^0
		
		propagated equality p66^post21 = p66^0
		
		propagated equality ret_codebook57^post21 = ret_codebook57^0
		
		propagated equality d^post21 = d^0
		
		propagated equality ddim53^post21 = ddim53^0
		
		propagated equality n35^post21 = n35^0
		
		propagated equality sum027^post21 = 0
		
		propagated equality numbasis49^post21 = numbasis49^0
		
		propagated equality j62^post21 = j62^0
		
		propagated equality codeword50^post21 = codeword50^0
		
		propagated equality theta54^post21 = theta54^0
		
		propagated equality tmp^post21 = tmp^0
		
	Simplified Guard

	Original rule:
	l1 -> l2 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=0, sum128^0'=0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^post21, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -99+j26^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=0, sum128^0'=0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^post21, x130^0'=x130^0, x43^0'=x43^0, -99+j26^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=0, sum128^0'=0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^post21, x130^0'=x130^0, x43^0'=x43^0, -99+j26^0 <= 0, cost: 1
	New rule:
	l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l17 -> l18 : bitchanged48^0'=bitchanged48^post22, c^0'=c^post22, codeword50^0'=codeword50^post22, d^0'=d^post22, ddim53^0'=ddim53^post22, dotp14^0'=dotp14^post22, f36^0'=f36^post22, g51^0'=g51^post22, h031^0'=h031^post22, h132^0'=h132^post22, i13^0'=i13^post22, i19^0'=i19^post22, i25^0'=i25^post22, i37^0'=i37^post22, i61^0'=i61^post22, j20^0'=j20^post22, j26^0'=j26^post22, j55^0'=j55^post22, j62^0'=j62^post22, k63^0'=k63^post22, m64^0'=m64^post22, mask47^0'=mask47^post22, n35^0'=n35^post22, n45^0'=n45^post22, n65^0'=n65^post22, numbasis49^0'=numbasis49^post22, p66^0'=p66^post22, ret_codebook57^0'=ret_codebook57^post22, ret_latsynth38^0'=ret_latsynth38^post22, ret_mac15^0'=ret_mac15^post22, sqr11^0'=sqr11^post22, sum027^0'=sum027^post22, sum128^0'=sum128^post22, sum21^0'=sum21^post22, t44^0'=t44^post22, theta54^0'=theta54^post22, tmp^0'=tmp^post22, tmp___0^0'=tmp___0^post22, tmpmask56^0'=tmpmask56^post22, x029^0'=x029^post22, x130^0'=x130^post22, x43^0'=x43^post22, (sqr11^0-sqr11^post22 == 0 /\ -1-i19^0+i19^post22 == 0 /\ tmp^0-tmp^post22 == 0 /\ c^0-c^post22 == 0 /\ codeword50^0-codeword50^post22 == 0 /\ -k63^post22+k63^0 == 0 /\ -sum128^post22+sum128^0 == 0 /\ -bitchanged48^post22+bitchanged48^0 == 0 /\ g51^0-g51^post22 == 0 /\ 50-j20^0 <= 0 /\ h031^0-h031^post22 == 0 /\ m64^0-m64^post22 == 0 /\ -i37^post22+i37^0 == 0 /\ t44^0-t44^post22 == 0 /\ -h132^post22+h132^0 == 0 /\ -d^post22+d^0 == 0 /\ i61^0-i61^post22 == 0 /\ sum21^0-sum21^post22 == 0 /\ mask47^0-mask47^post22 == 0 /\ -numbasis49^post22+numbasis49^0 == 0 /\ -tmpmask56^post22+tmpmask56^0 == 0 /\ n65^0-n65^post22 == 0 /\ -x43^post22+x43^0 == 0 /\ -ret_mac15^post22+ret_mac15^0 == 0 /\ -n45^post22+n45^0 == 0 /\ -j20^post22+j20^0 == 0 /\ j55^0-j55^post22 == 0 /\ dotp14^0-dotp14^post22 == 0 /\ ddim53^0-ddim53^post22 == 0 /\ -theta54^post22+theta54^0 == 0 /\ sum027^0-sum027^post22 == 0 /\ j62^0-j62^post22 == 0 /\ tmp___0^0-tmp___0^post22 == 0 /\ -j26^post22+j26^0 == 0 /\ -f36^post22+f36^0 == 0 /\ x029^0-x029^post22 == 0 /\ ret_latsynth38^0-ret_latsynth38^post22 == 0 /\ -i25^post22+i25^0 == 0 /\ -i13^post22+i13^0 == 0 /\ ret_codebook57^0-ret_codebook57^post22 == 0 /\ -n35^post22+n35^0 == 0 /\ -x130^post22+x130^0 == 0 /\ -p66^post22+p66^0 == 0), cost: 1
	New rule:
	l17 -> l18 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=1+i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 50-j20^0 <= 0), cost: 1
	
		propagated equality sqr11^post22 = sqr11^0
		
		propagated equality i19^post22 = 1+i19^0
		
		propagated equality tmp^post22 = tmp^0
		
		propagated equality c^post22 = c^0
		
		propagated equality codeword50^post22 = codeword50^0
		
		propagated equality k63^post22 = k63^0
		
		propagated equality sum128^post22 = sum128^0
		
		propagated equality bitchanged48^post22 = bitchanged48^0
		
		propagated equality g51^post22 = g51^0
		
		propagated equality h031^post22 = h031^0
		
		propagated equality m64^post22 = m64^0
		
		propagated equality i37^post22 = i37^0
		
		propagated equality t44^post22 = t44^0
		
		propagated equality h132^post22 = h132^0
		
		propagated equality d^post22 = d^0
		
		propagated equality i61^post22 = i61^0
		
		propagated equality sum21^post22 = sum21^0
		
		propagated equality mask47^post22 = mask47^0
		
		propagated equality numbasis49^post22 = numbasis49^0
		
		propagated equality tmpmask56^post22 = tmpmask56^0
		
		propagated equality n65^post22 = n65^0
		
		propagated equality x43^post22 = x43^0
		
		propagated equality ret_mac15^post22 = ret_mac15^0
		
		propagated equality n45^post22 = n45^0
		
		propagated equality j20^post22 = j20^0
		
		propagated equality j55^post22 = j55^0
		
		propagated equality dotp14^post22 = dotp14^0
		
		propagated equality ddim53^post22 = ddim53^0
		
		propagated equality theta54^post22 = theta54^0
		
		propagated equality sum027^post22 = sum027^0
		
		propagated equality j62^post22 = j62^0
		
		propagated equality tmp___0^post22 = tmp___0^0
		
		propagated equality j26^post22 = j26^0
		
		propagated equality f36^post22 = f36^0
		
		propagated equality x029^post22 = x029^0
		
		propagated equality ret_latsynth38^post22 = ret_latsynth38^0
		
		propagated equality i25^post22 = i25^0
		
		propagated equality i13^post22 = i13^0
		
		propagated equality ret_codebook57^post22 = ret_codebook57^0
		
		propagated equality n35^post22 = n35^0
		
		propagated equality x130^post22 = x130^0
		
		propagated equality p66^post22 = p66^0
		
	Simplified Guard

	Original rule:
	l17 -> l18 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=1+i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 50-j20^0 <= 0), cost: 1
	New rule:
	l17 -> l18 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=1+i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 50-j20^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l17 -> l18 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=1+i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 50-j20^0 <= 0, cost: 1
	New rule:
	l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l17 -> l19 : bitchanged48^0'=bitchanged48^post23, c^0'=c^post23, codeword50^0'=codeword50^post23, d^0'=d^post23, ddim53^0'=ddim53^post23, dotp14^0'=dotp14^post23, f36^0'=f36^post23, g51^0'=g51^post23, h031^0'=h031^post23, h132^0'=h132^post23, i13^0'=i13^post23, i19^0'=i19^post23, i25^0'=i25^post23, i37^0'=i37^post23, i61^0'=i61^post23, j20^0'=j20^post23, j26^0'=j26^post23, j55^0'=j55^post23, j62^0'=j62^post23, k63^0'=k63^post23, m64^0'=m64^post23, mask47^0'=mask47^post23, n35^0'=n35^post23, n45^0'=n45^post23, n65^0'=n65^post23, numbasis49^0'=numbasis49^post23, p66^0'=p66^post23, ret_codebook57^0'=ret_codebook57^post23, ret_latsynth38^0'=ret_latsynth38^post23, ret_mac15^0'=ret_mac15^post23, sqr11^0'=sqr11^post23, sum027^0'=sum027^post23, sum128^0'=sum128^post23, sum21^0'=sum21^post23, t44^0'=t44^post23, theta54^0'=theta54^post23, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post23, tmpmask56^0'=tmpmask56^post23, x029^0'=x029^post23, x130^0'=x130^post23, x43^0'=x43^post23, (0 == 0 /\ -theta54^post23+theta54^0 == 0 /\ -h132^post23+h132^0 == 0 /\ -i37^post23+i37^0 == 0 /\ -i25^post23+i25^0 == 0 /\ x029^0-x029^post23 == 0 /\ g51^0-g51^post23 == 0 /\ ret_codebook57^0-ret_codebook57^post23 == 0 /\ -i13^post23+i13^0 == 0 /\ mask47^0-mask47^post23 == 0 /\ c^0-c^post23 == 0 /\ -x43^post23+x43^0 == 0 /\ h031^0-h031^post23 == 0 /\ tmp^0-tmp^post23 == 0 /\ m64^0-m64^post23 == 0 /\ -j26^post23+j26^0 == 0 /\ -n35^post23+n35^0 == 0 /\ -t44^post23+t44^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post23 == 0 /\ -d^post23+d^0 == 0 /\ -1+j20^post23-j20^0 == 0 /\ -sum128^post23+sum128^0 == 0 /\ dotp14^0-dotp14^post23 == 0 /\ j55^0-j55^post23 == 0 /\ i19^0-i19^post23 == 0 /\ j62^0-j62^post23 == 0 /\ sqr11^0-sqr11^post23 == 0 /\ i61^0-i61^post23 == 0 /\ -ret_mac15^post23+ret_mac15^0 == 0 /\ n65^0-n65^post23 == 0 /\ -x130^post23+x130^0 == 0 /\ -p66^post23+p66^0 == 0 /\ ddim53^0-ddim53^post23 == 0 /\ -numbasis49^post23+numbasis49^0 == 0 /\ -bitchanged48^post23+bitchanged48^0 == 0 /\ -49+j20^0 <= 0 /\ -n45^post23+n45^0 == 0 /\ -tmpmask56^post23+tmpmask56^0 == 0 /\ -k63^post23+k63^0 == 0 /\ -codeword50^post23+codeword50^0 == 0 /\ tmp___0^0-tmp___0^post23 == 0 /\ -sum027^post23+sum027^0 == 0 /\ -f36^post23+f36^0 == 0), cost: 1
	New rule:
	l17 -> l19 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=1+j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^post23, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -49+j20^0 <= 0), cost: 1
	
		propagated equality theta54^post23 = theta54^0
		
		propagated equality h132^post23 = h132^0
		
		propagated equality i37^post23 = i37^0
		
		propagated equality i25^post23 = i25^0
		
		propagated equality x029^post23 = x029^0
		
		propagated equality g51^post23 = g51^0
		
		propagated equality ret_codebook57^post23 = ret_codebook57^0
		
		propagated equality i13^post23 = i13^0
		
		propagated equality mask47^post23 = mask47^0
		
		propagated equality c^post23 = c^0
		
		propagated equality x43^post23 = x43^0
		
		propagated equality h031^post23 = h031^0
		
		propagated equality tmp^post23 = tmp^0
		
		propagated equality m64^post23 = m64^0
		
		propagated equality j26^post23 = j26^0
		
		propagated equality n35^post23 = n35^0
		
		propagated equality t44^post23 = t44^0
		
		propagated equality ret_latsynth38^post23 = ret_latsynth38^0
		
		propagated equality d^post23 = d^0
		
		propagated equality j20^post23 = 1+j20^0
		
		propagated equality sum128^post23 = sum128^0
		
		propagated equality dotp14^post23 = dotp14^0
		
		propagated equality j55^post23 = j55^0
		
		propagated equality i19^post23 = i19^0
		
		propagated equality j62^post23 = j62^0
		
		propagated equality sqr11^post23 = sqr11^0
		
		propagated equality i61^post23 = i61^0
		
		propagated equality ret_mac15^post23 = ret_mac15^0
		
		propagated equality n65^post23 = n65^0
		
		propagated equality x130^post23 = x130^0
		
		propagated equality p66^post23 = p66^0
		
		propagated equality ddim53^post23 = ddim53^0
		
		propagated equality numbasis49^post23 = numbasis49^0
		
		propagated equality bitchanged48^post23 = bitchanged48^0
		
		propagated equality n45^post23 = n45^0
		
		propagated equality tmpmask56^post23 = tmpmask56^0
		
		propagated equality k63^post23 = k63^0
		
		propagated equality codeword50^post23 = codeword50^0
		
		propagated equality tmp___0^post23 = tmp___0^0
		
		propagated equality sum027^post23 = sum027^0
		
		propagated equality f36^post23 = f36^0
		
	Simplified Guard

	Original rule:
	l17 -> l19 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=1+j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^post23, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -49+j20^0 <= 0), cost: 1
	New rule:
	l17 -> l19 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=1+j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^post23, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -49+j20^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l17 -> l19 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=1+j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^post23, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -49+j20^0 <= 0, cost: 1
	New rule:
	l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l0 : bitchanged48^0'=bitchanged48^post24, c^0'=c^post24, codeword50^0'=codeword50^post24, d^0'=d^post24, ddim53^0'=ddim53^post24, dotp14^0'=dotp14^post24, f36^0'=f36^post24, g51^0'=g51^post24, h031^0'=h031^post24, h132^0'=h132^post24, i13^0'=i13^post24, i19^0'=i19^post24, i25^0'=i25^post24, i37^0'=i37^post24, i61^0'=i61^post24, j20^0'=j20^post24, j26^0'=j26^post24, j55^0'=j55^post24, j62^0'=j62^post24, k63^0'=k63^post24, m64^0'=m64^post24, mask47^0'=mask47^post24, n35^0'=n35^post24, n45^0'=n45^post24, n65^0'=n65^post24, numbasis49^0'=numbasis49^post24, p66^0'=p66^post24, ret_codebook57^0'=ret_codebook57^post24, ret_latsynth38^0'=ret_latsynth38^post24, ret_mac15^0'=ret_mac15^post24, sqr11^0'=sqr11^post24, sum027^0'=sum027^post24, sum128^0'=sum128^post24, sum21^0'=sum21^post24, t44^0'=t44^post24, theta54^0'=theta54^post24, tmp^0'=tmp^post24, tmp___0^0'=tmp___0^post24, tmpmask56^0'=tmpmask56^post24, x029^0'=x029^post24, x130^0'=x130^post24, x43^0'=x43^post24, (mask47^0-mask47^post24 == 0 /\ -f36^post24+f36^0 == 0 /\ c^0-c^post24 == 0 /\ m64^0-m64^post24 == 0 /\ -i25^post24+i25^0 == 0 /\ -tmp___0^post24+tmp___0^0 == 0 /\ -i37^post24+i37^0 == 0 /\ -i13^post24+i13^0 == 0 /\ g51^0-g51^post24 == 0 /\ -d^post24+d^0 == 0 /\ ret_codebook57^0-ret_codebook57^post24 == 0 /\ -sum21^post24+sum21^0 == 0 /\ -h132^post24+h132^0 == 0 /\ -sum128^post24+sum128^0 == 0 /\ codeword50^0-codeword50^post24 == 0 /\ h031^0-h031^post24 == 0 /\ t44^0-t44^post24 == 0 /\ j26^post24 == 0 /\ -x130^post24+x130^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post24 == 0 /\ -j62^post24+j62^0 == 0 /\ -ret_mac15^post24+ret_mac15^0 == 0 /\ -p66^post24+p66^0 == 0 /\ -numbasis49^post24+numbasis49^0 == 0 /\ x029^0-x029^post24 == 0 /\ -k63^post24+k63^0 == 0 /\ -tmpmask56^post24+tmpmask56^0 == 0 /\ j55^0-j55^post24 == 0 /\ sqr11^0-sqr11^post24 == 0 /\ sum027^0-sum027^post24 == 0 /\ -n45^post24+n45^0 == 0 /\ -j20^post24+j20^0 == 0 /\ i19^0-i19^post24 == 0 /\ dotp14^0-dotp14^post24 == 0 /\ i61^0-i61^post24 == 0 /\ ddim53^0-ddim53^post24 == 0 /\ -theta54^post24+theta54^0 == 0 /\ n65^0-n65^post24 == 0 /\ n35^0-n35^post24 == 0 /\ 50-i19^0 <= 0 /\ -bitchanged48^post24+bitchanged48^0 == 0 /\ -x43^post24+x43^0 == 0 /\ tmp^0-tmp^post24 == 0), cost: 1
	New rule:
	l20 -> l0 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 50-i19^0 <= 0), cost: 1
	
		propagated equality mask47^post24 = mask47^0
		
		propagated equality f36^post24 = f36^0
		
		propagated equality c^post24 = c^0
		
		propagated equality m64^post24 = m64^0
		
		propagated equality i25^post24 = i25^0
		
		propagated equality tmp___0^post24 = tmp___0^0
		
		propagated equality i37^post24 = i37^0
		
		propagated equality i13^post24 = i13^0
		
		propagated equality g51^post24 = g51^0
		
		propagated equality d^post24 = d^0
		
		propagated equality ret_codebook57^post24 = ret_codebook57^0
		
		propagated equality sum21^post24 = sum21^0
		
		propagated equality h132^post24 = h132^0
		
		propagated equality sum128^post24 = sum128^0
		
		propagated equality codeword50^post24 = codeword50^0
		
		propagated equality h031^post24 = h031^0
		
		propagated equality t44^post24 = t44^0
		
		propagated equality j26^post24 = 0
		
		propagated equality x130^post24 = x130^0
		
		propagated equality ret_latsynth38^post24 = ret_latsynth38^0
		
		propagated equality j62^post24 = j62^0
		
		propagated equality ret_mac15^post24 = ret_mac15^0
		
		propagated equality p66^post24 = p66^0
		
		propagated equality numbasis49^post24 = numbasis49^0
		
		propagated equality x029^post24 = x029^0
		
		propagated equality k63^post24 = k63^0
		
		propagated equality tmpmask56^post24 = tmpmask56^0
		
		propagated equality j55^post24 = j55^0
		
		propagated equality sqr11^post24 = sqr11^0
		
		propagated equality sum027^post24 = sum027^0
		
		propagated equality n45^post24 = n45^0
		
		propagated equality j20^post24 = j20^0
		
		propagated equality i19^post24 = i19^0
		
		propagated equality dotp14^post24 = dotp14^0
		
		propagated equality i61^post24 = i61^0
		
		propagated equality ddim53^post24 = ddim53^0
		
		propagated equality theta54^post24 = theta54^0
		
		propagated equality n65^post24 = n65^0
		
		propagated equality n35^post24 = n35^0
		
		propagated equality bitchanged48^post24 = bitchanged48^0
		
		propagated equality x43^post24 = x43^0
		
		propagated equality tmp^post24 = tmp^0
		
	Simplified Guard

	Original rule:
	l20 -> l0 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 50-i19^0 <= 0), cost: 1
	New rule:
	l20 -> l0 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 50-i19^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l0 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 50-i19^0 <= 0, cost: 1
	New rule:
	l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l19 : bitchanged48^0'=bitchanged48^post25, c^0'=c^post25, codeword50^0'=codeword50^post25, d^0'=d^post25, ddim53^0'=ddim53^post25, dotp14^0'=dotp14^post25, f36^0'=f36^post25, g51^0'=g51^post25, h031^0'=h031^post25, h132^0'=h132^post25, i13^0'=i13^post25, i19^0'=i19^post25, i25^0'=i25^post25, i37^0'=i37^post25, i61^0'=i61^post25, j20^0'=j20^post25, j26^0'=j26^post25, j55^0'=j55^post25, j62^0'=j62^post25, k63^0'=k63^post25, m64^0'=m64^post25, mask47^0'=mask47^post25, n35^0'=n35^post25, n45^0'=n45^post25, n65^0'=n65^post25, numbasis49^0'=numbasis49^post25, p66^0'=p66^post25, ret_codebook57^0'=ret_codebook57^post25, ret_latsynth38^0'=ret_latsynth38^post25, ret_mac15^0'=ret_mac15^post25, sqr11^0'=sqr11^post25, sum027^0'=sum027^post25, sum128^0'=sum128^post25, sum21^0'=sum21^post25, t44^0'=t44^post25, theta54^0'=theta54^post25, tmp^0'=tmp^post25, tmp___0^0'=tmp___0^post25, tmpmask56^0'=tmpmask56^post25, x029^0'=x029^post25, x130^0'=x130^post25, x43^0'=x43^post25, (d^0-d^post25 == 0 /\ x43^0-x43^post25 == 0 /\ -i61^post25+i61^0 == 0 /\ -49+i19^0 <= 0 /\ -sum128^post25+sum128^0 == 0 /\ -theta54^post25+theta54^0 == 0 /\ ret_mac15^0-ret_mac15^post25 == 0 /\ -i19^post25+i19^0 == 0 /\ -mask47^post25+mask47^0 == 0 /\ -tmpmask56^post25+tmpmask56^0 == 0 /\ -ret_codebook57^post25+ret_codebook57^0 == 0 /\ n35^0-n35^post25 == 0 /\ -ddim53^post25+ddim53^0 == 0 /\ bitchanged48^0-bitchanged48^post25 == 0 /\ -j62^post25+j62^0 == 0 /\ -codeword50^post25+codeword50^0 == 0 /\ -g51^post25+g51^0 == 0 /\ k63^0-k63^post25 == 0 /\ h132^0-h132^post25 == 0 /\ f36^0-f36^post25 == 0 /\ m64^0-m64^post25 == 0 /\ -dotp14^post25+dotp14^0 == 0 /\ -tmp___0^post25+tmp___0^0 == 0 /\ -n45^post25+n45^0 == 0 /\ t44^0-t44^post25 == 0 /\ numbasis49^0-numbasis49^post25 == 0 /\ j20^post25 == 0 /\ i25^0-i25^post25 == 0 /\ sum027^0-sum027^post25 == 0 /\ -n65^post25+n65^0 == 0 /\ -p66^post25+p66^0 == 0 /\ tmp^0-tmp^post25 == 0 /\ -i13^post25+i13^0 == 0 /\ -sqr11^post25+sqr11^0 == 0 /\ -j55^post25+j55^0 == 0 /\ -x130^post25+x130^0 == 0 /\ -h031^post25+h031^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post25 == 0 /\ -c^post25+c^0 == 0 /\ x029^0-x029^post25 == 0 /\ j26^0-j26^post25 == 0 /\ i37^0-i37^post25 == 0 /\ sum21^post25 == 0), cost: 1
	New rule:
	l20 -> l19 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -49+i19^0 <= 0), cost: 1
	
		propagated equality d^post25 = d^0
		
		propagated equality x43^post25 = x43^0
		
		propagated equality i61^post25 = i61^0
		
		propagated equality sum128^post25 = sum128^0
		
		propagated equality theta54^post25 = theta54^0
		
		propagated equality ret_mac15^post25 = ret_mac15^0
		
		propagated equality i19^post25 = i19^0
		
		propagated equality mask47^post25 = mask47^0
		
		propagated equality tmpmask56^post25 = tmpmask56^0
		
		propagated equality ret_codebook57^post25 = ret_codebook57^0
		
		propagated equality n35^post25 = n35^0
		
		propagated equality ddim53^post25 = ddim53^0
		
		propagated equality bitchanged48^post25 = bitchanged48^0
		
		propagated equality j62^post25 = j62^0
		
		propagated equality codeword50^post25 = codeword50^0
		
		propagated equality g51^post25 = g51^0
		
		propagated equality k63^post25 = k63^0
		
		propagated equality h132^post25 = h132^0
		
		propagated equality f36^post25 = f36^0
		
		propagated equality m64^post25 = m64^0
		
		propagated equality dotp14^post25 = dotp14^0
		
		propagated equality tmp___0^post25 = tmp___0^0
		
		propagated equality n45^post25 = n45^0
		
		propagated equality t44^post25 = t44^0
		
		propagated equality numbasis49^post25 = numbasis49^0
		
		propagated equality j20^post25 = 0
		
		propagated equality i25^post25 = i25^0
		
		propagated equality sum027^post25 = sum027^0
		
		propagated equality n65^post25 = n65^0
		
		propagated equality p66^post25 = p66^0
		
		propagated equality tmp^post25 = tmp^0
		
		propagated equality i13^post25 = i13^0
		
		propagated equality sqr11^post25 = sqr11^0
		
		propagated equality j55^post25 = j55^0
		
		propagated equality x130^post25 = x130^0
		
		propagated equality h031^post25 = h031^0
		
		propagated equality ret_latsynth38^post25 = ret_latsynth38^0
		
		propagated equality c^post25 = c^0
		
		propagated equality x029^post25 = x029^0
		
		propagated equality j26^post25 = j26^0
		
		propagated equality i37^post25 = i37^0
		
		propagated equality sum21^post25 = 0
		
	Simplified Guard

	Original rule:
	l20 -> l19 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -49+i19^0 <= 0), cost: 1
	New rule:
	l20 -> l19 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -49+i19^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l19 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -49+i19^0 <= 0, cost: 1
	New rule:
	l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l21 -> l18 : bitchanged48^0'=bitchanged48^post26, c^0'=c^post26, codeword50^0'=codeword50^post26, d^0'=d^post26, ddim53^0'=ddim53^post26, dotp14^0'=dotp14^post26, f36^0'=f36^post26, g51^0'=g51^post26, h031^0'=h031^post26, h132^0'=h132^post26, i13^0'=i13^post26, i19^0'=i19^post26, i25^0'=i25^post26, i37^0'=i37^post26, i61^0'=i61^post26, j20^0'=j20^post26, j26^0'=j26^post26, j55^0'=j55^post26, j62^0'=j62^post26, k63^0'=k63^post26, m64^0'=m64^post26, mask47^0'=mask47^post26, n35^0'=n35^post26, n45^0'=n45^post26, n65^0'=n65^post26, numbasis49^0'=numbasis49^post26, p66^0'=p66^post26, ret_codebook57^0'=ret_codebook57^post26, ret_latsynth38^0'=ret_latsynth38^post26, ret_mac15^0'=ret_mac15^post26, sqr11^0'=sqr11^post26, sum027^0'=sum027^post26, sum128^0'=sum128^post26, sum21^0'=sum21^post26, t44^0'=t44^post26, theta54^0'=theta54^post26, tmp^0'=tmp^post26, tmp___0^0'=tmp___0^post26, tmpmask56^0'=tmpmask56^post26, x029^0'=x029^post26, x130^0'=x130^post26, x43^0'=x43^post26, (-x43^post26+x43^0 == 0 /\ -x130^post26+x130^0 == 0 /\ -sum128^post26+sum128^0 == 0 /\ bitchanged48^0-bitchanged48^post26 == 0 /\ sqr11^0-sqr11^post26 == 0 /\ -dotp14^post26+dotp14^0 == 0 /\ -h031^post26+h031^0 == 0 /\ j55^0-j55^post26 == 0 /\ -g51^post26+g51^0 == 0 /\ c^post26-tmp^post26 == 0 /\ i13^0-i13^post26 == 0 /\ t44^0-t44^post26 == 0 /\ h132^0-h132^post26 == 0 /\ 150-i13^0 <= 0 /\ n65^0-n65^post26 == 0 /\ numbasis49^0-numbasis49^post26 == 0 /\ -i37^post26+i37^0 == 0 /\ i25^0-i25^post26 == 0 /\ sum21^0-sum21^post26 == 0 /\ tmp___0^0-tmp___0^post26 == 0 /\ m64^0-m64^post26 == 0 /\ -n45^post26+n45^0 == 0 /\ -tmpmask56^post26+tmpmask56^0 == 0 /\ -k63^post26+k63^0 == 0 /\ mask47^0-mask47^post26 == 0 /\ -j26^post26+j26^0 == 0 /\ -j62^post26+j62^0 == 0 /\ -p66^post26+p66^0 == 0 /\ f36^0-f36^post26 == 0 /\ i19^post26 == 0 /\ sum027^0-sum027^post26 == 0 /\ -j20^post26+j20^0 == 0 /\ -n35^post26+n35^0 == 0 /\ -theta54^post26+theta54^0 == 0 /\ i61^0-i61^post26 == 0 /\ ret_latsynth38^0-ret_latsynth38^post26 == 0 /\ ret_codebook57^0-ret_codebook57^post26 == 0 /\ d^0-d^post26 == 0 /\ -ddim53^post26+ddim53^0 == 0 /\ ret_mac15^post26-sqr11^0 == 0 /\ x029^0-x029^post26 == 0 /\ -ret_mac15^post26+tmp^post26 == 0 /\ -codeword50^post26+codeword50^0 == 0), cost: 1
	New rule:
	l21 -> l18 : bitchanged48^0'=bitchanged48^0, c^0'=sqr11^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=sqr11^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=sqr11^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 150-i13^0 <= 0), cost: 1
	
		propagated equality x43^post26 = x43^0
		
		propagated equality x130^post26 = x130^0
		
		propagated equality sum128^post26 = sum128^0
		
		propagated equality bitchanged48^post26 = bitchanged48^0
		
		propagated equality sqr11^post26 = sqr11^0
		
		propagated equality dotp14^post26 = dotp14^0
		
		propagated equality h031^post26 = h031^0
		
		propagated equality j55^post26 = j55^0
		
		propagated equality g51^post26 = g51^0
		
		propagated equality c^post26 = tmp^post26
		
		propagated equality i13^post26 = i13^0
		
		propagated equality t44^post26 = t44^0
		
		propagated equality h132^post26 = h132^0
		
		propagated equality n65^post26 = n65^0
		
		propagated equality numbasis49^post26 = numbasis49^0
		
		propagated equality i37^post26 = i37^0
		
		propagated equality i25^post26 = i25^0
		
		propagated equality sum21^post26 = sum21^0
		
		propagated equality tmp___0^post26 = tmp___0^0
		
		propagated equality m64^post26 = m64^0
		
		propagated equality n45^post26 = n45^0
		
		propagated equality tmpmask56^post26 = tmpmask56^0
		
		propagated equality k63^post26 = k63^0
		
		propagated equality mask47^post26 = mask47^0
		
		propagated equality j26^post26 = j26^0
		
		propagated equality j62^post26 = j62^0
		
		propagated equality p66^post26 = p66^0
		
		propagated equality f36^post26 = f36^0
		
		propagated equality i19^post26 = 0
		
		propagated equality sum027^post26 = sum027^0
		
		propagated equality j20^post26 = j20^0
		
		propagated equality n35^post26 = n35^0
		
		propagated equality theta54^post26 = theta54^0
		
		propagated equality i61^post26 = i61^0
		
		propagated equality ret_latsynth38^post26 = ret_latsynth38^0
		
		propagated equality ret_codebook57^post26 = ret_codebook57^0
		
		propagated equality d^post26 = d^0
		
		propagated equality ddim53^post26 = ddim53^0
		
		propagated equality ret_mac15^post26 = sqr11^0
		
		propagated equality x029^post26 = x029^0
		
		propagated equality tmp^post26 = sqr11^0
		
		propagated equality codeword50^post26 = codeword50^0
		
	Simplified Guard

	Original rule:
	l21 -> l18 : bitchanged48^0'=bitchanged48^0, c^0'=sqr11^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=sqr11^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=sqr11^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ 150-i13^0 <= 0), cost: 1
	New rule:
	l21 -> l18 : bitchanged48^0'=bitchanged48^0, c^0'=sqr11^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=sqr11^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=sqr11^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 150-i13^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l21 -> l18 : bitchanged48^0'=bitchanged48^0, c^0'=sqr11^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=sqr11^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=sqr11^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 150-i13^0 <= 0, cost: 1
	New rule:
	l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l21 -> l22 : bitchanged48^0'=bitchanged48^post27, c^0'=c^post27, codeword50^0'=codeword50^post27, d^0'=d^post27, ddim53^0'=ddim53^post27, dotp14^0'=dotp14^post27, f36^0'=f36^post27, g51^0'=g51^post27, h031^0'=h031^post27, h132^0'=h132^post27, i13^0'=i13^post27, i19^0'=i19^post27, i25^0'=i25^post27, i37^0'=i37^post27, i61^0'=i61^post27, j20^0'=j20^post27, j26^0'=j26^post27, j55^0'=j55^post27, j62^0'=j62^post27, k63^0'=k63^post27, m64^0'=m64^post27, mask47^0'=mask47^post27, n35^0'=n35^post27, n45^0'=n45^post27, n65^0'=n65^post27, numbasis49^0'=numbasis49^post27, p66^0'=p66^post27, ret_codebook57^0'=ret_codebook57^post27, ret_latsynth38^0'=ret_latsynth38^post27, ret_mac15^0'=ret_mac15^post27, sqr11^0'=sqr11^post27, sum027^0'=sum027^post27, sum128^0'=sum128^post27, sum21^0'=sum21^post27, t44^0'=t44^post27, theta54^0'=theta54^post27, tmp^0'=tmp^post27, tmp___0^0'=tmp___0^post27, tmpmask56^0'=tmpmask56^post27, x029^0'=x029^post27, x130^0'=x130^post27, x43^0'=x43^post27, (0 == 0 /\ i19^0-i19^post27 == 0 /\ ddim53^0-ddim53^post27 == 0 /\ -bitchanged48^post27+bitchanged48^0 == 0 /\ -sum128^post27+sum128^0 == 0 /\ -x43^post27+x43^0 == 0 /\ -tmp___0^post27+tmp___0^0 == 0 /\ c^0-c^post27 == 0 /\ -k63^post27+k63^0 == 0 /\ -tmpmask56^post27+tmpmask56^0 == 0 /\ x029^0-x029^post27 == 0 /\ -ret_mac15^post27+ret_mac15^0 == 0 /\ mask47^0-mask47^post27 == 0 /\ -i37^post27+i37^0 == 0 /\ n65^0-n65^post27 == 0 /\ -n45^post27+n45^0 == 0 /\ -1+i13^post27-i13^0 == 0 /\ i25^0-i25^post27 == 0 /\ -numbasis49^post27+numbasis49^0 == 0 /\ -theta54^post27+theta54^0 == 0 /\ j62^0-j62^post27 == 0 /\ tmp^0-tmp^post27 == 0 /\ -j20^post27+j20^0 == 0 /\ -149+i13^0 <= 0 /\ t44^0-t44^post27 == 0 /\ -d^post27+d^0 == 0 /\ -j26^post27+j26^0 == 0 /\ g51^0-g51^post27 == 0 /\ sum027^0-sum027^post27 == 0 /\ m64^0-m64^post27 == 0 /\ -codeword50^post27+codeword50^0 == 0 /\ -x130^post27+x130^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post27 == 0 /\ i61^0-i61^post27 == 0 /\ ret_codebook57^0-ret_codebook57^post27 == 0 /\ sum21^0-sum21^post27 == 0 /\ -n35^post27+n35^0 == 0 /\ -f36^post27+f36^0 == 0 /\ -h031^post27+h031^0 == 0 /\ h132^0-h132^post27 == 0 /\ j55^0-j55^post27 == 0 /\ -p66^post27+p66^0 == 0), cost: 1
	New rule:
	l21 -> l22 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^post27, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=1+i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^post27, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -149+i13^0 <= 0), cost: 1
	
		propagated equality i19^post27 = i19^0
		
		propagated equality ddim53^post27 = ddim53^0
		
		propagated equality bitchanged48^post27 = bitchanged48^0
		
		propagated equality sum128^post27 = sum128^0
		
		propagated equality x43^post27 = x43^0
		
		propagated equality tmp___0^post27 = tmp___0^0
		
		propagated equality c^post27 = c^0
		
		propagated equality k63^post27 = k63^0
		
		propagated equality tmpmask56^post27 = tmpmask56^0
		
		propagated equality x029^post27 = x029^0
		
		propagated equality ret_mac15^post27 = ret_mac15^0
		
		propagated equality mask47^post27 = mask47^0
		
		propagated equality i37^post27 = i37^0
		
		propagated equality n65^post27 = n65^0
		
		propagated equality n45^post27 = n45^0
		
		propagated equality i13^post27 = 1+i13^0
		
		propagated equality i25^post27 = i25^0
		
		propagated equality numbasis49^post27 = numbasis49^0
		
		propagated equality theta54^post27 = theta54^0
		
		propagated equality j62^post27 = j62^0
		
		propagated equality tmp^post27 = tmp^0
		
		propagated equality j20^post27 = j20^0
		
		propagated equality t44^post27 = t44^0
		
		propagated equality d^post27 = d^0
		
		propagated equality j26^post27 = j26^0
		
		propagated equality g51^post27 = g51^0
		
		propagated equality sum027^post27 = sum027^0
		
		propagated equality m64^post27 = m64^0
		
		propagated equality codeword50^post27 = codeword50^0
		
		propagated equality x130^post27 = x130^0
		
		propagated equality ret_latsynth38^post27 = ret_latsynth38^0
		
		propagated equality i61^post27 = i61^0
		
		propagated equality ret_codebook57^post27 = ret_codebook57^0
		
		propagated equality sum21^post27 = sum21^0
		
		propagated equality n35^post27 = n35^0
		
		propagated equality f36^post27 = f36^0
		
		propagated equality h031^post27 = h031^0
		
		propagated equality h132^post27 = h132^0
		
		propagated equality j55^post27 = j55^0
		
		propagated equality p66^post27 = p66^0
		
	Simplified Guard

	Original rule:
	l21 -> l22 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^post27, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=1+i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^post27, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, (0 == 0 /\ -149+i13^0 <= 0), cost: 1
	New rule:
	l21 -> l22 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^post27, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=1+i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^post27, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -149+i13^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l21 -> l22 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^post27, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=1+i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^post27, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, -149+i13^0 <= 0, cost: 1
	New rule:
	l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l12 -> l13 : bitchanged48^0'=bitchanged48^post28, c^0'=c^post28, codeword50^0'=codeword50^post28, d^0'=d^post28, ddim53^0'=ddim53^post28, dotp14^0'=dotp14^post28, f36^0'=f36^post28, g51^0'=g51^post28, h031^0'=h031^post28, h132^0'=h132^post28, i13^0'=i13^post28, i19^0'=i19^post28, i25^0'=i25^post28, i37^0'=i37^post28, i61^0'=i61^post28, j20^0'=j20^post28, j26^0'=j26^post28, j55^0'=j55^post28, j62^0'=j62^post28, k63^0'=k63^post28, m64^0'=m64^post28, mask47^0'=mask47^post28, n35^0'=n35^post28, n45^0'=n45^post28, n65^0'=n65^post28, numbasis49^0'=numbasis49^post28, p66^0'=p66^post28, ret_codebook57^0'=ret_codebook57^post28, ret_latsynth38^0'=ret_latsynth38^post28, ret_mac15^0'=ret_mac15^post28, sqr11^0'=sqr11^post28, sum027^0'=sum027^post28, sum128^0'=sum128^post28, sum21^0'=sum21^post28, t44^0'=t44^post28, theta54^0'=theta54^post28, tmp^0'=tmp^post28, tmp___0^0'=tmp___0^post28, tmpmask56^0'=tmpmask56^post28, x029^0'=x029^post28, x130^0'=x130^post28, x43^0'=x43^post28, (j26^0-j26^post28 == 0 /\ -codeword50^post28+codeword50^0 == 0 /\ h132^0-h132^post28 == 0 /\ -dotp14^post28+dotp14^0 == 0 /\ f36^0-f36^post28 == 0 /\ -ret_mac15^post28+ret_mac15^0 == 0 /\ -n45^post28+n45^0 == 0 /\ -tmp___0^post28+tmp___0^0 == 0 /\ j55^0-j55^post28 == 0 /\ -n65^post28+n65^0 == 0 /\ -p66^post28+p66^0 == 0 /\ numbasis49^0-numbasis49^post28 == 0 /\ ddim53^0-ddim53^post28 == 0 /\ i25^0-i25^post28 == 0 /\ d^0-d^post28 == 0 /\ n35^0-n35^post28 == 0 /\ ret_codebook57^0-ret_codebook57^post28 == 0 /\ -sum027^post28+sum027^0 == 0 /\ -mask47^post28+mask47^0 == 0 /\ -i37^post28+i37^0 == 0 /\ -i19^post28+i19^0 == 0 /\ -j62^post28+j62^0 == 0 /\ -h031^post28+h031^0 == 0 /\ tmp^0-tmp^post28 == 0 /\ m64^0-m64^post28 == 0 /\ c^0-c^post28 == 0 /\ -i13^post28+i13^0 == 0 /\ -theta54^post28+theta54^0 == 0 /\ -tmpmask56^post28+tmpmask56^0 == 0 /\ -x43^post28+x43^0 == 0 /\ -x130^post28+x130^0 == 0 /\ x029^0-x029^post28 == 0 /\ t44^0-t44^post28 == 0 /\ ret_latsynth38^0-ret_latsynth38^post28 == 0 /\ -j20^post28+j20^0 == 0 /\ -i61^post28+i61^0 == 0 /\ g51^0-g51^post28 == 0 /\ sum21^0-sum21^post28 == 0 /\ sqr11^0-sqr11^post28 == 0 /\ -bitchanged48^post28+bitchanged48^0 == 0 /\ k63^0-k63^post28 == 0 /\ -sum128^post28+sum128^0 == 0), cost: 1
	New rule:
	l12 -> l13 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality j26^post28 = j26^0
		
		propagated equality codeword50^post28 = codeword50^0
		
		propagated equality h132^post28 = h132^0
		
		propagated equality dotp14^post28 = dotp14^0
		
		propagated equality f36^post28 = f36^0
		
		propagated equality ret_mac15^post28 = ret_mac15^0
		
		propagated equality n45^post28 = n45^0
		
		propagated equality tmp___0^post28 = tmp___0^0
		
		propagated equality j55^post28 = j55^0
		
		propagated equality n65^post28 = n65^0
		
		propagated equality p66^post28 = p66^0
		
		propagated equality numbasis49^post28 = numbasis49^0
		
		propagated equality ddim53^post28 = ddim53^0
		
		propagated equality i25^post28 = i25^0
		
		propagated equality d^post28 = d^0
		
		propagated equality n35^post28 = n35^0
		
		propagated equality ret_codebook57^post28 = ret_codebook57^0
		
		propagated equality sum027^post28 = sum027^0
		
		propagated equality mask47^post28 = mask47^0
		
		propagated equality i37^post28 = i37^0
		
		propagated equality i19^post28 = i19^0
		
		propagated equality j62^post28 = j62^0
		
		propagated equality h031^post28 = h031^0
		
		propagated equality tmp^post28 = tmp^0
		
		propagated equality m64^post28 = m64^0
		
		propagated equality c^post28 = c^0
		
		propagated equality i13^post28 = i13^0
		
		propagated equality theta54^post28 = theta54^0
		
		propagated equality tmpmask56^post28 = tmpmask56^0
		
		propagated equality x43^post28 = x43^0
		
		propagated equality x130^post28 = x130^0
		
		propagated equality x029^post28 = x029^0
		
		propagated equality t44^post28 = t44^0
		
		propagated equality ret_latsynth38^post28 = ret_latsynth38^0
		
		propagated equality j20^post28 = j20^0
		
		propagated equality i61^post28 = i61^0
		
		propagated equality g51^post28 = g51^0
		
		propagated equality sum21^post28 = sum21^0
		
		propagated equality sqr11^post28 = sqr11^0
		
		propagated equality bitchanged48^post28 = bitchanged48^0
		
		propagated equality k63^post28 = k63^0
		
		propagated equality sum128^post28 = sum128^0
		
	Simplified Guard

	Original rule:
	l12 -> l13 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l12 -> l13 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l12 -> l13 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l12 -> l13 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l9 -> l11 : bitchanged48^0'=bitchanged48^post29, c^0'=c^post29, codeword50^0'=codeword50^post29, d^0'=d^post29, ddim53^0'=ddim53^post29, dotp14^0'=dotp14^post29, f36^0'=f36^post29, g51^0'=g51^post29, h031^0'=h031^post29, h132^0'=h132^post29, i13^0'=i13^post29, i19^0'=i19^post29, i25^0'=i25^post29, i37^0'=i37^post29, i61^0'=i61^post29, j20^0'=j20^post29, j26^0'=j26^post29, j55^0'=j55^post29, j62^0'=j62^post29, k63^0'=k63^post29, m64^0'=m64^post29, mask47^0'=mask47^post29, n35^0'=n35^post29, n45^0'=n45^post29, n65^0'=n65^post29, numbasis49^0'=numbasis49^post29, p66^0'=p66^post29, ret_codebook57^0'=ret_codebook57^post29, ret_latsynth38^0'=ret_latsynth38^post29, ret_mac15^0'=ret_mac15^post29, sqr11^0'=sqr11^post29, sum027^0'=sum027^post29, sum128^0'=sum128^post29, sum21^0'=sum21^post29, t44^0'=t44^post29, theta54^0'=theta54^post29, tmp^0'=tmp^post29, tmp___0^0'=tmp___0^post29, tmpmask56^0'=tmpmask56^post29, x029^0'=x029^post29, x130^0'=x130^post29, x43^0'=x43^post29, (-ret_mac15^post29+ret_mac15^0 == 0 /\ tmp^0-tmp^post29 == 0 /\ ddim53^0-ddim53^post29 == 0 /\ t44^0-t44^post29 == 0 /\ d^0-d^post29 == 0 /\ -x130^post29+x130^0 == 0 /\ -x43^post29+x43^0 == 0 /\ sum21^0-sum21^post29 == 0 /\ n65^0-n65^post29 == 0 /\ -j20^post29+j20^0 == 0 /\ -n45^post29+n45^0 == 0 /\ sqr11^0-sqr11^post29 == 0 /\ i25^0-i25^post29 == 0 /\ numbasis49^0-numbasis49^post29 == 0 /\ -i19^post29+i19^0 == 0 /\ mask47^0-mask47^post29 == 0 /\ -k63^post29+k63^0 == 0 /\ -h031^post29+h031^0 == 0 /\ -theta54^post29+theta54^0 == 0 /\ sum027^0-sum027^post29 == 0 /\ -tmpmask56^post29+tmpmask56^0 == 0 /\ m64^0-m64^post29 == 0 /\ -i37^post29+i37^0 == 0 /\ -p66^post29+p66^0 == 0 /\ bitchanged48^0-bitchanged48^post29 == 0 /\ -c^post29+c^0 == 0 /\ -dotp14^post29+dotp14^0 == 0 /\ -codeword50^post29+codeword50^0 == 0 /\ tmp___0^0-tmp___0^post29 == 0 /\ ret_codebook57^0-ret_codebook57^post29 == 0 /\ f36^0-f36^post29 == 0 /\ g51^0-g51^post29 == 0 /\ j55^0-j55^post29 == 0 /\ j62^0-j62^post29 == 0 /\ -j26^post29+j26^0 == 0 /\ i61^0-i61^post29 == 0 /\ ret_latsynth38^0-ret_latsynth38^post29 == 0 /\ -n35^post29+n35^0 == 0 /\ x029^0-x029^post29 == 0 /\ -i13^post29+i13^0 == 0 /\ h132^0-h132^post29 == 0 /\ -sum128^post29+sum128^0 == 0), cost: 1
	New rule:
	l9 -> l11 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality ret_mac15^post29 = ret_mac15^0
		
		propagated equality tmp^post29 = tmp^0
		
		propagated equality ddim53^post29 = ddim53^0
		
		propagated equality t44^post29 = t44^0
		
		propagated equality d^post29 = d^0
		
		propagated equality x130^post29 = x130^0
		
		propagated equality x43^post29 = x43^0
		
		propagated equality sum21^post29 = sum21^0
		
		propagated equality n65^post29 = n65^0
		
		propagated equality j20^post29 = j20^0
		
		propagated equality n45^post29 = n45^0
		
		propagated equality sqr11^post29 = sqr11^0
		
		propagated equality i25^post29 = i25^0
		
		propagated equality numbasis49^post29 = numbasis49^0
		
		propagated equality i19^post29 = i19^0
		
		propagated equality mask47^post29 = mask47^0
		
		propagated equality k63^post29 = k63^0
		
		propagated equality h031^post29 = h031^0
		
		propagated equality theta54^post29 = theta54^0
		
		propagated equality sum027^post29 = sum027^0
		
		propagated equality tmpmask56^post29 = tmpmask56^0
		
		propagated equality m64^post29 = m64^0
		
		propagated equality i37^post29 = i37^0
		
		propagated equality p66^post29 = p66^0
		
		propagated equality bitchanged48^post29 = bitchanged48^0
		
		propagated equality c^post29 = c^0
		
		propagated equality dotp14^post29 = dotp14^0
		
		propagated equality codeword50^post29 = codeword50^0
		
		propagated equality tmp___0^post29 = tmp___0^0
		
		propagated equality ret_codebook57^post29 = ret_codebook57^0
		
		propagated equality f36^post29 = f36^0
		
		propagated equality g51^post29 = g51^0
		
		propagated equality j55^post29 = j55^0
		
		propagated equality j62^post29 = j62^0
		
		propagated equality j26^post29 = j26^0
		
		propagated equality i61^post29 = i61^0
		
		propagated equality ret_latsynth38^post29 = ret_latsynth38^0
		
		propagated equality n35^post29 = n35^0
		
		propagated equality x029^post29 = x029^0
		
		propagated equality i13^post29 = i13^0
		
		propagated equality h132^post29 = h132^0
		
		propagated equality sum128^post29 = sum128^0
		
	Simplified Guard

	Original rule:
	l9 -> l11 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l9 -> l11 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l9 -> l11 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l9 -> l11 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l10 -> l8 : bitchanged48^0'=bitchanged48^post30, c^0'=c^post30, codeword50^0'=codeword50^post30, d^0'=d^post30, ddim53^0'=ddim53^post30, dotp14^0'=dotp14^post30, f36^0'=f36^post30, g51^0'=g51^post30, h031^0'=h031^post30, h132^0'=h132^post30, i13^0'=i13^post30, i19^0'=i19^post30, i25^0'=i25^post30, i37^0'=i37^post30, i61^0'=i61^post30, j20^0'=j20^post30, j26^0'=j26^post30, j55^0'=j55^post30, j62^0'=j62^post30, k63^0'=k63^post30, m64^0'=m64^post30, mask47^0'=mask47^post30, n35^0'=n35^post30, n45^0'=n45^post30, n65^0'=n65^post30, numbasis49^0'=numbasis49^post30, p66^0'=p66^post30, ret_codebook57^0'=ret_codebook57^post30, ret_latsynth38^0'=ret_latsynth38^post30, ret_mac15^0'=ret_mac15^post30, sqr11^0'=sqr11^post30, sum027^0'=sum027^post30, sum128^0'=sum128^post30, sum21^0'=sum21^post30, t44^0'=t44^post30, theta54^0'=theta54^post30, tmp^0'=tmp^post30, tmp___0^0'=tmp___0^post30, tmpmask56^0'=tmpmask56^post30, x029^0'=x029^post30, x130^0'=x130^post30, x43^0'=x43^post30, (-ret_latsynth38^post30+ret_latsynth38^0 == 0 /\ -p66^post30+p66^0 == 0 /\ ddim53^0-ddim53^post30 == 0 /\ -n45^post30+n45^0 == 0 /\ -ret_mac15^post30+ret_mac15^0 == 0 /\ -numbasis49^post30+numbasis49^0 == 0 /\ -n35^post30+n35^0 == 0 /\ -sum128^post30+sum128^0 == 0 /\ c^0-c^post30 == 0 /\ -k63^post30+k63^0 == 0 /\ -bitchanged48^post30+bitchanged48^0 == 0 /\ codeword50^0-codeword50^post30 == 0 /\ i25^0-i25^post30 == 0 /\ -j20^post30+j20^0 == 0 /\ mask47^0-mask47^post30 == 0 /\ x029^0-x029^post30 == 0 /\ -theta54^post30+theta54^0 == 0 /\ m64^0-m64^post30 == 0 /\ t44^0-t44^post30 == 0 /\ -tmpmask56^post30+tmpmask56^0 == 0 /\ sqr11^0-sqr11^post30 == 0 /\ -x43^post30+x43^0 == 0 /\ sum21^0-sum21^post30 == 0 /\ i19^0-i19^post30 == 0 /\ -h132^post30+h132^0 == 0 /\ -i37^post30+i37^0 == 0 /\ -f36^post30+f36^0 == 0 /\ -tmp___0^post30+tmp___0^0 == 0 /\ -i13^post30+i13^0 == 0 /\ -d^post30+d^0 == 0 /\ sum027^0-sum027^post30 == 0 /\ n65^0-n65^post30 == 0 /\ -h031^post30+h031^0 == 0 /\ tmp^0-tmp^post30 == 0 /\ j55^0-j55^post30 == 0 /\ j62^0-j62^post30 == 0 /\ g51^0-g51^post30 == 0 /\ ret_codebook57^0-ret_codebook57^post30 == 0 /\ -x130^post30+x130^0 == 0 /\ dotp14^0-dotp14^post30 == 0 /\ -j26^post30+j26^0 == 0 /\ i61^0-i61^post30 == 0), cost: 1
	New rule:
	l10 -> l8 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality ret_latsynth38^post30 = ret_latsynth38^0
		
		propagated equality p66^post30 = p66^0
		
		propagated equality ddim53^post30 = ddim53^0
		
		propagated equality n45^post30 = n45^0
		
		propagated equality ret_mac15^post30 = ret_mac15^0
		
		propagated equality numbasis49^post30 = numbasis49^0
		
		propagated equality n35^post30 = n35^0
		
		propagated equality sum128^post30 = sum128^0
		
		propagated equality c^post30 = c^0
		
		propagated equality k63^post30 = k63^0
		
		propagated equality bitchanged48^post30 = bitchanged48^0
		
		propagated equality codeword50^post30 = codeword50^0
		
		propagated equality i25^post30 = i25^0
		
		propagated equality j20^post30 = j20^0
		
		propagated equality mask47^post30 = mask47^0
		
		propagated equality x029^post30 = x029^0
		
		propagated equality theta54^post30 = theta54^0
		
		propagated equality m64^post30 = m64^0
		
		propagated equality t44^post30 = t44^0
		
		propagated equality tmpmask56^post30 = tmpmask56^0
		
		propagated equality sqr11^post30 = sqr11^0
		
		propagated equality x43^post30 = x43^0
		
		propagated equality sum21^post30 = sum21^0
		
		propagated equality i19^post30 = i19^0
		
		propagated equality h132^post30 = h132^0
		
		propagated equality i37^post30 = i37^0
		
		propagated equality f36^post30 = f36^0
		
		propagated equality tmp___0^post30 = tmp___0^0
		
		propagated equality i13^post30 = i13^0
		
		propagated equality d^post30 = d^0
		
		propagated equality sum027^post30 = sum027^0
		
		propagated equality n65^post30 = n65^0
		
		propagated equality h031^post30 = h031^0
		
		propagated equality tmp^post30 = tmp^0
		
		propagated equality j55^post30 = j55^0
		
		propagated equality j62^post30 = j62^0
		
		propagated equality g51^post30 = g51^0
		
		propagated equality ret_codebook57^post30 = ret_codebook57^0
		
		propagated equality x130^post30 = x130^0
		
		propagated equality dotp14^post30 = dotp14^0
		
		propagated equality j26^post30 = j26^0
		
		propagated equality i61^post30 = i61^0
		
	Simplified Guard

	Original rule:
	l10 -> l8 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l10 -> l8 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l10 -> l8 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l10 -> l8 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l22 -> l21 : bitchanged48^0'=bitchanged48^post31, c^0'=c^post31, codeword50^0'=codeword50^post31, d^0'=d^post31, ddim53^0'=ddim53^post31, dotp14^0'=dotp14^post31, f36^0'=f36^post31, g51^0'=g51^post31, h031^0'=h031^post31, h132^0'=h132^post31, i13^0'=i13^post31, i19^0'=i19^post31, i25^0'=i25^post31, i37^0'=i37^post31, i61^0'=i61^post31, j20^0'=j20^post31, j26^0'=j26^post31, j55^0'=j55^post31, j62^0'=j62^post31, k63^0'=k63^post31, m64^0'=m64^post31, mask47^0'=mask47^post31, n35^0'=n35^post31, n45^0'=n45^post31, n65^0'=n65^post31, numbasis49^0'=numbasis49^post31, p66^0'=p66^post31, ret_codebook57^0'=ret_codebook57^post31, ret_latsynth38^0'=ret_latsynth38^post31, ret_mac15^0'=ret_mac15^post31, sqr11^0'=sqr11^post31, sum027^0'=sum027^post31, sum128^0'=sum128^post31, sum21^0'=sum21^post31, t44^0'=t44^post31, theta54^0'=theta54^post31, tmp^0'=tmp^post31, tmp___0^0'=tmp___0^post31, tmpmask56^0'=tmpmask56^post31, x029^0'=x029^post31, x130^0'=x130^post31, x43^0'=x43^post31, (ddim53^0-ddim53^post31 == 0 /\ h132^0-h132^post31 == 0 /\ j26^0-j26^post31 == 0 /\ x029^0-x029^post31 == 0 /\ -p66^post31+p66^0 == 0 /\ numbasis49^0-numbasis49^post31 == 0 /\ -n45^post31+n45^0 == 0 /\ d^0-d^post31 == 0 /\ i25^0-i25^post31 == 0 /\ -j55^post31+j55^0 == 0 /\ n35^0-n35^post31 == 0 /\ -j20^post31+j20^0 == 0 /\ -tmpmask56^post31+tmpmask56^0 == 0 /\ -mask47^post31+mask47^0 == 0 /\ -dotp14^post31+dotp14^0 == 0 /\ -tmp___0^post31+tmp___0^0 == 0 /\ k63^0-k63^post31 == 0 /\ tmp^0-tmp^post31 == 0 /\ -i61^post31+i61^0 == 0 /\ bitchanged48^0-bitchanged48^post31 == 0 /\ ret_latsynth38^0-ret_latsynth38^post31 == 0 /\ g51^0-g51^post31 == 0 /\ -sum027^post31+sum027^0 == 0 /\ -theta54^post31+theta54^0 == 0 /\ m64^0-m64^post31 == 0 /\ -i37^post31+i37^0 == 0 /\ -i19^post31+i19^0 == 0 /\ -i13^post31+i13^0 == 0 /\ t44^0-t44^post31 == 0 /\ c^0-c^post31 == 0 /\ -h031^post31+h031^0 == 0 /\ -ret_codebook57^post31+ret_codebook57^0 == 0 /\ -ret_mac15^post31+ret_mac15^0 == 0 /\ sqr11^0-sqr11^post31 == 0 /\ -sum128^post31+sum128^0 == 0 /\ -n65^post31+n65^0 == 0 /\ -j62^post31+j62^0 == 0 /\ -x43^post31+x43^0 == 0 /\ sum21^0-sum21^post31 == 0 /\ -codeword50^post31+codeword50^0 == 0 /\ -x130^post31+x130^0 == 0 /\ f36^0-f36^post31 == 0), cost: 1
	New rule:
	l22 -> l21 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality ddim53^post31 = ddim53^0
		
		propagated equality h132^post31 = h132^0
		
		propagated equality j26^post31 = j26^0
		
		propagated equality x029^post31 = x029^0
		
		propagated equality p66^post31 = p66^0
		
		propagated equality numbasis49^post31 = numbasis49^0
		
		propagated equality n45^post31 = n45^0
		
		propagated equality d^post31 = d^0
		
		propagated equality i25^post31 = i25^0
		
		propagated equality j55^post31 = j55^0
		
		propagated equality n35^post31 = n35^0
		
		propagated equality j20^post31 = j20^0
		
		propagated equality tmpmask56^post31 = tmpmask56^0
		
		propagated equality mask47^post31 = mask47^0
		
		propagated equality dotp14^post31 = dotp14^0
		
		propagated equality tmp___0^post31 = tmp___0^0
		
		propagated equality k63^post31 = k63^0
		
		propagated equality tmp^post31 = tmp^0
		
		propagated equality i61^post31 = i61^0
		
		propagated equality bitchanged48^post31 = bitchanged48^0
		
		propagated equality ret_latsynth38^post31 = ret_latsynth38^0
		
		propagated equality g51^post31 = g51^0
		
		propagated equality sum027^post31 = sum027^0
		
		propagated equality theta54^post31 = theta54^0
		
		propagated equality m64^post31 = m64^0
		
		propagated equality i37^post31 = i37^0
		
		propagated equality i19^post31 = i19^0
		
		propagated equality i13^post31 = i13^0
		
		propagated equality t44^post31 = t44^0
		
		propagated equality c^post31 = c^0
		
		propagated equality h031^post31 = h031^0
		
		propagated equality ret_codebook57^post31 = ret_codebook57^0
		
		propagated equality ret_mac15^post31 = ret_mac15^0
		
		propagated equality sqr11^post31 = sqr11^0
		
		propagated equality sum128^post31 = sum128^0
		
		propagated equality n65^post31 = n65^0
		
		propagated equality j62^post31 = j62^0
		
		propagated equality x43^post31 = x43^0
		
		propagated equality sum21^post31 = sum21^0
		
		propagated equality codeword50^post31 = codeword50^0
		
		propagated equality x130^post31 = x130^0
		
		propagated equality f36^post31 = f36^0
		
	Simplified Guard

	Original rule:
	l22 -> l21 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l22 -> l21 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l22 -> l21 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l22 -> l21 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l18 -> l20 : bitchanged48^0'=bitchanged48^post32, c^0'=c^post32, codeword50^0'=codeword50^post32, d^0'=d^post32, ddim53^0'=ddim53^post32, dotp14^0'=dotp14^post32, f36^0'=f36^post32, g51^0'=g51^post32, h031^0'=h031^post32, h132^0'=h132^post32, i13^0'=i13^post32, i19^0'=i19^post32, i25^0'=i25^post32, i37^0'=i37^post32, i61^0'=i61^post32, j20^0'=j20^post32, j26^0'=j26^post32, j55^0'=j55^post32, j62^0'=j62^post32, k63^0'=k63^post32, m64^0'=m64^post32, mask47^0'=mask47^post32, n35^0'=n35^post32, n45^0'=n45^post32, n65^0'=n65^post32, numbasis49^0'=numbasis49^post32, p66^0'=p66^post32, ret_codebook57^0'=ret_codebook57^post32, ret_latsynth38^0'=ret_latsynth38^post32, ret_mac15^0'=ret_mac15^post32, sqr11^0'=sqr11^post32, sum027^0'=sum027^post32, sum128^0'=sum128^post32, sum21^0'=sum21^post32, t44^0'=t44^post32, theta54^0'=theta54^post32, tmp^0'=tmp^post32, tmp___0^0'=tmp___0^post32, tmpmask56^0'=tmpmask56^post32, x029^0'=x029^post32, x130^0'=x130^post32, x43^0'=x43^post32, (-n45^post32+n45^0 == 0 /\ ddim53^0-ddim53^post32 == 0 /\ -n65^post32+n65^0 == 0 /\ h132^0-h132^post32 == 0 /\ -j26^post32+j26^0 == 0 /\ -j62^post32+j62^0 == 0 /\ -tmpmask56^post32+tmpmask56^0 == 0 /\ -ret_codebook57^post32+ret_codebook57^0 == 0 /\ -p66^post32+p66^0 == 0 /\ d^0-d^post32 == 0 /\ k63^0-k63^post32 == 0 /\ -j20^post32+j20^0 == 0 /\ numbasis49^0-numbasis49^post32 == 0 /\ -mask47^post32+mask47^0 == 0 /\ -theta54^post32+theta54^0 == 0 /\ ret_latsynth38^0-ret_latsynth38^post32 == 0 /\ tmp___0^0-tmp___0^post32 == 0 /\ bitchanged48^0-bitchanged48^post32 == 0 /\ i25^0-i25^post32 == 0 /\ j55^0-j55^post32 == 0 /\ -codeword50^post32+codeword50^0 == 0 /\ -ret_mac15^post32+ret_mac15^0 == 0 /\ -x029^post32+x029^0 == 0 /\ -x130^post32+x130^0 == 0 /\ -sum128^post32+sum128^0 == 0 /\ t44^0-t44^post32 == 0 /\ sqr11^0-sqr11^post32 == 0 /\ -dotp14^post32+dotp14^0 == 0 /\ -i37^post32+i37^0 == 0 /\ -h031^post32+h031^0 == 0 /\ -i61^post32+i61^0 == 0 /\ -i13^post32+i13^0 == 0 /\ -i19^post32+i19^0 == 0 /\ n35^0-n35^post32 == 0 /\ -sum21^post32+sum21^0 == 0 /\ -tmp^post32+tmp^0 == 0 /\ m64^0-m64^post32 == 0 /\ g51^0-g51^post32 == 0 /\ f36^0-f36^post32 == 0 /\ x43^0-x43^post32 == 0 /\ sum027^0-sum027^post32 == 0 /\ -c^post32+c^0 == 0), cost: 1
	New rule:
	l18 -> l20 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality n45^post32 = n45^0
		
		propagated equality ddim53^post32 = ddim53^0
		
		propagated equality n65^post32 = n65^0
		
		propagated equality h132^post32 = h132^0
		
		propagated equality j26^post32 = j26^0
		
		propagated equality j62^post32 = j62^0
		
		propagated equality tmpmask56^post32 = tmpmask56^0
		
		propagated equality ret_codebook57^post32 = ret_codebook57^0
		
		propagated equality p66^post32 = p66^0
		
		propagated equality d^post32 = d^0
		
		propagated equality k63^post32 = k63^0
		
		propagated equality j20^post32 = j20^0
		
		propagated equality numbasis49^post32 = numbasis49^0
		
		propagated equality mask47^post32 = mask47^0
		
		propagated equality theta54^post32 = theta54^0
		
		propagated equality ret_latsynth38^post32 = ret_latsynth38^0
		
		propagated equality tmp___0^post32 = tmp___0^0
		
		propagated equality bitchanged48^post32 = bitchanged48^0
		
		propagated equality i25^post32 = i25^0
		
		propagated equality j55^post32 = j55^0
		
		propagated equality codeword50^post32 = codeword50^0
		
		propagated equality ret_mac15^post32 = ret_mac15^0
		
		propagated equality x029^post32 = x029^0
		
		propagated equality x130^post32 = x130^0
		
		propagated equality sum128^post32 = sum128^0
		
		propagated equality t44^post32 = t44^0
		
		propagated equality sqr11^post32 = sqr11^0
		
		propagated equality dotp14^post32 = dotp14^0
		
		propagated equality i37^post32 = i37^0
		
		propagated equality h031^post32 = h031^0
		
		propagated equality i61^post32 = i61^0
		
		propagated equality i13^post32 = i13^0
		
		propagated equality i19^post32 = i19^0
		
		propagated equality n35^post32 = n35^0
		
		propagated equality sum21^post32 = sum21^0
		
		propagated equality tmp^post32 = tmp^0
		
		propagated equality m64^post32 = m64^0
		
		propagated equality g51^post32 = g51^0
		
		propagated equality f36^post32 = f36^0
		
		propagated equality x43^post32 = x43^0
		
		propagated equality sum027^post32 = sum027^0
		
		propagated equality c^post32 = c^0
		
	Simplified Guard

	Original rule:
	l18 -> l20 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l18 -> l20 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l18 -> l20 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l18 -> l20 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l19 -> l17 : bitchanged48^0'=bitchanged48^post33, c^0'=c^post33, codeword50^0'=codeword50^post33, d^0'=d^post33, ddim53^0'=ddim53^post33, dotp14^0'=dotp14^post33, f36^0'=f36^post33, g51^0'=g51^post33, h031^0'=h031^post33, h132^0'=h132^post33, i13^0'=i13^post33, i19^0'=i19^post33, i25^0'=i25^post33, i37^0'=i37^post33, i61^0'=i61^post33, j20^0'=j20^post33, j26^0'=j26^post33, j55^0'=j55^post33, j62^0'=j62^post33, k63^0'=k63^post33, m64^0'=m64^post33, mask47^0'=mask47^post33, n35^0'=n35^post33, n45^0'=n45^post33, n65^0'=n65^post33, numbasis49^0'=numbasis49^post33, p66^0'=p66^post33, ret_codebook57^0'=ret_codebook57^post33, ret_latsynth38^0'=ret_latsynth38^post33, ret_mac15^0'=ret_mac15^post33, sqr11^0'=sqr11^post33, sum027^0'=sum027^post33, sum128^0'=sum128^post33, sum21^0'=sum21^post33, t44^0'=t44^post33, theta54^0'=theta54^post33, tmp^0'=tmp^post33, tmp___0^0'=tmp___0^post33, tmpmask56^0'=tmpmask56^post33, x029^0'=x029^post33, x130^0'=x130^post33, x43^0'=x43^post33, (-j20^post33+j20^0 == 0 /\ x029^0-x029^post33 == 0 /\ k63^0-k63^post33 == 0 /\ -j26^post33+j26^0 == 0 /\ ddim53^0-ddim53^post33 == 0 /\ f36^0-f36^post33 == 0 /\ i25^0-i25^post33 == 0 /\ -j62^post33+j62^0 == 0 /\ -x130^post33+x130^0 == 0 /\ numbasis49^0-numbasis49^post33 == 0 /\ -theta54^post33+theta54^0 == 0 /\ -d^post33+d^0 == 0 /\ -i13^post33+i13^0 == 0 /\ -h031^post33+h031^0 == 0 /\ -i61^post33+i61^0 == 0 /\ -p66^post33+p66^0 == 0 /\ g51^0-g51^post33 == 0 /\ -n65^post33+n65^0 == 0 /\ j55^0-j55^post33 == 0 /\ t44^0-t44^post33 == 0 /\ ret_codebook57^0-ret_codebook57^post33 == 0 /\ n35^0-n35^post33 == 0 /\ ret_latsynth38^0-ret_latsynth38^post33 == 0 /\ -tmp^post33+tmp^0 == 0 /\ -sum128^post33+sum128^0 == 0 /\ mask47^0-mask47^post33 == 0 /\ -sum21^post33+sum21^0 == 0 /\ h132^0-h132^post33 == 0 /\ c^0-c^post33 == 0 /\ m64^0-m64^post33 == 0 /\ -x43^post33+x43^0 == 0 /\ sqr11^0-sqr11^post33 == 0 /\ -codeword50^post33+codeword50^0 == 0 /\ -bitchanged48^post33+bitchanged48^0 == 0 /\ -tmpmask56^post33+tmpmask56^0 == 0 /\ -ret_mac15^post33+ret_mac15^0 == 0 /\ -dotp14^post33+dotp14^0 == 0 /\ -i37^post33+i37^0 == 0 /\ tmp___0^0-tmp___0^post33 == 0 /\ -i19^post33+i19^0 == 0 /\ sum027^0-sum027^post33 == 0 /\ -n45^post33+n45^0 == 0), cost: 1
	New rule:
	l19 -> l17 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality j20^post33 = j20^0
		
		propagated equality x029^post33 = x029^0
		
		propagated equality k63^post33 = k63^0
		
		propagated equality j26^post33 = j26^0
		
		propagated equality ddim53^post33 = ddim53^0
		
		propagated equality f36^post33 = f36^0
		
		propagated equality i25^post33 = i25^0
		
		propagated equality j62^post33 = j62^0
		
		propagated equality x130^post33 = x130^0
		
		propagated equality numbasis49^post33 = numbasis49^0
		
		propagated equality theta54^post33 = theta54^0
		
		propagated equality d^post33 = d^0
		
		propagated equality i13^post33 = i13^0
		
		propagated equality h031^post33 = h031^0
		
		propagated equality i61^post33 = i61^0
		
		propagated equality p66^post33 = p66^0
		
		propagated equality g51^post33 = g51^0
		
		propagated equality n65^post33 = n65^0
		
		propagated equality j55^post33 = j55^0
		
		propagated equality t44^post33 = t44^0
		
		propagated equality ret_codebook57^post33 = ret_codebook57^0
		
		propagated equality n35^post33 = n35^0
		
		propagated equality ret_latsynth38^post33 = ret_latsynth38^0
		
		propagated equality tmp^post33 = tmp^0
		
		propagated equality sum128^post33 = sum128^0
		
		propagated equality mask47^post33 = mask47^0
		
		propagated equality sum21^post33 = sum21^0
		
		propagated equality h132^post33 = h132^0
		
		propagated equality c^post33 = c^0
		
		propagated equality m64^post33 = m64^0
		
		propagated equality x43^post33 = x43^0
		
		propagated equality sqr11^post33 = sqr11^0
		
		propagated equality codeword50^post33 = codeword50^0
		
		propagated equality bitchanged48^post33 = bitchanged48^0
		
		propagated equality tmpmask56^post33 = tmpmask56^0
		
		propagated equality ret_mac15^post33 = ret_mac15^0
		
		propagated equality dotp14^post33 = dotp14^0
		
		propagated equality i37^post33 = i37^0
		
		propagated equality tmp___0^post33 = tmp___0^0
		
		propagated equality i19^post33 = i19^0
		
		propagated equality sum027^post33 = sum027^0
		
		propagated equality n45^post33 = n45^0
		
	Simplified Guard

	Original rule:
	l19 -> l17 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l19 -> l17 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l19 -> l17 : bitchanged48^0'=bitchanged48^0, c^0'=c^0, codeword50^0'=codeword50^0, d^0'=d^0, ddim53^0'=ddim53^0, dotp14^0'=dotp14^0, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=i13^0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=sqr11^0, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l19 -> l17 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l24 -> l22 : bitchanged48^0'=bitchanged48^post34, c^0'=c^post34, codeword50^0'=codeword50^post34, d^0'=d^post34, ddim53^0'=ddim53^post34, dotp14^0'=dotp14^post34, f36^0'=f36^post34, g51^0'=g51^post34, h031^0'=h031^post34, h132^0'=h132^post34, i13^0'=i13^post34, i19^0'=i19^post34, i25^0'=i25^post34, i37^0'=i37^post34, i61^0'=i61^post34, j20^0'=j20^post34, j26^0'=j26^post34, j55^0'=j55^post34, j62^0'=j62^post34, k63^0'=k63^post34, m64^0'=m64^post34, mask47^0'=mask47^post34, n35^0'=n35^post34, n45^0'=n45^post34, n65^0'=n65^post34, numbasis49^0'=numbasis49^post34, p66^0'=p66^post34, ret_codebook57^0'=ret_codebook57^post34, ret_latsynth38^0'=ret_latsynth38^post34, ret_mac15^0'=ret_mac15^post34, sqr11^0'=sqr11^post34, sum027^0'=sum027^post34, sum128^0'=sum128^post34, sum21^0'=sum21^post34, t44^0'=t44^post34, theta54^0'=theta54^post34, tmp^0'=tmp^post34, tmp___0^0'=tmp___0^post34, tmpmask56^0'=tmpmask56^post34, x029^0'=x029^post34, x130^0'=x130^post34, x43^0'=x43^post34, (0 == 0 /\ -g51^post34+g51^post35 == 0 /\ f36^0-f36^post35 == 0 /\ -ret_latsynth38^post34+ret_latsynth38^post35 == 0 /\ -n65^post34+n65^post35 == 0 /\ i61^0-i61^post35 == 0 /\ -tmp___0^post35+tmp___0^0 == 0 /\ sum21^post35-sum21^post34 == 0 /\ -j26^post35+j26^0 == 0 /\ -j62^post34+j62^post35 == 0 /\ -theta54^post34+theta54^post35 == 0 /\ -j20^post35+j20^0 == 0 /\ -codeword50^post35+codeword50^0 == 0 /\ -mask47^post34+mask47^post35 == 0 /\ -dotp14^post35+dotp14^0 == 0 /\ i61^post35-i61^post34 == 0 /\ -sum21^post35+sum21^0 == 0 /\ i25^0-i25^post35 == 0 /\ -codeword50^post34+codeword50^post35 == 0 /\ -d^post35+d^0 == 0 /\ j55^0-j55^post35 == 0 /\ t44^0-t44^post35 == 0 /\ i37^post35-i37^post34 == 0 /\ -3+c^post34 == 0 /\ ddim53^0-ddim53^post35 == 0 /\ numbasis49^0-numbasis49^post35 == 0 /\ j26^post35-j26^post34 == 0 /\ -n65^post35+n65^0 == 0 /\ x130^post35-x130^post34 == 0 /\ -n45^post34+n45^post35 == 0 /\ -p66^post35+p66^0 == 0 /\ -h031^post35+h031^0 == 0 /\ -ddim53^post34+ddim53^post35 == 0 /\ -x43^post34+x43^post35 == 0 /\ -i13^post35+i13^0 == 0 /\ n35^0-n35^post35 == 0 /\ -x130^post35+x130^0 == 0 /\ m64^0-m64^post35 == 0 /\ c^0-c^post35 == 0 /\ ret_latsynth38^0-ret_latsynth38^post35 == 0 /\ -t44^post34+t44^post35 == 0 /\ -n35^post34+n35^post35 == 0 /\ -h132^post34+h132^post35 == 0 /\ g51^0-g51^post35 == 0 /\ bitchanged48^post35-bitchanged48^post34 == 0 /\ -sum128^post35+sum128^0 == 0 /\ x029^0-x029^post35 == 0 /\ i13^post34 == 0 /\ -n45^post35+n45^0 == 0 /\ -sum128^post34+sum128^post35 == 0 /\ -bitchanged48^post35+bitchanged48^0 == 0 /\ -numbasis49^post34+numbasis49^post35 == 0 /\ -mask47^post35+mask47^0 == 0 /\ -j62^post35+j62^0 == 0 /\ h031^post35-h031^post34 == 0 /\ -ret_mac15^post34+ret_mac15^post35 == 0 /\ -x029^post34+x029^post35 == 0 /\ -f36^post34+f36^post35 == 0 /\ h132^0-h132^post35 == 0 /\ -tmp^post34+tmp^post35 == 0 /\ tmp___0^post35-tmp___0^post34 == 0 /\ -j55^post34+j55^post35 == 0 /\ -tmpmask56^post34+tmpmask56^post35 == 0 /\ -m64^post34+m64^post35 == 0 /\ -p66^post34+p66^post35 == 0 /\ i19^0-i19^post35 == 0 /\ -theta54^post35+theta54^0 == 0 /\ -43690+d^post34 == 0 /\ -i19^post34+i19^post35 == 0 /\ sqr11^0-sqr11^post35 == 0 /\ -k63^post34+k63^post35 == 0 /\ -tmpmask56^post35+tmpmask56^0 == 0 /\ -ret_codebook57^post35+ret_codebook57^0 == 0 /\ -ret_mac15^post35+ret_mac15^0 == 0 /\ -sum027^post34+sum027^post35 == 0 /\ k63^0-k63^post35 == 0 /\ -i37^post35+i37^0 == 0 /\ sqr11^post34-c^post34 == 0 /\ sum027^0-sum027^post35 == 0 /\ -x43^post35+x43^0 == 0 /\ tmp^0-tmp^post35 == 0 /\ i25^post35-i25^post34 == 0 /\ ret_codebook57^post35-ret_codebook57^post34 == 0 /\ j20^post35-j20^post34 == 0), cost: 1
	New rule:
	l24 -> l22 : bitchanged48^0'=bitchanged48^post35, c^0'=3, codeword50^0'=codeword50^post35, d^0'=43690, ddim53^0'=ddim53^post35, dotp14^0'=dotp14^post34, f36^0'=f36^post35, g51^0'=g51^post35, h031^0'=h031^post35, h132^0'=h132^post35, i13^0'=0, i19^0'=i19^post35, i25^0'=i25^post35, i37^0'=i37^post35, i61^0'=i61^post35, j20^0'=j20^post35, j26^0'=j26^post35, j55^0'=j55^post35, j62^0'=j62^post35, k63^0'=k63^post35, m64^0'=m64^post35, mask47^0'=mask47^post35, n35^0'=n35^post35, n45^0'=n45^post35, n65^0'=n65^post35, numbasis49^0'=numbasis49^post35, p66^0'=p66^post35, ret_codebook57^0'=ret_codebook57^post35, ret_latsynth38^0'=ret_latsynth38^post35, ret_mac15^0'=ret_mac15^post35, sqr11^0'=3, sum027^0'=sum027^post35, sum128^0'=sum128^post35, sum21^0'=sum21^post35, t44^0'=t44^post35, theta54^0'=theta54^post35, tmp^0'=tmp^post35, tmp___0^0'=tmp___0^post35, tmpmask56^0'=tmpmask56^post35, x029^0'=x029^post35, x130^0'=x130^post35, x43^0'=x43^post35, (0 == 0 /\ f36^0-f36^post35 == 0 /\ i61^0-i61^post35 == 0 /\ -tmp___0^post35+tmp___0^0 == 0 /\ -j26^post35+j26^0 == 0 /\ -j20^post35+j20^0 == 0 /\ -codeword50^post35+codeword50^0 == 0 /\ -dotp14^post35+dotp14^0 == 0 /\ -sum21^post35+sum21^0 == 0 /\ i25^0-i25^post35 == 0 /\ -d^post35+d^0 == 0 /\ j55^0-j55^post35 == 0 /\ t44^0-t44^post35 == 0 /\ ddim53^0-ddim53^post35 == 0 /\ numbasis49^0-numbasis49^post35 == 0 /\ -n65^post35+n65^0 == 0 /\ -p66^post35+p66^0 == 0 /\ -h031^post35+h031^0 == 0 /\ -i13^post35+i13^0 == 0 /\ n35^0-n35^post35 == 0 /\ -x130^post35+x130^0 == 0 /\ m64^0-m64^post35 == 0 /\ c^0-c^post35 == 0 /\ ret_latsynth38^0-ret_latsynth38^post35 == 0 /\ g51^0-g51^post35 == 0 /\ -sum128^post35+sum128^0 == 0 /\ x029^0-x029^post35 == 0 /\ -n45^post35+n45^0 == 0 /\ -bitchanged48^post35+bitchanged48^0 == 0 /\ -mask47^post35+mask47^0 == 0 /\ -j62^post35+j62^0 == 0 /\ h132^0-h132^post35 == 0 /\ i19^0-i19^post35 == 0 /\ -theta54^post35+theta54^0 == 0 /\ sqr11^0-sqr11^post35 == 0 /\ -tmpmask56^post35+tmpmask56^0 == 0 /\ -ret_codebook57^post35+ret_codebook57^0 == 0 /\ -ret_mac15^post35+ret_mac15^0 == 0 /\ k63^0-k63^post35 == 0 /\ -i37^post35+i37^0 == 0 /\ sum027^0-sum027^post35 == 0 /\ -x43^post35+x43^0 == 0 /\ tmp^0-tmp^post35 == 0), cost: 1
	
		propagated equality g51^post34 = g51^post35
		
		propagated equality ret_latsynth38^post34 = ret_latsynth38^post35
		
		propagated equality n65^post34 = n65^post35
		
		propagated equality sum21^post34 = sum21^post35
		
		propagated equality j62^post34 = j62^post35
		
		propagated equality theta54^post34 = theta54^post35
		
		propagated equality mask47^post34 = mask47^post35
		
		propagated equality i61^post34 = i61^post35
		
		propagated equality codeword50^post34 = codeword50^post35
		
		propagated equality i37^post34 = i37^post35
		
		propagated equality c^post34 = 3
		
		propagated equality j26^post34 = j26^post35
		
		propagated equality x130^post34 = x130^post35
		
		propagated equality n45^post34 = n45^post35
		
		propagated equality ddim53^post34 = ddim53^post35
		
		propagated equality x43^post34 = x43^post35
		
		propagated equality t44^post34 = t44^post35
		
		propagated equality n35^post34 = n35^post35
		
		propagated equality h132^post34 = h132^post35
		
		propagated equality bitchanged48^post34 = bitchanged48^post35
		
		propagated equality i13^post34 = 0
		
		propagated equality sum128^post34 = sum128^post35
		
		propagated equality numbasis49^post34 = numbasis49^post35
		
		propagated equality h031^post34 = h031^post35
		
		propagated equality ret_mac15^post34 = ret_mac15^post35
		
		propagated equality x029^post34 = x029^post35
		
		propagated equality f36^post34 = f36^post35
		
		propagated equality tmp^post34 = tmp^post35
		
		propagated equality tmp___0^post34 = tmp___0^post35
		
		propagated equality j55^post34 = j55^post35
		
		propagated equality tmpmask56^post34 = tmpmask56^post35
		
		propagated equality m64^post34 = m64^post35
		
		propagated equality p66^post34 = p66^post35
		
		propagated equality d^post34 = 43690
		
		propagated equality i19^post34 = i19^post35
		
		propagated equality k63^post34 = k63^post35
		
		propagated equality sum027^post34 = sum027^post35
		
		propagated equality sqr11^post34 = 3
		
		propagated equality i25^post34 = i25^post35
		
		propagated equality ret_codebook57^post34 = ret_codebook57^post35
		
		propagated equality j20^post34 = j20^post35
		
	Propagated Equalities

	Original rule:
	l24 -> l22 : bitchanged48^0'=bitchanged48^post35, c^0'=3, codeword50^0'=codeword50^post35, d^0'=43690, ddim53^0'=ddim53^post35, dotp14^0'=dotp14^post34, f36^0'=f36^post35, g51^0'=g51^post35, h031^0'=h031^post35, h132^0'=h132^post35, i13^0'=0, i19^0'=i19^post35, i25^0'=i25^post35, i37^0'=i37^post35, i61^0'=i61^post35, j20^0'=j20^post35, j26^0'=j26^post35, j55^0'=j55^post35, j62^0'=j62^post35, k63^0'=k63^post35, m64^0'=m64^post35, mask47^0'=mask47^post35, n35^0'=n35^post35, n45^0'=n45^post35, n65^0'=n65^post35, numbasis49^0'=numbasis49^post35, p66^0'=p66^post35, ret_codebook57^0'=ret_codebook57^post35, ret_latsynth38^0'=ret_latsynth38^post35, ret_mac15^0'=ret_mac15^post35, sqr11^0'=3, sum027^0'=sum027^post35, sum128^0'=sum128^post35, sum21^0'=sum21^post35, t44^0'=t44^post35, theta54^0'=theta54^post35, tmp^0'=tmp^post35, tmp___0^0'=tmp___0^post35, tmpmask56^0'=tmpmask56^post35, x029^0'=x029^post35, x130^0'=x130^post35, x43^0'=x43^post35, (0 == 0 /\ f36^0-f36^post35 == 0 /\ i61^0-i61^post35 == 0 /\ -tmp___0^post35+tmp___0^0 == 0 /\ -j26^post35+j26^0 == 0 /\ -j20^post35+j20^0 == 0 /\ -codeword50^post35+codeword50^0 == 0 /\ -dotp14^post35+dotp14^0 == 0 /\ -sum21^post35+sum21^0 == 0 /\ i25^0-i25^post35 == 0 /\ -d^post35+d^0 == 0 /\ j55^0-j55^post35 == 0 /\ t44^0-t44^post35 == 0 /\ ddim53^0-ddim53^post35 == 0 /\ numbasis49^0-numbasis49^post35 == 0 /\ -n65^post35+n65^0 == 0 /\ -p66^post35+p66^0 == 0 /\ -h031^post35+h031^0 == 0 /\ -i13^post35+i13^0 == 0 /\ n35^0-n35^post35 == 0 /\ -x130^post35+x130^0 == 0 /\ m64^0-m64^post35 == 0 /\ c^0-c^post35 == 0 /\ ret_latsynth38^0-ret_latsynth38^post35 == 0 /\ g51^0-g51^post35 == 0 /\ -sum128^post35+sum128^0 == 0 /\ x029^0-x029^post35 == 0 /\ -n45^post35+n45^0 == 0 /\ -bitchanged48^post35+bitchanged48^0 == 0 /\ -mask47^post35+mask47^0 == 0 /\ -j62^post35+j62^0 == 0 /\ h132^0-h132^post35 == 0 /\ i19^0-i19^post35 == 0 /\ -theta54^post35+theta54^0 == 0 /\ sqr11^0-sqr11^post35 == 0 /\ -tmpmask56^post35+tmpmask56^0 == 0 /\ -ret_codebook57^post35+ret_codebook57^0 == 0 /\ -ret_mac15^post35+ret_mac15^0 == 0 /\ k63^0-k63^post35 == 0 /\ -i37^post35+i37^0 == 0 /\ sum027^0-sum027^post35 == 0 /\ -x43^post35+x43^0 == 0 /\ tmp^0-tmp^post35 == 0), cost: 1
	New rule:
	l24 -> l22 : bitchanged48^0'=bitchanged48^0, c^0'=3, codeword50^0'=codeword50^0, d^0'=43690, ddim53^0'=ddim53^0, dotp14^0'=dotp14^post34, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=3, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	
		propagated equality f36^post35 = f36^0
		
		propagated equality i61^post35 = i61^0
		
		propagated equality tmp___0^post35 = tmp___0^0
		
		propagated equality j26^post35 = j26^0
		
		propagated equality j20^post35 = j20^0
		
		propagated equality codeword50^post35 = codeword50^0
		
		propagated equality dotp14^post35 = dotp14^0
		
		propagated equality sum21^post35 = sum21^0
		
		propagated equality i25^post35 = i25^0
		
		propagated equality d^post35 = d^0
		
		propagated equality j55^post35 = j55^0
		
		propagated equality t44^post35 = t44^0
		
		propagated equality ddim53^post35 = ddim53^0
		
		propagated equality numbasis49^post35 = numbasis49^0
		
		propagated equality n65^post35 = n65^0
		
		propagated equality p66^post35 = p66^0
		
		propagated equality h031^post35 = h031^0
		
		propagated equality i13^post35 = i13^0
		
		propagated equality n35^post35 = n35^0
		
		propagated equality x130^post35 = x130^0
		
		propagated equality m64^post35 = m64^0
		
		propagated equality c^post35 = c^0
		
		propagated equality ret_latsynth38^post35 = ret_latsynth38^0
		
		propagated equality g51^post35 = g51^0
		
		propagated equality sum128^post35 = sum128^0
		
		propagated equality x029^post35 = x029^0
		
		propagated equality n45^post35 = n45^0
		
		propagated equality bitchanged48^post35 = bitchanged48^0
		
		propagated equality mask47^post35 = mask47^0
		
		propagated equality j62^post35 = j62^0
		
		propagated equality h132^post35 = h132^0
		
		propagated equality i19^post35 = i19^0
		
		propagated equality theta54^post35 = theta54^0
		
		propagated equality sqr11^post35 = sqr11^0
		
		propagated equality tmpmask56^post35 = tmpmask56^0
		
		propagated equality ret_codebook57^post35 = ret_codebook57^0
		
		propagated equality ret_mac15^post35 = ret_mac15^0
		
		propagated equality k63^post35 = k63^0
		
		propagated equality i37^post35 = i37^0
		
		propagated equality sum027^post35 = sum027^0
		
		propagated equality x43^post35 = x43^0
		
		propagated equality tmp^post35 = tmp^0
		
	Simplified Guard

	Original rule:
	l24 -> l22 : bitchanged48^0'=bitchanged48^0, c^0'=3, codeword50^0'=codeword50^0, d^0'=43690, ddim53^0'=ddim53^0, dotp14^0'=dotp14^post34, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=3, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, 0 == 0, cost: 1
	New rule:
	l24 -> l22 : bitchanged48^0'=bitchanged48^0, c^0'=3, codeword50^0'=codeword50^0, d^0'=43690, ddim53^0'=ddim53^0, dotp14^0'=dotp14^post34, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=3, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l24 -> l22 : bitchanged48^0'=bitchanged48^0, c^0'=3, codeword50^0'=codeword50^0, d^0'=43690, ddim53^0'=ddim53^0, dotp14^0'=dotp14^post34, f36^0'=f36^0, g51^0'=g51^0, h031^0'=h031^0, h132^0'=h132^0, i13^0'=0, i19^0'=i19^0, i25^0'=i25^0, i37^0'=i37^0, i61^0'=i61^0, j20^0'=j20^0, j26^0'=j26^0, j55^0'=j55^0, j62^0'=j62^0, k63^0'=k63^0, m64^0'=m64^0, mask47^0'=mask47^0, n35^0'=n35^0, n45^0'=n45^0, n65^0'=n65^0, numbasis49^0'=numbasis49^0, p66^0'=p66^0, ret_codebook57^0'=ret_codebook57^0, ret_latsynth38^0'=ret_latsynth38^0, ret_mac15^0'=ret_mac15^0, sqr11^0'=3, sum027^0'=sum027^0, sum128^0'=sum128^0, sum21^0'=sum21^0, t44^0'=t44^0, theta54^0'=theta54^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, tmpmask56^0'=tmpmask56^0, x029^0'=x029^0, x130^0'=x130^0, x43^0'=x43^0, T, cost: 1
	New rule:
	l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

Step with 69

	Trace

	69[T]
	
	Blocked

	[{}, {}]

Step with 66

	Trace

	69[T], 66[T]
	
	Blocked

	[{}, {}, {}]

Step with 62

	Trace

	69[T], 66[T], 62[(-149+i13^0 <= 0)]
	
	Blocked

	[{}, {}, {61[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  68: l19 -> l17 : T, cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
	New rule:
	l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1

		149-i13^0 >= 0 [0]: montonic decrease yields 150-n-i13^0 >= 0
		
		149-i13^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ 149-i13^0 >= 0)
		
		Replacement map: {149-i13^0 >= 0 -> 150-n-i13^0 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {70[T]}]

Step with 66

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T]
	
	Blocked

	[{}, {}, {70[T]}, {}]

Step with 62

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 62[(-149+i13^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}]

Step with 61

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}]

Step with 67

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {}]

Step with 60

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {59[T]}, {}]

Step with 68

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {}]

Step with 58

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T], 58[(-49+j20^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {57[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l19 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
	New rule:
	l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1

		49-j20^0 >= 0 [0]: montonic decrease yields 50-n2-j20^0 >= 0
		
		49-j20^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ 49-j20^0 >= 0)
		
		Replacement map: {49-j20^0 >= 0 -> 50-n2-j20^0 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {71[T]}]

Step with 68

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {71[T]}, {}]

Step with 58

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T], 58[(-49+j20^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {71[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {71[T]}, {58[T]}]

Step with 57

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T], 57[(50-j20^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {71[T]}, {58[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  72: l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l18 -> l18 : i19^0'=1+i19^0, j20^0'=50, sum21^0'=sum21^post232, -49+i19^0 <= 0, cost: 1
	New rule:
	l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1

		49-i19^0 >= 0 [0]: montonic decrease yields 50-i19^0-n3 >= 0
		
		49-i19^0 >= 0 [1]: eventual increase yields (49-i19^0 >= 0 /\ 1 <= 0)
		
		Replacement map: {49-i19^0 >= 0 -> 50-i19^0-n3 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}]

Step with 67

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}]

Step with 60

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {}]

Step with 68

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {}, {}]

Step with 58

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T], 58[(-49+j20^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {}, {57[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {}, {57[T], 58[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {68[T]}]

Step with 71

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {68[T]}, {71[T]}]

Step with 68

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {68[T]}, {71[T]}, {}]

Step with 58

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T], 58[(-49+j20^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {68[T]}, {71[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {68[T]}, {71[T]}, {58[T]}]

Step with 57

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T], 57[(50-j20^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {68[T]}, {71[T]}, {58[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {68[T]}, {71[T]}, {57[T], 58[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {68[T]}, {68[T], 71[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {}, {68[T], 71[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}]

Step with 59

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}]

Step with 36

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {}]

Step with 56

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {55[T]}, {}]

Step with 37

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {}]

Step with 54

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T], 54[(-31+i25^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {53[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  73: l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=i25^0+2*n4, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, (-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0), cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  72: l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
	New rule:
	l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=i25^0+2*n4, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, (-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0), cost: 1

		31-i25^0 >= 0 [0]: montonic decrease yields 33-i25^0-2*n4 >= 0
		
		31-i25^0 >= 0 [1]: eventual increase yields (2 <= 0 /\ 31-i25^0 >= 0)
		
		Replacement map: {31-i25^0 >= 0 -> 33-i25^0-2*n4 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {73[T]}]

Step with 37

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {73[T]}, {}]

Step with 54

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T], 54[(-31+i25^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {73[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {73[T]}, {54[T]}]

Step with 53

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T], 53[(32-i25^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {73[T]}, {54[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  74: l0 -> l0 : h031^0'=h031^post192, h132^0'=h132^post192, i25^0'=2*n41, j26^0'=2*n5+j26^0, sum027^0'=sum027^post192, sum128^0'=sum128^post192, x029^0'=x029^post192, x130^0'=x130^post192, (101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0), cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  73: l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=i25^0+2*n4, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, (-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0), cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  72: l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l0 -> l0 : h031^0'=h031^post192, h132^0'=h132^post192, i25^0'=2*n41, j26^0'=2+j26^0, sum027^0'=sum027^post192, sum128^0'=sum128^post192, x029^0'=x029^post192, x130^0'=x130^post192, (-99+j26^0 <= 0 /\ 33-2*n41 >= 0 /\ -1+n41 >= 0 /\ 32-2*n41 <= 0), cost: 1
	New rule:
	l0 -> l0 : h031^0'=h031^post192, h132^0'=h132^post192, i25^0'=2*n41, j26^0'=2*n5+j26^0, sum027^0'=sum027^post192, sum128^0'=sum128^post192, x029^0'=x029^post192, x130^0'=x130^post192, (101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0), cost: 1

		33-2*n41 >= 0 [0]: monotonic increase yields 33-2*n41 >= 0
		
		-32+2*n41 >= 0 [0]: monotonic increase yields -32+2*n41 >= 0
		
		-1+n41 >= 0 [0]: monotonic increase yields -1+n41 >= 0, dependencies: -32+2*n41 >= 0
		
		99-j26^0 >= 0 [0]: montonic decrease yields 101-2*n5-j26^0 >= 0
		
		99-j26^0 >= 0 [1]: eventual increase yields (2 <= 0 /\ 99-j26^0 >= 0)
		
		Replacement map: {33-2*n41 >= 0 -> 33-2*n41 >= 0, -32+2*n41 >= 0 -> -32+2*n41 >= 0, -1+n41 >= 0 -> -1+n41 >= 0, 99-j26^0 >= 0 -> 101-2*n5-j26^0 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}]

Step with 36

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}]

Step with 56

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {}]

Step with 37

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {}, {}]

Step with 54

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T], 54[(-31+i25^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {}, {53[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {}, {53[T], 54[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {37[T]}]

Step with 73

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {37[T]}, {73[T]}]

Step with 37

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {37[T]}, {73[T]}, {}]

Step with 54

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T], 54[(-31+i25^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {37[T]}, {73[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {37[T]}, {73[T]}, {54[T]}]

Step with 53

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T], 53[(32-i25^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {37[T]}, {73[T]}, {54[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {37[T]}, {73[T]}, {53[T], 54[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {37[T]}, {37[T], 73[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {}, {37[T], 73[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}]

Step with 55

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}]

Step with 38

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 38[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {}]

Step with 52

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 38[T], 52[(-i37^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {51[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  74: l0 -> l0 : h031^0'=h031^post192, h132^0'=h132^post192, i25^0'=2*n41, j26^0'=2*n5+j26^0, sum027^0'=sum027^post192, sum128^0'=sum128^post192, x029^0'=x029^post192, x130^0'=x130^post192, (101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0), cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  73: l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=i25^0+2*n4, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, (-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0), cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  75: l4 -> l4 : f36^0'=f36^post17, i37^0'=-n6+i37^0, (-1+n6 >= 0 /\ 1-n6+i37^0 >= 0), cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  72: l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l4 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
	New rule:
	l4 -> l4 : f36^0'=f36^post17, i37^0'=-n6+i37^0, (-1+n6 >= 0 /\ 1-n6+i37^0 >= 0), cost: 1

		i37^0 >= 0 [0]: montonic decrease yields 1-n6+i37^0 >= 0
		
		i37^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ i37^0 >= 0)
		
		Replacement map: {i37^0 >= 0 -> 1-n6+i37^0 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}]

Step with 38

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {}]

Step with 52

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 52[(-i37^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}]

Step with 51

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}]

Step with 39

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 39[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {}]

Step with 49

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 39[T], 49[(-49+n45^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {48[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  74: l0 -> l0 : h031^0'=h031^post192, h132^0'=h132^post192, i25^0'=2*n41, j26^0'=2*n5+j26^0, sum027^0'=sum027^post192, sum128^0'=sum128^post192, x029^0'=x029^post192, x130^0'=x130^post192, (101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0), cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  73: l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=i25^0+2*n4, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, (-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0), cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  75: l4 -> l4 : f36^0'=f36^post17, i37^0'=-n6+i37^0, (-1+n6 >= 0 /\ 1-n6+i37^0 >= 0), cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  76: l6 -> l6 : n45^0'=n7+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, (50-n7-n45^0 >= 0 /\ -1+n7 >= 0), cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  72: l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l6 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
	New rule:
	l6 -> l6 : n45^0'=n7+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, (50-n7-n45^0 >= 0 /\ -1+n7 >= 0), cost: 1

		49-n45^0 >= 0 [0]: montonic decrease yields 50-n7-n45^0 >= 0
		
		49-n45^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ 49-n45^0 >= 0)
		
		Replacement map: {49-n45^0 >= 0 -> 50-n7-n45^0 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}]

Step with 39

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {}]

Step with 49

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 49[(-49+n45^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}]

Step with 48

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}]

Step with 50

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 50[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {}]

Step with 47

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 50[T], 47[(j55^0-numbasis49^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {46[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  74: l0 -> l0 : h031^0'=h031^post192, h132^0'=h132^post192, i25^0'=2*n41, j26^0'=2*n5+j26^0, sum027^0'=sum027^post192, sum128^0'=sum128^post192, x029^0'=x029^post192, x130^0'=x130^post192, (101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0), cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  73: l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=i25^0+2*n4, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, (-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0), cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  75: l4 -> l4 : f36^0'=f36^post17, i37^0'=-n6+i37^0, (-1+n6 >= 0 /\ 1-n6+i37^0 >= 0), cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  76: l6 -> l6 : n45^0'=n7+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, (50-n7-n45^0 >= 0 /\ -1+n7 >= 0), cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  77: l16 -> l16 : j55^0'=j55^0+n8, (1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0), cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  72: l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l16 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
	New rule:
	l16 -> l16 : j55^0'=j55^0+n8, (1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0), cost: 1

		-j55^0+numbasis49^0 >= 0 [0]: montonic decrease yields 1-j55^0+numbasis49^0-n8 >= 0
		
		-j55^0+numbasis49^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -j55^0+numbasis49^0 >= 0)
		
		Replacement map: {-j55^0+numbasis49^0 >= 0 -> 1-j55^0+numbasis49^0-n8 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}]

Step with 50

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {}]

Step with 47

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 47[(j55^0-numbasis49^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}]

Step with 46

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}]

Step with 63

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {}]

Step with 45

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}]

Step with 64

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {}]

Step with 43

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {40[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  74: l0 -> l0 : h031^0'=h031^post192, h132^0'=h132^post192, i25^0'=2*n41, j26^0'=2*n5+j26^0, sum027^0'=sum027^post192, sum128^0'=sum128^post192, x029^0'=x029^post192, x130^0'=x130^post192, (101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0), cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  73: l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=i25^0+2*n4, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, (-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0), cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  75: l4 -> l4 : f36^0'=f36^post17, i37^0'=-n6+i37^0, (-1+n6 >= 0 /\ 1-n6+i37^0 >= 0), cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  76: l6 -> l6 : n45^0'=n7+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, (50-n7-n45^0 >= 0 /\ -1+n7 >= 0), cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  65: l10 -> l8 : T, cost: 1
  78: l10 -> l10 : j62^0'=n9+j62^0, (-1+n9 >= 0 /\ 4-n9-j62^0 >= 0), cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  77: l16 -> l16 : j55^0'=j55^0+n8, (1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0), cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  72: l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l10 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
	New rule:
	l10 -> l10 : j62^0'=n9+j62^0, (-1+n9 >= 0 /\ 4-n9-j62^0 >= 0), cost: 1

		3-j62^0 >= 0 [0]: montonic decrease yields 4-n9-j62^0 >= 0
		
		3-j62^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ 3-j62^0 >= 0)
		
		Replacement map: {3-j62^0 >= 0 -> 4-n9-j62^0 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {78[T]}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {78[T]}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {78[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {78[T]}, {41[T]}]

Step with 40

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 40[(4-j62^0 <= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {78[T]}, {41[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  74: l0 -> l0 : h031^0'=h031^post192, h132^0'=h132^post192, i25^0'=2*n41, j26^0'=2*n5+j26^0, sum027^0'=sum027^post192, sum128^0'=sum128^post192, x029^0'=x029^post192, x130^0'=x130^post192, (101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0), cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  73: l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=i25^0+2*n4, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, (-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0), cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  75: l4 -> l4 : f36^0'=f36^post17, i37^0'=-n6+i37^0, (-1+n6 >= 0 /\ 1-n6+i37^0 >= 0), cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  76: l6 -> l6 : n45^0'=n7+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, (50-n7-n45^0 >= 0 /\ -1+n7 >= 0), cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  79: l9 -> l9 : i61^0'=i61^0+n10, j62^0'=4, (8-i61^0-n10 >= 0 /\ -1+n10 >= 0), cost: 1
  65: l10 -> l8 : T, cost: 1
  78: l10 -> l10 : j62^0'=n9+j62^0, (-1+n9 >= 0 /\ 4-n9-j62^0 >= 0), cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  77: l16 -> l16 : j55^0'=j55^0+n8, (1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0), cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  72: l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l9 -> l9 : i61^0'=1+i61^0, j62^0'=4, -7+i61^0 <= 0, cost: 1
	New rule:
	l9 -> l9 : i61^0'=i61^0+n10, j62^0'=4, (8-i61^0-n10 >= 0 /\ -1+n10 >= 0), cost: 1

		7-i61^0 >= 0 [0]: montonic decrease yields 8-i61^0-n10 >= 0
		
		7-i61^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ 7-i61^0 >= 0)
		
		Replacement map: {7-i61^0 >= 0 -> 8-i61^0-n10 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)]
	
	Blocked

	[{}, {}, {70[T]}, {62[T]}, {}, {72[T]}, {60[T]}, {}, {74[T]}, {56[T]}, {}, {75[T]}, {52[T]}, {}, {76[T]}, {49[T]}, {}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {79[T]}]

Restart

Step with 69

	Trace

	69[T]
	
	Blocked

	[{}, {}]

Step with 66

	Trace

	69[T], 66[T]
	
	Blocked

	[{}, {}, {}]

Step with 62

	Trace

	69[T], 66[T], 62[(-149+i13^0 <= 0)]
	
	Blocked

	[{}, {}, {61[T]}, {}]

Covered

	Trace

	69[T], 66[T]
	
	Blocked

	[{}, {}, {61[T], 62[T]}]

Backtrack

	Trace

	69[T]
	
	Blocked

	[{}, {66[T]}]

Step with 70

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}]

Step with 66

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {}]

Step with 62

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 62[(-149+i13^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}]

Step with 61

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}]

Step with 67

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {}]

Step with 60

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {}]

Step with 68

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {}]

Step with 58

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T], 58[(-49+j20^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {}, {58[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {68[T]}]

Step with 71

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {68[T]}, {71[T]}]

Step with 68

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {68[T]}, {71[T]}, {}]

Step with 58

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T], 58[(-49+j20^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {68[T]}, {71[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {68[T]}, {71[T]}, {58[T]}]

Step with 57

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T], 57[(50-j20^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {68[T]}, {71[T]}, {58[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {68[T]}, {71[T]}, {57[T], 58[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {68[T]}, {68[T], 71[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T]}, {68[T], 71[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 67[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {}, {59[T], 60[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}]

Step with 72

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}]

Step with 67

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}]

Step with 60

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {}]

Step with 68

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {}, {}]

Step with 58

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T], 58[(-49+j20^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {}, {57[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {}, {57[T], 58[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {68[T]}]

Step with 71

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {68[T]}, {71[T]}]

Step with 68

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {68[T]}, {71[T]}, {}]

Step with 58

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T], 58[(-49+j20^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {68[T]}, {71[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {68[T]}, {71[T]}, {58[T]}]

Step with 57

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T], 57[(50-j20^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {68[T]}, {71[T]}, {58[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)], 68[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {68[T]}, {71[T]}, {57[T], 58[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)], 71[(-1+n2 >= 0 /\ 50-n2-j20^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {68[T]}, {68[T], 71[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 60[(-49+i19^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {}, {68[T], 71[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}]

Step with 59

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}]

Step with 36

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {}]

Step with 56

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {}]

Step with 37

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {}]

Step with 54

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T], 54[(-31+i25^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {}, {54[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {37[T]}]

Step with 73

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {37[T]}, {73[T]}]

Step with 37

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {37[T]}, {73[T]}, {}]

Step with 54

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T], 54[(-31+i25^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {37[T]}, {73[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {37[T]}, {73[T]}, {54[T]}]

Step with 53

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T], 53[(32-i25^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {37[T]}, {73[T]}, {54[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {37[T]}, {73[T]}, {53[T], 54[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {37[T]}, {37[T], 73[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T]}, {37[T], 73[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 36[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {}, {55[T], 56[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}]

Step with 74

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}]

Step with 36

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}]

Step with 56

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {}]

Step with 37

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {}, {}]

Step with 54

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T], 54[(-31+i25^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {}, {53[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {}, {53[T], 54[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {37[T]}]

Step with 73

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {37[T]}, {73[T]}]

Step with 37

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {37[T]}, {73[T]}, {}]

Step with 54

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T], 54[(-31+i25^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {37[T]}, {73[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {37[T]}, {73[T]}, {54[T]}]

Step with 53

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T], 53[(32-i25^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {37[T]}, {73[T]}, {54[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)], 37[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {37[T]}, {73[T]}, {53[T], 54[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)], 73[(-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {37[T]}, {37[T], 73[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 56[(-99+j26^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {}, {37[T], 73[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}]

Step with 55

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {}]

Step with 38

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 38[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {}, {}]

Step with 52

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 38[T], 52[(-i37^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {}, {51[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 38[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {}, {51[T], 52[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}]

Step with 75

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}]

Step with 38

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {}]

Step with 52

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 52[(-i37^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}]

Step with 51

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {}]

Step with 39

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 39[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {}, {}]

Step with 49

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 39[T], 49[(-49+n45^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {}, {48[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 39[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {}, {48[T], 49[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}]

Step with 76

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}]

Step with 39

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {}]

Step with 49

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 49[(-49+n45^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}]

Step with 48

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {}]

Step with 50

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 50[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {}, {}]

Step with 47

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 50[T], 47[(j55^0-numbasis49^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {}, {46[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 50[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {}, {46[T], 47[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}]

Step with 77

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}]

Step with 50

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {}]

Step with 47

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 47[(j55^0-numbasis49^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}]

Step with 46

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}]

Step with 63

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {}]

Step with 45

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}]

Step with 64

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {}]

Step with 43

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {}, {41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {65[T]}]

Step with 78

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {41[T]}]

Step with 40

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 40[(4-j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {41[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {65[T]}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T]}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {}, {42[T], 43[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}]

Step with 79

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}]

Step with 64

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}]

Step with 43

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {}, {40[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}]

Step with 78

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {41[T]}]

Step with 40

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 40[(4-j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {41[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {43[T]}]

Step with 42

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 42[(8-i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {44[T]}, {64[T]}, {79[T]}, {43[T]}, {}]

Accelerate

Start location: l24
Program variables: bitchanged48^0 c^0 codeword50^0 d^0 ddim53^0 dotp14^0 f36^0 g51^0 h031^0 h132^0 i13^0 i19^0 i25^0 i37^0 i61^0 j20^0 j26^0 j55^0 j62^0 k63^0 m64^0 mask47^0 n35^0 n45^0 n65^0 numbasis49^0 p66^0 ret_codebook57^0 ret_latsynth38^0 ret_mac15^0 sqr11^0 sum027^0 sum128^0 sum21^0 t44^0 theta54^0 tmp^0 tmp___0^0 tmpmask56^0 x029^0 x130^0 x43^0
  36: l0 -> l1 : T, cost: 1
  74: l0 -> l0 : h031^0'=h031^post192, h132^0'=h132^post192, i25^0'=2*n41, j26^0'=2*n5+j26^0, sum027^0'=sum027^post192, sum128^0'=sum128^post192, x029^0'=x029^post192, x130^0'=x130^post192, (101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0), cost: 1
  55: l1 -> l4 : f36^0'=f36^post20, i37^0'=98, n35^0'=100, 100-j26^0 <= 0, cost: 1
  56: l1 -> l2 : i25^0'=0, sum027^0'=0, sum128^0'=0, x029^0'=x029^post21, -99+j26^0 <= 0, cost: 1
  37: l2 -> l3 : T, cost: 1
  73: l2 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=i25^0+2*n4, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, (-1+n4 >= 0 /\ 33-i25^0-2*n4 >= 0), cost: 1
  53: l3 -> l0 : j26^0'=2+j26^0, 32-i25^0 <= 0, cost: 1
  54: l3 -> l2 : h031^0'=h031^post19, h132^0'=h132^post19, i25^0'=2+i25^0, sum027^0'=sum027^post19, sum128^0'=sum128^post19, x029^0'=x029^post19, x130^0'=x130^post19, -31+i25^0 <= 0, cost: 1
  38: l4 -> l5 : T, cost: 1
  75: l4 -> l4 : f36^0'=f36^post17, i37^0'=-n6+i37^0, (-1+n6 >= 0 /\ 1-n6+i37^0 >= 0), cost: 1
  51: l5 -> l6 : d^0'=f36^0, n45^0'=0, ret_latsynth38^0'=f36^0, x43^0'=x43^post16, 1+i37^0 <= 0, cost: 1
  52: l5 -> l4 : f36^0'=f36^post17, i37^0'=-1+i37^0, -i37^0 <= 0, cost: 1
  39: l6 -> l7 : T, cost: 1
  76: l6 -> l6 : n45^0'=n7+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, (50-n7-n45^0 >= 0 /\ -1+n7 >= 0), cost: 1
  48: l7 -> l16 : bitchanged48^0'=1, codeword50^0'=codeword50^post13, ddim53^0'=c^0, g51^0'=d^0, j55^0'=2, mask47^0'=d^0, numbasis49^0'=17, theta54^0'=1, tmpmask56^0'=tmpmask56^post13, 50-n45^0 <= 0, cost: 1
  49: l7 -> l6 : n45^0'=1+n45^0, t44^0'=t44^post14, x43^0'=x43^post14, -49+n45^0 <= 0, cost: 1
  40: l8 -> l9 : i61^0'=1+i61^0, 4-j62^0 <= 0, cost: 1
  41: l8 -> l10 : j62^0'=1+j62^0, -3+j62^0 <= 0, cost: 1
  64: l9 -> l11 : T, cost: 1
  79: l9 -> l9 : i61^0'=i61^0+n10, j62^0'=4, (8-i61^0-n10 >= 0 /\ -1+n10 >= 0), cost: 1
  65: l10 -> l8 : T, cost: 1
  78: l10 -> l10 : j62^0'=n9+j62^0, (-1+n9 >= 0 /\ 4-n9-j62^0 >= 0), cost: 1
  42: l11 -> l12 : k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, 8-i61^0 <= 0, cost: 1
  43: l11 -> l10 : j62^0'=0, -7+i61^0 <= 0, cost: 1
  63: l12 -> l13 : T, cost: 1
  80: l12 -> l12 : i61^0'=8, j62^0'=4, k63^0'=k63^0+7*n12, m64^0'=m64^0+3*n12, n65^0'=n65^0+3*n12, p66^0'=p66^0-7*n12, (15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0), cost: 1
  44: l13 -> l14 : 9-k63^0 <= 0, cost: 1
  45: l13 -> l9 : i61^0'=0, -8+k63^0 <= 0, cost: 1
  46: l15 -> l12 : k63^0'=1, m64^0'=0, n65^0'=13, p66^0'=8, ret_codebook57^0'=g51^0, tmp___0^0'=g51^0, 1-j55^0+numbasis49^0 <= 0, cost: 1
  47: l15 -> l16 : j55^0'=1+j55^0, j55^0-numbasis49^0 <= 0, cost: 1
  50: l16 -> l15 : T, cost: 1
  77: l16 -> l16 : j55^0'=j55^0+n8, (1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0), cost: 1
  57: l17 -> l18 : i19^0'=1+i19^0, 50-j20^0 <= 0, cost: 1
  58: l17 -> l19 : j20^0'=1+j20^0, sum21^0'=sum21^post23, -49+j20^0 <= 0, cost: 1
  67: l18 -> l20 : T, cost: 1
  72: l18 -> l18 : i19^0'=i19^0+n3, j20^0'=50, sum21^0'=sum21^post232, (-1+n3 >= 0 /\ 50-i19^0-n3 >= 0), cost: 1
  68: l19 -> l17 : T, cost: 1
  71: l19 -> l19 : j20^0'=n2+j20^0, sum21^0'=sum21^post23, (-1+n2 >= 0 /\ 50-n2-j20^0 >= 0), cost: 1
  59: l20 -> l0 : j26^0'=0, 50-i19^0 <= 0, cost: 1
  60: l20 -> l19 : j20^0'=0, sum21^0'=0, -49+i19^0 <= 0, cost: 1
  61: l21 -> l18 : c^0'=sqr11^0, i19^0'=0, ret_mac15^0'=sqr11^0, tmp^0'=sqr11^0, 150-i13^0 <= 0, cost: 1
  62: l21 -> l22 : dotp14^0'=dotp14^post27, i13^0'=1+i13^0, sqr11^0'=sqr11^post27, -149+i13^0 <= 0, cost: 1
  66: l22 -> l21 : T, cost: 1
  70: l22 -> l22 : dotp14^0'=dotp14^post27, i13^0'=n+i13^0, sqr11^0'=sqr11^post27, (150-n-i13^0 >= 0 /\ -1+n >= 0), cost: 1
  69: l24 -> l22 : c^0'=3, d^0'=43690, dotp14^0'=dotp14^post34, i13^0'=0, sqr11^0'=3, T, cost: 1

	Loop Acceleration

	Original rule:
	l12 -> l12 : i61^0'=8, j62^0'=4, k63^0'=7+k63^0, m64^0'=3+m64^0, n65^0'=3+n65^0, p66^0'=-7+p66^0, -8+k63^0 <= 0, cost: 1
	New rule:
	l12 -> l12 : i61^0'=8, j62^0'=4, k63^0'=k63^0+7*n12, m64^0'=m64^0+3*n12, n65^0'=n65^0+3*n12, p66^0'=p66^0-7*n12, (15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0), cost: 1

		8-k63^0 >= 0 [0]: montonic decrease yields 15-k63^0-7*n12 >= 0
		
		8-k63^0 >= 0 [1]: eventual increase yields (7 <= 0 /\ 8-k63^0 >= 0)
		
		Replacement map: {8-k63^0 >= 0 -> 15-k63^0-7*n12 >= 0}

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}]

Step with 63

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}]

Step with 45

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}]

Step with 64

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {}]

Step with 43

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {}, {40[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {65[T]}]

Step with 78

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {65[T]}, {78[T]}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {65[T]}, {78[T]}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {65[T]}, {78[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {65[T]}, {78[T]}, {41[T]}]

Step with 40

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 40[(4-j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {65[T]}, {78[T]}, {41[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {65[T]}, {78[T]}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {65[T]}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T]}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {}, {42[T], 43[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}]

Step with 79

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}]

Step with 64

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}]

Step with 43

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {}, {40[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {65[T]}]

Step with 78

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {41[T]}]

Step with 40

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 40[(4-j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {41[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {65[T]}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {43[T]}]

Step with 42

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 42[(8-i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {43[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {79[T]}, {42[T], 43[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T]}, {64[T], 79[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 45[(-8+k63^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {}, {64[T], 79[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {45[T]}]

Step with 44

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T], 44[(9-k63^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {45[T]}, {}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)], 63[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {80[T]}, {44[T], 45[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 80[(15-k63^0-7*n12 >= 0 /\ -1+n12 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {}, {63[T], 80[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}]

Step with 63

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {}]

Step with 45

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}]

Step with 64

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {}]

Step with 43

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {}, {40[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {65[T]}]

Step with 78

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {41[T]}]

Step with 40

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 40[(4-j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {41[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {65[T]}, {78[T]}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {65[T]}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T]}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {}, {42[T], 43[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}]

Step with 79

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}]

Step with 64

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}]

Step with 43

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {}, {40[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}]

Step with 78

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}]

Step with 65

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {}]

Step with 41

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 41[(-3+j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {41[T]}]

Step with 40

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T], 40[(4-j62^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {41[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)], 65[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {78[T]}, {40[T], 41[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)], 78[(-1+n9 >= 0 /\ 4-n9-j62^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T]}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 43[(-7+i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {}, {65[T], 78[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {43[T]}]

Step with 42

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T], 42[(8-i61^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {43[T]}, {}]

Covered

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)], 64[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {79[T]}, {42[T], 43[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)], 79[(8-i61^0-n10 >= 0 /\ -1+n10 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T]}, {64[T], 79[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T], 45[(-8+k63^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T]}, {64[T], 79[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)], 63[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {80[T]}, {44[T], 45[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T], 46[(1-j55^0+numbasis49^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {47[T]}, {63[T], 80[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)], 50[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {77[T]}, {46[T], 47[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)], 77[(1-j55^0+numbasis49^0-n8 >= 0 /\ -1+n8 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T]}, {50[T], 77[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T], 48[(50-n45^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {49[T]}, {50[T], 77[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)], 39[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {76[T]}, {48[T], 49[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)], 76[(50-n7-n45^0 >= 0 /\ -1+n7 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T]}, {39[T], 76[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T], 51[(1+i37^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {52[T]}, {39[T], 76[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)], 38[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {75[T]}, {51[T], 52[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)], 75[(-1+n6 >= 0 /\ 1-n6+i37^0 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T]}, {38[T], 75[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T], 55[(100-j26^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {56[T]}, {38[T], 75[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)], 36[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {74[T]}, {55[T], 56[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)], 74[(101-2*n5-j26^0 >= 0 /\ 33-2*n41 >= 0 /\ -32+2*n41 >= 0 /\ -1+n5 >= 0 /\ -1+n41 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T]}, {36[T], 74[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T], 59[(50-i19^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {60[T]}, {36[T], 74[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)], 67[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {72[T]}, {59[T], 60[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)], 72[(-1+n3 >= 0 /\ 50-i19^0-n3 >= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T]}, {67[T], 72[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T], 61[(150-i13^0 <= 0)]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {62[T]}, {67[T], 72[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)], 66[T]
	
	Blocked

	[{}, {66[T]}, {70[T]}, {61[T], 62[T]}]

Backtrack

	Trace

	69[T], 70[(150-n-i13^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {66[T]}, {66[T], 70[T]}]

Backtrack

	Trace

	69[T]
	
	Blocked

	[{}, {66[T], 70[T]}]

Backtrack

	Trace

	Blocked

	[{69[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
