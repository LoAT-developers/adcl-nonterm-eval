YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l6, not((main_x > 1))>
<l2, l3, (main_x > 1)>
<l3, l6, not(((~(2) * main_x) = main_oldx))>
<l3, l4, ((~(2) * main_x) = main_oldx)>
<l4, l5, true, seq{main_oldx -> main_x, main_x -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l5, l2, true>
<l6, l7, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l8, true, seq{main__func_return_ -> 0}>
<l8, l9, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l9, l1, true, seq{main_x -> varCall_1}>
<l1, l2, true>
<l2, l3, (main_x > 1)>
<l2, l6, not((main_x > 1))>
<l3, l4, ((~(2) * main_x) = main_oldx)>
<l3, l6, not(((~(2) * main_x) = main_oldx))>
<l4, l10, true, seq{main_oldx -> main_x}>
<l10, l11, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l11, l5, true, seq{main_x -> varCall_2}>
<l5, l2, true>
<l6, l7, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
7, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [4 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 20, col: 1> | <line: 24, col: 9> <line: 27, col: 13>
main | function | [integer, ()] | <line: 22, col: 1>
x | local variable | integer | <line: 23, col: 5> | <line: 24, col: 5> <line: 25, col: 12> <line: 25, col: 24> <line: 26, col: 16> <line: 27, col: 9>
oldx | local variable | integer | <line: 23, col: 5> | <line: 25, col: 29> <line: 26, col: 9>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef3)>
<l2, l2, (main_x > 1) /\ ((~(2) * main_x) = main_oldx), par{main_x -> undef4, main_oldx -> main_x}>
<l2, l7, (main_x > 1) /\ ((~(2) * main_x) < main_oldx)>
<l2, l7, (main_x > 1) /\ ((~(2) * main_x) > main_oldx)>
<l2, l7, not((main_x > 1))>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
7, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 2 <= main_x /\ 2*main_x + main_oldx = 0, {main_x -> undef4, main_oldx -> main_x, rest remain the same}>
Variables:
main_x, main_oldx

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef3, {all remain the same}>

Graph 2
<l2, l7, 1 <= 2*main_x + main_oldx /\ 2 <= main_x, {all remain the same}>
<l2, l7, 1 + 2*main_x + main_oldx <= 0 /\ 2 <= main_x, {all remain the same}>
<l2, l7, main_x <= 1, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 7 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001277

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000543s
[33mRanking function: [36m(~(2) / 3) + (~(1) / 6)*main_oldx[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l7}...
No cycles found.

[32mProgram Terminates[0m
