WORST_CASE(Omega(0),?)

Initial ITS
Start location: l10
   0: l0 -> l1 : acc_length11^0'=acc_length11^post0, __const_285^0'=__const_285^post0, j9^0'=j9^post0, coef_len6^0'=coef_len6^post0, acc12^0'=acc12^post0, __const_10^0'=__const_10^post0, in_len4^0'=in_len4^post0, coef_len210^0'=coef_len210^post0, __const_35^0'=__const_35^post0, scale7^0'=scale7^post0, i8^0'=i8^post0, (-scale7^post0+scale7^0 == 0 /\ -coef_len6^post0+coef_len6^0 == 0 /\ __const_285^0-__const_285^post0 == 0 /\ __const_10^0-__const_10^post0 == 0 /\ -in_len4^post0+in_len4^0 == 0 /\ -i8^post0+i8^0 == 0 /\ -coef_len210^post0+coef_len210^0 == 0 /\ -__const_35^post0+__const_35^0 == 0 /\ acc_length11^0-acc_length11^post0 == 0 /\ j9^0-j9^post0 == 0 /\ acc12^0-acc12^post0 == 0), cost: 1
   3: l1 -> l3 : acc_length11^0'=acc_length11^post3, __const_285^0'=__const_285^post3, j9^0'=j9^post3, coef_len6^0'=coef_len6^post3, acc12^0'=acc12^post3, __const_10^0'=__const_10^post3, in_len4^0'=in_len4^post3, coef_len210^0'=coef_len210^post3, __const_35^0'=__const_35^post3, scale7^0'=scale7^post3, i8^0'=i8^post3, (-1+i8^post3-i8^0 == 0 /\ -scale7^post3+scale7^0 == 0 /\ -acc12^post3+acc12^0 == 0 /\ -in_len4^post3+in_len4^0 == 0 /\ __const_35^0-__const_35^post3 == 0 /\ j9^0-j9^post3 == 0 /\ coef_len210^0-coef_len210^post3 == 0 /\ __const_285^0-__const_285^post3 == 0 /\ -__const_10^post3+__const_10^0 == 0 /\ acc_length11^0-acc_length11^post3 == 0 /\ coef_len6^0-coef_len6^post3 == 0), cost: 1
   1: l2 -> l0 : acc_length11^0'=acc_length11^post1, __const_285^0'=__const_285^post1, j9^0'=j9^post1, coef_len6^0'=coef_len6^post1, acc12^0'=acc12^post1, __const_10^0'=__const_10^post1, in_len4^0'=in_len4^post1, coef_len210^0'=coef_len210^post1, __const_35^0'=__const_35^post1, scale7^0'=scale7^post1, i8^0'=i8^post1, (acc_length11^0-acc_length11^post1 == 0 /\ j9^0-j9^post1 == 0 /\ -acc_length11^0+coef_len6^0 <= 0 /\ -acc12^post1+acc12^0 == 0 /\ -__const_35^post1+__const_35^0 == 0 /\ coef_len6^0-coef_len6^post1 == 0 /\ -in_len4^post1+in_len4^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ __const_285^0-__const_285^post1 == 0 /\ coef_len210^0-coef_len210^post1 == 0 /\ -scale7^post1+scale7^0 == 0 /\ -i8^post1+i8^0 == 0), cost: 1
   2: l2 -> l0 : acc_length11^0'=acc_length11^post2, __const_285^0'=__const_285^post2, j9^0'=j9^post2, coef_len6^0'=coef_len6^post2, acc12^0'=acc12^post2, __const_10^0'=__const_10^post2, in_len4^0'=in_len4^post2, coef_len210^0'=coef_len210^post2, __const_35^0'=__const_35^post2, scale7^0'=scale7^post2, i8^0'=i8^post2, (acc12^0-acc12^post2 == 0 /\ -__const_10^post2+__const_10^0 == 0 /\ -j9^post2+j9^0 == 0 /\ in_len4^0-in_len4^post2 == 0 /\ -i8^post2+i8^0 == 0 /\ -1-acc_length11^0+acc_length11^post2 == 0 /\ -coef_len210^post2+coef_len210^0 == 0 /\ -scale7^post2+scale7^0 == 0 /\ 1+acc_length11^0-coef_len6^0 <= 0 /\ __const_285^0-__const_285^post2 == 0 /\ -__const_35^post2+__const_35^0 == 0 /\ coef_len6^0-coef_len6^post2 == 0), cost: 1
   7: l3 -> l5 : acc_length11^0'=acc_length11^post7, __const_285^0'=__const_285^post7, j9^0'=j9^post7, coef_len6^0'=coef_len6^post7, acc12^0'=acc12^post7, __const_10^0'=__const_10^post7, in_len4^0'=in_len4^post7, coef_len210^0'=coef_len210^post7, __const_35^0'=__const_35^post7, scale7^0'=scale7^post7, i8^0'=i8^post7, (-__const_35^post7+__const_35^0 == 0 /\ -coef_len6^post7+coef_len6^0 == 0 /\ -i8^post7+i8^0 == 0 /\ -__const_10^post7+__const_10^0 == 0 /\ in_len4^0-in_len4^post7 == 0 /\ acc12^0-acc12^post7 == 0 /\ __const_285^0-__const_285^post7 == 0 /\ acc_length11^0-acc_length11^post7 == 0 /\ j9^0-j9^post7 == 0 /\ -scale7^post7+scale7^0 == 0 /\ -coef_len210^post7+coef_len210^0 == 0), cost: 1
   4: l4 -> l2 : acc_length11^0'=acc_length11^post4, __const_285^0'=__const_285^post4, j9^0'=j9^post4, coef_len6^0'=coef_len6^post4, acc12^0'=acc12^post4, __const_10^0'=__const_10^post4, in_len4^0'=in_len4^post4, coef_len210^0'=coef_len210^post4, __const_35^0'=__const_35^post4, scale7^0'=scale7^post4, i8^0'=i8^post4, (-scale7^post4+scale7^0 == 0 /\ -__const_285^post4+__const_285^0 == 0 /\ in_len4^0-in_len4^post4 == 0 /\ -i8^post4+i8^0 == 0 /\ -__const_35^post4+__const_35^0 == 0 /\ acc_length11^0-acc_length11^post4 == 0 /\ coef_len6^0-coef_len6^post4 == 0 /\ j9^0-j9^post4 == 0 /\ acc12^0-acc12^post4 == 0 /\ coef_len210^0-coef_len210^post4 == 0 /\ -__const_10^post4+__const_10^0 == 0), cost: 1
   5: l4 -> l1 : acc_length11^0'=acc_length11^post5, __const_285^0'=__const_285^post5, j9^0'=j9^post5, coef_len6^0'=coef_len6^post5, acc12^0'=acc12^post5, __const_10^0'=__const_10^post5, in_len4^0'=in_len4^post5, coef_len210^0'=coef_len210^post5, __const_35^0'=__const_35^post5, scale7^0'=scale7^post5, i8^0'=i8^post5, (-coef_len210^post5+coef_len210^0 == 0 /\ -__const_35^post5+__const_35^0 == 0 /\ -scale7^post5+scale7^0 == 0 /\ -i8^post5+i8^0 == 0 /\ -coef_len6^post5+coef_len6^0 == 0 /\ acc12^0-acc12^post5 == 0 /\ -in_len4^post5+in_len4^0 == 0 /\ __const_285^0-__const_285^post5 == 0 /\ __const_10^0-__const_10^post5 == 0 /\ j9^0-j9^post5 == 0 /\ 1-acc_length11^0+acc_length11^post5 == 0), cost: 1
   6: l4 -> l2 : acc_length11^0'=acc_length11^post6, __const_285^0'=__const_285^post6, j9^0'=j9^post6, coef_len6^0'=coef_len6^post6, acc12^0'=acc12^post6, __const_10^0'=__const_10^post6, in_len4^0'=in_len4^post6, coef_len210^0'=coef_len210^post6, __const_35^0'=__const_35^post6, scale7^0'=scale7^post6, i8^0'=i8^post6, (-acc12^post6+acc12^0 == 0 /\ -__const_10^post6+__const_10^0 == 0 /\ acc_length11^0-acc_length11^post6 == 0 /\ coef_len6^0-coef_len6^post6 == 0 /\ -scale7^post6+scale7^0 == 0 /\ -i8^post6+i8^0 == 0 /\ -in_len4^post6+in_len4^0 == 0 /\ __const_285^0-__const_285^post6 == 0 /\ coef_len210^0-coef_len210^post6 == 0 /\ -__const_35^post6+__const_35^0 == 0 /\ j9^0-j9^post6 == 0), cost: 1
  11: l5 -> l8 : acc_length11^0'=acc_length11^post11, __const_285^0'=__const_285^post11, j9^0'=j9^post11, coef_len6^0'=coef_len6^post11, acc12^0'=acc12^post11, __const_10^0'=__const_10^post11, in_len4^0'=in_len4^post11, coef_len210^0'=coef_len210^post11, __const_35^0'=__const_35^post11, scale7^0'=scale7^post11, i8^0'=i8^post11, (acc_length11^0-acc_length11^post11 == 0 /\ in_len4^0-i8^0 <= 0 /\ -acc12^post11+acc12^0 == 0 /\ j9^0-j9^post11 == 0 /\ coef_len210^0-coef_len210^post11 == 0 /\ -__const_35^post11+__const_35^0 == 0 /\ __const_285^0-__const_285^post11 == 0 /\ __const_10^0-__const_10^post11 == 0 /\ -scale7^post11+scale7^0 == 0 /\ -in_len4^post11+in_len4^0 == 0 /\ -i8^post11+i8^0 == 0 /\ coef_len6^0-coef_len6^post11 == 0), cost: 1
  12: l5 -> l7 : acc_length11^0'=acc_length11^post12, __const_285^0'=__const_285^post12, j9^0'=j9^post12, coef_len6^0'=coef_len6^post12, acc12^0'=acc12^post12, __const_10^0'=__const_10^post12, in_len4^0'=in_len4^post12, coef_len210^0'=coef_len210^post12, __const_35^0'=__const_35^post12, scale7^0'=scale7^post12, i8^0'=i8^post12, (0 == 0 /\ -__const_10^post12+__const_10^0 == 0 /\ in_len4^0-in_len4^post12 == 0 /\ -coef_len210^post12+coef_len210^0 == 0 /\ -scale7^post12+scale7^0 == 0 /\ -i8^post12+i8^0 == 0 /\ 1-in_len4^0+i8^0 <= 0 /\ __const_285^0-__const_285^post12 == 0 /\ acc_length11^0-acc_length11^post12 == 0 /\ coef_len6^0-coef_len6^post12 == 0 /\ -1+j9^post12 == 0 /\ -__const_35^post12+__const_35^0 == 0), cost: 1
   8: l6 -> l4 : acc_length11^0'=acc_length11^post8, __const_285^0'=__const_285^post8, j9^0'=j9^post8, coef_len6^0'=coef_len6^post8, acc12^0'=acc12^post8, __const_10^0'=__const_10^post8, in_len4^0'=in_len4^post8, coef_len210^0'=coef_len210^post8, __const_35^0'=__const_35^post8, scale7^0'=scale7^post8, i8^0'=i8^post8, (__const_35^0-__const_35^post8 == 0 /\ -scale7^post8+scale7^0 == 0 /\ __const_285^0-__const_285^post8 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ -in_len4^post8+in_len4^0 == 0 /\ -coef_len210^post8+coef_len210^0 == 0 /\ j9^0-j9^post8 == 0 /\ acc12^0-acc12^post8 == 0 /\ -i8^post8+i8^0 == 0 /\ acc_length11^0-j9^0 <= 0 /\ acc_length11^0-acc_length11^post8 == 0 /\ -coef_len6^post8+coef_len6^0 == 0), cost: 1
   9: l6 -> l7 : acc_length11^0'=acc_length11^post9, __const_285^0'=__const_285^post9, j9^0'=j9^post9, coef_len6^0'=coef_len6^post9, acc12^0'=acc12^post9, __const_10^0'=__const_10^post9, in_len4^0'=in_len4^post9, coef_len210^0'=coef_len210^post9, __const_35^0'=__const_35^post9, scale7^0'=scale7^post9, i8^0'=i8^post9, (0 == 0 /\ -scale7^post9+scale7^0 == 0 /\ -1-j9^0+j9^post9 == 0 /\ 1-acc_length11^0+j9^0 <= 0 /\ coef_len6^0-coef_len6^post9 == 0 /\ -i8^post9+i8^0 == 0 /\ -__const_285^post9+__const_285^0 == 0 /\ in_len4^0-in_len4^post9 == 0 /\ acc_length11^0-acc_length11^post9 == 0 /\ -__const_35^post9+__const_35^0 == 0 /\ coef_len210^0-coef_len210^post9 == 0 /\ -__const_10^post9+__const_10^0 == 0), cost: 1
  10: l7 -> l6 : acc_length11^0'=acc_length11^post10, __const_285^0'=__const_285^post10, j9^0'=j9^post10, coef_len6^0'=coef_len6^post10, acc12^0'=acc12^post10, __const_10^0'=__const_10^post10, in_len4^0'=in_len4^post10, coef_len210^0'=coef_len210^post10, __const_35^0'=__const_35^post10, scale7^0'=scale7^post10, i8^0'=i8^post10, (acc_length11^0-acc_length11^post10 == 0 /\ in_len4^0-in_len4^post10 == 0 /\ scale7^0-scale7^post10 == 0 /\ -j9^post10+j9^0 == 0 /\ -__const_35^post10+__const_35^0 == 0 /\ acc12^0-acc12^post10 == 0 /\ -coef_len210^post10+coef_len210^0 == 0 /\ __const_10^0-__const_10^post10 == 0 /\ -coef_len6^post10+coef_len6^0 == 0 /\ __const_285^0-__const_285^post10 == 0 /\ -i8^post10+i8^0 == 0), cost: 1
  13: l9 -> l3 : acc_length11^0'=acc_length11^post13, __const_285^0'=__const_285^post13, j9^0'=j9^post13, coef_len6^0'=coef_len6^post13, acc12^0'=acc12^post13, __const_10^0'=__const_10^post13, in_len4^0'=in_len4^post13, coef_len210^0'=coef_len210^post13, __const_35^0'=__const_35^post13, scale7^0'=scale7^post13, i8^0'=i8^post13, (0 == 0 /\ __const_285^0-__const_285^post13 == 0 /\ __const_10^0-__const_10^post13 == 0 /\ in_len4^post13-__const_10^0 == 0 /\ acc_length11^post13-coef_len210^post13 == 0 /\ i8^post13 == 0 /\ coef_len6^post13-__const_35^0 == 0 /\ scale7^post13-__const_285^0 == 0 /\ -__const_35^post13+__const_35^0 == 0 /\ acc12^0-acc12^post13 == 0 /\ j9^0-j9^post13 == 0), cost: 1
  14: l10 -> l9 : acc_length11^0'=acc_length11^post14, __const_285^0'=__const_285^post14, j9^0'=j9^post14, coef_len6^0'=coef_len6^post14, acc12^0'=acc12^post14, __const_10^0'=__const_10^post14, in_len4^0'=in_len4^post14, coef_len210^0'=coef_len210^post14, __const_35^0'=__const_35^post14, scale7^0'=scale7^post14, i8^0'=i8^post14, (-acc12^post14+acc12^0 == 0 /\ -scale7^post14+scale7^0 == 0 /\ coef_len6^0-coef_len6^post14 == 0 /\ -__const_10^post14+__const_10^0 == 0 /\ -i8^post14+i8^0 == 0 /\ coef_len210^0-coef_len210^post14 == 0 /\ acc_length11^0-acc_length11^post14 == 0 /\ -__const_35^post14+__const_35^0 == 0 /\ -in_len4^post14+in_len4^0 == 0 /\ j9^0-j9^post14 == 0 /\ __const_285^0-__const_285^post14 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l10
   0: l0 -> l1 : acc_length11^0'=acc_length11^post0, __const_285^0'=__const_285^post0, j9^0'=j9^post0, coef_len6^0'=coef_len6^post0, acc12^0'=acc12^post0, __const_10^0'=__const_10^post0, in_len4^0'=in_len4^post0, coef_len210^0'=coef_len210^post0, __const_35^0'=__const_35^post0, scale7^0'=scale7^post0, i8^0'=i8^post0, (-scale7^post0+scale7^0 == 0 /\ -coef_len6^post0+coef_len6^0 == 0 /\ __const_285^0-__const_285^post0 == 0 /\ __const_10^0-__const_10^post0 == 0 /\ -in_len4^post0+in_len4^0 == 0 /\ -i8^post0+i8^0 == 0 /\ -coef_len210^post0+coef_len210^0 == 0 /\ -__const_35^post0+__const_35^0 == 0 /\ acc_length11^0-acc_length11^post0 == 0 /\ j9^0-j9^post0 == 0 /\ acc12^0-acc12^post0 == 0), cost: 1
   3: l1 -> l3 : acc_length11^0'=acc_length11^post3, __const_285^0'=__const_285^post3, j9^0'=j9^post3, coef_len6^0'=coef_len6^post3, acc12^0'=acc12^post3, __const_10^0'=__const_10^post3, in_len4^0'=in_len4^post3, coef_len210^0'=coef_len210^post3, __const_35^0'=__const_35^post3, scale7^0'=scale7^post3, i8^0'=i8^post3, (-1+i8^post3-i8^0 == 0 /\ -scale7^post3+scale7^0 == 0 /\ -acc12^post3+acc12^0 == 0 /\ -in_len4^post3+in_len4^0 == 0 /\ __const_35^0-__const_35^post3 == 0 /\ j9^0-j9^post3 == 0 /\ coef_len210^0-coef_len210^post3 == 0 /\ __const_285^0-__const_285^post3 == 0 /\ -__const_10^post3+__const_10^0 == 0 /\ acc_length11^0-acc_length11^post3 == 0 /\ coef_len6^0-coef_len6^post3 == 0), cost: 1
   1: l2 -> l0 : acc_length11^0'=acc_length11^post1, __const_285^0'=__const_285^post1, j9^0'=j9^post1, coef_len6^0'=coef_len6^post1, acc12^0'=acc12^post1, __const_10^0'=__const_10^post1, in_len4^0'=in_len4^post1, coef_len210^0'=coef_len210^post1, __const_35^0'=__const_35^post1, scale7^0'=scale7^post1, i8^0'=i8^post1, (acc_length11^0-acc_length11^post1 == 0 /\ j9^0-j9^post1 == 0 /\ -acc_length11^0+coef_len6^0 <= 0 /\ -acc12^post1+acc12^0 == 0 /\ -__const_35^post1+__const_35^0 == 0 /\ coef_len6^0-coef_len6^post1 == 0 /\ -in_len4^post1+in_len4^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ __const_285^0-__const_285^post1 == 0 /\ coef_len210^0-coef_len210^post1 == 0 /\ -scale7^post1+scale7^0 == 0 /\ -i8^post1+i8^0 == 0), cost: 1
   2: l2 -> l0 : acc_length11^0'=acc_length11^post2, __const_285^0'=__const_285^post2, j9^0'=j9^post2, coef_len6^0'=coef_len6^post2, acc12^0'=acc12^post2, __const_10^0'=__const_10^post2, in_len4^0'=in_len4^post2, coef_len210^0'=coef_len210^post2, __const_35^0'=__const_35^post2, scale7^0'=scale7^post2, i8^0'=i8^post2, (acc12^0-acc12^post2 == 0 /\ -__const_10^post2+__const_10^0 == 0 /\ -j9^post2+j9^0 == 0 /\ in_len4^0-in_len4^post2 == 0 /\ -i8^post2+i8^0 == 0 /\ -1-acc_length11^0+acc_length11^post2 == 0 /\ -coef_len210^post2+coef_len210^0 == 0 /\ -scale7^post2+scale7^0 == 0 /\ 1+acc_length11^0-coef_len6^0 <= 0 /\ __const_285^0-__const_285^post2 == 0 /\ -__const_35^post2+__const_35^0 == 0 /\ coef_len6^0-coef_len6^post2 == 0), cost: 1
   7: l3 -> l5 : acc_length11^0'=acc_length11^post7, __const_285^0'=__const_285^post7, j9^0'=j9^post7, coef_len6^0'=coef_len6^post7, acc12^0'=acc12^post7, __const_10^0'=__const_10^post7, in_len4^0'=in_len4^post7, coef_len210^0'=coef_len210^post7, __const_35^0'=__const_35^post7, scale7^0'=scale7^post7, i8^0'=i8^post7, (-__const_35^post7+__const_35^0 == 0 /\ -coef_len6^post7+coef_len6^0 == 0 /\ -i8^post7+i8^0 == 0 /\ -__const_10^post7+__const_10^0 == 0 /\ in_len4^0-in_len4^post7 == 0 /\ acc12^0-acc12^post7 == 0 /\ __const_285^0-__const_285^post7 == 0 /\ acc_length11^0-acc_length11^post7 == 0 /\ j9^0-j9^post7 == 0 /\ -scale7^post7+scale7^0 == 0 /\ -coef_len210^post7+coef_len210^0 == 0), cost: 1
   4: l4 -> l2 : acc_length11^0'=acc_length11^post4, __const_285^0'=__const_285^post4, j9^0'=j9^post4, coef_len6^0'=coef_len6^post4, acc12^0'=acc12^post4, __const_10^0'=__const_10^post4, in_len4^0'=in_len4^post4, coef_len210^0'=coef_len210^post4, __const_35^0'=__const_35^post4, scale7^0'=scale7^post4, i8^0'=i8^post4, (-scale7^post4+scale7^0 == 0 /\ -__const_285^post4+__const_285^0 == 0 /\ in_len4^0-in_len4^post4 == 0 /\ -i8^post4+i8^0 == 0 /\ -__const_35^post4+__const_35^0 == 0 /\ acc_length11^0-acc_length11^post4 == 0 /\ coef_len6^0-coef_len6^post4 == 0 /\ j9^0-j9^post4 == 0 /\ acc12^0-acc12^post4 == 0 /\ coef_len210^0-coef_len210^post4 == 0 /\ -__const_10^post4+__const_10^0 == 0), cost: 1
   5: l4 -> l1 : acc_length11^0'=acc_length11^post5, __const_285^0'=__const_285^post5, j9^0'=j9^post5, coef_len6^0'=coef_len6^post5, acc12^0'=acc12^post5, __const_10^0'=__const_10^post5, in_len4^0'=in_len4^post5, coef_len210^0'=coef_len210^post5, __const_35^0'=__const_35^post5, scale7^0'=scale7^post5, i8^0'=i8^post5, (-coef_len210^post5+coef_len210^0 == 0 /\ -__const_35^post5+__const_35^0 == 0 /\ -scale7^post5+scale7^0 == 0 /\ -i8^post5+i8^0 == 0 /\ -coef_len6^post5+coef_len6^0 == 0 /\ acc12^0-acc12^post5 == 0 /\ -in_len4^post5+in_len4^0 == 0 /\ __const_285^0-__const_285^post5 == 0 /\ __const_10^0-__const_10^post5 == 0 /\ j9^0-j9^post5 == 0 /\ 1-acc_length11^0+acc_length11^post5 == 0), cost: 1
   6: l4 -> l2 : acc_length11^0'=acc_length11^post6, __const_285^0'=__const_285^post6, j9^0'=j9^post6, coef_len6^0'=coef_len6^post6, acc12^0'=acc12^post6, __const_10^0'=__const_10^post6, in_len4^0'=in_len4^post6, coef_len210^0'=coef_len210^post6, __const_35^0'=__const_35^post6, scale7^0'=scale7^post6, i8^0'=i8^post6, (-acc12^post6+acc12^0 == 0 /\ -__const_10^post6+__const_10^0 == 0 /\ acc_length11^0-acc_length11^post6 == 0 /\ coef_len6^0-coef_len6^post6 == 0 /\ -scale7^post6+scale7^0 == 0 /\ -i8^post6+i8^0 == 0 /\ -in_len4^post6+in_len4^0 == 0 /\ __const_285^0-__const_285^post6 == 0 /\ coef_len210^0-coef_len210^post6 == 0 /\ -__const_35^post6+__const_35^0 == 0 /\ j9^0-j9^post6 == 0), cost: 1
  12: l5 -> l7 : acc_length11^0'=acc_length11^post12, __const_285^0'=__const_285^post12, j9^0'=j9^post12, coef_len6^0'=coef_len6^post12, acc12^0'=acc12^post12, __const_10^0'=__const_10^post12, in_len4^0'=in_len4^post12, coef_len210^0'=coef_len210^post12, __const_35^0'=__const_35^post12, scale7^0'=scale7^post12, i8^0'=i8^post12, (0 == 0 /\ -__const_10^post12+__const_10^0 == 0 /\ in_len4^0-in_len4^post12 == 0 /\ -coef_len210^post12+coef_len210^0 == 0 /\ -scale7^post12+scale7^0 == 0 /\ -i8^post12+i8^0 == 0 /\ 1-in_len4^0+i8^0 <= 0 /\ __const_285^0-__const_285^post12 == 0 /\ acc_length11^0-acc_length11^post12 == 0 /\ coef_len6^0-coef_len6^post12 == 0 /\ -1+j9^post12 == 0 /\ -__const_35^post12+__const_35^0 == 0), cost: 1
   8: l6 -> l4 : acc_length11^0'=acc_length11^post8, __const_285^0'=__const_285^post8, j9^0'=j9^post8, coef_len6^0'=coef_len6^post8, acc12^0'=acc12^post8, __const_10^0'=__const_10^post8, in_len4^0'=in_len4^post8, coef_len210^0'=coef_len210^post8, __const_35^0'=__const_35^post8, scale7^0'=scale7^post8, i8^0'=i8^post8, (__const_35^0-__const_35^post8 == 0 /\ -scale7^post8+scale7^0 == 0 /\ __const_285^0-__const_285^post8 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ -in_len4^post8+in_len4^0 == 0 /\ -coef_len210^post8+coef_len210^0 == 0 /\ j9^0-j9^post8 == 0 /\ acc12^0-acc12^post8 == 0 /\ -i8^post8+i8^0 == 0 /\ acc_length11^0-j9^0 <= 0 /\ acc_length11^0-acc_length11^post8 == 0 /\ -coef_len6^post8+coef_len6^0 == 0), cost: 1
   9: l6 -> l7 : acc_length11^0'=acc_length11^post9, __const_285^0'=__const_285^post9, j9^0'=j9^post9, coef_len6^0'=coef_len6^post9, acc12^0'=acc12^post9, __const_10^0'=__const_10^post9, in_len4^0'=in_len4^post9, coef_len210^0'=coef_len210^post9, __const_35^0'=__const_35^post9, scale7^0'=scale7^post9, i8^0'=i8^post9, (0 == 0 /\ -scale7^post9+scale7^0 == 0 /\ -1-j9^0+j9^post9 == 0 /\ 1-acc_length11^0+j9^0 <= 0 /\ coef_len6^0-coef_len6^post9 == 0 /\ -i8^post9+i8^0 == 0 /\ -__const_285^post9+__const_285^0 == 0 /\ in_len4^0-in_len4^post9 == 0 /\ acc_length11^0-acc_length11^post9 == 0 /\ -__const_35^post9+__const_35^0 == 0 /\ coef_len210^0-coef_len210^post9 == 0 /\ -__const_10^post9+__const_10^0 == 0), cost: 1
  10: l7 -> l6 : acc_length11^0'=acc_length11^post10, __const_285^0'=__const_285^post10, j9^0'=j9^post10, coef_len6^0'=coef_len6^post10, acc12^0'=acc12^post10, __const_10^0'=__const_10^post10, in_len4^0'=in_len4^post10, coef_len210^0'=coef_len210^post10, __const_35^0'=__const_35^post10, scale7^0'=scale7^post10, i8^0'=i8^post10, (acc_length11^0-acc_length11^post10 == 0 /\ in_len4^0-in_len4^post10 == 0 /\ scale7^0-scale7^post10 == 0 /\ -j9^post10+j9^0 == 0 /\ -__const_35^post10+__const_35^0 == 0 /\ acc12^0-acc12^post10 == 0 /\ -coef_len210^post10+coef_len210^0 == 0 /\ __const_10^0-__const_10^post10 == 0 /\ -coef_len6^post10+coef_len6^0 == 0 /\ __const_285^0-__const_285^post10 == 0 /\ -i8^post10+i8^0 == 0), cost: 1
  13: l9 -> l3 : acc_length11^0'=acc_length11^post13, __const_285^0'=__const_285^post13, j9^0'=j9^post13, coef_len6^0'=coef_len6^post13, acc12^0'=acc12^post13, __const_10^0'=__const_10^post13, in_len4^0'=in_len4^post13, coef_len210^0'=coef_len210^post13, __const_35^0'=__const_35^post13, scale7^0'=scale7^post13, i8^0'=i8^post13, (0 == 0 /\ __const_285^0-__const_285^post13 == 0 /\ __const_10^0-__const_10^post13 == 0 /\ in_len4^post13-__const_10^0 == 0 /\ acc_length11^post13-coef_len210^post13 == 0 /\ i8^post13 == 0 /\ coef_len6^post13-__const_35^0 == 0 /\ scale7^post13-__const_285^0 == 0 /\ -__const_35^post13+__const_35^0 == 0 /\ acc12^0-acc12^post13 == 0 /\ j9^0-j9^post13 == 0), cost: 1
  14: l10 -> l9 : acc_length11^0'=acc_length11^post14, __const_285^0'=__const_285^post14, j9^0'=j9^post14, coef_len6^0'=coef_len6^post14, acc12^0'=acc12^post14, __const_10^0'=__const_10^post14, in_len4^0'=in_len4^post14, coef_len210^0'=coef_len210^post14, __const_35^0'=__const_35^post14, scale7^0'=scale7^post14, i8^0'=i8^post14, (-acc12^post14+acc12^0 == 0 /\ -scale7^post14+scale7^0 == 0 /\ coef_len6^0-coef_len6^post14 == 0 /\ -__const_10^post14+__const_10^0 == 0 /\ -i8^post14+i8^0 == 0 /\ coef_len210^0-coef_len210^post14 == 0 /\ acc_length11^0-acc_length11^post14 == 0 /\ -__const_35^post14+__const_35^0 == 0 /\ -in_len4^post14+in_len4^0 == 0 /\ j9^0-j9^post14 == 0 /\ __const_285^0-__const_285^post14 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : acc_length11^0'=acc_length11^post0, __const_285^0'=__const_285^post0, j9^0'=j9^post0, coef_len6^0'=coef_len6^post0, acc12^0'=acc12^post0, __const_10^0'=__const_10^post0, in_len4^0'=in_len4^post0, coef_len210^0'=coef_len210^post0, __const_35^0'=__const_35^post0, scale7^0'=scale7^post0, i8^0'=i8^post0, (-scale7^post0+scale7^0 == 0 /\ -coef_len6^post0+coef_len6^0 == 0 /\ __const_285^0-__const_285^post0 == 0 /\ __const_10^0-__const_10^post0 == 0 /\ -in_len4^post0+in_len4^0 == 0 /\ -i8^post0+i8^0 == 0 /\ -coef_len210^post0+coef_len210^0 == 0 /\ -__const_35^post0+__const_35^0 == 0 /\ acc_length11^0-acc_length11^post0 == 0 /\ j9^0-j9^post0 == 0 /\ acc12^0-acc12^post0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : acc_length11^0'=acc_length11^post1, __const_285^0'=__const_285^post1, j9^0'=j9^post1, coef_len6^0'=coef_len6^post1, acc12^0'=acc12^post1, __const_10^0'=__const_10^post1, in_len4^0'=in_len4^post1, coef_len210^0'=coef_len210^post1, __const_35^0'=__const_35^post1, scale7^0'=scale7^post1, i8^0'=i8^post1, (acc_length11^0-acc_length11^post1 == 0 /\ j9^0-j9^post1 == 0 /\ -acc_length11^0+coef_len6^0 <= 0 /\ -acc12^post1+acc12^0 == 0 /\ -__const_35^post1+__const_35^0 == 0 /\ coef_len6^0-coef_len6^post1 == 0 /\ -in_len4^post1+in_len4^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ __const_285^0-__const_285^post1 == 0 /\ coef_len210^0-coef_len210^post1 == 0 /\ -scale7^post1+scale7^0 == 0 /\ -i8^post1+i8^0 == 0), cost: 1
New rule:
l2 -> l0 : -acc_length11^0+coef_len6^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : acc_length11^0'=acc_length11^post2, __const_285^0'=__const_285^post2, j9^0'=j9^post2, coef_len6^0'=coef_len6^post2, acc12^0'=acc12^post2, __const_10^0'=__const_10^post2, in_len4^0'=in_len4^post2, coef_len210^0'=coef_len210^post2, __const_35^0'=__const_35^post2, scale7^0'=scale7^post2, i8^0'=i8^post2, (acc12^0-acc12^post2 == 0 /\ -__const_10^post2+__const_10^0 == 0 /\ -j9^post2+j9^0 == 0 /\ in_len4^0-in_len4^post2 == 0 /\ -i8^post2+i8^0 == 0 /\ -1-acc_length11^0+acc_length11^post2 == 0 /\ -coef_len210^post2+coef_len210^0 == 0 /\ -scale7^post2+scale7^0 == 0 /\ 1+acc_length11^0-coef_len6^0 <= 0 /\ __const_285^0-__const_285^post2 == 0 /\ -__const_35^post2+__const_35^0 == 0 /\ coef_len6^0-coef_len6^post2 == 0), cost: 1
New rule:
l2 -> l0 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : acc_length11^0'=acc_length11^post3, __const_285^0'=__const_285^post3, j9^0'=j9^post3, coef_len6^0'=coef_len6^post3, acc12^0'=acc12^post3, __const_10^0'=__const_10^post3, in_len4^0'=in_len4^post3, coef_len210^0'=coef_len210^post3, __const_35^0'=__const_35^post3, scale7^0'=scale7^post3, i8^0'=i8^post3, (-1+i8^post3-i8^0 == 0 /\ -scale7^post3+scale7^0 == 0 /\ -acc12^post3+acc12^0 == 0 /\ -in_len4^post3+in_len4^0 == 0 /\ __const_35^0-__const_35^post3 == 0 /\ j9^0-j9^post3 == 0 /\ coef_len210^0-coef_len210^post3 == 0 /\ __const_285^0-__const_285^post3 == 0 /\ -__const_10^post3+__const_10^0 == 0 /\ acc_length11^0-acc_length11^post3 == 0 /\ coef_len6^0-coef_len6^post3 == 0), cost: 1
New rule:
l1 -> l3 : i8^0'=1+i8^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l2 : acc_length11^0'=acc_length11^post4, __const_285^0'=__const_285^post4, j9^0'=j9^post4, coef_len6^0'=coef_len6^post4, acc12^0'=acc12^post4, __const_10^0'=__const_10^post4, in_len4^0'=in_len4^post4, coef_len210^0'=coef_len210^post4, __const_35^0'=__const_35^post4, scale7^0'=scale7^post4, i8^0'=i8^post4, (-scale7^post4+scale7^0 == 0 /\ -__const_285^post4+__const_285^0 == 0 /\ in_len4^0-in_len4^post4 == 0 /\ -i8^post4+i8^0 == 0 /\ -__const_35^post4+__const_35^0 == 0 /\ acc_length11^0-acc_length11^post4 == 0 /\ coef_len6^0-coef_len6^post4 == 0 /\ j9^0-j9^post4 == 0 /\ acc12^0-acc12^post4 == 0 /\ coef_len210^0-coef_len210^post4 == 0 /\ -__const_10^post4+__const_10^0 == 0), cost: 1
New rule:
l4 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l1 : acc_length11^0'=acc_length11^post5, __const_285^0'=__const_285^post5, j9^0'=j9^post5, coef_len6^0'=coef_len6^post5, acc12^0'=acc12^post5, __const_10^0'=__const_10^post5, in_len4^0'=in_len4^post5, coef_len210^0'=coef_len210^post5, __const_35^0'=__const_35^post5, scale7^0'=scale7^post5, i8^0'=i8^post5, (-coef_len210^post5+coef_len210^0 == 0 /\ -__const_35^post5+__const_35^0 == 0 /\ -scale7^post5+scale7^0 == 0 /\ -i8^post5+i8^0 == 0 /\ -coef_len6^post5+coef_len6^0 == 0 /\ acc12^0-acc12^post5 == 0 /\ -in_len4^post5+in_len4^0 == 0 /\ __const_285^0-__const_285^post5 == 0 /\ __const_10^0-__const_10^post5 == 0 /\ j9^0-j9^post5 == 0 /\ 1-acc_length11^0+acc_length11^post5 == 0), cost: 1
New rule:
l4 -> l1 : acc_length11^0'=-1+acc_length11^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l2 : acc_length11^0'=acc_length11^post6, __const_285^0'=__const_285^post6, j9^0'=j9^post6, coef_len6^0'=coef_len6^post6, acc12^0'=acc12^post6, __const_10^0'=__const_10^post6, in_len4^0'=in_len4^post6, coef_len210^0'=coef_len210^post6, __const_35^0'=__const_35^post6, scale7^0'=scale7^post6, i8^0'=i8^post6, (-acc12^post6+acc12^0 == 0 /\ -__const_10^post6+__const_10^0 == 0 /\ acc_length11^0-acc_length11^post6 == 0 /\ coef_len6^0-coef_len6^post6 == 0 /\ -scale7^post6+scale7^0 == 0 /\ -i8^post6+i8^0 == 0 /\ -in_len4^post6+in_len4^0 == 0 /\ __const_285^0-__const_285^post6 == 0 /\ coef_len210^0-coef_len210^post6 == 0 /\ -__const_35^post6+__const_35^0 == 0 /\ j9^0-j9^post6 == 0), cost: 1
New rule:
l4 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l5 : acc_length11^0'=acc_length11^post7, __const_285^0'=__const_285^post7, j9^0'=j9^post7, coef_len6^0'=coef_len6^post7, acc12^0'=acc12^post7, __const_10^0'=__const_10^post7, in_len4^0'=in_len4^post7, coef_len210^0'=coef_len210^post7, __const_35^0'=__const_35^post7, scale7^0'=scale7^post7, i8^0'=i8^post7, (-__const_35^post7+__const_35^0 == 0 /\ -coef_len6^post7+coef_len6^0 == 0 /\ -i8^post7+i8^0 == 0 /\ -__const_10^post7+__const_10^0 == 0 /\ in_len4^0-in_len4^post7 == 0 /\ acc12^0-acc12^post7 == 0 /\ __const_285^0-__const_285^post7 == 0 /\ acc_length11^0-acc_length11^post7 == 0 /\ j9^0-j9^post7 == 0 /\ -scale7^post7+scale7^0 == 0 /\ -coef_len210^post7+coef_len210^0 == 0), cost: 1
New rule:
l3 -> l5 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l4 : acc_length11^0'=acc_length11^post8, __const_285^0'=__const_285^post8, j9^0'=j9^post8, coef_len6^0'=coef_len6^post8, acc12^0'=acc12^post8, __const_10^0'=__const_10^post8, in_len4^0'=in_len4^post8, coef_len210^0'=coef_len210^post8, __const_35^0'=__const_35^post8, scale7^0'=scale7^post8, i8^0'=i8^post8, (__const_35^0-__const_35^post8 == 0 /\ -scale7^post8+scale7^0 == 0 /\ __const_285^0-__const_285^post8 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ -in_len4^post8+in_len4^0 == 0 /\ -coef_len210^post8+coef_len210^0 == 0 /\ j9^0-j9^post8 == 0 /\ acc12^0-acc12^post8 == 0 /\ -i8^post8+i8^0 == 0 /\ acc_length11^0-j9^0 <= 0 /\ acc_length11^0-acc_length11^post8 == 0 /\ -coef_len6^post8+coef_len6^0 == 0), cost: 1
New rule:
l6 -> l4 : acc_length11^0-j9^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l7 : acc_length11^0'=acc_length11^post9, __const_285^0'=__const_285^post9, j9^0'=j9^post9, coef_len6^0'=coef_len6^post9, acc12^0'=acc12^post9, __const_10^0'=__const_10^post9, in_len4^0'=in_len4^post9, coef_len210^0'=coef_len210^post9, __const_35^0'=__const_35^post9, scale7^0'=scale7^post9, i8^0'=i8^post9, (0 == 0 /\ -scale7^post9+scale7^0 == 0 /\ -1-j9^0+j9^post9 == 0 /\ 1-acc_length11^0+j9^0 <= 0 /\ coef_len6^0-coef_len6^post9 == 0 /\ -i8^post9+i8^0 == 0 /\ -__const_285^post9+__const_285^0 == 0 /\ in_len4^0-in_len4^post9 == 0 /\ acc_length11^0-acc_length11^post9 == 0 /\ -__const_35^post9+__const_35^0 == 0 /\ coef_len210^0-coef_len210^post9 == 0 /\ -__const_10^post9+__const_10^0 == 0), cost: 1
New rule:
l6 -> l7 : j9^0'=1+j9^0, acc12^0'=acc12^post9, 1-acc_length11^0+j9^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l6 : acc_length11^0'=acc_length11^post10, __const_285^0'=__const_285^post10, j9^0'=j9^post10, coef_len6^0'=coef_len6^post10, acc12^0'=acc12^post10, __const_10^0'=__const_10^post10, in_len4^0'=in_len4^post10, coef_len210^0'=coef_len210^post10, __const_35^0'=__const_35^post10, scale7^0'=scale7^post10, i8^0'=i8^post10, (acc_length11^0-acc_length11^post10 == 0 /\ in_len4^0-in_len4^post10 == 0 /\ scale7^0-scale7^post10 == 0 /\ -j9^post10+j9^0 == 0 /\ -__const_35^post10+__const_35^0 == 0 /\ acc12^0-acc12^post10 == 0 /\ -coef_len210^post10+coef_len210^0 == 0 /\ __const_10^0-__const_10^post10 == 0 /\ -coef_len6^post10+coef_len6^0 == 0 /\ __const_285^0-__const_285^post10 == 0 /\ -i8^post10+i8^0 == 0), cost: 1
New rule:
l7 -> l6 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l7 : acc_length11^0'=acc_length11^post12, __const_285^0'=__const_285^post12, j9^0'=j9^post12, coef_len6^0'=coef_len6^post12, acc12^0'=acc12^post12, __const_10^0'=__const_10^post12, in_len4^0'=in_len4^post12, coef_len210^0'=coef_len210^post12, __const_35^0'=__const_35^post12, scale7^0'=scale7^post12, i8^0'=i8^post12, (0 == 0 /\ -__const_10^post12+__const_10^0 == 0 /\ in_len4^0-in_len4^post12 == 0 /\ -coef_len210^post12+coef_len210^0 == 0 /\ -scale7^post12+scale7^0 == 0 /\ -i8^post12+i8^0 == 0 /\ 1-in_len4^0+i8^0 <= 0 /\ __const_285^0-__const_285^post12 == 0 /\ acc_length11^0-acc_length11^post12 == 0 /\ coef_len6^0-coef_len6^post12 == 0 /\ -1+j9^post12 == 0 /\ -__const_35^post12+__const_35^0 == 0), cost: 1
New rule:
l5 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l9 -> l3 : acc_length11^0'=acc_length11^post13, __const_285^0'=__const_285^post13, j9^0'=j9^post13, coef_len6^0'=coef_len6^post13, acc12^0'=acc12^post13, __const_10^0'=__const_10^post13, in_len4^0'=in_len4^post13, coef_len210^0'=coef_len210^post13, __const_35^0'=__const_35^post13, scale7^0'=scale7^post13, i8^0'=i8^post13, (0 == 0 /\ __const_285^0-__const_285^post13 == 0 /\ __const_10^0-__const_10^post13 == 0 /\ in_len4^post13-__const_10^0 == 0 /\ acc_length11^post13-coef_len210^post13 == 0 /\ i8^post13 == 0 /\ coef_len6^post13-__const_35^0 == 0 /\ scale7^post13-__const_285^0 == 0 /\ -__const_35^post13+__const_35^0 == 0 /\ acc12^0-acc12^post13 == 0 /\ j9^0-j9^post13 == 0), cost: 1
New rule:
l9 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l10 -> l9 : acc_length11^0'=acc_length11^post14, __const_285^0'=__const_285^post14, j9^0'=j9^post14, coef_len6^0'=coef_len6^post14, acc12^0'=acc12^post14, __const_10^0'=__const_10^post14, in_len4^0'=in_len4^post14, coef_len210^0'=coef_len210^post14, __const_35^0'=__const_35^post14, scale7^0'=scale7^post14, i8^0'=i8^post14, (-acc12^post14+acc12^0 == 0 /\ -scale7^post14+scale7^0 == 0 /\ coef_len6^0-coef_len6^post14 == 0 /\ -__const_10^post14+__const_10^0 == 0 /\ -i8^post14+i8^0 == 0 /\ coef_len210^0-coef_len210^post14 == 0 /\ acc_length11^0-acc_length11^post14 == 0 /\ -__const_35^post14+__const_35^0 == 0 /\ -in_len4^post14+in_len4^0 == 0 /\ j9^0-j9^post14 == 0 /\ __const_285^0-__const_285^post14 == 0), cost: 1
New rule:
l10 -> l9 : TRUE, cost: 1

Simplified rules
Start location: l10
  15: l0 -> l1 : TRUE, cost: 1
  18: l1 -> l3 : i8^0'=1+i8^0, TRUE, cost: 1
  16: l2 -> l0 : -acc_length11^0+coef_len6^0 <= 0, cost: 1
  17: l2 -> l0 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 1
  21: l3 -> l5 : TRUE, cost: 1
  19: l4 -> l2 : TRUE, cost: 1
  20: l4 -> l1 : acc_length11^0'=-1+acc_length11^0, TRUE, cost: 1
  25: l5 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 1
  22: l6 -> l4 : acc_length11^0-j9^0 <= 0, cost: 1
  23: l6 -> l7 : j9^0'=1+j9^0, acc12^0'=acc12^post9, 1-acc_length11^0+j9^0 <= 0, cost: 1
  24: l7 -> l6 : TRUE, cost: 1
  26: l9 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 1
  27: l10 -> l9 : TRUE, cost: 1


Eliminating location l9 by chaining:

Applied chaining
First rule:
l10 -> l9 : TRUE, cost: 1
Second rule:
l9 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 1
New rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 26 27

Eliminating location l5 by chaining:

Applied chaining
First rule:
l3 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 1
New rule:
l3 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 21 25

Eliminated locations on linear paths
Start location: l10
  15: l0 -> l1 : TRUE, cost: 1
  18: l1 -> l3 : i8^0'=1+i8^0, TRUE, cost: 1
  16: l2 -> l0 : -acc_length11^0+coef_len6^0 <= 0, cost: 1
  17: l2 -> l0 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 1
  29: l3 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 2
  19: l4 -> l2 : TRUE, cost: 1
  20: l4 -> l1 : acc_length11^0'=-1+acc_length11^0, TRUE, cost: 1
  22: l6 -> l4 : acc_length11^0-j9^0 <= 0, cost: 1
  23: l6 -> l7 : j9^0'=1+j9^0, acc12^0'=acc12^post9, 1-acc_length11^0+j9^0 <= 0, cost: 1
  24: l7 -> l6 : TRUE, cost: 1
  28: l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2


Eliminating location l6 by chaining:

Applied chaining
First rule:
l7 -> l6 : TRUE, cost: 1
Second rule:
l6 -> l4 : acc_length11^0-j9^0 <= 0, cost: 1
New rule:
l7 -> l4 : acc_length11^0-j9^0 <= 0, cost: 2

Applied chaining
First rule:
l7 -> l6 : TRUE, cost: 1
Second rule:
l6 -> l7 : j9^0'=1+j9^0, acc12^0'=acc12^post9, 1-acc_length11^0+j9^0 <= 0, cost: 1
New rule:
l7 -> l7 : j9^0'=1+j9^0, acc12^0'=acc12^post9, 1-acc_length11^0+j9^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 22 23 24

Eliminating location l2 by chaining:

Applied chaining
First rule:
l4 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : -acc_length11^0+coef_len6^0 <= 0, cost: 1
New rule:
l4 -> l0 : -acc_length11^0+coef_len6^0 <= 0, cost: 2

Applied chaining
First rule:
l4 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 1
New rule:
l4 -> l0 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 16 17 19

Eliminated locations on tree-shaped paths
Start location: l10
  15: l0 -> l1 : TRUE, cost: 1
  18: l1 -> l3 : i8^0'=1+i8^0, TRUE, cost: 1
  29: l3 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 2
  20: l4 -> l1 : acc_length11^0'=-1+acc_length11^0, TRUE, cost: 1
  32: l4 -> l0 : -acc_length11^0+coef_len6^0 <= 0, cost: 2
  33: l4 -> l0 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 2
  30: l7 -> l4 : acc_length11^0-j9^0 <= 0, cost: 2
  31: l7 -> l7 : j9^0'=1+j9^0, acc12^0'=acc12^post9, 1-acc_length11^0+j9^0 <= 0, cost: 2
  28: l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2


Applied acceleration
Original rule:
l7 -> l7 : j9^0'=1+j9^0, acc12^0'=acc12^post9, 1-acc_length11^0+j9^0 <= 0, cost: 2
New rule:
l7 -> l7 : j9^0'=n+j9^0, acc12^0'=acc12^post9, (acc_length11^0-n-j9^0 >= 0 /\ -1+n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_EkmoLC.txt

Applied instantiation
Original rule:
l7 -> l7 : j9^0'=n+j9^0, acc12^0'=acc12^post9, (acc_length11^0-n-j9^0 >= 0 /\ -1+n >= 0), cost: 2*n
New rule:
l7 -> l7 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (0 >= 0 /\ -1+acc_length11^0-j9^0 >= 0), cost: 2*acc_length11^0-2*j9^0

Applied simplification
Original rule:
l7 -> l7 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (0 >= 0 /\ -1+acc_length11^0-j9^0 >= 0), cost: 2*acc_length11^0-2*j9^0
New rule:
l7 -> l7 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, -1+acc_length11^0-j9^0 >= 0, cost: 2*acc_length11^0-2*j9^0

Applied deletion
Removed the following rules: 31

Accelerated simple loops
Start location: l10
  15: l0 -> l1 : TRUE, cost: 1
  18: l1 -> l3 : i8^0'=1+i8^0, TRUE, cost: 1
  29: l3 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 2
  20: l4 -> l1 : acc_length11^0'=-1+acc_length11^0, TRUE, cost: 1
  32: l4 -> l0 : -acc_length11^0+coef_len6^0 <= 0, cost: 2
  33: l4 -> l0 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 2
  30: l7 -> l4 : acc_length11^0-j9^0 <= 0, cost: 2
  35: l7 -> l7 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, -1+acc_length11^0-j9^0 >= 0, cost: 2*acc_length11^0-2*j9^0
  28: l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2


Applied chaining
First rule:
l3 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 2
Second rule:
l7 -> l7 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, -1+acc_length11^0-j9^0 >= 0, cost: 2*acc_length11^0-2*j9^0
New rule:
l3 -> l7 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2*acc_length11^0

Applied deletion
Removed the following rules: 35

Chained accelerated rules with incoming rules
Start location: l10
  15: l0 -> l1 : TRUE, cost: 1
  18: l1 -> l3 : i8^0'=1+i8^0, TRUE, cost: 1
  29: l3 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 2
  36: l3 -> l7 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2*acc_length11^0
  20: l4 -> l1 : acc_length11^0'=-1+acc_length11^0, TRUE, cost: 1
  32: l4 -> l0 : -acc_length11^0+coef_len6^0 <= 0, cost: 2
  33: l4 -> l0 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 2
  30: l7 -> l4 : acc_length11^0-j9^0 <= 0, cost: 2
  28: l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2


Eliminating location l7 by chaining:

Applied chaining
First rule:
l3 -> l7 : j9^0'=1, acc12^0'=acc12^post12, 1-in_len4^0+i8^0 <= 0, cost: 2
Second rule:
l7 -> l4 : acc_length11^0-j9^0 <= 0, cost: 2
New rule:
l3 -> l4 : j9^0'=1, acc12^0'=acc12^post12, (1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 4

Applied chaining
First rule:
l3 -> l7 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2*acc_length11^0
Second rule:
l7 -> l4 : acc_length11^0-j9^0 <= 0, cost: 2
New rule:
l3 -> l4 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (0 <= 0 /\ -2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2+2*acc_length11^0

Applied simplification
Original rule:
l3 -> l4 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (0 <= 0 /\ -2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2+2*acc_length11^0
New rule:
l3 -> l4 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2+2*acc_length11^0

Applied deletion
Removed the following rules: 29 30 36

Eliminating location l0 by chaining:

Applied chaining
First rule:
l4 -> l0 : -acc_length11^0+coef_len6^0 <= 0, cost: 2
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l4 -> l1 : -acc_length11^0+coef_len6^0 <= 0, cost: 3

Applied chaining
First rule:
l4 -> l0 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 2
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l4 -> l1 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 3

Applied deletion
Removed the following rules: 15 32 33

Eliminating location l1 by chaining:

Applied chaining
First rule:
l4 -> l1 : acc_length11^0'=-1+acc_length11^0, TRUE, cost: 1
Second rule:
l1 -> l3 : i8^0'=1+i8^0, TRUE, cost: 1
New rule:
l4 -> l3 : acc_length11^0'=-1+acc_length11^0, i8^0'=1+i8^0, TRUE, cost: 2

Applied chaining
First rule:
l4 -> l1 : -acc_length11^0+coef_len6^0 <= 0, cost: 3
Second rule:
l1 -> l3 : i8^0'=1+i8^0, TRUE, cost: 1
New rule:
l4 -> l3 : i8^0'=1+i8^0, -acc_length11^0+coef_len6^0 <= 0, cost: 4

Applied chaining
First rule:
l4 -> l1 : acc_length11^0'=1+acc_length11^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 3
Second rule:
l1 -> l3 : i8^0'=1+i8^0, TRUE, cost: 1
New rule:
l4 -> l3 : acc_length11^0'=1+acc_length11^0, i8^0'=1+i8^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 4

Applied deletion
Removed the following rules: 18 20 39 40

Eliminated locations on tree-shaped paths
Start location: l10
  37: l3 -> l4 : j9^0'=1, acc12^0'=acc12^post12, (1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 4
  38: l3 -> l4 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2+2*acc_length11^0
  41: l4 -> l3 : acc_length11^0'=-1+acc_length11^0, i8^0'=1+i8^0, TRUE, cost: 2
  42: l4 -> l3 : i8^0'=1+i8^0, -acc_length11^0+coef_len6^0 <= 0, cost: 4
  43: l4 -> l3 : acc_length11^0'=1+acc_length11^0, i8^0'=1+i8^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 4
  28: l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2


Eliminating location l4 by chaining:

Applied chaining
First rule:
l3 -> l4 : j9^0'=1, acc12^0'=acc12^post12, (1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 4
Second rule:
l4 -> l3 : acc_length11^0'=-1+acc_length11^0, i8^0'=1+i8^0, TRUE, cost: 2
New rule:
l3 -> l3 : acc_length11^0'=-1+acc_length11^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 6

Applied chaining
First rule:
l3 -> l4 : j9^0'=1, acc12^0'=acc12^post12, (1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 4
Second rule:
l4 -> l3 : i8^0'=1+i8^0, -acc_length11^0+coef_len6^0 <= 0, cost: 4
New rule:
l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (-acc_length11^0+coef_len6^0 <= 0 /\ 1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 8

Applied chaining
First rule:
l3 -> l4 : j9^0'=1, acc12^0'=acc12^post12, (1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 4
Second rule:
l4 -> l3 : acc_length11^0'=1+acc_length11^0, i8^0'=1+i8^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 4
New rule:
l3 -> l3 : acc_length11^0'=1+acc_length11^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (1-in_len4^0+i8^0 <= 0 /\ 1+acc_length11^0-coef_len6^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 8

Applied chaining
First rule:
l3 -> l4 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2+2*acc_length11^0
Second rule:
l4 -> l3 : acc_length11^0'=-1+acc_length11^0, i8^0'=1+i8^0, TRUE, cost: 2
New rule:
l3 -> l3 : acc_length11^0'=-1+acc_length11^0, j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 4+2*acc_length11^0

Applied chaining
First rule:
l3 -> l4 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2+2*acc_length11^0
Second rule:
l4 -> l3 : i8^0'=1+i8^0, -acc_length11^0+coef_len6^0 <= 0, cost: 4
New rule:
l3 -> l3 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ -acc_length11^0+coef_len6^0 <= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 6+2*acc_length11^0

Applied chaining
First rule:
l3 -> l4 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 2+2*acc_length11^0
Second rule:
l4 -> l3 : acc_length11^0'=1+acc_length11^0, i8^0'=1+i8^0, 1+acc_length11^0-coef_len6^0 <= 0, cost: 4
New rule:
l3 -> l3 : acc_length11^0'=1+acc_length11^0, j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0 /\ 1+acc_length11^0-coef_len6^0 <= 0), cost: 6+2*acc_length11^0

Applied deletion
Removed the following rules: 37 38 41 42 43

Eliminated locations on tree-shaped paths
Start location: l10
  44: l3 -> l3 : acc_length11^0'=-1+acc_length11^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 6
  45: l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (-acc_length11^0+coef_len6^0 <= 0 /\ 1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 8
  46: l3 -> l3 : acc_length11^0'=1+acc_length11^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (1-in_len4^0+i8^0 <= 0 /\ 1+acc_length11^0-coef_len6^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 8
  47: l3 -> l3 : acc_length11^0'=-1+acc_length11^0, j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 4+2*acc_length11^0
  48: l3 -> l3 : j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ -acc_length11^0+coef_len6^0 <= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 6+2*acc_length11^0
  49: l3 -> l3 : acc_length11^0'=1+acc_length11^0, j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0 /\ 1+acc_length11^0-coef_len6^0 <= 0), cost: 6+2*acc_length11^0
  28: l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2


Applied pruning (of leafs and parallel rules):
Start location: l10
  44: l3 -> l3 : acc_length11^0'=-1+acc_length11^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 6
  45: l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (-acc_length11^0+coef_len6^0 <= 0 /\ 1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 8
  46: l3 -> l3 : acc_length11^0'=1+acc_length11^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (1-in_len4^0+i8^0 <= 0 /\ 1+acc_length11^0-coef_len6^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 8
  47: l3 -> l3 : acc_length11^0'=-1+acc_length11^0, j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 4+2*acc_length11^0
  49: l3 -> l3 : acc_length11^0'=1+acc_length11^0, j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0 /\ 1+acc_length11^0-coef_len6^0 <= 0), cost: 6+2*acc_length11^0
  28: l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2


Applied acceleration
Original rule:
l3 -> l3 : acc_length11^0'=-1+acc_length11^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 6
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-n0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=n0+i8^0, (-1+n0 >= 0 /\ -n0+in_len4^0-i8^0 >= 0 /\ 1-acc_length11^0 >= 0), cost: 6*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gkFkBN.txt

Applied instantiation
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-n0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=n0+i8^0, (-1+n0 >= 0 /\ -n0+in_len4^0-i8^0 >= 0 /\ 1-acc_length11^0 >= 0), cost: 6*n0
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (0 >= 0 /\ -1+in_len4^0-i8^0 >= 0 /\ 1-acc_length11^0 >= 0), cost: 6*in_len4^0-6*i8^0

Applied acceleration
Original rule:
l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (-acc_length11^0+coef_len6^0 <= 0 /\ 1-in_len4^0+i8^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 8
New rule:
l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=n1+i8^0, (-n1+in_len4^0-i8^0 >= 0 /\ acc_length11^0-coef_len6^0 >= 0 /\ -1+n1 >= 0 /\ 1-acc_length11^0 >= 0), cost: 8*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BceFfM.txt

Applied instantiation
Original rule:
l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=n1+i8^0, (-n1+in_len4^0-i8^0 >= 0 /\ acc_length11^0-coef_len6^0 >= 0 /\ -1+n1 >= 0 /\ 1-acc_length11^0 >= 0), cost: 8*n1
New rule:
l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (0 >= 0 /\ acc_length11^0-coef_len6^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0 /\ 1-acc_length11^0 >= 0), cost: 8*in_len4^0-8*i8^0

Applied acceleration
Original rule:
l3 -> l3 : acc_length11^0'=1+acc_length11^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=1+i8^0, (1-in_len4^0+i8^0 <= 0 /\ 1+acc_length11^0-coef_len6^0 <= 0 /\ -1+acc_length11^0 <= 0), cost: 8
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+n2, j9^0'=1, acc12^0'=acc12^post12, i8^0'=n2+i8^0, (2-acc_length11^0-n2 >= 0 /\ -acc_length11^0+coef_len6^0-n2 >= 0 /\ -n2+in_len4^0-i8^0 >= 0 /\ -1+n2 >= 0), cost: 8*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_mEAlNE.txt

Applied instantiation
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+n2, j9^0'=1, acc12^0'=acc12^post12, i8^0'=n2+i8^0, (2-acc_length11^0-n2 >= 0 /\ -acc_length11^0+coef_len6^0-n2 >= 0 /\ -n2+in_len4^0-i8^0 >= 0 /\ -1+n2 >= 0), cost: 8*n2
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (0 >= 0 /\ -acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ 2-acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 8*in_len4^0-8*i8^0

Applied instantiation
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+n2, j9^0'=1, acc12^0'=acc12^post12, i8^0'=n2+i8^0, (2-acc_length11^0-n2 >= 0 /\ -acc_length11^0+coef_len6^0-n2 >= 0 /\ -n2+in_len4^0-i8^0 >= 0 /\ -1+n2 >= 0), cost: 8*n2
New rule:
l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (0 >= 0 /\ 2-coef_len6^0 >= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -8*acc_length11^0+8*coef_len6^0

Applied instantiation
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+n2, j9^0'=1, acc12^0'=acc12^post12, i8^0'=n2+i8^0, (2-acc_length11^0-n2 >= 0 /\ -acc_length11^0+coef_len6^0-n2 >= 0 /\ -n2+in_len4^0-i8^0 >= 0 /\ -1+n2 >= 0), cost: 8*n2
New rule:
l3 -> l3 : acc_length11^0'=2, j9^0'=1, acc12^0'=acc12^post12, i8^0'=2-acc_length11^0+i8^0, (0 >= 0 /\ -2+acc_length11^0+in_len4^0-i8^0 >= 0 /\ -2+coef_len6^0 >= 0 /\ 1-acc_length11^0 >= 0), cost: 16-8*acc_length11^0

Applied acceleration
Original rule:
l3 -> l3 : acc_length11^0'=-1+acc_length11^0, j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0), cost: 4+2*acc_length11^0
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-n3, j9^0'=1+acc_length11^0-n3, acc12^0'=acc12^post9, i8^0'=n3+i8^0, (-1+n3 >= 0 /\ -n3+in_len4^0-i8^0 >= 0 /\ -1+acc_length11^0-n3 >= 0), cost: -n3^2+5*n3+2*acc_length11^0*n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GIFgOK.txt

Applied instantiation
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-n3, j9^0'=1+acc_length11^0-n3, acc12^0'=acc12^post9, i8^0'=n3+i8^0, (-1+n3 >= 0 /\ -n3+in_len4^0-i8^0 >= 0 /\ -1+acc_length11^0-n3 >= 0), cost: -n3^2+5*n3+2*acc_length11^0*n3
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1+acc_length11^0-in_len4^0+i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (0 >= 0 /\ -1+acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0-(in_len4^0-i8^0)^2-5*i8^0

Applied instantiation
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-n3, j9^0'=1+acc_length11^0-n3, acc12^0'=acc12^post9, i8^0'=n3+i8^0, (-1+n3 >= 0 /\ -n3+in_len4^0-i8^0 >= 0 /\ -1+acc_length11^0-n3 >= 0), cost: -n3^2+5*n3+2*acc_length11^0*n3
New rule:
l3 -> l3 : acc_length11^0'=1, j9^0'=2, acc12^0'=acc12^post9, i8^0'=-1+acc_length11^0+i8^0, (0 >= 0 /\ -2+acc_length11^0 >= 0 /\ 1-acc_length11^0+in_len4^0-i8^0 >= 0), cost: -5-(-1+acc_length11^0)^2+5*acc_length11^0+2*acc_length11^0*(-1+acc_length11^0)

Applied acceleration
Original rule:
l3 -> l3 : acc_length11^0'=1+acc_length11^0, j9^0'=acc_length11^0, acc12^0'=acc12^post9, i8^0'=1+i8^0, (-2+acc_length11^0 >= 0 /\ 1-in_len4^0+i8^0 <= 0 /\ 1+acc_length11^0-coef_len6^0 <= 0), cost: 6+2*acc_length11^0
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+n4, j9^0'=-1+acc_length11^0+n4, acc12^0'=acc12^post9, i8^0'=n4+i8^0, (-n4+in_len4^0-i8^0 >= 0 /\ -2+acc_length11^0 >= 0 /\ -1+n4 >= 0 /\ -acc_length11^0-n4+coef_len6^0 >= 0), cost: 2*acc_length11^0*n4+5*n4+n4^2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PcAJGE.txt

Applied instantiation
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+n4, j9^0'=-1+acc_length11^0+n4, acc12^0'=acc12^post9, i8^0'=n4+i8^0, (-n4+in_len4^0-i8^0 >= 0 /\ -2+acc_length11^0 >= 0 /\ -1+n4 >= 0 /\ -acc_length11^0-n4+coef_len6^0 >= 0), cost: 2*acc_length11^0*n4+5*n4+n4^2
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=-1+acc_length11^0+in_len4^0-i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (0 >= 0 /\ -2+acc_length11^0 >= 0 /\ -acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0+(in_len4^0-i8^0)^2-5*i8^0

Applied instantiation
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+n4, j9^0'=-1+acc_length11^0+n4, acc12^0'=acc12^post9, i8^0'=n4+i8^0, (-n4+in_len4^0-i8^0 >= 0 /\ -2+acc_length11^0 >= 0 /\ -1+n4 >= 0 /\ -acc_length11^0-n4+coef_len6^0 >= 0), cost: 2*acc_length11^0*n4+5*n4+n4^2
New rule:
l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=-1+coef_len6^0, acc12^0'=acc12^post9, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (0 >= 0 /\ -2+acc_length11^0 >= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -5*acc_length11^0+(acc_length11^0-coef_len6^0)^2+5*coef_len6^0-2*acc_length11^0*(acc_length11^0-coef_len6^0)

Applied simplification
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (0 >= 0 /\ -1+in_len4^0-i8^0 >= 0 /\ 1-acc_length11^0 >= 0), cost: 6*in_len4^0-6*i8^0
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (-1+in_len4^0-i8^0 >= 0 /\ -1+acc_length11^0 <= 0), cost: 6*in_len4^0-6*i8^0

Applied simplification
Original rule:
l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (0 >= 0 /\ acc_length11^0-coef_len6^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0 /\ 1-acc_length11^0 >= 0), cost: 8*in_len4^0-8*i8^0
New rule:
l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (acc_length11^0-coef_len6^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0 /\ -1+acc_length11^0 <= 0), cost: 8*in_len4^0-8*i8^0

Applied simplification
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (0 >= 0 /\ -acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ 2-acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 8*in_len4^0-8*i8^0
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (-acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ 2-acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 8*in_len4^0-8*i8^0

Applied simplification
Original rule:
l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (0 >= 0 /\ 2-coef_len6^0 >= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -8*acc_length11^0+8*coef_len6^0
New rule:
l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (-2+coef_len6^0 <= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -8*acc_length11^0+8*coef_len6^0

Applied simplification
Original rule:
l3 -> l3 : acc_length11^0'=2, j9^0'=1, acc12^0'=acc12^post12, i8^0'=2-acc_length11^0+i8^0, (0 >= 0 /\ -2+acc_length11^0+in_len4^0-i8^0 >= 0 /\ -2+coef_len6^0 >= 0 /\ 1-acc_length11^0 >= 0), cost: 16-8*acc_length11^0
New rule:
l3 -> l3 : acc_length11^0'=2, j9^0'=1, acc12^0'=acc12^post12, i8^0'=2-acc_length11^0+i8^0, (-2+acc_length11^0+in_len4^0-i8^0 >= 0 /\ -2+coef_len6^0 >= 0 /\ -1+acc_length11^0 <= 0), cost: 16-8*acc_length11^0

Applied simplification
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1+acc_length11^0-in_len4^0+i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (0 >= 0 /\ -1+acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0-(in_len4^0-i8^0)^2-5*i8^0
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1+acc_length11^0-in_len4^0+i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (-1+acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0-(in_len4^0-i8^0)^2-5*i8^0

Applied simplification
Original rule:
l3 -> l3 : acc_length11^0'=1, j9^0'=2, acc12^0'=acc12^post9, i8^0'=-1+acc_length11^0+i8^0, (0 >= 0 /\ -2+acc_length11^0 >= 0 /\ 1-acc_length11^0+in_len4^0-i8^0 >= 0), cost: -5-(-1+acc_length11^0)^2+5*acc_length11^0+2*acc_length11^0*(-1+acc_length11^0)
New rule:
l3 -> l3 : acc_length11^0'=1, j9^0'=2, acc12^0'=acc12^post9, i8^0'=-1+acc_length11^0+i8^0, (-2+acc_length11^0 >= 0 /\ 1-acc_length11^0+in_len4^0-i8^0 >= 0), cost: -5-(-1+acc_length11^0)^2+5*acc_length11^0+2*acc_length11^0*(-1+acc_length11^0)

Applied simplification
Original rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=-1+acc_length11^0+in_len4^0-i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (0 >= 0 /\ -2+acc_length11^0 >= 0 /\ -acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0+(in_len4^0-i8^0)^2-5*i8^0
New rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=-1+acc_length11^0+in_len4^0-i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (-2+acc_length11^0 >= 0 /\ -acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0+(in_len4^0-i8^0)^2-5*i8^0

Applied simplification
Original rule:
l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=-1+coef_len6^0, acc12^0'=acc12^post9, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (0 >= 0 /\ -2+acc_length11^0 >= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -5*acc_length11^0+(acc_length11^0-coef_len6^0)^2+5*coef_len6^0-2*acc_length11^0*(acc_length11^0-coef_len6^0)
New rule:
l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=-1+coef_len6^0, acc12^0'=acc12^post9, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (-2+acc_length11^0 >= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -5*acc_length11^0+(acc_length11^0-coef_len6^0)^2+5*coef_len6^0-2*acc_length11^0*(acc_length11^0-coef_len6^0)

Applied deletion
Removed the following rules: 44 45 46 47 49

Accelerated simple loops
Start location: l10
  59: l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (-1+in_len4^0-i8^0 >= 0 /\ -1+acc_length11^0 <= 0), cost: 6*in_len4^0-6*i8^0
  60: l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (acc_length11^0-coef_len6^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0 /\ -1+acc_length11^0 <= 0), cost: 8*in_len4^0-8*i8^0
  61: l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (-acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ 2-acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 8*in_len4^0-8*i8^0
  62: l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (-2+coef_len6^0 <= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -8*acc_length11^0+8*coef_len6^0
  63: l3 -> l3 : acc_length11^0'=2, j9^0'=1, acc12^0'=acc12^post12, i8^0'=2-acc_length11^0+i8^0, (-2+acc_length11^0+in_len4^0-i8^0 >= 0 /\ -2+coef_len6^0 >= 0 /\ -1+acc_length11^0 <= 0), cost: 16-8*acc_length11^0
  64: l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1+acc_length11^0-in_len4^0+i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (-1+acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0-(in_len4^0-i8^0)^2-5*i8^0
  65: l3 -> l3 : acc_length11^0'=1, j9^0'=2, acc12^0'=acc12^post9, i8^0'=-1+acc_length11^0+i8^0, (-2+acc_length11^0 >= 0 /\ 1-acc_length11^0+in_len4^0-i8^0 >= 0), cost: -5-(-1+acc_length11^0)^2+5*acc_length11^0+2*acc_length11^0*(-1+acc_length11^0)
  66: l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=-1+acc_length11^0+in_len4^0-i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (-2+acc_length11^0 >= 0 /\ -acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0+(in_len4^0-i8^0)^2-5*i8^0
  67: l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=-1+coef_len6^0, acc12^0'=acc12^post9, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (-2+acc_length11^0 >= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -5*acc_length11^0+(acc_length11^0-coef_len6^0)^2+5*coef_len6^0-2*acc_length11^0*(acc_length11^0-coef_len6^0)
  28: l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2


Applied chaining
First rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
Second rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (-1+in_len4^0-i8^0 >= 0 /\ -1+acc_length11^0 <= 0), cost: 6*in_len4^0-6*i8^0
New rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13-__const_10^0, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-1+coef_len210^post13 <= 0 /\ -1+__const_10^0 >= 0), cost: 2+6*__const_10^0

Applied chaining
First rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
Second rule:
l3 -> l3 : j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (acc_length11^0-coef_len6^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0 /\ -1+acc_length11^0 <= 0), cost: 8*in_len4^0-8*i8^0
New rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-1+coef_len210^post13 <= 0 /\ -1+__const_10^0 >= 0 /\ coef_len210^post13-__const_35^0 >= 0), cost: 2+8*__const_10^0

Applied chaining
First rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
Second rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=in_len4^0, (-acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ 2-acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 8*in_len4^0-8*i8^0
New rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13+__const_10^0, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-coef_len210^post13-__const_10^0+__const_35^0 >= 0 /\ 2-coef_len210^post13-__const_10^0 >= 0 /\ -1+__const_10^0 >= 0), cost: 2+8*__const_10^0

Applied chaining
First rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
Second rule:
l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=1, acc12^0'=acc12^post12, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (-2+coef_len6^0 <= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -8*acc_length11^0+8*coef_len6^0
New rule:
l10 -> l3 : acc_length11^0'=__const_35^0, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=-coef_len210^post13+__const_35^0, (coef_len210^post13+__const_10^0-__const_35^0 >= 0 /\ -1-coef_len210^post13+__const_35^0 >= 0 /\ -2+__const_35^0 <= 0), cost: 2-8*coef_len210^post13+8*__const_35^0

Applied chaining
First rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
Second rule:
l3 -> l3 : acc_length11^0'=2, j9^0'=1, acc12^0'=acc12^post12, i8^0'=2-acc_length11^0+i8^0, (-2+acc_length11^0+in_len4^0-i8^0 >= 0 /\ -2+coef_len6^0 >= 0 /\ -1+acc_length11^0 <= 0), cost: 16-8*acc_length11^0
New rule:
l10 -> l3 : acc_length11^0'=2, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=2-coef_len210^post13, (-1+coef_len210^post13 <= 0 /\ -2+__const_35^0 >= 0 /\ -2+coef_len210^post13+__const_10^0 >= 0), cost: 18-8*coef_len210^post13

Applied chaining
First rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
Second rule:
l3 -> l3 : acc_length11^0'=acc_length11^0-in_len4^0+i8^0, j9^0'=1+acc_length11^0-in_len4^0+i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (-1+acc_length11^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0-(in_len4^0-i8^0)^2-5*i8^0
New rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13-__const_10^0, j9^0'=1+coef_len210^post13-__const_10^0, coef_len6^0'=__const_35^0, acc12^0'=acc12^post9, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-1+coef_len210^post13-__const_10^0 >= 0 /\ -1+__const_10^0 >= 0), cost: 2+5*__const_10^0-__const_10^0^2+2*coef_len210^post13*__const_10^0

Applied chaining
First rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
Second rule:
l3 -> l3 : acc_length11^0'=1, j9^0'=2, acc12^0'=acc12^post9, i8^0'=-1+acc_length11^0+i8^0, (-2+acc_length11^0 >= 0 /\ 1-acc_length11^0+in_len4^0-i8^0 >= 0), cost: -5-(-1+acc_length11^0)^2+5*acc_length11^0+2*acc_length11^0*(-1+acc_length11^0)
New rule:
l10 -> l3 : acc_length11^0'=1, j9^0'=2, coef_len6^0'=__const_35^0, acc12^0'=acc12^post9, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=-1+coef_len210^post13, (1-coef_len210^post13+__const_10^0 >= 0 /\ -2+coef_len210^post13 >= 0), cost: -3+5*coef_len210^post13-(-1+coef_len210^post13)^2+2*(-1+coef_len210^post13)*coef_len210^post13

Applied chaining
First rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
Second rule:
l3 -> l3 : acc_length11^0'=acc_length11^0+in_len4^0-i8^0, j9^0'=-1+acc_length11^0+in_len4^0-i8^0, acc12^0'=acc12^post9, i8^0'=in_len4^0, (-2+acc_length11^0 >= 0 /\ -acc_length11^0+coef_len6^0-in_len4^0+i8^0 >= 0 /\ -1+in_len4^0-i8^0 >= 0), cost: 2*acc_length11^0*(in_len4^0-i8^0)+5*in_len4^0+(in_len4^0-i8^0)^2-5*i8^0
New rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13+__const_10^0, j9^0'=-1+coef_len210^post13+__const_10^0, coef_len6^0'=__const_35^0, acc12^0'=acc12^post9, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-coef_len210^post13-__const_10^0+__const_35^0 >= 0 /\ -1+__const_10^0 >= 0 /\ -2+coef_len210^post13 >= 0), cost: 2+5*__const_10^0+__const_10^0^2+2*coef_len210^post13*__const_10^0

Applied chaining
First rule:
l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
Second rule:
l3 -> l3 : acc_length11^0'=coef_len6^0, j9^0'=-1+coef_len6^0, acc12^0'=acc12^post9, i8^0'=-acc_length11^0+coef_len6^0+i8^0, (-2+acc_length11^0 >= 0 /\ acc_length11^0-coef_len6^0+in_len4^0-i8^0 >= 0 /\ -1-acc_length11^0+coef_len6^0 >= 0), cost: -5*acc_length11^0+(acc_length11^0-coef_len6^0)^2+5*coef_len6^0-2*acc_length11^0*(acc_length11^0-coef_len6^0)
New rule:
l10 -> l3 : acc_length11^0'=__const_35^0, j9^0'=-1+__const_35^0, coef_len6^0'=__const_35^0, acc12^0'=acc12^post9, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=-coef_len210^post13+__const_35^0, (coef_len210^post13+__const_10^0-__const_35^0 >= 0 /\ -1-coef_len210^post13+__const_35^0 >= 0 /\ -2+coef_len210^post13 >= 0), cost: 2-2*coef_len210^post13*(coef_len210^post13-__const_35^0)+(coef_len210^post13-__const_35^0)^2-5*coef_len210^post13+5*__const_35^0

Applied deletion
Removed the following rules: 59 60 61 62 63 64 65 66 67

Chained accelerated rules with incoming rules
Start location: l10
  28: l10 -> l3 : acc_length11^0'=coef_len210^post13, coef_len6^0'=__const_35^0, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=0, 0 == 0, cost: 2
  68: l10 -> l3 : acc_length11^0'=coef_len210^post13-__const_10^0, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-1+coef_len210^post13 <= 0 /\ -1+__const_10^0 >= 0), cost: 2+6*__const_10^0
  69: l10 -> l3 : acc_length11^0'=coef_len210^post13, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-1+coef_len210^post13 <= 0 /\ -1+__const_10^0 >= 0 /\ coef_len210^post13-__const_35^0 >= 0), cost: 2+8*__const_10^0
  70: l10 -> l3 : acc_length11^0'=coef_len210^post13+__const_10^0, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-coef_len210^post13-__const_10^0+__const_35^0 >= 0 /\ 2-coef_len210^post13-__const_10^0 >= 0 /\ -1+__const_10^0 >= 0), cost: 2+8*__const_10^0
  71: l10 -> l3 : acc_length11^0'=__const_35^0, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=-coef_len210^post13+__const_35^0, (coef_len210^post13+__const_10^0-__const_35^0 >= 0 /\ -1-coef_len210^post13+__const_35^0 >= 0 /\ -2+__const_35^0 <= 0), cost: 2-8*coef_len210^post13+8*__const_35^0
  72: l10 -> l3 : acc_length11^0'=2, j9^0'=1, coef_len6^0'=__const_35^0, acc12^0'=acc12^post12, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=2-coef_len210^post13, (-1+coef_len210^post13 <= 0 /\ -2+__const_35^0 >= 0 /\ -2+coef_len210^post13+__const_10^0 >= 0), cost: 18-8*coef_len210^post13
  73: l10 -> l3 : acc_length11^0'=coef_len210^post13-__const_10^0, j9^0'=1+coef_len210^post13-__const_10^0, coef_len6^0'=__const_35^0, acc12^0'=acc12^post9, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-1+coef_len210^post13-__const_10^0 >= 0 /\ -1+__const_10^0 >= 0), cost: 2+5*__const_10^0-__const_10^0^2+2*coef_len210^post13*__const_10^0
  74: l10 -> l3 : acc_length11^0'=1, j9^0'=2, coef_len6^0'=__const_35^0, acc12^0'=acc12^post9, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=-1+coef_len210^post13, (1-coef_len210^post13+__const_10^0 >= 0 /\ -2+coef_len210^post13 >= 0), cost: -3+5*coef_len210^post13-(-1+coef_len210^post13)^2+2*(-1+coef_len210^post13)*coef_len210^post13
  75: l10 -> l3 : acc_length11^0'=coef_len210^post13+__const_10^0, j9^0'=-1+coef_len210^post13+__const_10^0, coef_len6^0'=__const_35^0, acc12^0'=acc12^post9, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=__const_10^0, (-coef_len210^post13-__const_10^0+__const_35^0 >= 0 /\ -1+__const_10^0 >= 0 /\ -2+coef_len210^post13 >= 0), cost: 2+5*__const_10^0+__const_10^0^2+2*coef_len210^post13*__const_10^0
  76: l10 -> l3 : acc_length11^0'=__const_35^0, j9^0'=-1+__const_35^0, coef_len6^0'=__const_35^0, acc12^0'=acc12^post9, in_len4^0'=__const_10^0, coef_len210^0'=coef_len210^post13, scale7^0'=__const_285^0, i8^0'=-coef_len210^post13+__const_35^0, (coef_len210^post13+__const_10^0-__const_35^0 >= 0 /\ -1-coef_len210^post13+__const_35^0 >= 0 /\ -2+coef_len210^post13 >= 0), cost: 2-2*coef_len210^post13*(coef_len210^post13-__const_35^0)+(coef_len210^post13-__const_35^0)^2-5*coef_len210^post13+5*__const_35^0


Removed unreachable locations and irrelevant leafs
Start location: l10
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

