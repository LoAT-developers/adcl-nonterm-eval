unknown

Initial ITS

Start location: __init
Program variables: arg1
   0: f1_0_main_New -> f176_0_iter_NULL : arg1'=arg1p1, -3+arg1p1 > 0, cost: 1
   1: f176_0_iter_NULL -> f176_0_iter_NULL : arg1'=arg1p2, (1+arg1p2 > 0 /\ 1+arg1p2-arg1 <= 0 /\ arg1 > 0), cost: 1
   2: __init -> f1_0_main_New : arg1'=arg1p3, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1
   1: f176_0_iter_NULL -> f176_0_iter_NULL : arg1'=arg1p2, (1+arg1p2 > 0 /\ 1+arg1p2-arg1 <= 0 /\ arg1 > 0), cost: 1
   3: __init -> f176_0_iter_NULL : arg1'=arg1p1, -3+arg1p1 > 0, cost: 1

	Eliminating location f1_0_main_New by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_New : arg1'=arg1p3, T, cost: 1
	Second rule:
	f1_0_main_New -> f176_0_iter_NULL : arg1'=arg1p1, -3+arg1p1 > 0, cost: 1
	New rule:
	__init -> f176_0_iter_NULL : arg1'=arg1p1, -3+arg1p1 > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 0 2

Step with 3

	Trace

	3[(-3+arg1p1 > 0)]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	3[(-3+arg1p1 > 0)], 1[(1+arg1p2 > 0 /\ 1+arg1p2-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 1

	Trace

	3[(-3+arg1p1 > 0)], 1[(1+arg1p2 > 0 /\ 1+arg1p2-arg1 <= 0 /\ arg1 > 0)], 1[(1+arg1p2 > 0 /\ 1+arg1p2-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Covered

	Trace

	3[(-3+arg1p1 > 0)], 1[(1+arg1p2 > 0 /\ 1+arg1p2-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {1[T]}]

Backtrack

	Trace

	3[(-3+arg1p1 > 0)]
	
	Blocked

	[{}, {1[T]}]

Backtrack

	Trace

	Blocked

	[{3[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
