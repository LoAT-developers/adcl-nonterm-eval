NO

Initial ITS

Start location: l5
Program variables: x^0 y^0
   0: l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (y^post1-x^0 == 0 /\ 1-x^0 <= 0 /\ -x^post1+x^0 == 0), cost: 1
   1: l1 -> l2 : x^0'=x^post2, y^0'=y^post2, (x^0-x^post2 == 0 /\ -y^post2+y^0 == 0 /\ y^0 <= 0), cost: 1
   2: l1 -> l3 : x^0'=x^post3, y^0'=y^post3, (1-y^0 <= 0 /\ -x^post3+x^0 == 0 /\ 1-y^0+y^post3 == 0), cost: 1
   4: l2 -> l0 : x^0'=x^post5, y^0'=y^post5, (x^0-x^post5 == 0 /\ -1+y^post5-y^0 == 0), cost: 1
   5: l2 -> l0 : x^0'=x^post6, y^0'=y^post6, (1+x^post6-x^0 == 0 /\ -1-y^0+y^post6 == 0), cost: 1
   3: l3 -> l1 : x^0'=x^post4, y^0'=y^post4, (-x^post4+x^0 == 0 /\ -y^post4+y^0 == 0), cost: 1
   6: l4 -> l0 : x^0'=x^post7, y^0'=y^post7, (-x^post7+x^0 == 0 /\ -y^post7+y^0 == 0), cost: 1
   7: l5 -> l4 : x^0'=x^post8, y^0'=y^post8, (-x^post8+x^0 == 0 /\ y^0-y^post8 == 0), cost: 1

Chained Linear Paths

Start location: l5
Program variables: x^0 y^0
   0: l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (y^post1-x^0 == 0 /\ 1-x^0 <= 0 /\ -x^post1+x^0 == 0), cost: 1
   1: l1 -> l2 : x^0'=x^post2, y^0'=y^post2, (x^0-x^post2 == 0 /\ -y^post2+y^0 == 0 /\ y^0 <= 0), cost: 1
   9: l1 -> l1 : x^0'=x^post4, y^0'=y^post4, (-y^post4+y^post3 == 0 /\ 1-y^0 <= 0 /\ -x^post4+x^post3 == 0 /\ -x^post3+x^0 == 0 /\ 1-y^0+y^post3 == 0), cost: 1
   4: l2 -> l0 : x^0'=x^post5, y^0'=y^post5, (x^0-x^post5 == 0 /\ -1+y^post5-y^0 == 0), cost: 1
   5: l2 -> l0 : x^0'=x^post6, y^0'=y^post6, (1+x^post6-x^0 == 0 /\ -1-y^0+y^post6 == 0), cost: 1
   8: l5 -> l0 : x^0'=x^post7, y^0'=y^post7, (-x^post7+x^post8 == 0 /\ -y^post7+y^post8 == 0 /\ -x^post8+x^0 == 0 /\ y^0-y^post8 == 0), cost: 1

	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l5 -> l4 : x^0'=x^post8, y^0'=y^post8, (-x^post8+x^0 == 0 /\ y^0-y^post8 == 0), cost: 1
	Second rule:
	l4 -> l0 : x^0'=x^post7, y^0'=y^post7, (-x^post7+x^0 == 0 /\ -y^post7+y^0 == 0), cost: 1
	New rule:
	l5 -> l0 : x^0'=x^post7, y^0'=y^post7, (-x^post7+x^post8 == 0 /\ -y^post7+y^post8 == 0 /\ -x^post8+x^0 == 0 /\ y^0-y^post8 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l1 -> l3 : x^0'=x^post3, y^0'=y^post3, (1-y^0 <= 0 /\ -x^post3+x^0 == 0 /\ 1-y^0+y^post3 == 0), cost: 1
	Second rule:
	l3 -> l1 : x^0'=x^post4, y^0'=y^post4, (-x^post4+x^0 == 0 /\ -y^post4+y^0 == 0), cost: 1
	New rule:
	l1 -> l1 : x^0'=x^post4, y^0'=y^post4, (-y^post4+y^post3 == 0 /\ 1-y^0 <= 0 /\ -x^post4+x^post3 == 0 /\ -x^post3+x^0 == 0 /\ 1-y^0+y^post3 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3

Simplified Transitions

Start location: l5
Program variables: x^0 y^0
  10: l0 -> l1 : y^0'=x^0, 1-x^0 <= 0, cost: 1
  11: l1 -> l2 : y^0 <= 0, cost: 1
  15: l1 -> l1 : y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
  12: l2 -> l0 : y^0'=1+y^0, T, cost: 1
  13: l2 -> l0 : x^0'=-1+x^0, y^0'=1+y^0, T, cost: 1
  14: l5 -> l0 : T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (y^post1-x^0 == 0 /\ 1-x^0 <= 0 /\ -x^post1+x^0 == 0), cost: 1
	New rule:
	l0 -> l1 : x^0'=x^0, y^0'=x^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	
		propagated equality y^post1 = x^0
		
		propagated equality x^post1 = x^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : x^0'=x^0, y^0'=x^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : x^0'=x^0, y^0'=x^0, 1-x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : x^0'=x^0, y^0'=x^0, 1-x^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : y^0'=x^0, 1-x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l2 : x^0'=x^post2, y^0'=y^post2, (x^0-x^post2 == 0 /\ -y^post2+y^0 == 0 /\ y^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ y^0 <= 0), cost: 1
	
		propagated equality x^post2 = x^0
		
		propagated equality y^post2 = y^0
		
	Simplified Guard

	Original rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ y^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, y^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, y^0 <= 0, cost: 1
	New rule:
	l1 -> l2 : y^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : x^0'=x^post5, y^0'=y^post5, (x^0-x^post5 == 0 /\ -1+y^post5-y^0 == 0), cost: 1
	New rule:
	l2 -> l0 : x^0'=x^0, y^0'=1+y^0, 0 == 0, cost: 1
	
		propagated equality x^post5 = x^0
		
		propagated equality y^post5 = 1+y^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : x^0'=x^0, y^0'=1+y^0, 0 == 0, cost: 1
	New rule:
	l2 -> l0 : x^0'=x^0, y^0'=1+y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : x^0'=x^0, y^0'=1+y^0, T, cost: 1
	New rule:
	l2 -> l0 : y^0'=1+y^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : x^0'=x^post6, y^0'=y^post6, (1+x^post6-x^0 == 0 /\ -1-y^0+y^post6 == 0), cost: 1
	New rule:
	l2 -> l0 : x^0'=-1+x^0, y^0'=1+y^0, 0 == 0, cost: 1
	
		propagated equality x^post6 = -1+x^0
		
		propagated equality y^post6 = 1+y^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : x^0'=-1+x^0, y^0'=1+y^0, 0 == 0, cost: 1
	New rule:
	l2 -> l0 : x^0'=-1+x^0, y^0'=1+y^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l0 : x^0'=x^post7, y^0'=y^post7, (-x^post7+x^post8 == 0 /\ -y^post7+y^post8 == 0 /\ -x^post8+x^0 == 0 /\ y^0-y^post8 == 0), cost: 1
	New rule:
	l5 -> l0 : x^0'=x^post8, y^0'=y^post8, (0 == 0 /\ -x^post8+x^0 == 0 /\ y^0-y^post8 == 0), cost: 1
	
		propagated equality x^post7 = x^post8
		
		propagated equality y^post7 = y^post8
		
	Propagated Equalities

	Original rule:
	l5 -> l0 : x^0'=x^post8, y^0'=y^post8, (0 == 0 /\ -x^post8+x^0 == 0 /\ y^0-y^post8 == 0), cost: 1
	New rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	
		propagated equality x^post8 = x^0
		
		propagated equality y^post8 = y^0
		
	Simplified Guard

	Original rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	New rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, T, cost: 1
	New rule:
	l5 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : x^0'=x^post4, y^0'=y^post4, (-y^post4+y^post3 == 0 /\ 1-y^0 <= 0 /\ -x^post4+x^post3 == 0 /\ -x^post3+x^0 == 0 /\ 1-y^0+y^post3 == 0), cost: 1
	New rule:
	l1 -> l1 : x^0'=x^post3, y^0'=y^post3, (0 == 0 /\ 1-y^0 <= 0 /\ -x^post3+x^0 == 0 /\ 1-y^0+y^post3 == 0), cost: 1
	
		propagated equality y^post4 = y^post3
		
		propagated equality x^post4 = x^post3
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : x^0'=x^post3, y^0'=y^post3, (0 == 0 /\ 1-y^0 <= 0 /\ -x^post3+x^0 == 0 /\ 1-y^0+y^post3 == 0), cost: 1
	New rule:
	l1 -> l1 : x^0'=x^0, y^0'=-1+y^0, (0 == 0 /\ 1-y^0 <= 0), cost: 1
	
		propagated equality x^post3 = x^0
		
		propagated equality y^post3 = -1+y^0
		
	Simplified Guard

	Original rule:
	l1 -> l1 : x^0'=x^0, y^0'=-1+y^0, (0 == 0 /\ 1-y^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x^0'=x^0, y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : x^0'=x^0, y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
	New rule:
	l1 -> l1 : y^0'=-1+y^0, 1-y^0 <= 0, cost: 1

Step with 14

	Trace

	14[T]
	
	Blocked

	[{}, {}]

Step with 10

	Trace

	14[T], 10[(1-x^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 15

	Trace

	14[T], 10[(1-x^0 <= 0)], 15[(1-y^0 <= 0)]
	
	Blocked

	[{}, {}, {11[T]}, {}]

Accelerate

Start location: l5
Program variables: x^0 y^0
  10: l0 -> l1 : y^0'=x^0, 1-x^0 <= 0, cost: 1
  11: l1 -> l2 : y^0 <= 0, cost: 1
  15: l1 -> l1 : y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
  16: l1 -> l1 : y^0'=-n+y^0, (-1+n >= 0 /\ -n+y^0 >= 0), cost: 1
  12: l2 -> l0 : y^0'=1+y^0, T, cost: 1
  13: l2 -> l0 : x^0'=-1+x^0, y^0'=1+y^0, T, cost: 1
  14: l5 -> l0 : T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : y^0'=-1+y^0, (1-y^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : y^0'=-n+y^0, (-1+n >= 0 /\ -n+y^0 >= 0), cost: 1

		-1+y^0 >= 0 [0]: montonic decrease yields -n+y^0 >= 0
		
		-1+y^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+y^0 >= 0)
		
		Replacement map: {-1+y^0 >= 0 -> -n+y^0 >= 0}

	Trace

	14[T], 10[(1-x^0 <= 0)], 16[(-1+n >= 0 /\ -n+y^0 >= 0)]
	
	Blocked

	[{}, {}, {11[T]}, {15[T], 16[T]}]

Step with 11

	Trace

	14[T], 10[(1-x^0 <= 0)], 16[(-1+n >= 0 /\ -n+y^0 >= 0)], 11[(y^0 <= 0)]
	
	Blocked

	[{}, {}, {11[T]}, {15[T], 16[T]}, {}]

Step with 12

	Trace

	14[T], 10[(1-x^0 <= 0)], 16[(-1+n >= 0 /\ -n+y^0 >= 0)], 11[(y^0 <= 0)], 12[T]
	
	Blocked

	[{}, {}, {11[T]}, {15[T], 16[T]}, {}, {}]

Nonterm

Start location: l5
Program variables: x^0 y^0
  10: l0 -> l1 : y^0'=x^0, 1-x^0 <= 0, cost: 1
  17: l0 -> LoAT_sink : (-1+n2 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
  11: l1 -> l2 : y^0 <= 0, cost: 1
  15: l1 -> l1 : y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
  16: l1 -> l1 : y^0'=-n+y^0, (-1+n >= 0 /\ -n+y^0 >= 0), cost: 1
  12: l2 -> l0 : y^0'=1+y^0, T, cost: 1
  13: l2 -> l0 : x^0'=-1+x^0, y^0'=1+y^0, T, cost: 1
  14: l5 -> l0 : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l0 -> l0 : y^0'=1, (1-x^0 <= 0 /\ -1+x^0 >= 0), cost: 1
	New rule:
	l0 -> LoAT_sink : (-1+n2 >= 0 /\ -1+x^0 >= 0), cost: NONTERM

		-1+x^0 >= 0 [0]: monotonic increase yields -1+x^0 >= 0
		
		Replacement map: {-1+x^0 >= 0 -> -1+x^0 >= 0}

Step with 17

	Trace

	14[T], 17[(-1+n2 >= 0 /\ -1+x^0 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}]

Refute

	Counterexample

	[ x^0=1 y^0=0 ] 14 [ x^0=1 y^0=0 ] 17
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
