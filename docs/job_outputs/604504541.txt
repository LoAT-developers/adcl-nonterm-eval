NO

Initial ITS
Start location: l4
   0: l0 -> l1 : y^0'=y^post0, x^0'=x^post0, (y^post0 == 0 /\ x^post0 == 0), cost: 1
   1: l1 -> l2 : y^0'=y^post1, x^0'=x^post1, (1+y^0-x^0 <= 0 /\ x^0-x^post1 == 0 /\ y^0-y^post1 == 0), cost: 1
   2: l1 -> l3 : y^0'=y^post2, x^0'=x^post2, (-1-x^0+x^post2 == 0 /\ -1-y^0+y^post2 == 0), cost: 1
   3: l3 -> l1 : y^0'=y^post3, x^0'=x^post3, (y^0-y^post3 == 0 /\ -x^post3+x^0 == 0), cost: 1
   4: l4 -> l0 : y^0'=y^post4, x^0'=x^post4, (y^0-y^post4 == 0 /\ x^0-x^post4 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l4
   0: l0 -> l1 : y^0'=y^post0, x^0'=x^post0, (y^post0 == 0 /\ x^post0 == 0), cost: 1
   2: l1 -> l3 : y^0'=y^post2, x^0'=x^post2, (-1-x^0+x^post2 == 0 /\ -1-y^0+y^post2 == 0), cost: 1
   3: l3 -> l1 : y^0'=y^post3, x^0'=x^post3, (y^0-y^post3 == 0 /\ -x^post3+x^0 == 0), cost: 1
   4: l4 -> l0 : y^0'=y^post4, x^0'=x^post4, (y^0-y^post4 == 0 /\ x^0-x^post4 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : y^0'=y^post0, x^0'=x^post0, (y^post0 == 0 /\ x^post0 == 0), cost: 1
New rule:
l0 -> l1 : y^0'=0, x^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : y^0'=y^post2, x^0'=x^post2, (-1-x^0+x^post2 == 0 /\ -1-y^0+y^post2 == 0), cost: 1
New rule:
l1 -> l3 : y^0'=1+y^0, x^0'=1+x^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : y^0'=y^post3, x^0'=x^post3, (y^0-y^post3 == 0 /\ -x^post3+x^0 == 0), cost: 1
New rule:
l3 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l0 : y^0'=y^post4, x^0'=x^post4, (y^0-y^post4 == 0 /\ x^0-x^post4 == 0), cost: 1
New rule:
l4 -> l0 : TRUE, cost: 1

Simplified rules
Start location: l4
   5: l0 -> l1 : y^0'=0, x^0'=0, TRUE, cost: 1
   6: l1 -> l3 : y^0'=1+y^0, x^0'=1+x^0, TRUE, cost: 1
   7: l3 -> l1 : TRUE, cost: 1
   8: l4 -> l0 : TRUE, cost: 1


Eliminating location l0 by chaining:

Applied chaining
First rule:
l4 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : y^0'=0, x^0'=0, TRUE, cost: 1
New rule:
l4 -> l1 : y^0'=0, x^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 5 8

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : y^0'=1+y^0, x^0'=1+x^0, TRUE, cost: 1
Second rule:
l3 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : y^0'=1+y^0, x^0'=1+x^0, TRUE, cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminated locations on linear paths
Start location: l4
  10: l1 -> l1 : y^0'=1+y^0, x^0'=1+x^0, TRUE, cost: 2
   9: l4 -> l1 : y^0'=0, x^0'=0, TRUE, cost: 2


Applied nonterm
Original rule:
l1 -> l1 : y^0'=1+y^0, x^0'=1+x^0, TRUE, cost: 2
New rule:
l1 -> [5] : n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ckMECP.txt

Applied deletion
Removed the following rules: 10

Accelerated simple loops
Start location: l4
  11: l1 -> [5] : n >= 0, cost: NONTERM
   9: l4 -> l1 : y^0'=0, x^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l4 -> l1 : y^0'=0, x^0'=0, TRUE, cost: 2
Second rule:
l1 -> [5] : n >= 0, cost: NONTERM
New rule:
l4 -> [5] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 11

Chained accelerated rules with incoming rules
Start location: l4
   9: l4 -> l1 : y^0'=0, x^0'=0, TRUE, cost: 2
  12: l4 -> [5] : TRUE, cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: l4
  12: l4 -> [5] : TRUE, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 12 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  TRUE
