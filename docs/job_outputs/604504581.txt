WORST_CASE(Omega(0),?)

Initial ITS
Start location: l18
   0: l0 -> l1 : j^0'=j^post0, i^0'=i^post0, ret_check8^0'=ret_check8^post0, j6^0'=j6^post0, __const_100^0'=__const_100^post0, ret_check12^0'=ret_check12^post0, j10^0'=j10^post0, tmp^0'=tmp^post0, (-tmp^post0+tmp^0 == 0 /\ -j10^post0+j10^0 == 0 /\ -j6^post0+j6^0 == 0 /\ -i^0+__const_100^0 <= 0 /\ ret_check8^0-ret_check8^post0 == 0 /\ -i^post0+i^0 == 0 /\ ret_check12^0-ret_check12^post0 == 0 /\ __const_100^0-__const_100^post0 == 0 /\ 2-i^0+j^post0 == 0), cost: 1
   1: l0 -> l2 : j^0'=j^post1, i^0'=i^post1, ret_check8^0'=ret_check8^post1, j6^0'=j6^post1, __const_100^0'=__const_100^post1, ret_check12^0'=ret_check12^post1, j10^0'=j10^post1, tmp^0'=tmp^post1, (1+i^0-__const_100^0 <= 0 /\ j^0-j^post1 == 0 /\ j6^0-j6^post1 == 0 /\ -j10^post1+j10^0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ -1-i^0+i^post1 == 0 /\ -ret_check12^post1+ret_check12^0 == 0 /\ -__const_100^post1+__const_100^0 == 0 /\ -ret_check8^post1+ret_check8^0 == 0), cost: 1
  24: l1 -> l10 : j^0'=j^post24, i^0'=i^post24, ret_check8^0'=ret_check8^post24, j6^0'=j6^post24, __const_100^0'=__const_100^post24, ret_check12^0'=ret_check12^post24, j10^0'=j10^post24, tmp^0'=tmp^post24, (j10^0-j10^post24 == 0 /\ -tmp^post24+tmp^0 == 0 /\ -ret_check12^post24+ret_check12^0 == 0 /\ 1+i^0 <= 0 /\ __const_100^0-__const_100^post24 == 0 /\ i^0-i^post24 == 0 /\ -j^0+j6^post24 == 0 /\ ret_check8^0-ret_check8^post24 == 0 /\ j^0-j^post24 == 0), cost: 1
  25: l1 -> l4 : j^0'=j^post25, i^0'=i^post25, ret_check8^0'=ret_check8^post25, j6^0'=j6^post25, __const_100^0'=__const_100^post25, ret_check12^0'=ret_check12^post25, j10^0'=j10^post25, tmp^0'=tmp^post25, (-__const_100^post25+__const_100^0 == 0 /\ -j6^post25+j6^0 == 0 /\ -tmp^post25+tmp^0 == 0 /\ -i^0 <= 0 /\ ret_check12^0-ret_check12^post25 == 0 /\ i^0-i^post25 == 0 /\ ret_check8^0-ret_check8^post25 == 0 /\ j^0-j^post25 == 0 /\ -j10^post25+j10^0 == 0), cost: 1
   3: l2 -> l0 : j^0'=j^post3, i^0'=i^post3, ret_check8^0'=ret_check8^post3, j6^0'=j6^post3, __const_100^0'=__const_100^post3, ret_check12^0'=ret_check12^post3, j10^0'=j10^post3, tmp^0'=tmp^post3, (i^0-i^post3 == 0 /\ -ret_check8^post3+ret_check8^0 == 0 /\ -ret_check12^post3+ret_check12^0 == 0 /\ -j10^post3+j10^0 == 0 /\ j^0-j^post3 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ -tmp^post3+tmp^0 == 0 /\ j6^0-j6^post3 == 0), cost: 1
   2: l3 -> l4 : j^0'=j^post2, i^0'=i^post2, ret_check8^0'=ret_check8^post2, j6^0'=j6^post2, __const_100^0'=__const_100^post2, ret_check12^0'=ret_check12^post2, j10^0'=j10^post2, tmp^0'=tmp^post2, (-tmp^post2+tmp^0 == 0 /\ ret_check8^0-ret_check8^post2 == 0 /\ j^0-j^post2 == 0 /\ -ret_check12^post2+ret_check12^0 == 0 /\ __const_100^0-__const_100^post2 == 0 /\ -i^post2+i^0 == 0 /\ -j10^post2+j10^0 == 0 /\ j6^0-j6^post2 == 0), cost: 1
   4: l5 -> l6 : j^0'=j^post4, i^0'=i^post4, ret_check8^0'=ret_check8^post4, j6^0'=j6^post4, __const_100^0'=__const_100^post4, ret_check12^0'=ret_check12^post4, j10^0'=j10^post4, tmp^0'=tmp^post4, (j^0-j^post4 == 0 /\ -j6^post4+j6^0 == 0 /\ ret_check8^0-ret_check8^post4 == 0 /\ __const_100^0-__const_100^post4 == 0 /\ -j10^post4+j10^0 == 0 /\ i^0-i^post4 == 0 /\ ret_check12^0-ret_check12^post4 == 0 /\ -tmp^post4+tmp^0 == 0), cost: 1
  18: l6 -> l9 : j^0'=j^post18, i^0'=i^post18, ret_check8^0'=ret_check8^post18, j6^0'=j6^post18, __const_100^0'=__const_100^post18, ret_check12^0'=ret_check12^post18, j10^0'=j10^post18, tmp^0'=tmp^post18, (-tmp^post18+tmp^0 == 0 /\ -ret_check8^post18+ret_check8^0 == 0 /\ i^0-i^post18 == 0 /\ -j10^post18+j10^0 == 0 /\ j^0-j^post18 == 0 /\ -__const_100^post18+__const_100^0 == 0 /\ -ret_check12^post18+ret_check12^0 == 0 /\ j6^0-j6^post18 == 0), cost: 1
   5: l7 -> l5 : j^0'=j^post5, i^0'=i^post5, ret_check8^0'=ret_check8^post5, j6^0'=j6^post5, __const_100^0'=__const_100^post5, ret_check12^0'=ret_check12^post5, j10^0'=j10^post5, tmp^0'=tmp^post5, (-tmp^post5+tmp^0 == 0 /\ j^0-j^post5 == 0 /\ -__const_100^post5+__const_100^0 == 0 /\ -ret_check12^post5+ret_check12^0 == 0 /\ j6^0-j6^post5 == 0 /\ -ret_check8^post5+ret_check8^0 == 0 /\ -1+j10^post5-j10^0 == 0 /\ i^0-i^post5 == 0), cost: 1
   6: l8 -> l7 : j^0'=j^post6, i^0'=i^post6, ret_check8^0'=ret_check8^post6, j6^0'=j6^post6, __const_100^0'=__const_100^post6, ret_check12^0'=ret_check12^post6, j10^0'=j10^post6, tmp^0'=tmp^post6, (-j6^post6+j6^0 == 0 /\ ret_check8^0-ret_check8^post6 == 0 /\ -j10^post6+j10^0 == 0 /\ j^0-j^post6 == 0 /\ -i^post6+i^0 == 0 /\ ret_check12^0-ret_check12^post6 == 0 /\ -tmp^post6+tmp^0 == 0 /\ __const_100^0-__const_100^post6 == 0), cost: 1
   7: l8 -> l5 : j^0'=j^post7, i^0'=i^post7, ret_check8^0'=ret_check8^post7, j6^0'=j6^post7, __const_100^0'=__const_100^post7, ret_check12^0'=ret_check12^post7, j10^0'=j10^post7, tmp^0'=tmp^post7, (j^0-j^post7 == 0 /\ __const_100^0-__const_100^post7 == 0 /\ -tmp^post7+tmp^0 == 0 /\ j10^0-j10^post7 == 0 /\ -ret_check8^post7+ret_check8^0 == 0 /\ j6^0-j6^post7 == 0 /\ -ret_check12^post7+ret_check12^0 == 0 /\ i^0-i^post7 == 0), cost: 1
   8: l8 -> l7 : j^0'=j^post8, i^0'=i^post8, ret_check8^0'=ret_check8^post8, j6^0'=j6^post8, __const_100^0'=__const_100^post8, ret_check12^0'=ret_check12^post8, j10^0'=j10^post8, tmp^0'=tmp^post8, (-__const_100^post8+__const_100^0 == 0 /\ ret_check8^0-ret_check8^post8 == 0 /\ -tmp^post8+tmp^0 == 0 /\ -j6^post8+j6^0 == 0 /\ ret_check12^0-ret_check12^post8 == 0 /\ i^0-i^post8 == 0 /\ j^0-j^post8 == 0 /\ -j10^post8+j10^0 == 0), cost: 1
   9: l9 -> l3 : j^0'=j^post9, i^0'=i^post9, ret_check8^0'=ret_check8^post9, j6^0'=j6^post9, __const_100^0'=__const_100^post9, ret_check12^0'=ret_check12^post9, j10^0'=j10^post9, tmp^0'=tmp^post9, (-ret_check8^post9+ret_check8^0 == 0 /\ j6^0-j6^post9 == 0 /\ j10^0-j10^post9 == 0 /\ ret_check12^post9-j10^0 == 0 /\ i^0-i^post9 == 0 /\ -tmp^post9+tmp^0 == 0 /\ -ret_check12^post9+j^post9 == 0 /\ -__const_100^post9+__const_100^0 == 0), cost: 1
  10: l9 -> l8 : j^0'=j^post10, i^0'=i^post10, ret_check8^0'=ret_check8^post10, j6^0'=j6^post10, __const_100^0'=__const_100^post10, ret_check12^0'=ret_check12^post10, j10^0'=j10^post10, tmp^0'=tmp^post10, (ret_check8^0-ret_check8^post10 == 0 /\ j^0-j^post10 == 0 /\ -j10^post10+j10^0 == 0 /\ -tmp^post10+tmp^0 == 0 /\ ret_check12^0-ret_check12^post10 == 0 /\ -j6^post10+j6^0 == 0 /\ -__const_100^post10+__const_100^0 == 0 /\ i^0-i^post10 == 0), cost: 1
  11: l10 -> l11 : j^0'=j^post11, i^0'=i^post11, ret_check8^0'=ret_check8^post11, j6^0'=j6^post11, __const_100^0'=__const_100^post11, ret_check12^0'=ret_check12^post11, j10^0'=j10^post11, tmp^0'=tmp^post11, (j^0-j^post11 == 0 /\ __const_100^0-__const_100^post11 == 0 /\ -ret_check8^post11+ret_check8^0 == 0 /\ j6^0-j6^post11 == 0 /\ i^0-i^post11 == 0 /\ -j10^post11+j10^0 == 0 /\ -tmp^post11+tmp^0 == 0 /\ -ret_check12^post11+ret_check12^0 == 0), cost: 1
  22: l11 -> l13 : j^0'=j^post22, i^0'=i^post22, ret_check8^0'=ret_check8^post22, j6^0'=j6^post22, __const_100^0'=__const_100^post22, ret_check12^0'=ret_check12^post22, j10^0'=j10^post22, tmp^0'=tmp^post22, (0 == 0 /\ -ret_check12^post22+ret_check12^0 == 0 /\ -j10^post22+j10^0 == 0 /\ -__const_100^post22+__const_100^0 == 0 /\ j6^0-j6^post22 == 0 /\ ret_check8^post22-j6^0 == 0 /\ i^0-i^post22 == 0 /\ -ret_check8^post22+j^post22 == 0), cost: 1
  23: l11 -> l16 : j^0'=j^post23, i^0'=i^post23, ret_check8^0'=ret_check8^post23, j6^0'=j6^post23, __const_100^0'=__const_100^post23, ret_check12^0'=ret_check12^post23, j10^0'=j10^post23, tmp^0'=tmp^post23, (-tmp^post23+tmp^0 == 0 /\ -j10^post23+j10^0 == 0 /\ j^0-j^post23 == 0 /\ ret_check8^0-ret_check8^post23 == 0 /\ ret_check12^0-ret_check12^post23 == 0 /\ -__const_100^post23+__const_100^0 == 0 /\ -j6^post23+j6^0 == 0 /\ i^0-i^post23 == 0), cost: 1
  12: l12 -> l6 : j^0'=j^post12, i^0'=i^post12, ret_check8^0'=ret_check8^post12, j6^0'=j6^post12, __const_100^0'=__const_100^post12, ret_check12^0'=ret_check12^post12, j10^0'=j10^post12, tmp^0'=tmp^post12, (i^0-i^post12 == 0 /\ -__const_100^post12+__const_100^0 == 0 /\ -ret_check8^post12+ret_check8^0 == 0 /\ -tmp^post12+tmp^0 == 0 /\ -j^0+j10^post12 == 0 /\ -ret_check12^post12+ret_check12^0 == 0 /\ -j^post12+j^0 == 0 /\ j6^0-j6^post12 == 0), cost: 1
  13: l13 -> l12 : j^0'=j^post13, i^0'=i^post13, ret_check8^0'=ret_check8^post13, j6^0'=j6^post13, __const_100^0'=__const_100^post13, ret_check12^0'=ret_check12^post13, j10^0'=j10^post13, tmp^0'=tmp^post13, (-ret_check12^post13+ret_check12^0 == 0 /\ __const_100^0-__const_100^post13 == 0 /\ j^0-j^post13 == 0 /\ -j10^post13+j10^0 == 0 /\ -j6^post13+j6^0 == 0 /\ ret_check8^0-ret_check8^post13 == 0 /\ -i^post13+i^0 == 0 /\ -tmp^post13+tmp^0 == 0), cost: 1
  14: l13 -> l3 : j^0'=j^post14, i^0'=i^post14, ret_check8^0'=ret_check8^post14, j6^0'=j6^post14, __const_100^0'=__const_100^post14, ret_check12^0'=ret_check12^post14, j10^0'=j10^post14, tmp^0'=tmp^post14, (i^0-i^post14 == 0 /\ -ret_check8^post14+ret_check8^0 == 0 /\ -tmp^post14+tmp^0 == 0 /\ -j10^post14+j10^0 == 0 /\ j^0-j^post14 == 0 /\ j6^0-j6^post14 == 0 /\ -ret_check12^post14+ret_check12^0 == 0 /\ -__const_100^post14+__const_100^0 == 0), cost: 1
  15: l13 -> l12 : j^0'=j^post15, i^0'=i^post15, ret_check8^0'=ret_check8^post15, j6^0'=j6^post15, __const_100^0'=__const_100^post15, ret_check12^0'=ret_check12^post15, j10^0'=j10^post15, tmp^0'=tmp^post15, (-i^post15+i^0 == 0 /\ -j10^post15+j10^0 == 0 /\ -tmp^post15+tmp^0 == 0 /\ ret_check8^0-ret_check8^post15 == 0 /\ j^0-j^post15 == 0 /\ j6^0-j6^post15 == 0 /\ __const_100^0-__const_100^post15 == 0 /\ ret_check12^0-ret_check12^post15 == 0), cost: 1
  16: l14 -> l10 : j^0'=j^post16, i^0'=i^post16, ret_check8^0'=ret_check8^post16, j6^0'=j6^post16, __const_100^0'=__const_100^post16, ret_check12^0'=ret_check12^post16, j10^0'=j10^post16, tmp^0'=tmp^post16, (i^0-i^post16 == 0 /\ -ret_check12^post16+ret_check12^0 == 0 /\ -__const_100^post16+__const_100^0 == 0 /\ -j10^post16+j10^0 == 0 /\ j^0-j^post16 == 0 /\ j6^0-j6^post16 == 0 /\ -tmp^post16+tmp^0 == 0 /\ -ret_check8^post16+ret_check8^0 == 0), cost: 1
  17: l15 -> l14 : j^0'=j^post17, i^0'=i^post17, ret_check8^0'=ret_check8^post17, j6^0'=j6^post17, __const_100^0'=__const_100^post17, ret_check12^0'=ret_check12^post17, j10^0'=j10^post17, tmp^0'=tmp^post17, (j^0-j^post17 == 0 /\ ret_check8^0-ret_check8^post17 == 0 /\ -tmp^post17+tmp^0 == 0 /\ -ret_check12^post17+ret_check12^0 == 0 /\ -1+j6^post17-j6^0 == 0 /\ i^0-i^post17 == 0 /\ __const_100^0-__const_100^post17 == 0 /\ -j10^post17+j10^0 == 0), cost: 1
  19: l16 -> l15 : j^0'=j^post19, i^0'=i^post19, ret_check8^0'=ret_check8^post19, j6^0'=j6^post19, __const_100^0'=__const_100^post19, ret_check12^0'=ret_check12^post19, j10^0'=j10^post19, tmp^0'=tmp^post19, (ret_check8^0-ret_check8^post19 == 0 /\ j^0-j^post19 == 0 /\ -j6^post19+j6^0 == 0 /\ -tmp^post19+tmp^0 == 0 /\ ret_check12^0-ret_check12^post19 == 0 /\ -i^post19+i^0 == 0 /\ -j10^post19+j10^0 == 0 /\ -__const_100^post19+__const_100^0 == 0), cost: 1
  20: l16 -> l14 : j^0'=j^post20, i^0'=i^post20, ret_check8^0'=ret_check8^post20, j6^0'=j6^post20, __const_100^0'=__const_100^post20, ret_check12^0'=ret_check12^post20, j10^0'=j10^post20, tmp^0'=tmp^post20, (j^0-j^post20 == 0 /\ j6^0-j6^post20 == 0 /\ j10^0-j10^post20 == 0 /\ -ret_check8^post20+ret_check8^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ -ret_check12^post20+ret_check12^0 == 0 /\ -__const_100^post20+__const_100^0 == 0 /\ i^0-i^post20 == 0), cost: 1
  21: l16 -> l15 : j^0'=j^post21, i^0'=i^post21, ret_check8^0'=ret_check8^post21, j6^0'=j6^post21, __const_100^0'=__const_100^post21, ret_check12^0'=ret_check12^post21, j10^0'=j10^post21, tmp^0'=tmp^post21, (j^0-j^post21 == 0 /\ ret_check8^0-ret_check8^post21 == 0 /\ -j10^post21+j10^0 == 0 /\ __const_100^0-__const_100^post21 == 0 /\ i^0-i^post21 == 0 /\ -j6^post21+j6^0 == 0 /\ ret_check12^0-ret_check12^post21 == 0 /\ -tmp^post21+tmp^0 == 0), cost: 1
  26: l17 -> l2 : j^0'=j^post26, i^0'=i^post26, ret_check8^0'=ret_check8^post26, j6^0'=j6^post26, __const_100^0'=__const_100^post26, ret_check12^0'=ret_check12^post26, j10^0'=j10^post26, tmp^0'=tmp^post26, (-ret_check8^post26+ret_check8^0 == 0 /\ __const_100^0-__const_100^post26 == 0 /\ i^post26 == 0 /\ -tmp^post26+tmp^0 == 0 /\ j6^0-j6^post26 == 0 /\ j10^0-j10^post26 == 0 /\ -ret_check12^post26+ret_check12^0 == 0 /\ j^0-j^post26 == 0), cost: 1
  27: l18 -> l17 : j^0'=j^post27, i^0'=i^post27, ret_check8^0'=ret_check8^post27, j6^0'=j6^post27, __const_100^0'=__const_100^post27, ret_check12^0'=ret_check12^post27, j10^0'=j10^post27, tmp^0'=tmp^post27, (ret_check8^0-ret_check8^post27 == 0 /\ -tmp^post27+tmp^0 == 0 /\ -j10^post27+j10^0 == 0 /\ -__const_100^post27+__const_100^0 == 0 /\ ret_check12^0-ret_check12^post27 == 0 /\ i^0-i^post27 == 0 /\ -j6^post27+j6^0 == 0 /\ j^0-j^post27 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l18
   0: l0 -> l1 : j^0'=j^post0, i^0'=i^post0, ret_check8^0'=ret_check8^post0, j6^0'=j6^post0, __const_100^0'=__const_100^post0, ret_check12^0'=ret_check12^post0, j10^0'=j10^post0, tmp^0'=tmp^post0, (-tmp^post0+tmp^0 == 0 /\ -j10^post0+j10^0 == 0 /\ -j6^post0+j6^0 == 0 /\ -i^0+__const_100^0 <= 0 /\ ret_check8^0-ret_check8^post0 == 0 /\ -i^post0+i^0 == 0 /\ ret_check12^0-ret_check12^post0 == 0 /\ __const_100^0-__const_100^post0 == 0 /\ 2-i^0+j^post0 == 0), cost: 1
   1: l0 -> l2 : j^0'=j^post1, i^0'=i^post1, ret_check8^0'=ret_check8^post1, j6^0'=j6^post1, __const_100^0'=__const_100^post1, ret_check12^0'=ret_check12^post1, j10^0'=j10^post1, tmp^0'=tmp^post1, (1+i^0-__const_100^0 <= 0 /\ j^0-j^post1 == 0 /\ j6^0-j6^post1 == 0 /\ -j10^post1+j10^0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ -1-i^0+i^post1 == 0 /\ -ret_check12^post1+ret_check12^0 == 0 /\ -__const_100^post1+__const_100^0 == 0 /\ -ret_check8^post1+ret_check8^0 == 0), cost: 1
  24: l1 -> l10 : j^0'=j^post24, i^0'=i^post24, ret_check8^0'=ret_check8^post24, j6^0'=j6^post24, __const_100^0'=__const_100^post24, ret_check12^0'=ret_check12^post24, j10^0'=j10^post24, tmp^0'=tmp^post24, (j10^0-j10^post24 == 0 /\ -tmp^post24+tmp^0 == 0 /\ -ret_check12^post24+ret_check12^0 == 0 /\ 1+i^0 <= 0 /\ __const_100^0-__const_100^post24 == 0 /\ i^0-i^post24 == 0 /\ -j^0+j6^post24 == 0 /\ ret_check8^0-ret_check8^post24 == 0 /\ j^0-j^post24 == 0), cost: 1
   3: l2 -> l0 : j^0'=j^post3, i^0'=i^post3, ret_check8^0'=ret_check8^post3, j6^0'=j6^post3, __const_100^0'=__const_100^post3, ret_check12^0'=ret_check12^post3, j10^0'=j10^post3, tmp^0'=tmp^post3, (i^0-i^post3 == 0 /\ -ret_check8^post3+ret_check8^0 == 0 /\ -ret_check12^post3+ret_check12^0 == 0 /\ -j10^post3+j10^0 == 0 /\ j^0-j^post3 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ -tmp^post3+tmp^0 == 0 /\ j6^0-j6^post3 == 0), cost: 1
   4: l5 -> l6 : j^0'=j^post4, i^0'=i^post4, ret_check8^0'=ret_check8^post4, j6^0'=j6^post4, __const_100^0'=__const_100^post4, ret_check12^0'=ret_check12^post4, j10^0'=j10^post4, tmp^0'=tmp^post4, (j^0-j^post4 == 0 /\ -j6^post4+j6^0 == 0 /\ ret_check8^0-ret_check8^post4 == 0 /\ __const_100^0-__const_100^post4 == 0 /\ -j10^post4+j10^0 == 0 /\ i^0-i^post4 == 0 /\ ret_check12^0-ret_check12^post4 == 0 /\ -tmp^post4+tmp^0 == 0), cost: 1
  18: l6 -> l9 : j^0'=j^post18, i^0'=i^post18, ret_check8^0'=ret_check8^post18, j6^0'=j6^post18, __const_100^0'=__const_100^post18, ret_check12^0'=ret_check12^post18, j10^0'=j10^post18, tmp^0'=tmp^post18, (-tmp^post18+tmp^0 == 0 /\ -ret_check8^post18+ret_check8^0 == 0 /\ i^0-i^post18 == 0 /\ -j10^post18+j10^0 == 0 /\ j^0-j^post18 == 0 /\ -__const_100^post18+__const_100^0 == 0 /\ -ret_check12^post18+ret_check12^0 == 0 /\ j6^0-j6^post18 == 0), cost: 1
   5: l7 -> l5 : j^0'=j^post5, i^0'=i^post5, ret_check8^0'=ret_check8^post5, j6^0'=j6^post5, __const_100^0'=__const_100^post5, ret_check12^0'=ret_check12^post5, j10^0'=j10^post5, tmp^0'=tmp^post5, (-tmp^post5+tmp^0 == 0 /\ j^0-j^post5 == 0 /\ -__const_100^post5+__const_100^0 == 0 /\ -ret_check12^post5+ret_check12^0 == 0 /\ j6^0-j6^post5 == 0 /\ -ret_check8^post5+ret_check8^0 == 0 /\ -1+j10^post5-j10^0 == 0 /\ i^0-i^post5 == 0), cost: 1
   6: l8 -> l7 : j^0'=j^post6, i^0'=i^post6, ret_check8^0'=ret_check8^post6, j6^0'=j6^post6, __const_100^0'=__const_100^post6, ret_check12^0'=ret_check12^post6, j10^0'=j10^post6, tmp^0'=tmp^post6, (-j6^post6+j6^0 == 0 /\ ret_check8^0-ret_check8^post6 == 0 /\ -j10^post6+j10^0 == 0 /\ j^0-j^post6 == 0 /\ -i^post6+i^0 == 0 /\ ret_check12^0-ret_check12^post6 == 0 /\ -tmp^post6+tmp^0 == 0 /\ __const_100^0-__const_100^post6 == 0), cost: 1
   7: l8 -> l5 : j^0'=j^post7, i^0'=i^post7, ret_check8^0'=ret_check8^post7, j6^0'=j6^post7, __const_100^0'=__const_100^post7, ret_check12^0'=ret_check12^post7, j10^0'=j10^post7, tmp^0'=tmp^post7, (j^0-j^post7 == 0 /\ __const_100^0-__const_100^post7 == 0 /\ -tmp^post7+tmp^0 == 0 /\ j10^0-j10^post7 == 0 /\ -ret_check8^post7+ret_check8^0 == 0 /\ j6^0-j6^post7 == 0 /\ -ret_check12^post7+ret_check12^0 == 0 /\ i^0-i^post7 == 0), cost: 1
   8: l8 -> l7 : j^0'=j^post8, i^0'=i^post8, ret_check8^0'=ret_check8^post8, j6^0'=j6^post8, __const_100^0'=__const_100^post8, ret_check12^0'=ret_check12^post8, j10^0'=j10^post8, tmp^0'=tmp^post8, (-__const_100^post8+__const_100^0 == 0 /\ ret_check8^0-ret_check8^post8 == 0 /\ -tmp^post8+tmp^0 == 0 /\ -j6^post8+j6^0 == 0 /\ ret_check12^0-ret_check12^post8 == 0 /\ i^0-i^post8 == 0 /\ j^0-j^post8 == 0 /\ -j10^post8+j10^0 == 0), cost: 1
  10: l9 -> l8 : j^0'=j^post10, i^0'=i^post10, ret_check8^0'=ret_check8^post10, j6^0'=j6^post10, __const_100^0'=__const_100^post10, ret_check12^0'=ret_check12^post10, j10^0'=j10^post10, tmp^0'=tmp^post10, (ret_check8^0-ret_check8^post10 == 0 /\ j^0-j^post10 == 0 /\ -j10^post10+j10^0 == 0 /\ -tmp^post10+tmp^0 == 0 /\ ret_check12^0-ret_check12^post10 == 0 /\ -j6^post10+j6^0 == 0 /\ -__const_100^post10+__const_100^0 == 0 /\ i^0-i^post10 == 0), cost: 1
  11: l10 -> l11 : j^0'=j^post11, i^0'=i^post11, ret_check8^0'=ret_check8^post11, j6^0'=j6^post11, __const_100^0'=__const_100^post11, ret_check12^0'=ret_check12^post11, j10^0'=j10^post11, tmp^0'=tmp^post11, (j^0-j^post11 == 0 /\ __const_100^0-__const_100^post11 == 0 /\ -ret_check8^post11+ret_check8^0 == 0 /\ j6^0-j6^post11 == 0 /\ i^0-i^post11 == 0 /\ -j10^post11+j10^0 == 0 /\ -tmp^post11+tmp^0 == 0 /\ -ret_check12^post11+ret_check12^0 == 0), cost: 1
  22: l11 -> l13 : j^0'=j^post22, i^0'=i^post22, ret_check8^0'=ret_check8^post22, j6^0'=j6^post22, __const_100^0'=__const_100^post22, ret_check12^0'=ret_check12^post22, j10^0'=j10^post22, tmp^0'=tmp^post22, (0 == 0 /\ -ret_check12^post22+ret_check12^0 == 0 /\ -j10^post22+j10^0 == 0 /\ -__const_100^post22+__const_100^0 == 0 /\ j6^0-j6^post22 == 0 /\ ret_check8^post22-j6^0 == 0 /\ i^0-i^post22 == 0 /\ -ret_check8^post22+j^post22 == 0), cost: 1
  23: l11 -> l16 : j^0'=j^post23, i^0'=i^post23, ret_check8^0'=ret_check8^post23, j6^0'=j6^post23, __const_100^0'=__const_100^post23, ret_check12^0'=ret_check12^post23, j10^0'=j10^post23, tmp^0'=tmp^post23, (-tmp^post23+tmp^0 == 0 /\ -j10^post23+j10^0 == 0 /\ j^0-j^post23 == 0 /\ ret_check8^0-ret_check8^post23 == 0 /\ ret_check12^0-ret_check12^post23 == 0 /\ -__const_100^post23+__const_100^0 == 0 /\ -j6^post23+j6^0 == 0 /\ i^0-i^post23 == 0), cost: 1
  12: l12 -> l6 : j^0'=j^post12, i^0'=i^post12, ret_check8^0'=ret_check8^post12, j6^0'=j6^post12, __const_100^0'=__const_100^post12, ret_check12^0'=ret_check12^post12, j10^0'=j10^post12, tmp^0'=tmp^post12, (i^0-i^post12 == 0 /\ -__const_100^post12+__const_100^0 == 0 /\ -ret_check8^post12+ret_check8^0 == 0 /\ -tmp^post12+tmp^0 == 0 /\ -j^0+j10^post12 == 0 /\ -ret_check12^post12+ret_check12^0 == 0 /\ -j^post12+j^0 == 0 /\ j6^0-j6^post12 == 0), cost: 1
  13: l13 -> l12 : j^0'=j^post13, i^0'=i^post13, ret_check8^0'=ret_check8^post13, j6^0'=j6^post13, __const_100^0'=__const_100^post13, ret_check12^0'=ret_check12^post13, j10^0'=j10^post13, tmp^0'=tmp^post13, (-ret_check12^post13+ret_check12^0 == 0 /\ __const_100^0-__const_100^post13 == 0 /\ j^0-j^post13 == 0 /\ -j10^post13+j10^0 == 0 /\ -j6^post13+j6^0 == 0 /\ ret_check8^0-ret_check8^post13 == 0 /\ -i^post13+i^0 == 0 /\ -tmp^post13+tmp^0 == 0), cost: 1
  15: l13 -> l12 : j^0'=j^post15, i^0'=i^post15, ret_check8^0'=ret_check8^post15, j6^0'=j6^post15, __const_100^0'=__const_100^post15, ret_check12^0'=ret_check12^post15, j10^0'=j10^post15, tmp^0'=tmp^post15, (-i^post15+i^0 == 0 /\ -j10^post15+j10^0 == 0 /\ -tmp^post15+tmp^0 == 0 /\ ret_check8^0-ret_check8^post15 == 0 /\ j^0-j^post15 == 0 /\ j6^0-j6^post15 == 0 /\ __const_100^0-__const_100^post15 == 0 /\ ret_check12^0-ret_check12^post15 == 0), cost: 1
  16: l14 -> l10 : j^0'=j^post16, i^0'=i^post16, ret_check8^0'=ret_check8^post16, j6^0'=j6^post16, __const_100^0'=__const_100^post16, ret_check12^0'=ret_check12^post16, j10^0'=j10^post16, tmp^0'=tmp^post16, (i^0-i^post16 == 0 /\ -ret_check12^post16+ret_check12^0 == 0 /\ -__const_100^post16+__const_100^0 == 0 /\ -j10^post16+j10^0 == 0 /\ j^0-j^post16 == 0 /\ j6^0-j6^post16 == 0 /\ -tmp^post16+tmp^0 == 0 /\ -ret_check8^post16+ret_check8^0 == 0), cost: 1
  17: l15 -> l14 : j^0'=j^post17, i^0'=i^post17, ret_check8^0'=ret_check8^post17, j6^0'=j6^post17, __const_100^0'=__const_100^post17, ret_check12^0'=ret_check12^post17, j10^0'=j10^post17, tmp^0'=tmp^post17, (j^0-j^post17 == 0 /\ ret_check8^0-ret_check8^post17 == 0 /\ -tmp^post17+tmp^0 == 0 /\ -ret_check12^post17+ret_check12^0 == 0 /\ -1+j6^post17-j6^0 == 0 /\ i^0-i^post17 == 0 /\ __const_100^0-__const_100^post17 == 0 /\ -j10^post17+j10^0 == 0), cost: 1
  19: l16 -> l15 : j^0'=j^post19, i^0'=i^post19, ret_check8^0'=ret_check8^post19, j6^0'=j6^post19, __const_100^0'=__const_100^post19, ret_check12^0'=ret_check12^post19, j10^0'=j10^post19, tmp^0'=tmp^post19, (ret_check8^0-ret_check8^post19 == 0 /\ j^0-j^post19 == 0 /\ -j6^post19+j6^0 == 0 /\ -tmp^post19+tmp^0 == 0 /\ ret_check12^0-ret_check12^post19 == 0 /\ -i^post19+i^0 == 0 /\ -j10^post19+j10^0 == 0 /\ -__const_100^post19+__const_100^0 == 0), cost: 1
  20: l16 -> l14 : j^0'=j^post20, i^0'=i^post20, ret_check8^0'=ret_check8^post20, j6^0'=j6^post20, __const_100^0'=__const_100^post20, ret_check12^0'=ret_check12^post20, j10^0'=j10^post20, tmp^0'=tmp^post20, (j^0-j^post20 == 0 /\ j6^0-j6^post20 == 0 /\ j10^0-j10^post20 == 0 /\ -ret_check8^post20+ret_check8^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ -ret_check12^post20+ret_check12^0 == 0 /\ -__const_100^post20+__const_100^0 == 0 /\ i^0-i^post20 == 0), cost: 1
  21: l16 -> l15 : j^0'=j^post21, i^0'=i^post21, ret_check8^0'=ret_check8^post21, j6^0'=j6^post21, __const_100^0'=__const_100^post21, ret_check12^0'=ret_check12^post21, j10^0'=j10^post21, tmp^0'=tmp^post21, (j^0-j^post21 == 0 /\ ret_check8^0-ret_check8^post21 == 0 /\ -j10^post21+j10^0 == 0 /\ __const_100^0-__const_100^post21 == 0 /\ i^0-i^post21 == 0 /\ -j6^post21+j6^0 == 0 /\ ret_check12^0-ret_check12^post21 == 0 /\ -tmp^post21+tmp^0 == 0), cost: 1
  26: l17 -> l2 : j^0'=j^post26, i^0'=i^post26, ret_check8^0'=ret_check8^post26, j6^0'=j6^post26, __const_100^0'=__const_100^post26, ret_check12^0'=ret_check12^post26, j10^0'=j10^post26, tmp^0'=tmp^post26, (-ret_check8^post26+ret_check8^0 == 0 /\ __const_100^0-__const_100^post26 == 0 /\ i^post26 == 0 /\ -tmp^post26+tmp^0 == 0 /\ j6^0-j6^post26 == 0 /\ j10^0-j10^post26 == 0 /\ -ret_check12^post26+ret_check12^0 == 0 /\ j^0-j^post26 == 0), cost: 1
  27: l18 -> l17 : j^0'=j^post27, i^0'=i^post27, ret_check8^0'=ret_check8^post27, j6^0'=j6^post27, __const_100^0'=__const_100^post27, ret_check12^0'=ret_check12^post27, j10^0'=j10^post27, tmp^0'=tmp^post27, (ret_check8^0-ret_check8^post27 == 0 /\ -tmp^post27+tmp^0 == 0 /\ -j10^post27+j10^0 == 0 /\ -__const_100^post27+__const_100^0 == 0 /\ ret_check12^0-ret_check12^post27 == 0 /\ i^0-i^post27 == 0 /\ -j6^post27+j6^0 == 0 /\ j^0-j^post27 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : j^0'=j^post0, i^0'=i^post0, ret_check8^0'=ret_check8^post0, j6^0'=j6^post0, __const_100^0'=__const_100^post0, ret_check12^0'=ret_check12^post0, j10^0'=j10^post0, tmp^0'=tmp^post0, (-tmp^post0+tmp^0 == 0 /\ -j10^post0+j10^0 == 0 /\ -j6^post0+j6^0 == 0 /\ -i^0+__const_100^0 <= 0 /\ ret_check8^0-ret_check8^post0 == 0 /\ -i^post0+i^0 == 0 /\ ret_check12^0-ret_check12^post0 == 0 /\ __const_100^0-__const_100^post0 == 0 /\ 2-i^0+j^post0 == 0), cost: 1
New rule:
l0 -> l1 : j^0'=-2+i^0, -i^0+__const_100^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : j^0'=j^post1, i^0'=i^post1, ret_check8^0'=ret_check8^post1, j6^0'=j6^post1, __const_100^0'=__const_100^post1, ret_check12^0'=ret_check12^post1, j10^0'=j10^post1, tmp^0'=tmp^post1, (1+i^0-__const_100^0 <= 0 /\ j^0-j^post1 == 0 /\ j6^0-j6^post1 == 0 /\ -j10^post1+j10^0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ -1-i^0+i^post1 == 0 /\ -ret_check12^post1+ret_check12^0 == 0 /\ -__const_100^post1+__const_100^0 == 0 /\ -ret_check8^post1+ret_check8^0 == 0), cost: 1
New rule:
l0 -> l2 : i^0'=1+i^0, 1+i^0-__const_100^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : j^0'=j^post3, i^0'=i^post3, ret_check8^0'=ret_check8^post3, j6^0'=j6^post3, __const_100^0'=__const_100^post3, ret_check12^0'=ret_check12^post3, j10^0'=j10^post3, tmp^0'=tmp^post3, (i^0-i^post3 == 0 /\ -ret_check8^post3+ret_check8^0 == 0 /\ -ret_check12^post3+ret_check12^0 == 0 /\ -j10^post3+j10^0 == 0 /\ j^0-j^post3 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ -tmp^post3+tmp^0 == 0 /\ j6^0-j6^post3 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l6 : j^0'=j^post4, i^0'=i^post4, ret_check8^0'=ret_check8^post4, j6^0'=j6^post4, __const_100^0'=__const_100^post4, ret_check12^0'=ret_check12^post4, j10^0'=j10^post4, tmp^0'=tmp^post4, (j^0-j^post4 == 0 /\ -j6^post4+j6^0 == 0 /\ ret_check8^0-ret_check8^post4 == 0 /\ __const_100^0-__const_100^post4 == 0 /\ -j10^post4+j10^0 == 0 /\ i^0-i^post4 == 0 /\ ret_check12^0-ret_check12^post4 == 0 /\ -tmp^post4+tmp^0 == 0), cost: 1
New rule:
l5 -> l6 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l5 : j^0'=j^post5, i^0'=i^post5, ret_check8^0'=ret_check8^post5, j6^0'=j6^post5, __const_100^0'=__const_100^post5, ret_check12^0'=ret_check12^post5, j10^0'=j10^post5, tmp^0'=tmp^post5, (-tmp^post5+tmp^0 == 0 /\ j^0-j^post5 == 0 /\ -__const_100^post5+__const_100^0 == 0 /\ -ret_check12^post5+ret_check12^0 == 0 /\ j6^0-j6^post5 == 0 /\ -ret_check8^post5+ret_check8^0 == 0 /\ -1+j10^post5-j10^0 == 0 /\ i^0-i^post5 == 0), cost: 1
New rule:
l7 -> l5 : j10^0'=1+j10^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l8 -> l7 : j^0'=j^post6, i^0'=i^post6, ret_check8^0'=ret_check8^post6, j6^0'=j6^post6, __const_100^0'=__const_100^post6, ret_check12^0'=ret_check12^post6, j10^0'=j10^post6, tmp^0'=tmp^post6, (-j6^post6+j6^0 == 0 /\ ret_check8^0-ret_check8^post6 == 0 /\ -j10^post6+j10^0 == 0 /\ j^0-j^post6 == 0 /\ -i^post6+i^0 == 0 /\ ret_check12^0-ret_check12^post6 == 0 /\ -tmp^post6+tmp^0 == 0 /\ __const_100^0-__const_100^post6 == 0), cost: 1
New rule:
l8 -> l7 : TRUE, cost: 1

Applied preprocessing
Original rule:
l8 -> l5 : j^0'=j^post7, i^0'=i^post7, ret_check8^0'=ret_check8^post7, j6^0'=j6^post7, __const_100^0'=__const_100^post7, ret_check12^0'=ret_check12^post7, j10^0'=j10^post7, tmp^0'=tmp^post7, (j^0-j^post7 == 0 /\ __const_100^0-__const_100^post7 == 0 /\ -tmp^post7+tmp^0 == 0 /\ j10^0-j10^post7 == 0 /\ -ret_check8^post7+ret_check8^0 == 0 /\ j6^0-j6^post7 == 0 /\ -ret_check12^post7+ret_check12^0 == 0 /\ i^0-i^post7 == 0), cost: 1
New rule:
l8 -> l5 : TRUE, cost: 1

Applied preprocessing
Original rule:
l8 -> l7 : j^0'=j^post8, i^0'=i^post8, ret_check8^0'=ret_check8^post8, j6^0'=j6^post8, __const_100^0'=__const_100^post8, ret_check12^0'=ret_check12^post8, j10^0'=j10^post8, tmp^0'=tmp^post8, (-__const_100^post8+__const_100^0 == 0 /\ ret_check8^0-ret_check8^post8 == 0 /\ -tmp^post8+tmp^0 == 0 /\ -j6^post8+j6^0 == 0 /\ ret_check12^0-ret_check12^post8 == 0 /\ i^0-i^post8 == 0 /\ j^0-j^post8 == 0 /\ -j10^post8+j10^0 == 0), cost: 1
New rule:
l8 -> l7 : TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l8 : j^0'=j^post10, i^0'=i^post10, ret_check8^0'=ret_check8^post10, j6^0'=j6^post10, __const_100^0'=__const_100^post10, ret_check12^0'=ret_check12^post10, j10^0'=j10^post10, tmp^0'=tmp^post10, (ret_check8^0-ret_check8^post10 == 0 /\ j^0-j^post10 == 0 /\ -j10^post10+j10^0 == 0 /\ -tmp^post10+tmp^0 == 0 /\ ret_check12^0-ret_check12^post10 == 0 /\ -j6^post10+j6^0 == 0 /\ -__const_100^post10+__const_100^0 == 0 /\ i^0-i^post10 == 0), cost: 1
New rule:
l9 -> l8 : TRUE, cost: 1

Applied preprocessing
Original rule:
l10 -> l11 : j^0'=j^post11, i^0'=i^post11, ret_check8^0'=ret_check8^post11, j6^0'=j6^post11, __const_100^0'=__const_100^post11, ret_check12^0'=ret_check12^post11, j10^0'=j10^post11, tmp^0'=tmp^post11, (j^0-j^post11 == 0 /\ __const_100^0-__const_100^post11 == 0 /\ -ret_check8^post11+ret_check8^0 == 0 /\ j6^0-j6^post11 == 0 /\ i^0-i^post11 == 0 /\ -j10^post11+j10^0 == 0 /\ -tmp^post11+tmp^0 == 0 /\ -ret_check12^post11+ret_check12^0 == 0), cost: 1
New rule:
l10 -> l11 : TRUE, cost: 1

Applied preprocessing
Original rule:
l12 -> l6 : j^0'=j^post12, i^0'=i^post12, ret_check8^0'=ret_check8^post12, j6^0'=j6^post12, __const_100^0'=__const_100^post12, ret_check12^0'=ret_check12^post12, j10^0'=j10^post12, tmp^0'=tmp^post12, (i^0-i^post12 == 0 /\ -__const_100^post12+__const_100^0 == 0 /\ -ret_check8^post12+ret_check8^0 == 0 /\ -tmp^post12+tmp^0 == 0 /\ -j^0+j10^post12 == 0 /\ -ret_check12^post12+ret_check12^0 == 0 /\ -j^post12+j^0 == 0 /\ j6^0-j6^post12 == 0), cost: 1
New rule:
l12 -> l6 : j10^0'=j^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l13 -> l12 : j^0'=j^post13, i^0'=i^post13, ret_check8^0'=ret_check8^post13, j6^0'=j6^post13, __const_100^0'=__const_100^post13, ret_check12^0'=ret_check12^post13, j10^0'=j10^post13, tmp^0'=tmp^post13, (-ret_check12^post13+ret_check12^0 == 0 /\ __const_100^0-__const_100^post13 == 0 /\ j^0-j^post13 == 0 /\ -j10^post13+j10^0 == 0 /\ -j6^post13+j6^0 == 0 /\ ret_check8^0-ret_check8^post13 == 0 /\ -i^post13+i^0 == 0 /\ -tmp^post13+tmp^0 == 0), cost: 1
New rule:
l13 -> l12 : TRUE, cost: 1

Applied preprocessing
Original rule:
l13 -> l12 : j^0'=j^post15, i^0'=i^post15, ret_check8^0'=ret_check8^post15, j6^0'=j6^post15, __const_100^0'=__const_100^post15, ret_check12^0'=ret_check12^post15, j10^0'=j10^post15, tmp^0'=tmp^post15, (-i^post15+i^0 == 0 /\ -j10^post15+j10^0 == 0 /\ -tmp^post15+tmp^0 == 0 /\ ret_check8^0-ret_check8^post15 == 0 /\ j^0-j^post15 == 0 /\ j6^0-j6^post15 == 0 /\ __const_100^0-__const_100^post15 == 0 /\ ret_check12^0-ret_check12^post15 == 0), cost: 1
New rule:
l13 -> l12 : TRUE, cost: 1

Applied preprocessing
Original rule:
l14 -> l10 : j^0'=j^post16, i^0'=i^post16, ret_check8^0'=ret_check8^post16, j6^0'=j6^post16, __const_100^0'=__const_100^post16, ret_check12^0'=ret_check12^post16, j10^0'=j10^post16, tmp^0'=tmp^post16, (i^0-i^post16 == 0 /\ -ret_check12^post16+ret_check12^0 == 0 /\ -__const_100^post16+__const_100^0 == 0 /\ -j10^post16+j10^0 == 0 /\ j^0-j^post16 == 0 /\ j6^0-j6^post16 == 0 /\ -tmp^post16+tmp^0 == 0 /\ -ret_check8^post16+ret_check8^0 == 0), cost: 1
New rule:
l14 -> l10 : TRUE, cost: 1

Applied preprocessing
Original rule:
l15 -> l14 : j^0'=j^post17, i^0'=i^post17, ret_check8^0'=ret_check8^post17, j6^0'=j6^post17, __const_100^0'=__const_100^post17, ret_check12^0'=ret_check12^post17, j10^0'=j10^post17, tmp^0'=tmp^post17, (j^0-j^post17 == 0 /\ ret_check8^0-ret_check8^post17 == 0 /\ -tmp^post17+tmp^0 == 0 /\ -ret_check12^post17+ret_check12^0 == 0 /\ -1+j6^post17-j6^0 == 0 /\ i^0-i^post17 == 0 /\ __const_100^0-__const_100^post17 == 0 /\ -j10^post17+j10^0 == 0), cost: 1
New rule:
l15 -> l14 : j6^0'=1+j6^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l9 : j^0'=j^post18, i^0'=i^post18, ret_check8^0'=ret_check8^post18, j6^0'=j6^post18, __const_100^0'=__const_100^post18, ret_check12^0'=ret_check12^post18, j10^0'=j10^post18, tmp^0'=tmp^post18, (-tmp^post18+tmp^0 == 0 /\ -ret_check8^post18+ret_check8^0 == 0 /\ i^0-i^post18 == 0 /\ -j10^post18+j10^0 == 0 /\ j^0-j^post18 == 0 /\ -__const_100^post18+__const_100^0 == 0 /\ -ret_check12^post18+ret_check12^0 == 0 /\ j6^0-j6^post18 == 0), cost: 1
New rule:
l6 -> l9 : TRUE, cost: 1

Applied preprocessing
Original rule:
l16 -> l15 : j^0'=j^post19, i^0'=i^post19, ret_check8^0'=ret_check8^post19, j6^0'=j6^post19, __const_100^0'=__const_100^post19, ret_check12^0'=ret_check12^post19, j10^0'=j10^post19, tmp^0'=tmp^post19, (ret_check8^0-ret_check8^post19 == 0 /\ j^0-j^post19 == 0 /\ -j6^post19+j6^0 == 0 /\ -tmp^post19+tmp^0 == 0 /\ ret_check12^0-ret_check12^post19 == 0 /\ -i^post19+i^0 == 0 /\ -j10^post19+j10^0 == 0 /\ -__const_100^post19+__const_100^0 == 0), cost: 1
New rule:
l16 -> l15 : TRUE, cost: 1

Applied preprocessing
Original rule:
l16 -> l14 : j^0'=j^post20, i^0'=i^post20, ret_check8^0'=ret_check8^post20, j6^0'=j6^post20, __const_100^0'=__const_100^post20, ret_check12^0'=ret_check12^post20, j10^0'=j10^post20, tmp^0'=tmp^post20, (j^0-j^post20 == 0 /\ j6^0-j6^post20 == 0 /\ j10^0-j10^post20 == 0 /\ -ret_check8^post20+ret_check8^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ -ret_check12^post20+ret_check12^0 == 0 /\ -__const_100^post20+__const_100^0 == 0 /\ i^0-i^post20 == 0), cost: 1
New rule:
l16 -> l14 : TRUE, cost: 1

Applied preprocessing
Original rule:
l16 -> l15 : j^0'=j^post21, i^0'=i^post21, ret_check8^0'=ret_check8^post21, j6^0'=j6^post21, __const_100^0'=__const_100^post21, ret_check12^0'=ret_check12^post21, j10^0'=j10^post21, tmp^0'=tmp^post21, (j^0-j^post21 == 0 /\ ret_check8^0-ret_check8^post21 == 0 /\ -j10^post21+j10^0 == 0 /\ __const_100^0-__const_100^post21 == 0 /\ i^0-i^post21 == 0 /\ -j6^post21+j6^0 == 0 /\ ret_check12^0-ret_check12^post21 == 0 /\ -tmp^post21+tmp^0 == 0), cost: 1
New rule:
l16 -> l15 : TRUE, cost: 1

Applied preprocessing
Original rule:
l11 -> l13 : j^0'=j^post22, i^0'=i^post22, ret_check8^0'=ret_check8^post22, j6^0'=j6^post22, __const_100^0'=__const_100^post22, ret_check12^0'=ret_check12^post22, j10^0'=j10^post22, tmp^0'=tmp^post22, (0 == 0 /\ -ret_check12^post22+ret_check12^0 == 0 /\ -j10^post22+j10^0 == 0 /\ -__const_100^post22+__const_100^0 == 0 /\ j6^0-j6^post22 == 0 /\ ret_check8^post22-j6^0 == 0 /\ i^0-i^post22 == 0 /\ -ret_check8^post22+j^post22 == 0), cost: 1
New rule:
l11 -> l13 : j^0'=j6^0, ret_check8^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l11 -> l16 : j^0'=j^post23, i^0'=i^post23, ret_check8^0'=ret_check8^post23, j6^0'=j6^post23, __const_100^0'=__const_100^post23, ret_check12^0'=ret_check12^post23, j10^0'=j10^post23, tmp^0'=tmp^post23, (-tmp^post23+tmp^0 == 0 /\ -j10^post23+j10^0 == 0 /\ j^0-j^post23 == 0 /\ ret_check8^0-ret_check8^post23 == 0 /\ ret_check12^0-ret_check12^post23 == 0 /\ -__const_100^post23+__const_100^0 == 0 /\ -j6^post23+j6^0 == 0 /\ i^0-i^post23 == 0), cost: 1
New rule:
l11 -> l16 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l10 : j^0'=j^post24, i^0'=i^post24, ret_check8^0'=ret_check8^post24, j6^0'=j6^post24, __const_100^0'=__const_100^post24, ret_check12^0'=ret_check12^post24, j10^0'=j10^post24, tmp^0'=tmp^post24, (j10^0-j10^post24 == 0 /\ -tmp^post24+tmp^0 == 0 /\ -ret_check12^post24+ret_check12^0 == 0 /\ 1+i^0 <= 0 /\ __const_100^0-__const_100^post24 == 0 /\ i^0-i^post24 == 0 /\ -j^0+j6^post24 == 0 /\ ret_check8^0-ret_check8^post24 == 0 /\ j^0-j^post24 == 0), cost: 1
New rule:
l1 -> l10 : j6^0'=j^0, 1+i^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l17 -> l2 : j^0'=j^post26, i^0'=i^post26, ret_check8^0'=ret_check8^post26, j6^0'=j6^post26, __const_100^0'=__const_100^post26, ret_check12^0'=ret_check12^post26, j10^0'=j10^post26, tmp^0'=tmp^post26, (-ret_check8^post26+ret_check8^0 == 0 /\ __const_100^0-__const_100^post26 == 0 /\ i^post26 == 0 /\ -tmp^post26+tmp^0 == 0 /\ j6^0-j6^post26 == 0 /\ j10^0-j10^post26 == 0 /\ -ret_check12^post26+ret_check12^0 == 0 /\ j^0-j^post26 == 0), cost: 1
New rule:
l17 -> l2 : i^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l18 -> l17 : j^0'=j^post27, i^0'=i^post27, ret_check8^0'=ret_check8^post27, j6^0'=j6^post27, __const_100^0'=__const_100^post27, ret_check12^0'=ret_check12^post27, j10^0'=j10^post27, tmp^0'=tmp^post27, (ret_check8^0-ret_check8^post27 == 0 /\ -tmp^post27+tmp^0 == 0 /\ -j10^post27+j10^0 == 0 /\ -__const_100^post27+__const_100^0 == 0 /\ ret_check12^0-ret_check12^post27 == 0 /\ i^0-i^post27 == 0 /\ -j6^post27+j6^0 == 0 /\ j^0-j^post27 == 0), cost: 1
New rule:
l18 -> l17 : TRUE, cost: 1

Simplified rules
Start location: l18
  28: l0 -> l1 : j^0'=-2+i^0, -i^0+__const_100^0 <= 0, cost: 1
  29: l0 -> l2 : i^0'=1+i^0, 1+i^0-__const_100^0 <= 0, cost: 1
  46: l1 -> l10 : j6^0'=j^0, 1+i^0 <= 0, cost: 1
  30: l2 -> l0 : TRUE, cost: 1
  31: l5 -> l6 : TRUE, cost: 1
  41: l6 -> l9 : TRUE, cost: 1
  32: l7 -> l5 : j10^0'=1+j10^0, TRUE, cost: 1
  33: l8 -> l7 : TRUE, cost: 1
  34: l8 -> l5 : TRUE, cost: 1
  35: l9 -> l8 : TRUE, cost: 1
  36: l10 -> l11 : TRUE, cost: 1
  44: l11 -> l13 : j^0'=j6^0, ret_check8^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 1
  45: l11 -> l16 : TRUE, cost: 1
  37: l12 -> l6 : j10^0'=j^0, TRUE, cost: 1
  38: l13 -> l12 : TRUE, cost: 1
  39: l14 -> l10 : TRUE, cost: 1
  40: l15 -> l14 : j6^0'=1+j6^0, TRUE, cost: 1
  42: l16 -> l15 : TRUE, cost: 1
  43: l16 -> l14 : TRUE, cost: 1
  47: l17 -> l2 : i^0'=0, TRUE, cost: 1
  48: l18 -> l17 : TRUE, cost: 1


Eliminating location l17 by chaining:

Applied chaining
First rule:
l18 -> l17 : TRUE, cost: 1
Second rule:
l17 -> l2 : i^0'=0, TRUE, cost: 1
New rule:
l18 -> l2 : i^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 47 48

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : j^0'=-2+i^0, -i^0+__const_100^0 <= 0, cost: 1
Second rule:
l1 -> l10 : j6^0'=j^0, 1+i^0 <= 0, cost: 1
New rule:
l0 -> l10 : j^0'=-2+i^0, j6^0'=-2+i^0, (1+i^0 <= 0 /\ -i^0+__const_100^0 <= 0), cost: 2

Applied deletion
Removed the following rules: 28 46

Eliminating location l13 by chaining:

Applied chaining
First rule:
l11 -> l13 : j^0'=j6^0, ret_check8^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 1
Second rule:
l13 -> l12 : TRUE, cost: 1
New rule:
l11 -> l12 : j^0'=j6^0, ret_check8^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 38 44

Eliminating location l12 by chaining:

Applied chaining
First rule:
l11 -> l12 : j^0'=j6^0, ret_check8^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 2
Second rule:
l12 -> l6 : j10^0'=j^0, TRUE, cost: 1
New rule:
l11 -> l6 : j^0'=j6^0, ret_check8^0'=j6^0, j10^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 3

Applied deletion
Removed the following rules: 37 51

Eliminating location l9 by chaining:

Applied chaining
First rule:
l6 -> l9 : TRUE, cost: 1
Second rule:
l9 -> l8 : TRUE, cost: 1
New rule:
l6 -> l8 : TRUE, cost: 2

Applied deletion
Removed the following rules: 35 41

Eliminating location l7 by chaining:

Applied chaining
First rule:
l8 -> l7 : TRUE, cost: 1
Second rule:
l7 -> l5 : j10^0'=1+j10^0, TRUE, cost: 1
New rule:
l8 -> l5 : j10^0'=1+j10^0, TRUE, cost: 2

Applied deletion
Removed the following rules: 32 33

Eliminating location l15 by chaining:

Applied chaining
First rule:
l16 -> l15 : TRUE, cost: 1
Second rule:
l15 -> l14 : j6^0'=1+j6^0, TRUE, cost: 1
New rule:
l16 -> l14 : j6^0'=1+j6^0, TRUE, cost: 2

Applied deletion
Removed the following rules: 40 42

Eliminated locations on linear paths
Start location: l18
  29: l0 -> l2 : i^0'=1+i^0, 1+i^0-__const_100^0 <= 0, cost: 1
  50: l0 -> l10 : j^0'=-2+i^0, j6^0'=-2+i^0, (1+i^0 <= 0 /\ -i^0+__const_100^0 <= 0), cost: 2
  30: l2 -> l0 : TRUE, cost: 1
  31: l5 -> l6 : TRUE, cost: 1
  53: l6 -> l8 : TRUE, cost: 2
  34: l8 -> l5 : TRUE, cost: 1
  54: l8 -> l5 : j10^0'=1+j10^0, TRUE, cost: 2
  36: l10 -> l11 : TRUE, cost: 1
  45: l11 -> l16 : TRUE, cost: 1
  52: l11 -> l6 : j^0'=j6^0, ret_check8^0'=j6^0, j10^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 3
  39: l14 -> l10 : TRUE, cost: 1
  43: l16 -> l14 : TRUE, cost: 1
  55: l16 -> l14 : j6^0'=1+j6^0, TRUE, cost: 2
  49: l18 -> l2 : i^0'=0, TRUE, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : i^0'=1+i^0, 1+i^0-__const_100^0 <= 0, cost: 1
New rule:
l2 -> l2 : i^0'=1+i^0, 1+i^0-__const_100^0 <= 0, cost: 2

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l10 : j^0'=-2+i^0, j6^0'=-2+i^0, (1+i^0 <= 0 /\ -i^0+__const_100^0 <= 0), cost: 2
New rule:
l2 -> l10 : j^0'=-2+i^0, j6^0'=-2+i^0, (1+i^0 <= 0 /\ -i^0+__const_100^0 <= 0), cost: 3

Applied deletion
Removed the following rules: 29 30 50

Eliminating location l11 by chaining:

Applied chaining
First rule:
l10 -> l11 : TRUE, cost: 1
Second rule:
l11 -> l16 : TRUE, cost: 1
New rule:
l10 -> l16 : TRUE, cost: 2

Applied chaining
First rule:
l10 -> l11 : TRUE, cost: 1
Second rule:
l11 -> l6 : j^0'=j6^0, ret_check8^0'=j6^0, j10^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 3
New rule:
l10 -> l6 : j^0'=j6^0, ret_check8^0'=j6^0, j10^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 4

Applied deletion
Removed the following rules: 36 45 52

Eliminating location l8 by chaining:

Applied chaining
First rule:
l6 -> l8 : TRUE, cost: 2
Second rule:
l8 -> l5 : TRUE, cost: 1
New rule:
l6 -> l5 : TRUE, cost: 3

Applied chaining
First rule:
l6 -> l8 : TRUE, cost: 2
Second rule:
l8 -> l5 : j10^0'=1+j10^0, TRUE, cost: 2
New rule:
l6 -> l5 : j10^0'=1+j10^0, TRUE, cost: 4

Applied deletion
Removed the following rules: 34 53 54

Eliminating location l14 by chaining:

Applied chaining
First rule:
l16 -> l14 : TRUE, cost: 1
Second rule:
l14 -> l10 : TRUE, cost: 1
New rule:
l16 -> l10 : TRUE, cost: 2

Applied chaining
First rule:
l16 -> l14 : j6^0'=1+j6^0, TRUE, cost: 2
Second rule:
l14 -> l10 : TRUE, cost: 1
New rule:
l16 -> l10 : j6^0'=1+j6^0, TRUE, cost: 3

Applied deletion
Removed the following rules: 39 43 55

Eliminated locations on tree-shaped paths
Start location: l18
  56: l2 -> l2 : i^0'=1+i^0, 1+i^0-__const_100^0 <= 0, cost: 2
  57: l2 -> l10 : j^0'=-2+i^0, j6^0'=-2+i^0, (1+i^0 <= 0 /\ -i^0+__const_100^0 <= 0), cost: 3
  31: l5 -> l6 : TRUE, cost: 1
  60: l6 -> l5 : TRUE, cost: 3
  61: l6 -> l5 : j10^0'=1+j10^0, TRUE, cost: 4
  58: l10 -> l16 : TRUE, cost: 2
  59: l10 -> l6 : j^0'=j6^0, ret_check8^0'=j6^0, j10^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 4
  62: l16 -> l10 : TRUE, cost: 2
  63: l16 -> l10 : j6^0'=1+j6^0, TRUE, cost: 3
  49: l18 -> l2 : i^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l2 -> l2 : i^0'=1+i^0, 1+i^0-__const_100^0 <= 0, cost: 2
New rule:
l2 -> l2 : i^0'=i^0+n, (-i^0+__const_100^0-n >= 0 /\ n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_KihJcF.txt

Applied instantiation
Original rule:
l2 -> l2 : i^0'=i^0+n, (-i^0+__const_100^0-n >= 0 /\ n >= 0), cost: 2*n
New rule:
l2 -> l2 : i^0'=__const_100^0, (0 >= 0 /\ -i^0+__const_100^0 >= 0), cost: -2*i^0+2*__const_100^0

Applied simplification
Original rule:
l2 -> l2 : i^0'=__const_100^0, (0 >= 0 /\ -i^0+__const_100^0 >= 0), cost: -2*i^0+2*__const_100^0
New rule:
l2 -> l2 : i^0'=__const_100^0, -i^0+__const_100^0 >= 0, cost: -2*i^0+2*__const_100^0

Applied deletion
Removed the following rules: 56

Accelerated simple loops
Start location: l18
  57: l2 -> l10 : j^0'=-2+i^0, j6^0'=-2+i^0, (1+i^0 <= 0 /\ -i^0+__const_100^0 <= 0), cost: 3
  65: l2 -> l2 : i^0'=__const_100^0, -i^0+__const_100^0 >= 0, cost: -2*i^0+2*__const_100^0
  31: l5 -> l6 : TRUE, cost: 1
  60: l6 -> l5 : TRUE, cost: 3
  61: l6 -> l5 : j10^0'=1+j10^0, TRUE, cost: 4
  58: l10 -> l16 : TRUE, cost: 2
  59: l10 -> l6 : j^0'=j6^0, ret_check8^0'=j6^0, j10^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 4
  62: l16 -> l10 : TRUE, cost: 2
  63: l16 -> l10 : j6^0'=1+j6^0, TRUE, cost: 3
  49: l18 -> l2 : i^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l18 -> l2 : i^0'=0, TRUE, cost: 2
Second rule:
l2 -> l2 : i^0'=__const_100^0, -i^0+__const_100^0 >= 0, cost: -2*i^0+2*__const_100^0
New rule:
l18 -> l2 : i^0'=__const_100^0, __const_100^0 >= 0, cost: 2+2*__const_100^0

Applied deletion
Removed the following rules: 65

Chained accelerated rules with incoming rules
Start location: l18
  57: l2 -> l10 : j^0'=-2+i^0, j6^0'=-2+i^0, (1+i^0 <= 0 /\ -i^0+__const_100^0 <= 0), cost: 3
  31: l5 -> l6 : TRUE, cost: 1
  60: l6 -> l5 : TRUE, cost: 3
  61: l6 -> l5 : j10^0'=1+j10^0, TRUE, cost: 4
  58: l10 -> l16 : TRUE, cost: 2
  59: l10 -> l6 : j^0'=j6^0, ret_check8^0'=j6^0, j10^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 4
  62: l16 -> l10 : TRUE, cost: 2
  63: l16 -> l10 : j6^0'=1+j6^0, TRUE, cost: 3
  49: l18 -> l2 : i^0'=0, TRUE, cost: 2
  66: l18 -> l2 : i^0'=__const_100^0, __const_100^0 >= 0, cost: 2+2*__const_100^0


Eliminating location l2 by chaining:

Applied partial deletion
Original rule:
l18 -> l2 : i^0'=__const_100^0, __const_100^0 >= 0, cost: 2+2*__const_100^0
New rule:
l18 -> [20] : __const_100^0 >= 0, cost: 2+2*__const_100^0

Applied deletion
Removed the following rules: 49 57 66

Eliminated locations on tree-shaped paths
Start location: l18
  31: l5 -> l6 : TRUE, cost: 1
  60: l6 -> l5 : TRUE, cost: 3
  61: l6 -> l5 : j10^0'=1+j10^0, TRUE, cost: 4
  58: l10 -> l16 : TRUE, cost: 2
  59: l10 -> l6 : j^0'=j6^0, ret_check8^0'=j6^0, j10^0'=j6^0, tmp^0'=tmp^post22, 0 == 0, cost: 4
  62: l16 -> l10 : TRUE, cost: 2
  63: l16 -> l10 : j6^0'=1+j6^0, TRUE, cost: 3
  67: l18 -> [20] : __const_100^0 >= 0, cost: 2+2*__const_100^0


Applied pruning (of leafs and parallel rules):
Start location: l18
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

