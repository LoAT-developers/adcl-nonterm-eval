unknown

Initial ITS

Start location: l4
Program variables: x^0 y^0 z^0
   0: l0 -> l1 : x^0'=x^post1, y^0'=y^post1, z^0'=z^post1, (-y^post1+y^0 == 0 /\ -z^post1+z^0 == 0 /\ x^0-x^post1 == 0), cost: 1
   4: l1 -> l2 : x^0'=x^post5, y^0'=y^post5, z^0'=z^post5, (1-y^0+x^0 <= 0 /\ y^0-y^post5 == 0 /\ -z^post5+z^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
   1: l2 -> l1 : x^0'=x^post2, y^0'=y^post2, z^0'=z^post2, (-z^post2+z^0 == 0 /\ -1-x^0+x^post2 == 0 /\ -y^0+z^0 <= 0 /\ -y^post2+y^0 == 0), cost: 1
   2: l2 -> l3 : x^0'=x^post3, y^0'=y^post3, z^0'=z^post3, (-1+y^post3-y^0 == 0 /\ x^0-x^post3 == 0 /\ -z^post3+z^0 == 0 /\ 1+y^0-z^0 <= 0), cost: 1
   3: l3 -> l2 : x^0'=x^post4, y^0'=y^post4, z^0'=z^post4, (-y^post4+y^0 == 0 /\ -z^post4+z^0 == 0 /\ x^0-x^post4 == 0), cost: 1
   5: l4 -> l0 : x^0'=x^post6, y^0'=y^post6, z^0'=z^post6, (-x^post6+x^0 == 0 /\ -z^post6+z^0 == 0 /\ y^0-y^post6 == 0), cost: 1

Chained Linear Paths

Start location: l4
Program variables: x^0 y^0 z^0
   4: l1 -> l2 : x^0'=x^post5, y^0'=y^post5, z^0'=z^post5, (1-y^0+x^0 <= 0 /\ y^0-y^post5 == 0 /\ -z^post5+z^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
   1: l2 -> l1 : x^0'=x^post2, y^0'=y^post2, z^0'=z^post2, (-z^post2+z^0 == 0 /\ -1-x^0+x^post2 == 0 /\ -y^0+z^0 <= 0 /\ -y^post2+y^0 == 0), cost: 1
   7: l2 -> l2 : x^0'=x^post4, y^0'=y^post4, z^0'=z^post4, (-y^post4+y^post3 == 0 /\ -1+y^post3-y^0 == 0 /\ x^0-x^post3 == 0 /\ -x^post4+x^post3 == 0 /\ -z^post3+z^0 == 0 /\ 1+y^0-z^0 <= 0 /\ -z^post4+z^post3 == 0), cost: 1
   6: l4 -> l1 : x^0'=x^post1, y^0'=y^post1, z^0'=z^post1, (-x^post6+x^0 == 0 /\ -z^post6+z^0 == 0 /\ z^post6-z^post1 == 0 /\ -y^post1+y^post6 == 0 /\ y^0-y^post6 == 0 /\ x^post6-x^post1 == 0), cost: 1

	Eliminating location l0 by chaining:

	Applied chaining

	First rule:
	l4 -> l0 : x^0'=x^post6, y^0'=y^post6, z^0'=z^post6, (-x^post6+x^0 == 0 /\ -z^post6+z^0 == 0 /\ y^0-y^post6 == 0), cost: 1
	Second rule:
	l0 -> l1 : x^0'=x^post1, y^0'=y^post1, z^0'=z^post1, (-y^post1+y^0 == 0 /\ -z^post1+z^0 == 0 /\ x^0-x^post1 == 0), cost: 1
	New rule:
	l4 -> l1 : x^0'=x^post1, y^0'=y^post1, z^0'=z^post1, (-x^post6+x^0 == 0 /\ -z^post6+z^0 == 0 /\ z^post6-z^post1 == 0 /\ -y^post1+y^post6 == 0 /\ y^0-y^post6 == 0 /\ x^post6-x^post1 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 5
	
	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l2 -> l3 : x^0'=x^post3, y^0'=y^post3, z^0'=z^post3, (-1+y^post3-y^0 == 0 /\ x^0-x^post3 == 0 /\ -z^post3+z^0 == 0 /\ 1+y^0-z^0 <= 0), cost: 1
	Second rule:
	l3 -> l2 : x^0'=x^post4, y^0'=y^post4, z^0'=z^post4, (-y^post4+y^0 == 0 /\ -z^post4+z^0 == 0 /\ x^0-x^post4 == 0), cost: 1
	New rule:
	l2 -> l2 : x^0'=x^post4, y^0'=y^post4, z^0'=z^post4, (-y^post4+y^post3 == 0 /\ -1+y^post3-y^0 == 0 /\ x^0-x^post3 == 0 /\ -x^post4+x^post3 == 0 /\ -z^post3+z^0 == 0 /\ 1+y^0-z^0 <= 0 /\ -z^post4+z^post3 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3

Simplified Transitions

Start location: l4
Program variables: x^0 y^0 z^0
   9: l1 -> l2 : 1-y^0+x^0 <= 0, cost: 1
   8: l2 -> l1 : x^0'=1+x^0, -y^0+z^0 <= 0, cost: 1
  11: l2 -> l2 : y^0'=1+y^0, 1+y^0-z^0 <= 0, cost: 1
  10: l4 -> l1 : T, cost: 1

	Propagated Equalities

	Original rule:
	l2 -> l1 : x^0'=x^post2, y^0'=y^post2, z^0'=z^post2, (-z^post2+z^0 == 0 /\ -1-x^0+x^post2 == 0 /\ -y^0+z^0 <= 0 /\ -y^post2+y^0 == 0), cost: 1
	New rule:
	l2 -> l1 : x^0'=1+x^0, y^0'=y^0, z^0'=z^0, (0 == 0 /\ -y^0+z^0 <= 0), cost: 1
	
		propagated equality z^post2 = z^0
		
		propagated equality x^post2 = 1+x^0
		
		propagated equality y^post2 = y^0
		
	Simplified Guard

	Original rule:
	l2 -> l1 : x^0'=1+x^0, y^0'=y^0, z^0'=z^0, (0 == 0 /\ -y^0+z^0 <= 0), cost: 1
	New rule:
	l2 -> l1 : x^0'=1+x^0, y^0'=y^0, z^0'=z^0, -y^0+z^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l1 : x^0'=1+x^0, y^0'=y^0, z^0'=z^0, -y^0+z^0 <= 0, cost: 1
	New rule:
	l2 -> l1 : x^0'=1+x^0, -y^0+z^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l2 : x^0'=x^post5, y^0'=y^post5, z^0'=z^post5, (1-y^0+x^0 <= 0 /\ y^0-y^post5 == 0 /\ -z^post5+z^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
	New rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, z^0'=z^0, (0 == 0 /\ 1-y^0+x^0 <= 0), cost: 1
	
		propagated equality y^post5 = y^0
		
		propagated equality z^post5 = z^0
		
		propagated equality x^post5 = x^0
		
	Simplified Guard

	Original rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, z^0'=z^0, (0 == 0 /\ 1-y^0+x^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, z^0'=z^0, 1-y^0+x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, z^0'=z^0, 1-y^0+x^0 <= 0, cost: 1
	New rule:
	l1 -> l2 : 1-y^0+x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l1 : x^0'=x^post1, y^0'=y^post1, z^0'=z^post1, (-x^post6+x^0 == 0 /\ -z^post6+z^0 == 0 /\ z^post6-z^post1 == 0 /\ -y^post1+y^post6 == 0 /\ y^0-y^post6 == 0 /\ x^post6-x^post1 == 0), cost: 1
	New rule:
	l4 -> l1 : x^0'=x^post6, y^0'=y^post6, z^0'=z^post6, (0 == 0 /\ -x^post6+x^0 == 0 /\ -z^post6+z^0 == 0 /\ y^0-y^post6 == 0), cost: 1
	
		propagated equality z^post1 = z^post6
		
		propagated equality y^post1 = y^post6
		
		propagated equality x^post1 = x^post6
		
	Propagated Equalities

	Original rule:
	l4 -> l1 : x^0'=x^post6, y^0'=y^post6, z^0'=z^post6, (0 == 0 /\ -x^post6+x^0 == 0 /\ -z^post6+z^0 == 0 /\ y^0-y^post6 == 0), cost: 1
	New rule:
	l4 -> l1 : x^0'=x^0, y^0'=y^0, z^0'=z^0, 0 == 0, cost: 1
	
		propagated equality x^post6 = x^0
		
		propagated equality z^post6 = z^0
		
		propagated equality y^post6 = y^0
		
	Simplified Guard

	Original rule:
	l4 -> l1 : x^0'=x^0, y^0'=y^0, z^0'=z^0, 0 == 0, cost: 1
	New rule:
	l4 -> l1 : x^0'=x^0, y^0'=y^0, z^0'=z^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l1 : x^0'=x^0, y^0'=y^0, z^0'=z^0, T, cost: 1
	New rule:
	l4 -> l1 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l2 : x^0'=x^post4, y^0'=y^post4, z^0'=z^post4, (-y^post4+y^post3 == 0 /\ -1+y^post3-y^0 == 0 /\ x^0-x^post3 == 0 /\ -x^post4+x^post3 == 0 /\ -z^post3+z^0 == 0 /\ 1+y^0-z^0 <= 0 /\ -z^post4+z^post3 == 0), cost: 1
	New rule:
	l2 -> l2 : x^0'=x^post3, y^0'=y^post3, z^0'=z^post3, (0 == 0 /\ -1+y^post3-y^0 == 0 /\ x^0-x^post3 == 0 /\ -z^post3+z^0 == 0 /\ 1+y^0-z^0 <= 0), cost: 1
	
		propagated equality y^post4 = y^post3
		
		propagated equality x^post4 = x^post3
		
		propagated equality z^post4 = z^post3
		
	Propagated Equalities

	Original rule:
	l2 -> l2 : x^0'=x^post3, y^0'=y^post3, z^0'=z^post3, (0 == 0 /\ -1+y^post3-y^0 == 0 /\ x^0-x^post3 == 0 /\ -z^post3+z^0 == 0 /\ 1+y^0-z^0 <= 0), cost: 1
	New rule:
	l2 -> l2 : x^0'=x^0, y^0'=1+y^0, z^0'=z^0, (0 == 0 /\ 1+y^0-z^0 <= 0), cost: 1
	
		propagated equality y^post3 = 1+y^0
		
		propagated equality x^post3 = x^0
		
		propagated equality z^post3 = z^0
		
	Simplified Guard

	Original rule:
	l2 -> l2 : x^0'=x^0, y^0'=1+y^0, z^0'=z^0, (0 == 0 /\ 1+y^0-z^0 <= 0), cost: 1
	New rule:
	l2 -> l2 : x^0'=x^0, y^0'=1+y^0, z^0'=z^0, 1+y^0-z^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l2 : x^0'=x^0, y^0'=1+y^0, z^0'=z^0, 1+y^0-z^0 <= 0, cost: 1
	New rule:
	l2 -> l2 : y^0'=1+y^0, 1+y^0-z^0 <= 0, cost: 1

Step with 10

	Trace

	10[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 8

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Accelerate

Start location: l4
Program variables: x^0 y^0 z^0
   9: l1 -> l2 : 1-y^0+x^0 <= 0, cost: 1
  12: l1 -> l1 : x^0'=n+x^0, (-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0), cost: 1
   8: l2 -> l1 : x^0'=1+x^0, -y^0+z^0 <= 0, cost: 1
  11: l2 -> l2 : y^0'=1+y^0, 1+y^0-z^0 <= 0, cost: 1
  10: l4 -> l1 : T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : x^0'=1+x^0, (1-y^0+x^0 <= 0 /\ -y^0+z^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x^0'=n+x^0, (-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0), cost: 1

		y^0-z^0 >= 0 [0]: monotonic increase yields y^0-z^0 >= 0
		
		-1+y^0-x^0 >= 0 [0]: montonic decrease yields y^0-n-x^0 >= 0
		
		-1+y^0-x^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+y^0-x^0 >= 0)
		
		Replacement map: {y^0-z^0 >= 0 -> y^0-z^0 >= 0, -1+y^0-x^0 >= 0 -> y^0-n-x^0 >= 0}

	Trace

	10[T], 12[(-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0)]
	
	Blocked

	[{}, {}, {12[T]}]

Step with 9

	Trace

	10[T], 12[(-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0)], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}]

Step with 8

	Trace

	10[T], 12[(-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0)], 9[(1-y^0+x^0 <= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}, {}]

Covered

	Trace

	10[T], 12[(-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0)], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {8[T]}]

Backtrack

	Trace

	10[T], 12[(-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0)]
	
	Blocked

	[{}, {}, {9[T], 12[T]}]

Backtrack

	Trace

	10[T]
	
	Blocked

	[{}, {12[T]}]

Step with 9

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {}]

Step with 8

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {}, {}]

Covered

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}]

Step with 11

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 11[(1+y^0-z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {}]

Accelerate

Start location: l4
Program variables: x^0 y^0 z^0
   9: l1 -> l2 : 1-y^0+x^0 <= 0, cost: 1
  12: l1 -> l1 : x^0'=n+x^0, (-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0), cost: 1
   8: l2 -> l1 : x^0'=1+x^0, -y^0+z^0 <= 0, cost: 1
  11: l2 -> l2 : y^0'=1+y^0, 1+y^0-z^0 <= 0, cost: 1
  13: l2 -> l2 : y^0'=y^0+n2, (-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0), cost: 1
  10: l4 -> l1 : T, cost: 1

	Loop Acceleration

	Original rule:
	l2 -> l2 : y^0'=1+y^0, (1+y^0-z^0 <= 0), cost: 1
	New rule:
	l2 -> l2 : y^0'=y^0+n2, (-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0), cost: 1

		-1-y^0+z^0 >= 0 [0]: montonic decrease yields -y^0-n2+z^0 >= 0
		
		-1-y^0+z^0 >= 0 [1]: eventual increase yields (-1-y^0+z^0 >= 0 /\ 1 <= 0)
		
		Replacement map: {-1-y^0+z^0 >= 0 -> -y^0-n2+z^0 >= 0}

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}]

Step with 8

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 9

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 8[(-y^0+z^0 <= 0)], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}, {}, {}]

Accelerate

Start location: l4
Program variables: x^0 y^0 z^0
   9: l1 -> l2 : 1-y^0+x^0 <= 0, cost: 1
  12: l1 -> l1 : x^0'=n+x^0, (-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0), cost: 1
   8: l2 -> l1 : x^0'=1+x^0, -y^0+z^0 <= 0, cost: 1
  11: l2 -> l2 : y^0'=1+y^0, 1+y^0-z^0 <= 0, cost: 1
  13: l2 -> l2 : y^0'=y^0+n2, (-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0), cost: 1
  14: l2 -> l2 : x^0'=x^0+n3, (-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0), cost: 1
  10: l4 -> l1 : T, cost: 1

	Loop Acceleration

	Original rule:
	l2 -> l2 : x^0'=1+x^0, (2-y^0+x^0 <= 0 /\ -y^0+z^0 <= 0), cost: 1
	New rule:
	l2 -> l2 : x^0'=x^0+n3, (-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0), cost: 1

		-2+y^0-x^0 >= 0 [0]: montonic decrease yields -1+y^0-x^0-n3 >= 0
		
		-2+y^0-x^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -2+y^0-x^0 >= 0)
		
		y^0-z^0 >= 0 [0]: monotonic increase yields y^0-z^0 >= 0
		
		Replacement map: {-2+y^0-x^0 >= 0 -> -1+y^0-x^0-n3 >= 0, y^0-z^0 >= 0 -> y^0-z^0 >= 0}

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}, {14[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 8

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}, {14[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 9

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)], 8[(-y^0+z^0 <= 0)], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}, {14[T]}, {}, {}]

Covered

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}, {14[T]}, {9[T]}]

Step with 12

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)], 8[(-y^0+z^0 <= 0)], 12[(-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}, {14[T]}, {9[T]}, {12[T]}]

Covered

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}, {14[T]}, {9[T], 12[T]}]

Backtrack

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T]}, {8[T], 14[T]}]

Backtrack

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T], 14[T]}]

Step with 8

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T], 14[T]}, {}]

Step with 12

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 8[(-y^0+z^0 <= 0)], 12[(-1+n >= 0 /\ y^0-n-x^0 >= 0 /\ y^0-z^0 >= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T], 14[T]}, {}, {12[T]}]

Covered

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T], 14[T]}, {12[T]}]

Step with 9

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 8[(-y^0+z^0 <= 0)], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T], 14[T]}, {12[T]}, {}]

Covered

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {11[T], 13[T], 14[T]}, {9[T], 12[T]}]

Backtrack

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 13[(-1+n2 >= 0 /\ -y^0-n2+z^0 >= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}, {8[T], 11[T], 13[T], 14[T]}]

Backtrack

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T], 13[T]}]

Step with 11

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 11[(1+y^0-z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T], 13[T]}, {}]

Covered

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T], 11[T], 13[T]}]

Step with 14

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T], 11[T], 13[T]}, {14[T]}]

Step with 8

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)], 8[(-y^0+z^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T], 11[T], 13[T]}, {14[T]}, {}]

Covered

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)], 14[(-1+y^0-x^0-n3 >= 0 /\ -1+n3 >= 0 /\ y^0-z^0 >= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T], 11[T], 13[T]}, {8[T], 14[T]}]

Backtrack

	Trace

	10[T], 9[(1-y^0+x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T], 11[T], 13[T], 14[T]}]

Backtrack

	Trace

	10[T]
	
	Blocked

	[{}, {9[T], 12[T]}]

Backtrack

	Trace

	Blocked

	[{10[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
