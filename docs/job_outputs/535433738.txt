WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f500_0_main_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1 > 0 /\ -arg2P0 == 0 /\ -arg3P0+arg2 == 0 /\ arg1P0 > 0), cost: 1
   1: f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -arg3P1+arg3 == 0 /\ 1+arg2-arg2P1 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
   2: f500_0_main_GE -> f323_0_rec0_GT : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-arg1P2 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2P2+arg3 == 0 /\ -arg2+arg3 > 0), cost: 1
   3: f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0 /\ arg2-arg2P3 == 0 /\ 1-arg1P3+arg1 == 0), cost: 1
   4: f323_0_rec0_GT -> f376_0_rec1_GT : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1-arg1P4 == 0 /\ arg2 > 0 /\ arg2-arg1 >= 0 /\ -arg2P4 == 0 /\ -arg3P4+2*arg1 == 0), cost: 1
   5: f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (1+arg1 > 0 /\ arg3-arg3P5 == 0 /\ 1+arg2 > 0 /\ -arg1P5+arg1 == 0 /\ 1+arg2-arg2P5 == 0 /\ -arg2+arg3 >= 0), cost: 1
   6: f376_0_rec1_GT -> f319_0_rec2_LT : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg2-arg3P6+arg1 == 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0 /\ -arg1P6+arg1 == 0 /\ arg2-arg2P6 == 0), cost: 1
   7: f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3*arg2 >= 0 /\ 3*arg2+2*arg1 >= 0 /\ 4*arg3 >= 0 /\ 2*arg1 >= 0 /\ arg1-arg1P7 == 0 /\ 1+arg3 > 0 /\ -1+arg3-arg3P7 == 0 /\ arg2-arg2P7 == 0), cost: 1
   8: f319_0_rec2_LT -> f541_0_rec3_GT : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-arg3P8+arg3 == 0 /\ 3*arg2 >= 0 /\ 3*arg2+2*arg1 >= 0 /\ 4*arg3 >= 0 /\ -arg5P8+3*arg2+2*arg1+4*arg3 == 0 /\ 2*arg1 >= 0 /\ 1+arg3 > 0 /\ -arg4P8 == 0 /\ -arg1P8+arg1 == 0 /\ arg2-arg2P8 == 0), cost: 1
   9: f541_0_rec3_GT -> f541_0_rec3_GT : arg5'=arg5P9, arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1-arg4P9+arg4 == 0 /\ 100*arg2 >= 0 /\ 100*arg2+1000*arg1 >= 0 /\ arg3-arg3P9 == 0 /\ 10*arg3 >= 0 /\ arg5-arg4 >= 0 /\ arg1-arg1P9 == 0 /\ 1000*arg1 >= 0 /\ 1+arg3 > 0 /\ arg2-arg2P9 == 0 /\ 100*arg2+1000*arg1+10*arg3 >= 0 /\ 1+arg4 > 0 /\ arg5-arg5P9 == 0), cost: 1
  10: f541_0_rec3_GT -> f493_0_rec4_LT : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-arg1P10+100*arg2+arg4+1000*arg1+10*arg3 == 0 /\ 100*arg2 >= 0 /\ 100*arg2+1000*arg1 >= 0 /\ 10*arg3 >= 0 /\ arg5-arg4 >= 0 /\ 1000*arg1 >= 0 /\ 1+arg3 > 0 /\ 100*arg2+1000*arg1+10*arg3 >= 0 /\ 1+arg4 > 0), cost: 1
  11: f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (1+arg1 > 0 /\ -1+arg1-arg1P11 == 0), cost: 1
  12: __init -> f1_0_main_ConstantStackPush : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f500_0_main_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1 > 0 /\ -arg2P0 == 0 /\ -arg3P0+arg2 == 0 /\ arg1P0 > 0), cost: 1
New rule:
f1_0_main_ConstantStackPush -> f500_0_main_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1

Applied preprocessing
Original rule:
f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -arg3P1+arg3 == 0 /\ 1+arg2-arg2P1 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
New rule:
f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=1+arg2, arg4'=arg4P1, arg1'=arg1P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f500_0_main_GE -> f323_0_rec0_GT : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-arg1P2 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2P2+arg3 == 0 /\ -arg2+arg3 > 0), cost: 1
New rule:
f500_0_main_GE -> f323_0_rec0_GT : arg5'=arg5P2, arg2'=arg3, arg4'=arg4P2, arg1'=0, arg3'=arg3P2, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0 /\ arg2-arg2P3 == 0 /\ 1-arg1P3+arg1 == 0), cost: 1
New rule:
f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=1+arg1, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: 1

Applied preprocessing
Original rule:
f323_0_rec0_GT -> f376_0_rec1_GT : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1-arg1P4 == 0 /\ arg2 > 0 /\ arg2-arg1 >= 0 /\ -arg2P4 == 0 /\ -arg3P4+2*arg1 == 0), cost: 1
New rule:
f323_0_rec0_GT -> f376_0_rec1_GT : arg5'=arg5P4, arg2'=0, arg4'=arg4P4, arg3'=2*arg1, (arg2 > 0 /\ arg2-arg1 >= 0), cost: 1

Applied preprocessing
Original rule:
f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (1+arg1 > 0 /\ arg3-arg3P5 == 0 /\ 1+arg2 > 0 /\ -arg1P5+arg1 == 0 /\ 1+arg2-arg2P5 == 0 /\ -arg2+arg3 >= 0), cost: 1
New rule:
f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+arg2, arg4'=arg4P5, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1

Applied preprocessing
Original rule:
f376_0_rec1_GT -> f319_0_rec2_LT : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg2-arg3P6+arg1 == 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0 /\ -arg1P6+arg1 == 0 /\ arg2-arg2P6 == 0), cost: 1
New rule:
f376_0_rec1_GT -> f319_0_rec2_LT : arg5'=arg5P6, arg4'=arg4P6, arg3'=arg2+arg1, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1

Applied preprocessing
Original rule:
f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3*arg2 >= 0 /\ 3*arg2+2*arg1 >= 0 /\ 4*arg3 >= 0 /\ 2*arg1 >= 0 /\ arg1-arg1P7 == 0 /\ 1+arg3 > 0 /\ -1+arg3-arg3P7 == 0 /\ arg2-arg2P7 == 0), cost: 1
New rule:
f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1+arg3, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f319_0_rec2_LT -> f541_0_rec3_GT : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-arg3P8+arg3 == 0 /\ 3*arg2 >= 0 /\ 3*arg2+2*arg1 >= 0 /\ 4*arg3 >= 0 /\ -arg5P8+3*arg2+2*arg1+4*arg3 == 0 /\ 2*arg1 >= 0 /\ 1+arg3 > 0 /\ -arg4P8 == 0 /\ -arg1P8+arg1 == 0 /\ arg2-arg2P8 == 0), cost: 1
New rule:
f319_0_rec2_LT -> f541_0_rec3_GT : arg5'=3*arg2+2*arg1+4*arg3, arg4'=0, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f541_0_rec3_GT -> f541_0_rec3_GT : arg5'=arg5P9, arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1-arg4P9+arg4 == 0 /\ 100*arg2 >= 0 /\ 100*arg2+1000*arg1 >= 0 /\ arg3-arg3P9 == 0 /\ 10*arg3 >= 0 /\ arg5-arg4 >= 0 /\ arg1-arg1P9 == 0 /\ 1000*arg1 >= 0 /\ 1+arg3 > 0 /\ arg2-arg2P9 == 0 /\ 100*arg2+1000*arg1+10*arg3 >= 0 /\ 1+arg4 > 0 /\ arg5-arg5P9 == 0), cost: 1
New rule:
f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=1+arg4, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f541_0_rec3_GT -> f493_0_rec4_LT : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-arg1P10+100*arg2+arg4+1000*arg1+10*arg3 == 0 /\ 100*arg2 >= 0 /\ 100*arg2+1000*arg1 >= 0 /\ 10*arg3 >= 0 /\ arg5-arg4 >= 0 /\ 1000*arg1 >= 0 /\ 1+arg3 > 0 /\ 100*arg2+1000*arg1+10*arg3 >= 0 /\ 1+arg4 > 0), cost: 1
New rule:
f541_0_rec3_GT -> f493_0_rec4_LT : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=100*arg2+arg4+1000*arg1+10*arg3, arg3'=arg3P10, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (1+arg1 > 0 /\ -1+arg1-arg1P11 == 0), cost: 1
New rule:
f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1+arg1, arg3'=arg3P11, 1+arg1 > 0, cost: 1

Simplified rules
Start location: __init
  13: f1_0_main_ConstantStackPush -> f500_0_main_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
  14: f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=1+arg2, arg4'=arg4P1, arg1'=arg1P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  15: f500_0_main_GE -> f323_0_rec0_GT : arg5'=arg5P2, arg2'=arg3, arg4'=arg4P2, arg1'=0, arg3'=arg3P2, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  16: f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=1+arg1, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: 1
  17: f323_0_rec0_GT -> f376_0_rec1_GT : arg5'=arg5P4, arg2'=0, arg4'=arg4P4, arg3'=2*arg1, (arg2 > 0 /\ arg2-arg1 >= 0), cost: 1
  18: f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+arg2, arg4'=arg4P5, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1
  19: f376_0_rec1_GT -> f319_0_rec2_LT : arg5'=arg5P6, arg4'=arg4P6, arg3'=arg2+arg1, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1
  20: f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1+arg3, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 1
  21: f319_0_rec2_LT -> f541_0_rec3_GT : arg5'=3*arg2+2*arg1+4*arg3, arg4'=0, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 1
  22: f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=1+arg4, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1
  23: f541_0_rec3_GT -> f493_0_rec4_LT : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=100*arg2+arg4+1000*arg1+10*arg3, arg3'=arg3P10, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1
  24: f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1+arg1, arg3'=arg3P11, 1+arg1 > 0, cost: 1
  12: __init -> f1_0_main_ConstantStackPush : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1


Applied acceleration
Original rule:
f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=1+arg2, arg4'=arg4P1, arg1'=arg1P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
New rule:
f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=arg2+n, arg4'=arg4P1, arg1'=arg1P1, (-arg1P1+arg1 >= 0 /\ -1+n >= 0 /\ arg1P1 > 0 /\ arg3 > 0 /\ 1-arg2+arg3-n > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_AgoLLh.txt

Applied instantiation
Original rule:
f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=arg2+n, arg4'=arg4P1, arg1'=arg1P1, (-arg1P1+arg1 >= 0 /\ -1+n >= 0 /\ arg1P1 > 0 /\ arg3 > 0 /\ 1-arg2+arg3-n > 0), cost: n
New rule:
f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg4'=arg4P1, arg1'=arg1P1, (-arg1P1+arg1 >= 0 /\ 1 > 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: -arg2+arg3

Applied simplification
Original rule:
f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg4'=arg4P1, arg1'=arg1P1, (-arg1P1+arg1 >= 0 /\ 1 > 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: -arg2+arg3
New rule:
f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg4'=arg4P1, arg1'=arg1P1, (-arg1P1+arg1 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: -arg2+arg3

Applied deletion
Removed the following rules: 14

Applied acceleration
Original rule:
f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=1+arg1, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: 1
New rule:
f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=arg1+n0, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ 1+arg2-arg1-n0 >= 0 /\ -1+n0 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JkajML.txt

Applied instantiation
Original rule:
f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=arg1+n0, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ 1+arg2-arg1-n0 >= 0 /\ -1+n0 >= 0), cost: n0
New rule:
f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=1+arg2, arg3'=arg3P3, (0 >= 0 /\ 1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: 1+arg2-arg1

Applied simplification
Original rule:
f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=1+arg2, arg3'=arg3P3, (0 >= 0 /\ 1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: 1+arg2-arg1
New rule:
f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=1+arg2, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: 1+arg2-arg1

Applied deletion
Removed the following rules: 16

Applied acceleration
Original rule:
f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+arg2, arg4'=arg4P5, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1
New rule:
f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=arg2+n1, arg4'=arg4P5, (1+arg1 > 0 /\ -1+n1 >= 0 /\ 1+arg2 > 0 /\ 1-arg2-n1+arg3 >= 0), cost: n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_DoNmha.txt

Applied instantiation
Original rule:
f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=arg2+n1, arg4'=arg4P5, (1+arg1 > 0 /\ -1+n1 >= 0 /\ 1+arg2 > 0 /\ 1-arg2-n1+arg3 >= 0), cost: n1
New rule:
f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+arg3, arg4'=arg4P5, (0 >= 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1-arg2+arg3

Applied simplification
Original rule:
f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+arg3, arg4'=arg4P5, (0 >= 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1-arg2+arg3
New rule:
f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+arg3, arg4'=arg4P5, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1-arg2+arg3

Applied deletion
Removed the following rules: 18

Applied acceleration
Original rule:
f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1+arg3, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 1
New rule:
f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-n2+arg3, (2-n2+arg3 > 0 /\ arg2 >= 0 /\ -1+n2 >= 0 /\ arg1 >= 0), cost: n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BOggFH.txt

Applied instantiation
Original rule:
f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-n2+arg3, (2-n2+arg3 > 0 /\ arg2 >= 0 /\ -1+n2 >= 0 /\ arg1 >= 0), cost: n2
New rule:
f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1, (1 > 0 /\ arg2 >= 0 /\ arg1 >= 0 /\ arg3 >= 0), cost: 1+arg3

Applied simplification
Original rule:
f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1, (1 > 0 /\ arg2 >= 0 /\ arg1 >= 0 /\ arg3 >= 0), cost: 1+arg3
New rule:
f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1, (arg2 >= 0 /\ arg1 >= 0 /\ arg3 >= 0), cost: 1+arg3

Applied deletion
Removed the following rules: 20

Applied acceleration
Original rule:
f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=1+arg4, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1
New rule:
f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=arg4+n3, (arg2 >= 0 /\ 1+arg5-arg4-n3 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ n3 >= 0 /\ 1+arg4 > 0), cost: n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FJAeDK.txt

Applied instantiation
Original rule:
f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=arg4+n3, (arg2 >= 0 /\ 1+arg5-arg4-n3 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ n3 >= 0 /\ 1+arg4 > 0), cost: n3
New rule:
f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=1+arg5, (0 >= 0 /\ arg2 >= 0 /\ 1+arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1+arg5-arg4

Applied simplification
Original rule:
f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=1+arg5, (0 >= 0 /\ arg2 >= 0 /\ 1+arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1+arg5-arg4
New rule:
f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=1+arg5, (arg2 >= 0 /\ 1+arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1+arg5-arg4

Applied deletion
Removed the following rules: 22

Applied acceleration
Original rule:
f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1+arg1, arg3'=arg3P11, 1+arg1 > 0, cost: 1
New rule:
f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-n4+arg1, arg3'=arg3P11, (2-n4+arg1 > 0 /\ -1+n4 >= 0), cost: n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FmcegA.txt

Applied instantiation
Original rule:
f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-n4+arg1, arg3'=arg3P11, (2-n4+arg1 > 0 /\ -1+n4 >= 0), cost: n4
New rule:
f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1, arg3'=arg3P11, (1 > 0 /\ arg1 >= 0), cost: 1+arg1

Applied simplification
Original rule:
f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1, arg3'=arg3P11, (1 > 0 /\ arg1 >= 0), cost: 1+arg1
New rule:
f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1, arg3'=arg3P11, arg1 >= 0, cost: 1+arg1

Applied deletion
Removed the following rules: 24

Accelerated simple loops
Start location: __init
  13: f1_0_main_ConstantStackPush -> f500_0_main_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
  15: f500_0_main_GE -> f323_0_rec0_GT : arg5'=arg5P2, arg2'=arg3, arg4'=arg4P2, arg1'=0, arg3'=arg3P2, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  26: f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg4'=arg4P1, arg1'=arg1P1, (-arg1P1+arg1 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: -arg2+arg3
  17: f323_0_rec0_GT -> f376_0_rec1_GT : arg5'=arg5P4, arg2'=0, arg4'=arg4P4, arg3'=2*arg1, (arg2 > 0 /\ arg2-arg1 >= 0), cost: 1
  28: f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=1+arg2, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: 1+arg2-arg1
  19: f376_0_rec1_GT -> f319_0_rec2_LT : arg5'=arg5P6, arg4'=arg4P6, arg3'=arg2+arg1, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1
  30: f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+arg3, arg4'=arg4P5, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1-arg2+arg3
  21: f319_0_rec2_LT -> f541_0_rec3_GT : arg5'=3*arg2+2*arg1+4*arg3, arg4'=0, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 1
  32: f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1, (arg2 >= 0 /\ arg1 >= 0 /\ arg3 >= 0), cost: 1+arg3
  23: f541_0_rec3_GT -> f493_0_rec4_LT : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=100*arg2+arg4+1000*arg1+10*arg3, arg3'=arg3P10, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1
  34: f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=1+arg5, (arg2 >= 0 /\ 1+arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1+arg5-arg4
  36: f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1, arg3'=arg3P11, arg1 >= 0, cost: 1+arg1
  12: __init -> f1_0_main_ConstantStackPush : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f500_0_main_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
Second rule:
f500_0_main_GE -> f500_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg4'=arg4P1, arg1'=arg1P1, (-arg1P1+arg1 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: -arg2+arg3
New rule:
f1_0_main_ConstantStackPush -> f500_0_main_GE : arg5'=arg5P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg2, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 >= 0), cost: 1+arg2

Applied deletion
Removed the following rules: 26

Applied chaining
First rule:
f500_0_main_GE -> f323_0_rec0_GT : arg5'=arg5P2, arg2'=arg3, arg4'=arg4P2, arg1'=0, arg3'=arg3P2, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
Second rule:
f323_0_rec0_GT -> f323_0_rec0_GT : arg5'=arg5P3, arg4'=arg4P3, arg1'=1+arg2, arg3'=arg3P3, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: 1+arg2-arg1
New rule:
f500_0_main_GE -> f323_0_rec0_GT : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=1+arg3, arg3'=arg3P3, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2+arg3

Applied deletion
Removed the following rules: 28

Applied chaining
First rule:
f323_0_rec0_GT -> f376_0_rec1_GT : arg5'=arg5P4, arg2'=0, arg4'=arg4P4, arg3'=2*arg1, (arg2 > 0 /\ arg2-arg1 >= 0), cost: 1
Second rule:
f376_0_rec1_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+arg3, arg4'=arg4P5, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1-arg2+arg3
New rule:
f323_0_rec0_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+2*arg1, arg4'=arg4P5, arg3'=2*arg1, (arg2 > 0 /\ arg2-arg1 >= 0 /\ arg1 >= 0), cost: 2+2*arg1

Applied deletion
Removed the following rules: 30

Applied chaining
First rule:
f376_0_rec1_GT -> f319_0_rec2_LT : arg5'=arg5P6, arg4'=arg4P6, arg3'=arg2+arg1, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1
Second rule:
f319_0_rec2_LT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1, (arg2 >= 0 /\ arg1 >= 0 /\ arg3 >= 0), cost: 1+arg3
New rule:
f376_0_rec1_GT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1, (1+arg2 > 0 /\ arg1 >= 0 /\ -arg2+arg3 >= 0), cost: 2+arg2+arg1

Applied deletion
Removed the following rules: 32

Applied chaining
First rule:
f319_0_rec2_LT -> f541_0_rec3_GT : arg5'=3*arg2+2*arg1+4*arg3, arg4'=0, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 1
Second rule:
f541_0_rec3_GT -> f541_0_rec3_GT : arg4'=1+arg5, (arg2 >= 0 /\ 1+arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1+arg5-arg4
New rule:
f319_0_rec2_LT -> f541_0_rec3_GT : arg5'=3*arg2+2*arg1+4*arg3, arg4'=1+3*arg2+2*arg1+4*arg3, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 2+3*arg2+2*arg1+4*arg3

Applied deletion
Removed the following rules: 34

Applied chaining
First rule:
f541_0_rec3_GT -> f493_0_rec4_LT : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=100*arg2+arg4+1000*arg1+10*arg3, arg3'=arg3P10, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1
Second rule:
f493_0_rec4_LT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1, arg3'=arg3P11, arg1 >= 0, cost: 1+arg1
New rule:
f541_0_rec3_GT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1, arg3'=arg3P11, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 2+100*arg2+arg4+1000*arg1+10*arg3

Applied deletion
Removed the following rules: 36

Chained accelerated rules with incoming rules
Start location: __init
  13: f1_0_main_ConstantStackPush -> f500_0_main_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
  37: f1_0_main_ConstantStackPush -> f500_0_main_GE : arg5'=arg5P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg2, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 >= 0), cost: 1+arg2
  15: f500_0_main_GE -> f323_0_rec0_GT : arg5'=arg5P2, arg2'=arg3, arg4'=arg4P2, arg1'=0, arg3'=arg3P2, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 1
  38: f500_0_main_GE -> f323_0_rec0_GT : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=1+arg3, arg3'=arg3P3, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 > 0), cost: 2+arg3
  17: f323_0_rec0_GT -> f376_0_rec1_GT : arg5'=arg5P4, arg2'=0, arg4'=arg4P4, arg3'=2*arg1, (arg2 > 0 /\ arg2-arg1 >= 0), cost: 1
  39: f323_0_rec0_GT -> f376_0_rec1_GT : arg5'=arg5P5, arg2'=1+2*arg1, arg4'=arg4P5, arg3'=2*arg1, (arg2 > 0 /\ arg2-arg1 >= 0 /\ arg1 >= 0), cost: 2+2*arg1
  19: f376_0_rec1_GT -> f319_0_rec2_LT : arg5'=arg5P6, arg4'=arg4P6, arg3'=arg2+arg1, (1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg3 >= 0), cost: 1
  40: f376_0_rec1_GT -> f319_0_rec2_LT : arg5'=arg5P7, arg4'=arg4P7, arg3'=-1, (1+arg2 > 0 /\ arg1 >= 0 /\ -arg2+arg3 >= 0), cost: 2+arg2+arg1
  21: f319_0_rec2_LT -> f541_0_rec3_GT : arg5'=3*arg2+2*arg1+4*arg3, arg4'=0, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 1
  41: f319_0_rec2_LT -> f541_0_rec3_GT : arg5'=3*arg2+2*arg1+4*arg3, arg4'=1+3*arg2+2*arg1+4*arg3, (arg2 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0), cost: 2+3*arg2+2*arg1+4*arg3
  23: f541_0_rec3_GT -> f493_0_rec4_LT : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=100*arg2+arg4+1000*arg1+10*arg3, arg3'=arg3P10, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 1
  42: f541_0_rec3_GT -> f493_0_rec4_LT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=-1, arg3'=arg3P11, (arg2 >= 0 /\ arg5-arg4 >= 0 /\ arg1 >= 0 /\ 1+arg3 > 0 /\ 1+arg4 > 0), cost: 2+100*arg2+arg4+1000*arg1+10*arg3
  12: __init -> f1_0_main_ConstantStackPush : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

