unknown

Initial ITS

Start location: l6
Program variables: p^0 x^0 y^0
   0: l0 -> l1 : p^0'=p^post1, x^0'=x^post1, y^0'=y^post1, (-x^post1+x^0 == 0 /\ -1+p^post1 == 0 /\ y^0 <= 0 /\ -y^post1+y^0 == 0 /\ x^0 <= 0), cost: 1
   1: l0 -> l2 : p^0'=p^post2, x^0'=x^post2, y^0'=y^post2, (p^0-p^post2 == 0 /\ 1-y^0 <= 0 /\ -x^post2+x^0 == 0 /\ 1+y^post2-y^0 == 0), cost: 1
   2: l2 -> l0 : p^0'=p^post3, x^0'=x^post3, y^0'=y^post3, (p^0-p^post3 == 0 /\ -x^post3+x^0 == 0 /\ -y^post3+y^0 == 0), cost: 1
   3: l3 -> l2 : p^0'=p^post4, x^0'=x^post4, y^0'=y^post4, (-y^post4+y^0 == 0 /\ p^0-p^post4 == 0 /\ -x^post4+x^0 == 0 /\ x^0 <= 0), cost: 1
   4: l3 -> l4 : p^0'=p^post5, x^0'=x^post5, y^0'=y^post5, (-x^post5+x^0 == 0 /\ -1-p^0+p^post5 == 0 /\ -y^post5+y^0 == 0 /\ 1-x^0 <= 0), cost: 1
   5: l5 -> l3 : p^0'=p^post6, x^0'=x^post6, y^0'=y^post6, (-x^post6+x^0 == 0 /\ p^post6 == 0 /\ -y^post6+y^0 == 0), cost: 1
   6: l6 -> l5 : p^0'=p^post7, x^0'=x^post7, y^0'=y^post7, (-x^post7+x^0 == 0 /\ p^0-p^post7 == 0 /\ -y^post7+y^0 == 0), cost: 1

Chained Linear Paths

Start location: l6
Program variables: p^0 x^0 y^0
   0: l0 -> l1 : p^0'=p^post1, x^0'=x^post1, y^0'=y^post1, (-x^post1+x^0 == 0 /\ -1+p^post1 == 0 /\ y^0 <= 0 /\ -y^post1+y^0 == 0 /\ x^0 <= 0), cost: 1
   1: l0 -> l2 : p^0'=p^post2, x^0'=x^post2, y^0'=y^post2, (p^0-p^post2 == 0 /\ 1-y^0 <= 0 /\ -x^post2+x^0 == 0 /\ 1+y^post2-y^0 == 0), cost: 1
   2: l2 -> l0 : p^0'=p^post3, x^0'=x^post3, y^0'=y^post3, (p^0-p^post3 == 0 /\ -x^post3+x^0 == 0 /\ -y^post3+y^0 == 0), cost: 1
   3: l3 -> l2 : p^0'=p^post4, x^0'=x^post4, y^0'=y^post4, (-y^post4+y^0 == 0 /\ p^0-p^post4 == 0 /\ -x^post4+x^0 == 0 /\ x^0 <= 0), cost: 1
   4: l3 -> l4 : p^0'=p^post5, x^0'=x^post5, y^0'=y^post5, (-x^post5+x^0 == 0 /\ -1-p^0+p^post5 == 0 /\ -y^post5+y^0 == 0 /\ 1-x^0 <= 0), cost: 1
   7: l6 -> l3 : p^0'=p^post6, x^0'=x^post6, y^0'=y^post6, (y^post7-y^post6 == 0 /\ p^post6 == 0 /\ -x^post7+x^0 == 0 /\ p^0-p^post7 == 0 /\ x^post7-x^post6 == 0 /\ -y^post7+y^0 == 0), cost: 1

	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l6 -> l5 : p^0'=p^post7, x^0'=x^post7, y^0'=y^post7, (-x^post7+x^0 == 0 /\ p^0-p^post7 == 0 /\ -y^post7+y^0 == 0), cost: 1
	Second rule:
	l5 -> l3 : p^0'=p^post6, x^0'=x^post6, y^0'=y^post6, (-x^post6+x^0 == 0 /\ p^post6 == 0 /\ -y^post6+y^0 == 0), cost: 1
	New rule:
	l6 -> l3 : p^0'=p^post6, x^0'=x^post6, y^0'=y^post6, (y^post7-y^post6 == 0 /\ p^post6 == 0 /\ -x^post7+x^0 == 0 /\ p^0-p^post7 == 0 /\ x^post7-x^post6 == 0 /\ -y^post7+y^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 6

Simplified Transitions

Start location: l6
Program variables: p^0 x^0 y^0
   8: l0 -> l1 : p^0'=1, (y^0 <= 0 /\ x^0 <= 0), cost: 1
   9: l0 -> l2 : y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
  10: l2 -> l0 : T, cost: 1
  11: l3 -> l2 : x^0 <= 0, cost: 1
  12: l3 -> l4 : p^0'=1+p^0, 1-x^0 <= 0, cost: 1
  13: l6 -> l3 : p^0'=0, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : p^0'=p^post1, x^0'=x^post1, y^0'=y^post1, (-x^post1+x^0 == 0 /\ -1+p^post1 == 0 /\ y^0 <= 0 /\ -y^post1+y^0 == 0 /\ x^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : p^0'=1, x^0'=x^0, y^0'=y^0, (0 == 0 /\ y^0 <= 0 /\ x^0 <= 0), cost: 1
	
		propagated equality x^post1 = x^0
		
		propagated equality p^post1 = 1
		
		propagated equality y^post1 = y^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : p^0'=1, x^0'=x^0, y^0'=y^0, (0 == 0 /\ y^0 <= 0 /\ x^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : p^0'=1, x^0'=x^0, y^0'=y^0, (y^0 <= 0 /\ x^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : p^0'=1, x^0'=x^0, y^0'=y^0, (y^0 <= 0 /\ x^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : p^0'=1, (y^0 <= 0 /\ x^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l2 : p^0'=p^post2, x^0'=x^post2, y^0'=y^post2, (p^0-p^post2 == 0 /\ 1-y^0 <= 0 /\ -x^post2+x^0 == 0 /\ 1+y^post2-y^0 == 0), cost: 1
	New rule:
	l0 -> l2 : p^0'=p^0, x^0'=x^0, y^0'=-1+y^0, (0 == 0 /\ 1-y^0 <= 0), cost: 1
	
		propagated equality p^post2 = p^0
		
		propagated equality x^post2 = x^0
		
		propagated equality y^post2 = -1+y^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : p^0'=p^0, x^0'=x^0, y^0'=-1+y^0, (0 == 0 /\ 1-y^0 <= 0), cost: 1
	New rule:
	l0 -> l2 : p^0'=p^0, x^0'=x^0, y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : p^0'=p^0, x^0'=x^0, y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
	New rule:
	l0 -> l2 : y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : p^0'=p^post3, x^0'=x^post3, y^0'=y^post3, (p^0-p^post3 == 0 /\ -x^post3+x^0 == 0 /\ -y^post3+y^0 == 0), cost: 1
	New rule:
	l2 -> l0 : p^0'=p^0, x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	
		propagated equality p^post3 = p^0
		
		propagated equality x^post3 = x^0
		
		propagated equality y^post3 = y^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : p^0'=p^0, x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	New rule:
	l2 -> l0 : p^0'=p^0, x^0'=x^0, y^0'=y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : p^0'=p^0, x^0'=x^0, y^0'=y^0, T, cost: 1
	New rule:
	l2 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l2 : p^0'=p^post4, x^0'=x^post4, y^0'=y^post4, (-y^post4+y^0 == 0 /\ p^0-p^post4 == 0 /\ -x^post4+x^0 == 0 /\ x^0 <= 0), cost: 1
	New rule:
	l3 -> l2 : p^0'=p^0, x^0'=x^0, y^0'=y^0, (0 == 0 /\ x^0 <= 0), cost: 1
	
		propagated equality y^post4 = y^0
		
		propagated equality p^post4 = p^0
		
		propagated equality x^post4 = x^0
		
	Simplified Guard

	Original rule:
	l3 -> l2 : p^0'=p^0, x^0'=x^0, y^0'=y^0, (0 == 0 /\ x^0 <= 0), cost: 1
	New rule:
	l3 -> l2 : p^0'=p^0, x^0'=x^0, y^0'=y^0, x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l2 : p^0'=p^0, x^0'=x^0, y^0'=y^0, x^0 <= 0, cost: 1
	New rule:
	l3 -> l2 : x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l4 : p^0'=p^post5, x^0'=x^post5, y^0'=y^post5, (-x^post5+x^0 == 0 /\ -1-p^0+p^post5 == 0 /\ -y^post5+y^0 == 0 /\ 1-x^0 <= 0), cost: 1
	New rule:
	l3 -> l4 : p^0'=1+p^0, x^0'=x^0, y^0'=y^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	
		propagated equality x^post5 = x^0
		
		propagated equality p^post5 = 1+p^0
		
		propagated equality y^post5 = y^0
		
	Simplified Guard

	Original rule:
	l3 -> l4 : p^0'=1+p^0, x^0'=x^0, y^0'=y^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	New rule:
	l3 -> l4 : p^0'=1+p^0, x^0'=x^0, y^0'=y^0, 1-x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l4 : p^0'=1+p^0, x^0'=x^0, y^0'=y^0, 1-x^0 <= 0, cost: 1
	New rule:
	l3 -> l4 : p^0'=1+p^0, 1-x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l3 : p^0'=p^post6, x^0'=x^post6, y^0'=y^post6, (y^post7-y^post6 == 0 /\ p^post6 == 0 /\ -x^post7+x^0 == 0 /\ p^0-p^post7 == 0 /\ x^post7-x^post6 == 0 /\ -y^post7+y^0 == 0), cost: 1
	New rule:
	l6 -> l3 : p^0'=0, x^0'=x^post7, y^0'=y^post7, (0 == 0 /\ -x^post7+x^0 == 0 /\ p^0-p^post7 == 0 /\ -y^post7+y^0 == 0), cost: 1
	
		propagated equality y^post6 = y^post7
		
		propagated equality p^post6 = 0
		
		propagated equality x^post6 = x^post7
		
	Propagated Equalities

	Original rule:
	l6 -> l3 : p^0'=0, x^0'=x^post7, y^0'=y^post7, (0 == 0 /\ -x^post7+x^0 == 0 /\ p^0-p^post7 == 0 /\ -y^post7+y^0 == 0), cost: 1
	New rule:
	l6 -> l3 : p^0'=0, x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	
		propagated equality x^post7 = x^0
		
		propagated equality p^post7 = p^0
		
		propagated equality y^post7 = y^0
		
	Simplified Guard

	Original rule:
	l6 -> l3 : p^0'=0, x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	New rule:
	l6 -> l3 : p^0'=0, x^0'=x^0, y^0'=y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l3 : p^0'=0, x^0'=x^0, y^0'=y^0, T, cost: 1
	New rule:
	l6 -> l3 : p^0'=0, T, cost: 1

Step with 13

	Trace

	13[T]
	
	Blocked

	[{}, {}]

Step with 11

	Trace

	13[T], 11[(x^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 10

	Trace

	13[T], 11[(x^0 <= 0)], 10[T]
	
	Blocked

	[{}, {}, {}, {}]

Step with 8

	Trace

	13[T], 11[(x^0 <= 0)], 10[T], 8[(y^0 <= 0 /\ x^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Backtrack

	Trace

	13[T], 11[(x^0 <= 0)], 10[T]
	
	Blocked

	[{}, {}, {}, {8[T]}]

Step with 9

	Trace

	13[T], 11[(x^0 <= 0)], 10[T], 9[(1-y^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {8[T]}, {}]

Accelerate

Start location: l6
Program variables: p^0 x^0 y^0
   8: l0 -> l1 : p^0'=1, (y^0 <= 0 /\ x^0 <= 0), cost: 1
   9: l0 -> l2 : y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
  10: l2 -> l0 : T, cost: 1
  14: l2 -> l2 : y^0'=-n+y^0, (-1+n >= 0 /\ -n+y^0 >= 0), cost: 1
  11: l3 -> l2 : x^0 <= 0, cost: 1
  12: l3 -> l4 : p^0'=1+p^0, 1-x^0 <= 0, cost: 1
  13: l6 -> l3 : p^0'=0, T, cost: 1

	Loop Acceleration

	Original rule:
	l2 -> l2 : y^0'=-1+y^0, 1-y^0 <= 0, cost: 1
	New rule:
	l2 -> l2 : y^0'=-n+y^0, (-1+n >= 0 /\ -n+y^0 >= 0), cost: 1

		-1+y^0 >= 0 [0]: montonic decrease yields -n+y^0 >= 0
		
		-1+y^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+y^0 >= 0)
		
		Replacement map: {-1+y^0 >= 0 -> -n+y^0 >= 0}

	Trace

	13[T], 11[(x^0 <= 0)], 14[(-1+n >= 0 /\ -n+y^0 >= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}]

Step with 10

	Trace

	13[T], 11[(x^0 <= 0)], 14[(-1+n >= 0 /\ -n+y^0 >= 0)], 10[T]
	
	Blocked

	[{}, {}, {}, {14[T]}, {}]

Step with 9

	Trace

	13[T], 11[(x^0 <= 0)], 14[(-1+n >= 0 /\ -n+y^0 >= 0)], 10[T], 9[(1-y^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {}, {}]

Covered

	Trace

	13[T], 11[(x^0 <= 0)], 14[(-1+n >= 0 /\ -n+y^0 >= 0)], 10[T]
	
	Blocked

	[{}, {}, {}, {14[T]}, {9[T]}]

Step with 8

	Trace

	13[T], 11[(x^0 <= 0)], 14[(-1+n >= 0 /\ -n+y^0 >= 0)], 10[T], 8[(y^0 <= 0 /\ x^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {9[T]}, {}]

Backtrack

	Trace

	13[T], 11[(x^0 <= 0)], 14[(-1+n >= 0 /\ -n+y^0 >= 0)], 10[T]
	
	Blocked

	[{}, {}, {}, {14[T]}, {8[T], 9[T]}]

Backtrack

	Trace

	13[T], 11[(x^0 <= 0)], 14[(-1+n >= 0 /\ -n+y^0 >= 0)]
	
	Blocked

	[{}, {}, {}, {10[T], 14[T]}]

Backtrack

	Trace

	13[T], 11[(x^0 <= 0)]
	
	Blocked

	[{}, {}, {14[T]}]

Step with 10

	Trace

	13[T], 11[(x^0 <= 0)], 10[T]
	
	Blocked

	[{}, {}, {14[T]}, {}]

Step with 8

	Trace

	13[T], 11[(x^0 <= 0)], 10[T], 8[(y^0 <= 0 /\ x^0 <= 0)]
	
	Blocked

	[{}, {}, {14[T]}, {}, {}]

Backtrack

	Trace

	13[T], 11[(x^0 <= 0)], 10[T]
	
	Blocked

	[{}, {}, {14[T]}, {8[T]}]

Step with 9

	Trace

	13[T], 11[(x^0 <= 0)], 10[T], 9[(1-y^0 <= 0)]
	
	Blocked

	[{}, {}, {14[T]}, {8[T]}, {}]

Covered

	Trace

	13[T], 11[(x^0 <= 0)], 10[T]
	
	Blocked

	[{}, {}, {14[T]}, {8[T], 9[T]}]

Backtrack

	Trace

	13[T], 11[(x^0 <= 0)]
	
	Blocked

	[{}, {}, {10[T], 14[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {11[T]}]

Step with 12

	Trace

	13[T], 12[(1-x^0 <= 0)]
	
	Blocked

	[{}, {11[T]}, {}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {11[T], 12[T]}]

Backtrack

	Trace

	Blocked

	[{13[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
