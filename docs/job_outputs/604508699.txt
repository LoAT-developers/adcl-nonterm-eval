YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l18, true>
<l1, l2, ((0 + nodecount^0) <= (0 + i^0))>
<l1, l3, ((1 + i^0) <= (0 + nodecount^0)), par{i^0 -> (1 + i^0)}>
<l4, l5, true, par{i^0 -> (1 + i^0)}>
<l4, l2, true>
<l6, l7, true>
<l8, l3, ((0 + edgecount^0) <= (0 + i^0)), par{i^0 -> 0}>
<l8, l4, ((1 + i^0) <= (0 + edgecount^0)) /\ (undef48 = undef48) /\ (undef49 = undef49), par{x^0 -> undef48, y^0 -> undef49}>
<l9, l10, true>
<l11, l12, true, par{j^0 -> (1 + j^0)}>
<l13, l9, ((0 + edgecount^0) <= (0 + j^0)), par{i^0 -> (1 + i^0)}>
<l13, l11, ((1 + j^0) <= (0 + edgecount^0)) /\ (undef76 = undef76) /\ (undef77 = undef77), par{x^0 -> undef76, y^0 -> undef77}>
<l10, l5, ((0 + nodecount^0) <= (0 + i^0)), par{i^0 -> 0}>
<l10, l12, ((1 + i^0) <= (0 + nodecount^0)), par{j^0 -> 0}>
<l12, l13, true>
<l14, l15, true>
<l15, l6, true, par{i^0 -> (1 + i^0)}>
<l16, l14, ((1 + source^0) <= (0 + i^0))>
<l16, l14, ((1 + i^0) <= (0 + source^0))>
<l16, l15, ((0 + i^0) <= (0 + source^0)) /\ ((0 + source^0) <= (0 + i^0))>
<l7, l9, ((0 + nodecount^0) <= (0 + i^0)), par{i^0 -> 0}>
<l7, l16, ((1 + i^0) <= (0 + nodecount^0))>
<l5, l8, true>
<l3, l1, true>
<l17, l6, true, par{edgecount^0 -> 8, i^0 -> 0, nodecount^0 -> 5, source^0 -> 0}>
<l18, l17, true>

Fresh variables:
undef48, undef49, undef76, undef77, 

Undef variables:
undef48, undef49, undef76, undef77, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l6, (8 = 8) /\ (i^0 = 0) /\ (5 = 5) /\ (0 = 0)>
<l3, l2, ((0 + 5) <= (0 + i^0))>
<l3, l3, ((1 + i^0) <= (0 + 5)), par{i^0 -> (1 + i^0)}>
<l5, l3, ((0 + 8) <= (0 + i^0)), par{i^0 -> 0}>
<l5, l5, ((1 + i^0) <= (0 + 8)) /\ (undef48 = undef48) /\ (undef49 = undef49), par{i^0 -> (1 + i^0)}>
<l5, l2, ((1 + i^0) <= (0 + 8)) /\ (undef48 = undef48) /\ (undef49 = undef49)>
<l6, l12, ((0 + 5) <= (0 + i^0)) /\ ((1 + 0) <= (0 + 5)), par{i^0 -> 0, j^0 -> 0}>
<l6, l6, ((1 + i^0) <= (0 + 5)) /\ ((1 + 0) <= (0 + i^0)), par{i^0 -> (1 + i^0)}>
<l6, l6, ((1 + i^0) <= (0 + 5)) /\ ((1 + i^0) <= (0 + 0)), par{i^0 -> (1 + i^0)}>
<l6, l6, ((1 + i^0) <= (0 + 5)) /\ ((0 + i^0) <= (0 + 0)) /\ ((0 + 0) <= (0 + i^0)), par{i^0 -> (1 + i^0)}>
<l12, l5, ((0 + 8) <= (0 + j^0)) /\ ((0 + 5) <= (0 + (1 + i^0))), par{i^0 -> 0}>
<l12, l12, ((0 + 8) <= (0 + j^0)) /\ ((1 + (1 + i^0)) <= (0 + 5)), par{i^0 -> (1 + i^0), j^0 -> 0}>
<l12, l12, ((1 + j^0) <= (0 + 8)) /\ (undef76 = undef76) /\ (undef77 = undef77), par{j^0 -> (1 + j^0)}>

Fresh variables:
undef48, undef49, undef76, undef77, 

Undef variables:
undef48, undef49, undef76, undef77, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l6, l6, 1 <= i^0 /\ i^0 <= 4, {i^0 -> 1 + i^0, rest remain the same}>
<l6, l6, 1 + i^0 <= 0, {i^0 -> 1 + i^0, rest remain the same}>
<l6, l6, i^0 = 0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0

Graph 2:
Transitions:
<l12, l12, 8 <= j^0 /\ i^0 <= 3, {i^0 -> 1 + i^0, j^0 -> 0, rest remain the same}>
<l12, l12, j^0 <= 7, {j^0 -> 1 + j^0, rest remain the same}>
Variables:
i^0, j^0

Graph 3:
Transitions:
<l5, l5, i^0 <= 7, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0

Graph 4:
Transitions:
<l3, l3, i^0 <= 4, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0

Graph 5:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l6, i^0 = 0, {all remain the same}>

Graph 2
<l6, l12, 5 <= i^0, {i^0 -> 0, j^0 -> 0, rest remain the same}>

Graph 3
<l12, l5, 8 <= j^0 /\ 4 <= i^0, {i^0 -> 0, rest remain the same}>

Graph 4
<l5, l3, 8 <= i^0, {i^0 -> 0, rest remain the same}>

Graph 5
<l3, l2, 5 <= i^0, {all remain the same}>
<l5, l2, i^0 <= 7, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 5 )
( 3 , 4 )
( 5 , 3 )
( 6 , 1 )
( 12 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002743
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l6: 0 <= i^0[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l6, l6, 1 + i^0 <= 0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 <= i^0 /\ i^0 <= 4, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, i^0 = 0, {i^0 -> 1 + i^0, rest remain the same}>
Checking unfeasibility...
Time used: 0.001527

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000591s
[33mRanking function: [36m4 - i^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.004548

Checking conditional termination of SCC {l12}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000598s
[33mRanking function: [36m3 - i^0[0m
New Graphs: 
Transitions:
<l12, l12, j^0 <= 7, {j^0 -> 1 + j^0, rest remain the same}>
Variables:
j^0
Checking conditional termination of SCC {l12}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000267s
[33mRanking function: [36m7 - j^0[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.000599

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000300s
[33mRanking function: [36m7 - i^0[0m
New Graphs: 
Proving termination of subgraph 4
Checking unfeasibility...
Time used: 0.000583

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000296s
[33mRanking function: [36m4 - i^0[0m
New Graphs: 
Proving termination of subgraph 5
Analyzing SCC {l2}...
No cycles found.

[32mProgram Terminates[0m
