WORST_CASE(Omega(0),?)

Initial ITS
Start location: l8
   0: l0 -> l1 : i^0'=i^post0, (i^0-i^post0 == 0 /\ 3-i^0 <= 0), cost: 1
   1: l0 -> l2 : i^0'=i^post1, (-2+i^0 <= 0 /\ -1+i^post1-i^0 == 0), cost: 1
   7: l1 -> l6 : i^0'=i^post7, i^0-i^post7 == 0, cost: 1
   5: l2 -> l3 : i^0'=i^post5, -i^post5+i^0 == 0, cost: 1
   2: l3 -> l0 : i^0'=i^post2, -i^post2+i^0 == 0, cost: 1
   3: l3 -> l0 : i^0'=i^post3, i^0-i^post3 == 0, cost: 1
   4: l3 -> l1 : i^0'=i^post4, -i^post4+i^0 == 0, cost: 1
   6: l4 -> l5 : i^0'=i^post6, i^0-i^post6 == 0, cost: 1
   8: l6 -> l4 : i^0'=i^post8, (-i^post8+i^0 == 0 /\ -1+i^0 <= 0), cost: 1
   9: l6 -> l4 : i^0'=i^post9, (2-i^0 <= 0 /\ i^0-i^post9 == 0), cost: 1
  10: l7 -> l2 : i^0'=i^post10, i^post10 == 0, cost: 1
  11: l8 -> l7 : i^0'=i^post11, -i^post11+i^0 == 0, cost: 1


Removed unreachable rules and leafs
Start location: l8
   1: l0 -> l2 : i^0'=i^post1, (-2+i^0 <= 0 /\ -1+i^post1-i^0 == 0), cost: 1
   5: l2 -> l3 : i^0'=i^post5, -i^post5+i^0 == 0, cost: 1
   2: l3 -> l0 : i^0'=i^post2, -i^post2+i^0 == 0, cost: 1
   3: l3 -> l0 : i^0'=i^post3, i^0-i^post3 == 0, cost: 1
  10: l7 -> l2 : i^0'=i^post10, i^post10 == 0, cost: 1
  11: l8 -> l7 : i^0'=i^post11, -i^post11+i^0 == 0, cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : i^0'=i^post1, (-2+i^0 <= 0 /\ -1+i^post1-i^0 == 0), cost: 1
New rule:
l0 -> l2 : i^0'=1+i^0, -2+i^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : i^0'=i^post2, -i^post2+i^0 == 0, cost: 1
New rule:
l3 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : i^0'=i^post3, i^0-i^post3 == 0, cost: 1
New rule:
l3 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l3 : i^0'=i^post5, -i^post5+i^0 == 0, cost: 1
New rule:
l2 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l2 : i^0'=i^post10, i^post10 == 0, cost: 1
New rule:
l7 -> l2 : i^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l8 -> l7 : i^0'=i^post11, -i^post11+i^0 == 0, cost: 1
New rule:
l8 -> l7 : TRUE, cost: 1

Simplified rules
Start location: l8
  12: l0 -> l2 : i^0'=1+i^0, -2+i^0 <= 0, cost: 1
  14: l2 -> l3 : TRUE, cost: 1
  13: l3 -> l0 : TRUE, cost: 1
  15: l7 -> l2 : i^0'=0, TRUE, cost: 1
  16: l8 -> l7 : TRUE, cost: 1


Eliminating location l7 by chaining:

Applied chaining
First rule:
l8 -> l7 : TRUE, cost: 1
Second rule:
l7 -> l2 : i^0'=0, TRUE, cost: 1
New rule:
l8 -> l2 : i^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 15 16

Eliminating location l3 by chaining:

Applied chaining
First rule:
l2 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l0 : TRUE, cost: 1
New rule:
l2 -> l0 : TRUE, cost: 2

Applied deletion
Removed the following rules: 13 14

Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 2
Second rule:
l0 -> l2 : i^0'=1+i^0, -2+i^0 <= 0, cost: 1
New rule:
l2 -> l2 : i^0'=1+i^0, -2+i^0 <= 0, cost: 3

Applied deletion
Removed the following rules: 12 18

Eliminated locations on linear paths
Start location: l8
  19: l2 -> l2 : i^0'=1+i^0, -2+i^0 <= 0, cost: 3
  17: l8 -> l2 : i^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l2 -> l2 : i^0'=1+i^0, -2+i^0 <= 0, cost: 3
New rule:
l2 -> l2 : i^0'=i^0+n, (3-i^0-n >= 0 /\ n >= 0), cost: 3*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BKobcl.txt

Applied instantiation
Original rule:
l2 -> l2 : i^0'=i^0+n, (3-i^0-n >= 0 /\ n >= 0), cost: 3*n
New rule:
l2 -> l2 : i^0'=3, (0 >= 0 /\ 3-i^0 >= 0), cost: 9-3*i^0

Applied simplification
Original rule:
l2 -> l2 : i^0'=3, (0 >= 0 /\ 3-i^0 >= 0), cost: 9-3*i^0
New rule:
l2 -> l2 : i^0'=3, -3+i^0 <= 0, cost: 9-3*i^0

Applied deletion
Removed the following rules: 19

Accelerated simple loops
Start location: l8
  21: l2 -> l2 : i^0'=3, -3+i^0 <= 0, cost: 9-3*i^0
  17: l8 -> l2 : i^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l8 -> l2 : i^0'=0, TRUE, cost: 2
Second rule:
l2 -> l2 : i^0'=3, -3+i^0 <= 0, cost: 9-3*i^0
New rule:
l8 -> l2 : i^0'=3, -3 <= 0, cost: 11

Applied deletion
Removed the following rules: 21

Chained accelerated rules with incoming rules
Start location: l8
  17: l8 -> l2 : i^0'=0, TRUE, cost: 2
  22: l8 -> l2 : i^0'=3, -3 <= 0, cost: 11


Removed unreachable locations and irrelevant leafs
Start location: l8
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

