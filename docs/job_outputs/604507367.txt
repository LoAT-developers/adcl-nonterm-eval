NO

Initial ITS

Start location: l4
Program variables: __const_100^0 __const_10^0 __const_11^0 e^0 n^0
   0: l0 -> l1 : __const_100^0'=__const_100^post1, __const_10^0'=__const_10^post1, __const_11^0'=__const_11^post1, e^0'=e^post1, n^0'=n^post1, (n^post1-__const_11^0-n^0 == 0 /\ 1-e^0 <= 0 /\ -1+e^post1-e^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ -__const_11^post1+__const_11^0 == 0 /\ -__const_100^0+n^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0), cost: 1
   2: l0 -> l2 : __const_100^0'=__const_100^post3, __const_10^0'=__const_10^post3, __const_11^0'=__const_11^post3, e^0'=e^post3, n^0'=n^post3, (__const_10^0-__const_10^post3 == 0 /\ 1-e^0 <= 0 /\ n^post3+__const_10^0-n^0 == 0 /\ -__const_11^post3+__const_11^0 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ 1+__const_100^0-n^0 <= 0 /\ 1+e^post3-e^0 == 0), cost: 1
   1: l1 -> l0 : __const_100^0'=__const_100^post2, __const_10^0'=__const_10^post2, __const_11^0'=__const_11^post2, e^0'=e^post2, n^0'=n^post2, (-n^post2+n^0 == 0 /\ -__const_10^post2+__const_10^0 == 0 /\ __const_100^0-__const_100^post2 == 0 /\ -__const_11^post2+__const_11^0 == 0 /\ -e^post2+e^0 == 0), cost: 1
   3: l2 -> l0 : __const_100^0'=__const_100^post4, __const_10^0'=__const_10^post4, __const_11^0'=__const_11^post4, e^0'=e^post4, n^0'=n^post4, (-n^post4+n^0 == 0 /\ -__const_11^post4+__const_11^0 == 0 /\ -__const_10^post4+__const_10^0 == 0 /\ __const_100^0-__const_100^post4 == 0 /\ -e^post4+e^0 == 0), cost: 1
   4: l3 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, e^0'=e^post5, n^0'=n^post5, (0 == 0 /\ -1+e^post5 == 0 /\ __const_10^0-__const_10^post5 == 0 /\ -__const_11^post5+__const_11^0 == 0 /\ -__const_100^post5+__const_100^0 == 0), cost: 1
   5: l4 -> l3 : __const_100^0'=__const_100^post6, __const_10^0'=__const_10^post6, __const_11^0'=__const_11^post6, e^0'=e^post6, n^0'=n^post6, (-__const_10^post6+__const_10^0 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ e^0-e^post6 == 0 /\ __const_100^0-__const_100^post6 == 0 /\ -n^post6+n^0 == 0), cost: 1

Chained Linear Paths

Start location: l4
Program variables: __const_100^0 __const_10^0 __const_11^0 e^0 n^0
   7: l0 -> l0 : __const_100^0'=__const_100^post2, __const_10^0'=__const_10^post2, __const_11^0'=__const_11^post2, e^0'=e^post2, n^0'=n^post2, (n^post1-__const_11^0-n^0 == 0 /\ n^post1-n^post2 == 0 /\ e^post1-e^post2 == 0 /\ 1-e^0 <= 0 /\ __const_100^post1-__const_100^post2 == 0 /\ -1+e^post1-e^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ -__const_10^post2+__const_10^post1 == 0 /\ -__const_11^post1+__const_11^0 == 0 /\ -__const_11^post2+__const_11^post1 == 0 /\ -__const_100^0+n^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0), cost: 1
   8: l0 -> l0 : __const_100^0'=__const_100^post4, __const_10^0'=__const_10^post4, __const_11^0'=__const_11^post4, e^0'=e^post4, n^0'=n^post4, (__const_10^0-__const_10^post3 == 0 /\ 1-e^0 <= 0 /\ -__const_11^post4+__const_11^post3 == 0 /\ n^post3+__const_10^0-n^0 == 0 /\ -__const_11^post3+__const_11^0 == 0 /\ n^post3-n^post4 == 0 /\ -__const_10^post4+__const_10^post3 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ 1+__const_100^0-n^0 <= 0 /\ __const_100^post3-__const_100^post4 == 0 /\ 1+e^post3-e^0 == 0 /\ e^post3-e^post4 == 0), cost: 1
   6: l4 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, e^0'=e^post5, n^0'=n^post5, (0 == 0 /\ __const_10^post6-__const_10^post5 == 0 /\ -__const_10^post6+__const_10^0 == 0 /\ -1+e^post5 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ __const_11^post6-__const_11^post5 == 0 /\ -__const_100^post5+__const_100^post6 == 0 /\ e^0-e^post6 == 0 /\ __const_100^0-__const_100^post6 == 0 /\ -n^post6+n^0 == 0), cost: 1

	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l4 -> l3 : __const_100^0'=__const_100^post6, __const_10^0'=__const_10^post6, __const_11^0'=__const_11^post6, e^0'=e^post6, n^0'=n^post6, (-__const_10^post6+__const_10^0 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ e^0-e^post6 == 0 /\ __const_100^0-__const_100^post6 == 0 /\ -n^post6+n^0 == 0), cost: 1
	Second rule:
	l3 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, e^0'=e^post5, n^0'=n^post5, (0 == 0 /\ -1+e^post5 == 0 /\ __const_10^0-__const_10^post5 == 0 /\ -__const_11^post5+__const_11^0 == 0 /\ -__const_100^post5+__const_100^0 == 0), cost: 1
	New rule:
	l4 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, e^0'=e^post5, n^0'=n^post5, (0 == 0 /\ __const_10^post6-__const_10^post5 == 0 /\ -__const_10^post6+__const_10^0 == 0 /\ -1+e^post5 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ __const_11^post6-__const_11^post5 == 0 /\ -__const_100^post5+__const_100^post6 == 0 /\ e^0-e^post6 == 0 /\ __const_100^0-__const_100^post6 == 0 /\ -n^post6+n^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location l1 by chaining:

	Applied chaining

	First rule:
	l0 -> l1 : __const_100^0'=__const_100^post1, __const_10^0'=__const_10^post1, __const_11^0'=__const_11^post1, e^0'=e^post1, n^0'=n^post1, (n^post1-__const_11^0-n^0 == 0 /\ 1-e^0 <= 0 /\ -1+e^post1-e^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ -__const_11^post1+__const_11^0 == 0 /\ -__const_100^0+n^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0), cost: 1
	Second rule:
	l1 -> l0 : __const_100^0'=__const_100^post2, __const_10^0'=__const_10^post2, __const_11^0'=__const_11^post2, e^0'=e^post2, n^0'=n^post2, (-n^post2+n^0 == 0 /\ -__const_10^post2+__const_10^0 == 0 /\ __const_100^0-__const_100^post2 == 0 /\ -__const_11^post2+__const_11^0 == 0 /\ -e^post2+e^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post2, __const_10^0'=__const_10^post2, __const_11^0'=__const_11^post2, e^0'=e^post2, n^0'=n^post2, (n^post1-__const_11^0-n^0 == 0 /\ n^post1-n^post2 == 0 /\ e^post1-e^post2 == 0 /\ 1-e^0 <= 0 /\ __const_100^post1-__const_100^post2 == 0 /\ -1+e^post1-e^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ -__const_10^post2+__const_10^post1 == 0 /\ -__const_11^post1+__const_11^0 == 0 /\ -__const_11^post2+__const_11^post1 == 0 /\ -__const_100^0+n^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l0 -> l2 : __const_100^0'=__const_100^post3, __const_10^0'=__const_10^post3, __const_11^0'=__const_11^post3, e^0'=e^post3, n^0'=n^post3, (__const_10^0-__const_10^post3 == 0 /\ 1-e^0 <= 0 /\ n^post3+__const_10^0-n^0 == 0 /\ -__const_11^post3+__const_11^0 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ 1+__const_100^0-n^0 <= 0 /\ 1+e^post3-e^0 == 0), cost: 1
	Second rule:
	l2 -> l0 : __const_100^0'=__const_100^post4, __const_10^0'=__const_10^post4, __const_11^0'=__const_11^post4, e^0'=e^post4, n^0'=n^post4, (-n^post4+n^0 == 0 /\ -__const_11^post4+__const_11^0 == 0 /\ -__const_10^post4+__const_10^0 == 0 /\ __const_100^0-__const_100^post4 == 0 /\ -e^post4+e^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post4, __const_10^0'=__const_10^post4, __const_11^0'=__const_11^post4, e^0'=e^post4, n^0'=n^post4, (__const_10^0-__const_10^post3 == 0 /\ 1-e^0 <= 0 /\ -__const_11^post4+__const_11^post3 == 0 /\ n^post3+__const_10^0-n^0 == 0 /\ -__const_11^post3+__const_11^0 == 0 /\ n^post3-n^post4 == 0 /\ -__const_10^post4+__const_10^post3 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ 1+__const_100^0-n^0 <= 0 /\ __const_100^post3-__const_100^post4 == 0 /\ 1+e^post3-e^0 == 0 /\ e^post3-e^post4 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3

Simplified Transitions

Start location: l4
Program variables: __const_100^0 __const_10^0 __const_11^0 e^0 n^0
  10: l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0), cost: 1
  11: l0 -> l0 : e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (1-e^0 <= 0 /\ 1+__const_100^0-n^0 <= 0), cost: 1
   9: l4 -> l0 : e^0'=1, n^0'=n^post5, T, cost: 1

	Propagated Equalities

	Original rule:
	l4 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, e^0'=e^post5, n^0'=n^post5, (0 == 0 /\ __const_10^post6-__const_10^post5 == 0 /\ -__const_10^post6+__const_10^0 == 0 /\ -1+e^post5 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ __const_11^post6-__const_11^post5 == 0 /\ -__const_100^post5+__const_100^post6 == 0 /\ e^0-e^post6 == 0 /\ __const_100^0-__const_100^post6 == 0 /\ -n^post6+n^0 == 0), cost: 1
	New rule:
	l4 -> l0 : __const_100^0'=__const_100^post6, __const_10^0'=__const_10^post6, __const_11^0'=__const_11^post6, e^0'=1, n^0'=n^post5, (0 == 0 /\ -__const_10^post6+__const_10^0 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ e^0-e^post6 == 0 /\ __const_100^0-__const_100^post6 == 0 /\ -n^post6+n^0 == 0), cost: 1
	
		propagated equality __const_10^post5 = __const_10^post6
		
		propagated equality e^post5 = 1
		
		propagated equality __const_11^post5 = __const_11^post6
		
		propagated equality __const_100^post5 = __const_100^post6
		
	Propagated Equalities

	Original rule:
	l4 -> l0 : __const_100^0'=__const_100^post6, __const_10^0'=__const_10^post6, __const_11^0'=__const_11^post6, e^0'=1, n^0'=n^post5, (0 == 0 /\ -__const_10^post6+__const_10^0 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ e^0-e^post6 == 0 /\ __const_100^0-__const_100^post6 == 0 /\ -n^post6+n^0 == 0), cost: 1
	New rule:
	l4 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=1, n^0'=n^post5, 0 == 0, cost: 1
	
		propagated equality __const_10^post6 = __const_10^0
		
		propagated equality __const_11^post6 = __const_11^0
		
		propagated equality e^post6 = e^0
		
		propagated equality __const_100^post6 = __const_100^0
		
		propagated equality n^post6 = n^0
		
	Simplified Guard

	Original rule:
	l4 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=1, n^0'=n^post5, 0 == 0, cost: 1
	New rule:
	l4 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=1, n^0'=n^post5, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=1, n^0'=n^post5, T, cost: 1
	New rule:
	l4 -> l0 : e^0'=1, n^0'=n^post5, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post2, __const_10^0'=__const_10^post2, __const_11^0'=__const_11^post2, e^0'=e^post2, n^0'=n^post2, (n^post1-__const_11^0-n^0 == 0 /\ n^post1-n^post2 == 0 /\ e^post1-e^post2 == 0 /\ 1-e^0 <= 0 /\ __const_100^post1-__const_100^post2 == 0 /\ -1+e^post1-e^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ -__const_10^post2+__const_10^post1 == 0 /\ -__const_11^post1+__const_11^0 == 0 /\ -__const_11^post2+__const_11^post1 == 0 /\ -__const_100^0+n^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post1, __const_10^0'=__const_10^post1, __const_11^0'=__const_11^post1, e^0'=e^post1, n^0'=n^post1, (0 == 0 /\ n^post1-__const_11^0-n^0 == 0 /\ 1-e^0 <= 0 /\ -1+e^post1-e^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ -__const_11^post1+__const_11^0 == 0 /\ -__const_100^0+n^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0), cost: 1
	
		propagated equality n^post2 = n^post1
		
		propagated equality e^post2 = e^post1
		
		propagated equality __const_100^post2 = __const_100^post1
		
		propagated equality __const_10^post2 = __const_10^post1
		
		propagated equality __const_11^post2 = __const_11^post1
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post1, __const_10^0'=__const_10^post1, __const_11^0'=__const_11^post1, e^0'=e^post1, n^0'=n^post1, (0 == 0 /\ n^post1-__const_11^0-n^0 == 0 /\ 1-e^0 <= 0 /\ -1+e^post1-e^0 == 0 /\ -__const_10^post1+__const_10^0 == 0 /\ -__const_11^post1+__const_11^0 == 0 /\ -__const_100^0+n^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=1+e^0, n^0'=__const_11^0+n^0, (0 == 0 /\ 1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0), cost: 1
	
		propagated equality n^post1 = __const_11^0+n^0
		
		propagated equality e^post1 = 1+e^0
		
		propagated equality __const_10^post1 = __const_10^0
		
		propagated equality __const_11^post1 = __const_11^0
		
		propagated equality __const_100^post1 = __const_100^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=1+e^0, n^0'=__const_11^0+n^0, (0 == 0 /\ 1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post4, __const_10^0'=__const_10^post4, __const_11^0'=__const_11^post4, e^0'=e^post4, n^0'=n^post4, (__const_10^0-__const_10^post3 == 0 /\ 1-e^0 <= 0 /\ -__const_11^post4+__const_11^post3 == 0 /\ n^post3+__const_10^0-n^0 == 0 /\ -__const_11^post3+__const_11^0 == 0 /\ n^post3-n^post4 == 0 /\ -__const_10^post4+__const_10^post3 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ 1+__const_100^0-n^0 <= 0 /\ __const_100^post3-__const_100^post4 == 0 /\ 1+e^post3-e^0 == 0 /\ e^post3-e^post4 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post3, __const_10^0'=__const_10^post3, __const_11^0'=__const_11^post3, e^0'=e^post3, n^0'=n^post3, (0 == 0 /\ __const_10^0-__const_10^post3 == 0 /\ 1-e^0 <= 0 /\ n^post3+__const_10^0-n^0 == 0 /\ -__const_11^post3+__const_11^0 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ 1+__const_100^0-n^0 <= 0 /\ 1+e^post3-e^0 == 0), cost: 1
	
		propagated equality __const_11^post4 = __const_11^post3
		
		propagated equality n^post4 = n^post3
		
		propagated equality __const_10^post4 = __const_10^post3
		
		propagated equality __const_100^post4 = __const_100^post3
		
		propagated equality e^post4 = e^post3
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post3, __const_10^0'=__const_10^post3, __const_11^0'=__const_11^post3, e^0'=e^post3, n^0'=n^post3, (0 == 0 /\ __const_10^0-__const_10^post3 == 0 /\ 1-e^0 <= 0 /\ n^post3+__const_10^0-n^0 == 0 /\ -__const_11^post3+__const_11^0 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ 1+__const_100^0-n^0 <= 0 /\ 1+e^post3-e^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (0 == 0 /\ 1-e^0 <= 0 /\ 1+__const_100^0-n^0 <= 0), cost: 1
	
		propagated equality __const_10^post3 = __const_10^0
		
		propagated equality n^post3 = -__const_10^0+n^0
		
		propagated equality __const_11^post3 = __const_11^0
		
		propagated equality __const_100^post3 = __const_100^0
		
		propagated equality e^post3 = -1+e^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (0 == 0 /\ 1-e^0 <= 0 /\ 1+__const_100^0-n^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (1-e^0 <= 0 /\ 1+__const_100^0-n^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (1-e^0 <= 0 /\ 1+__const_100^0-n^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (1-e^0 <= 0 /\ 1+__const_100^0-n^0 <= 0), cost: 1

Step with 9

	Trace

	9[T]
	
	Blocked

	[{}, {}]

Step with 10

	Trace

	9[T], 10[(1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Nonterm

Start location: l4
Program variables: __const_100^0 __const_10^0 __const_11^0 e^0 n^0
  10: l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0), cost: 1
  11: l0 -> l0 : e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (1-e^0 <= 0 /\ 1+__const_100^0-n^0 <= 0), cost: 1
  12: l0 -> LoAT_sink : (-1+e^0 >= 0 /\ __const_100^0-n^0 >= 0 /\ __const_11^0 <= 0), cost: NONTERM
  13: l0 -> l0 : e^0'=e^0+n, n^0'=n*__const_11^0+n^0, (-1+e^0 >= 0 /\ -1+n >= 0 /\ __const_100^0-(-1+n)*__const_11^0-n^0 >= 0 /\ __const_100^0-n^0 >= 0), cost: 1
   9: l4 -> l0 : e^0'=1, n^0'=n^post5, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0), cost: 1
	New rule:
	l0 -> LoAT_sink : (-1+e^0 >= 0 /\ __const_100^0-n^0 >= 0 /\ __const_11^0 <= 0), cost: NONTERM

		-1+e^0 >= 0 [0]: monotonic increase yields -1+e^0 >= 0
		
		__const_100^0-n^0 >= 0 [0]: eventual decrease yields (__const_100^0-(-1+n)*__const_11^0-n^0 >= 0 /\ __const_100^0-n^0 >= 0)
		
		__const_100^0-n^0 >= 0 [1]: eventual increase yields (__const_100^0-n^0 >= 0 /\ __const_11^0 <= 0)
		
		Replacement map: {-1+e^0 >= 0 -> -1+e^0 >= 0, __const_100^0-n^0 >= 0 -> (__const_100^0-n^0 >= 0 /\ __const_11^0 <= 0)}

	Loop Acceleration

	Original rule:
	l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ -__const_100^0+n^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : e^0'=e^0+n, n^0'=n*__const_11^0+n^0, (-1+e^0 >= 0 /\ -1+n >= 0 /\ __const_100^0-(-1+n)*__const_11^0-n^0 >= 0 /\ __const_100^0-n^0 >= 0), cost: 1

		-1+e^0 >= 0 [0]: monotonic increase yields -1+e^0 >= 0
		
		__const_100^0-n^0 >= 0 [0]: eventual decrease yields (__const_100^0-(-1+n)*__const_11^0-n^0 >= 0 /\ __const_100^0-n^0 >= 0)
		
		__const_100^0-n^0 >= 0 [1]: eventual increase yields (__const_100^0-n^0 >= 0 /\ __const_11^0 <= 0)
		
		Replacement map: {-1+e^0 >= 0 -> -1+e^0 >= 0, __const_100^0-n^0 >= 0 -> (__const_100^0-(-1+n)*__const_11^0-n^0 >= 0 /\ __const_100^0-n^0 >= 0)}

Step with 12

	Trace

	9[T], 12[(-1+e^0 >= 0 /\ __const_100^0-n^0 >= 0 /\ __const_11^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}]

Refute

	Counterexample

	[ __const_100^0=0 __const_10^0=0 __const_11^0=0 e^0=1 n^0=0 ] 9 [ __const_100^0=0 __const_10^0=0 __const_11^0=0 e^0=e^0 n^0=n^0 ] 12
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
