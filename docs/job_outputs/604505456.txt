WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   1: f142_0_main_LE -> f194_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, (arg2 > 0 /\ arg2-arg1 <= 0 /\ arg1 > 0 /\ arg2-arg1P1 == 0 /\ arg1-arg2P1 == 0), cost: 1
   2: f142_0_main_LE -> f209_0_main_LE : arg2'=arg2P2, arg1'=arg1P2, (arg2 > 0 /\ arg2-arg1 > 0 /\ arg1 > 0 /\ arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0), cost: 1
   3: f194_0_main_LE -> f142_0_main_LE : arg2'=arg2P3, arg1'=arg1P3, (-arg1P3 == 0 /\ arg1-arg2P3 == 0 /\ -arg2 == 0), cost: 1
   4: f194_0_main_LE -> f194_0_main_LE : arg2'=arg2P4, arg1'=arg1P4, (arg2 > 0 /\ arg1-arg1P4 == 0 /\ -1+arg2-arg2P4 == 0), cost: 1
   5: f209_0_main_LE -> f142_0_main_LE : arg2'=arg2P5, arg1'=arg1P5, (-arg2 == 0 /\ -arg2P5 == 0 /\ -arg1P5+arg1 == 0), cost: 1
   6: f209_0_main_LE -> f209_0_main_LE : arg2'=arg2P6, arg1'=arg1P6, (arg2 > 0 /\ -1+arg2-arg2P6 == 0 /\ -arg1P6+arg1 == 0), cost: 1
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Applied preprocessing
Original rule:
f142_0_main_LE -> f194_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, (arg2 > 0 /\ arg2-arg1 <= 0 /\ arg1 > 0 /\ arg2-arg1P1 == 0 /\ arg1-arg2P1 == 0), cost: 1
New rule:
f142_0_main_LE -> f194_0_main_LE : arg2'=arg1, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f142_0_main_LE -> f209_0_main_LE : arg2'=arg2P2, arg1'=arg1P2, (arg2 > 0 /\ arg2-arg1 > 0 /\ arg1 > 0 /\ arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0), cost: 1
New rule:
f142_0_main_LE -> f209_0_main_LE : (arg2-arg1 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f194_0_main_LE -> f142_0_main_LE : arg2'=arg2P3, arg1'=arg1P3, (-arg1P3 == 0 /\ arg1-arg2P3 == 0 /\ -arg2 == 0), cost: 1
New rule:
f194_0_main_LE -> f142_0_main_LE : arg2'=arg1, arg1'=0, arg2 == 0, cost: 1

Applied preprocessing
Original rule:
f194_0_main_LE -> f194_0_main_LE : arg2'=arg2P4, arg1'=arg1P4, (arg2 > 0 /\ arg1-arg1P4 == 0 /\ -1+arg2-arg2P4 == 0), cost: 1
New rule:
f194_0_main_LE -> f194_0_main_LE : arg2'=-1+arg2, arg2 > 0, cost: 1

Applied preprocessing
Original rule:
f209_0_main_LE -> f142_0_main_LE : arg2'=arg2P5, arg1'=arg1P5, (-arg2 == 0 /\ -arg2P5 == 0 /\ -arg1P5+arg1 == 0), cost: 1
New rule:
f209_0_main_LE -> f142_0_main_LE : arg2'=0, arg2 == 0, cost: 1

Applied preprocessing
Original rule:
f209_0_main_LE -> f209_0_main_LE : arg2'=arg2P6, arg1'=arg1P6, (arg2 > 0 /\ -1+arg2-arg2P6 == 0 /\ -arg1P6+arg1 == 0), cost: 1
New rule:
f209_0_main_LE -> f209_0_main_LE : arg2'=-1+arg2, arg2 > 0, cost: 1

Simplified rules
Start location: __init
   0: f1_0_main_Load -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   8: f142_0_main_LE -> f194_0_main_LE : arg2'=arg1, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1
   9: f142_0_main_LE -> f209_0_main_LE : (arg2-arg1 > 0 /\ arg1 > 0), cost: 1
  10: f194_0_main_LE -> f142_0_main_LE : arg2'=arg1, arg1'=0, arg2 == 0, cost: 1
  11: f194_0_main_LE -> f194_0_main_LE : arg2'=-1+arg2, arg2 > 0, cost: 1
  12: f209_0_main_LE -> f142_0_main_LE : arg2'=0, arg2 == 0, cost: 1
  13: f209_0_main_LE -> f209_0_main_LE : arg2'=-1+arg2, arg2 > 0, cost: 1
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Applied acceleration
Original rule:
f194_0_main_LE -> f194_0_main_LE : arg2'=-1+arg2, arg2 > 0, cost: 1
New rule:
f194_0_main_LE -> f194_0_main_LE : arg2'=-n+arg2, (n >= 0 /\ 1-n+arg2 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FFLheJ.txt

Applied instantiation
Original rule:
f194_0_main_LE -> f194_0_main_LE : arg2'=-n+arg2, (n >= 0 /\ 1-n+arg2 > 0), cost: n
New rule:
f194_0_main_LE -> f194_0_main_LE : arg2'=0, (1 > 0 /\ arg2 >= 0), cost: arg2

Applied simplification
Original rule:
f194_0_main_LE -> f194_0_main_LE : arg2'=0, (1 > 0 /\ arg2 >= 0), cost: arg2
New rule:
f194_0_main_LE -> f194_0_main_LE : arg2'=0, arg2 >= 0, cost: arg2

Applied deletion
Removed the following rules: 11

Applied acceleration
Original rule:
f209_0_main_LE -> f209_0_main_LE : arg2'=-1+arg2, arg2 > 0, cost: 1
New rule:
f209_0_main_LE -> f209_0_main_LE : arg2'=arg2-n0, (n0 >= 0 /\ 1+arg2-n0 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BoCdjp.txt

Applied instantiation
Original rule:
f209_0_main_LE -> f209_0_main_LE : arg2'=arg2-n0, (n0 >= 0 /\ 1+arg2-n0 > 0), cost: n0
New rule:
f209_0_main_LE -> f209_0_main_LE : arg2'=0, (1 > 0 /\ arg2 >= 0), cost: arg2

Applied simplification
Original rule:
f209_0_main_LE -> f209_0_main_LE : arg2'=0, (1 > 0 /\ arg2 >= 0), cost: arg2
New rule:
f209_0_main_LE -> f209_0_main_LE : arg2'=0, arg2 >= 0, cost: arg2

Applied deletion
Removed the following rules: 13

Accelerated simple loops
Start location: __init
   0: f1_0_main_Load -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   8: f142_0_main_LE -> f194_0_main_LE : arg2'=arg1, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1
   9: f142_0_main_LE -> f209_0_main_LE : (arg2-arg1 > 0 /\ arg1 > 0), cost: 1
  10: f194_0_main_LE -> f142_0_main_LE : arg2'=arg1, arg1'=0, arg2 == 0, cost: 1
  15: f194_0_main_LE -> f194_0_main_LE : arg2'=0, arg2 >= 0, cost: arg2
  12: f209_0_main_LE -> f142_0_main_LE : arg2'=0, arg2 == 0, cost: 1
  17: f209_0_main_LE -> f209_0_main_LE : arg2'=0, arg2 >= 0, cost: arg2
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Applied chaining
First rule:
f142_0_main_LE -> f194_0_main_LE : arg2'=arg1, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1
Second rule:
f194_0_main_LE -> f194_0_main_LE : arg2'=0, arg2 >= 0, cost: arg2
New rule:
f142_0_main_LE -> f194_0_main_LE : arg2'=0, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1+arg1

Applied deletion
Removed the following rules: 15

Applied chaining
First rule:
f142_0_main_LE -> f209_0_main_LE : (arg2-arg1 > 0 /\ arg1 > 0), cost: 1
Second rule:
f209_0_main_LE -> f209_0_main_LE : arg2'=0, arg2 >= 0, cost: arg2
New rule:
f142_0_main_LE -> f209_0_main_LE : arg2'=0, (arg2-arg1 > 0 /\ arg1 > 0), cost: 1+arg2

Applied deletion
Removed the following rules: 17

Chained accelerated rules with incoming rules
Start location: __init
   0: f1_0_main_Load -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   8: f142_0_main_LE -> f194_0_main_LE : arg2'=arg1, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1
   9: f142_0_main_LE -> f209_0_main_LE : (arg2-arg1 > 0 /\ arg1 > 0), cost: 1
  18: f142_0_main_LE -> f194_0_main_LE : arg2'=0, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1+arg1
  19: f142_0_main_LE -> f209_0_main_LE : arg2'=0, (arg2-arg1 > 0 /\ arg1 > 0), cost: 1+arg2
  10: f194_0_main_LE -> f142_0_main_LE : arg2'=arg1, arg1'=0, arg2 == 0, cost: 1
  12: f209_0_main_LE -> f142_0_main_LE : arg2'=0, arg2 == 0, cost: 1
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
New rule:
__init -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg1P0 > 0 /\ arg1P7 > 0 /\ 1+arg2P7 > 0), cost: 2

Applied deletion
Removed the following rules: 0 7

Eliminated locations on linear paths
Start location: __init
   8: f142_0_main_LE -> f194_0_main_LE : arg2'=arg1, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1
   9: f142_0_main_LE -> f209_0_main_LE : (arg2-arg1 > 0 /\ arg1 > 0), cost: 1
  18: f142_0_main_LE -> f194_0_main_LE : arg2'=0, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1+arg1
  19: f142_0_main_LE -> f209_0_main_LE : arg2'=0, (arg2-arg1 > 0 /\ arg1 > 0), cost: 1+arg2
  10: f194_0_main_LE -> f142_0_main_LE : arg2'=arg1, arg1'=0, arg2 == 0, cost: 1
  12: f209_0_main_LE -> f142_0_main_LE : arg2'=0, arg2 == 0, cost: 1
  20: __init -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg1P0 > 0 /\ arg1P7 > 0 /\ 1+arg2P7 > 0), cost: 2


Eliminating location f194_0_main_LE by chaining:

Applied chaining
First rule:
f142_0_main_LE -> f194_0_main_LE : arg2'=0, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1+arg1
Second rule:
f194_0_main_LE -> f142_0_main_LE : arg2'=arg1, arg1'=0, arg2 == 0, cost: 1
New rule:
f142_0_main_LE -> f142_0_main_LE : arg2'=arg2, arg1'=0, (0 == 0 /\ arg2 > 0 /\ arg2-arg1 <= 0), cost: 2+arg1

Applied simplification
Original rule:
f142_0_main_LE -> f142_0_main_LE : arg2'=arg2, arg1'=0, (0 == 0 /\ arg2 > 0 /\ arg2-arg1 <= 0), cost: 2+arg1
New rule:
f142_0_main_LE -> f142_0_main_LE : arg2'=arg2, arg1'=0, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 2+arg1

Applied deletion
Removed the following rules: 8 10 18

Eliminating location f209_0_main_LE by chaining:

Applied chaining
First rule:
f142_0_main_LE -> f209_0_main_LE : arg2'=0, (arg2-arg1 > 0 /\ arg1 > 0), cost: 1+arg2
Second rule:
f209_0_main_LE -> f142_0_main_LE : arg2'=0, arg2 == 0, cost: 1
New rule:
f142_0_main_LE -> f142_0_main_LE : arg2'=0, (0 == 0 /\ arg2-arg1 > 0 /\ arg1 > 0), cost: 2+arg2

Applied simplification
Original rule:
f142_0_main_LE -> f142_0_main_LE : arg2'=0, (0 == 0 /\ arg2-arg1 > 0 /\ arg1 > 0), cost: 2+arg2
New rule:
f142_0_main_LE -> f142_0_main_LE : arg2'=0, (arg2-arg1 > 0 /\ arg1 > 0), cost: 2+arg2

Applied deletion
Removed the following rules: 9 12 19

Eliminated locations on tree-shaped paths
Start location: __init
  21: f142_0_main_LE -> f142_0_main_LE : arg2'=arg2, arg1'=0, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 2+arg1
  22: f142_0_main_LE -> f142_0_main_LE : arg2'=0, (arg2-arg1 > 0 /\ arg1 > 0), cost: 2+arg2
  20: __init -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg1P0 > 0 /\ arg1P7 > 0 /\ 1+arg2P7 > 0), cost: 2


Applied simplification
Original rule:
f142_0_main_LE -> f142_0_main_LE : arg2'=arg2, arg1'=0, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 2+arg1
New rule:
f142_0_main_LE -> f142_0_main_LE : arg1'=0, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 2+arg1

Simplified simple loops
Start location: __init
  22: f142_0_main_LE -> f142_0_main_LE : arg2'=0, (arg2-arg1 > 0 /\ arg1 > 0), cost: 2+arg2
  23: f142_0_main_LE -> f142_0_main_LE : arg1'=0, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 2+arg1
  20: __init -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg1P0 > 0 /\ arg1P7 > 0 /\ 1+arg2P7 > 0), cost: 2


Accelerated simple loops
Start location: __init
  22: f142_0_main_LE -> f142_0_main_LE : arg2'=0, (arg2-arg1 > 0 /\ arg1 > 0), cost: 2+arg2
  23: f142_0_main_LE -> f142_0_main_LE : arg1'=0, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 2+arg1
  20: __init -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg1P0 > 0 /\ arg1P7 > 0 /\ 1+arg2P7 > 0), cost: 2


Applied chaining
First rule:
__init -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg1P0 > 0 /\ arg1P7 > 0 /\ 1+arg2P7 > 0), cost: 2
Second rule:
f142_0_main_LE -> f142_0_main_LE : arg2'=0, (arg2-arg1 > 0 /\ arg1 > 0), cost: 2+arg2
New rule:
__init -> f142_0_main_LE : arg2'=0, arg1'=arg1P0, (arg2P0-arg1P0 > 0 /\ arg1P0 > 0), cost: 4+arg2P0

Applied chaining
First rule:
__init -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg1P0 > 0 /\ arg1P7 > 0 /\ 1+arg2P7 > 0), cost: 2
Second rule:
f142_0_main_LE -> f142_0_main_LE : arg1'=0, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 2+arg1
New rule:
__init -> f142_0_main_LE : arg2'=arg2P0, arg1'=0, (arg2P0 > 0 /\ arg2P0-arg1P0 <= 0), cost: 4+arg1P0

Applied deletion
Removed the following rules: 22 23

Chained accelerated rules with incoming rules
Start location: __init
  20: __init -> f142_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg1P0 > 0 /\ arg1P7 > 0 /\ 1+arg2P7 > 0), cost: 2
  24: __init -> f142_0_main_LE : arg2'=0, arg1'=arg1P0, (arg2P0-arg1P0 > 0 /\ arg1P0 > 0), cost: 4+arg2P0
  25: __init -> f142_0_main_LE : arg2'=arg2P0, arg1'=0, (arg2P0 > 0 /\ arg2P0-arg1P0 <= 0), cost: 4+arg1P0


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

