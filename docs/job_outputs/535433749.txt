NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P0 == 0), cost: 1
   1: f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P1, arg1'=arg1P1, (-2+arg1 > 0 /\ arg1-arg1P1 == 0 /\ arg1-5*x50 == 0), cost: 1
   3: f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P3, arg1'=arg1P3, (-2+arg1 > 0 /\ arg1-arg1P3 == 0 /\ -5*x90+arg1 > 0), cost: 1
   2: f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P2, arg1'=arg1P2, (-2+arg1 > 0 /\ -5+arg1-5*x70 < 0 /\ arg1-5*x70 >= 0 /\ arg1-5*x70 == 0 /\ -arg1P2+arg1 == 0), cost: 1
   4: f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P4, arg1'=arg1P4, (-2+arg1 > 0 /\ -1-arg1P4+arg1 == 0 /\ -5*x110+arg1 > 0 /\ -5-5*x110+arg1 < 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P1, arg1'=arg1P1, (-2+arg1 > 0 /\ arg1-arg1P1 == 0 /\ arg1-5*x50 == 0), cost: 1
New rule:
f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P1, (-2+arg1 > 0 /\ arg1-5*x50 == 0), cost: 1

Applied preprocessing
Original rule:
f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P2, arg1'=arg1P2, (-2+arg1 > 0 /\ -5+arg1-5*x70 < 0 /\ arg1-5*x70 >= 0 /\ arg1-5*x70 == 0 /\ -arg1P2+arg1 == 0), cost: 1
New rule:
f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0), cost: 1

Applied preprocessing
Original rule:
f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P3, arg1'=arg1P3, (-2+arg1 > 0 /\ arg1-arg1P3 == 0 /\ -5*x90+arg1 > 0), cost: 1
New rule:
f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P3, (-2+arg1 > 0 /\ -5*x90+arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P4, arg1'=arg1P4, (-2+arg1 > 0 /\ -1-arg1P4+arg1 == 0 /\ -5*x110+arg1 > 0 /\ -5-5*x110+arg1 < 0), cost: 1
New rule:
f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-1+arg1, (-2+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -5*x110+arg1 > 0), cost: 1

Simplified rules
Start location: __init
   6: f1_0_main_Load -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P1, (-2+arg1 > 0 /\ arg1-5*x50 == 0), cost: 1
   9: f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P3, (-2+arg1 > 0 /\ -5*x90+arg1 > 0), cost: 1
   8: f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0), cost: 1
  10: f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-1+arg1, (-2+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -5*x110+arg1 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
New rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2

Applied deletion
Removed the following rules: 5 6

Eliminated locations on linear paths
Start location: __init
   7: f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P1, (-2+arg1 > 0 /\ arg1-5*x50 == 0), cost: 1
   9: f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P3, (-2+arg1 > 0 /\ -5*x90+arg1 > 0), cost: 1
   8: f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0), cost: 1
  10: f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-1+arg1, (-2+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -5*x110+arg1 > 0), cost: 1
  11: __init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2


Eliminating location f49_0_loop_LE\' by chaining:

Applied chaining
First rule:
f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P1, (-2+arg1 > 0 /\ arg1-5*x50 == 0), cost: 1
Second rule:
f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0), cost: 1
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0), cost: 2

Applied chaining
First rule:
f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P3, (-2+arg1 > 0 /\ -5*x90+arg1 > 0), cost: 1
Second rule:
f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0), cost: 1
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 2

Applied chaining
First rule:
f49_0_loop_LE -> f49_0_loop_LE\' : arg2'=arg2P3, (-2+arg1 > 0 /\ -5*x90+arg1 > 0), cost: 1
Second rule:
f49_0_loop_LE\' -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-1+arg1, (-2+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -5*x110+arg1 > 0), cost: 1
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-1+arg1, (-2+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -5*x110+arg1 > 0 /\ -5*x90+arg1 > 0), cost: 2

Applied deletion
Removed the following rules: 7 8 9 10

Eliminated locations on tree-shaped paths
Start location: __init
  12: f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0), cost: 2
  13: f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 2
  14: f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-1+arg1, (-2+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -5*x110+arg1 > 0 /\ -5*x90+arg1 > 0), cost: 2
  11: __init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2


Applied nonterm
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0), cost: 2
New rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -1+n >= 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oimGPh.txt

Applied nonterm
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 2
New rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -1+n0 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cgPDjn.txt

Applied acceleration
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-1+arg1, (-2+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -5*x110+arg1 > 0 /\ -5*x90+arg1 > 0), cost: 2
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-n1+arg1, (-1-n1+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -1+n1 >= 0 /\ 1-5*x90-n1+arg1 > 0 /\ 1-5*x110-n1+arg1 > 0), cost: 2*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BiMfGg.txt

Applied instantiation
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-n1+arg1, (-1-n1+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -1+n1 >= 0 /\ 1-5*x90-n1+arg1 > 0 /\ 1-5*x110-n1+arg1 > 0), cost: 2*n1
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=2, (3-5*x110 > 0 /\ 1 > 0 /\ 3-5*x90 > 0 /\ -3+arg1 >= 0 /\ 5+5*x110-arg1 > 0), cost: -4+2*arg1

Applied instantiation
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-n1+arg1, (-1-n1+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -1+n1 >= 0 /\ 1-5*x90-n1+arg1 > 0 /\ 1-5*x110-n1+arg1 > 0), cost: 2*n1
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x110, (1 > 0 /\ -1+5*x110 > 0 /\ 5+5*x110-arg1 > 0 /\ 1+5*x110-5*x90 > 0 /\ -1-5*x110+arg1 >= 0), cost: -10*x110+2*arg1

Applied instantiation
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=-n1+arg1, (-1-n1+arg1 > 0 /\ 5+5*x110-arg1 > 0 /\ -1+n1 >= 0 /\ 1-5*x90-n1+arg1 > 0 /\ 1-5*x110-n1+arg1 > 0), cost: 2*n1
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x90, (1 > 0 /\ 1-5*x110+5*x90 > 0 /\ -1-5*x90+arg1 >= 0 /\ 5+5*x110-arg1 > 0 /\ -1+5*x90 > 0), cost: -10*x90+2*arg1

Applied chaining
First rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 2
Second rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0), cost: 2
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 4

Applied nonterm
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 4
New rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ -1+n4 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oHBmNa.txt

Applied chaining
First rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0), cost: 2
Second rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ -1+n4 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
New rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ -1+n4 >= 0 /\ arg1-5*x50 >= 0 /\ arg1-5*x50 == 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0), cost: 2
Second rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 2
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 4

Applied nonterm
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 4
New rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ -1+n5 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_Ngpjin.txt

Applied chaining
First rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P2, (-2+arg1 > 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: 2
Second rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ -1+n5 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
New rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ -1+n5 >= 0 /\ arg1-5*x70 >= 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM

Applied simplification
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=2, (3-5*x110 > 0 /\ 1 > 0 /\ 3-5*x90 > 0 /\ -3+arg1 >= 0 /\ 5+5*x110-arg1 > 0), cost: -4+2*arg1
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=2, (3-5*x110 > 0 /\ 3-5*x90 > 0 /\ -3+arg1 >= 0 /\ 5+5*x110-arg1 > 0), cost: -4+2*arg1

Applied simplification
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x110, (1 > 0 /\ -1+5*x110 > 0 /\ 5+5*x110-arg1 > 0 /\ 1+5*x110-5*x90 > 0 /\ -1-5*x110+arg1 >= 0), cost: -10*x110+2*arg1
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x110, (-1+5*x110 > 0 /\ 5+5*x110-arg1 > 0 /\ 1+5*x110-5*x90 > 0 /\ -1-5*x110+arg1 >= 0), cost: -10*x110+2*arg1

Applied simplification
Original rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x90, (1 > 0 /\ 1-5*x110+5*x90 > 0 /\ -1-5*x90+arg1 >= 0 /\ 5+5*x110-arg1 > 0 /\ -1+5*x90 > 0), cost: -10*x90+2*arg1
New rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x90, (1-5*x110+5*x90 > 0 /\ -1-5*x90+arg1 >= 0 /\ 5+5*x110-arg1 > 0 /\ -1+5*x90 > 0), cost: -10*x90+2*arg1

Applied simplification
Original rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ -1+n4 >= 0 /\ arg1-5*x50 >= 0 /\ arg1-5*x50 == 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM
New rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -1+n4 >= 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM

Applied simplification
Original rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ -1+n5 >= 0 /\ arg1-5*x70 >= 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM
New rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -1+n5 >= 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 12 13 14

Accelerated simple loops
Start location: __init
  15: f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -1+n >= 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0), cost: NONTERM
  16: f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -1+n0 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
  20: f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ -1+n4 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
  22: f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ -1+n5 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
  24: f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=2, (3-5*x110 > 0 /\ 3-5*x90 > 0 /\ -3+arg1 >= 0 /\ 5+5*x110-arg1 > 0), cost: -4+2*arg1
  25: f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x110, (-1+5*x110 > 0 /\ 5+5*x110-arg1 > 0 /\ 1+5*x110-5*x90 > 0 /\ -1-5*x110+arg1 >= 0), cost: -10*x110+2*arg1
  26: f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x90, (1-5*x110+5*x90 > 0 /\ -1-5*x90+arg1 >= 0 /\ 5+5*x110-arg1 > 0 /\ -1+5*x90 > 0), cost: -10*x90+2*arg1
  27: f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -1+n4 >= 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM
  28: f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -1+n5 >= 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM
  11: __init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2


Applied chaining
First rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
Second rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -1+n >= 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0), cost: NONTERM
New rule:
__init -> [4] : -2+5*x70 > 0, cost: NONTERM

Applied chaining
First rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
Second rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -1+n0 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
New rule:
__init -> [4] : (-2+5*x70 > 0 /\ -5*x90+5*x70 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
Second rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ -1+n4 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
New rule:
__init -> [4] : (-2+5*x70 > 0 /\ -5*x90+5*x70 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
Second rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -arg1+5*x70 >= 0 /\ -1+n5 >= 0 /\ arg1-5*x70 >= 0 /\ -5*x90+arg1 > 0), cost: NONTERM
New rule:
__init -> [4] : (-2+5*x70 > 0 /\ -5*x90+5*x70 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
Second rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=2, (3-5*x110 > 0 /\ 3-5*x90 > 0 /\ -3+arg1 >= 0 /\ 5+5*x110-arg1 > 0), cost: -4+2*arg1
New rule:
__init -> f49_0_loop_LE : arg2'=arg2P4, arg1'=2, (3-5*x110 > 0 /\ 3-5*x90 > 0 /\ -3+arg2P5 >= 0 /\ 5+5*x110-arg2P5 > 0), cost: -2+2*arg2P5

Applied chaining
First rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
Second rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x110, (-1+5*x110 > 0 /\ 5+5*x110-arg1 > 0 /\ 1+5*x110-5*x90 > 0 /\ -1-5*x110+arg1 >= 0), cost: -10*x110+2*arg1
New rule:
__init -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x110, (-1+5*x110 > 0 /\ 1+5*x110-5*x90 > 0 /\ -1-5*x110+arg2P5 >= 0 /\ 5+5*x110-arg2P5 > 0), cost: 2-10*x110+2*arg2P5

Applied chaining
First rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
Second rule:
f49_0_loop_LE -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x90, (1-5*x110+5*x90 > 0 /\ -1-5*x90+arg1 >= 0 /\ 5+5*x110-arg1 > 0 /\ -1+5*x90 > 0), cost: -10*x90+2*arg1
New rule:
__init -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x90, (1-5*x110+5*x90 > 0 /\ -1+5*x90 > 0 /\ -1-5*x90+arg2P5 >= 0 /\ 5+5*x110-arg2P5 > 0), cost: 2-10*x90+2*arg2P5

Applied chaining
First rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
Second rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -1+n4 >= 0 /\ arg1-5*x50 == 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM
New rule:
__init -> [4] : (-2+5*x70 > 0 /\ -5*x90+5*x70 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
Second rule:
f49_0_loop_LE -> [4] : (-2+arg1 > 0 /\ -arg1+5*x50 >= 0 /\ arg1-5*x50 >= 0 /\ -1+n5 >= 0 /\ arg1-5*x70 == 0 /\ -5*x90+arg1 > 0), cost: NONTERM
New rule:
__init -> [4] : (-2+5*x70 > 0 /\ -5*x90+5*x70 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 15 16 20 22 24 25 26 27 28

Chained accelerated rules with incoming rules
Start location: __init
  11: __init -> f49_0_loop_LE : arg2'=arg2P0, arg1'=arg2P5, (arg1P5 > 0 /\ 1+arg2P5 > 0), cost: 2
  29: __init -> [4] : -2+5*x70 > 0, cost: NONTERM
  30: __init -> [4] : (-2+5*x70 > 0 /\ -5*x90+5*x70 > 0), cost: NONTERM
  31: __init -> f49_0_loop_LE : arg2'=arg2P4, arg1'=2, (3-5*x110 > 0 /\ 3-5*x90 > 0 /\ -3+arg2P5 >= 0 /\ 5+5*x110-arg2P5 > 0), cost: -2+2*arg2P5
  32: __init -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x110, (-1+5*x110 > 0 /\ 1+5*x110-5*x90 > 0 /\ -1-5*x110+arg2P5 >= 0 /\ 5+5*x110-arg2P5 > 0), cost: 2-10*x110+2*arg2P5
  33: __init -> f49_0_loop_LE : arg2'=arg2P4, arg1'=5*x90, (1-5*x110+5*x90 > 0 /\ -1+5*x90 > 0 /\ -1-5*x90+arg2P5 >= 0 /\ 5+5*x110-arg2P5 > 0), cost: 2-10*x90+2*arg2P5


Removed unreachable locations and irrelevant leafs
Start location: __init
  29: __init -> [4] : -2+5*x70 > 0, cost: NONTERM
  30: __init -> [4] : (-2+5*x70 > 0 /\ -5*x90+5*x70 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 29 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  -2+5*x70 > 0
