NO

Initial ITS

Start location: l73
Program variables: __const_10000^0 __const_16^0 __const_2147483647^0 __const_256^0 __const_257^0 __const_429496^0 __const_50^0 __const_53^0 __const_65536^0 __const_8388607^0 __const_8^0 __const_9^0 apsim_bound11113^0 apsim_incnt^0 bits33^0 block_compress^0 bytes_out^0 c37^0 c7^0 checkpoint^0 clear_flg^0 code31^0 count^0 disp9^0 ent8^0 exit_stat^0 fcode5^0 free_ent^0 hshift11^0 hsize^0 hsize___019^0 hsize___027^0 hsize_reg10^0 i21^0 i29^0 i3^0 i41^0 i45^0 i6^0 in_count^0 incnt^0 m122^0 m130^0 maxbits^0 maxcode^0 maxmaxcode^0 n40^0 n44^0 n_bits^0 offset^0 out_count^0 r_off32^0 rat26^0 ratio^0 ret_getbyte18^0 ret_getbyte25^0 seed2^0 tabort4^0 tmp12^0 tmp___014^0 tmp___017^0 tmp___024^0 tmp___115^0
   0: l0 -> l1 : __const_10000^0'=__const_10000^post1, __const_16^0'=__const_16^post1, __const_2147483647^0'=__const_2147483647^post1, __const_256^0'=__const_256^post1, __const_257^0'=__const_257^post1, __const_429496^0'=__const_429496^post1, __const_50^0'=__const_50^post1, __const_53^0'=__const_53^post1, __const_65536^0'=__const_65536^post1, __const_8388607^0'=__const_8388607^post1, __const_8^0'=__const_8^post1, __const_9^0'=__const_9^post1, apsim_bound11113^0'=apsim_bound11113^post1, apsim_incnt^0'=apsim_incnt^post1, bits33^0'=bits33^post1, block_compress^0'=block_compress^post1, bytes_out^0'=bytes_out^post1, c37^0'=c37^post1, c7^0'=c7^post1, checkpoint^0'=checkpoint^post1, clear_flg^0'=clear_flg^post1, code31^0'=code31^post1, count^0'=count^post1, disp9^0'=disp9^post1, ent8^0'=ent8^post1, exit_stat^0'=exit_stat^post1, fcode5^0'=fcode5^post1, free_ent^0'=free_ent^post1, hshift11^0'=hshift11^post1, hsize^0'=hsize^post1, hsize___019^0'=hsize___019^post1, hsize___027^0'=hsize___027^post1, hsize_reg10^0'=hsize_reg10^post1, i21^0'=i21^post1, i29^0'=i29^post1, i3^0'=i3^post1, i41^0'=i41^post1, i45^0'=i45^post1, i6^0'=i6^post1, in_count^0'=in_count^post1, incnt^0'=incnt^post1, m122^0'=m122^post1, m130^0'=m130^post1, maxbits^0'=maxbits^post1, maxcode^0'=maxcode^post1, maxmaxcode^0'=maxmaxcode^post1, n40^0'=n40^post1, n44^0'=n44^post1, n_bits^0'=n_bits^post1, offset^0'=offset^post1, out_count^0'=out_count^post1, r_off32^0'=r_off32^post1, rat26^0'=rat26^post1, ratio^0'=ratio^post1, ret_getbyte18^0'=ret_getbyte18^post1, ret_getbyte25^0'=ret_getbyte25^post1, seed2^0'=seed2^post1, tabort4^0'=tabort4^post1, tmp12^0'=tmp12^post1, tmp___014^0'=tmp___014^post1, tmp___017^0'=tmp___017^post1, tmp___024^0'=tmp___024^post1, tmp___115^0'=tmp___115^post1, (-i29^post1+i29^0 == 0 /\ maxmaxcode^0-maxmaxcode^post1 == 0 /\ i6^0-i6^post1 == 0 /\ n44^0-n44^post1 == 0 /\ i3^0-i3^post1 == 0 /\ bytes_out^0-bytes_out^post1 == 0 /\ -__const_257^post1+__const_257^0 == 0 /\ -__const_16^post1+__const_16^0 == 0 /\ count^0-count^post1 == 0 /\ -__const_2147483647^post1+__const_2147483647^0 == 0 /\ apsim_incnt^0-apsim_incnt^post1 == 0 /\ m130^0-m130^post1 == 0 /\ -hsize_reg10^post1+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post1 == 0 /\ -hsize^post1+hsize^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post1 == 0 /\ c37^0-c37^post1 == 0 /\ -bits33^post1+bits33^0 == 0 /\ -hsize___019^post1+hsize___019^0 == 0 /\ -maxcode^post1+maxcode^0 == 0 /\ -i41^post1+i41^0 == 0 /\ -ent8^post1+ent8^0 == 0 /\ -seed2^post1+seed2^0 == 0 /\ hsize___027^0-hsize___027^post1 == 0 /\ -apsim_bound11113^post1+apsim_bound11113^0 == 0 /\ -i21^post1+i21^0 == 0 /\ -__const_65536^post1+__const_65536^0 == 0 /\ -incnt^post1+incnt^0 == 0 /\ tmp12^0-tmp12^post1 == 0 /\ exit_stat^0-exit_stat^post1 == 0 /\ fcode5^0-fcode5^post1 == 0 /\ __const_50^0-__const_50^post1 == 0 /\ rat26^0-rat26^post1 == 0 /\ -tmp___115^post1+tmp___115^0 == 0 /\ __const_10000^0-__const_10000^post1 == 0 /\ -block_compress^post1+block_compress^0 == 0 /\ tabort4^0-tabort4^post1 == 0 /\ ret_getbyte18^0-ret_getbyte18^post1 == 0 /\ -ratio^post1+ratio^0 == 0 /\ -clear_flg^post1+clear_flg^0 == 0 /\ i21^0 <= 0 /\ checkpoint^0-checkpoint^post1 == 0 /\ -in_count^post1+in_count^0 == 0 /\ r_off32^0-r_off32^post1 == 0 /\ __const_53^0-__const_53^post1 == 0 /\ tmp___017^0-tmp___017^post1 == 0 /\ -n_bits^post1+n_bits^0 == 0 /\ -c7^post1+c7^0 == 0 /\ -__const_8388607^post1+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post1 == 0 /\ out_count^0-out_count^post1 == 0 /\ __const_256^0-__const_256^post1 == 0 /\ -offset^post1+offset^0 == 0 /\ -__const_429496^post1+__const_429496^0 == 0 /\ -tmp___014^post1+tmp___014^0 == 0 /\ -maxbits^post1+maxbits^0 == 0 /\ -free_ent^post1+free_ent^0 == 0 /\ -code31^post1+code31^0 == 0 /\ -disp9^post1+disp9^0 == 0 /\ -i45^post1+i45^0 == 0 /\ -tmp___024^post1+tmp___024^0 == 0 /\ -m122^post1+m122^0 == 0 /\ -__const_9^post1+__const_9^0 == 0 /\ -n40^post1+n40^0 == 0), cost: 1
   1: l0 -> l2 : __const_10000^0'=__const_10000^post2, __const_16^0'=__const_16^post2, __const_2147483647^0'=__const_2147483647^post2, __const_256^0'=__const_256^post2, __const_257^0'=__const_257^post2, __const_429496^0'=__const_429496^post2, __const_50^0'=__const_50^post2, __const_53^0'=__const_53^post2, __const_65536^0'=__const_65536^post2, __const_8388607^0'=__const_8388607^post2, __const_8^0'=__const_8^post2, __const_9^0'=__const_9^post2, apsim_bound11113^0'=apsim_bound11113^post2, apsim_incnt^0'=apsim_incnt^post2, bits33^0'=bits33^post2, block_compress^0'=block_compress^post2, bytes_out^0'=bytes_out^post2, c37^0'=c37^post2, c7^0'=c7^post2, checkpoint^0'=checkpoint^post2, clear_flg^0'=clear_flg^post2, code31^0'=code31^post2, count^0'=count^post2, disp9^0'=disp9^post2, ent8^0'=ent8^post2, exit_stat^0'=exit_stat^post2, fcode5^0'=fcode5^post2, free_ent^0'=free_ent^post2, hshift11^0'=hshift11^post2, hsize^0'=hsize^post2, hsize___019^0'=hsize___019^post2, hsize___027^0'=hsize___027^post2, hsize_reg10^0'=hsize_reg10^post2, i21^0'=i21^post2, i29^0'=i29^post2, i3^0'=i3^post2, i41^0'=i41^post2, i45^0'=i45^post2, i6^0'=i6^post2, in_count^0'=in_count^post2, incnt^0'=incnt^post2, m122^0'=m122^post2, m130^0'=m130^post2, maxbits^0'=maxbits^post2, maxcode^0'=maxcode^post2, maxmaxcode^0'=maxmaxcode^post2, n40^0'=n40^post2, n44^0'=n44^post2, n_bits^0'=n_bits^post2, offset^0'=offset^post2, out_count^0'=out_count^post2, r_off32^0'=r_off32^post2, rat26^0'=rat26^post2, ratio^0'=ratio^post2, ret_getbyte18^0'=ret_getbyte18^post2, ret_getbyte25^0'=ret_getbyte25^post2, seed2^0'=seed2^post2, tabort4^0'=tabort4^post2, tmp12^0'=tmp12^post2, tmp___014^0'=tmp___014^post2, tmp___017^0'=tmp___017^post2, tmp___024^0'=tmp___024^post2, tmp___115^0'=tmp___115^post2, (i3^0-i3^post2 == 0 /\ -tabort4^post2+tabort4^0 == 0 /\ -seed2^post2+seed2^0 == 0 /\ -tmp___014^post2+tmp___014^0 == 0 /\ -code31^post2+code31^0 == 0 /\ maxmaxcode^0-maxmaxcode^post2 == 0 /\ offset^0-offset^post2 == 0 /\ bytes_out^0-bytes_out^post2 == 0 /\ n40^0-n40^post2 == 0 /\ -n_bits^post2+n_bits^0 == 0 /\ count^0-count^post2 == 0 /\ hsize___027^0-hsize___027^post2 == 0 /\ ret_getbyte25^0-ret_getbyte25^post2 == 0 /\ -ent8^post2+ent8^0 == 0 /\ disp9^0-disp9^post2 == 0 /\ -r_off32^post2+r_off32^0 == 0 /\ -tmp___024^post2+tmp___024^0 == 0 /\ -ratio^post2+ratio^0 == 0 /\ 1-i21^0+i21^post2 == 0 /\ -c37^post2+c37^0 == 0 /\ checkpoint^0-checkpoint^post2 == 0 /\ -__const_16^post2+__const_16^0 == 0 /\ -free_ent^post2+free_ent^0 == 0 /\ 1-i21^0 <= 0 /\ -__const_9^post2+__const_9^0 == 0 /\ -hsize___019^post2+hsize___019^0 == 0 /\ __const_10000^0-__const_10000^post2 == 0 /\ n44^0-n44^post2 == 0 /\ -block_compress^post2+block_compress^0 == 0 /\ -incnt^post2+incnt^0 == 0 /\ __const_53^0-__const_53^post2 == 0 /\ -i45^post2+i45^0 == 0 /\ hshift11^0-hshift11^post2 == 0 /\ -m122^post2+m122^0 == 0 /\ -bits33^post2+bits33^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post2 == 0 /\ apsim_incnt^0-apsim_incnt^post2 == 0 /\ tmp12^0-tmp12^post2 == 0 /\ tmp___115^0-tmp___115^post2 == 0 /\ rat26^0-rat26^post2 == 0 /\ -__const_429496^post2+__const_429496^0 == 0 /\ -__const_65536^post2+__const_65536^0 == 0 /\ -i29^post2+i29^0 == 0 /\ -maxbits^post2+maxbits^0 == 0 /\ -maxcode^post2+maxcode^0 == 0 /\ -i41^post2+i41^0 == 0 /\ m130^0-m130^post2 == 0 /\ -c7^post2+c7^0 == 0 /\ -clear_flg^post2+clear_flg^0 == 0 /\ __const_257^0-__const_257^post2 == 0 /\ fcode5^0-fcode5^post2 == 0 /\ -__const_2147483647^post2+__const_2147483647^0 == 0 /\ -in_count^post2+in_count^0 == 0 /\ -apsim_bound11113^post2+apsim_bound11113^0 == 0 /\ i6^0-i6^post2 == 0 /\ exit_stat^0-exit_stat^post2 == 0 /\ -__const_8388607^post2+__const_8388607^0 == 0 /\ out_count^0-out_count^post2 == 0 /\ __const_256^0-__const_256^post2 == 0 /\ -hsize^post2+hsize^0 == 0 /\ tmp___017^0-tmp___017^post2 == 0 /\ __const_50^0-__const_50^post2 == 0 /\ __const_8^0-__const_8^post2 == 0 /\ -hsize_reg10^post2+hsize_reg10^0 == 0), cost: 1
   5: l1 -> l5 : __const_10000^0'=__const_10000^post6, __const_16^0'=__const_16^post6, __const_2147483647^0'=__const_2147483647^post6, __const_256^0'=__const_256^post6, __const_257^0'=__const_257^post6, __const_429496^0'=__const_429496^post6, __const_50^0'=__const_50^post6, __const_53^0'=__const_53^post6, __const_65536^0'=__const_65536^post6, __const_8388607^0'=__const_8388607^post6, __const_8^0'=__const_8^post6, __const_9^0'=__const_9^post6, apsim_bound11113^0'=apsim_bound11113^post6, apsim_incnt^0'=apsim_incnt^post6, bits33^0'=bits33^post6, block_compress^0'=block_compress^post6, bytes_out^0'=bytes_out^post6, c37^0'=c37^post6, c7^0'=c7^post6, checkpoint^0'=checkpoint^post6, clear_flg^0'=clear_flg^post6, code31^0'=code31^post6, count^0'=count^post6, disp9^0'=disp9^post6, ent8^0'=ent8^post6, exit_stat^0'=exit_stat^post6, fcode5^0'=fcode5^post6, free_ent^0'=free_ent^post6, hshift11^0'=hshift11^post6, hsize^0'=hsize^post6, hsize___019^0'=hsize___019^post6, hsize___027^0'=hsize___027^post6, hsize_reg10^0'=hsize_reg10^post6, i21^0'=i21^post6, i29^0'=i29^post6, i3^0'=i3^post6, i41^0'=i41^post6, i45^0'=i45^post6, i6^0'=i6^post6, in_count^0'=in_count^post6, incnt^0'=incnt^post6, m122^0'=m122^post6, m130^0'=m130^post6, maxbits^0'=maxbits^post6, maxcode^0'=maxcode^post6, maxmaxcode^0'=maxmaxcode^post6, n40^0'=n40^post6, n44^0'=n44^post6, n_bits^0'=n_bits^post6, offset^0'=offset^post6, out_count^0'=out_count^post6, r_off32^0'=r_off32^post6, rat26^0'=rat26^post6, ratio^0'=ratio^post6, ret_getbyte18^0'=ret_getbyte18^post6, ret_getbyte25^0'=ret_getbyte25^post6, seed2^0'=seed2^post6, tabort4^0'=tabort4^post6, tmp12^0'=tmp12^post6, tmp___014^0'=tmp___014^post6, tmp___017^0'=tmp___017^post6, tmp___024^0'=tmp___024^post6, tmp___115^0'=tmp___115^post6, (-incnt^post6+incnt^0 == 0 /\ -n_bits^post6+n_bits^0 == 0 /\ i21^0-i21^post6 == 0 /\ -m122^post6+m122^0 == 0 /\ -n44^post6+n44^0 == 0 /\ -i45^post6+i45^0 == 0 /\ checkpoint^0-checkpoint^post6 == 0 /\ exit_stat^0-exit_stat^post6 == 0 /\ -__const_10000^post6+__const_10000^0 == 0 /\ hsize___027^0-hsize___027^post6 == 0 /\ -__const_65536^post6+__const_65536^0 == 0 /\ __const_8^0-__const_8^post6 == 0 /\ __const_50^0-__const_50^post6 == 0 /\ -__const_429496^post6+__const_429496^0 == 0 /\ -maxcode^post6+maxcode^0 == 0 /\ -i41^post6+i41^0 == 0 /\ tmp___014^0-tmp___014^post6 == 0 /\ -tmp___017^post6+tmp___017^0 == 0 /\ -clear_flg^post6+clear_flg^0 == 0 /\ -ent8^post6+ent8^0 == 0 /\ maxmaxcode^0-maxmaxcode^post6 == 0 /\ -ret_getbyte18^post6+ret_getbyte18^0 == 0 /\ -in_count^post6+in_count^0 == 0 /\ -apsim_bound11113^post6+apsim_bound11113^0 == 0 /\ n40^0-n40^post6 == 0 /\ count^0-count^post6 == 0 /\ -fcode5^post6+fcode5^0 == 0 /\ -__const_8388607^post6+__const_8388607^0 == 0 /\ out_count^0-out_count^post6 == 0 /\ -hsize^post6+hsize^0 == 0 /\ tmp12^0-tmp12^post6 == 0 /\ -block_compress^post6+block_compress^0 == 0 /\ -seed2^post6+seed2^0 == 0 /\ -i29^post6+i29^0 == 0 /\ -code31^post6+code31^0 == 0 /\ offset^0-offset^post6 == 0 /\ __const_257^0-__const_257^post6 == 0 /\ bytes_out^0-bytes_out^post6 == 0 /\ -tabort4^post6+tabort4^0 == 0 /\ __const_9^0-__const_9^post6 == 0 /\ maxbits^0-maxbits^post6 == 0 /\ __const_16^0-__const_16^post6 == 0 /\ i6^0-i6^post6 == 0 /\ __const_256^0-__const_256^post6 == 0 /\ bits33^0-bits33^post6 == 0 /\ -r_off32^post6+r_off32^0 == 0 /\ -disp9^post6+disp9^0 == 0 /\ c37^0-c37^post6 == 0 /\ __const_53^0-__const_53^post6 == 0 /\ i3^0-i3^post6 == 0 /\ hsize___019^0-hsize___019^post6 == 0 /\ -tmp___024^post6+tmp___024^0 == 0 /\ -ratio^post6+ratio^0 == 0 /\ apsim_incnt^0-apsim_incnt^post6 == 0 /\ hshift11^0-hshift11^post6 == 0 /\ -free_ent^post6+free_ent^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post6 == 0 /\ -hsize_reg10^post6+hsize_reg10^0 == 0 /\ tmp___115^0-tmp___115^post6 == 0 /\ rat26^0-rat26^post6 == 0 /\ __const_2147483647^0-__const_2147483647^post6 == 0 /\ -c7^post6+c7^0 == 0 /\ m130^0-m130^post6 == 0), cost: 1
   2: l2 -> l0 : __const_10000^0'=__const_10000^post3, __const_16^0'=__const_16^post3, __const_2147483647^0'=__const_2147483647^post3, __const_256^0'=__const_256^post3, __const_257^0'=__const_257^post3, __const_429496^0'=__const_429496^post3, __const_50^0'=__const_50^post3, __const_53^0'=__const_53^post3, __const_65536^0'=__const_65536^post3, __const_8388607^0'=__const_8388607^post3, __const_8^0'=__const_8^post3, __const_9^0'=__const_9^post3, apsim_bound11113^0'=apsim_bound11113^post3, apsim_incnt^0'=apsim_incnt^post3, bits33^0'=bits33^post3, block_compress^0'=block_compress^post3, bytes_out^0'=bytes_out^post3, c37^0'=c37^post3, c7^0'=c7^post3, checkpoint^0'=checkpoint^post3, clear_flg^0'=clear_flg^post3, code31^0'=code31^post3, count^0'=count^post3, disp9^0'=disp9^post3, ent8^0'=ent8^post3, exit_stat^0'=exit_stat^post3, fcode5^0'=fcode5^post3, free_ent^0'=free_ent^post3, hshift11^0'=hshift11^post3, hsize^0'=hsize^post3, hsize___019^0'=hsize___019^post3, hsize___027^0'=hsize___027^post3, hsize_reg10^0'=hsize_reg10^post3, i21^0'=i21^post3, i29^0'=i29^post3, i3^0'=i3^post3, i41^0'=i41^post3, i45^0'=i45^post3, i6^0'=i6^post3, in_count^0'=in_count^post3, incnt^0'=incnt^post3, m122^0'=m122^post3, m130^0'=m130^post3, maxbits^0'=maxbits^post3, maxcode^0'=maxcode^post3, maxmaxcode^0'=maxmaxcode^post3, n40^0'=n40^post3, n44^0'=n44^post3, n_bits^0'=n_bits^post3, offset^0'=offset^post3, out_count^0'=out_count^post3, r_off32^0'=r_off32^post3, rat26^0'=rat26^post3, ratio^0'=ratio^post3, ret_getbyte18^0'=ret_getbyte18^post3, ret_getbyte25^0'=ret_getbyte25^post3, seed2^0'=seed2^post3, tabort4^0'=tabort4^post3, tmp12^0'=tmp12^post3, tmp___014^0'=tmp___014^post3, tmp___017^0'=tmp___017^post3, tmp___024^0'=tmp___024^post3, tmp___115^0'=tmp___115^post3, (i6^0-i6^post3 == 0 /\ __const_257^0-__const_257^post3 == 0 /\ -incnt^post3+incnt^0 == 0 /\ n44^0-n44^post3 == 0 /\ -bits33^post3+bits33^0 == 0 /\ -m122^post3+m122^0 == 0 /\ -__const_9^post3+__const_9^0 == 0 /\ -__const_65536^post3+__const_65536^0 == 0 /\ -__const_53^post3+__const_53^0 == 0 /\ __const_256^0-__const_256^post3 == 0 /\ -__const_429496^post3+__const_429496^0 == 0 /\ -i29^post3+i29^0 == 0 /\ maxcode^0-maxcode^post3 == 0 /\ -n40^post3+n40^0 == 0 /\ -maxbits^post3+maxbits^0 == 0 /\ -i41^post3+i41^0 == 0 /\ -i45^post3+i45^0 == 0 /\ -tmp___115^post3+tmp___115^0 == 0 /\ -i21^post3+i21^0 == 0 /\ bytes_out^0-bytes_out^post3 == 0 /\ i3^0-i3^post3 == 0 /\ -c7^post3+c7^0 == 0 /\ hshift11^0-hshift11^post3 == 0 /\ -clear_flg^post3+clear_flg^0 == 0 /\ apsim_incnt^0-apsim_incnt^post3 == 0 /\ tmp___017^0-tmp___017^post3 == 0 /\ -apsim_bound11113^post3+apsim_bound11113^0 == 0 /\ -in_count^post3+in_count^0 == 0 /\ c37^0-c37^post3 == 0 /\ -__const_8388607^post3+__const_8388607^0 == 0 /\ -block_compress^post3+block_compress^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post3 == 0 /\ -__const_2147483647^post3+__const_2147483647^0 == 0 /\ m130^0-m130^post3 == 0 /\ -hsize_reg10^post3+hsize_reg10^0 == 0 /\ -hsize^post3+hsize^0 == 0 /\ fcode5^0-fcode5^post3 == 0 /\ -rat26^post3+rat26^0 == 0 /\ -offset^post3+offset^0 == 0 /\ -tmp___014^post3+tmp___014^0 == 0 /\ checkpoint^0-checkpoint^post3 == 0 /\ __const_8^0-__const_8^post3 == 0 /\ -code31^post3+code31^0 == 0 /\ -seed2^post3+seed2^0 == 0 /\ r_off32^0-r_off32^post3 == 0 /\ tabort4^0-tabort4^post3 == 0 /\ hsize___027^0-hsize___027^post3 == 0 /\ out_count^0-out_count^post3 == 0 /\ exit_stat^0-exit_stat^post3 == 0 /\ __const_50^0-__const_50^post3 == 0 /\ __const_10000^0-__const_10000^post3 == 0 /\ -disp9^post3+disp9^0 == 0 /\ -ent8^post3+ent8^0 == 0 /\ -tmp___024^post3+tmp___024^0 == 0 /\ -ratio^post3+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post3 == 0 /\ -free_ent^post3+free_ent^0 == 0 /\ count^0-count^post3 == 0 /\ ret_getbyte18^0-ret_getbyte18^post3 == 0 /\ n_bits^0-n_bits^post3 == 0 /\ tmp12^0-tmp12^post3 == 0 /\ -__const_16^post3+__const_16^0 == 0 /\ -hsize___019^post3+hsize___019^0 == 0), cost: 1
   3: l3 -> l2 : __const_10000^0'=__const_10000^post4, __const_16^0'=__const_16^post4, __const_2147483647^0'=__const_2147483647^post4, __const_256^0'=__const_256^post4, __const_257^0'=__const_257^post4, __const_429496^0'=__const_429496^post4, __const_50^0'=__const_50^post4, __const_53^0'=__const_53^post4, __const_65536^0'=__const_65536^post4, __const_8388607^0'=__const_8388607^post4, __const_8^0'=__const_8^post4, __const_9^0'=__const_9^post4, apsim_bound11113^0'=apsim_bound11113^post4, apsim_incnt^0'=apsim_incnt^post4, bits33^0'=bits33^post4, block_compress^0'=block_compress^post4, bytes_out^0'=bytes_out^post4, c37^0'=c37^post4, c7^0'=c7^post4, checkpoint^0'=checkpoint^post4, clear_flg^0'=clear_flg^post4, code31^0'=code31^post4, count^0'=count^post4, disp9^0'=disp9^post4, ent8^0'=ent8^post4, exit_stat^0'=exit_stat^post4, fcode5^0'=fcode5^post4, free_ent^0'=free_ent^post4, hshift11^0'=hshift11^post4, hsize^0'=hsize^post4, hsize___019^0'=hsize___019^post4, hsize___027^0'=hsize___027^post4, hsize_reg10^0'=hsize_reg10^post4, i21^0'=i21^post4, i29^0'=i29^post4, i3^0'=i3^post4, i41^0'=i41^post4, i45^0'=i45^post4, i6^0'=i6^post4, in_count^0'=in_count^post4, incnt^0'=incnt^post4, m122^0'=m122^post4, m130^0'=m130^post4, maxbits^0'=maxbits^post4, maxcode^0'=maxcode^post4, maxmaxcode^0'=maxmaxcode^post4, n40^0'=n40^post4, n44^0'=n44^post4, n_bits^0'=n_bits^post4, offset^0'=offset^post4, out_count^0'=out_count^post4, r_off32^0'=r_off32^post4, rat26^0'=rat26^post4, ratio^0'=ratio^post4, ret_getbyte18^0'=ret_getbyte18^post4, ret_getbyte25^0'=ret_getbyte25^post4, seed2^0'=seed2^post4, tabort4^0'=tabort4^post4, tmp12^0'=tmp12^post4, tmp___014^0'=tmp___014^post4, tmp___017^0'=tmp___017^post4, tmp___024^0'=tmp___024^post4, tmp___115^0'=tmp___115^post4, (-__const_257^post4+__const_257^0 == 0 /\ -block_compress^post4+block_compress^0 == 0 /\ -__const_2147483647^post4+__const_2147483647^0 == 0 /\ -__const_16^post4+__const_16^0 == 0 /\ count^0-count^post4 == 0 /\ -free_ent^post4+free_ent^0 == 0 /\ -tmp___024^post4+tmp___024^0 == 0 /\ maxmaxcode^0-maxmaxcode^post4 == 0 /\ -tmp___115^post4+tmp___115^0 == 0 /\ -ent8^post4+ent8^0 == 0 /\ -__const_16^0-i21^0+i21^post4 == 0 /\ disp9^0-disp9^post4 == 0 /\ -seed2^post4+seed2^0 == 0 /\ n40^0-n40^post4 == 0 /\ -tmp___014^post4+tmp___014^0 == 0 /\ i6^0-i6^post4 == 0 /\ ret_getbyte25^0-ret_getbyte25^post4 == 0 /\ i3^0-i3^post4 == 0 /\ -code31^post4+code31^0 == 0 /\ checkpoint^0-checkpoint^post4 == 0 /\ tabort4^0-tabort4^post4 == 0 /\ c37^0-c37^post4 == 0 /\ -i29^post4+i29^0 == 0 /\ -i41^post4+i41^0 == 0 /\ -incnt^post4+incnt^0 == 0 /\ n44^0-n44^post4 == 0 /\ hsize___027^0-hsize___027^post4 == 0 /\ hshift11^0-hshift11^post4 == 0 /\ apsim_incnt^0-apsim_incnt^post4 == 0 /\ -__const_429496^post4+__const_429496^0 == 0 /\ -apsim_bound11113^post4+apsim_bound11113^0 == 0 /\ -in_count^post4+in_count^0 == 0 /\ rat26^0-rat26^post4 == 0 /\ -maxbits^post4+maxbits^0 == 0 /\ -maxcode^post4+maxcode^0 == 0 /\ -__const_9^post4+__const_9^0 == 0 /\ tmp___017^0-tmp___017^post4 == 0 /\ -hsize^post4+hsize^0 == 0 /\ -hsize_reg10^post4+hsize_reg10^0 == 0 /\ -hsize___019^post4+hsize___019^0 == 0 /\ -c7^post4+c7^0 == 0 /\ 1+i21^0 <= 0 /\ -__const_65536^post4+__const_65536^0 == 0 /\ __const_53^0-__const_53^post4 == 0 /\ -ratio^post4+ratio^0 == 0 /\ m130^0-m130^post4 == 0 /\ fcode5^0-fcode5^post4 == 0 /\ r_off32^0-r_off32^post4 == 0 /\ -__const_10000^post4+__const_10000^0 == 0 /\ tmp12^0-tmp12^post4 == 0 /\ ret_getbyte18^0-ret_getbyte18^post4 == 0 /\ -m122^post4+m122^0 == 0 /\ __const_8^0-__const_8^post4 == 0 /\ __const_256^0-__const_256^post4 == 0 /\ -__const_8388607^post4+__const_8388607^0 == 0 /\ -n_bits^post4+n_bits^0 == 0 /\ out_count^0-out_count^post4 == 0 /\ -i45^post4+i45^0 == 0 /\ -clear_flg^post4+clear_flg^0 == 0 /\ __const_50^0-__const_50^post4 == 0 /\ exit_stat^0-exit_stat^post4 == 0 /\ bytes_out^0-bytes_out^post4 == 0 /\ -bits33^post4+bits33^0 == 0 /\ -offset^post4+offset^0 == 0), cost: 1
   4: l3 -> l4 : __const_10000^0'=__const_10000^post5, __const_16^0'=__const_16^post5, __const_2147483647^0'=__const_2147483647^post5, __const_256^0'=__const_256^post5, __const_257^0'=__const_257^post5, __const_429496^0'=__const_429496^post5, __const_50^0'=__const_50^post5, __const_53^0'=__const_53^post5, __const_65536^0'=__const_65536^post5, __const_8388607^0'=__const_8388607^post5, __const_8^0'=__const_8^post5, __const_9^0'=__const_9^post5, apsim_bound11113^0'=apsim_bound11113^post5, apsim_incnt^0'=apsim_incnt^post5, bits33^0'=bits33^post5, block_compress^0'=block_compress^post5, bytes_out^0'=bytes_out^post5, c37^0'=c37^post5, c7^0'=c7^post5, checkpoint^0'=checkpoint^post5, clear_flg^0'=clear_flg^post5, code31^0'=code31^post5, count^0'=count^post5, disp9^0'=disp9^post5, ent8^0'=ent8^post5, exit_stat^0'=exit_stat^post5, fcode5^0'=fcode5^post5, free_ent^0'=free_ent^post5, hshift11^0'=hshift11^post5, hsize^0'=hsize^post5, hsize___019^0'=hsize___019^post5, hsize___027^0'=hsize___027^post5, hsize_reg10^0'=hsize_reg10^post5, i21^0'=i21^post5, i29^0'=i29^post5, i3^0'=i3^post5, i41^0'=i41^post5, i45^0'=i45^post5, i6^0'=i6^post5, in_count^0'=in_count^post5, incnt^0'=incnt^post5, m122^0'=m122^post5, m130^0'=m130^post5, maxbits^0'=maxbits^post5, maxcode^0'=maxcode^post5, maxmaxcode^0'=maxmaxcode^post5, n40^0'=n40^post5, n44^0'=n44^post5, n_bits^0'=n_bits^post5, offset^0'=offset^post5, out_count^0'=out_count^post5, r_off32^0'=r_off32^post5, rat26^0'=rat26^post5, ratio^0'=ratio^post5, ret_getbyte18^0'=ret_getbyte18^post5, ret_getbyte25^0'=ret_getbyte25^post5, seed2^0'=seed2^post5, tabort4^0'=tabort4^post5, tmp12^0'=tmp12^post5, tmp___014^0'=tmp___014^post5, tmp___017^0'=tmp___017^post5, tmp___024^0'=tmp___024^post5, tmp___115^0'=tmp___115^post5, (hsize___027^0-hsize___027^post5 == 0 /\ out_count^0-out_count^post5 == 0 /\ n40^0-n40^post5 == 0 /\ ret_getbyte25^0-ret_getbyte25^post5 == 0 /\ -in_count^post5+in_count^0 == 0 /\ i21^0-i21^post5 == 0 /\ -ratio^post5+ratio^0 == 0 /\ -ret_getbyte18^post5+ret_getbyte18^0 == 0 /\ -__const_8388607^post5+__const_8388607^0 == 0 /\ -hsize_reg10^post5+hsize_reg10^0 == 0 /\ -c7^post5+c7^0 == 0 /\ clear_flg^0-clear_flg^post5 == 0 /\ tmp12^0-tmp12^post5 == 0 /\ -hsize___019^post5+hsize___019^0 == 0 /\ -tabort4^post5+tabort4^0 == 0 /\ -r_off32^post5+r_off32^0 == 0 /\ -__const_429496^post5+__const_429496^0 == 0 /\ offset^0-offset^post5 == 0 /\ -tmp___014^post5+tmp___014^0 == 0 /\ -i21^0 <= 0 /\ -m122^post5+m122^0 == 0 /\ maxmaxcode^0-maxmaxcode^post5 == 0 /\ -disp9^post5+disp9^0 == 0 /\ -i45^post5+i45^0 == 0 /\ -code31^post5+code31^0 == 0 /\ -free_ent^post5+free_ent^0 == 0 /\ checkpoint^0-checkpoint^post5 == 0 /\ -tmp___024^post5+tmp___024^0 == 0 /\ count^0-count^post5 == 0 /\ -__const_9^post5+__const_9^0 == 0 /\ -__const_10000^post5+__const_10000^0 == 0 /\ apsim_incnt^0-apsim_incnt^post5 == 0 /\ m130^0-m130^post5 == 0 /\ hshift11^0-hshift11^post5 == 0 /\ __const_256^0-__const_256^post5 == 0 /\ -bits33^post5+bits33^0 == 0 /\ n44^0-n44^post5 == 0 /\ bytes_out^0-bytes_out^post5 == 0 /\ tmp___115^0-tmp___115^post5 == 0 /\ -n_bits^post5+n_bits^0 == 0 /\ -__const_2147483647^post5+__const_2147483647^0 == 0 /\ maxbits^0-maxbits^post5 == 0 /\ exit_stat^0-exit_stat^post5 == 0 /\ -hsize^post5+hsize^0 == 0 /\ c37^0-c37^post5 == 0 /\ -block_compress^post5+block_compress^0 == 0 /\ rat26^0-rat26^post5 == 0 /\ __const_50^0-__const_50^post5 == 0 /\ fcode5^0-fcode5^post5 == 0 /\ -maxcode^post5+maxcode^0 == 0 /\ -ent8^post5+ent8^0 == 0 /\ -i41^post5+i41^0 == 0 /\ -i29^post5+i29^0 == 0 /\ -seed2^post5+seed2^0 == 0 /\ i6^0-i6^post5 == 0 /\ -apsim_bound11113^post5+apsim_bound11113^0 == 0 /\ __const_53^0-__const_53^post5 == 0 /\ i3^0-i3^post5 == 0 /\ tmp___017^0-tmp___017^post5 == 0 /\ -__const_65536^post5+__const_65536^0 == 0 /\ __const_16^0-__const_16^post5 == 0 /\ -incnt^post5+incnt^0 == 0 /\ __const_8^0-__const_8^post5 == 0 /\ __const_257^0-__const_257^post5 == 0), cost: 1
 122: l4 -> l3 : __const_10000^0'=__const_10000^post123, __const_16^0'=__const_16^post123, __const_2147483647^0'=__const_2147483647^post123, __const_256^0'=__const_256^post123, __const_257^0'=__const_257^post123, __const_429496^0'=__const_429496^post123, __const_50^0'=__const_50^post123, __const_53^0'=__const_53^post123, __const_65536^0'=__const_65536^post123, __const_8388607^0'=__const_8388607^post123, __const_8^0'=__const_8^post123, __const_9^0'=__const_9^post123, apsim_bound11113^0'=apsim_bound11113^post123, apsim_incnt^0'=apsim_incnt^post123, bits33^0'=bits33^post123, block_compress^0'=block_compress^post123, bytes_out^0'=bytes_out^post123, c37^0'=c37^post123, c7^0'=c7^post123, checkpoint^0'=checkpoint^post123, clear_flg^0'=clear_flg^post123, code31^0'=code31^post123, count^0'=count^post123, disp9^0'=disp9^post123, ent8^0'=ent8^post123, exit_stat^0'=exit_stat^post123, fcode5^0'=fcode5^post123, free_ent^0'=free_ent^post123, hshift11^0'=hshift11^post123, hsize^0'=hsize^post123, hsize___019^0'=hsize___019^post123, hsize___027^0'=hsize___027^post123, hsize_reg10^0'=hsize_reg10^post123, i21^0'=i21^post123, i29^0'=i29^post123, i3^0'=i3^post123, i41^0'=i41^post123, i45^0'=i45^post123, i6^0'=i6^post123, in_count^0'=in_count^post123, incnt^0'=incnt^post123, m122^0'=m122^post123, m130^0'=m130^post123, maxbits^0'=maxbits^post123, maxcode^0'=maxcode^post123, maxmaxcode^0'=maxmaxcode^post123, n40^0'=n40^post123, n44^0'=n44^post123, n_bits^0'=n_bits^post123, offset^0'=offset^post123, out_count^0'=out_count^post123, r_off32^0'=r_off32^post123, rat26^0'=rat26^post123, ratio^0'=ratio^post123, ret_getbyte18^0'=ret_getbyte18^post123, ret_getbyte25^0'=ret_getbyte25^post123, seed2^0'=seed2^post123, tabort4^0'=tabort4^post123, tmp12^0'=tmp12^post123, tmp___014^0'=tmp___014^post123, tmp___017^0'=tmp___017^post123, tmp___024^0'=tmp___024^post123, tmp___115^0'=tmp___115^post123, (offset^0-offset^post123 == 0 /\ -hsize_reg10^post123+hsize_reg10^0 == 0 /\ n44^0-n44^post123 == 0 /\ i3^0-i3^post123 == 0 /\ bytes_out^0-bytes_out^post123 == 0 /\ -incnt^post123+incnt^0 == 0 /\ tmp12^0-tmp12^post123 == 0 /\ hsize___027^0-hsize___027^post123 == 0 /\ count^0-count^post123 == 0 /\ -r_off32^post123+r_off32^0 == 0 /\ -bits33^post123+bits33^0 == 0 /\ -hsize___019^post123+hsize___019^0 == 0 /\ -hsize^post123+hsize^0 == 0 /\ -m122^post123+m122^0 == 0 /\ -apsim_bound11113^post123+apsim_bound11113^0 == 0 /\ -__const_9^post123+__const_9^0 == 0 /\ -code31^post123+code31^0 == 0 /\ -maxbits^post123+maxbits^0 == 0 /\ tabort4^0-tabort4^post123 == 0 /\ __const_16^0-i21^0+i21^post123 == 0 /\ tmp___017^0-tmp___017^post123 == 0 /\ ret_getbyte25^0-ret_getbyte25^post123 == 0 /\ exit_stat^0-exit_stat^post123 == 0 /\ c37^0-c37^post123 == 0 /\ disp9^0-disp9^post123 == 0 /\ -__const_65536^post123+__const_65536^0 == 0 /\ maxcode^0-maxcode^post123 == 0 /\ -n40^post123+n40^0 == 0 /\ checkpoint^0-checkpoint^post123 == 0 /\ apsim_incnt^0-apsim_incnt^post123 == 0 /\ -tmp___115^post123+tmp___115^0 == 0 /\ -i29^post123+i29^0 == 0 /\ -block_compress^post123+block_compress^0 == 0 /\ -ratio^post123+ratio^0 == 0 /\ -__const_8388607^post123+__const_8388607^0 == 0 /\ -__const_16^post123+__const_16^0 == 0 /\ -n_bits^post123+n_bits^0 == 0 /\ m130^0-m130^post123 == 0 /\ -seed2^post123+seed2^0 == 0 /\ __const_10000^0-__const_10000^post123 == 0 /\ ret_getbyte18^0-ret_getbyte18^post123 == 0 /\ __const_53^0-__const_53^post123 == 0 /\ -ent8^post123+ent8^0 == 0 /\ __const_8^0-__const_8^post123 == 0 /\ -__const_429496^post123+__const_429496^0 == 0 /\ hshift11^0-hshift11^post123 == 0 /\ -i45^post123+i45^0 == 0 /\ -i41^post123+i41^0 == 0 /\ -free_ent^post123+free_ent^0 == 0 /\ rat26^0-rat26^post123 == 0 /\ i6^0-i6^post123 == 0 /\ maxmaxcode^0-maxmaxcode^post123 == 0 /\ -tmp___024^post123+tmp___024^0 == 0 /\ __const_257^0-__const_257^post123 == 0 /\ out_count^0-out_count^post123 == 0 /\ -clear_flg^post123+clear_flg^0 == 0 /\ -in_count^post123+in_count^0 == 0 /\ __const_256^0-__const_256^post123 == 0 /\ fcode5^0-fcode5^post123 == 0 /\ -tmp___014^post123+tmp___014^0 == 0 /\ __const_50^0-__const_50^post123 == 0 /\ -__const_2147483647^post123+__const_2147483647^0 == 0 /\ -c7^post123+c7^0 == 0), cost: 1
 120: l5 -> l25 : __const_10000^0'=__const_10000^post121, __const_16^0'=__const_16^post121, __const_2147483647^0'=__const_2147483647^post121, __const_256^0'=__const_256^post121, __const_257^0'=__const_257^post121, __const_429496^0'=__const_429496^post121, __const_50^0'=__const_50^post121, __const_53^0'=__const_53^post121, __const_65536^0'=__const_65536^post121, __const_8388607^0'=__const_8388607^post121, __const_8^0'=__const_8^post121, __const_9^0'=__const_9^post121, apsim_bound11113^0'=apsim_bound11113^post121, apsim_incnt^0'=apsim_incnt^post121, bits33^0'=bits33^post121, block_compress^0'=block_compress^post121, bytes_out^0'=bytes_out^post121, c37^0'=c37^post121, c7^0'=c7^post121, checkpoint^0'=checkpoint^post121, clear_flg^0'=clear_flg^post121, code31^0'=code31^post121, count^0'=count^post121, disp9^0'=disp9^post121, ent8^0'=ent8^post121, exit_stat^0'=exit_stat^post121, fcode5^0'=fcode5^post121, free_ent^0'=free_ent^post121, hshift11^0'=hshift11^post121, hsize^0'=hsize^post121, hsize___019^0'=hsize___019^post121, hsize___027^0'=hsize___027^post121, hsize_reg10^0'=hsize_reg10^post121, i21^0'=i21^post121, i29^0'=i29^post121, i3^0'=i3^post121, i41^0'=i41^post121, i45^0'=i45^post121, i6^0'=i6^post121, in_count^0'=in_count^post121, incnt^0'=incnt^post121, m122^0'=m122^post121, m130^0'=m130^post121, maxbits^0'=maxbits^post121, maxcode^0'=maxcode^post121, maxmaxcode^0'=maxmaxcode^post121, n40^0'=n40^post121, n44^0'=n44^post121, n_bits^0'=n_bits^post121, offset^0'=offset^post121, out_count^0'=out_count^post121, r_off32^0'=r_off32^post121, rat26^0'=rat26^post121, ratio^0'=ratio^post121, ret_getbyte18^0'=ret_getbyte18^post121, ret_getbyte25^0'=ret_getbyte25^post121, seed2^0'=seed2^post121, tabort4^0'=tabort4^post121, tmp12^0'=tmp12^post121, tmp___014^0'=tmp___014^post121, tmp___017^0'=tmp___017^post121, tmp___024^0'=tmp___024^post121, tmp___115^0'=tmp___115^post121, (-i21^post121+i21^0 == 0 /\ -c7^post121+c7^0 == 0 /\ __const_50^0-__const_50^post121 == 0 /\ __const_256^0-__const_256^post121 == 0 /\ -clear_flg^post121+clear_flg^0 == 0 /\ __const_53^0-__const_53^post121 == 0 /\ -tmp___014^post121+tmp___014^0 == 0 /\ -tmp___024^post121+tmp___024^0 == 0 /\ -seed2^post121+seed2^0 == 0 /\ -tmp___115^post121+tmp___115^0 == 0 /\ -block_compress^post121+block_compress^0 == 0 /\ count^0-count^post121 == 0 /\ -ratio^post121+ratio^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post121 == 0 /\ tabort4^0-tabort4^post121 == 0 /\ -offset^post121+offset^0 == 0 /\ m122^0-m122^post121 == 0 /\ hsize___027^0-hsize___027^post121 == 0 /\ -apsim_incnt^post121+apsim_incnt^0 == 0 /\ hshift11^0-hshift11^post121 == 0 /\ -hsize^post121+hsize^0 == 0 /\ -code31^post121+code31^0 == 0 /\ -incnt^post121+incnt^0 == 0 /\ __const_257^0-__const_257^post121 == 0 /\ -ent8^post121+ent8^0 == 0 /\ -__const_429496^post121+__const_429496^0 == 0 /\ bytes_out^0-bytes_out^post121 == 0 /\ i3^0-i3^post121 == 0 /\ -__const_65536^post121+__const_65536^0 == 0 /\ -m130^post121+m130^0 == 0 /\ -i45^post121+i45^0 == 0 /\ r_off32^0-r_off32^post121 == 0 /\ out_count^0-out_count^post121 == 0 /\ exit_stat^0-exit_stat^post121 == 0 /\ -n40^post121+n40^0 == 0 /\ maxmaxcode^0-maxmaxcode^post121 == 0 /\ -in_count^post121+in_count^0 == 0 /\ -__const_9^post121+__const_9^0 == 0 /\ maxcode^0-maxcode^post121 == 0 /\ tmp___017^0-tmp___017^post121 == 0 /\ apsim_bound11113^0-apsim_bound11113^post121 == 0 /\ fcode5^0-fcode5^post121 == 0 /\ c37^0-c37^post121 == 0 /\ -__const_2147483647^post121+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post121 == 0 /\ -hsize_reg10^post121+hsize_reg10^0 == 0 /\ i6^0-i6^post121 == 0 /\ -rat26^post121+rat26^0 == 0 /\ -hsize___019^post121+hsize___019^0 == 0 /\ __const_16^0-__const_16^post121 == 0 /\ bits33^0-bits33^post121 == 0 /\ __const_10000^0-__const_10000^post121 == 0 /\ n44^0-n44^post121 == 0 /\ -__const_8^post121+__const_8^0 == 0 /\ -__const_8388607^post121+__const_8388607^0 == 0 /\ -disp9^post121+disp9^0 == 0 /\ -free_ent^post121+free_ent^0 == 0 /\ -ret_getbyte18^post121+ret_getbyte18^0 == 0 /\ -i29^post121+i29^0 == 0 /\ -i41^post121+i41^0 == 0 /\ checkpoint^0-checkpoint^post121 == 0 /\ -maxbits^post121+maxbits^0 == 0 /\ incnt^0 <= 0 /\ n_bits^0-n_bits^post121 == 0), cost: 1
 121: l5 -> l71 : __const_10000^0'=__const_10000^post122, __const_16^0'=__const_16^post122, __const_2147483647^0'=__const_2147483647^post122, __const_256^0'=__const_256^post122, __const_257^0'=__const_257^post122, __const_429496^0'=__const_429496^post122, __const_50^0'=__const_50^post122, __const_53^0'=__const_53^post122, __const_65536^0'=__const_65536^post122, __const_8388607^0'=__const_8388607^post122, __const_8^0'=__const_8^post122, __const_9^0'=__const_9^post122, apsim_bound11113^0'=apsim_bound11113^post122, apsim_incnt^0'=apsim_incnt^post122, bits33^0'=bits33^post122, block_compress^0'=block_compress^post122, bytes_out^0'=bytes_out^post122, c37^0'=c37^post122, c7^0'=c7^post122, checkpoint^0'=checkpoint^post122, clear_flg^0'=clear_flg^post122, code31^0'=code31^post122, count^0'=count^post122, disp9^0'=disp9^post122, ent8^0'=ent8^post122, exit_stat^0'=exit_stat^post122, fcode5^0'=fcode5^post122, free_ent^0'=free_ent^post122, hshift11^0'=hshift11^post122, hsize^0'=hsize^post122, hsize___019^0'=hsize___019^post122, hsize___027^0'=hsize___027^post122, hsize_reg10^0'=hsize_reg10^post122, i21^0'=i21^post122, i29^0'=i29^post122, i3^0'=i3^post122, i41^0'=i41^post122, i45^0'=i45^post122, i6^0'=i6^post122, in_count^0'=in_count^post122, incnt^0'=incnt^post122, m122^0'=m122^post122, m130^0'=m130^post122, maxbits^0'=maxbits^post122, maxcode^0'=maxcode^post122, maxmaxcode^0'=maxmaxcode^post122, n40^0'=n40^post122, n44^0'=n44^post122, n_bits^0'=n_bits^post122, offset^0'=offset^post122, out_count^0'=out_count^post122, r_off32^0'=r_off32^post122, rat26^0'=rat26^post122, ratio^0'=ratio^post122, ret_getbyte18^0'=ret_getbyte18^post122, ret_getbyte25^0'=ret_getbyte25^post122, seed2^0'=seed2^post122, tabort4^0'=tabort4^post122, tmp12^0'=tmp12^post122, tmp___014^0'=tmp___014^post122, tmp___017^0'=tmp___017^post122, tmp___024^0'=tmp___024^post122, tmp___115^0'=tmp___115^post122, (m130^0-m130^post122 == 0 /\ -i45^post122+i45^0 == 0 /\ -i29^post122+i29^0 == 0 /\ -__const_8388607^post122+__const_8388607^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post122 == 0 /\ apsim_incnt^0-apsim_incnt^post122 == 0 /\ -i41^post122+i41^0 == 0 /\ i6^0-i6^post122 == 0 /\ m122^0-m122^post122 == 0 /\ n44^0-n44^post122 == 0 /\ count^0-count^post122 == 0 /\ __const_256^0-__const_256^post122 == 0 /\ disp9^0-disp9^post122 == 0 /\ -__const_429496^post122+__const_429496^0 == 0 /\ -__const_2147483647^post122+__const_2147483647^0 == 0 /\ -__const_257^post122+__const_257^0 == 0 /\ tmp12^0-tmp12^post122 == 0 /\ -tmp___014^post122+tmp___014^0 == 0 /\ -maxbits^post122+maxbits^0 == 0 /\ -c7^post122+c7^0 == 0 /\ bytes_out^0-bytes_out^post122 == 0 /\ in_count^0-in_count^post122 == 0 /\ i3^0-i3^post122 == 0 /\ -free_ent^post122+free_ent^0 == 0 /\ -hsize_reg10^post122+hsize_reg10^0 == 0 /\ hsize___027^0-hsize___027^post122 == 0 /\ -hsize___019^post122+hsize___019^0 == 0 /\ c37^0-c37^post122 == 0 /\ -i21^post122+i21^0 == 0 /\ __const_53^0-__const_53^post122 == 0 /\ -__const_9^post122+__const_9^0 == 0 /\ tabort4^0-tabort4^post122 == 0 /\ -tmp___024^post122+tmp___024^0 == 0 /\ -tmp___115^post122+tmp___115^0 == 0 /\ r_off32^0-r_off32^post122 == 0 /\ -__const_8^post122+__const_8^0 == 0 /\ hshift11^0-hshift11^post122 == 0 /\ __const_50^0-__const_50^post122 == 0 /\ checkpoint^0-checkpoint^post122 == 0 /\ apsim_bound11113^post122 == 0 /\ -rat26^post122+rat26^0 == 0 /\ __const_10000^0-__const_10000^post122 == 0 /\ -n_bits^post122+n_bits^0 == 0 /\ -clear_flg^post122+clear_flg^0 == 0 /\ -offset^post122+offset^0 == 0 /\ out_count^0-out_count^post122 == 0 /\ fcode5^0-fcode5^post122 == 0 /\ -__const_65536^post122+__const_65536^0 == 0 /\ maxcode^0-maxcode^post122 == 0 /\ -block_compress^post122+block_compress^0 == 0 /\ -ent8^post122+ent8^0 == 0 /\ -ratio^post122+ratio^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post122 == 0 /\ -n40^post122+n40^0 == 0 /\ -__const_16^post122+__const_16^0 == 0 /\ exit_stat^0-exit_stat^post122 == 0 /\ -seed2^post122+seed2^0 == 0 /\ -hsize^post122+hsize^0 == 0 /\ -incnt^post122+incnt^0 == 0 /\ bits33^0-bits33^post122 == 0 /\ 1-incnt^0 <= 0 /\ tmp___017^0-tmp___017^post122 == 0 /\ -code31^post122+code31^0 == 0 /\ maxmaxcode^0-maxmaxcode^post122 == 0), cost: 1
   6: l6 -> l7 : __const_10000^0'=__const_10000^post7, __const_16^0'=__const_16^post7, __const_2147483647^0'=__const_2147483647^post7, __const_256^0'=__const_256^post7, __const_257^0'=__const_257^post7, __const_429496^0'=__const_429496^post7, __const_50^0'=__const_50^post7, __const_53^0'=__const_53^post7, __const_65536^0'=__const_65536^post7, __const_8388607^0'=__const_8388607^post7, __const_8^0'=__const_8^post7, __const_9^0'=__const_9^post7, apsim_bound11113^0'=apsim_bound11113^post7, apsim_incnt^0'=apsim_incnt^post7, bits33^0'=bits33^post7, block_compress^0'=block_compress^post7, bytes_out^0'=bytes_out^post7, c37^0'=c37^post7, c7^0'=c7^post7, checkpoint^0'=checkpoint^post7, clear_flg^0'=clear_flg^post7, code31^0'=code31^post7, count^0'=count^post7, disp9^0'=disp9^post7, ent8^0'=ent8^post7, exit_stat^0'=exit_stat^post7, fcode5^0'=fcode5^post7, free_ent^0'=free_ent^post7, hshift11^0'=hshift11^post7, hsize^0'=hsize^post7, hsize___019^0'=hsize___019^post7, hsize___027^0'=hsize___027^post7, hsize_reg10^0'=hsize_reg10^post7, i21^0'=i21^post7, i29^0'=i29^post7, i3^0'=i3^post7, i41^0'=i41^post7, i45^0'=i45^post7, i6^0'=i6^post7, in_count^0'=in_count^post7, incnt^0'=incnt^post7, m122^0'=m122^post7, m130^0'=m130^post7, maxbits^0'=maxbits^post7, maxcode^0'=maxcode^post7, maxmaxcode^0'=maxmaxcode^post7, n40^0'=n40^post7, n44^0'=n44^post7, n_bits^0'=n_bits^post7, offset^0'=offset^post7, out_count^0'=out_count^post7, r_off32^0'=r_off32^post7, rat26^0'=rat26^post7, ratio^0'=ratio^post7, ret_getbyte18^0'=ret_getbyte18^post7, ret_getbyte25^0'=ret_getbyte25^post7, seed2^0'=seed2^post7, tabort4^0'=tabort4^post7, tmp12^0'=tmp12^post7, tmp___014^0'=tmp___014^post7, tmp___017^0'=tmp___017^post7, tmp___024^0'=tmp___024^post7, tmp___115^0'=tmp___115^post7, (out_count^0-out_count^post7 == 0 /\ __const_9^0-__const_9^post7 == 0 /\ maxcode^0-maxcode^post7 == 0 /\ apsim_bound11113^0-apsim_bound11113^post7 == 0 /\ i6^post7-i6^0+disp9^0 == 0 /\ -i21^post7+i21^0 == 0 /\ c37^0-c37^post7 == 0 /\ __const_257^0-__const_257^post7 == 0 /\ offset^0-offset^post7 == 0 /\ maxmaxcode^0-maxmaxcode^post7 == 0 /\ -checkpoint^post7+checkpoint^0 == 0 /\ -bytes_out^post7+bytes_out^0 == 0 /\ c7^0-c7^post7 == 0 /\ hsize___027^0-hsize___027^post7 == 0 /\ -i3^post7+i3^0 == 0 /\ tmp___115^0-tmp___115^post7 == 0 /\ i29^0-i29^post7 == 0 /\ ret_getbyte25^0-ret_getbyte25^post7 == 0 /\ -incnt^post7+incnt^0 == 0 /\ __const_16^0-__const_16^post7 == 0 /\ m130^0-m130^post7 == 0 /\ -r_off32^post7+r_off32^0 == 0 /\ bits33^0-bits33^post7 == 0 /\ -seed2^post7+seed2^0 == 0 /\ -__const_50^post7+__const_50^0 == 0 /\ -fcode5^post7+fcode5^0 == 0 /\ hsize___019^0-hsize___019^post7 == 0 /\ n44^0-n44^post7 == 0 /\ code31^0-code31^post7 == 0 /\ -n40^post7+n40^0 == 0 /\ -i41^post7+i41^0 == 0 /\ -count^post7+count^0 == 0 /\ hshift11^0-hshift11^post7 == 0 /\ apsim_incnt^0-apsim_incnt^post7 == 0 /\ i45^0-i45^post7 == 0 /\ __const_65536^0-__const_65536^post7 == 0 /\ -ret_getbyte18^post7+ret_getbyte18^0 == 0 /\ -ratio^post7+ratio^0 == 0 /\ tmp12^0-tmp12^post7 == 0 /\ free_ent^0-free_ent^post7 == 0 /\ rat26^0-rat26^post7 == 0 /\ -clear_flg^post7+clear_flg^0 == 0 /\ -in_count^post7+in_count^0 == 0 /\ -__const_10000^post7+__const_10000^0 == 0 /\ -__const_2147483647^post7+__const_2147483647^0 == 0 /\ -__const_256^post7+__const_256^0 == 0 /\ -hsize_reg10^post7+hsize_reg10^0 == 0 /\ -__const_8388607^post7+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post7 == 0 /\ __const_8^0-__const_8^post7 == 0 /\ tmp___017^0-tmp___017^post7 == 0 /\ -hsize^post7+hsize^0 == 0 /\ block_compress^0-block_compress^post7 == 0 /\ -n_bits^post7+n_bits^0 == 0 /\ -tmp___014^post7+tmp___014^0 == 0 /\ m122^0-m122^post7 == 0 /\ -tabort4^post7+tabort4^0 == 0 /\ -maxbits^post7+maxbits^0 == 0 /\ ent8^0-ent8^post7 == 0 /\ -disp9^post7+disp9^0 == 0 /\ -exit_stat^post7+exit_stat^0 == 0 /\ __const_429496^0-__const_429496^post7 == 0 /\ -tmp___024^post7+tmp___024^0 == 0), cost: 1
 103: l7 -> l65 : __const_10000^0'=__const_10000^post104, __const_16^0'=__const_16^post104, __const_2147483647^0'=__const_2147483647^post104, __const_256^0'=__const_256^post104, __const_257^0'=__const_257^post104, __const_429496^0'=__const_429496^post104, __const_50^0'=__const_50^post104, __const_53^0'=__const_53^post104, __const_65536^0'=__const_65536^post104, __const_8388607^0'=__const_8388607^post104, __const_8^0'=__const_8^post104, __const_9^0'=__const_9^post104, apsim_bound11113^0'=apsim_bound11113^post104, apsim_incnt^0'=apsim_incnt^post104, bits33^0'=bits33^post104, block_compress^0'=block_compress^post104, bytes_out^0'=bytes_out^post104, c37^0'=c37^post104, c7^0'=c7^post104, checkpoint^0'=checkpoint^post104, clear_flg^0'=clear_flg^post104, code31^0'=code31^post104, count^0'=count^post104, disp9^0'=disp9^post104, ent8^0'=ent8^post104, exit_stat^0'=exit_stat^post104, fcode5^0'=fcode5^post104, free_ent^0'=free_ent^post104, hshift11^0'=hshift11^post104, hsize^0'=hsize^post104, hsize___019^0'=hsize___019^post104, hsize___027^0'=hsize___027^post104, hsize_reg10^0'=hsize_reg10^post104, i21^0'=i21^post104, i29^0'=i29^post104, i3^0'=i3^post104, i41^0'=i41^post104, i45^0'=i45^post104, i6^0'=i6^post104, in_count^0'=in_count^post104, incnt^0'=incnt^post104, m122^0'=m122^post104, m130^0'=m130^post104, maxbits^0'=maxbits^post104, maxcode^0'=maxcode^post104, maxmaxcode^0'=maxmaxcode^post104, n40^0'=n40^post104, n44^0'=n44^post104, n_bits^0'=n_bits^post104, offset^0'=offset^post104, out_count^0'=out_count^post104, r_off32^0'=r_off32^post104, rat26^0'=rat26^post104, ratio^0'=ratio^post104, ret_getbyte18^0'=ret_getbyte18^post104, ret_getbyte25^0'=ret_getbyte25^post104, seed2^0'=seed2^post104, tabort4^0'=tabort4^post104, tmp12^0'=tmp12^post104, tmp___014^0'=tmp___014^post104, tmp___017^0'=tmp___017^post104, tmp___024^0'=tmp___024^post104, tmp___115^0'=tmp___115^post104, (-i41^post104+i41^0 == 0 /\ __const_257^0-__const_257^post104 == 0 /\ -seed2^post104+seed2^0 == 0 /\ checkpoint^0-checkpoint^post104 == 0 /\ -code31^post104+code31^0 == 0 /\ -ret_getbyte25^post104+ret_getbyte25^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post104 == 0 /\ count^0-count^post104 == 0 /\ __const_256^0-__const_256^post104 == 0 /\ disp9^0-disp9^post104 == 0 /\ n44^0-n44^post104 == 0 /\ m130^0-m130^post104 == 0 /\ -ent8^post104+ent8^0 == 0 /\ -i29^post104+i29^0 == 0 /\ i3^0-i3^post104 == 0 /\ -maxbits^post104+maxbits^0 == 0 /\ -tmp___024^post104+tmp___024^0 == 0 /\ -free_ent^post104+free_ent^0 == 0 /\ -ratio^post104+ratio^0 == 0 /\ -__const_2147483647^post104+__const_2147483647^0 == 0 /\ -i21^post104+i21^0 == 0 /\ i6^0-i6^post104 == 0 /\ m122^0-m122^post104 == 0 /\ tmp___017^0-tmp___017^post104 == 0 /\ -clear_flg^post104+clear_flg^0 == 0 /\ hsize___027^0-hsize___027^post104 == 0 /\ -hsize_reg10^post104+hsize_reg10^0 == 0 /\ -tmp___014^post104+tmp___014^0 == 0 /\ -c7^post104+c7^0 == 0 /\ -hsize___019^post104+hsize___019^0 == 0 /\ -offset^post104+offset^0 == 0 /\ -i45^post104+i45^0 == 0 /\ __const_53^0-__const_53^post104 == 0 /\ hshift11^0-hshift11^post104 == 0 /\ apsim_incnt^0-apsim_incnt^post104 == 0 /\ -incnt^post104+incnt^0 == 0 /\ r_off32^0-r_off32^post104 == 0 /\ -bits33^post104+bits33^0 == 0 /\ -apsim_bound11113^post104+apsim_bound11113^0 == 0 /\ -i6^0 <= 0 /\ -__const_9^post104+__const_9^0 == 0 /\ -__const_429496^post104+__const_429496^0 == 0 /\ out_count^0-out_count^post104 == 0 /\ __const_10000^0-__const_10000^post104 == 0 /\ -__const_65536^post104+__const_65536^0 == 0 /\ -rat26^post104+rat26^0 == 0 /\ fcode5^0-fcode5^post104 == 0 /\ -n40^post104+n40^0 == 0 /\ maxcode^0-maxcode^post104 == 0 /\ -in_count^post104+in_count^0 == 0 /\ bytes_out^0-bytes_out^post104 == 0 /\ n_bits^0-n_bits^post104 == 0 /\ -tmp___115^post104+tmp___115^0 == 0 /\ -__const_16^post104+__const_16^0 == 0 /\ __const_8^0-__const_8^post104 == 0 /\ tmp12^0-tmp12^post104 == 0 /\ exit_stat^0-exit_stat^post104 == 0 /\ __const_50^0-__const_50^post104 == 0 /\ tabort4^0-tabort4^post104 == 0 /\ -__const_8388607^post104+__const_8388607^0 == 0 /\ -block_compress^post104+block_compress^0 == 0 /\ -hsize^post104+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post104 == 0 /\ c37^0-c37^post104 == 0), cost: 1
 104: l7 -> l65 : __const_10000^0'=__const_10000^post105, __const_16^0'=__const_16^post105, __const_2147483647^0'=__const_2147483647^post105, __const_256^0'=__const_256^post105, __const_257^0'=__const_257^post105, __const_429496^0'=__const_429496^post105, __const_50^0'=__const_50^post105, __const_53^0'=__const_53^post105, __const_65536^0'=__const_65536^post105, __const_8388607^0'=__const_8388607^post105, __const_8^0'=__const_8^post105, __const_9^0'=__const_9^post105, apsim_bound11113^0'=apsim_bound11113^post105, apsim_incnt^0'=apsim_incnt^post105, bits33^0'=bits33^post105, block_compress^0'=block_compress^post105, bytes_out^0'=bytes_out^post105, c37^0'=c37^post105, c7^0'=c7^post105, checkpoint^0'=checkpoint^post105, clear_flg^0'=clear_flg^post105, code31^0'=code31^post105, count^0'=count^post105, disp9^0'=disp9^post105, ent8^0'=ent8^post105, exit_stat^0'=exit_stat^post105, fcode5^0'=fcode5^post105, free_ent^0'=free_ent^post105, hshift11^0'=hshift11^post105, hsize^0'=hsize^post105, hsize___019^0'=hsize___019^post105, hsize___027^0'=hsize___027^post105, hsize_reg10^0'=hsize_reg10^post105, i21^0'=i21^post105, i29^0'=i29^post105, i3^0'=i3^post105, i41^0'=i41^post105, i45^0'=i45^post105, i6^0'=i6^post105, in_count^0'=in_count^post105, incnt^0'=incnt^post105, m122^0'=m122^post105, m130^0'=m130^post105, maxbits^0'=maxbits^post105, maxcode^0'=maxcode^post105, maxmaxcode^0'=maxmaxcode^post105, n40^0'=n40^post105, n44^0'=n44^post105, n_bits^0'=n_bits^post105, offset^0'=offset^post105, out_count^0'=out_count^post105, r_off32^0'=r_off32^post105, rat26^0'=rat26^post105, ratio^0'=ratio^post105, ret_getbyte18^0'=ret_getbyte18^post105, ret_getbyte25^0'=ret_getbyte25^post105, seed2^0'=seed2^post105, tabort4^0'=tabort4^post105, tmp12^0'=tmp12^post105, tmp___014^0'=tmp___014^post105, tmp___017^0'=tmp___017^post105, tmp___024^0'=tmp___024^post105, tmp___115^0'=tmp___115^post105, (n44^0-n44^post105 == 0 /\ apsim_incnt^0-apsim_incnt^post105 == 0 /\ __const_16^0-__const_16^post105 == 0 /\ hshift11^0-hshift11^post105 == 0 /\ -maxbits^post105+maxbits^0 == 0 /\ -incnt^post105+incnt^0 == 0 /\ maxcode^0-maxcode^post105 == 0 /\ -m122^post105+m122^0 == 0 /\ -n40^post105+n40^0 == 0 /\ -__const_2147483647^post105+__const_2147483647^0 == 0 /\ free_ent^0-free_ent^post105 == 0 /\ -hsize___027^post105+hsize___027^0 == 0 /\ -hsize_reg10^post105+hsize_reg10^0 == 0 /\ -__const_8388607^post105+__const_8388607^0 == 0 /\ __const_65536^0-__const_65536^post105 == 0 /\ -__const_10000^post105+__const_10000^0 == 0 /\ __const_256^0-__const_256^post105 == 0 /\ exit_stat^0-exit_stat^post105 == 0 /\ c37^0-c37^post105 == 0 /\ tmp___017^0-tmp___017^post105 == 0 /\ -n_bits^post105+n_bits^0 == 0 /\ 1+i6^0 <= 0 /\ -disp9^post105+disp9^0 == 0 /\ -i29^post105+i29^0 == 0 /\ __const_53^0-__const_53^post105 == 0 /\ m130^0-m130^post105 == 0 /\ code31^0-code31^post105 == 0 /\ ret_getbyte25^0-ret_getbyte25^post105 == 0 /\ -in_count^post105+in_count^0 == 0 /\ -i41^post105+i41^0 == 0 /\ __const_8^0-__const_8^post105 == 0 /\ c7^0-c7^post105 == 0 /\ rat26^0-rat26^post105 == 0 /\ tabort4^0-tabort4^post105 == 0 /\ -tmp___014^post105+tmp___014^0 == 0 /\ -ratio^post105+ratio^0 == 0 /\ -seed2^post105+seed2^0 == 0 /\ -bytes_out^post105+bytes_out^0 == 0 /\ -clear_flg^post105+clear_flg^0 == 0 /\ __const_257^0-__const_257^post105 == 0 /\ ent8^0-ent8^post105 == 0 /\ -tmp___024^post105+tmp___024^0 == 0 /\ -tmp___115^post105+tmp___115^0 == 0 /\ hsize___019^0-hsize___019^post105 == 0 /\ i21^0-i21^post105 == 0 /\ -checkpoint^post105+checkpoint^0 == 0 /\ maxmaxcode^0-maxmaxcode^post105 == 0 /\ __const_9^0-__const_9^post105 == 0 /\ ret_getbyte18^0-ret_getbyte18^post105 == 0 /\ -hsize^post105+hsize^0 == 0 /\ -__const_50^post105+__const_50^0 == 0 /\ out_count^0-out_count^post105 == 0 /\ -block_compress^post105+block_compress^0 == 0 /\ -fcode5^post105+fcode5^0 == 0 /\ bits33^0-bits33^post105 == 0 /\ -__const_429496^post105+__const_429496^0 == 0 /\ -r_off32^post105+r_off32^0 == 0 /\ -i6^0+i6^post105-hsize_reg10^0 == 0 /\ -apsim_bound11113^post105+apsim_bound11113^0 == 0 /\ count^0-count^post105 == 0 /\ -i3^post105+i3^0 == 0 /\ -offset^post105+offset^0 == 0 /\ tmp12^0-tmp12^post105 == 0 /\ i45^0-i45^post105 == 0), cost: 1
   7: l8 -> l4 : __const_10000^0'=__const_10000^post8, __const_16^0'=__const_16^post8, __const_2147483647^0'=__const_2147483647^post8, __const_256^0'=__const_256^post8, __const_257^0'=__const_257^post8, __const_429496^0'=__const_429496^post8, __const_50^0'=__const_50^post8, __const_53^0'=__const_53^post8, __const_65536^0'=__const_65536^post8, __const_8388607^0'=__const_8388607^post8, __const_8^0'=__const_8^post8, __const_9^0'=__const_9^post8, apsim_bound11113^0'=apsim_bound11113^post8, apsim_incnt^0'=apsim_incnt^post8, bits33^0'=bits33^post8, block_compress^0'=block_compress^post8, bytes_out^0'=bytes_out^post8, c37^0'=c37^post8, c7^0'=c7^post8, checkpoint^0'=checkpoint^post8, clear_flg^0'=clear_flg^post8, code31^0'=code31^post8, count^0'=count^post8, disp9^0'=disp9^post8, ent8^0'=ent8^post8, exit_stat^0'=exit_stat^post8, fcode5^0'=fcode5^post8, free_ent^0'=free_ent^post8, hshift11^0'=hshift11^post8, hsize^0'=hsize^post8, hsize___019^0'=hsize___019^post8, hsize___027^0'=hsize___027^post8, hsize_reg10^0'=hsize_reg10^post8, i21^0'=i21^post8, i29^0'=i29^post8, i3^0'=i3^post8, i41^0'=i41^post8, i45^0'=i45^post8, i6^0'=i6^post8, in_count^0'=in_count^post8, incnt^0'=incnt^post8, m122^0'=m122^post8, m130^0'=m130^post8, maxbits^0'=maxbits^post8, maxcode^0'=maxcode^post8, maxmaxcode^0'=maxmaxcode^post8, n40^0'=n40^post8, n44^0'=n44^post8, n_bits^0'=n_bits^post8, offset^0'=offset^post8, out_count^0'=out_count^post8, r_off32^0'=r_off32^post8, rat26^0'=rat26^post8, ratio^0'=ratio^post8, ret_getbyte18^0'=ret_getbyte18^post8, ret_getbyte25^0'=ret_getbyte25^post8, seed2^0'=seed2^post8, tabort4^0'=tabort4^post8, tmp12^0'=tmp12^post8, tmp___014^0'=tmp___014^post8, tmp___017^0'=tmp___017^post8, tmp___024^0'=tmp___024^post8, tmp___115^0'=tmp___115^post8, (__const_16^0+i21^post8-hsize___019^post8 == 0 /\ r_off32^0-r_off32^post8 == 0 /\ c7^0-c7^post8 == 0 /\ 1+m122^post8 == 0 /\ __const_8388607^0-__const_8388607^post8 == 0 /\ __const_257^0-__const_257^post8 == 0 /\ -i41^post8+i41^0 == 0 /\ -i3^post8+i3^0 == 0 /\ hshift11^0-__const_8^0+hshift11^post8 == 0 /\ out_count^0-out_count^post8 == 0 /\ ret_getbyte25^0-ret_getbyte25^post8 == 0 /\ __const_256^0-__const_256^post8 == 0 /\ ent8^0-ent8^post8 == 0 /\ code31^0-code31^post8 == 0 /\ i29^0-i29^post8 == 0 /\ apsim_bound11113^0-apsim_bound11113^post8 == 0 /\ -maxbits^post8+maxbits^0 == 0 /\ -clear_flg^post8+clear_flg^0 == 0 /\ -bytes_out^post8+bytes_out^0 == 0 /\ i45^0-i45^post8 == 0 /\ maxcode^0-maxcode^post8 == 0 /\ -disp9^post8+disp9^0 == 0 /\ tmp12^0-tmp12^post8 == 0 /\ -tmp___024^post8+tmp___024^0 == 0 /\ __const_9^0-__const_9^post8 == 0 /\ hsize_reg10^post8-hsize^0 == 0 /\ -ratio^post8+ratio^0 == 0 /\ -exit_stat^post8+exit_stat^0 == 0 /\ tabort4^0-tabort4^post8 == 0 /\ __const_65536^0-fcode5^0 <= 0 /\ maxmaxcode^0-maxmaxcode^post8 == 0 /\ -tmp___014^post8+tmp___014^0 == 0 /\ bits33^0-bits33^post8 == 0 /\ -__const_2147483647^post8+__const_2147483647^0 == 0 /\ hsize___027^0-hsize___027^post8 == 0 /\ -offset^post8+offset^0 == 0 /\ -n_bits^post8+n_bits^0 == 0 /\ -incnt^post8+incnt^0 == 0 /\ apsim_incnt^0-apsim_incnt^post8 == 0 /\ __const_65536^0-__const_65536^post8 == 0 /\ free_ent^0-free_ent^post8 == 0 /\ n44^0-n44^post8 == 0 /\ __const_10000^0-__const_10000^post8 == 0 /\ -__const_429496^post8+__const_429496^0 == 0 /\ -m130^post8+m130^0 == 0 /\ -checkpoint^post8+checkpoint^0 == 0 /\ -in_count^post8+in_count^0 == 0 /\ -block_compress^post8+block_compress^0 == 0 /\ -__const_50^post8+__const_50^0 == 0 /\ -count^post8+count^0 == 0 /\ -fcode5^post8+fcode5^0 == 0 /\ -hsize^post8+hsize^0 == 0 /\ i6^0-i6^post8 == 0 /\ -hsize_reg10^post8+hsize___019^post8 == 0 /\ -n40^post8+n40^0 == 0 /\ -ret_getbyte18^post8+ret_getbyte18^0 == 0 /\ -tmp___115^post8+tmp___115^0 == 0 /\ c37^0-c37^post8 == 0 /\ __const_8^0-__const_8^post8 == 0 /\ tmp___017^0-tmp___017^post8 == 0 /\ rat26^0-rat26^post8 == 0 /\ -__const_16^post8+__const_16^0 == 0 /\ -seed2^post8+seed2^0 == 0 /\ __const_53^0-__const_53^post8 == 0), cost: 1
   8: l8 -> l9 : __const_10000^0'=__const_10000^post9, __const_16^0'=__const_16^post9, __const_2147483647^0'=__const_2147483647^post9, __const_256^0'=__const_256^post9, __const_257^0'=__const_257^post9, __const_429496^0'=__const_429496^post9, __const_50^0'=__const_50^post9, __const_53^0'=__const_53^post9, __const_65536^0'=__const_65536^post9, __const_8388607^0'=__const_8388607^post9, __const_8^0'=__const_8^post9, __const_9^0'=__const_9^post9, apsim_bound11113^0'=apsim_bound11113^post9, apsim_incnt^0'=apsim_incnt^post9, bits33^0'=bits33^post9, block_compress^0'=block_compress^post9, bytes_out^0'=bytes_out^post9, c37^0'=c37^post9, c7^0'=c7^post9, checkpoint^0'=checkpoint^post9, clear_flg^0'=clear_flg^post9, code31^0'=code31^post9, count^0'=count^post9, disp9^0'=disp9^post9, ent8^0'=ent8^post9, exit_stat^0'=exit_stat^post9, fcode5^0'=fcode5^post9, free_ent^0'=free_ent^post9, hshift11^0'=hshift11^post9, hsize^0'=hsize^post9, hsize___019^0'=hsize___019^post9, hsize___027^0'=hsize___027^post9, hsize_reg10^0'=hsize_reg10^post9, i21^0'=i21^post9, i29^0'=i29^post9, i3^0'=i3^post9, i41^0'=i41^post9, i45^0'=i45^post9, i6^0'=i6^post9, in_count^0'=in_count^post9, incnt^0'=incnt^post9, m122^0'=m122^post9, m130^0'=m130^post9, maxbits^0'=maxbits^post9, maxcode^0'=maxcode^post9, maxmaxcode^0'=maxmaxcode^post9, n40^0'=n40^post9, n44^0'=n44^post9, n_bits^0'=n_bits^post9, offset^0'=offset^post9, out_count^0'=out_count^post9, r_off32^0'=r_off32^post9, rat26^0'=rat26^post9, ratio^0'=ratio^post9, ret_getbyte18^0'=ret_getbyte18^post9, ret_getbyte25^0'=ret_getbyte25^post9, seed2^0'=seed2^post9, tabort4^0'=tabort4^post9, tmp12^0'=tmp12^post9, tmp___014^0'=tmp___014^post9, tmp___017^0'=tmp___017^post9, tmp___024^0'=tmp___024^post9, tmp___115^0'=tmp___115^post9, (0 == 0 /\ tabort4^0-tabort4^post9 == 0 /\ ent8^0-ent8^post9 == 0 /\ -hsize^post9+hsize^0 == 0 /\ -hsize___019^post9+hsize___019^0 == 0 /\ -__const_2147483647^post9+__const_2147483647^0 == 0 /\ -__const_257^post9+__const_257^0 == 0 /\ -maxbits^post9+maxbits^0 == 0 /\ -m130^post9+m130^0 == 0 /\ -n40^post9+n40^0 == 0 /\ 1-__const_65536^0+fcode5^0 <= 0 /\ __const_8388607^0-__const_8388607^post9 == 0 /\ r_off32^0-r_off32^post9 == 0 /\ -__const_16^post9+__const_16^0 == 0 /\ hsize___027^0-hsize___027^post9 == 0 /\ -code31^post9+code31^0 == 0 /\ -maxmaxcode^post9+maxmaxcode^0 == 0 /\ exit_stat^0-exit_stat^post9 == 0 /\ -__const_65536^post9+__const_65536^0 == 0 /\ __const_50^0-__const_50^post9 == 0 /\ -1-hshift11^0+hshift11^post9 == 0 /\ -incnt^post9+incnt^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post9 == 0 /\ apsim_bound11113^0-apsim_bound11113^post9 == 0 /\ out_count^0-out_count^post9 == 0 /\ i45^0-i45^post9 == 0 /\ tmp12^0-tmp12^post9 == 0 /\ -ratio^post9+ratio^0 == 0 /\ -rat26^post9+rat26^0 == 0 /\ __const_9^0-__const_9^post9 == 0 /\ -in_count^post9+in_count^0 == 0 /\ -__const_8^post9+__const_8^0 == 0 /\ bits33^0-bits33^post9 == 0 /\ n44^0-n44^post9 == 0 /\ i6^0-i6^post9 == 0 /\ __const_10000^0-__const_10000^post9 == 0 /\ -block_compress^post9+block_compress^0 == 0 /\ -bytes_out^post9+bytes_out^0 == 0 /\ -tmp___014^post9+tmp___014^0 == 0 /\ n_bits^0-n_bits^post9 == 0 /\ apsim_incnt^0-apsim_incnt^post9 == 0 /\ -disp9^post9+disp9^0 == 0 /\ -count^post9+count^0 == 0 /\ -i29^post9+i29^0 == 0 /\ -tmp___024^post9+tmp___024^0 == 0 /\ -seed2^post9+seed2^0 == 0 /\ -tmp___115^post9+tmp___115^0 == 0 /\ -i3^post9+i3^0 == 0 /\ -i41^post9+i41^0 == 0 /\ c37^0-c37^post9 == 0 /\ m122^0-m122^post9 == 0 /\ maxcode^0-maxcode^post9 == 0 /\ checkpoint^0-checkpoint^post9 == 0 /\ __const_256^0-__const_256^post9 == 0 /\ -i21^post9+i21^0 == 0 /\ tmp___017^0-tmp___017^post9 == 0 /\ __const_53^0-__const_53^post9 == 0 /\ free_ent^0-free_ent^post9 == 0 /\ -offset^post9+offset^0 == 0 /\ -__const_429496^post9+__const_429496^0 == 0 /\ -c7^post9+c7^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post9 == 0 /\ -hsize_reg10^post9+hsize_reg10^0 == 0 /\ -clear_flg^post9+clear_flg^0 == 0), cost: 1
 115: l9 -> l8 : __const_10000^0'=__const_10000^post116, __const_16^0'=__const_16^post116, __const_2147483647^0'=__const_2147483647^post116, __const_256^0'=__const_256^post116, __const_257^0'=__const_257^post116, __const_429496^0'=__const_429496^post116, __const_50^0'=__const_50^post116, __const_53^0'=__const_53^post116, __const_65536^0'=__const_65536^post116, __const_8388607^0'=__const_8388607^post116, __const_8^0'=__const_8^post116, __const_9^0'=__const_9^post116, apsim_bound11113^0'=apsim_bound11113^post116, apsim_incnt^0'=apsim_incnt^post116, bits33^0'=bits33^post116, block_compress^0'=block_compress^post116, bytes_out^0'=bytes_out^post116, c37^0'=c37^post116, c7^0'=c7^post116, checkpoint^0'=checkpoint^post116, clear_flg^0'=clear_flg^post116, code31^0'=code31^post116, count^0'=count^post116, disp9^0'=disp9^post116, ent8^0'=ent8^post116, exit_stat^0'=exit_stat^post116, fcode5^0'=fcode5^post116, free_ent^0'=free_ent^post116, hshift11^0'=hshift11^post116, hsize^0'=hsize^post116, hsize___019^0'=hsize___019^post116, hsize___027^0'=hsize___027^post116, hsize_reg10^0'=hsize_reg10^post116, i21^0'=i21^post116, i29^0'=i29^post116, i3^0'=i3^post116, i41^0'=i41^post116, i45^0'=i45^post116, i6^0'=i6^post116, in_count^0'=in_count^post116, incnt^0'=incnt^post116, m122^0'=m122^post116, m130^0'=m130^post116, maxbits^0'=maxbits^post116, maxcode^0'=maxcode^post116, maxmaxcode^0'=maxmaxcode^post116, n40^0'=n40^post116, n44^0'=n44^post116, n_bits^0'=n_bits^post116, offset^0'=offset^post116, out_count^0'=out_count^post116, r_off32^0'=r_off32^post116, rat26^0'=rat26^post116, ratio^0'=ratio^post116, ret_getbyte18^0'=ret_getbyte18^post116, ret_getbyte25^0'=ret_getbyte25^post116, seed2^0'=seed2^post116, tabort4^0'=tabort4^post116, tmp12^0'=tmp12^post116, tmp___014^0'=tmp___014^post116, tmp___017^0'=tmp___017^post116, tmp___024^0'=tmp___024^post116, tmp___115^0'=tmp___115^post116, (code31^0-code31^post116 == 0 /\ hsize___019^0-hsize___019^post116 == 0 /\ apsim_incnt^0-apsim_incnt^post116 == 0 /\ -__const_8388607^post116+__const_8388607^0 == 0 /\ -ratio^post116+ratio^0 == 0 /\ -fcode5^post116+fcode5^0 == 0 /\ -hshift11^post116+hshift11^0 == 0 /\ __const_65536^0-__const_65536^post116 == 0 /\ -disp9^post116+disp9^0 == 0 /\ -count^post116+count^0 == 0 /\ __const_16^0-__const_16^post116 == 0 /\ m130^0-m130^post116 == 0 /\ n44^0-n44^post116 == 0 /\ c37^0-c37^post116 == 0 /\ -exit_stat^post116+exit_stat^0 == 0 /\ -maxbits^post116+maxbits^0 == 0 /\ -bytes_out^post116+bytes_out^0 == 0 /\ tmp___017^0-tmp___017^post116 == 0 /\ -i6^post116+i6^0 == 0 /\ __const_257^0-__const_257^post116 == 0 /\ -__const_256^post116+__const_256^0 == 0 /\ c7^0-c7^post116 == 0 /\ -ret_getbyte25^post116+ret_getbyte25^0 == 0 /\ r_off32^0-r_off32^post116 == 0 /\ __const_8^0-__const_8^post116 == 0 /\ -checkpoint^post116+checkpoint^0 == 0 /\ hsize___027^0-hsize___027^post116 == 0 /\ -hsize_reg10^post116+hsize_reg10^0 == 0 /\ -__const_10000^post116+__const_10000^0 == 0 /\ i29^0-i29^post116 == 0 /\ -offset^post116+offset^0 == 0 /\ __const_53^0-__const_53^post116 == 0 /\ -m122^post116+m122^0 == 0 /\ -i3^post116+i3^0 == 0 /\ -i41^post116+i41^0 == 0 /\ -tmp___024^post116+tmp___024^0 == 0 /\ -tmp___115^post116+tmp___115^0 == 0 /\ free_ent^0-free_ent^post116 == 0 /\ -incnt^post116+incnt^0 == 0 /\ out_count^0-out_count^post116 == 0 /\ -n_bits^post116+n_bits^0 == 0 /\ n40^0-n40^post116 == 0 /\ -__const_50^post116+__const_50^0 == 0 /\ -__const_429496^post116+__const_429496^0 == 0 /\ -tmp___014^post116+tmp___014^0 == 0 /\ -maxcode^post116+maxcode^0 == 0 /\ i45^0-i45^post116 == 0 /\ -seed2^post116+seed2^0 == 0 /\ ent8^0-ent8^post116 == 0 /\ -in_count^post116+in_count^0 == 0 /\ -apsim_bound11113^post116+apsim_bound11113^0 == 0 /\ -clear_flg^post116+clear_flg^0 == 0 /\ -i21^post116+i21^0 == 0 /\ __const_9^0-__const_9^post116 == 0 /\ -__const_2147483647^post116+__const_2147483647^0 == 0 /\ maxmaxcode^0-maxmaxcode^post116 == 0 /\ tmp12^0-tmp12^post116 == 0 /\ -hsize^post116+hsize^0 == 0 /\ -rat26^post116+rat26^0 == 0 /\ bits33^0-bits33^post116 == 0 /\ ret_getbyte18^0-ret_getbyte18^post116 == 0 /\ tabort4^0-tabort4^post116 == 0 /\ -block_compress^post116+block_compress^0 == 0), cost: 1
   9: l10 -> l11 : __const_10000^0'=__const_10000^post10, __const_16^0'=__const_16^post10, __const_2147483647^0'=__const_2147483647^post10, __const_256^0'=__const_256^post10, __const_257^0'=__const_257^post10, __const_429496^0'=__const_429496^post10, __const_50^0'=__const_50^post10, __const_53^0'=__const_53^post10, __const_65536^0'=__const_65536^post10, __const_8388607^0'=__const_8388607^post10, __const_8^0'=__const_8^post10, __const_9^0'=__const_9^post10, apsim_bound11113^0'=apsim_bound11113^post10, apsim_incnt^0'=apsim_incnt^post10, bits33^0'=bits33^post10, block_compress^0'=block_compress^post10, bytes_out^0'=bytes_out^post10, c37^0'=c37^post10, c7^0'=c7^post10, checkpoint^0'=checkpoint^post10, clear_flg^0'=clear_flg^post10, code31^0'=code31^post10, count^0'=count^post10, disp9^0'=disp9^post10, ent8^0'=ent8^post10, exit_stat^0'=exit_stat^post10, fcode5^0'=fcode5^post10, free_ent^0'=free_ent^post10, hshift11^0'=hshift11^post10, hsize^0'=hsize^post10, hsize___019^0'=hsize___019^post10, hsize___027^0'=hsize___027^post10, hsize_reg10^0'=hsize_reg10^post10, i21^0'=i21^post10, i29^0'=i29^post10, i3^0'=i3^post10, i41^0'=i41^post10, i45^0'=i45^post10, i6^0'=i6^post10, in_count^0'=in_count^post10, incnt^0'=incnt^post10, m122^0'=m122^post10, m130^0'=m130^post10, maxbits^0'=maxbits^post10, maxcode^0'=maxcode^post10, maxmaxcode^0'=maxmaxcode^post10, n40^0'=n40^post10, n44^0'=n44^post10, n_bits^0'=n_bits^post10, offset^0'=offset^post10, out_count^0'=out_count^post10, r_off32^0'=r_off32^post10, rat26^0'=rat26^post10, ratio^0'=ratio^post10, ret_getbyte18^0'=ret_getbyte18^post10, ret_getbyte25^0'=ret_getbyte25^post10, seed2^0'=seed2^post10, tabort4^0'=tabort4^post10, tmp12^0'=tmp12^post10, tmp___014^0'=tmp___014^post10, tmp___017^0'=tmp___017^post10, tmp___024^0'=tmp___024^post10, tmp___115^0'=tmp___115^post10, (tmp___017^0-tmp___017^post10 == 0 /\ -tmp___115^post10+tmp___115^0 == 0 /\ free_ent^0-free_ent^post10 == 0 /\ -clear_flg^post10+clear_flg^0 == 0 /\ -fcode5^post10+fcode5^0 == 0 /\ __const_53^0-__const_53^post10 == 0 /\ tmp___024^0-tmp___024^post10 == 0 /\ -i21^post10+i21^0 == 0 /\ tabort4^0-tabort4^post10 == 0 /\ -c7^post10+c7^0 == 0 /\ -block_compress^post10+block_compress^0 == 0 /\ -ratio^post10+ratio^0 == 0 /\ -__const_16^post10+__const_16^0 == 0 /\ -i45^post10+i45^0 == 0 /\ -incnt^post10+incnt^0 == 0 /\ m122^0-m122^post10 == 0 /\ -tmp12^post10+tmp12^0 == 0 /\ -__const_429496^post10+__const_429496^0 == 0 /\ -seed2^post10+seed2^0 == 0 /\ -code31^post10+code31^0 == 0 /\ ent8^0-ent8^post10 == 0 /\ -apsim_incnt^post10+apsim_incnt^0 == 0 /\ -offset^post10+offset^0 == 0 /\ bytes_out^0-bytes_out^post10 == 0 /\ __const_10000^0-__const_10000^post10 == 0 /\ -__const_65536^post10+__const_65536^0 == 0 /\ -m130^post10+m130^0 == 0 /\ r_off32^0-r_off32^post10 == 0 /\ exit_stat^0-exit_stat^post10 == 0 /\ out_count^0-out_count^post10 == 0 /\ -n40^post10+n40^0 == 0 /\ maxcode^0-maxcode^post10 == 0 /\ apsim_bound11113^0-apsim_bound11113^post10 == 0 /\ -in_count^post10+in_count^0 == 0 /\ -__const_9^post10+__const_9^0 == 0 /\ c37^0-c37^post10 == 0 /\ -hsize_reg10^post10+hsize_reg10^0 == 0 /\ -__const_8388607^post10+__const_8388607^0 == 0 /\ -hsize___019^post10+hsize___019^0 == 0 /\ -hsize^post10+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post10 == 0 /\ hsize___027^0-hsize___027^post10 == 0 /\ -tmp___014^post10+tmp___014^0 == 0 /\ __const_16^0+i29^post10-i29^0 == 0 /\ -ret_getbyte25^post10+ret_getbyte25^0 == 0 /\ -__const_2147483647^post10+__const_2147483647^0 == 0 /\ -rat26^post10+rat26^0 == 0 /\ -i41^post10+i41^0 == 0 /\ __const_50^0-__const_50^post10 == 0 /\ -__const_8^post10+__const_8^0 == 0 /\ n44^0-n44^post10 == 0 /\ bits33^0-bits33^post10 == 0 /\ ret_getbyte18^0-ret_getbyte18^post10 == 0 /\ __const_256^0-__const_256^post10 == 0 /\ __const_257^0-__const_257^post10 == 0 /\ hshift11^0-hshift11^post10 == 0 /\ checkpoint^0-checkpoint^post10 == 0 /\ i6^0-i6^post10 == 0 /\ -maxbits^post10+maxbits^0 == 0 /\ count^0-count^post10 == 0 /\ i3^0-i3^post10 == 0 /\ n_bits^0-n_bits^post10 == 0 /\ -disp9^post10+disp9^0 == 0), cost: 1
  74: l11 -> l13 : __const_10000^0'=__const_10000^post75, __const_16^0'=__const_16^post75, __const_2147483647^0'=__const_2147483647^post75, __const_256^0'=__const_256^post75, __const_257^0'=__const_257^post75, __const_429496^0'=__const_429496^post75, __const_50^0'=__const_50^post75, __const_53^0'=__const_53^post75, __const_65536^0'=__const_65536^post75, __const_8388607^0'=__const_8388607^post75, __const_8^0'=__const_8^post75, __const_9^0'=__const_9^post75, apsim_bound11113^0'=apsim_bound11113^post75, apsim_incnt^0'=apsim_incnt^post75, bits33^0'=bits33^post75, block_compress^0'=block_compress^post75, bytes_out^0'=bytes_out^post75, c37^0'=c37^post75, c7^0'=c7^post75, checkpoint^0'=checkpoint^post75, clear_flg^0'=clear_flg^post75, code31^0'=code31^post75, count^0'=count^post75, disp9^0'=disp9^post75, ent8^0'=ent8^post75, exit_stat^0'=exit_stat^post75, fcode5^0'=fcode5^post75, free_ent^0'=free_ent^post75, hshift11^0'=hshift11^post75, hsize^0'=hsize^post75, hsize___019^0'=hsize___019^post75, hsize___027^0'=hsize___027^post75, hsize_reg10^0'=hsize_reg10^post75, i21^0'=i21^post75, i29^0'=i29^post75, i3^0'=i3^post75, i41^0'=i41^post75, i45^0'=i45^post75, i6^0'=i6^post75, in_count^0'=in_count^post75, incnt^0'=incnt^post75, m122^0'=m122^post75, m130^0'=m130^post75, maxbits^0'=maxbits^post75, maxcode^0'=maxcode^post75, maxmaxcode^0'=maxmaxcode^post75, n40^0'=n40^post75, n44^0'=n44^post75, n_bits^0'=n_bits^post75, offset^0'=offset^post75, out_count^0'=out_count^post75, r_off32^0'=r_off32^post75, rat26^0'=rat26^post75, ratio^0'=ratio^post75, ret_getbyte18^0'=ret_getbyte18^post75, ret_getbyte25^0'=ret_getbyte25^post75, seed2^0'=seed2^post75, tabort4^0'=tabort4^post75, tmp12^0'=tmp12^post75, tmp___014^0'=tmp___014^post75, tmp___017^0'=tmp___017^post75, tmp___024^0'=tmp___024^post75, tmp___115^0'=tmp___115^post75, (m130^0-m130^post75 == 0 /\ -i45^post75+i45^0 == 0 /\ -__const_429496^post75+__const_429496^0 == 0 /\ apsim_incnt^0-apsim_incnt^post75 == 0 /\ -__const_8388607^post75+__const_8388607^0 == 0 /\ hshift11^0-hshift11^post75 == 0 /\ -i41^post75+i41^0 == 0 /\ tmp___115^0-tmp___115^post75 == 0 /\ free_ent^0-free_ent^post75 == 0 /\ i29^post75-__const_16^0-i29^0 == 0 /\ __const_65536^0-__const_65536^post75 == 0 /\ n44^0-n44^post75 == 0 /\ tmp___014^0-tmp___014^post75 == 0 /\ __const_50^0-__const_50^post75 == 0 /\ -clear_flg^post75+clear_flg^0 == 0 /\ -c7^post75+c7^0 == 0 /\ i21^0-i21^post75 == 0 /\ code31^0-code31^post75 == 0 /\ -bytes_out^post75+bytes_out^0 == 0 /\ -maxbits^post75+maxbits^0 == 0 /\ -ret_getbyte18^post75+ret_getbyte18^0 == 0 /\ -tmp___024^post75+tmp___024^0 == 0 /\ exit_stat^0-exit_stat^post75 == 0 /\ -hsize_reg10^post75+hsize_reg10^0 == 0 /\ c37^0-c37^post75 == 0 /\ __const_16^0-__const_16^post75 == 0 /\ __const_8^0-__const_8^post75 == 0 /\ -__const_10000^post75+__const_10000^0 == 0 /\ rat26^0-rat26^post75 == 0 /\ ret_getbyte25^0-ret_getbyte25^post75 == 0 /\ -tabort4^post75+tabort4^0 == 0 /\ -__const_2147483647^post75+__const_2147483647^0 == 0 /\ seed2^0-seed2^post75 == 0 /\ -m122^post75+m122^0 == 0 /\ __const_257^0-__const_257^post75 == 0 /\ -incnt^post75+incnt^0 == 0 /\ n40^0-n40^post75 == 0 /\ hsize___019^0-hsize___019^post75 == 0 /\ -n_bits^post75+n_bits^0 == 0 /\ out_count^0-out_count^post75 == 0 /\ 1+i29^0 <= 0 /\ -i6^post75+i6^0 == 0 /\ ent8^0-ent8^post75 == 0 /\ -in_count^post75+in_count^0 == 0 /\ -count^post75+count^0 == 0 /\ -disp9^post75+disp9^0 == 0 /\ -r_off32^post75+r_off32^0 == 0 /\ -fcode5^post75+fcode5^0 == 0 /\ -block_compress^post75+block_compress^0 == 0 /\ -maxcode^post75+maxcode^0 == 0 /\ -apsim_bound11113^post75+apsim_bound11113^0 == 0 /\ -tmp___017^post75+tmp___017^0 == 0 /\ -ratio^post75+ratio^0 == 0 /\ offset^0-offset^post75 == 0 /\ __const_53^0-__const_53^post75 == 0 /\ i3^0-i3^post75 == 0 /\ -hsize^post75+hsize^0 == 0 /\ tmp12^0-tmp12^post75 == 0 /\ -hsize___027^post75+hsize___027^0 == 0 /\ __const_9^0-__const_9^post75 == 0 /\ -checkpoint^post75+checkpoint^0 == 0 /\ -__const_256^post75+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post75 == 0 /\ bits33^0-bits33^post75 == 0), cost: 1
  75: l11 -> l10 : __const_10000^0'=__const_10000^post76, __const_16^0'=__const_16^post76, __const_2147483647^0'=__const_2147483647^post76, __const_256^0'=__const_256^post76, __const_257^0'=__const_257^post76, __const_429496^0'=__const_429496^post76, __const_50^0'=__const_50^post76, __const_53^0'=__const_53^post76, __const_65536^0'=__const_65536^post76, __const_8388607^0'=__const_8388607^post76, __const_8^0'=__const_8^post76, __const_9^0'=__const_9^post76, apsim_bound11113^0'=apsim_bound11113^post76, apsim_incnt^0'=apsim_incnt^post76, bits33^0'=bits33^post76, block_compress^0'=block_compress^post76, bytes_out^0'=bytes_out^post76, c37^0'=c37^post76, c7^0'=c7^post76, checkpoint^0'=checkpoint^post76, clear_flg^0'=clear_flg^post76, code31^0'=code31^post76, count^0'=count^post76, disp9^0'=disp9^post76, ent8^0'=ent8^post76, exit_stat^0'=exit_stat^post76, fcode5^0'=fcode5^post76, free_ent^0'=free_ent^post76, hshift11^0'=hshift11^post76, hsize^0'=hsize^post76, hsize___019^0'=hsize___019^post76, hsize___027^0'=hsize___027^post76, hsize_reg10^0'=hsize_reg10^post76, i21^0'=i21^post76, i29^0'=i29^post76, i3^0'=i3^post76, i41^0'=i41^post76, i45^0'=i45^post76, i6^0'=i6^post76, in_count^0'=in_count^post76, incnt^0'=incnt^post76, m122^0'=m122^post76, m130^0'=m130^post76, maxbits^0'=maxbits^post76, maxcode^0'=maxcode^post76, maxmaxcode^0'=maxmaxcode^post76, n40^0'=n40^post76, n44^0'=n44^post76, n_bits^0'=n_bits^post76, offset^0'=offset^post76, out_count^0'=out_count^post76, r_off32^0'=r_off32^post76, rat26^0'=rat26^post76, ratio^0'=ratio^post76, ret_getbyte18^0'=ret_getbyte18^post76, ret_getbyte25^0'=ret_getbyte25^post76, seed2^0'=seed2^post76, tabort4^0'=tabort4^post76, tmp12^0'=tmp12^post76, tmp___014^0'=tmp___014^post76, tmp___017^0'=tmp___017^post76, tmp___024^0'=tmp___024^post76, tmp___115^0'=tmp___115^post76, (-n44^post76+n44^0 == 0 /\ i21^0-i21^post76 == 0 /\ __const_50^0-__const_50^post76 == 0 /\ -r_off32^post76+r_off32^0 == 0 /\ -code31^post76+code31^0 == 0 /\ __const_16^0-__const_16^post76 == 0 /\ -m122^post76+m122^0 == 0 /\ -__const_2147483647^post76+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post76 == 0 /\ i3^0-i3^post76 == 0 /\ -n_bits^post76+n_bits^0 == 0 /\ exit_stat^0-exit_stat^post76 == 0 /\ __const_53^0-__const_53^post76 == 0 /\ __const_8^0-__const_8^post76 == 0 /\ -__const_10000^post76+__const_10000^0 == 0 /\ rat26^0-rat26^post76 == 0 /\ -ent8^post76+ent8^0 == 0 /\ -disp9^post76+disp9^0 == 0 /\ hsize___027^0-hsize___027^post76 == 0 /\ -maxcode^post76+maxcode^0 == 0 /\ __const_256^0-__const_256^post76 == 0 /\ -apsim_bound11113^post76+apsim_bound11113^0 == 0 /\ -tmp___017^post76+tmp___017^0 == 0 /\ -fcode5^post76+fcode5^0 == 0 /\ n40^0-n40^post76 == 0 /\ out_count^0-out_count^post76 == 0 /\ -__const_65536^post76+__const_65536^0 == 0 /\ -hsize^post76+hsize^0 == 0 /\ -i29^0 <= 0 /\ tmp___014^0-tmp___014^post76 == 0 /\ -block_compress^post76+block_compress^0 == 0 /\ bytes_out^0-bytes_out^post76 == 0 /\ offset^0-offset^post76 == 0 /\ -i29^post76+i29^0 == 0 /\ -tabort4^post76+tabort4^0 == 0 /\ maxbits^0-maxbits^post76 == 0 /\ -i41^post76+i41^0 == 0 /\ __const_9^0-__const_9^post76 == 0 /\ -i45^post76+i45^0 == 0 /\ count^0-count^post76 == 0 /\ -__const_8388607^post76+__const_8388607^0 == 0 /\ __const_257^0-__const_257^post76 == 0 /\ c37^0-c37^post76 == 0 /\ ret_getbyte25^0-ret_getbyte25^post76 == 0 /\ maxmaxcode^0-maxmaxcode^post76 == 0 /\ bits33^0-bits33^post76 == 0 /\ -in_count^post76+in_count^0 == 0 /\ hsize___019^0-hsize___019^post76 == 0 /\ -free_ent^post76+free_ent^0 == 0 /\ -ret_getbyte18^post76+ret_getbyte18^0 == 0 /\ -c7^post76+c7^0 == 0 /\ -tmp___024^post76+tmp___024^0 == 0 /\ checkpoint^0-checkpoint^post76 == 0 /\ i6^0-i6^post76 == 0 /\ apsim_incnt^0-apsim_incnt^post76 == 0 /\ -hsize_reg10^post76+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post76 == 0 /\ -clear_flg^post76+clear_flg^0 == 0 /\ tmp___115^0-tmp___115^post76 == 0 /\ -__const_429496^post76+__const_429496^0 == 0 /\ -incnt^post76+incnt^0 == 0 /\ seed2^0-seed2^post76 == 0 /\ ratio^0-ratio^post76 == 0 /\ m130^0-m130^post76 == 0), cost: 1
  10: l12 -> l9 : __const_10000^0'=__const_10000^post11, __const_16^0'=__const_16^post11, __const_2147483647^0'=__const_2147483647^post11, __const_256^0'=__const_256^post11, __const_257^0'=__const_257^post11, __const_429496^0'=__const_429496^post11, __const_50^0'=__const_50^post11, __const_53^0'=__const_53^post11, __const_65536^0'=__const_65536^post11, __const_8388607^0'=__const_8388607^post11, __const_8^0'=__const_8^post11, __const_9^0'=__const_9^post11, apsim_bound11113^0'=apsim_bound11113^post11, apsim_incnt^0'=apsim_incnt^post11, bits33^0'=bits33^post11, block_compress^0'=block_compress^post11, bytes_out^0'=bytes_out^post11, c37^0'=c37^post11, c7^0'=c7^post11, checkpoint^0'=checkpoint^post11, clear_flg^0'=clear_flg^post11, code31^0'=code31^post11, count^0'=count^post11, disp9^0'=disp9^post11, ent8^0'=ent8^post11, exit_stat^0'=exit_stat^post11, fcode5^0'=fcode5^post11, free_ent^0'=free_ent^post11, hshift11^0'=hshift11^post11, hsize^0'=hsize^post11, hsize___019^0'=hsize___019^post11, hsize___027^0'=hsize___027^post11, hsize_reg10^0'=hsize_reg10^post11, i21^0'=i21^post11, i29^0'=i29^post11, i3^0'=i3^post11, i41^0'=i41^post11, i45^0'=i45^post11, i6^0'=i6^post11, in_count^0'=in_count^post11, incnt^0'=incnt^post11, m122^0'=m122^post11, m130^0'=m130^post11, maxbits^0'=maxbits^post11, maxcode^0'=maxcode^post11, maxmaxcode^0'=maxmaxcode^post11, n40^0'=n40^post11, n44^0'=n44^post11, n_bits^0'=n_bits^post11, offset^0'=offset^post11, out_count^0'=out_count^post11, r_off32^0'=r_off32^post11, rat26^0'=rat26^post11, ratio^0'=ratio^post11, ret_getbyte18^0'=ret_getbyte18^post11, ret_getbyte25^0'=ret_getbyte25^post11, seed2^0'=seed2^post11, tabort4^0'=tabort4^post11, tmp12^0'=tmp12^post11, tmp___014^0'=tmp___014^post11, tmp___017^0'=tmp___017^post11, tmp___024^0'=tmp___024^post11, tmp___115^0'=tmp___115^post11, (hsize___027^0-hsize___027^post11 == 0 /\ i29^0-i29^post11 == 0 /\ __const_8388607^0-__const_8388607^post11 == 0 /\ -__const_429496^post11+__const_429496^0 == 0 /\ -hsize___019^post11+hsize___019^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post11 == 0 /\ __const_50^0-__const_50^post11 == 0 /\ -hsize_reg10^post11+hsize_reg10^0 == 0 /\ r_off32^0-r_off32^post11 == 0 /\ __const_10000^0-__const_10000^post11 == 0 /\ -hsize^post11+hsize^0 == 0 /\ -tmp___014^post11+tmp___014^0 == 0 /\ -i41^post11+i41^0 == 0 /\ -rat26^post11+rat26^0 == 0 /\ __const_9^0-__const_9^post11 == 0 /\ out_count^0-out_count^post11 == 0 /\ apsim_bound11113^0-apsim_bound11113^post11 == 0 /\ maxcode^0-maxcode^post11 == 0 /\ tmp12^post11-ret_getbyte18^0 == 0 /\ -__const_2147483647^post11+__const_2147483647^0 == 0 /\ __const_16^0-__const_16^post11 == 0 /\ i45^0-i45^post11 == 0 /\ maxmaxcode^0-maxmaxcode^post11 == 0 /\ tabort4^0-tabort4^post11 == 0 /\ -maxbits^post11+maxbits^0 == 0 /\ -exit_stat^post11+exit_stat^0 == 0 /\ -tmp___024^post11+tmp___024^0 == 0 /\ -tmp___115^post11+tmp___115^0 == 0 /\ m122^0-m122^post11 == 0 /\ -in_count^post11+in_count^0 == 0 /\ -tmp12^post11+ent8^post11 == 0 /\ -i21^post11+i21^0 == 0 /\ __const_257^0-__const_257^post11 == 0 /\ bits33^0-bits33^post11 == 0 /\ -i6^post11+i6^0 == 0 /\ -block_compress^post11+block_compress^0 == 0 /\ -__const_8^post11+__const_8^0 == 0 /\ -checkpoint^post11+checkpoint^0 == 0 /\ -clear_flg^post11+clear_flg^0 == 0 /\ n44^0-n44^post11 == 0 /\ count^0-count^post11 == 0 /\ -bytes_out^post11+bytes_out^0 == 0 /\ -ratio^post11+ratio^0 == 0 /\ fcode5^post11-hsize^0 == 0 /\ n_bits^0-n_bits^post11 == 0 /\ apsim_incnt^0-apsim_incnt^post11 == 0 /\ __const_256^0-__const_256^post11 == 0 /\ -i3^post11+i3^0 == 0 /\ -incnt^post11+incnt^0 == 0 /\ free_ent^0-free_ent^post11 == 0 /\ __const_53^0-__const_53^post11 == 0 /\ -offset^post11+offset^0 == 0 /\ c37^0-c37^post11 == 0 /\ -seed2^post11+seed2^0 == 0 /\ -code31^post11+code31^0 == 0 /\ -__const_65536^post11+__const_65536^0 == 0 /\ -disp9^post11+disp9^0 == 0 /\ -m130^post11+m130^0 == 0 /\ hshift11^post11 == 0 /\ c7^0-c7^post11 == 0 /\ -n40^post11+n40^0 == 0 /\ -ret_getbyte25^post11+ret_getbyte25^0 == 0 /\ tmp___017^0-tmp___017^post11 == 0), cost: 1
  11: l13 -> l14 : __const_10000^0'=__const_10000^post12, __const_16^0'=__const_16^post12, __const_2147483647^0'=__const_2147483647^post12, __const_256^0'=__const_256^post12, __const_257^0'=__const_257^post12, __const_429496^0'=__const_429496^post12, __const_50^0'=__const_50^post12, __const_53^0'=__const_53^post12, __const_65536^0'=__const_65536^post12, __const_8388607^0'=__const_8388607^post12, __const_8^0'=__const_8^post12, __const_9^0'=__const_9^post12, apsim_bound11113^0'=apsim_bound11113^post12, apsim_incnt^0'=apsim_incnt^post12, bits33^0'=bits33^post12, block_compress^0'=block_compress^post12, bytes_out^0'=bytes_out^post12, c37^0'=c37^post12, c7^0'=c7^post12, checkpoint^0'=checkpoint^post12, clear_flg^0'=clear_flg^post12, code31^0'=code31^post12, count^0'=count^post12, disp9^0'=disp9^post12, ent8^0'=ent8^post12, exit_stat^0'=exit_stat^post12, fcode5^0'=fcode5^post12, free_ent^0'=free_ent^post12, hshift11^0'=hshift11^post12, hsize^0'=hsize^post12, hsize___019^0'=hsize___019^post12, hsize___027^0'=hsize___027^post12, hsize_reg10^0'=hsize_reg10^post12, i21^0'=i21^post12, i29^0'=i29^post12, i3^0'=i3^post12, i41^0'=i41^post12, i45^0'=i45^post12, i6^0'=i6^post12, in_count^0'=in_count^post12, incnt^0'=incnt^post12, m122^0'=m122^post12, m130^0'=m130^post12, maxbits^0'=maxbits^post12, maxcode^0'=maxcode^post12, maxmaxcode^0'=maxmaxcode^post12, n40^0'=n40^post12, n44^0'=n44^post12, n_bits^0'=n_bits^post12, offset^0'=offset^post12, out_count^0'=out_count^post12, r_off32^0'=r_off32^post12, rat26^0'=rat26^post12, ratio^0'=ratio^post12, ret_getbyte18^0'=ret_getbyte18^post12, ret_getbyte25^0'=ret_getbyte25^post12, seed2^0'=seed2^post12, tabort4^0'=tabort4^post12, tmp12^0'=tmp12^post12, tmp___014^0'=tmp___014^post12, tmp___017^0'=tmp___017^post12, tmp___024^0'=tmp___024^post12, tmp___115^0'=tmp___115^post12, (-__const_8^post12+__const_8^0 == 0 /\ -code31^post12+code31^0 == 0 /\ -seed2^post12+seed2^0 == 0 /\ -apsim_incnt^post12+apsim_incnt^0 == 0 /\ -offset^post12+offset^0 == 0 /\ tmp12^0-tmp12^post12 == 0 /\ exit_stat^0-exit_stat^post12 == 0 /\ ret_getbyte18^0-ret_getbyte18^post12 == 0 /\ -ret_getbyte25^post12+ret_getbyte25^0 == 0 /\ tmp___017^0-tmp___017^post12 == 0 /\ tabort4^0-tabort4^post12 == 0 /\ i45^0-i45^post12 == 0 /\ -rat26^post12+rat26^0 == 0 /\ -in_count^post12+in_count^0 == 0 /\ hsize___027^0-hsize___027^post12 == 0 /\ -block_compress^post12+block_compress^0 == 0 /\ -m130^post12+m130^0 == 0 /\ -disp9^post12+disp9^0 == 0 /\ r_off32^0-r_off32^post12 == 0 /\ -ratio^post12+ratio^0 == 0 /\ -fcode5^post12+fcode5^0 == 0 /\ -hsize^post12+hsize^0 == 0 /\ -tmp___115^post12+tmp___115^0 == 0 /\ -n40^post12+n40^0 == 0 /\ m122^0-m122^post12 == 0 /\ out_count^0-out_count^post12 == 0 /\ apsim_bound11113^0-apsim_bound11113^post12 == 0 /\ -__const_16^post12+__const_16^0 == 0 /\ __const_10000^0-__const_10000^post12 == 0 /\ -__const_8388607^post12+__const_8388607^0 == 0 /\ maxcode^0-maxcode^post12 == 0 /\ -i29^post12+i29^0 == 0 /\ __const_53^0-__const_53^post12 == 0 /\ n_bits^0-n_bits^post12 == 0 /\ -__const_429496^post12+__const_429496^0 == 0 /\ -i3^post12+i3^0 == 0 /\ count^0-count^post12 == 0 /\ -i41^post12+i41^0 == 0 /\ c37^0-c37^post12 == 0 /\ bits33^0-bits33^post12 == 0 /\ -__const_65536^post12+__const_65536^0 == 0 /\ maxmaxcode^0-maxmaxcode^post12 == 0 /\ -clear_flg^post12+clear_flg^0 == 0 /\ hshift11^0-hshift11^post12 == 0 /\ -ent8^post12+ent8^0 == 0 /\ -bytes_out^post12+bytes_out^0 == 0 /\ -__const_9^post12+__const_9^0 == 0 /\ -maxbits^post12+maxbits^0 == 0 /\ -hsize_reg10^post12+hsize_reg10^0 == 0 /\ -tmp___024^post12+tmp___024^0 == 0 /\ -hsize___019^post12+hsize___019^0 == 0 /\ -c7^post12+c7^0 == 0 /\ __const_257^0-__const_257^post12 == 0 /\ checkpoint^0-checkpoint^post12 == 0 /\ free_ent^0-free_ent^post12 == 0 /\ -incnt^post12+incnt^0 == 0 /\ -tmp___014^post12+tmp___014^0 == 0 /\ i6^0-i6^post12 == 0 /\ n44^0-n44^post12 == 0 /\ __const_50^0-__const_50^post12 == 0 /\ -i21^post12+i21^0 == 0 /\ __const_256^0-__const_256^post12 == 0 /\ -__const_2147483647^post12+__const_2147483647^0 == 0), cost: 1
  72: l14 -> l51 : __const_10000^0'=__const_10000^post73, __const_16^0'=__const_16^post73, __const_2147483647^0'=__const_2147483647^post73, __const_256^0'=__const_256^post73, __const_257^0'=__const_257^post73, __const_429496^0'=__const_429496^post73, __const_50^0'=__const_50^post73, __const_53^0'=__const_53^post73, __const_65536^0'=__const_65536^post73, __const_8388607^0'=__const_8388607^post73, __const_8^0'=__const_8^post73, __const_9^0'=__const_9^post73, apsim_bound11113^0'=apsim_bound11113^post73, apsim_incnt^0'=apsim_incnt^post73, bits33^0'=bits33^post73, block_compress^0'=block_compress^post73, bytes_out^0'=bytes_out^post73, c37^0'=c37^post73, c7^0'=c7^post73, checkpoint^0'=checkpoint^post73, clear_flg^0'=clear_flg^post73, code31^0'=code31^post73, count^0'=count^post73, disp9^0'=disp9^post73, ent8^0'=ent8^post73, exit_stat^0'=exit_stat^post73, fcode5^0'=fcode5^post73, free_ent^0'=free_ent^post73, hshift11^0'=hshift11^post73, hsize^0'=hsize^post73, hsize___019^0'=hsize___019^post73, hsize___027^0'=hsize___027^post73, hsize_reg10^0'=hsize_reg10^post73, i21^0'=i21^post73, i29^0'=i29^post73, i3^0'=i3^post73, i41^0'=i41^post73, i45^0'=i45^post73, i6^0'=i6^post73, in_count^0'=in_count^post73, incnt^0'=incnt^post73, m122^0'=m122^post73, m130^0'=m130^post73, maxbits^0'=maxbits^post73, maxcode^0'=maxcode^post73, maxmaxcode^0'=maxmaxcode^post73, n40^0'=n40^post73, n44^0'=n44^post73, n_bits^0'=n_bits^post73, offset^0'=offset^post73, out_count^0'=out_count^post73, r_off32^0'=r_off32^post73, rat26^0'=rat26^post73, ratio^0'=ratio^post73, ret_getbyte18^0'=ret_getbyte18^post73, ret_getbyte25^0'=ret_getbyte25^post73, seed2^0'=seed2^post73, tabort4^0'=tabort4^post73, tmp12^0'=tmp12^post73, tmp___014^0'=tmp___014^post73, tmp___017^0'=tmp___017^post73, tmp___024^0'=tmp___024^post73, tmp___115^0'=tmp___115^post73, (__const_8^0-__const_8^post73 == 0 /\ -__const_65536^post73+__const_65536^0 == 0 /\ -hsize___019^post73+hsize___019^0 == 0 /\ rat26^0-rat26^post73 == 0 /\ -hsize_reg10^post73+hsize_reg10^0 == 0 /\ i3^0-i3^post73 == 0 /\ hsize___027^0-hsize___027^post73 == 0 /\ -maxcode^post73+maxcode^0 == 0 /\ -hsize^post73+hsize^0 == 0 /\ r_off32^post73-offset^0 == 0 /\ -__const_256^post73+__const_256^0 == 0 /\ i21^0-i21^post73 == 0 /\ exit_stat^0-exit_stat^post73 == 0 /\ -m122^post73+m122^0 == 0 /\ -apsim_bound11113^post73+apsim_bound11113^0 == 0 /\ -__const_10000^post73+__const_10000^0 == 0 /\ checkpoint^0-checkpoint^post73 == 0 /\ -__const_9^post73+__const_9^0 == 0 /\ __const_50^0-__const_50^post73 == 0 /\ __const_257^0-__const_257^post73 == 0 /\ -__const_8388607^post73+__const_8388607^0 == 0 /\ -__const_257^0+free_ent^post73 == 0 /\ count^0-count^post73 == 0 /\ tmp___014^0-tmp___014^post73 == 0 /\ out_count^0-out_count^post73 == 0 /\ maxmaxcode^0-maxmaxcode^post73 == 0 /\ -ret_getbyte18^post73+ret_getbyte18^0 == 0 /\ -n_bits^post73+n_bits^0 == 0 /\ incnt^0-incnt^post73 == 0 /\ n40^0-n40^post73 == 0 /\ offset^0-offset^post73 == 0 /\ -in_count^post73+in_count^0 == 0 /\ tmp12^0-tmp12^post73 == 0 /\ maxbits^0-maxbits^post73 == 0 /\ i6^0-i6^post73 == 0 /\ __const_16^0-__const_16^post73 == 0 /\ -1+clear_flg^post73 == 0 /\ -ratio^post73+ratio^0 == 0 /\ -c7^post73+c7^0 == 0 /\ -ent8^post73+ent8^0 == 0 /\ -block_compress^post73+block_compress^0 == 0 /\ -tmp___017^post73+tmp___017^0 == 0 /\ -disp9^post73+disp9^0 == 0 /\ tmp___115^0-tmp___115^post73 == 0 /\ -tmp___024^post73+tmp___024^0 == 0 /\ hshift11^0-hshift11^post73 == 0 /\ -i45^post73+i45^0 == 0 /\ -tabort4^post73+tabort4^0 == 0 /\ -seed2^post73+seed2^0 == 0 /\ -i29^post73+i29^0 == 0 /\ -i41^post73+i41^0 == 0 /\ apsim_incnt^0-apsim_incnt^post73 == 0 /\ -fcode5^post73+fcode5^0 == 0 /\ bytes_out^0-bytes_out^post73 == 0 /\ i29^0 <= 0 /\ c37^0-c37^post73 == 0 /\ __const_53^0-__const_53^post73 == 0 /\ __const_2147483647^0-__const_2147483647^post73 == 0 /\ -n_bits^0+bits33^post73 == 0 /\ m130^0-m130^post73 == 0 /\ -n44^post73+n44^0 == 0 /\ __const_429496^0-__const_429496^post73 == 0 /\ code31^post73-__const_256^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post73 == 0), cost: 1
  73: l14 -> l13 : __const_10000^0'=__const_10000^post74, __const_16^0'=__const_16^post74, __const_2147483647^0'=__const_2147483647^post74, __const_256^0'=__const_256^post74, __const_257^0'=__const_257^post74, __const_429496^0'=__const_429496^post74, __const_50^0'=__const_50^post74, __const_53^0'=__const_53^post74, __const_65536^0'=__const_65536^post74, __const_8388607^0'=__const_8388607^post74, __const_8^0'=__const_8^post74, __const_9^0'=__const_9^post74, apsim_bound11113^0'=apsim_bound11113^post74, apsim_incnt^0'=apsim_incnt^post74, bits33^0'=bits33^post74, block_compress^0'=block_compress^post74, bytes_out^0'=bytes_out^post74, c37^0'=c37^post74, c7^0'=c7^post74, checkpoint^0'=checkpoint^post74, clear_flg^0'=clear_flg^post74, code31^0'=code31^post74, count^0'=count^post74, disp9^0'=disp9^post74, ent8^0'=ent8^post74, exit_stat^0'=exit_stat^post74, fcode5^0'=fcode5^post74, free_ent^0'=free_ent^post74, hshift11^0'=hshift11^post74, hsize^0'=hsize^post74, hsize___019^0'=hsize___019^post74, hsize___027^0'=hsize___027^post74, hsize_reg10^0'=hsize_reg10^post74, i21^0'=i21^post74, i29^0'=i29^post74, i3^0'=i3^post74, i41^0'=i41^post74, i45^0'=i45^post74, i6^0'=i6^post74, in_count^0'=in_count^post74, incnt^0'=incnt^post74, m122^0'=m122^post74, m130^0'=m130^post74, maxbits^0'=maxbits^post74, maxcode^0'=maxcode^post74, maxmaxcode^0'=maxmaxcode^post74, n40^0'=n40^post74, n44^0'=n44^post74, n_bits^0'=n_bits^post74, offset^0'=offset^post74, out_count^0'=out_count^post74, r_off32^0'=r_off32^post74, rat26^0'=rat26^post74, ratio^0'=ratio^post74, ret_getbyte18^0'=ret_getbyte18^post74, ret_getbyte25^0'=ret_getbyte25^post74, seed2^0'=seed2^post74, tabort4^0'=tabort4^post74, tmp12^0'=tmp12^post74, tmp___014^0'=tmp___014^post74, tmp___017^0'=tmp___017^post74, tmp___024^0'=tmp___024^post74, tmp___115^0'=tmp___115^post74, (exit_stat^0-exit_stat^post74 == 0 /\ tmp12^0-tmp12^post74 == 0 /\ free_ent^0-free_ent^post74 == 0 /\ -clear_flg^post74+clear_flg^0 == 0 /\ __const_53^0-__const_53^post74 == 0 /\ -block_compress^post74+block_compress^0 == 0 /\ -ret_getbyte18^post74+ret_getbyte18^0 == 0 /\ __const_8^0-__const_8^post74 == 0 /\ -n_bits^post74+n_bits^0 == 0 /\ -n44^post74+n44^0 == 0 /\ -c7^post74+c7^0 == 0 /\ n40^0-n40^post74 == 0 /\ -i45^post74+i45^0 == 0 /\ -__const_256^post74+__const_256^0 == 0 /\ -incnt^post74+incnt^0 == 0 /\ -r_off32^post74+r_off32^0 == 0 /\ rat26^0-rat26^post74 == 0 /\ -apsim_bound11113^post74+apsim_bound11113^0 == 0 /\ -code31^post74+code31^0 == 0 /\ tmp___014^0-tmp___014^post74 == 0 /\ -fcode5^post74+fcode5^0 == 0 /\ -maxcode^post74+maxcode^0 == 0 /\ bytes_out^0-bytes_out^post74 == 0 /\ -tmp___017^post74+tmp___017^0 == 0 /\ 1-i29^0 <= 0 /\ -__const_65536^post74+__const_65536^0 == 0 /\ -ent8^post74+ent8^0 == 0 /\ i21^0-i21^post74 == 0 /\ out_count^0-out_count^post74 == 0 /\ __const_9^0-__const_9^post74 == 0 /\ c37^0-c37^post74 == 0 /\ -in_count^post74+in_count^0 == 0 /\ offset^0-offset^post74 == 0 /\ maxmaxcode^0-maxmaxcode^post74 == 0 /\ 1+i29^post74-i29^0 == 0 /\ -__const_8388607^post74+__const_8388607^0 == 0 /\ -hsize_reg10^post74+hsize_reg10^0 == 0 /\ -__const_50^post74+__const_50^0 == 0 /\ __const_16^0-__const_16^post74 == 0 /\ -__const_429496^post74+__const_429496^0 == 0 /\ -hsize^post74+hsize^0 == 0 /\ ratio^0-ratio^post74 == 0 /\ -i41^post74+i41^0 == 0 /\ -__const_2147483647^post74+__const_2147483647^0 == 0 /\ -__const_10000^post74+__const_10000^0 == 0 /\ __const_257^0-__const_257^post74 == 0 /\ ret_getbyte25^0-ret_getbyte25^post74 == 0 /\ hsize___027^0-hsize___027^post74 == 0 /\ m130^0-m130^post74 == 0 /\ seed2^0-seed2^post74 == 0 /\ bits33^0-bits33^post74 == 0 /\ -tabort4^post74+tabort4^0 == 0 /\ -m122^post74+m122^0 == 0 /\ i3^0-i3^post74 == 0 /\ hsize___019^0-hsize___019^post74 == 0 /\ checkpoint^0-checkpoint^post74 == 0 /\ -disp9^post74+disp9^0 == 0 /\ count^0-count^post74 == 0 /\ hshift11^0-hshift11^post74 == 0 /\ tmp___115^0-tmp___115^post74 == 0 /\ maxbits^0-maxbits^post74 == 0 /\ apsim_incnt^0-apsim_incnt^post74 == 0 /\ -tmp___024^post74+tmp___024^0 == 0 /\ i6^0-i6^post74 == 0), cost: 1
  12: l15 -> l12 : __const_10000^0'=__const_10000^post13, __const_16^0'=__const_16^post13, __const_2147483647^0'=__const_2147483647^post13, __const_256^0'=__const_256^post13, __const_257^0'=__const_257^post13, __const_429496^0'=__const_429496^post13, __const_50^0'=__const_50^post13, __const_53^0'=__const_53^post13, __const_65536^0'=__const_65536^post13, __const_8388607^0'=__const_8388607^post13, __const_8^0'=__const_8^post13, __const_9^0'=__const_9^post13, apsim_bound11113^0'=apsim_bound11113^post13, apsim_incnt^0'=apsim_incnt^post13, bits33^0'=bits33^post13, block_compress^0'=block_compress^post13, bytes_out^0'=bytes_out^post13, c37^0'=c37^post13, c7^0'=c7^post13, checkpoint^0'=checkpoint^post13, clear_flg^0'=clear_flg^post13, code31^0'=code31^post13, count^0'=count^post13, disp9^0'=disp9^post13, ent8^0'=ent8^post13, exit_stat^0'=exit_stat^post13, fcode5^0'=fcode5^post13, free_ent^0'=free_ent^post13, hshift11^0'=hshift11^post13, hsize^0'=hsize^post13, hsize___019^0'=hsize___019^post13, hsize___027^0'=hsize___027^post13, hsize_reg10^0'=hsize_reg10^post13, i21^0'=i21^post13, i29^0'=i29^post13, i3^0'=i3^post13, i41^0'=i41^post13, i45^0'=i45^post13, i6^0'=i6^post13, in_count^0'=in_count^post13, incnt^0'=incnt^post13, m122^0'=m122^post13, m130^0'=m130^post13, maxbits^0'=maxbits^post13, maxcode^0'=maxcode^post13, maxmaxcode^0'=maxmaxcode^post13, n40^0'=n40^post13, n44^0'=n44^post13, n_bits^0'=n_bits^post13, offset^0'=offset^post13, out_count^0'=out_count^post13, r_off32^0'=r_off32^post13, rat26^0'=rat26^post13, ratio^0'=ratio^post13, ret_getbyte18^0'=ret_getbyte18^post13, ret_getbyte25^0'=ret_getbyte25^post13, seed2^0'=seed2^post13, tabort4^0'=tabort4^post13, tmp12^0'=tmp12^post13, tmp___014^0'=tmp___014^post13, tmp___017^0'=tmp___017^post13, tmp___024^0'=tmp___024^post13, tmp___115^0'=tmp___115^post13, (-incnt^post13+incnt^0 == 0 /\ tmp___017^0-tmp___017^post13 == 0 /\ -tmp___014^post13+tmp___014^0 == 0 /\ free_ent^0-free_ent^post13 == 0 /\ -block_compress^post13+block_compress^0 == 0 /\ -tmp12^post13+tmp12^0 == 0 /\ -__const_8388607^post13+__const_8388607^0 == 0 /\ -fcode5^post13+fcode5^0 == 0 /\ m130^0-m130^post13 == 0 /\ -i29^post13+i29^0 == 0 /\ -tmp___115^post13+tmp___115^0 == 0 /\ -i41^post13+i41^0 == 0 /\ -i45^post13+i45^0 == 0 /\ tmp___024^0-tmp___024^post13 == 0 /\ -i21^post13+i21^0 == 0 /\ ret_getbyte18^post13-__const_429496^0 == 0 /\ bytes_out^0-bytes_out^post13 == 0 /\ tmp___017^0 <= 0 /\ __const_10000^0-__const_10000^post13 == 0 /\ __const_16^0-__const_16^post13 == 0 /\ -in_count^post13+in_count^0 == 0 /\ -c7^post13+c7^0 == 0 /\ -offset^post13+offset^0 == 0 /\ r_off32^0-r_off32^post13 == 0 /\ -apsim_incnt^post13+apsim_incnt^0 == 0 /\ c37^0-c37^post13 == 0 /\ -__const_429496^post13+__const_429496^0 == 0 /\ -hsize___019^post13+hsize___019^0 == 0 /\ -clear_flg^post13+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post13 == 0 /\ checkpoint^0-checkpoint^post13 == 0 /\ __const_256^0-__const_256^post13 == 0 /\ i6^0-i6^post13 == 0 /\ tabort4^0-tabort4^post13 == 0 /\ maxmaxcode^0-maxmaxcode^post13 == 0 /\ apsim_bound11113^0-apsim_bound11113^post13 == 0 /\ -hsize^post13+hsize^0 == 0 /\ -ent8^post13+ent8^0 == 0 /\ -__const_2147483647^post13+__const_2147483647^0 == 0 /\ out_count^0-out_count^post13 == 0 /\ -disp9^post13+disp9^0 == 0 /\ -rat26^post13+rat26^0 == 0 /\ -maxbits^post13+maxbits^0 == 0 /\ -n40^post13+n40^0 == 0 /\ -seed2^post13+seed2^0 == 0 /\ m122^0-m122^post13 == 0 /\ -code31^post13+code31^0 == 0 /\ exit_stat^0-exit_stat^post13 == 0 /\ -__const_9^post13+__const_9^0 == 0 /\ bits33^0-bits33^post13 == 0 /\ i3^0-i3^post13 == 0 /\ count^0-count^post13 == 0 /\ n44^0-n44^post13 == 0 /\ __const_50^0-__const_50^post13 == 0 /\ hsize_reg10^0-hsize_reg10^post13 == 0 /\ n_bits^0-n_bits^post13 == 0 /\ -ratio^post13+ratio^0 == 0 /\ __const_257^0-__const_257^post13 == 0 /\ __const_53^0-__const_53^post13 == 0 /\ hsize___027^0-hsize___027^post13 == 0 /\ hshift11^0-hshift11^post13 == 0 /\ -__const_65536^post13+__const_65536^0 == 0 /\ maxcode^0-maxcode^post13 == 0 /\ -__const_8^post13+__const_8^0 == 0), cost: 1
  13: l15 -> l12 : __const_10000^0'=__const_10000^post14, __const_16^0'=__const_16^post14, __const_2147483647^0'=__const_2147483647^post14, __const_256^0'=__const_256^post14, __const_257^0'=__const_257^post14, __const_429496^0'=__const_429496^post14, __const_50^0'=__const_50^post14, __const_53^0'=__const_53^post14, __const_65536^0'=__const_65536^post14, __const_8388607^0'=__const_8388607^post14, __const_8^0'=__const_8^post14, __const_9^0'=__const_9^post14, apsim_bound11113^0'=apsim_bound11113^post14, apsim_incnt^0'=apsim_incnt^post14, bits33^0'=bits33^post14, block_compress^0'=block_compress^post14, bytes_out^0'=bytes_out^post14, c37^0'=c37^post14, c7^0'=c7^post14, checkpoint^0'=checkpoint^post14, clear_flg^0'=clear_flg^post14, code31^0'=code31^post14, count^0'=count^post14, disp9^0'=disp9^post14, ent8^0'=ent8^post14, exit_stat^0'=exit_stat^post14, fcode5^0'=fcode5^post14, free_ent^0'=free_ent^post14, hshift11^0'=hshift11^post14, hsize^0'=hsize^post14, hsize___019^0'=hsize___019^post14, hsize___027^0'=hsize___027^post14, hsize_reg10^0'=hsize_reg10^post14, i21^0'=i21^post14, i29^0'=i29^post14, i3^0'=i3^post14, i41^0'=i41^post14, i45^0'=i45^post14, i6^0'=i6^post14, in_count^0'=in_count^post14, incnt^0'=incnt^post14, m122^0'=m122^post14, m130^0'=m130^post14, maxbits^0'=maxbits^post14, maxcode^0'=maxcode^post14, maxmaxcode^0'=maxmaxcode^post14, n40^0'=n40^post14, n44^0'=n44^post14, n_bits^0'=n_bits^post14, offset^0'=offset^post14, out_count^0'=out_count^post14, r_off32^0'=r_off32^post14, rat26^0'=rat26^post14, ratio^0'=ratio^post14, ret_getbyte18^0'=ret_getbyte18^post14, ret_getbyte25^0'=ret_getbyte25^post14, seed2^0'=seed2^post14, tabort4^0'=tabort4^post14, tmp12^0'=tmp12^post14, tmp___014^0'=tmp___014^post14, tmp___017^0'=tmp___017^post14, tmp___024^0'=tmp___024^post14, tmp___115^0'=tmp___115^post14, (0 == 0 /\ 1+incnt^post14-incnt^0 == 0 /\ -n40^post14+n40^0 == 0 /\ __const_50^0-__const_50^post14 == 0 /\ n44^0-n44^post14 == 0 /\ -apsim_bound11113^post14+apsim_bound11113^0 == 0 /\ -__const_9^post14+__const_9^0 == 0 /\ __const_8^0-__const_8^post14 == 0 /\ m130^0-m130^post14 == 0 /\ bytes_out^0-bytes_out^post14 == 0 /\ -hsize___019^post14+hsize___019^0 == 0 /\ count^0-count^post14 == 0 /\ __const_53^0-__const_53^post14 == 0 /\ apsim_incnt^0-apsim_incnt^post14 == 0 /\ hshift11^0-hshift11^post14 == 0 /\ -i29^post14+i29^0 == 0 /\ -n_bits^post14+n_bits^0 == 0 /\ -__const_65536^post14+__const_65536^0 == 0 /\ tmp___017^0-tmp___017^post14 == 0 /\ ret_getbyte25^0-ret_getbyte25^post14 == 0 /\ -bits33^post14+bits33^0 == 0 /\ -__const_2147483647^post14+__const_2147483647^0 == 0 /\ hsize^0-hsize^post14 == 0 /\ -i41^post14+i41^0 == 0 /\ __const_256^0-__const_256^post14 == 0 /\ -seed2^post14+seed2^0 == 0 /\ c37^0-c37^post14 == 0 /\ -__const_10000^post14+__const_10000^0 == 0 /\ __const_16^0-__const_16^post14 == 0 /\ -ent8^post14+ent8^0 == 0 /\ -maxbits^post14+maxbits^0 == 0 /\ m122^0-m122^post14 == 0 /\ exit_stat^0-exit_stat^post14 == 0 /\ tmp12^0-tmp12^post14 == 0 /\ -in_count^post14+in_count^0 == 0 /\ hsize___027^0-hsize___027^post14 == 0 /\ -__const_8388607^post14+__const_8388607^0 == 0 /\ -tmp___115^post14+tmp___115^0 == 0 /\ -tmp___024^post14+tmp___024^0 == 0 /\ -c7^post14+c7^0 == 0 /\ 1-tmp___017^0 <= 0 /\ rat26^0-rat26^post14 == 0 /\ -clear_flg^post14+clear_flg^0 == 0 /\ fcode5^0-fcode5^post14 == 0 /\ -free_ent^post14+free_ent^0 == 0 /\ -i21^post14+i21^0 == 0 /\ -block_compress^post14+block_compress^0 == 0 /\ __const_257^0-__const_257^post14 == 0 /\ i6^0-i6^post14 == 0 /\ checkpoint^0-checkpoint^post14 == 0 /\ -ratio^post14+ratio^0 == 0 /\ i3^0-i3^post14 == 0 /\ -tmp___014^post14+tmp___014^0 == 0 /\ r_off32^0-r_off32^post14 == 0 /\ tabort4^0-tabort4^post14 == 0 /\ out_count^0-out_count^post14 == 0 /\ -__const_429496^post14+__const_429496^0 == 0 /\ maxmaxcode^0-maxmaxcode^post14 == 0 /\ -code31^post14+code31^0 == 0 /\ maxcode^0-maxcode^post14 == 0 /\ -offset^post14+offset^0 == 0 /\ -i45^post14+i45^0 == 0 /\ hsize_reg10^0-hsize_reg10^post14 == 0 /\ -disp9^post14+disp9^0 == 0), cost: 1
  14: l16 -> l12 : __const_10000^0'=__const_10000^post15, __const_16^0'=__const_16^post15, __const_2147483647^0'=__const_2147483647^post15, __const_256^0'=__const_256^post15, __const_257^0'=__const_257^post15, __const_429496^0'=__const_429496^post15, __const_50^0'=__const_50^post15, __const_53^0'=__const_53^post15, __const_65536^0'=__const_65536^post15, __const_8388607^0'=__const_8388607^post15, __const_8^0'=__const_8^post15, __const_9^0'=__const_9^post15, apsim_bound11113^0'=apsim_bound11113^post15, apsim_incnt^0'=apsim_incnt^post15, bits33^0'=bits33^post15, block_compress^0'=block_compress^post15, bytes_out^0'=bytes_out^post15, c37^0'=c37^post15, c7^0'=c7^post15, checkpoint^0'=checkpoint^post15, clear_flg^0'=clear_flg^post15, code31^0'=code31^post15, count^0'=count^post15, disp9^0'=disp9^post15, ent8^0'=ent8^post15, exit_stat^0'=exit_stat^post15, fcode5^0'=fcode5^post15, free_ent^0'=free_ent^post15, hshift11^0'=hshift11^post15, hsize^0'=hsize^post15, hsize___019^0'=hsize___019^post15, hsize___027^0'=hsize___027^post15, hsize_reg10^0'=hsize_reg10^post15, i21^0'=i21^post15, i29^0'=i29^post15, i3^0'=i3^post15, i41^0'=i41^post15, i45^0'=i45^post15, i6^0'=i6^post15, in_count^0'=in_count^post15, incnt^0'=incnt^post15, m122^0'=m122^post15, m130^0'=m130^post15, maxbits^0'=maxbits^post15, maxcode^0'=maxcode^post15, maxmaxcode^0'=maxmaxcode^post15, n40^0'=n40^post15, n44^0'=n44^post15, n_bits^0'=n_bits^post15, offset^0'=offset^post15, out_count^0'=out_count^post15, r_off32^0'=r_off32^post15, rat26^0'=rat26^post15, ratio^0'=ratio^post15, ret_getbyte18^0'=ret_getbyte18^post15, ret_getbyte25^0'=ret_getbyte25^post15, seed2^0'=seed2^post15, tabort4^0'=tabort4^post15, tmp12^0'=tmp12^post15, tmp___014^0'=tmp___014^post15, tmp___017^0'=tmp___017^post15, tmp___024^0'=tmp___024^post15, tmp___115^0'=tmp___115^post15, (-i29^post15+i29^0 == 0 /\ -m122^post15+m122^0 == 0 /\ __const_53^0-__const_53^post15 == 0 /\ -i41^post15+i41^0 == 0 /\ __const_65536^0-__const_65536^post15 == 0 /\ -incnt^post15+incnt^0 == 0 /\ -i45^post15+i45^0 == 0 /\ apsim_incnt^0-apsim_incnt^post15 == 0 /\ hshift11^0-hshift11^post15 == 0 /\ tmp___115^0-tmp___115^post15 == 0 /\ __const_16^0-__const_16^post15 == 0 /\ n44^0-n44^post15 == 0 /\ -tmp___024^post15+tmp___024^0 == 0 /\ i21^0-i21^post15 == 0 /\ -in_count^post15+in_count^0 == 0 /\ code31^0-code31^post15 == 0 /\ free_ent^0-free_ent^post15 == 0 /\ -clear_flg^post15+clear_flg^0 == 0 /\ __const_8^0-__const_8^post15 == 0 /\ __const_257^0-__const_257^post15 == 0 /\ ret_getbyte18^post15-__const_429496^0 == 0 /\ -hsize_reg10^post15+hsize_reg10^0 == 0 /\ -__const_256^post15+__const_256^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post15 == 0 /\ rat26^0-rat26^post15 == 0 /\ -c7^post15+c7^0 == 0 /\ -bytes_out^post15+bytes_out^0 == 0 /\ c37^0-c37^post15 == 0 /\ -n_bits^post15+n_bits^0 == 0 /\ hsize___019^0-hsize___019^post15 == 0 /\ ent8^0-ent8^post15 == 0 /\ -r_off32^post15+r_off32^0 == 0 /\ maxmaxcode^0-maxmaxcode^post15 == 0 /\ -seed2^post15+seed2^0 == 0 /\ n40^0-n40^post15 == 0 /\ -tabort4^post15+tabort4^0 == 0 /\ -__const_429496^post15+__const_429496^0 == 0 /\ exit_stat^0-exit_stat^post15 == 0 /\ out_count^0-out_count^post15 == 0 /\ -count^post15+count^0 == 0 /\ __const_9^0-__const_9^post15 == 0 /\ -__const_50^post15+__const_50^0 == 0 /\ -fcode5^post15+fcode5^0 == 0 /\ -disp9^post15+disp9^0 == 0 /\ -maxcode^post15+maxcode^0 == 0 /\ tmp___014^0-tmp___014^post15 == 0 /\ -tmp___017^post15+tmp___017^0 == 0 /\ offset^0-offset^post15 == 0 /\ m130^0-m130^post15 == 0 /\ -i6^post15+i6^0 == 0 /\ -apsim_bound11113^post15+apsim_bound11113^0 == 0 /\ -checkpoint^post15+checkpoint^0 == 0 /\ i3^0-i3^post15 == 0 /\ -hsize^post15+hsize^0 == 0 /\ tmp12^0-tmp12^post15 == 0 /\ -__const_2147483647^post15+__const_2147483647^0 == 0 /\ -__const_10000^post15+__const_10000^0 == 0 /\ -hsize___027^post15+hsize___027^0 == 0 /\ maxbits^0-maxbits^post15 == 0 /\ bits33^0-bits33^post15 == 0 /\ -__const_8388607^post15+__const_8388607^0 == 0 /\ -block_compress^post15+block_compress^0 == 0 /\ -ratio^post15+ratio^0 == 0 /\ incnt^0 <= 0), cost: 1
  15: l16 -> l15 : __const_10000^0'=__const_10000^post16, __const_16^0'=__const_16^post16, __const_2147483647^0'=__const_2147483647^post16, __const_256^0'=__const_256^post16, __const_257^0'=__const_257^post16, __const_429496^0'=__const_429496^post16, __const_50^0'=__const_50^post16, __const_53^0'=__const_53^post16, __const_65536^0'=__const_65536^post16, __const_8388607^0'=__const_8388607^post16, __const_8^0'=__const_8^post16, __const_9^0'=__const_9^post16, apsim_bound11113^0'=apsim_bound11113^post16, apsim_incnt^0'=apsim_incnt^post16, bits33^0'=bits33^post16, block_compress^0'=block_compress^post16, bytes_out^0'=bytes_out^post16, c37^0'=c37^post16, c7^0'=c7^post16, checkpoint^0'=checkpoint^post16, clear_flg^0'=clear_flg^post16, code31^0'=code31^post16, count^0'=count^post16, disp9^0'=disp9^post16, ent8^0'=ent8^post16, exit_stat^0'=exit_stat^post16, fcode5^0'=fcode5^post16, free_ent^0'=free_ent^post16, hshift11^0'=hshift11^post16, hsize^0'=hsize^post16, hsize___019^0'=hsize___019^post16, hsize___027^0'=hsize___027^post16, hsize_reg10^0'=hsize_reg10^post16, i21^0'=i21^post16, i29^0'=i29^post16, i3^0'=i3^post16, i41^0'=i41^post16, i45^0'=i45^post16, i6^0'=i6^post16, in_count^0'=in_count^post16, incnt^0'=incnt^post16, m122^0'=m122^post16, m130^0'=m130^post16, maxbits^0'=maxbits^post16, maxcode^0'=maxcode^post16, maxmaxcode^0'=maxmaxcode^post16, n40^0'=n40^post16, n44^0'=n44^post16, n_bits^0'=n_bits^post16, offset^0'=offset^post16, out_count^0'=out_count^post16, r_off32^0'=r_off32^post16, rat26^0'=rat26^post16, ratio^0'=ratio^post16, ret_getbyte18^0'=ret_getbyte18^post16, ret_getbyte25^0'=ret_getbyte25^post16, seed2^0'=seed2^post16, tabort4^0'=tabort4^post16, tmp12^0'=tmp12^post16, tmp___014^0'=tmp___014^post16, tmp___017^0'=tmp___017^post16, tmp___024^0'=tmp___024^post16, tmp___115^0'=tmp___115^post16, (-count^post16+count^0 == 0 /\ -hsize___027^post16+hsize___027^0 == 0 /\ __const_50^0-__const_50^post16 == 0 /\ -fcode5^post16+fcode5^0 == 0 /\ -disp9^post16+disp9^0 == 0 /\ -hsize_reg10^post16+hsize_reg10^0 == 0 /\ bits33^0-bits33^post16 == 0 /\ __const_16^0-__const_16^post16 == 0 /\ -n40^post16+n40^0 == 0 /\ tmp___115^0-tmp___115^post16 == 0 /\ code31^0-code31^post16 == 0 /\ -hsize^post16+hsize^0 == 0 /\ -exit_stat^post16+exit_stat^0 == 0 /\ n44^0-n44^post16 == 0 /\ -__const_8^post16+__const_8^0 == 0 /\ -__const_2147483647^post16+__const_2147483647^0 == 0 /\ -__const_10000^post16+__const_10000^0 == 0 /\ m130^0-m130^post16 == 0 /\ __const_53^0-__const_53^post16 == 0 /\ -tmp___014^post16+tmp___014^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post16 == 0 /\ -seed2^post16+seed2^0 == 0 /\ tabort4^0-tabort4^post16 == 0 /\ c37^0-c37^post16 == 0 /\ -i29^post16+i29^0 == 0 /\ __const_256^0-__const_256^post16 == 0 /\ c7^0-c7^post16 == 0 /\ -n_bits^post16+n_bits^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post16 == 0 /\ hshift11^0-hshift11^post16 == 0 /\ 1-apsim_incnt^0+apsim_incnt^post16 == 0 /\ -__const_65536^post16+__const_65536^0 == 0 /\ -apsim_incnt^0+tmp___017^post16 == 0 /\ -i6^post16+i6^0 == 0 /\ free_ent^0-free_ent^post16 == 0 /\ rat26^0-rat26^post16 == 0 /\ -block_compress^post16+block_compress^0 == 0 /\ -clear_flg^post16+clear_flg^0 == 0 /\ -checkpoint^post16+checkpoint^0 == 0 /\ -bytes_out^post16+bytes_out^0 == 0 /\ -ratio^post16+ratio^0 == 0 /\ -ret_getbyte18^post16+ret_getbyte18^0 == 0 /\ -maxbits^post16+maxbits^0 == 0 /\ -tmp___024^post16+tmp___024^0 == 0 /\ -maxcode^post16+maxcode^0 == 0 /\ -i3^post16+i3^0 == 0 /\ -i41^post16+i41^0 == 0 /\ i21^0-i21^post16 == 0 /\ -m122^post16+m122^0 == 0 /\ -__const_8388607^post16+__const_8388607^0 == 0 /\ tmp12^0-tmp12^post16 == 0 /\ hsize___019^0-hsize___019^post16 == 0 /\ __const_257^0-__const_257^post16 == 0 /\ -incnt^post16+incnt^0 == 0 /\ ent8^0-ent8^post16 == 0 /\ i45^0-i45^post16 == 0 /\ maxmaxcode^0-maxmaxcode^post16 == 0 /\ out_count^0-out_count^post16 == 0 /\ -__const_429496^post16+__const_429496^0 == 0 /\ -__const_9^post16+__const_9^0 == 0 /\ -in_count^post16+in_count^0 == 0 /\ offset^0-offset^post16 == 0 /\ -r_off32^post16+r_off32^0 == 0 /\ 1-incnt^0 <= 0), cost: 1
  16: l17 -> l16 : __const_10000^0'=__const_10000^post17, __const_16^0'=__const_16^post17, __const_2147483647^0'=__const_2147483647^post17, __const_256^0'=__const_256^post17, __const_257^0'=__const_257^post17, __const_429496^0'=__const_429496^post17, __const_50^0'=__const_50^post17, __const_53^0'=__const_53^post17, __const_65536^0'=__const_65536^post17, __const_8388607^0'=__const_8388607^post17, __const_8^0'=__const_8^post17, __const_9^0'=__const_9^post17, apsim_bound11113^0'=apsim_bound11113^post17, apsim_incnt^0'=apsim_incnt^post17, bits33^0'=bits33^post17, block_compress^0'=block_compress^post17, bytes_out^0'=bytes_out^post17, c37^0'=c37^post17, c7^0'=c7^post17, checkpoint^0'=checkpoint^post17, clear_flg^0'=clear_flg^post17, code31^0'=code31^post17, count^0'=count^post17, disp9^0'=disp9^post17, ent8^0'=ent8^post17, exit_stat^0'=exit_stat^post17, fcode5^0'=fcode5^post17, free_ent^0'=free_ent^post17, hshift11^0'=hshift11^post17, hsize^0'=hsize^post17, hsize___019^0'=hsize___019^post17, hsize___027^0'=hsize___027^post17, hsize_reg10^0'=hsize_reg10^post17, i21^0'=i21^post17, i29^0'=i29^post17, i3^0'=i3^post17, i41^0'=i41^post17, i45^0'=i45^post17, i6^0'=i6^post17, in_count^0'=in_count^post17, incnt^0'=incnt^post17, m122^0'=m122^post17, m130^0'=m130^post17, maxbits^0'=maxbits^post17, maxcode^0'=maxcode^post17, maxmaxcode^0'=maxmaxcode^post17, n40^0'=n40^post17, n44^0'=n44^post17, n_bits^0'=n_bits^post17, offset^0'=offset^post17, out_count^0'=out_count^post17, r_off32^0'=r_off32^post17, rat26^0'=rat26^post17, ratio^0'=ratio^post17, ret_getbyte18^0'=ret_getbyte18^post17, ret_getbyte25^0'=ret_getbyte25^post17, seed2^0'=seed2^post17, tabort4^0'=tabort4^post17, tmp12^0'=tmp12^post17, tmp___014^0'=tmp___014^post17, tmp___017^0'=tmp___017^post17, tmp___024^0'=tmp___024^post17, tmp___115^0'=tmp___115^post17, (__const_53^0-__const_53^post17 == 0 /\ out_count^0-out_count^post17 == 0 /\ ret_getbyte25^0-ret_getbyte25^post17 == 0 /\ apsim_incnt^0-apsim_incnt^post17 == 0 /\ c37^0-c37^post17 == 0 /\ -i6^post17+i6^0 == 0 /\ -in_count^post17+in_count^0 == 0 /\ -__const_8388607^post17+__const_8388607^0 == 0 /\ offset^0-offset^post17 == 0 /\ -i21^post17+i21^0 == 0 /\ m130^0-m130^post17 == 0 /\ ent8^0-ent8^post17 == 0 /\ -checkpoint^post17+checkpoint^0 == 0 /\ -clear_flg^post17+clear_flg^0 == 0 /\ -__const_257^0+free_ent^post17 == 0 /\ -bytes_out^post17+bytes_out^0 == 0 /\ -ratio^post17+ratio^0 == 0 /\ __const_16^0-__const_16^post17 == 0 /\ -n_bits^post17+n_bits^0 == 0 /\ code31^0-code31^post17 == 0 /\ c7^0-c7^post17 == 0 /\ __const_257^0-__const_257^post17 == 0 /\ hsize___027^0-hsize___027^post17 == 0 /\ i29^0-i29^post17 == 0 /\ -__const_9^post17+__const_9^0 == 0 /\ -m122^post17+m122^0 == 0 /\ bits33^0-bits33^post17 == 0 /\ tmp12^0-tmp12^post17 == 0 /\ -tmp___014^post17+tmp___014^0 == 0 /\ -r_off32^post17+r_off32^0 == 0 /\ -disp9^post17+disp9^0 == 0 /\ -exit_stat^post17+exit_stat^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post17 == 0 /\ tabort4^0-tabort4^post17 == 0 /\ __const_50^0-__const_50^post17 == 0 /\ -tmp___024^post17+tmp___024^0 == 0 /\ n44^0-n44^post17 == 0 /\ hsize___019^0-hsize___019^post17 == 0 /\ __const_256^0-__const_256^post17 == 0 /\ tmp___115^0-tmp___115^post17 == 0 /\ -maxbits^post17+maxbits^0 == 0 /\ -i3^post17+i3^0 == 0 /\ -n40^post17+n40^0 == 0 /\ hshift11^0-hshift11^post17 == 0 /\ -__const_8^post17+__const_8^0 == 0 /\ i45^0-i45^post17 == 0 /\ -hsize_reg10^post17+hsize_reg10^0 == 0 /\ -__const_429496^post17+__const_429496^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post17 == 0 /\ -hsize^post17+hsize^0 == 0 /\ block_compress^0-block_compress^post17 == 0 /\ -incnt^post17+incnt^0 == 0 /\ -__const_65536^post17+__const_65536^0 == 0 /\ rat26^0-rat26^post17 == 0 /\ -count^post17+count^0 == 0 /\ -__const_2147483647^post17+__const_2147483647^0 == 0 /\ -seed2^post17+seed2^0 == 0 /\ maxmaxcode^0-maxmaxcode^post17 == 0 /\ __const_10000^0-__const_10000^post17 == 0 /\ tmp___017^0-tmp___017^post17 == 0 /\ -fcode5^post17+fcode5^0 == 0 /\ -maxcode^post17+maxcode^0 == 0 /\ -i41^post17+i41^0 == 0), cost: 1
  17: l18 -> l16 : __const_10000^0'=__const_10000^post18, __const_16^0'=__const_16^post18, __const_2147483647^0'=__const_2147483647^post18, __const_256^0'=__const_256^post18, __const_257^0'=__const_257^post18, __const_429496^0'=__const_429496^post18, __const_50^0'=__const_50^post18, __const_53^0'=__const_53^post18, __const_65536^0'=__const_65536^post18, __const_8388607^0'=__const_8388607^post18, __const_8^0'=__const_8^post18, __const_9^0'=__const_9^post18, apsim_bound11113^0'=apsim_bound11113^post18, apsim_incnt^0'=apsim_incnt^post18, bits33^0'=bits33^post18, block_compress^0'=block_compress^post18, bytes_out^0'=bytes_out^post18, c37^0'=c37^post18, c7^0'=c7^post18, checkpoint^0'=checkpoint^post18, clear_flg^0'=clear_flg^post18, code31^0'=code31^post18, count^0'=count^post18, disp9^0'=disp9^post18, ent8^0'=ent8^post18, exit_stat^0'=exit_stat^post18, fcode5^0'=fcode5^post18, free_ent^0'=free_ent^post18, hshift11^0'=hshift11^post18, hsize^0'=hsize^post18, hsize___019^0'=hsize___019^post18, hsize___027^0'=hsize___027^post18, hsize_reg10^0'=hsize_reg10^post18, i21^0'=i21^post18, i29^0'=i29^post18, i3^0'=i3^post18, i41^0'=i41^post18, i45^0'=i45^post18, i6^0'=i6^post18, in_count^0'=in_count^post18, incnt^0'=incnt^post18, m122^0'=m122^post18, m130^0'=m130^post18, maxbits^0'=maxbits^post18, maxcode^0'=maxcode^post18, maxmaxcode^0'=maxmaxcode^post18, n40^0'=n40^post18, n44^0'=n44^post18, n_bits^0'=n_bits^post18, offset^0'=offset^post18, out_count^0'=out_count^post18, r_off32^0'=r_off32^post18, rat26^0'=rat26^post18, ratio^0'=ratio^post18, ret_getbyte18^0'=ret_getbyte18^post18, ret_getbyte25^0'=ret_getbyte25^post18, seed2^0'=seed2^post18, tabort4^0'=tabort4^post18, tmp12^0'=tmp12^post18, tmp___014^0'=tmp___014^post18, tmp___017^0'=tmp___017^post18, tmp___024^0'=tmp___024^post18, tmp___115^0'=tmp___115^post18, (maxcode^0-maxcode^post18 == 0 /\ ent8^0-ent8^post18 == 0 /\ -__const_65536^post18+__const_65536^0 == 0 /\ c7^0-c7^post18 == 0 /\ -__const_429496^post18+__const_429496^0 == 0 /\ -i3^post18+i3^0 == 0 /\ tabort4^0-tabort4^post18 == 0 /\ -i41^post18+i41^0 == 0 /\ __const_257^0-__const_257^post18 == 0 /\ r_off32^0-r_off32^post18 == 0 /\ exit_stat^0-exit_stat^post18 == 0 /\ out_count^0-out_count^post18 == 0 /\ apsim_incnt^0-apsim_incnt^post18 == 0 /\ i29^0-i29^post18 == 0 /\ __const_256^0-__const_256^post18 == 0 /\ -apsim_bound11113^post18+apsim_bound11113^0 == 0 /\ -__const_9^post18+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post18 == 0 /\ -__const_8388607^post18+__const_8388607^0 == 0 /\ -bytes_out^post18+bytes_out^0 == 0 /\ m130^0-m130^post18 == 0 /\ -tmp___115^post18+tmp___115^0 == 0 /\ -n40^post18+n40^0 == 0 /\ -fcode5^post18+fcode5^0 == 0 /\ __const_53^0-__const_53^post18 == 0 /\ -hsize_reg10^post18+hsize_reg10^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post18 == 0 /\ -clear_flg^post18+clear_flg^0 == 0 /\ -i21^post18+i21^0 == 0 /\ -incnt^post18+incnt^0 == 0 /\ tmp12^0-tmp12^post18 == 0 /\ -bits33^post18+bits33^0 == 0 /\ -__const_2147483647^post18+__const_2147483647^0 == 0 /\ -hsize^post18+hsize^0 == 0 /\ hsize___027^0-hsize___027^post18 == 0 /\ -tmp___014^post18+tmp___014^0 == 0 /\ -offset^post18+offset^0 == 0 /\ -ret_getbyte25^post18+ret_getbyte25^0 == 0 /\ i45^0-i45^post18 == 0 /\ -seed2^post18+seed2^0 == 0 /\ -n_bits^post18+n_bits^0 == 0 /\ __const_8^0-__const_8^post18 == 0 /\ -count^post18+count^0 == 0 /\ -block_compress^0 <= 0 /\ n44^0-n44^post18 == 0 /\ -disp9^post18+disp9^0 == 0 /\ __const_50^0-__const_50^post18 == 0 /\ -in_count^post18+in_count^0 == 0 /\ code31^0-code31^post18 == 0 /\ -ratio^post18+ratio^0 == 0 /\ -tmp___024^post18+tmp___024^0 == 0 /\ __const_10000^0-__const_10000^post18 == 0 /\ -maxbits^post18+maxbits^0 == 0 /\ -i6^post18+i6^0 == 0 /\ hshift11^0-hshift11^post18 == 0 /\ tmp___017^0-tmp___017^post18 == 0 /\ -checkpoint^post18+checkpoint^0 == 0 /\ block_compress^0 <= 0 /\ m122^0-m122^post18 == 0 /\ c37^0-c37^post18 == 0 /\ -hsize___019^post18+hsize___019^0 == 0 /\ rat26^0-rat26^post18 == 0 /\ -__const_256^0+free_ent^post18 == 0 /\ -__const_16^post18+__const_16^0 == 0 /\ -block_compress^post18+block_compress^0 == 0), cost: 1
  18: l18 -> l17 : __const_10000^0'=__const_10000^post19, __const_16^0'=__const_16^post19, __const_2147483647^0'=__const_2147483647^post19, __const_256^0'=__const_256^post19, __const_257^0'=__const_257^post19, __const_429496^0'=__const_429496^post19, __const_50^0'=__const_50^post19, __const_53^0'=__const_53^post19, __const_65536^0'=__const_65536^post19, __const_8388607^0'=__const_8388607^post19, __const_8^0'=__const_8^post19, __const_9^0'=__const_9^post19, apsim_bound11113^0'=apsim_bound11113^post19, apsim_incnt^0'=apsim_incnt^post19, bits33^0'=bits33^post19, block_compress^0'=block_compress^post19, bytes_out^0'=bytes_out^post19, c37^0'=c37^post19, c7^0'=c7^post19, checkpoint^0'=checkpoint^post19, clear_flg^0'=clear_flg^post19, code31^0'=code31^post19, count^0'=count^post19, disp9^0'=disp9^post19, ent8^0'=ent8^post19, exit_stat^0'=exit_stat^post19, fcode5^0'=fcode5^post19, free_ent^0'=free_ent^post19, hshift11^0'=hshift11^post19, hsize^0'=hsize^post19, hsize___019^0'=hsize___019^post19, hsize___027^0'=hsize___027^post19, hsize_reg10^0'=hsize_reg10^post19, i21^0'=i21^post19, i29^0'=i29^post19, i3^0'=i3^post19, i41^0'=i41^post19, i45^0'=i45^post19, i6^0'=i6^post19, in_count^0'=in_count^post19, incnt^0'=incnt^post19, m122^0'=m122^post19, m130^0'=m130^post19, maxbits^0'=maxbits^post19, maxcode^0'=maxcode^post19, maxmaxcode^0'=maxmaxcode^post19, n40^0'=n40^post19, n44^0'=n44^post19, n_bits^0'=n_bits^post19, offset^0'=offset^post19, out_count^0'=out_count^post19, r_off32^0'=r_off32^post19, rat26^0'=rat26^post19, ratio^0'=ratio^post19, ret_getbyte18^0'=ret_getbyte18^post19, ret_getbyte25^0'=ret_getbyte25^post19, seed2^0'=seed2^post19, tabort4^0'=tabort4^post19, tmp12^0'=tmp12^post19, tmp___014^0'=tmp___014^post19, tmp___017^0'=tmp___017^post19, tmp___024^0'=tmp___024^post19, tmp___115^0'=tmp___115^post19, (-n_bits^post19+n_bits^0 == 0 /\ m130^0-m130^post19 == 0 /\ -r_off32^post19+r_off32^0 == 0 /\ hsize___019^0-hsize___019^post19 == 0 /\ offset^0-offset^post19 == 0 /\ code31^0-code31^post19 == 0 /\ -tmp___014^post19+tmp___014^0 == 0 /\ -__const_257^post19+__const_257^0 == 0 /\ -seed2^post19+seed2^0 == 0 /\ -fcode5^post19+fcode5^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post19 == 0 /\ -__const_16^post19+__const_16^0 == 0 /\ -block_compress^post19+block_compress^0 == 0 /\ -__const_2147483647^post19+__const_2147483647^0 == 0 /\ -exit_stat^post19+exit_stat^0 == 0 /\ -disp9^post19+disp9^0 == 0 /\ -count^post19+count^0 == 0 /\ -tmp___024^post19+tmp___024^0 == 0 /\ n44^0-n44^post19 == 0 /\ c37^0-c37^post19 == 0 /\ -tmp___115^post19+tmp___115^0 == 0 /\ -i6^post19+i6^0 == 0 /\ -maxbits^post19+maxbits^0 == 0 /\ c7^0-c7^post19 == 0 /\ -checkpoint^post19+checkpoint^0 == 0 /\ tabort4^0-tabort4^post19 == 0 /\ hsize___027^0-hsize___027^post19 == 0 /\ -__const_65536^post19+__const_65536^0 == 0 /\ i29^0-i29^post19 == 0 /\ -ratio^post19+ratio^0 == 0 /\ apsim_incnt^0-apsim_incnt^post19 == 0 /\ -m122^post19+m122^0 == 0 /\ __const_50^0-__const_50^post19 == 0 /\ -i3^post19+i3^0 == 0 /\ -i41^post19+i41^0 == 0 /\ -incnt^post19+incnt^0 == 0 /\ n40^0-n40^post19 == 0 /\ hshift11^0-hshift11^post19 == 0 /\ __const_10000^0-__const_10000^post19 == 0 /\ tmp___017^0-tmp___017^post19 == 0 /\ -apsim_bound11113^post19+apsim_bound11113^0 == 0 /\ -__const_8388607^post19+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post19 == 0 /\ tmp12^0-tmp12^post19 == 0 /\ free_ent^0-free_ent^post19 == 0 /\ rat26^0-rat26^post19 == 0 /\ 1-block_compress^0 <= 0 /\ __const_8^0-__const_8^post19 == 0 /\ -ret_getbyte18^post19+ret_getbyte18^0 == 0 /\ -in_count^post19+in_count^0 == 0 /\ __const_256^0-__const_256^post19 == 0 /\ i45^0-i45^post19 == 0 /\ ent8^0-ent8^post19 == 0 /\ -maxcode^post19+maxcode^0 == 0 /\ -bits33^post19+bits33^0 == 0 /\ -clear_flg^post19+clear_flg^0 == 0 /\ -hsize_reg10^post19+hsize_reg10^0 == 0 /\ -__const_9^post19+__const_9^0 == 0 /\ out_count^0-out_count^post19 == 0 /\ -__const_429496^post19+__const_429496^0 == 0 /\ -i21^post19+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post19 == 0 /\ -bytes_out^post19+bytes_out^0 == 0 /\ -hsize^post19+hsize^0 == 0), cost: 1
  19: l18 -> l17 : __const_10000^0'=__const_10000^post20, __const_16^0'=__const_16^post20, __const_2147483647^0'=__const_2147483647^post20, __const_256^0'=__const_256^post20, __const_257^0'=__const_257^post20, __const_429496^0'=__const_429496^post20, __const_50^0'=__const_50^post20, __const_53^0'=__const_53^post20, __const_65536^0'=__const_65536^post20, __const_8388607^0'=__const_8388607^post20, __const_8^0'=__const_8^post20, __const_9^0'=__const_9^post20, apsim_bound11113^0'=apsim_bound11113^post20, apsim_incnt^0'=apsim_incnt^post20, bits33^0'=bits33^post20, block_compress^0'=block_compress^post20, bytes_out^0'=bytes_out^post20, c37^0'=c37^post20, c7^0'=c7^post20, checkpoint^0'=checkpoint^post20, clear_flg^0'=clear_flg^post20, code31^0'=code31^post20, count^0'=count^post20, disp9^0'=disp9^post20, ent8^0'=ent8^post20, exit_stat^0'=exit_stat^post20, fcode5^0'=fcode5^post20, free_ent^0'=free_ent^post20, hshift11^0'=hshift11^post20, hsize^0'=hsize^post20, hsize___019^0'=hsize___019^post20, hsize___027^0'=hsize___027^post20, hsize_reg10^0'=hsize_reg10^post20, i21^0'=i21^post20, i29^0'=i29^post20, i3^0'=i3^post20, i41^0'=i41^post20, i45^0'=i45^post20, i6^0'=i6^post20, in_count^0'=in_count^post20, incnt^0'=incnt^post20, m122^0'=m122^post20, m130^0'=m130^post20, maxbits^0'=maxbits^post20, maxcode^0'=maxcode^post20, maxmaxcode^0'=maxmaxcode^post20, n40^0'=n40^post20, n44^0'=n44^post20, n_bits^0'=n_bits^post20, offset^0'=offset^post20, out_count^0'=out_count^post20, r_off32^0'=r_off32^post20, rat26^0'=rat26^post20, ratio^0'=ratio^post20, ret_getbyte18^0'=ret_getbyte18^post20, ret_getbyte25^0'=ret_getbyte25^post20, seed2^0'=seed2^post20, tabort4^0'=tabort4^post20, tmp12^0'=tmp12^post20, tmp___014^0'=tmp___014^post20, tmp___017^0'=tmp___017^post20, tmp___024^0'=tmp___024^post20, tmp___115^0'=tmp___115^post20, (n44^0-n44^post20 == 0 /\ ret_getbyte25^0-ret_getbyte25^post20 == 0 /\ apsim_incnt^0-apsim_incnt^post20 == 0 /\ tabort4^0-tabort4^post20 == 0 /\ c37^0-c37^post20 == 0 /\ -checkpoint^post20+checkpoint^0 == 0 /\ -hsize_reg10^post20+hsize_reg10^0 == 0 /\ -ratio^post20+ratio^0 == 0 /\ ent8^0-ent8^post20 == 0 /\ -hsize___019^post20+hsize___019^0 == 0 /\ -hsize^post20+hsize^0 == 0 /\ __const_256^0-__const_256^post20 == 0 /\ out_count^0-out_count^post20 == 0 /\ hsize___027^0-hsize___027^post20 == 0 /\ c7^0-c7^post20 == 0 /\ -m122^post20+m122^0 == 0 /\ -maxbits^post20+maxbits^0 == 0 /\ -n40^post20+n40^0 == 0 /\ -i3^post20+i3^0 == 0 /\ i29^0-i29^post20 == 0 /\ -i41^post20+i41^0 == 0 /\ -__const_8388607^post20+__const_8388607^0 == 0 /\ bytes_out^0-bytes_out^post20 == 0 /\ -i21^post20+i21^0 == 0 /\ exit_stat^0-exit_stat^post20 == 0 /\ -incnt^post20+incnt^0 == 0 /\ maxcode^0-maxcode^post20 == 0 /\ __const_50^0-__const_50^post20 == 0 /\ -bits33^post20+bits33^0 == 0 /\ -__const_429496^post20+__const_429496^0 == 0 /\ __const_53^0-__const_53^post20 == 0 /\ m130^0-m130^post20 == 0 /\ -__const_9^post20+__const_9^0 == 0 /\ -in_count^post20+in_count^0 == 0 /\ -r_off32^post20+r_off32^0 == 0 /\ tmp12^0-tmp12^post20 == 0 /\ ret_getbyte18^0-ret_getbyte18^post20 == 0 /\ 1+block_compress^0 <= 0 /\ -clear_flg^post20+clear_flg^0 == 0 /\ -n_bits^post20+n_bits^0 == 0 /\ -offset^post20+offset^0 == 0 /\ __const_257^0-__const_257^post20 == 0 /\ -fcode5^post20+fcode5^0 == 0 /\ -disp9^post20+disp9^0 == 0 /\ -count^post20+count^0 == 0 /\ -tmp___024^post20+tmp___024^0 == 0 /\ i45^0-i45^post20 == 0 /\ -tmp___115^post20+tmp___115^0 == 0 /\ __const_10000^0-__const_10000^post20 == 0 /\ -block_compress^post20+block_compress^0 == 0 /\ -__const_2147483647^post20+__const_2147483647^0 == 0 /\ -__const_8^post20+__const_8^0 == 0 /\ -seed2^post20+seed2^0 == 0 /\ -tmp___014^post20+tmp___014^0 == 0 /\ hshift11^0-hshift11^post20 == 0 /\ free_ent^0-free_ent^post20 == 0 /\ maxmaxcode^0-maxmaxcode^post20 == 0 /\ rat26^0-rat26^post20 == 0 /\ __const_16^0-__const_16^post20 == 0 /\ tmp___017^0-tmp___017^post20 == 0 /\ code31^0-code31^post20 == 0 /\ -apsim_bound11113^post20+apsim_bound11113^0 == 0 /\ -__const_65536^post20+__const_65536^0 == 0 /\ -i6^post20+i6^0 == 0), cost: 1
  20: l19 -> l20 : __const_10000^0'=__const_10000^post21, __const_16^0'=__const_16^post21, __const_2147483647^0'=__const_2147483647^post21, __const_256^0'=__const_256^post21, __const_257^0'=__const_257^post21, __const_429496^0'=__const_429496^post21, __const_50^0'=__const_50^post21, __const_53^0'=__const_53^post21, __const_65536^0'=__const_65536^post21, __const_8388607^0'=__const_8388607^post21, __const_8^0'=__const_8^post21, __const_9^0'=__const_9^post21, apsim_bound11113^0'=apsim_bound11113^post21, apsim_incnt^0'=apsim_incnt^post21, bits33^0'=bits33^post21, block_compress^0'=block_compress^post21, bytes_out^0'=bytes_out^post21, c37^0'=c37^post21, c7^0'=c7^post21, checkpoint^0'=checkpoint^post21, clear_flg^0'=clear_flg^post21, code31^0'=code31^post21, count^0'=count^post21, disp9^0'=disp9^post21, ent8^0'=ent8^post21, exit_stat^0'=exit_stat^post21, fcode5^0'=fcode5^post21, free_ent^0'=free_ent^post21, hshift11^0'=hshift11^post21, hsize^0'=hsize^post21, hsize___019^0'=hsize___019^post21, hsize___027^0'=hsize___027^post21, hsize_reg10^0'=hsize_reg10^post21, i21^0'=i21^post21, i29^0'=i29^post21, i3^0'=i3^post21, i41^0'=i41^post21, i45^0'=i45^post21, i6^0'=i6^post21, in_count^0'=in_count^post21, incnt^0'=incnt^post21, m122^0'=m122^post21, m130^0'=m130^post21, maxbits^0'=maxbits^post21, maxcode^0'=maxcode^post21, maxmaxcode^0'=maxmaxcode^post21, n40^0'=n40^post21, n44^0'=n44^post21, n_bits^0'=n_bits^post21, offset^0'=offset^post21, out_count^0'=out_count^post21, r_off32^0'=r_off32^post21, rat26^0'=rat26^post21, ratio^0'=ratio^post21, ret_getbyte18^0'=ret_getbyte18^post21, ret_getbyte25^0'=ret_getbyte25^post21, seed2^0'=seed2^post21, tabort4^0'=tabort4^post21, tmp12^0'=tmp12^post21, tmp___014^0'=tmp___014^post21, tmp___017^0'=tmp___017^post21, tmp___024^0'=tmp___024^post21, tmp___115^0'=tmp___115^post21, (0 == 0 /\ tmp12^0-tmp12^post21 == 0 /\ exit_stat^0-exit_stat^post21 == 0 /\ -i21^post21+i21^0 == 0 /\ __const_257^0-__const_257^post21 == 0 /\ i29^0-i29^post21 == 0 /\ maxmaxcode^0-maxmaxcode^post21 == 0 /\ maxcode^0-maxcode^post21 == 0 /\ bytes_out^0-bytes_out^post21 == 0 /\ offset^0-offset^post21 == 0 /\ tabort4^0-tabort4^post21 == 0 /\ ret_getbyte18^0-ret_getbyte18^post21 == 0 /\ __const_256^0-__const_256^post21 == 0 /\ r_off32^0-r_off32^post21 == 0 /\ tmp___017^0-tmp___017^post21 == 0 /\ -__const_429496^post21+__const_429496^0 == 0 /\ -incnt^post21+incnt^0 == 0 /\ -i41^post21+i41^0 == 0 /\ out_count^0-out_count^post21 == 0 /\ -apsim_bound11113^post21+apsim_bound11113^0 == 0 /\ -hsize^post21+hsize^0 == 0 /\ -rat26^post21+rat26^0 == 0 /\ -__const_65536^post21+__const_65536^0 == 0 /\ n44^0-n44^post21 == 0 /\ apsim_incnt^0-apsim_incnt^post21 == 0 /\ 1+bits33^post21-bits33^0 == 0 /\ -__const_2147483647^post21+__const_2147483647^0 == 0 /\ m130^0-m130^post21 == 0 /\ ent8^0-ent8^post21 == 0 /\ i45^0-i45^post21 == 0 /\ -__const_16^post21+__const_16^0 == 0 /\ -seed2^post21+seed2^0 == 0 /\ -tmp___115^post21+tmp___115^0 == 0 /\ __const_10000^0-__const_10000^post21 == 0 /\ -fcode5^post21+fcode5^0 == 0 /\ -block_compress^post21+block_compress^0 == 0 /\ -n40^post21+n40^0 == 0 /\ -i6^post21+i6^0 == 0 /\ -in_count^post21+in_count^0 == 0 /\ -__const_8388607^post21+__const_8388607^0 == 0 /\ -checkpoint^post21+checkpoint^0 == 0 /\ __const_8^0-__const_8^post21 == 0 /\ -ratio^post21+ratio^0 == 0 /\ __const_50^0-__const_50^post21 == 0 /\ -clear_flg^post21+clear_flg^0 == 0 /\ count^0-count^post21 == 0 /\ -hsize_reg10^post21+hsize_reg10^0 == 0 /\ __const_53^0-__const_53^post21 == 0 /\ -n_bits^post21+n_bits^0 == 0 /\ m122^0-m122^post21 == 0 /\ hsize___027^0-hsize___027^post21 == 0 /\ hshift11^0-hshift11^post21 == 0 /\ -hsize___019^post21+hsize___019^0 == 0 /\ -__const_9^post21+__const_9^0 == 0 /\ -tmp___014^post21+tmp___014^0 == 0 /\ -code31^post21+code31^0 == 0 /\ -disp9^post21+disp9^0 == 0 /\ -tmp___024^post21+tmp___024^0 == 0 /\ c7^0-c7^post21 == 0 /\ free_ent^0-free_ent^post21 == 0 /\ -maxbits^post21+maxbits^0 == 0 /\ -i3^post21+i3^0 == 0 /\ -ret_getbyte25^post21+ret_getbyte25^0 == 0), cost: 1
  57: l20 -> l44 : __const_10000^0'=__const_10000^post58, __const_16^0'=__const_16^post58, __const_2147483647^0'=__const_2147483647^post58, __const_256^0'=__const_256^post58, __const_257^0'=__const_257^post58, __const_429496^0'=__const_429496^post58, __const_50^0'=__const_50^post58, __const_53^0'=__const_53^post58, __const_65536^0'=__const_65536^post58, __const_8388607^0'=__const_8388607^post58, __const_8^0'=__const_8^post58, __const_9^0'=__const_9^post58, apsim_bound11113^0'=apsim_bound11113^post58, apsim_incnt^0'=apsim_incnt^post58, bits33^0'=bits33^post58, block_compress^0'=block_compress^post58, bytes_out^0'=bytes_out^post58, c37^0'=c37^post58, c7^0'=c7^post58, checkpoint^0'=checkpoint^post58, clear_flg^0'=clear_flg^post58, code31^0'=code31^post58, count^0'=count^post58, disp9^0'=disp9^post58, ent8^0'=ent8^post58, exit_stat^0'=exit_stat^post58, fcode5^0'=fcode5^post58, free_ent^0'=free_ent^post58, hshift11^0'=hshift11^post58, hsize^0'=hsize^post58, hsize___019^0'=hsize___019^post58, hsize___027^0'=hsize___027^post58, hsize_reg10^0'=hsize_reg10^post58, i21^0'=i21^post58, i29^0'=i29^post58, i3^0'=i3^post58, i41^0'=i41^post58, i45^0'=i45^post58, i6^0'=i6^post58, in_count^0'=in_count^post58, incnt^0'=incnt^post58, m122^0'=m122^post58, m130^0'=m130^post58, maxbits^0'=maxbits^post58, maxcode^0'=maxcode^post58, maxmaxcode^0'=maxmaxcode^post58, n40^0'=n40^post58, n44^0'=n44^post58, n_bits^0'=n_bits^post58, offset^0'=offset^post58, out_count^0'=out_count^post58, r_off32^0'=r_off32^post58, rat26^0'=rat26^post58, ratio^0'=ratio^post58, ret_getbyte18^0'=ret_getbyte18^post58, ret_getbyte25^0'=ret_getbyte25^post58, seed2^0'=seed2^post58, tabort4^0'=tabort4^post58, tmp12^0'=tmp12^post58, tmp___014^0'=tmp___014^post58, tmp___017^0'=tmp___017^post58, tmp___024^0'=tmp___024^post58, tmp___115^0'=tmp___115^post58, (ret_getbyte25^0-ret_getbyte25^post58 == 0 /\ apsim_incnt^0-apsim_incnt^post58 == 0 /\ m130^0-m130^post58 == 0 /\ -i3^post58+i3^0 == 0 /\ -i41^post58+i41^0 == 0 /\ hsize___019^0-hsize___019^post58 == 0 /\ n44^0-n44^post58 == 0 /\ -in_count^post58+in_count^0 == 0 /\ __const_257^0-__const_257^post58 == 0 /\ ent8^0-ent8^post58 == 0 /\ __const_65536^0-__const_65536^post58 == 0 /\ -__const_8388607^post58+__const_8388607^0 == 0 /\ -__const_256^post58+__const_256^0 == 0 /\ i29^0-i29^post58 == 0 /\ bits33^0 <= 0 /\ -__const_50^post58+__const_50^0 == 0 /\ -disp9^post58+disp9^0 == 0 /\ -tabort4^post58+tabort4^0 == 0 /\ tmp12^0-tmp12^post58 == 0 /\ c37^0-c37^post58 == 0 /\ -hsize_reg10^post58+hsize_reg10^0 == 0 /\ -count^post58+count^0 == 0 /\ -exit_stat^post58+exit_stat^0 == 0 /\ -maxbits^post58+maxbits^0 == 0 /\ tmp___014^0-tmp___014^post58 == 0 /\ -__const_10000^post58+__const_10000^0 == 0 /\ -bytes_out^post58+bytes_out^0 == 0 /\ -i21^post58+i21^0 == 0 /\ rat26^0-rat26^post58 == 0 /\ -m122^post58+m122^0 == 0 /\ __const_53^0-__const_53^post58 == 0 /\ hsize___027^0-hsize___027^post58 == 0 /\ __const_8^0-__const_8^post58 == 0 /\ code31^0-code31^post58 == 0 /\ c7^0-c7^post58 == 0 /\ -tmp___017^post58+tmp___017^0 == 0 /\ -tmp___024^post58+tmp___024^0 == 0 /\ -bits33^0 <= 0 /\ tmp___115^0-tmp___115^post58 == 0 /\ i45^0-i45^post58 == 0 /\ hshift11^0-hshift11^post58 == 0 /\ free_ent^0-free_ent^post58 == 0 /\ -r_off32^post58+r_off32^0 == 0 /\ -ratio^post58+ratio^0 == 0 /\ -ret_getbyte18^post58+ret_getbyte18^0 == 0 /\ out_count^0-out_count^post58 == 0 /\ -n_bits^post58+n_bits^0 == 0 /\ -clear_flg^post58+clear_flg^0 == 0 /\ -checkpoint^post58+checkpoint^0 == 0 /\ -seed2^post58+seed2^0 == 0 /\ -fcode5^post58+fcode5^0 == 0 /\ __const_9^0-__const_9^post58 == 0 /\ -i6^post58+i6^0 == 0 /\ __const_2147483647^0-__const_2147483647^post58 == 0 /\ offset^0-offset^post58 == 0 /\ -block_compress^post58+block_compress^0 == 0 /\ -n40^post58+n40^0 == 0 /\ -maxcode^post58+maxcode^0 == 0 /\ maxmaxcode^0-maxmaxcode^post58 == 0 /\ bits33^0-bits33^post58 == 0 /\ -hsize^post58+hsize^0 == 0 /\ __const_429496^0-__const_429496^post58 == 0 /\ -apsim_bound11113^post58+apsim_bound11113^0 == 0 /\ __const_16^0-__const_16^post58 == 0 /\ -incnt^post58+incnt^0 == 0), cost: 1
  58: l20 -> l45 : __const_10000^0'=__const_10000^post59, __const_16^0'=__const_16^post59, __const_2147483647^0'=__const_2147483647^post59, __const_256^0'=__const_256^post59, __const_257^0'=__const_257^post59, __const_429496^0'=__const_429496^post59, __const_50^0'=__const_50^post59, __const_53^0'=__const_53^post59, __const_65536^0'=__const_65536^post59, __const_8388607^0'=__const_8388607^post59, __const_8^0'=__const_8^post59, __const_9^0'=__const_9^post59, apsim_bound11113^0'=apsim_bound11113^post59, apsim_incnt^0'=apsim_incnt^post59, bits33^0'=bits33^post59, block_compress^0'=block_compress^post59, bytes_out^0'=bytes_out^post59, c37^0'=c37^post59, c7^0'=c7^post59, checkpoint^0'=checkpoint^post59, clear_flg^0'=clear_flg^post59, code31^0'=code31^post59, count^0'=count^post59, disp9^0'=disp9^post59, ent8^0'=ent8^post59, exit_stat^0'=exit_stat^post59, fcode5^0'=fcode5^post59, free_ent^0'=free_ent^post59, hshift11^0'=hshift11^post59, hsize^0'=hsize^post59, hsize___019^0'=hsize___019^post59, hsize___027^0'=hsize___027^post59, hsize_reg10^0'=hsize_reg10^post59, i21^0'=i21^post59, i29^0'=i29^post59, i3^0'=i3^post59, i41^0'=i41^post59, i45^0'=i45^post59, i6^0'=i6^post59, in_count^0'=in_count^post59, incnt^0'=incnt^post59, m122^0'=m122^post59, m130^0'=m130^post59, maxbits^0'=maxbits^post59, maxcode^0'=maxcode^post59, maxmaxcode^0'=maxmaxcode^post59, n40^0'=n40^post59, n44^0'=n44^post59, n_bits^0'=n_bits^post59, offset^0'=offset^post59, out_count^0'=out_count^post59, r_off32^0'=r_off32^post59, rat26^0'=rat26^post59, ratio^0'=ratio^post59, ret_getbyte18^0'=ret_getbyte18^post59, ret_getbyte25^0'=ret_getbyte25^post59, seed2^0'=seed2^post59, tabort4^0'=tabort4^post59, tmp12^0'=tmp12^post59, tmp___014^0'=tmp___014^post59, tmp___017^0'=tmp___017^post59, tmp___024^0'=tmp___024^post59, tmp___115^0'=tmp___115^post59, (ent8^0-ent8^post59 == 0 /\ -tmp___024^post59+tmp___024^0 == 0 /\ -hsize^post59+hsize^0 == 0 /\ -n_bits^post59+n_bits^0 == 0 /\ -incnt^post59+incnt^0 == 0 /\ -tmp___115^post59+tmp___115^0 == 0 /\ offset^0-offset^post59 == 0 /\ -hsize___019^post59+hsize___019^0 == 0 /\ code31^0-code31^post59 == 0 /\ -r_off32^post59+r_off32^0 == 0 /\ __const_9^0-__const_9^post59 == 0 /\ -m122^post59+m122^0 == 0 /\ hsize___027^0-hsize___027^post59 == 0 /\ ret_getbyte25^0-ret_getbyte25^post59 == 0 /\ exit_stat^0-exit_stat^post59 == 0 /\ -disp9^post59+disp9^0 == 0 /\ -count^post59+count^0 == 0 /\ -maxbits^post59+maxbits^0 == 0 /\ maxcode^0-maxcode^post59 == 0 /\ c37^0-c37^post59 == 0 /\ bits33^0-bits33^post59 == 0 /\ -seed2^post59+seed2^0 == 0 /\ -n40^post59+n40^0 == 0 /\ c7^0-c7^post59 == 0 /\ -checkpoint^post59+checkpoint^0 == 0 /\ __const_65536^0-__const_65536^post59 == 0 /\ i45^0-i45^post59 == 0 /\ -apsim_bound11113^post59+apsim_bound11113^0 == 0 /\ apsim_incnt^0-apsim_incnt^post59 == 0 /\ -__const_8388607^post59+__const_8388607^0 == 0 /\ -__const_256^post59+__const_256^0 == 0 /\ n44^0-n44^post59 == 0 /\ -ratio^post59+ratio^0 == 0 /\ m130^0-m130^post59 == 0 /\ __const_2147483647^0-__const_2147483647^post59 == 0 /\ __const_53^0-__const_53^post59 == 0 /\ 1-bits33^0 <= 0 /\ tmp12^0-tmp12^post59 == 0 /\ -__const_429496^post59+__const_429496^0 == 0 /\ -i3^post59+i3^0 == 0 /\ -__const_50^post59+__const_50^0 == 0 /\ __const_16^0-__const_16^post59 == 0 /\ -i41^post59+i41^0 == 0 /\ -i29^post59+i29^0 == 0 /\ __const_8^0-__const_8^post59 == 0 /\ hshift11^0-hshift11^post59 == 0 /\ tabort4^0-tabort4^post59 == 0 /\ rat26^0-rat26^post59 == 0 /\ tmp___017^0-tmp___017^post59 == 0 /\ -fcode5^post59+fcode5^0 == 0 /\ -tmp___014^post59+tmp___014^0 == 0 /\ i6^0-i6^post59 == 0 /\ -i21^post59+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post59 == 0 /\ -clear_flg^post59+clear_flg^0 == 0 /\ free_ent^0-free_ent^post59 == 0 /\ __const_257^0-__const_257^post59 == 0 /\ -__const_10000^post59+__const_10000^0 == 0 /\ -in_count^post59+in_count^0 == 0 /\ block_compress^0-block_compress^post59 == 0 /\ out_count^0-out_count^post59 == 0 /\ -bytes_out^post59+bytes_out^0 == 0 /\ -hsize_reg10^post59+hsize_reg10^0 == 0 /\ -ret_getbyte18^post59+ret_getbyte18^0 == 0), cost: 1
  59: l20 -> l45 : __const_10000^0'=__const_10000^post60, __const_16^0'=__const_16^post60, __const_2147483647^0'=__const_2147483647^post60, __const_256^0'=__const_256^post60, __const_257^0'=__const_257^post60, __const_429496^0'=__const_429496^post60, __const_50^0'=__const_50^post60, __const_53^0'=__const_53^post60, __const_65536^0'=__const_65536^post60, __const_8388607^0'=__const_8388607^post60, __const_8^0'=__const_8^post60, __const_9^0'=__const_9^post60, apsim_bound11113^0'=apsim_bound11113^post60, apsim_incnt^0'=apsim_incnt^post60, bits33^0'=bits33^post60, block_compress^0'=block_compress^post60, bytes_out^0'=bytes_out^post60, c37^0'=c37^post60, c7^0'=c7^post60, checkpoint^0'=checkpoint^post60, clear_flg^0'=clear_flg^post60, code31^0'=code31^post60, count^0'=count^post60, disp9^0'=disp9^post60, ent8^0'=ent8^post60, exit_stat^0'=exit_stat^post60, fcode5^0'=fcode5^post60, free_ent^0'=free_ent^post60, hshift11^0'=hshift11^post60, hsize^0'=hsize^post60, hsize___019^0'=hsize___019^post60, hsize___027^0'=hsize___027^post60, hsize_reg10^0'=hsize_reg10^post60, i21^0'=i21^post60, i29^0'=i29^post60, i3^0'=i3^post60, i41^0'=i41^post60, i45^0'=i45^post60, i6^0'=i6^post60, in_count^0'=in_count^post60, incnt^0'=incnt^post60, m122^0'=m122^post60, m130^0'=m130^post60, maxbits^0'=maxbits^post60, maxcode^0'=maxcode^post60, maxmaxcode^0'=maxmaxcode^post60, n40^0'=n40^post60, n44^0'=n44^post60, n_bits^0'=n_bits^post60, offset^0'=offset^post60, out_count^0'=out_count^post60, r_off32^0'=r_off32^post60, rat26^0'=rat26^post60, ratio^0'=ratio^post60, ret_getbyte18^0'=ret_getbyte18^post60, ret_getbyte25^0'=ret_getbyte25^post60, seed2^0'=seed2^post60, tabort4^0'=tabort4^post60, tmp12^0'=tmp12^post60, tmp___014^0'=tmp___014^post60, tmp___017^0'=tmp___017^post60, tmp___024^0'=tmp___024^post60, tmp___115^0'=tmp___115^post60, (-__const_50^post60+__const_50^0 == 0 /\ __const_257^0-__const_257^post60 == 0 /\ apsim_incnt^0-apsim_incnt^post60 == 0 /\ -i3^post60+i3^0 == 0 /\ i29^0-i29^post60 == 0 /\ -i41^post60+i41^0 == 0 /\ -exit_stat^post60+exit_stat^0 == 0 /\ -fcode5^post60+fcode5^0 == 0 /\ -i21^post60+i21^0 == 0 /\ m130^0-m130^post60 == 0 /\ -incnt^post60+incnt^0 == 0 /\ code31^0-code31^post60 == 0 /\ __const_53^0-__const_53^post60 == 0 /\ 1+bits33^0 <= 0 /\ hsize___027^0-hsize___027^post60 == 0 /\ __const_8^0-__const_8^post60 == 0 /\ tmp12^0-tmp12^post60 == 0 /\ __const_65536^0-__const_65536^post60 == 0 /\ -tmp___024^post60+tmp___024^0 == 0 /\ hshift11^0-hshift11^post60 == 0 /\ -__const_10000^post60+__const_10000^0 == 0 /\ -tmp___014^post60+tmp___014^0 == 0 /\ -in_count^post60+in_count^0 == 0 /\ -clear_flg^post60+clear_flg^0 == 0 /\ -bytes_out^post60+bytes_out^0 == 0 /\ -n44^post60+n44^0 == 0 /\ rat26^0-rat26^post60 == 0 /\ hsize___019^0-hsize___019^post60 == 0 /\ -ret_getbyte18^post60+ret_getbyte18^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post60 == 0 /\ c37^0-c37^post60 == 0 /\ -tabort4^post60+tabort4^0 == 0 /\ -c7^post60+c7^0 == 0 /\ ent8^0-ent8^post60 == 0 /\ -hsize^post60+hsize^0 == 0 /\ -hsize_reg10^post60+hsize_reg10^0 == 0 /\ __const_429496^0-__const_429496^post60 == 0 /\ checkpoint^0-checkpoint^post60 == 0 /\ maxmaxcode^0-maxmaxcode^post60 == 0 /\ -n_bits^post60+n_bits^0 == 0 /\ -m122^post60+m122^0 == 0 /\ -r_off32^post60+r_off32^0 == 0 /\ i45^0-i45^post60 == 0 /\ free_ent^0-free_ent^post60 == 0 /\ -count^post60+count^0 == 0 /\ n40^0-n40^post60 == 0 /\ tmp___115^0-tmp___115^post60 == 0 /\ -disp9^post60+disp9^0 == 0 /\ -seed2^post60+seed2^0 == 0 /\ out_count^0-out_count^post60 == 0 /\ __const_9^0-__const_9^post60 == 0 /\ -maxbits^post60+maxbits^0 == 0 /\ -maxcode^post60+maxcode^0 == 0 /\ offset^0-offset^post60 == 0 /\ __const_2147483647^0-__const_2147483647^post60 == 0 /\ -apsim_bound11113^post60+apsim_bound11113^0 == 0 /\ __const_16^0-__const_16^post60 == 0 /\ -i6^post60+i6^0 == 0 /\ -__const_8388607^post60+__const_8388607^0 == 0 /\ -block_compress^post60+block_compress^0 == 0 /\ -__const_256^post60+__const_256^0 == 0 /\ tmp___017^0-tmp___017^post60 == 0 /\ -ratio^post60+ratio^0 == 0 /\ bits33^0-bits33^post60 == 0), cost: 1
  21: l21 -> l22 : __const_10000^0'=__const_10000^post22, __const_16^0'=__const_16^post22, __const_2147483647^0'=__const_2147483647^post22, __const_256^0'=__const_256^post22, __const_257^0'=__const_257^post22, __const_429496^0'=__const_429496^post22, __const_50^0'=__const_50^post22, __const_53^0'=__const_53^post22, __const_65536^0'=__const_65536^post22, __const_8388607^0'=__const_8388607^post22, __const_8^0'=__const_8^post22, __const_9^0'=__const_9^post22, apsim_bound11113^0'=apsim_bound11113^post22, apsim_incnt^0'=apsim_incnt^post22, bits33^0'=bits33^post22, block_compress^0'=block_compress^post22, bytes_out^0'=bytes_out^post22, c37^0'=c37^post22, c7^0'=c7^post22, checkpoint^0'=checkpoint^post22, clear_flg^0'=clear_flg^post22, code31^0'=code31^post22, count^0'=count^post22, disp9^0'=disp9^post22, ent8^0'=ent8^post22, exit_stat^0'=exit_stat^post22, fcode5^0'=fcode5^post22, free_ent^0'=free_ent^post22, hshift11^0'=hshift11^post22, hsize^0'=hsize^post22, hsize___019^0'=hsize___019^post22, hsize___027^0'=hsize___027^post22, hsize_reg10^0'=hsize_reg10^post22, i21^0'=i21^post22, i29^0'=i29^post22, i3^0'=i3^post22, i41^0'=i41^post22, i45^0'=i45^post22, i6^0'=i6^post22, in_count^0'=in_count^post22, incnt^0'=incnt^post22, m122^0'=m122^post22, m130^0'=m130^post22, maxbits^0'=maxbits^post22, maxcode^0'=maxcode^post22, maxmaxcode^0'=maxmaxcode^post22, n40^0'=n40^post22, n44^0'=n44^post22, n_bits^0'=n_bits^post22, offset^0'=offset^post22, out_count^0'=out_count^post22, r_off32^0'=r_off32^post22, rat26^0'=rat26^post22, ratio^0'=ratio^post22, ret_getbyte18^0'=ret_getbyte18^post22, ret_getbyte25^0'=ret_getbyte25^post22, seed2^0'=seed2^post22, tabort4^0'=tabort4^post22, tmp12^0'=tmp12^post22, tmp___014^0'=tmp___014^post22, tmp___017^0'=tmp___017^post22, tmp___024^0'=tmp___024^post22, tmp___115^0'=tmp___115^post22, (-i29^post22+i29^0 == 0 /\ -tmp12^post22+tmp12^0 == 0 /\ -seed2^post22+seed2^0 == 0 /\ -tmp___014^post22+tmp___014^0 == 0 /\ -ret_getbyte25^post22+ret_getbyte25^0 == 0 /\ -code31^post22+code31^0 == 0 /\ tmp___024^0-tmp___024^post22 == 0 /\ -c37^post22+c37^0 == 0 /\ hshift11^0-hshift11^post22 == 0 /\ -block_compress^post22+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post22 == 0 /\ free_ent^0-free_ent^post22 == 0 /\ -ent8^post22+ent8^0 == 0 /\ -rat26^post22+rat26^0 == 0 /\ -in_count^post22+in_count^0 == 0 /\ -disp9^post22+disp9^0 == 0 /\ out_count^0-out_count^post22 == 0 /\ -ratio^post22+ratio^0 == 0 /\ maxcode^0-maxcode^post22 == 0 /\ __const_10000^0-__const_10000^post22 == 0 /\ r_off32^0-r_off32^post22 == 0 /\ i45^0-i45^post22 == 0 /\ -maxbits^post22+maxbits^0 == 0 /\ exit_stat^0-exit_stat^post22 == 0 /\ __const_16^0-__const_16^post22 == 0 /\ -hsize___019^post22+hsize___019^0 == 0 /\ tmp___017^0-tmp___017^post22 == 0 /\ -c7^post22+c7^0 == 0 /\ -i21^post22+i21^0 == 0 /\ apsim_incnt^0-apsim_incnt^post22 == 0 /\ maxmaxcode^0-maxmaxcode^post22 == 0 /\ -__const_2147483647^post22+__const_2147483647^0 == 0 /\ -__const_65536^post22+__const_65536^0 == 0 /\ __const_53^0-__const_53^post22 == 0 /\ -__const_429496^post22+__const_429496^0 == 0 /\ -i3^post22+i3^0 == 0 /\ -i41^post22+i41^0 == 0 /\ m122^0-m122^post22 == 0 /\ count^0-count^post22 == 0 /\ -n_bits^post22+n_bits^0 == 0 /\ -offset^post22+offset^0 == 0 /\ -apsim_bound11113^post22+apsim_bound11113^0 == 0 /\ -__const_9^post22+__const_9^0 == 0 /\ n44^0-n44^post22 == 0 /\ -clear_flg^post22+clear_flg^0 == 0 /\ -tmp___115^post22+tmp___115^0 == 0 /\ -m130^post22+m130^0 == 0 /\ -fcode5^post22+fcode5^0 == 0 /\ tabort4^0-tabort4^post22 == 0 /\ i6^0-i6^post22 == 0 /\ checkpoint^0-checkpoint^post22 == 0 /\ -n40^post22+n40^0 == 0 /\ __const_257^0-__const_257^post22 == 0 /\ __const_8^0-__const_8^post22 == 0 /\ hsize_reg10^0-hsize_reg10^post22 == 0 /\ hsize___027^0-hsize___027^post22 == 0 /\ -hsize^post22+hsize^0 == 0 /\ -incnt^post22+incnt^0 == 0 /\ -bits33^post22+bits33^0 == 0 /\ __const_256^0-__const_256^post22 == 0 /\ bytes_out^0-bytes_out^post22 == 0 /\ -__const_8388607^post22+__const_8388607^0 == 0 /\ __const_50^0-__const_50^post22 == 0), cost: 1
  46: l22 -> l39 : __const_10000^0'=__const_10000^post47, __const_16^0'=__const_16^post47, __const_2147483647^0'=__const_2147483647^post47, __const_256^0'=__const_256^post47, __const_257^0'=__const_257^post47, __const_429496^0'=__const_429496^post47, __const_50^0'=__const_50^post47, __const_53^0'=__const_53^post47, __const_65536^0'=__const_65536^post47, __const_8388607^0'=__const_8388607^post47, __const_8^0'=__const_8^post47, __const_9^0'=__const_9^post47, apsim_bound11113^0'=apsim_bound11113^post47, apsim_incnt^0'=apsim_incnt^post47, bits33^0'=bits33^post47, block_compress^0'=block_compress^post47, bytes_out^0'=bytes_out^post47, c37^0'=c37^post47, c7^0'=c7^post47, checkpoint^0'=checkpoint^post47, clear_flg^0'=clear_flg^post47, code31^0'=code31^post47, count^0'=count^post47, disp9^0'=disp9^post47, ent8^0'=ent8^post47, exit_stat^0'=exit_stat^post47, fcode5^0'=fcode5^post47, free_ent^0'=free_ent^post47, hshift11^0'=hshift11^post47, hsize^0'=hsize^post47, hsize___019^0'=hsize___019^post47, hsize___027^0'=hsize___027^post47, hsize_reg10^0'=hsize_reg10^post47, i21^0'=i21^post47, i29^0'=i29^post47, i3^0'=i3^post47, i41^0'=i41^post47, i45^0'=i45^post47, i6^0'=i6^post47, in_count^0'=in_count^post47, incnt^0'=incnt^post47, m122^0'=m122^post47, m130^0'=m130^post47, maxbits^0'=maxbits^post47, maxcode^0'=maxcode^post47, maxmaxcode^0'=maxmaxcode^post47, n40^0'=n40^post47, n44^0'=n44^post47, n_bits^0'=n_bits^post47, offset^0'=offset^post47, out_count^0'=out_count^post47, r_off32^0'=r_off32^post47, rat26^0'=rat26^post47, ratio^0'=ratio^post47, ret_getbyte18^0'=ret_getbyte18^post47, ret_getbyte25^0'=ret_getbyte25^post47, seed2^0'=seed2^post47, tabort4^0'=tabort4^post47, tmp12^0'=tmp12^post47, tmp___014^0'=tmp___014^post47, tmp___017^0'=tmp___017^post47, tmp___024^0'=tmp___024^post47, tmp___115^0'=tmp___115^post47, (i3^0-i3^post47 == 0 /\ -hsize^post47+hsize^0 == 0 /\ -hsize___019^post47+hsize___019^0 == 0 /\ -ent8^post47+ent8^0 == 0 /\ i21^0-i21^post47 == 0 /\ -disp9^post47+disp9^0 == 0 /\ free_ent^0-free_ent^post47 == 0 /\ n40^0-n40^post47 == 0 /\ out_count^0-out_count^post47 == 0 /\ hsize___027^0-hsize___027^post47 == 0 /\ -code31^post47+code31^0 == 0 /\ -apsim_bound11113^post47+apsim_bound11113^0 == 0 /\ -fcode5^post47+fcode5^0 == 0 /\ n40^0-i41^0 <= 0 /\ tmp___014^0-tmp___014^post47 == 0 /\ -ret_getbyte18^post47+ret_getbyte18^0 == 0 /\ -tmp___024^post47+tmp___024^0 == 0 /\ offset^0-offset^post47 == 0 /\ tmp12^0-tmp12^post47 == 0 /\ -__const_16^post47+__const_16^0 == 0 /\ maxmaxcode^0-maxmaxcode^post47 == 0 /\ exit_stat^0-exit_stat^post47 == 0 /\ __const_10000^0-__const_10000^post47 == 0 /\ bits33^0-bits33^post47 == 0 /\ -r_off32^post47+r_off32^0 == 0 /\ -n_bits^post47+n_bits^0 == 0 /\ count^0-count^post47 == 0 /\ __const_53^0-__const_53^post47 == 0 /\ -incnt^post47+incnt^0 == 0 /\ -seed2^post47+seed2^0 == 0 /\ -block_compress^post47+block_compress^0 == 0 /\ -m122^post47+m122^0 == 0 /\ -tabort4^post47+tabort4^0 == 0 /\ apsim_incnt^0-apsim_incnt^post47 == 0 /\ -__const_9^post47+__const_9^0 == 0 /\ -__const_65536^post47+__const_65536^0 == 0 /\ -__const_429496^post47+__const_429496^0 == 0 /\ hshift11^0-hshift11^post47 == 0 /\ -i29^post47+i29^0 == 0 /\ -maxbits^post47+maxbits^0 == 0 /\ tmp___115^0-tmp___115^post47 == 0 /\ m130^0-m130^post47 == 0 /\ c37^0-c37^post47 == 0 /\ bytes_out^0-bytes_out^post47 == 0 /\ -i41^post47+i41^0 == 0 /\ -i45^post47+i45^0 == 0 /\ n44^0-n44^post47 == 0 /\ __const_257^0-__const_257^post47 == 0 /\ -maxcode^post47+maxcode^0 == 0 /\ checkpoint^0-checkpoint^post47 == 0 /\ i6^0-i6^post47 == 0 /\ -ratio^post47+ratio^0 == 0 /\ __const_8^0-__const_8^post47 == 0 /\ -in_count^post47+in_count^0 == 0 /\ __const_50^0-__const_50^post47 == 0 /\ tmp___017^0-tmp___017^post47 == 0 /\ -__const_2147483647^post47+__const_2147483647^0 == 0 /\ -__const_8388607^post47+__const_8388607^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post47 == 0 /\ -c7^post47+c7^0 == 0 /\ rat26^0-rat26^post47 == 0 /\ __const_256^0-__const_256^post47 == 0 /\ -hsize_reg10^post47+hsize_reg10^0 == 0 /\ -clear_flg^post47+clear_flg^0 == 0), cost: 1
  47: l22 -> l40 : __const_10000^0'=__const_10000^post48, __const_16^0'=__const_16^post48, __const_2147483647^0'=__const_2147483647^post48, __const_256^0'=__const_256^post48, __const_257^0'=__const_257^post48, __const_429496^0'=__const_429496^post48, __const_50^0'=__const_50^post48, __const_53^0'=__const_53^post48, __const_65536^0'=__const_65536^post48, __const_8388607^0'=__const_8388607^post48, __const_8^0'=__const_8^post48, __const_9^0'=__const_9^post48, apsim_bound11113^0'=apsim_bound11113^post48, apsim_incnt^0'=apsim_incnt^post48, bits33^0'=bits33^post48, block_compress^0'=block_compress^post48, bytes_out^0'=bytes_out^post48, c37^0'=c37^post48, c7^0'=c7^post48, checkpoint^0'=checkpoint^post48, clear_flg^0'=clear_flg^post48, code31^0'=code31^post48, count^0'=count^post48, disp9^0'=disp9^post48, ent8^0'=ent8^post48, exit_stat^0'=exit_stat^post48, fcode5^0'=fcode5^post48, free_ent^0'=free_ent^post48, hshift11^0'=hshift11^post48, hsize^0'=hsize^post48, hsize___019^0'=hsize___019^post48, hsize___027^0'=hsize___027^post48, hsize_reg10^0'=hsize_reg10^post48, i21^0'=i21^post48, i29^0'=i29^post48, i3^0'=i3^post48, i41^0'=i41^post48, i45^0'=i45^post48, i6^0'=i6^post48, in_count^0'=in_count^post48, incnt^0'=incnt^post48, m122^0'=m122^post48, m130^0'=m130^post48, maxbits^0'=maxbits^post48, maxcode^0'=maxcode^post48, maxmaxcode^0'=maxmaxcode^post48, n40^0'=n40^post48, n44^0'=n44^post48, n_bits^0'=n_bits^post48, offset^0'=offset^post48, out_count^0'=out_count^post48, r_off32^0'=r_off32^post48, rat26^0'=rat26^post48, ratio^0'=ratio^post48, ret_getbyte18^0'=ret_getbyte18^post48, ret_getbyte25^0'=ret_getbyte25^post48, seed2^0'=seed2^post48, tabort4^0'=tabort4^post48, tmp12^0'=tmp12^post48, tmp___014^0'=tmp___014^post48, tmp___017^0'=tmp___017^post48, tmp___024^0'=tmp___024^post48, tmp___115^0'=tmp___115^post48, (i29^0-i29^post48 == 0 /\ rat26^0-rat26^post48 == 0 /\ hsize___027^0-hsize___027^post48 == 0 /\ __const_9^0-__const_9^post48 == 0 /\ maxcode^0-maxcode^post48 == 0 /\ exit_stat^0-exit_stat^post48 == 0 /\ -tmp___017^post48+tmp___017^0 == 0 /\ tmp___014^0-tmp___014^post48 == 0 /\ __const_257^0-__const_257^post48 == 0 /\ -__const_256^post48+__const_256^0 == 0 /\ tmp12^0-tmp12^post48 == 0 /\ -hsize_reg10^post48+hsize_reg10^0 == 0 /\ -tabort4^post48+tabort4^0 == 0 /\ -__const_10000^post48+__const_10000^0 == 0 /\ -hsize___019^post48+hsize___019^0 == 0 /\ -incnt^post48+incnt^0 == 0 /\ m130^0-m130^post48 == 0 /\ out_count^0-out_count^post48 == 0 /\ maxmaxcode^0-maxmaxcode^post48 == 0 /\ -bytes_out^post48+bytes_out^0 == 0 /\ -apsim_bound11113^post48+apsim_bound11113^0 == 0 /\ bits33^0-bits33^post48 == 0 /\ -__const_50^post48+__const_50^0 == 0 /\ 1-n40^0+i41^0 <= 0 /\ n40^0-n40^post48 == 0 /\ -n_bits^post48+n_bits^0 == 0 /\ -i41^post48+i41^0 == 0 /\ __const_65536^0-__const_65536^post48 == 0 /\ -fcode5^post48+fcode5^0 == 0 /\ offset^0-offset^post48 == 0 /\ i45^0-i45^post48 == 0 /\ ent8^0-ent8^post48 == 0 /\ apsim_incnt^0-apsim_incnt^post48 == 0 /\ -i21^post48+i21^0 == 0 /\ __const_16^0-__const_16^post48 == 0 /\ tmp___115^0-tmp___115^post48 == 0 /\ -ratio^post48+ratio^0 == 0 /\ -ret_getbyte18^post48+ret_getbyte18^0 == 0 /\ -in_count^post48+in_count^0 == 0 /\ -tmp___024^post48+tmp___024^0 == 0 /\ -i6^post48+i6^0 == 0 /\ count^0-count^post48 == 0 /\ __const_53^0-__const_53^post48 == 0 /\ -__const_8388607^post48+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post48 == 0 /\ ret_getbyte25^0-ret_getbyte25^post48 == 0 /\ -clear_flg^post48+clear_flg^0 == 0 /\ -checkpoint^post48+checkpoint^0 == 0 /\ hshift11^0-hshift11^post48 == 0 /\ -hsize^post48+hsize^0 == 0 /\ m122^0-m122^post48 == 0 /\ c37^0-c37^post48 == 0 /\ -disp9^post48+disp9^0 == 0 /\ -block_compress^post48+block_compress^0 == 0 /\ seed2^0-seed2^post48 == 0 /\ __const_2147483647^0-__const_2147483647^post48 == 0 /\ -code31^post48+code31^0 == 0 /\ -n44^post48+n44^0 == 0 /\ -r_off32^post48+r_off32^0 == 0 /\ -i3^post48+i3^0 == 0 /\ -maxbits^post48+maxbits^0 == 0 /\ __const_429496^0-__const_429496^post48 == 0 /\ free_ent^0-free_ent^post48 == 0 /\ c7^0-c7^post48 == 0), cost: 1
  22: l23 -> l24 : __const_10000^0'=__const_10000^post23, __const_16^0'=__const_16^post23, __const_2147483647^0'=__const_2147483647^post23, __const_256^0'=__const_256^post23, __const_257^0'=__const_257^post23, __const_429496^0'=__const_429496^post23, __const_50^0'=__const_50^post23, __const_53^0'=__const_53^post23, __const_65536^0'=__const_65536^post23, __const_8388607^0'=__const_8388607^post23, __const_8^0'=__const_8^post23, __const_9^0'=__const_9^post23, apsim_bound11113^0'=apsim_bound11113^post23, apsim_incnt^0'=apsim_incnt^post23, bits33^0'=bits33^post23, block_compress^0'=block_compress^post23, bytes_out^0'=bytes_out^post23, c37^0'=c37^post23, c7^0'=c7^post23, checkpoint^0'=checkpoint^post23, clear_flg^0'=clear_flg^post23, code31^0'=code31^post23, count^0'=count^post23, disp9^0'=disp9^post23, ent8^0'=ent8^post23, exit_stat^0'=exit_stat^post23, fcode5^0'=fcode5^post23, free_ent^0'=free_ent^post23, hshift11^0'=hshift11^post23, hsize^0'=hsize^post23, hsize___019^0'=hsize___019^post23, hsize___027^0'=hsize___027^post23, hsize_reg10^0'=hsize_reg10^post23, i21^0'=i21^post23, i29^0'=i29^post23, i3^0'=i3^post23, i41^0'=i41^post23, i45^0'=i45^post23, i6^0'=i6^post23, in_count^0'=in_count^post23, incnt^0'=incnt^post23, m122^0'=m122^post23, m130^0'=m130^post23, maxbits^0'=maxbits^post23, maxcode^0'=maxcode^post23, maxmaxcode^0'=maxmaxcode^post23, n40^0'=n40^post23, n44^0'=n44^post23, n_bits^0'=n_bits^post23, offset^0'=offset^post23, out_count^0'=out_count^post23, r_off32^0'=r_off32^post23, rat26^0'=rat26^post23, ratio^0'=ratio^post23, ret_getbyte18^0'=ret_getbyte18^post23, ret_getbyte25^0'=ret_getbyte25^post23, seed2^0'=seed2^post23, tabort4^0'=tabort4^post23, tmp12^0'=tmp12^post23, tmp___014^0'=tmp___014^post23, tmp___017^0'=tmp___017^post23, tmp___024^0'=tmp___024^post23, tmp___115^0'=tmp___115^post23, (__const_16^0-__const_16^post23 == 0 /\ -ret_getbyte18^post23+ret_getbyte18^0 == 0 /\ -maxbits^post23+maxbits^0 == 0 /\ -in_count^post23+in_count^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post23 == 0 /\ hsize___027^0-hsize___027^post23 == 0 /\ -n40^post23+n40^0 == 0 /\ n44^0-n44^post23 == 0 /\ -__const_9^post23+__const_9^0 == 0 /\ -apsim_bound11113^post23+apsim_bound11113^0 == 0 /\ i3^0-i3^post23 == 0 /\ -__const_10000^post23+__const_10000^0 == 0 /\ -__const_2147483647^post23+__const_2147483647^0 == 0 /\ -__const_8388607^post23+__const_8388607^0 == 0 /\ checkpoint^0-checkpoint^post23 == 0 /\ maxcode^0-maxcode^post23 == 0 /\ -hsize_reg10^post23+hsize_reg10^0 == 0 /\ -hsize^post23+hsize^0 == 0 /\ -hsize___019^post23+hsize___019^0 == 0 /\ -ratio^post23+ratio^0 == 0 /\ -m122^post23+m122^0 == 0 /\ i21^0-i21^post23 == 0 /\ tmp12^0-tmp12^post23 == 0 /\ -tmp___014^post23+tmp___014^0 == 0 /\ -n_bits^post23+n_bits^0 == 0 /\ -code31^post23+code31^0 == 0 /\ -tabort4^post23+tabort4^0 == 0 /\ clear_flg^0-clear_flg^post23 == 0 /\ __const_256^0-__const_256^post23 == 0 /\ -i45^post23+i45^0 == 0 /\ m130^0-m130^post23 == 0 /\ -__const_429496^post23+__const_429496^0 == 0 /\ -disp9^post23+disp9^0 == 0 /\ count^0-count^post23 == 0 /\ i6^0-i6^post23 == 0 /\ -tmp___024^post23+tmp___024^0 == 0 /\ -i29^post23+i29^0 == 0 /\ -free_ent^post23+free_ent^0 == 0 /\ bits33^0-bits33^post23 == 0 /\ bytes_out^0-bytes_out^post23 == 0 /\ r_off32^0-r_off32^post23 == 0 /\ -block_compress^post23+block_compress^0 == 0 /\ -c7^post23+c7^0 == 0 /\ hshift11^0-hshift11^post23 == 0 /\ tmp___115^0-tmp___115^post23 == 0 /\ apsim_incnt^0-apsim_incnt^post23 == 0 /\ exit_stat^0-exit_stat^post23 == 0 /\ __const_50^0-__const_50^post23 == 0 /\ -offset^post23+offset^0 == 0 /\ -i41^post23+i41^0 == 0 /\ rat26^0-rat26^post23 == 0 /\ -incnt^post23+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post23 == 0 /\ c37^0-c37^post23 == 0 /\ out_count^0-out_count^post23 == 0 /\ fcode5^0-fcode5^post23 == 0 /\ -seed2^post23+seed2^0 == 0 /\ -__const_65536^post23+__const_65536^0 == 0 /\ __const_257^0-__const_257^post23 == 0 /\ __const_53^0-__const_53^post23 == 0 /\ __const_8^0-__const_8^post23 == 0 /\ -ent8^post23+ent8^0 == 0 /\ tmp___017^0-tmp___017^post23 == 0), cost: 1
  23: l25 -> l23 : __const_10000^0'=__const_10000^post24, __const_16^0'=__const_16^post24, __const_2147483647^0'=__const_2147483647^post24, __const_256^0'=__const_256^post24, __const_257^0'=__const_257^post24, __const_429496^0'=__const_429496^post24, __const_50^0'=__const_50^post24, __const_53^0'=__const_53^post24, __const_65536^0'=__const_65536^post24, __const_8388607^0'=__const_8388607^post24, __const_8^0'=__const_8^post24, __const_9^0'=__const_9^post24, apsim_bound11113^0'=apsim_bound11113^post24, apsim_incnt^0'=apsim_incnt^post24, bits33^0'=bits33^post24, block_compress^0'=block_compress^post24, bytes_out^0'=bytes_out^post24, c37^0'=c37^post24, c7^0'=c7^post24, checkpoint^0'=checkpoint^post24, clear_flg^0'=clear_flg^post24, code31^0'=code31^post24, count^0'=count^post24, disp9^0'=disp9^post24, ent8^0'=ent8^post24, exit_stat^0'=exit_stat^post24, fcode5^0'=fcode5^post24, free_ent^0'=free_ent^post24, hshift11^0'=hshift11^post24, hsize^0'=hsize^post24, hsize___019^0'=hsize___019^post24, hsize___027^0'=hsize___027^post24, hsize_reg10^0'=hsize_reg10^post24, i21^0'=i21^post24, i29^0'=i29^post24, i3^0'=i3^post24, i41^0'=i41^post24, i45^0'=i45^post24, i6^0'=i6^post24, in_count^0'=in_count^post24, incnt^0'=incnt^post24, m122^0'=m122^post24, m130^0'=m130^post24, maxbits^0'=maxbits^post24, maxcode^0'=maxcode^post24, maxmaxcode^0'=maxmaxcode^post24, n40^0'=n40^post24, n44^0'=n44^post24, n_bits^0'=n_bits^post24, offset^0'=offset^post24, out_count^0'=out_count^post24, r_off32^0'=r_off32^post24, rat26^0'=rat26^post24, ratio^0'=ratio^post24, ret_getbyte18^0'=ret_getbyte18^post24, ret_getbyte25^0'=ret_getbyte25^post24, seed2^0'=seed2^post24, tabort4^0'=tabort4^post24, tmp12^0'=tmp12^post24, tmp___014^0'=tmp___014^post24, tmp___017^0'=tmp___017^post24, tmp___024^0'=tmp___024^post24, tmp___115^0'=tmp___115^post24, (i21^0-i21^post24 == 0 /\ i3^0-i3^post24 == 0 /\ exit_stat^0-exit_stat^post24 == 0 /\ tmp12^0-tmp12^post24 == 0 /\ offset^0-offset^post24 == 0 /\ maxmaxcode^0-maxmaxcode^post24 == 0 /\ -r_off32^post24+r_off32^0 == 0 /\ -apsim_bound11113^post24+apsim_bound11113^0 == 0 /\ apsim_incnt^0-apsim_incnt^post24 == 0 /\ i6^0-i6^post24 == 0 /\ -__const_50^post24+__const_50^0 == 0 /\ c37^0-c37^post24 == 0 /\ bits33^0-bits33^post24 == 0 /\ -n_bits^post24+n_bits^0 == 0 /\ hsize___027^0-hsize___027^post24 == 0 /\ -fcode5^post24+fcode5^0 == 0 /\ -ent8^post24+ent8^0 == 0 /\ -tmp___017^post24+tmp___017^0 == 0 /\ m130^0-m130^post24 == 0 /\ __const_53^0-__const_53^post24 == 0 /\ __const_65536^0-__const_65536^post24 == 0 /\ -hsize^post24+hsize^0 == 0 /\ c7^0-c7^post24 == 0 /\ -ret_getbyte18^post24+ret_getbyte18^0 == 0 /\ -n40^post24+n40^0 == 0 /\ -maxcode^post24+maxcode^0 == 0 /\ -checkpoint^post24+checkpoint^0 == 0 /\ n44^0-n44^post24 == 0 /\ -__const_8388607^post24+__const_8388607^0 == 0 /\ bytes_out^0-in_count^0 <= 0 /\ -__const_256^post24+__const_256^0 == 0 /\ tmp___014^0-tmp___014^post24 == 0 /\ -incnt^post24+incnt^0 == 0 /\ __const_2147483647^0-__const_2147483647^post24 == 0 /\ __const_8^0-__const_8^post24 == 0 /\ -i29^post24+i29^0 == 0 /\ -i41^post24+i41^0 == 0 /\ __const_429496^0-__const_429496^post24 == 0 /\ count^0-count^post24 == 0 /\ rat26^0-rat26^post24 == 0 /\ __const_16^0-__const_16^post24 == 0 /\ -in_count^post24+in_count^0 == 0 /\ seed2^0-seed2^post24 == 0 /\ -disp9^post24+disp9^0 == 0 /\ -free_ent^post24+free_ent^0 == 0 /\ -tmp___024^post24+tmp___024^0 == 0 /\ -ratio^post24+ratio^0 == 0 /\ __const_257^0-__const_257^post24 == 0 /\ -hsize_reg10^post24+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post24 == 0 /\ -maxbits^post24+maxbits^0 == 0 /\ hsize___019^0-hsize___019^post24 == 0 /\ block_compress^0-block_compress^post24 == 0 /\ tmp___115^0-tmp___115^post24 == 0 /\ -m122^post24+m122^0 == 0 /\ -clear_flg^post24+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post24 == 0 /\ -i45^post24+i45^0 == 0 /\ -bytes_out^post24+bytes_out^0 == 0 /\ __const_9^0-__const_9^post24 == 0 /\ -__const_10000^post24+__const_10000^0 == 0 /\ -tabort4^post24+tabort4^0 == 0 /\ out_count^0-out_count^post24 == 0 /\ -code31^post24+code31^0 == 0), cost: 1
  24: l25 -> l23 : __const_10000^0'=__const_10000^post25, __const_16^0'=__const_16^post25, __const_2147483647^0'=__const_2147483647^post25, __const_256^0'=__const_256^post25, __const_257^0'=__const_257^post25, __const_429496^0'=__const_429496^post25, __const_50^0'=__const_50^post25, __const_53^0'=__const_53^post25, __const_65536^0'=__const_65536^post25, __const_8388607^0'=__const_8388607^post25, __const_8^0'=__const_8^post25, __const_9^0'=__const_9^post25, apsim_bound11113^0'=apsim_bound11113^post25, apsim_incnt^0'=apsim_incnt^post25, bits33^0'=bits33^post25, block_compress^0'=block_compress^post25, bytes_out^0'=bytes_out^post25, c37^0'=c37^post25, c7^0'=c7^post25, checkpoint^0'=checkpoint^post25, clear_flg^0'=clear_flg^post25, code31^0'=code31^post25, count^0'=count^post25, disp9^0'=disp9^post25, ent8^0'=ent8^post25, exit_stat^0'=exit_stat^post25, fcode5^0'=fcode5^post25, free_ent^0'=free_ent^post25, hshift11^0'=hshift11^post25, hsize^0'=hsize^post25, hsize___019^0'=hsize___019^post25, hsize___027^0'=hsize___027^post25, hsize_reg10^0'=hsize_reg10^post25, i21^0'=i21^post25, i29^0'=i29^post25, i3^0'=i3^post25, i41^0'=i41^post25, i45^0'=i45^post25, i6^0'=i6^post25, in_count^0'=in_count^post25, incnt^0'=incnt^post25, m122^0'=m122^post25, m130^0'=m130^post25, maxbits^0'=maxbits^post25, maxcode^0'=maxcode^post25, maxmaxcode^0'=maxmaxcode^post25, n40^0'=n40^post25, n44^0'=n44^post25, n_bits^0'=n_bits^post25, offset^0'=offset^post25, out_count^0'=out_count^post25, r_off32^0'=r_off32^post25, rat26^0'=rat26^post25, ratio^0'=ratio^post25, ret_getbyte18^0'=ret_getbyte18^post25, ret_getbyte25^0'=ret_getbyte25^post25, seed2^0'=seed2^post25, tabort4^0'=tabort4^post25, tmp12^0'=tmp12^post25, tmp___014^0'=tmp___014^post25, tmp___017^0'=tmp___017^post25, tmp___024^0'=tmp___024^post25, tmp___115^0'=tmp___115^post25, (-bytes_out^post25+bytes_out^0 == 0 /\ c37^0-c37^post25 == 0 /\ tmp___014^0-tmp___014^post25 == 0 /\ maxmaxcode^0-maxmaxcode^post25 == 0 /\ free_ent^0-free_ent^post25 == 0 /\ apsim_bound11113^0-apsim_bound11113^post25 == 0 /\ n40^0-n40^post25 == 0 /\ -clear_flg^post25+clear_flg^0 == 0 /\ -checkpoint^post25+checkpoint^0 == 0 /\ -tmp___017^post25+tmp___017^0 == 0 /\ code31^0-code31^post25 == 0 /\ -disp9^post25+disp9^0 == 0 /\ out_count^0-out_count^post25 == 0 /\ 1-bytes_out^0+in_count^0 <= 0 /\ -tmp___024^post25+tmp___024^0 == 0 /\ -ent8^post25+ent8^0 == 0 /\ -tabort4^post25+tabort4^0 == 0 /\ -i29^post25+i29^0 == 0 /\ c7^0-c7^post25 == 0 /\ -i41^post25+i41^0 == 0 /\ __const_9^0-__const_9^post25 == 0 /\ -i45^post25+i45^0 == 0 /\ tmp12^0-tmp12^post25 == 0 /\ -fcode5^post25+fcode5^0 == 0 /\ offset^0-offset^post25 == 0 /\ __const_16^0-__const_16^post25 == 0 /\ bits33^0-bits33^post25 == 0 /\ i21^0-i21^post25 == 0 /\ -2+exit_stat^post25 == 0 /\ -__const_429496^post25+__const_429496^0 == 0 /\ apsim_incnt^0-apsim_incnt^post25 == 0 /\ -__const_50^post25+__const_50^0 == 0 /\ -hsize_reg10^post25+hsize_reg10^0 == 0 /\ -n_bits^post25+n_bits^0 == 0 /\ -incnt^post25+incnt^0 == 0 /\ __const_65536^0-__const_65536^post25 == 0 /\ -r_off32^post25+r_off32^0 == 0 /\ -m122^post25+m122^0 == 0 /\ count^0-count^post25 == 0 /\ -hsize^post25+hsize^0 == 0 /\ -hsize___027^post25+hsize___027^0 == 0 /\ -__const_2147483647^post25+__const_2147483647^0 == 0 /\ -__const_256^post25+__const_256^0 == 0 /\ __const_53^0-__const_53^post25 == 0 /\ ret_getbyte25^0-ret_getbyte25^post25 == 0 /\ n44^0-n44^post25 == 0 /\ -__const_10000^post25+__const_10000^0 == 0 /\ -maxcode^post25+maxcode^0 == 0 /\ -maxbits^post25+maxbits^0 == 0 /\ m130^0-m130^post25 == 0 /\ i3^0-i3^post25 == 0 /\ __const_8^0-__const_8^post25 == 0 /\ block_compress^0-block_compress^post25 == 0 /\ -in_count^post25+in_count^0 == 0 /\ -__const_8388607^post25+__const_8388607^0 == 0 /\ i6^0-i6^post25 == 0 /\ tmp___115^0-tmp___115^post25 == 0 /\ __const_257^0-__const_257^post25 == 0 /\ hshift11^0-hshift11^post25 == 0 /\ seed2^0-seed2^post25 == 0 /\ rat26^0-rat26^post25 == 0 /\ hsize___019^0-hsize___019^post25 == 0 /\ -ret_getbyte18^post25+ret_getbyte18^0 == 0 /\ -ratio^post25+ratio^0 == 0), cost: 1
  25: l26 -> l27 : __const_10000^0'=__const_10000^post26, __const_16^0'=__const_16^post26, __const_2147483647^0'=__const_2147483647^post26, __const_256^0'=__const_256^post26, __const_257^0'=__const_257^post26, __const_429496^0'=__const_429496^post26, __const_50^0'=__const_50^post26, __const_53^0'=__const_53^post26, __const_65536^0'=__const_65536^post26, __const_8388607^0'=__const_8388607^post26, __const_8^0'=__const_8^post26, __const_9^0'=__const_9^post26, apsim_bound11113^0'=apsim_bound11113^post26, apsim_incnt^0'=apsim_incnt^post26, bits33^0'=bits33^post26, block_compress^0'=block_compress^post26, bytes_out^0'=bytes_out^post26, c37^0'=c37^post26, c7^0'=c7^post26, checkpoint^0'=checkpoint^post26, clear_flg^0'=clear_flg^post26, code31^0'=code31^post26, count^0'=count^post26, disp9^0'=disp9^post26, ent8^0'=ent8^post26, exit_stat^0'=exit_stat^post26, fcode5^0'=fcode5^post26, free_ent^0'=free_ent^post26, hshift11^0'=hshift11^post26, hsize^0'=hsize^post26, hsize___019^0'=hsize___019^post26, hsize___027^0'=hsize___027^post26, hsize_reg10^0'=hsize_reg10^post26, i21^0'=i21^post26, i29^0'=i29^post26, i3^0'=i3^post26, i41^0'=i41^post26, i45^0'=i45^post26, i6^0'=i6^post26, in_count^0'=in_count^post26, incnt^0'=incnt^post26, m122^0'=m122^post26, m130^0'=m130^post26, maxbits^0'=maxbits^post26, maxcode^0'=maxcode^post26, maxmaxcode^0'=maxmaxcode^post26, n40^0'=n40^post26, n44^0'=n44^post26, n_bits^0'=n_bits^post26, offset^0'=offset^post26, out_count^0'=out_count^post26, r_off32^0'=r_off32^post26, rat26^0'=rat26^post26, ratio^0'=ratio^post26, ret_getbyte18^0'=ret_getbyte18^post26, ret_getbyte25^0'=ret_getbyte25^post26, seed2^0'=seed2^post26, tabort4^0'=tabort4^post26, tmp12^0'=tmp12^post26, tmp___014^0'=tmp___014^post26, tmp___017^0'=tmp___017^post26, tmp___024^0'=tmp___024^post26, tmp___115^0'=tmp___115^post26, (0 == 0 /\ c7^0-c7^post26 == 0 /\ rat26^0-rat26^post26 == 0 /\ tmp___115^0-tmp___115^post26 == 0 /\ -maxcode^post26+maxcode^0 == 0 /\ __const_50^0-__const_50^post26 == 0 /\ __const_8388607^0-__const_8388607^post26 == 0 /\ tmp___014^0-tmp___014^post26 == 0 /\ apsim_bound11113^0-apsim_bound11113^post26 == 0 /\ -hsize___027^post26+hsize___027^0 == 0 /\ -hsize_reg10^post26+hsize_reg10^0 == 0 /\ -hsize^post26+hsize^0 == 0 /\ hshift11^0-hshift11^post26 == 0 /\ -m122^post26+m122^0 == 0 /\ __const_9^0-__const_9^post26 == 0 /\ -tabort4^post26+tabort4^0 == 0 /\ -i29^post26+i29^0 == 0 /\ -i41^post26+i41^0 == 0 /\ -__const_2147483647^post26+__const_2147483647^0 == 0 /\ free_ent^0-free_ent^post26 == 0 /\ -__const_10000^post26+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post26 == 0 /\ out_count^0-out_count^post26 == 0 /\ bits33^0-bits33^post26 == 0 /\ -n_bits^post26+n_bits^0 == 0 /\ n40^0-n40^post26 == 0 /\ incnt^0-incnt^post26 == 0 /\ -disp9^post26+disp9^0 == 0 /\ -in_count^post26+in_count^0 == 0 /\ __const_16^0-__const_16^post26 == 0 /\ -tmp___024^post26+tmp___024^0 == 0 /\ -i6^post26+i6^0 == 0 /\ maxbits^0-maxbits^post26 == 0 /\ __const_257^0-__const_257^post26 == 0 /\ apsim_incnt^0-apsim_incnt^post26 == 0 /\ ret_getbyte25^0-ret_getbyte25^post26 == 0 /\ -fcode5^post26+fcode5^0 == 0 /\ -ratio^post26+ratio^0 == 0 /\ -ret_getbyte18^post26+ret_getbyte18^0 == 0 /\ count^0-count^post26 == 0 /\ hsize___019^0-hsize___019^post26 == 0 /\ __const_65536^0-__const_65536^post26 == 0 /\ ent8^0-ent8^post26 == 0 /\ -checkpoint^post26+checkpoint^0 == 0 /\ -clear_flg^post26+clear_flg^0 == 0 /\ i21^0-i21^post26 == 0 /\ exit_stat^0-exit_stat^post26 == 0 /\ -__const_256^post26+__const_256^0 == 0 /\ -__const_429496^post26+__const_429496^0 == 0 /\ -seed2^post26+seed2^0 == 0 /\ offset^post26 == 0 /\ -i3^post26+i3^0 == 0 /\ tmp12^0-tmp12^post26 == 0 /\ -block_compress^post26+block_compress^0 == 0 /\ -n44^post26+n44^0 == 0 /\ m130^0-m130^post26 == 0 /\ i45^0-i45^post26 == 0 /\ c37^0-c37^post26 == 0 /\ __const_53^0-__const_53^post26 == 0 /\ -r_off32^post26+r_off32^0 == 0 /\ -code31^post26+code31^0 == 0 /\ -tmp___017^post26+tmp___017^0 == 0 /\ __const_8^0-__const_8^post26 == 0), cost: 1
  37: l27 -> l35 : __const_10000^0'=__const_10000^post38, __const_16^0'=__const_16^post38, __const_2147483647^0'=__const_2147483647^post38, __const_256^0'=__const_256^post38, __const_257^0'=__const_257^post38, __const_429496^0'=__const_429496^post38, __const_50^0'=__const_50^post38, __const_53^0'=__const_53^post38, __const_65536^0'=__const_65536^post38, __const_8388607^0'=__const_8388607^post38, __const_8^0'=__const_8^post38, __const_9^0'=__const_9^post38, apsim_bound11113^0'=apsim_bound11113^post38, apsim_incnt^0'=apsim_incnt^post38, bits33^0'=bits33^post38, block_compress^0'=block_compress^post38, bytes_out^0'=bytes_out^post38, c37^0'=c37^post38, c7^0'=c7^post38, checkpoint^0'=checkpoint^post38, clear_flg^0'=clear_flg^post38, code31^0'=code31^post38, count^0'=count^post38, disp9^0'=disp9^post38, ent8^0'=ent8^post38, exit_stat^0'=exit_stat^post38, fcode5^0'=fcode5^post38, free_ent^0'=free_ent^post38, hshift11^0'=hshift11^post38, hsize^0'=hsize^post38, hsize___019^0'=hsize___019^post38, hsize___027^0'=hsize___027^post38, hsize_reg10^0'=hsize_reg10^post38, i21^0'=i21^post38, i29^0'=i29^post38, i3^0'=i3^post38, i41^0'=i41^post38, i45^0'=i45^post38, i6^0'=i6^post38, in_count^0'=in_count^post38, incnt^0'=incnt^post38, m122^0'=m122^post38, m130^0'=m130^post38, maxbits^0'=maxbits^post38, maxcode^0'=maxcode^post38, maxmaxcode^0'=maxmaxcode^post38, n40^0'=n40^post38, n44^0'=n44^post38, n_bits^0'=n_bits^post38, offset^0'=offset^post38, out_count^0'=out_count^post38, r_off32^0'=r_off32^post38, rat26^0'=rat26^post38, ratio^0'=ratio^post38, ret_getbyte18^0'=ret_getbyte18^post38, ret_getbyte25^0'=ret_getbyte25^post38, seed2^0'=seed2^post38, tabort4^0'=tabort4^post38, tmp12^0'=tmp12^post38, tmp___014^0'=tmp___014^post38, tmp___017^0'=tmp___017^post38, tmp___024^0'=tmp___024^post38, tmp___115^0'=tmp___115^post38, (-i41^post38+i41^0 == 0 /\ -i45^post38+i45^0 == 0 /\ -apsim_bound11113^post38+apsim_bound11113^0 == 0 /\ -n_bits^post38+n_bits^0 == 0 /\ maxcode^0-maxcode^post38 == 0 /\ offset^0-offset^post38 == 0 /\ -__const_50^post38+__const_50^0 == 0 /\ -m122^post38+m122^0 == 0 /\ -hsize_reg10^post38+hsize_reg10^0 == 0 /\ -__const_10000^post38+__const_10000^0 == 0 /\ -hsize^post38+hsize^0 == 0 /\ bits33^0-bits33^post38 == 0 /\ -hsize___027^post38+hsize___027^0 == 0 /\ __const_16^0-__const_16^post38 == 0 /\ i6^0-i6^post38 == 0 /\ -incnt^post38+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post38 == 0 /\ apsim_incnt^0-apsim_incnt^post38 == 0 /\ hshift11^0-hshift11^post38 == 0 /\ -maxbits^post38+maxbits^0 == 0 /\ -n40^post38+n40^0 == 0 /\ __const_65536^0-__const_65536^post38 == 0 /\ free_ent^0-free_ent^post38 == 0 /\ c37^0-c37^post38 == 0 /\ -tmp___115^post38+tmp___115^0 == 0 /\ -in_count^post38+in_count^0 == 0 /\ -i29^post38+i29^0 == 0 /\ -__const_8388607^post38+__const_8388607^0 == 0 /\ code31^0-code31^post38 == 0 /\ i3^0-i3^post38 == 0 /\ __const_53^0-__const_53^post38 == 0 /\ ret_getbyte25^0-ret_getbyte25^post38 == 0 /\ c7^0-c7^post38 == 0 /\ __const_257^0-__const_257^post38 == 0 /\ -clear_flg^post38+clear_flg^0 == 0 /\ n44^0-n44^post38 == 0 /\ m130^0-m130^post38 == 0 /\ -fcode5^post38+fcode5^0 == 0 /\ r_off32^0-r_off32^post38 == 0 /\ -bytes_out^post38+bytes_out^0 == 0 /\ __const_8^0-__const_8^post38 == 0 /\ -block_compress^post38+block_compress^0 == 0 /\ -__const_256^post38+__const_256^0 == 0 /\ -count^post38+count^0 == 0 /\ -disp9^post38+disp9^0 == 0 /\ -seed2^post38+seed2^0 == 0 /\ tabort4^0-tabort4^post38 == 0 /\ tmp12^0-tmp12^post38 == 0 /\ ent8^0-ent8^post38 == 0 /\ tmp___017^0-tmp___017^post38 == 0 /\ i21^0-i21^post38 == 0 /\ __const_429496^0-__const_429496^post38 == 0 /\ exit_stat^0-exit_stat^post38 == 0 /\ -rat26^post38+rat26^0 == 0 /\ hsize___019^0-hsize___019^post38 == 0 /\ -ratio^post38+ratio^0 == 0 /\ -tmp___024^post38+tmp___024^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post38 == 0 /\ out_count^0-out_count^post38 == 0 /\ -__const_2147483647^post38+__const_2147483647^0 == 0 /\ __const_9^0-__const_9^post38 == 0 /\ checkpoint^0-checkpoint^post38 == 0 /\ -tmp___014^post38+tmp___014^0 == 0), cost: 1
  26: l28 -> l26 : __const_10000^0'=__const_10000^post27, __const_16^0'=__const_16^post27, __const_2147483647^0'=__const_2147483647^post27, __const_256^0'=__const_256^post27, __const_257^0'=__const_257^post27, __const_429496^0'=__const_429496^post27, __const_50^0'=__const_50^post27, __const_53^0'=__const_53^post27, __const_65536^0'=__const_65536^post27, __const_8388607^0'=__const_8388607^post27, __const_8^0'=__const_8^post27, __const_9^0'=__const_9^post27, apsim_bound11113^0'=apsim_bound11113^post27, apsim_incnt^0'=apsim_incnt^post27, bits33^0'=bits33^post27, block_compress^0'=block_compress^post27, bytes_out^0'=bytes_out^post27, c37^0'=c37^post27, c7^0'=c7^post27, checkpoint^0'=checkpoint^post27, clear_flg^0'=clear_flg^post27, code31^0'=code31^post27, count^0'=count^post27, disp9^0'=disp9^post27, ent8^0'=ent8^post27, exit_stat^0'=exit_stat^post27, fcode5^0'=fcode5^post27, free_ent^0'=free_ent^post27, hshift11^0'=hshift11^post27, hsize^0'=hsize^post27, hsize___019^0'=hsize___019^post27, hsize___027^0'=hsize___027^post27, hsize_reg10^0'=hsize_reg10^post27, i21^0'=i21^post27, i29^0'=i29^post27, i3^0'=i3^post27, i41^0'=i41^post27, i45^0'=i45^post27, i6^0'=i6^post27, in_count^0'=in_count^post27, incnt^0'=incnt^post27, m122^0'=m122^post27, m130^0'=m130^post27, maxbits^0'=maxbits^post27, maxcode^0'=maxcode^post27, maxmaxcode^0'=maxmaxcode^post27, n40^0'=n40^post27, n44^0'=n44^post27, n_bits^0'=n_bits^post27, offset^0'=offset^post27, out_count^0'=out_count^post27, r_off32^0'=r_off32^post27, rat26^0'=rat26^post27, ratio^0'=ratio^post27, ret_getbyte18^0'=ret_getbyte18^post27, ret_getbyte25^0'=ret_getbyte25^post27, seed2^0'=seed2^post27, tabort4^0'=tabort4^post27, tmp12^0'=tmp12^post27, tmp___014^0'=tmp___014^post27, tmp___017^0'=tmp___017^post27, tmp___024^0'=tmp___024^post27, tmp___115^0'=tmp___115^post27, (ret_getbyte25^0-ret_getbyte25^post27 == 0 /\ exit_stat^0-exit_stat^post27 == 0 /\ -ratio^post27+ratio^0 == 0 /\ tmp12^0-tmp12^post27 == 0 /\ __const_53^0-__const_53^post27 == 0 /\ free_ent^0-free_ent^post27 == 0 /\ -in_count^post27+in_count^0 == 0 /\ -ret_getbyte18^post27+ret_getbyte18^0 == 0 /\ maxmaxcode^0-maxmaxcode^post27 == 0 /\ -code31^post27+code31^0 == 0 /\ out_count^0-out_count^post27 == 0 /\ -apsim_incnt^post27+apsim_incnt^0 == 0 /\ __const_16^0-__const_16^post27 == 0 /\ -__const_65536^post27+__const_65536^0 == 0 /\ -__const_9^post27+__const_9^0 == 0 /\ -disp9^post27+disp9^0 == 0 /\ offset^0-offset^post27 == 0 /\ n40^0-n40^post27 == 0 /\ -i45^post27+i45^0 == 0 /\ -incnt^post27+incnt^0 == 0 /\ __const_257^0-__const_257^post27 == 0 /\ n44^0-n44^post27 == 0 /\ tmp___014^0-tmp___014^post27 == 0 /\ -block_compress^post27+block_compress^0 == 0 /\ -fcode5^post27+fcode5^0 == 0 /\ -__const_8^post27+__const_8^0 == 0 /\ -__const_8388607^post27+__const_8388607^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post27 == 0 /\ -ent8^post27+ent8^0 == 0 /\ -r_off32^post27+r_off32^0 == 0 /\ i21^0-i21^post27 == 0 /\ __const_50^0-__const_50^post27 == 0 /\ __const_256^0-__const_256^post27 == 0 /\ -tmp___017^post27+tmp___017^0 == 0 /\ -maxbits^post27+maxbits^0 == 0 /\ -maxcode^post27+maxcode^0 == 0 /\ count^0-count^post27 == 0 /\ -__const_429496^post27+__const_429496^0 == 0 /\ m130^0-m130^post27 == 0 /\ -hsize_reg10^post27+hsize_reg10^0 == 0 /\ -m122^post27+m122^0 == 0 /\ c37^0-c37^post27 == 0 /\ bits33^0-bits33^post27 == 0 /\ -hsize^post27+hsize^0 == 0 /\ hsize___027^0-hsize___027^post27 == 0 /\ -i41^post27+i41^0 == 0 /\ checkpoint^0-checkpoint^post27 == 0 /\ tmp___115^0-tmp___115^post27 == 0 /\ rat26^0-rat26^post27 == 0 /\ -n_bits^post27+n_bits^0 == 0 /\ seed2^0-seed2^post27 == 0 /\ -tabort4^post27+tabort4^0 == 0 /\ -__const_2147483647^post27+__const_2147483647^0 == 0 /\ hsize___019^0-hsize___019^post27 == 0 /\ -clear_flg^post27+clear_flg^0 == 0 /\ -bytes_out^post27+bytes_out^0 == 0 /\ hshift11^0-hshift11^post27 == 0 /\ i6^0-i6^post27 == 0 /\ __const_10000^0-__const_10000^post27 == 0 /\ -i29^post27+i29^0 == 0 /\ -c7^post27+c7^0 == 0 /\ i3^0-i3^post27 == 0 /\ -tmp___024^post27+tmp___024^0 == 0), cost: 1
  27: l29 -> l28 : __const_10000^0'=__const_10000^post28, __const_16^0'=__const_16^post28, __const_2147483647^0'=__const_2147483647^post28, __const_256^0'=__const_256^post28, __const_257^0'=__const_257^post28, __const_429496^0'=__const_429496^post28, __const_50^0'=__const_50^post28, __const_53^0'=__const_53^post28, __const_65536^0'=__const_65536^post28, __const_8388607^0'=__const_8388607^post28, __const_8^0'=__const_8^post28, __const_9^0'=__const_9^post28, apsim_bound11113^0'=apsim_bound11113^post28, apsim_incnt^0'=apsim_incnt^post28, bits33^0'=bits33^post28, block_compress^0'=block_compress^post28, bytes_out^0'=bytes_out^post28, c37^0'=c37^post28, c7^0'=c7^post28, checkpoint^0'=checkpoint^post28, clear_flg^0'=clear_flg^post28, code31^0'=code31^post28, count^0'=count^post28, disp9^0'=disp9^post28, ent8^0'=ent8^post28, exit_stat^0'=exit_stat^post28, fcode5^0'=fcode5^post28, free_ent^0'=free_ent^post28, hshift11^0'=hshift11^post28, hsize^0'=hsize^post28, hsize___019^0'=hsize___019^post28, hsize___027^0'=hsize___027^post28, hsize_reg10^0'=hsize_reg10^post28, i21^0'=i21^post28, i29^0'=i29^post28, i3^0'=i3^post28, i41^0'=i41^post28, i45^0'=i45^post28, i6^0'=i6^post28, in_count^0'=in_count^post28, incnt^0'=incnt^post28, m122^0'=m122^post28, m130^0'=m130^post28, maxbits^0'=maxbits^post28, maxcode^0'=maxcode^post28, maxmaxcode^0'=maxmaxcode^post28, n40^0'=n40^post28, n44^0'=n44^post28, n_bits^0'=n_bits^post28, offset^0'=offset^post28, out_count^0'=out_count^post28, r_off32^0'=r_off32^post28, rat26^0'=rat26^post28, ratio^0'=ratio^post28, ret_getbyte18^0'=ret_getbyte18^post28, ret_getbyte25^0'=ret_getbyte25^post28, seed2^0'=seed2^post28, tabort4^0'=tabort4^post28, tmp12^0'=tmp12^post28, tmp___014^0'=tmp___014^post28, tmp___017^0'=tmp___017^post28, tmp___024^0'=tmp___024^post28, tmp___115^0'=tmp___115^post28, (ent8^0-ent8^post28 == 0 /\ n40^0-n40^post28 == 0 /\ apsim_bound11113^0-apsim_bound11113^post28 == 0 /\ -i29^post28+i29^0 == 0 /\ -i45^post28+i45^0 == 0 /\ -__const_429496^post28+__const_429496^0 == 0 /\ c7^0-c7^post28 == 0 /\ hshift11^0-hshift11^post28 == 0 /\ -i41^post28+i41^0 == 0 /\ rat26^0-rat26^post28 == 0 /\ free_ent^0-free_ent^post28 == 0 /\ tmp___115^0-tmp___115^post28 == 0 /\ __const_9^0-__const_9^post28 == 0 /\ out_count^0-out_count^post28 == 0 /\ -__const_65536^post28+__const_65536^0 == 0 /\ __const_50^0-__const_50^post28 == 0 /\ tmp___014^0-tmp___014^post28 == 0 /\ i21^0-i21^post28 == 0 /\ -hsize_reg10^post28+hsize_reg10^0 == 0 /\ -tmp___024^post28+tmp___024^0 == 0 /\ exit_stat^0-exit_stat^post28 == 0 /\ offset^0-offset^post28 == 0 /\ -m122^post28+m122^0 == 0 /\ maxmaxcode^0-maxmaxcode^post28 == 0 /\ -incnt^post28+incnt^0 == 0 /\ __const_16^0-__const_16^post28 == 0 /\ -__const_10000^post28+__const_10000^0 == 0 /\ -bytes_out^post28+bytes_out^0 == 0 /\ -clear_flg^post28+clear_flg^0 == 0 /\ -tabort4^post28+tabort4^0 == 0 /\ bits33^0-bits33^post28 == 0 /\ -__const_2147483647^post28+__const_2147483647^0 == 0 /\ m130^0-m130^post28 == 0 /\ __const_16^0-i45^0 <= 0 /\ __const_257^0-__const_257^post28 == 0 /\ apsim_incnt^0-apsim_incnt^post28 == 0 /\ hsize___019^0-hsize___019^post28 == 0 /\ -r_off32^post28+r_off32^0 == 0 /\ -ratio^post28+ratio^0 == 0 /\ -disp9^post28+disp9^0 == 0 /\ -count^post28+count^0 == 0 /\ n44^0-n44^post28 == 0 /\ -ret_getbyte18^post28+ret_getbyte18^0 == 0 /\ -i6^post28+i6^0 == 0 /\ -in_count^post28+in_count^0 == 0 /\ -n_bits^post28+n_bits^0 == 0 /\ maxbits^0-maxbits^post28 == 0 /\ seed2^0-seed2^post28 == 0 /\ -fcode5^post28+fcode5^0 == 0 /\ tmp12^0-tmp12^post28 == 0 /\ __const_53^0-__const_53^post28 == 0 /\ i3^0-i3^post28 == 0 /\ -hsize^post28+hsize^0 == 0 /\ __const_8^0-__const_8^post28 == 0 /\ code31^0-code31^post28 == 0 /\ -tmp___017^post28+tmp___017^0 == 0 /\ -hsize___027^post28+hsize___027^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post28 == 0 /\ -block_compress^post28+block_compress^0 == 0 /\ -checkpoint^post28+checkpoint^0 == 0 /\ -maxcode^post28+maxcode^0 == 0 /\ -__const_8388607^post28+__const_8388607^0 == 0 /\ -__const_256^post28+__const_256^0 == 0 /\ c37^0-c37^post28 == 0), cost: 1
  28: l29 -> l30 : __const_10000^0'=__const_10000^post29, __const_16^0'=__const_16^post29, __const_2147483647^0'=__const_2147483647^post29, __const_256^0'=__const_256^post29, __const_257^0'=__const_257^post29, __const_429496^0'=__const_429496^post29, __const_50^0'=__const_50^post29, __const_53^0'=__const_53^post29, __const_65536^0'=__const_65536^post29, __const_8388607^0'=__const_8388607^post29, __const_8^0'=__const_8^post29, __const_9^0'=__const_9^post29, apsim_bound11113^0'=apsim_bound11113^post29, apsim_incnt^0'=apsim_incnt^post29, bits33^0'=bits33^post29, block_compress^0'=block_compress^post29, bytes_out^0'=bytes_out^post29, c37^0'=c37^post29, c7^0'=c7^post29, checkpoint^0'=checkpoint^post29, clear_flg^0'=clear_flg^post29, code31^0'=code31^post29, count^0'=count^post29, disp9^0'=disp9^post29, ent8^0'=ent8^post29, exit_stat^0'=exit_stat^post29, fcode5^0'=fcode5^post29, free_ent^0'=free_ent^post29, hshift11^0'=hshift11^post29, hsize^0'=hsize^post29, hsize___019^0'=hsize___019^post29, hsize___027^0'=hsize___027^post29, hsize_reg10^0'=hsize_reg10^post29, i21^0'=i21^post29, i29^0'=i29^post29, i3^0'=i3^post29, i41^0'=i41^post29, i45^0'=i45^post29, i6^0'=i6^post29, in_count^0'=in_count^post29, incnt^0'=incnt^post29, m122^0'=m122^post29, m130^0'=m130^post29, maxbits^0'=maxbits^post29, maxcode^0'=maxcode^post29, maxmaxcode^0'=maxmaxcode^post29, n40^0'=n40^post29, n44^0'=n44^post29, n_bits^0'=n_bits^post29, offset^0'=offset^post29, out_count^0'=out_count^post29, r_off32^0'=r_off32^post29, rat26^0'=rat26^post29, ratio^0'=ratio^post29, ret_getbyte18^0'=ret_getbyte18^post29, ret_getbyte25^0'=ret_getbyte25^post29, seed2^0'=seed2^post29, tabort4^0'=tabort4^post29, tmp12^0'=tmp12^post29, tmp___014^0'=tmp___014^post29, tmp___017^0'=tmp___017^post29, tmp___024^0'=tmp___024^post29, tmp___115^0'=tmp___115^post29, (-n44^post29+n44^0 == 0 /\ -n_bits^post29+n_bits^0 == 0 /\ -r_off32^post29+r_off32^0 == 0 /\ __const_16^0-__const_16^post29 == 0 /\ -hsize^post29+hsize^0 == 0 /\ __const_50^0-__const_50^post29 == 0 /\ -__const_2147483647^post29+__const_2147483647^0 == 0 /\ tmp___115^0-tmp___115^post29 == 0 /\ -tabort4^post29+tabort4^0 == 0 /\ __const_53^0-__const_53^post29 == 0 /\ hshift11^0-hshift11^post29 == 0 /\ rat26^0-rat26^post29 == 0 /\ -__const_10000^post29+__const_10000^0 == 0 /\ -maxcode^post29+maxcode^0 == 0 /\ __const_256^0-__const_256^post29 == 0 /\ -1-i45^0+i45^post29 == 0 /\ free_ent^0-free_ent^post29 == 0 /\ n40^0-n40^post29 == 0 /\ apsim_bound11113^0-apsim_bound11113^post29 == 0 /\ -__const_8^post29+__const_8^0 == 0 /\ i29^0-i29^post29 == 0 /\ out_count^0-out_count^post29 == 0 /\ -i6^post29+i6^0 == 0 /\ ent8^0-ent8^post29 == 0 /\ -__const_65536^post29+__const_65536^0 == 0 /\ -hsize___027^post29+hsize___027^0 == 0 /\ __const_9^0-__const_9^post29 == 0 /\ exit_stat^0-exit_stat^post29 == 0 /\ -c7^post29+c7^0 == 0 /\ -clear_flg^post29+clear_flg^0 == 0 /\ -bytes_out^post29+bytes_out^0 == 0 /\ offset^0-offset^post29 == 0 /\ -incnt^post29+incnt^0 == 0 /\ i21^0-i21^post29 == 0 /\ maxbits^0-maxbits^post29 == 0 /\ bits33^0-bits33^post29 == 0 /\ -checkpoint^post29+checkpoint^0 == 0 /\ -m122^post29+m122^0 == 0 /\ -__const_8388607^post29+__const_8388607^0 == 0 /\ __const_257^0-__const_257^post29 == 0 /\ -fcode5^post29+fcode5^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post29 == 0 /\ -tmp___024^post29+tmp___024^0 == 0 /\ -tmp___017^post29+tmp___017^0 == 0 /\ maxmaxcode^0-maxmaxcode^post29 == 0 /\ hsize___019^0-hsize___019^post29 == 0 /\ -i41^post29+i41^0 == 0 /\ -i3^post29+i3^0 == 0 /\ apsim_incnt^0-apsim_incnt^post29 == 0 /\ -block_compress^post29+block_compress^0 == 0 /\ count^0-count^post29 == 0 /\ -ret_getbyte18^post29+ret_getbyte18^0 == 0 /\ c37^0-c37^post29 == 0 /\ -code31^post29+code31^0 == 0 /\ tmp___014^0-tmp___014^post29 == 0 /\ 1-__const_16^0+i45^0 <= 0 /\ -in_count^post29+in_count^0 == 0 /\ tmp12^0-tmp12^post29 == 0 /\ ratio^0-ratio^post29 == 0 /\ -__const_429496^post29+__const_429496^0 == 0 /\ seed2^0-seed2^post29 == 0 /\ -hsize_reg10^post29+hsize_reg10^0 == 0 /\ -disp9^post29+disp9^0 == 0 /\ m130^0-m130^post29 == 0), cost: 1
  69: l30 -> l31 : __const_10000^0'=__const_10000^post70, __const_16^0'=__const_16^post70, __const_2147483647^0'=__const_2147483647^post70, __const_256^0'=__const_256^post70, __const_257^0'=__const_257^post70, __const_429496^0'=__const_429496^post70, __const_50^0'=__const_50^post70, __const_53^0'=__const_53^post70, __const_65536^0'=__const_65536^post70, __const_8388607^0'=__const_8388607^post70, __const_8^0'=__const_8^post70, __const_9^0'=__const_9^post70, apsim_bound11113^0'=apsim_bound11113^post70, apsim_incnt^0'=apsim_incnt^post70, bits33^0'=bits33^post70, block_compress^0'=block_compress^post70, bytes_out^0'=bytes_out^post70, c37^0'=c37^post70, c7^0'=c7^post70, checkpoint^0'=checkpoint^post70, clear_flg^0'=clear_flg^post70, code31^0'=code31^post70, count^0'=count^post70, disp9^0'=disp9^post70, ent8^0'=ent8^post70, exit_stat^0'=exit_stat^post70, fcode5^0'=fcode5^post70, free_ent^0'=free_ent^post70, hshift11^0'=hshift11^post70, hsize^0'=hsize^post70, hsize___019^0'=hsize___019^post70, hsize___027^0'=hsize___027^post70, hsize_reg10^0'=hsize_reg10^post70, i21^0'=i21^post70, i29^0'=i29^post70, i3^0'=i3^post70, i41^0'=i41^post70, i45^0'=i45^post70, i6^0'=i6^post70, in_count^0'=in_count^post70, incnt^0'=incnt^post70, m122^0'=m122^post70, m130^0'=m130^post70, maxbits^0'=maxbits^post70, maxcode^0'=maxcode^post70, maxmaxcode^0'=maxmaxcode^post70, n40^0'=n40^post70, n44^0'=n44^post70, n_bits^0'=n_bits^post70, offset^0'=offset^post70, out_count^0'=out_count^post70, r_off32^0'=r_off32^post70, rat26^0'=rat26^post70, ratio^0'=ratio^post70, ret_getbyte18^0'=ret_getbyte18^post70, ret_getbyte25^0'=ret_getbyte25^post70, seed2^0'=seed2^post70, tabort4^0'=tabort4^post70, tmp12^0'=tmp12^post70, tmp___014^0'=tmp___014^post70, tmp___017^0'=tmp___017^post70, tmp___024^0'=tmp___024^post70, tmp___115^0'=tmp___115^post70, (-__const_2147483647^post70+__const_2147483647^0 == 0 /\ ent8^0-ent8^post70 == 0 /\ -incnt^post70+incnt^0 == 0 /\ -offset^post70+offset^0 == 0 /\ -__const_16^post70+__const_16^0 == 0 /\ r_off32^0-r_off32^post70 == 0 /\ -apsim_incnt^post70+apsim_incnt^0 == 0 /\ tabort4^0-tabort4^post70 == 0 /\ exit_stat^0-exit_stat^post70 == 0 /\ __const_50^0-__const_50^post70 == 0 /\ hsize___027^0-hsize___027^post70 == 0 /\ -__const_429496^post70+__const_429496^0 == 0 /\ -__const_9^post70+__const_9^0 == 0 /\ -__const_65536^post70+__const_65536^0 == 0 /\ -m130^post70+m130^0 == 0 /\ -maxbits^post70+maxbits^0 == 0 /\ -n40^post70+n40^0 == 0 /\ -i41^post70+i41^0 == 0 /\ -i45^post70+i45^0 == 0 /\ -maxmaxcode^post70+maxmaxcode^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post70 == 0 /\ -clear_flg^post70+clear_flg^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post70 == 0 /\ -in_count^post70+in_count^0 == 0 /\ -__const_8^post70+__const_8^0 == 0 /\ out_count^0-out_count^post70 == 0 /\ -__const_8388607^post70+__const_8388607^0 == 0 /\ -block_compress^post70+block_compress^0 == 0 /\ tmp12^0-tmp12^post70 == 0 /\ -hsize^post70+hsize^0 == 0 /\ i6^0-i6^post70 == 0 /\ __const_257^0-__const_257^post70 == 0 /\ __const_10000^0-__const_10000^post70 == 0 /\ n44^0-n44^post70 == 0 /\ -ret_getbyte25^post70+ret_getbyte25^0 == 0 /\ -tmp___014^post70+tmp___014^0 == 0 /\ -seed2^post70+seed2^0 == 0 /\ n_bits^0-n_bits^post70 == 0 /\ -fcode5^post70+fcode5^0 == 0 /\ m122^0-m122^post70 == 0 /\ maxcode^0-maxcode^post70 == 0 /\ -count^post70+count^0 == 0 /\ -disp9^post70+disp9^0 == 0 /\ -tmp___024^post70+tmp___024^0 == 0 /\ c37^0-c37^post70 == 0 /\ bits33^0-bits33^post70 == 0 /\ -i29^post70+i29^0 == 0 /\ -tmp___115^post70+tmp___115^0 == 0 /\ i3^0-i3^post70 == 0 /\ __const_53^0-__const_53^post70 == 0 /\ code31^0-code31^post70 == 0 /\ -checkpoint^post70+checkpoint^0 == 0 /\ hshift11^0-hshift11^post70 == 0 /\ -i21^post70+i21^0 == 0 /\ tmp___017^0-tmp___017^post70 == 0 /\ -__const_256^post70+__const_256^0 == 0 /\ -hsize_reg10^post70+hsize_reg10^0 == 0 /\ -bytes_out^post70+bytes_out^0 == 0 /\ free_ent^0-free_ent^post70 == 0 /\ rat26^0-rat26^post70 == 0 /\ -ratio^post70+ratio^0 == 0 /\ -hsize___019^post70+hsize___019^0 == 0 /\ -c7^post70+c7^0 == 0), cost: 1
  29: l31 -> l28 : __const_10000^0'=__const_10000^post30, __const_16^0'=__const_16^post30, __const_2147483647^0'=__const_2147483647^post30, __const_256^0'=__const_256^post30, __const_257^0'=__const_257^post30, __const_429496^0'=__const_429496^post30, __const_50^0'=__const_50^post30, __const_53^0'=__const_53^post30, __const_65536^0'=__const_65536^post30, __const_8388607^0'=__const_8388607^post30, __const_8^0'=__const_8^post30, __const_9^0'=__const_9^post30, apsim_bound11113^0'=apsim_bound11113^post30, apsim_incnt^0'=apsim_incnt^post30, bits33^0'=bits33^post30, block_compress^0'=block_compress^post30, bytes_out^0'=bytes_out^post30, c37^0'=c37^post30, c7^0'=c7^post30, checkpoint^0'=checkpoint^post30, clear_flg^0'=clear_flg^post30, code31^0'=code31^post30, count^0'=count^post30, disp9^0'=disp9^post30, ent8^0'=ent8^post30, exit_stat^0'=exit_stat^post30, fcode5^0'=fcode5^post30, free_ent^0'=free_ent^post30, hshift11^0'=hshift11^post30, hsize^0'=hsize^post30, hsize___019^0'=hsize___019^post30, hsize___027^0'=hsize___027^post30, hsize_reg10^0'=hsize_reg10^post30, i21^0'=i21^post30, i29^0'=i29^post30, i3^0'=i3^post30, i41^0'=i41^post30, i45^0'=i45^post30, i6^0'=i6^post30, in_count^0'=in_count^post30, incnt^0'=incnt^post30, m122^0'=m122^post30, m130^0'=m130^post30, maxbits^0'=maxbits^post30, maxcode^0'=maxcode^post30, maxmaxcode^0'=maxmaxcode^post30, n40^0'=n40^post30, n44^0'=n44^post30, n_bits^0'=n_bits^post30, offset^0'=offset^post30, out_count^0'=out_count^post30, r_off32^0'=r_off32^post30, rat26^0'=rat26^post30, ratio^0'=ratio^post30, ret_getbyte18^0'=ret_getbyte18^post30, ret_getbyte25^0'=ret_getbyte25^post30, seed2^0'=seed2^post30, tabort4^0'=tabort4^post30, tmp12^0'=tmp12^post30, tmp___014^0'=tmp___014^post30, tmp___017^0'=tmp___017^post30, tmp___024^0'=tmp___024^post30, tmp___115^0'=tmp___115^post30, (-i6^post30+i6^0 == 0 /\ -tmp___024^post30+tmp___024^0 == 0 /\ -in_count^post30+in_count^0 == 0 /\ -__const_8388607^post30+__const_8388607^0 == 0 /\ -ret_getbyte18^post30+ret_getbyte18^0 == 0 /\ -apsim_incnt^post30+apsim_incnt^0 == 0 /\ -c7^post30+c7^0 == 0 /\ -i21^post30+i21^0 == 0 /\ -clear_flg^post30+clear_flg^0 == 0 /\ __const_16^0-__const_16^post30 == 0 /\ hsize___027^0-hsize___027^post30 == 0 /\ rat26^0-rat26^post30 == 0 /\ -__const_429496^post30+__const_429496^0 == 0 /\ -m122^post30+m122^0 == 0 /\ -i3^post30+i3^0 == 0 /\ tmp___115^0-tmp___115^post30 == 0 /\ exit_stat^0-exit_stat^post30 == 0 /\ __const_50^0-__const_50^post30 == 0 /\ -block_compress^post30+block_compress^0 == 0 /\ -disp9^post30+disp9^0 == 0 /\ i29^0-i29^post30 == 0 /\ hsize___019^0-hsize___019^post30 == 0 /\ m130^0-m130^post30 == 0 /\ apsim_bound11113^0-apsim_bound11113^post30 == 0 /\ __const_256^0-__const_256^post30 == 0 /\ -n44^post30+n44^0 == 0 /\ -r_off32^post30+r_off32^0 == 0 /\ __const_257^0-__const_257^post30 == 0 /\ hshift11^0-hshift11^post30 == 0 /\ -code31^post30+code31^0 == 0 /\ __const_53^0-__const_53^post30 == 0 /\ -__const_8^post30+__const_8^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post30 == 0 /\ tmp___017^0-tmp___017^post30 == 0 /\ free_ent^0-free_ent^post30 == 0 /\ -maxbits^post30+maxbits^0 == 0 /\ -maxcode^post30+maxcode^0 == 0 /\ maxmaxcode^0-maxmaxcode^post30 == 0 /\ out_count^0-out_count^post30 == 0 /\ -hsize_reg10^post30+hsize_reg10^0 == 0 /\ bits33^0-bits33^post30 == 0 /\ -hsize^post30+hsize^0 == 0 /\ i45^0-i45^post30 == 0 /\ c37^0-c37^post30 == 0 /\ -tabort4^post30+tabort4^0 == 0 /\ n40^0-n40^post30 == 0 /\ -seed2^post30+seed2^0 == 0 /\ offset^0-offset^post30 == 0 /\ -tmp___014^post30+tmp___014^0 == 0 /\ -__const_65536^post30+__const_65536^0 == 0 /\ -__const_2147483647^post30+__const_2147483647^0 == 0 /\ -fcode5^post30+fcode5^0 == 0 /\ -i41^post30+i41^0 == 0 /\ -incnt^post30+incnt^0 == 0 /\ -bytes_out^post30+bytes_out^0 == 0 /\ -ent8^post30+ent8^0 == 0 /\ ratio^0-ratio^post30 == 0 /\ checkpoint^0-checkpoint^post30 == 0 /\ __const_10000^0-__const_10000^post30 == 0 /\ count^0-count^post30 == 0 /\ -n_bits^post30+n_bits^0 == 0 /\ tmp12^0-tmp12^post30 == 0 /\ -__const_9^post30+__const_9^0 == 0 /\ n44^0-i45^0 <= 0), cost: 1
  30: l31 -> l29 : __const_10000^0'=__const_10000^post31, __const_16^0'=__const_16^post31, __const_2147483647^0'=__const_2147483647^post31, __const_256^0'=__const_256^post31, __const_257^0'=__const_257^post31, __const_429496^0'=__const_429496^post31, __const_50^0'=__const_50^post31, __const_53^0'=__const_53^post31, __const_65536^0'=__const_65536^post31, __const_8388607^0'=__const_8388607^post31, __const_8^0'=__const_8^post31, __const_9^0'=__const_9^post31, apsim_bound11113^0'=apsim_bound11113^post31, apsim_incnt^0'=apsim_incnt^post31, bits33^0'=bits33^post31, block_compress^0'=block_compress^post31, bytes_out^0'=bytes_out^post31, c37^0'=c37^post31, c7^0'=c7^post31, checkpoint^0'=checkpoint^post31, clear_flg^0'=clear_flg^post31, code31^0'=code31^post31, count^0'=count^post31, disp9^0'=disp9^post31, ent8^0'=ent8^post31, exit_stat^0'=exit_stat^post31, fcode5^0'=fcode5^post31, free_ent^0'=free_ent^post31, hshift11^0'=hshift11^post31, hsize^0'=hsize^post31, hsize___019^0'=hsize___019^post31, hsize___027^0'=hsize___027^post31, hsize_reg10^0'=hsize_reg10^post31, i21^0'=i21^post31, i29^0'=i29^post31, i3^0'=i3^post31, i41^0'=i41^post31, i45^0'=i45^post31, i6^0'=i6^post31, in_count^0'=in_count^post31, incnt^0'=incnt^post31, m122^0'=m122^post31, m130^0'=m130^post31, maxbits^0'=maxbits^post31, maxcode^0'=maxcode^post31, maxmaxcode^0'=maxmaxcode^post31, n40^0'=n40^post31, n44^0'=n44^post31, n_bits^0'=n_bits^post31, offset^0'=offset^post31, out_count^0'=out_count^post31, r_off32^0'=r_off32^post31, rat26^0'=rat26^post31, ratio^0'=ratio^post31, ret_getbyte18^0'=ret_getbyte18^post31, ret_getbyte25^0'=ret_getbyte25^post31, seed2^0'=seed2^post31, tabort4^0'=tabort4^post31, tmp12^0'=tmp12^post31, tmp___014^0'=tmp___014^post31, tmp___017^0'=tmp___017^post31, tmp___024^0'=tmp___024^post31, tmp___115^0'=tmp___115^post31, (-tmp___014^post31+tmp___014^0 == 0 /\ -r_off32^post31+r_off32^0 == 0 /\ offset^0-offset^post31 == 0 /\ maxcode^0-maxcode^post31 == 0 /\ -n_bits^post31+n_bits^0 == 0 /\ -seed2^post31+seed2^0 == 0 /\ __const_257^0-__const_257^post31 == 0 /\ apsim_incnt^0-apsim_incnt^post31 == 0 /\ -__const_429496^post31+__const_429496^0 == 0 /\ hsize___027^0-hsize___027^post31 == 0 /\ ret_getbyte25^0-ret_getbyte25^post31 == 0 /\ -__const_53^post31+__const_53^0 == 0 /\ -__const_9^post31+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post31 == 0 /\ __const_256^0-__const_256^post31 == 0 /\ -__const_65536^post31+__const_65536^0 == 0 /\ bytes_out^0-bytes_out^post31 == 0 /\ -ratio^post31+ratio^0 == 0 /\ -n40^post31+n40^0 == 0 /\ -clear_flg^post31+clear_flg^0 == 0 /\ tabort4^0-tabort4^post31 == 0 /\ i45^0-i45^post31 == 0 /\ -__const_2147483647^post31+__const_2147483647^0 == 0 /\ -c7^post31+c7^0 == 0 /\ -__const_8388607^post31+__const_8388607^0 == 0 /\ n44^0-n44^post31 == 0 /\ -hsize^post31+hsize^0 == 0 /\ c37^0-c37^post31 == 0 /\ -incnt^post31+incnt^0 == 0 /\ checkpoint^0-checkpoint^post31 == 0 /\ __const_8^0-__const_8^post31 == 0 /\ -code31^post31+code31^0 == 0 /\ -fcode5^post31+fcode5^0 == 0 /\ -ent8^post31+ent8^0 == 0 /\ exit_stat^0-exit_stat^post31 == 0 /\ __const_50^0-__const_50^post31 == 0 /\ -free_ent^post31+free_ent^0 == 0 /\ hshift11^0-hshift11^post31 == 0 /\ 1-n44^0+i45^0 <= 0 /\ -disp9^post31+disp9^0 == 0 /\ rat26^0-rat26^post31 == 0 /\ tmp12^0-tmp12^post31 == 0 /\ m130^0-m130^post31 == 0 /\ -maxbits^post31+maxbits^0 == 0 /\ -tmp___024^post31+tmp___024^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post31 == 0 /\ -i29^post31+i29^0 == 0 /\ -i3^post31+i3^0 == 0 /\ -tmp___115^post31+tmp___115^0 == 0 /\ -i41^post31+i41^0 == 0 /\ __const_10000^0-__const_10000^post31 == 0 /\ -i21^post31+i21^0 == 0 /\ -ret_getbyte18^post31+ret_getbyte18^0 == 0 /\ tmp___017^0-tmp___017^post31 == 0 /\ count^0-count^post31 == 0 /\ -in_count^post31+in_count^0 == 0 /\ i6^0-i6^post31 == 0 /\ out_count^0-out_count^post31 == 0 /\ m122^0-m122^post31 == 0 /\ -block_compress^post31+block_compress^0 == 0 /\ -hsize___019^post31+hsize___019^0 == 0 /\ -hsize_reg10^post31+hsize_reg10^0 == 0 /\ -__const_16^post31+__const_16^0 == 0 /\ bits33^0-bits33^post31 == 0), cost: 1
  31: l32 -> l26 : __const_10000^0'=__const_10000^post32, __const_16^0'=__const_16^post32, __const_2147483647^0'=__const_2147483647^post32, __const_256^0'=__const_256^post32, __const_257^0'=__const_257^post32, __const_429496^0'=__const_429496^post32, __const_50^0'=__const_50^post32, __const_53^0'=__const_53^post32, __const_65536^0'=__const_65536^post32, __const_8388607^0'=__const_8388607^post32, __const_8^0'=__const_8^post32, __const_9^0'=__const_9^post32, apsim_bound11113^0'=apsim_bound11113^post32, apsim_incnt^0'=apsim_incnt^post32, bits33^0'=bits33^post32, block_compress^0'=block_compress^post32, bytes_out^0'=bytes_out^post32, c37^0'=c37^post32, c7^0'=c7^post32, checkpoint^0'=checkpoint^post32, clear_flg^0'=clear_flg^post32, code31^0'=code31^post32, count^0'=count^post32, disp9^0'=disp9^post32, ent8^0'=ent8^post32, exit_stat^0'=exit_stat^post32, fcode5^0'=fcode5^post32, free_ent^0'=free_ent^post32, hshift11^0'=hshift11^post32, hsize^0'=hsize^post32, hsize___019^0'=hsize___019^post32, hsize___027^0'=hsize___027^post32, hsize_reg10^0'=hsize_reg10^post32, i21^0'=i21^post32, i29^0'=i29^post32, i3^0'=i3^post32, i41^0'=i41^post32, i45^0'=i45^post32, i6^0'=i6^post32, in_count^0'=in_count^post32, incnt^0'=incnt^post32, m122^0'=m122^post32, m130^0'=m130^post32, maxbits^0'=maxbits^post32, maxcode^0'=maxcode^post32, maxmaxcode^0'=maxmaxcode^post32, n40^0'=n40^post32, n44^0'=n44^post32, n_bits^0'=n_bits^post32, offset^0'=offset^post32, out_count^0'=out_count^post32, r_off32^0'=r_off32^post32, rat26^0'=rat26^post32, ratio^0'=ratio^post32, ret_getbyte18^0'=ret_getbyte18^post32, ret_getbyte25^0'=ret_getbyte25^post32, seed2^0'=seed2^post32, tabort4^0'=tabort4^post32, tmp12^0'=tmp12^post32, tmp___014^0'=tmp___014^post32, tmp___017^0'=tmp___017^post32, tmp___024^0'=tmp___024^post32, tmp___115^0'=tmp___115^post32, (-m130^post32+m130^0 == 0 /\ -in_count^post32+in_count^0 == 0 /\ -__const_8388607^post32+__const_8388607^0 == 0 /\ -maxbits^post32+maxbits^0 == 0 /\ -tmp___115^post32+tmp___115^0 == 0 /\ tabort4^0-tabort4^post32 == 0 /\ out_count^0-out_count^post32 == 0 /\ -ratio^post32+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post32 == 0 /\ -bits33^post32+bits33^0 == 0 /\ -c7^post32+c7^0 == 0 /\ -c37^post32+c37^0 == 0 /\ -i21^post32+i21^0 == 0 /\ tmp___024^0-tmp___024^post32 == 0 /\ -incnt^post32+incnt^0 == 0 /\ n44^0-n44^post32 == 0 /\ apsim_incnt^0-apsim_incnt^post32 == 0 /\ clear_flg^0-clear_flg^post32 == 0 /\ -__const_16^post32+__const_16^0 == 0 /\ -__const_429496^post32+__const_429496^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post32 == 0 /\ -block_compress^post32+block_compress^0 == 0 /\ -i45^post32+i45^0 == 0 /\ -disp9^post32+disp9^0 == 0 /\ __const_10000^0-__const_10000^post32 == 0 /\ checkpoint^0-checkpoint^post32 == 0 /\ offset^0 <= 0 /\ count^0-count^post32 == 0 /\ -r_off32^post32+r_off32^0 == 0 /\ -code31^post32+code31^0 == 0 /\ tmp12^0-tmp12^post32 == 0 /\ -free_ent^post32+free_ent^0 == 0 /\ -offset^post32+offset^0 == 0 /\ -__const_9^post32+__const_9^0 == 0 /\ hshift11^0-hshift11^post32 == 0 /\ __const_256^0-__const_256^post32 == 0 /\ -hsize_reg10^post32+hsize_reg10^0 == 0 /\ -tmp___014^post32+tmp___014^0 == 0 /\ -n40^post32+n40^0 == 0 /\ -hsize___019^post32+hsize___019^0 == 0 /\ maxcode^0-maxcode^post32 == 0 /\ -hsize^post32+hsize^0 == 0 /\ -__const_2147483647^post32+__const_2147483647^0 == 0 /\ -seed2^post32+seed2^0 == 0 /\ m122^0-m122^post32 == 0 /\ rat26^0-rat26^post32 == 0 /\ -__const_65536^post32+__const_65536^0 == 0 /\ -i29^post32+i29^0 == 0 /\ tmp___017^0-tmp___017^post32 == 0 /\ exit_stat^0-exit_stat^post32 == 0 /\ -i41^post32+i41^0 == 0 /\ -ent8^post32+ent8^0 == 0 /\ __const_50^0-__const_50^post32 == 0 /\ fcode5^0-fcode5^post32 == 0 /\ hsize___027^0-hsize___027^post32 == 0 /\ __const_8^0-__const_8^post32 == 0 /\ -n_bits^post32+n_bits^0 == 0 /\ bytes_out^0-bytes_out^post32 == 0 /\ i6^0-i6^post32 == 0 /\ __const_53^0-__const_53^post32 == 0 /\ __const_257^0-__const_257^post32 == 0 /\ -apsim_bound11113^post32+apsim_bound11113^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post32 == 0 /\ i3^0-i3^post32 == 0), cost: 1
  32: l32 -> l30 : __const_10000^0'=__const_10000^post33, __const_16^0'=__const_16^post33, __const_2147483647^0'=__const_2147483647^post33, __const_256^0'=__const_256^post33, __const_257^0'=__const_257^post33, __const_429496^0'=__const_429496^post33, __const_50^0'=__const_50^post33, __const_53^0'=__const_53^post33, __const_65536^0'=__const_65536^post33, __const_8388607^0'=__const_8388607^post33, __const_8^0'=__const_8^post33, __const_9^0'=__const_9^post33, apsim_bound11113^0'=apsim_bound11113^post33, apsim_incnt^0'=apsim_incnt^post33, bits33^0'=bits33^post33, block_compress^0'=block_compress^post33, bytes_out^0'=bytes_out^post33, c37^0'=c37^post33, c7^0'=c7^post33, checkpoint^0'=checkpoint^post33, clear_flg^0'=clear_flg^post33, code31^0'=code31^post33, count^0'=count^post33, disp9^0'=disp9^post33, ent8^0'=ent8^post33, exit_stat^0'=exit_stat^post33, fcode5^0'=fcode5^post33, free_ent^0'=free_ent^post33, hshift11^0'=hshift11^post33, hsize^0'=hsize^post33, hsize___019^0'=hsize___019^post33, hsize___027^0'=hsize___027^post33, hsize_reg10^0'=hsize_reg10^post33, i21^0'=i21^post33, i29^0'=i29^post33, i3^0'=i3^post33, i41^0'=i41^post33, i45^0'=i45^post33, i6^0'=i6^post33, in_count^0'=in_count^post33, incnt^0'=incnt^post33, m122^0'=m122^post33, m130^0'=m130^post33, maxbits^0'=maxbits^post33, maxcode^0'=maxcode^post33, maxmaxcode^0'=maxmaxcode^post33, n40^0'=n40^post33, n44^0'=n44^post33, n_bits^0'=n_bits^post33, offset^0'=offset^post33, out_count^0'=out_count^post33, r_off32^0'=r_off32^post33, rat26^0'=rat26^post33, ratio^0'=ratio^post33, ret_getbyte18^0'=ret_getbyte18^post33, ret_getbyte25^0'=ret_getbyte25^post33, seed2^0'=seed2^post33, tabort4^0'=tabort4^post33, tmp12^0'=tmp12^post33, tmp___014^0'=tmp___014^post33, tmp___017^0'=tmp___017^post33, tmp___024^0'=tmp___024^post33, tmp___115^0'=tmp___115^post33, (0 == 0 /\ tmp12^0-tmp12^post33 == 0 /\ checkpoint^0-checkpoint^post33 == 0 /\ __const_8^0-__const_8^post33 == 0 /\ -apsim_bound11113^post33+apsim_bound11113^0 == 0 /\ exit_stat^0-exit_stat^post33 == 0 /\ ret_getbyte18^0-ret_getbyte18^post33 == 0 /\ -__const_429496^post33+__const_429496^0 == 0 /\ -__const_9^post33+__const_9^0 == 0 /\ __const_50^0-__const_50^post33 == 0 /\ tmp___017^0-tmp___017^post33 == 0 /\ r_off32^0-r_off32^post33 == 0 /\ __const_10000^0-__const_10000^post33 == 0 /\ -__const_65536^post33+__const_65536^0 == 0 /\ tabort4^0-tabort4^post33 == 0 /\ -hsize___019^post33+hsize___019^0 == 0 /\ -rat26^post33+rat26^0 == 0 /\ -c7^post33+c7^0 == 0 /\ out_count^0-out_count^post33 == 0 /\ m122^0-m122^post33 == 0 /\ count^0-count^post33 == 0 /\ -clear_flg^post33+clear_flg^0 == 0 /\ -m130^post33+m130^0 == 0 /\ -i29^post33+i29^0 == 0 /\ -i41^post33+i41^0 == 0 /\ -__const_2147483647^post33+__const_2147483647^0 == 0 /\ -seed2^post33+seed2^0 == 0 /\ -__const_8388607^post33+__const_8388607^0 == 0 /\ __const_16^0-__const_16^post33 == 0 /\ -i21^post33+i21^0 == 0 /\ -hsize^post33+hsize^0 == 0 /\ -incnt^post33+incnt^0 == 0 /\ i45^post33 == 0 /\ __const_257^0-__const_257^post33 == 0 /\ -bits33^post33+bits33^0 == 0 /\ -code31^post33+code31^0 == 0 /\ maxcode^0-maxcode^post33 == 0 /\ i6^0-i6^post33 == 0 /\ maxmaxcode^0-maxmaxcode^post33 == 0 /\ -in_count^post33+in_count^0 == 0 /\ -fcode5^post33+fcode5^0 == 0 /\ i3^0-i3^post33 == 0 /\ -ratio^post33+ratio^0 == 0 /\ -disp9^post33+disp9^0 == 0 /\ __const_256^0-__const_256^post33 == 0 /\ n_bits^0-n_bits^post33 == 0 /\ -ent8^post33+ent8^0 == 0 /\ 1-offset^0 <= 0 /\ bytes_out^0-bytes_out^post33 == 0 /\ __const_53^0-__const_53^post33 == 0 /\ hsize_reg10^0-hsize_reg10^post33 == 0 /\ -tmp___014^post33+tmp___014^0 == 0 /\ -offset^post33+offset^0 == 0 /\ -free_ent^post33+free_ent^0 == 0 /\ hshift11^0-hshift11^post33 == 0 /\ apsim_incnt^0-apsim_incnt^post33 == 0 /\ -maxbits^post33+maxbits^0 == 0 /\ -tmp___115^post33+tmp___115^0 == 0 /\ -block_compress^post33+block_compress^0 == 0 /\ -ret_getbyte25^post33+ret_getbyte25^0 == 0 /\ -tmp___024^post33+tmp___024^0 == 0 /\ -n40^post33+n40^0 == 0 /\ hsize___027^0-hsize___027^post33 == 0 /\ c37^0-c37^post33 == 0), cost: 1
  33: l33 -> l27 : __const_10000^0'=__const_10000^post34, __const_16^0'=__const_16^post34, __const_2147483647^0'=__const_2147483647^post34, __const_256^0'=__const_256^post34, __const_257^0'=__const_257^post34, __const_429496^0'=__const_429496^post34, __const_50^0'=__const_50^post34, __const_53^0'=__const_53^post34, __const_65536^0'=__const_65536^post34, __const_8388607^0'=__const_8388607^post34, __const_8^0'=__const_8^post34, __const_9^0'=__const_9^post34, apsim_bound11113^0'=apsim_bound11113^post34, apsim_incnt^0'=apsim_incnt^post34, bits33^0'=bits33^post34, block_compress^0'=block_compress^post34, bytes_out^0'=bytes_out^post34, c37^0'=c37^post34, c7^0'=c7^post34, checkpoint^0'=checkpoint^post34, clear_flg^0'=clear_flg^post34, code31^0'=code31^post34, count^0'=count^post34, disp9^0'=disp9^post34, ent8^0'=ent8^post34, exit_stat^0'=exit_stat^post34, fcode5^0'=fcode5^post34, free_ent^0'=free_ent^post34, hshift11^0'=hshift11^post34, hsize^0'=hsize^post34, hsize___019^0'=hsize___019^post34, hsize___027^0'=hsize___027^post34, hsize_reg10^0'=hsize_reg10^post34, i21^0'=i21^post34, i29^0'=i29^post34, i3^0'=i3^post34, i41^0'=i41^post34, i45^0'=i45^post34, i6^0'=i6^post34, in_count^0'=in_count^post34, incnt^0'=incnt^post34, m122^0'=m122^post34, m130^0'=m130^post34, maxbits^0'=maxbits^post34, maxcode^0'=maxcode^post34, maxmaxcode^0'=maxmaxcode^post34, n40^0'=n40^post34, n44^0'=n44^post34, n_bits^0'=n_bits^post34, offset^0'=offset^post34, out_count^0'=out_count^post34, r_off32^0'=r_off32^post34, rat26^0'=rat26^post34, ratio^0'=ratio^post34, ret_getbyte18^0'=ret_getbyte18^post34, ret_getbyte25^0'=ret_getbyte25^post34, seed2^0'=seed2^post34, tabort4^0'=tabort4^post34, tmp12^0'=tmp12^post34, tmp___014^0'=tmp___014^post34, tmp___017^0'=tmp___017^post34, tmp___024^0'=tmp___024^post34, tmp___115^0'=tmp___115^post34, (0 == 0 /\ -tmp12^post34+tmp12^0 == 0 /\ -__const_10000^post34+__const_10000^0 == 0 /\ -ent8^post34+ent8^0 == 0 /\ -fcode5^post34+fcode5^0 == 0 /\ -seed2^post34+seed2^0 == 0 /\ -__const_2147483647^post34+__const_2147483647^0 == 0 /\ free_ent^0-free_ent^post34 == 0 /\ __const_65536^0-__const_65536^post34 == 0 /\ -offset^post34+offset^0 == 0 /\ -disp9^post34+disp9^0 == 0 /\ -__const_256^post34+__const_256^0 == 0 /\ __const_16^0-__const_16^post34 == 0 /\ ret_getbyte18^0-ret_getbyte18^post34 == 0 /\ -ret_getbyte25^post34+ret_getbyte25^0 == 0 /\ __const_53^0-__const_53^post34 == 0 /\ -rat26^post34+rat26^0 == 0 /\ -code31^post34+code31^0 == 0 /\ checkpoint^0-checkpoint^post34 == 0 /\ m130^0-m130^post34 == 0 /\ r_off32^0-r_off32^post34 == 0 /\ __const_8^0-__const_8^post34 == 0 /\ -ratio^post34+ratio^0 == 0 /\ -tmp___024^post34+tmp___024^0 == 0 /\ i6^0-i6^post34 == 0 /\ tmp___017^0-tmp___017^post34 == 0 /\ m122^0-m122^post34 == 0 /\ -__const_50^post34+__const_50^0 == 0 /\ exit_stat^0-exit_stat^post34 == 0 /\ -tmp___014^post34+tmp___014^0 == 0 /\ out_count^0-out_count^post34 == 0 /\ count^0-count^post34 == 0 /\ i3^0-i3^post34 == 0 /\ -i41^post34+i41^0 == 0 /\ -block_compress^post34+block_compress^0 == 0 /\ -i45^post34+i45^0 == 0 /\ -apsim_bound11113^post34+apsim_bound11113^0 == 0 /\ -clear_flg^post34+clear_flg^0 == 0 /\ -c7^post34+c7^0 == 0 /\ n_bits^0-n_bits^post34 == 0 /\ hsize_reg10^0-hsize_reg10^post34 == 0 /\ -incnt^post34+incnt^0 == 0 /\ hsize___027^0-hsize___027^post34 == 0 /\ -hsize^post34+hsize^0 == 0 /\ __const_257^0-__const_257^post34 == 0 /\ bytes_out^0-bytes_out^post34 == 0 /\ -maxbits^post34+maxbits^0 == 0 /\ __const_9^0-__const_9^post34 == 0 /\ -i29^post34+i29^0 == 0 /\ c37^0-c37^post34 == 0 /\ -n40^post34+n40^0 == 0 /\ -tmp___115^post34+tmp___115^0 == 0 /\ -in_count^post34+in_count^0 == 0 /\ -__const_8388607^post34+__const_8388607^0 == 0 /\ bits33^0-bits33^post34 == 0 /\ tabort4^0-tabort4^post34 == 0 /\ -i21^post34+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post34 == 0 /\ apsim_incnt^0-apsim_incnt^post34 == 0 /\ hshift11^0-hshift11^post34 == 0 /\ n44^0-n44^post34 == 0 /\ -__const_429496^post34+__const_429496^0 == 0 /\ hsize___019^0-hsize___019^post34 == 0), cost: 1
  34: l34 -> l33 : __const_10000^0'=__const_10000^post35, __const_16^0'=__const_16^post35, __const_2147483647^0'=__const_2147483647^post35, __const_256^0'=__const_256^post35, __const_257^0'=__const_257^post35, __const_429496^0'=__const_429496^post35, __const_50^0'=__const_50^post35, __const_53^0'=__const_53^post35, __const_65536^0'=__const_65536^post35, __const_8388607^0'=__const_8388607^post35, __const_8^0'=__const_8^post35, __const_9^0'=__const_9^post35, apsim_bound11113^0'=apsim_bound11113^post35, apsim_incnt^0'=apsim_incnt^post35, bits33^0'=bits33^post35, block_compress^0'=block_compress^post35, bytes_out^0'=bytes_out^post35, c37^0'=c37^post35, c7^0'=c7^post35, checkpoint^0'=checkpoint^post35, clear_flg^0'=clear_flg^post35, code31^0'=code31^post35, count^0'=count^post35, disp9^0'=disp9^post35, ent8^0'=ent8^post35, exit_stat^0'=exit_stat^post35, fcode5^0'=fcode5^post35, free_ent^0'=free_ent^post35, hshift11^0'=hshift11^post35, hsize^0'=hsize^post35, hsize___019^0'=hsize___019^post35, hsize___027^0'=hsize___027^post35, hsize_reg10^0'=hsize_reg10^post35, i21^0'=i21^post35, i29^0'=i29^post35, i3^0'=i3^post35, i41^0'=i41^post35, i45^0'=i45^post35, i6^0'=i6^post35, in_count^0'=in_count^post35, incnt^0'=incnt^post35, m122^0'=m122^post35, m130^0'=m130^post35, maxbits^0'=maxbits^post35, maxcode^0'=maxcode^post35, maxmaxcode^0'=maxmaxcode^post35, n40^0'=n40^post35, n44^0'=n44^post35, n_bits^0'=n_bits^post35, offset^0'=offset^post35, out_count^0'=out_count^post35, r_off32^0'=r_off32^post35, rat26^0'=rat26^post35, ratio^0'=ratio^post35, ret_getbyte18^0'=ret_getbyte18^post35, ret_getbyte25^0'=ret_getbyte25^post35, seed2^0'=seed2^post35, tabort4^0'=tabort4^post35, tmp12^0'=tmp12^post35, tmp___014^0'=tmp___014^post35, tmp___017^0'=tmp___017^post35, tmp___024^0'=tmp___024^post35, tmp___115^0'=tmp___115^post35, (apsim_incnt^0-apsim_incnt^post35 == 0 /\ -incnt^post35+incnt^0 == 0 /\ hshift11^0-hshift11^post35 == 0 /\ -i45^post35+i45^0 == 0 /\ tabort4^0-tabort4^post35 == 0 /\ r_off32^0-r_off32^post35 == 0 /\ out_count^0-out_count^post35 == 0 /\ -clear_flg^post35+clear_flg^0 == 0 /\ tmp___017^0-tmp___017^post35 == 0 /\ __const_65536^0-__const_65536^post35 == 0 /\ -maxmaxcode^post35+maxmaxcode^0 == 0 /\ -i29^post35+i29^0 == 0 /\ -m130^post35+m130^0 == 0 /\ free_ent^0-free_ent^post35 == 0 /\ -maxbits^post35+maxbits^0 == 0 /\ -c7^post35+c7^0 == 0 /\ -__const_8388607^post35+__const_8388607^0 == 0 /\ -i41^post35+i41^0 == 0 /\ -tmp___115^post35+tmp___115^0 == 0 /\ -n40^post35+n40^0 == 0 /\ exit_stat^0-exit_stat^post35 == 0 /\ -in_count^post35+in_count^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post35 == 0 /\ -i21^post35+i21^0 == 0 /\ -disp9^post35+disp9^0 == 0 /\ -code31^post35+code31^0 == 0 /\ tmp12^0-tmp12^post35 == 0 /\ bytes_out^0-bytes_out^post35 == 0 /\ __const_53^0-__const_53^post35 == 0 /\ __const_257^0-__const_257^post35 == 0 /\ __const_8^0-__const_8^post35 == 0 /\ -seed2^post35+seed2^0 == 0 /\ -tmp___014^post35+tmp___014^0 == 0 /\ -ret_getbyte25^post35+ret_getbyte25^0 == 0 /\ 1-n_bits^0+maxbits^0 <= 0 /\ -offset^post35+offset^0 == 0 /\ hsize___019^0-hsize___019^post35 == 0 /\ c37^0-c37^post35 == 0 /\ -n_bits^post35+n_bits^0 == 0 /\ i6^0-i6^post35 == 0 /\ __const_429496^0-__const_429496^post35 == 0 /\ ent8^0-ent8^post35 == 0 /\ -__const_10000^post35+__const_10000^0 == 0 /\ m122^0-m122^post35 == 0 /\ -__const_256^post35+__const_256^0 == 0 /\ maxcode^0-maxcode^post35 == 0 /\ -__const_2147483647^post35+__const_2147483647^0 == 0 /\ -hsize^post35+hsize^0 == 0 /\ -tmp___024^post35+tmp___024^0 == 0 /\ -ratio^post35+ratio^0 == 0 /\ i3^0-i3^post35 == 0 /\ __const_9^0-__const_9^post35 == 0 /\ __const_16^0-__const_16^post35 == 0 /\ -hsize___027^post35+hsize___027^0 == 0 /\ -__const_50^post35+__const_50^0 == 0 /\ hsize_reg10^0-hsize_reg10^post35 == 0 /\ -block_compress^post35+block_compress^0 == 0 /\ bits33^0-bits33^post35 == 0 /\ count^0-count^post35 == 0 /\ rat26^0-rat26^post35 == 0 /\ checkpoint^0-checkpoint^post35 == 0 /\ n44^0-n44^post35 == 0 /\ -apsim_bound11113^post35+apsim_bound11113^0 == 0 /\ -fcode5^post35+fcode5^0 == 0), cost: 1
  35: l34 -> l33 : __const_10000^0'=__const_10000^post36, __const_16^0'=__const_16^post36, __const_2147483647^0'=__const_2147483647^post36, __const_256^0'=__const_256^post36, __const_257^0'=__const_257^post36, __const_429496^0'=__const_429496^post36, __const_50^0'=__const_50^post36, __const_53^0'=__const_53^post36, __const_65536^0'=__const_65536^post36, __const_8388607^0'=__const_8388607^post36, __const_8^0'=__const_8^post36, __const_9^0'=__const_9^post36, apsim_bound11113^0'=apsim_bound11113^post36, apsim_incnt^0'=apsim_incnt^post36, bits33^0'=bits33^post36, block_compress^0'=block_compress^post36, bytes_out^0'=bytes_out^post36, c37^0'=c37^post36, c7^0'=c7^post36, checkpoint^0'=checkpoint^post36, clear_flg^0'=clear_flg^post36, code31^0'=code31^post36, count^0'=count^post36, disp9^0'=disp9^post36, ent8^0'=ent8^post36, exit_stat^0'=exit_stat^post36, fcode5^0'=fcode5^post36, free_ent^0'=free_ent^post36, hshift11^0'=hshift11^post36, hsize^0'=hsize^post36, hsize___019^0'=hsize___019^post36, hsize___027^0'=hsize___027^post36, hsize_reg10^0'=hsize_reg10^post36, i21^0'=i21^post36, i29^0'=i29^post36, i3^0'=i3^post36, i41^0'=i41^post36, i45^0'=i45^post36, i6^0'=i6^post36, in_count^0'=in_count^post36, incnt^0'=incnt^post36, m122^0'=m122^post36, m130^0'=m130^post36, maxbits^0'=maxbits^post36, maxcode^0'=maxcode^post36, maxmaxcode^0'=maxmaxcode^post36, n40^0'=n40^post36, n44^0'=n44^post36, n_bits^0'=n_bits^post36, offset^0'=offset^post36, out_count^0'=out_count^post36, r_off32^0'=r_off32^post36, rat26^0'=rat26^post36, ratio^0'=ratio^post36, ret_getbyte18^0'=ret_getbyte18^post36, ret_getbyte25^0'=ret_getbyte25^post36, seed2^0'=seed2^post36, tabort4^0'=tabort4^post36, tmp12^0'=tmp12^post36, tmp___014^0'=tmp___014^post36, tmp___017^0'=tmp___017^post36, tmp___024^0'=tmp___024^post36, tmp___115^0'=tmp___115^post36, (__const_16^0-__const_16^post36 == 0 /\ tmp___017^0-tmp___017^post36 == 0 /\ exit_stat^0-exit_stat^post36 == 0 /\ ret_getbyte18^0-ret_getbyte18^post36 == 0 /\ __const_50^0-__const_50^post36 == 0 /\ -tmp___115^post36+tmp___115^0 == 0 /\ m130^0-m130^post36 == 0 /\ tmp___024^0-tmp___024^post36 == 0 /\ checkpoint^0-checkpoint^post36 == 0 /\ r_off32^0-r_off32^post36 == 0 /\ -tmp12^post36+tmp12^0 == 0 /\ -ret_getbyte25^post36+ret_getbyte25^0 == 0 /\ -tmp___014^post36+tmp___014^0 == 0 /\ hsize___027^0-hsize___027^post36 == 0 /\ __const_53^0-__const_53^post36 == 0 /\ -__const_2147483647^post36+__const_2147483647^0 == 0 /\ -seed2^post36+seed2^0 == 0 /\ __const_8^0-__const_8^post36 == 0 /\ -hsize^post36+hsize^0 == 0 /\ -i29^post36+i29^0 == 0 /\ -__const_65536^post36+__const_65536^0 == 0 /\ out_count^0-out_count^post36 == 0 /\ -i41^post36+i41^0 == 0 /\ __const_256^0-__const_256^post36 == 0 /\ -block_compress^post36+block_compress^0 == 0 /\ __const_10000^0-__const_10000^post36 == 0 /\ -rat26^post36+rat26^0 == 0 /\ -ent8^post36+ent8^0 == 0 /\ -fcode5^post36+fcode5^0 == 0 /\ -apsim_bound11113^post36+apsim_bound11113^0 == 0 /\ m122^0-m122^post36 == 0 /\ -in_count^post36+in_count^0 == 0 /\ -__const_8388607^post36+__const_8388607^0 == 0 /\ __const_9^0-__const_9^post36 == 0 /\ -maxbits^post36+maxbits^0 == 0 /\ -n40^post36+n40^0 == 0 /\ bytes_out^0-bytes_out^post36 == 0 /\ -ratio^post36+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post36 == 0 /\ -clear_flg^post36+clear_flg^0 == 0 /\ -c7^post36+c7^0 == 0 /\ -i21^post36+i21^0 == 0 /\ -incnt^post36+incnt^0 == 0 /\ count^0-count^post36 == 0 /\ bits33^0-bits33^post36 == 0 /\ i6^0-i6^post36 == 0 /\ __const_257^0-__const_257^post36 == 0 /\ i3^0-i3^post36 == 0 /\ hshift11^0-hshift11^post36 == 0 /\ -hsize_reg10^post36+hsize_reg10^0 == 0 /\ 1+n_bits^0-maxbits^0 <= 0 /\ tabort4^0-tabort4^post36 == 0 /\ apsim_incnt^0-apsim_incnt^post36 == 0 /\ -__const_429496^post36+__const_429496^0 == 0 /\ c37^0-c37^post36 == 0 /\ hsize___019^0-hsize___019^post36 == 0 /\ -i45^post36+i45^0 == 0 /\ -disp9^post36+disp9^0 == 0 /\ n44^0-n44^post36 == 0 /\ maxcode^0-maxcode^post36 == 0 /\ -offset^post36+offset^0 == 0 /\ -code31^post36+code31^0 == 0 /\ n_bits^0-n_bits^post36 == 0 /\ -free_ent^post36+free_ent^0 == 0), cost: 1
  36: l34 -> l27 : __const_10000^0'=__const_10000^post37, __const_16^0'=__const_16^post37, __const_2147483647^0'=__const_2147483647^post37, __const_256^0'=__const_256^post37, __const_257^0'=__const_257^post37, __const_429496^0'=__const_429496^post37, __const_50^0'=__const_50^post37, __const_53^0'=__const_53^post37, __const_65536^0'=__const_65536^post37, __const_8388607^0'=__const_8388607^post37, __const_8^0'=__const_8^post37, __const_9^0'=__const_9^post37, apsim_bound11113^0'=apsim_bound11113^post37, apsim_incnt^0'=apsim_incnt^post37, bits33^0'=bits33^post37, block_compress^0'=block_compress^post37, bytes_out^0'=bytes_out^post37, c37^0'=c37^post37, c7^0'=c7^post37, checkpoint^0'=checkpoint^post37, clear_flg^0'=clear_flg^post37, code31^0'=code31^post37, count^0'=count^post37, disp9^0'=disp9^post37, ent8^0'=ent8^post37, exit_stat^0'=exit_stat^post37, fcode5^0'=fcode5^post37, free_ent^0'=free_ent^post37, hshift11^0'=hshift11^post37, hsize^0'=hsize^post37, hsize___019^0'=hsize___019^post37, hsize___027^0'=hsize___027^post37, hsize_reg10^0'=hsize_reg10^post37, i21^0'=i21^post37, i29^0'=i29^post37, i3^0'=i3^post37, i41^0'=i41^post37, i45^0'=i45^post37, i6^0'=i6^post37, in_count^0'=in_count^post37, incnt^0'=incnt^post37, m122^0'=m122^post37, m130^0'=m130^post37, maxbits^0'=maxbits^post37, maxcode^0'=maxcode^post37, maxmaxcode^0'=maxmaxcode^post37, n40^0'=n40^post37, n44^0'=n44^post37, n_bits^0'=n_bits^post37, offset^0'=offset^post37, out_count^0'=out_count^post37, r_off32^0'=r_off32^post37, rat26^0'=rat26^post37, ratio^0'=ratio^post37, ret_getbyte18^0'=ret_getbyte18^post37, ret_getbyte25^0'=ret_getbyte25^post37, seed2^0'=seed2^post37, tabort4^0'=tabort4^post37, tmp12^0'=tmp12^post37, tmp___014^0'=tmp___014^post37, tmp___017^0'=tmp___017^post37, tmp___024^0'=tmp___024^post37, tmp___115^0'=tmp___115^post37, (-maxmaxcode^0+maxcode^post37 == 0 /\ __const_53^0-__const_53^post37 == 0 /\ m122^0-m122^post37 == 0 /\ -code31^post37+code31^0 == 0 /\ hshift11^0-hshift11^post37 == 0 /\ m130^0-m130^post37 == 0 /\ apsim_incnt^0-apsim_incnt^post37 == 0 /\ __const_65536^0-__const_65536^post37 == 0 /\ -fcode5^post37+fcode5^0 == 0 /\ n44^0-n44^post37 == 0 /\ free_ent^0-free_ent^post37 == 0 /\ -ratio^post37+ratio^0 == 0 /\ -disp9^post37+disp9^0 == 0 /\ -ent8^post37+ent8^0 == 0 /\ __const_257^0-__const_257^post37 == 0 /\ -__const_10000^post37+__const_10000^0 == 0 /\ __const_8^0-__const_8^post37 == 0 /\ -tmp___014^post37+tmp___014^0 == 0 /\ i21^0-i21^post37 == 0 /\ in_count^0-in_count^post37 == 0 /\ -__const_256^post37+__const_256^0 == 0 /\ exit_stat^0-exit_stat^post37 == 0 /\ -maxbits^post37+maxbits^0 == 0 /\ i6^0-i6^post37 == 0 /\ -hsize_reg10^post37+hsize_reg10^0 == 0 /\ i3^0-i3^post37 == 0 /\ -bytes_out^post37+bytes_out^0 == 0 /\ -tmp___024^post37+tmp___024^0 == 0 /\ __const_16^0-__const_16^post37 == 0 /\ -ret_getbyte25^post37+ret_getbyte25^0 == 0 /\ c37^0-c37^post37 == 0 /\ -i45^post37+i45^0 == 0 /\ r_off32^0-r_off32^post37 == 0 /\ tmp___017^0-tmp___017^post37 == 0 /\ hsize___019^0-hsize___019^post37 == 0 /\ out_count^0-out_count^post37 == 0 /\ count^0-count^post37 == 0 /\ -n_bits^0+maxbits^0 <= 0 /\ -apsim_bound11113^post37+apsim_bound11113^0 == 0 /\ -__const_50^post37+__const_50^0 == 0 /\ -__const_429496^post37+__const_429496^0 == 0 /\ __const_9^0-__const_9^post37 == 0 /\ -offset^post37+offset^0 == 0 /\ -n_bits^post37+n_bits^0 == 0 /\ tmp12^0-tmp12^post37 == 0 /\ -c7^post37+c7^0 == 0 /\ -rat26^post37+rat26^0 == 0 /\ -seed2^post37+seed2^0 == 0 /\ checkpoint^0-checkpoint^post37 == 0 /\ -clear_flg^post37+clear_flg^0 == 0 /\ n_bits^0-maxbits^0 <= 0 /\ -hsize___027^post37+hsize___027^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post37 == 0 /\ -i29^post37+i29^0 == 0 /\ maxmaxcode^0-maxmaxcode^post37 == 0 /\ -__const_8388607^post37+__const_8388607^0 == 0 /\ -i41^post37+i41^0 == 0 /\ -__const_2147483647^post37+__const_2147483647^0 == 0 /\ -block_compress^post37+block_compress^0 == 0 /\ -incnt^post37+incnt^0 == 0 /\ -tmp___115^post37+tmp___115^0 == 0 /\ -n40^post37+n40^0 == 0 /\ tabort4^0-tabort4^post37 == 0 /\ bits33^0-bits33^post37 == 0 /\ -hsize^post37+hsize^0 == 0), cost: 1
  76: l35 -> l1 : __const_10000^0'=__const_10000^post77, __const_16^0'=__const_16^post77, __const_2147483647^0'=__const_2147483647^post77, __const_256^0'=__const_256^post77, __const_257^0'=__const_257^post77, __const_429496^0'=__const_429496^post77, __const_50^0'=__const_50^post77, __const_53^0'=__const_53^post77, __const_65536^0'=__const_65536^post77, __const_8388607^0'=__const_8388607^post77, __const_8^0'=__const_8^post77, __const_9^0'=__const_9^post77, apsim_bound11113^0'=apsim_bound11113^post77, apsim_incnt^0'=apsim_incnt^post77, bits33^0'=bits33^post77, block_compress^0'=block_compress^post77, bytes_out^0'=bytes_out^post77, c37^0'=c37^post77, c7^0'=c7^post77, checkpoint^0'=checkpoint^post77, clear_flg^0'=clear_flg^post77, code31^0'=code31^post77, count^0'=count^post77, disp9^0'=disp9^post77, ent8^0'=ent8^post77, exit_stat^0'=exit_stat^post77, fcode5^0'=fcode5^post77, free_ent^0'=free_ent^post77, hshift11^0'=hshift11^post77, hsize^0'=hsize^post77, hsize___019^0'=hsize___019^post77, hsize___027^0'=hsize___027^post77, hsize_reg10^0'=hsize_reg10^post77, i21^0'=i21^post77, i29^0'=i29^post77, i3^0'=i3^post77, i41^0'=i41^post77, i45^0'=i45^post77, i6^0'=i6^post77, in_count^0'=in_count^post77, incnt^0'=incnt^post77, m122^0'=m122^post77, m130^0'=m130^post77, maxbits^0'=maxbits^post77, maxcode^0'=maxcode^post77, maxmaxcode^0'=maxmaxcode^post77, n40^0'=n40^post77, n44^0'=n44^post77, n_bits^0'=n_bits^post77, offset^0'=offset^post77, out_count^0'=out_count^post77, r_off32^0'=r_off32^post77, rat26^0'=rat26^post77, ratio^0'=ratio^post77, ret_getbyte18^0'=ret_getbyte18^post77, ret_getbyte25^0'=ret_getbyte25^post77, seed2^0'=seed2^post77, tabort4^0'=tabort4^post77, tmp12^0'=tmp12^post77, tmp___014^0'=tmp___014^post77, tmp___017^0'=tmp___017^post77, tmp___024^0'=tmp___024^post77, tmp___115^0'=tmp___115^post77, (__const_8388607^0-__const_8388607^post77 == 0 /\ tmp___014^0-tmp___014^post77 == 0 /\ -c7^post77+c7^0 == 0 /\ -bytes_out^post77+bytes_out^0 == 0 /\ -block_compress^post77+block_compress^0 == 0 /\ free_ent^0-free_ent^post77 == 0 /\ -ret_getbyte18^post77+ret_getbyte18^0 == 0 /\ -i29^post77+i29^0 == 0 /\ -i45^post77+i45^0 == 0 /\ -m122^post77+m122^0 == 0 /\ -tmp___024^post77+tmp___024^0 == 0 /\ -tmp___017^post77+tmp___017^0 == 0 /\ -i41^post77+i41^0 == 0 /\ m130^0-m130^post77 == 0 /\ -incnt^post77+incnt^0 == 0 /\ tmp12^0-tmp12^post77 == 0 /\ -fcode5^post77+fcode5^0 == 0 /\ rat26^0-rat26^post77 == 0 /\ __const_16^0-__const_16^post77 == 0 /\ i21^0-i21^post77 == 0 /\ code31^0-code31^post77 == 0 /\ __const_8^0-__const_8^post77 == 0 /\ -__const_429496^post77+__const_429496^0 == 0 /\ -n44^post77+n44^0 == 0 /\ -in_count^post77+in_count^0 == 0 /\ -r_off32^post77+r_off32^0 == 0 /\ -clear_flg^post77+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post77 == 0 /\ -hsize_reg10^post77+hsize_reg10^0 == 0 /\ -hsize^post77+hsize^0 == 0 /\ checkpoint^0-checkpoint^post77 == 0 /\ i6^0-i6^post77 == 0 /\ -hsize___027^post77+hsize___027^0 == 0 /\ c37^0-c37^post77 == 0 /\ -disp9^post77+disp9^0 == 0 /\ -count^post77+count^0 == 0 /\ -maxbits^post77+maxbits^0 == 0 /\ -maxcode^post77+maxcode^0 == 0 /\ ent8^0-ent8^post77 == 0 /\ out_count^0-out_count^post77 == 0 /\ maxmaxcode^0-maxmaxcode^post77 == 0 /\ -__const_256^post77+__const_256^0 == 0 /\ __const_9^0-__const_9^post77 == 0 /\ -__const_2147483647^post77+__const_2147483647^0 == 0 /\ n40^0-n40^post77 == 0 /\ -seed2^post77+seed2^0 == 0 /\ offset^0-offset^post77 == 0 /\ -apsim_bound11113^post77+apsim_bound11113^0 == 0 /\ exit_stat^0-exit_stat^post77 == 0 /\ -__const_10000^post77+__const_10000^0 == 0 /\ -tabort4^post77+tabort4^0 == 0 /\ i3^0-i3^post77 == 0 /\ bits33^0-bits33^post77 == 0 /\ ratio^0-ratio^post77 == 0 /\ tmp___115^0-tmp___115^post77 == 0 /\ __const_257^0-__const_257^post77 == 0 /\ hshift11^0-hshift11^post77 == 0 /\ -n_bits^post77+n_bits^0 == 0 /\ -__const_50^post77+__const_50^0 == 0 /\ -__const_65536^post77+__const_65536^0 == 0 /\ __const_53^0-__const_53^post77 == 0 /\ apsim_incnt^0-apsim_incnt^post77 == 0 /\ hsize___019^0-hsize___019^post77 == 0), cost: 1
  38: l36 -> l27 : __const_10000^0'=__const_10000^post39, __const_16^0'=__const_16^post39, __const_2147483647^0'=__const_2147483647^post39, __const_256^0'=__const_256^post39, __const_257^0'=__const_257^post39, __const_429496^0'=__const_429496^post39, __const_50^0'=__const_50^post39, __const_53^0'=__const_53^post39, __const_65536^0'=__const_65536^post39, __const_8388607^0'=__const_8388607^post39, __const_8^0'=__const_8^post39, __const_9^0'=__const_9^post39, apsim_bound11113^0'=apsim_bound11113^post39, apsim_incnt^0'=apsim_incnt^post39, bits33^0'=bits33^post39, block_compress^0'=block_compress^post39, bytes_out^0'=bytes_out^post39, c37^0'=c37^post39, c7^0'=c7^post39, checkpoint^0'=checkpoint^post39, clear_flg^0'=clear_flg^post39, code31^0'=code31^post39, count^0'=count^post39, disp9^0'=disp9^post39, ent8^0'=ent8^post39, exit_stat^0'=exit_stat^post39, fcode5^0'=fcode5^post39, free_ent^0'=free_ent^post39, hshift11^0'=hshift11^post39, hsize^0'=hsize^post39, hsize___019^0'=hsize___019^post39, hsize___027^0'=hsize___027^post39, hsize_reg10^0'=hsize_reg10^post39, i21^0'=i21^post39, i29^0'=i29^post39, i3^0'=i3^post39, i41^0'=i41^post39, i45^0'=i45^post39, i6^0'=i6^post39, in_count^0'=in_count^post39, incnt^0'=incnt^post39, m122^0'=m122^post39, m130^0'=m130^post39, maxbits^0'=maxbits^post39, maxcode^0'=maxcode^post39, maxmaxcode^0'=maxmaxcode^post39, n40^0'=n40^post39, n44^0'=n44^post39, n_bits^0'=n_bits^post39, offset^0'=offset^post39, out_count^0'=out_count^post39, r_off32^0'=r_off32^post39, rat26^0'=rat26^post39, ratio^0'=ratio^post39, ret_getbyte18^0'=ret_getbyte18^post39, ret_getbyte25^0'=ret_getbyte25^post39, seed2^0'=seed2^post39, tabort4^0'=tabort4^post39, tmp12^0'=tmp12^post39, tmp___014^0'=tmp___014^post39, tmp___017^0'=tmp___017^post39, tmp___024^0'=tmp___024^post39, tmp___115^0'=tmp___115^post39, (0 == 0 /\ -tmp___024^post39+tmp___024^0 == 0 /\ -i21^post39+i21^0 == 0 /\ __const_9^0-__const_9^post39 == 0 /\ rat26^0-rat26^post39 == 0 /\ tmp12^0-tmp12^post39 == 0 /\ c37^0-c37^post39 == 0 /\ n_bits^post39-__const_9^0 == 0 /\ bits33^0-bits33^post39 == 0 /\ __const_257^0-__const_257^post39 == 0 /\ -checkpoint^post39+checkpoint^0 == 0 /\ c7^0-c7^post39 == 0 /\ apsim_incnt^0-apsim_incnt^post39 == 0 /\ i29^0-i29^post39 == 0 /\ n40^0-n40^post39 == 0 /\ -incnt^post39+incnt^0 == 0 /\ hsize___027^0-hsize___027^post39 == 0 /\ -hsize^post39+hsize^0 == 0 /\ hshift11^0-hshift11^post39 == 0 /\ -r_off32^post39+r_off32^0 == 0 /\ -n44^post39+n44^0 == 0 /\ hsize___019^0-hsize___019^post39 == 0 /\ -__const_50^post39+__const_50^0 == 0 /\ tmp___014^0-tmp___014^post39 == 0 /\ -count^post39+count^0 == 0 /\ -fcode5^post39+fcode5^0 == 0 /\ -apsim_bound11113^post39+apsim_bound11113^0 == 0 /\ -i3^post39+i3^0 == 0 /\ __const_65536^0-__const_65536^post39 == 0 /\ free_ent^0-free_ent^post39 == 0 /\ code31^0-code31^post39 == 0 /\ -tmp___017^post39+tmp___017^0 == 0 /\ -i41^post39+i41^0 == 0 /\ -ratio^post39+ratio^0 == 0 /\ -ret_getbyte18^post39+ret_getbyte18^0 == 0 /\ out_count^0-out_count^post39 == 0 /\ -i6^post39+i6^0 == 0 /\ clear_flg^post39 == 0 /\ -in_count^post39+in_count^0 == 0 /\ -__const_256^post39+__const_256^0 == 0 /\ offset^0-offset^post39 == 0 /\ -__const_2147483647^post39+__const_2147483647^0 == 0 /\ maxmaxcode^0-maxmaxcode^post39 == 0 /\ __const_53^0-__const_53^post39 == 0 /\ -hsize_reg10^post39+hsize_reg10^0 == 0 /\ -__const_10000^post39+__const_10000^0 == 0 /\ -__const_8388607^post39+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post39 == 0 /\ -tabort4^post39+tabort4^0 == 0 /\ tmp___115^0-tmp___115^post39 == 0 /\ ret_getbyte25^0-ret_getbyte25^post39 == 0 /\ __const_16^0-__const_16^post39 == 0 /\ -m122^post39+m122^0 == 0 /\ seed2^0-seed2^post39 == 0 /\ -bytes_out^post39+bytes_out^0 == 0 /\ m130^0-m130^post39 == 0 /\ __const_429496^0-__const_429496^post39 == 0 /\ -disp9^post39+disp9^0 == 0 /\ ent8^0-ent8^post39 == 0 /\ -exit_stat^post39+exit_stat^0 == 0 /\ maxbits^0-maxbits^post39 == 0 /\ block_compress^0-block_compress^post39 == 0 /\ i45^0-i45^post39 == 0), cost: 1
  39: l37 -> l34 : __const_10000^0'=__const_10000^post40, __const_16^0'=__const_16^post40, __const_2147483647^0'=__const_2147483647^post40, __const_256^0'=__const_256^post40, __const_257^0'=__const_257^post40, __const_429496^0'=__const_429496^post40, __const_50^0'=__const_50^post40, __const_53^0'=__const_53^post40, __const_65536^0'=__const_65536^post40, __const_8388607^0'=__const_8388607^post40, __const_8^0'=__const_8^post40, __const_9^0'=__const_9^post40, apsim_bound11113^0'=apsim_bound11113^post40, apsim_incnt^0'=apsim_incnt^post40, bits33^0'=bits33^post40, block_compress^0'=block_compress^post40, bytes_out^0'=bytes_out^post40, c37^0'=c37^post40, c7^0'=c7^post40, checkpoint^0'=checkpoint^post40, clear_flg^0'=clear_flg^post40, code31^0'=code31^post40, count^0'=count^post40, disp9^0'=disp9^post40, ent8^0'=ent8^post40, exit_stat^0'=exit_stat^post40, fcode5^0'=fcode5^post40, free_ent^0'=free_ent^post40, hshift11^0'=hshift11^post40, hsize^0'=hsize^post40, hsize___019^0'=hsize___019^post40, hsize___027^0'=hsize___027^post40, hsize_reg10^0'=hsize_reg10^post40, i21^0'=i21^post40, i29^0'=i29^post40, i3^0'=i3^post40, i41^0'=i41^post40, i45^0'=i45^post40, i6^0'=i6^post40, in_count^0'=in_count^post40, incnt^0'=incnt^post40, m122^0'=m122^post40, m130^0'=m130^post40, maxbits^0'=maxbits^post40, maxcode^0'=maxcode^post40, maxmaxcode^0'=maxmaxcode^post40, n40^0'=n40^post40, n44^0'=n44^post40, n_bits^0'=n_bits^post40, offset^0'=offset^post40, out_count^0'=out_count^post40, r_off32^0'=r_off32^post40, rat26^0'=rat26^post40, ratio^0'=ratio^post40, ret_getbyte18^0'=ret_getbyte18^post40, ret_getbyte25^0'=ret_getbyte25^post40, seed2^0'=seed2^post40, tabort4^0'=tabort4^post40, tmp12^0'=tmp12^post40, tmp___014^0'=tmp___014^post40, tmp___017^0'=tmp___017^post40, tmp___024^0'=tmp___024^post40, tmp___115^0'=tmp___115^post40, (-1+n_bits^post40-n_bits^0 == 0 /\ m130^0-m130^post40 == 0 /\ -c7^post40+c7^0 == 0 /\ -ent8^post40+ent8^0 == 0 /\ -block_compress^post40+block_compress^0 == 0 /\ __const_53^0-__const_53^post40 == 0 /\ free_ent^0-free_ent^post40 == 0 /\ -disp9^post40+disp9^0 == 0 /\ -ret_getbyte18^post40+ret_getbyte18^0 == 0 /\ -i29^post40+i29^0 == 0 /\ tmp___115^0-tmp___115^post40 == 0 /\ -i41^post40+i41^0 == 0 /\ -code31^post40+code31^0 == 0 /\ -fcode5^post40+fcode5^0 == 0 /\ -i21^post40+i21^0 == 0 /\ tmp___014^0-tmp___014^post40 == 0 /\ n44^0-n44^post40 == 0 /\ -i6^post40+i6^0 == 0 /\ -maxbits^post40+maxbits^0 == 0 /\ -tmp___024^post40+tmp___024^0 == 0 /\ __const_16^0-__const_16^post40 == 0 /\ -__const_2147483647^post40+__const_2147483647^0 == 0 /\ -__const_10000^post40+__const_10000^0 == 0 /\ rat26^0-rat26^post40 == 0 /\ exit_stat^0-exit_stat^post40 == 0 /\ -clear_flg^post40+clear_flg^0 == 0 /\ -apsim_incnt^post40+apsim_incnt^0 == 0 /\ bytes_out^0-bytes_out^post40 == 0 /\ -tabort4^post40+tabort4^0 == 0 /\ __const_50^0-__const_50^post40 == 0 /\ -m122^post40+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post40 == 0 /\ -hsize^post40+hsize^0 == 0 /\ -hsize_reg10^post40+hsize_reg10^0 == 0 /\ -hsize___019^post40+hsize___019^0 == 0 /\ seed2^0-seed2^post40 == 0 /\ count^0-count^post40 == 0 /\ -__const_429496^post40+__const_429496^0 == 0 /\ c37^0-c37^post40 == 0 /\ -__const_65536^post40+__const_65536^0 == 0 /\ n40^0-n40^post40 == 0 /\ __const_257^0-__const_257^post40 == 0 /\ ret_getbyte25^0-ret_getbyte25^post40 == 0 /\ -r_off32^post40+r_off32^0 == 0 /\ out_count^0-out_count^post40 == 0 /\ -__const_9^post40+__const_9^0 == 0 /\ -in_count^post40+in_count^0 == 0 /\ -__const_8388607^post40+__const_8388607^0 == 0 /\ i45^0-i45^post40 == 0 /\ -__const_8^post40+__const_8^0 == 0 /\ i3^0-i3^post40 == 0 /\ bits33^0-bits33^post40 == 0 /\ -maxcode^post40+maxcode^0 == 0 /\ -tmp___017^post40+tmp___017^0 == 0 /\ hsize___027^0-hsize___027^post40 == 0 /\ tmp12^0-tmp12^post40 == 0 /\ offset^0-offset^post40 == 0 /\ hshift11^0-hshift11^post40 == 0 /\ -clear_flg^0 <= 0 /\ -__const_256^post40+__const_256^0 == 0 /\ -incnt^post40+incnt^0 == 0 /\ clear_flg^0 <= 0 /\ ratio^0-ratio^post40 == 0 /\ maxmaxcode^0-maxmaxcode^post40 == 0 /\ checkpoint^0-checkpoint^post40 == 0), cost: 1
  40: l37 -> l36 : __const_10000^0'=__const_10000^post41, __const_16^0'=__const_16^post41, __const_2147483647^0'=__const_2147483647^post41, __const_256^0'=__const_256^post41, __const_257^0'=__const_257^post41, __const_429496^0'=__const_429496^post41, __const_50^0'=__const_50^post41, __const_53^0'=__const_53^post41, __const_65536^0'=__const_65536^post41, __const_8388607^0'=__const_8388607^post41, __const_8^0'=__const_8^post41, __const_9^0'=__const_9^post41, apsim_bound11113^0'=apsim_bound11113^post41, apsim_incnt^0'=apsim_incnt^post41, bits33^0'=bits33^post41, block_compress^0'=block_compress^post41, bytes_out^0'=bytes_out^post41, c37^0'=c37^post41, c7^0'=c7^post41, checkpoint^0'=checkpoint^post41, clear_flg^0'=clear_flg^post41, code31^0'=code31^post41, count^0'=count^post41, disp9^0'=disp9^post41, ent8^0'=ent8^post41, exit_stat^0'=exit_stat^post41, fcode5^0'=fcode5^post41, free_ent^0'=free_ent^post41, hshift11^0'=hshift11^post41, hsize^0'=hsize^post41, hsize___019^0'=hsize___019^post41, hsize___027^0'=hsize___027^post41, hsize_reg10^0'=hsize_reg10^post41, i21^0'=i21^post41, i29^0'=i29^post41, i3^0'=i3^post41, i41^0'=i41^post41, i45^0'=i45^post41, i6^0'=i6^post41, in_count^0'=in_count^post41, incnt^0'=incnt^post41, m122^0'=m122^post41, m130^0'=m130^post41, maxbits^0'=maxbits^post41, maxcode^0'=maxcode^post41, maxmaxcode^0'=maxmaxcode^post41, n40^0'=n40^post41, n44^0'=n44^post41, n_bits^0'=n_bits^post41, offset^0'=offset^post41, out_count^0'=out_count^post41, r_off32^0'=r_off32^post41, rat26^0'=rat26^post41, ratio^0'=ratio^post41, ret_getbyte18^0'=ret_getbyte18^post41, ret_getbyte25^0'=ret_getbyte25^post41, seed2^0'=seed2^post41, tabort4^0'=tabort4^post41, tmp12^0'=tmp12^post41, tmp___014^0'=tmp___014^post41, tmp___017^0'=tmp___017^post41, tmp___024^0'=tmp___024^post41, tmp___115^0'=tmp___115^post41, (n44^0-n44^post41 == 0 /\ -__const_10000^post41+__const_10000^0 == 0 /\ tmp___115^0-tmp___115^post41 == 0 /\ __const_16^0-__const_16^post41 == 0 /\ -__const_2147483647^post41+__const_2147483647^0 == 0 /\ -r_off32^post41+r_off32^0 == 0 /\ -maxbits^post41+maxbits^0 == 0 /\ -m122^post41+m122^0 == 0 /\ -n40^post41+n40^0 == 0 /\ bytes_out^0-bytes_out^post41 == 0 /\ -__const_8388607^post41+__const_8388607^0 == 0 /\ hshift11^0-hshift11^post41 == 0 /\ -incnt^post41+incnt^0 == 0 /\ apsim_incnt^0-apsim_incnt^post41 == 0 /\ maxcode^0-maxcode^post41 == 0 /\ -hsize___019^post41+hsize___019^0 == 0 /\ __const_256^0-__const_256^post41 == 0 /\ -i41^post41+i41^0 == 0 /\ exit_stat^0-exit_stat^post41 == 0 /\ __const_50^0-__const_50^post41 == 0 /\ hsize^0-hsize^post41 == 0 /\ c37^0-c37^post41 == 0 /\ -bits33^post41+bits33^0 == 0 /\ -__const_9^post41+__const_9^0 == 0 /\ -in_count^post41+in_count^0 == 0 /\ __const_53^0-__const_53^post41 == 0 /\ -ratio^post41+ratio^0 == 0 /\ -disp9^post41+disp9^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post41 == 0 /\ m130^0-m130^post41 == 0 /\ -ret_getbyte18^post41+ret_getbyte18^0 == 0 /\ -i29^post41+i29^0 == 0 /\ -n_bits^post41+n_bits^0 == 0 /\ hsize___027^0-hsize___027^post41 == 0 /\ -free_ent^post41+free_ent^0 == 0 /\ -tabort4^post41+tabort4^0 == 0 /\ -seed2^post41+seed2^0 == 0 /\ -i21^post41+i21^0 == 0 /\ i3^0-i3^post41 == 0 /\ -__const_8^post41+__const_8^0 == 0 /\ __const_257^0-__const_257^post41 == 0 /\ -tmp___017^post41+tmp___017^0 == 0 /\ -clear_flg^post41+clear_flg^0 == 0 /\ -block_compress^post41+block_compress^0 == 0 /\ checkpoint^0-checkpoint^post41 == 0 /\ -tmp___024^post41+tmp___024^0 == 0 /\ -c7^post41+c7^0 == 0 /\ rat26^0-rat26^post41 == 0 /\ maxmaxcode^0-maxmaxcode^post41 == 0 /\ -i45^post41+i45^0 == 0 /\ tmp___014^0-tmp___014^post41 == 0 /\ out_count^0-out_count^post41 == 0 /\ -i6^post41+i6^0 == 0 /\ -apsim_bound11113^post41+apsim_bound11113^0 == 0 /\ 1-clear_flg^0 <= 0 /\ tmp12^0-tmp12^post41 == 0 /\ -__const_65536^post41+__const_65536^0 == 0 /\ -code31^post41+code31^0 == 0 /\ -fcode5^post41+fcode5^0 == 0 /\ -__const_429496^post41+__const_429496^0 == 0 /\ count^0-count^post41 == 0 /\ hsize_reg10^0-hsize_reg10^post41 == 0 /\ -ent8^post41+ent8^0 == 0 /\ offset^0-offset^post41 == 0), cost: 1
  41: l37 -> l36 : __const_10000^0'=__const_10000^post42, __const_16^0'=__const_16^post42, __const_2147483647^0'=__const_2147483647^post42, __const_256^0'=__const_256^post42, __const_257^0'=__const_257^post42, __const_429496^0'=__const_429496^post42, __const_50^0'=__const_50^post42, __const_53^0'=__const_53^post42, __const_65536^0'=__const_65536^post42, __const_8388607^0'=__const_8388607^post42, __const_8^0'=__const_8^post42, __const_9^0'=__const_9^post42, apsim_bound11113^0'=apsim_bound11113^post42, apsim_incnt^0'=apsim_incnt^post42, bits33^0'=bits33^post42, block_compress^0'=block_compress^post42, bytes_out^0'=bytes_out^post42, c37^0'=c37^post42, c7^0'=c7^post42, checkpoint^0'=checkpoint^post42, clear_flg^0'=clear_flg^post42, code31^0'=code31^post42, count^0'=count^post42, disp9^0'=disp9^post42, ent8^0'=ent8^post42, exit_stat^0'=exit_stat^post42, fcode5^0'=fcode5^post42, free_ent^0'=free_ent^post42, hshift11^0'=hshift11^post42, hsize^0'=hsize^post42, hsize___019^0'=hsize___019^post42, hsize___027^0'=hsize___027^post42, hsize_reg10^0'=hsize_reg10^post42, i21^0'=i21^post42, i29^0'=i29^post42, i3^0'=i3^post42, i41^0'=i41^post42, i45^0'=i45^post42, i6^0'=i6^post42, in_count^0'=in_count^post42, incnt^0'=incnt^post42, m122^0'=m122^post42, m130^0'=m130^post42, maxbits^0'=maxbits^post42, maxcode^0'=maxcode^post42, maxmaxcode^0'=maxmaxcode^post42, n40^0'=n40^post42, n44^0'=n44^post42, n_bits^0'=n_bits^post42, offset^0'=offset^post42, out_count^0'=out_count^post42, r_off32^0'=r_off32^post42, rat26^0'=rat26^post42, ratio^0'=ratio^post42, ret_getbyte18^0'=ret_getbyte18^post42, ret_getbyte25^0'=ret_getbyte25^post42, seed2^0'=seed2^post42, tabort4^0'=tabort4^post42, tmp12^0'=tmp12^post42, tmp___014^0'=tmp___014^post42, tmp___017^0'=tmp___017^post42, tmp___024^0'=tmp___024^post42, tmp___115^0'=tmp___115^post42, (out_count^0-out_count^post42 == 0 /\ -bits33^post42+bits33^0 == 0 /\ -ratio^post42+ratio^0 == 0 /\ -tmp___024^post42+tmp___024^0 == 0 /\ -code31^post42+code31^0 == 0 /\ maxmaxcode^0-maxmaxcode^post42 == 0 /\ __const_256^0-__const_256^post42 == 0 /\ bytes_out^0-bytes_out^post42 == 0 /\ count^0-count^post42 == 0 /\ 1+clear_flg^0 <= 0 /\ offset^0-offset^post42 == 0 /\ -tmp___014^post42+tmp___014^0 == 0 /\ __const_16^0-__const_16^post42 == 0 /\ ret_getbyte25^0-ret_getbyte25^post42 == 0 /\ -ent8^post42+ent8^0 == 0 /\ -c37^post42+c37^0 == 0 /\ -block_compress^post42+block_compress^0 == 0 /\ -r_off32^post42+r_off32^0 == 0 /\ -apsim_bound11113^post42+apsim_bound11113^0 == 0 /\ -__const_429496^post42+__const_429496^0 == 0 /\ -seed2^post42+seed2^0 == 0 /\ tmp___115^0-tmp___115^post42 == 0 /\ __const_50^0-__const_50^post42 == 0 /\ checkpoint^0-checkpoint^post42 == 0 /\ n44^0-n44^post42 == 0 /\ apsim_incnt^0-apsim_incnt^post42 == 0 /\ -hsize^post42+hsize^0 == 0 /\ hshift11^0-hshift11^post42 == 0 /\ m130^0-m130^post42 == 0 /\ -incnt^post42+incnt^0 == 0 /\ -__const_65536^post42+__const_65536^0 == 0 /\ maxcode^0-maxcode^post42 == 0 /\ i6^0-i6^post42 == 0 /\ __const_257^0-__const_257^post42 == 0 /\ ret_getbyte18^0-ret_getbyte18^post42 == 0 /\ tmp___017^0-tmp___017^post42 == 0 /\ hsize_reg10^0-hsize_reg10^post42 == 0 /\ fcode5^0-fcode5^post42 == 0 /\ -n40^post42+n40^0 == 0 /\ -i45^post42+i45^0 == 0 /\ -in_count^post42+in_count^0 == 0 /\ exit_stat^0-exit_stat^post42 == 0 /\ -i29^post42+i29^0 == 0 /\ -__const_8388607^post42+__const_8388607^0 == 0 /\ i3^0-i3^post42 == 0 /\ -i41^post42+i41^0 == 0 /\ __const_8^0-__const_8^post42 == 0 /\ -__const_2147483647^post42+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post42 == 0 /\ hsize___027^0-hsize___027^post42 == 0 /\ __const_53^0-__const_53^post42 == 0 /\ -clear_flg^post42+clear_flg^0 == 0 /\ m122^0-m122^post42 == 0 /\ -n_bits^post42+n_bits^0 == 0 /\ -c7^post42+c7^0 == 0 /\ -free_ent^post42+free_ent^0 == 0 /\ -disp9^post42+disp9^0 == 0 /\ -tabort4^post42+tabort4^0 == 0 /\ -__const_9^post42+__const_9^0 == 0 /\ rat26^0-rat26^post42 == 0 /\ -hsize___019^post42+hsize___019^0 == 0 /\ -i21^post42+i21^0 == 0 /\ __const_10000^0-__const_10000^post42 == 0 /\ -maxbits^post42+maxbits^0 == 0), cost: 1
  42: l38 -> l37 : __const_10000^0'=__const_10000^post43, __const_16^0'=__const_16^post43, __const_2147483647^0'=__const_2147483647^post43, __const_256^0'=__const_256^post43, __const_257^0'=__const_257^post43, __const_429496^0'=__const_429496^post43, __const_50^0'=__const_50^post43, __const_53^0'=__const_53^post43, __const_65536^0'=__const_65536^post43, __const_8388607^0'=__const_8388607^post43, __const_8^0'=__const_8^post43, __const_9^0'=__const_9^post43, apsim_bound11113^0'=apsim_bound11113^post43, apsim_incnt^0'=apsim_incnt^post43, bits33^0'=bits33^post43, block_compress^0'=block_compress^post43, bytes_out^0'=bytes_out^post43, c37^0'=c37^post43, c7^0'=c7^post43, checkpoint^0'=checkpoint^post43, clear_flg^0'=clear_flg^post43, code31^0'=code31^post43, count^0'=count^post43, disp9^0'=disp9^post43, ent8^0'=ent8^post43, exit_stat^0'=exit_stat^post43, fcode5^0'=fcode5^post43, free_ent^0'=free_ent^post43, hshift11^0'=hshift11^post43, hsize^0'=hsize^post43, hsize___019^0'=hsize___019^post43, hsize___027^0'=hsize___027^post43, hsize_reg10^0'=hsize_reg10^post43, i21^0'=i21^post43, i29^0'=i29^post43, i3^0'=i3^post43, i41^0'=i41^post43, i45^0'=i45^post43, i6^0'=i6^post43, in_count^0'=in_count^post43, incnt^0'=incnt^post43, m122^0'=m122^post43, m130^0'=m130^post43, maxbits^0'=maxbits^post43, maxcode^0'=maxcode^post43, maxmaxcode^0'=maxmaxcode^post43, n40^0'=n40^post43, n44^0'=n44^post43, n_bits^0'=n_bits^post43, offset^0'=offset^post43, out_count^0'=out_count^post43, r_off32^0'=r_off32^post43, rat26^0'=rat26^post43, ratio^0'=ratio^post43, ret_getbyte18^0'=ret_getbyte18^post43, ret_getbyte25^0'=ret_getbyte25^post43, seed2^0'=seed2^post43, tabort4^0'=tabort4^post43, tmp12^0'=tmp12^post43, tmp___014^0'=tmp___014^post43, tmp___017^0'=tmp___017^post43, tmp___024^0'=tmp___024^post43, tmp___115^0'=tmp___115^post43, (i6^0-i6^post43 == 0 /\ __const_257^0-__const_257^post43 == 0 /\ checkpoint^0-checkpoint^post43 == 0 /\ -n40^post43+n40^0 == 0 /\ tmp___115^0-tmp___115^post43 == 0 /\ n44^0-n44^post43 == 0 /\ -block_compress^post43+block_compress^0 == 0 /\ m130^0-m130^post43 == 0 /\ -free_ent^post43+free_ent^0 == 0 /\ -__const_53^post43+__const_53^0 == 0 /\ tmp___014^0-tmp___014^post43 == 0 /\ -__const_429496^post43+__const_429496^0 == 0 /\ -ent8^post43+ent8^0 == 0 /\ -i29^post43+i29^0 == 0 /\ -i41^post43+i41^0 == 0 /\ __const_256^0-__const_256^post43 == 0 /\ -i45^post43+i45^0 == 0 /\ -n_bits^post43+n_bits^0 == 0 /\ -tabort4^post43+tabort4^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post43 == 0 /\ i3^0-i3^post43 == 0 /\ -i21^post43+i21^0 == 0 /\ count^0-count^post43 == 0 /\ -m122^post43+m122^0 == 0 /\ apsim_incnt^0-apsim_incnt^post43 == 0 /\ -in_count^post43+in_count^0 == 0 /\ hsize___027^0-hsize___027^post43 == 0 /\ -__const_2147483647^post43+__const_2147483647^0 == 0 /\ hshift11^0-hshift11^post43 == 0 /\ -c7^post43+c7^0 == 0 /\ -maxbits^post43+maxbits^0 == 0 /\ -clear_flg^post43+clear_flg^0 == 0 /\ -hsize_reg10^post43+hsize_reg10^0 == 0 /\ -tmp___024^post43+tmp___024^0 == 0 /\ -tmp___017^post43+tmp___017^0 == 0 /\ offset^post43 == 0 /\ -hsize___019^post43+hsize___019^0 == 0 /\ -hsize^post43+hsize^0 == 0 /\ -disp9^post43+disp9^0 == 0 /\ rat26^0-rat26^post43 == 0 /\ __const_50^0-__const_50^post43 == 0 /\ -apsim_bound11113^post43+apsim_bound11113^0 == 0 /\ fcode5^0-fcode5^post43 == 0 /\ __const_10000^0-__const_10000^post43 == 0 /\ -__const_9^post43+__const_9^0 == 0 /\ -__const_65536^post43+__const_65536^0 == 0 /\ -code31^post43+code31^0 == 0 /\ -ratio^post43+ratio^0 == 0 /\ -ret_getbyte18^post43+ret_getbyte18^0 == 0 /\ -incnt^post43+incnt^0 == 0 /\ -seed2^post43+seed2^0 == 0 /\ tmp12^0-tmp12^post43 == 0 /\ -r_off32^post43+r_off32^0 == 0 /\ out_count^0-out_count^post43 == 0 /\ __const_8^0-__const_8^post43 == 0 /\ -__const_16^post43+__const_16^0 == 0 /\ exit_stat^0-exit_stat^post43 == 0 /\ -bits33^post43+bits33^0 == 0 /\ maxmaxcode^0-maxmaxcode^post43 == 0 /\ c37^0-c37^post43 == 0 /\ bytes_out^0-bytes_out^post43 == 0 /\ -__const_8388607^post43+__const_8388607^0 == 0 /\ -maxcode^post43+maxcode^0 == 0), cost: 1
  43: l39 -> l38 : __const_10000^0'=__const_10000^post44, __const_16^0'=__const_16^post44, __const_2147483647^0'=__const_2147483647^post44, __const_256^0'=__const_256^post44, __const_257^0'=__const_257^post44, __const_429496^0'=__const_429496^post44, __const_50^0'=__const_50^post44, __const_53^0'=__const_53^post44, __const_65536^0'=__const_65536^post44, __const_8388607^0'=__const_8388607^post44, __const_8^0'=__const_8^post44, __const_9^0'=__const_9^post44, apsim_bound11113^0'=apsim_bound11113^post44, apsim_incnt^0'=apsim_incnt^post44, bits33^0'=bits33^post44, block_compress^0'=block_compress^post44, bytes_out^0'=bytes_out^post44, c37^0'=c37^post44, c7^0'=c7^post44, checkpoint^0'=checkpoint^post44, clear_flg^0'=clear_flg^post44, code31^0'=code31^post44, count^0'=count^post44, disp9^0'=disp9^post44, ent8^0'=ent8^post44, exit_stat^0'=exit_stat^post44, fcode5^0'=fcode5^post44, free_ent^0'=free_ent^post44, hshift11^0'=hshift11^post44, hsize^0'=hsize^post44, hsize___019^0'=hsize___019^post44, hsize___027^0'=hsize___027^post44, hsize_reg10^0'=hsize_reg10^post44, i21^0'=i21^post44, i29^0'=i29^post44, i3^0'=i3^post44, i41^0'=i41^post44, i45^0'=i45^post44, i6^0'=i6^post44, in_count^0'=in_count^post44, incnt^0'=incnt^post44, m122^0'=m122^post44, m130^0'=m130^post44, maxbits^0'=maxbits^post44, maxcode^0'=maxcode^post44, maxmaxcode^0'=maxmaxcode^post44, n40^0'=n40^post44, n44^0'=n44^post44, n_bits^0'=n_bits^post44, offset^0'=offset^post44, out_count^0'=out_count^post44, r_off32^0'=r_off32^post44, rat26^0'=rat26^post44, ratio^0'=ratio^post44, ret_getbyte18^0'=ret_getbyte18^post44, ret_getbyte25^0'=ret_getbyte25^post44, seed2^0'=seed2^post44, tabort4^0'=tabort4^post44, tmp12^0'=tmp12^post44, tmp___014^0'=tmp___014^post44, tmp___017^0'=tmp___017^post44, tmp___024^0'=tmp___024^post44, tmp___115^0'=tmp___115^post44, (maxcode^0-maxcode^post44 == 0 /\ -hsize___019^post44+hsize___019^0 == 0 /\ -hsize^post44+hsize^0 == 0 /\ count^0-count^post44 == 0 /\ -seed2^post44+seed2^0 == 0 /\ __const_53^0-__const_53^post44 == 0 /\ offset^0-offset^post44 == 0 /\ -ent8^post44+ent8^0 == 0 /\ hshift11^0-hshift11^post44 == 0 /\ disp9^0-disp9^post44 == 0 /\ __const_16^0-__const_16^post44 == 0 /\ ret_getbyte25^0-ret_getbyte25^post44 == 0 /\ -n_bits^post44+n_bits^0 == 0 /\ apsim_incnt^0-apsim_incnt^post44 == 0 /\ -code31^post44+code31^0 == 0 /\ -r_off32^post44+r_off32^0 == 0 /\ -apsim_bound11113^post44+apsim_bound11113^0 == 0 /\ -__const_9^post44+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post44 == 0 /\ -__const_8388607^post44+__const_8388607^0 == 0 /\ m130^0-m130^post44 == 0 /\ i6^0-i6^post44 == 0 /\ checkpoint^0-checkpoint^post44 == 0 /\ c37^0-c37^post44 == 0 /\ -n40^post44+n40^0 == 0 /\ -ratio^post44+ratio^0 == 0 /\ __const_257^0-__const_257^post44 == 0 /\ __const_50^0-__const_50^post44 == 0 /\ -bits33^post44+bits33^0 == 0 /\ tmp___115^0-tmp___115^post44 == 0 /\ __const_256^0-__const_256^post44 == 0 /\ n44^0-n44^post44 == 0 /\ i3^0-i3^post44 == 0 /\ hsize___027^0-hsize___027^post44 == 0 /\ -c7^post44+c7^0 == 0 /\ -block_compress^post44+block_compress^0 == 0 /\ tmp12^0-tmp12^post44 == 0 /\ -__const_429496^post44+__const_429496^0 == 0 /\ __const_8^0-__const_8^post44 == 0 /\ -i29^post44+i29^0 == 0 /\ rat26^0-rat26^post44 == 0 /\ tmp___017^0-tmp___017^post44 == 0 /\ -i41^post44+i41^0 == 0 /\ exit_stat^0-exit_stat^post44 == 0 /\ -incnt^post44+incnt^0 == 0 /\ -bytes_out^0-n_bits^0+bytes_out^post44 == 0 /\ -i45^post44+i45^0 == 0 /\ -free_ent^post44+free_ent^0 == 0 /\ -fcode5^post44+fcode5^0 == 0 /\ -__const_65536^post44+__const_65536^0 == 0 /\ -maxbits^post44+maxbits^0 == 0 /\ -i21^post44+i21^0 == 0 /\ -ret_getbyte18^post44+ret_getbyte18^0 == 0 /\ -tmp___024^post44+tmp___024^0 == 0 /\ m122^0-m122^post44 == 0 /\ -__const_2147483647^post44+__const_2147483647^0 == 0 /\ -in_count^post44+in_count^0 == 0 /\ -tmp___014^post44+tmp___014^0 == 0 /\ hsize_reg10^0-hsize_reg10^post44 == 0 /\ -clear_flg^post44+clear_flg^0 == 0 /\ __const_10000^0-__const_10000^post44 == 0 /\ -tabort4^post44+tabort4^0 == 0 /\ out_count^0-out_count^post44 == 0), cost: 1
  44: l40 -> l39 : __const_10000^0'=__const_10000^post45, __const_16^0'=__const_16^post45, __const_2147483647^0'=__const_2147483647^post45, __const_256^0'=__const_256^post45, __const_257^0'=__const_257^post45, __const_429496^0'=__const_429496^post45, __const_50^0'=__const_50^post45, __const_53^0'=__const_53^post45, __const_65536^0'=__const_65536^post45, __const_8388607^0'=__const_8388607^post45, __const_8^0'=__const_8^post45, __const_9^0'=__const_9^post45, apsim_bound11113^0'=apsim_bound11113^post45, apsim_incnt^0'=apsim_incnt^post45, bits33^0'=bits33^post45, block_compress^0'=block_compress^post45, bytes_out^0'=bytes_out^post45, c37^0'=c37^post45, c7^0'=c7^post45, checkpoint^0'=checkpoint^post45, clear_flg^0'=clear_flg^post45, code31^0'=code31^post45, count^0'=count^post45, disp9^0'=disp9^post45, ent8^0'=ent8^post45, exit_stat^0'=exit_stat^post45, fcode5^0'=fcode5^post45, free_ent^0'=free_ent^post45, hshift11^0'=hshift11^post45, hsize^0'=hsize^post45, hsize___019^0'=hsize___019^post45, hsize___027^0'=hsize___027^post45, hsize_reg10^0'=hsize_reg10^post45, i21^0'=i21^post45, i29^0'=i29^post45, i3^0'=i3^post45, i41^0'=i41^post45, i45^0'=i45^post45, i6^0'=i6^post45, in_count^0'=in_count^post45, incnt^0'=incnt^post45, m122^0'=m122^post45, m130^0'=m130^post45, maxbits^0'=maxbits^post45, maxcode^0'=maxcode^post45, maxmaxcode^0'=maxmaxcode^post45, n40^0'=n40^post45, n44^0'=n44^post45, n_bits^0'=n_bits^post45, offset^0'=offset^post45, out_count^0'=out_count^post45, r_off32^0'=r_off32^post45, rat26^0'=rat26^post45, ratio^0'=ratio^post45, ret_getbyte18^0'=ret_getbyte18^post45, ret_getbyte25^0'=ret_getbyte25^post45, seed2^0'=seed2^post45, tabort4^0'=tabort4^post45, tmp12^0'=tmp12^post45, tmp___014^0'=tmp___014^post45, tmp___017^0'=tmp___017^post45, tmp___024^0'=tmp___024^post45, tmp___115^0'=tmp___115^post45, (__const_256^0-__const_256^post45 == 0 /\ tabort4^0-tabort4^post45 == 0 /\ m122^0-m122^post45 == 0 /\ maxmaxcode^0-maxmaxcode^post45 == 0 /\ r_off32^0-r_off32^post45 == 0 /\ -i21^post45+i21^0 == 0 /\ -tmp___014^post45+tmp___014^0 == 0 /\ -free_ent^post45+free_ent^0 == 0 /\ -__const_65536^post45+__const_65536^0 == 0 /\ out_count^0-out_count^post45 == 0 /\ -block_compress^post45+block_compress^0 == 0 /\ -tmp___024^post45+tmp___024^0 == 0 /\ -tmp___115^post45+tmp___115^0 == 0 /\ -c7^post45+c7^0 == 0 /\ -c37^post45+c37^0 == 0 /\ hsize___027^0-hsize___027^post45 == 0 /\ clear_flg^0-clear_flg^post45 == 0 /\ in_count^0-in_count^post45 == 0 /\ __const_16^0-i41^0 <= 0 /\ -i45^post45+i45^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post45 == 0 /\ __const_50^0-__const_50^post45 == 0 /\ n44^0-n44^post45 == 0 /\ -code31^post45+code31^0 == 0 /\ -__const_8388607^post45+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post45 == 0 /\ -offset^post45+offset^0 == 0 /\ __const_257^0-__const_257^post45 == 0 /\ -disp9^post45+disp9^0 == 0 /\ checkpoint^0-checkpoint^post45 == 0 /\ count^0-count^post45 == 0 /\ hshift11^0-hshift11^post45 == 0 /\ -__const_429496^post45+__const_429496^0 == 0 /\ i6^0-i6^post45 == 0 /\ apsim_incnt^0-apsim_incnt^post45 == 0 /\ maxcode^0-maxcode^post45 == 0 /\ i3^0-i3^post45 == 0 /\ -__const_16^post45+__const_16^0 == 0 /\ -__const_2147483647^post45+__const_2147483647^0 == 0 /\ -apsim_bound11113^post45+apsim_bound11113^0 == 0 /\ tmp___017^0-tmp___017^post45 == 0 /\ tmp12^0-tmp12^post45 == 0 /\ -seed2^post45+seed2^0 == 0 /\ fcode5^0-fcode5^post45 == 0 /\ -maxbits^post45+maxbits^0 == 0 /\ -hsize_reg10^post45+hsize_reg10^0 == 0 /\ __const_8^0-__const_8^post45 == 0 /\ m130^0-m130^post45 == 0 /\ -n40^post45+n40^0 == 0 /\ -hsize___019^post45+hsize___019^0 == 0 /\ -hsize^post45+hsize^0 == 0 /\ -i41^post45+i41^0 == 0 /\ exit_stat^0-exit_stat^post45 == 0 /\ __const_10000^0-__const_10000^post45 == 0 /\ -bits33^post45+bits33^0 == 0 /\ -incnt^post45+incnt^0 == 0 /\ -ent8^post45+ent8^0 == 0 /\ -__const_9^post45+__const_9^0 == 0 /\ -ratio^post45+ratio^0 == 0 /\ bytes_out^0-bytes_out^post45 == 0 /\ -n_bits^post45+n_bits^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post45 == 0 /\ -i29^post45+i29^0 == 0 /\ rat26^0-rat26^post45 == 0), cost: 1
  45: l40 -> l21 : __const_10000^0'=__const_10000^post46, __const_16^0'=__const_16^post46, __const_2147483647^0'=__const_2147483647^post46, __const_256^0'=__const_256^post46, __const_257^0'=__const_257^post46, __const_429496^0'=__const_429496^post46, __const_50^0'=__const_50^post46, __const_53^0'=__const_53^post46, __const_65536^0'=__const_65536^post46, __const_8388607^0'=__const_8388607^post46, __const_8^0'=__const_8^post46, __const_9^0'=__const_9^post46, apsim_bound11113^0'=apsim_bound11113^post46, apsim_incnt^0'=apsim_incnt^post46, bits33^0'=bits33^post46, block_compress^0'=block_compress^post46, bytes_out^0'=bytes_out^post46, c37^0'=c37^post46, c7^0'=c7^post46, checkpoint^0'=checkpoint^post46, clear_flg^0'=clear_flg^post46, code31^0'=code31^post46, count^0'=count^post46, disp9^0'=disp9^post46, ent8^0'=ent8^post46, exit_stat^0'=exit_stat^post46, fcode5^0'=fcode5^post46, free_ent^0'=free_ent^post46, hshift11^0'=hshift11^post46, hsize^0'=hsize^post46, hsize___019^0'=hsize___019^post46, hsize___027^0'=hsize___027^post46, hsize_reg10^0'=hsize_reg10^post46, i21^0'=i21^post46, i29^0'=i29^post46, i3^0'=i3^post46, i41^0'=i41^post46, i45^0'=i45^post46, i6^0'=i6^post46, in_count^0'=in_count^post46, incnt^0'=incnt^post46, m122^0'=m122^post46, m130^0'=m130^post46, maxbits^0'=maxbits^post46, maxcode^0'=maxcode^post46, maxmaxcode^0'=maxmaxcode^post46, n40^0'=n40^post46, n44^0'=n44^post46, n_bits^0'=n_bits^post46, offset^0'=offset^post46, out_count^0'=out_count^post46, r_off32^0'=r_off32^post46, rat26^0'=rat26^post46, ratio^0'=ratio^post46, ret_getbyte18^0'=ret_getbyte18^post46, ret_getbyte25^0'=ret_getbyte25^post46, seed2^0'=seed2^post46, tabort4^0'=tabort4^post46, tmp12^0'=tmp12^post46, tmp___014^0'=tmp___014^post46, tmp___017^0'=tmp___017^post46, tmp___024^0'=tmp___024^post46, tmp___115^0'=tmp___115^post46, (-n40^post46+n40^0 == 0 /\ -i29^post46+i29^0 == 0 /\ 1-__const_16^0+i41^0 <= 0 /\ checkpoint^0-checkpoint^post46 == 0 /\ exit_stat^0-exit_stat^post46 == 0 /\ i6^0-i6^post46 == 0 /\ -__const_2147483647^post46+__const_2147483647^0 == 0 /\ tabort4^0-tabort4^post46 == 0 /\ -__const_257^post46+__const_257^0 == 0 /\ -__const_16^post46+__const_16^0 == 0 /\ r_off32^0-r_off32^post46 == 0 /\ ret_getbyte18^0-ret_getbyte18^post46 == 0 /\ -rat26^post46+rat26^0 == 0 /\ -c7^post46+c7^0 == 0 /\ out_count^0-out_count^post46 == 0 /\ -clear_flg^post46+clear_flg^0 == 0 /\ -__const_9^post46+__const_9^0 == 0 /\ -ent8^post46+ent8^0 == 0 /\ -tmp12^post46+tmp12^0 == 0 /\ m130^0-m130^post46 == 0 /\ -free_ent^post46+free_ent^0 == 0 /\ -__const_65536^post46+__const_65536^0 == 0 /\ i3^0-i3^post46 == 0 /\ maxmaxcode^0-maxmaxcode^post46 == 0 /\ -hsize_reg10^post46+hsize_reg10^0 == 0 /\ -hsize___019^post46+hsize___019^0 == 0 /\ -seed2^post46+seed2^0 == 0 /\ -fcode5^post46+fcode5^0 == 0 /\ count^0-count^post46 == 0 /\ -incnt^post46+incnt^0 == 0 /\ -i21^post46+i21^0 == 0 /\ hsize___027^0-hsize___027^post46 == 0 /\ -maxbits^post46+maxbits^0 == 0 /\ -code31^post46+code31^0 == 0 /\ -__const_8388607^post46+__const_8388607^0 == 0 /\ -ratio^post46+ratio^0 == 0 /\ hshift11^0-hshift11^post46 == 0 /\ -1+i41^post46-i41^0 == 0 /\ -tmp___024^post46+tmp___024^0 == 0 /\ -tmp___115^post46+tmp___115^0 == 0 /\ apsim_incnt^0-apsim_incnt^post46 == 0 /\ n44^0-n44^post46 == 0 /\ __const_50^0-__const_50^post46 == 0 /\ __const_10000^0-__const_10000^post46 == 0 /\ maxcode^0-maxcode^post46 == 0 /\ n_bits^0-n_bits^post46 == 0 /\ __const_53^0-__const_53^post46 == 0 /\ -in_count^post46+in_count^0 == 0 /\ -bits33^post46+bits33^0 == 0 /\ -tmp___014^post46+tmp___014^0 == 0 /\ __const_8^0-__const_8^post46 == 0 /\ -offset^post46+offset^0 == 0 /\ -disp9^post46+disp9^0 == 0 /\ -block_compress^post46+block_compress^0 == 0 /\ tmp___017^0-tmp___017^post46 == 0 /\ -ret_getbyte25^post46+ret_getbyte25^0 == 0 /\ -apsim_bound11113^post46+apsim_bound11113^0 == 0 /\ -__const_429496^post46+__const_429496^0 == 0 /\ -hsize^post46+hsize^0 == 0 /\ __const_256^0-__const_256^post46 == 0 /\ bytes_out^0-bytes_out^post46 == 0 /\ c37^0-c37^post46 == 0 /\ -i45^post46+i45^0 == 0 /\ -m122^post46+m122^0 == 0), cost: 1
  48: l41 -> l38 : __const_10000^0'=__const_10000^post49, __const_16^0'=__const_16^post49, __const_2147483647^0'=__const_2147483647^post49, __const_256^0'=__const_256^post49, __const_257^0'=__const_257^post49, __const_429496^0'=__const_429496^post49, __const_50^0'=__const_50^post49, __const_53^0'=__const_53^post49, __const_65536^0'=__const_65536^post49, __const_8388607^0'=__const_8388607^post49, __const_8^0'=__const_8^post49, __const_9^0'=__const_9^post49, apsim_bound11113^0'=apsim_bound11113^post49, apsim_incnt^0'=apsim_incnt^post49, bits33^0'=bits33^post49, block_compress^0'=block_compress^post49, bytes_out^0'=bytes_out^post49, c37^0'=c37^post49, c7^0'=c7^post49, checkpoint^0'=checkpoint^post49, clear_flg^0'=clear_flg^post49, code31^0'=code31^post49, count^0'=count^post49, disp9^0'=disp9^post49, ent8^0'=ent8^post49, exit_stat^0'=exit_stat^post49, fcode5^0'=fcode5^post49, free_ent^0'=free_ent^post49, hshift11^0'=hshift11^post49, hsize^0'=hsize^post49, hsize___019^0'=hsize___019^post49, hsize___027^0'=hsize___027^post49, hsize_reg10^0'=hsize_reg10^post49, i21^0'=i21^post49, i29^0'=i29^post49, i3^0'=i3^post49, i41^0'=i41^post49, i45^0'=i45^post49, i6^0'=i6^post49, in_count^0'=in_count^post49, incnt^0'=incnt^post49, m122^0'=m122^post49, m130^0'=m130^post49, maxbits^0'=maxbits^post49, maxcode^0'=maxcode^post49, maxmaxcode^0'=maxmaxcode^post49, n40^0'=n40^post49, n44^0'=n44^post49, n_bits^0'=n_bits^post49, offset^0'=offset^post49, out_count^0'=out_count^post49, r_off32^0'=r_off32^post49, rat26^0'=rat26^post49, ratio^0'=ratio^post49, ret_getbyte18^0'=ret_getbyte18^post49, ret_getbyte25^0'=ret_getbyte25^post49, seed2^0'=seed2^post49, tabort4^0'=tabort4^post49, tmp12^0'=tmp12^post49, tmp___014^0'=tmp___014^post49, tmp___017^0'=tmp___017^post49, tmp___024^0'=tmp___024^post49, tmp___115^0'=tmp___115^post49, (free_ent^0-free_ent^post49 == 0 /\ -code31^post49+code31^0 == 0 /\ __const_8388607^0-__const_8388607^post49 == 0 /\ hshift11^0-hshift11^post49 == 0 /\ hsize___027^0-hsize___027^post49 == 0 /\ -fcode5^post49+fcode5^0 == 0 /\ tmp___014^0-tmp___014^post49 == 0 /\ -disp9^post49+disp9^0 == 0 /\ -n44^post49+n44^0 == 0 /\ -ret_getbyte18^post49+ret_getbyte18^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post49 == 0 /\ -ent8^post49+ent8^0 == 0 /\ -maxbits^post49+maxbits^0 == 0 /\ i45^0-i45^post49 == 0 /\ n40^0-n40^post49 == 0 /\ -__const_256^post49+__const_256^0 == 0 /\ maxcode^0-maxcode^post49 == 0 /\ -tabort4^post49+tabort4^0 == 0 /\ -r_off32^post49+r_off32^0 == 0 /\ __const_9^0-__const_9^post49 == 0 /\ rat26^0-rat26^post49 == 0 /\ exit_stat^0-exit_stat^post49 == 0 /\ offset^0 <= 0 /\ -tmp___024^post49+tmp___024^0 == 0 /\ maxmaxcode^0-maxmaxcode^post49 == 0 /\ -block_compress^post49+block_compress^0 == 0 /\ -i29^post49+i29^0 == 0 /\ m130^0-m130^post49 == 0 /\ out_count^0-out_count^post49 == 0 /\ -i3^post49+i3^0 == 0 /\ -i41^post49+i41^0 == 0 /\ seed2^0-seed2^post49 == 0 /\ apsim_incnt^0-apsim_incnt^post49 == 0 /\ ret_getbyte25^0-ret_getbyte25^post49 == 0 /\ -incnt^post49+incnt^0 == 0 /\ count^0-count^post49 == 0 /\ offset^0-offset^post49 == 0 /\ __const_65536^0-__const_65536^post49 == 0 /\ __const_16^0-__const_16^post49 == 0 /\ -__const_429496^post49+__const_429496^0 == 0 /\ bits33^0-bits33^post49 == 0 /\ c37^0-c37^post49 == 0 /\ -__const_10000^post49+__const_10000^0 == 0 /\ -__const_2147483647^post49+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post49 == 0 /\ -n_bits^post49+n_bits^0 == 0 /\ -in_count^post49+in_count^0 == 0 /\ __const_257^0-__const_257^post49 == 0 /\ -__const_50^post49+__const_50^0 == 0 /\ ratio^0-ratio^post49 == 0 /\ checkpoint^0-checkpoint^post49 == 0 /\ i6^0-i6^post49 == 0 /\ -clear_flg^post49+clear_flg^0 == 0 /\ -hsize_reg10^post49+hsize_reg10^0 == 0 /\ m122^0-m122^post49 == 0 /\ -hsize___019^post49+hsize___019^0 == 0 /\ __const_8^0-__const_8^post49 == 0 /\ -tmp___017^post49+tmp___017^0 == 0 /\ -i21^post49+i21^0 == 0 /\ -hsize^post49+hsize^0 == 0 /\ tmp___115^0-tmp___115^post49 == 0 /\ -c7^post49+c7^0 == 0 /\ -bytes_out^post49+bytes_out^0 == 0 /\ __const_53^0-__const_53^post49 == 0), cost: 1
  49: l41 -> l21 : __const_10000^0'=__const_10000^post50, __const_16^0'=__const_16^post50, __const_2147483647^0'=__const_2147483647^post50, __const_256^0'=__const_256^post50, __const_257^0'=__const_257^post50, __const_429496^0'=__const_429496^post50, __const_50^0'=__const_50^post50, __const_53^0'=__const_53^post50, __const_65536^0'=__const_65536^post50, __const_8388607^0'=__const_8388607^post50, __const_8^0'=__const_8^post50, __const_9^0'=__const_9^post50, apsim_bound11113^0'=apsim_bound11113^post50, apsim_incnt^0'=apsim_incnt^post50, bits33^0'=bits33^post50, block_compress^0'=block_compress^post50, bytes_out^0'=bytes_out^post50, c37^0'=c37^post50, c7^0'=c7^post50, checkpoint^0'=checkpoint^post50, clear_flg^0'=clear_flg^post50, code31^0'=code31^post50, count^0'=count^post50, disp9^0'=disp9^post50, ent8^0'=ent8^post50, exit_stat^0'=exit_stat^post50, fcode5^0'=fcode5^post50, free_ent^0'=free_ent^post50, hshift11^0'=hshift11^post50, hsize^0'=hsize^post50, hsize___019^0'=hsize___019^post50, hsize___027^0'=hsize___027^post50, hsize_reg10^0'=hsize_reg10^post50, i21^0'=i21^post50, i29^0'=i29^post50, i3^0'=i3^post50, i41^0'=i41^post50, i45^0'=i45^post50, i6^0'=i6^post50, in_count^0'=in_count^post50, incnt^0'=incnt^post50, m122^0'=m122^post50, m130^0'=m130^post50, maxbits^0'=maxbits^post50, maxcode^0'=maxcode^post50, maxmaxcode^0'=maxmaxcode^post50, n40^0'=n40^post50, n44^0'=n44^post50, n_bits^0'=n_bits^post50, offset^0'=offset^post50, out_count^0'=out_count^post50, r_off32^0'=r_off32^post50, rat26^0'=rat26^post50, ratio^0'=ratio^post50, ret_getbyte18^0'=ret_getbyte18^post50, ret_getbyte25^0'=ret_getbyte25^post50, seed2^0'=seed2^post50, tabort4^0'=tabort4^post50, tmp12^0'=tmp12^post50, tmp___014^0'=tmp___014^post50, tmp___017^0'=tmp___017^post50, tmp___024^0'=tmp___024^post50, tmp___115^0'=tmp___115^post50, (-__const_65536^post50+__const_65536^0 == 0 /\ -block_compress^post50+block_compress^0 == 0 /\ -clear_flg^post50+clear_flg^0 == 0 /\ -hsize___019^post50+hsize___019^0 == 0 /\ -__const_429496^post50+__const_429496^0 == 0 /\ -c7^post50+c7^0 == 0 /\ -maxbits^post50+maxbits^0 == 0 /\ -m130^post50+m130^0 == 0 /\ __const_8388607^0-__const_8388607^post50 == 0 /\ -i45^post50+i45^0 == 0 /\ -maxmaxcode^post50+maxmaxcode^0 == 0 /\ -i21^post50+i21^0 == 0 /\ __const_50^0-__const_50^post50 == 0 /\ hshift11^0-hshift11^post50 == 0 /\ n44^0-n44^post50 == 0 /\ -incnt^post50+incnt^0 == 0 /\ i41^post50 == 0 /\ apsim_bound11113^0-apsim_bound11113^post50 == 0 /\ hsize^0-hsize^post50 == 0 /\ -ret_getbyte18^post50+ret_getbyte18^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post50 == 0 /\ __const_9^0-__const_9^post50 == 0 /\ __const_16^0-__const_16^post50 == 0 /\ -__const_10000^post50+__const_10000^0 == 0 /\ tmp___115^0-tmp___115^post50 == 0 /\ rat26^0-rat26^post50 == 0 /\ -in_count^post50+in_count^0 == 0 /\ -__const_8^post50+__const_8^0 == 0 /\ -__const_2147483647^post50+__const_2147483647^0 == 0 /\ bytes_out^0-bytes_out^post50 == 0 /\ -seed2^post50+seed2^0 == 0 /\ bits33^0-bits33^post50 == 0 /\ -tmp___014^post50+tmp___014^0 == 0 /\ -fcode5^post50+fcode5^0 == 0 /\ -disp9^post50+disp9^0 == 0 /\ -free_ent^post50+free_ent^0 == 0 /\ -ent8^post50+ent8^0 == 0 /\ -tabort4^post50+tabort4^0 == 0 /\ -hsize_reg10^post50+hsize_reg10^0 == 0 /\ i6^0-i6^post50 == 0 /\ c37^0-c37^post50 == 0 /\ -n_bits^post50+n_bits^0 == 0 /\ __const_257^0-__const_257^post50 == 0 /\ apsim_incnt^0-apsim_incnt^post50 == 0 /\ out_count^0-out_count^post50 == 0 /\ tmp___017^0-tmp___017^post50 == 0 /\ n40^post50-n_bits^0 == 0 /\ m122^0-m122^post50 == 0 /\ -code31^post50+code31^0 == 0 /\ maxcode^0-maxcode^post50 == 0 /\ exit_stat^0-exit_stat^post50 == 0 /\ -r_off32^post50+r_off32^0 == 0 /\ count^0-count^post50 == 0 /\ 1-offset^0 <= 0 /\ -tmp___024^post50+tmp___024^0 == 0 /\ -ratio^post50+ratio^0 == 0 /\ i3^0-i3^post50 == 0 /\ offset^0-offset^post50 == 0 /\ hsize___027^0-hsize___027^post50 == 0 /\ __const_53^0-__const_53^post50 == 0 /\ -i29^post50+i29^0 == 0 /\ tmp12^0-tmp12^post50 == 0 /\ -__const_256^post50+__const_256^0 == 0 /\ checkpoint^0-checkpoint^post50 == 0), cost: 1
  50: l42 -> l27 : __const_10000^0'=__const_10000^post51, __const_16^0'=__const_16^post51, __const_2147483647^0'=__const_2147483647^post51, __const_256^0'=__const_256^post51, __const_257^0'=__const_257^post51, __const_429496^0'=__const_429496^post51, __const_50^0'=__const_50^post51, __const_53^0'=__const_53^post51, __const_65536^0'=__const_65536^post51, __const_8388607^0'=__const_8388607^post51, __const_8^0'=__const_8^post51, __const_9^0'=__const_9^post51, apsim_bound11113^0'=apsim_bound11113^post51, apsim_incnt^0'=apsim_incnt^post51, bits33^0'=bits33^post51, block_compress^0'=block_compress^post51, bytes_out^0'=bytes_out^post51, c37^0'=c37^post51, c7^0'=c7^post51, checkpoint^0'=checkpoint^post51, clear_flg^0'=clear_flg^post51, code31^0'=code31^post51, count^0'=count^post51, disp9^0'=disp9^post51, ent8^0'=ent8^post51, exit_stat^0'=exit_stat^post51, fcode5^0'=fcode5^post51, free_ent^0'=free_ent^post51, hshift11^0'=hshift11^post51, hsize^0'=hsize^post51, hsize___019^0'=hsize___019^post51, hsize___027^0'=hsize___027^post51, hsize_reg10^0'=hsize_reg10^post51, i21^0'=i21^post51, i29^0'=i29^post51, i3^0'=i3^post51, i41^0'=i41^post51, i45^0'=i45^post51, i6^0'=i6^post51, in_count^0'=in_count^post51, incnt^0'=incnt^post51, m122^0'=m122^post51, m130^0'=m130^post51, maxbits^0'=maxbits^post51, maxcode^0'=maxcode^post51, maxmaxcode^0'=maxmaxcode^post51, n40^0'=n40^post51, n44^0'=n44^post51, n_bits^0'=n_bits^post51, offset^0'=offset^post51, out_count^0'=out_count^post51, r_off32^0'=r_off32^post51, rat26^0'=rat26^post51, ratio^0'=ratio^post51, ret_getbyte18^0'=ret_getbyte18^post51, ret_getbyte25^0'=ret_getbyte25^post51, seed2^0'=seed2^post51, tabort4^0'=tabort4^post51, tmp12^0'=tmp12^post51, tmp___014^0'=tmp___014^post51, tmp___017^0'=tmp___017^post51, tmp___024^0'=tmp___024^post51, tmp___115^0'=tmp___115^post51, (tmp___014^0-tmp___014^post51 == 0 /\ -r_off32^post51+r_off32^0 == 0 /\ -tabort4^post51+tabort4^0 == 0 /\ __const_16^0-__const_16^post51 == 0 /\ __const_50^0-__const_50^post51 == 0 /\ -__const_2147483647^post51+__const_2147483647^0 == 0 /\ -n_bits^post51+n_bits^0 == 0 /\ __const_53^0-__const_53^post51 == 0 /\ bytes_out^0-bytes_out^post51 == 0 /\ tmp___115^0-tmp___115^post51 == 0 /\ rat26^0-rat26^post51 == 0 /\ count^0-count^post51 == 0 /\ -__const_8^post51+__const_8^0 == 0 /\ tmp12^0-tmp12^post51 == 0 /\ -__const_10000^post51+__const_10000^0 == 0 /\ -block_compress^post51+block_compress^0 == 0 /\ -tmp___017^post51+tmp___017^0 == 0 /\ -tmp___024^post51+tmp___024^0 == 0 /\ -hsize^post51+hsize^0 == 0 /\ __const_256^0-__const_256^post51 == 0 /\ -incnt^post51+incnt^0 == 0 /\ m122^0-m122^post51 == 0 /\ hshift11^0-hshift11^post51 == 0 /\ -apsim_incnt^post51+apsim_incnt^0 == 0 /\ c37^0-c37^post51 == 0 /\ out_count^0-out_count^post51 == 0 /\ -ent8^post51+ent8^0 == 0 /\ -__const_65536^post51+__const_65536^0 == 0 /\ -i29^post51+i29^0 == 0 /\ -n40^post51+n40^0 == 0 /\ -m130^post51+m130^0 == 0 /\ -i41^post51+i41^0 == 0 /\ offset^0-offset^post51 == 0 /\ exit_stat^0-exit_stat^post51 == 0 /\ fcode5^0-fcode5^post51 == 0 /\ apsim_bound11113^0-apsim_bound11113^post51 == 0 /\ maxcode^0-maxcode^post51 == 0 /\ -in_count^post51+in_count^0 == 0 /\ -__const_9^post51+__const_9^0 == 0 /\ -i21^post51+i21^0 == 0 /\ i3^0-i3^post51 == 0 /\ __const_257^0-__const_257^post51 == 0 /\ -__const_8388607^post51+__const_8388607^0 == 0 /\ -c7^post51+c7^0 == 0 /\ -clear_flg^post51+clear_flg^0 == 0 /\ checkpoint^0-checkpoint^post51 == 0 /\ ret_getbyte25^0-ret_getbyte25^post51 == 0 /\ maxmaxcode^0-maxmaxcode^post51 == 0 /\ hsize___027^0-hsize___027^post51 == 0 /\ i6^0-i6^post51 == 0 /\ -ret_getbyte18^post51+ret_getbyte18^0 == 0 /\ -hsize___019^post51+hsize___019^0 == 0 /\ n44^0-n44^post51 == 0 /\ bits33^0-bits33^post51 == 0 /\ -disp9^post51+disp9^0 == 0 /\ -code31^post51+code31^0 == 0 /\ -__const_429496^post51+__const_429496^0 == 0 /\ -i45^post51+i45^0 == 0 /\ seed2^0-seed2^post51 == 0 /\ ratio^0-ratio^post51 == 0 /\ clear_flg^0 <= 0 /\ hsize_reg10^0-hsize_reg10^post51 == 0 /\ -maxbits^post51+maxbits^0 == 0 /\ -free_ent^post51+free_ent^0 == 0), cost: 1
  51: l42 -> l41 : __const_10000^0'=__const_10000^post52, __const_16^0'=__const_16^post52, __const_2147483647^0'=__const_2147483647^post52, __const_256^0'=__const_256^post52, __const_257^0'=__const_257^post52, __const_429496^0'=__const_429496^post52, __const_50^0'=__const_50^post52, __const_53^0'=__const_53^post52, __const_65536^0'=__const_65536^post52, __const_8388607^0'=__const_8388607^post52, __const_8^0'=__const_8^post52, __const_9^0'=__const_9^post52, apsim_bound11113^0'=apsim_bound11113^post52, apsim_incnt^0'=apsim_incnt^post52, bits33^0'=bits33^post52, block_compress^0'=block_compress^post52, bytes_out^0'=bytes_out^post52, c37^0'=c37^post52, c7^0'=c7^post52, checkpoint^0'=checkpoint^post52, clear_flg^0'=clear_flg^post52, code31^0'=code31^post52, count^0'=count^post52, disp9^0'=disp9^post52, ent8^0'=ent8^post52, exit_stat^0'=exit_stat^post52, fcode5^0'=fcode5^post52, free_ent^0'=free_ent^post52, hshift11^0'=hshift11^post52, hsize^0'=hsize^post52, hsize___019^0'=hsize___019^post52, hsize___027^0'=hsize___027^post52, hsize_reg10^0'=hsize_reg10^post52, i21^0'=i21^post52, i29^0'=i29^post52, i3^0'=i3^post52, i41^0'=i41^post52, i45^0'=i45^post52, i6^0'=i6^post52, in_count^0'=in_count^post52, incnt^0'=incnt^post52, m122^0'=m122^post52, m130^0'=m130^post52, maxbits^0'=maxbits^post52, maxcode^0'=maxcode^post52, maxmaxcode^0'=maxmaxcode^post52, n40^0'=n40^post52, n44^0'=n44^post52, n_bits^0'=n_bits^post52, offset^0'=offset^post52, out_count^0'=out_count^post52, r_off32^0'=r_off32^post52, rat26^0'=rat26^post52, ratio^0'=ratio^post52, ret_getbyte18^0'=ret_getbyte18^post52, ret_getbyte25^0'=ret_getbyte25^post52, seed2^0'=seed2^post52, tabort4^0'=tabort4^post52, tmp12^0'=tmp12^post52, tmp___014^0'=tmp___014^post52, tmp___017^0'=tmp___017^post52, tmp___024^0'=tmp___024^post52, tmp___115^0'=tmp___115^post52, (hshift11^0-hshift11^post52 == 0 /\ -i21^post52+i21^0 == 0 /\ tmp___115^0-tmp___115^post52 == 0 /\ __const_8388607^0-__const_8388607^post52 == 0 /\ -in_count^post52+in_count^0 == 0 /\ -c7^post52+c7^0 == 0 /\ -__const_10000^post52+__const_10000^0 == 0 /\ free_ent^0-free_ent^post52 == 0 /\ -clear_flg^post52+clear_flg^0 == 0 /\ rat26^0-rat26^post52 == 0 /\ -hsize___019^post52+hsize___019^0 == 0 /\ __const_16^0-__const_16^post52 == 0 /\ exit_stat^0-exit_stat^post52 == 0 /\ __const_9^0-__const_9^post52 == 0 /\ maxcode^0-maxcode^post52 == 0 /\ apsim_bound11113^0-apsim_bound11113^post52 == 0 /\ -disp9^post52+disp9^0 == 0 /\ -ret_getbyte18^post52+ret_getbyte18^0 == 0 /\ -__const_429496^post52+__const_429496^0 == 0 /\ -r_off32^post52+r_off32^0 == 0 /\ maxmaxcode^0-maxmaxcode^post52 == 0 /\ -code31^post52+code31^0 == 0 /\ -maxbits^post52+maxbits^0 == 0 /\ -i45^post52+i45^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post52 == 0 /\ m122^0-m122^post52 == 0 /\ c37^0-c37^post52 == 0 /\ out_count^0-out_count^post52 == 0 /\ -tmp___017^post52+tmp___017^0 == 0 /\ -tmp___024^post52+tmp___024^0 == 0 /\ bits33^0-bits33^post52 == 0 /\ -__const_256^post52+__const_256^0 == 0 /\ -__const_8^post52+__const_8^0 == 0 /\ -bytes_out^post52+bytes_out^0 == 0 /\ -block_compress^post52+block_compress^0 == 0 /\ n44^0-n44^post52 == 0 /\ -__const_2147483647^post52+__const_2147483647^0 == 0 /\ -seed2^post52+seed2^0 == 0 /\ offset^0-offset^post52 == 0 /\ n_bits^0-n_bits^post52 == 0 /\ -tabort4^post52+tabort4^0 == 0 /\ apsim_incnt^0-apsim_incnt^post52 == 0 /\ -incnt^post52+incnt^0 == 0 /\ hsize_reg10^0-hsize_reg10^post52 == 0 /\ -ent8^post52+ent8^0 == 0 /\ tmp___014^0-tmp___014^post52 == 0 /\ -hsize^post52+hsize^0 == 0 /\ ratio^0-ratio^post52 == 0 /\ checkpoint^0-checkpoint^post52 == 0 /\ i6^0-i6^post52 == 0 /\ __const_257^0-__const_257^post52 == 0 /\ -__const_50^post52+__const_50^0 == 0 /\ 1-clear_flg^0 <= 0 /\ -__const_65536^post52+__const_65536^0 == 0 /\ i3^0-i3^post52 == 0 /\ count^0-count^post52 == 0 /\ -i29^post52+i29^0 == 0 /\ __const_53^0-__const_53^post52 == 0 /\ -m130^post52+m130^0 == 0 /\ -n40^post52+n40^0 == 0 /\ tmp12^0-tmp12^post52 == 0 /\ hsize___027^0-hsize___027^post52 == 0 /\ -fcode5^post52+fcode5^0 == 0 /\ -i41^post52+i41^0 == 0), cost: 1
  52: l43 -> l42 : __const_10000^0'=__const_10000^post53, __const_16^0'=__const_16^post53, __const_2147483647^0'=__const_2147483647^post53, __const_256^0'=__const_256^post53, __const_257^0'=__const_257^post53, __const_429496^0'=__const_429496^post53, __const_50^0'=__const_50^post53, __const_53^0'=__const_53^post53, __const_65536^0'=__const_65536^post53, __const_8388607^0'=__const_8388607^post53, __const_8^0'=__const_8^post53, __const_9^0'=__const_9^post53, apsim_bound11113^0'=apsim_bound11113^post53, apsim_incnt^0'=apsim_incnt^post53, bits33^0'=bits33^post53, block_compress^0'=block_compress^post53, bytes_out^0'=bytes_out^post53, c37^0'=c37^post53, c7^0'=c7^post53, checkpoint^0'=checkpoint^post53, clear_flg^0'=clear_flg^post53, code31^0'=code31^post53, count^0'=count^post53, disp9^0'=disp9^post53, ent8^0'=ent8^post53, exit_stat^0'=exit_stat^post53, fcode5^0'=fcode5^post53, free_ent^0'=free_ent^post53, hshift11^0'=hshift11^post53, hsize^0'=hsize^post53, hsize___019^0'=hsize___019^post53, hsize___027^0'=hsize___027^post53, hsize_reg10^0'=hsize_reg10^post53, i21^0'=i21^post53, i29^0'=i29^post53, i3^0'=i3^post53, i41^0'=i41^post53, i45^0'=i45^post53, i6^0'=i6^post53, in_count^0'=in_count^post53, incnt^0'=incnt^post53, m122^0'=m122^post53, m130^0'=m130^post53, maxbits^0'=maxbits^post53, maxcode^0'=maxcode^post53, maxmaxcode^0'=maxmaxcode^post53, n40^0'=n40^post53, n44^0'=n44^post53, n_bits^0'=n_bits^post53, offset^0'=offset^post53, out_count^0'=out_count^post53, r_off32^0'=r_off32^post53, rat26^0'=rat26^post53, ratio^0'=ratio^post53, ret_getbyte18^0'=ret_getbyte18^post53, ret_getbyte25^0'=ret_getbyte25^post53, seed2^0'=seed2^post53, tabort4^0'=tabort4^post53, tmp12^0'=tmp12^post53, tmp___014^0'=tmp___014^post53, tmp___017^0'=tmp___017^post53, tmp___024^0'=tmp___024^post53, tmp___115^0'=tmp___115^post53, (-i29^post53+i29^0 == 0 /\ -__const_8^post53+__const_8^0 == 0 /\ -apsim_incnt^post53+apsim_incnt^0 == 0 /\ -offset^post53+offset^0 == 0 /\ -i41^post53+i41^0 == 0 /\ -incnt^post53+incnt^0 == 0 /\ __const_50^0-__const_50^post53 == 0 /\ -i45^post53+i45^0 == 0 /\ free_ent^0-maxcode^0 <= 0 /\ __const_16^0-__const_16^post53 == 0 /\ __const_53^0-__const_53^post53 == 0 /\ -__const_429496^post53+__const_429496^0 == 0 /\ -m130^post53+m130^0 == 0 /\ -block_compress^post53+block_compress^0 == 0 /\ -in_count^post53+in_count^0 == 0 /\ -__const_2147483647^post53+__const_2147483647^0 == 0 /\ -c7^post53+c7^0 == 0 /\ hshift11^0-hshift11^post53 == 0 /\ -clear_flg^post53+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post53 == 0 /\ -n40^post53+n40^0 == 0 /\ m122^0-m122^post53 == 0 /\ -__const_65536^post53+__const_65536^0 == 0 /\ -seed2^post53+seed2^0 == 0 /\ -hsize^post53+hsize^0 == 0 /\ tmp___115^0-tmp___115^post53 == 0 /\ apsim_bound11113^0-apsim_bound11113^post53 == 0 /\ tmp12^0-tmp12^post53 == 0 /\ maxcode^0-maxcode^post53 == 0 /\ __const_257^0-__const_257^post53 == 0 /\ -__const_8388607^post53+__const_8388607^0 == 0 /\ -code31^post53+code31^0 == 0 /\ rat26^0-rat26^post53 == 0 /\ n_bits^0-n_bits^post53 == 0 /\ checkpoint^0-checkpoint^post53 == 0 /\ i6^0-i6^post53 == 0 /\ hsize_reg10^0-hsize_reg10^post53 == 0 /\ exit_stat^0-exit_stat^post53 == 0 /\ c37^0-c37^post53 == 0 /\ -fcode5^post53+fcode5^0 == 0 /\ hsize___027^0-hsize___027^post53 == 0 /\ tmp___017^0-tmp___017^post53 == 0 /\ -ratio^post53+ratio^0 == 0 /\ -disp9^post53+disp9^0 == 0 /\ bits33^0-bits33^post53 == 0 /\ maxmaxcode^0-maxmaxcode^post53 == 0 /\ -ent8^post53+ent8^0 == 0 /\ -ret_getbyte18^post53+ret_getbyte18^0 == 0 /\ -maxbits^post53+maxbits^0 == 0 /\ -__const_256^post53+__const_256^0 == 0 /\ -bytes_out^post53+bytes_out^0 == 0 /\ -__const_9^post53+__const_9^0 == 0 /\ out_count^0-out_count^post53 == 0 /\ -tmp___014^post53+tmp___014^0 == 0 /\ -r_off32^post53+r_off32^0 == 0 /\ -tabort4^post53+tabort4^0 == 0 /\ -free_ent^post53+free_ent^0 == 0 /\ count^0-count^post53 == 0 /\ -i21^post53+i21^0 == 0 /\ i3^0-i3^post53 == 0 /\ __const_10000^0-__const_10000^post53 == 0 /\ -tmp___024^post53+tmp___024^0 == 0 /\ -hsize___019^post53+hsize___019^0 == 0 /\ n44^0-n44^post53 == 0), cost: 1
  53: l43 -> l41 : __const_10000^0'=__const_10000^post54, __const_16^0'=__const_16^post54, __const_2147483647^0'=__const_2147483647^post54, __const_256^0'=__const_256^post54, __const_257^0'=__const_257^post54, __const_429496^0'=__const_429496^post54, __const_50^0'=__const_50^post54, __const_53^0'=__const_53^post54, __const_65536^0'=__const_65536^post54, __const_8388607^0'=__const_8388607^post54, __const_8^0'=__const_8^post54, __const_9^0'=__const_9^post54, apsim_bound11113^0'=apsim_bound11113^post54, apsim_incnt^0'=apsim_incnt^post54, bits33^0'=bits33^post54, block_compress^0'=block_compress^post54, bytes_out^0'=bytes_out^post54, c37^0'=c37^post54, c7^0'=c7^post54, checkpoint^0'=checkpoint^post54, clear_flg^0'=clear_flg^post54, code31^0'=code31^post54, count^0'=count^post54, disp9^0'=disp9^post54, ent8^0'=ent8^post54, exit_stat^0'=exit_stat^post54, fcode5^0'=fcode5^post54, free_ent^0'=free_ent^post54, hshift11^0'=hshift11^post54, hsize^0'=hsize^post54, hsize___019^0'=hsize___019^post54, hsize___027^0'=hsize___027^post54, hsize_reg10^0'=hsize_reg10^post54, i21^0'=i21^post54, i29^0'=i29^post54, i3^0'=i3^post54, i41^0'=i41^post54, i45^0'=i45^post54, i6^0'=i6^post54, in_count^0'=in_count^post54, incnt^0'=incnt^post54, m122^0'=m122^post54, m130^0'=m130^post54, maxbits^0'=maxbits^post54, maxcode^0'=maxcode^post54, maxmaxcode^0'=maxmaxcode^post54, n40^0'=n40^post54, n44^0'=n44^post54, n_bits^0'=n_bits^post54, offset^0'=offset^post54, out_count^0'=out_count^post54, r_off32^0'=r_off32^post54, rat26^0'=rat26^post54, ratio^0'=ratio^post54, ret_getbyte18^0'=ret_getbyte18^post54, ret_getbyte25^0'=ret_getbyte25^post54, seed2^0'=seed2^post54, tabort4^0'=tabort4^post54, tmp12^0'=tmp12^post54, tmp___014^0'=tmp___014^post54, tmp___017^0'=tmp___017^post54, tmp___024^0'=tmp___024^post54, tmp___115^0'=tmp___115^post54, (count^0-count^post54 == 0 /\ -ent8^post54+ent8^0 == 0 /\ -seed2^post54+seed2^0 == 0 /\ -free_ent^post54+free_ent^0 == 0 /\ __const_53^0-__const_53^post54 == 0 /\ -block_compress^post54+block_compress^0 == 0 /\ -i21^post54+i21^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post54 == 0 /\ m130^0-m130^post54 == 0 /\ disp9^0-disp9^post54 == 0 /\ -r_off32^post54+r_off32^0 == 0 /\ -code31^post54+code31^0 == 0 /\ -ratio^post54+ratio^0 == 0 /\ -tmp___024^post54+tmp___024^0 == 0 /\ i6^0-i6^post54 == 0 /\ tabort4^0-tabort4^post54 == 0 /\ hsize___027^0-hsize___027^post54 == 0 /\ __const_257^0-__const_257^post54 == 0 /\ -offset^post54+offset^0 == 0 /\ -c7^post54+c7^0 == 0 /\ -apsim_incnt^post54+apsim_incnt^0 == 0 /\ m122^0-m122^post54 == 0 /\ c37^0-c37^post54 == 0 /\ bytes_out^0-bytes_out^post54 == 0 /\ __const_50^0-__const_50^post54 == 0 /\ hshift11^0-hshift11^post54 == 0 /\ -tmp___014^post54+tmp___014^0 == 0 /\ 1-free_ent^0+maxcode^0 <= 0 /\ __const_256^0-__const_256^post54 == 0 /\ maxmaxcode^0-maxmaxcode^post54 == 0 /\ apsim_bound11113^0-apsim_bound11113^post54 == 0 /\ -__const_16^post54+__const_16^0 == 0 /\ -clear_flg^post54+clear_flg^0 == 0 /\ -__const_2147483647^post54+__const_2147483647^0 == 0 /\ i3^0-i3^post54 == 0 /\ -hsize___019^post54+hsize___019^0 == 0 /\ out_count^0-out_count^post54 == 0 /\ -hsize_reg10^post54+hsize_reg10^0 == 0 /\ -__const_429496^post54+__const_429496^0 == 0 /\ -maxbits^post54+maxbits^0 == 0 /\ -n40^post54+n40^0 == 0 /\ -i45^post54+i45^0 == 0 /\ -i41^post54+i41^0 == 0 /\ rat26^0-rat26^post54 == 0 /\ -hsize^post54+hsize^0 == 0 /\ tmp12^0-tmp12^post54 == 0 /\ fcode5^0-fcode5^post54 == 0 /\ -__const_9^post54+__const_9^0 == 0 /\ -__const_65536^post54+__const_65536^0 == 0 /\ checkpoint^0-checkpoint^post54 == 0 /\ -incnt^post54+incnt^0 == 0 /\ __const_10000^0-__const_10000^post54 == 0 /\ bits33^0-bits33^post54 == 0 /\ n44^0-n44^post54 == 0 /\ -tmp___115^post54+tmp___115^0 == 0 /\ -ret_getbyte18^post54+ret_getbyte18^0 == 0 /\ -i29^post54+i29^0 == 0 /\ n_bits^0-n_bits^post54 == 0 /\ tmp___017^0-tmp___017^post54 == 0 /\ -in_count^post54+in_count^0 == 0 /\ exit_stat^0-exit_stat^post54 == 0 /\ -__const_8388607^post54+__const_8388607^0 == 0 /\ maxcode^0-maxcode^post54 == 0 /\ -__const_8^post54+__const_8^0 == 0), cost: 1
  54: l44 -> l43 : __const_10000^0'=__const_10000^post55, __const_16^0'=__const_16^post55, __const_2147483647^0'=__const_2147483647^post55, __const_256^0'=__const_256^post55, __const_257^0'=__const_257^post55, __const_429496^0'=__const_429496^post55, __const_50^0'=__const_50^post55, __const_53^0'=__const_53^post55, __const_65536^0'=__const_65536^post55, __const_8388607^0'=__const_8388607^post55, __const_8^0'=__const_8^post55, __const_9^0'=__const_9^post55, apsim_bound11113^0'=apsim_bound11113^post55, apsim_incnt^0'=apsim_incnt^post55, bits33^0'=bits33^post55, block_compress^0'=block_compress^post55, bytes_out^0'=bytes_out^post55, c37^0'=c37^post55, c7^0'=c7^post55, checkpoint^0'=checkpoint^post55, clear_flg^0'=clear_flg^post55, code31^0'=code31^post55, count^0'=count^post55, disp9^0'=disp9^post55, ent8^0'=ent8^post55, exit_stat^0'=exit_stat^post55, fcode5^0'=fcode5^post55, free_ent^0'=free_ent^post55, hshift11^0'=hshift11^post55, hsize^0'=hsize^post55, hsize___019^0'=hsize___019^post55, hsize___027^0'=hsize___027^post55, hsize_reg10^0'=hsize_reg10^post55, i21^0'=i21^post55, i29^0'=i29^post55, i3^0'=i3^post55, i41^0'=i41^post55, i45^0'=i45^post55, i6^0'=i6^post55, in_count^0'=in_count^post55, incnt^0'=incnt^post55, m122^0'=m122^post55, m130^0'=m130^post55, maxbits^0'=maxbits^post55, maxcode^0'=maxcode^post55, maxmaxcode^0'=maxmaxcode^post55, n40^0'=n40^post55, n44^0'=n44^post55, n_bits^0'=n_bits^post55, offset^0'=offset^post55, out_count^0'=out_count^post55, r_off32^0'=r_off32^post55, rat26^0'=rat26^post55, ratio^0'=ratio^post55, ret_getbyte18^0'=ret_getbyte18^post55, ret_getbyte25^0'=ret_getbyte25^post55, seed2^0'=seed2^post55, tabort4^0'=tabort4^post55, tmp12^0'=tmp12^post55, tmp___014^0'=tmp___014^post55, tmp___017^0'=tmp___017^post55, tmp___024^0'=tmp___024^post55, tmp___115^0'=tmp___115^post55, (m122^0-m122^post55 == 0 /\ -ratio^post55+ratio^0 == 0 /\ -n40^post55+n40^0 == 0 /\ offset^post55 == 0 /\ n44^0-n44^post55 == 0 /\ -apsim_bound11113^post55+apsim_bound11113^0 == 0 /\ -__const_9^post55+__const_9^0 == 0 /\ m130^0-m130^post55 == 0 /\ bytes_out^0-bytes_out^post55 == 0 /\ -__const_8388607^post55+__const_8388607^0 == 0 /\ -__const_16^post55+__const_16^0 == 0 /\ -__const_2147483647^post55+__const_2147483647^0 == 0 /\ i3^0-i3^post55 == 0 /\ i21^0-i21^post55 == 0 /\ apsim_incnt^0-apsim_incnt^post55 == 0 /\ -hsize_reg10^post55+hsize_reg10^0 == 0 /\ -n_bits^post55+n_bits^0 == 0 /\ in_count^0-in_count^post55 == 0 /\ -tmp___014^post55+tmp___014^0 == 0 /\ -ret_getbyte25^post55+ret_getbyte25^0 == 0 /\ clear_flg^0-clear_flg^post55 == 0 /\ -bits33^post55+bits33^0 == 0 /\ -hsize___019^post55+hsize___019^0 == 0 /\ __const_50^0-__const_50^post55 == 0 /\ -i45^post55+i45^0 == 0 /\ c37^0-c37^post55 == 0 /\ -free_ent^post55+free_ent^0 == 0 /\ -disp9^post55+disp9^0 == 0 /\ -code31^post55+code31^0 == 0 /\ __const_53^0-__const_53^post55 == 0 /\ __const_257^0-__const_257^post55 == 0 /\ count^0-count^post55 == 0 /\ -i29^post55+i29^0 == 0 /\ -__const_429496^post55+__const_429496^0 == 0 /\ -maxbits^post55+maxbits^0 == 0 /\ hsize___027^0-hsize___027^post55 == 0 /\ tmp___017^0-tmp___017^post55 == 0 /\ -tmp___024^post55+tmp___024^0 == 0 /\ i6^0-i6^post55 == 0 /\ -tmp___115^post55+tmp___115^0 == 0 /\ hshift11^0-hshift11^post55 == 0 /\ __const_8^0-__const_8^post55 == 0 /\ __const_10000^0-__const_10000^post55 == 0 /\ -c7^post55+c7^0 == 0 /\ checkpoint^0-checkpoint^post55 == 0 /\ -block_compress^post55+block_compress^0 == 0 /\ r_off32^0-r_off32^post55 == 0 /\ -hsize^post55+hsize^0 == 0 /\ out_count^0-out_count^post55 == 0 /\ -incnt^post55+incnt^0 == 0 /\ -rat26^post55+rat26^0 == 0 /\ exit_stat^0-exit_stat^post55 == 0 /\ tmp12^0-tmp12^post55 == 0 /\ fcode5^0-fcode5^post55 == 0 /\ maxcode^0-maxcode^post55 == 0 /\ -seed2^post55+seed2^0 == 0 /\ __const_256^0-__const_256^post55 == 0 /\ -ent8^post55+ent8^0 == 0 /\ -__const_65536^post55+__const_65536^0 == 0 /\ maxmaxcode^0-maxmaxcode^post55 == 0 /\ tabort4^0-tabort4^post55 == 0 /\ ret_getbyte18^0-ret_getbyte18^post55 == 0 /\ -i41^post55+i41^0 == 0), cost: 1
  55: l45 -> l19 : __const_10000^0'=__const_10000^post56, __const_16^0'=__const_16^post56, __const_2147483647^0'=__const_2147483647^post56, __const_256^0'=__const_256^post56, __const_257^0'=__const_257^post56, __const_429496^0'=__const_429496^post56, __const_50^0'=__const_50^post56, __const_53^0'=__const_53^post56, __const_65536^0'=__const_65536^post56, __const_8388607^0'=__const_8388607^post56, __const_8^0'=__const_8^post56, __const_9^0'=__const_9^post56, apsim_bound11113^0'=apsim_bound11113^post56, apsim_incnt^0'=apsim_incnt^post56, bits33^0'=bits33^post56, block_compress^0'=block_compress^post56, bytes_out^0'=bytes_out^post56, c37^0'=c37^post56, c7^0'=c7^post56, checkpoint^0'=checkpoint^post56, clear_flg^0'=clear_flg^post56, code31^0'=code31^post56, count^0'=count^post56, disp9^0'=disp9^post56, ent8^0'=ent8^post56, exit_stat^0'=exit_stat^post56, fcode5^0'=fcode5^post56, free_ent^0'=free_ent^post56, hshift11^0'=hshift11^post56, hsize^0'=hsize^post56, hsize___019^0'=hsize___019^post56, hsize___027^0'=hsize___027^post56, hsize_reg10^0'=hsize_reg10^post56, i21^0'=i21^post56, i29^0'=i29^post56, i3^0'=i3^post56, i41^0'=i41^post56, i45^0'=i45^post56, i6^0'=i6^post56, in_count^0'=in_count^post56, incnt^0'=incnt^post56, m122^0'=m122^post56, m130^0'=m130^post56, maxbits^0'=maxbits^post56, maxcode^0'=maxcode^post56, maxmaxcode^0'=maxmaxcode^post56, n40^0'=n40^post56, n44^0'=n44^post56, n_bits^0'=n_bits^post56, offset^0'=offset^post56, out_count^0'=out_count^post56, r_off32^0'=r_off32^post56, rat26^0'=rat26^post56, ratio^0'=ratio^post56, ret_getbyte18^0'=ret_getbyte18^post56, ret_getbyte25^0'=ret_getbyte25^post56, seed2^0'=seed2^post56, tabort4^0'=tabort4^post56, tmp12^0'=tmp12^post56, tmp___014^0'=tmp___014^post56, tmp___017^0'=tmp___017^post56, tmp___024^0'=tmp___024^post56, tmp___115^0'=tmp___115^post56, (-hsize___027^post56+hsize___027^0 == 0 /\ -hsize_reg10^post56+hsize_reg10^0 == 0 /\ -incnt^post56+incnt^0 == 0 /\ __const_8^0-__const_8^post56 == 0 /\ -r_off32^post56+r_off32^0 == 0 /\ -hsize^post56+hsize^0 == 0 /\ -m122^post56+m122^0 == 0 /\ __const_50^0-__const_50^post56 == 0 /\ __const_16^0-__const_16^post56 == 0 /\ -apsim_bound11113^post56+apsim_bound11113^0 == 0 /\ hshift11^0-hshift11^post56 == 0 /\ -__const_9^post56+__const_9^0 == 0 /\ -__const_65536^post56+__const_65536^0 == 0 /\ -__const_429496^post56+__const_429496^0 == 0 /\ -maxcode^post56+maxcode^0 == 0 /\ -i45^post56+i45^0 == 0 /\ rat26^0-rat26^post56 == 0 /\ maxmaxcode^0-maxmaxcode^post56 == 0 /\ code31^0-code31^post56 == 0 /\ ret_getbyte25^0-ret_getbyte25^post56 == 0 /\ -i29^post56+i29^0 == 0 /\ -tmp___115^post56+tmp___115^0 == 0 /\ __const_257^0-__const_257^post56 == 0 /\ free_ent^0-free_ent^post56 == 0 /\ -in_count^post56+in_count^0 == 0 /\ n40^0-n40^post56 == 0 /\ out_count^0-out_count^post56 == 0 /\ -__const_8388607^post56+__const_8388607^0 == 0 /\ -block_compress^post56+block_compress^0 == 0 /\ -__const_256^post56+__const_256^0 == 0 /\ -seed2^post56+seed2^0 == 0 /\ -n_bits^post56+n_bits^0 == 0 /\ offset^0-offset^post56 == 0 /\ i6^0-i6^post56 == 0 /\ bytes_out^0-bytes_out^post56 == 0 /\ -count^post56+count^0 == 0 /\ tmp12^0-tmp12^post56 == 0 /\ -disp9^post56+disp9^0 == 0 /\ maxbits^0-maxbits^post56 == 0 /\ ent8^0-ent8^post56 == 0 /\ -i3^post56+i3^0 == 0 /\ -i41^post56+i41^0 == 0 /\ i21^0-i21^post56 == 0 /\ tmp___017^0-tmp___017^post56 == 0 /\ tabort4^0-tabort4^post56 == 0 /\ exit_stat^0-exit_stat^post56 == 0 /\ -fcode5^post56+fcode5^0 == 0 /\ hsize___019^0-hsize___019^post56 == 0 /\ c37^0-c37^post56 == 0 /\ bits33^0-bits33^post56 == 0 /\ checkpoint^0-checkpoint^post56 == 0 /\ __const_53^0-__const_53^post56 == 0 /\ ret_getbyte18^0-ret_getbyte18^post56 == 0 /\ -tmp___024^post56+tmp___024^0 == 0 /\ apsim_incnt^0-apsim_incnt^post56 == 0 /\ -ratio^post56+ratio^0 == 0 /\ -clear_flg^post56+clear_flg^0 == 0 /\ -tmp___014^post56+tmp___014^0 == 0 /\ -__const_10000^post56+__const_10000^0 == 0 /\ -n44^post56+n44^0 == 0 /\ m130^0-m130^post56 == 0 /\ -__const_2147483647^post56+__const_2147483647^0 == 0 /\ -c7^post56+c7^0 == 0), cost: 1
  56: l45 -> l44 : __const_10000^0'=__const_10000^post57, __const_16^0'=__const_16^post57, __const_2147483647^0'=__const_2147483647^post57, __const_256^0'=__const_256^post57, __const_257^0'=__const_257^post57, __const_429496^0'=__const_429496^post57, __const_50^0'=__const_50^post57, __const_53^0'=__const_53^post57, __const_65536^0'=__const_65536^post57, __const_8388607^0'=__const_8388607^post57, __const_8^0'=__const_8^post57, __const_9^0'=__const_9^post57, apsim_bound11113^0'=apsim_bound11113^post57, apsim_incnt^0'=apsim_incnt^post57, bits33^0'=bits33^post57, block_compress^0'=block_compress^post57, bytes_out^0'=bytes_out^post57, c37^0'=c37^post57, c7^0'=c7^post57, checkpoint^0'=checkpoint^post57, clear_flg^0'=clear_flg^post57, code31^0'=code31^post57, count^0'=count^post57, disp9^0'=disp9^post57, ent8^0'=ent8^post57, exit_stat^0'=exit_stat^post57, fcode5^0'=fcode5^post57, free_ent^0'=free_ent^post57, hshift11^0'=hshift11^post57, hsize^0'=hsize^post57, hsize___019^0'=hsize___019^post57, hsize___027^0'=hsize___027^post57, hsize_reg10^0'=hsize_reg10^post57, i21^0'=i21^post57, i29^0'=i29^post57, i3^0'=i3^post57, i41^0'=i41^post57, i45^0'=i45^post57, i6^0'=i6^post57, in_count^0'=in_count^post57, incnt^0'=incnt^post57, m122^0'=m122^post57, m130^0'=m130^post57, maxbits^0'=maxbits^post57, maxcode^0'=maxcode^post57, maxmaxcode^0'=maxmaxcode^post57, n40^0'=n40^post57, n44^0'=n44^post57, n_bits^0'=n_bits^post57, offset^0'=offset^post57, out_count^0'=out_count^post57, r_off32^0'=r_off32^post57, rat26^0'=rat26^post57, ratio^0'=ratio^post57, ret_getbyte18^0'=ret_getbyte18^post57, ret_getbyte25^0'=ret_getbyte25^post57, seed2^0'=seed2^post57, tabort4^0'=tabort4^post57, tmp12^0'=tmp12^post57, tmp___014^0'=tmp___014^post57, tmp___017^0'=tmp___017^post57, tmp___024^0'=tmp___024^post57, tmp___115^0'=tmp___115^post57, (__const_65536^0-__const_65536^post57 == 0 /\ -clear_flg^post57+clear_flg^0 == 0 /\ -bytes_out^post57+bytes_out^0 == 0 /\ -c7^post57+c7^0 == 0 /\ -block_compress^post57+block_compress^0 == 0 /\ -tmp___014^post57+tmp___014^0 == 0 /\ -i21^post57+i21^0 == 0 /\ __const_53^0-__const_53^post57 == 0 /\ m130^0-m130^post57 == 0 /\ -seed2^post57+seed2^0 == 0 /\ -tmp___024^post57+tmp___024^0 == 0 /\ -tmp___115^post57+tmp___115^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post57 == 0 /\ __const_8^0-__const_8^post57 == 0 /\ i29^0-i29^post57 == 0 /\ -code31^post57+code31^0 == 0 /\ hsize___027^0-hsize___027^post57 == 0 /\ rat26^0-rat26^post57 == 0 /\ -incnt^post57+incnt^0 == 0 /\ -n44^post57+n44^0 == 0 /\ tabort4^0-tabort4^post57 == 0 /\ __const_257^0-__const_257^post57 == 0 /\ -count^post57+count^0 == 0 /\ hsize___019^0-hsize___019^post57 == 0 /\ -fcode5^post57+fcode5^0 == 0 /\ free_ent^0-free_ent^post57 == 0 /\ hshift11^0-hshift11^post57 == 0 /\ -i3^post57+i3^0 == 0 /\ -r_off32^post57+r_off32^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post57 == 0 /\ out_count^0-out_count^post57 == 0 /\ c37^0-c37^post57 == 0 /\ -i6^post57+i6^0 == 0 /\ -maxcode^post57+maxcode^0 == 0 /\ -in_count^post57+in_count^0 == 0 /\ -apsim_bound11113^post57+apsim_bound11113^0 == 0 /\ -__const_50^post57+__const_50^0 == 0 /\ tmp___017^0-tmp___017^post57 == 0 /\ maxmaxcode^0-maxmaxcode^post57 == 0 /\ -__const_256^post57+__const_256^0 == 0 /\ -__const_2147483647^post57+__const_2147483647^0 == 0 /\ i45^0-i45^post57 == 0 /\ tmp12^0-tmp12^post57 == 0 /\ -hsize_reg10^post57+hsize_reg10^0 == 0 /\ offset^0-offset^post57 == 0 /\ -hsize^post57+hsize^0 == 0 /\ __const_429496^0-__const_429496^post57 == 0 /\ n40^0-n40^post57 == 0 /\ -__const_10000^post57+__const_10000^0 == 0 /\ __const_9^0-__const_9^post57 == 0 /\ -m122^post57+m122^0 == 0 /\ maxbits^0-maxbits^post57 == 0 /\ -__const_8388607^post57+__const_8388607^0 == 0 /\ ratio^0-ratio^post57 == 0 /\ __const_16^0-__const_16^post57 == 0 /\ bits33^0-bits33^post57 == 0 /\ -n_bits^post57+n_bits^0 == 0 /\ ent8^0-ent8^post57 == 0 /\ -disp9^post57+disp9^0 == 0 /\ apsim_incnt^0-apsim_incnt^post57 == 0 /\ -exit_stat^post57+exit_stat^0 == 0 /\ checkpoint^0-checkpoint^post57 == 0 /\ -i41^post57+i41^0 == 0), cost: 1
  60: l46 -> l19 : __const_10000^0'=__const_10000^post61, __const_16^0'=__const_16^post61, __const_2147483647^0'=__const_2147483647^post61, __const_256^0'=__const_256^post61, __const_257^0'=__const_257^post61, __const_429496^0'=__const_429496^post61, __const_50^0'=__const_50^post61, __const_53^0'=__const_53^post61, __const_65536^0'=__const_65536^post61, __const_8388607^0'=__const_8388607^post61, __const_8^0'=__const_8^post61, __const_9^0'=__const_9^post61, apsim_bound11113^0'=apsim_bound11113^post61, apsim_incnt^0'=apsim_incnt^post61, bits33^0'=bits33^post61, block_compress^0'=block_compress^post61, bytes_out^0'=bytes_out^post61, c37^0'=c37^post61, c7^0'=c7^post61, checkpoint^0'=checkpoint^post61, clear_flg^0'=clear_flg^post61, code31^0'=code31^post61, count^0'=count^post61, disp9^0'=disp9^post61, ent8^0'=ent8^post61, exit_stat^0'=exit_stat^post61, fcode5^0'=fcode5^post61, free_ent^0'=free_ent^post61, hshift11^0'=hshift11^post61, hsize^0'=hsize^post61, hsize___019^0'=hsize___019^post61, hsize___027^0'=hsize___027^post61, hsize_reg10^0'=hsize_reg10^post61, i21^0'=i21^post61, i29^0'=i29^post61, i3^0'=i3^post61, i41^0'=i41^post61, i45^0'=i45^post61, i6^0'=i6^post61, in_count^0'=in_count^post61, incnt^0'=incnt^post61, m122^0'=m122^post61, m130^0'=m130^post61, maxbits^0'=maxbits^post61, maxcode^0'=maxcode^post61, maxmaxcode^0'=maxmaxcode^post61, n40^0'=n40^post61, n44^0'=n44^post61, n_bits^0'=n_bits^post61, offset^0'=offset^post61, out_count^0'=out_count^post61, r_off32^0'=r_off32^post61, rat26^0'=rat26^post61, ratio^0'=ratio^post61, ret_getbyte18^0'=ret_getbyte18^post61, ret_getbyte25^0'=ret_getbyte25^post61, seed2^0'=seed2^post61, tabort4^0'=tabort4^post61, tmp12^0'=tmp12^post61, tmp___014^0'=tmp___014^post61, tmp___017^0'=tmp___017^post61, tmp___024^0'=tmp___024^post61, tmp___115^0'=tmp___115^post61, (-disp9^post61+disp9^0 == 0 /\ hsize___027^0-hsize___027^post61 == 0 /\ -exit_stat^post61+exit_stat^0 == 0 /\ -apsim_bound11113^post61+apsim_bound11113^0 == 0 /\ -__const_10000^post61+__const_10000^0 == 0 /\ i29^0-i29^post61 == 0 /\ -maxbits^post61+maxbits^0 == 0 /\ -__const_256^post61+__const_256^0 == 0 /\ n44^0-n44^post61 == 0 /\ -n40^post61+n40^0 == 0 /\ __const_257^0-__const_257^post61 == 0 /\ bits33^post61-n_bits^0 == 0 /\ bytes_out^post61-bytes_out^0-bits33^post61 == 0 /\ -hsize_reg10^post61+hsize_reg10^0 == 0 /\ maxcode^0-maxcode^post61 == 0 /\ apsim_incnt^0-apsim_incnt^post61 == 0 /\ -hsize^post61+hsize^0 == 0 /\ -hsize___019^post61+hsize___019^0 == 0 /\ -i41^post61+i41^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post61 == 0 /\ -seed2^post61+seed2^0 == 0 /\ c37^0-c37^post61 == 0 /\ tmp___014^0-tmp___014^post61 == 0 /\ -n_bits^post61+n_bits^0 == 0 /\ -incnt^post61+incnt^0 == 0 /\ i45^0-i45^post61 == 0 /\ m130^0-m130^post61 == 0 /\ code31^0-code31^post61 == 0 /\ tmp12^0-tmp12^post61 == 0 /\ c7^0-c7^post61 == 0 /\ -count^post61+count^0 == 0 /\ -__const_50^post61+__const_50^0 == 0 /\ __const_65536^0-__const_65536^post61 == 0 /\ -block_compress^post61+block_compress^0 == 0 /\ -checkpoint^post61+checkpoint^0 == 0 /\ -clear_flg^post61+clear_flg^0 == 0 /\ __const_8^0-__const_8^post61 == 0 /\ rat26^0-rat26^post61 == 0 /\ -ratio^post61+ratio^0 == 0 /\ tmp___115^0-tmp___115^post61 == 0 /\ -ret_getbyte18^post61+ret_getbyte18^0 == 0 /\ -in_count^post61+in_count^0 == 0 /\ __const_16^0-__const_16^post61 == 0 /\ -i21^post61+i21^0 == 0 /\ -i6^post61+i6^0 == 0 /\ __const_53^0-__const_53^post61 == 0 /\ -tmp___017^post61+tmp___017^0 == 0 /\ -tmp___024^post61+tmp___024^0 == 0 /\ hshift11^0-hshift11^post61 == 0 /\ m122^0-m122^post61 == 0 /\ -tabort4^post61+tabort4^0 == 0 /\ free_ent^0-free_ent^post61 == 0 /\ ent8^0-ent8^post61 == 0 /\ maxmaxcode^0-maxmaxcode^post61 == 0 /\ out_count^0-out_count^post61 == 0 /\ -__const_8388607^post61+__const_8388607^0 == 0 /\ -fcode5^post61+fcode5^0 == 0 /\ offset^0-offset^post61 == 0 /\ __const_429496^0-__const_429496^post61 == 0 /\ __const_9^0-__const_9^post61 == 0 /\ -r_off32^post61+r_off32^0 == 0 /\ __const_2147483647^0-__const_2147483647^post61 == 0 /\ -i3^post61+i3^0 == 0), cost: 1
  61: l46 -> l43 : __const_10000^0'=__const_10000^post62, __const_16^0'=__const_16^post62, __const_2147483647^0'=__const_2147483647^post62, __const_256^0'=__const_256^post62, __const_257^0'=__const_257^post62, __const_429496^0'=__const_429496^post62, __const_50^0'=__const_50^post62, __const_53^0'=__const_53^post62, __const_65536^0'=__const_65536^post62, __const_8388607^0'=__const_8388607^post62, __const_8^0'=__const_8^post62, __const_9^0'=__const_9^post62, apsim_bound11113^0'=apsim_bound11113^post62, apsim_incnt^0'=apsim_incnt^post62, bits33^0'=bits33^post62, block_compress^0'=block_compress^post62, bytes_out^0'=bytes_out^post62, c37^0'=c37^post62, c7^0'=c7^post62, checkpoint^0'=checkpoint^post62, clear_flg^0'=clear_flg^post62, code31^0'=code31^post62, count^0'=count^post62, disp9^0'=disp9^post62, ent8^0'=ent8^post62, exit_stat^0'=exit_stat^post62, fcode5^0'=fcode5^post62, free_ent^0'=free_ent^post62, hshift11^0'=hshift11^post62, hsize^0'=hsize^post62, hsize___019^0'=hsize___019^post62, hsize___027^0'=hsize___027^post62, hsize_reg10^0'=hsize_reg10^post62, i21^0'=i21^post62, i29^0'=i29^post62, i3^0'=i3^post62, i41^0'=i41^post62, i45^0'=i45^post62, i6^0'=i6^post62, in_count^0'=in_count^post62, incnt^0'=incnt^post62, m122^0'=m122^post62, m130^0'=m130^post62, maxbits^0'=maxbits^post62, maxcode^0'=maxcode^post62, maxmaxcode^0'=maxmaxcode^post62, n40^0'=n40^post62, n44^0'=n44^post62, n_bits^0'=n_bits^post62, offset^0'=offset^post62, out_count^0'=out_count^post62, r_off32^0'=r_off32^post62, rat26^0'=rat26^post62, ratio^0'=ratio^post62, ret_getbyte18^0'=ret_getbyte18^post62, ret_getbyte25^0'=ret_getbyte25^post62, seed2^0'=seed2^post62, tabort4^0'=tabort4^post62, tmp12^0'=tmp12^post62, tmp___014^0'=tmp___014^post62, tmp___017^0'=tmp___017^post62, tmp___024^0'=tmp___024^post62, tmp___115^0'=tmp___115^post62, (-tmp___017^post62+tmp___017^0 == 0 /\ __const_9^0-__const_9^post62 == 0 /\ -tmp___024^post62+tmp___024^0 == 0 /\ c37^0-c37^post62 == 0 /\ offset^0-offset^post62 == 0 /\ __const_8388607^0-__const_8388607^post62 == 0 /\ maxcode^0-maxcode^post62 == 0 /\ tmp___014^0-tmp___014^post62 == 0 /\ ret_getbyte25^0-ret_getbyte25^post62 == 0 /\ -bytes_out^post62+bytes_out^0 == 0 /\ -ratio^post62+ratio^0 == 0 /\ -r_off32^post62+r_off32^0 == 0 /\ bits33^0-bits33^post62 == 0 /\ maxmaxcode^0-maxmaxcode^post62 == 0 /\ code31^0-code31^post62 == 0 /\ -in_count^post62+in_count^0 == 0 /\ -n_bits^post62+n_bits^0 == 0 /\ -checkpoint^post62+checkpoint^0 == 0 /\ -clear_flg^post62+clear_flg^0 == 0 /\ ent8^0-ent8^post62 == 0 /\ hsize___027^0-hsize___027^post62 == 0 /\ c7^0-c7^post62 == 0 /\ apsim_incnt^0-apsim_incnt^post62 == 0 /\ -__const_429496^post62+__const_429496^0 == 0 /\ i45^0-i45^post62 == 0 /\ -hsize^post62+hsize^0 == 0 /\ -disp9^post62+disp9^0 == 0 /\ tmp12^0-tmp12^post62 == 0 /\ -n40^post62+n40^0 == 0 /\ tabort4^0-tabort4^post62 == 0 /\ n44^0-n44^post62 == 0 /\ -exit_stat^post62+exit_stat^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post62 == 0 /\ -apsim_bound11113^post62+apsim_bound11113^0 == 0 /\ -i3^post62+i3^0 == 0 /\ -i29^post62+i29^0 == 0 /\ m122^0-m122^post62 == 0 /\ -i41^post62+i41^0 == 0 /\ __const_65536^0-__const_65536^post62 == 0 /\ -__const_2147483647^post62+__const_2147483647^0 == 0 /\ -__const_256^post62+__const_256^0 == 0 /\ __const_16^0-__const_16^post62 == 0 /\ -__const_50^post62+__const_50^0 == 0 /\ -m130^post62+m130^0 == 0 /\ tmp___115^0-tmp___115^post62 == 0 /\ -__const_10000^post62+__const_10000^0 == 0 /\ -count^post62+count^0 == 0 /\ -hsize___019^post62+hsize___019^0 == 0 /\ -hsize_reg10^post62+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post62 == 0 /\ rat26^0-rat26^post62 == 0 /\ -i21^post62+i21^0 == 0 /\ __const_8^0-__const_8^post62 == 0 /\ -maxbits^post62+maxbits^0 == 0 /\ free_ent^0-free_ent^post62 == 0 /\ -incnt^post62+incnt^0 == 0 /\ i6^0-i6^post62 == 0 /\ -fcode5^post62+fcode5^0 == 0 /\ __const_53^0-__const_53^post62 == 0 /\ __const_257^0-__const_257^post62 == 0 /\ out_count^0-out_count^post62 == 0 /\ -seed2^post62+seed2^0 == 0 /\ block_compress^0-block_compress^post62 == 0), cost: 1
  62: l47 -> l46 : __const_10000^0'=__const_10000^post63, __const_16^0'=__const_16^post63, __const_2147483647^0'=__const_2147483647^post63, __const_256^0'=__const_256^post63, __const_257^0'=__const_257^post63, __const_429496^0'=__const_429496^post63, __const_50^0'=__const_50^post63, __const_53^0'=__const_53^post63, __const_65536^0'=__const_65536^post63, __const_8388607^0'=__const_8388607^post63, __const_8^0'=__const_8^post63, __const_9^0'=__const_9^post63, apsim_bound11113^0'=apsim_bound11113^post63, apsim_incnt^0'=apsim_incnt^post63, bits33^0'=bits33^post63, block_compress^0'=block_compress^post63, bytes_out^0'=bytes_out^post63, c37^0'=c37^post63, c7^0'=c7^post63, checkpoint^0'=checkpoint^post63, clear_flg^0'=clear_flg^post63, code31^0'=code31^post63, count^0'=count^post63, disp9^0'=disp9^post63, ent8^0'=ent8^post63, exit_stat^0'=exit_stat^post63, fcode5^0'=fcode5^post63, free_ent^0'=free_ent^post63, hshift11^0'=hshift11^post63, hsize^0'=hsize^post63, hsize___019^0'=hsize___019^post63, hsize___027^0'=hsize___027^post63, hsize_reg10^0'=hsize_reg10^post63, i21^0'=i21^post63, i29^0'=i29^post63, i3^0'=i3^post63, i41^0'=i41^post63, i45^0'=i45^post63, i6^0'=i6^post63, in_count^0'=in_count^post63, incnt^0'=incnt^post63, m122^0'=m122^post63, m130^0'=m130^post63, maxbits^0'=maxbits^post63, maxcode^0'=maxcode^post63, maxmaxcode^0'=maxmaxcode^post63, n40^0'=n40^post63, n44^0'=n44^post63, n_bits^0'=n_bits^post63, offset^0'=offset^post63, out_count^0'=out_count^post63, r_off32^0'=r_off32^post63, rat26^0'=rat26^post63, ratio^0'=ratio^post63, ret_getbyte18^0'=ret_getbyte18^post63, ret_getbyte25^0'=ret_getbyte25^post63, seed2^0'=seed2^post63, tabort4^0'=tabort4^post63, tmp12^0'=tmp12^post63, tmp___014^0'=tmp___014^post63, tmp___017^0'=tmp___017^post63, tmp___024^0'=tmp___024^post63, tmp___115^0'=tmp___115^post63, (ent8^0-ent8^post63 == 0 /\ -incnt^post63+incnt^0 == 0 /\ c7^0-c7^post63 == 0 /\ r_off32^0-r_off32^post63 == 0 /\ tabort4^0-tabort4^post63 == 0 /\ -m130^post63+m130^0 == 0 /\ exit_stat^0-exit_stat^post63 == 0 /\ -__const_429496^post63+__const_429496^0 == 0 /\ out_count^0-out_count^post63 == 0 /\ -__const_9^post63+__const_9^0 == 0 /\ __const_50^0-__const_50^post63 == 0 /\ -maxbits^post63+maxbits^0 == 0 /\ -i29^post63+i29^0 == 0 /\ -i41^post63+i41^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post63 == 0 /\ -i45^post63+i45^0 == 0 /\ -__const_65536^post63+__const_65536^0 == 0 /\ -i21^post63+i21^0 == 0 /\ -clear_flg^post63+clear_flg^0 == 0 /\ -tmp___115^post63+tmp___115^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post63 == 0 /\ tmp12^0-tmp12^post63 == 0 /\ -in_count^post63+in_count^0 == 0 /\ -__const_8^post63+__const_8^0 == 0 /\ -__const_2147483647^post63+__const_2147483647^0 == 0 /\ -__const_8388607^post63+__const_8388607^0 == 0 /\ __const_16^0-__const_16^post63 == 0 /\ bits33^0-bits33^post63 == 0 /\ maxmaxcode^0-maxmaxcode^post63 == 0 /\ maxcode^0-maxcode^post63 == 0 /\ -bytes_out^post63+bytes_out^0 == 0 /\ -__const_10000^post63+__const_10000^0 == 0 /\ i6^0-i6^post63 == 0 /\ __const_257^0-__const_257^post63 == 0 /\ -n_bits^post63+n_bits^0 == 0 /\ -tmp___014^post63+tmp___014^0 == 0 /\ -ret_getbyte25^post63+ret_getbyte25^0 == 0 /\ -hsize___019^post63+hsize___019^0 == 0 /\ -hsize^post63+hsize^0 == 0 /\ -seed2^post63+seed2^0 == 0 /\ apsim_incnt^0-apsim_incnt^post63 == 0 /\ -count^post63+count^0 == 0 /\ -fcode5^post63+fcode5^0 == 0 /\ tmp___017^0-tmp___017^post63 == 0 /\ m122^0-m122^post63 == 0 /\ -disp9^post63+disp9^0 == 0 /\ n44^0-n44^post63 == 0 /\ i3^0-i3^post63 == 0 /\ __const_53^0-__const_53^post63 == 0 /\ -n40^post63+n40^0 == 0 /\ code31^0-code31^post63 == 0 /\ hsize_reg10^0-hsize_reg10^post63 == 0 /\ -checkpoint^post63+checkpoint^0 == 0 /\ -tmp___024^post63+tmp___024^0 == 0 /\ -__const_256^post63+__const_256^0 == 0 /\ hsize___027^0-hsize___027^post63 == 0 /\ hshift11^0-hshift11^post63 == 0 /\ free_ent^0-free_ent^post63 == 0 /\ -block_compress^post63+block_compress^0 == 0 /\ rat26^0-rat26^post63 == 0 /\ offset^post63-offset^0-n_bits^0 == 0 /\ -ratio^post63+ratio^0 == 0 /\ c37^0-c37^post63 == 0), cost: 1
  63: l48 -> l47 : __const_10000^0'=__const_10000^post64, __const_16^0'=__const_16^post64, __const_2147483647^0'=__const_2147483647^post64, __const_256^0'=__const_256^post64, __const_257^0'=__const_257^post64, __const_429496^0'=__const_429496^post64, __const_50^0'=__const_50^post64, __const_53^0'=__const_53^post64, __const_65536^0'=__const_65536^post64, __const_8388607^0'=__const_8388607^post64, __const_8^0'=__const_8^post64, __const_9^0'=__const_9^post64, apsim_bound11113^0'=apsim_bound11113^post64, apsim_incnt^0'=apsim_incnt^post64, bits33^0'=bits33^post64, block_compress^0'=block_compress^post64, bytes_out^0'=bytes_out^post64, c37^0'=c37^post64, c7^0'=c7^post64, checkpoint^0'=checkpoint^post64, clear_flg^0'=clear_flg^post64, code31^0'=code31^post64, count^0'=count^post64, disp9^0'=disp9^post64, ent8^0'=ent8^post64, exit_stat^0'=exit_stat^post64, fcode5^0'=fcode5^post64, free_ent^0'=free_ent^post64, hshift11^0'=hshift11^post64, hsize^0'=hsize^post64, hsize___019^0'=hsize___019^post64, hsize___027^0'=hsize___027^post64, hsize_reg10^0'=hsize_reg10^post64, i21^0'=i21^post64, i29^0'=i29^post64, i3^0'=i3^post64, i41^0'=i41^post64, i45^0'=i45^post64, i6^0'=i6^post64, in_count^0'=in_count^post64, incnt^0'=incnt^post64, m122^0'=m122^post64, m130^0'=m130^post64, maxbits^0'=maxbits^post64, maxcode^0'=maxcode^post64, maxmaxcode^0'=maxmaxcode^post64, n40^0'=n40^post64, n44^0'=n44^post64, n_bits^0'=n_bits^post64, offset^0'=offset^post64, out_count^0'=out_count^post64, r_off32^0'=r_off32^post64, rat26^0'=rat26^post64, ratio^0'=ratio^post64, ret_getbyte18^0'=ret_getbyte18^post64, ret_getbyte25^0'=ret_getbyte25^post64, seed2^0'=seed2^post64, tabort4^0'=tabort4^post64, tmp12^0'=tmp12^post64, tmp___014^0'=tmp___014^post64, tmp___017^0'=tmp___017^post64, tmp___024^0'=tmp___024^post64, tmp___115^0'=tmp___115^post64, (-block_compress^post64+block_compress^0 == 0 /\ -clear_flg^post64+clear_flg^0 == 0 /\ -c7^post64+c7^0 == 0 /\ -bytes_out^post64+bytes_out^0 == 0 /\ -ret_getbyte18^post64+ret_getbyte18^0 == 0 /\ -in_count^post64+in_count^0 == 0 /\ -apsim_bound11113^post64+apsim_bound11113^0 == 0 /\ -i21^post64+i21^0 == 0 /\ -i6^post64+i6^0 == 0 /\ m130^0-m130^post64 == 0 /\ -tmp___024^post64+tmp___024^0 == 0 /\ -tmp___115^post64+tmp___115^0 == 0 /\ __const_65536^0-__const_65536^post64 == 0 /\ hshift11^0-hshift11^post64 == 0 /\ -code31^post64+code31^0 == 0 /\ -m122^post64+m122^0 == 0 /\ free_ent^0-free_ent^post64 == 0 /\ rat26^0-rat26^post64 == 0 /\ -tabort4^post64+tabort4^0 == 0 /\ i29^0-i29^post64 == 0 /\ hsize___027^0-hsize___027^post64 == 0 /\ -n44^post64+n44^0 == 0 /\ -__const_8388607^post64+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post64 == 0 /\ __const_257^0-__const_257^post64 == 0 /\ hsize___019^0-hsize___019^post64 == 0 /\ -maxbits^post64+maxbits^0 == 0 /\ -r_off32^post64+r_off32^0 == 0 /\ -i3^post64+i3^0 == 0 /\ -disp9^post64+disp9^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post64 == 0 /\ -tmp___017^post64+tmp___017^0 == 0 /\ c37^0-c37^post64 == 0 /\ -__const_10000^post64+__const_10000^0 == 0 /\ __const_8^0-__const_8^post64 == 0 /\ ent8^0-ent8^post64 == 0 /\ -__const_256^post64+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post64 == 0 /\ out_count^0-out_count^post64 == 0 /\ -__const_2147483647^post64+__const_2147483647^0 == 0 /\ -fcode5^post64+fcode5^0 == 0 /\ i45^0-i45^post64 == 0 /\ offset^0-offset^post64 == 0 /\ -hsize_reg10^post64+hsize_reg10^0 == 0 /\ n40^0-n40^post64 == 0 /\ __const_429496^0-__const_429496^post64 == 0 /\ exit_stat^0-exit_stat^post64 == 0 /\ -hsize^post64+hsize^0 == 0 /\ -i41^post64+i41^0 == 0 /\ -incnt^post64+incnt^0 == 0 /\ -seed2^post64+seed2^0 == 0 /\ bits33^0-bits33^post64 == 0 /\ tmp12^0-tmp12^post64 == 0 /\ ratio^0-ratio^post64 == 0 /\ -n_bits^post64+n_bits^0 == 0 /\ __const_16^0-__const_16^post64 == 0 /\ tmp___014^0-tmp___014^post64 == 0 /\ __const_9^0-__const_9^post64 == 0 /\ apsim_incnt^0-apsim_incnt^post64 == 0 /\ -__const_50^post64+__const_50^0 == 0 /\ count^0-count^post64 == 0 /\ checkpoint^0-checkpoint^post64 == 0 /\ -maxcode^post64+maxcode^0 == 0), cost: 1
  64: l49 -> l47 : __const_10000^0'=__const_10000^post65, __const_16^0'=__const_16^post65, __const_2147483647^0'=__const_2147483647^post65, __const_256^0'=__const_256^post65, __const_257^0'=__const_257^post65, __const_429496^0'=__const_429496^post65, __const_50^0'=__const_50^post65, __const_53^0'=__const_53^post65, __const_65536^0'=__const_65536^post65, __const_8388607^0'=__const_8388607^post65, __const_8^0'=__const_8^post65, __const_9^0'=__const_9^post65, apsim_bound11113^0'=apsim_bound11113^post65, apsim_incnt^0'=apsim_incnt^post65, bits33^0'=bits33^post65, block_compress^0'=block_compress^post65, bytes_out^0'=bytes_out^post65, c37^0'=c37^post65, c7^0'=c7^post65, checkpoint^0'=checkpoint^post65, clear_flg^0'=clear_flg^post65, code31^0'=code31^post65, count^0'=count^post65, disp9^0'=disp9^post65, ent8^0'=ent8^post65, exit_stat^0'=exit_stat^post65, fcode5^0'=fcode5^post65, free_ent^0'=free_ent^post65, hshift11^0'=hshift11^post65, hsize^0'=hsize^post65, hsize___019^0'=hsize___019^post65, hsize___027^0'=hsize___027^post65, hsize_reg10^0'=hsize_reg10^post65, i21^0'=i21^post65, i29^0'=i29^post65, i3^0'=i3^post65, i41^0'=i41^post65, i45^0'=i45^post65, i6^0'=i6^post65, in_count^0'=in_count^post65, incnt^0'=incnt^post65, m122^0'=m122^post65, m130^0'=m130^post65, maxbits^0'=maxbits^post65, maxcode^0'=maxcode^post65, maxmaxcode^0'=maxmaxcode^post65, n40^0'=n40^post65, n44^0'=n44^post65, n_bits^0'=n_bits^post65, offset^0'=offset^post65, out_count^0'=out_count^post65, r_off32^0'=r_off32^post65, rat26^0'=rat26^post65, ratio^0'=ratio^post65, ret_getbyte18^0'=ret_getbyte18^post65, ret_getbyte25^0'=ret_getbyte25^post65, seed2^0'=seed2^post65, tabort4^0'=tabort4^post65, tmp12^0'=tmp12^post65, tmp___014^0'=tmp___014^post65, tmp___017^0'=tmp___017^post65, tmp___024^0'=tmp___024^post65, tmp___115^0'=tmp___115^post65, (__const_9^0-__const_9^post65 == 0 /\ maxcode^0-maxcode^post65 == 0 /\ -i3^post65+i3^0 == 0 /\ -i41^post65+i41^0 == 0 /\ hsize___019^0-hsize___019^post65 == 0 /\ n44^0-n44^post65 == 0 /\ __const_257^0-__const_257^post65 == 0 /\ -__const_256^post65+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post65 == 0 /\ i29^0-i29^post65 == 0 /\ bits33^0 <= 0 /\ m130^0-m130^post65 == 0 /\ -__const_50^post65+__const_50^0 == 0 /\ hshift11^0-hshift11^post65 == 0 /\ apsim_incnt^0-apsim_incnt^post65 == 0 /\ -count^post65+count^0 == 0 /\ -__const_10000^post65+__const_10000^0 == 0 /\ c37^0-c37^post65 == 0 /\ -hsize_reg10^post65+hsize_reg10^0 == 0 /\ -hsize^post65+hsize^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post65 == 0 /\ -i21^post65+i21^0 == 0 /\ -incnt^post65+incnt^0 == 0 /\ __const_65536^0-__const_65536^post65 == 0 /\ code31^0-code31^post65 == 0 /\ -fcode5^post65+fcode5^0 == 0 /\ -apsim_bound11113^post65+apsim_bound11113^0 == 0 /\ hsize___027^0-hsize___027^post65 == 0 /\ -seed2^post65+seed2^0 == 0 /\ free_ent^0-free_ent^post65 == 0 /\ c7^0-c7^post65 == 0 /\ -__const_8388607^post65+__const_8388607^0 == 0 /\ -bits33^0 <= 0 /\ i45^0-i45^post65 == 0 /\ tmp___115^0-tmp___115^post65 == 0 /\ rat26^0-rat26^post65 == 0 /\ tmp12^0-tmp12^post65 == 0 /\ -bytes_out^post65+bytes_out^0 == 0 /\ __const_8^0-__const_8^post65 == 0 /\ -r_off32^post65+r_off32^0 == 0 /\ -ratio^post65+ratio^0 == 0 /\ -ret_getbyte18^post65+ret_getbyte18^0 == 0 /\ tmp___017^0-tmp___017^post65 == 0 /\ -i6^post65+i6^0 == 0 /\ __const_53^0-__const_53^post65 == 0 /\ out_count^0-out_count^post65 == 0 /\ -n_bits^post65+n_bits^0 == 0 /\ -in_count^post65+in_count^0 == 0 /\ -clear_flg^post65+clear_flg^0 == 0 /\ -checkpoint^post65+checkpoint^0 == 0 /\ -maxbits^post65+maxbits^0 == 0 /\ m122^0-m122^post65 == 0 /\ offset^0-offset^post65 == 0 /\ -disp9^post65+disp9^0 == 0 /\ -block_compress^post65+block_compress^0 == 0 /\ -tabort4^post65+tabort4^0 == 0 /\ -tmp___014^post65+tmp___014^0 == 0 /\ -tmp___024^post65+tmp___024^0 == 0 /\ -n40^post65+n40^0 == 0 /\ bits33^0-bits33^post65 == 0 /\ -exit_stat^post65+exit_stat^0 == 0 /\ __const_2147483647^0-__const_2147483647^post65 == 0 /\ __const_429496^0-__const_429496^post65 == 0 /\ __const_16^0-__const_16^post65 == 0 /\ ent8^0-ent8^post65 == 0), cost: 1
  65: l49 -> l48 : __const_10000^0'=__const_10000^post66, __const_16^0'=__const_16^post66, __const_2147483647^0'=__const_2147483647^post66, __const_256^0'=__const_256^post66, __const_257^0'=__const_257^post66, __const_429496^0'=__const_429496^post66, __const_50^0'=__const_50^post66, __const_53^0'=__const_53^post66, __const_65536^0'=__const_65536^post66, __const_8388607^0'=__const_8388607^post66, __const_8^0'=__const_8^post66, __const_9^0'=__const_9^post66, apsim_bound11113^0'=apsim_bound11113^post66, apsim_incnt^0'=apsim_incnt^post66, bits33^0'=bits33^post66, block_compress^0'=block_compress^post66, bytes_out^0'=bytes_out^post66, c37^0'=c37^post66, c7^0'=c7^post66, checkpoint^0'=checkpoint^post66, clear_flg^0'=clear_flg^post66, code31^0'=code31^post66, count^0'=count^post66, disp9^0'=disp9^post66, ent8^0'=ent8^post66, exit_stat^0'=exit_stat^post66, fcode5^0'=fcode5^post66, free_ent^0'=free_ent^post66, hshift11^0'=hshift11^post66, hsize^0'=hsize^post66, hsize___019^0'=hsize___019^post66, hsize___027^0'=hsize___027^post66, hsize_reg10^0'=hsize_reg10^post66, i21^0'=i21^post66, i29^0'=i29^post66, i3^0'=i3^post66, i41^0'=i41^post66, i45^0'=i45^post66, i6^0'=i6^post66, in_count^0'=in_count^post66, incnt^0'=incnt^post66, m122^0'=m122^post66, m130^0'=m130^post66, maxbits^0'=maxbits^post66, maxcode^0'=maxcode^post66, maxmaxcode^0'=maxmaxcode^post66, n40^0'=n40^post66, n44^0'=n44^post66, n_bits^0'=n_bits^post66, offset^0'=offset^post66, out_count^0'=out_count^post66, r_off32^0'=r_off32^post66, rat26^0'=rat26^post66, ratio^0'=ratio^post66, ret_getbyte18^0'=ret_getbyte18^post66, ret_getbyte25^0'=ret_getbyte25^post66, seed2^0'=seed2^post66, tabort4^0'=tabort4^post66, tmp12^0'=tmp12^post66, tmp___014^0'=tmp___014^post66, tmp___017^0'=tmp___017^post66, tmp___024^0'=tmp___024^post66, tmp___115^0'=tmp___115^post66, (-n_bits^post66+n_bits^0 == 0 /\ offset^0-offset^post66 == 0 /\ maxmaxcode^0-maxmaxcode^post66 == 0 /\ -tmp___014^post66+tmp___014^0 == 0 /\ -r_off32^post66+r_off32^0 == 0 /\ hsize___019^0-hsize___019^post66 == 0 /\ code31^0-code31^post66 == 0 /\ apsim_bound11113^0-apsim_bound11113^post66 == 0 /\ -seed2^post66+seed2^0 == 0 /\ -count^post66+count^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post66 == 0 /\ hsize___027^0-hsize___027^post66 == 0 /\ -fcode5^post66+fcode5^0 == 0 /\ __const_9^0-__const_9^post66 == 0 /\ -disp9^post66+disp9^0 == 0 /\ -exit_stat^post66+exit_stat^0 == 0 /\ -tmp___024^post66+tmp___024^0 == 0 /\ -tmp___115^post66+tmp___115^0 == 0 /\ c37^0-c37^post66 == 0 /\ c7^0-c7^post66 == 0 /\ -checkpoint^post66+checkpoint^0 == 0 /\ i45^0-i45^post66 == 0 /\ tabort4^0-tabort4^post66 == 0 /\ -__const_256^post66+__const_256^0 == 0 /\ apsim_incnt^0-apsim_incnt^post66 == 0 /\ n44^0-n44^post66 == 0 /\ bits33^0-bits33^post66 == 0 /\ -ratio^post66+ratio^0 == 0 /\ maxcode^0-maxcode^post66 == 0 /\ __const_2147483647^0-__const_2147483647^post66 == 0 /\ __const_53^0-__const_53^post66 == 0 /\ 1-bits33^0 <= 0 /\ -incnt^post66+incnt^0 == 0 /\ free_ent^0-free_ent^post66 == 0 /\ __const_65536^0-__const_65536^post66 == 0 /\ hshift11^0-hshift11^post66 == 0 /\ tmp___017^0-tmp___017^post66 == 0 /\ tmp12^0-tmp12^post66 == 0 /\ -__const_429496^post66+__const_429496^0 == 0 /\ -maxbits^post66+maxbits^0 == 0 /\ -__const_50^post66+__const_50^0 == 0 /\ -i3^post66+i3^0 == 0 /\ -i29^post66+i29^0 == 0 /\ __const_16^0-__const_16^post66 == 0 /\ -i41^post66+i41^0 == 0 /\ rat26^0-rat26^post66 == 0 /\ m130^0-m130^post66 == 0 /\ -n40^post66+n40^0 == 0 /\ i6^0-i6^post66 == 0 /\ ent8^0-ent8^post66 == 0 /\ -i21^post66+i21^0 == 0 /\ -clear_flg^post66+clear_flg^0 == 0 /\ __const_8^0-__const_8^post66 == 0 /\ __const_257^0-__const_257^post66 == 0 /\ out_count^0-out_count^post66 == 0 /\ -in_count^post66+in_count^0 == 0 /\ block_compress^0-block_compress^post66 == 0 /\ m122^0-m122^post66 == 0 /\ -__const_8388607^post66+__const_8388607^0 == 0 /\ -hsize^post66+hsize^0 == 0 /\ -bytes_out^post66+bytes_out^0 == 0 /\ -__const_10000^post66+__const_10000^0 == 0 /\ -ret_getbyte18^post66+ret_getbyte18^0 == 0 /\ -hsize_reg10^post66+hsize_reg10^0 == 0), cost: 1
  66: l49 -> l48 : __const_10000^0'=__const_10000^post67, __const_16^0'=__const_16^post67, __const_2147483647^0'=__const_2147483647^post67, __const_256^0'=__const_256^post67, __const_257^0'=__const_257^post67, __const_429496^0'=__const_429496^post67, __const_50^0'=__const_50^post67, __const_53^0'=__const_53^post67, __const_65536^0'=__const_65536^post67, __const_8388607^0'=__const_8388607^post67, __const_8^0'=__const_8^post67, __const_9^0'=__const_9^post67, apsim_bound11113^0'=apsim_bound11113^post67, apsim_incnt^0'=apsim_incnt^post67, bits33^0'=bits33^post67, block_compress^0'=block_compress^post67, bytes_out^0'=bytes_out^post67, c37^0'=c37^post67, c7^0'=c7^post67, checkpoint^0'=checkpoint^post67, clear_flg^0'=clear_flg^post67, code31^0'=code31^post67, count^0'=count^post67, disp9^0'=disp9^post67, ent8^0'=ent8^post67, exit_stat^0'=exit_stat^post67, fcode5^0'=fcode5^post67, free_ent^0'=free_ent^post67, hshift11^0'=hshift11^post67, hsize^0'=hsize^post67, hsize___019^0'=hsize___019^post67, hsize___027^0'=hsize___027^post67, hsize_reg10^0'=hsize_reg10^post67, i21^0'=i21^post67, i29^0'=i29^post67, i3^0'=i3^post67, i41^0'=i41^post67, i45^0'=i45^post67, i6^0'=i6^post67, in_count^0'=in_count^post67, incnt^0'=incnt^post67, m122^0'=m122^post67, m130^0'=m130^post67, maxbits^0'=maxbits^post67, maxcode^0'=maxcode^post67, maxmaxcode^0'=maxmaxcode^post67, n40^0'=n40^post67, n44^0'=n44^post67, n_bits^0'=n_bits^post67, offset^0'=offset^post67, out_count^0'=out_count^post67, r_off32^0'=r_off32^post67, rat26^0'=rat26^post67, ratio^0'=ratio^post67, ret_getbyte18^0'=ret_getbyte18^post67, ret_getbyte25^0'=ret_getbyte25^post67, seed2^0'=seed2^post67, tabort4^0'=tabort4^post67, tmp12^0'=tmp12^post67, tmp___014^0'=tmp___014^post67, tmp___017^0'=tmp___017^post67, tmp___024^0'=tmp___024^post67, tmp___115^0'=tmp___115^post67, (-maxbits^post67+maxbits^0 == 0 /\ -n40^post67+n40^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post67 == 0 /\ c37^0-c37^post67 == 0 /\ -in_count^post67+in_count^0 == 0 /\ tabort4^0-tabort4^post67 == 0 /\ -clear_flg^post67+clear_flg^0 == 0 /\ -checkpoint^post67+checkpoint^0 == 0 /\ -bytes_out^post67+bytes_out^0 == 0 /\ -hsize___019^post67+hsize___019^0 == 0 /\ -i21^post67+i21^0 == 0 /\ -__const_65536^post67+__const_65536^0 == 0 /\ -ratio^post67+ratio^0 == 0 /\ ent8^0-ent8^post67 == 0 /\ hsize___027^0-hsize___027^post67 == 0 /\ out_count^0-out_count^post67 == 0 /\ c7^0-c7^post67 == 0 /\ -hsize^post67+hsize^0 == 0 /\ __const_8388607^0-__const_8388607^post67 == 0 /\ exit_stat^0-exit_stat^post67 == 0 /\ -i45^post67+i45^0 == 0 /\ 1+bits33^0 <= 0 /\ __const_16^0-__const_16^post67 == 0 /\ maxmaxcode^0-maxmaxcode^post67 == 0 /\ apsim_bound11113^0-apsim_bound11113^post67 == 0 /\ -__const_8^post67+__const_8^0 == 0 /\ -offset^post67+offset^0 == 0 /\ -r_off32^post67+r_off32^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post67 == 0 /\ tmp12^0-tmp12^post67 == 0 /\ __const_9^0-__const_9^post67 == 0 /\ -__const_429496^post67+__const_429496^0 == 0 /\ m122^0-m122^post67 == 0 /\ -__const_2147483647^post67+__const_2147483647^0 == 0 /\ -__const_10000^post67+__const_10000^0 == 0 /\ -count^post67+count^0 == 0 /\ -fcode5^post67+fcode5^0 == 0 /\ -disp9^post67+disp9^0 == 0 /\ -__const_256^post67+__const_256^0 == 0 /\ -tmp___024^post67+tmp___024^0 == 0 /\ -tmp___115^post67+tmp___115^0 == 0 /\ bits33^0-bits33^post67 == 0 /\ n44^0-n44^post67 == 0 /\ -hsize_reg10^post67+hsize_reg10^0 == 0 /\ maxcode^0-maxcode^post67 == 0 /\ -tmp___014^post67+tmp___014^0 == 0 /\ apsim_incnt^0-apsim_incnt^post67 == 0 /\ -block_compress^post67+block_compress^0 == 0 /\ hshift11^0-hshift11^post67 == 0 /\ tmp___017^0-tmp___017^post67 == 0 /\ rat26^0-rat26^post67 == 0 /\ free_ent^0-free_ent^post67 == 0 /\ -i29^post67+i29^0 == 0 /\ -seed2^post67+seed2^0 == 0 /\ -i41^post67+i41^0 == 0 /\ -incnt^post67+incnt^0 == 0 /\ code31^0-code31^post67 == 0 /\ __const_53^0-__const_53^post67 == 0 /\ __const_257^0-__const_257^post67 == 0 /\ -n_bits^post67+n_bits^0 == 0 /\ -__const_50^post67+__const_50^0 == 0 /\ i6^0-i6^post67 == 0 /\ -m130^post67+m130^0 == 0 /\ i3^0-i3^post67 == 0), cost: 1
  67: l50 -> l49 : __const_10000^0'=__const_10000^post68, __const_16^0'=__const_16^post68, __const_2147483647^0'=__const_2147483647^post68, __const_256^0'=__const_256^post68, __const_257^0'=__const_257^post68, __const_429496^0'=__const_429496^post68, __const_50^0'=__const_50^post68, __const_53^0'=__const_53^post68, __const_65536^0'=__const_65536^post68, __const_8388607^0'=__const_8388607^post68, __const_8^0'=__const_8^post68, __const_9^0'=__const_9^post68, apsim_bound11113^0'=apsim_bound11113^post68, apsim_incnt^0'=apsim_incnt^post68, bits33^0'=bits33^post68, block_compress^0'=block_compress^post68, bytes_out^0'=bytes_out^post68, c37^0'=c37^post68, c7^0'=c7^post68, checkpoint^0'=checkpoint^post68, clear_flg^0'=clear_flg^post68, code31^0'=code31^post68, count^0'=count^post68, disp9^0'=disp9^post68, ent8^0'=ent8^post68, exit_stat^0'=exit_stat^post68, fcode5^0'=fcode5^post68, free_ent^0'=free_ent^post68, hshift11^0'=hshift11^post68, hsize^0'=hsize^post68, hsize___019^0'=hsize___019^post68, hsize___027^0'=hsize___027^post68, hsize_reg10^0'=hsize_reg10^post68, i21^0'=i21^post68, i29^0'=i29^post68, i3^0'=i3^post68, i41^0'=i41^post68, i45^0'=i45^post68, i6^0'=i6^post68, in_count^0'=in_count^post68, incnt^0'=incnt^post68, m122^0'=m122^post68, m130^0'=m130^post68, maxbits^0'=maxbits^post68, maxcode^0'=maxcode^post68, maxmaxcode^0'=maxmaxcode^post68, n40^0'=n40^post68, n44^0'=n44^post68, n_bits^0'=n_bits^post68, offset^0'=offset^post68, out_count^0'=out_count^post68, r_off32^0'=r_off32^post68, rat26^0'=rat26^post68, ratio^0'=ratio^post68, ret_getbyte18^0'=ret_getbyte18^post68, ret_getbyte25^0'=ret_getbyte25^post68, seed2^0'=seed2^post68, tabort4^0'=tabort4^post68, tmp12^0'=tmp12^post68, tmp___014^0'=tmp___014^post68, tmp___017^0'=tmp___017^post68, tmp___024^0'=tmp___024^post68, tmp___115^0'=tmp___115^post68, (-exit_stat^post68+exit_stat^0 == 0 /\ -disp9^post68+disp9^0 == 0 /\ -count^post68+count^0 == 0 /\ i29^0-i29^post68 == 0 /\ -tmp___024^post68+tmp___024^0 == 0 /\ -__const_256^post68+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post68 == 0 /\ apsim_bound11113^0-apsim_bound11113^post68 == 0 /\ -fcode5^post68+fcode5^0 == 0 /\ __const_257^0-__const_257^post68 == 0 /\ __const_9^0-__const_9^post68 == 0 /\ -bytes_out^post68+bytes_out^0 == 0 /\ -tmp___014^post68+tmp___014^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post68 == 0 /\ c37^0-c37^post68 == 0 /\ -i41^post68+i41^0 == 0 /\ -seed2^post68+seed2^0 == 0 /\ tmp___115^0-tmp___115^post68 == 0 /\ bits33^0-bits33^post68 == 0 /\ n44^0-n44^post68 == 0 /\ hsize___027^0-hsize___027^post68 == 0 /\ m130^0-m130^post68 == 0 /\ -incnt^post68+incnt^0 == 0 /\ hsize___019^0-hsize___019^post68 == 0 /\ i45^0-i45^post68 == 0 /\ c7^0-c7^post68 == 0 /\ code31^0-code31^post68 == 0 /\ maxcode^0-maxcode^post68 == 0 /\ __const_10000^0-__const_10000^post68 == 0 /\ apsim_incnt^0-apsim_incnt^post68 == 0 /\ -__const_50^post68+__const_50^0 == 0 /\ hshift11^0-hshift11^post68 == 0 /\ -n40^post68+n40^0 == 0 /\ -checkpoint^post68+checkpoint^0 == 0 /\ tmp___017^0-tmp___017^post68 == 0 /\ __const_65536^0-__const_65536^post68 == 0 /\ free_ent^0-free_ent^post68 == 0 /\ -ratio^post68+ratio^0 == 0 /\ rat26^0-rat26^post68 == 0 /\ -clear_flg^post68+clear_flg^0 == 0 /\ -ret_getbyte18^post68+ret_getbyte18^0 == 0 /\ -in_count^post68+in_count^0 == 0 /\ __const_16^0-__const_16^post68 == 0 /\ -i21^post68+i21^0 == 0 /\ -i6^post68+i6^0 == 0 /\ -hsize_reg10^post68+hsize_reg10^0 == 0 /\ __const_53^0-__const_53^post68 == 0 /\ -hsize^post68+hsize^0 == 0 /\ tmp12^0-tmp12^post68 == 0 /\ -i3^post68+i3^0 == 0 /\ -n_bits^post68+n_bits^0 == 0 /\ m122^0-m122^post68 == 0 /\ __const_8^0-__const_8^post68 == 0 /\ block_compress^0-block_compress^post68 == 0 /\ -tabort4^post68+tabort4^0 == 0 /\ ent8^0-ent8^post68 == 0 /\ out_count^0-out_count^post68 == 0 /\ -__const_8388607^post68+__const_8388607^0 == 0 /\ __const_429496^0-__const_429496^post68 == 0 /\ offset^0-offset^post68 == 0 /\ -r_off32^post68+r_off32^0 == 0 /\ 1+bits33^0-__const_8^0 <= 0 /\ __const_2147483647^0-__const_2147483647^post68 == 0 /\ -maxbits^post68+maxbits^0 == 0), cost: 1
  68: l50 -> l49 : __const_10000^0'=__const_10000^post69, __const_16^0'=__const_16^post69, __const_2147483647^0'=__const_2147483647^post69, __const_256^0'=__const_256^post69, __const_257^0'=__const_257^post69, __const_429496^0'=__const_429496^post69, __const_50^0'=__const_50^post69, __const_53^0'=__const_53^post69, __const_65536^0'=__const_65536^post69, __const_8388607^0'=__const_8388607^post69, __const_8^0'=__const_8^post69, __const_9^0'=__const_9^post69, apsim_bound11113^0'=apsim_bound11113^post69, apsim_incnt^0'=apsim_incnt^post69, bits33^0'=bits33^post69, block_compress^0'=block_compress^post69, bytes_out^0'=bytes_out^post69, c37^0'=c37^post69, c7^0'=c7^post69, checkpoint^0'=checkpoint^post69, clear_flg^0'=clear_flg^post69, code31^0'=code31^post69, count^0'=count^post69, disp9^0'=disp9^post69, ent8^0'=ent8^post69, exit_stat^0'=exit_stat^post69, fcode5^0'=fcode5^post69, free_ent^0'=free_ent^post69, hshift11^0'=hshift11^post69, hsize^0'=hsize^post69, hsize___019^0'=hsize___019^post69, hsize___027^0'=hsize___027^post69, hsize_reg10^0'=hsize_reg10^post69, i21^0'=i21^post69, i29^0'=i29^post69, i3^0'=i3^post69, i41^0'=i41^post69, i45^0'=i45^post69, i6^0'=i6^post69, in_count^0'=in_count^post69, incnt^0'=incnt^post69, m122^0'=m122^post69, m130^0'=m130^post69, maxbits^0'=maxbits^post69, maxcode^0'=maxcode^post69, maxmaxcode^0'=maxmaxcode^post69, n40^0'=n40^post69, n44^0'=n44^post69, n_bits^0'=n_bits^post69, offset^0'=offset^post69, out_count^0'=out_count^post69, r_off32^0'=r_off32^post69, rat26^0'=rat26^post69, ratio^0'=ratio^post69, ret_getbyte18^0'=ret_getbyte18^post69, ret_getbyte25^0'=ret_getbyte25^post69, seed2^0'=seed2^post69, tabort4^0'=tabort4^post69, tmp12^0'=tmp12^post69, tmp___014^0'=tmp___014^post69, tmp___017^0'=tmp___017^post69, tmp___024^0'=tmp___024^post69, tmp___115^0'=tmp___115^post69, (0 == 0 /\ __const_8388607^0-__const_8388607^post69 == 0 /\ ret_getbyte25^0-ret_getbyte25^post69 == 0 /\ -r_off32^post69+r_off32^0 == 0 /\ -ratio^post69+ratio^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post69 == 0 /\ -clear_flg^post69+clear_flg^0 == 0 /\ i45^0-i45^post69 == 0 /\ c7^0-c7^post69 == 0 /\ -in_count^post69+in_count^0 == 0 /\ -checkpoint^post69+checkpoint^0 == 0 /\ ent8^0-ent8^post69 == 0 /\ __const_9^0-__const_9^post69 == 0 /\ -hsize_reg10^post69+hsize_reg10^0 == 0 /\ maxcode^0-maxcode^post69 == 0 /\ -bits33^0+__const_8^0+bits33^post69 == 0 /\ -hsize___019^post69+hsize___019^0 == 0 /\ -__const_429496^post69+__const_429496^0 == 0 /\ -bytes_out^post69+bytes_out^0 == 0 /\ -maxbits^post69+maxbits^0 == 0 /\ tmp12^0-tmp12^post69 == 0 /\ -disp9^post69+disp9^0 == 0 /\ tabort4^0-tabort4^post69 == 0 /\ -tmp___024^post69+tmp___024^0 == 0 /\ -tmp___014^post69+tmp___014^0 == 0 /\ -exit_stat^post69+exit_stat^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post69 == 0 /\ -i21^post69+i21^0 == 0 /\ hsize___027^0-hsize___027^post69 == 0 /\ maxmaxcode^0-maxmaxcode^post69 == 0 /\ hshift11^0-hshift11^post69 == 0 /\ apsim_incnt^0-apsim_incnt^post69 == 0 /\ -i29^post69+i29^0 == 0 /\ -i3^post69+i3^0 == 0 /\ m122^0-m122^post69 == 0 /\ -i41^post69+i41^0 == 0 /\ n44^0-n44^post69 == 0 /\ __const_65536^0-__const_65536^post69 == 0 /\ -bits33^0+__const_8^0 <= 0 /\ -n_bits^post69+n_bits^0 == 0 /\ -__const_2147483647^post69+__const_2147483647^0 == 0 /\ __const_10000^0-__const_10000^post69 == 0 /\ -__const_256^post69+__const_256^0 == 0 /\ free_ent^0-free_ent^post69 == 0 /\ -offset^post69+offset^0 == 0 /\ -hsize^post69+hsize^0 == 0 /\ -block_compress^post69+block_compress^0 == 0 /\ -m130^post69+m130^0 == 0 /\ -count^post69+count^0 == 0 /\ rat26^0-rat26^post69 == 0 /\ -__const_50^post69+__const_50^0 == 0 /\ __const_8^0-__const_8^post69 == 0 /\ -__const_16^post69+__const_16^0 == 0 /\ -seed2^post69+seed2^0 == 0 /\ -incnt^post69+incnt^0 == 0 /\ -tmp___115^post69+tmp___115^0 == 0 /\ tmp___017^0-tmp___017^post69 == 0 /\ -n40^post69+n40^0 == 0 /\ i6^0-i6^post69 == 0 /\ c37^0-c37^post69 == 0 /\ -fcode5^post69+fcode5^0 == 0 /\ out_count^0-out_count^post69 == 0 /\ __const_257^0-__const_257^post69 == 0 /\ __const_53^0-__const_53^post69 == 0), cost: 1
  70: l51 -> l32 : __const_10000^0'=__const_10000^post71, __const_16^0'=__const_16^post71, __const_2147483647^0'=__const_2147483647^post71, __const_256^0'=__const_256^post71, __const_257^0'=__const_257^post71, __const_429496^0'=__const_429496^post71, __const_50^0'=__const_50^post71, __const_53^0'=__const_53^post71, __const_65536^0'=__const_65536^post71, __const_8388607^0'=__const_8388607^post71, __const_8^0'=__const_8^post71, __const_9^0'=__const_9^post71, apsim_bound11113^0'=apsim_bound11113^post71, apsim_incnt^0'=apsim_incnt^post71, bits33^0'=bits33^post71, block_compress^0'=block_compress^post71, bytes_out^0'=bytes_out^post71, c37^0'=c37^post71, c7^0'=c7^post71, checkpoint^0'=checkpoint^post71, clear_flg^0'=clear_flg^post71, code31^0'=code31^post71, count^0'=count^post71, disp9^0'=disp9^post71, ent8^0'=ent8^post71, exit_stat^0'=exit_stat^post71, fcode5^0'=fcode5^post71, free_ent^0'=free_ent^post71, hshift11^0'=hshift11^post71, hsize^0'=hsize^post71, hsize___019^0'=hsize___019^post71, hsize___027^0'=hsize___027^post71, hsize_reg10^0'=hsize_reg10^post71, i21^0'=i21^post71, i29^0'=i29^post71, i3^0'=i3^post71, i41^0'=i41^post71, i45^0'=i45^post71, i6^0'=i6^post71, in_count^0'=in_count^post71, incnt^0'=incnt^post71, m122^0'=m122^post71, m130^0'=m130^post71, maxbits^0'=maxbits^post71, maxcode^0'=maxcode^post71, maxmaxcode^0'=maxmaxcode^post71, n40^0'=n40^post71, n44^0'=n44^post71, n_bits^0'=n_bits^post71, offset^0'=offset^post71, out_count^0'=out_count^post71, r_off32^0'=r_off32^post71, rat26^0'=rat26^post71, ratio^0'=ratio^post71, ret_getbyte18^0'=ret_getbyte18^post71, ret_getbyte25^0'=ret_getbyte25^post71, seed2^0'=seed2^post71, tabort4^0'=tabort4^post71, tmp12^0'=tmp12^post71, tmp___014^0'=tmp___014^post71, tmp___017^0'=tmp___017^post71, tmp___024^0'=tmp___024^post71, tmp___115^0'=tmp___115^post71, (-fcode5^post71+fcode5^0 == 0 /\ free_ent^0-free_ent^post71 == 0 /\ -block_compress^post71+block_compress^0 == 0 /\ -c7^post71+c7^0 == 0 /\ -disp9^post71+disp9^0 == 0 /\ tmp___017^0-tmp___017^post71 == 0 /\ -tmp___115^post71+tmp___115^0 == 0 /\ __const_53^0-__const_53^post71 == 0 /\ m130^0-m130^post71 == 0 /\ tmp___024^0-tmp___024^post71 == 0 /\ ret_getbyte18^0-ret_getbyte18^post71 == 0 /\ -tmp12^post71+tmp12^0 == 0 /\ -seed2^post71+seed2^0 == 0 /\ -tmp___014^post71+tmp___014^0 == 0 /\ -code31^post71+code31^0 == 0 /\ -i21^post71+i21^0 == 0 /\ m122^0-m122^post71 == 0 /\ -apsim_incnt^post71+apsim_incnt^0 == 0 /\ __const_16^0-__const_16^post71 == 0 /\ -i41^post71+i41^0 == 0 /\ -offset^post71+offset^0 == 0 /\ -incnt^post71+incnt^0 == 0 /\ ent8^0-ent8^post71 == 0 /\ __const_10000^0-__const_10000^post71 == 0 /\ r_off32^0-r_off32^post71 == 0 /\ -rat26^post71+rat26^0 == 0 /\ exit_stat^0-exit_stat^post71 == 0 /\ __const_50^0-__const_50^post71 == 0 /\ bytes_out^0-bytes_out^post71 == 0 /\ out_count^0-out_count^post71 == 0 /\ c37^0-c37^post71 == 0 /\ -maxbits^post71+maxbits^0 == 0 /\ count^0-count^post71 == 0 /\ -in_count^post71+in_count^0 == 0 /\ -__const_9^post71+__const_9^0 == 0 /\ __const_256^0-__const_256^post71 == 0 /\ -hsize_reg10^post71+hsize_reg10^0 == 0 /\ -ratio^post71+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post71 == 0 /\ -hsize^post71+hsize^0 == 0 /\ -hsize___019^post71+hsize___019^0 == 0 /\ -n40^post71+n40^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post71 == 0 /\ -__const_65536^post71+__const_65536^0 == 0 /\ __const_257^0-__const_257^post71 == 0 /\ 1+code31^0 <= 0 /\ i6^0-i6^post71 == 0 /\ -__const_2147483647^post71+__const_2147483647^0 == 0 /\ -__const_8^post71+__const_8^0 == 0 /\ tabort4^0-tabort4^post71 == 0 /\ -__const_8388607^post71+__const_8388607^0 == 0 /\ -i29^post71+i29^0 == 0 /\ -ret_getbyte25^post71+ret_getbyte25^0 == 0 /\ bits33^0-bits33^post71 == 0 /\ n44^0-n44^post71 == 0 /\ -i45^post71+i45^0 == 0 /\ hsize___027^0-hsize___027^post71 == 0 /\ maxcode^0-maxcode^post71 == 0 /\ -clear_flg^post71+clear_flg^0 == 0 /\ n_bits^0-n_bits^post71 == 0 /\ i3^0-i3^post71 == 0 /\ hshift11^0-hshift11^post71 == 0 /\ checkpoint^0-checkpoint^post71 == 0 /\ -__const_429496^post71+__const_429496^0 == 0), cost: 1
  71: l51 -> l50 : __const_10000^0'=__const_10000^post72, __const_16^0'=__const_16^post72, __const_2147483647^0'=__const_2147483647^post72, __const_256^0'=__const_256^post72, __const_257^0'=__const_257^post72, __const_429496^0'=__const_429496^post72, __const_50^0'=__const_50^post72, __const_53^0'=__const_53^post72, __const_65536^0'=__const_65536^post72, __const_8388607^0'=__const_8388607^post72, __const_8^0'=__const_8^post72, __const_9^0'=__const_9^post72, apsim_bound11113^0'=apsim_bound11113^post72, apsim_incnt^0'=apsim_incnt^post72, bits33^0'=bits33^post72, block_compress^0'=block_compress^post72, bytes_out^0'=bytes_out^post72, c37^0'=c37^post72, c7^0'=c7^post72, checkpoint^0'=checkpoint^post72, clear_flg^0'=clear_flg^post72, code31^0'=code31^post72, count^0'=count^post72, disp9^0'=disp9^post72, ent8^0'=ent8^post72, exit_stat^0'=exit_stat^post72, fcode5^0'=fcode5^post72, free_ent^0'=free_ent^post72, hshift11^0'=hshift11^post72, hsize^0'=hsize^post72, hsize___019^0'=hsize___019^post72, hsize___027^0'=hsize___027^post72, hsize_reg10^0'=hsize_reg10^post72, i21^0'=i21^post72, i29^0'=i29^post72, i3^0'=i3^post72, i41^0'=i41^post72, i45^0'=i45^post72, i6^0'=i6^post72, in_count^0'=in_count^post72, incnt^0'=incnt^post72, m122^0'=m122^post72, m130^0'=m130^post72, maxbits^0'=maxbits^post72, maxcode^0'=maxcode^post72, maxmaxcode^0'=maxmaxcode^post72, n40^0'=n40^post72, n44^0'=n44^post72, n_bits^0'=n_bits^post72, offset^0'=offset^post72, out_count^0'=out_count^post72, r_off32^0'=r_off32^post72, rat26^0'=rat26^post72, ratio^0'=ratio^post72, ret_getbyte18^0'=ret_getbyte18^post72, ret_getbyte25^0'=ret_getbyte25^post72, seed2^0'=seed2^post72, tabort4^0'=tabort4^post72, tmp12^0'=tmp12^post72, tmp___014^0'=tmp___014^post72, tmp___017^0'=tmp___017^post72, tmp___024^0'=tmp___024^post72, tmp___115^0'=tmp___115^post72, (0 == 0 /\ disp9^0-disp9^post72 == 0 /\ -tabort4^post72+tabort4^0 == 0 /\ -seed2^post72+seed2^0 == 0 /\ -i29^post72+i29^0 == 0 /\ -i41^post72+i41^0 == 0 /\ checkpoint^0-checkpoint^post72 == 0 /\ n40^0-n40^post72 == 0 /\ -__const_8388607^post72+__const_8388607^0 == 0 /\ count^0-count^post72 == 0 /\ out_count^0-out_count^post72 == 0 /\ ret_getbyte25^0-ret_getbyte25^post72 == 0 /\ bits33^post72-bits33^0+__const_8^0-r_off32^post72 == 0 /\ __const_10000^0-__const_10000^post72 == 0 /\ -free_ent^post72+free_ent^0 == 0 /\ -c7^post72+c7^0 == 0 /\ offset^0-offset^post72 == 0 /\ -tmp___024^post72+tmp___024^0 == 0 /\ -ratio^post72+ratio^0 == 0 /\ -__const_2147483647^post72+__const_2147483647^0 == 0 /\ -__const_9^post72+__const_9^0 == 0 /\ i3^0-i3^post72 == 0 /\ -clear_flg^post72+clear_flg^0 == 0 /\ -hsize_reg10^post72+hsize_reg10^0 == 0 /\ hsize___027^0-hsize___027^post72 == 0 /\ -i21^post72+i21^0 == 0 /\ -hsize___019^post72+hsize___019^0 == 0 /\ -code31^0 <= 0 /\ __const_16^0-__const_16^post72 == 0 /\ maxmaxcode^0-maxmaxcode^post72 == 0 /\ -tmp___014^post72+tmp___014^0 == 0 /\ __const_53^0-__const_53^post72 == 0 /\ -n_bits^post72+n_bits^0 == 0 /\ __const_257^0-__const_257^post72 == 0 /\ -i45^post72+i45^0 == 0 /\ -m122^post72+m122^0 == 0 /\ apsim_incnt^0-apsim_incnt^post72 == 0 /\ ret_getbyte18^0-ret_getbyte18^post72 == 0 /\ hshift11^0-hshift11^post72 == 0 /\ -incnt^post72+incnt^0 == 0 /\ __const_256^0-__const_256^post72 == 0 /\ -__const_65536^post72+__const_65536^0 == 0 /\ tmp12^0-tmp12^post72 == 0 /\ tmp___115^0-tmp___115^post72 == 0 /\ n44^0-n44^post72 == 0 /\ -__const_429496^post72+__const_429496^0 == 0 /\ -maxbits^post72+maxbits^0 == 0 /\ m130^0-m130^post72 == 0 /\ -maxcode^post72+maxcode^0 == 0 /\ fcode5^0-fcode5^post72 == 0 /\ bytes_out^0-bytes_out^post72 == 0 /\ -ent8^post72+ent8^0 == 0 /\ -apsim_bound11113^post72+apsim_bound11113^0 == 0 /\ -in_count^post72+in_count^0 == 0 /\ i6^0-i6^post72 == 0 /\ exit_stat^0-exit_stat^post72 == 0 /\ -hsize^post72+hsize^0 == 0 /\ tmp___017^0-tmp___017^post72 == 0 /\ __const_8^0-__const_8^post72 == 0 /\ __const_50^0-__const_50^post72 == 0 /\ rat26^0-rat26^post72 == 0 /\ -block_compress^post72+block_compress^0 == 0 /\ c37^0-c37^post72 == 0), cost: 1
  77: l52 -> l53 : __const_10000^0'=__const_10000^post78, __const_16^0'=__const_16^post78, __const_2147483647^0'=__const_2147483647^post78, __const_256^0'=__const_256^post78, __const_257^0'=__const_257^post78, __const_429496^0'=__const_429496^post78, __const_50^0'=__const_50^post78, __const_53^0'=__const_53^post78, __const_65536^0'=__const_65536^post78, __const_8388607^0'=__const_8388607^post78, __const_8^0'=__const_8^post78, __const_9^0'=__const_9^post78, apsim_bound11113^0'=apsim_bound11113^post78, apsim_incnt^0'=apsim_incnt^post78, bits33^0'=bits33^post78, block_compress^0'=block_compress^post78, bytes_out^0'=bytes_out^post78, c37^0'=c37^post78, c7^0'=c7^post78, checkpoint^0'=checkpoint^post78, clear_flg^0'=clear_flg^post78, code31^0'=code31^post78, count^0'=count^post78, disp9^0'=disp9^post78, ent8^0'=ent8^post78, exit_stat^0'=exit_stat^post78, fcode5^0'=fcode5^post78, free_ent^0'=free_ent^post78, hshift11^0'=hshift11^post78, hsize^0'=hsize^post78, hsize___019^0'=hsize___019^post78, hsize___027^0'=hsize___027^post78, hsize_reg10^0'=hsize_reg10^post78, i21^0'=i21^post78, i29^0'=i29^post78, i3^0'=i3^post78, i41^0'=i41^post78, i45^0'=i45^post78, i6^0'=i6^post78, in_count^0'=in_count^post78, incnt^0'=incnt^post78, m122^0'=m122^post78, m130^0'=m130^post78, maxbits^0'=maxbits^post78, maxcode^0'=maxcode^post78, maxmaxcode^0'=maxmaxcode^post78, n40^0'=n40^post78, n44^0'=n44^post78, n_bits^0'=n_bits^post78, offset^0'=offset^post78, out_count^0'=out_count^post78, r_off32^0'=r_off32^post78, rat26^0'=rat26^post78, ratio^0'=ratio^post78, ret_getbyte18^0'=ret_getbyte18^post78, ret_getbyte25^0'=ret_getbyte25^post78, seed2^0'=seed2^post78, tabort4^0'=tabort4^post78, tmp12^0'=tmp12^post78, tmp___014^0'=tmp___014^post78, tmp___017^0'=tmp___017^post78, tmp___024^0'=tmp___024^post78, tmp___115^0'=tmp___115^post78, (0 == 0 /\ tmp___115^0-tmp___115^post78 == 0 /\ __const_50^0-__const_50^post78 == 0 /\ bits33^0-bits33^post78 == 0 /\ -__const_8^post78+__const_8^0 == 0 /\ -apsim_bound11113^post78+apsim_bound11113^0 == 0 /\ -hsize___027^post78+hsize___027^0 == 0 /\ tmp___014^0-tmp___014^post78 == 0 /\ -hsize_reg10^post78+hsize_reg10^0 == 0 /\ n44^0-n44^post78 == 0 /\ hshift11^0-hshift11^post78 == 0 /\ apsim_incnt^0-apsim_incnt^post78 == 0 /\ -hsize^post78+hsize^0 == 0 /\ -__const_429496^post78+__const_429496^0 == 0 /\ __const_53^0-__const_53^post78 == 0 /\ -__const_2147483647^post78+__const_2147483647^0 == 0 /\ -i41^post78+i41^0 == 0 /\ -__const_10000^post78+__const_10000^0 == 0 /\ -n_bits^post78+n_bits^0 == 0 /\ free_ent^0-free_ent^post78 == 0 /\ ret_getbyte25^0-ret_getbyte25^post78 == 0 /\ c37^0-c37^post78 == 0 /\ -incnt^post78+incnt^0 == 0 /\ -__const_65536^post78+__const_65536^0 == 0 /\ -count^post78+count^0 == 0 /\ -fcode5^post78+fcode5^0 == 0 /\ code31^0-code31^post78 == 0 /\ -seed2^post78+seed2^0 == 0 /\ -maxbits^post78+maxbits^0 == 0 /\ __const_16^0-__const_16^post78 == 0 /\ c7^0-c7^post78 == 0 /\ -i29^post78+i29^0 == 0 /\ -tmp___024^post78+tmp___024^0 == 0 /\ tmp12^0-tmp12^post78 == 0 /\ __const_257^0-__const_257^post78 == 0 /\ -in_count^post78+in_count^0 == 0 /\ -__const_8388607^post78+__const_8388607^0 == 0 /\ -i6^post78+i6^0 == 0 /\ hsize___019^0-hsize___019^post78 == 0 /\ -checkpoint^post78+checkpoint^0 == 0 /\ -clear_flg^post78+clear_flg^0 == 0 /\ -block_compress^post78+block_compress^0 == 0 /\ -bytes_out^post78+bytes_out^0 == 0 /\ -ratio^post78+ratio^0 == 0 /\ -ret_getbyte18^post78+ret_getbyte18^0 == 0 /\ i21^0-i21^post78 == 0 /\ -i3^post78+i3^0 == 0 /\ -__const_256^post78+__const_256^0 == 0 /\ out_count^0-out_count^post78 == 0 /\ -m122^post78+m122^0 == 0 /\ __const_9^0-__const_9^post78 == 0 /\ -tabort4^post78+tabort4^0 == 0 /\ -r_off32^post78+r_off32^0 == 0 /\ m130^0-m130^post78 == 0 /\ offset^0-offset^post78 == 0 /\ i45^0-i45^post78 == 0 /\ -exit_stat^post78+exit_stat^0 == 0 /\ -disp9^post78+disp9^0 == 0 /\ ent8^0-ent8^post78 == 0 /\ maxmaxcode^0-maxmaxcode^post78 == 0 /\ -n40^post78+n40^0 == 0 /\ -maxcode^post78+maxcode^0 == 0 /\ -tmp___017^post78+tmp___017^0 == 0), cost: 1
  78: l53 -> l10 : __const_10000^0'=__const_10000^post79, __const_16^0'=__const_16^post79, __const_2147483647^0'=__const_2147483647^post79, __const_256^0'=__const_256^post79, __const_257^0'=__const_257^post79, __const_429496^0'=__const_429496^post79, __const_50^0'=__const_50^post79, __const_53^0'=__const_53^post79, __const_65536^0'=__const_65536^post79, __const_8388607^0'=__const_8388607^post79, __const_8^0'=__const_8^post79, __const_9^0'=__const_9^post79, apsim_bound11113^0'=apsim_bound11113^post79, apsim_incnt^0'=apsim_incnt^post79, bits33^0'=bits33^post79, block_compress^0'=block_compress^post79, bytes_out^0'=bytes_out^post79, c37^0'=c37^post79, c7^0'=c7^post79, checkpoint^0'=checkpoint^post79, clear_flg^0'=clear_flg^post79, code31^0'=code31^post79, count^0'=count^post79, disp9^0'=disp9^post79, ent8^0'=ent8^post79, exit_stat^0'=exit_stat^post79, fcode5^0'=fcode5^post79, free_ent^0'=free_ent^post79, hshift11^0'=hshift11^post79, hsize^0'=hsize^post79, hsize___019^0'=hsize___019^post79, hsize___027^0'=hsize___027^post79, hsize_reg10^0'=hsize_reg10^post79, i21^0'=i21^post79, i29^0'=i29^post79, i3^0'=i3^post79, i41^0'=i41^post79, i45^0'=i45^post79, i6^0'=i6^post79, in_count^0'=in_count^post79, incnt^0'=incnt^post79, m122^0'=m122^post79, m130^0'=m130^post79, maxbits^0'=maxbits^post79, maxcode^0'=maxcode^post79, maxmaxcode^0'=maxmaxcode^post79, n40^0'=n40^post79, n44^0'=n44^post79, n_bits^0'=n_bits^post79, offset^0'=offset^post79, out_count^0'=out_count^post79, r_off32^0'=r_off32^post79, rat26^0'=rat26^post79, ratio^0'=ratio^post79, ret_getbyte18^0'=ret_getbyte18^post79, ret_getbyte25^0'=ret_getbyte25^post79, seed2^0'=seed2^post79, tabort4^0'=tabort4^post79, tmp12^0'=tmp12^post79, tmp___014^0'=tmp___014^post79, tmp___017^0'=tmp___017^post79, tmp___024^0'=tmp___024^post79, tmp___115^0'=tmp___115^post79, (-seed2^post79+seed2^0 == 0 /\ code31^0-code31^post79 == 0 /\ maxcode^0-maxcode^post79 == 0 /\ offset^0-offset^post79 == 0 /\ -n_bits^post79+n_bits^0 == 0 /\ __const_53^0-__const_53^post79 == 0 /\ 1+m130^post79 == 0 /\ ret_getbyte25^0-ret_getbyte25^post79 == 0 /\ c37^0-c37^post79 == 0 /\ __const_16^0-__const_16^post79 == 0 /\ -i6^post79+i6^0 == 0 /\ ent8^0-ent8^post79 == 0 /\ bits33^0-bits33^post79 == 0 /\ maxmaxcode^0-maxmaxcode^post79 == 0 /\ -count^post79+count^0 == 0 /\ -in_count^post79+in_count^0 == 0 /\ -r_off32^post79+r_off32^0 == 0 /\ -disp9^post79+disp9^0 == 0 /\ -apsim_bound11113^post79+apsim_bound11113^0 == 0 /\ -checkpoint^post79+checkpoint^0 == 0 /\ -hsize___027^post79+__const_16^0+i29^post79 == 0 /\ c7^0-c7^post79 == 0 /\ -exit_stat^post79+exit_stat^0 == 0 /\ -hsize^post79+hsize^0 == 0 /\ tabort4^0-tabort4^post79 == 0 /\ apsim_incnt^0-apsim_incnt^post79 == 0 /\ -maxbits^post79+maxbits^0 == 0 /\ __const_257^0-__const_257^post79 == 0 /\ hshift11^0-hshift11^post79 == 0 /\ -n40^post79+n40^0 == 0 /\ hsize___019^0-hsize___019^post79 == 0 /\ tmp___115^0-tmp___115^post79 == 0 /\ __const_256^0-__const_256^post79 == 0 /\ -m122^post79+m122^0 == 0 /\ __const_50^0-__const_50^post79 == 0 /\ -tmp___014^post79+tmp___014^0 == 0 /\ n44^0-n44^post79 == 0 /\ -__const_429496^post79+__const_429496^0 == 0 /\ -i3^post79+i3^0 == 0 /\ hsize___027^post79-hsize^0 == 0 /\ -i41^post79+i41^0 == 0 /\ free_ent^0-free_ent^post79 == 0 /\ tmp12^0-tmp12^post79 == 0 /\ tmp___017^0-tmp___017^post79 == 0 /\ rat26^0-rat26^post79 == 0 /\ ratio^post79 == 0 /\ -__const_9^post79+__const_9^0 == 0 /\ -__const_65536^post79+__const_65536^0 == 0 /\ -bytes_out^post79+bytes_out^0 == 0 /\ -clear_flg^post79+clear_flg^0 == 0 /\ -ret_getbyte18^post79+ret_getbyte18^0 == 0 /\ i45^0-i45^post79 == 0 /\ -hsize_reg10^post79+hsize_reg10^0 == 0 /\ -tmp___024^post79+tmp___024^0 == 0 /\ rat26^0-ratio^0 <= 0 /\ -fcode5^post79+fcode5^0 == 0 /\ -incnt^post79+incnt^0 == 0 /\ block_compress^0-block_compress^post79 == 0 /\ -__const_8^post79+__const_8^0 == 0 /\ -__const_2147483647^post79+__const_2147483647^0 == 0 /\ -__const_8388607^post79+__const_8388607^0 == 0 /\ out_count^0-out_count^post79 == 0 /\ -i21^post79+i21^0 == 0 /\ __const_10000^0-__const_10000^post79 == 0), cost: 1
  79: l53 -> l35 : __const_10000^0'=__const_10000^post80, __const_16^0'=__const_16^post80, __const_2147483647^0'=__const_2147483647^post80, __const_256^0'=__const_256^post80, __const_257^0'=__const_257^post80, __const_429496^0'=__const_429496^post80, __const_50^0'=__const_50^post80, __const_53^0'=__const_53^post80, __const_65536^0'=__const_65536^post80, __const_8388607^0'=__const_8388607^post80, __const_8^0'=__const_8^post80, __const_9^0'=__const_9^post80, apsim_bound11113^0'=apsim_bound11113^post80, apsim_incnt^0'=apsim_incnt^post80, bits33^0'=bits33^post80, block_compress^0'=block_compress^post80, bytes_out^0'=bytes_out^post80, c37^0'=c37^post80, c7^0'=c7^post80, checkpoint^0'=checkpoint^post80, clear_flg^0'=clear_flg^post80, code31^0'=code31^post80, count^0'=count^post80, disp9^0'=disp9^post80, ent8^0'=ent8^post80, exit_stat^0'=exit_stat^post80, fcode5^0'=fcode5^post80, free_ent^0'=free_ent^post80, hshift11^0'=hshift11^post80, hsize^0'=hsize^post80, hsize___019^0'=hsize___019^post80, hsize___027^0'=hsize___027^post80, hsize_reg10^0'=hsize_reg10^post80, i21^0'=i21^post80, i29^0'=i29^post80, i3^0'=i3^post80, i41^0'=i41^post80, i45^0'=i45^post80, i6^0'=i6^post80, in_count^0'=in_count^post80, incnt^0'=incnt^post80, m122^0'=m122^post80, m130^0'=m130^post80, maxbits^0'=maxbits^post80, maxcode^0'=maxcode^post80, maxmaxcode^0'=maxmaxcode^post80, n40^0'=n40^post80, n44^0'=n44^post80, n_bits^0'=n_bits^post80, offset^0'=offset^post80, out_count^0'=out_count^post80, r_off32^0'=r_off32^post80, rat26^0'=rat26^post80, ratio^0'=ratio^post80, ret_getbyte18^0'=ret_getbyte18^post80, ret_getbyte25^0'=ret_getbyte25^post80, seed2^0'=seed2^post80, tabort4^0'=tabort4^post80, tmp12^0'=tmp12^post80, tmp___014^0'=tmp___014^post80, tmp___017^0'=tmp___017^post80, tmp___024^0'=tmp___024^post80, tmp___115^0'=tmp___115^post80, (__const_256^0-__const_256^post80 == 0 /\ -ent8^post80+ent8^0 == 0 /\ -hsize___019^post80+hsize___019^0 == 0 /\ -hsize^post80+hsize^0 == 0 /\ n44^0-n44^post80 == 0 /\ -n40^post80+n40^0 == 0 /\ -apsim_bound11113^post80+apsim_bound11113^0 == 0 /\ -free_ent^post80+free_ent^0 == 0 /\ -__const_9^post80+__const_9^0 == 0 /\ m130^0-m130^post80 == 0 /\ -__const_8388607^post80+__const_8388607^0 == 0 /\ apsim_incnt^0-apsim_incnt^post80 == 0 /\ bytes_out^0-bytes_out^post80 == 0 /\ count^0-count^post80 == 0 /\ ret_getbyte25^0-ret_getbyte25^post80 == 0 /\ -seed2^post80+seed2^0 == 0 /\ c37^0-c37^post80 == 0 /\ -bits33^post80+bits33^0 == 0 /\ __const_50^0-__const_50^post80 == 0 /\ i6^0-i6^post80 == 0 /\ -i29^post80+i29^0 == 0 /\ -i41^post80+i41^0 == 0 /\ -n_bits^post80+n_bits^0 == 0 /\ __const_257^0-__const_257^post80 == 0 /\ __const_53^0-__const_53^post80 == 0 /\ -__const_429496^post80+__const_429496^0 == 0 /\ m122^0-m122^post80 == 0 /\ hshift11^0-hshift11^post80 == 0 /\ -clear_flg^post80+clear_flg^0 == 0 /\ -block_compress^post80+block_compress^0 == 0 /\ tmp___017^0-tmp___017^post80 == 0 /\ -c7^post80+c7^0 == 0 /\ tmp12^0-tmp12^post80 == 0 /\ 1-rat26^0+ratio^0 <= 0 /\ rat26^0-rat26^post80 == 0 /\ __const_8^0-__const_8^post80 == 0 /\ -__const_2147483647^post80+__const_2147483647^0 == 0 /\ -tmp___024^post80+tmp___024^0 == 0 /\ -maxbits^post80+maxbits^0 == 0 /\ -tmp___115^post80+tmp___115^0 == 0 /\ hsize___027^0-hsize___027^post80 == 0 /\ fcode5^0-fcode5^post80 == 0 /\ -i21^post80+i21^0 == 0 /\ r_off32^0-r_off32^post80 == 0 /\ -incnt^post80+incnt^0 == 0 /\ -rat26^0+ratio^post80 == 0 /\ tabort4^0-tabort4^post80 == 0 /\ i3^0-i3^post80 == 0 /\ ret_getbyte18^0-ret_getbyte18^post80 == 0 /\ checkpoint^0-checkpoint^post80 == 0 /\ out_count^0-out_count^post80 == 0 /\ -tmp___014^post80+tmp___014^0 == 0 /\ __const_16^0-__const_16^post80 == 0 /\ -code31^post80+code31^0 == 0 /\ -offset^post80+offset^0 == 0 /\ -i45^post80+i45^0 == 0 /\ __const_10000^0-__const_10000^post80 == 0 /\ maxmaxcode^0-maxmaxcode^post80 == 0 /\ maxcode^0-maxcode^post80 == 0 /\ hsize_reg10^0-hsize_reg10^post80 == 0 /\ -__const_65536^post80+__const_65536^0 == 0 /\ -in_count^post80+in_count^0 == 0 /\ -disp9^post80+disp9^0 == 0 /\ exit_stat^0-exit_stat^post80 == 0), cost: 1
  80: l54 -> l52 : __const_10000^0'=__const_10000^post81, __const_16^0'=__const_16^post81, __const_2147483647^0'=__const_2147483647^post81, __const_256^0'=__const_256^post81, __const_257^0'=__const_257^post81, __const_429496^0'=__const_429496^post81, __const_50^0'=__const_50^post81, __const_53^0'=__const_53^post81, __const_65536^0'=__const_65536^post81, __const_8388607^0'=__const_8388607^post81, __const_8^0'=__const_8^post81, __const_9^0'=__const_9^post81, apsim_bound11113^0'=apsim_bound11113^post81, apsim_incnt^0'=apsim_incnt^post81, bits33^0'=bits33^post81, block_compress^0'=block_compress^post81, bytes_out^0'=bytes_out^post81, c37^0'=c37^post81, c7^0'=c7^post81, checkpoint^0'=checkpoint^post81, clear_flg^0'=clear_flg^post81, code31^0'=code31^post81, count^0'=count^post81, disp9^0'=disp9^post81, ent8^0'=ent8^post81, exit_stat^0'=exit_stat^post81, fcode5^0'=fcode5^post81, free_ent^0'=free_ent^post81, hshift11^0'=hshift11^post81, hsize^0'=hsize^post81, hsize___019^0'=hsize___019^post81, hsize___027^0'=hsize___027^post81, hsize_reg10^0'=hsize_reg10^post81, i21^0'=i21^post81, i29^0'=i29^post81, i3^0'=i3^post81, i41^0'=i41^post81, i45^0'=i45^post81, i6^0'=i6^post81, in_count^0'=in_count^post81, incnt^0'=incnt^post81, m122^0'=m122^post81, m130^0'=m130^post81, maxbits^0'=maxbits^post81, maxcode^0'=maxcode^post81, maxmaxcode^0'=maxmaxcode^post81, n40^0'=n40^post81, n44^0'=n44^post81, n_bits^0'=n_bits^post81, offset^0'=offset^post81, out_count^0'=out_count^post81, r_off32^0'=r_off32^post81, rat26^0'=rat26^post81, ratio^0'=ratio^post81, ret_getbyte18^0'=ret_getbyte18^post81, ret_getbyte25^0'=ret_getbyte25^post81, seed2^0'=seed2^post81, tabort4^0'=tabort4^post81, tmp12^0'=tmp12^post81, tmp___014^0'=tmp___014^post81, tmp___017^0'=tmp___017^post81, tmp___024^0'=tmp___024^post81, tmp___115^0'=tmp___115^post81, (__const_53^0-__const_53^post81 == 0 /\ -i21^post81+i21^0 == 0 /\ m122^0-m122^post81 == 0 /\ m130^0-m130^post81 == 0 /\ bytes_out^0-bytes_out^post81 == 0 /\ offset^0-offset^post81 == 0 /\ ret_getbyte25^0-ret_getbyte25^post81 == 0 /\ apsim_incnt^0-apsim_incnt^post81 == 0 /\ __const_65536^0-__const_65536^post81 == 0 /\ -r_off32^post81+r_off32^0 == 0 /\ -n_bits^post81+n_bits^0 == 0 /\ -ratio^post81+ratio^0 == 0 /\ __const_16^0-__const_16^post81 == 0 /\ -c37^post81+c37^0 == 0 /\ -bits33^post81+bits33^0 == 0 /\ -c7^post81+c7^0 == 0 /\ __const_257^0-__const_257^post81 == 0 /\ hsize___027^0-hsize___027^post81 == 0 /\ clear_flg^0-clear_flg^post81 == 0 /\ __const_8^0-__const_8^post81 == 0 /\ -disp9^post81+disp9^0 == 0 /\ -__const_256^post81+__const_256^0 == 0 /\ in_count^0-in_count^post81 == 0 /\ -tmp___024^post81+tmp___024^0 == 0 /\ tmp12^0-tmp12^post81 == 0 /\ -block_compress^post81+block_compress^0 == 0 /\ -n40^post81+n40^0 == 0 /\ checkpoint^0-checkpoint^post81 == 0 /\ i6^0-i6^post81 == 0 /\ n44^0-n44^post81 == 0 /\ i3^0-i3^post81 == 0 /\ -maxbits^post81+maxbits^0 == 0 /\ count^0-count^post81 == 0 /\ ret_getbyte18^0-ret_getbyte18^post81 == 0 /\ -tmp___014^post81+tmp___014^0 == 0 /\ -tmp___115^post81+tmp___115^0 == 0 /\ -free_ent^post81+free_ent^0 == 0 /\ -code31^post81+code31^0 == 0 /\ -i45^post81+i45^0 == 0 /\ -tabort4^post81+tabort4^0 == 0 /\ hshift11^0-hshift11^post81 == 0 /\ 1-rat26^0 <= 0 /\ rat26^0-rat26^post81 == 0 /\ -__const_429496^post81+__const_429496^0 == 0 /\ -hsize_reg10^post81+hsize_reg10^0 == 0 /\ -__const_50^post81+__const_50^0 == 0 /\ -incnt^post81+incnt^0 == 0 /\ -hsize___019^post81+hsize___019^0 == 0 /\ __const_9^0-__const_9^post81 == 0 /\ -__const_2147483647^post81+__const_2147483647^0 == 0 /\ exit_stat^0-exit_stat^post81 == 0 /\ fcode5^0-fcode5^post81 == 0 /\ -ent8^post81+ent8^0 == 0 /\ -apsim_bound11113^post81+apsim_bound11113^0 == 0 /\ -hsize^post81+hsize^0 == 0 /\ maxcode^0-maxcode^post81 == 0 /\ -__const_8388607^post81+__const_8388607^0 == 0 /\ maxmaxcode^0-maxmaxcode^post81 == 0 /\ tmp___017^0-tmp___017^post81 == 0 /\ -i29^post81+i29^0 == 0 /\ -__const_10000^post81+__const_10000^0 == 0 /\ out_count^0-out_count^post81 == 0 /\ -i41^post81+i41^0 == 0 /\ -seed2^post81+seed2^0 == 0), cost: 1
  81: l54 -> l52 : __const_10000^0'=__const_10000^post82, __const_16^0'=__const_16^post82, __const_2147483647^0'=__const_2147483647^post82, __const_256^0'=__const_256^post82, __const_257^0'=__const_257^post82, __const_429496^0'=__const_429496^post82, __const_50^0'=__const_50^post82, __const_53^0'=__const_53^post82, __const_65536^0'=__const_65536^post82, __const_8388607^0'=__const_8388607^post82, __const_8^0'=__const_8^post82, __const_9^0'=__const_9^post82, apsim_bound11113^0'=apsim_bound11113^post82, apsim_incnt^0'=apsim_incnt^post82, bits33^0'=bits33^post82, block_compress^0'=block_compress^post82, bytes_out^0'=bytes_out^post82, c37^0'=c37^post82, c7^0'=c7^post82, checkpoint^0'=checkpoint^post82, clear_flg^0'=clear_flg^post82, code31^0'=code31^post82, count^0'=count^post82, disp9^0'=disp9^post82, ent8^0'=ent8^post82, exit_stat^0'=exit_stat^post82, fcode5^0'=fcode5^post82, free_ent^0'=free_ent^post82, hshift11^0'=hshift11^post82, hsize^0'=hsize^post82, hsize___019^0'=hsize___019^post82, hsize___027^0'=hsize___027^post82, hsize_reg10^0'=hsize_reg10^post82, i21^0'=i21^post82, i29^0'=i29^post82, i3^0'=i3^post82, i41^0'=i41^post82, i45^0'=i45^post82, i6^0'=i6^post82, in_count^0'=in_count^post82, incnt^0'=incnt^post82, m122^0'=m122^post82, m130^0'=m130^post82, maxbits^0'=maxbits^post82, maxcode^0'=maxcode^post82, maxmaxcode^0'=maxmaxcode^post82, n40^0'=n40^post82, n44^0'=n44^post82, n_bits^0'=n_bits^post82, offset^0'=offset^post82, out_count^0'=out_count^post82, r_off32^0'=r_off32^post82, rat26^0'=rat26^post82, ratio^0'=ratio^post82, ret_getbyte18^0'=ret_getbyte18^post82, ret_getbyte25^0'=ret_getbyte25^post82, seed2^0'=seed2^post82, tabort4^0'=tabort4^post82, tmp12^0'=tmp12^post82, tmp___014^0'=tmp___014^post82, tmp___017^0'=tmp___017^post82, tmp___024^0'=tmp___024^post82, tmp___115^0'=tmp___115^post82, (-apsim_bound11113^post82+apsim_bound11113^0 == 0 /\ -i45^post82+i45^0 == 0 /\ -i29^post82+i29^0 == 0 /\ -m122^post82+m122^0 == 0 /\ -__const_50^post82+__const_50^0 == 0 /\ maxcode^0-maxcode^post82 == 0 /\ bits33^0-bits33^post82 == 0 /\ -i41^post82+i41^0 == 0 /\ __const_257^0-__const_257^post82 == 0 /\ i6^0-i6^post82 == 0 /\ checkpoint^0-checkpoint^post82 == 0 /\ -incnt^post82+incnt^0 == 0 /\ exit_stat^0-exit_stat^post82 == 0 /\ apsim_incnt^0-apsim_incnt^post82 == 0 /\ out_count^0-out_count^post82 == 0 /\ maxmaxcode^0-maxmaxcode^post82 == 0 /\ __const_65536^0-__const_65536^post82 == 0 /\ -n40^post82+n40^0 == 0 /\ offset^0-offset^post82 == 0 /\ m130^0-m130^post82 == 0 /\ -in_count^post82+in_count^0 == 0 /\ tmp___014^0-tmp___014^post82 == 0 /\ 1+rat26^0 <= 0 /\ -__const_8388607^post82+__const_8388607^0 == 0 /\ -clear_flg^post82+clear_flg^0 == 0 /\ count^0-count^post82 == 0 /\ __const_53^0-__const_53^post82 == 0 /\ i3^0-i3^post82 == 0 /\ tmp12^0-tmp12^post82 == 0 /\ -hsize_reg10^post82+hsize_reg10^0 == 0 /\ hsize___027^0-hsize___027^post82 == 0 /\ -i21^post82+i21^0 == 0 /\ -hsize^post82+hsize^0 == 0 /\ -c7^post82+c7^0 == 0 /\ -ret_getbyte18^post82+ret_getbyte18^0 == 0 /\ -__const_256^post82+__const_256^0 == 0 /\ __const_8^0-__const_8^post82 == 0 /\ __const_429496^0-__const_429496^post82 == 0 /\ -__const_2147483647^post82+__const_2147483647^0 == 0 /\ -r_off32^post82+r_off32^0 == 0 /\ -n_bits^post82+n_bits^0 == 0 /\ -seed2^post82+seed2^0 == 0 /\ tmp___115^0-tmp___115^post82 == 0 /\ -tabort4^post82+tabort4^0 == 0 /\ -__const_10000^post82+__const_10000^0 == 0 /\ -code31^post82+code31^0 == 0 /\ -fcode5^post82+fcode5^0 == 0 /\ -disp9^post82+disp9^0 == 0 /\ -free_ent^post82+free_ent^0 == 0 /\ n44^0-n44^post82 == 0 /\ -tmp___024^post82+tmp___024^0 == 0 /\ -tmp___017^post82+tmp___017^0 == 0 /\ -ent8^post82+ent8^0 == 0 /\ -maxbits^post82+maxbits^0 == 0 /\ bytes_out^0-bytes_out^post82 == 0 /\ hsize___019^0-hsize___019^post82 == 0 /\ hshift11^0-hshift11^post82 == 0 /\ __const_16^0-__const_16^post82 == 0 /\ ret_getbyte25^0-ret_getbyte25^post82 == 0 /\ -block_compress^post82+block_compress^0 == 0 /\ rat26^0-rat26^post82 == 0 /\ __const_9^0-__const_9^post82 == 0 /\ c37^0-c37^post82 == 0 /\ -ratio^post82+ratio^0 == 0), cost: 1
  82: l54 -> l53 : __const_10000^0'=__const_10000^post83, __const_16^0'=__const_16^post83, __const_2147483647^0'=__const_2147483647^post83, __const_256^0'=__const_256^post83, __const_257^0'=__const_257^post83, __const_429496^0'=__const_429496^post83, __const_50^0'=__const_50^post83, __const_53^0'=__const_53^post83, __const_65536^0'=__const_65536^post83, __const_8388607^0'=__const_8388607^post83, __const_8^0'=__const_8^post83, __const_9^0'=__const_9^post83, apsim_bound11113^0'=apsim_bound11113^post83, apsim_incnt^0'=apsim_incnt^post83, bits33^0'=bits33^post83, block_compress^0'=block_compress^post83, bytes_out^0'=bytes_out^post83, c37^0'=c37^post83, c7^0'=c7^post83, checkpoint^0'=checkpoint^post83, clear_flg^0'=clear_flg^post83, code31^0'=code31^post83, count^0'=count^post83, disp9^0'=disp9^post83, ent8^0'=ent8^post83, exit_stat^0'=exit_stat^post83, fcode5^0'=fcode5^post83, free_ent^0'=free_ent^post83, hshift11^0'=hshift11^post83, hsize^0'=hsize^post83, hsize___019^0'=hsize___019^post83, hsize___027^0'=hsize___027^post83, hsize_reg10^0'=hsize_reg10^post83, i21^0'=i21^post83, i29^0'=i29^post83, i3^0'=i3^post83, i41^0'=i41^post83, i45^0'=i45^post83, i6^0'=i6^post83, in_count^0'=in_count^post83, incnt^0'=incnt^post83, m122^0'=m122^post83, m130^0'=m130^post83, maxbits^0'=maxbits^post83, maxcode^0'=maxcode^post83, maxmaxcode^0'=maxmaxcode^post83, n40^0'=n40^post83, n44^0'=n44^post83, n_bits^0'=n_bits^post83, offset^0'=offset^post83, out_count^0'=out_count^post83, r_off32^0'=r_off32^post83, rat26^0'=rat26^post83, ratio^0'=ratio^post83, ret_getbyte18^0'=ret_getbyte18^post83, ret_getbyte25^0'=ret_getbyte25^post83, seed2^0'=seed2^post83, tabort4^0'=tabort4^post83, tmp12^0'=tmp12^post83, tmp___014^0'=tmp___014^post83, tmp___017^0'=tmp___017^post83, tmp___024^0'=tmp___024^post83, tmp___115^0'=tmp___115^post83, (maxmaxcode^0-maxmaxcode^post83 == 0 /\ free_ent^0-free_ent^post83 == 0 /\ -disp9^post83+disp9^0 == 0 /\ -ent8^post83+ent8^0 == 0 /\ -fcode5^post83+fcode5^0 == 0 /\ __const_9^0-__const_9^post83 == 0 /\ -hsize_reg10^post83+hsize_reg10^0 == 0 /\ -tmp___017^post83+tmp___017^0 == 0 /\ -tmp___024^post83+tmp___024^0 == 0 /\ rat26^post83-__const_2147483647^0 == 0 /\ tmp___014^0-tmp___014^post83 == 0 /\ -__const_10000^post83+__const_10000^0 == 0 /\ bits33^0-bits33^post83 == 0 /\ n40^0-n40^post83 == 0 /\ i21^0-i21^post83 == 0 /\ -__const_256^post83+__const_256^0 == 0 /\ -tabort4^post83+tabort4^0 == 0 /\ i3^0-i3^post83 == 0 /\ tmp12^0-tmp12^post83 == 0 /\ checkpoint^0-checkpoint^post83 == 0 /\ __const_257^0-__const_257^post83 == 0 /\ rat26^0 <= 0 /\ apsim_incnt^0-apsim_incnt^post83 == 0 /\ n44^0-n44^post83 == 0 /\ -n_bits^post83+n_bits^0 == 0 /\ out_count^0-out_count^post83 == 0 /\ -i29^post83+i29^0 == 0 /\ -apsim_bound11113^post83+apsim_bound11113^0 == 0 /\ -__const_50^post83+__const_50^0 == 0 /\ offset^0-offset^post83 == 0 /\ __const_65536^0-__const_65536^post83 == 0 /\ exit_stat^0-exit_stat^post83 == 0 /\ count^0-count^post83 == 0 /\ __const_16^0-__const_16^post83 == 0 /\ -rat26^0 <= 0 /\ -clear_flg^post83+clear_flg^0 == 0 /\ -ratio^post83+ratio^0 == 0 /\ -ret_getbyte18^post83+ret_getbyte18^0 == 0 /\ -maxcode^post83+maxcode^0 == 0 /\ -maxbits^post83+maxbits^0 == 0 /\ -c7^post83+c7^0 == 0 /\ -i41^post83+i41^0 == 0 /\ -hsize^post83+hsize^0 == 0 /\ m130^0-m130^post83 == 0 /\ -i45^post83+i45^0 == 0 /\ __const_53^0-__const_53^post83 == 0 /\ -m122^post83+m122^0 == 0 /\ -__const_8388607^post83+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post83 == 0 /\ bytes_out^0-bytes_out^post83 == 0 /\ -incnt^post83+incnt^0 == 0 /\ block_compress^0-block_compress^post83 == 0 /\ tmp___115^0-tmp___115^post83 == 0 /\ ret_getbyte25^0-ret_getbyte25^post83 == 0 /\ -code31^post83+code31^0 == 0 /\ i6^0-i6^post83 == 0 /\ c37^0-c37^post83 == 0 /\ hsize___027^0-hsize___027^post83 == 0 /\ seed2^0-seed2^post83 == 0 /\ hsize___019^0-hsize___019^post83 == 0 /\ __const_429496^0-__const_429496^post83 == 0 /\ __const_2147483647^0-__const_2147483647^post83 == 0 /\ -in_count^post83+in_count^0 == 0 /\ -r_off32^post83+r_off32^0 == 0 /\ hshift11^0-hshift11^post83 == 0), cost: 1
  83: l55 -> l18 : __const_10000^0'=__const_10000^post84, __const_16^0'=__const_16^post84, __const_2147483647^0'=__const_2147483647^post84, __const_256^0'=__const_256^post84, __const_257^0'=__const_257^post84, __const_429496^0'=__const_429496^post84, __const_50^0'=__const_50^post84, __const_53^0'=__const_53^post84, __const_65536^0'=__const_65536^post84, __const_8388607^0'=__const_8388607^post84, __const_8^0'=__const_8^post84, __const_9^0'=__const_9^post84, apsim_bound11113^0'=apsim_bound11113^post84, apsim_incnt^0'=apsim_incnt^post84, bits33^0'=bits33^post84, block_compress^0'=block_compress^post84, bytes_out^0'=bytes_out^post84, c37^0'=c37^post84, c7^0'=c7^post84, checkpoint^0'=checkpoint^post84, clear_flg^0'=clear_flg^post84, code31^0'=code31^post84, count^0'=count^post84, disp9^0'=disp9^post84, ent8^0'=ent8^post84, exit_stat^0'=exit_stat^post84, fcode5^0'=fcode5^post84, free_ent^0'=free_ent^post84, hshift11^0'=hshift11^post84, hsize^0'=hsize^post84, hsize___019^0'=hsize___019^post84, hsize___027^0'=hsize___027^post84, hsize_reg10^0'=hsize_reg10^post84, i21^0'=i21^post84, i29^0'=i29^post84, i3^0'=i3^post84, i41^0'=i41^post84, i45^0'=i45^post84, i6^0'=i6^post84, in_count^0'=in_count^post84, incnt^0'=incnt^post84, m122^0'=m122^post84, m130^0'=m130^post84, maxbits^0'=maxbits^post84, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n40^0'=n40^post84, n44^0'=n44^post84, n_bits^0'=n_bits^post84, offset^0'=offset^post84, out_count^0'=out_count^post84, r_off32^0'=r_off32^post84, rat26^0'=rat26^post84, ratio^0'=ratio^post84, ret_getbyte18^0'=ret_getbyte18^post84, ret_getbyte25^0'=ret_getbyte25^post84, seed2^0'=seed2^post84, tabort4^0'=tabort4^post84, tmp12^0'=tmp12^post84, tmp___014^0'=tmp___014^post84, tmp___017^0'=tmp___017^post84, tmp___024^0'=tmp___024^post84, tmp___115^0'=tmp___115^post84, (0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post84 == 0 /\ n44^0-n44^post84 == 0 /\ -__const_10000^0+checkpoint^post84 == 0 /\ -c7^post84+c7^0 == 0 /\ hsize___027^0-hsize___027^post84 == 0 /\ -c37^post84+c37^0 == 0 /\ -ret_getbyte18^post84+ret_getbyte18^0 == 0 /\ incnt^post84-count^0 == 0 /\ __const_8388607^0-__const_8388607^post84 == 0 /\ -hsize_reg10^post84+hsize_reg10^0 == 0 /\ -hsize^post84+hsize^0 == 0 /\ ratio^post84 == 0 /\ -hsize___019^post84+hsize___019^0 == 0 /\ -n40^post84+n40^0 == 0 /\ -i45^post84+i45^0 == 0 /\ -m122^post84+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post84 == 0 /\ out_count^post84 == 0 /\ exit_stat^0-exit_stat^post84 == 0 /\ -i21^post84+i21^0 == 0 /\ -code31^post84+code31^0 == 0 /\ -__const_9^0+n_bits^post84 == 0 /\ -tabort4^post84+tabort4^0 == 0 /\ tmp12^0-tmp12^post84 == 0 /\ -__const_256^post84+__const_256^0 == 0 /\ __const_9^0-__const_9^post84 == 0 /\ tmp___014^0-tmp___014^post84 == 0 /\ m130^0-m130^post84 == 0 /\ i3^0-i3^post84 == 0 /\ bits33^0-bits33^post84 == 0 /\ -__const_53^0+apsim_incnt^post84 == 0 /\ -r_off32^post84+r_off32^0 == 0 /\ count^0-count^post84 == 0 /\ -__const_10000^post84+__const_10000^0 == 0 /\ -3+bytes_out^post84 == 0 /\ -disp9^post84+disp9^0 == 0 /\ __const_53^0-__const_53^post84 == 0 /\ -tmp___017^post84+tmp___017^0 == 0 /\ -i3^0+__const_50^0 <= 0 /\ -ent8^post84+ent8^0 == 0 /\ -tmp___024^post84+tmp___024^0 == 0 /\ tmp___115^0-tmp___115^post84 == 0 /\ __const_65536^0-__const_65536^post84 == 0 /\ -free_ent^post84+free_ent^0 == 0 /\ i6^post84 == 0 /\ maxbits^post84-__const_16^0 == 0 /\ -__const_429496^post84+__const_429496^0 == 0 /\ __const_16^0-__const_16^post84 == 0 /\ -__const_50^post84+__const_50^0 == 0 /\ hshift11^0-hshift11^post84 == 0 /\ -seed2^post84+seed2^0 == 0 /\ rat26^0-rat26^post84 == 0 /\ __const_257^0-__const_257^post84 == 0 /\ -i29^post84+i29^0 == 0 /\ -1+in_count^post84 == 0 /\ -__const_2147483647^post84+__const_2147483647^0 == 0 /\ -i41^post84+i41^0 == 0 /\ fcode5^0-fcode5^post84 == 0 /\ offset^post84 == 0 /\ __const_8^0-__const_8^post84 == 0 /\ clear_flg^post84 == 0 /\ -block_compress^post84+block_compress^0 == 0), cost: 1
  84: l55 -> l56 : __const_10000^0'=__const_10000^post85, __const_16^0'=__const_16^post85, __const_2147483647^0'=__const_2147483647^post85, __const_256^0'=__const_256^post85, __const_257^0'=__const_257^post85, __const_429496^0'=__const_429496^post85, __const_50^0'=__const_50^post85, __const_53^0'=__const_53^post85, __const_65536^0'=__const_65536^post85, __const_8388607^0'=__const_8388607^post85, __const_8^0'=__const_8^post85, __const_9^0'=__const_9^post85, apsim_bound11113^0'=apsim_bound11113^post85, apsim_incnt^0'=apsim_incnt^post85, bits33^0'=bits33^post85, block_compress^0'=block_compress^post85, bytes_out^0'=bytes_out^post85, c37^0'=c37^post85, c7^0'=c7^post85, checkpoint^0'=checkpoint^post85, clear_flg^0'=clear_flg^post85, code31^0'=code31^post85, count^0'=count^post85, disp9^0'=disp9^post85, ent8^0'=ent8^post85, exit_stat^0'=exit_stat^post85, fcode5^0'=fcode5^post85, free_ent^0'=free_ent^post85, hshift11^0'=hshift11^post85, hsize^0'=hsize^post85, hsize___019^0'=hsize___019^post85, hsize___027^0'=hsize___027^post85, hsize_reg10^0'=hsize_reg10^post85, i21^0'=i21^post85, i29^0'=i29^post85, i3^0'=i3^post85, i41^0'=i41^post85, i45^0'=i45^post85, i6^0'=i6^post85, in_count^0'=in_count^post85, incnt^0'=incnt^post85, m122^0'=m122^post85, m130^0'=m130^post85, maxbits^0'=maxbits^post85, maxcode^0'=maxcode^post85, maxmaxcode^0'=maxmaxcode^post85, n40^0'=n40^post85, n44^0'=n44^post85, n_bits^0'=n_bits^post85, offset^0'=offset^post85, out_count^0'=out_count^post85, r_off32^0'=r_off32^post85, rat26^0'=rat26^post85, ratio^0'=ratio^post85, ret_getbyte18^0'=ret_getbyte18^post85, ret_getbyte25^0'=ret_getbyte25^post85, seed2^0'=seed2^post85, tabort4^0'=tabort4^post85, tmp12^0'=tmp12^post85, tmp___014^0'=tmp___014^post85, tmp___017^0'=tmp___017^post85, tmp___024^0'=tmp___024^post85, tmp___115^0'=tmp___115^post85, (0 == 0 /\ __const_257^0-__const_257^post85 == 0 /\ i21^0-i21^post85 == 0 /\ exit_stat^0-exit_stat^post85 == 0 /\ __const_9^0-__const_9^post85 == 0 /\ rat26^0-rat26^post85 == 0 /\ tmp12^0-tmp12^post85 == 0 /\ checkpoint^0-checkpoint^post85 == 0 /\ offset^0-offset^post85 == 0 /\ i6^0-i6^post85 == 0 /\ maxmaxcode^0-maxmaxcode^post85 == 0 /\ hsize___027^0-hsize___027^post85 == 0 /\ out_count^0-out_count^post85 == 0 /\ -__const_50^post85+__const_50^0 == 0 /\ c37^0-c37^post85 == 0 /\ bits33^0-bits33^post85 == 0 /\ __const_53^0-__const_53^post85 == 0 /\ -incnt^post85+incnt^0 == 0 /\ -ent8^post85+ent8^0 == 0 /\ m130^0-m130^post85 == 0 /\ -apsim_bound11113^post85+apsim_bound11113^0 == 0 /\ -hsize^post85+hsize^0 == 0 /\ __const_65536^0-__const_65536^post85 == 0 /\ -tmp___017^post85+tmp___017^0 == 0 /\ apsim_incnt^0-apsim_incnt^post85 == 0 /\ -__const_8388607^post85+__const_8388607^0 == 0 /\ -i29^post85+i29^0 == 0 /\ n44^0-n44^post85 == 0 /\ tmp___014^0-tmp___014^post85 == 0 /\ -n40^post85+n40^0 == 0 /\ -maxcode^post85+maxcode^0 == 0 /\ -i41^post85+i41^0 == 0 /\ -fcode5^post85+fcode5^0 == 0 /\ __const_429496^0-__const_429496^post85 == 0 /\ -in_count^post85+in_count^0 == 0 /\ -r_off32^post85+r_off32^0 == 0 /\ -ratio^post85+ratio^0 == 0 /\ -ret_getbyte18^post85+ret_getbyte18^0 == 0 /\ count^0-count^post85 == 0 /\ -c7^post85+c7^0 == 0 /\ __const_16^0-__const_16^post85 == 0 /\ __const_8^0-__const_8^post85 == 0 /\ -1-i3^0+i3^post85 == 0 /\ -clear_flg^post85+clear_flg^0 == 0 /\ hshift11^0-hshift11^post85 == 0 /\ -hsize_reg10^post85+hsize_reg10^0 == 0 /\ -n_bits^post85+n_bits^0 == 0 /\ 1+i3^0-__const_50^0 <= 0 /\ -__const_256^post85+__const_256^0 == 0 /\ hsize___019^0-hsize___019^post85 == 0 /\ -disp9^post85+disp9^0 == 0 /\ -m122^post85+m122^0 == 0 /\ __const_2147483647^0-__const_2147483647^post85 == 0 /\ ret_getbyte25^0-ret_getbyte25^post85 == 0 /\ -tmp___024^post85+tmp___024^0 == 0 /\ -__const_10000^post85+__const_10000^0 == 0 /\ block_compress^0-block_compress^post85 == 0 /\ -code31^post85+code31^0 == 0 /\ -maxbits^post85+maxbits^0 == 0 /\ tabort4^post85-i3^0 == 0 /\ -i45^post85+i45^0 == 0 /\ -free_ent^post85+free_ent^0 == 0 /\ -bytes_out^post85+bytes_out^0 == 0 /\ tmp___115^0-tmp___115^post85 == 0), cost: 1
 113: l56 -> l55 : __const_10000^0'=__const_10000^post114, __const_16^0'=__const_16^post114, __const_2147483647^0'=__const_2147483647^post114, __const_256^0'=__const_256^post114, __const_257^0'=__const_257^post114, __const_429496^0'=__const_429496^post114, __const_50^0'=__const_50^post114, __const_53^0'=__const_53^post114, __const_65536^0'=__const_65536^post114, __const_8388607^0'=__const_8388607^post114, __const_8^0'=__const_8^post114, __const_9^0'=__const_9^post114, apsim_bound11113^0'=apsim_bound11113^post114, apsim_incnt^0'=apsim_incnt^post114, bits33^0'=bits33^post114, block_compress^0'=block_compress^post114, bytes_out^0'=bytes_out^post114, c37^0'=c37^post114, c7^0'=c7^post114, checkpoint^0'=checkpoint^post114, clear_flg^0'=clear_flg^post114, code31^0'=code31^post114, count^0'=count^post114, disp9^0'=disp9^post114, ent8^0'=ent8^post114, exit_stat^0'=exit_stat^post114, fcode5^0'=fcode5^post114, free_ent^0'=free_ent^post114, hshift11^0'=hshift11^post114, hsize^0'=hsize^post114, hsize___019^0'=hsize___019^post114, hsize___027^0'=hsize___027^post114, hsize_reg10^0'=hsize_reg10^post114, i21^0'=i21^post114, i29^0'=i29^post114, i3^0'=i3^post114, i41^0'=i41^post114, i45^0'=i45^post114, i6^0'=i6^post114, in_count^0'=in_count^post114, incnt^0'=incnt^post114, m122^0'=m122^post114, m130^0'=m130^post114, maxbits^0'=maxbits^post114, maxcode^0'=maxcode^post114, maxmaxcode^0'=maxmaxcode^post114, n40^0'=n40^post114, n44^0'=n44^post114, n_bits^0'=n_bits^post114, offset^0'=offset^post114, out_count^0'=out_count^post114, r_off32^0'=r_off32^post114, rat26^0'=rat26^post114, ratio^0'=ratio^post114, ret_getbyte18^0'=ret_getbyte18^post114, ret_getbyte25^0'=ret_getbyte25^post114, seed2^0'=seed2^post114, tabort4^0'=tabort4^post114, tmp12^0'=tmp12^post114, tmp___014^0'=tmp___014^post114, tmp___017^0'=tmp___017^post114, tmp___024^0'=tmp___024^post114, tmp___115^0'=tmp___115^post114, (-c7^post114+c7^0 == 0 /\ __const_8^0-__const_8^post114 == 0 /\ -__const_65536^post114+__const_65536^0 == 0 /\ -__const_9^post114+__const_9^0 == 0 /\ -clear_flg^post114+clear_flg^0 == 0 /\ -bytes_out^post114+bytes_out^0 == 0 /\ -block_compress^post114+block_compress^0 == 0 /\ -__const_429496^post114+__const_429496^0 == 0 /\ -maxcode^post114+maxcode^0 == 0 /\ -hsize^post114+hsize^0 == 0 /\ hshift11^0-hshift11^post114 == 0 /\ -m122^post114+m122^0 == 0 /\ __const_50^0-__const_50^post114 == 0 /\ n44^0-n44^post114 == 0 /\ -apsim_bound11113^post114+apsim_bound11113^0 == 0 /\ __const_10000^0-__const_10000^post114 == 0 /\ -__const_8388607^post114+__const_8388607^0 == 0 /\ free_ent^0-free_ent^post114 == 0 /\ -code31^post114+code31^0 == 0 /\ -i45^post114+i45^0 == 0 /\ __const_16^0-__const_16^post114 == 0 /\ tmp___017^0-tmp___017^post114 == 0 /\ maxmaxcode^0-maxmaxcode^post114 == 0 /\ i21^0-i21^post114 == 0 /\ ret_getbyte25^0-ret_getbyte25^post114 == 0 /\ n40^0-n40^post114 == 0 /\ incnt^0-incnt^post114 == 0 /\ -in_count^post114+in_count^0 == 0 /\ -disp9^post114+disp9^0 == 0 /\ -rat26^post114+rat26^0 == 0 /\ c37^0-c37^post114 == 0 /\ -offset^post114+offset^0 == 0 /\ maxbits^0-maxbits^post114 == 0 /\ -__const_2147483647^post114+__const_2147483647^0 == 0 /\ bits33^0-bits33^post114 == 0 /\ i6^0-i6^post114 == 0 /\ -tmp___014^post114+tmp___014^0 == 0 /\ -fcode5^post114+fcode5^0 == 0 /\ ent8^0-ent8^post114 == 0 /\ __const_257^0-__const_257^post114 == 0 /\ -hsize_reg10^post114+hsize_reg10^0 == 0 /\ r_off32^0-r_off32^post114 == 0 /\ tabort4^0-tabort4^post114 == 0 /\ -seed2^post114+seed2^0 == 0 /\ out_count^0-out_count^post114 == 0 /\ hsize___019^0-hsize___019^post114 == 0 /\ apsim_incnt^0-apsim_incnt^post114 == 0 /\ __const_256^0-__const_256^post114 == 0 /\ -tmp___024^post114+tmp___024^0 == 0 /\ exit_stat^0-exit_stat^post114 == 0 /\ -tmp___115^post114+tmp___115^0 == 0 /\ __const_53^0-__const_53^post114 == 0 /\ -i29^post114+i29^0 == 0 /\ -i41^post114+i41^0 == 0 /\ hsize___027^0-hsize___027^post114 == 0 /\ ret_getbyte18^0-ret_getbyte18^post114 == 0 /\ n_bits^0-n_bits^post114 == 0 /\ m130^0-m130^post114 == 0 /\ tmp12^0-tmp12^post114 == 0 /\ checkpoint^0-checkpoint^post114 == 0 /\ i3^0-i3^post114 == 0 /\ -ratio^post114+ratio^0 == 0 /\ count^0-count^post114 == 0), cost: 1
  85: l57 -> l53 : __const_10000^0'=__const_10000^post86, __const_16^0'=__const_16^post86, __const_2147483647^0'=__const_2147483647^post86, __const_256^0'=__const_256^post86, __const_257^0'=__const_257^post86, __const_429496^0'=__const_429496^post86, __const_50^0'=__const_50^post86, __const_53^0'=__const_53^post86, __const_65536^0'=__const_65536^post86, __const_8388607^0'=__const_8388607^post86, __const_8^0'=__const_8^post86, __const_9^0'=__const_9^post86, apsim_bound11113^0'=apsim_bound11113^post86, apsim_incnt^0'=apsim_incnt^post86, bits33^0'=bits33^post86, block_compress^0'=block_compress^post86, bytes_out^0'=bytes_out^post86, c37^0'=c37^post86, c7^0'=c7^post86, checkpoint^0'=checkpoint^post86, clear_flg^0'=clear_flg^post86, code31^0'=code31^post86, count^0'=count^post86, disp9^0'=disp9^post86, ent8^0'=ent8^post86, exit_stat^0'=exit_stat^post86, fcode5^0'=fcode5^post86, free_ent^0'=free_ent^post86, hshift11^0'=hshift11^post86, hsize^0'=hsize^post86, hsize___019^0'=hsize___019^post86, hsize___027^0'=hsize___027^post86, hsize_reg10^0'=hsize_reg10^post86, i21^0'=i21^post86, i29^0'=i29^post86, i3^0'=i3^post86, i41^0'=i41^post86, i45^0'=i45^post86, i6^0'=i6^post86, in_count^0'=in_count^post86, incnt^0'=incnt^post86, m122^0'=m122^post86, m130^0'=m130^post86, maxbits^0'=maxbits^post86, maxcode^0'=maxcode^post86, maxmaxcode^0'=maxmaxcode^post86, n40^0'=n40^post86, n44^0'=n44^post86, n_bits^0'=n_bits^post86, offset^0'=offset^post86, out_count^0'=out_count^post86, r_off32^0'=r_off32^post86, rat26^0'=rat26^post86, ratio^0'=ratio^post86, ret_getbyte18^0'=ret_getbyte18^post86, ret_getbyte25^0'=ret_getbyte25^post86, seed2^0'=seed2^post86, tabort4^0'=tabort4^post86, tmp12^0'=tmp12^post86, tmp___014^0'=tmp___014^post86, tmp___017^0'=tmp___017^post86, tmp___024^0'=tmp___024^post86, tmp___115^0'=tmp___115^post86, (0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post86 == 0 /\ tmp___014^0-tmp___014^post86 == 0 /\ -r_off32^post86+r_off32^0 == 0 /\ c37^0-c37^post86 == 0 /\ -bytes_out^post86+bytes_out^0 == 0 /\ free_ent^0-free_ent^post86 == 0 /\ n40^0-n40^post86 == 0 /\ -code31^post86+code31^0 == 0 /\ hshift11^0-hshift11^post86 == 0 /\ -tabort4^post86+tabort4^0 == 0 /\ i3^0-i3^post86 == 0 /\ tmp12^0-tmp12^post86 == 0 /\ out_count^0-out_count^post86 == 0 /\ c7^0-c7^post86 == 0 /\ -fcode5^post86+fcode5^0 == 0 /\ -disp9^post86+disp9^0 == 0 /\ -tmp___017^post86+tmp___017^0 == 0 /\ -ent8^post86+ent8^0 == 0 /\ -tmp___024^post86+tmp___024^0 == 0 /\ -i29^post86+i29^0 == 0 /\ __const_9^0-__const_9^post86 == 0 /\ bits33^0-bits33^post86 == 0 /\ offset^0-offset^post86 == 0 /\ -__const_8388607^0+in_count^0 <= 0 /\ __const_16^0-__const_16^post86 == 0 /\ i21^0-i21^post86 == 0 /\ exit_stat^0-exit_stat^post86 == 0 /\ apsim_incnt^0-apsim_incnt^post86 == 0 /\ -hsize_reg10^post86+hsize_reg10^0 == 0 /\ maxmaxcode^0-maxmaxcode^post86 == 0 /\ -__const_256^post86+__const_256^0 == 0 /\ -__const_50^post86+__const_50^0 == 0 /\ -m122^post86+m122^0 == 0 /\ m130^0-m130^post86 == 0 /\ hsize___019^0-hsize___019^post86 == 0 /\ -i41^post86+i41^0 == 0 /\ -__const_10000^post86+__const_10000^0 == 0 /\ __const_65536^0-__const_65536^post86 == 0 /\ -n_bits^post86+n_bits^0 == 0 /\ -incnt^post86+incnt^0 == 0 /\ count^0-count^post86 == 0 /\ __const_53^0-__const_53^post86 == 0 /\ -i45^post86+i45^0 == 0 /\ -__const_2147483647^post86+__const_2147483647^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post86 == 0 /\ maxbits^0-maxbits^post86 == 0 /\ n44^0-n44^post86 == 0 /\ -ret_getbyte18^post86+ret_getbyte18^0 == 0 /\ __const_8^0-__const_8^post86 == 0 /\ -in_count^post86+in_count^0 == 0 /\ __const_429496^0-__const_429496^post86 == 0 /\ -__const_8388607^post86+__const_8388607^0 == 0 /\ -maxcode^post86+maxcode^0 == 0 /\ __const_257^0-__const_257^post86 == 0 /\ -clear_flg^post86+clear_flg^0 == 0 /\ checkpoint^0-checkpoint^post86 == 0 /\ block_compress^0-block_compress^post86 == 0 /\ i6^0-i6^post86 == 0 /\ tmp___115^0-tmp___115^post86 == 0 /\ ratio^0-ratio^post86 == 0 /\ -hsize^post86+hsize^0 == 0 /\ seed2^0-seed2^post86 == 0 /\ -hsize___027^post86+hsize___027^0 == 0), cost: 1
  86: l57 -> l54 : __const_10000^0'=__const_10000^post87, __const_16^0'=__const_16^post87, __const_2147483647^0'=__const_2147483647^post87, __const_256^0'=__const_256^post87, __const_257^0'=__const_257^post87, __const_429496^0'=__const_429496^post87, __const_50^0'=__const_50^post87, __const_53^0'=__const_53^post87, __const_65536^0'=__const_65536^post87, __const_8388607^0'=__const_8388607^post87, __const_8^0'=__const_8^post87, __const_9^0'=__const_9^post87, apsim_bound11113^0'=apsim_bound11113^post87, apsim_incnt^0'=apsim_incnt^post87, bits33^0'=bits33^post87, block_compress^0'=block_compress^post87, bytes_out^0'=bytes_out^post87, c37^0'=c37^post87, c7^0'=c7^post87, checkpoint^0'=checkpoint^post87, clear_flg^0'=clear_flg^post87, code31^0'=code31^post87, count^0'=count^post87, disp9^0'=disp9^post87, ent8^0'=ent8^post87, exit_stat^0'=exit_stat^post87, fcode5^0'=fcode5^post87, free_ent^0'=free_ent^post87, hshift11^0'=hshift11^post87, hsize^0'=hsize^post87, hsize___019^0'=hsize___019^post87, hsize___027^0'=hsize___027^post87, hsize_reg10^0'=hsize_reg10^post87, i21^0'=i21^post87, i29^0'=i29^post87, i3^0'=i3^post87, i41^0'=i41^post87, i45^0'=i45^post87, i6^0'=i6^post87, in_count^0'=in_count^post87, incnt^0'=incnt^post87, m122^0'=m122^post87, m130^0'=m130^post87, maxbits^0'=maxbits^post87, maxcode^0'=maxcode^post87, maxmaxcode^0'=maxmaxcode^post87, n40^0'=n40^post87, n44^0'=n44^post87, n_bits^0'=n_bits^post87, offset^0'=offset^post87, out_count^0'=out_count^post87, r_off32^0'=r_off32^post87, rat26^0'=rat26^post87, ratio^0'=ratio^post87, ret_getbyte18^0'=ret_getbyte18^post87, ret_getbyte25^0'=ret_getbyte25^post87, seed2^0'=seed2^post87, tabort4^0'=tabort4^post87, tmp12^0'=tmp12^post87, tmp___014^0'=tmp___014^post87, tmp___017^0'=tmp___017^post87, tmp___024^0'=tmp___024^post87, tmp___115^0'=tmp___115^post87, (0 == 0 /\ __const_8388607^0-__const_8388607^post87 == 0 /\ tmp___115^0-tmp___115^post87 == 0 /\ __const_16^0-__const_16^post87 == 0 /\ -clear_flg^post87+clear_flg^0 == 0 /\ -hsize_reg10^post87+hsize_reg10^0 == 0 /\ -hsize___027^post87+hsize___027^0 == 0 /\ 1+__const_8388607^0-in_count^0 <= 0 /\ -ret_getbyte18^post87+ret_getbyte18^0 == 0 /\ -maxcode^post87+maxcode^0 == 0 /\ -i45^post87+i45^0 == 0 /\ -i41^post87+i41^0 == 0 /\ -hsize^post87+hsize^0 == 0 /\ -__const_10000^post87+__const_10000^0 == 0 /\ -m122^post87+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post87 == 0 /\ -__const_2147483647^post87+__const_2147483647^0 == 0 /\ hshift11^0-hshift11^post87 == 0 /\ -incnt^post87+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post87 == 0 /\ free_ent^0-free_ent^post87 == 0 /\ __const_9^0-__const_9^post87 == 0 /\ out_count^0-out_count^post87 == 0 /\ __const_256^0-__const_256^post87 == 0 /\ -i29^post87+i29^0 == 0 /\ code31^0-code31^post87 == 0 /\ -__const_429496^post87+__const_429496^0 == 0 /\ bits33^0-bits33^post87 == 0 /\ -in_count^post87+in_count^0 == 0 /\ n40^0-n40^post87 == 0 /\ offset^0-offset^post87 == 0 /\ -n_bits^post87+n_bits^0 == 0 /\ maxbits^0-maxbits^post87 == 0 /\ -count^post87+count^0 == 0 /\ -fcode5^post87+fcode5^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post87 == 0 /\ apsim_incnt^0-apsim_incnt^post87 == 0 /\ -disp9^post87+disp9^0 == 0 /\ -tmp___017^post87+tmp___017^0 == 0 /\ i6^0-i6^post87 == 0 /\ -tmp___024^post87+tmp___024^0 == 0 /\ ent8^0-ent8^post87 == 0 /\ i21^0-i21^post87 == 0 /\ -__const_8^post87+__const_8^0 == 0 /\ -block_compress^post87+block_compress^0 == 0 /\ -checkpoint^post87+checkpoint^0 == 0 /\ -bytes_out^post87+bytes_out^0 == 0 /\ -tabort4^post87+tabort4^0 == 0 /\ exit_stat^0-exit_stat^post87 == 0 /\ hsize___019^0-hsize___019^post87 == 0 /\ -seed2^post87+seed2^0 == 0 /\ -i3^post87+i3^0 == 0 /\ c37^0-c37^post87 == 0 /\ tmp___014^0-tmp___014^post87 == 0 /\ ratio^0-ratio^post87 == 0 /\ -n44^post87+n44^0 == 0 /\ -r_off32^post87+r_off32^0 == 0 /\ m130^0-m130^post87 == 0 /\ -__const_50^post87+__const_50^0 == 0 /\ __const_53^0-__const_53^post87 == 0 /\ tmp12^0-tmp12^post87 == 0 /\ c7^0-c7^post87 == 0 /\ -__const_65536^post87+__const_65536^0 == 0 /\ __const_257^0-__const_257^post87 == 0), cost: 1
  87: l58 -> l57 : __const_10000^0'=__const_10000^post88, __const_16^0'=__const_16^post88, __const_2147483647^0'=__const_2147483647^post88, __const_256^0'=__const_256^post88, __const_257^0'=__const_257^post88, __const_429496^0'=__const_429496^post88, __const_50^0'=__const_50^post88, __const_53^0'=__const_53^post88, __const_65536^0'=__const_65536^post88, __const_8388607^0'=__const_8388607^post88, __const_8^0'=__const_8^post88, __const_9^0'=__const_9^post88, apsim_bound11113^0'=apsim_bound11113^post88, apsim_incnt^0'=apsim_incnt^post88, bits33^0'=bits33^post88, block_compress^0'=block_compress^post88, bytes_out^0'=bytes_out^post88, c37^0'=c37^post88, c7^0'=c7^post88, checkpoint^0'=checkpoint^post88, clear_flg^0'=clear_flg^post88, code31^0'=code31^post88, count^0'=count^post88, disp9^0'=disp9^post88, ent8^0'=ent8^post88, exit_stat^0'=exit_stat^post88, fcode5^0'=fcode5^post88, free_ent^0'=free_ent^post88, hshift11^0'=hshift11^post88, hsize^0'=hsize^post88, hsize___019^0'=hsize___019^post88, hsize___027^0'=hsize___027^post88, hsize_reg10^0'=hsize_reg10^post88, i21^0'=i21^post88, i29^0'=i29^post88, i3^0'=i3^post88, i41^0'=i41^post88, i45^0'=i45^post88, i6^0'=i6^post88, in_count^0'=in_count^post88, incnt^0'=incnt^post88, m122^0'=m122^post88, m130^0'=m130^post88, maxbits^0'=maxbits^post88, maxcode^0'=maxcode^post88, maxmaxcode^0'=maxmaxcode^post88, n40^0'=n40^post88, n44^0'=n44^post88, n_bits^0'=n_bits^post88, offset^0'=offset^post88, out_count^0'=out_count^post88, r_off32^0'=r_off32^post88, rat26^0'=rat26^post88, ratio^0'=ratio^post88, ret_getbyte18^0'=ret_getbyte18^post88, ret_getbyte25^0'=ret_getbyte25^post88, seed2^0'=seed2^post88, tabort4^0'=tabort4^post88, tmp12^0'=tmp12^post88, tmp___014^0'=tmp___014^post88, tmp___017^0'=tmp___017^post88, tmp___024^0'=tmp___024^post88, tmp___115^0'=tmp___115^post88, (maxcode^0-maxcode^post88 == 0 /\ -apsim_incnt^post88+apsim_incnt^0 == 0 /\ offset^0-offset^post88 == 0 /\ tabort4^0-tabort4^post88 == 0 /\ -__const_8^post88+__const_8^0 == 0 /\ exit_stat^0-exit_stat^post88 == 0 /\ tmp___017^0-tmp___017^post88 == 0 /\ hsize___027^0-hsize___027^post88 == 0 /\ __const_50^0-__const_50^post88 == 0 /\ __const_16^0-__const_16^post88 == 0 /\ -r_off32^post88+r_off32^0 == 0 /\ -n_bits^post88+n_bits^0 == 0 /\ -__const_10000^0-in_count^0+checkpoint^post88 == 0 /\ -__const_429496^post88+__const_429496^0 == 0 /\ maxmaxcode^0-maxmaxcode^post88 == 0 /\ __const_257^0-__const_257^post88 == 0 /\ -tmp___115^post88+tmp___115^0 == 0 /\ m130^0-m130^post88 == 0 /\ -__const_65536^post88+__const_65536^0 == 0 /\ -n40^post88+n40^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post88 == 0 /\ -fcode5^post88+fcode5^0 == 0 /\ n44^0-n44^post88 == 0 /\ -hsize^post88+hsize^0 == 0 /\ -incnt^post88+incnt^0 == 0 /\ __const_256^0-__const_256^post88 == 0 /\ tmp12^0-tmp12^post88 == 0 /\ ent8^0-ent8^post88 == 0 /\ apsim_bound11113^0-apsim_bound11113^post88 == 0 /\ -block_compress^post88+block_compress^0 == 0 /\ -i29^post88+i29^0 == 0 /\ -seed2^post88+seed2^0 == 0 /\ -i3^post88+i3^0 == 0 /\ i45^0-i45^post88 == 0 /\ -i41^post88+i41^0 == 0 /\ -__const_8388607^post88+__const_8388607^0 == 0 /\ -ret_getbyte25^post88+ret_getbyte25^0 == 0 /\ c37^0-c37^post88 == 0 /\ rat26^0-rat26^post88 == 0 /\ -i6^post88+i6^0 == 0 /\ bits33^0-bits33^post88 == 0 /\ -count^post88+count^0 == 0 /\ -in_count^post88+in_count^0 == 0 /\ -disp9^post88+disp9^0 == 0 /\ __const_53^0-__const_53^post88 == 0 /\ code31^0-code31^post88 == 0 /\ -tmp___024^post88+tmp___024^0 == 0 /\ -ratio^post88+ratio^0 == 0 /\ -c7^post88+c7^0 == 0 /\ -__const_9^post88+__const_9^0 == 0 /\ -maxbits^post88+maxbits^0 == 0 /\ m122^0-m122^post88 == 0 /\ hshift11^0-hshift11^post88 == 0 /\ -clear_flg^post88+clear_flg^0 == 0 /\ -hsize_reg10^post88+hsize_reg10^0 == 0 /\ free_ent^0-free_ent^post88 == 0 /\ -hsize___019^post88+hsize___019^0 == 0 /\ -i21^post88+i21^0 == 0 /\ -__const_2147483647^post88+__const_2147483647^0 == 0 /\ __const_10000^0-__const_10000^post88 == 0 /\ -tmp___014^post88+tmp___014^0 == 0 /\ out_count^0-out_count^post88 == 0 /\ -bytes_out^post88+bytes_out^0 == 0), cost: 1
  88: l59 -> l1 : __const_10000^0'=__const_10000^post89, __const_16^0'=__const_16^post89, __const_2147483647^0'=__const_2147483647^post89, __const_256^0'=__const_256^post89, __const_257^0'=__const_257^post89, __const_429496^0'=__const_429496^post89, __const_50^0'=__const_50^post89, __const_53^0'=__const_53^post89, __const_65536^0'=__const_65536^post89, __const_8388607^0'=__const_8388607^post89, __const_8^0'=__const_8^post89, __const_9^0'=__const_9^post89, apsim_bound11113^0'=apsim_bound11113^post89, apsim_incnt^0'=apsim_incnt^post89, bits33^0'=bits33^post89, block_compress^0'=block_compress^post89, bytes_out^0'=bytes_out^post89, c37^0'=c37^post89, c7^0'=c7^post89, checkpoint^0'=checkpoint^post89, clear_flg^0'=clear_flg^post89, code31^0'=code31^post89, count^0'=count^post89, disp9^0'=disp9^post89, ent8^0'=ent8^post89, exit_stat^0'=exit_stat^post89, fcode5^0'=fcode5^post89, free_ent^0'=free_ent^post89, hshift11^0'=hshift11^post89, hsize^0'=hsize^post89, hsize___019^0'=hsize___019^post89, hsize___027^0'=hsize___027^post89, hsize_reg10^0'=hsize_reg10^post89, i21^0'=i21^post89, i29^0'=i29^post89, i3^0'=i3^post89, i41^0'=i41^post89, i45^0'=i45^post89, i6^0'=i6^post89, in_count^0'=in_count^post89, incnt^0'=incnt^post89, m122^0'=m122^post89, m130^0'=m130^post89, maxbits^0'=maxbits^post89, maxcode^0'=maxcode^post89, maxmaxcode^0'=maxmaxcode^post89, n40^0'=n40^post89, n44^0'=n44^post89, n_bits^0'=n_bits^post89, offset^0'=offset^post89, out_count^0'=out_count^post89, r_off32^0'=r_off32^post89, rat26^0'=rat26^post89, ratio^0'=ratio^post89, ret_getbyte18^0'=ret_getbyte18^post89, ret_getbyte25^0'=ret_getbyte25^post89, seed2^0'=seed2^post89, tabort4^0'=tabort4^post89, tmp12^0'=tmp12^post89, tmp___014^0'=tmp___014^post89, tmp___017^0'=tmp___017^post89, tmp___024^0'=tmp___024^post89, tmp___115^0'=tmp___115^post89, (tmp___017^0-tmp___017^post89 == 0 /\ maxmaxcode^0-maxmaxcode^post89 == 0 /\ ret_getbyte18^0-ret_getbyte18^post89 == 0 /\ r_off32^0-r_off32^post89 == 0 /\ -disp9^post89+disp9^0 == 0 /\ -ent8^post89+ent8^0 == 0 /\ free_ent^0-free_ent^post89 == 0 /\ -ret_getbyte25^post89+ret_getbyte25^0 == 0 /\ tmp___024^0-tmp___024^post89 == 0 /\ -tmp___115^post89+tmp___115^0 == 0 /\ -tmp___014^post89+tmp___014^0 == 0 /\ -i45^post89+i45^0 == 0 /\ -i41^post89+i41^0 == 0 /\ out_count^0-out_count^post89 == 0 /\ -tmp12^post89+tmp12^0 == 0 /\ -c37^post89+c37^0 == 0 /\ -block_compress^post89+block_compress^0 == 0 /\ -i21^post89+i21^0 == 0 /\ -fcode5^post89+fcode5^0 == 0 /\ -c7^post89+c7^0 == 0 /\ -seed2^post89+seed2^0 == 0 /\ __const_16^0-__const_16^post89 == 0 /\ n44^0-n44^post89 == 0 /\ __const_10000^0-__const_10000^post89 == 0 /\ -code31^post89+code31^0 == 0 /\ clear_flg^0-clear_flg^post89 == 0 /\ -__const_429496^post89+__const_429496^0 == 0 /\ checkpoint^0-checkpoint^post89 == 0 /\ -__const_65536^post89+__const_65536^0 == 0 /\ maxcode^0-maxcode^post89 == 0 /\ exit_stat^0-exit_stat^post89 == 0 /\ apsim_incnt^0-apsim_incnt^post89 == 0 /\ -hsize___019^post89+hsize___019^0 == 0 /\ count^0-count^post89 == 0 /\ -hsize_reg10^post89+hsize_reg10^0 == 0 /\ __const_50^0-__const_50^post89 == 0 /\ -incnt^post89+incnt^0 == 0 /\ -offset^post89+offset^0 == 0 /\ -apsim_bound11113^post89+apsim_bound11113^0 == 0 /\ __const_256^0-__const_256^post89 == 0 /\ -hsize^post89+hsize^0 == 0 /\ -__const_9^post89+__const_9^0 == 0 /\ -__const_8388607^post89+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post89 == 0 /\ -__const_2147483647^post89+__const_2147483647^0 == 0 /\ -maxbits^post89+maxbits^0 == 0 /\ __const_8^0-__const_8^post89 == 0 /\ m130^0-m130^post89 == 0 /\ -block_compress^0 <= 0 /\ -n40^post89+n40^0 == 0 /\ i6^0-i6^post89 == 0 /\ tabort4^0-tabort4^post89 == 0 /\ i3^0-i3^post89 == 0 /\ hsize___027^0-hsize___027^post89 == 0 /\ -bits33^post89+bits33^0 == 0 /\ -i29^post89+i29^0 == 0 /\ block_compress^0 <= 0 /\ -in_count^post89+in_count^0 == 0 /\ bytes_out^0-bytes_out^post89 == 0 /\ hshift11^0-hshift11^post89 == 0 /\ m122^0-m122^post89 == 0 /\ -ratio^post89+ratio^0 == 0 /\ -n_bits^post89+n_bits^0 == 0 /\ rat26^0-rat26^post89 == 0 /\ __const_257^0-__const_257^post89 == 0), cost: 1
  89: l59 -> l58 : __const_10000^0'=__const_10000^post90, __const_16^0'=__const_16^post90, __const_2147483647^0'=__const_2147483647^post90, __const_256^0'=__const_256^post90, __const_257^0'=__const_257^post90, __const_429496^0'=__const_429496^post90, __const_50^0'=__const_50^post90, __const_53^0'=__const_53^post90, __const_65536^0'=__const_65536^post90, __const_8388607^0'=__const_8388607^post90, __const_8^0'=__const_8^post90, __const_9^0'=__const_9^post90, apsim_bound11113^0'=apsim_bound11113^post90, apsim_incnt^0'=apsim_incnt^post90, bits33^0'=bits33^post90, block_compress^0'=block_compress^post90, bytes_out^0'=bytes_out^post90, c37^0'=c37^post90, c7^0'=c7^post90, checkpoint^0'=checkpoint^post90, clear_flg^0'=clear_flg^post90, code31^0'=code31^post90, count^0'=count^post90, disp9^0'=disp9^post90, ent8^0'=ent8^post90, exit_stat^0'=exit_stat^post90, fcode5^0'=fcode5^post90, free_ent^0'=free_ent^post90, hshift11^0'=hshift11^post90, hsize^0'=hsize^post90, hsize___019^0'=hsize___019^post90, hsize___027^0'=hsize___027^post90, hsize_reg10^0'=hsize_reg10^post90, i21^0'=i21^post90, i29^0'=i29^post90, i3^0'=i3^post90, i41^0'=i41^post90, i45^0'=i45^post90, i6^0'=i6^post90, in_count^0'=in_count^post90, incnt^0'=incnt^post90, m122^0'=m122^post90, m130^0'=m130^post90, maxbits^0'=maxbits^post90, maxcode^0'=maxcode^post90, maxmaxcode^0'=maxmaxcode^post90, n40^0'=n40^post90, n44^0'=n44^post90, n_bits^0'=n_bits^post90, offset^0'=offset^post90, out_count^0'=out_count^post90, r_off32^0'=r_off32^post90, rat26^0'=rat26^post90, ratio^0'=ratio^post90, ret_getbyte18^0'=ret_getbyte18^post90, ret_getbyte25^0'=ret_getbyte25^post90, seed2^0'=seed2^post90, tabort4^0'=tabort4^post90, tmp12^0'=tmp12^post90, tmp___014^0'=tmp___014^post90, tmp___017^0'=tmp___017^post90, tmp___024^0'=tmp___024^post90, tmp___115^0'=tmp___115^post90, (-n40^post90+n40^0 == 0 /\ -maxbits^post90+maxbits^0 == 0 /\ -m130^post90+m130^0 == 0 /\ -in_count^post90+in_count^0 == 0 /\ -__const_8388607^post90+__const_8388607^0 == 0 /\ checkpoint^0-checkpoint^post90 == 0 /\ r_off32^0-r_off32^post90 == 0 /\ __const_50^0-__const_50^post90 == 0 /\ hshift11^0-hshift11^post90 == 0 /\ -__const_429496^post90+__const_429496^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post90 == 0 /\ -hsize___019^post90+hsize___019^0 == 0 /\ hsize^0-hsize^post90 == 0 /\ out_count^0-out_count^post90 == 0 /\ -__const_9^post90+__const_9^0 == 0 /\ exit_stat^0-exit_stat^post90 == 0 /\ -clear_flg^post90+clear_flg^0 == 0 /\ -tmp___014^post90+tmp___014^0 == 0 /\ -ret_getbyte25^post90+ret_getbyte25^0 == 0 /\ -__const_10000^post90+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post90 == 0 /\ -__const_2147483647^post90+__const_2147483647^0 == 0 /\ -c7^post90+c7^0 == 0 /\ -free_ent^post90+free_ent^0 == 0 /\ -disp9^post90+disp9^0 == 0 /\ __const_16^0-__const_16^post90 == 0 /\ -i29^post90+i29^0 == 0 /\ -tmp___024^post90+tmp___024^0 == 0 /\ tmp___017^0-tmp___017^post90 == 0 /\ -rat26^post90+rat26^0 == 0 /\ -i41^post90+i41^0 == 0 /\ m122^0-m122^post90 == 0 /\ -code31^post90+code31^0 == 0 /\ apsim_incnt^0-apsim_incnt^post90 == 0 /\ __const_257^0-__const_257^post90 == 0 /\ -ratio^post90+ratio^0 == 0 /\ hsize___027^0-hsize___027^post90 == 0 /\ n44^0-n44^post90 == 0 /\ -i21^post90+i21^0 == 0 /\ count^0-count^post90 == 0 /\ i3^0-i3^post90 == 0 /\ maxcode^0-maxcode^post90 == 0 /\ __const_256^0-__const_256^post90 == 0 /\ 1-block_compress^0 <= 0 /\ n_bits^0-n_bits^post90 == 0 /\ -bits33^post90+bits33^0 == 0 /\ i6^0-i6^post90 == 0 /\ -apsim_bound11113^post90+apsim_bound11113^0 == 0 /\ tmp12^0-tmp12^post90 == 0 /\ -__const_65536^post90+__const_65536^0 == 0 /\ -block_compress^post90+block_compress^0 == 0 /\ -i45^post90+i45^0 == 0 /\ -offset^post90+offset^0 == 0 /\ -seed2^post90+seed2^0 == 0 /\ -incnt^post90+incnt^0 == 0 /\ bytes_out^0-bytes_out^post90 == 0 /\ __const_8^0-__const_8^post90 == 0 /\ c37^0-c37^post90 == 0 /\ -fcode5^post90+fcode5^0 == 0 /\ hsize_reg10^0-hsize_reg10^post90 == 0 /\ __const_53^0-__const_53^post90 == 0 /\ -tmp___115^post90+tmp___115^0 == 0 /\ tabort4^0-tabort4^post90 == 0 /\ -ent8^post90+ent8^0 == 0), cost: 1
  90: l59 -> l58 : __const_10000^0'=__const_10000^post91, __const_16^0'=__const_16^post91, __const_2147483647^0'=__const_2147483647^post91, __const_256^0'=__const_256^post91, __const_257^0'=__const_257^post91, __const_429496^0'=__const_429496^post91, __const_50^0'=__const_50^post91, __const_53^0'=__const_53^post91, __const_65536^0'=__const_65536^post91, __const_8388607^0'=__const_8388607^post91, __const_8^0'=__const_8^post91, __const_9^0'=__const_9^post91, apsim_bound11113^0'=apsim_bound11113^post91, apsim_incnt^0'=apsim_incnt^post91, bits33^0'=bits33^post91, block_compress^0'=block_compress^post91, bytes_out^0'=bytes_out^post91, c37^0'=c37^post91, c7^0'=c7^post91, checkpoint^0'=checkpoint^post91, clear_flg^0'=clear_flg^post91, code31^0'=code31^post91, count^0'=count^post91, disp9^0'=disp9^post91, ent8^0'=ent8^post91, exit_stat^0'=exit_stat^post91, fcode5^0'=fcode5^post91, free_ent^0'=free_ent^post91, hshift11^0'=hshift11^post91, hsize^0'=hsize^post91, hsize___019^0'=hsize___019^post91, hsize___027^0'=hsize___027^post91, hsize_reg10^0'=hsize_reg10^post91, i21^0'=i21^post91, i29^0'=i29^post91, i3^0'=i3^post91, i41^0'=i41^post91, i45^0'=i45^post91, i6^0'=i6^post91, in_count^0'=in_count^post91, incnt^0'=incnt^post91, m122^0'=m122^post91, m130^0'=m130^post91, maxbits^0'=maxbits^post91, maxcode^0'=maxcode^post91, maxmaxcode^0'=maxmaxcode^post91, n40^0'=n40^post91, n44^0'=n44^post91, n_bits^0'=n_bits^post91, offset^0'=offset^post91, out_count^0'=out_count^post91, r_off32^0'=r_off32^post91, rat26^0'=rat26^post91, ratio^0'=ratio^post91, ret_getbyte18^0'=ret_getbyte18^post91, ret_getbyte25^0'=ret_getbyte25^post91, seed2^0'=seed2^post91, tabort4^0'=tabort4^post91, tmp12^0'=tmp12^post91, tmp___014^0'=tmp___014^post91, tmp___017^0'=tmp___017^post91, tmp___024^0'=tmp___024^post91, tmp___115^0'=tmp___115^post91, (-__const_10000^post91+__const_10000^0 == 0 /\ __const_53^0-__const_53^post91 == 0 /\ __const_8^0-__const_8^post91 == 0 /\ -disp9^post91+disp9^0 == 0 /\ __const_16^0-__const_16^post91 == 0 /\ -offset^post91+offset^0 == 0 /\ -rat26^post91+rat26^0 == 0 /\ -ratio^post91+ratio^0 == 0 /\ -apsim_bound11113^post91+apsim_bound11113^0 == 0 /\ -__const_9^post91+__const_9^0 == 0 /\ -code31^post91+code31^0 == 0 /\ -__const_65536^post91+__const_65536^0 == 0 /\ -ent8^post91+ent8^0 == 0 /\ r_off32^0-r_off32^post91 == 0 /\ -tmp___115^post91+tmp___115^0 == 0 /\ i6^0-i6^post91 == 0 /\ in_count^0-in_count^post91 == 0 /\ m122^0-m122^post91 == 0 /\ __const_257^0-__const_257^post91 == 0 /\ hshift11^0-hshift11^post91 == 0 /\ -m130^post91+m130^0 == 0 /\ -n40^post91+n40^0 == 0 /\ -ret_getbyte25^post91+ret_getbyte25^0 == 0 /\ -block_compress^post91+block_compress^0 == 0 /\ -hsize^post91+hsize^0 == 0 /\ out_count^0-out_count^post91 == 0 /\ -__const_8388607^post91+__const_8388607^0 == 0 /\ 1+block_compress^0 <= 0 /\ -__const_256^post91+__const_256^0 == 0 /\ -incnt^post91+incnt^0 == 0 /\ hsize_reg10^0-hsize_reg10^post91 == 0 /\ bits33^0-bits33^post91 == 0 /\ -seed2^post91+seed2^0 == 0 /\ bytes_out^0-bytes_out^post91 == 0 /\ -i29^post91+i29^0 == 0 /\ fcode5^0-fcode5^post91 == 0 /\ count^0-count^post91 == 0 /\ n_bits^0-n_bits^post91 == 0 /\ -__const_429496^post91+__const_429496^0 == 0 /\ -i45^post91+i45^0 == 0 /\ -i41^post91+i41^0 == 0 /\ i3^0-i3^post91 == 0 /\ tmp12^0-tmp12^post91 == 0 /\ maxcode^0-maxcode^post91 == 0 /\ exit_stat^0-exit_stat^post91 == 0 /\ -__const_50^post91+__const_50^0 == 0 /\ tmp___017^0-tmp___017^post91 == 0 /\ maxmaxcode^0-maxmaxcode^post91 == 0 /\ apsim_incnt^0-apsim_incnt^post91 == 0 /\ tabort4^0-tabort4^post91 == 0 /\ c37^0-c37^post91 == 0 /\ hsize___027^0-hsize___027^post91 == 0 /\ -free_ent^post91+free_ent^0 == 0 /\ checkpoint^0-checkpoint^post91 == 0 /\ -tmp___024^post91+tmp___024^0 == 0 /\ -hsize___019^post91+hsize___019^0 == 0 /\ -maxbits^post91+maxbits^0 == 0 /\ -clear_flg^post91+clear_flg^0 == 0 /\ n44^0-n44^post91 == 0 /\ -i21^post91+i21^0 == 0 /\ -c7^post91+c7^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post91 == 0 /\ -tmp___014^post91+tmp___014^0 == 0 /\ -__const_2147483647^post91+__const_2147483647^0 == 0), cost: 1
  91: l60 -> l1 : __const_10000^0'=__const_10000^post92, __const_16^0'=__const_16^post92, __const_2147483647^0'=__const_2147483647^post92, __const_256^0'=__const_256^post92, __const_257^0'=__const_257^post92, __const_429496^0'=__const_429496^post92, __const_50^0'=__const_50^post92, __const_53^0'=__const_53^post92, __const_65536^0'=__const_65536^post92, __const_8388607^0'=__const_8388607^post92, __const_8^0'=__const_8^post92, __const_9^0'=__const_9^post92, apsim_bound11113^0'=apsim_bound11113^post92, apsim_incnt^0'=apsim_incnt^post92, bits33^0'=bits33^post92, block_compress^0'=block_compress^post92, bytes_out^0'=bytes_out^post92, c37^0'=c37^post92, c7^0'=c7^post92, checkpoint^0'=checkpoint^post92, clear_flg^0'=clear_flg^post92, code31^0'=code31^post92, count^0'=count^post92, disp9^0'=disp9^post92, ent8^0'=ent8^post92, exit_stat^0'=exit_stat^post92, fcode5^0'=fcode5^post92, free_ent^0'=free_ent^post92, hshift11^0'=hshift11^post92, hsize^0'=hsize^post92, hsize___019^0'=hsize___019^post92, hsize___027^0'=hsize___027^post92, hsize_reg10^0'=hsize_reg10^post92, i21^0'=i21^post92, i29^0'=i29^post92, i3^0'=i3^post92, i41^0'=i41^post92, i45^0'=i45^post92, i6^0'=i6^post92, in_count^0'=in_count^post92, incnt^0'=incnt^post92, m122^0'=m122^post92, m130^0'=m130^post92, maxbits^0'=maxbits^post92, maxcode^0'=maxcode^post92, maxmaxcode^0'=maxmaxcode^post92, n40^0'=n40^post92, n44^0'=n44^post92, n_bits^0'=n_bits^post92, offset^0'=offset^post92, out_count^0'=out_count^post92, r_off32^0'=r_off32^post92, rat26^0'=rat26^post92, ratio^0'=ratio^post92, ret_getbyte18^0'=ret_getbyte18^post92, ret_getbyte25^0'=ret_getbyte25^post92, seed2^0'=seed2^post92, tabort4^0'=tabort4^post92, tmp12^0'=tmp12^post92, tmp___014^0'=tmp___014^post92, tmp___017^0'=tmp___017^post92, tmp___024^0'=tmp___024^post92, tmp___115^0'=tmp___115^post92, (-tmp12^post92+tmp12^0 == 0 /\ -c7^post92+c7^0 == 0 /\ -i29^post92+i29^0 == 0 /\ r_off32^0-r_off32^post92 == 0 /\ -incnt^post92+incnt^0 == 0 /\ -i41^post92+i41^0 == 0 /\ -i45^post92+i45^0 == 0 /\ hshift11^0-hshift11^post92 == 0 /\ -clear_flg^post92+clear_flg^0 == 0 /\ free_ent^0-free_ent^post92 == 0 /\ out_count^0-out_count^post92 == 0 /\ -bytes_out^post92+bytes_out^0 == 0 /\ __const_65536^0-__const_65536^post92 == 0 /\ -block_compress^post92+block_compress^0 == 0 /\ -in_count^post92+in_count^0 == 0 /\ maxcode^0-maxcode^post92 == 0 /\ -tmp___024^post92+tmp___024^0 == 0 /\ __const_8^0-__const_8^post92 == 0 /\ ret_getbyte18^0-ret_getbyte18^post92 == 0 /\ -maxbits^post92+maxbits^0 == 0 /\ -code31^post92+code31^0 == 0 /\ exit_stat^0-exit_stat^post92 == 0 /\ __const_257^0-__const_257^post92 == 0 /\ tmp___017^0-tmp___017^post92 == 0 /\ -i21^post92+i21^0 == 0 /\ -hsize___019^post92+hsize___019^0 == 0 /\ __const_53^0-__const_53^post92 == 0 /\ -seed2^post92+seed2^0 == 0 /\ -disp9^post92+disp9^0 == 0 /\ -tmp___014^post92+tmp___014^0 == 0 /\ maxmaxcode^0-maxmaxcode^post92 == 0 /\ c37^0-c37^post92 == 0 /\ 1-checkpoint^0+in_count^0 <= 0 /\ -apsim_bound11113^post92+apsim_bound11113^0 == 0 /\ m122^0-m122^post92 == 0 /\ i6^0-i6^post92 == 0 /\ -__const_256^post92+__const_256^0 == 0 /\ -n_bits^post92+n_bits^0 == 0 /\ n44^0-n44^post92 == 0 /\ -__const_2147483647^post92+__const_2147483647^0 == 0 /\ ent8^0-ent8^post92 == 0 /\ __const_9^0-__const_9^post92 == 0 /\ -offset^post92+offset^0 == 0 /\ -__const_10000^post92+__const_10000^0 == 0 /\ __const_429496^0-__const_429496^post92 == 0 /\ hsize_reg10^0-hsize_reg10^post92 == 0 /\ __const_16^0-__const_16^post92 == 0 /\ -tmp___115^post92+tmp___115^0 == 0 /\ -m130^post92+m130^0 == 0 /\ bits33^0-bits33^post92 == 0 /\ tabort4^0-tabort4^post92 == 0 /\ i3^0-i3^post92 == 0 /\ -fcode5^post92+fcode5^0 == 0 /\ -__const_8388607^post92+__const_8388607^0 == 0 /\ -ratio^post92+ratio^0 == 0 /\ -hsize^post92+hsize^0 == 0 /\ -__const_50^post92+__const_50^0 == 0 /\ hsize___027^0-hsize___027^post92 == 0 /\ rat26^0-rat26^post92 == 0 /\ -n40^post92+n40^0 == 0 /\ -ret_getbyte25^post92+ret_getbyte25^0 == 0 /\ checkpoint^0-checkpoint^post92 == 0 /\ apsim_incnt^0-apsim_incnt^post92 == 0 /\ count^0-count^post92 == 0), cost: 1
  92: l60 -> l59 : __const_10000^0'=__const_10000^post93, __const_16^0'=__const_16^post93, __const_2147483647^0'=__const_2147483647^post93, __const_256^0'=__const_256^post93, __const_257^0'=__const_257^post93, __const_429496^0'=__const_429496^post93, __const_50^0'=__const_50^post93, __const_53^0'=__const_53^post93, __const_65536^0'=__const_65536^post93, __const_8388607^0'=__const_8388607^post93, __const_8^0'=__const_8^post93, __const_9^0'=__const_9^post93, apsim_bound11113^0'=apsim_bound11113^post93, apsim_incnt^0'=apsim_incnt^post93, bits33^0'=bits33^post93, block_compress^0'=block_compress^post93, bytes_out^0'=bytes_out^post93, c37^0'=c37^post93, c7^0'=c7^post93, checkpoint^0'=checkpoint^post93, clear_flg^0'=clear_flg^post93, code31^0'=code31^post93, count^0'=count^post93, disp9^0'=disp9^post93, ent8^0'=ent8^post93, exit_stat^0'=exit_stat^post93, fcode5^0'=fcode5^post93, free_ent^0'=free_ent^post93, hshift11^0'=hshift11^post93, hsize^0'=hsize^post93, hsize___019^0'=hsize___019^post93, hsize___027^0'=hsize___027^post93, hsize_reg10^0'=hsize_reg10^post93, i21^0'=i21^post93, i29^0'=i29^post93, i3^0'=i3^post93, i41^0'=i41^post93, i45^0'=i45^post93, i6^0'=i6^post93, in_count^0'=in_count^post93, incnt^0'=incnt^post93, m122^0'=m122^post93, m130^0'=m130^post93, maxbits^0'=maxbits^post93, maxcode^0'=maxcode^post93, maxmaxcode^0'=maxmaxcode^post93, n40^0'=n40^post93, n44^0'=n44^post93, n_bits^0'=n_bits^post93, offset^0'=offset^post93, out_count^0'=out_count^post93, r_off32^0'=r_off32^post93, rat26^0'=rat26^post93, ratio^0'=ratio^post93, ret_getbyte18^0'=ret_getbyte18^post93, ret_getbyte25^0'=ret_getbyte25^post93, seed2^0'=seed2^post93, tabort4^0'=tabort4^post93, tmp12^0'=tmp12^post93, tmp___014^0'=tmp___014^post93, tmp___017^0'=tmp___017^post93, tmp___024^0'=tmp___024^post93, tmp___115^0'=tmp___115^post93, (exit_stat^0-exit_stat^post93 == 0 /\ -hsize___019^post93+hsize___019^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post93 == 0 /\ -hsize^post93+hsize^0 == 0 /\ __const_16^0-__const_16^post93 == 0 /\ __const_8^0-__const_8^post93 == 0 /\ -offset^post93+offset^0 == 0 /\ -apsim_bound11113^post93+apsim_bound11113^0 == 0 /\ -rat26^post93+rat26^0 == 0 /\ -__const_9^post93+__const_9^0 == 0 /\ hshift11^0-hshift11^post93 == 0 /\ __const_53^0-__const_53^post93 == 0 /\ -m130^post93+m130^0 == 0 /\ -__const_2147483647^post93+__const_2147483647^0 == 0 /\ -seed2^post93+seed2^0 == 0 /\ -maxbits^post93+maxbits^0 == 0 /\ -n40^post93+n40^0 == 0 /\ -ret_getbyte25^post93+ret_getbyte25^0 == 0 /\ checkpoint^0-checkpoint^post93 == 0 /\ -__const_10000^post93+__const_10000^0 == 0 /\ -maxmaxcode^post93+maxmaxcode^0 == 0 /\ i6^0-i6^post93 == 0 /\ tmp___017^0-tmp___017^post93 == 0 /\ r_off32^0-r_off32^post93 == 0 /\ __const_256^0-__const_256^post93 == 0 /\ -__const_50^post93+__const_50^0 == 0 /\ out_count^0-out_count^post93 == 0 /\ m122^0-m122^post93 == 0 /\ -ratio^post93+ratio^0 == 0 /\ -ent8^post93+ent8^0 == 0 /\ -__const_65536^post93+__const_65536^0 == 0 /\ i3^0-i3^post93 == 0 /\ n44^0-n44^post93 == 0 /\ bits33^0-bits33^post93 == 0 /\ hsize___027^0-hsize___027^post93 == 0 /\ -clear_flg^post93+clear_flg^0 == 0 /\ n_bits^0-n_bits^post93 == 0 /\ -tmp___024^post93+tmp___024^0 == 0 /\ -tmp___014^post93+tmp___014^0 == 0 /\ -i45^post93+i45^0 == 0 /\ -tmp___115^post93+tmp___115^0 == 0 /\ -i29^post93+i29^0 == 0 /\ bytes_out^0-bytes_out^post93 == 0 /\ -i41^post93+i41^0 == 0 /\ -__const_8388607^post93+__const_8388607^0 == 0 /\ -i21^post93+i21^0 == 0 /\ maxcode^0-maxcode^post93 == 0 /\ -block_compress^post93+block_compress^0 == 0 /\ -fcode5^post93+fcode5^0 == 0 /\ -c7^post93+c7^0 == 0 /\ count^0-count^post93 == 0 /\ -incnt^post93+incnt^0 == 0 /\ -free_ent^post93+free_ent^0 == 0 /\ apsim_incnt^0-apsim_incnt^post93 == 0 /\ __const_257^0-__const_257^post93 == 0 /\ -code31^post93+code31^0 == 0 /\ tabort4^0-tabort4^post93 == 0 /\ checkpoint^0-in_count^0 <= 0 /\ c37^0-c37^post93 == 0 /\ -__const_429496^post93+__const_429496^0 == 0 /\ -in_count^post93+in_count^0 == 0 /\ hsize_reg10^0-hsize_reg10^post93 == 0 /\ -disp9^post93+disp9^0 == 0 /\ tmp12^0-tmp12^post93 == 0), cost: 1
  93: l61 -> l60 : __const_10000^0'=__const_10000^post94, __const_16^0'=__const_16^post94, __const_2147483647^0'=__const_2147483647^post94, __const_256^0'=__const_256^post94, __const_257^0'=__const_257^post94, __const_429496^0'=__const_429496^post94, __const_50^0'=__const_50^post94, __const_53^0'=__const_53^post94, __const_65536^0'=__const_65536^post94, __const_8388607^0'=__const_8388607^post94, __const_8^0'=__const_8^post94, __const_9^0'=__const_9^post94, apsim_bound11113^0'=apsim_bound11113^post94, apsim_incnt^0'=apsim_incnt^post94, bits33^0'=bits33^post94, block_compress^0'=block_compress^post94, bytes_out^0'=bytes_out^post94, c37^0'=c37^post94, c7^0'=c7^post94, checkpoint^0'=checkpoint^post94, clear_flg^0'=clear_flg^post94, code31^0'=code31^post94, count^0'=count^post94, disp9^0'=disp9^post94, ent8^0'=ent8^post94, exit_stat^0'=exit_stat^post94, fcode5^0'=fcode5^post94, free_ent^0'=free_ent^post94, hshift11^0'=hshift11^post94, hsize^0'=hsize^post94, hsize___019^0'=hsize___019^post94, hsize___027^0'=hsize___027^post94, hsize_reg10^0'=hsize_reg10^post94, i21^0'=i21^post94, i29^0'=i29^post94, i3^0'=i3^post94, i41^0'=i41^post94, i45^0'=i45^post94, i6^0'=i6^post94, in_count^0'=in_count^post94, incnt^0'=incnt^post94, m122^0'=m122^post94, m130^0'=m130^post94, maxbits^0'=maxbits^post94, maxcode^0'=maxcode^post94, maxmaxcode^0'=maxmaxcode^post94, n40^0'=n40^post94, n44^0'=n44^post94, n_bits^0'=n_bits^post94, offset^0'=offset^post94, out_count^0'=out_count^post94, r_off32^0'=r_off32^post94, rat26^0'=rat26^post94, ratio^0'=ratio^post94, ret_getbyte18^0'=ret_getbyte18^post94, ret_getbyte25^0'=ret_getbyte25^post94, seed2^0'=seed2^post94, tabort4^0'=tabort4^post94, tmp12^0'=tmp12^post94, tmp___014^0'=tmp___014^post94, tmp___017^0'=tmp___017^post94, tmp___024^0'=tmp___024^post94, tmp___115^0'=tmp___115^post94, (m122^0-m122^post94 == 0 /\ -ratio^post94+ratio^0 == 0 /\ -free_ent^post94+free_ent^0 == 0 /\ -__const_8388607^post94+__const_8388607^0 == 0 /\ -i21^post94+i21^0 == 0 /\ m130^0-m130^post94 == 0 /\ __const_65536^0-__const_65536^post94 == 0 /\ __const_16^0-__const_16^post94 == 0 /\ in_count^0-in_count^post94 == 0 /\ -offset^post94+offset^0 == 0 /\ -i45^post94+i45^0 == 0 /\ -block_compress^post94+block_compress^0 == 0 /\ -disp9^post94+disp9^0 == 0 /\ __const_257^0-__const_257^post94 == 0 /\ -__const_256^post94+__const_256^0 == 0 /\ hsize___027^0-hsize___027^post94 == 0 /\ exit_stat^0-exit_stat^post94 == 0 /\ -ret_getbyte25^post94+ret_getbyte25^0 == 0 /\ i3^0-i3^post94 == 0 /\ r_off32^0-r_off32^post94 == 0 /\ __const_8^0-__const_8^post94 == 0 /\ hshift11^0-hshift11^post94 == 0 /\ i6^0-i6^post94 == 0 /\ -code31^post94+code31^0 == 0 /\ -tmp___115^post94+tmp___115^0 == 0 /\ -apsim_bound11113^post94+apsim_bound11113^0 == 0 /\ __const_53^0-__const_53^post94 == 0 /\ maxmaxcode^0-free_ent^0 <= 0 /\ -maxbits^post94+maxbits^0 == 0 /\ bytes_out^0-bytes_out^post94 == 0 /\ maxmaxcode^0-maxmaxcode^post94 == 0 /\ -n40^post94+n40^0 == 0 /\ out_count^0-out_count^post94 == 0 /\ __const_9^0-__const_9^post94 == 0 /\ c37^0-c37^post94 == 0 /\ bits33^0-bits33^post94 == 0 /\ -hsize_reg10^post94+hsize_reg10^0 == 0 /\ -__const_50^post94+__const_50^0 == 0 /\ ent8^0-ent8^post94 == 0 /\ -hsize___019^post94+hsize___019^0 == 0 /\ -__const_429496^post94+__const_429496^0 == 0 /\ tmp___017^0-tmp___017^post94 == 0 /\ -hsize^post94+hsize^0 == 0 /\ -i41^post94+i41^0 == 0 /\ -incnt^post94+incnt^0 == 0 /\ -__const_10000^post94+__const_10000^0 == 0 /\ -__const_2147483647^post94+__const_2147483647^0 == 0 /\ -seed2^post94+seed2^0 == 0 /\ -fcode5^post94+fcode5^0 == 0 /\ -tmp___014^post94+tmp___014^0 == 0 /\ apsim_incnt^0-apsim_incnt^post94 == 0 /\ tmp12^0-tmp12^post94 == 0 /\ -clear_flg^post94+clear_flg^0 == 0 /\ checkpoint^0-checkpoint^post94 == 0 /\ n44^0-n44^post94 == 0 /\ -c7^post94+c7^0 == 0 /\ count^0-count^post94 == 0 /\ maxcode^0-maxcode^post94 == 0 /\ -rat26^post94+rat26^0 == 0 /\ n_bits^0-n_bits^post94 == 0 /\ tabort4^0-tabort4^post94 == 0 /\ -tmp___024^post94+tmp___024^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post94 == 0 /\ -i29^post94+i29^0 == 0), cost: 1
  94: l61 -> l1 : __const_10000^0'=__const_10000^post95, __const_16^0'=__const_16^post95, __const_2147483647^0'=__const_2147483647^post95, __const_256^0'=__const_256^post95, __const_257^0'=__const_257^post95, __const_429496^0'=__const_429496^post95, __const_50^0'=__const_50^post95, __const_53^0'=__const_53^post95, __const_65536^0'=__const_65536^post95, __const_8388607^0'=__const_8388607^post95, __const_8^0'=__const_8^post95, __const_9^0'=__const_9^post95, apsim_bound11113^0'=apsim_bound11113^post95, apsim_incnt^0'=apsim_incnt^post95, bits33^0'=bits33^post95, block_compress^0'=block_compress^post95, bytes_out^0'=bytes_out^post95, c37^0'=c37^post95, c7^0'=c7^post95, checkpoint^0'=checkpoint^post95, clear_flg^0'=clear_flg^post95, code31^0'=code31^post95, count^0'=count^post95, disp9^0'=disp9^post95, ent8^0'=ent8^post95, exit_stat^0'=exit_stat^post95, fcode5^0'=fcode5^post95, free_ent^0'=free_ent^post95, hshift11^0'=hshift11^post95, hsize^0'=hsize^post95, hsize___019^0'=hsize___019^post95, hsize___027^0'=hsize___027^post95, hsize_reg10^0'=hsize_reg10^post95, i21^0'=i21^post95, i29^0'=i29^post95, i3^0'=i3^post95, i41^0'=i41^post95, i45^0'=i45^post95, i6^0'=i6^post95, in_count^0'=in_count^post95, incnt^0'=incnt^post95, m122^0'=m122^post95, m130^0'=m130^post95, maxbits^0'=maxbits^post95, maxcode^0'=maxcode^post95, maxmaxcode^0'=maxmaxcode^post95, n40^0'=n40^post95, n44^0'=n44^post95, n_bits^0'=n_bits^post95, offset^0'=offset^post95, out_count^0'=out_count^post95, r_off32^0'=r_off32^post95, rat26^0'=rat26^post95, ratio^0'=ratio^post95, ret_getbyte18^0'=ret_getbyte18^post95, ret_getbyte25^0'=ret_getbyte25^post95, seed2^0'=seed2^post95, tabort4^0'=tabort4^post95, tmp12^0'=tmp12^post95, tmp___014^0'=tmp___014^post95, tmp___017^0'=tmp___017^post95, tmp___024^0'=tmp___024^post95, tmp___115^0'=tmp___115^post95, (-i45^post95+i45^0 == 0 /\ -i29^post95+i29^0 == 0 /\ __const_257^0-__const_257^post95 == 0 /\ -i41^post95+i41^0 == 0 /\ -__const_50^post95+__const_50^0 == 0 /\ n44^0-n44^post95 == 0 /\ i6^0-i6^post95 == 0 /\ m130^0-m130^post95 == 0 /\ -free_ent^0+tmp___115^post95 == 0 /\ __const_65536^0-__const_65536^post95 == 0 /\ -tmp___024^post95+tmp___024^0 == 0 /\ __const_53^0-__const_53^post95 == 0 /\ -hsize___019^post95+hsize___019^0 == 0 /\ i3^0-i3^post95 == 0 /\ code31^0-code31^post95 == 0 /\ -hsize_reg10^post95+hsize_reg10^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post95 == 0 /\ -i21^post95+i21^0 == 0 /\ -clear_flg^post95+clear_flg^0 == 0 /\ -c7^post95+c7^0 == 0 /\ -incnt^post95+incnt^0 == 0 /\ -bytes_out^post95+bytes_out^0 == 0 /\ -__const_10000^post95+__const_10000^0 == 0 /\ c37^0-c37^post95 == 0 /\ hsize___027^0-hsize___027^post95 == 0 /\ -seed2^post95+seed2^0 == 0 /\ -__const_8388607^post95+__const_8388607^0 == 0 /\ ent8^0-ent8^post95 == 0 /\ __const_429496^0-__const_429496^post95 == 0 /\ r_off32^0-r_off32^post95 == 0 /\ checkpoint^0-checkpoint^post95 == 0 /\ hshift11^0-hshift11^post95 == 0 /\ -count^post95+count^0 == 0 /\ rat26^0-rat26^post95 == 0 /\ __const_8^0-__const_8^post95 == 0 /\ tmp12^0-tmp12^post95 == 0 /\ -offset^post95+offset^0 == 0 /\ -disp9^post95+disp9^0 == 0 /\ tabort4^0-tabort4^post95 == 0 /\ -ratio^post95+ratio^0 == 0 /\ -apsim_bound11113^post95+apsim_bound11113^0 == 0 /\ exit_stat^0-exit_stat^post95 == 0 /\ ret_getbyte18^0-ret_getbyte18^post95 == 0 /\ out_count^0-out_count^post95 == 0 /\ -n_bits^post95+n_bits^0 == 0 /\ -fcode5^post95+fcode5^0 == 0 /\ -in_count^post95+in_count^0 == 0 /\ __const_2147483647^0-__const_2147483647^post95 == 0 /\ -1-free_ent^0+free_ent^post95 == 0 /\ -maxbits^post95+maxbits^0 == 0 /\ 1-maxmaxcode^0+free_ent^0 <= 0 /\ -hsize^post95+hsize^0 == 0 /\ maxcode^0-maxcode^post95 == 0 /\ tmp___017^0-tmp___017^post95 == 0 /\ -block_compress^post95+block_compress^0 == 0 /\ -n40^post95+n40^0 == 0 /\ -tmp___014^post95+tmp___014^0 == 0 /\ maxmaxcode^0-maxmaxcode^post95 == 0 /\ __const_9^0-__const_9^post95 == 0 /\ apsim_incnt^0-apsim_incnt^post95 == 0 /\ __const_16^0-__const_16^post95 == 0 /\ -m122^post95+m122^0 == 0 /\ -__const_256^post95+__const_256^0 == 0 /\ bits33^0-bits33^post95 == 0), cost: 1
  95: l62 -> l61 : __const_10000^0'=__const_10000^post96, __const_16^0'=__const_16^post96, __const_2147483647^0'=__const_2147483647^post96, __const_256^0'=__const_256^post96, __const_257^0'=__const_257^post96, __const_429496^0'=__const_429496^post96, __const_50^0'=__const_50^post96, __const_53^0'=__const_53^post96, __const_65536^0'=__const_65536^post96, __const_8388607^0'=__const_8388607^post96, __const_8^0'=__const_8^post96, __const_9^0'=__const_9^post96, apsim_bound11113^0'=apsim_bound11113^post96, apsim_incnt^0'=apsim_incnt^post96, bits33^0'=bits33^post96, block_compress^0'=block_compress^post96, bytes_out^0'=bytes_out^post96, c37^0'=c37^post96, c7^0'=c7^post96, checkpoint^0'=checkpoint^post96, clear_flg^0'=clear_flg^post96, code31^0'=code31^post96, count^0'=count^post96, disp9^0'=disp9^post96, ent8^0'=ent8^post96, exit_stat^0'=exit_stat^post96, fcode5^0'=fcode5^post96, free_ent^0'=free_ent^post96, hshift11^0'=hshift11^post96, hsize^0'=hsize^post96, hsize___019^0'=hsize___019^post96, hsize___027^0'=hsize___027^post96, hsize_reg10^0'=hsize_reg10^post96, i21^0'=i21^post96, i29^0'=i29^post96, i3^0'=i3^post96, i41^0'=i41^post96, i45^0'=i45^post96, i6^0'=i6^post96, in_count^0'=in_count^post96, incnt^0'=incnt^post96, m122^0'=m122^post96, m130^0'=m130^post96, maxbits^0'=maxbits^post96, maxcode^0'=maxcode^post96, maxmaxcode^0'=maxmaxcode^post96, n40^0'=n40^post96, n44^0'=n44^post96, n_bits^0'=n_bits^post96, offset^0'=offset^post96, out_count^0'=out_count^post96, r_off32^0'=r_off32^post96, rat26^0'=rat26^post96, ratio^0'=ratio^post96, ret_getbyte18^0'=ret_getbyte18^post96, ret_getbyte25^0'=ret_getbyte25^post96, seed2^0'=seed2^post96, tabort4^0'=tabort4^post96, tmp12^0'=tmp12^post96, tmp___014^0'=tmp___014^post96, tmp___017^0'=tmp___017^post96, tmp___024^0'=tmp___024^post96, tmp___115^0'=tmp___115^post96, (-tmp___024^post96+tmp___024^0 == 0 /\ -maxcode^post96+maxcode^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post96 == 0 /\ -exit_stat^post96+exit_stat^0 == 0 /\ -in_count^post96+in_count^0 == 0 /\ -fcode5^post96+fcode5^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post96 == 0 /\ bits33^0-bits33^post96 == 0 /\ -ratio^post96+ratio^0 == 0 /\ -ret_getbyte18^post96+ret_getbyte18^0 == 0 /\ -__const_256^post96+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post96 == 0 /\ __const_257^0-__const_257^post96 == 0 /\ __const_9^0-__const_9^post96 == 0 /\ apsim_incnt^0-apsim_incnt^post96 == 0 /\ -__const_10000^post96+__const_10000^0 == 0 /\ offset^0-offset^post96 == 0 /\ n40^0-n40^post96 == 0 /\ c37^0-c37^post96 == 0 /\ -m122^post96+m122^0 == 0 /\ -i45^post96+i45^0 == 0 /\ -tabort4^post96+tabort4^0 == 0 /\ n44^0-n44^post96 == 0 /\ tmp___014^0-tmp___014^post96 == 0 /\ -__const_50^post96+__const_50^0 == 0 /\ code31^0-code31^post96 == 0 /\ -c7^0+ent8^post96 == 0 /\ c7^0-c7^post96 == 0 /\ -count^post96+count^0 == 0 /\ hshift11^0-hshift11^post96 == 0 /\ tmp12^0-tmp12^post96 == 0 /\ -r_off32^post96+r_off32^0 == 0 /\ i21^0-i21^post96 == 0 /\ __const_65536^0-__const_65536^post96 == 0 /\ -bytes_out^post96+bytes_out^0 == 0 /\ __const_16^0-__const_16^post96 == 0 /\ free_ent^0-free_ent^post96 == 0 /\ -tmp___017^post96+tmp___017^0 == 0 /\ -1-out_count^0+out_count^post96 == 0 /\ m130^0-m130^post96 == 0 /\ -clear_flg^post96+clear_flg^0 == 0 /\ -checkpoint^post96+checkpoint^0 == 0 /\ __const_53^0-__const_53^post96 == 0 /\ -hsize_reg10^post96+hsize_reg10^0 == 0 /\ -__const_8388607^post96+__const_8388607^0 == 0 /\ maxbits^0-maxbits^post96 == 0 /\ __const_8^0-__const_8^post96 == 0 /\ -block_compress^post96+block_compress^0 == 0 /\ -hsize^post96+hsize^0 == 0 /\ hsize___027^0-hsize___027^post96 == 0 /\ -i41^post96+i41^0 == 0 /\ tmp___115^0-tmp___115^post96 == 0 /\ -seed2^post96+seed2^0 == 0 /\ rat26^0-rat26^post96 == 0 /\ -n_bits^post96+n_bits^0 == 0 /\ -incnt^post96+incnt^0 == 0 /\ hsize___019^0-hsize___019^post96 == 0 /\ -disp9^post96+disp9^0 == 0 /\ -i29^post96+i29^0 == 0 /\ i6^0-i6^post96 == 0 /\ i3^0-i3^post96 == 0 /\ __const_429496^0-__const_429496^post96 == 0 /\ __const_2147483647^0-__const_2147483647^post96 == 0), cost: 1
  96: l63 -> l62 : __const_10000^0'=__const_10000^post97, __const_16^0'=__const_16^post97, __const_2147483647^0'=__const_2147483647^post97, __const_256^0'=__const_256^post97, __const_257^0'=__const_257^post97, __const_429496^0'=__const_429496^post97, __const_50^0'=__const_50^post97, __const_53^0'=__const_53^post97, __const_65536^0'=__const_65536^post97, __const_8388607^0'=__const_8388607^post97, __const_8^0'=__const_8^post97, __const_9^0'=__const_9^post97, apsim_bound11113^0'=apsim_bound11113^post97, apsim_incnt^0'=apsim_incnt^post97, bits33^0'=bits33^post97, block_compress^0'=block_compress^post97, bytes_out^0'=bytes_out^post97, c37^0'=c37^post97, c7^0'=c7^post97, checkpoint^0'=checkpoint^post97, clear_flg^0'=clear_flg^post97, code31^0'=code31^post97, count^0'=count^post97, disp9^0'=disp9^post97, ent8^0'=ent8^post97, exit_stat^0'=exit_stat^post97, fcode5^0'=fcode5^post97, free_ent^0'=free_ent^post97, hshift11^0'=hshift11^post97, hsize^0'=hsize^post97, hsize___019^0'=hsize___019^post97, hsize___027^0'=hsize___027^post97, hsize_reg10^0'=hsize_reg10^post97, i21^0'=i21^post97, i29^0'=i29^post97, i3^0'=i3^post97, i41^0'=i41^post97, i45^0'=i45^post97, i6^0'=i6^post97, in_count^0'=in_count^post97, incnt^0'=incnt^post97, m122^0'=m122^post97, m130^0'=m130^post97, maxbits^0'=maxbits^post97, maxcode^0'=maxcode^post97, maxmaxcode^0'=maxmaxcode^post97, n40^0'=n40^post97, n44^0'=n44^post97, n_bits^0'=n_bits^post97, offset^0'=offset^post97, out_count^0'=out_count^post97, r_off32^0'=r_off32^post97, rat26^0'=rat26^post97, ratio^0'=ratio^post97, ret_getbyte18^0'=ret_getbyte18^post97, ret_getbyte25^0'=ret_getbyte25^post97, seed2^0'=seed2^post97, tabort4^0'=tabort4^post97, tmp12^0'=tmp12^post97, tmp___014^0'=tmp___014^post97, tmp___017^0'=tmp___017^post97, tmp___024^0'=tmp___024^post97, tmp___115^0'=tmp___115^post97, (n40^0-n40^post97 == 0 /\ ent8^0-ent8^post97 == 0 /\ -hsize^post97+hsize^0 == 0 /\ c7^0-c7^post97 == 0 /\ tmp12^0-tmp12^post97 == 0 /\ -__const_429496^post97+__const_429496^0 == 0 /\ -i41^post97+i41^0 == 0 /\ -i29^post97+i29^0 == 0 /\ rat26^0-rat26^post97 == 0 /\ tmp___115^0-tmp___115^post97 == 0 /\ __const_8388607^0-__const_8388607^post97 == 0 /\ exit_stat^0-exit_stat^post97 == 0 /\ -__const_65536^post97+__const_65536^0 == 0 /\ out_count^0-out_count^post97 == 0 /\ __const_50^0-__const_50^post97 == 0 /\ -apsim_bound11113^0+in_count^0 <= 0 /\ apsim_bound11113^0-apsim_bound11113^post97 == 0 /\ i21^0-i21^post97 == 0 /\ -hsize_reg10^post97+hsize_reg10^0 == 0 /\ -maxcode^post97+maxcode^0 == 0 /\ offset^0-offset^post97 == 0 /\ __const_16^0-__const_16^post97 == 0 /\ -incnt^post97+incnt^0 == 0 /\ -tmp___017^post97+tmp___017^0 == 0 /\ __const_9^0-__const_9^post97 == 0 /\ -__const_10000^post97+__const_10000^0 == 0 /\ -clear_flg^post97+clear_flg^0 == 0 /\ -bytes_out^post97+bytes_out^0 == 0 /\ tmp___014^0-tmp___014^post97 == 0 /\ -__const_8^post97+__const_8^0 == 0 /\ bits33^0-bits33^post97 == 0 /\ -__const_2147483647^post97+__const_2147483647^0 == 0 /\ hsize___019^0-hsize___019^post97 == 0 /\ __const_257^0-__const_257^post97 == 0 /\ apsim_incnt^0-apsim_incnt^post97 == 0 /\ -fcode5^post97+fcode5^0 == 0 /\ -count^post97+count^0 == 0 /\ -disp9^post97+disp9^0 == 0 /\ hshift11^0-hshift11^post97 == 0 /\ n44^0-n44^post97 == 0 /\ -ratio^post97+ratio^0 == 0 /\ -ret_getbyte18^post97+ret_getbyte18^0 == 0 /\ -i6^post97+i6^0 == 0 /\ -in_count^post97+in_count^0 == 0 /\ -n_bits^post97+n_bits^0 == 0 /\ maxmaxcode^0-maxmaxcode^post97 == 0 /\ code31^0-code31^post97 == 0 /\ seed2^0-seed2^post97 == 0 /\ __const_53^0-__const_53^post97 == 0 /\ m130^0-m130^post97 == 0 /\ ret_getbyte25^0-ret_getbyte25^post97 == 0 /\ i3^0-i3^post97 == 0 /\ free_ent^0-free_ent^post97 == 0 /\ -hsize___027^post97+hsize___027^0 == 0 /\ -r_off32^post97+r_off32^0 == 0 /\ maxbits^0-maxbits^post97 == 0 /\ -tmp___024^post97+tmp___024^0 == 0 /\ -tabort4^post97+tabort4^0 == 0 /\ -m122^post97+m122^0 == 0 /\ -__const_256^post97+__const_256^0 == 0 /\ -block_compress^post97+block_compress^0 == 0 /\ -checkpoint^post97+checkpoint^0 == 0 /\ i45^0-i45^post97 == 0 /\ c37^0-c37^post97 == 0), cost: 1
  97: l63 -> l6 : __const_10000^0'=__const_10000^post98, __const_16^0'=__const_16^post98, __const_2147483647^0'=__const_2147483647^post98, __const_256^0'=__const_256^post98, __const_257^0'=__const_257^post98, __const_429496^0'=__const_429496^post98, __const_50^0'=__const_50^post98, __const_53^0'=__const_53^post98, __const_65536^0'=__const_65536^post98, __const_8388607^0'=__const_8388607^post98, __const_8^0'=__const_8^post98, __const_9^0'=__const_9^post98, apsim_bound11113^0'=apsim_bound11113^post98, apsim_incnt^0'=apsim_incnt^post98, bits33^0'=bits33^post98, block_compress^0'=block_compress^post98, bytes_out^0'=bytes_out^post98, c37^0'=c37^post98, c7^0'=c7^post98, checkpoint^0'=checkpoint^post98, clear_flg^0'=clear_flg^post98, code31^0'=code31^post98, count^0'=count^post98, disp9^0'=disp9^post98, ent8^0'=ent8^post98, exit_stat^0'=exit_stat^post98, fcode5^0'=fcode5^post98, free_ent^0'=free_ent^post98, hshift11^0'=hshift11^post98, hsize^0'=hsize^post98, hsize___019^0'=hsize___019^post98, hsize___027^0'=hsize___027^post98, hsize_reg10^0'=hsize_reg10^post98, i21^0'=i21^post98, i29^0'=i29^post98, i3^0'=i3^post98, i41^0'=i41^post98, i45^0'=i45^post98, i6^0'=i6^post98, in_count^0'=in_count^post98, incnt^0'=incnt^post98, m122^0'=m122^post98, m130^0'=m130^post98, maxbits^0'=maxbits^post98, maxcode^0'=maxcode^post98, maxmaxcode^0'=maxmaxcode^post98, n40^0'=n40^post98, n44^0'=n44^post98, n_bits^0'=n_bits^post98, offset^0'=offset^post98, out_count^0'=out_count^post98, r_off32^0'=r_off32^post98, rat26^0'=rat26^post98, ratio^0'=ratio^post98, ret_getbyte18^0'=ret_getbyte18^post98, ret_getbyte25^0'=ret_getbyte25^post98, seed2^0'=seed2^post98, tabort4^0'=tabort4^post98, tmp12^0'=tmp12^post98, tmp___014^0'=tmp___014^post98, tmp___017^0'=tmp___017^post98, tmp___024^0'=tmp___024^post98, tmp___115^0'=tmp___115^post98, (-tabort4^post98+tabort4^0 == 0 /\ -n44^post98+n44^0 == 0 /\ -r_off32^post98+r_off32^0 == 0 /\ tmp___014^0-tmp___014^post98 == 0 /\ free_ent^0-free_ent^post98 == 0 /\ __const_50^0-__const_50^post98 == 0 /\ -__const_2147483647^post98+__const_2147483647^0 == 0 /\ __const_16^0-__const_16^post98 == 0 /\ -n_bits^post98+n_bits^0 == 0 /\ -fcode5^post98+fcode5^0 == 0 /\ 1+apsim_bound11113^0-in_count^0 <= 0 /\ __const_53^0-__const_53^post98 == 0 /\ tmp___115^0-tmp___115^post98 == 0 /\ tmp12^0-tmp12^post98 == 0 /\ m130^0-m130^post98 == 0 /\ rat26^0-rat26^post98 == 0 /\ -__const_10000^post98+__const_10000^0 == 0 /\ -tmp___024^post98+tmp___024^0 == 0 /\ -tmp___017^post98+tmp___017^0 == 0 /\ __const_256^0-__const_256^post98 == 0 /\ ent8^0-ent8^post98 == 0 /\ -apsim_incnt^post98+apsim_incnt^0 == 0 /\ out_count^0-out_count^post98 == 0 /\ -__const_65536^post98+__const_65536^0 == 0 /\ -i6^post98+i6^0 == 0 /\ i29^0-i29^post98 == 0 /\ -hsize___027^post98+hsize___027^0 == 0 /\ exit_stat^0-exit_stat^post98 == 0 /\ -checkpoint^post98+checkpoint^0 == 0 /\ -clear_flg^post98+clear_flg^0 == 0 /\ -c7^post98+c7^0 == 0 /\ -bytes_out^post98+bytes_out^0 == 0 /\ -block_compress^post98+block_compress^0 == 0 /\ -incnt^post98+incnt^0 == 0 /\ offset^0-offset^post98 == 0 /\ maxmaxcode^0-maxmaxcode^post98 == 0 /\ i21^0-i21^post98 == 0 /\ -m122^post98+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post98 == 0 /\ -__const_9^post98+__const_9^0 == 0 /\ -__const_8388607^post98+__const_8388607^0 == 0 /\ -hsize^post98+hsize^0 == 0 /\ n40^0-n40^post98 == 0 /\ __const_257^0-__const_257^post98 == 0 /\ -hsize___019^post98+hsize___019^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post98 == 0 /\ -i3^post98+i3^0 == 0 /\ -maxbits^post98+maxbits^0 == 0 /\ -maxcode^post98+maxcode^0 == 0 /\ -i41^post98+i41^0 == 0 /\ count^0-count^post98 == 0 /\ -code31^post98+code31^0 == 0 /\ c37^0-c37^post98 == 0 /\ -ret_getbyte18^post98+ret_getbyte18^0 == 0 /\ bits33^0-bits33^post98 == 0 /\ -__const_8^post98+__const_8^0 == 0 /\ -in_count^post98+in_count^0 == 0 /\ i45^0-i45^post98 == 0 /\ -__const_429496^post98+__const_429496^0 == 0 /\ -hsize_reg10^post98+hsize_reg10^0 == 0 /\ seed2^0-seed2^post98 == 0 /\ ratio^0-ratio^post98 == 0 /\ hshift11^0-hshift11^post98 == 0 /\ -disp9^post98+disp9^0 == 0), cost: 1
  98: l64 -> l63 : __const_10000^0'=__const_10000^post99, __const_16^0'=__const_16^post99, __const_2147483647^0'=__const_2147483647^post99, __const_256^0'=__const_256^post99, __const_257^0'=__const_257^post99, __const_429496^0'=__const_429496^post99, __const_50^0'=__const_50^post99, __const_53^0'=__const_53^post99, __const_65536^0'=__const_65536^post99, __const_8388607^0'=__const_8388607^post99, __const_8^0'=__const_8^post99, __const_9^0'=__const_9^post99, apsim_bound11113^0'=apsim_bound11113^post99, apsim_incnt^0'=apsim_incnt^post99, bits33^0'=bits33^post99, block_compress^0'=block_compress^post99, bytes_out^0'=bytes_out^post99, c37^0'=c37^post99, c7^0'=c7^post99, checkpoint^0'=checkpoint^post99, clear_flg^0'=clear_flg^post99, code31^0'=code31^post99, count^0'=count^post99, disp9^0'=disp9^post99, ent8^0'=ent8^post99, exit_stat^0'=exit_stat^post99, fcode5^0'=fcode5^post99, free_ent^0'=free_ent^post99, hshift11^0'=hshift11^post99, hsize^0'=hsize^post99, hsize___019^0'=hsize___019^post99, hsize___027^0'=hsize___027^post99, hsize_reg10^0'=hsize_reg10^post99, i21^0'=i21^post99, i29^0'=i29^post99, i3^0'=i3^post99, i41^0'=i41^post99, i45^0'=i45^post99, i6^0'=i6^post99, in_count^0'=in_count^post99, incnt^0'=incnt^post99, m122^0'=m122^post99, m130^0'=m130^post99, maxbits^0'=maxbits^post99, maxcode^0'=maxcode^post99, maxmaxcode^0'=maxmaxcode^post99, n40^0'=n40^post99, n44^0'=n44^post99, n_bits^0'=n_bits^post99, offset^0'=offset^post99, out_count^0'=out_count^post99, r_off32^0'=r_off32^post99, rat26^0'=rat26^post99, ratio^0'=ratio^post99, ret_getbyte18^0'=ret_getbyte18^post99, ret_getbyte25^0'=ret_getbyte25^post99, seed2^0'=seed2^post99, tabort4^0'=tabort4^post99, tmp12^0'=tmp12^post99, tmp___014^0'=tmp___014^post99, tmp___017^0'=tmp___017^post99, tmp___024^0'=tmp___024^post99, tmp___115^0'=tmp___115^post99, (hshift11^0-hshift11^post99 == 0 /\ tmp___115^0-tmp___115^post99 == 0 /\ -i6^post99+i6^0 == 0 /\ -in_count^post99+in_count^0 == 0 /\ -__const_8388607^post99+__const_8388607^0 == 0 /\ -maxbits^post99+maxbits^0 == 0 /\ apsim_incnt^0-apsim_incnt^post99 == 0 /\ __const_256^0-__const_256^post99 == 0 /\ n44^0-n44^post99 == 0 /\ -n40^post99+n40^0 == 0 /\ -ret_getbyte18^post99+ret_getbyte18^0 == 0 /\ -i21^post99+i21^0 == 0 /\ -c7^post99+c7^0 == 0 /\ maxcode^0-maxcode^post99 == 0 /\ -1-apsim_bound11113^0+apsim_bound11113^post99 == 0 /\ __const_16^0-__const_16^post99 == 0 /\ -m122^post99+m122^0 == 0 /\ free_ent^0-free_ent^post99 == 0 /\ -clear_flg^post99+clear_flg^0 == 0 /\ -hsize___019^post99+hsize___019^0 == 0 /\ -__const_9^post99+__const_9^0 == 0 /\ rat26^0-rat26^post99 == 0 /\ -__const_429496^post99+__const_429496^0 == 0 /\ -i3^post99+i3^0 == 0 /\ exit_stat^0-exit_stat^post99 == 0 /\ __const_50^0-__const_50^post99 == 0 /\ i29^0-i29^post99 == 0 /\ -disp9^post99+disp9^0 == 0 /\ m130^0-m130^post99 == 0 /\ -code31^post99+code31^0 == 0 /\ -r_off32^post99+r_off32^0 == 0 /\ __const_257^0-__const_257^post99 == 0 /\ __const_53^0-__const_53^post99 == 0 /\ ret_getbyte25^0-ret_getbyte25^post99 == 0 /\ -__const_8^post99+__const_8^0 == 0 /\ c37^0-c37^post99 == 0 /\ -tmp___024^post99+tmp___024^0 == 0 /\ -tmp___017^post99+tmp___017^0 == 0 /\ -hsize_reg10^post99+hsize_reg10^0 == 0 /\ out_count^0-out_count^post99 == 0 /\ i45^0-i45^post99 == 0 /\ -seed2^post99+seed2^0 == 0 /\ offset^0-offset^post99 == 0 /\ -tabort4^post99+tabort4^0 == 0 /\ -__const_65536^post99+__const_65536^0 == 0 /\ -block_compress^post99+block_compress^0 == 0 /\ -__const_2147483647^post99+__const_2147483647^0 == 0 /\ -i41^post99+i41^0 == 0 /\ -incnt^post99+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post99 == 0 /\ -ent8^post99+ent8^0 == 0 /\ -hsize^post99+hsize^0 == 0 /\ ratio^0-ratio^post99 == 0 /\ tmp___014^0-tmp___014^post99 == 0 /\ -bytes_out^post99+bytes_out^0 == 0 /\ checkpoint^0-checkpoint^post99 == 0 /\ -n_bits^post99+n_bits^0 == 0 /\ __const_10000^0-__const_10000^post99 == 0 /\ count^0-count^post99 == 0 /\ bits33^0-bits33^post99 == 0 /\ tmp12^0-tmp12^post99 == 0 /\ hsize___027^0-hsize___027^post99 == 0 /\ -fcode5^post99+fcode5^0 == 0), cost: 1
  99: l64 -> l62 : __const_10000^0'=__const_10000^post100, __const_16^0'=__const_16^post100, __const_2147483647^0'=__const_2147483647^post100, __const_256^0'=__const_256^post100, __const_257^0'=__const_257^post100, __const_429496^0'=__const_429496^post100, __const_50^0'=__const_50^post100, __const_53^0'=__const_53^post100, __const_65536^0'=__const_65536^post100, __const_8388607^0'=__const_8388607^post100, __const_8^0'=__const_8^post100, __const_9^0'=__const_9^post100, apsim_bound11113^0'=apsim_bound11113^post100, apsim_incnt^0'=apsim_incnt^post100, bits33^0'=bits33^post100, block_compress^0'=block_compress^post100, bytes_out^0'=bytes_out^post100, c37^0'=c37^post100, c7^0'=c7^post100, checkpoint^0'=checkpoint^post100, clear_flg^0'=clear_flg^post100, code31^0'=code31^post100, count^0'=count^post100, disp9^0'=disp9^post100, ent8^0'=ent8^post100, exit_stat^0'=exit_stat^post100, fcode5^0'=fcode5^post100, free_ent^0'=free_ent^post100, hshift11^0'=hshift11^post100, hsize^0'=hsize^post100, hsize___019^0'=hsize___019^post100, hsize___027^0'=hsize___027^post100, hsize_reg10^0'=hsize_reg10^post100, i21^0'=i21^post100, i29^0'=i29^post100, i3^0'=i3^post100, i41^0'=i41^post100, i45^0'=i45^post100, i6^0'=i6^post100, in_count^0'=in_count^post100, incnt^0'=incnt^post100, m122^0'=m122^post100, m130^0'=m130^post100, maxbits^0'=maxbits^post100, maxcode^0'=maxcode^post100, maxmaxcode^0'=maxmaxcode^post100, n40^0'=n40^post100, n44^0'=n44^post100, n_bits^0'=n_bits^post100, offset^0'=offset^post100, out_count^0'=out_count^post100, r_off32^0'=r_off32^post100, rat26^0'=rat26^post100, ratio^0'=ratio^post100, ret_getbyte18^0'=ret_getbyte18^post100, ret_getbyte25^0'=ret_getbyte25^post100, seed2^0'=seed2^post100, tabort4^0'=tabort4^post100, tmp12^0'=tmp12^post100, tmp___014^0'=tmp___014^post100, tmp___017^0'=tmp___017^post100, tmp___024^0'=tmp___024^post100, tmp___115^0'=tmp___115^post100, (rat26^0-rat26^post100 == 0 /\ -tmp___017^post100+tmp___017^0 == 0 /\ bytes_out^0-bytes_out^post100 == 0 /\ -tmp___024^post100+tmp___024^0 == 0 /\ tmp___014^0-tmp___014^post100 == 0 /\ -bits33^post100+bits33^0 == 0 /\ __const_257^0-__const_257^post100 == 0 /\ -__const_429496^post100+__const_429496^0 == 0 /\ -__const_53^post100+__const_53^0 == 0 /\ -apsim_bound11113^post100+apsim_bound11113^0 == 0 /\ apsim_incnt^0-apsim_incnt^post100 == 0 /\ -__const_9^post100+__const_9^0 == 0 /\ -tabort4^post100+tabort4^0 == 0 /\ tmp12^0-tmp12^post100 == 0 /\ -__const_65536^post100+__const_65536^0 == 0 /\ __const_256^0-__const_256^post100 == 0 /\ -i29^post100+i29^0 == 0 /\ -i41^post100+i41^0 == 0 /\ hshift11^0-hshift11^post100 == 0 /\ -clear_flg^post100+clear_flg^0 == 0 /\ -incnt^post100+incnt^0 == 0 /\ -n44^post100+n44^0 == 0 /\ out_count^0-out_count^post100 == 0 /\ -block_compress^post100+block_compress^0 == 0 /\ -__const_2147483647^post100+__const_2147483647^0 == 0 /\ offset^0-offset^post100 == 0 /\ -__const_8388607^post100+__const_8388607^0 == 0 /\ -hsize^post100+hsize^0 == 0 /\ -c7^post100+c7^0 == 0 /\ c37^0-c37^post100 == 0 /\ -i6^post100+i6^0 == 0 /\ -maxcode^post100+maxcode^0 == 0 /\ -in_count^post100+in_count^0 == 0 /\ -code31^post100+code31^0 == 0 /\ -ratio^post100+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post100 == 0 /\ checkpoint^0-checkpoint^post100 == 0 /\ -ret_getbyte18^post100+ret_getbyte18^0 == 0 /\ __const_8^0-__const_8^post100 == 0 /\ hsize_reg10^0-hsize_reg10^post100 == 0 /\ exit_stat^0-exit_stat^post100 == 0 /\ __const_50^0-__const_50^post100 == 0 /\ -free_ent^post100+free_ent^0 == 0 /\ -fcode5^post100+fcode5^0 == 0 /\ -disp9^post100+disp9^0 == 0 /\ hsize___027^0-hsize___027^post100 == 0 /\ i21^0-i21^post100 == 0 /\ n40^0-n40^post100 == 0 /\ -ent8^post100+ent8^0 == 0 /\ -m122^post100+m122^0 == 0 /\ tmp___115^0-tmp___115^post100 == 0 /\ -i3^post100+i3^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post100 == 0 /\ maxbits^0-maxbits^post100 == 0 /\ count^0-count^post100 == 0 /\ m130^0-m130^post100 == 0 /\ seed2^0-seed2^post100 == 0 /\ -n_bits^post100+n_bits^0 == 0 /\ -__const_16^post100+__const_16^0 == 0 /\ i45^0-i45^post100 == 0 /\ -r_off32^post100+r_off32^0 == 0 /\ __const_10000^0-__const_10000^post100 == 0 /\ -hsize___019^post100+hsize___019^0 == 0), cost: 1
 100: l65 -> l64 : __const_10000^0'=__const_10000^post101, __const_16^0'=__const_16^post101, __const_2147483647^0'=__const_2147483647^post101, __const_256^0'=__const_256^post101, __const_257^0'=__const_257^post101, __const_429496^0'=__const_429496^post101, __const_50^0'=__const_50^post101, __const_53^0'=__const_53^post101, __const_65536^0'=__const_65536^post101, __const_8388607^0'=__const_8388607^post101, __const_8^0'=__const_8^post101, __const_9^0'=__const_9^post101, apsim_bound11113^0'=apsim_bound11113^post101, apsim_incnt^0'=apsim_incnt^post101, bits33^0'=bits33^post101, block_compress^0'=block_compress^post101, bytes_out^0'=bytes_out^post101, c37^0'=c37^post101, c7^0'=c7^post101, checkpoint^0'=checkpoint^post101, clear_flg^0'=clear_flg^post101, code31^0'=code31^post101, count^0'=count^post101, disp9^0'=disp9^post101, ent8^0'=ent8^post101, exit_stat^0'=exit_stat^post101, fcode5^0'=fcode5^post101, free_ent^0'=free_ent^post101, hshift11^0'=hshift11^post101, hsize^0'=hsize^post101, hsize___019^0'=hsize___019^post101, hsize___027^0'=hsize___027^post101, hsize_reg10^0'=hsize_reg10^post101, i21^0'=i21^post101, i29^0'=i29^post101, i3^0'=i3^post101, i41^0'=i41^post101, i45^0'=i45^post101, i6^0'=i6^post101, in_count^0'=in_count^post101, incnt^0'=incnt^post101, m122^0'=m122^post101, m130^0'=m130^post101, maxbits^0'=maxbits^post101, maxcode^0'=maxcode^post101, maxmaxcode^0'=maxmaxcode^post101, n40^0'=n40^post101, n44^0'=n44^post101, n_bits^0'=n_bits^post101, offset^0'=offset^post101, out_count^0'=out_count^post101, r_off32^0'=r_off32^post101, rat26^0'=rat26^post101, ratio^0'=ratio^post101, ret_getbyte18^0'=ret_getbyte18^post101, ret_getbyte25^0'=ret_getbyte25^post101, seed2^0'=seed2^post101, tabort4^0'=tabort4^post101, tmp12^0'=tmp12^post101, tmp___014^0'=tmp___014^post101, tmp___017^0'=tmp___017^post101, tmp___024^0'=tmp___024^post101, tmp___115^0'=tmp___115^post101, (m130^0-m130^post101 == 0 /\ __const_53^0-__const_53^post101 == 0 /\ free_ent^0-free_ent^post101 == 0 /\ -block_compress^post101+block_compress^0 == 0 /\ -code31^post101+code31^0 == 0 /\ -ent8^post101+ent8^0 == 0 /\ -fcode5^post101+fcode5^0 == 0 /\ n44^0-n44^post101 == 0 /\ -disp9^post101+disp9^0 == 0 /\ tmp___014^0-tmp___014^post101 == 0 /\ -ret_getbyte18^post101+ret_getbyte18^0 == 0 /\ -in_count^post101+in_count^0 == 0 /\ -i6^post101+i6^0 == 0 /\ tmp___115^0-tmp___115^post101 == 0 /\ -i21^post101+i21^0 == 0 /\ bytes_out^0-bytes_out^post101 == 0 /\ -maxbits^post101+maxbits^0 == 0 /\ rat26^0-rat26^post101 == 0 /\ -r_off32^post101+r_off32^0 == 0 /\ __const_257^0-__const_257^post101 == 0 /\ -apsim_incnt^post101+apsim_incnt^0 == 0 /\ exit_stat^0-exit_stat^post101 == 0 /\ -m122^post101+m122^0 == 0 /\ __const_16^0-__const_16^post101 == 0 /\ -tabort4^post101+tabort4^0 == 0 /\ -tmp___024^post101+tmp___024^0 == 0 /\ -hsize___019^post101+hsize___019^0 == 0 /\ c37^0-c37^post101 == 0 /\ __const_50^0-__const_50^post101 == 0 /\ i29^0-i29^post101 == 0 /\ -__const_10000^post101+__const_10000^0 == 0 /\ __const_256^0-__const_256^post101 == 0 /\ seed2^0-seed2^post101 == 0 /\ -hsize^post101+hsize^0 == 0 /\ out_count^0-out_count^post101 == 0 /\ apsim_bound11113^0-apsim_bound11113^post101 == 0 /\ count^0-count^post101 == 0 /\ ret_getbyte25^0-ret_getbyte25^post101 == 0 /\ -__const_429496^post101+__const_429496^0 == 0 /\ -i3^post101+i3^0 == 0 /\ -n_bits^post101+n_bits^0 == 0 /\ -__const_9^post101+__const_9^0 == 0 /\ -__const_65536^post101+__const_65536^0 == 0 /\ i45^0-i45^post101 == 0 /\ ratio^0-ratio^post101 == 0 /\ bits33^0-bits33^post101 == 0 /\ checkpoint^0-checkpoint^post101 == 0 /\ hsize_reg10^0-hsize_reg10^post101 == 0 /\ tmp12^0-tmp12^post101 == 0 /\ offset^0-offset^post101 == 0 /\ -maxcode^post101+maxcode^0 == 0 /\ -i41^post101+i41^0 == 0 /\ maxmaxcode^0-maxmaxcode^post101 == 0 /\ -__const_2147483647^post101+__const_2147483647^0 == 0 /\ -tmp___017^post101+tmp___017^0 == 0 /\ hsize___027^0-hsize___027^post101 == 0 /\ hshift11^0-hshift11^post101 == 0 /\ -n40^post101+n40^0 == 0 /\ -clear_flg^post101+clear_flg^0 == 0 /\ -c7^post101+c7^0 == 0 /\ -__const_8388607^post101+__const_8388607^0 == 0 /\ -__const_8^post101+__const_8^0 == 0 /\ -incnt^post101+incnt^0 == 0), cost: 1
 101: l65 -> l1 : __const_10000^0'=__const_10000^post102, __const_16^0'=__const_16^post102, __const_2147483647^0'=__const_2147483647^post102, __const_256^0'=__const_256^post102, __const_257^0'=__const_257^post102, __const_429496^0'=__const_429496^post102, __const_50^0'=__const_50^post102, __const_53^0'=__const_53^post102, __const_65536^0'=__const_65536^post102, __const_8388607^0'=__const_8388607^post102, __const_8^0'=__const_8^post102, __const_9^0'=__const_9^post102, apsim_bound11113^0'=apsim_bound11113^post102, apsim_incnt^0'=apsim_incnt^post102, bits33^0'=bits33^post102, block_compress^0'=block_compress^post102, bytes_out^0'=bytes_out^post102, c37^0'=c37^post102, c7^0'=c7^post102, checkpoint^0'=checkpoint^post102, clear_flg^0'=clear_flg^post102, code31^0'=code31^post102, count^0'=count^post102, disp9^0'=disp9^post102, ent8^0'=ent8^post102, exit_stat^0'=exit_stat^post102, fcode5^0'=fcode5^post102, free_ent^0'=free_ent^post102, hshift11^0'=hshift11^post102, hsize^0'=hsize^post102, hsize___019^0'=hsize___019^post102, hsize___027^0'=hsize___027^post102, hsize_reg10^0'=hsize_reg10^post102, i21^0'=i21^post102, i29^0'=i29^post102, i3^0'=i3^post102, i41^0'=i41^post102, i45^0'=i45^post102, i6^0'=i6^post102, in_count^0'=in_count^post102, incnt^0'=incnt^post102, m122^0'=m122^post102, m130^0'=m130^post102, maxbits^0'=maxbits^post102, maxcode^0'=maxcode^post102, maxmaxcode^0'=maxmaxcode^post102, n40^0'=n40^post102, n44^0'=n44^post102, n_bits^0'=n_bits^post102, offset^0'=offset^post102, out_count^0'=out_count^post102, r_off32^0'=r_off32^post102, rat26^0'=rat26^post102, ratio^0'=ratio^post102, ret_getbyte18^0'=ret_getbyte18^post102, ret_getbyte25^0'=ret_getbyte25^post102, seed2^0'=seed2^post102, tabort4^0'=tabort4^post102, tmp12^0'=tmp12^post102, tmp___014^0'=tmp___014^post102, tmp___017^0'=tmp___017^post102, tmp___024^0'=tmp___024^post102, tmp___115^0'=tmp___115^post102, (0 == 0 /\ __const_256^0-__const_256^post102 == 0 /\ -__const_2147483647^post102+__const_2147483647^0 == 0 /\ -clear_flg^post102+clear_flg^0 == 0 /\ offset^0-offset^post102 == 0 /\ -incnt^post102+incnt^0 == 0 /\ -n_bits^post102+n_bits^0 == 0 /\ -m122^post102+m122^0 == 0 /\ -apsim_bound11113^post102+apsim_bound11113^0 == 0 /\ -__const_9^post102+__const_9^0 == 0 /\ -__const_10000^post102+__const_10000^0 == 0 /\ __const_16^0-__const_16^post102 == 0 /\ bytes_out^0-bytes_out^post102 == 0 /\ -hsize___019^post102+hsize___019^0 == 0 /\ apsim_incnt^0-apsim_incnt^post102 == 0 /\ -maxbits^post102+maxbits^0 == 0 /\ maxcode^0-maxcode^post102 == 0 /\ -i3^post102+i3^0 == 0 /\ -n40^post102+n40^0 == 0 /\ -i41^post102+i41^0 == 0 /\ hshift11^0-hshift11^post102 == 0 /\ -code31^post102+code31^0 == 0 /\ -ret_getbyte18^post102+ret_getbyte18^0 == 0 /\ hsize^0-hsize^post102 == 0 /\ -bits33^post102+bits33^0 == 0 /\ __const_50^0-__const_50^post102 == 0 /\ -i29^post102+i29^0 == 0 /\ -in_count^post102+in_count^0 == 0 /\ -__const_8388607^post102+__const_8388607^0 == 0 /\ c37^0-c37^post102 == 0 /\ __const_53^0-__const_53^post102 == 0 /\ __const_257^0-__const_257^post102 == 0 /\ tmp___115^0-tmp___115^post102 == 0 /\ rat26^0-rat26^post102 == 0 /\ ret_getbyte25^0-ret_getbyte25^post102 == 0 /\ m130^0-m130^post102 == 0 /\ n44^0-n44^post102 == 0 /\ -__const_429496^post102+__const_429496^0 == 0 /\ -r_off32^post102+r_off32^0 == 0 /\ -tabort4^post102+tabort4^0 == 0 /\ -disp9^post102+disp9^0 == 0 /\ -free_ent^post102+free_ent^0 == 0 /\ hsize___027^0-hsize___027^post102 == 0 /\ -c7^post102+c7^0 == 0 /\ __const_8^0-__const_8^post102 == 0 /\ -seed2^post102+seed2^0 == 0 /\ -fcode5^post102+fcode5^0 == 0 /\ i45^0-i45^post102 == 0 /\ -i21^post102+i21^0 == 0 /\ -block_compress^post102+block_compress^0 == 0 /\ exit_stat^0-exit_stat^post102 == 0 /\ -tmp___017^post102+tmp___017^0 == 0 /\ tmp___014^0-tmp___014^post102 == 0 /\ -ratio^post102+ratio^0 == 0 /\ -tmp___024^post102+tmp___024^0 == 0 /\ maxmaxcode^0-maxmaxcode^post102 == 0 /\ -i6^post102+i6^0 == 0 /\ hsize_reg10^0-hsize_reg10^post102 == 0 /\ -__const_65536^post102+__const_65536^0 == 0 /\ out_count^0-out_count^post102 == 0 /\ tmp12^0-tmp12^post102 == 0 /\ count^0-count^post102 == 0 /\ checkpoint^0-checkpoint^post102 == 0), cost: 1
 102: l65 -> l64 : __const_10000^0'=__const_10000^post103, __const_16^0'=__const_16^post103, __const_2147483647^0'=__const_2147483647^post103, __const_256^0'=__const_256^post103, __const_257^0'=__const_257^post103, __const_429496^0'=__const_429496^post103, __const_50^0'=__const_50^post103, __const_53^0'=__const_53^post103, __const_65536^0'=__const_65536^post103, __const_8388607^0'=__const_8388607^post103, __const_8^0'=__const_8^post103, __const_9^0'=__const_9^post103, apsim_bound11113^0'=apsim_bound11113^post103, apsim_incnt^0'=apsim_incnt^post103, bits33^0'=bits33^post103, block_compress^0'=block_compress^post103, bytes_out^0'=bytes_out^post103, c37^0'=c37^post103, c7^0'=c7^post103, checkpoint^0'=checkpoint^post103, clear_flg^0'=clear_flg^post103, code31^0'=code31^post103, count^0'=count^post103, disp9^0'=disp9^post103, ent8^0'=ent8^post103, exit_stat^0'=exit_stat^post103, fcode5^0'=fcode5^post103, free_ent^0'=free_ent^post103, hshift11^0'=hshift11^post103, hsize^0'=hsize^post103, hsize___019^0'=hsize___019^post103, hsize___027^0'=hsize___027^post103, hsize_reg10^0'=hsize_reg10^post103, i21^0'=i21^post103, i29^0'=i29^post103, i3^0'=i3^post103, i41^0'=i41^post103, i45^0'=i45^post103, i6^0'=i6^post103, in_count^0'=in_count^post103, incnt^0'=incnt^post103, m122^0'=m122^post103, m130^0'=m130^post103, maxbits^0'=maxbits^post103, maxcode^0'=maxcode^post103, maxmaxcode^0'=maxmaxcode^post103, n40^0'=n40^post103, n44^0'=n44^post103, n_bits^0'=n_bits^post103, offset^0'=offset^post103, out_count^0'=out_count^post103, r_off32^0'=r_off32^post103, rat26^0'=rat26^post103, ratio^0'=ratio^post103, ret_getbyte18^0'=ret_getbyte18^post103, ret_getbyte25^0'=ret_getbyte25^post103, seed2^0'=seed2^post103, tabort4^0'=tabort4^post103, tmp12^0'=tmp12^post103, tmp___014^0'=tmp___014^post103, tmp___017^0'=tmp___017^post103, tmp___024^0'=tmp___024^post103, tmp___115^0'=tmp___115^post103, (bytes_out^0-bytes_out^post103 == 0 /\ out_count^0-out_count^post103 == 0 /\ maxmaxcode^0-maxmaxcode^post103 == 0 /\ -tmp___024^post103+tmp___024^0 == 0 /\ -tmp___115^post103+tmp___115^0 == 0 /\ __const_256^0-__const_256^post103 == 0 /\ count^0-count^post103 == 0 /\ -tmp___014^post103+tmp___014^0 == 0 /\ offset^0-offset^post103 == 0 /\ -seed2^post103+seed2^0 == 0 /\ -__const_257^post103+__const_257^0 == 0 /\ -bits33^post103+bits33^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post103 == 0 /\ hshift11^0-hshift11^post103 == 0 /\ -__const_65536^post103+__const_65536^0 == 0 /\ -block_compress^post103+block_compress^0 == 0 /\ apsim_incnt^0-apsim_incnt^post103 == 0 /\ tabort4^0-tabort4^post103 == 0 /\ -ent8^post103+ent8^0 == 0 /\ -i41^post103+i41^0 == 0 /\ -hsize^post103+hsize^0 == 0 /\ -c37^post103+c37^0 == 0 /\ checkpoint^0-checkpoint^post103 == 0 /\ n44^0-n44^post103 == 0 /\ i45^0-i45^post103 == 0 /\ i3^0-i3^post103 == 0 /\ maxcode^0-maxcode^post103 == 0 /\ -r_off32^post103+r_off32^0 == 0 /\ -apsim_bound11113^post103+apsim_bound11113^0 == 0 /\ rat26^0-rat26^post103 == 0 /\ -in_count^post103+in_count^0 == 0 /\ -__const_8388607^post103+__const_8388607^0 == 0 /\ -maxbits^post103+maxbits^0 == 0 /\ -i6^post103+i6^0 == 0 /\ tmp___017^0-tmp___017^post103 == 0 /\ exit_stat^0-exit_stat^post103 == 0 /\ __const_50^0-__const_50^post103 == 0 /\ fcode5^0-fcode5^post103 == 0 /\ -ratio^post103+ratio^0 == 0 /\ -n40^post103+n40^0 == 0 /\ __const_8^0-__const_8^post103 == 0 /\ m130^0-m130^post103 == 0 /\ -incnt^post103+incnt^0 == 0 /\ tmp12^0-tmp12^post103 == 0 /\ hsize___027^0-hsize___027^post103 == 0 /\ __const_53^0-__const_53^post103 == 0 /\ -clear_flg^post103+clear_flg^0 == 0 /\ -__const_2147483647^post103+__const_2147483647^0 == 0 /\ -hsize___019^post103+hsize___019^0 == 0 /\ __const_16^0-__const_16^post103 == 0 /\ -hsize_reg10^post103+hsize_reg10^0 == 0 /\ -__const_429496^post103+__const_429496^0 == 0 /\ -c7^post103+c7^0 == 0 /\ -n_bits^post103+n_bits^0 == 0 /\ __const_10000^0-__const_10000^post103 == 0 /\ -disp9^post103+disp9^0 == 0 /\ -ret_getbyte18^post103+ret_getbyte18^0 == 0 /\ -i29^post103+i29^0 == 0 /\ -code31^post103+code31^0 == 0 /\ -i21^post103+i21^0 == 0 /\ -free_ent^post103+free_ent^0 == 0 /\ -__const_9^post103+__const_9^0 == 0 /\ m122^0-m122^post103 == 0), cost: 1
 105: l66 -> l6 : __const_10000^0'=__const_10000^post106, __const_16^0'=__const_16^post106, __const_2147483647^0'=__const_2147483647^post106, __const_256^0'=__const_256^post106, __const_257^0'=__const_257^post106, __const_429496^0'=__const_429496^post106, __const_50^0'=__const_50^post106, __const_53^0'=__const_53^post106, __const_65536^0'=__const_65536^post106, __const_8388607^0'=__const_8388607^post106, __const_8^0'=__const_8^post106, __const_9^0'=__const_9^post106, apsim_bound11113^0'=apsim_bound11113^post106, apsim_incnt^0'=apsim_incnt^post106, bits33^0'=bits33^post106, block_compress^0'=block_compress^post106, bytes_out^0'=bytes_out^post106, c37^0'=c37^post106, c7^0'=c7^post106, checkpoint^0'=checkpoint^post106, clear_flg^0'=clear_flg^post106, code31^0'=code31^post106, count^0'=count^post106, disp9^0'=disp9^post106, ent8^0'=ent8^post106, exit_stat^0'=exit_stat^post106, fcode5^0'=fcode5^post106, free_ent^0'=free_ent^post106, hshift11^0'=hshift11^post106, hsize^0'=hsize^post106, hsize___019^0'=hsize___019^post106, hsize___027^0'=hsize___027^post106, hsize_reg10^0'=hsize_reg10^post106, i21^0'=i21^post106, i29^0'=i29^post106, i3^0'=i3^post106, i41^0'=i41^post106, i45^0'=i45^post106, i6^0'=i6^post106, in_count^0'=in_count^post106, incnt^0'=incnt^post106, m122^0'=m122^post106, m130^0'=m130^post106, maxbits^0'=maxbits^post106, maxcode^0'=maxcode^post106, maxmaxcode^0'=maxmaxcode^post106, n40^0'=n40^post106, n44^0'=n44^post106, n_bits^0'=n_bits^post106, offset^0'=offset^post106, out_count^0'=out_count^post106, r_off32^0'=r_off32^post106, rat26^0'=rat26^post106, ratio^0'=ratio^post106, ret_getbyte18^0'=ret_getbyte18^post106, ret_getbyte25^0'=ret_getbyte25^post106, seed2^0'=seed2^post106, tabort4^0'=tabort4^post106, tmp12^0'=tmp12^post106, tmp___014^0'=tmp___014^post106, tmp___017^0'=tmp___017^post106, tmp___024^0'=tmp___024^post106, tmp___115^0'=tmp___115^post106, (-tmp___115^post106+tmp___115^0 == 0 /\ code31^0-code31^post106 == 0 /\ out_count^0-out_count^post106 == 0 /\ __const_9^0-__const_9^post106 == 0 /\ offset^0-offset^post106 == 0 /\ -count^post106+count^0 == 0 /\ maxmaxcode^0-maxmaxcode^post106 == 0 /\ bits33^0-bits33^post106 == 0 /\ -ratio^post106+ratio^0 == 0 /\ -ret_getbyte18^post106+ret_getbyte18^0 == 0 /\ c37^0-c37^post106 == 0 /\ __const_16^0-__const_16^post106 == 0 /\ __const_53^0-__const_53^post106 == 0 /\ hsize___019^0-hsize___019^post106 == 0 /\ -i6^post106+i6^0 == 0 /\ -__const_256^post106+__const_256^0 == 0 /\ -incnt^post106+incnt^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post106 == 0 /\ c7^0-c7^post106 == 0 /\ __const_257^0-__const_257^post106 == 0 /\ m130^0-m130^post106 == 0 /\ -r_off32^post106+r_off32^0 == 0 /\ -checkpoint^post106+checkpoint^0 == 0 /\ -apsim_bound11113^post106+apsim_bound11113^0 == 0 /\ -seed2^post106+seed2^0 == 0 /\ __const_65536^0-__const_65536^post106 == 0 /\ -fcode5^post106+fcode5^0 == 0 /\ apsim_incnt^0-apsim_incnt^post106 == 0 /\ hshift11^0-hshift11^post106 == 0 /\ -hsize^post106+hsize^0 == 0 /\ free_ent^0-free_ent^post106 == 0 /\ -hsize___027^post106+hsize___027^0 == 0 /\ n44^0-n44^post106 == 0 /\ i29^0-i29^post106 == 0 /\ -n40^post106+n40^0 == 0 /\ -maxcode^post106+maxcode^0 == 0 /\ -i3^post106+i3^0 == 0 /\ -i41^post106+i41^0 == 0 /\ tmp12^0-tmp12^post106 == 0 /\ -in_count^post106+in_count^0 == 0 /\ -__const_8388607^post106+__const_8388607^0 == 0 /\ exit_stat^0-exit_stat^post106 == 0 /\ 1-i6^0 <= 0 /\ __const_429496^0-__const_429496^post106 == 0 /\ __const_8^0-__const_8^post106 == 0 /\ tabort4^0-tabort4^post106 == 0 /\ tmp___017^0-tmp___017^post106 == 0 /\ -disp9^post106+disp9^0 == 0 /\ -tmp___014^post106+tmp___014^0 == 0 /\ -__const_10000^post106+__const_10000^0 == 0 /\ -__const_2147483647^post106+__const_2147483647^0 == 0 /\ i45^0-i45^post106 == 0 /\ -n_bits^post106+n_bits^0 == 0 /\ -__const_50^post106+__const_50^0 == 0 /\ -m122^post106+m122^0 == 0 /\ rat26^0-rat26^post106 == 0 /\ -clear_flg^post106+clear_flg^0 == 0 /\ -hsize_reg10^post106+hsize_reg10^0 == 0 /\ -i21^post106+i21^0 == 0 /\ block_compress^0-block_compress^post106 == 0 /\ ent8^0-ent8^post106 == 0 /\ -maxbits^post106+maxbits^0 == 0 /\ -bytes_out^post106+bytes_out^0 == 0 /\ -tmp___024^post106+tmp___024^0 == 0), cost: 1
 106: l66 -> l6 : __const_10000^0'=__const_10000^post107, __const_16^0'=__const_16^post107, __const_2147483647^0'=__const_2147483647^post107, __const_256^0'=__const_256^post107, __const_257^0'=__const_257^post107, __const_429496^0'=__const_429496^post107, __const_50^0'=__const_50^post107, __const_53^0'=__const_53^post107, __const_65536^0'=__const_65536^post107, __const_8388607^0'=__const_8388607^post107, __const_8^0'=__const_8^post107, __const_9^0'=__const_9^post107, apsim_bound11113^0'=apsim_bound11113^post107, apsim_incnt^0'=apsim_incnt^post107, bits33^0'=bits33^post107, block_compress^0'=block_compress^post107, bytes_out^0'=bytes_out^post107, c37^0'=c37^post107, c7^0'=c7^post107, checkpoint^0'=checkpoint^post107, clear_flg^0'=clear_flg^post107, code31^0'=code31^post107, count^0'=count^post107, disp9^0'=disp9^post107, ent8^0'=ent8^post107, exit_stat^0'=exit_stat^post107, fcode5^0'=fcode5^post107, free_ent^0'=free_ent^post107, hshift11^0'=hshift11^post107, hsize^0'=hsize^post107, hsize___019^0'=hsize___019^post107, hsize___027^0'=hsize___027^post107, hsize_reg10^0'=hsize_reg10^post107, i21^0'=i21^post107, i29^0'=i29^post107, i3^0'=i3^post107, i41^0'=i41^post107, i45^0'=i45^post107, i6^0'=i6^post107, in_count^0'=in_count^post107, incnt^0'=incnt^post107, m122^0'=m122^post107, m130^0'=m130^post107, maxbits^0'=maxbits^post107, maxcode^0'=maxcode^post107, maxmaxcode^0'=maxmaxcode^post107, n40^0'=n40^post107, n44^0'=n44^post107, n_bits^0'=n_bits^post107, offset^0'=offset^post107, out_count^0'=out_count^post107, r_off32^0'=r_off32^post107, rat26^0'=rat26^post107, ratio^0'=ratio^post107, ret_getbyte18^0'=ret_getbyte18^post107, ret_getbyte25^0'=ret_getbyte25^post107, seed2^0'=seed2^post107, tabort4^0'=tabort4^post107, tmp12^0'=tmp12^post107, tmp___014^0'=tmp___014^post107, tmp___017^0'=tmp___017^post107, tmp___024^0'=tmp___024^post107, tmp___115^0'=tmp___115^post107, (apsim_bound11113^0-apsim_bound11113^post107 == 0 /\ c37^0-c37^post107 == 0 /\ -checkpoint^post107+checkpoint^0 == 0 /\ n40^0-n40^post107 == 0 /\ -bytes_out^post107+bytes_out^0 == 0 /\ -__const_50^post107+__const_50^0 == 0 /\ __const_257^0-__const_257^post107 == 0 /\ __const_9^0-__const_9^post107 == 0 /\ c7^0-c7^post107 == 0 /\ -i3^post107+i3^0 == 0 /\ -i41^post107+i41^0 == 0 /\ i29^0-i29^post107 == 0 /\ -exit_stat^post107+exit_stat^0 == 0 /\ -i21^post107+i21^0 == 0 /\ -fcode5^post107+fcode5^0 == 0 /\ out_count^0-out_count^post107 == 0 /\ offset^0-offset^post107 == 0 /\ bits33^0-bits33^post107 == 0 /\ hsize___027^0-hsize___027^post107 == 0 /\ __const_53^0-__const_53^post107 == 0 /\ tmp12^0-tmp12^post107 == 0 /\ -ret_getbyte18^post107+ret_getbyte18^0 == 0 /\ -tmp___024^post107+tmp___024^0 == 0 /\ hshift11^0-hshift11^post107 == 0 /\ 1+i6^0 <= 0 /\ apsim_incnt^0-apsim_incnt^post107 == 0 /\ -tmp___014^post107+tmp___014^0 == 0 /\ -__const_10000^post107+__const_10000^0 == 0 /\ -in_count^post107+in_count^0 == 0 /\ -clear_flg^post107+clear_flg^0 == 0 /\ hsize___019^0-hsize___019^post107 == 0 /\ maxmaxcode^0-maxmaxcode^post107 == 0 /\ -tabort4^post107+tabort4^0 == 0 /\ -m122^post107+m122^0 == 0 /\ -count^post107+count^0 == 0 /\ m130^0-m130^post107 == 0 /\ -hsize_reg10^post107+hsize_reg10^0 == 0 /\ __const_429496^0-__const_429496^post107 == 0 /\ -disp9^post107+disp9^0 == 0 /\ __const_65536^0-__const_65536^post107 == 0 /\ -incnt^post107+incnt^0 == 0 /\ -n_bits^post107+n_bits^0 == 0 /\ i45^0-i45^post107 == 0 /\ -hsize^post107+hsize^0 == 0 /\ free_ent^0-free_ent^post107 == 0 /\ tmp___115^0-tmp___115^post107 == 0 /\ maxbits^0-maxbits^post107 == 0 /\ -r_off32^post107+r_off32^0 == 0 /\ n44^0-n44^post107 == 0 /\ __const_8^0-__const_8^post107 == 0 /\ -__const_8388607^post107+__const_8388607^0 == 0 /\ __const_2147483647^0-__const_2147483647^post107 == 0 /\ -ratio^post107+ratio^0 == 0 /\ -maxcode^post107+maxcode^0 == 0 /\ block_compress^0-block_compress^post107 == 0 /\ code31^0-code31^post107 == 0 /\ ent8^0-ent8^post107 == 0 /\ __const_16^0-__const_16^post107 == 0 /\ ret_getbyte25^0-ret_getbyte25^post107 == 0 /\ rat26^0-rat26^post107 == 0 /\ tmp___017^0-tmp___017^post107 == 0 /\ -__const_256^post107+__const_256^0 == 0 /\ -seed2^post107+seed2^0 == 0 /\ -i6^post107+i6^0 == 0), cost: 1
 107: l66 -> l6 : __const_10000^0'=__const_10000^post108, __const_16^0'=__const_16^post108, __const_2147483647^0'=__const_2147483647^post108, __const_256^0'=__const_256^post108, __const_257^0'=__const_257^post108, __const_429496^0'=__const_429496^post108, __const_50^0'=__const_50^post108, __const_53^0'=__const_53^post108, __const_65536^0'=__const_65536^post108, __const_8388607^0'=__const_8388607^post108, __const_8^0'=__const_8^post108, __const_9^0'=__const_9^post108, apsim_bound11113^0'=apsim_bound11113^post108, apsim_incnt^0'=apsim_incnt^post108, bits33^0'=bits33^post108, block_compress^0'=block_compress^post108, bytes_out^0'=bytes_out^post108, c37^0'=c37^post108, c7^0'=c7^post108, checkpoint^0'=checkpoint^post108, clear_flg^0'=clear_flg^post108, code31^0'=code31^post108, count^0'=count^post108, disp9^0'=disp9^post108, ent8^0'=ent8^post108, exit_stat^0'=exit_stat^post108, fcode5^0'=fcode5^post108, free_ent^0'=free_ent^post108, hshift11^0'=hshift11^post108, hsize^0'=hsize^post108, hsize___019^0'=hsize___019^post108, hsize___027^0'=hsize___027^post108, hsize_reg10^0'=hsize_reg10^post108, i21^0'=i21^post108, i29^0'=i29^post108, i3^0'=i3^post108, i41^0'=i41^post108, i45^0'=i45^post108, i6^0'=i6^post108, in_count^0'=in_count^post108, incnt^0'=incnt^post108, m122^0'=m122^post108, m130^0'=m130^post108, maxbits^0'=maxbits^post108, maxcode^0'=maxcode^post108, maxmaxcode^0'=maxmaxcode^post108, n40^0'=n40^post108, n44^0'=n44^post108, n_bits^0'=n_bits^post108, offset^0'=offset^post108, out_count^0'=out_count^post108, r_off32^0'=r_off32^post108, rat26^0'=rat26^post108, ratio^0'=ratio^post108, ret_getbyte18^0'=ret_getbyte18^post108, ret_getbyte25^0'=ret_getbyte25^post108, seed2^0'=seed2^post108, tabort4^0'=tabort4^post108, tmp12^0'=tmp12^post108, tmp___014^0'=tmp___014^post108, tmp___017^0'=tmp___017^post108, tmp___024^0'=tmp___024^post108, tmp___115^0'=tmp___115^post108, (-seed2^post108+seed2^0 == 0 /\ -m122^post108+m122^0 == 0 /\ maxcode^0-maxcode^post108 == 0 /\ i29^0-i29^post108 == 0 /\ __const_8388607^0-__const_8388607^post108 == 0 /\ hsize___027^0-hsize___027^post108 == 0 /\ offset^0-offset^post108 == 0 /\ -__const_256^post108+__const_256^0 == 0 /\ -n_bits^post108+n_bits^0 == 0 /\ __const_257^0-__const_257^post108 == 0 /\ -hsize_reg10^post108+hsize_reg10^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post108 == 0 /\ apsim_bound11113^0-apsim_bound11113^post108 == 0 /\ -hsize^post108+hsize^0 == 0 /\ -__const_10000^post108+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post108 == 0 /\ -hsize___019^post108+hsize___019^0 == 0 /\ -r_off32^post108+r_off32^0 == 0 /\ -ratio^post108+ratio^0 == 0 /\ -incnt^post108+incnt^0 == 0 /\ -n40^post108+n40^0 == 0 /\ m130^0-m130^post108 == 0 /\ __const_9^0-__const_9^post108 == 0 /\ -tmp___115^post108+tmp___115^0 == 0 /\ i6^0 <= 0 /\ ent8^0-ent8^post108 == 0 /\ i45^0-i45^post108 == 0 /\ -exit_stat^post108+exit_stat^0 == 0 /\ n44^0-n44^post108 == 0 /\ __const_65536^0-__const_65536^post108 == 0 /\ -__const_50^post108+__const_50^0 == 0 /\ -i41^post108+i41^0 == 0 /\ -1+disp9^post108 == 0 /\ apsim_incnt^0-apsim_incnt^post108 == 0 /\ __const_16^0-__const_16^post108 == 0 /\ -i6^post108+i6^0 == 0 /\ -in_count^post108+in_count^0 == 0 /\ tmp12^0-tmp12^post108 == 0 /\ bits33^0-bits33^post108 == 0 /\ -i21^post108+i21^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post108 == 0 /\ __const_53^0-__const_53^post108 == 0 /\ tmp___017^0-tmp___017^post108 == 0 /\ -i6^0 <= 0 /\ -checkpoint^post108+checkpoint^0 == 0 /\ -block_compress^post108+block_compress^0 == 0 /\ -__const_8^post108+__const_8^0 == 0 /\ -clear_flg^post108+clear_flg^0 == 0 /\ -bytes_out^post108+bytes_out^0 == 0 /\ tabort4^0-tabort4^post108 == 0 /\ count^0-count^post108 == 0 /\ rat26^0-rat26^post108 == 0 /\ free_ent^0-free_ent^post108 == 0 /\ hshift11^0-hshift11^post108 == 0 /\ -maxbits^post108+maxbits^0 == 0 /\ -tmp___024^post108+tmp___024^0 == 0 /\ c37^0-c37^post108 == 0 /\ out_count^0-out_count^post108 == 0 /\ -code31^post108+code31^0 == 0 /\ -fcode5^post108+fcode5^0 == 0 /\ -tmp___014^post108+tmp___014^0 == 0 /\ __const_429496^0-__const_429496^post108 == 0 /\ c7^0-c7^post108 == 0 /\ -i3^post108+i3^0 == 0 /\ __const_2147483647^0-__const_2147483647^post108 == 0), cost: 1
 108: l67 -> l62 : __const_10000^0'=__const_10000^post109, __const_16^0'=__const_16^post109, __const_2147483647^0'=__const_2147483647^post109, __const_256^0'=__const_256^post109, __const_257^0'=__const_257^post109, __const_429496^0'=__const_429496^post109, __const_50^0'=__const_50^post109, __const_53^0'=__const_53^post109, __const_65536^0'=__const_65536^post109, __const_8388607^0'=__const_8388607^post109, __const_8^0'=__const_8^post109, __const_9^0'=__const_9^post109, apsim_bound11113^0'=apsim_bound11113^post109, apsim_incnt^0'=apsim_incnt^post109, bits33^0'=bits33^post109, block_compress^0'=block_compress^post109, bytes_out^0'=bytes_out^post109, c37^0'=c37^post109, c7^0'=c7^post109, checkpoint^0'=checkpoint^post109, clear_flg^0'=clear_flg^post109, code31^0'=code31^post109, count^0'=count^post109, disp9^0'=disp9^post109, ent8^0'=ent8^post109, exit_stat^0'=exit_stat^post109, fcode5^0'=fcode5^post109, free_ent^0'=free_ent^post109, hshift11^0'=hshift11^post109, hsize^0'=hsize^post109, hsize___019^0'=hsize___019^post109, hsize___027^0'=hsize___027^post109, hsize_reg10^0'=hsize_reg10^post109, i21^0'=i21^post109, i29^0'=i29^post109, i3^0'=i3^post109, i41^0'=i41^post109, i45^0'=i45^post109, i6^0'=i6^post109, in_count^0'=in_count^post109, incnt^0'=incnt^post109, m122^0'=m122^post109, m130^0'=m130^post109, maxbits^0'=maxbits^post109, maxcode^0'=maxcode^post109, maxmaxcode^0'=maxmaxcode^post109, n40^0'=n40^post109, n44^0'=n44^post109, n_bits^0'=n_bits^post109, offset^0'=offset^post109, out_count^0'=out_count^post109, r_off32^0'=r_off32^post109, rat26^0'=rat26^post109, ratio^0'=ratio^post109, ret_getbyte18^0'=ret_getbyte18^post109, ret_getbyte25^0'=ret_getbyte25^post109, seed2^0'=seed2^post109, tabort4^0'=tabort4^post109, tmp12^0'=tmp12^post109, tmp___014^0'=tmp___014^post109, tmp___017^0'=tmp___017^post109, tmp___024^0'=tmp___024^post109, tmp___115^0'=tmp___115^post109, (maxmaxcode^0-maxmaxcode^post109 == 0 /\ -i21^post109+i21^0 == 0 /\ __const_9^0-__const_9^post109 == 0 /\ out_count^0-out_count^post109 == 0 /\ -i6^post109+i6^0 == 0 /\ c37^0-c37^post109 == 0 /\ -tmp___014^post109+tmp___014^0 == 0 /\ -ratio^post109+ratio^0 == 0 /\ -in_count^post109+in_count^0 == 0 /\ -clear_flg^post109+clear_flg^0 == 0 /\ ent8^0-ent8^post109 == 0 /\ -bytes_out^post109+bytes_out^0 == 0 /\ bits33^0-bits33^post109 == 0 /\ -__const_8388607^post109+__const_8388607^0 == 0 /\ n40^0-n40^post109 == 0 /\ -tmp___024^post109+tmp___024^0 == 0 /\ -tmp___115^post109+tmp___115^0 == 0 /\ code31^0-code31^post109 == 0 /\ -checkpoint^post109+checkpoint^0 == 0 /\ c7^0-c7^post109 == 0 /\ offset^0-offset^post109 == 0 /\ __const_65536^0-__const_65536^post109 == 0 /\ n44^0-n44^post109 == 0 /\ apsim_incnt^0-apsim_incnt^post109 == 0 /\ hshift11^0-hshift11^post109 == 0 /\ hsize___027^0-hsize___027^post109 == 0 /\ i29^0-i29^post109 == 0 /\ -m122^post109+m122^0 == 0 /\ -disp9^post109+disp9^0 == 0 /\ -ret_getbyte18^post109+ret_getbyte18^0 == 0 /\ -fcode5^post109+fcode5^0 == 0 /\ __const_257^0-__const_257^post109 == 0 /\ __const_53^0-__const_53^post109 == 0 /\ -r_off32^post109+r_off32^0 == 0 /\ -apsim_bound11113^post109+apsim_bound11113^0 == 0 /\ hsize___019^0-hsize___019^post109 == 0 /\ -exit_stat^post109+exit_stat^0 == 0 /\ free_ent^0-free_ent^post109 == 0 /\ -i3^post109+i3^0 == 0 /\ -__const_2147483647^post109+__const_2147483647^0 == 0 /\ tmp___017^0-tmp___017^post109 == 0 /\ -__const_256^post109+__const_256^0 == 0 /\ -maxbits^post109+maxbits^0 == 0 /\ -maxcode^post109+maxcode^0 == 0 /\ m130^0-m130^post109 == 0 /\ -__const_10000^post109+__const_10000^0 == 0 /\ -hsize^post109+hsize^0 == 0 /\ -hsize_reg10^post109+hsize_reg10^0 == 0 /\ __const_8^0-__const_8^post109 == 0 /\ tmp12^0-tmp12^post109 == 0 /\ i45^0-i45^post109 == 0 /\ -tabort4^post109+tabort4^0 == 0 /\ -seed2^post109+seed2^0 == 0 /\ __const_429496^0-__const_429496^post109 == 0 /\ block_compress^0-block_compress^post109 == 0 /\ rat26^0-rat26^post109 == 0 /\ -incnt^post109+incnt^0 == 0 /\ __const_16^0-__const_16^post109 == 0 /\ -count^post109+count^0 == 0 /\ -__const_50^post109+__const_50^0 == 0 /\ -n_bits^post109+n_bits^0 == 0 /\ -i41^post109+i41^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post109 == 0), cost: 1
 109: l67 -> l66 : __const_10000^0'=__const_10000^post110, __const_16^0'=__const_16^post110, __const_2147483647^0'=__const_2147483647^post110, __const_256^0'=__const_256^post110, __const_257^0'=__const_257^post110, __const_429496^0'=__const_429496^post110, __const_50^0'=__const_50^post110, __const_53^0'=__const_53^post110, __const_65536^0'=__const_65536^post110, __const_8388607^0'=__const_8388607^post110, __const_8^0'=__const_8^post110, __const_9^0'=__const_9^post110, apsim_bound11113^0'=apsim_bound11113^post110, apsim_incnt^0'=apsim_incnt^post110, bits33^0'=bits33^post110, block_compress^0'=block_compress^post110, bytes_out^0'=bytes_out^post110, c37^0'=c37^post110, c7^0'=c7^post110, checkpoint^0'=checkpoint^post110, clear_flg^0'=clear_flg^post110, code31^0'=code31^post110, count^0'=count^post110, disp9^0'=disp9^post110, ent8^0'=ent8^post110, exit_stat^0'=exit_stat^post110, fcode5^0'=fcode5^post110, free_ent^0'=free_ent^post110, hshift11^0'=hshift11^post110, hsize^0'=hsize^post110, hsize___019^0'=hsize___019^post110, hsize___027^0'=hsize___027^post110, hsize_reg10^0'=hsize_reg10^post110, i21^0'=i21^post110, i29^0'=i29^post110, i3^0'=i3^post110, i41^0'=i41^post110, i45^0'=i45^post110, i6^0'=i6^post110, in_count^0'=in_count^post110, incnt^0'=incnt^post110, m122^0'=m122^post110, m130^0'=m130^post110, maxbits^0'=maxbits^post110, maxcode^0'=maxcode^post110, maxmaxcode^0'=maxmaxcode^post110, n40^0'=n40^post110, n44^0'=n44^post110, n_bits^0'=n_bits^post110, offset^0'=offset^post110, out_count^0'=out_count^post110, r_off32^0'=r_off32^post110, rat26^0'=rat26^post110, ratio^0'=ratio^post110, ret_getbyte18^0'=ret_getbyte18^post110, ret_getbyte25^0'=ret_getbyte25^post110, seed2^0'=seed2^post110, tabort4^0'=tabort4^post110, tmp12^0'=tmp12^post110, tmp___014^0'=tmp___014^post110, tmp___017^0'=tmp___017^post110, tmp___024^0'=tmp___024^post110, tmp___115^0'=tmp___115^post110, (hsize___019^0-hsize___019^post110 == 0 /\ tmp12^0-tmp12^post110 == 0 /\ n40^0-n40^post110 == 0 /\ -i3^post110+i3^0 == 0 /\ c7^0-c7^post110 == 0 /\ __const_257^0-__const_257^post110 == 0 /\ ent8^0-ent8^post110 == 0 /\ -i41^post110+i41^0 == 0 /\ rat26^0-rat26^post110 == 0 /\ exit_stat^0-exit_stat^post110 == 0 /\ i29^0-i29^post110 == 0 /\ apsim_bound11113^0-apsim_bound11113^post110 == 0 /\ -tmp___014^post110+tmp___014^0 == 0 /\ -in_count^post110+in_count^0 == 0 /\ m130^0-m130^post110 == 0 /\ -__const_50^post110+__const_50^0 == 0 /\ out_count^0-out_count^post110 == 0 /\ -n_bits^post110+n_bits^0 == 0 /\ __const_9^0-__const_9^post110 == 0 /\ -fcode5^post110+fcode5^0 == 0 /\ -clear_flg^post110+clear_flg^0 == 0 /\ -__const_10000^post110+__const_10000^0 == 0 /\ -hsize_reg10^post110+hsize_reg10^0 == 0 /\ __const_65536^0-__const_65536^post110 == 0 /\ offset^0-offset^post110 == 0 /\ -i21^post110+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post110 == 0 /\ -incnt^post110+incnt^0 == 0 /\ bits33^0-bits33^post110 == 0 /\ hsize___027^0-hsize___027^post110 == 0 /\ -bytes_out^post110+bytes_out^0 == 0 /\ -tmp___024^post110+tmp___024^0 == 0 /\ i45^0-i45^post110 == 0 /\ tmp___115^0-tmp___115^post110 == 0 /\ -__const_8388607^post110+__const_8388607^0 == 0 /\ n44^0-n44^post110 == 0 /\ apsim_incnt^0-apsim_incnt^post110 == 0 /\ hshift11^0-hshift11^post110 == 0 /\ __const_8^0-__const_8^post110 == 0 /\ free_ent^0-free_ent^post110 == 0 /\ maxbits^0-maxbits^post110 == 0 /\ -count^post110+count^0 == 0 /\ -ret_getbyte18^post110+ret_getbyte18^0 == 0 /\ __const_53^0-__const_53^post110 == 0 /\ -ratio^post110+ratio^0 == 0 /\ -__const_256^post110+__const_256^0 == 0 /\ -i6^post110+i6^0 == 0 /\ -r_off32^post110+r_off32^0 == 0 /\ code31^0-code31^post110 == 0 /\ -checkpoint^post110+checkpoint^0 == 0 /\ seed2^0-seed2^post110 == 0 /\ __const_2147483647^0-__const_2147483647^post110 == 0 /\ -tabort4^post110+tabort4^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post110 == 0 /\ m122^0-m122^post110 == 0 /\ c37^0-c37^post110 == 0 /\ __const_429496^0-__const_429496^post110 == 0 /\ -hsize^post110+hsize^0 == 0 /\ tmp___017^0-tmp___017^post110 == 0 /\ -maxcode^post110+maxcode^0 == 0 /\ -block_compress^post110+block_compress^0 == 0 /\ disp9^post110+i6^0-hsize_reg10^0 == 0 /\ __const_16^0-__const_16^post110 == 0), cost: 1
 110: l68 -> l67 : __const_10000^0'=__const_10000^post111, __const_16^0'=__const_16^post111, __const_2147483647^0'=__const_2147483647^post111, __const_256^0'=__const_256^post111, __const_257^0'=__const_257^post111, __const_429496^0'=__const_429496^post111, __const_50^0'=__const_50^post111, __const_53^0'=__const_53^post111, __const_65536^0'=__const_65536^post111, __const_8388607^0'=__const_8388607^post111, __const_8^0'=__const_8^post111, __const_9^0'=__const_9^post111, apsim_bound11113^0'=apsim_bound11113^post111, apsim_incnt^0'=apsim_incnt^post111, bits33^0'=bits33^post111, block_compress^0'=block_compress^post111, bytes_out^0'=bytes_out^post111, c37^0'=c37^post111, c7^0'=c7^post111, checkpoint^0'=checkpoint^post111, clear_flg^0'=clear_flg^post111, code31^0'=code31^post111, count^0'=count^post111, disp9^0'=disp9^post111, ent8^0'=ent8^post111, exit_stat^0'=exit_stat^post111, fcode5^0'=fcode5^post111, free_ent^0'=free_ent^post111, hshift11^0'=hshift11^post111, hsize^0'=hsize^post111, hsize___019^0'=hsize___019^post111, hsize___027^0'=hsize___027^post111, hsize_reg10^0'=hsize_reg10^post111, i21^0'=i21^post111, i29^0'=i29^post111, i3^0'=i3^post111, i41^0'=i41^post111, i45^0'=i45^post111, i6^0'=i6^post111, in_count^0'=in_count^post111, incnt^0'=incnt^post111, m122^0'=m122^post111, m130^0'=m130^post111, maxbits^0'=maxbits^post111, maxcode^0'=maxcode^post111, maxmaxcode^0'=maxmaxcode^post111, n40^0'=n40^post111, n44^0'=n44^post111, n_bits^0'=n_bits^post111, offset^0'=offset^post111, out_count^0'=out_count^post111, r_off32^0'=r_off32^post111, rat26^0'=rat26^post111, ratio^0'=ratio^post111, ret_getbyte18^0'=ret_getbyte18^post111, ret_getbyte25^0'=ret_getbyte25^post111, seed2^0'=seed2^post111, tabort4^0'=tabort4^post111, tmp12^0'=tmp12^post111, tmp___014^0'=tmp___014^post111, tmp___017^0'=tmp___017^post111, tmp___024^0'=tmp___024^post111, tmp___115^0'=tmp___115^post111, (free_ent^0-free_ent^post111 == 0 /\ -hsize___019^post111+hsize___019^0 == 0 /\ -hsize_reg10^post111+hsize_reg10^0 == 0 /\ -hsize^post111+hsize^0 == 0 /\ -disp9^post111+disp9^0 == 0 /\ -tabort4^post111+tabort4^0 == 0 /\ -fcode5^post111+fcode5^0 == 0 /\ hsize___027^0-hsize___027^post111 == 0 /\ -n44^post111+n44^0 == 0 /\ -n_bits^post111+n_bits^0 == 0 /\ __const_9^0-__const_9^post111 == 0 /\ rat26^0-rat26^post111 == 0 /\ -r_off32^post111+r_off32^0 == 0 /\ tmp___014^0-tmp___014^post111 == 0 /\ -code31^post111+code31^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post111 == 0 /\ n40^0-n40^post111 == 0 /\ -maxcode^post111+maxcode^0 == 0 /\ -tmp___017^post111+tmp___017^0 == 0 /\ i45^0-i45^post111 == 0 /\ ent8^0-ent8^post111 == 0 /\ -__const_256^post111+__const_256^0 == 0 /\ exit_stat^0-exit_stat^post111 == 0 /\ out_count^0-out_count^post111 == 0 /\ count^0-count^post111 == 0 /\ __const_2147483647^0-__const_2147483647^post111 == 0 /\ -checkpoint^post111+checkpoint^0 == 0 /\ __const_53^0-__const_53^post111 == 0 /\ bits33^0-bits33^post111 == 0 /\ -__const_50^post111+__const_50^0 == 0 /\ offset^0-offset^post111 == 0 /\ -block_compress^post111+block_compress^0 == 0 /\ -bytes_out^post111+bytes_out^0 == 0 /\ __const_65536^0-__const_65536^post111 == 0 /\ -c7^post111+c7^0 == 0 /\ -__const_429496^post111+__const_429496^0 == 0 /\ hshift11^0-hshift11^post111 == 0 /\ -maxbits^post111+maxbits^0 == 0 /\ __const_16^0-__const_16^post111 == 0 /\ ret_getbyte25^0-ret_getbyte25^post111 == 0 /\ -i29^post111+i29^0 == 0 /\ -i3^post111+i3^0 == 0 /\ m130^0-m130^post111 == 0 /\ -i41^post111+i41^0 == 0 /\ apsim_incnt^0-apsim_incnt^post111 == 0 /\ -i21^post111+i21^0 == 0 /\ -incnt^post111+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post111 == 0 /\ i6^0-i6^post111 == 0 /\ c37^0-c37^post111 == 0 /\ -ret_getbyte18^post111+ret_getbyte18^0 == 0 /\ tmp12^0-tmp12^post111 == 0 /\ -tmp___024^post111+tmp___024^0 == 0 /\ __const_8^0-__const_8^post111 == 0 /\ __const_257^0-__const_257^post111 == 0 /\ -__const_10000^post111+__const_10000^0 == 0 /\ tmp___115^0-tmp___115^post111 == 0 /\ -in_count^post111+in_count^0 == 0 /\ m122^0-m122^post111 == 0 /\ -clear_flg^post111+clear_flg^0 == 0 /\ -__const_8388607^post111+__const_8388607^0 == 0 /\ seed2^0-seed2^post111 == 0 /\ ratio^0-ratio^post111 == 0), cost: 1
 111: l68 -> l1 : __const_10000^0'=__const_10000^post112, __const_16^0'=__const_16^post112, __const_2147483647^0'=__const_2147483647^post112, __const_256^0'=__const_256^post112, __const_257^0'=__const_257^post112, __const_429496^0'=__const_429496^post112, __const_50^0'=__const_50^post112, __const_53^0'=__const_53^post112, __const_65536^0'=__const_65536^post112, __const_8388607^0'=__const_8388607^post112, __const_8^0'=__const_8^post112, __const_9^0'=__const_9^post112, apsim_bound11113^0'=apsim_bound11113^post112, apsim_incnt^0'=apsim_incnt^post112, bits33^0'=bits33^post112, block_compress^0'=block_compress^post112, bytes_out^0'=bytes_out^post112, c37^0'=c37^post112, c7^0'=c7^post112, checkpoint^0'=checkpoint^post112, clear_flg^0'=clear_flg^post112, code31^0'=code31^post112, count^0'=count^post112, disp9^0'=disp9^post112, ent8^0'=ent8^post112, exit_stat^0'=exit_stat^post112, fcode5^0'=fcode5^post112, free_ent^0'=free_ent^post112, hshift11^0'=hshift11^post112, hsize^0'=hsize^post112, hsize___019^0'=hsize___019^post112, hsize___027^0'=hsize___027^post112, hsize_reg10^0'=hsize_reg10^post112, i21^0'=i21^post112, i29^0'=i29^post112, i3^0'=i3^post112, i41^0'=i41^post112, i45^0'=i45^post112, i6^0'=i6^post112, in_count^0'=in_count^post112, incnt^0'=incnt^post112, m122^0'=m122^post112, m130^0'=m130^post112, maxbits^0'=maxbits^post112, maxcode^0'=maxcode^post112, maxmaxcode^0'=maxmaxcode^post112, n40^0'=n40^post112, n44^0'=n44^post112, n_bits^0'=n_bits^post112, offset^0'=offset^post112, out_count^0'=out_count^post112, r_off32^0'=r_off32^post112, rat26^0'=rat26^post112, ratio^0'=ratio^post112, ret_getbyte18^0'=ret_getbyte18^post112, ret_getbyte25^0'=ret_getbyte25^post112, seed2^0'=seed2^post112, tabort4^0'=tabort4^post112, tmp12^0'=tmp12^post112, tmp___014^0'=tmp___014^post112, tmp___017^0'=tmp___017^post112, tmp___024^0'=tmp___024^post112, tmp___115^0'=tmp___115^post112, (0 == 0 /\ tmp___017^0-tmp___017^post112 == 0 /\ hshift11^0-hshift11^post112 == 0 /\ -in_count^post112+in_count^0 == 0 /\ -i21^post112+i21^0 == 0 /\ -n40^post112+n40^0 == 0 /\ r_off32^0-r_off32^post112 == 0 /\ -clear_flg^post112+clear_flg^0 == 0 /\ -block_compress^post112+block_compress^0 == 0 /\ tabort4^0-tabort4^post112 == 0 /\ ret_getbyte18^0-ret_getbyte18^post112 == 0 /\ __const_8388607^0-__const_8388607^post112 == 0 /\ -tmp___014^post112+tmp___014^0 == 0 /\ -tmp12^post112+tmp12^0 == 0 /\ -c7^post112+c7^0 == 0 /\ -i45^post112+i45^0 == 0 /\ exit_stat^0-exit_stat^post112 == 0 /\ -seed2^post112+seed2^0 == 0 /\ maxcode^0-maxcode^post112 == 0 /\ __const_16^0-__const_16^post112 == 0 /\ -__const_8^post112+__const_8^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post112 == 0 /\ out_count^0-out_count^post112 == 0 /\ maxmaxcode^0-maxmaxcode^post112 == 0 /\ -apsim_incnt^post112+apsim_incnt^0 == 0 /\ -disp9^post112+disp9^0 == 0 /\ -free_ent^post112+free_ent^0 == 0 /\ -code31^post112+code31^0 == 0 /\ bytes_out^0-bytes_out^post112 == 0 /\ -rat26^post112+rat26^0 == 0 /\ -__const_429496^post112+__const_429496^0 == 0 /\ __const_9^0-__const_9^post112 == 0 /\ -maxbits^post112+maxbits^0 == 0 /\ m122^0-m122^post112 == 0 /\ -ratio^post112+ratio^0 == 0 /\ -__const_10000^post112+__const_10000^0 == 0 /\ -__const_256^post112+__const_256^0 == 0 /\ -__const_2147483647^post112+__const_2147483647^0 == 0 /\ c37^0-c37^post112 == 0 /\ -tmp___024^post112+tmp___024^0 == 0 /\ -tmp___115^post112+tmp___115^0 == 0 /\ n44^0-n44^post112 == 0 /\ -hsize_reg10^post112+hsize_reg10^0 == 0 /\ n_bits^0-n_bits^post112 == 0 /\ -hsize___019^post112+hsize___019^0 == 0 /\ -hsize^post112+hsize^0 == 0 /\ hsize___027^0-hsize___027^post112 == 0 /\ -i41^post112+i41^0 == 0 /\ bits33^0-bits33^post112 == 0 /\ -ret_getbyte25^post112+ret_getbyte25^0 == 0 /\ -incnt^post112+incnt^0 == 0 /\ i3^0-i3^post112 == 0 /\ __const_53^0-__const_53^post112 == 0 /\ -fcode5^post112+fcode5^0 == 0 /\ -__const_65536^post112+__const_65536^0 == 0 /\ __const_257^0-__const_257^post112 == 0 /\ checkpoint^0-checkpoint^post112 == 0 /\ -m130^post112+m130^0 == 0 /\ count^0-count^post112 == 0 /\ -offset^post112+offset^0 == 0 /\ -__const_50^post112+__const_50^0 == 0 /\ i6^0-i6^post112 == 0 /\ -i29^post112+i29^0 == 0), cost: 1
 112: l68 -> l67 : __const_10000^0'=__const_10000^post113, __const_16^0'=__const_16^post113, __const_2147483647^0'=__const_2147483647^post113, __const_256^0'=__const_256^post113, __const_257^0'=__const_257^post113, __const_429496^0'=__const_429496^post113, __const_50^0'=__const_50^post113, __const_53^0'=__const_53^post113, __const_65536^0'=__const_65536^post113, __const_8388607^0'=__const_8388607^post113, __const_8^0'=__const_8^post113, __const_9^0'=__const_9^post113, apsim_bound11113^0'=apsim_bound11113^post113, apsim_incnt^0'=apsim_incnt^post113, bits33^0'=bits33^post113, block_compress^0'=block_compress^post113, bytes_out^0'=bytes_out^post113, c37^0'=c37^post113, c7^0'=c7^post113, checkpoint^0'=checkpoint^post113, clear_flg^0'=clear_flg^post113, code31^0'=code31^post113, count^0'=count^post113, disp9^0'=disp9^post113, ent8^0'=ent8^post113, exit_stat^0'=exit_stat^post113, fcode5^0'=fcode5^post113, free_ent^0'=free_ent^post113, hshift11^0'=hshift11^post113, hsize^0'=hsize^post113, hsize___019^0'=hsize___019^post113, hsize___027^0'=hsize___027^post113, hsize_reg10^0'=hsize_reg10^post113, i21^0'=i21^post113, i29^0'=i29^post113, i3^0'=i3^post113, i41^0'=i41^post113, i45^0'=i45^post113, i6^0'=i6^post113, in_count^0'=in_count^post113, incnt^0'=incnt^post113, m122^0'=m122^post113, m130^0'=m130^post113, maxbits^0'=maxbits^post113, maxcode^0'=maxcode^post113, maxmaxcode^0'=maxmaxcode^post113, n40^0'=n40^post113, n44^0'=n44^post113, n_bits^0'=n_bits^post113, offset^0'=offset^post113, out_count^0'=out_count^post113, r_off32^0'=r_off32^post113, rat26^0'=rat26^post113, ratio^0'=ratio^post113, ret_getbyte18^0'=ret_getbyte18^post113, ret_getbyte25^0'=ret_getbyte25^post113, seed2^0'=seed2^post113, tabort4^0'=tabort4^post113, tmp12^0'=tmp12^post113, tmp___014^0'=tmp___014^post113, tmp___017^0'=tmp___017^post113, tmp___024^0'=tmp___024^post113, tmp___115^0'=tmp___115^post113, (i3^0-i3^post113 == 0 /\ free_ent^0-free_ent^post113 == 0 /\ i21^0-i21^post113 == 0 /\ -__const_8388607^post113+__const_8388607^0 == 0 /\ -ratio^post113+ratio^0 == 0 /\ -code31^post113+code31^0 == 0 /\ -ent8^post113+ent8^0 == 0 /\ -disp9^post113+disp9^0 == 0 /\ -offset^post113+offset^0 == 0 /\ hsize___027^0-hsize___027^post113 == 0 /\ -fcode5^post113+fcode5^0 == 0 /\ r_off32^0-r_off32^post113 == 0 /\ -__const_16^post113+__const_16^0 == 0 /\ -__const_9^post113+__const_9^0 == 0 /\ -tmp___024^post113+tmp___024^0 == 0 /\ -block_compress^post113+block_compress^0 == 0 /\ -n40^post113+n40^0 == 0 /\ -tmp___014^post113+tmp___014^0 == 0 /\ -ret_getbyte25^post113+ret_getbyte25^0 == 0 /\ tmp___017^0-tmp___017^post113 == 0 /\ exit_stat^0-exit_stat^post113 == 0 /\ __const_10000^0-__const_10000^post113 == 0 /\ maxmaxcode^0-maxmaxcode^post113 == 0 /\ out_count^0-out_count^post113 == 0 /\ -tmp___115^post113+tmp___115^0 == 0 /\ __const_53^0-__const_53^post113 == 0 /\ -i41^post113+i41^0 == 0 /\ -incnt^post113+incnt^0 == 0 /\ n_bits^0-n_bits^post113 == 0 /\ -i45^post113+i45^0 == 0 /\ -m122^post113+m122^0 == 0 /\ bytes_out^0-bytes_out^post113 == 0 /\ -hsize^post113+hsize^0 == 0 /\ count^0-count^post113 == 0 /\ apsim_incnt^0-apsim_incnt^post113 == 0 /\ -__const_65536^post113+__const_65536^0 == 0 /\ -__const_429496^post113+__const_429496^0 == 0 /\ c37^0-c37^post113 == 0 /\ bits33^0-bits33^post113 == 0 /\ -maxbits^post113+maxbits^0 == 0 /\ m130^0-m130^post113 == 0 /\ -maxcode^post113+maxcode^0 == 0 /\ -i29^post113+i29^0 == 0 /\ __const_257^0-__const_257^post113 == 0 /\ hsize___019^0-hsize___019^post113 == 0 /\ checkpoint^0-checkpoint^post113 == 0 /\ -in_count^post113+in_count^0 == 0 /\ -__const_2147483647^post113+__const_2147483647^0 == 0 /\ -apsim_bound11113^post113+apsim_bound11113^0 == 0 /\ -rat26^post113+rat26^0 == 0 /\ tmp12^0-tmp12^post113 == 0 /\ i6^0-i6^post113 == 0 /\ tabort4^0-tabort4^post113 == 0 /\ __const_256^0-__const_256^post113 == 0 /\ -seed2^post113+seed2^0 == 0 /\ n44^0-n44^post113 == 0 /\ ret_getbyte18^0-ret_getbyte18^post113 == 0 /\ -clear_flg^post113+clear_flg^0 == 0 /\ hshift11^0-hshift11^post113 == 0 /\ __const_8^0-__const_8^post113 == 0 /\ __const_50^0-__const_50^post113 == 0 /\ -hsize_reg10^post113+hsize_reg10^0 == 0 /\ -c7^post113+c7^0 == 0), cost: 1
 114: l69 -> l68 : __const_10000^0'=__const_10000^post115, __const_16^0'=__const_16^post115, __const_2147483647^0'=__const_2147483647^post115, __const_256^0'=__const_256^post115, __const_257^0'=__const_257^post115, __const_429496^0'=__const_429496^post115, __const_50^0'=__const_50^post115, __const_53^0'=__const_53^post115, __const_65536^0'=__const_65536^post115, __const_8388607^0'=__const_8388607^post115, __const_8^0'=__const_8^post115, __const_9^0'=__const_9^post115, apsim_bound11113^0'=apsim_bound11113^post115, apsim_incnt^0'=apsim_incnt^post115, bits33^0'=bits33^post115, block_compress^0'=block_compress^post115, bytes_out^0'=bytes_out^post115, c37^0'=c37^post115, c7^0'=c7^post115, checkpoint^0'=checkpoint^post115, clear_flg^0'=clear_flg^post115, code31^0'=code31^post115, count^0'=count^post115, disp9^0'=disp9^post115, ent8^0'=ent8^post115, exit_stat^0'=exit_stat^post115, fcode5^0'=fcode5^post115, free_ent^0'=free_ent^post115, hshift11^0'=hshift11^post115, hsize^0'=hsize^post115, hsize___019^0'=hsize___019^post115, hsize___027^0'=hsize___027^post115, hsize_reg10^0'=hsize_reg10^post115, i21^0'=i21^post115, i29^0'=i29^post115, i3^0'=i3^post115, i41^0'=i41^post115, i45^0'=i45^post115, i6^0'=i6^post115, in_count^0'=in_count^post115, incnt^0'=incnt^post115, m122^0'=m122^post115, m130^0'=m130^post115, maxbits^0'=maxbits^post115, maxcode^0'=maxcode^post115, maxmaxcode^0'=maxmaxcode^post115, n40^0'=n40^post115, n44^0'=n44^post115, n_bits^0'=n_bits^post115, offset^0'=offset^post115, out_count^0'=out_count^post115, r_off32^0'=r_off32^post115, rat26^0'=rat26^post115, ratio^0'=ratio^post115, ret_getbyte18^0'=ret_getbyte18^post115, ret_getbyte25^0'=ret_getbyte25^post115, seed2^0'=seed2^post115, tabort4^0'=tabort4^post115, tmp12^0'=tmp12^post115, tmp___014^0'=tmp___014^post115, tmp___017^0'=tmp___017^post115, tmp___024^0'=tmp___024^post115, tmp___115^0'=tmp___115^post115, (0 == 0 /\ __const_16^0-__const_16^post115 == 0 /\ -tmp___024^post115+tmp___024^0 == 0 /\ -tmp___115^post115+tmp___115^0 == 0 /\ -block_compress^post115+block_compress^0 == 0 /\ -__const_2147483647^post115+__const_2147483647^0 == 0 /\ __const_53^0-__const_53^post115 == 0 /\ -1+in_count^post115-in_count^0 == 0 /\ __const_8^0-__const_8^post115 == 0 /\ -n44^post115+n44^0 == 0 /\ -seed2^post115+seed2^0 == 0 /\ -__const_10000^post115+__const_10000^0 == 0 /\ -hsize_reg10^post115+hsize_reg10^0 == 0 /\ -hsize___027^post115+hsize___027^0 == 0 /\ n40^0-n40^post115 == 0 /\ hshift11^0-hshift11^post115 == 0 /\ ret_getbyte25^0-ret_getbyte25^post115 == 0 /\ tabort4^0-tabort4^post115 == 0 /\ -count^post115+count^0 == 0 /\ hsize___019^0-hsize___019^post115 == 0 /\ -bytes_out^post115+bytes_out^0 == 0 /\ __const_256^0-__const_256^post115 == 0 /\ -hsize^post115+hsize^0 == 0 /\ tmp___014^post115-ret_getbyte25^0 == 0 /\ -apsim_bound11113^post115+apsim_bound11113^0 == 0 /\ -__const_50^post115+__const_50^0 == 0 /\ -maxcode^post115+maxcode^0 == 0 /\ -n_bits^post115+n_bits^0 == 0 /\ c37^0-c37^post115 == 0 /\ -i29^post115+i29^0 == 0 /\ -i41^post115+i41^0 == 0 /\ -incnt^post115+incnt^0 == 0 /\ -__const_65536^post115+__const_65536^0 == 0 /\ code31^0-code31^post115 == 0 /\ free_ent^0-free_ent^post115 == 0 /\ rat26^0-rat26^post115 == 0 /\ __const_9^0-__const_9^post115 == 0 /\ tmp___017^0-tmp___017^post115 == 0 /\ -ratio^post115+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post115 == 0 /\ -tmp___014^post115+c7^post115 == 0 /\ r_off32^0-r_off32^post115 == 0 /\ -__const_8388607^post115+__const_8388607^0 == 0 /\ -checkpoint^post115+checkpoint^0 == 0 /\ tmp12^0-tmp12^post115 == 0 /\ ret_getbyte18^0-ret_getbyte18^post115 == 0 /\ i21^0-i21^post115 == 0 /\ -clear_flg^post115+clear_flg^0 == 0 /\ __const_257^0-__const_257^post115 == 0 /\ apsim_incnt^0-apsim_incnt^post115 == 0 /\ -exit_stat^post115+exit_stat^0 == 0 /\ -disp9^post115+disp9^0 == 0 /\ m130^0-m130^post115 == 0 /\ -m122^post115+m122^0 == 0 /\ bits33^0-bits33^post115 == 0 /\ out_count^0-out_count^post115 == 0 /\ -__const_429496^post115+__const_429496^0 == 0 /\ -i3^post115+i3^0 == 0 /\ i45^0-i45^post115 == 0 /\ maxbits^0-maxbits^post115 == 0 /\ -offset^post115+offset^0 == 0 /\ ent8^0-ent8^post115 == 0), cost: 1
 116: l70 -> l69 : __const_10000^0'=__const_10000^post117, __const_16^0'=__const_16^post117, __const_2147483647^0'=__const_2147483647^post117, __const_256^0'=__const_256^post117, __const_257^0'=__const_257^post117, __const_429496^0'=__const_429496^post117, __const_50^0'=__const_50^post117, __const_53^0'=__const_53^post117, __const_65536^0'=__const_65536^post117, __const_8388607^0'=__const_8388607^post117, __const_8^0'=__const_8^post117, __const_9^0'=__const_9^post117, apsim_bound11113^0'=apsim_bound11113^post117, apsim_incnt^0'=apsim_incnt^post117, bits33^0'=bits33^post117, block_compress^0'=block_compress^post117, bytes_out^0'=bytes_out^post117, c37^0'=c37^post117, c7^0'=c7^post117, checkpoint^0'=checkpoint^post117, clear_flg^0'=clear_flg^post117, code31^0'=code31^post117, count^0'=count^post117, disp9^0'=disp9^post117, ent8^0'=ent8^post117, exit_stat^0'=exit_stat^post117, fcode5^0'=fcode5^post117, free_ent^0'=free_ent^post117, hshift11^0'=hshift11^post117, hsize^0'=hsize^post117, hsize___019^0'=hsize___019^post117, hsize___027^0'=hsize___027^post117, hsize_reg10^0'=hsize_reg10^post117, i21^0'=i21^post117, i29^0'=i29^post117, i3^0'=i3^post117, i41^0'=i41^post117, i45^0'=i45^post117, i6^0'=i6^post117, in_count^0'=in_count^post117, incnt^0'=incnt^post117, m122^0'=m122^post117, m130^0'=m130^post117, maxbits^0'=maxbits^post117, maxcode^0'=maxcode^post117, maxmaxcode^0'=maxmaxcode^post117, n40^0'=n40^post117, n44^0'=n44^post117, n_bits^0'=n_bits^post117, offset^0'=offset^post117, out_count^0'=out_count^post117, r_off32^0'=r_off32^post117, rat26^0'=rat26^post117, ratio^0'=ratio^post117, ret_getbyte18^0'=ret_getbyte18^post117, ret_getbyte25^0'=ret_getbyte25^post117, seed2^0'=seed2^post117, tabort4^0'=tabort4^post117, tmp12^0'=tmp12^post117, tmp___014^0'=tmp___014^post117, tmp___017^0'=tmp___017^post117, tmp___024^0'=tmp___024^post117, tmp___115^0'=tmp___115^post117, (-i41^post117+i41^0 == 0 /\ -n_bits^post117+n_bits^0 == 0 /\ -n44^post117+n44^0 == 0 /\ -i45^post117+i45^0 == 0 /\ -hsize^post117+hsize^0 == 0 /\ -m122^post117+m122^0 == 0 /\ -incnt^post117+incnt^0 == 0 /\ __const_16^0-__const_16^post117 == 0 /\ -__const_65536^post117+__const_65536^0 == 0 /\ __const_50^0-__const_50^post117 == 0 /\ hshift11^0-hshift11^post117 == 0 /\ __const_8^0-__const_8^post117 == 0 /\ -__const_429496^post117+__const_429496^0 == 0 /\ -i29^post117+i29^0 == 0 /\ -maxcode^post117+maxcode^0 == 0 /\ code31^0-code31^post117 == 0 /\ hsize___019^0-hsize___019^post117 == 0 /\ -apsim_bound11113^post117+apsim_bound11113^0 == 0 /\ -in_count^post117+in_count^0 == 0 /\ free_ent^0-free_ent^post117 == 0 /\ n40^0-n40^post117 == 0 /\ -__const_2147483647^post117+__const_2147483647^0 == 0 /\ -seed2^post117+seed2^0 == 0 /\ -tmp___115^post117+tmp___115^0 == 0 /\ -clear_flg^post117+clear_flg^0 == 0 /\ -hsize___027^post117+hsize___027^0 == 0 /\ -block_compress^post117+block_compress^0 == 0 /\ -c7^post117+c7^0 == 0 /\ bytes_out^0-bytes_out^post117 == 0 /\ ent8^0-ent8^post117 == 0 /\ checkpoint^0-checkpoint^post117 == 0 /\ __const_257^0-__const_257^post117 == 0 /\ offset^0-offset^post117 == 0 /\ maxbits^0-maxbits^post117 == 0 /\ i21^0-i21^post117 == 0 /\ __const_9^0-__const_9^post117 == 0 /\ i6^0-i6^post117 == 0 /\ tmp12^0-tmp12^post117 == 0 /\ -__const_8388607^post117+__const_8388607^0 == 0 /\ rat26^0-rat26^post117 == 0 /\ __const_256^0-__const_256^post117 == 0 /\ tabort4^0-tabort4^post117 == 0 /\ -fcode5^post117+fcode5^0 == 0 /\ -count^post117+count^0 == 0 /\ -disp9^post117+disp9^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post117 == 0 /\ exit_stat^0-exit_stat^post117 == 0 /\ -ratio^post117+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post117 == 0 /\ bits33^0-bits33^post117 == 0 /\ r_off32^0-r_off32^post117 == 0 /\ out_count^0-out_count^post117 == 0 /\ tmp___017^0-tmp___017^post117 == 0 /\ c37^0-c37^post117 == 0 /\ i3^0-i3^post117 == 0 /\ __const_53^0-__const_53^post117 == 0 /\ -__const_429496^0+ret_getbyte25^post117 == 0 /\ apsim_incnt^0-apsim_incnt^post117 == 0 /\ -tmp___014^post117+tmp___014^0 == 0 /\ -tmp___024^post117+tmp___024^0 == 0 /\ tmp___024^0 <= 0 /\ -hsize_reg10^post117+hsize_reg10^0 == 0 /\ m130^0-m130^post117 == 0 /\ -__const_10000^post117+__const_10000^0 == 0), cost: 1
 117: l70 -> l69 : __const_10000^0'=__const_10000^post118, __const_16^0'=__const_16^post118, __const_2147483647^0'=__const_2147483647^post118, __const_256^0'=__const_256^post118, __const_257^0'=__const_257^post118, __const_429496^0'=__const_429496^post118, __const_50^0'=__const_50^post118, __const_53^0'=__const_53^post118, __const_65536^0'=__const_65536^post118, __const_8388607^0'=__const_8388607^post118, __const_8^0'=__const_8^post118, __const_9^0'=__const_9^post118, apsim_bound11113^0'=apsim_bound11113^post118, apsim_incnt^0'=apsim_incnt^post118, bits33^0'=bits33^post118, block_compress^0'=block_compress^post118, bytes_out^0'=bytes_out^post118, c37^0'=c37^post118, c7^0'=c7^post118, checkpoint^0'=checkpoint^post118, clear_flg^0'=clear_flg^post118, code31^0'=code31^post118, count^0'=count^post118, disp9^0'=disp9^post118, ent8^0'=ent8^post118, exit_stat^0'=exit_stat^post118, fcode5^0'=fcode5^post118, free_ent^0'=free_ent^post118, hshift11^0'=hshift11^post118, hsize^0'=hsize^post118, hsize___019^0'=hsize___019^post118, hsize___027^0'=hsize___027^post118, hsize_reg10^0'=hsize_reg10^post118, i21^0'=i21^post118, i29^0'=i29^post118, i3^0'=i3^post118, i41^0'=i41^post118, i45^0'=i45^post118, i6^0'=i6^post118, in_count^0'=in_count^post118, incnt^0'=incnt^post118, m122^0'=m122^post118, m130^0'=m130^post118, maxbits^0'=maxbits^post118, maxcode^0'=maxcode^post118, maxmaxcode^0'=maxmaxcode^post118, n40^0'=n40^post118, n44^0'=n44^post118, n_bits^0'=n_bits^post118, offset^0'=offset^post118, out_count^0'=out_count^post118, r_off32^0'=r_off32^post118, rat26^0'=rat26^post118, ratio^0'=ratio^post118, ret_getbyte18^0'=ret_getbyte18^post118, ret_getbyte25^0'=ret_getbyte25^post118, seed2^0'=seed2^post118, tabort4^0'=tabort4^post118, tmp12^0'=tmp12^post118, tmp___014^0'=tmp___014^post118, tmp___017^0'=tmp___017^post118, tmp___024^0'=tmp___024^post118, tmp___115^0'=tmp___115^post118, (0 == 0 /\ -tabort4^post118+tabort4^0 == 0 /\ -r_off32^post118+r_off32^0 == 0 /\ -tmp___014^post118+tmp___014^0 == 0 /\ -exit_stat^post118+exit_stat^0 == 0 /\ __const_65536^0-__const_65536^post118 == 0 /\ -c7^post118+c7^0 == 0 /\ -bytes_out^post118+bytes_out^0 == 0 /\ -block_compress^post118+block_compress^0 == 0 /\ __const_53^0-__const_53^post118 == 0 /\ -seed2^post118+seed2^0 == 0 /\ -fcode5^post118+fcode5^0 == 0 /\ -i21^post118+i21^0 == 0 /\ m130^0-m130^post118 == 0 /\ -tmp___024^post118+tmp___024^0 == 0 /\ __const_8^0-__const_8^post118 == 0 /\ hsize___027^0-hsize___027^post118 == 0 /\ -ratio^post118+ratio^0 == 0 /\ i29^0-i29^post118 == 0 /\ __const_257^0-__const_257^post118 == 0 /\ -i41^post118+i41^0 == 0 /\ hsize___019^0-hsize___019^post118 == 0 /\ code31^0-code31^post118 == 0 /\ -n44^post118+n44^0 == 0 /\ -i6^post118+i6^0 == 0 /\ -__const_256^post118+__const_256^0 == 0 /\ hshift11^0-hshift11^post118 == 0 /\ -count^post118+count^0 == 0 /\ -clear_flg^post118+clear_flg^0 == 0 /\ -checkpoint^post118+checkpoint^0 == 0 /\ -__const_2147483647^post118+__const_2147483647^0 == 0 /\ -__const_10000^post118+__const_10000^0 == 0 /\ free_ent^0-free_ent^post118 == 0 /\ c37^0-c37^post118 == 0 /\ -__const_429496^post118+__const_429496^0 == 0 /\ -maxbits^post118+maxbits^0 == 0 /\ -maxcode^post118+maxcode^0 == 0 /\ tmp___017^0-tmp___017^post118 == 0 /\ out_count^0-out_count^post118 == 0 /\ maxmaxcode^0-maxmaxcode^post118 == 0 /\ ret_getbyte18^0-ret_getbyte18^post118 == 0 /\ -__const_50^post118+__const_50^0 == 0 /\ __const_9^0-__const_9^post118 == 0 /\ -hsize^post118+hsize^0 == 0 /\ -hsize_reg10^post118+hsize_reg10^0 == 0 /\ tmp___115^0-tmp___115^post118 == 0 /\ tmp12^0-tmp12^post118 == 0 /\ rat26^0-rat26^post118 == 0 /\ n40^0-n40^post118 == 0 /\ offset^0-offset^post118 == 0 /\ -m122^post118+m122^0 == 0 /\ -apsim_bound11113^post118+apsim_bound11113^0 == 0 /\ -__const_8388607^post118+__const_8388607^0 == 0 /\ bits33^0-bits33^post118 == 0 /\ ent8^0-ent8^post118 == 0 /\ 1-tmp___024^0 <= 0 /\ -i3^post118+i3^0 == 0 /\ __const_16^0-__const_16^post118 == 0 /\ apsim_incnt^0-apsim_incnt^post118 == 0 /\ -n_bits^post118+n_bits^0 == 0 /\ i45^0-i45^post118 == 0 /\ 1+incnt^post118-incnt^0 == 0 /\ -in_count^post118+in_count^0 == 0 /\ -disp9^post118+disp9^0 == 0), cost: 1
 118: l71 -> l69 : __const_10000^0'=__const_10000^post119, __const_16^0'=__const_16^post119, __const_2147483647^0'=__const_2147483647^post119, __const_256^0'=__const_256^post119, __const_257^0'=__const_257^post119, __const_429496^0'=__const_429496^post119, __const_50^0'=__const_50^post119, __const_53^0'=__const_53^post119, __const_65536^0'=__const_65536^post119, __const_8388607^0'=__const_8388607^post119, __const_8^0'=__const_8^post119, __const_9^0'=__const_9^post119, apsim_bound11113^0'=apsim_bound11113^post119, apsim_incnt^0'=apsim_incnt^post119, bits33^0'=bits33^post119, block_compress^0'=block_compress^post119, bytes_out^0'=bytes_out^post119, c37^0'=c37^post119, c7^0'=c7^post119, checkpoint^0'=checkpoint^post119, clear_flg^0'=clear_flg^post119, code31^0'=code31^post119, count^0'=count^post119, disp9^0'=disp9^post119, ent8^0'=ent8^post119, exit_stat^0'=exit_stat^post119, fcode5^0'=fcode5^post119, free_ent^0'=free_ent^post119, hshift11^0'=hshift11^post119, hsize^0'=hsize^post119, hsize___019^0'=hsize___019^post119, hsize___027^0'=hsize___027^post119, hsize_reg10^0'=hsize_reg10^post119, i21^0'=i21^post119, i29^0'=i29^post119, i3^0'=i3^post119, i41^0'=i41^post119, i45^0'=i45^post119, i6^0'=i6^post119, in_count^0'=in_count^post119, incnt^0'=incnt^post119, m122^0'=m122^post119, m130^0'=m130^post119, maxbits^0'=maxbits^post119, maxcode^0'=maxcode^post119, maxmaxcode^0'=maxmaxcode^post119, n40^0'=n40^post119, n44^0'=n44^post119, n_bits^0'=n_bits^post119, offset^0'=offset^post119, out_count^0'=out_count^post119, r_off32^0'=r_off32^post119, rat26^0'=rat26^post119, ratio^0'=ratio^post119, ret_getbyte18^0'=ret_getbyte18^post119, ret_getbyte25^0'=ret_getbyte25^post119, seed2^0'=seed2^post119, tabort4^0'=tabort4^post119, tmp12^0'=tmp12^post119, tmp___014^0'=tmp___014^post119, tmp___017^0'=tmp___017^post119, tmp___024^0'=tmp___024^post119, tmp___115^0'=tmp___115^post119, (ret_getbyte25^post119-__const_429496^0 == 0 /\ m130^0-m130^post119 == 0 /\ bits33^0-bits33^post119 == 0 /\ -ratio^post119+ratio^0 == 0 /\ -ret_getbyte18^post119+ret_getbyte18^0 == 0 /\ -in_count^post119+in_count^0 == 0 /\ -i6^post119+i6^0 == 0 /\ n44^0-n44^post119 == 0 /\ -__const_8388607^post119+__const_8388607^0 == 0 /\ -__const_256^post119+__const_256^0 == 0 /\ -__const_10000^post119+__const_10000^0 == 0 /\ code31^0-code31^post119 == 0 /\ __const_65536^0-__const_65536^post119 == 0 /\ apsim_incnt^0-apsim_incnt^post119 == 0 /\ i29^0-i29^post119 == 0 /\ -clear_flg^post119+clear_flg^0 == 0 /\ ent8^0-ent8^post119 == 0 /\ -hsize___019^post119+hsize___019^0 == 0 /\ -hsize_reg10^post119+hsize_reg10^0 == 0 /\ -exit_stat^post119+exit_stat^0 == 0 /\ -disp9^post119+disp9^0 == 0 /\ c37^0-c37^post119 == 0 /\ tmp___014^0-tmp___014^post119 == 0 /\ -m122^post119+m122^0 == 0 /\ __const_257^0-__const_257^post119 == 0 /\ __const_53^0-__const_53^post119 == 0 /\ -maxbits^post119+maxbits^0 == 0 /\ tmp12^0-tmp12^post119 == 0 /\ hsize___027^0-hsize___027^post119 == 0 /\ __const_8^0-__const_8^post119 == 0 /\ c7^0-c7^post119 == 0 /\ -i21^post119+i21^0 == 0 /\ __const_16^0-__const_16^post119 == 0 /\ hshift11^0-hshift11^post119 == 0 /\ tmp___115^0-tmp___115^post119 == 0 /\ -tmp___024^post119+tmp___024^0 == 0 /\ -tmp___017^post119+tmp___017^0 == 0 /\ -checkpoint^post119+checkpoint^0 == 0 /\ -bytes_out^post119+bytes_out^0 == 0 /\ -block_compress^post119+block_compress^0 == 0 /\ -seed2^post119+seed2^0 == 0 /\ -n_bits^post119+n_bits^0 == 0 /\ -tabort4^post119+tabort4^0 == 0 /\ __const_429496^0-__const_429496^post119 == 0 /\ i45^0-i45^post119 == 0 /\ free_ent^0-free_ent^post119 == 0 /\ rat26^0-rat26^post119 == 0 /\ out_count^0-out_count^post119 == 0 /\ __const_9^0-__const_9^post119 == 0 /\ -incnt^post119+incnt^0 == 0 /\ -count^post119+count^0 == 0 /\ -r_off32^post119+r_off32^0 == 0 /\ -hsize^post119+hsize^0 == 0 /\ -i3^post119+i3^0 == 0 /\ offset^0-offset^post119 == 0 /\ -apsim_bound11113^post119+apsim_bound11113^0 == 0 /\ -__const_50^post119+__const_50^0 == 0 /\ maxmaxcode^0-maxmaxcode^post119 == 0 /\ __const_2147483647^0-__const_2147483647^post119 == 0 /\ -maxcode^post119+maxcode^0 == 0 /\ -i41^post119+i41^0 == 0 /\ -fcode5^post119+fcode5^0 == 0 /\ incnt^0 <= 0 /\ -n40^post119+n40^0 == 0), cost: 1
 119: l71 -> l70 : __const_10000^0'=__const_10000^post120, __const_16^0'=__const_16^post120, __const_2147483647^0'=__const_2147483647^post120, __const_256^0'=__const_256^post120, __const_257^0'=__const_257^post120, __const_429496^0'=__const_429496^post120, __const_50^0'=__const_50^post120, __const_53^0'=__const_53^post120, __const_65536^0'=__const_65536^post120, __const_8388607^0'=__const_8388607^post120, __const_8^0'=__const_8^post120, __const_9^0'=__const_9^post120, apsim_bound11113^0'=apsim_bound11113^post120, apsim_incnt^0'=apsim_incnt^post120, bits33^0'=bits33^post120, block_compress^0'=block_compress^post120, bytes_out^0'=bytes_out^post120, c37^0'=c37^post120, c7^0'=c7^post120, checkpoint^0'=checkpoint^post120, clear_flg^0'=clear_flg^post120, code31^0'=code31^post120, count^0'=count^post120, disp9^0'=disp9^post120, ent8^0'=ent8^post120, exit_stat^0'=exit_stat^post120, fcode5^0'=fcode5^post120, free_ent^0'=free_ent^post120, hshift11^0'=hshift11^post120, hsize^0'=hsize^post120, hsize___019^0'=hsize___019^post120, hsize___027^0'=hsize___027^post120, hsize_reg10^0'=hsize_reg10^post120, i21^0'=i21^post120, i29^0'=i29^post120, i3^0'=i3^post120, i41^0'=i41^post120, i45^0'=i45^post120, i6^0'=i6^post120, in_count^0'=in_count^post120, incnt^0'=incnt^post120, m122^0'=m122^post120, m130^0'=m130^post120, maxbits^0'=maxbits^post120, maxcode^0'=maxcode^post120, maxmaxcode^0'=maxmaxcode^post120, n40^0'=n40^post120, n44^0'=n44^post120, n_bits^0'=n_bits^post120, offset^0'=offset^post120, out_count^0'=out_count^post120, r_off32^0'=r_off32^post120, rat26^0'=rat26^post120, ratio^0'=ratio^post120, ret_getbyte18^0'=ret_getbyte18^post120, ret_getbyte25^0'=ret_getbyte25^post120, seed2^0'=seed2^post120, tabort4^0'=tabort4^post120, tmp12^0'=tmp12^post120, tmp___014^0'=tmp___014^post120, tmp___017^0'=tmp___017^post120, tmp___024^0'=tmp___024^post120, tmp___115^0'=tmp___115^post120, (1-apsim_incnt^0+apsim_incnt^post120 == 0 /\ -m122^post120+m122^0 == 0 /\ ent8^0-ent8^post120 == 0 /\ maxcode^0-maxcode^post120 == 0 /\ offset^0-offset^post120 == 0 /\ -incnt^post120+incnt^0 == 0 /\ __const_9^0-__const_9^post120 == 0 /\ -n_bits^post120+n_bits^0 == 0 /\ c37^0-c37^post120 == 0 /\ exit_stat^0-exit_stat^post120 == 0 /\ hsize___027^0-hsize___027^post120 == 0 /\ bits33^0-bits33^post120 == 0 /\ maxmaxcode^0-maxmaxcode^post120 == 0 /\ -r_off32^post120+r_off32^0 == 0 /\ -apsim_incnt^0+tmp___024^post120 == 0 /\ -n40^post120+n40^0 == 0 /\ m130^0-m130^post120 == 0 /\ c7^0-c7^post120 == 0 /\ -in_count^post120+in_count^0 == 0 /\ -apsim_bound11113^post120+apsim_bound11113^0 == 0 /\ -__const_50^post120+__const_50^0 == 0 /\ -ret_getbyte18^post120+ret_getbyte18^0 == 0 /\ -__const_256^post120+__const_256^0 == 0 /\ -checkpoint^post120+checkpoint^0 == 0 /\ __const_65536^0-__const_65536^post120 == 0 /\ tmp___115^0-tmp___115^post120 == 0 /\ ret_getbyte25^0-ret_getbyte25^post120 == 0 /\ -hsize^post120+hsize^0 == 0 /\ n44^0-n44^post120 == 0 /\ i45^0-i45^post120 == 0 /\ -seed2^post120+seed2^0 == 0 /\ -tabort4^post120+tabort4^0 == 0 /\ __const_429496^0-__const_429496^post120 == 0 /\ tmp12^0-tmp12^post120 == 0 /\ -__const_8388607^post120+__const_8388607^0 == 0 /\ __const_2147483647^0-__const_2147483647^post120 == 0 /\ tmp___017^0-tmp___017^post120 == 0 /\ -count^post120+count^0 == 0 /\ __const_8^0-__const_8^post120 == 0 /\ -fcode5^post120+fcode5^0 == 0 /\ rat26^0-rat26^post120 == 0 /\ -disp9^post120+disp9^0 == 0 /\ -i29^post120+i29^0 == 0 /\ __const_16^0-__const_16^post120 == 0 /\ -i3^post120+i3^0 == 0 /\ __const_53^0-__const_53^post120 == 0 /\ -i41^post120+i41^0 == 0 /\ -clear_flg^post120+clear_flg^0 == 0 /\ -i6^post120+i6^0 == 0 /\ -bytes_out^post120+bytes_out^0 == 0 /\ -maxbits^post120+maxbits^0 == 0 /\ __const_257^0-__const_257^post120 == 0 /\ code31^0-code31^post120 == 0 /\ free_ent^0-free_ent^post120 == 0 /\ hshift11^0-hshift11^post120 == 0 /\ -ratio^post120+ratio^0 == 0 /\ -i21^post120+i21^0 == 0 /\ out_count^0-out_count^post120 == 0 /\ block_compress^0-block_compress^post120 == 0 /\ -hsize_reg10^post120+hsize_reg10^0 == 0 /\ -__const_10000^post120+__const_10000^0 == 0 /\ 1-incnt^0 <= 0 /\ -hsize___019^post120+hsize___019^0 == 0 /\ -tmp___014^post120+tmp___014^0 == 0), cost: 1
 123: l72 -> l56 : __const_10000^0'=__const_10000^post124, __const_16^0'=__const_16^post124, __const_2147483647^0'=__const_2147483647^post124, __const_256^0'=__const_256^post124, __const_257^0'=__const_257^post124, __const_429496^0'=__const_429496^post124, __const_50^0'=__const_50^post124, __const_53^0'=__const_53^post124, __const_65536^0'=__const_65536^post124, __const_8388607^0'=__const_8388607^post124, __const_8^0'=__const_8^post124, __const_9^0'=__const_9^post124, apsim_bound11113^0'=apsim_bound11113^post124, apsim_incnt^0'=apsim_incnt^post124, bits33^0'=bits33^post124, block_compress^0'=block_compress^post124, bytes_out^0'=bytes_out^post124, c37^0'=c37^post124, c7^0'=c7^post124, checkpoint^0'=checkpoint^post124, clear_flg^0'=clear_flg^post124, code31^0'=code31^post124, count^0'=count^post124, disp9^0'=disp9^post124, ent8^0'=ent8^post124, exit_stat^0'=exit_stat^post124, fcode5^0'=fcode5^post124, free_ent^0'=free_ent^post124, hshift11^0'=hshift11^post124, hsize^0'=hsize^post124, hsize___019^0'=hsize___019^post124, hsize___027^0'=hsize___027^post124, hsize_reg10^0'=hsize_reg10^post124, i21^0'=i21^post124, i29^0'=i29^post124, i3^0'=i3^post124, i41^0'=i41^post124, i45^0'=i45^post124, i6^0'=i6^post124, in_count^0'=in_count^post124, incnt^0'=incnt^post124, m122^0'=m122^post124, m130^0'=m130^post124, maxbits^0'=maxbits^post124, maxcode^0'=maxcode^post124, maxmaxcode^0'=maxmaxcode^post124, n40^0'=n40^post124, n44^0'=n44^post124, n_bits^0'=n_bits^post124, offset^0'=offset^post124, out_count^0'=out_count^post124, r_off32^0'=r_off32^post124, rat26^0'=rat26^post124, ratio^0'=ratio^post124, ret_getbyte18^0'=ret_getbyte18^post124, ret_getbyte25^0'=ret_getbyte25^post124, seed2^0'=seed2^post124, tabort4^0'=tabort4^post124, tmp12^0'=tmp12^post124, tmp___014^0'=tmp___014^post124, tmp___017^0'=tmp___017^post124, tmp___024^0'=tmp___024^post124, tmp___115^0'=tmp___115^post124, (-ratio^post124+ratio^0 == 0 /\ -c7^post124+c7^0 == 0 /\ -clear_flg^post124+clear_flg^0 == 0 /\ out_count^0-out_count^post124 == 0 /\ exit_stat^0-exit_stat^post124 == 0 /\ -ret_getbyte18^post124+ret_getbyte18^0 == 0 /\ -c37^post124+c37^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post124 == 0 /\ maxmaxcode^0-maxmaxcode^post124 == 0 /\ -in_count^post124+in_count^0 == 0 /\ -1+seed2^post124 == 0 /\ offset^0-offset^post124 == 0 /\ -block_compress^post124+block_compress^0 == 0 /\ n40^0-n40^post124 == 0 /\ __const_16^0-__const_16^post124 == 0 /\ -code31^post124+code31^0 == 0 /\ -tmp___024^post124+tmp___024^0 == 0 /\ -i45^post124+i45^0 == 0 /\ __const_10000^0-__const_10000^post124 == 0 /\ tmp12^0-tmp12^post124 == 0 /\ n44^0-n44^post124 == 0 /\ tabort4^0-tabort4^post124 == 0 /\ -__const_429496^post124+__const_429496^0 == 0 /\ -fcode5^post124+fcode5^0 == 0 /\ checkpoint^0-checkpoint^post124 == 0 /\ -tmp___014^post124+tmp___014^0 == 0 /\ apsim_incnt^0-apsim_incnt^post124 == 0 /\ i3^post124 == 0 /\ -disp9^post124+disp9^0 == 0 /\ i21^0-i21^post124 == 0 /\ -r_off32^post124+r_off32^0 == 0 /\ -maxbits^post124+maxbits^0 == 0 /\ __const_256^0-__const_256^post124 == 0 /\ -maxcode^post124+maxcode^0 == 0 /\ -apsim_bound11113^post124+apsim_bound11113^0 == 0 /\ -__const_9^post124+__const_9^0 == 0 /\ -__const_2147483647^post124+__const_2147483647^0 == 0 /\ m130^0-m130^post124 == 0 /\ -__const_50^0+count^post124 == 0 /\ -hsize_reg10^post124+hsize_reg10^0 == 0 /\ -hsize^post124+hsize^0 == 0 /\ -incnt^post124+incnt^0 == 0 /\ -bits33^post124+bits33^0 == 0 /\ -m122^post124+m122^0 == 0 /\ __const_8^0-__const_8^post124 == 0 /\ hsize___027^0-hsize___027^post124 == 0 /\ __const_50^0-__const_50^post124 == 0 /\ rat26^0-rat26^post124 == 0 /\ -tmp___115^post124+tmp___115^0 == 0 /\ -__const_8388607^post124+__const_8388607^0 == 0 /\ -n_bits^post124+n_bits^0 == 0 /\ tmp___017^0-tmp___017^post124 == 0 /\ __const_257^0-__const_257^post124 == 0 /\ __const_53^0-__const_53^post124 == 0 /\ hsize___019^0-hsize___019^post124 == 0 /\ -free_ent^post124+free_ent^0 == 0 /\ -__const_65536^post124+__const_65536^0 == 0 /\ -i29^post124+i29^0 == 0 /\ -ent8^post124+ent8^0 == 0 /\ hshift11^0-hshift11^post124 == 0 /\ bytes_out^0-bytes_out^post124 == 0 /\ i6^0-i6^post124 == 0 /\ -i41^post124+i41^0 == 0), cost: 1
 124: l73 -> l72 : __const_10000^0'=__const_10000^post125, __const_16^0'=__const_16^post125, __const_2147483647^0'=__const_2147483647^post125, __const_256^0'=__const_256^post125, __const_257^0'=__const_257^post125, __const_429496^0'=__const_429496^post125, __const_50^0'=__const_50^post125, __const_53^0'=__const_53^post125, __const_65536^0'=__const_65536^post125, __const_8388607^0'=__const_8388607^post125, __const_8^0'=__const_8^post125, __const_9^0'=__const_9^post125, apsim_bound11113^0'=apsim_bound11113^post125, apsim_incnt^0'=apsim_incnt^post125, bits33^0'=bits33^post125, block_compress^0'=block_compress^post125, bytes_out^0'=bytes_out^post125, c37^0'=c37^post125, c7^0'=c7^post125, checkpoint^0'=checkpoint^post125, clear_flg^0'=clear_flg^post125, code31^0'=code31^post125, count^0'=count^post125, disp9^0'=disp9^post125, ent8^0'=ent8^post125, exit_stat^0'=exit_stat^post125, fcode5^0'=fcode5^post125, free_ent^0'=free_ent^post125, hshift11^0'=hshift11^post125, hsize^0'=hsize^post125, hsize___019^0'=hsize___019^post125, hsize___027^0'=hsize___027^post125, hsize_reg10^0'=hsize_reg10^post125, i21^0'=i21^post125, i29^0'=i29^post125, i3^0'=i3^post125, i41^0'=i41^post125, i45^0'=i45^post125, i6^0'=i6^post125, in_count^0'=in_count^post125, incnt^0'=incnt^post125, m122^0'=m122^post125, m130^0'=m130^post125, maxbits^0'=maxbits^post125, maxcode^0'=maxcode^post125, maxmaxcode^0'=maxmaxcode^post125, n40^0'=n40^post125, n44^0'=n44^post125, n_bits^0'=n_bits^post125, offset^0'=offset^post125, out_count^0'=out_count^post125, r_off32^0'=r_off32^post125, rat26^0'=rat26^post125, ratio^0'=ratio^post125, ret_getbyte18^0'=ret_getbyte18^post125, ret_getbyte25^0'=ret_getbyte25^post125, seed2^0'=seed2^post125, tabort4^0'=tabort4^post125, tmp12^0'=tmp12^post125, tmp___014^0'=tmp___014^post125, tmp___017^0'=tmp___017^post125, tmp___024^0'=tmp___024^post125, tmp___115^0'=tmp___115^post125, (-n40^post125+n40^0 == 0 /\ hsize___027^0-hsize___027^post125 == 0 /\ -apsim_bound11113^post125+apsim_bound11113^0 == 0 /\ -__const_9^post125+__const_9^0 == 0 /\ n44^0-n44^post125 == 0 /\ -__const_257^post125+__const_257^0 == 0 /\ m130^0-m130^post125 == 0 /\ i6^0-i6^post125 == 0 /\ bytes_out^0-bytes_out^post125 == 0 /\ i3^0-i3^post125 == 0 /\ maxcode^0-maxcode^post125 == 0 /\ -__const_16^post125+__const_16^0 == 0 /\ -__const_2147483647^post125+__const_2147483647^0 == 0 /\ i21^0-i21^post125 == 0 /\ apsim_incnt^0-apsim_incnt^post125 == 0 /\ -hsize___019^post125+hsize___019^0 == 0 /\ -hsize_reg10^post125+hsize_reg10^0 == 0 /\ count^0-count^post125 == 0 /\ c37^0-c37^post125 == 0 /\ -n_bits^post125+n_bits^0 == 0 /\ -incnt^post125+incnt^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post125 == 0 /\ -bits33^post125+bits33^0 == 0 /\ -seed2^post125+seed2^0 == 0 /\ -__const_65536^post125+__const_65536^0 == 0 /\ -free_ent^post125+free_ent^0 == 0 /\ -i29^post125+i29^0 == 0 /\ -ent8^post125+ent8^0 == 0 /\ -i41^post125+i41^0 == 0 /\ tmp12^0-tmp12^post125 == 0 /\ -maxbits^post125+maxbits^0 == 0 /\ exit_stat^0-exit_stat^post125 == 0 /\ __const_50^0-__const_50^post125 == 0 /\ -ratio^post125+ratio^0 == 0 /\ __const_8^0-__const_8^post125 == 0 /\ hshift11^0-hshift11^post125 == 0 /\ -c7^post125+c7^0 == 0 /\ rat26^0-rat26^post125 == 0 /\ __const_10000^0-__const_10000^post125 == 0 /\ -clear_flg^post125+clear_flg^0 == 0 /\ -tmp___014^post125+tmp___014^0 == 0 /\ -in_count^post125+in_count^0 == 0 /\ -tmp___024^post125+tmp___024^0 == 0 /\ -__const_8388607^post125+__const_8388607^0 == 0 /\ -tmp___115^post125+tmp___115^0 == 0 /\ __const_53^0-__const_53^post125 == 0 /\ checkpoint^0-checkpoint^post125 == 0 /\ r_off32^0-r_off32^post125 == 0 /\ -block_compress^post125+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post125 == 0 /\ tabort4^0-tabort4^post125 == 0 /\ out_count^0-out_count^post125 == 0 /\ __const_256^0-__const_256^post125 == 0 /\ -offset^post125+offset^0 == 0 /\ -hsize^post125+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post125 == 0 /\ -m122^post125+m122^0 == 0 /\ tmp___017^0-tmp___017^post125 == 0 /\ -code31^post125+code31^0 == 0 /\ fcode5^0-fcode5^post125 == 0 /\ -__const_429496^post125+__const_429496^0 == 0 /\ -disp9^post125+disp9^0 == 0 /\ -i45^post125+i45^0 == 0), cost: 1

Chained Linear Paths

Start location: l73
Program variables: __const_10000^0 __const_16^0 __const_2147483647^0 __const_256^0 __const_257^0 __const_429496^0 __const_50^0 __const_53^0 __const_65536^0 __const_8388607^0 __const_8^0 __const_9^0 apsim_bound11113^0 apsim_incnt^0 bits33^0 block_compress^0 bytes_out^0 c37^0 c7^0 checkpoint^0 clear_flg^0 code31^0 count^0 disp9^0 ent8^0 exit_stat^0 fcode5^0 free_ent^0 hshift11^0 hsize^0 hsize___019^0 hsize___027^0 hsize_reg10^0 i21^0 i29^0 i3^0 i41^0 i45^0 i6^0 in_count^0 incnt^0 m122^0 m130^0 maxbits^0 maxcode^0 maxmaxcode^0 n40^0 n44^0 n_bits^0 offset^0 out_count^0 r_off32^0 rat26^0 ratio^0 ret_getbyte18^0 ret_getbyte25^0 seed2^0 tabort4^0 tmp12^0 tmp___014^0 tmp___017^0 tmp___024^0 tmp___115^0
   0: l0 -> l1 : __const_10000^0'=__const_10000^post1, __const_16^0'=__const_16^post1, __const_2147483647^0'=__const_2147483647^post1, __const_256^0'=__const_256^post1, __const_257^0'=__const_257^post1, __const_429496^0'=__const_429496^post1, __const_50^0'=__const_50^post1, __const_53^0'=__const_53^post1, __const_65536^0'=__const_65536^post1, __const_8388607^0'=__const_8388607^post1, __const_8^0'=__const_8^post1, __const_9^0'=__const_9^post1, apsim_bound11113^0'=apsim_bound11113^post1, apsim_incnt^0'=apsim_incnt^post1, bits33^0'=bits33^post1, block_compress^0'=block_compress^post1, bytes_out^0'=bytes_out^post1, c37^0'=c37^post1, c7^0'=c7^post1, checkpoint^0'=checkpoint^post1, clear_flg^0'=clear_flg^post1, code31^0'=code31^post1, count^0'=count^post1, disp9^0'=disp9^post1, ent8^0'=ent8^post1, exit_stat^0'=exit_stat^post1, fcode5^0'=fcode5^post1, free_ent^0'=free_ent^post1, hshift11^0'=hshift11^post1, hsize^0'=hsize^post1, hsize___019^0'=hsize___019^post1, hsize___027^0'=hsize___027^post1, hsize_reg10^0'=hsize_reg10^post1, i21^0'=i21^post1, i29^0'=i29^post1, i3^0'=i3^post1, i41^0'=i41^post1, i45^0'=i45^post1, i6^0'=i6^post1, in_count^0'=in_count^post1, incnt^0'=incnt^post1, m122^0'=m122^post1, m130^0'=m130^post1, maxbits^0'=maxbits^post1, maxcode^0'=maxcode^post1, maxmaxcode^0'=maxmaxcode^post1, n40^0'=n40^post1, n44^0'=n44^post1, n_bits^0'=n_bits^post1, offset^0'=offset^post1, out_count^0'=out_count^post1, r_off32^0'=r_off32^post1, rat26^0'=rat26^post1, ratio^0'=ratio^post1, ret_getbyte18^0'=ret_getbyte18^post1, ret_getbyte25^0'=ret_getbyte25^post1, seed2^0'=seed2^post1, tabort4^0'=tabort4^post1, tmp12^0'=tmp12^post1, tmp___014^0'=tmp___014^post1, tmp___017^0'=tmp___017^post1, tmp___024^0'=tmp___024^post1, tmp___115^0'=tmp___115^post1, (-i29^post1+i29^0 == 0 /\ maxmaxcode^0-maxmaxcode^post1 == 0 /\ i6^0-i6^post1 == 0 /\ n44^0-n44^post1 == 0 /\ i3^0-i3^post1 == 0 /\ bytes_out^0-bytes_out^post1 == 0 /\ -__const_257^post1+__const_257^0 == 0 /\ -__const_16^post1+__const_16^0 == 0 /\ count^0-count^post1 == 0 /\ -__const_2147483647^post1+__const_2147483647^0 == 0 /\ apsim_incnt^0-apsim_incnt^post1 == 0 /\ m130^0-m130^post1 == 0 /\ -hsize_reg10^post1+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post1 == 0 /\ -hsize^post1+hsize^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post1 == 0 /\ c37^0-c37^post1 == 0 /\ -bits33^post1+bits33^0 == 0 /\ -hsize___019^post1+hsize___019^0 == 0 /\ -maxcode^post1+maxcode^0 == 0 /\ -i41^post1+i41^0 == 0 /\ -ent8^post1+ent8^0 == 0 /\ -seed2^post1+seed2^0 == 0 /\ hsize___027^0-hsize___027^post1 == 0 /\ -apsim_bound11113^post1+apsim_bound11113^0 == 0 /\ -i21^post1+i21^0 == 0 /\ -__const_65536^post1+__const_65536^0 == 0 /\ -incnt^post1+incnt^0 == 0 /\ tmp12^0-tmp12^post1 == 0 /\ exit_stat^0-exit_stat^post1 == 0 /\ fcode5^0-fcode5^post1 == 0 /\ __const_50^0-__const_50^post1 == 0 /\ rat26^0-rat26^post1 == 0 /\ -tmp___115^post1+tmp___115^0 == 0 /\ __const_10000^0-__const_10000^post1 == 0 /\ -block_compress^post1+block_compress^0 == 0 /\ tabort4^0-tabort4^post1 == 0 /\ ret_getbyte18^0-ret_getbyte18^post1 == 0 /\ -ratio^post1+ratio^0 == 0 /\ -clear_flg^post1+clear_flg^0 == 0 /\ i21^0 <= 0 /\ checkpoint^0-checkpoint^post1 == 0 /\ -in_count^post1+in_count^0 == 0 /\ r_off32^0-r_off32^post1 == 0 /\ __const_53^0-__const_53^post1 == 0 /\ tmp___017^0-tmp___017^post1 == 0 /\ -n_bits^post1+n_bits^0 == 0 /\ -c7^post1+c7^0 == 0 /\ -__const_8388607^post1+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post1 == 0 /\ out_count^0-out_count^post1 == 0 /\ __const_256^0-__const_256^post1 == 0 /\ -offset^post1+offset^0 == 0 /\ -__const_429496^post1+__const_429496^0 == 0 /\ -tmp___014^post1+tmp___014^0 == 0 /\ -maxbits^post1+maxbits^0 == 0 /\ -free_ent^post1+free_ent^0 == 0 /\ -code31^post1+code31^0 == 0 /\ -disp9^post1+disp9^0 == 0 /\ -i45^post1+i45^0 == 0 /\ -tmp___024^post1+tmp___024^0 == 0 /\ -m122^post1+m122^0 == 0 /\ -__const_9^post1+__const_9^0 == 0 /\ -n40^post1+n40^0 == 0), cost: 1
   1: l0 -> l2 : __const_10000^0'=__const_10000^post2, __const_16^0'=__const_16^post2, __const_2147483647^0'=__const_2147483647^post2, __const_256^0'=__const_256^post2, __const_257^0'=__const_257^post2, __const_429496^0'=__const_429496^post2, __const_50^0'=__const_50^post2, __const_53^0'=__const_53^post2, __const_65536^0'=__const_65536^post2, __const_8388607^0'=__const_8388607^post2, __const_8^0'=__const_8^post2, __const_9^0'=__const_9^post2, apsim_bound11113^0'=apsim_bound11113^post2, apsim_incnt^0'=apsim_incnt^post2, bits33^0'=bits33^post2, block_compress^0'=block_compress^post2, bytes_out^0'=bytes_out^post2, c37^0'=c37^post2, c7^0'=c7^post2, checkpoint^0'=checkpoint^post2, clear_flg^0'=clear_flg^post2, code31^0'=code31^post2, count^0'=count^post2, disp9^0'=disp9^post2, ent8^0'=ent8^post2, exit_stat^0'=exit_stat^post2, fcode5^0'=fcode5^post2, free_ent^0'=free_ent^post2, hshift11^0'=hshift11^post2, hsize^0'=hsize^post2, hsize___019^0'=hsize___019^post2, hsize___027^0'=hsize___027^post2, hsize_reg10^0'=hsize_reg10^post2, i21^0'=i21^post2, i29^0'=i29^post2, i3^0'=i3^post2, i41^0'=i41^post2, i45^0'=i45^post2, i6^0'=i6^post2, in_count^0'=in_count^post2, incnt^0'=incnt^post2, m122^0'=m122^post2, m130^0'=m130^post2, maxbits^0'=maxbits^post2, maxcode^0'=maxcode^post2, maxmaxcode^0'=maxmaxcode^post2, n40^0'=n40^post2, n44^0'=n44^post2, n_bits^0'=n_bits^post2, offset^0'=offset^post2, out_count^0'=out_count^post2, r_off32^0'=r_off32^post2, rat26^0'=rat26^post2, ratio^0'=ratio^post2, ret_getbyte18^0'=ret_getbyte18^post2, ret_getbyte25^0'=ret_getbyte25^post2, seed2^0'=seed2^post2, tabort4^0'=tabort4^post2, tmp12^0'=tmp12^post2, tmp___014^0'=tmp___014^post2, tmp___017^0'=tmp___017^post2, tmp___024^0'=tmp___024^post2, tmp___115^0'=tmp___115^post2, (i3^0-i3^post2 == 0 /\ -tabort4^post2+tabort4^0 == 0 /\ -seed2^post2+seed2^0 == 0 /\ -tmp___014^post2+tmp___014^0 == 0 /\ -code31^post2+code31^0 == 0 /\ maxmaxcode^0-maxmaxcode^post2 == 0 /\ offset^0-offset^post2 == 0 /\ bytes_out^0-bytes_out^post2 == 0 /\ n40^0-n40^post2 == 0 /\ -n_bits^post2+n_bits^0 == 0 /\ count^0-count^post2 == 0 /\ hsize___027^0-hsize___027^post2 == 0 /\ ret_getbyte25^0-ret_getbyte25^post2 == 0 /\ -ent8^post2+ent8^0 == 0 /\ disp9^0-disp9^post2 == 0 /\ -r_off32^post2+r_off32^0 == 0 /\ -tmp___024^post2+tmp___024^0 == 0 /\ -ratio^post2+ratio^0 == 0 /\ 1-i21^0+i21^post2 == 0 /\ -c37^post2+c37^0 == 0 /\ checkpoint^0-checkpoint^post2 == 0 /\ -__const_16^post2+__const_16^0 == 0 /\ -free_ent^post2+free_ent^0 == 0 /\ 1-i21^0 <= 0 /\ -__const_9^post2+__const_9^0 == 0 /\ -hsize___019^post2+hsize___019^0 == 0 /\ __const_10000^0-__const_10000^post2 == 0 /\ n44^0-n44^post2 == 0 /\ -block_compress^post2+block_compress^0 == 0 /\ -incnt^post2+incnt^0 == 0 /\ __const_53^0-__const_53^post2 == 0 /\ -i45^post2+i45^0 == 0 /\ hshift11^0-hshift11^post2 == 0 /\ -m122^post2+m122^0 == 0 /\ -bits33^post2+bits33^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post2 == 0 /\ apsim_incnt^0-apsim_incnt^post2 == 0 /\ tmp12^0-tmp12^post2 == 0 /\ tmp___115^0-tmp___115^post2 == 0 /\ rat26^0-rat26^post2 == 0 /\ -__const_429496^post2+__const_429496^0 == 0 /\ -__const_65536^post2+__const_65536^0 == 0 /\ -i29^post2+i29^0 == 0 /\ -maxbits^post2+maxbits^0 == 0 /\ -maxcode^post2+maxcode^0 == 0 /\ -i41^post2+i41^0 == 0 /\ m130^0-m130^post2 == 0 /\ -c7^post2+c7^0 == 0 /\ -clear_flg^post2+clear_flg^0 == 0 /\ __const_257^0-__const_257^post2 == 0 /\ fcode5^0-fcode5^post2 == 0 /\ -__const_2147483647^post2+__const_2147483647^0 == 0 /\ -in_count^post2+in_count^0 == 0 /\ -apsim_bound11113^post2+apsim_bound11113^0 == 0 /\ i6^0-i6^post2 == 0 /\ exit_stat^0-exit_stat^post2 == 0 /\ -__const_8388607^post2+__const_8388607^0 == 0 /\ out_count^0-out_count^post2 == 0 /\ __const_256^0-__const_256^post2 == 0 /\ -hsize^post2+hsize^0 == 0 /\ tmp___017^0-tmp___017^post2 == 0 /\ __const_50^0-__const_50^post2 == 0 /\ __const_8^0-__const_8^post2 == 0 /\ -hsize_reg10^post2+hsize_reg10^0 == 0), cost: 1
   5: l1 -> l5 : __const_10000^0'=__const_10000^post6, __const_16^0'=__const_16^post6, __const_2147483647^0'=__const_2147483647^post6, __const_256^0'=__const_256^post6, __const_257^0'=__const_257^post6, __const_429496^0'=__const_429496^post6, __const_50^0'=__const_50^post6, __const_53^0'=__const_53^post6, __const_65536^0'=__const_65536^post6, __const_8388607^0'=__const_8388607^post6, __const_8^0'=__const_8^post6, __const_9^0'=__const_9^post6, apsim_bound11113^0'=apsim_bound11113^post6, apsim_incnt^0'=apsim_incnt^post6, bits33^0'=bits33^post6, block_compress^0'=block_compress^post6, bytes_out^0'=bytes_out^post6, c37^0'=c37^post6, c7^0'=c7^post6, checkpoint^0'=checkpoint^post6, clear_flg^0'=clear_flg^post6, code31^0'=code31^post6, count^0'=count^post6, disp9^0'=disp9^post6, ent8^0'=ent8^post6, exit_stat^0'=exit_stat^post6, fcode5^0'=fcode5^post6, free_ent^0'=free_ent^post6, hshift11^0'=hshift11^post6, hsize^0'=hsize^post6, hsize___019^0'=hsize___019^post6, hsize___027^0'=hsize___027^post6, hsize_reg10^0'=hsize_reg10^post6, i21^0'=i21^post6, i29^0'=i29^post6, i3^0'=i3^post6, i41^0'=i41^post6, i45^0'=i45^post6, i6^0'=i6^post6, in_count^0'=in_count^post6, incnt^0'=incnt^post6, m122^0'=m122^post6, m130^0'=m130^post6, maxbits^0'=maxbits^post6, maxcode^0'=maxcode^post6, maxmaxcode^0'=maxmaxcode^post6, n40^0'=n40^post6, n44^0'=n44^post6, n_bits^0'=n_bits^post6, offset^0'=offset^post6, out_count^0'=out_count^post6, r_off32^0'=r_off32^post6, rat26^0'=rat26^post6, ratio^0'=ratio^post6, ret_getbyte18^0'=ret_getbyte18^post6, ret_getbyte25^0'=ret_getbyte25^post6, seed2^0'=seed2^post6, tabort4^0'=tabort4^post6, tmp12^0'=tmp12^post6, tmp___014^0'=tmp___014^post6, tmp___017^0'=tmp___017^post6, tmp___024^0'=tmp___024^post6, tmp___115^0'=tmp___115^post6, (-incnt^post6+incnt^0 == 0 /\ -n_bits^post6+n_bits^0 == 0 /\ i21^0-i21^post6 == 0 /\ -m122^post6+m122^0 == 0 /\ -n44^post6+n44^0 == 0 /\ -i45^post6+i45^0 == 0 /\ checkpoint^0-checkpoint^post6 == 0 /\ exit_stat^0-exit_stat^post6 == 0 /\ -__const_10000^post6+__const_10000^0 == 0 /\ hsize___027^0-hsize___027^post6 == 0 /\ -__const_65536^post6+__const_65536^0 == 0 /\ __const_8^0-__const_8^post6 == 0 /\ __const_50^0-__const_50^post6 == 0 /\ -__const_429496^post6+__const_429496^0 == 0 /\ -maxcode^post6+maxcode^0 == 0 /\ -i41^post6+i41^0 == 0 /\ tmp___014^0-tmp___014^post6 == 0 /\ -tmp___017^post6+tmp___017^0 == 0 /\ -clear_flg^post6+clear_flg^0 == 0 /\ -ent8^post6+ent8^0 == 0 /\ maxmaxcode^0-maxmaxcode^post6 == 0 /\ -ret_getbyte18^post6+ret_getbyte18^0 == 0 /\ -in_count^post6+in_count^0 == 0 /\ -apsim_bound11113^post6+apsim_bound11113^0 == 0 /\ n40^0-n40^post6 == 0 /\ count^0-count^post6 == 0 /\ -fcode5^post6+fcode5^0 == 0 /\ -__const_8388607^post6+__const_8388607^0 == 0 /\ out_count^0-out_count^post6 == 0 /\ -hsize^post6+hsize^0 == 0 /\ tmp12^0-tmp12^post6 == 0 /\ -block_compress^post6+block_compress^0 == 0 /\ -seed2^post6+seed2^0 == 0 /\ -i29^post6+i29^0 == 0 /\ -code31^post6+code31^0 == 0 /\ offset^0-offset^post6 == 0 /\ __const_257^0-__const_257^post6 == 0 /\ bytes_out^0-bytes_out^post6 == 0 /\ -tabort4^post6+tabort4^0 == 0 /\ __const_9^0-__const_9^post6 == 0 /\ maxbits^0-maxbits^post6 == 0 /\ __const_16^0-__const_16^post6 == 0 /\ i6^0-i6^post6 == 0 /\ __const_256^0-__const_256^post6 == 0 /\ bits33^0-bits33^post6 == 0 /\ -r_off32^post6+r_off32^0 == 0 /\ -disp9^post6+disp9^0 == 0 /\ c37^0-c37^post6 == 0 /\ __const_53^0-__const_53^post6 == 0 /\ i3^0-i3^post6 == 0 /\ hsize___019^0-hsize___019^post6 == 0 /\ -tmp___024^post6+tmp___024^0 == 0 /\ -ratio^post6+ratio^0 == 0 /\ apsim_incnt^0-apsim_incnt^post6 == 0 /\ hshift11^0-hshift11^post6 == 0 /\ -free_ent^post6+free_ent^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post6 == 0 /\ -hsize_reg10^post6+hsize_reg10^0 == 0 /\ tmp___115^0-tmp___115^post6 == 0 /\ rat26^0-rat26^post6 == 0 /\ __const_2147483647^0-__const_2147483647^post6 == 0 /\ -c7^post6+c7^0 == 0 /\ m130^0-m130^post6 == 0), cost: 1
   2: l2 -> l0 : __const_10000^0'=__const_10000^post3, __const_16^0'=__const_16^post3, __const_2147483647^0'=__const_2147483647^post3, __const_256^0'=__const_256^post3, __const_257^0'=__const_257^post3, __const_429496^0'=__const_429496^post3, __const_50^0'=__const_50^post3, __const_53^0'=__const_53^post3, __const_65536^0'=__const_65536^post3, __const_8388607^0'=__const_8388607^post3, __const_8^0'=__const_8^post3, __const_9^0'=__const_9^post3, apsim_bound11113^0'=apsim_bound11113^post3, apsim_incnt^0'=apsim_incnt^post3, bits33^0'=bits33^post3, block_compress^0'=block_compress^post3, bytes_out^0'=bytes_out^post3, c37^0'=c37^post3, c7^0'=c7^post3, checkpoint^0'=checkpoint^post3, clear_flg^0'=clear_flg^post3, code31^0'=code31^post3, count^0'=count^post3, disp9^0'=disp9^post3, ent8^0'=ent8^post3, exit_stat^0'=exit_stat^post3, fcode5^0'=fcode5^post3, free_ent^0'=free_ent^post3, hshift11^0'=hshift11^post3, hsize^0'=hsize^post3, hsize___019^0'=hsize___019^post3, hsize___027^0'=hsize___027^post3, hsize_reg10^0'=hsize_reg10^post3, i21^0'=i21^post3, i29^0'=i29^post3, i3^0'=i3^post3, i41^0'=i41^post3, i45^0'=i45^post3, i6^0'=i6^post3, in_count^0'=in_count^post3, incnt^0'=incnt^post3, m122^0'=m122^post3, m130^0'=m130^post3, maxbits^0'=maxbits^post3, maxcode^0'=maxcode^post3, maxmaxcode^0'=maxmaxcode^post3, n40^0'=n40^post3, n44^0'=n44^post3, n_bits^0'=n_bits^post3, offset^0'=offset^post3, out_count^0'=out_count^post3, r_off32^0'=r_off32^post3, rat26^0'=rat26^post3, ratio^0'=ratio^post3, ret_getbyte18^0'=ret_getbyte18^post3, ret_getbyte25^0'=ret_getbyte25^post3, seed2^0'=seed2^post3, tabort4^0'=tabort4^post3, tmp12^0'=tmp12^post3, tmp___014^0'=tmp___014^post3, tmp___017^0'=tmp___017^post3, tmp___024^0'=tmp___024^post3, tmp___115^0'=tmp___115^post3, (i6^0-i6^post3 == 0 /\ __const_257^0-__const_257^post3 == 0 /\ -incnt^post3+incnt^0 == 0 /\ n44^0-n44^post3 == 0 /\ -bits33^post3+bits33^0 == 0 /\ -m122^post3+m122^0 == 0 /\ -__const_9^post3+__const_9^0 == 0 /\ -__const_65536^post3+__const_65536^0 == 0 /\ -__const_53^post3+__const_53^0 == 0 /\ __const_256^0-__const_256^post3 == 0 /\ -__const_429496^post3+__const_429496^0 == 0 /\ -i29^post3+i29^0 == 0 /\ maxcode^0-maxcode^post3 == 0 /\ -n40^post3+n40^0 == 0 /\ -maxbits^post3+maxbits^0 == 0 /\ -i41^post3+i41^0 == 0 /\ -i45^post3+i45^0 == 0 /\ -tmp___115^post3+tmp___115^0 == 0 /\ -i21^post3+i21^0 == 0 /\ bytes_out^0-bytes_out^post3 == 0 /\ i3^0-i3^post3 == 0 /\ -c7^post3+c7^0 == 0 /\ hshift11^0-hshift11^post3 == 0 /\ -clear_flg^post3+clear_flg^0 == 0 /\ apsim_incnt^0-apsim_incnt^post3 == 0 /\ tmp___017^0-tmp___017^post3 == 0 /\ -apsim_bound11113^post3+apsim_bound11113^0 == 0 /\ -in_count^post3+in_count^0 == 0 /\ c37^0-c37^post3 == 0 /\ -__const_8388607^post3+__const_8388607^0 == 0 /\ -block_compress^post3+block_compress^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post3 == 0 /\ -__const_2147483647^post3+__const_2147483647^0 == 0 /\ m130^0-m130^post3 == 0 /\ -hsize_reg10^post3+hsize_reg10^0 == 0 /\ -hsize^post3+hsize^0 == 0 /\ fcode5^0-fcode5^post3 == 0 /\ -rat26^post3+rat26^0 == 0 /\ -offset^post3+offset^0 == 0 /\ -tmp___014^post3+tmp___014^0 == 0 /\ checkpoint^0-checkpoint^post3 == 0 /\ __const_8^0-__const_8^post3 == 0 /\ -code31^post3+code31^0 == 0 /\ -seed2^post3+seed2^0 == 0 /\ r_off32^0-r_off32^post3 == 0 /\ tabort4^0-tabort4^post3 == 0 /\ hsize___027^0-hsize___027^post3 == 0 /\ out_count^0-out_count^post3 == 0 /\ exit_stat^0-exit_stat^post3 == 0 /\ __const_50^0-__const_50^post3 == 0 /\ __const_10000^0-__const_10000^post3 == 0 /\ -disp9^post3+disp9^0 == 0 /\ -ent8^post3+ent8^0 == 0 /\ -tmp___024^post3+tmp___024^0 == 0 /\ -ratio^post3+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post3 == 0 /\ -free_ent^post3+free_ent^0 == 0 /\ count^0-count^post3 == 0 /\ ret_getbyte18^0-ret_getbyte18^post3 == 0 /\ n_bits^0-n_bits^post3 == 0 /\ tmp12^0-tmp12^post3 == 0 /\ -__const_16^post3+__const_16^0 == 0 /\ -hsize___019^post3+hsize___019^0 == 0), cost: 1
   3: l3 -> l2 : __const_10000^0'=__const_10000^post4, __const_16^0'=__const_16^post4, __const_2147483647^0'=__const_2147483647^post4, __const_256^0'=__const_256^post4, __const_257^0'=__const_257^post4, __const_429496^0'=__const_429496^post4, __const_50^0'=__const_50^post4, __const_53^0'=__const_53^post4, __const_65536^0'=__const_65536^post4, __const_8388607^0'=__const_8388607^post4, __const_8^0'=__const_8^post4, __const_9^0'=__const_9^post4, apsim_bound11113^0'=apsim_bound11113^post4, apsim_incnt^0'=apsim_incnt^post4, bits33^0'=bits33^post4, block_compress^0'=block_compress^post4, bytes_out^0'=bytes_out^post4, c37^0'=c37^post4, c7^0'=c7^post4, checkpoint^0'=checkpoint^post4, clear_flg^0'=clear_flg^post4, code31^0'=code31^post4, count^0'=count^post4, disp9^0'=disp9^post4, ent8^0'=ent8^post4, exit_stat^0'=exit_stat^post4, fcode5^0'=fcode5^post4, free_ent^0'=free_ent^post4, hshift11^0'=hshift11^post4, hsize^0'=hsize^post4, hsize___019^0'=hsize___019^post4, hsize___027^0'=hsize___027^post4, hsize_reg10^0'=hsize_reg10^post4, i21^0'=i21^post4, i29^0'=i29^post4, i3^0'=i3^post4, i41^0'=i41^post4, i45^0'=i45^post4, i6^0'=i6^post4, in_count^0'=in_count^post4, incnt^0'=incnt^post4, m122^0'=m122^post4, m130^0'=m130^post4, maxbits^0'=maxbits^post4, maxcode^0'=maxcode^post4, maxmaxcode^0'=maxmaxcode^post4, n40^0'=n40^post4, n44^0'=n44^post4, n_bits^0'=n_bits^post4, offset^0'=offset^post4, out_count^0'=out_count^post4, r_off32^0'=r_off32^post4, rat26^0'=rat26^post4, ratio^0'=ratio^post4, ret_getbyte18^0'=ret_getbyte18^post4, ret_getbyte25^0'=ret_getbyte25^post4, seed2^0'=seed2^post4, tabort4^0'=tabort4^post4, tmp12^0'=tmp12^post4, tmp___014^0'=tmp___014^post4, tmp___017^0'=tmp___017^post4, tmp___024^0'=tmp___024^post4, tmp___115^0'=tmp___115^post4, (-__const_257^post4+__const_257^0 == 0 /\ -block_compress^post4+block_compress^0 == 0 /\ -__const_2147483647^post4+__const_2147483647^0 == 0 /\ -__const_16^post4+__const_16^0 == 0 /\ count^0-count^post4 == 0 /\ -free_ent^post4+free_ent^0 == 0 /\ -tmp___024^post4+tmp___024^0 == 0 /\ maxmaxcode^0-maxmaxcode^post4 == 0 /\ -tmp___115^post4+tmp___115^0 == 0 /\ -ent8^post4+ent8^0 == 0 /\ -__const_16^0-i21^0+i21^post4 == 0 /\ disp9^0-disp9^post4 == 0 /\ -seed2^post4+seed2^0 == 0 /\ n40^0-n40^post4 == 0 /\ -tmp___014^post4+tmp___014^0 == 0 /\ i6^0-i6^post4 == 0 /\ ret_getbyte25^0-ret_getbyte25^post4 == 0 /\ i3^0-i3^post4 == 0 /\ -code31^post4+code31^0 == 0 /\ checkpoint^0-checkpoint^post4 == 0 /\ tabort4^0-tabort4^post4 == 0 /\ c37^0-c37^post4 == 0 /\ -i29^post4+i29^0 == 0 /\ -i41^post4+i41^0 == 0 /\ -incnt^post4+incnt^0 == 0 /\ n44^0-n44^post4 == 0 /\ hsize___027^0-hsize___027^post4 == 0 /\ hshift11^0-hshift11^post4 == 0 /\ apsim_incnt^0-apsim_incnt^post4 == 0 /\ -__const_429496^post4+__const_429496^0 == 0 /\ -apsim_bound11113^post4+apsim_bound11113^0 == 0 /\ -in_count^post4+in_count^0 == 0 /\ rat26^0-rat26^post4 == 0 /\ -maxbits^post4+maxbits^0 == 0 /\ -maxcode^post4+maxcode^0 == 0 /\ -__const_9^post4+__const_9^0 == 0 /\ tmp___017^0-tmp___017^post4 == 0 /\ -hsize^post4+hsize^0 == 0 /\ -hsize_reg10^post4+hsize_reg10^0 == 0 /\ -hsize___019^post4+hsize___019^0 == 0 /\ -c7^post4+c7^0 == 0 /\ 1+i21^0 <= 0 /\ -__const_65536^post4+__const_65536^0 == 0 /\ __const_53^0-__const_53^post4 == 0 /\ -ratio^post4+ratio^0 == 0 /\ m130^0-m130^post4 == 0 /\ fcode5^0-fcode5^post4 == 0 /\ r_off32^0-r_off32^post4 == 0 /\ -__const_10000^post4+__const_10000^0 == 0 /\ tmp12^0-tmp12^post4 == 0 /\ ret_getbyte18^0-ret_getbyte18^post4 == 0 /\ -m122^post4+m122^0 == 0 /\ __const_8^0-__const_8^post4 == 0 /\ __const_256^0-__const_256^post4 == 0 /\ -__const_8388607^post4+__const_8388607^0 == 0 /\ -n_bits^post4+n_bits^0 == 0 /\ out_count^0-out_count^post4 == 0 /\ -i45^post4+i45^0 == 0 /\ -clear_flg^post4+clear_flg^0 == 0 /\ __const_50^0-__const_50^post4 == 0 /\ exit_stat^0-exit_stat^post4 == 0 /\ bytes_out^0-bytes_out^post4 == 0 /\ -bits33^post4+bits33^0 == 0 /\ -offset^post4+offset^0 == 0), cost: 1
   4: l3 -> l4 : __const_10000^0'=__const_10000^post5, __const_16^0'=__const_16^post5, __const_2147483647^0'=__const_2147483647^post5, __const_256^0'=__const_256^post5, __const_257^0'=__const_257^post5, __const_429496^0'=__const_429496^post5, __const_50^0'=__const_50^post5, __const_53^0'=__const_53^post5, __const_65536^0'=__const_65536^post5, __const_8388607^0'=__const_8388607^post5, __const_8^0'=__const_8^post5, __const_9^0'=__const_9^post5, apsim_bound11113^0'=apsim_bound11113^post5, apsim_incnt^0'=apsim_incnt^post5, bits33^0'=bits33^post5, block_compress^0'=block_compress^post5, bytes_out^0'=bytes_out^post5, c37^0'=c37^post5, c7^0'=c7^post5, checkpoint^0'=checkpoint^post5, clear_flg^0'=clear_flg^post5, code31^0'=code31^post5, count^0'=count^post5, disp9^0'=disp9^post5, ent8^0'=ent8^post5, exit_stat^0'=exit_stat^post5, fcode5^0'=fcode5^post5, free_ent^0'=free_ent^post5, hshift11^0'=hshift11^post5, hsize^0'=hsize^post5, hsize___019^0'=hsize___019^post5, hsize___027^0'=hsize___027^post5, hsize_reg10^0'=hsize_reg10^post5, i21^0'=i21^post5, i29^0'=i29^post5, i3^0'=i3^post5, i41^0'=i41^post5, i45^0'=i45^post5, i6^0'=i6^post5, in_count^0'=in_count^post5, incnt^0'=incnt^post5, m122^0'=m122^post5, m130^0'=m130^post5, maxbits^0'=maxbits^post5, maxcode^0'=maxcode^post5, maxmaxcode^0'=maxmaxcode^post5, n40^0'=n40^post5, n44^0'=n44^post5, n_bits^0'=n_bits^post5, offset^0'=offset^post5, out_count^0'=out_count^post5, r_off32^0'=r_off32^post5, rat26^0'=rat26^post5, ratio^0'=ratio^post5, ret_getbyte18^0'=ret_getbyte18^post5, ret_getbyte25^0'=ret_getbyte25^post5, seed2^0'=seed2^post5, tabort4^0'=tabort4^post5, tmp12^0'=tmp12^post5, tmp___014^0'=tmp___014^post5, tmp___017^0'=tmp___017^post5, tmp___024^0'=tmp___024^post5, tmp___115^0'=tmp___115^post5, (hsize___027^0-hsize___027^post5 == 0 /\ out_count^0-out_count^post5 == 0 /\ n40^0-n40^post5 == 0 /\ ret_getbyte25^0-ret_getbyte25^post5 == 0 /\ -in_count^post5+in_count^0 == 0 /\ i21^0-i21^post5 == 0 /\ -ratio^post5+ratio^0 == 0 /\ -ret_getbyte18^post5+ret_getbyte18^0 == 0 /\ -__const_8388607^post5+__const_8388607^0 == 0 /\ -hsize_reg10^post5+hsize_reg10^0 == 0 /\ -c7^post5+c7^0 == 0 /\ clear_flg^0-clear_flg^post5 == 0 /\ tmp12^0-tmp12^post5 == 0 /\ -hsize___019^post5+hsize___019^0 == 0 /\ -tabort4^post5+tabort4^0 == 0 /\ -r_off32^post5+r_off32^0 == 0 /\ -__const_429496^post5+__const_429496^0 == 0 /\ offset^0-offset^post5 == 0 /\ -tmp___014^post5+tmp___014^0 == 0 /\ -i21^0 <= 0 /\ -m122^post5+m122^0 == 0 /\ maxmaxcode^0-maxmaxcode^post5 == 0 /\ -disp9^post5+disp9^0 == 0 /\ -i45^post5+i45^0 == 0 /\ -code31^post5+code31^0 == 0 /\ -free_ent^post5+free_ent^0 == 0 /\ checkpoint^0-checkpoint^post5 == 0 /\ -tmp___024^post5+tmp___024^0 == 0 /\ count^0-count^post5 == 0 /\ -__const_9^post5+__const_9^0 == 0 /\ -__const_10000^post5+__const_10000^0 == 0 /\ apsim_incnt^0-apsim_incnt^post5 == 0 /\ m130^0-m130^post5 == 0 /\ hshift11^0-hshift11^post5 == 0 /\ __const_256^0-__const_256^post5 == 0 /\ -bits33^post5+bits33^0 == 0 /\ n44^0-n44^post5 == 0 /\ bytes_out^0-bytes_out^post5 == 0 /\ tmp___115^0-tmp___115^post5 == 0 /\ -n_bits^post5+n_bits^0 == 0 /\ -__const_2147483647^post5+__const_2147483647^0 == 0 /\ maxbits^0-maxbits^post5 == 0 /\ exit_stat^0-exit_stat^post5 == 0 /\ -hsize^post5+hsize^0 == 0 /\ c37^0-c37^post5 == 0 /\ -block_compress^post5+block_compress^0 == 0 /\ rat26^0-rat26^post5 == 0 /\ __const_50^0-__const_50^post5 == 0 /\ fcode5^0-fcode5^post5 == 0 /\ -maxcode^post5+maxcode^0 == 0 /\ -ent8^post5+ent8^0 == 0 /\ -i41^post5+i41^0 == 0 /\ -i29^post5+i29^0 == 0 /\ -seed2^post5+seed2^0 == 0 /\ i6^0-i6^post5 == 0 /\ -apsim_bound11113^post5+apsim_bound11113^0 == 0 /\ __const_53^0-__const_53^post5 == 0 /\ i3^0-i3^post5 == 0 /\ tmp___017^0-tmp___017^post5 == 0 /\ -__const_65536^post5+__const_65536^0 == 0 /\ __const_16^0-__const_16^post5 == 0 /\ -incnt^post5+incnt^0 == 0 /\ __const_8^0-__const_8^post5 == 0 /\ __const_257^0-__const_257^post5 == 0), cost: 1
 122: l4 -> l3 : __const_10000^0'=__const_10000^post123, __const_16^0'=__const_16^post123, __const_2147483647^0'=__const_2147483647^post123, __const_256^0'=__const_256^post123, __const_257^0'=__const_257^post123, __const_429496^0'=__const_429496^post123, __const_50^0'=__const_50^post123, __const_53^0'=__const_53^post123, __const_65536^0'=__const_65536^post123, __const_8388607^0'=__const_8388607^post123, __const_8^0'=__const_8^post123, __const_9^0'=__const_9^post123, apsim_bound11113^0'=apsim_bound11113^post123, apsim_incnt^0'=apsim_incnt^post123, bits33^0'=bits33^post123, block_compress^0'=block_compress^post123, bytes_out^0'=bytes_out^post123, c37^0'=c37^post123, c7^0'=c7^post123, checkpoint^0'=checkpoint^post123, clear_flg^0'=clear_flg^post123, code31^0'=code31^post123, count^0'=count^post123, disp9^0'=disp9^post123, ent8^0'=ent8^post123, exit_stat^0'=exit_stat^post123, fcode5^0'=fcode5^post123, free_ent^0'=free_ent^post123, hshift11^0'=hshift11^post123, hsize^0'=hsize^post123, hsize___019^0'=hsize___019^post123, hsize___027^0'=hsize___027^post123, hsize_reg10^0'=hsize_reg10^post123, i21^0'=i21^post123, i29^0'=i29^post123, i3^0'=i3^post123, i41^0'=i41^post123, i45^0'=i45^post123, i6^0'=i6^post123, in_count^0'=in_count^post123, incnt^0'=incnt^post123, m122^0'=m122^post123, m130^0'=m130^post123, maxbits^0'=maxbits^post123, maxcode^0'=maxcode^post123, maxmaxcode^0'=maxmaxcode^post123, n40^0'=n40^post123, n44^0'=n44^post123, n_bits^0'=n_bits^post123, offset^0'=offset^post123, out_count^0'=out_count^post123, r_off32^0'=r_off32^post123, rat26^0'=rat26^post123, ratio^0'=ratio^post123, ret_getbyte18^0'=ret_getbyte18^post123, ret_getbyte25^0'=ret_getbyte25^post123, seed2^0'=seed2^post123, tabort4^0'=tabort4^post123, tmp12^0'=tmp12^post123, tmp___014^0'=tmp___014^post123, tmp___017^0'=tmp___017^post123, tmp___024^0'=tmp___024^post123, tmp___115^0'=tmp___115^post123, (offset^0-offset^post123 == 0 /\ -hsize_reg10^post123+hsize_reg10^0 == 0 /\ n44^0-n44^post123 == 0 /\ i3^0-i3^post123 == 0 /\ bytes_out^0-bytes_out^post123 == 0 /\ -incnt^post123+incnt^0 == 0 /\ tmp12^0-tmp12^post123 == 0 /\ hsize___027^0-hsize___027^post123 == 0 /\ count^0-count^post123 == 0 /\ -r_off32^post123+r_off32^0 == 0 /\ -bits33^post123+bits33^0 == 0 /\ -hsize___019^post123+hsize___019^0 == 0 /\ -hsize^post123+hsize^0 == 0 /\ -m122^post123+m122^0 == 0 /\ -apsim_bound11113^post123+apsim_bound11113^0 == 0 /\ -__const_9^post123+__const_9^0 == 0 /\ -code31^post123+code31^0 == 0 /\ -maxbits^post123+maxbits^0 == 0 /\ tabort4^0-tabort4^post123 == 0 /\ __const_16^0-i21^0+i21^post123 == 0 /\ tmp___017^0-tmp___017^post123 == 0 /\ ret_getbyte25^0-ret_getbyte25^post123 == 0 /\ exit_stat^0-exit_stat^post123 == 0 /\ c37^0-c37^post123 == 0 /\ disp9^0-disp9^post123 == 0 /\ -__const_65536^post123+__const_65536^0 == 0 /\ maxcode^0-maxcode^post123 == 0 /\ -n40^post123+n40^0 == 0 /\ checkpoint^0-checkpoint^post123 == 0 /\ apsim_incnt^0-apsim_incnt^post123 == 0 /\ -tmp___115^post123+tmp___115^0 == 0 /\ -i29^post123+i29^0 == 0 /\ -block_compress^post123+block_compress^0 == 0 /\ -ratio^post123+ratio^0 == 0 /\ -__const_8388607^post123+__const_8388607^0 == 0 /\ -__const_16^post123+__const_16^0 == 0 /\ -n_bits^post123+n_bits^0 == 0 /\ m130^0-m130^post123 == 0 /\ -seed2^post123+seed2^0 == 0 /\ __const_10000^0-__const_10000^post123 == 0 /\ ret_getbyte18^0-ret_getbyte18^post123 == 0 /\ __const_53^0-__const_53^post123 == 0 /\ -ent8^post123+ent8^0 == 0 /\ __const_8^0-__const_8^post123 == 0 /\ -__const_429496^post123+__const_429496^0 == 0 /\ hshift11^0-hshift11^post123 == 0 /\ -i45^post123+i45^0 == 0 /\ -i41^post123+i41^0 == 0 /\ -free_ent^post123+free_ent^0 == 0 /\ rat26^0-rat26^post123 == 0 /\ i6^0-i6^post123 == 0 /\ maxmaxcode^0-maxmaxcode^post123 == 0 /\ -tmp___024^post123+tmp___024^0 == 0 /\ __const_257^0-__const_257^post123 == 0 /\ out_count^0-out_count^post123 == 0 /\ -clear_flg^post123+clear_flg^0 == 0 /\ -in_count^post123+in_count^0 == 0 /\ __const_256^0-__const_256^post123 == 0 /\ fcode5^0-fcode5^post123 == 0 /\ -tmp___014^post123+tmp___014^0 == 0 /\ __const_50^0-__const_50^post123 == 0 /\ -__const_2147483647^post123+__const_2147483647^0 == 0 /\ -c7^post123+c7^0 == 0), cost: 1
 120: l5 -> l25 : __const_10000^0'=__const_10000^post121, __const_16^0'=__const_16^post121, __const_2147483647^0'=__const_2147483647^post121, __const_256^0'=__const_256^post121, __const_257^0'=__const_257^post121, __const_429496^0'=__const_429496^post121, __const_50^0'=__const_50^post121, __const_53^0'=__const_53^post121, __const_65536^0'=__const_65536^post121, __const_8388607^0'=__const_8388607^post121, __const_8^0'=__const_8^post121, __const_9^0'=__const_9^post121, apsim_bound11113^0'=apsim_bound11113^post121, apsim_incnt^0'=apsim_incnt^post121, bits33^0'=bits33^post121, block_compress^0'=block_compress^post121, bytes_out^0'=bytes_out^post121, c37^0'=c37^post121, c7^0'=c7^post121, checkpoint^0'=checkpoint^post121, clear_flg^0'=clear_flg^post121, code31^0'=code31^post121, count^0'=count^post121, disp9^0'=disp9^post121, ent8^0'=ent8^post121, exit_stat^0'=exit_stat^post121, fcode5^0'=fcode5^post121, free_ent^0'=free_ent^post121, hshift11^0'=hshift11^post121, hsize^0'=hsize^post121, hsize___019^0'=hsize___019^post121, hsize___027^0'=hsize___027^post121, hsize_reg10^0'=hsize_reg10^post121, i21^0'=i21^post121, i29^0'=i29^post121, i3^0'=i3^post121, i41^0'=i41^post121, i45^0'=i45^post121, i6^0'=i6^post121, in_count^0'=in_count^post121, incnt^0'=incnt^post121, m122^0'=m122^post121, m130^0'=m130^post121, maxbits^0'=maxbits^post121, maxcode^0'=maxcode^post121, maxmaxcode^0'=maxmaxcode^post121, n40^0'=n40^post121, n44^0'=n44^post121, n_bits^0'=n_bits^post121, offset^0'=offset^post121, out_count^0'=out_count^post121, r_off32^0'=r_off32^post121, rat26^0'=rat26^post121, ratio^0'=ratio^post121, ret_getbyte18^0'=ret_getbyte18^post121, ret_getbyte25^0'=ret_getbyte25^post121, seed2^0'=seed2^post121, tabort4^0'=tabort4^post121, tmp12^0'=tmp12^post121, tmp___014^0'=tmp___014^post121, tmp___017^0'=tmp___017^post121, tmp___024^0'=tmp___024^post121, tmp___115^0'=tmp___115^post121, (-i21^post121+i21^0 == 0 /\ -c7^post121+c7^0 == 0 /\ __const_50^0-__const_50^post121 == 0 /\ __const_256^0-__const_256^post121 == 0 /\ -clear_flg^post121+clear_flg^0 == 0 /\ __const_53^0-__const_53^post121 == 0 /\ -tmp___014^post121+tmp___014^0 == 0 /\ -tmp___024^post121+tmp___024^0 == 0 /\ -seed2^post121+seed2^0 == 0 /\ -tmp___115^post121+tmp___115^0 == 0 /\ -block_compress^post121+block_compress^0 == 0 /\ count^0-count^post121 == 0 /\ -ratio^post121+ratio^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post121 == 0 /\ tabort4^0-tabort4^post121 == 0 /\ -offset^post121+offset^0 == 0 /\ m122^0-m122^post121 == 0 /\ hsize___027^0-hsize___027^post121 == 0 /\ -apsim_incnt^post121+apsim_incnt^0 == 0 /\ hshift11^0-hshift11^post121 == 0 /\ -hsize^post121+hsize^0 == 0 /\ -code31^post121+code31^0 == 0 /\ -incnt^post121+incnt^0 == 0 /\ __const_257^0-__const_257^post121 == 0 /\ -ent8^post121+ent8^0 == 0 /\ -__const_429496^post121+__const_429496^0 == 0 /\ bytes_out^0-bytes_out^post121 == 0 /\ i3^0-i3^post121 == 0 /\ -__const_65536^post121+__const_65536^0 == 0 /\ -m130^post121+m130^0 == 0 /\ -i45^post121+i45^0 == 0 /\ r_off32^0-r_off32^post121 == 0 /\ out_count^0-out_count^post121 == 0 /\ exit_stat^0-exit_stat^post121 == 0 /\ -n40^post121+n40^0 == 0 /\ maxmaxcode^0-maxmaxcode^post121 == 0 /\ -in_count^post121+in_count^0 == 0 /\ -__const_9^post121+__const_9^0 == 0 /\ maxcode^0-maxcode^post121 == 0 /\ tmp___017^0-tmp___017^post121 == 0 /\ apsim_bound11113^0-apsim_bound11113^post121 == 0 /\ fcode5^0-fcode5^post121 == 0 /\ c37^0-c37^post121 == 0 /\ -__const_2147483647^post121+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post121 == 0 /\ -hsize_reg10^post121+hsize_reg10^0 == 0 /\ i6^0-i6^post121 == 0 /\ -rat26^post121+rat26^0 == 0 /\ -hsize___019^post121+hsize___019^0 == 0 /\ __const_16^0-__const_16^post121 == 0 /\ bits33^0-bits33^post121 == 0 /\ __const_10000^0-__const_10000^post121 == 0 /\ n44^0-n44^post121 == 0 /\ -__const_8^post121+__const_8^0 == 0 /\ -__const_8388607^post121+__const_8388607^0 == 0 /\ -disp9^post121+disp9^0 == 0 /\ -free_ent^post121+free_ent^0 == 0 /\ -ret_getbyte18^post121+ret_getbyte18^0 == 0 /\ -i29^post121+i29^0 == 0 /\ -i41^post121+i41^0 == 0 /\ checkpoint^0-checkpoint^post121 == 0 /\ -maxbits^post121+maxbits^0 == 0 /\ incnt^0 <= 0 /\ n_bits^0-n_bits^post121 == 0), cost: 1
 121: l5 -> l71 : __const_10000^0'=__const_10000^post122, __const_16^0'=__const_16^post122, __const_2147483647^0'=__const_2147483647^post122, __const_256^0'=__const_256^post122, __const_257^0'=__const_257^post122, __const_429496^0'=__const_429496^post122, __const_50^0'=__const_50^post122, __const_53^0'=__const_53^post122, __const_65536^0'=__const_65536^post122, __const_8388607^0'=__const_8388607^post122, __const_8^0'=__const_8^post122, __const_9^0'=__const_9^post122, apsim_bound11113^0'=apsim_bound11113^post122, apsim_incnt^0'=apsim_incnt^post122, bits33^0'=bits33^post122, block_compress^0'=block_compress^post122, bytes_out^0'=bytes_out^post122, c37^0'=c37^post122, c7^0'=c7^post122, checkpoint^0'=checkpoint^post122, clear_flg^0'=clear_flg^post122, code31^0'=code31^post122, count^0'=count^post122, disp9^0'=disp9^post122, ent8^0'=ent8^post122, exit_stat^0'=exit_stat^post122, fcode5^0'=fcode5^post122, free_ent^0'=free_ent^post122, hshift11^0'=hshift11^post122, hsize^0'=hsize^post122, hsize___019^0'=hsize___019^post122, hsize___027^0'=hsize___027^post122, hsize_reg10^0'=hsize_reg10^post122, i21^0'=i21^post122, i29^0'=i29^post122, i3^0'=i3^post122, i41^0'=i41^post122, i45^0'=i45^post122, i6^0'=i6^post122, in_count^0'=in_count^post122, incnt^0'=incnt^post122, m122^0'=m122^post122, m130^0'=m130^post122, maxbits^0'=maxbits^post122, maxcode^0'=maxcode^post122, maxmaxcode^0'=maxmaxcode^post122, n40^0'=n40^post122, n44^0'=n44^post122, n_bits^0'=n_bits^post122, offset^0'=offset^post122, out_count^0'=out_count^post122, r_off32^0'=r_off32^post122, rat26^0'=rat26^post122, ratio^0'=ratio^post122, ret_getbyte18^0'=ret_getbyte18^post122, ret_getbyte25^0'=ret_getbyte25^post122, seed2^0'=seed2^post122, tabort4^0'=tabort4^post122, tmp12^0'=tmp12^post122, tmp___014^0'=tmp___014^post122, tmp___017^0'=tmp___017^post122, tmp___024^0'=tmp___024^post122, tmp___115^0'=tmp___115^post122, (m130^0-m130^post122 == 0 /\ -i45^post122+i45^0 == 0 /\ -i29^post122+i29^0 == 0 /\ -__const_8388607^post122+__const_8388607^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post122 == 0 /\ apsim_incnt^0-apsim_incnt^post122 == 0 /\ -i41^post122+i41^0 == 0 /\ i6^0-i6^post122 == 0 /\ m122^0-m122^post122 == 0 /\ n44^0-n44^post122 == 0 /\ count^0-count^post122 == 0 /\ __const_256^0-__const_256^post122 == 0 /\ disp9^0-disp9^post122 == 0 /\ -__const_429496^post122+__const_429496^0 == 0 /\ -__const_2147483647^post122+__const_2147483647^0 == 0 /\ -__const_257^post122+__const_257^0 == 0 /\ tmp12^0-tmp12^post122 == 0 /\ -tmp___014^post122+tmp___014^0 == 0 /\ -maxbits^post122+maxbits^0 == 0 /\ -c7^post122+c7^0 == 0 /\ bytes_out^0-bytes_out^post122 == 0 /\ in_count^0-in_count^post122 == 0 /\ i3^0-i3^post122 == 0 /\ -free_ent^post122+free_ent^0 == 0 /\ -hsize_reg10^post122+hsize_reg10^0 == 0 /\ hsize___027^0-hsize___027^post122 == 0 /\ -hsize___019^post122+hsize___019^0 == 0 /\ c37^0-c37^post122 == 0 /\ -i21^post122+i21^0 == 0 /\ __const_53^0-__const_53^post122 == 0 /\ -__const_9^post122+__const_9^0 == 0 /\ tabort4^0-tabort4^post122 == 0 /\ -tmp___024^post122+tmp___024^0 == 0 /\ -tmp___115^post122+tmp___115^0 == 0 /\ r_off32^0-r_off32^post122 == 0 /\ -__const_8^post122+__const_8^0 == 0 /\ hshift11^0-hshift11^post122 == 0 /\ __const_50^0-__const_50^post122 == 0 /\ checkpoint^0-checkpoint^post122 == 0 /\ apsim_bound11113^post122 == 0 /\ -rat26^post122+rat26^0 == 0 /\ __const_10000^0-__const_10000^post122 == 0 /\ -n_bits^post122+n_bits^0 == 0 /\ -clear_flg^post122+clear_flg^0 == 0 /\ -offset^post122+offset^0 == 0 /\ out_count^0-out_count^post122 == 0 /\ fcode5^0-fcode5^post122 == 0 /\ -__const_65536^post122+__const_65536^0 == 0 /\ maxcode^0-maxcode^post122 == 0 /\ -block_compress^post122+block_compress^0 == 0 /\ -ent8^post122+ent8^0 == 0 /\ -ratio^post122+ratio^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post122 == 0 /\ -n40^post122+n40^0 == 0 /\ -__const_16^post122+__const_16^0 == 0 /\ exit_stat^0-exit_stat^post122 == 0 /\ -seed2^post122+seed2^0 == 0 /\ -hsize^post122+hsize^0 == 0 /\ -incnt^post122+incnt^0 == 0 /\ bits33^0-bits33^post122 == 0 /\ 1-incnt^0 <= 0 /\ tmp___017^0-tmp___017^post122 == 0 /\ -code31^post122+code31^0 == 0 /\ maxmaxcode^0-maxmaxcode^post122 == 0), cost: 1
   6: l6 -> l7 : __const_10000^0'=__const_10000^post7, __const_16^0'=__const_16^post7, __const_2147483647^0'=__const_2147483647^post7, __const_256^0'=__const_256^post7, __const_257^0'=__const_257^post7, __const_429496^0'=__const_429496^post7, __const_50^0'=__const_50^post7, __const_53^0'=__const_53^post7, __const_65536^0'=__const_65536^post7, __const_8388607^0'=__const_8388607^post7, __const_8^0'=__const_8^post7, __const_9^0'=__const_9^post7, apsim_bound11113^0'=apsim_bound11113^post7, apsim_incnt^0'=apsim_incnt^post7, bits33^0'=bits33^post7, block_compress^0'=block_compress^post7, bytes_out^0'=bytes_out^post7, c37^0'=c37^post7, c7^0'=c7^post7, checkpoint^0'=checkpoint^post7, clear_flg^0'=clear_flg^post7, code31^0'=code31^post7, count^0'=count^post7, disp9^0'=disp9^post7, ent8^0'=ent8^post7, exit_stat^0'=exit_stat^post7, fcode5^0'=fcode5^post7, free_ent^0'=free_ent^post7, hshift11^0'=hshift11^post7, hsize^0'=hsize^post7, hsize___019^0'=hsize___019^post7, hsize___027^0'=hsize___027^post7, hsize_reg10^0'=hsize_reg10^post7, i21^0'=i21^post7, i29^0'=i29^post7, i3^0'=i3^post7, i41^0'=i41^post7, i45^0'=i45^post7, i6^0'=i6^post7, in_count^0'=in_count^post7, incnt^0'=incnt^post7, m122^0'=m122^post7, m130^0'=m130^post7, maxbits^0'=maxbits^post7, maxcode^0'=maxcode^post7, maxmaxcode^0'=maxmaxcode^post7, n40^0'=n40^post7, n44^0'=n44^post7, n_bits^0'=n_bits^post7, offset^0'=offset^post7, out_count^0'=out_count^post7, r_off32^0'=r_off32^post7, rat26^0'=rat26^post7, ratio^0'=ratio^post7, ret_getbyte18^0'=ret_getbyte18^post7, ret_getbyte25^0'=ret_getbyte25^post7, seed2^0'=seed2^post7, tabort4^0'=tabort4^post7, tmp12^0'=tmp12^post7, tmp___014^0'=tmp___014^post7, tmp___017^0'=tmp___017^post7, tmp___024^0'=tmp___024^post7, tmp___115^0'=tmp___115^post7, (out_count^0-out_count^post7 == 0 /\ __const_9^0-__const_9^post7 == 0 /\ maxcode^0-maxcode^post7 == 0 /\ apsim_bound11113^0-apsim_bound11113^post7 == 0 /\ i6^post7-i6^0+disp9^0 == 0 /\ -i21^post7+i21^0 == 0 /\ c37^0-c37^post7 == 0 /\ __const_257^0-__const_257^post7 == 0 /\ offset^0-offset^post7 == 0 /\ maxmaxcode^0-maxmaxcode^post7 == 0 /\ -checkpoint^post7+checkpoint^0 == 0 /\ -bytes_out^post7+bytes_out^0 == 0 /\ c7^0-c7^post7 == 0 /\ hsize___027^0-hsize___027^post7 == 0 /\ -i3^post7+i3^0 == 0 /\ tmp___115^0-tmp___115^post7 == 0 /\ i29^0-i29^post7 == 0 /\ ret_getbyte25^0-ret_getbyte25^post7 == 0 /\ -incnt^post7+incnt^0 == 0 /\ __const_16^0-__const_16^post7 == 0 /\ m130^0-m130^post7 == 0 /\ -r_off32^post7+r_off32^0 == 0 /\ bits33^0-bits33^post7 == 0 /\ -seed2^post7+seed2^0 == 0 /\ -__const_50^post7+__const_50^0 == 0 /\ -fcode5^post7+fcode5^0 == 0 /\ hsize___019^0-hsize___019^post7 == 0 /\ n44^0-n44^post7 == 0 /\ code31^0-code31^post7 == 0 /\ -n40^post7+n40^0 == 0 /\ -i41^post7+i41^0 == 0 /\ -count^post7+count^0 == 0 /\ hshift11^0-hshift11^post7 == 0 /\ apsim_incnt^0-apsim_incnt^post7 == 0 /\ i45^0-i45^post7 == 0 /\ __const_65536^0-__const_65536^post7 == 0 /\ -ret_getbyte18^post7+ret_getbyte18^0 == 0 /\ -ratio^post7+ratio^0 == 0 /\ tmp12^0-tmp12^post7 == 0 /\ free_ent^0-free_ent^post7 == 0 /\ rat26^0-rat26^post7 == 0 /\ -clear_flg^post7+clear_flg^0 == 0 /\ -in_count^post7+in_count^0 == 0 /\ -__const_10000^post7+__const_10000^0 == 0 /\ -__const_2147483647^post7+__const_2147483647^0 == 0 /\ -__const_256^post7+__const_256^0 == 0 /\ -hsize_reg10^post7+hsize_reg10^0 == 0 /\ -__const_8388607^post7+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post7 == 0 /\ __const_8^0-__const_8^post7 == 0 /\ tmp___017^0-tmp___017^post7 == 0 /\ -hsize^post7+hsize^0 == 0 /\ block_compress^0-block_compress^post7 == 0 /\ -n_bits^post7+n_bits^0 == 0 /\ -tmp___014^post7+tmp___014^0 == 0 /\ m122^0-m122^post7 == 0 /\ -tabort4^post7+tabort4^0 == 0 /\ -maxbits^post7+maxbits^0 == 0 /\ ent8^0-ent8^post7 == 0 /\ -disp9^post7+disp9^0 == 0 /\ -exit_stat^post7+exit_stat^0 == 0 /\ __const_429496^0-__const_429496^post7 == 0 /\ -tmp___024^post7+tmp___024^0 == 0), cost: 1
 103: l7 -> l65 : __const_10000^0'=__const_10000^post104, __const_16^0'=__const_16^post104, __const_2147483647^0'=__const_2147483647^post104, __const_256^0'=__const_256^post104, __const_257^0'=__const_257^post104, __const_429496^0'=__const_429496^post104, __const_50^0'=__const_50^post104, __const_53^0'=__const_53^post104, __const_65536^0'=__const_65536^post104, __const_8388607^0'=__const_8388607^post104, __const_8^0'=__const_8^post104, __const_9^0'=__const_9^post104, apsim_bound11113^0'=apsim_bound11113^post104, apsim_incnt^0'=apsim_incnt^post104, bits33^0'=bits33^post104, block_compress^0'=block_compress^post104, bytes_out^0'=bytes_out^post104, c37^0'=c37^post104, c7^0'=c7^post104, checkpoint^0'=checkpoint^post104, clear_flg^0'=clear_flg^post104, code31^0'=code31^post104, count^0'=count^post104, disp9^0'=disp9^post104, ent8^0'=ent8^post104, exit_stat^0'=exit_stat^post104, fcode5^0'=fcode5^post104, free_ent^0'=free_ent^post104, hshift11^0'=hshift11^post104, hsize^0'=hsize^post104, hsize___019^0'=hsize___019^post104, hsize___027^0'=hsize___027^post104, hsize_reg10^0'=hsize_reg10^post104, i21^0'=i21^post104, i29^0'=i29^post104, i3^0'=i3^post104, i41^0'=i41^post104, i45^0'=i45^post104, i6^0'=i6^post104, in_count^0'=in_count^post104, incnt^0'=incnt^post104, m122^0'=m122^post104, m130^0'=m130^post104, maxbits^0'=maxbits^post104, maxcode^0'=maxcode^post104, maxmaxcode^0'=maxmaxcode^post104, n40^0'=n40^post104, n44^0'=n44^post104, n_bits^0'=n_bits^post104, offset^0'=offset^post104, out_count^0'=out_count^post104, r_off32^0'=r_off32^post104, rat26^0'=rat26^post104, ratio^0'=ratio^post104, ret_getbyte18^0'=ret_getbyte18^post104, ret_getbyte25^0'=ret_getbyte25^post104, seed2^0'=seed2^post104, tabort4^0'=tabort4^post104, tmp12^0'=tmp12^post104, tmp___014^0'=tmp___014^post104, tmp___017^0'=tmp___017^post104, tmp___024^0'=tmp___024^post104, tmp___115^0'=tmp___115^post104, (-i41^post104+i41^0 == 0 /\ __const_257^0-__const_257^post104 == 0 /\ -seed2^post104+seed2^0 == 0 /\ checkpoint^0-checkpoint^post104 == 0 /\ -code31^post104+code31^0 == 0 /\ -ret_getbyte25^post104+ret_getbyte25^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post104 == 0 /\ count^0-count^post104 == 0 /\ __const_256^0-__const_256^post104 == 0 /\ disp9^0-disp9^post104 == 0 /\ n44^0-n44^post104 == 0 /\ m130^0-m130^post104 == 0 /\ -ent8^post104+ent8^0 == 0 /\ -i29^post104+i29^0 == 0 /\ i3^0-i3^post104 == 0 /\ -maxbits^post104+maxbits^0 == 0 /\ -tmp___024^post104+tmp___024^0 == 0 /\ -free_ent^post104+free_ent^0 == 0 /\ -ratio^post104+ratio^0 == 0 /\ -__const_2147483647^post104+__const_2147483647^0 == 0 /\ -i21^post104+i21^0 == 0 /\ i6^0-i6^post104 == 0 /\ m122^0-m122^post104 == 0 /\ tmp___017^0-tmp___017^post104 == 0 /\ -clear_flg^post104+clear_flg^0 == 0 /\ hsize___027^0-hsize___027^post104 == 0 /\ -hsize_reg10^post104+hsize_reg10^0 == 0 /\ -tmp___014^post104+tmp___014^0 == 0 /\ -c7^post104+c7^0 == 0 /\ -hsize___019^post104+hsize___019^0 == 0 /\ -offset^post104+offset^0 == 0 /\ -i45^post104+i45^0 == 0 /\ __const_53^0-__const_53^post104 == 0 /\ hshift11^0-hshift11^post104 == 0 /\ apsim_incnt^0-apsim_incnt^post104 == 0 /\ -incnt^post104+incnt^0 == 0 /\ r_off32^0-r_off32^post104 == 0 /\ -bits33^post104+bits33^0 == 0 /\ -apsim_bound11113^post104+apsim_bound11113^0 == 0 /\ -i6^0 <= 0 /\ -__const_9^post104+__const_9^0 == 0 /\ -__const_429496^post104+__const_429496^0 == 0 /\ out_count^0-out_count^post104 == 0 /\ __const_10000^0-__const_10000^post104 == 0 /\ -__const_65536^post104+__const_65536^0 == 0 /\ -rat26^post104+rat26^0 == 0 /\ fcode5^0-fcode5^post104 == 0 /\ -n40^post104+n40^0 == 0 /\ maxcode^0-maxcode^post104 == 0 /\ -in_count^post104+in_count^0 == 0 /\ bytes_out^0-bytes_out^post104 == 0 /\ n_bits^0-n_bits^post104 == 0 /\ -tmp___115^post104+tmp___115^0 == 0 /\ -__const_16^post104+__const_16^0 == 0 /\ __const_8^0-__const_8^post104 == 0 /\ tmp12^0-tmp12^post104 == 0 /\ exit_stat^0-exit_stat^post104 == 0 /\ __const_50^0-__const_50^post104 == 0 /\ tabort4^0-tabort4^post104 == 0 /\ -__const_8388607^post104+__const_8388607^0 == 0 /\ -block_compress^post104+block_compress^0 == 0 /\ -hsize^post104+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post104 == 0 /\ c37^0-c37^post104 == 0), cost: 1
 104: l7 -> l65 : __const_10000^0'=__const_10000^post105, __const_16^0'=__const_16^post105, __const_2147483647^0'=__const_2147483647^post105, __const_256^0'=__const_256^post105, __const_257^0'=__const_257^post105, __const_429496^0'=__const_429496^post105, __const_50^0'=__const_50^post105, __const_53^0'=__const_53^post105, __const_65536^0'=__const_65536^post105, __const_8388607^0'=__const_8388607^post105, __const_8^0'=__const_8^post105, __const_9^0'=__const_9^post105, apsim_bound11113^0'=apsim_bound11113^post105, apsim_incnt^0'=apsim_incnt^post105, bits33^0'=bits33^post105, block_compress^0'=block_compress^post105, bytes_out^0'=bytes_out^post105, c37^0'=c37^post105, c7^0'=c7^post105, checkpoint^0'=checkpoint^post105, clear_flg^0'=clear_flg^post105, code31^0'=code31^post105, count^0'=count^post105, disp9^0'=disp9^post105, ent8^0'=ent8^post105, exit_stat^0'=exit_stat^post105, fcode5^0'=fcode5^post105, free_ent^0'=free_ent^post105, hshift11^0'=hshift11^post105, hsize^0'=hsize^post105, hsize___019^0'=hsize___019^post105, hsize___027^0'=hsize___027^post105, hsize_reg10^0'=hsize_reg10^post105, i21^0'=i21^post105, i29^0'=i29^post105, i3^0'=i3^post105, i41^0'=i41^post105, i45^0'=i45^post105, i6^0'=i6^post105, in_count^0'=in_count^post105, incnt^0'=incnt^post105, m122^0'=m122^post105, m130^0'=m130^post105, maxbits^0'=maxbits^post105, maxcode^0'=maxcode^post105, maxmaxcode^0'=maxmaxcode^post105, n40^0'=n40^post105, n44^0'=n44^post105, n_bits^0'=n_bits^post105, offset^0'=offset^post105, out_count^0'=out_count^post105, r_off32^0'=r_off32^post105, rat26^0'=rat26^post105, ratio^0'=ratio^post105, ret_getbyte18^0'=ret_getbyte18^post105, ret_getbyte25^0'=ret_getbyte25^post105, seed2^0'=seed2^post105, tabort4^0'=tabort4^post105, tmp12^0'=tmp12^post105, tmp___014^0'=tmp___014^post105, tmp___017^0'=tmp___017^post105, tmp___024^0'=tmp___024^post105, tmp___115^0'=tmp___115^post105, (n44^0-n44^post105 == 0 /\ apsim_incnt^0-apsim_incnt^post105 == 0 /\ __const_16^0-__const_16^post105 == 0 /\ hshift11^0-hshift11^post105 == 0 /\ -maxbits^post105+maxbits^0 == 0 /\ -incnt^post105+incnt^0 == 0 /\ maxcode^0-maxcode^post105 == 0 /\ -m122^post105+m122^0 == 0 /\ -n40^post105+n40^0 == 0 /\ -__const_2147483647^post105+__const_2147483647^0 == 0 /\ free_ent^0-free_ent^post105 == 0 /\ -hsize___027^post105+hsize___027^0 == 0 /\ -hsize_reg10^post105+hsize_reg10^0 == 0 /\ -__const_8388607^post105+__const_8388607^0 == 0 /\ __const_65536^0-__const_65536^post105 == 0 /\ -__const_10000^post105+__const_10000^0 == 0 /\ __const_256^0-__const_256^post105 == 0 /\ exit_stat^0-exit_stat^post105 == 0 /\ c37^0-c37^post105 == 0 /\ tmp___017^0-tmp___017^post105 == 0 /\ -n_bits^post105+n_bits^0 == 0 /\ 1+i6^0 <= 0 /\ -disp9^post105+disp9^0 == 0 /\ -i29^post105+i29^0 == 0 /\ __const_53^0-__const_53^post105 == 0 /\ m130^0-m130^post105 == 0 /\ code31^0-code31^post105 == 0 /\ ret_getbyte25^0-ret_getbyte25^post105 == 0 /\ -in_count^post105+in_count^0 == 0 /\ -i41^post105+i41^0 == 0 /\ __const_8^0-__const_8^post105 == 0 /\ c7^0-c7^post105 == 0 /\ rat26^0-rat26^post105 == 0 /\ tabort4^0-tabort4^post105 == 0 /\ -tmp___014^post105+tmp___014^0 == 0 /\ -ratio^post105+ratio^0 == 0 /\ -seed2^post105+seed2^0 == 0 /\ -bytes_out^post105+bytes_out^0 == 0 /\ -clear_flg^post105+clear_flg^0 == 0 /\ __const_257^0-__const_257^post105 == 0 /\ ent8^0-ent8^post105 == 0 /\ -tmp___024^post105+tmp___024^0 == 0 /\ -tmp___115^post105+tmp___115^0 == 0 /\ hsize___019^0-hsize___019^post105 == 0 /\ i21^0-i21^post105 == 0 /\ -checkpoint^post105+checkpoint^0 == 0 /\ maxmaxcode^0-maxmaxcode^post105 == 0 /\ __const_9^0-__const_9^post105 == 0 /\ ret_getbyte18^0-ret_getbyte18^post105 == 0 /\ -hsize^post105+hsize^0 == 0 /\ -__const_50^post105+__const_50^0 == 0 /\ out_count^0-out_count^post105 == 0 /\ -block_compress^post105+block_compress^0 == 0 /\ -fcode5^post105+fcode5^0 == 0 /\ bits33^0-bits33^post105 == 0 /\ -__const_429496^post105+__const_429496^0 == 0 /\ -r_off32^post105+r_off32^0 == 0 /\ -i6^0+i6^post105-hsize_reg10^0 == 0 /\ -apsim_bound11113^post105+apsim_bound11113^0 == 0 /\ count^0-count^post105 == 0 /\ -i3^post105+i3^0 == 0 /\ -offset^post105+offset^0 == 0 /\ tmp12^0-tmp12^post105 == 0 /\ i45^0-i45^post105 == 0), cost: 1
   7: l8 -> l4 : __const_10000^0'=__const_10000^post8, __const_16^0'=__const_16^post8, __const_2147483647^0'=__const_2147483647^post8, __const_256^0'=__const_256^post8, __const_257^0'=__const_257^post8, __const_429496^0'=__const_429496^post8, __const_50^0'=__const_50^post8, __const_53^0'=__const_53^post8, __const_65536^0'=__const_65536^post8, __const_8388607^0'=__const_8388607^post8, __const_8^0'=__const_8^post8, __const_9^0'=__const_9^post8, apsim_bound11113^0'=apsim_bound11113^post8, apsim_incnt^0'=apsim_incnt^post8, bits33^0'=bits33^post8, block_compress^0'=block_compress^post8, bytes_out^0'=bytes_out^post8, c37^0'=c37^post8, c7^0'=c7^post8, checkpoint^0'=checkpoint^post8, clear_flg^0'=clear_flg^post8, code31^0'=code31^post8, count^0'=count^post8, disp9^0'=disp9^post8, ent8^0'=ent8^post8, exit_stat^0'=exit_stat^post8, fcode5^0'=fcode5^post8, free_ent^0'=free_ent^post8, hshift11^0'=hshift11^post8, hsize^0'=hsize^post8, hsize___019^0'=hsize___019^post8, hsize___027^0'=hsize___027^post8, hsize_reg10^0'=hsize_reg10^post8, i21^0'=i21^post8, i29^0'=i29^post8, i3^0'=i3^post8, i41^0'=i41^post8, i45^0'=i45^post8, i6^0'=i6^post8, in_count^0'=in_count^post8, incnt^0'=incnt^post8, m122^0'=m122^post8, m130^0'=m130^post8, maxbits^0'=maxbits^post8, maxcode^0'=maxcode^post8, maxmaxcode^0'=maxmaxcode^post8, n40^0'=n40^post8, n44^0'=n44^post8, n_bits^0'=n_bits^post8, offset^0'=offset^post8, out_count^0'=out_count^post8, r_off32^0'=r_off32^post8, rat26^0'=rat26^post8, ratio^0'=ratio^post8, ret_getbyte18^0'=ret_getbyte18^post8, ret_getbyte25^0'=ret_getbyte25^post8, seed2^0'=seed2^post8, tabort4^0'=tabort4^post8, tmp12^0'=tmp12^post8, tmp___014^0'=tmp___014^post8, tmp___017^0'=tmp___017^post8, tmp___024^0'=tmp___024^post8, tmp___115^0'=tmp___115^post8, (__const_16^0+i21^post8-hsize___019^post8 == 0 /\ r_off32^0-r_off32^post8 == 0 /\ c7^0-c7^post8 == 0 /\ 1+m122^post8 == 0 /\ __const_8388607^0-__const_8388607^post8 == 0 /\ __const_257^0-__const_257^post8 == 0 /\ -i41^post8+i41^0 == 0 /\ -i3^post8+i3^0 == 0 /\ hshift11^0-__const_8^0+hshift11^post8 == 0 /\ out_count^0-out_count^post8 == 0 /\ ret_getbyte25^0-ret_getbyte25^post8 == 0 /\ __const_256^0-__const_256^post8 == 0 /\ ent8^0-ent8^post8 == 0 /\ code31^0-code31^post8 == 0 /\ i29^0-i29^post8 == 0 /\ apsim_bound11113^0-apsim_bound11113^post8 == 0 /\ -maxbits^post8+maxbits^0 == 0 /\ -clear_flg^post8+clear_flg^0 == 0 /\ -bytes_out^post8+bytes_out^0 == 0 /\ i45^0-i45^post8 == 0 /\ maxcode^0-maxcode^post8 == 0 /\ -disp9^post8+disp9^0 == 0 /\ tmp12^0-tmp12^post8 == 0 /\ -tmp___024^post8+tmp___024^0 == 0 /\ __const_9^0-__const_9^post8 == 0 /\ hsize_reg10^post8-hsize^0 == 0 /\ -ratio^post8+ratio^0 == 0 /\ -exit_stat^post8+exit_stat^0 == 0 /\ tabort4^0-tabort4^post8 == 0 /\ __const_65536^0-fcode5^0 <= 0 /\ maxmaxcode^0-maxmaxcode^post8 == 0 /\ -tmp___014^post8+tmp___014^0 == 0 /\ bits33^0-bits33^post8 == 0 /\ -__const_2147483647^post8+__const_2147483647^0 == 0 /\ hsize___027^0-hsize___027^post8 == 0 /\ -offset^post8+offset^0 == 0 /\ -n_bits^post8+n_bits^0 == 0 /\ -incnt^post8+incnt^0 == 0 /\ apsim_incnt^0-apsim_incnt^post8 == 0 /\ __const_65536^0-__const_65536^post8 == 0 /\ free_ent^0-free_ent^post8 == 0 /\ n44^0-n44^post8 == 0 /\ __const_10000^0-__const_10000^post8 == 0 /\ -__const_429496^post8+__const_429496^0 == 0 /\ -m130^post8+m130^0 == 0 /\ -checkpoint^post8+checkpoint^0 == 0 /\ -in_count^post8+in_count^0 == 0 /\ -block_compress^post8+block_compress^0 == 0 /\ -__const_50^post8+__const_50^0 == 0 /\ -count^post8+count^0 == 0 /\ -fcode5^post8+fcode5^0 == 0 /\ -hsize^post8+hsize^0 == 0 /\ i6^0-i6^post8 == 0 /\ -hsize_reg10^post8+hsize___019^post8 == 0 /\ -n40^post8+n40^0 == 0 /\ -ret_getbyte18^post8+ret_getbyte18^0 == 0 /\ -tmp___115^post8+tmp___115^0 == 0 /\ c37^0-c37^post8 == 0 /\ __const_8^0-__const_8^post8 == 0 /\ tmp___017^0-tmp___017^post8 == 0 /\ rat26^0-rat26^post8 == 0 /\ -__const_16^post8+__const_16^0 == 0 /\ -seed2^post8+seed2^0 == 0 /\ __const_53^0-__const_53^post8 == 0), cost: 1
   8: l8 -> l9 : __const_10000^0'=__const_10000^post9, __const_16^0'=__const_16^post9, __const_2147483647^0'=__const_2147483647^post9, __const_256^0'=__const_256^post9, __const_257^0'=__const_257^post9, __const_429496^0'=__const_429496^post9, __const_50^0'=__const_50^post9, __const_53^0'=__const_53^post9, __const_65536^0'=__const_65536^post9, __const_8388607^0'=__const_8388607^post9, __const_8^0'=__const_8^post9, __const_9^0'=__const_9^post9, apsim_bound11113^0'=apsim_bound11113^post9, apsim_incnt^0'=apsim_incnt^post9, bits33^0'=bits33^post9, block_compress^0'=block_compress^post9, bytes_out^0'=bytes_out^post9, c37^0'=c37^post9, c7^0'=c7^post9, checkpoint^0'=checkpoint^post9, clear_flg^0'=clear_flg^post9, code31^0'=code31^post9, count^0'=count^post9, disp9^0'=disp9^post9, ent8^0'=ent8^post9, exit_stat^0'=exit_stat^post9, fcode5^0'=fcode5^post9, free_ent^0'=free_ent^post9, hshift11^0'=hshift11^post9, hsize^0'=hsize^post9, hsize___019^0'=hsize___019^post9, hsize___027^0'=hsize___027^post9, hsize_reg10^0'=hsize_reg10^post9, i21^0'=i21^post9, i29^0'=i29^post9, i3^0'=i3^post9, i41^0'=i41^post9, i45^0'=i45^post9, i6^0'=i6^post9, in_count^0'=in_count^post9, incnt^0'=incnt^post9, m122^0'=m122^post9, m130^0'=m130^post9, maxbits^0'=maxbits^post9, maxcode^0'=maxcode^post9, maxmaxcode^0'=maxmaxcode^post9, n40^0'=n40^post9, n44^0'=n44^post9, n_bits^0'=n_bits^post9, offset^0'=offset^post9, out_count^0'=out_count^post9, r_off32^0'=r_off32^post9, rat26^0'=rat26^post9, ratio^0'=ratio^post9, ret_getbyte18^0'=ret_getbyte18^post9, ret_getbyte25^0'=ret_getbyte25^post9, seed2^0'=seed2^post9, tabort4^0'=tabort4^post9, tmp12^0'=tmp12^post9, tmp___014^0'=tmp___014^post9, tmp___017^0'=tmp___017^post9, tmp___024^0'=tmp___024^post9, tmp___115^0'=tmp___115^post9, (0 == 0 /\ tabort4^0-tabort4^post9 == 0 /\ ent8^0-ent8^post9 == 0 /\ -hsize^post9+hsize^0 == 0 /\ -hsize___019^post9+hsize___019^0 == 0 /\ -__const_2147483647^post9+__const_2147483647^0 == 0 /\ -__const_257^post9+__const_257^0 == 0 /\ -maxbits^post9+maxbits^0 == 0 /\ -m130^post9+m130^0 == 0 /\ -n40^post9+n40^0 == 0 /\ 1-__const_65536^0+fcode5^0 <= 0 /\ __const_8388607^0-__const_8388607^post9 == 0 /\ r_off32^0-r_off32^post9 == 0 /\ -__const_16^post9+__const_16^0 == 0 /\ hsize___027^0-hsize___027^post9 == 0 /\ -code31^post9+code31^0 == 0 /\ -maxmaxcode^post9+maxmaxcode^0 == 0 /\ exit_stat^0-exit_stat^post9 == 0 /\ -__const_65536^post9+__const_65536^0 == 0 /\ __const_50^0-__const_50^post9 == 0 /\ -1-hshift11^0+hshift11^post9 == 0 /\ -incnt^post9+incnt^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post9 == 0 /\ apsim_bound11113^0-apsim_bound11113^post9 == 0 /\ out_count^0-out_count^post9 == 0 /\ i45^0-i45^post9 == 0 /\ tmp12^0-tmp12^post9 == 0 /\ -ratio^post9+ratio^0 == 0 /\ -rat26^post9+rat26^0 == 0 /\ __const_9^0-__const_9^post9 == 0 /\ -in_count^post9+in_count^0 == 0 /\ -__const_8^post9+__const_8^0 == 0 /\ bits33^0-bits33^post9 == 0 /\ n44^0-n44^post9 == 0 /\ i6^0-i6^post9 == 0 /\ __const_10000^0-__const_10000^post9 == 0 /\ -block_compress^post9+block_compress^0 == 0 /\ -bytes_out^post9+bytes_out^0 == 0 /\ -tmp___014^post9+tmp___014^0 == 0 /\ n_bits^0-n_bits^post9 == 0 /\ apsim_incnt^0-apsim_incnt^post9 == 0 /\ -disp9^post9+disp9^0 == 0 /\ -count^post9+count^0 == 0 /\ -i29^post9+i29^0 == 0 /\ -tmp___024^post9+tmp___024^0 == 0 /\ -seed2^post9+seed2^0 == 0 /\ -tmp___115^post9+tmp___115^0 == 0 /\ -i3^post9+i3^0 == 0 /\ -i41^post9+i41^0 == 0 /\ c37^0-c37^post9 == 0 /\ m122^0-m122^post9 == 0 /\ maxcode^0-maxcode^post9 == 0 /\ checkpoint^0-checkpoint^post9 == 0 /\ __const_256^0-__const_256^post9 == 0 /\ -i21^post9+i21^0 == 0 /\ tmp___017^0-tmp___017^post9 == 0 /\ __const_53^0-__const_53^post9 == 0 /\ free_ent^0-free_ent^post9 == 0 /\ -offset^post9+offset^0 == 0 /\ -__const_429496^post9+__const_429496^0 == 0 /\ -c7^post9+c7^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post9 == 0 /\ -hsize_reg10^post9+hsize_reg10^0 == 0 /\ -clear_flg^post9+clear_flg^0 == 0), cost: 1
 115: l9 -> l8 : __const_10000^0'=__const_10000^post116, __const_16^0'=__const_16^post116, __const_2147483647^0'=__const_2147483647^post116, __const_256^0'=__const_256^post116, __const_257^0'=__const_257^post116, __const_429496^0'=__const_429496^post116, __const_50^0'=__const_50^post116, __const_53^0'=__const_53^post116, __const_65536^0'=__const_65536^post116, __const_8388607^0'=__const_8388607^post116, __const_8^0'=__const_8^post116, __const_9^0'=__const_9^post116, apsim_bound11113^0'=apsim_bound11113^post116, apsim_incnt^0'=apsim_incnt^post116, bits33^0'=bits33^post116, block_compress^0'=block_compress^post116, bytes_out^0'=bytes_out^post116, c37^0'=c37^post116, c7^0'=c7^post116, checkpoint^0'=checkpoint^post116, clear_flg^0'=clear_flg^post116, code31^0'=code31^post116, count^0'=count^post116, disp9^0'=disp9^post116, ent8^0'=ent8^post116, exit_stat^0'=exit_stat^post116, fcode5^0'=fcode5^post116, free_ent^0'=free_ent^post116, hshift11^0'=hshift11^post116, hsize^0'=hsize^post116, hsize___019^0'=hsize___019^post116, hsize___027^0'=hsize___027^post116, hsize_reg10^0'=hsize_reg10^post116, i21^0'=i21^post116, i29^0'=i29^post116, i3^0'=i3^post116, i41^0'=i41^post116, i45^0'=i45^post116, i6^0'=i6^post116, in_count^0'=in_count^post116, incnt^0'=incnt^post116, m122^0'=m122^post116, m130^0'=m130^post116, maxbits^0'=maxbits^post116, maxcode^0'=maxcode^post116, maxmaxcode^0'=maxmaxcode^post116, n40^0'=n40^post116, n44^0'=n44^post116, n_bits^0'=n_bits^post116, offset^0'=offset^post116, out_count^0'=out_count^post116, r_off32^0'=r_off32^post116, rat26^0'=rat26^post116, ratio^0'=ratio^post116, ret_getbyte18^0'=ret_getbyte18^post116, ret_getbyte25^0'=ret_getbyte25^post116, seed2^0'=seed2^post116, tabort4^0'=tabort4^post116, tmp12^0'=tmp12^post116, tmp___014^0'=tmp___014^post116, tmp___017^0'=tmp___017^post116, tmp___024^0'=tmp___024^post116, tmp___115^0'=tmp___115^post116, (code31^0-code31^post116 == 0 /\ hsize___019^0-hsize___019^post116 == 0 /\ apsim_incnt^0-apsim_incnt^post116 == 0 /\ -__const_8388607^post116+__const_8388607^0 == 0 /\ -ratio^post116+ratio^0 == 0 /\ -fcode5^post116+fcode5^0 == 0 /\ -hshift11^post116+hshift11^0 == 0 /\ __const_65536^0-__const_65536^post116 == 0 /\ -disp9^post116+disp9^0 == 0 /\ -count^post116+count^0 == 0 /\ __const_16^0-__const_16^post116 == 0 /\ m130^0-m130^post116 == 0 /\ n44^0-n44^post116 == 0 /\ c37^0-c37^post116 == 0 /\ -exit_stat^post116+exit_stat^0 == 0 /\ -maxbits^post116+maxbits^0 == 0 /\ -bytes_out^post116+bytes_out^0 == 0 /\ tmp___017^0-tmp___017^post116 == 0 /\ -i6^post116+i6^0 == 0 /\ __const_257^0-__const_257^post116 == 0 /\ -__const_256^post116+__const_256^0 == 0 /\ c7^0-c7^post116 == 0 /\ -ret_getbyte25^post116+ret_getbyte25^0 == 0 /\ r_off32^0-r_off32^post116 == 0 /\ __const_8^0-__const_8^post116 == 0 /\ -checkpoint^post116+checkpoint^0 == 0 /\ hsize___027^0-hsize___027^post116 == 0 /\ -hsize_reg10^post116+hsize_reg10^0 == 0 /\ -__const_10000^post116+__const_10000^0 == 0 /\ i29^0-i29^post116 == 0 /\ -offset^post116+offset^0 == 0 /\ __const_53^0-__const_53^post116 == 0 /\ -m122^post116+m122^0 == 0 /\ -i3^post116+i3^0 == 0 /\ -i41^post116+i41^0 == 0 /\ -tmp___024^post116+tmp___024^0 == 0 /\ -tmp___115^post116+tmp___115^0 == 0 /\ free_ent^0-free_ent^post116 == 0 /\ -incnt^post116+incnt^0 == 0 /\ out_count^0-out_count^post116 == 0 /\ -n_bits^post116+n_bits^0 == 0 /\ n40^0-n40^post116 == 0 /\ -__const_50^post116+__const_50^0 == 0 /\ -__const_429496^post116+__const_429496^0 == 0 /\ -tmp___014^post116+tmp___014^0 == 0 /\ -maxcode^post116+maxcode^0 == 0 /\ i45^0-i45^post116 == 0 /\ -seed2^post116+seed2^0 == 0 /\ ent8^0-ent8^post116 == 0 /\ -in_count^post116+in_count^0 == 0 /\ -apsim_bound11113^post116+apsim_bound11113^0 == 0 /\ -clear_flg^post116+clear_flg^0 == 0 /\ -i21^post116+i21^0 == 0 /\ __const_9^0-__const_9^post116 == 0 /\ -__const_2147483647^post116+__const_2147483647^0 == 0 /\ maxmaxcode^0-maxmaxcode^post116 == 0 /\ tmp12^0-tmp12^post116 == 0 /\ -hsize^post116+hsize^0 == 0 /\ -rat26^post116+rat26^0 == 0 /\ bits33^0-bits33^post116 == 0 /\ ret_getbyte18^0-ret_getbyte18^post116 == 0 /\ tabort4^0-tabort4^post116 == 0 /\ -block_compress^post116+block_compress^0 == 0), cost: 1
   9: l10 -> l11 : __const_10000^0'=__const_10000^post10, __const_16^0'=__const_16^post10, __const_2147483647^0'=__const_2147483647^post10, __const_256^0'=__const_256^post10, __const_257^0'=__const_257^post10, __const_429496^0'=__const_429496^post10, __const_50^0'=__const_50^post10, __const_53^0'=__const_53^post10, __const_65536^0'=__const_65536^post10, __const_8388607^0'=__const_8388607^post10, __const_8^0'=__const_8^post10, __const_9^0'=__const_9^post10, apsim_bound11113^0'=apsim_bound11113^post10, apsim_incnt^0'=apsim_incnt^post10, bits33^0'=bits33^post10, block_compress^0'=block_compress^post10, bytes_out^0'=bytes_out^post10, c37^0'=c37^post10, c7^0'=c7^post10, checkpoint^0'=checkpoint^post10, clear_flg^0'=clear_flg^post10, code31^0'=code31^post10, count^0'=count^post10, disp9^0'=disp9^post10, ent8^0'=ent8^post10, exit_stat^0'=exit_stat^post10, fcode5^0'=fcode5^post10, free_ent^0'=free_ent^post10, hshift11^0'=hshift11^post10, hsize^0'=hsize^post10, hsize___019^0'=hsize___019^post10, hsize___027^0'=hsize___027^post10, hsize_reg10^0'=hsize_reg10^post10, i21^0'=i21^post10, i29^0'=i29^post10, i3^0'=i3^post10, i41^0'=i41^post10, i45^0'=i45^post10, i6^0'=i6^post10, in_count^0'=in_count^post10, incnt^0'=incnt^post10, m122^0'=m122^post10, m130^0'=m130^post10, maxbits^0'=maxbits^post10, maxcode^0'=maxcode^post10, maxmaxcode^0'=maxmaxcode^post10, n40^0'=n40^post10, n44^0'=n44^post10, n_bits^0'=n_bits^post10, offset^0'=offset^post10, out_count^0'=out_count^post10, r_off32^0'=r_off32^post10, rat26^0'=rat26^post10, ratio^0'=ratio^post10, ret_getbyte18^0'=ret_getbyte18^post10, ret_getbyte25^0'=ret_getbyte25^post10, seed2^0'=seed2^post10, tabort4^0'=tabort4^post10, tmp12^0'=tmp12^post10, tmp___014^0'=tmp___014^post10, tmp___017^0'=tmp___017^post10, tmp___024^0'=tmp___024^post10, tmp___115^0'=tmp___115^post10, (tmp___017^0-tmp___017^post10 == 0 /\ -tmp___115^post10+tmp___115^0 == 0 /\ free_ent^0-free_ent^post10 == 0 /\ -clear_flg^post10+clear_flg^0 == 0 /\ -fcode5^post10+fcode5^0 == 0 /\ __const_53^0-__const_53^post10 == 0 /\ tmp___024^0-tmp___024^post10 == 0 /\ -i21^post10+i21^0 == 0 /\ tabort4^0-tabort4^post10 == 0 /\ -c7^post10+c7^0 == 0 /\ -block_compress^post10+block_compress^0 == 0 /\ -ratio^post10+ratio^0 == 0 /\ -__const_16^post10+__const_16^0 == 0 /\ -i45^post10+i45^0 == 0 /\ -incnt^post10+incnt^0 == 0 /\ m122^0-m122^post10 == 0 /\ -tmp12^post10+tmp12^0 == 0 /\ -__const_429496^post10+__const_429496^0 == 0 /\ -seed2^post10+seed2^0 == 0 /\ -code31^post10+code31^0 == 0 /\ ent8^0-ent8^post10 == 0 /\ -apsim_incnt^post10+apsim_incnt^0 == 0 /\ -offset^post10+offset^0 == 0 /\ bytes_out^0-bytes_out^post10 == 0 /\ __const_10000^0-__const_10000^post10 == 0 /\ -__const_65536^post10+__const_65536^0 == 0 /\ -m130^post10+m130^0 == 0 /\ r_off32^0-r_off32^post10 == 0 /\ exit_stat^0-exit_stat^post10 == 0 /\ out_count^0-out_count^post10 == 0 /\ -n40^post10+n40^0 == 0 /\ maxcode^0-maxcode^post10 == 0 /\ apsim_bound11113^0-apsim_bound11113^post10 == 0 /\ -in_count^post10+in_count^0 == 0 /\ -__const_9^post10+__const_9^0 == 0 /\ c37^0-c37^post10 == 0 /\ -hsize_reg10^post10+hsize_reg10^0 == 0 /\ -__const_8388607^post10+__const_8388607^0 == 0 /\ -hsize___019^post10+hsize___019^0 == 0 /\ -hsize^post10+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post10 == 0 /\ hsize___027^0-hsize___027^post10 == 0 /\ -tmp___014^post10+tmp___014^0 == 0 /\ __const_16^0+i29^post10-i29^0 == 0 /\ -ret_getbyte25^post10+ret_getbyte25^0 == 0 /\ -__const_2147483647^post10+__const_2147483647^0 == 0 /\ -rat26^post10+rat26^0 == 0 /\ -i41^post10+i41^0 == 0 /\ __const_50^0-__const_50^post10 == 0 /\ -__const_8^post10+__const_8^0 == 0 /\ n44^0-n44^post10 == 0 /\ bits33^0-bits33^post10 == 0 /\ ret_getbyte18^0-ret_getbyte18^post10 == 0 /\ __const_256^0-__const_256^post10 == 0 /\ __const_257^0-__const_257^post10 == 0 /\ hshift11^0-hshift11^post10 == 0 /\ checkpoint^0-checkpoint^post10 == 0 /\ i6^0-i6^post10 == 0 /\ -maxbits^post10+maxbits^0 == 0 /\ count^0-count^post10 == 0 /\ i3^0-i3^post10 == 0 /\ n_bits^0-n_bits^post10 == 0 /\ -disp9^post10+disp9^0 == 0), cost: 1
  74: l11 -> l13 : __const_10000^0'=__const_10000^post75, __const_16^0'=__const_16^post75, __const_2147483647^0'=__const_2147483647^post75, __const_256^0'=__const_256^post75, __const_257^0'=__const_257^post75, __const_429496^0'=__const_429496^post75, __const_50^0'=__const_50^post75, __const_53^0'=__const_53^post75, __const_65536^0'=__const_65536^post75, __const_8388607^0'=__const_8388607^post75, __const_8^0'=__const_8^post75, __const_9^0'=__const_9^post75, apsim_bound11113^0'=apsim_bound11113^post75, apsim_incnt^0'=apsim_incnt^post75, bits33^0'=bits33^post75, block_compress^0'=block_compress^post75, bytes_out^0'=bytes_out^post75, c37^0'=c37^post75, c7^0'=c7^post75, checkpoint^0'=checkpoint^post75, clear_flg^0'=clear_flg^post75, code31^0'=code31^post75, count^0'=count^post75, disp9^0'=disp9^post75, ent8^0'=ent8^post75, exit_stat^0'=exit_stat^post75, fcode5^0'=fcode5^post75, free_ent^0'=free_ent^post75, hshift11^0'=hshift11^post75, hsize^0'=hsize^post75, hsize___019^0'=hsize___019^post75, hsize___027^0'=hsize___027^post75, hsize_reg10^0'=hsize_reg10^post75, i21^0'=i21^post75, i29^0'=i29^post75, i3^0'=i3^post75, i41^0'=i41^post75, i45^0'=i45^post75, i6^0'=i6^post75, in_count^0'=in_count^post75, incnt^0'=incnt^post75, m122^0'=m122^post75, m130^0'=m130^post75, maxbits^0'=maxbits^post75, maxcode^0'=maxcode^post75, maxmaxcode^0'=maxmaxcode^post75, n40^0'=n40^post75, n44^0'=n44^post75, n_bits^0'=n_bits^post75, offset^0'=offset^post75, out_count^0'=out_count^post75, r_off32^0'=r_off32^post75, rat26^0'=rat26^post75, ratio^0'=ratio^post75, ret_getbyte18^0'=ret_getbyte18^post75, ret_getbyte25^0'=ret_getbyte25^post75, seed2^0'=seed2^post75, tabort4^0'=tabort4^post75, tmp12^0'=tmp12^post75, tmp___014^0'=tmp___014^post75, tmp___017^0'=tmp___017^post75, tmp___024^0'=tmp___024^post75, tmp___115^0'=tmp___115^post75, (m130^0-m130^post75 == 0 /\ -i45^post75+i45^0 == 0 /\ -__const_429496^post75+__const_429496^0 == 0 /\ apsim_incnt^0-apsim_incnt^post75 == 0 /\ -__const_8388607^post75+__const_8388607^0 == 0 /\ hshift11^0-hshift11^post75 == 0 /\ -i41^post75+i41^0 == 0 /\ tmp___115^0-tmp___115^post75 == 0 /\ free_ent^0-free_ent^post75 == 0 /\ i29^post75-__const_16^0-i29^0 == 0 /\ __const_65536^0-__const_65536^post75 == 0 /\ n44^0-n44^post75 == 0 /\ tmp___014^0-tmp___014^post75 == 0 /\ __const_50^0-__const_50^post75 == 0 /\ -clear_flg^post75+clear_flg^0 == 0 /\ -c7^post75+c7^0 == 0 /\ i21^0-i21^post75 == 0 /\ code31^0-code31^post75 == 0 /\ -bytes_out^post75+bytes_out^0 == 0 /\ -maxbits^post75+maxbits^0 == 0 /\ -ret_getbyte18^post75+ret_getbyte18^0 == 0 /\ -tmp___024^post75+tmp___024^0 == 0 /\ exit_stat^0-exit_stat^post75 == 0 /\ -hsize_reg10^post75+hsize_reg10^0 == 0 /\ c37^0-c37^post75 == 0 /\ __const_16^0-__const_16^post75 == 0 /\ __const_8^0-__const_8^post75 == 0 /\ -__const_10000^post75+__const_10000^0 == 0 /\ rat26^0-rat26^post75 == 0 /\ ret_getbyte25^0-ret_getbyte25^post75 == 0 /\ -tabort4^post75+tabort4^0 == 0 /\ -__const_2147483647^post75+__const_2147483647^0 == 0 /\ seed2^0-seed2^post75 == 0 /\ -m122^post75+m122^0 == 0 /\ __const_257^0-__const_257^post75 == 0 /\ -incnt^post75+incnt^0 == 0 /\ n40^0-n40^post75 == 0 /\ hsize___019^0-hsize___019^post75 == 0 /\ -n_bits^post75+n_bits^0 == 0 /\ out_count^0-out_count^post75 == 0 /\ 1+i29^0 <= 0 /\ -i6^post75+i6^0 == 0 /\ ent8^0-ent8^post75 == 0 /\ -in_count^post75+in_count^0 == 0 /\ -count^post75+count^0 == 0 /\ -disp9^post75+disp9^0 == 0 /\ -r_off32^post75+r_off32^0 == 0 /\ -fcode5^post75+fcode5^0 == 0 /\ -block_compress^post75+block_compress^0 == 0 /\ -maxcode^post75+maxcode^0 == 0 /\ -apsim_bound11113^post75+apsim_bound11113^0 == 0 /\ -tmp___017^post75+tmp___017^0 == 0 /\ -ratio^post75+ratio^0 == 0 /\ offset^0-offset^post75 == 0 /\ __const_53^0-__const_53^post75 == 0 /\ i3^0-i3^post75 == 0 /\ -hsize^post75+hsize^0 == 0 /\ tmp12^0-tmp12^post75 == 0 /\ -hsize___027^post75+hsize___027^0 == 0 /\ __const_9^0-__const_9^post75 == 0 /\ -checkpoint^post75+checkpoint^0 == 0 /\ -__const_256^post75+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post75 == 0 /\ bits33^0-bits33^post75 == 0), cost: 1
  75: l11 -> l10 : __const_10000^0'=__const_10000^post76, __const_16^0'=__const_16^post76, __const_2147483647^0'=__const_2147483647^post76, __const_256^0'=__const_256^post76, __const_257^0'=__const_257^post76, __const_429496^0'=__const_429496^post76, __const_50^0'=__const_50^post76, __const_53^0'=__const_53^post76, __const_65536^0'=__const_65536^post76, __const_8388607^0'=__const_8388607^post76, __const_8^0'=__const_8^post76, __const_9^0'=__const_9^post76, apsim_bound11113^0'=apsim_bound11113^post76, apsim_incnt^0'=apsim_incnt^post76, bits33^0'=bits33^post76, block_compress^0'=block_compress^post76, bytes_out^0'=bytes_out^post76, c37^0'=c37^post76, c7^0'=c7^post76, checkpoint^0'=checkpoint^post76, clear_flg^0'=clear_flg^post76, code31^0'=code31^post76, count^0'=count^post76, disp9^0'=disp9^post76, ent8^0'=ent8^post76, exit_stat^0'=exit_stat^post76, fcode5^0'=fcode5^post76, free_ent^0'=free_ent^post76, hshift11^0'=hshift11^post76, hsize^0'=hsize^post76, hsize___019^0'=hsize___019^post76, hsize___027^0'=hsize___027^post76, hsize_reg10^0'=hsize_reg10^post76, i21^0'=i21^post76, i29^0'=i29^post76, i3^0'=i3^post76, i41^0'=i41^post76, i45^0'=i45^post76, i6^0'=i6^post76, in_count^0'=in_count^post76, incnt^0'=incnt^post76, m122^0'=m122^post76, m130^0'=m130^post76, maxbits^0'=maxbits^post76, maxcode^0'=maxcode^post76, maxmaxcode^0'=maxmaxcode^post76, n40^0'=n40^post76, n44^0'=n44^post76, n_bits^0'=n_bits^post76, offset^0'=offset^post76, out_count^0'=out_count^post76, r_off32^0'=r_off32^post76, rat26^0'=rat26^post76, ratio^0'=ratio^post76, ret_getbyte18^0'=ret_getbyte18^post76, ret_getbyte25^0'=ret_getbyte25^post76, seed2^0'=seed2^post76, tabort4^0'=tabort4^post76, tmp12^0'=tmp12^post76, tmp___014^0'=tmp___014^post76, tmp___017^0'=tmp___017^post76, tmp___024^0'=tmp___024^post76, tmp___115^0'=tmp___115^post76, (-n44^post76+n44^0 == 0 /\ i21^0-i21^post76 == 0 /\ __const_50^0-__const_50^post76 == 0 /\ -r_off32^post76+r_off32^0 == 0 /\ -code31^post76+code31^0 == 0 /\ __const_16^0-__const_16^post76 == 0 /\ -m122^post76+m122^0 == 0 /\ -__const_2147483647^post76+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post76 == 0 /\ i3^0-i3^post76 == 0 /\ -n_bits^post76+n_bits^0 == 0 /\ exit_stat^0-exit_stat^post76 == 0 /\ __const_53^0-__const_53^post76 == 0 /\ __const_8^0-__const_8^post76 == 0 /\ -__const_10000^post76+__const_10000^0 == 0 /\ rat26^0-rat26^post76 == 0 /\ -ent8^post76+ent8^0 == 0 /\ -disp9^post76+disp9^0 == 0 /\ hsize___027^0-hsize___027^post76 == 0 /\ -maxcode^post76+maxcode^0 == 0 /\ __const_256^0-__const_256^post76 == 0 /\ -apsim_bound11113^post76+apsim_bound11113^0 == 0 /\ -tmp___017^post76+tmp___017^0 == 0 /\ -fcode5^post76+fcode5^0 == 0 /\ n40^0-n40^post76 == 0 /\ out_count^0-out_count^post76 == 0 /\ -__const_65536^post76+__const_65536^0 == 0 /\ -hsize^post76+hsize^0 == 0 /\ -i29^0 <= 0 /\ tmp___014^0-tmp___014^post76 == 0 /\ -block_compress^post76+block_compress^0 == 0 /\ bytes_out^0-bytes_out^post76 == 0 /\ offset^0-offset^post76 == 0 /\ -i29^post76+i29^0 == 0 /\ -tabort4^post76+tabort4^0 == 0 /\ maxbits^0-maxbits^post76 == 0 /\ -i41^post76+i41^0 == 0 /\ __const_9^0-__const_9^post76 == 0 /\ -i45^post76+i45^0 == 0 /\ count^0-count^post76 == 0 /\ -__const_8388607^post76+__const_8388607^0 == 0 /\ __const_257^0-__const_257^post76 == 0 /\ c37^0-c37^post76 == 0 /\ ret_getbyte25^0-ret_getbyte25^post76 == 0 /\ maxmaxcode^0-maxmaxcode^post76 == 0 /\ bits33^0-bits33^post76 == 0 /\ -in_count^post76+in_count^0 == 0 /\ hsize___019^0-hsize___019^post76 == 0 /\ -free_ent^post76+free_ent^0 == 0 /\ -ret_getbyte18^post76+ret_getbyte18^0 == 0 /\ -c7^post76+c7^0 == 0 /\ -tmp___024^post76+tmp___024^0 == 0 /\ checkpoint^0-checkpoint^post76 == 0 /\ i6^0-i6^post76 == 0 /\ apsim_incnt^0-apsim_incnt^post76 == 0 /\ -hsize_reg10^post76+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post76 == 0 /\ -clear_flg^post76+clear_flg^0 == 0 /\ tmp___115^0-tmp___115^post76 == 0 /\ -__const_429496^post76+__const_429496^0 == 0 /\ -incnt^post76+incnt^0 == 0 /\ seed2^0-seed2^post76 == 0 /\ ratio^0-ratio^post76 == 0 /\ m130^0-m130^post76 == 0), cost: 1
  10: l12 -> l9 : __const_10000^0'=__const_10000^post11, __const_16^0'=__const_16^post11, __const_2147483647^0'=__const_2147483647^post11, __const_256^0'=__const_256^post11, __const_257^0'=__const_257^post11, __const_429496^0'=__const_429496^post11, __const_50^0'=__const_50^post11, __const_53^0'=__const_53^post11, __const_65536^0'=__const_65536^post11, __const_8388607^0'=__const_8388607^post11, __const_8^0'=__const_8^post11, __const_9^0'=__const_9^post11, apsim_bound11113^0'=apsim_bound11113^post11, apsim_incnt^0'=apsim_incnt^post11, bits33^0'=bits33^post11, block_compress^0'=block_compress^post11, bytes_out^0'=bytes_out^post11, c37^0'=c37^post11, c7^0'=c7^post11, checkpoint^0'=checkpoint^post11, clear_flg^0'=clear_flg^post11, code31^0'=code31^post11, count^0'=count^post11, disp9^0'=disp9^post11, ent8^0'=ent8^post11, exit_stat^0'=exit_stat^post11, fcode5^0'=fcode5^post11, free_ent^0'=free_ent^post11, hshift11^0'=hshift11^post11, hsize^0'=hsize^post11, hsize___019^0'=hsize___019^post11, hsize___027^0'=hsize___027^post11, hsize_reg10^0'=hsize_reg10^post11, i21^0'=i21^post11, i29^0'=i29^post11, i3^0'=i3^post11, i41^0'=i41^post11, i45^0'=i45^post11, i6^0'=i6^post11, in_count^0'=in_count^post11, incnt^0'=incnt^post11, m122^0'=m122^post11, m130^0'=m130^post11, maxbits^0'=maxbits^post11, maxcode^0'=maxcode^post11, maxmaxcode^0'=maxmaxcode^post11, n40^0'=n40^post11, n44^0'=n44^post11, n_bits^0'=n_bits^post11, offset^0'=offset^post11, out_count^0'=out_count^post11, r_off32^0'=r_off32^post11, rat26^0'=rat26^post11, ratio^0'=ratio^post11, ret_getbyte18^0'=ret_getbyte18^post11, ret_getbyte25^0'=ret_getbyte25^post11, seed2^0'=seed2^post11, tabort4^0'=tabort4^post11, tmp12^0'=tmp12^post11, tmp___014^0'=tmp___014^post11, tmp___017^0'=tmp___017^post11, tmp___024^0'=tmp___024^post11, tmp___115^0'=tmp___115^post11, (hsize___027^0-hsize___027^post11 == 0 /\ i29^0-i29^post11 == 0 /\ __const_8388607^0-__const_8388607^post11 == 0 /\ -__const_429496^post11+__const_429496^0 == 0 /\ -hsize___019^post11+hsize___019^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post11 == 0 /\ __const_50^0-__const_50^post11 == 0 /\ -hsize_reg10^post11+hsize_reg10^0 == 0 /\ r_off32^0-r_off32^post11 == 0 /\ __const_10000^0-__const_10000^post11 == 0 /\ -hsize^post11+hsize^0 == 0 /\ -tmp___014^post11+tmp___014^0 == 0 /\ -i41^post11+i41^0 == 0 /\ -rat26^post11+rat26^0 == 0 /\ __const_9^0-__const_9^post11 == 0 /\ out_count^0-out_count^post11 == 0 /\ apsim_bound11113^0-apsim_bound11113^post11 == 0 /\ maxcode^0-maxcode^post11 == 0 /\ tmp12^post11-ret_getbyte18^0 == 0 /\ -__const_2147483647^post11+__const_2147483647^0 == 0 /\ __const_16^0-__const_16^post11 == 0 /\ i45^0-i45^post11 == 0 /\ maxmaxcode^0-maxmaxcode^post11 == 0 /\ tabort4^0-tabort4^post11 == 0 /\ -maxbits^post11+maxbits^0 == 0 /\ -exit_stat^post11+exit_stat^0 == 0 /\ -tmp___024^post11+tmp___024^0 == 0 /\ -tmp___115^post11+tmp___115^0 == 0 /\ m122^0-m122^post11 == 0 /\ -in_count^post11+in_count^0 == 0 /\ -tmp12^post11+ent8^post11 == 0 /\ -i21^post11+i21^0 == 0 /\ __const_257^0-__const_257^post11 == 0 /\ bits33^0-bits33^post11 == 0 /\ -i6^post11+i6^0 == 0 /\ -block_compress^post11+block_compress^0 == 0 /\ -__const_8^post11+__const_8^0 == 0 /\ -checkpoint^post11+checkpoint^0 == 0 /\ -clear_flg^post11+clear_flg^0 == 0 /\ n44^0-n44^post11 == 0 /\ count^0-count^post11 == 0 /\ -bytes_out^post11+bytes_out^0 == 0 /\ -ratio^post11+ratio^0 == 0 /\ fcode5^post11-hsize^0 == 0 /\ n_bits^0-n_bits^post11 == 0 /\ apsim_incnt^0-apsim_incnt^post11 == 0 /\ __const_256^0-__const_256^post11 == 0 /\ -i3^post11+i3^0 == 0 /\ -incnt^post11+incnt^0 == 0 /\ free_ent^0-free_ent^post11 == 0 /\ __const_53^0-__const_53^post11 == 0 /\ -offset^post11+offset^0 == 0 /\ c37^0-c37^post11 == 0 /\ -seed2^post11+seed2^0 == 0 /\ -code31^post11+code31^0 == 0 /\ -__const_65536^post11+__const_65536^0 == 0 /\ -disp9^post11+disp9^0 == 0 /\ -m130^post11+m130^0 == 0 /\ hshift11^post11 == 0 /\ c7^0-c7^post11 == 0 /\ -n40^post11+n40^0 == 0 /\ -ret_getbyte25^post11+ret_getbyte25^0 == 0 /\ tmp___017^0-tmp___017^post11 == 0), cost: 1
  11: l13 -> l14 : __const_10000^0'=__const_10000^post12, __const_16^0'=__const_16^post12, __const_2147483647^0'=__const_2147483647^post12, __const_256^0'=__const_256^post12, __const_257^0'=__const_257^post12, __const_429496^0'=__const_429496^post12, __const_50^0'=__const_50^post12, __const_53^0'=__const_53^post12, __const_65536^0'=__const_65536^post12, __const_8388607^0'=__const_8388607^post12, __const_8^0'=__const_8^post12, __const_9^0'=__const_9^post12, apsim_bound11113^0'=apsim_bound11113^post12, apsim_incnt^0'=apsim_incnt^post12, bits33^0'=bits33^post12, block_compress^0'=block_compress^post12, bytes_out^0'=bytes_out^post12, c37^0'=c37^post12, c7^0'=c7^post12, checkpoint^0'=checkpoint^post12, clear_flg^0'=clear_flg^post12, code31^0'=code31^post12, count^0'=count^post12, disp9^0'=disp9^post12, ent8^0'=ent8^post12, exit_stat^0'=exit_stat^post12, fcode5^0'=fcode5^post12, free_ent^0'=free_ent^post12, hshift11^0'=hshift11^post12, hsize^0'=hsize^post12, hsize___019^0'=hsize___019^post12, hsize___027^0'=hsize___027^post12, hsize_reg10^0'=hsize_reg10^post12, i21^0'=i21^post12, i29^0'=i29^post12, i3^0'=i3^post12, i41^0'=i41^post12, i45^0'=i45^post12, i6^0'=i6^post12, in_count^0'=in_count^post12, incnt^0'=incnt^post12, m122^0'=m122^post12, m130^0'=m130^post12, maxbits^0'=maxbits^post12, maxcode^0'=maxcode^post12, maxmaxcode^0'=maxmaxcode^post12, n40^0'=n40^post12, n44^0'=n44^post12, n_bits^0'=n_bits^post12, offset^0'=offset^post12, out_count^0'=out_count^post12, r_off32^0'=r_off32^post12, rat26^0'=rat26^post12, ratio^0'=ratio^post12, ret_getbyte18^0'=ret_getbyte18^post12, ret_getbyte25^0'=ret_getbyte25^post12, seed2^0'=seed2^post12, tabort4^0'=tabort4^post12, tmp12^0'=tmp12^post12, tmp___014^0'=tmp___014^post12, tmp___017^0'=tmp___017^post12, tmp___024^0'=tmp___024^post12, tmp___115^0'=tmp___115^post12, (-__const_8^post12+__const_8^0 == 0 /\ -code31^post12+code31^0 == 0 /\ -seed2^post12+seed2^0 == 0 /\ -apsim_incnt^post12+apsim_incnt^0 == 0 /\ -offset^post12+offset^0 == 0 /\ tmp12^0-tmp12^post12 == 0 /\ exit_stat^0-exit_stat^post12 == 0 /\ ret_getbyte18^0-ret_getbyte18^post12 == 0 /\ -ret_getbyte25^post12+ret_getbyte25^0 == 0 /\ tmp___017^0-tmp___017^post12 == 0 /\ tabort4^0-tabort4^post12 == 0 /\ i45^0-i45^post12 == 0 /\ -rat26^post12+rat26^0 == 0 /\ -in_count^post12+in_count^0 == 0 /\ hsize___027^0-hsize___027^post12 == 0 /\ -block_compress^post12+block_compress^0 == 0 /\ -m130^post12+m130^0 == 0 /\ -disp9^post12+disp9^0 == 0 /\ r_off32^0-r_off32^post12 == 0 /\ -ratio^post12+ratio^0 == 0 /\ -fcode5^post12+fcode5^0 == 0 /\ -hsize^post12+hsize^0 == 0 /\ -tmp___115^post12+tmp___115^0 == 0 /\ -n40^post12+n40^0 == 0 /\ m122^0-m122^post12 == 0 /\ out_count^0-out_count^post12 == 0 /\ apsim_bound11113^0-apsim_bound11113^post12 == 0 /\ -__const_16^post12+__const_16^0 == 0 /\ __const_10000^0-__const_10000^post12 == 0 /\ -__const_8388607^post12+__const_8388607^0 == 0 /\ maxcode^0-maxcode^post12 == 0 /\ -i29^post12+i29^0 == 0 /\ __const_53^0-__const_53^post12 == 0 /\ n_bits^0-n_bits^post12 == 0 /\ -__const_429496^post12+__const_429496^0 == 0 /\ -i3^post12+i3^0 == 0 /\ count^0-count^post12 == 0 /\ -i41^post12+i41^0 == 0 /\ c37^0-c37^post12 == 0 /\ bits33^0-bits33^post12 == 0 /\ -__const_65536^post12+__const_65536^0 == 0 /\ maxmaxcode^0-maxmaxcode^post12 == 0 /\ -clear_flg^post12+clear_flg^0 == 0 /\ hshift11^0-hshift11^post12 == 0 /\ -ent8^post12+ent8^0 == 0 /\ -bytes_out^post12+bytes_out^0 == 0 /\ -__const_9^post12+__const_9^0 == 0 /\ -maxbits^post12+maxbits^0 == 0 /\ -hsize_reg10^post12+hsize_reg10^0 == 0 /\ -tmp___024^post12+tmp___024^0 == 0 /\ -hsize___019^post12+hsize___019^0 == 0 /\ -c7^post12+c7^0 == 0 /\ __const_257^0-__const_257^post12 == 0 /\ checkpoint^0-checkpoint^post12 == 0 /\ free_ent^0-free_ent^post12 == 0 /\ -incnt^post12+incnt^0 == 0 /\ -tmp___014^post12+tmp___014^0 == 0 /\ i6^0-i6^post12 == 0 /\ n44^0-n44^post12 == 0 /\ __const_50^0-__const_50^post12 == 0 /\ -i21^post12+i21^0 == 0 /\ __const_256^0-__const_256^post12 == 0 /\ -__const_2147483647^post12+__const_2147483647^0 == 0), cost: 1
  72: l14 -> l51 : __const_10000^0'=__const_10000^post73, __const_16^0'=__const_16^post73, __const_2147483647^0'=__const_2147483647^post73, __const_256^0'=__const_256^post73, __const_257^0'=__const_257^post73, __const_429496^0'=__const_429496^post73, __const_50^0'=__const_50^post73, __const_53^0'=__const_53^post73, __const_65536^0'=__const_65536^post73, __const_8388607^0'=__const_8388607^post73, __const_8^0'=__const_8^post73, __const_9^0'=__const_9^post73, apsim_bound11113^0'=apsim_bound11113^post73, apsim_incnt^0'=apsim_incnt^post73, bits33^0'=bits33^post73, block_compress^0'=block_compress^post73, bytes_out^0'=bytes_out^post73, c37^0'=c37^post73, c7^0'=c7^post73, checkpoint^0'=checkpoint^post73, clear_flg^0'=clear_flg^post73, code31^0'=code31^post73, count^0'=count^post73, disp9^0'=disp9^post73, ent8^0'=ent8^post73, exit_stat^0'=exit_stat^post73, fcode5^0'=fcode5^post73, free_ent^0'=free_ent^post73, hshift11^0'=hshift11^post73, hsize^0'=hsize^post73, hsize___019^0'=hsize___019^post73, hsize___027^0'=hsize___027^post73, hsize_reg10^0'=hsize_reg10^post73, i21^0'=i21^post73, i29^0'=i29^post73, i3^0'=i3^post73, i41^0'=i41^post73, i45^0'=i45^post73, i6^0'=i6^post73, in_count^0'=in_count^post73, incnt^0'=incnt^post73, m122^0'=m122^post73, m130^0'=m130^post73, maxbits^0'=maxbits^post73, maxcode^0'=maxcode^post73, maxmaxcode^0'=maxmaxcode^post73, n40^0'=n40^post73, n44^0'=n44^post73, n_bits^0'=n_bits^post73, offset^0'=offset^post73, out_count^0'=out_count^post73, r_off32^0'=r_off32^post73, rat26^0'=rat26^post73, ratio^0'=ratio^post73, ret_getbyte18^0'=ret_getbyte18^post73, ret_getbyte25^0'=ret_getbyte25^post73, seed2^0'=seed2^post73, tabort4^0'=tabort4^post73, tmp12^0'=tmp12^post73, tmp___014^0'=tmp___014^post73, tmp___017^0'=tmp___017^post73, tmp___024^0'=tmp___024^post73, tmp___115^0'=tmp___115^post73, (__const_8^0-__const_8^post73 == 0 /\ -__const_65536^post73+__const_65536^0 == 0 /\ -hsize___019^post73+hsize___019^0 == 0 /\ rat26^0-rat26^post73 == 0 /\ -hsize_reg10^post73+hsize_reg10^0 == 0 /\ i3^0-i3^post73 == 0 /\ hsize___027^0-hsize___027^post73 == 0 /\ -maxcode^post73+maxcode^0 == 0 /\ -hsize^post73+hsize^0 == 0 /\ r_off32^post73-offset^0 == 0 /\ -__const_256^post73+__const_256^0 == 0 /\ i21^0-i21^post73 == 0 /\ exit_stat^0-exit_stat^post73 == 0 /\ -m122^post73+m122^0 == 0 /\ -apsim_bound11113^post73+apsim_bound11113^0 == 0 /\ -__const_10000^post73+__const_10000^0 == 0 /\ checkpoint^0-checkpoint^post73 == 0 /\ -__const_9^post73+__const_9^0 == 0 /\ __const_50^0-__const_50^post73 == 0 /\ __const_257^0-__const_257^post73 == 0 /\ -__const_8388607^post73+__const_8388607^0 == 0 /\ -__const_257^0+free_ent^post73 == 0 /\ count^0-count^post73 == 0 /\ tmp___014^0-tmp___014^post73 == 0 /\ out_count^0-out_count^post73 == 0 /\ maxmaxcode^0-maxmaxcode^post73 == 0 /\ -ret_getbyte18^post73+ret_getbyte18^0 == 0 /\ -n_bits^post73+n_bits^0 == 0 /\ incnt^0-incnt^post73 == 0 /\ n40^0-n40^post73 == 0 /\ offset^0-offset^post73 == 0 /\ -in_count^post73+in_count^0 == 0 /\ tmp12^0-tmp12^post73 == 0 /\ maxbits^0-maxbits^post73 == 0 /\ i6^0-i6^post73 == 0 /\ __const_16^0-__const_16^post73 == 0 /\ -1+clear_flg^post73 == 0 /\ -ratio^post73+ratio^0 == 0 /\ -c7^post73+c7^0 == 0 /\ -ent8^post73+ent8^0 == 0 /\ -block_compress^post73+block_compress^0 == 0 /\ -tmp___017^post73+tmp___017^0 == 0 /\ -disp9^post73+disp9^0 == 0 /\ tmp___115^0-tmp___115^post73 == 0 /\ -tmp___024^post73+tmp___024^0 == 0 /\ hshift11^0-hshift11^post73 == 0 /\ -i45^post73+i45^0 == 0 /\ -tabort4^post73+tabort4^0 == 0 /\ -seed2^post73+seed2^0 == 0 /\ -i29^post73+i29^0 == 0 /\ -i41^post73+i41^0 == 0 /\ apsim_incnt^0-apsim_incnt^post73 == 0 /\ -fcode5^post73+fcode5^0 == 0 /\ bytes_out^0-bytes_out^post73 == 0 /\ i29^0 <= 0 /\ c37^0-c37^post73 == 0 /\ __const_53^0-__const_53^post73 == 0 /\ __const_2147483647^0-__const_2147483647^post73 == 0 /\ -n_bits^0+bits33^post73 == 0 /\ m130^0-m130^post73 == 0 /\ -n44^post73+n44^0 == 0 /\ __const_429496^0-__const_429496^post73 == 0 /\ code31^post73-__const_256^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post73 == 0), cost: 1
  73: l14 -> l13 : __const_10000^0'=__const_10000^post74, __const_16^0'=__const_16^post74, __const_2147483647^0'=__const_2147483647^post74, __const_256^0'=__const_256^post74, __const_257^0'=__const_257^post74, __const_429496^0'=__const_429496^post74, __const_50^0'=__const_50^post74, __const_53^0'=__const_53^post74, __const_65536^0'=__const_65536^post74, __const_8388607^0'=__const_8388607^post74, __const_8^0'=__const_8^post74, __const_9^0'=__const_9^post74, apsim_bound11113^0'=apsim_bound11113^post74, apsim_incnt^0'=apsim_incnt^post74, bits33^0'=bits33^post74, block_compress^0'=block_compress^post74, bytes_out^0'=bytes_out^post74, c37^0'=c37^post74, c7^0'=c7^post74, checkpoint^0'=checkpoint^post74, clear_flg^0'=clear_flg^post74, code31^0'=code31^post74, count^0'=count^post74, disp9^0'=disp9^post74, ent8^0'=ent8^post74, exit_stat^0'=exit_stat^post74, fcode5^0'=fcode5^post74, free_ent^0'=free_ent^post74, hshift11^0'=hshift11^post74, hsize^0'=hsize^post74, hsize___019^0'=hsize___019^post74, hsize___027^0'=hsize___027^post74, hsize_reg10^0'=hsize_reg10^post74, i21^0'=i21^post74, i29^0'=i29^post74, i3^0'=i3^post74, i41^0'=i41^post74, i45^0'=i45^post74, i6^0'=i6^post74, in_count^0'=in_count^post74, incnt^0'=incnt^post74, m122^0'=m122^post74, m130^0'=m130^post74, maxbits^0'=maxbits^post74, maxcode^0'=maxcode^post74, maxmaxcode^0'=maxmaxcode^post74, n40^0'=n40^post74, n44^0'=n44^post74, n_bits^0'=n_bits^post74, offset^0'=offset^post74, out_count^0'=out_count^post74, r_off32^0'=r_off32^post74, rat26^0'=rat26^post74, ratio^0'=ratio^post74, ret_getbyte18^0'=ret_getbyte18^post74, ret_getbyte25^0'=ret_getbyte25^post74, seed2^0'=seed2^post74, tabort4^0'=tabort4^post74, tmp12^0'=tmp12^post74, tmp___014^0'=tmp___014^post74, tmp___017^0'=tmp___017^post74, tmp___024^0'=tmp___024^post74, tmp___115^0'=tmp___115^post74, (exit_stat^0-exit_stat^post74 == 0 /\ tmp12^0-tmp12^post74 == 0 /\ free_ent^0-free_ent^post74 == 0 /\ -clear_flg^post74+clear_flg^0 == 0 /\ __const_53^0-__const_53^post74 == 0 /\ -block_compress^post74+block_compress^0 == 0 /\ -ret_getbyte18^post74+ret_getbyte18^0 == 0 /\ __const_8^0-__const_8^post74 == 0 /\ -n_bits^post74+n_bits^0 == 0 /\ -n44^post74+n44^0 == 0 /\ -c7^post74+c7^0 == 0 /\ n40^0-n40^post74 == 0 /\ -i45^post74+i45^0 == 0 /\ -__const_256^post74+__const_256^0 == 0 /\ -incnt^post74+incnt^0 == 0 /\ -r_off32^post74+r_off32^0 == 0 /\ rat26^0-rat26^post74 == 0 /\ -apsim_bound11113^post74+apsim_bound11113^0 == 0 /\ -code31^post74+code31^0 == 0 /\ tmp___014^0-tmp___014^post74 == 0 /\ -fcode5^post74+fcode5^0 == 0 /\ -maxcode^post74+maxcode^0 == 0 /\ bytes_out^0-bytes_out^post74 == 0 /\ -tmp___017^post74+tmp___017^0 == 0 /\ 1-i29^0 <= 0 /\ -__const_65536^post74+__const_65536^0 == 0 /\ -ent8^post74+ent8^0 == 0 /\ i21^0-i21^post74 == 0 /\ out_count^0-out_count^post74 == 0 /\ __const_9^0-__const_9^post74 == 0 /\ c37^0-c37^post74 == 0 /\ -in_count^post74+in_count^0 == 0 /\ offset^0-offset^post74 == 0 /\ maxmaxcode^0-maxmaxcode^post74 == 0 /\ 1+i29^post74-i29^0 == 0 /\ -__const_8388607^post74+__const_8388607^0 == 0 /\ -hsize_reg10^post74+hsize_reg10^0 == 0 /\ -__const_50^post74+__const_50^0 == 0 /\ __const_16^0-__const_16^post74 == 0 /\ -__const_429496^post74+__const_429496^0 == 0 /\ -hsize^post74+hsize^0 == 0 /\ ratio^0-ratio^post74 == 0 /\ -i41^post74+i41^0 == 0 /\ -__const_2147483647^post74+__const_2147483647^0 == 0 /\ -__const_10000^post74+__const_10000^0 == 0 /\ __const_257^0-__const_257^post74 == 0 /\ ret_getbyte25^0-ret_getbyte25^post74 == 0 /\ hsize___027^0-hsize___027^post74 == 0 /\ m130^0-m130^post74 == 0 /\ seed2^0-seed2^post74 == 0 /\ bits33^0-bits33^post74 == 0 /\ -tabort4^post74+tabort4^0 == 0 /\ -m122^post74+m122^0 == 0 /\ i3^0-i3^post74 == 0 /\ hsize___019^0-hsize___019^post74 == 0 /\ checkpoint^0-checkpoint^post74 == 0 /\ -disp9^post74+disp9^0 == 0 /\ count^0-count^post74 == 0 /\ hshift11^0-hshift11^post74 == 0 /\ tmp___115^0-tmp___115^post74 == 0 /\ maxbits^0-maxbits^post74 == 0 /\ apsim_incnt^0-apsim_incnt^post74 == 0 /\ -tmp___024^post74+tmp___024^0 == 0 /\ i6^0-i6^post74 == 0), cost: 1
  12: l15 -> l12 : __const_10000^0'=__const_10000^post13, __const_16^0'=__const_16^post13, __const_2147483647^0'=__const_2147483647^post13, __const_256^0'=__const_256^post13, __const_257^0'=__const_257^post13, __const_429496^0'=__const_429496^post13, __const_50^0'=__const_50^post13, __const_53^0'=__const_53^post13, __const_65536^0'=__const_65536^post13, __const_8388607^0'=__const_8388607^post13, __const_8^0'=__const_8^post13, __const_9^0'=__const_9^post13, apsim_bound11113^0'=apsim_bound11113^post13, apsim_incnt^0'=apsim_incnt^post13, bits33^0'=bits33^post13, block_compress^0'=block_compress^post13, bytes_out^0'=bytes_out^post13, c37^0'=c37^post13, c7^0'=c7^post13, checkpoint^0'=checkpoint^post13, clear_flg^0'=clear_flg^post13, code31^0'=code31^post13, count^0'=count^post13, disp9^0'=disp9^post13, ent8^0'=ent8^post13, exit_stat^0'=exit_stat^post13, fcode5^0'=fcode5^post13, free_ent^0'=free_ent^post13, hshift11^0'=hshift11^post13, hsize^0'=hsize^post13, hsize___019^0'=hsize___019^post13, hsize___027^0'=hsize___027^post13, hsize_reg10^0'=hsize_reg10^post13, i21^0'=i21^post13, i29^0'=i29^post13, i3^0'=i3^post13, i41^0'=i41^post13, i45^0'=i45^post13, i6^0'=i6^post13, in_count^0'=in_count^post13, incnt^0'=incnt^post13, m122^0'=m122^post13, m130^0'=m130^post13, maxbits^0'=maxbits^post13, maxcode^0'=maxcode^post13, maxmaxcode^0'=maxmaxcode^post13, n40^0'=n40^post13, n44^0'=n44^post13, n_bits^0'=n_bits^post13, offset^0'=offset^post13, out_count^0'=out_count^post13, r_off32^0'=r_off32^post13, rat26^0'=rat26^post13, ratio^0'=ratio^post13, ret_getbyte18^0'=ret_getbyte18^post13, ret_getbyte25^0'=ret_getbyte25^post13, seed2^0'=seed2^post13, tabort4^0'=tabort4^post13, tmp12^0'=tmp12^post13, tmp___014^0'=tmp___014^post13, tmp___017^0'=tmp___017^post13, tmp___024^0'=tmp___024^post13, tmp___115^0'=tmp___115^post13, (-incnt^post13+incnt^0 == 0 /\ tmp___017^0-tmp___017^post13 == 0 /\ -tmp___014^post13+tmp___014^0 == 0 /\ free_ent^0-free_ent^post13 == 0 /\ -block_compress^post13+block_compress^0 == 0 /\ -tmp12^post13+tmp12^0 == 0 /\ -__const_8388607^post13+__const_8388607^0 == 0 /\ -fcode5^post13+fcode5^0 == 0 /\ m130^0-m130^post13 == 0 /\ -i29^post13+i29^0 == 0 /\ -tmp___115^post13+tmp___115^0 == 0 /\ -i41^post13+i41^0 == 0 /\ -i45^post13+i45^0 == 0 /\ tmp___024^0-tmp___024^post13 == 0 /\ -i21^post13+i21^0 == 0 /\ ret_getbyte18^post13-__const_429496^0 == 0 /\ bytes_out^0-bytes_out^post13 == 0 /\ tmp___017^0 <= 0 /\ __const_10000^0-__const_10000^post13 == 0 /\ __const_16^0-__const_16^post13 == 0 /\ -in_count^post13+in_count^0 == 0 /\ -c7^post13+c7^0 == 0 /\ -offset^post13+offset^0 == 0 /\ r_off32^0-r_off32^post13 == 0 /\ -apsim_incnt^post13+apsim_incnt^0 == 0 /\ c37^0-c37^post13 == 0 /\ -__const_429496^post13+__const_429496^0 == 0 /\ -hsize___019^post13+hsize___019^0 == 0 /\ -clear_flg^post13+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post13 == 0 /\ checkpoint^0-checkpoint^post13 == 0 /\ __const_256^0-__const_256^post13 == 0 /\ i6^0-i6^post13 == 0 /\ tabort4^0-tabort4^post13 == 0 /\ maxmaxcode^0-maxmaxcode^post13 == 0 /\ apsim_bound11113^0-apsim_bound11113^post13 == 0 /\ -hsize^post13+hsize^0 == 0 /\ -ent8^post13+ent8^0 == 0 /\ -__const_2147483647^post13+__const_2147483647^0 == 0 /\ out_count^0-out_count^post13 == 0 /\ -disp9^post13+disp9^0 == 0 /\ -rat26^post13+rat26^0 == 0 /\ -maxbits^post13+maxbits^0 == 0 /\ -n40^post13+n40^0 == 0 /\ -seed2^post13+seed2^0 == 0 /\ m122^0-m122^post13 == 0 /\ -code31^post13+code31^0 == 0 /\ exit_stat^0-exit_stat^post13 == 0 /\ -__const_9^post13+__const_9^0 == 0 /\ bits33^0-bits33^post13 == 0 /\ i3^0-i3^post13 == 0 /\ count^0-count^post13 == 0 /\ n44^0-n44^post13 == 0 /\ __const_50^0-__const_50^post13 == 0 /\ hsize_reg10^0-hsize_reg10^post13 == 0 /\ n_bits^0-n_bits^post13 == 0 /\ -ratio^post13+ratio^0 == 0 /\ __const_257^0-__const_257^post13 == 0 /\ __const_53^0-__const_53^post13 == 0 /\ hsize___027^0-hsize___027^post13 == 0 /\ hshift11^0-hshift11^post13 == 0 /\ -__const_65536^post13+__const_65536^0 == 0 /\ maxcode^0-maxcode^post13 == 0 /\ -__const_8^post13+__const_8^0 == 0), cost: 1
  13: l15 -> l12 : __const_10000^0'=__const_10000^post14, __const_16^0'=__const_16^post14, __const_2147483647^0'=__const_2147483647^post14, __const_256^0'=__const_256^post14, __const_257^0'=__const_257^post14, __const_429496^0'=__const_429496^post14, __const_50^0'=__const_50^post14, __const_53^0'=__const_53^post14, __const_65536^0'=__const_65536^post14, __const_8388607^0'=__const_8388607^post14, __const_8^0'=__const_8^post14, __const_9^0'=__const_9^post14, apsim_bound11113^0'=apsim_bound11113^post14, apsim_incnt^0'=apsim_incnt^post14, bits33^0'=bits33^post14, block_compress^0'=block_compress^post14, bytes_out^0'=bytes_out^post14, c37^0'=c37^post14, c7^0'=c7^post14, checkpoint^0'=checkpoint^post14, clear_flg^0'=clear_flg^post14, code31^0'=code31^post14, count^0'=count^post14, disp9^0'=disp9^post14, ent8^0'=ent8^post14, exit_stat^0'=exit_stat^post14, fcode5^0'=fcode5^post14, free_ent^0'=free_ent^post14, hshift11^0'=hshift11^post14, hsize^0'=hsize^post14, hsize___019^0'=hsize___019^post14, hsize___027^0'=hsize___027^post14, hsize_reg10^0'=hsize_reg10^post14, i21^0'=i21^post14, i29^0'=i29^post14, i3^0'=i3^post14, i41^0'=i41^post14, i45^0'=i45^post14, i6^0'=i6^post14, in_count^0'=in_count^post14, incnt^0'=incnt^post14, m122^0'=m122^post14, m130^0'=m130^post14, maxbits^0'=maxbits^post14, maxcode^0'=maxcode^post14, maxmaxcode^0'=maxmaxcode^post14, n40^0'=n40^post14, n44^0'=n44^post14, n_bits^0'=n_bits^post14, offset^0'=offset^post14, out_count^0'=out_count^post14, r_off32^0'=r_off32^post14, rat26^0'=rat26^post14, ratio^0'=ratio^post14, ret_getbyte18^0'=ret_getbyte18^post14, ret_getbyte25^0'=ret_getbyte25^post14, seed2^0'=seed2^post14, tabort4^0'=tabort4^post14, tmp12^0'=tmp12^post14, tmp___014^0'=tmp___014^post14, tmp___017^0'=tmp___017^post14, tmp___024^0'=tmp___024^post14, tmp___115^0'=tmp___115^post14, (0 == 0 /\ 1+incnt^post14-incnt^0 == 0 /\ -n40^post14+n40^0 == 0 /\ __const_50^0-__const_50^post14 == 0 /\ n44^0-n44^post14 == 0 /\ -apsim_bound11113^post14+apsim_bound11113^0 == 0 /\ -__const_9^post14+__const_9^0 == 0 /\ __const_8^0-__const_8^post14 == 0 /\ m130^0-m130^post14 == 0 /\ bytes_out^0-bytes_out^post14 == 0 /\ -hsize___019^post14+hsize___019^0 == 0 /\ count^0-count^post14 == 0 /\ __const_53^0-__const_53^post14 == 0 /\ apsim_incnt^0-apsim_incnt^post14 == 0 /\ hshift11^0-hshift11^post14 == 0 /\ -i29^post14+i29^0 == 0 /\ -n_bits^post14+n_bits^0 == 0 /\ -__const_65536^post14+__const_65536^0 == 0 /\ tmp___017^0-tmp___017^post14 == 0 /\ ret_getbyte25^0-ret_getbyte25^post14 == 0 /\ -bits33^post14+bits33^0 == 0 /\ -__const_2147483647^post14+__const_2147483647^0 == 0 /\ hsize^0-hsize^post14 == 0 /\ -i41^post14+i41^0 == 0 /\ __const_256^0-__const_256^post14 == 0 /\ -seed2^post14+seed2^0 == 0 /\ c37^0-c37^post14 == 0 /\ -__const_10000^post14+__const_10000^0 == 0 /\ __const_16^0-__const_16^post14 == 0 /\ -ent8^post14+ent8^0 == 0 /\ -maxbits^post14+maxbits^0 == 0 /\ m122^0-m122^post14 == 0 /\ exit_stat^0-exit_stat^post14 == 0 /\ tmp12^0-tmp12^post14 == 0 /\ -in_count^post14+in_count^0 == 0 /\ hsize___027^0-hsize___027^post14 == 0 /\ -__const_8388607^post14+__const_8388607^0 == 0 /\ -tmp___115^post14+tmp___115^0 == 0 /\ -tmp___024^post14+tmp___024^0 == 0 /\ -c7^post14+c7^0 == 0 /\ 1-tmp___017^0 <= 0 /\ rat26^0-rat26^post14 == 0 /\ -clear_flg^post14+clear_flg^0 == 0 /\ fcode5^0-fcode5^post14 == 0 /\ -free_ent^post14+free_ent^0 == 0 /\ -i21^post14+i21^0 == 0 /\ -block_compress^post14+block_compress^0 == 0 /\ __const_257^0-__const_257^post14 == 0 /\ i6^0-i6^post14 == 0 /\ checkpoint^0-checkpoint^post14 == 0 /\ -ratio^post14+ratio^0 == 0 /\ i3^0-i3^post14 == 0 /\ -tmp___014^post14+tmp___014^0 == 0 /\ r_off32^0-r_off32^post14 == 0 /\ tabort4^0-tabort4^post14 == 0 /\ out_count^0-out_count^post14 == 0 /\ -__const_429496^post14+__const_429496^0 == 0 /\ maxmaxcode^0-maxmaxcode^post14 == 0 /\ -code31^post14+code31^0 == 0 /\ maxcode^0-maxcode^post14 == 0 /\ -offset^post14+offset^0 == 0 /\ -i45^post14+i45^0 == 0 /\ hsize_reg10^0-hsize_reg10^post14 == 0 /\ -disp9^post14+disp9^0 == 0), cost: 1
  14: l16 -> l12 : __const_10000^0'=__const_10000^post15, __const_16^0'=__const_16^post15, __const_2147483647^0'=__const_2147483647^post15, __const_256^0'=__const_256^post15, __const_257^0'=__const_257^post15, __const_429496^0'=__const_429496^post15, __const_50^0'=__const_50^post15, __const_53^0'=__const_53^post15, __const_65536^0'=__const_65536^post15, __const_8388607^0'=__const_8388607^post15, __const_8^0'=__const_8^post15, __const_9^0'=__const_9^post15, apsim_bound11113^0'=apsim_bound11113^post15, apsim_incnt^0'=apsim_incnt^post15, bits33^0'=bits33^post15, block_compress^0'=block_compress^post15, bytes_out^0'=bytes_out^post15, c37^0'=c37^post15, c7^0'=c7^post15, checkpoint^0'=checkpoint^post15, clear_flg^0'=clear_flg^post15, code31^0'=code31^post15, count^0'=count^post15, disp9^0'=disp9^post15, ent8^0'=ent8^post15, exit_stat^0'=exit_stat^post15, fcode5^0'=fcode5^post15, free_ent^0'=free_ent^post15, hshift11^0'=hshift11^post15, hsize^0'=hsize^post15, hsize___019^0'=hsize___019^post15, hsize___027^0'=hsize___027^post15, hsize_reg10^0'=hsize_reg10^post15, i21^0'=i21^post15, i29^0'=i29^post15, i3^0'=i3^post15, i41^0'=i41^post15, i45^0'=i45^post15, i6^0'=i6^post15, in_count^0'=in_count^post15, incnt^0'=incnt^post15, m122^0'=m122^post15, m130^0'=m130^post15, maxbits^0'=maxbits^post15, maxcode^0'=maxcode^post15, maxmaxcode^0'=maxmaxcode^post15, n40^0'=n40^post15, n44^0'=n44^post15, n_bits^0'=n_bits^post15, offset^0'=offset^post15, out_count^0'=out_count^post15, r_off32^0'=r_off32^post15, rat26^0'=rat26^post15, ratio^0'=ratio^post15, ret_getbyte18^0'=ret_getbyte18^post15, ret_getbyte25^0'=ret_getbyte25^post15, seed2^0'=seed2^post15, tabort4^0'=tabort4^post15, tmp12^0'=tmp12^post15, tmp___014^0'=tmp___014^post15, tmp___017^0'=tmp___017^post15, tmp___024^0'=tmp___024^post15, tmp___115^0'=tmp___115^post15, (-i29^post15+i29^0 == 0 /\ -m122^post15+m122^0 == 0 /\ __const_53^0-__const_53^post15 == 0 /\ -i41^post15+i41^0 == 0 /\ __const_65536^0-__const_65536^post15 == 0 /\ -incnt^post15+incnt^0 == 0 /\ -i45^post15+i45^0 == 0 /\ apsim_incnt^0-apsim_incnt^post15 == 0 /\ hshift11^0-hshift11^post15 == 0 /\ tmp___115^0-tmp___115^post15 == 0 /\ __const_16^0-__const_16^post15 == 0 /\ n44^0-n44^post15 == 0 /\ -tmp___024^post15+tmp___024^0 == 0 /\ i21^0-i21^post15 == 0 /\ -in_count^post15+in_count^0 == 0 /\ code31^0-code31^post15 == 0 /\ free_ent^0-free_ent^post15 == 0 /\ -clear_flg^post15+clear_flg^0 == 0 /\ __const_8^0-__const_8^post15 == 0 /\ __const_257^0-__const_257^post15 == 0 /\ ret_getbyte18^post15-__const_429496^0 == 0 /\ -hsize_reg10^post15+hsize_reg10^0 == 0 /\ -__const_256^post15+__const_256^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post15 == 0 /\ rat26^0-rat26^post15 == 0 /\ -c7^post15+c7^0 == 0 /\ -bytes_out^post15+bytes_out^0 == 0 /\ c37^0-c37^post15 == 0 /\ -n_bits^post15+n_bits^0 == 0 /\ hsize___019^0-hsize___019^post15 == 0 /\ ent8^0-ent8^post15 == 0 /\ -r_off32^post15+r_off32^0 == 0 /\ maxmaxcode^0-maxmaxcode^post15 == 0 /\ -seed2^post15+seed2^0 == 0 /\ n40^0-n40^post15 == 0 /\ -tabort4^post15+tabort4^0 == 0 /\ -__const_429496^post15+__const_429496^0 == 0 /\ exit_stat^0-exit_stat^post15 == 0 /\ out_count^0-out_count^post15 == 0 /\ -count^post15+count^0 == 0 /\ __const_9^0-__const_9^post15 == 0 /\ -__const_50^post15+__const_50^0 == 0 /\ -fcode5^post15+fcode5^0 == 0 /\ -disp9^post15+disp9^0 == 0 /\ -maxcode^post15+maxcode^0 == 0 /\ tmp___014^0-tmp___014^post15 == 0 /\ -tmp___017^post15+tmp___017^0 == 0 /\ offset^0-offset^post15 == 0 /\ m130^0-m130^post15 == 0 /\ -i6^post15+i6^0 == 0 /\ -apsim_bound11113^post15+apsim_bound11113^0 == 0 /\ -checkpoint^post15+checkpoint^0 == 0 /\ i3^0-i3^post15 == 0 /\ -hsize^post15+hsize^0 == 0 /\ tmp12^0-tmp12^post15 == 0 /\ -__const_2147483647^post15+__const_2147483647^0 == 0 /\ -__const_10000^post15+__const_10000^0 == 0 /\ -hsize___027^post15+hsize___027^0 == 0 /\ maxbits^0-maxbits^post15 == 0 /\ bits33^0-bits33^post15 == 0 /\ -__const_8388607^post15+__const_8388607^0 == 0 /\ -block_compress^post15+block_compress^0 == 0 /\ -ratio^post15+ratio^0 == 0 /\ incnt^0 <= 0), cost: 1
  15: l16 -> l15 : __const_10000^0'=__const_10000^post16, __const_16^0'=__const_16^post16, __const_2147483647^0'=__const_2147483647^post16, __const_256^0'=__const_256^post16, __const_257^0'=__const_257^post16, __const_429496^0'=__const_429496^post16, __const_50^0'=__const_50^post16, __const_53^0'=__const_53^post16, __const_65536^0'=__const_65536^post16, __const_8388607^0'=__const_8388607^post16, __const_8^0'=__const_8^post16, __const_9^0'=__const_9^post16, apsim_bound11113^0'=apsim_bound11113^post16, apsim_incnt^0'=apsim_incnt^post16, bits33^0'=bits33^post16, block_compress^0'=block_compress^post16, bytes_out^0'=bytes_out^post16, c37^0'=c37^post16, c7^0'=c7^post16, checkpoint^0'=checkpoint^post16, clear_flg^0'=clear_flg^post16, code31^0'=code31^post16, count^0'=count^post16, disp9^0'=disp9^post16, ent8^0'=ent8^post16, exit_stat^0'=exit_stat^post16, fcode5^0'=fcode5^post16, free_ent^0'=free_ent^post16, hshift11^0'=hshift11^post16, hsize^0'=hsize^post16, hsize___019^0'=hsize___019^post16, hsize___027^0'=hsize___027^post16, hsize_reg10^0'=hsize_reg10^post16, i21^0'=i21^post16, i29^0'=i29^post16, i3^0'=i3^post16, i41^0'=i41^post16, i45^0'=i45^post16, i6^0'=i6^post16, in_count^0'=in_count^post16, incnt^0'=incnt^post16, m122^0'=m122^post16, m130^0'=m130^post16, maxbits^0'=maxbits^post16, maxcode^0'=maxcode^post16, maxmaxcode^0'=maxmaxcode^post16, n40^0'=n40^post16, n44^0'=n44^post16, n_bits^0'=n_bits^post16, offset^0'=offset^post16, out_count^0'=out_count^post16, r_off32^0'=r_off32^post16, rat26^0'=rat26^post16, ratio^0'=ratio^post16, ret_getbyte18^0'=ret_getbyte18^post16, ret_getbyte25^0'=ret_getbyte25^post16, seed2^0'=seed2^post16, tabort4^0'=tabort4^post16, tmp12^0'=tmp12^post16, tmp___014^0'=tmp___014^post16, tmp___017^0'=tmp___017^post16, tmp___024^0'=tmp___024^post16, tmp___115^0'=tmp___115^post16, (-count^post16+count^0 == 0 /\ -hsize___027^post16+hsize___027^0 == 0 /\ __const_50^0-__const_50^post16 == 0 /\ -fcode5^post16+fcode5^0 == 0 /\ -disp9^post16+disp9^0 == 0 /\ -hsize_reg10^post16+hsize_reg10^0 == 0 /\ bits33^0-bits33^post16 == 0 /\ __const_16^0-__const_16^post16 == 0 /\ -n40^post16+n40^0 == 0 /\ tmp___115^0-tmp___115^post16 == 0 /\ code31^0-code31^post16 == 0 /\ -hsize^post16+hsize^0 == 0 /\ -exit_stat^post16+exit_stat^0 == 0 /\ n44^0-n44^post16 == 0 /\ -__const_8^post16+__const_8^0 == 0 /\ -__const_2147483647^post16+__const_2147483647^0 == 0 /\ -__const_10000^post16+__const_10000^0 == 0 /\ m130^0-m130^post16 == 0 /\ __const_53^0-__const_53^post16 == 0 /\ -tmp___014^post16+tmp___014^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post16 == 0 /\ -seed2^post16+seed2^0 == 0 /\ tabort4^0-tabort4^post16 == 0 /\ c37^0-c37^post16 == 0 /\ -i29^post16+i29^0 == 0 /\ __const_256^0-__const_256^post16 == 0 /\ c7^0-c7^post16 == 0 /\ -n_bits^post16+n_bits^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post16 == 0 /\ hshift11^0-hshift11^post16 == 0 /\ 1-apsim_incnt^0+apsim_incnt^post16 == 0 /\ -__const_65536^post16+__const_65536^0 == 0 /\ -apsim_incnt^0+tmp___017^post16 == 0 /\ -i6^post16+i6^0 == 0 /\ free_ent^0-free_ent^post16 == 0 /\ rat26^0-rat26^post16 == 0 /\ -block_compress^post16+block_compress^0 == 0 /\ -clear_flg^post16+clear_flg^0 == 0 /\ -checkpoint^post16+checkpoint^0 == 0 /\ -bytes_out^post16+bytes_out^0 == 0 /\ -ratio^post16+ratio^0 == 0 /\ -ret_getbyte18^post16+ret_getbyte18^0 == 0 /\ -maxbits^post16+maxbits^0 == 0 /\ -tmp___024^post16+tmp___024^0 == 0 /\ -maxcode^post16+maxcode^0 == 0 /\ -i3^post16+i3^0 == 0 /\ -i41^post16+i41^0 == 0 /\ i21^0-i21^post16 == 0 /\ -m122^post16+m122^0 == 0 /\ -__const_8388607^post16+__const_8388607^0 == 0 /\ tmp12^0-tmp12^post16 == 0 /\ hsize___019^0-hsize___019^post16 == 0 /\ __const_257^0-__const_257^post16 == 0 /\ -incnt^post16+incnt^0 == 0 /\ ent8^0-ent8^post16 == 0 /\ i45^0-i45^post16 == 0 /\ maxmaxcode^0-maxmaxcode^post16 == 0 /\ out_count^0-out_count^post16 == 0 /\ -__const_429496^post16+__const_429496^0 == 0 /\ -__const_9^post16+__const_9^0 == 0 /\ -in_count^post16+in_count^0 == 0 /\ offset^0-offset^post16 == 0 /\ -r_off32^post16+r_off32^0 == 0 /\ 1-incnt^0 <= 0), cost: 1
  16: l17 -> l16 : __const_10000^0'=__const_10000^post17, __const_16^0'=__const_16^post17, __const_2147483647^0'=__const_2147483647^post17, __const_256^0'=__const_256^post17, __const_257^0'=__const_257^post17, __const_429496^0'=__const_429496^post17, __const_50^0'=__const_50^post17, __const_53^0'=__const_53^post17, __const_65536^0'=__const_65536^post17, __const_8388607^0'=__const_8388607^post17, __const_8^0'=__const_8^post17, __const_9^0'=__const_9^post17, apsim_bound11113^0'=apsim_bound11113^post17, apsim_incnt^0'=apsim_incnt^post17, bits33^0'=bits33^post17, block_compress^0'=block_compress^post17, bytes_out^0'=bytes_out^post17, c37^0'=c37^post17, c7^0'=c7^post17, checkpoint^0'=checkpoint^post17, clear_flg^0'=clear_flg^post17, code31^0'=code31^post17, count^0'=count^post17, disp9^0'=disp9^post17, ent8^0'=ent8^post17, exit_stat^0'=exit_stat^post17, fcode5^0'=fcode5^post17, free_ent^0'=free_ent^post17, hshift11^0'=hshift11^post17, hsize^0'=hsize^post17, hsize___019^0'=hsize___019^post17, hsize___027^0'=hsize___027^post17, hsize_reg10^0'=hsize_reg10^post17, i21^0'=i21^post17, i29^0'=i29^post17, i3^0'=i3^post17, i41^0'=i41^post17, i45^0'=i45^post17, i6^0'=i6^post17, in_count^0'=in_count^post17, incnt^0'=incnt^post17, m122^0'=m122^post17, m130^0'=m130^post17, maxbits^0'=maxbits^post17, maxcode^0'=maxcode^post17, maxmaxcode^0'=maxmaxcode^post17, n40^0'=n40^post17, n44^0'=n44^post17, n_bits^0'=n_bits^post17, offset^0'=offset^post17, out_count^0'=out_count^post17, r_off32^0'=r_off32^post17, rat26^0'=rat26^post17, ratio^0'=ratio^post17, ret_getbyte18^0'=ret_getbyte18^post17, ret_getbyte25^0'=ret_getbyte25^post17, seed2^0'=seed2^post17, tabort4^0'=tabort4^post17, tmp12^0'=tmp12^post17, tmp___014^0'=tmp___014^post17, tmp___017^0'=tmp___017^post17, tmp___024^0'=tmp___024^post17, tmp___115^0'=tmp___115^post17, (__const_53^0-__const_53^post17 == 0 /\ out_count^0-out_count^post17 == 0 /\ ret_getbyte25^0-ret_getbyte25^post17 == 0 /\ apsim_incnt^0-apsim_incnt^post17 == 0 /\ c37^0-c37^post17 == 0 /\ -i6^post17+i6^0 == 0 /\ -in_count^post17+in_count^0 == 0 /\ -__const_8388607^post17+__const_8388607^0 == 0 /\ offset^0-offset^post17 == 0 /\ -i21^post17+i21^0 == 0 /\ m130^0-m130^post17 == 0 /\ ent8^0-ent8^post17 == 0 /\ -checkpoint^post17+checkpoint^0 == 0 /\ -clear_flg^post17+clear_flg^0 == 0 /\ -__const_257^0+free_ent^post17 == 0 /\ -bytes_out^post17+bytes_out^0 == 0 /\ -ratio^post17+ratio^0 == 0 /\ __const_16^0-__const_16^post17 == 0 /\ -n_bits^post17+n_bits^0 == 0 /\ code31^0-code31^post17 == 0 /\ c7^0-c7^post17 == 0 /\ __const_257^0-__const_257^post17 == 0 /\ hsize___027^0-hsize___027^post17 == 0 /\ i29^0-i29^post17 == 0 /\ -__const_9^post17+__const_9^0 == 0 /\ -m122^post17+m122^0 == 0 /\ bits33^0-bits33^post17 == 0 /\ tmp12^0-tmp12^post17 == 0 /\ -tmp___014^post17+tmp___014^0 == 0 /\ -r_off32^post17+r_off32^0 == 0 /\ -disp9^post17+disp9^0 == 0 /\ -exit_stat^post17+exit_stat^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post17 == 0 /\ tabort4^0-tabort4^post17 == 0 /\ __const_50^0-__const_50^post17 == 0 /\ -tmp___024^post17+tmp___024^0 == 0 /\ n44^0-n44^post17 == 0 /\ hsize___019^0-hsize___019^post17 == 0 /\ __const_256^0-__const_256^post17 == 0 /\ tmp___115^0-tmp___115^post17 == 0 /\ -maxbits^post17+maxbits^0 == 0 /\ -i3^post17+i3^0 == 0 /\ -n40^post17+n40^0 == 0 /\ hshift11^0-hshift11^post17 == 0 /\ -__const_8^post17+__const_8^0 == 0 /\ i45^0-i45^post17 == 0 /\ -hsize_reg10^post17+hsize_reg10^0 == 0 /\ -__const_429496^post17+__const_429496^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post17 == 0 /\ -hsize^post17+hsize^0 == 0 /\ block_compress^0-block_compress^post17 == 0 /\ -incnt^post17+incnt^0 == 0 /\ -__const_65536^post17+__const_65536^0 == 0 /\ rat26^0-rat26^post17 == 0 /\ -count^post17+count^0 == 0 /\ -__const_2147483647^post17+__const_2147483647^0 == 0 /\ -seed2^post17+seed2^0 == 0 /\ maxmaxcode^0-maxmaxcode^post17 == 0 /\ __const_10000^0-__const_10000^post17 == 0 /\ tmp___017^0-tmp___017^post17 == 0 /\ -fcode5^post17+fcode5^0 == 0 /\ -maxcode^post17+maxcode^0 == 0 /\ -i41^post17+i41^0 == 0), cost: 1
  17: l18 -> l16 : __const_10000^0'=__const_10000^post18, __const_16^0'=__const_16^post18, __const_2147483647^0'=__const_2147483647^post18, __const_256^0'=__const_256^post18, __const_257^0'=__const_257^post18, __const_429496^0'=__const_429496^post18, __const_50^0'=__const_50^post18, __const_53^0'=__const_53^post18, __const_65536^0'=__const_65536^post18, __const_8388607^0'=__const_8388607^post18, __const_8^0'=__const_8^post18, __const_9^0'=__const_9^post18, apsim_bound11113^0'=apsim_bound11113^post18, apsim_incnt^0'=apsim_incnt^post18, bits33^0'=bits33^post18, block_compress^0'=block_compress^post18, bytes_out^0'=bytes_out^post18, c37^0'=c37^post18, c7^0'=c7^post18, checkpoint^0'=checkpoint^post18, clear_flg^0'=clear_flg^post18, code31^0'=code31^post18, count^0'=count^post18, disp9^0'=disp9^post18, ent8^0'=ent8^post18, exit_stat^0'=exit_stat^post18, fcode5^0'=fcode5^post18, free_ent^0'=free_ent^post18, hshift11^0'=hshift11^post18, hsize^0'=hsize^post18, hsize___019^0'=hsize___019^post18, hsize___027^0'=hsize___027^post18, hsize_reg10^0'=hsize_reg10^post18, i21^0'=i21^post18, i29^0'=i29^post18, i3^0'=i3^post18, i41^0'=i41^post18, i45^0'=i45^post18, i6^0'=i6^post18, in_count^0'=in_count^post18, incnt^0'=incnt^post18, m122^0'=m122^post18, m130^0'=m130^post18, maxbits^0'=maxbits^post18, maxcode^0'=maxcode^post18, maxmaxcode^0'=maxmaxcode^post18, n40^0'=n40^post18, n44^0'=n44^post18, n_bits^0'=n_bits^post18, offset^0'=offset^post18, out_count^0'=out_count^post18, r_off32^0'=r_off32^post18, rat26^0'=rat26^post18, ratio^0'=ratio^post18, ret_getbyte18^0'=ret_getbyte18^post18, ret_getbyte25^0'=ret_getbyte25^post18, seed2^0'=seed2^post18, tabort4^0'=tabort4^post18, tmp12^0'=tmp12^post18, tmp___014^0'=tmp___014^post18, tmp___017^0'=tmp___017^post18, tmp___024^0'=tmp___024^post18, tmp___115^0'=tmp___115^post18, (maxcode^0-maxcode^post18 == 0 /\ ent8^0-ent8^post18 == 0 /\ -__const_65536^post18+__const_65536^0 == 0 /\ c7^0-c7^post18 == 0 /\ -__const_429496^post18+__const_429496^0 == 0 /\ -i3^post18+i3^0 == 0 /\ tabort4^0-tabort4^post18 == 0 /\ -i41^post18+i41^0 == 0 /\ __const_257^0-__const_257^post18 == 0 /\ r_off32^0-r_off32^post18 == 0 /\ exit_stat^0-exit_stat^post18 == 0 /\ out_count^0-out_count^post18 == 0 /\ apsim_incnt^0-apsim_incnt^post18 == 0 /\ i29^0-i29^post18 == 0 /\ __const_256^0-__const_256^post18 == 0 /\ -apsim_bound11113^post18+apsim_bound11113^0 == 0 /\ -__const_9^post18+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post18 == 0 /\ -__const_8388607^post18+__const_8388607^0 == 0 /\ -bytes_out^post18+bytes_out^0 == 0 /\ m130^0-m130^post18 == 0 /\ -tmp___115^post18+tmp___115^0 == 0 /\ -n40^post18+n40^0 == 0 /\ -fcode5^post18+fcode5^0 == 0 /\ __const_53^0-__const_53^post18 == 0 /\ -hsize_reg10^post18+hsize_reg10^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post18 == 0 /\ -clear_flg^post18+clear_flg^0 == 0 /\ -i21^post18+i21^0 == 0 /\ -incnt^post18+incnt^0 == 0 /\ tmp12^0-tmp12^post18 == 0 /\ -bits33^post18+bits33^0 == 0 /\ -__const_2147483647^post18+__const_2147483647^0 == 0 /\ -hsize^post18+hsize^0 == 0 /\ hsize___027^0-hsize___027^post18 == 0 /\ -tmp___014^post18+tmp___014^0 == 0 /\ -offset^post18+offset^0 == 0 /\ -ret_getbyte25^post18+ret_getbyte25^0 == 0 /\ i45^0-i45^post18 == 0 /\ -seed2^post18+seed2^0 == 0 /\ -n_bits^post18+n_bits^0 == 0 /\ __const_8^0-__const_8^post18 == 0 /\ -count^post18+count^0 == 0 /\ -block_compress^0 <= 0 /\ n44^0-n44^post18 == 0 /\ -disp9^post18+disp9^0 == 0 /\ __const_50^0-__const_50^post18 == 0 /\ -in_count^post18+in_count^0 == 0 /\ code31^0-code31^post18 == 0 /\ -ratio^post18+ratio^0 == 0 /\ -tmp___024^post18+tmp___024^0 == 0 /\ __const_10000^0-__const_10000^post18 == 0 /\ -maxbits^post18+maxbits^0 == 0 /\ -i6^post18+i6^0 == 0 /\ hshift11^0-hshift11^post18 == 0 /\ tmp___017^0-tmp___017^post18 == 0 /\ -checkpoint^post18+checkpoint^0 == 0 /\ block_compress^0 <= 0 /\ m122^0-m122^post18 == 0 /\ c37^0-c37^post18 == 0 /\ -hsize___019^post18+hsize___019^0 == 0 /\ rat26^0-rat26^post18 == 0 /\ -__const_256^0+free_ent^post18 == 0 /\ -__const_16^post18+__const_16^0 == 0 /\ -block_compress^post18+block_compress^0 == 0), cost: 1
  18: l18 -> l17 : __const_10000^0'=__const_10000^post19, __const_16^0'=__const_16^post19, __const_2147483647^0'=__const_2147483647^post19, __const_256^0'=__const_256^post19, __const_257^0'=__const_257^post19, __const_429496^0'=__const_429496^post19, __const_50^0'=__const_50^post19, __const_53^0'=__const_53^post19, __const_65536^0'=__const_65536^post19, __const_8388607^0'=__const_8388607^post19, __const_8^0'=__const_8^post19, __const_9^0'=__const_9^post19, apsim_bound11113^0'=apsim_bound11113^post19, apsim_incnt^0'=apsim_incnt^post19, bits33^0'=bits33^post19, block_compress^0'=block_compress^post19, bytes_out^0'=bytes_out^post19, c37^0'=c37^post19, c7^0'=c7^post19, checkpoint^0'=checkpoint^post19, clear_flg^0'=clear_flg^post19, code31^0'=code31^post19, count^0'=count^post19, disp9^0'=disp9^post19, ent8^0'=ent8^post19, exit_stat^0'=exit_stat^post19, fcode5^0'=fcode5^post19, free_ent^0'=free_ent^post19, hshift11^0'=hshift11^post19, hsize^0'=hsize^post19, hsize___019^0'=hsize___019^post19, hsize___027^0'=hsize___027^post19, hsize_reg10^0'=hsize_reg10^post19, i21^0'=i21^post19, i29^0'=i29^post19, i3^0'=i3^post19, i41^0'=i41^post19, i45^0'=i45^post19, i6^0'=i6^post19, in_count^0'=in_count^post19, incnt^0'=incnt^post19, m122^0'=m122^post19, m130^0'=m130^post19, maxbits^0'=maxbits^post19, maxcode^0'=maxcode^post19, maxmaxcode^0'=maxmaxcode^post19, n40^0'=n40^post19, n44^0'=n44^post19, n_bits^0'=n_bits^post19, offset^0'=offset^post19, out_count^0'=out_count^post19, r_off32^0'=r_off32^post19, rat26^0'=rat26^post19, ratio^0'=ratio^post19, ret_getbyte18^0'=ret_getbyte18^post19, ret_getbyte25^0'=ret_getbyte25^post19, seed2^0'=seed2^post19, tabort4^0'=tabort4^post19, tmp12^0'=tmp12^post19, tmp___014^0'=tmp___014^post19, tmp___017^0'=tmp___017^post19, tmp___024^0'=tmp___024^post19, tmp___115^0'=tmp___115^post19, (-n_bits^post19+n_bits^0 == 0 /\ m130^0-m130^post19 == 0 /\ -r_off32^post19+r_off32^0 == 0 /\ hsize___019^0-hsize___019^post19 == 0 /\ offset^0-offset^post19 == 0 /\ code31^0-code31^post19 == 0 /\ -tmp___014^post19+tmp___014^0 == 0 /\ -__const_257^post19+__const_257^0 == 0 /\ -seed2^post19+seed2^0 == 0 /\ -fcode5^post19+fcode5^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post19 == 0 /\ -__const_16^post19+__const_16^0 == 0 /\ -block_compress^post19+block_compress^0 == 0 /\ -__const_2147483647^post19+__const_2147483647^0 == 0 /\ -exit_stat^post19+exit_stat^0 == 0 /\ -disp9^post19+disp9^0 == 0 /\ -count^post19+count^0 == 0 /\ -tmp___024^post19+tmp___024^0 == 0 /\ n44^0-n44^post19 == 0 /\ c37^0-c37^post19 == 0 /\ -tmp___115^post19+tmp___115^0 == 0 /\ -i6^post19+i6^0 == 0 /\ -maxbits^post19+maxbits^0 == 0 /\ c7^0-c7^post19 == 0 /\ -checkpoint^post19+checkpoint^0 == 0 /\ tabort4^0-tabort4^post19 == 0 /\ hsize___027^0-hsize___027^post19 == 0 /\ -__const_65536^post19+__const_65536^0 == 0 /\ i29^0-i29^post19 == 0 /\ -ratio^post19+ratio^0 == 0 /\ apsim_incnt^0-apsim_incnt^post19 == 0 /\ -m122^post19+m122^0 == 0 /\ __const_50^0-__const_50^post19 == 0 /\ -i3^post19+i3^0 == 0 /\ -i41^post19+i41^0 == 0 /\ -incnt^post19+incnt^0 == 0 /\ n40^0-n40^post19 == 0 /\ hshift11^0-hshift11^post19 == 0 /\ __const_10000^0-__const_10000^post19 == 0 /\ tmp___017^0-tmp___017^post19 == 0 /\ -apsim_bound11113^post19+apsim_bound11113^0 == 0 /\ -__const_8388607^post19+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post19 == 0 /\ tmp12^0-tmp12^post19 == 0 /\ free_ent^0-free_ent^post19 == 0 /\ rat26^0-rat26^post19 == 0 /\ 1-block_compress^0 <= 0 /\ __const_8^0-__const_8^post19 == 0 /\ -ret_getbyte18^post19+ret_getbyte18^0 == 0 /\ -in_count^post19+in_count^0 == 0 /\ __const_256^0-__const_256^post19 == 0 /\ i45^0-i45^post19 == 0 /\ ent8^0-ent8^post19 == 0 /\ -maxcode^post19+maxcode^0 == 0 /\ -bits33^post19+bits33^0 == 0 /\ -clear_flg^post19+clear_flg^0 == 0 /\ -hsize_reg10^post19+hsize_reg10^0 == 0 /\ -__const_9^post19+__const_9^0 == 0 /\ out_count^0-out_count^post19 == 0 /\ -__const_429496^post19+__const_429496^0 == 0 /\ -i21^post19+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post19 == 0 /\ -bytes_out^post19+bytes_out^0 == 0 /\ -hsize^post19+hsize^0 == 0), cost: 1
  19: l18 -> l17 : __const_10000^0'=__const_10000^post20, __const_16^0'=__const_16^post20, __const_2147483647^0'=__const_2147483647^post20, __const_256^0'=__const_256^post20, __const_257^0'=__const_257^post20, __const_429496^0'=__const_429496^post20, __const_50^0'=__const_50^post20, __const_53^0'=__const_53^post20, __const_65536^0'=__const_65536^post20, __const_8388607^0'=__const_8388607^post20, __const_8^0'=__const_8^post20, __const_9^0'=__const_9^post20, apsim_bound11113^0'=apsim_bound11113^post20, apsim_incnt^0'=apsim_incnt^post20, bits33^0'=bits33^post20, block_compress^0'=block_compress^post20, bytes_out^0'=bytes_out^post20, c37^0'=c37^post20, c7^0'=c7^post20, checkpoint^0'=checkpoint^post20, clear_flg^0'=clear_flg^post20, code31^0'=code31^post20, count^0'=count^post20, disp9^0'=disp9^post20, ent8^0'=ent8^post20, exit_stat^0'=exit_stat^post20, fcode5^0'=fcode5^post20, free_ent^0'=free_ent^post20, hshift11^0'=hshift11^post20, hsize^0'=hsize^post20, hsize___019^0'=hsize___019^post20, hsize___027^0'=hsize___027^post20, hsize_reg10^0'=hsize_reg10^post20, i21^0'=i21^post20, i29^0'=i29^post20, i3^0'=i3^post20, i41^0'=i41^post20, i45^0'=i45^post20, i6^0'=i6^post20, in_count^0'=in_count^post20, incnt^0'=incnt^post20, m122^0'=m122^post20, m130^0'=m130^post20, maxbits^0'=maxbits^post20, maxcode^0'=maxcode^post20, maxmaxcode^0'=maxmaxcode^post20, n40^0'=n40^post20, n44^0'=n44^post20, n_bits^0'=n_bits^post20, offset^0'=offset^post20, out_count^0'=out_count^post20, r_off32^0'=r_off32^post20, rat26^0'=rat26^post20, ratio^0'=ratio^post20, ret_getbyte18^0'=ret_getbyte18^post20, ret_getbyte25^0'=ret_getbyte25^post20, seed2^0'=seed2^post20, tabort4^0'=tabort4^post20, tmp12^0'=tmp12^post20, tmp___014^0'=tmp___014^post20, tmp___017^0'=tmp___017^post20, tmp___024^0'=tmp___024^post20, tmp___115^0'=tmp___115^post20, (n44^0-n44^post20 == 0 /\ ret_getbyte25^0-ret_getbyte25^post20 == 0 /\ apsim_incnt^0-apsim_incnt^post20 == 0 /\ tabort4^0-tabort4^post20 == 0 /\ c37^0-c37^post20 == 0 /\ -checkpoint^post20+checkpoint^0 == 0 /\ -hsize_reg10^post20+hsize_reg10^0 == 0 /\ -ratio^post20+ratio^0 == 0 /\ ent8^0-ent8^post20 == 0 /\ -hsize___019^post20+hsize___019^0 == 0 /\ -hsize^post20+hsize^0 == 0 /\ __const_256^0-__const_256^post20 == 0 /\ out_count^0-out_count^post20 == 0 /\ hsize___027^0-hsize___027^post20 == 0 /\ c7^0-c7^post20 == 0 /\ -m122^post20+m122^0 == 0 /\ -maxbits^post20+maxbits^0 == 0 /\ -n40^post20+n40^0 == 0 /\ -i3^post20+i3^0 == 0 /\ i29^0-i29^post20 == 0 /\ -i41^post20+i41^0 == 0 /\ -__const_8388607^post20+__const_8388607^0 == 0 /\ bytes_out^0-bytes_out^post20 == 0 /\ -i21^post20+i21^0 == 0 /\ exit_stat^0-exit_stat^post20 == 0 /\ -incnt^post20+incnt^0 == 0 /\ maxcode^0-maxcode^post20 == 0 /\ __const_50^0-__const_50^post20 == 0 /\ -bits33^post20+bits33^0 == 0 /\ -__const_429496^post20+__const_429496^0 == 0 /\ __const_53^0-__const_53^post20 == 0 /\ m130^0-m130^post20 == 0 /\ -__const_9^post20+__const_9^0 == 0 /\ -in_count^post20+in_count^0 == 0 /\ -r_off32^post20+r_off32^0 == 0 /\ tmp12^0-tmp12^post20 == 0 /\ ret_getbyte18^0-ret_getbyte18^post20 == 0 /\ 1+block_compress^0 <= 0 /\ -clear_flg^post20+clear_flg^0 == 0 /\ -n_bits^post20+n_bits^0 == 0 /\ -offset^post20+offset^0 == 0 /\ __const_257^0-__const_257^post20 == 0 /\ -fcode5^post20+fcode5^0 == 0 /\ -disp9^post20+disp9^0 == 0 /\ -count^post20+count^0 == 0 /\ -tmp___024^post20+tmp___024^0 == 0 /\ i45^0-i45^post20 == 0 /\ -tmp___115^post20+tmp___115^0 == 0 /\ __const_10000^0-__const_10000^post20 == 0 /\ -block_compress^post20+block_compress^0 == 0 /\ -__const_2147483647^post20+__const_2147483647^0 == 0 /\ -__const_8^post20+__const_8^0 == 0 /\ -seed2^post20+seed2^0 == 0 /\ -tmp___014^post20+tmp___014^0 == 0 /\ hshift11^0-hshift11^post20 == 0 /\ free_ent^0-free_ent^post20 == 0 /\ maxmaxcode^0-maxmaxcode^post20 == 0 /\ rat26^0-rat26^post20 == 0 /\ __const_16^0-__const_16^post20 == 0 /\ tmp___017^0-tmp___017^post20 == 0 /\ code31^0-code31^post20 == 0 /\ -apsim_bound11113^post20+apsim_bound11113^0 == 0 /\ -__const_65536^post20+__const_65536^0 == 0 /\ -i6^post20+i6^0 == 0), cost: 1
  20: l19 -> l20 : __const_10000^0'=__const_10000^post21, __const_16^0'=__const_16^post21, __const_2147483647^0'=__const_2147483647^post21, __const_256^0'=__const_256^post21, __const_257^0'=__const_257^post21, __const_429496^0'=__const_429496^post21, __const_50^0'=__const_50^post21, __const_53^0'=__const_53^post21, __const_65536^0'=__const_65536^post21, __const_8388607^0'=__const_8388607^post21, __const_8^0'=__const_8^post21, __const_9^0'=__const_9^post21, apsim_bound11113^0'=apsim_bound11113^post21, apsim_incnt^0'=apsim_incnt^post21, bits33^0'=bits33^post21, block_compress^0'=block_compress^post21, bytes_out^0'=bytes_out^post21, c37^0'=c37^post21, c7^0'=c7^post21, checkpoint^0'=checkpoint^post21, clear_flg^0'=clear_flg^post21, code31^0'=code31^post21, count^0'=count^post21, disp9^0'=disp9^post21, ent8^0'=ent8^post21, exit_stat^0'=exit_stat^post21, fcode5^0'=fcode5^post21, free_ent^0'=free_ent^post21, hshift11^0'=hshift11^post21, hsize^0'=hsize^post21, hsize___019^0'=hsize___019^post21, hsize___027^0'=hsize___027^post21, hsize_reg10^0'=hsize_reg10^post21, i21^0'=i21^post21, i29^0'=i29^post21, i3^0'=i3^post21, i41^0'=i41^post21, i45^0'=i45^post21, i6^0'=i6^post21, in_count^0'=in_count^post21, incnt^0'=incnt^post21, m122^0'=m122^post21, m130^0'=m130^post21, maxbits^0'=maxbits^post21, maxcode^0'=maxcode^post21, maxmaxcode^0'=maxmaxcode^post21, n40^0'=n40^post21, n44^0'=n44^post21, n_bits^0'=n_bits^post21, offset^0'=offset^post21, out_count^0'=out_count^post21, r_off32^0'=r_off32^post21, rat26^0'=rat26^post21, ratio^0'=ratio^post21, ret_getbyte18^0'=ret_getbyte18^post21, ret_getbyte25^0'=ret_getbyte25^post21, seed2^0'=seed2^post21, tabort4^0'=tabort4^post21, tmp12^0'=tmp12^post21, tmp___014^0'=tmp___014^post21, tmp___017^0'=tmp___017^post21, tmp___024^0'=tmp___024^post21, tmp___115^0'=tmp___115^post21, (0 == 0 /\ tmp12^0-tmp12^post21 == 0 /\ exit_stat^0-exit_stat^post21 == 0 /\ -i21^post21+i21^0 == 0 /\ __const_257^0-__const_257^post21 == 0 /\ i29^0-i29^post21 == 0 /\ maxmaxcode^0-maxmaxcode^post21 == 0 /\ maxcode^0-maxcode^post21 == 0 /\ bytes_out^0-bytes_out^post21 == 0 /\ offset^0-offset^post21 == 0 /\ tabort4^0-tabort4^post21 == 0 /\ ret_getbyte18^0-ret_getbyte18^post21 == 0 /\ __const_256^0-__const_256^post21 == 0 /\ r_off32^0-r_off32^post21 == 0 /\ tmp___017^0-tmp___017^post21 == 0 /\ -__const_429496^post21+__const_429496^0 == 0 /\ -incnt^post21+incnt^0 == 0 /\ -i41^post21+i41^0 == 0 /\ out_count^0-out_count^post21 == 0 /\ -apsim_bound11113^post21+apsim_bound11113^0 == 0 /\ -hsize^post21+hsize^0 == 0 /\ -rat26^post21+rat26^0 == 0 /\ -__const_65536^post21+__const_65536^0 == 0 /\ n44^0-n44^post21 == 0 /\ apsim_incnt^0-apsim_incnt^post21 == 0 /\ 1+bits33^post21-bits33^0 == 0 /\ -__const_2147483647^post21+__const_2147483647^0 == 0 /\ m130^0-m130^post21 == 0 /\ ent8^0-ent8^post21 == 0 /\ i45^0-i45^post21 == 0 /\ -__const_16^post21+__const_16^0 == 0 /\ -seed2^post21+seed2^0 == 0 /\ -tmp___115^post21+tmp___115^0 == 0 /\ __const_10000^0-__const_10000^post21 == 0 /\ -fcode5^post21+fcode5^0 == 0 /\ -block_compress^post21+block_compress^0 == 0 /\ -n40^post21+n40^0 == 0 /\ -i6^post21+i6^0 == 0 /\ -in_count^post21+in_count^0 == 0 /\ -__const_8388607^post21+__const_8388607^0 == 0 /\ -checkpoint^post21+checkpoint^0 == 0 /\ __const_8^0-__const_8^post21 == 0 /\ -ratio^post21+ratio^0 == 0 /\ __const_50^0-__const_50^post21 == 0 /\ -clear_flg^post21+clear_flg^0 == 0 /\ count^0-count^post21 == 0 /\ -hsize_reg10^post21+hsize_reg10^0 == 0 /\ __const_53^0-__const_53^post21 == 0 /\ -n_bits^post21+n_bits^0 == 0 /\ m122^0-m122^post21 == 0 /\ hsize___027^0-hsize___027^post21 == 0 /\ hshift11^0-hshift11^post21 == 0 /\ -hsize___019^post21+hsize___019^0 == 0 /\ -__const_9^post21+__const_9^0 == 0 /\ -tmp___014^post21+tmp___014^0 == 0 /\ -code31^post21+code31^0 == 0 /\ -disp9^post21+disp9^0 == 0 /\ -tmp___024^post21+tmp___024^0 == 0 /\ c7^0-c7^post21 == 0 /\ free_ent^0-free_ent^post21 == 0 /\ -maxbits^post21+maxbits^0 == 0 /\ -i3^post21+i3^0 == 0 /\ -ret_getbyte25^post21+ret_getbyte25^0 == 0), cost: 1
  57: l20 -> l44 : __const_10000^0'=__const_10000^post58, __const_16^0'=__const_16^post58, __const_2147483647^0'=__const_2147483647^post58, __const_256^0'=__const_256^post58, __const_257^0'=__const_257^post58, __const_429496^0'=__const_429496^post58, __const_50^0'=__const_50^post58, __const_53^0'=__const_53^post58, __const_65536^0'=__const_65536^post58, __const_8388607^0'=__const_8388607^post58, __const_8^0'=__const_8^post58, __const_9^0'=__const_9^post58, apsim_bound11113^0'=apsim_bound11113^post58, apsim_incnt^0'=apsim_incnt^post58, bits33^0'=bits33^post58, block_compress^0'=block_compress^post58, bytes_out^0'=bytes_out^post58, c37^0'=c37^post58, c7^0'=c7^post58, checkpoint^0'=checkpoint^post58, clear_flg^0'=clear_flg^post58, code31^0'=code31^post58, count^0'=count^post58, disp9^0'=disp9^post58, ent8^0'=ent8^post58, exit_stat^0'=exit_stat^post58, fcode5^0'=fcode5^post58, free_ent^0'=free_ent^post58, hshift11^0'=hshift11^post58, hsize^0'=hsize^post58, hsize___019^0'=hsize___019^post58, hsize___027^0'=hsize___027^post58, hsize_reg10^0'=hsize_reg10^post58, i21^0'=i21^post58, i29^0'=i29^post58, i3^0'=i3^post58, i41^0'=i41^post58, i45^0'=i45^post58, i6^0'=i6^post58, in_count^0'=in_count^post58, incnt^0'=incnt^post58, m122^0'=m122^post58, m130^0'=m130^post58, maxbits^0'=maxbits^post58, maxcode^0'=maxcode^post58, maxmaxcode^0'=maxmaxcode^post58, n40^0'=n40^post58, n44^0'=n44^post58, n_bits^0'=n_bits^post58, offset^0'=offset^post58, out_count^0'=out_count^post58, r_off32^0'=r_off32^post58, rat26^0'=rat26^post58, ratio^0'=ratio^post58, ret_getbyte18^0'=ret_getbyte18^post58, ret_getbyte25^0'=ret_getbyte25^post58, seed2^0'=seed2^post58, tabort4^0'=tabort4^post58, tmp12^0'=tmp12^post58, tmp___014^0'=tmp___014^post58, tmp___017^0'=tmp___017^post58, tmp___024^0'=tmp___024^post58, tmp___115^0'=tmp___115^post58, (ret_getbyte25^0-ret_getbyte25^post58 == 0 /\ apsim_incnt^0-apsim_incnt^post58 == 0 /\ m130^0-m130^post58 == 0 /\ -i3^post58+i3^0 == 0 /\ -i41^post58+i41^0 == 0 /\ hsize___019^0-hsize___019^post58 == 0 /\ n44^0-n44^post58 == 0 /\ -in_count^post58+in_count^0 == 0 /\ __const_257^0-__const_257^post58 == 0 /\ ent8^0-ent8^post58 == 0 /\ __const_65536^0-__const_65536^post58 == 0 /\ -__const_8388607^post58+__const_8388607^0 == 0 /\ -__const_256^post58+__const_256^0 == 0 /\ i29^0-i29^post58 == 0 /\ bits33^0 <= 0 /\ -__const_50^post58+__const_50^0 == 0 /\ -disp9^post58+disp9^0 == 0 /\ -tabort4^post58+tabort4^0 == 0 /\ tmp12^0-tmp12^post58 == 0 /\ c37^0-c37^post58 == 0 /\ -hsize_reg10^post58+hsize_reg10^0 == 0 /\ -count^post58+count^0 == 0 /\ -exit_stat^post58+exit_stat^0 == 0 /\ -maxbits^post58+maxbits^0 == 0 /\ tmp___014^0-tmp___014^post58 == 0 /\ -__const_10000^post58+__const_10000^0 == 0 /\ -bytes_out^post58+bytes_out^0 == 0 /\ -i21^post58+i21^0 == 0 /\ rat26^0-rat26^post58 == 0 /\ -m122^post58+m122^0 == 0 /\ __const_53^0-__const_53^post58 == 0 /\ hsize___027^0-hsize___027^post58 == 0 /\ __const_8^0-__const_8^post58 == 0 /\ code31^0-code31^post58 == 0 /\ c7^0-c7^post58 == 0 /\ -tmp___017^post58+tmp___017^0 == 0 /\ -tmp___024^post58+tmp___024^0 == 0 /\ -bits33^0 <= 0 /\ tmp___115^0-tmp___115^post58 == 0 /\ i45^0-i45^post58 == 0 /\ hshift11^0-hshift11^post58 == 0 /\ free_ent^0-free_ent^post58 == 0 /\ -r_off32^post58+r_off32^0 == 0 /\ -ratio^post58+ratio^0 == 0 /\ -ret_getbyte18^post58+ret_getbyte18^0 == 0 /\ out_count^0-out_count^post58 == 0 /\ -n_bits^post58+n_bits^0 == 0 /\ -clear_flg^post58+clear_flg^0 == 0 /\ -checkpoint^post58+checkpoint^0 == 0 /\ -seed2^post58+seed2^0 == 0 /\ -fcode5^post58+fcode5^0 == 0 /\ __const_9^0-__const_9^post58 == 0 /\ -i6^post58+i6^0 == 0 /\ __const_2147483647^0-__const_2147483647^post58 == 0 /\ offset^0-offset^post58 == 0 /\ -block_compress^post58+block_compress^0 == 0 /\ -n40^post58+n40^0 == 0 /\ -maxcode^post58+maxcode^0 == 0 /\ maxmaxcode^0-maxmaxcode^post58 == 0 /\ bits33^0-bits33^post58 == 0 /\ -hsize^post58+hsize^0 == 0 /\ __const_429496^0-__const_429496^post58 == 0 /\ -apsim_bound11113^post58+apsim_bound11113^0 == 0 /\ __const_16^0-__const_16^post58 == 0 /\ -incnt^post58+incnt^0 == 0), cost: 1
  58: l20 -> l45 : __const_10000^0'=__const_10000^post59, __const_16^0'=__const_16^post59, __const_2147483647^0'=__const_2147483647^post59, __const_256^0'=__const_256^post59, __const_257^0'=__const_257^post59, __const_429496^0'=__const_429496^post59, __const_50^0'=__const_50^post59, __const_53^0'=__const_53^post59, __const_65536^0'=__const_65536^post59, __const_8388607^0'=__const_8388607^post59, __const_8^0'=__const_8^post59, __const_9^0'=__const_9^post59, apsim_bound11113^0'=apsim_bound11113^post59, apsim_incnt^0'=apsim_incnt^post59, bits33^0'=bits33^post59, block_compress^0'=block_compress^post59, bytes_out^0'=bytes_out^post59, c37^0'=c37^post59, c7^0'=c7^post59, checkpoint^0'=checkpoint^post59, clear_flg^0'=clear_flg^post59, code31^0'=code31^post59, count^0'=count^post59, disp9^0'=disp9^post59, ent8^0'=ent8^post59, exit_stat^0'=exit_stat^post59, fcode5^0'=fcode5^post59, free_ent^0'=free_ent^post59, hshift11^0'=hshift11^post59, hsize^0'=hsize^post59, hsize___019^0'=hsize___019^post59, hsize___027^0'=hsize___027^post59, hsize_reg10^0'=hsize_reg10^post59, i21^0'=i21^post59, i29^0'=i29^post59, i3^0'=i3^post59, i41^0'=i41^post59, i45^0'=i45^post59, i6^0'=i6^post59, in_count^0'=in_count^post59, incnt^0'=incnt^post59, m122^0'=m122^post59, m130^0'=m130^post59, maxbits^0'=maxbits^post59, maxcode^0'=maxcode^post59, maxmaxcode^0'=maxmaxcode^post59, n40^0'=n40^post59, n44^0'=n44^post59, n_bits^0'=n_bits^post59, offset^0'=offset^post59, out_count^0'=out_count^post59, r_off32^0'=r_off32^post59, rat26^0'=rat26^post59, ratio^0'=ratio^post59, ret_getbyte18^0'=ret_getbyte18^post59, ret_getbyte25^0'=ret_getbyte25^post59, seed2^0'=seed2^post59, tabort4^0'=tabort4^post59, tmp12^0'=tmp12^post59, tmp___014^0'=tmp___014^post59, tmp___017^0'=tmp___017^post59, tmp___024^0'=tmp___024^post59, tmp___115^0'=tmp___115^post59, (ent8^0-ent8^post59 == 0 /\ -tmp___024^post59+tmp___024^0 == 0 /\ -hsize^post59+hsize^0 == 0 /\ -n_bits^post59+n_bits^0 == 0 /\ -incnt^post59+incnt^0 == 0 /\ -tmp___115^post59+tmp___115^0 == 0 /\ offset^0-offset^post59 == 0 /\ -hsize___019^post59+hsize___019^0 == 0 /\ code31^0-code31^post59 == 0 /\ -r_off32^post59+r_off32^0 == 0 /\ __const_9^0-__const_9^post59 == 0 /\ -m122^post59+m122^0 == 0 /\ hsize___027^0-hsize___027^post59 == 0 /\ ret_getbyte25^0-ret_getbyte25^post59 == 0 /\ exit_stat^0-exit_stat^post59 == 0 /\ -disp9^post59+disp9^0 == 0 /\ -count^post59+count^0 == 0 /\ -maxbits^post59+maxbits^0 == 0 /\ maxcode^0-maxcode^post59 == 0 /\ c37^0-c37^post59 == 0 /\ bits33^0-bits33^post59 == 0 /\ -seed2^post59+seed2^0 == 0 /\ -n40^post59+n40^0 == 0 /\ c7^0-c7^post59 == 0 /\ -checkpoint^post59+checkpoint^0 == 0 /\ __const_65536^0-__const_65536^post59 == 0 /\ i45^0-i45^post59 == 0 /\ -apsim_bound11113^post59+apsim_bound11113^0 == 0 /\ apsim_incnt^0-apsim_incnt^post59 == 0 /\ -__const_8388607^post59+__const_8388607^0 == 0 /\ -__const_256^post59+__const_256^0 == 0 /\ n44^0-n44^post59 == 0 /\ -ratio^post59+ratio^0 == 0 /\ m130^0-m130^post59 == 0 /\ __const_2147483647^0-__const_2147483647^post59 == 0 /\ __const_53^0-__const_53^post59 == 0 /\ 1-bits33^0 <= 0 /\ tmp12^0-tmp12^post59 == 0 /\ -__const_429496^post59+__const_429496^0 == 0 /\ -i3^post59+i3^0 == 0 /\ -__const_50^post59+__const_50^0 == 0 /\ __const_16^0-__const_16^post59 == 0 /\ -i41^post59+i41^0 == 0 /\ -i29^post59+i29^0 == 0 /\ __const_8^0-__const_8^post59 == 0 /\ hshift11^0-hshift11^post59 == 0 /\ tabort4^0-tabort4^post59 == 0 /\ rat26^0-rat26^post59 == 0 /\ tmp___017^0-tmp___017^post59 == 0 /\ -fcode5^post59+fcode5^0 == 0 /\ -tmp___014^post59+tmp___014^0 == 0 /\ i6^0-i6^post59 == 0 /\ -i21^post59+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post59 == 0 /\ -clear_flg^post59+clear_flg^0 == 0 /\ free_ent^0-free_ent^post59 == 0 /\ __const_257^0-__const_257^post59 == 0 /\ -__const_10000^post59+__const_10000^0 == 0 /\ -in_count^post59+in_count^0 == 0 /\ block_compress^0-block_compress^post59 == 0 /\ out_count^0-out_count^post59 == 0 /\ -bytes_out^post59+bytes_out^0 == 0 /\ -hsize_reg10^post59+hsize_reg10^0 == 0 /\ -ret_getbyte18^post59+ret_getbyte18^0 == 0), cost: 1
  59: l20 -> l45 : __const_10000^0'=__const_10000^post60, __const_16^0'=__const_16^post60, __const_2147483647^0'=__const_2147483647^post60, __const_256^0'=__const_256^post60, __const_257^0'=__const_257^post60, __const_429496^0'=__const_429496^post60, __const_50^0'=__const_50^post60, __const_53^0'=__const_53^post60, __const_65536^0'=__const_65536^post60, __const_8388607^0'=__const_8388607^post60, __const_8^0'=__const_8^post60, __const_9^0'=__const_9^post60, apsim_bound11113^0'=apsim_bound11113^post60, apsim_incnt^0'=apsim_incnt^post60, bits33^0'=bits33^post60, block_compress^0'=block_compress^post60, bytes_out^0'=bytes_out^post60, c37^0'=c37^post60, c7^0'=c7^post60, checkpoint^0'=checkpoint^post60, clear_flg^0'=clear_flg^post60, code31^0'=code31^post60, count^0'=count^post60, disp9^0'=disp9^post60, ent8^0'=ent8^post60, exit_stat^0'=exit_stat^post60, fcode5^0'=fcode5^post60, free_ent^0'=free_ent^post60, hshift11^0'=hshift11^post60, hsize^0'=hsize^post60, hsize___019^0'=hsize___019^post60, hsize___027^0'=hsize___027^post60, hsize_reg10^0'=hsize_reg10^post60, i21^0'=i21^post60, i29^0'=i29^post60, i3^0'=i3^post60, i41^0'=i41^post60, i45^0'=i45^post60, i6^0'=i6^post60, in_count^0'=in_count^post60, incnt^0'=incnt^post60, m122^0'=m122^post60, m130^0'=m130^post60, maxbits^0'=maxbits^post60, maxcode^0'=maxcode^post60, maxmaxcode^0'=maxmaxcode^post60, n40^0'=n40^post60, n44^0'=n44^post60, n_bits^0'=n_bits^post60, offset^0'=offset^post60, out_count^0'=out_count^post60, r_off32^0'=r_off32^post60, rat26^0'=rat26^post60, ratio^0'=ratio^post60, ret_getbyte18^0'=ret_getbyte18^post60, ret_getbyte25^0'=ret_getbyte25^post60, seed2^0'=seed2^post60, tabort4^0'=tabort4^post60, tmp12^0'=tmp12^post60, tmp___014^0'=tmp___014^post60, tmp___017^0'=tmp___017^post60, tmp___024^0'=tmp___024^post60, tmp___115^0'=tmp___115^post60, (-__const_50^post60+__const_50^0 == 0 /\ __const_257^0-__const_257^post60 == 0 /\ apsim_incnt^0-apsim_incnt^post60 == 0 /\ -i3^post60+i3^0 == 0 /\ i29^0-i29^post60 == 0 /\ -i41^post60+i41^0 == 0 /\ -exit_stat^post60+exit_stat^0 == 0 /\ -fcode5^post60+fcode5^0 == 0 /\ -i21^post60+i21^0 == 0 /\ m130^0-m130^post60 == 0 /\ -incnt^post60+incnt^0 == 0 /\ code31^0-code31^post60 == 0 /\ __const_53^0-__const_53^post60 == 0 /\ 1+bits33^0 <= 0 /\ hsize___027^0-hsize___027^post60 == 0 /\ __const_8^0-__const_8^post60 == 0 /\ tmp12^0-tmp12^post60 == 0 /\ __const_65536^0-__const_65536^post60 == 0 /\ -tmp___024^post60+tmp___024^0 == 0 /\ hshift11^0-hshift11^post60 == 0 /\ -__const_10000^post60+__const_10000^0 == 0 /\ -tmp___014^post60+tmp___014^0 == 0 /\ -in_count^post60+in_count^0 == 0 /\ -clear_flg^post60+clear_flg^0 == 0 /\ -bytes_out^post60+bytes_out^0 == 0 /\ -n44^post60+n44^0 == 0 /\ rat26^0-rat26^post60 == 0 /\ hsize___019^0-hsize___019^post60 == 0 /\ -ret_getbyte18^post60+ret_getbyte18^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post60 == 0 /\ c37^0-c37^post60 == 0 /\ -tabort4^post60+tabort4^0 == 0 /\ -c7^post60+c7^0 == 0 /\ ent8^0-ent8^post60 == 0 /\ -hsize^post60+hsize^0 == 0 /\ -hsize_reg10^post60+hsize_reg10^0 == 0 /\ __const_429496^0-__const_429496^post60 == 0 /\ checkpoint^0-checkpoint^post60 == 0 /\ maxmaxcode^0-maxmaxcode^post60 == 0 /\ -n_bits^post60+n_bits^0 == 0 /\ -m122^post60+m122^0 == 0 /\ -r_off32^post60+r_off32^0 == 0 /\ i45^0-i45^post60 == 0 /\ free_ent^0-free_ent^post60 == 0 /\ -count^post60+count^0 == 0 /\ n40^0-n40^post60 == 0 /\ tmp___115^0-tmp___115^post60 == 0 /\ -disp9^post60+disp9^0 == 0 /\ -seed2^post60+seed2^0 == 0 /\ out_count^0-out_count^post60 == 0 /\ __const_9^0-__const_9^post60 == 0 /\ -maxbits^post60+maxbits^0 == 0 /\ -maxcode^post60+maxcode^0 == 0 /\ offset^0-offset^post60 == 0 /\ __const_2147483647^0-__const_2147483647^post60 == 0 /\ -apsim_bound11113^post60+apsim_bound11113^0 == 0 /\ __const_16^0-__const_16^post60 == 0 /\ -i6^post60+i6^0 == 0 /\ -__const_8388607^post60+__const_8388607^0 == 0 /\ -block_compress^post60+block_compress^0 == 0 /\ -__const_256^post60+__const_256^0 == 0 /\ tmp___017^0-tmp___017^post60 == 0 /\ -ratio^post60+ratio^0 == 0 /\ bits33^0-bits33^post60 == 0), cost: 1
  21: l21 -> l22 : __const_10000^0'=__const_10000^post22, __const_16^0'=__const_16^post22, __const_2147483647^0'=__const_2147483647^post22, __const_256^0'=__const_256^post22, __const_257^0'=__const_257^post22, __const_429496^0'=__const_429496^post22, __const_50^0'=__const_50^post22, __const_53^0'=__const_53^post22, __const_65536^0'=__const_65536^post22, __const_8388607^0'=__const_8388607^post22, __const_8^0'=__const_8^post22, __const_9^0'=__const_9^post22, apsim_bound11113^0'=apsim_bound11113^post22, apsim_incnt^0'=apsim_incnt^post22, bits33^0'=bits33^post22, block_compress^0'=block_compress^post22, bytes_out^0'=bytes_out^post22, c37^0'=c37^post22, c7^0'=c7^post22, checkpoint^0'=checkpoint^post22, clear_flg^0'=clear_flg^post22, code31^0'=code31^post22, count^0'=count^post22, disp9^0'=disp9^post22, ent8^0'=ent8^post22, exit_stat^0'=exit_stat^post22, fcode5^0'=fcode5^post22, free_ent^0'=free_ent^post22, hshift11^0'=hshift11^post22, hsize^0'=hsize^post22, hsize___019^0'=hsize___019^post22, hsize___027^0'=hsize___027^post22, hsize_reg10^0'=hsize_reg10^post22, i21^0'=i21^post22, i29^0'=i29^post22, i3^0'=i3^post22, i41^0'=i41^post22, i45^0'=i45^post22, i6^0'=i6^post22, in_count^0'=in_count^post22, incnt^0'=incnt^post22, m122^0'=m122^post22, m130^0'=m130^post22, maxbits^0'=maxbits^post22, maxcode^0'=maxcode^post22, maxmaxcode^0'=maxmaxcode^post22, n40^0'=n40^post22, n44^0'=n44^post22, n_bits^0'=n_bits^post22, offset^0'=offset^post22, out_count^0'=out_count^post22, r_off32^0'=r_off32^post22, rat26^0'=rat26^post22, ratio^0'=ratio^post22, ret_getbyte18^0'=ret_getbyte18^post22, ret_getbyte25^0'=ret_getbyte25^post22, seed2^0'=seed2^post22, tabort4^0'=tabort4^post22, tmp12^0'=tmp12^post22, tmp___014^0'=tmp___014^post22, tmp___017^0'=tmp___017^post22, tmp___024^0'=tmp___024^post22, tmp___115^0'=tmp___115^post22, (-i29^post22+i29^0 == 0 /\ -tmp12^post22+tmp12^0 == 0 /\ -seed2^post22+seed2^0 == 0 /\ -tmp___014^post22+tmp___014^0 == 0 /\ -ret_getbyte25^post22+ret_getbyte25^0 == 0 /\ -code31^post22+code31^0 == 0 /\ tmp___024^0-tmp___024^post22 == 0 /\ -c37^post22+c37^0 == 0 /\ hshift11^0-hshift11^post22 == 0 /\ -block_compress^post22+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post22 == 0 /\ free_ent^0-free_ent^post22 == 0 /\ -ent8^post22+ent8^0 == 0 /\ -rat26^post22+rat26^0 == 0 /\ -in_count^post22+in_count^0 == 0 /\ -disp9^post22+disp9^0 == 0 /\ out_count^0-out_count^post22 == 0 /\ -ratio^post22+ratio^0 == 0 /\ maxcode^0-maxcode^post22 == 0 /\ __const_10000^0-__const_10000^post22 == 0 /\ r_off32^0-r_off32^post22 == 0 /\ i45^0-i45^post22 == 0 /\ -maxbits^post22+maxbits^0 == 0 /\ exit_stat^0-exit_stat^post22 == 0 /\ __const_16^0-__const_16^post22 == 0 /\ -hsize___019^post22+hsize___019^0 == 0 /\ tmp___017^0-tmp___017^post22 == 0 /\ -c7^post22+c7^0 == 0 /\ -i21^post22+i21^0 == 0 /\ apsim_incnt^0-apsim_incnt^post22 == 0 /\ maxmaxcode^0-maxmaxcode^post22 == 0 /\ -__const_2147483647^post22+__const_2147483647^0 == 0 /\ -__const_65536^post22+__const_65536^0 == 0 /\ __const_53^0-__const_53^post22 == 0 /\ -__const_429496^post22+__const_429496^0 == 0 /\ -i3^post22+i3^0 == 0 /\ -i41^post22+i41^0 == 0 /\ m122^0-m122^post22 == 0 /\ count^0-count^post22 == 0 /\ -n_bits^post22+n_bits^0 == 0 /\ -offset^post22+offset^0 == 0 /\ -apsim_bound11113^post22+apsim_bound11113^0 == 0 /\ -__const_9^post22+__const_9^0 == 0 /\ n44^0-n44^post22 == 0 /\ -clear_flg^post22+clear_flg^0 == 0 /\ -tmp___115^post22+tmp___115^0 == 0 /\ -m130^post22+m130^0 == 0 /\ -fcode5^post22+fcode5^0 == 0 /\ tabort4^0-tabort4^post22 == 0 /\ i6^0-i6^post22 == 0 /\ checkpoint^0-checkpoint^post22 == 0 /\ -n40^post22+n40^0 == 0 /\ __const_257^0-__const_257^post22 == 0 /\ __const_8^0-__const_8^post22 == 0 /\ hsize_reg10^0-hsize_reg10^post22 == 0 /\ hsize___027^0-hsize___027^post22 == 0 /\ -hsize^post22+hsize^0 == 0 /\ -incnt^post22+incnt^0 == 0 /\ -bits33^post22+bits33^0 == 0 /\ __const_256^0-__const_256^post22 == 0 /\ bytes_out^0-bytes_out^post22 == 0 /\ -__const_8388607^post22+__const_8388607^0 == 0 /\ __const_50^0-__const_50^post22 == 0), cost: 1
  46: l22 -> l39 : __const_10000^0'=__const_10000^post47, __const_16^0'=__const_16^post47, __const_2147483647^0'=__const_2147483647^post47, __const_256^0'=__const_256^post47, __const_257^0'=__const_257^post47, __const_429496^0'=__const_429496^post47, __const_50^0'=__const_50^post47, __const_53^0'=__const_53^post47, __const_65536^0'=__const_65536^post47, __const_8388607^0'=__const_8388607^post47, __const_8^0'=__const_8^post47, __const_9^0'=__const_9^post47, apsim_bound11113^0'=apsim_bound11113^post47, apsim_incnt^0'=apsim_incnt^post47, bits33^0'=bits33^post47, block_compress^0'=block_compress^post47, bytes_out^0'=bytes_out^post47, c37^0'=c37^post47, c7^0'=c7^post47, checkpoint^0'=checkpoint^post47, clear_flg^0'=clear_flg^post47, code31^0'=code31^post47, count^0'=count^post47, disp9^0'=disp9^post47, ent8^0'=ent8^post47, exit_stat^0'=exit_stat^post47, fcode5^0'=fcode5^post47, free_ent^0'=free_ent^post47, hshift11^0'=hshift11^post47, hsize^0'=hsize^post47, hsize___019^0'=hsize___019^post47, hsize___027^0'=hsize___027^post47, hsize_reg10^0'=hsize_reg10^post47, i21^0'=i21^post47, i29^0'=i29^post47, i3^0'=i3^post47, i41^0'=i41^post47, i45^0'=i45^post47, i6^0'=i6^post47, in_count^0'=in_count^post47, incnt^0'=incnt^post47, m122^0'=m122^post47, m130^0'=m130^post47, maxbits^0'=maxbits^post47, maxcode^0'=maxcode^post47, maxmaxcode^0'=maxmaxcode^post47, n40^0'=n40^post47, n44^0'=n44^post47, n_bits^0'=n_bits^post47, offset^0'=offset^post47, out_count^0'=out_count^post47, r_off32^0'=r_off32^post47, rat26^0'=rat26^post47, ratio^0'=ratio^post47, ret_getbyte18^0'=ret_getbyte18^post47, ret_getbyte25^0'=ret_getbyte25^post47, seed2^0'=seed2^post47, tabort4^0'=tabort4^post47, tmp12^0'=tmp12^post47, tmp___014^0'=tmp___014^post47, tmp___017^0'=tmp___017^post47, tmp___024^0'=tmp___024^post47, tmp___115^0'=tmp___115^post47, (i3^0-i3^post47 == 0 /\ -hsize^post47+hsize^0 == 0 /\ -hsize___019^post47+hsize___019^0 == 0 /\ -ent8^post47+ent8^0 == 0 /\ i21^0-i21^post47 == 0 /\ -disp9^post47+disp9^0 == 0 /\ free_ent^0-free_ent^post47 == 0 /\ n40^0-n40^post47 == 0 /\ out_count^0-out_count^post47 == 0 /\ hsize___027^0-hsize___027^post47 == 0 /\ -code31^post47+code31^0 == 0 /\ -apsim_bound11113^post47+apsim_bound11113^0 == 0 /\ -fcode5^post47+fcode5^0 == 0 /\ n40^0-i41^0 <= 0 /\ tmp___014^0-tmp___014^post47 == 0 /\ -ret_getbyte18^post47+ret_getbyte18^0 == 0 /\ -tmp___024^post47+tmp___024^0 == 0 /\ offset^0-offset^post47 == 0 /\ tmp12^0-tmp12^post47 == 0 /\ -__const_16^post47+__const_16^0 == 0 /\ maxmaxcode^0-maxmaxcode^post47 == 0 /\ exit_stat^0-exit_stat^post47 == 0 /\ __const_10000^0-__const_10000^post47 == 0 /\ bits33^0-bits33^post47 == 0 /\ -r_off32^post47+r_off32^0 == 0 /\ -n_bits^post47+n_bits^0 == 0 /\ count^0-count^post47 == 0 /\ __const_53^0-__const_53^post47 == 0 /\ -incnt^post47+incnt^0 == 0 /\ -seed2^post47+seed2^0 == 0 /\ -block_compress^post47+block_compress^0 == 0 /\ -m122^post47+m122^0 == 0 /\ -tabort4^post47+tabort4^0 == 0 /\ apsim_incnt^0-apsim_incnt^post47 == 0 /\ -__const_9^post47+__const_9^0 == 0 /\ -__const_65536^post47+__const_65536^0 == 0 /\ -__const_429496^post47+__const_429496^0 == 0 /\ hshift11^0-hshift11^post47 == 0 /\ -i29^post47+i29^0 == 0 /\ -maxbits^post47+maxbits^0 == 0 /\ tmp___115^0-tmp___115^post47 == 0 /\ m130^0-m130^post47 == 0 /\ c37^0-c37^post47 == 0 /\ bytes_out^0-bytes_out^post47 == 0 /\ -i41^post47+i41^0 == 0 /\ -i45^post47+i45^0 == 0 /\ n44^0-n44^post47 == 0 /\ __const_257^0-__const_257^post47 == 0 /\ -maxcode^post47+maxcode^0 == 0 /\ checkpoint^0-checkpoint^post47 == 0 /\ i6^0-i6^post47 == 0 /\ -ratio^post47+ratio^0 == 0 /\ __const_8^0-__const_8^post47 == 0 /\ -in_count^post47+in_count^0 == 0 /\ __const_50^0-__const_50^post47 == 0 /\ tmp___017^0-tmp___017^post47 == 0 /\ -__const_2147483647^post47+__const_2147483647^0 == 0 /\ -__const_8388607^post47+__const_8388607^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post47 == 0 /\ -c7^post47+c7^0 == 0 /\ rat26^0-rat26^post47 == 0 /\ __const_256^0-__const_256^post47 == 0 /\ -hsize_reg10^post47+hsize_reg10^0 == 0 /\ -clear_flg^post47+clear_flg^0 == 0), cost: 1
  47: l22 -> l40 : __const_10000^0'=__const_10000^post48, __const_16^0'=__const_16^post48, __const_2147483647^0'=__const_2147483647^post48, __const_256^0'=__const_256^post48, __const_257^0'=__const_257^post48, __const_429496^0'=__const_429496^post48, __const_50^0'=__const_50^post48, __const_53^0'=__const_53^post48, __const_65536^0'=__const_65536^post48, __const_8388607^0'=__const_8388607^post48, __const_8^0'=__const_8^post48, __const_9^0'=__const_9^post48, apsim_bound11113^0'=apsim_bound11113^post48, apsim_incnt^0'=apsim_incnt^post48, bits33^0'=bits33^post48, block_compress^0'=block_compress^post48, bytes_out^0'=bytes_out^post48, c37^0'=c37^post48, c7^0'=c7^post48, checkpoint^0'=checkpoint^post48, clear_flg^0'=clear_flg^post48, code31^0'=code31^post48, count^0'=count^post48, disp9^0'=disp9^post48, ent8^0'=ent8^post48, exit_stat^0'=exit_stat^post48, fcode5^0'=fcode5^post48, free_ent^0'=free_ent^post48, hshift11^0'=hshift11^post48, hsize^0'=hsize^post48, hsize___019^0'=hsize___019^post48, hsize___027^0'=hsize___027^post48, hsize_reg10^0'=hsize_reg10^post48, i21^0'=i21^post48, i29^0'=i29^post48, i3^0'=i3^post48, i41^0'=i41^post48, i45^0'=i45^post48, i6^0'=i6^post48, in_count^0'=in_count^post48, incnt^0'=incnt^post48, m122^0'=m122^post48, m130^0'=m130^post48, maxbits^0'=maxbits^post48, maxcode^0'=maxcode^post48, maxmaxcode^0'=maxmaxcode^post48, n40^0'=n40^post48, n44^0'=n44^post48, n_bits^0'=n_bits^post48, offset^0'=offset^post48, out_count^0'=out_count^post48, r_off32^0'=r_off32^post48, rat26^0'=rat26^post48, ratio^0'=ratio^post48, ret_getbyte18^0'=ret_getbyte18^post48, ret_getbyte25^0'=ret_getbyte25^post48, seed2^0'=seed2^post48, tabort4^0'=tabort4^post48, tmp12^0'=tmp12^post48, tmp___014^0'=tmp___014^post48, tmp___017^0'=tmp___017^post48, tmp___024^0'=tmp___024^post48, tmp___115^0'=tmp___115^post48, (i29^0-i29^post48 == 0 /\ rat26^0-rat26^post48 == 0 /\ hsize___027^0-hsize___027^post48 == 0 /\ __const_9^0-__const_9^post48 == 0 /\ maxcode^0-maxcode^post48 == 0 /\ exit_stat^0-exit_stat^post48 == 0 /\ -tmp___017^post48+tmp___017^0 == 0 /\ tmp___014^0-tmp___014^post48 == 0 /\ __const_257^0-__const_257^post48 == 0 /\ -__const_256^post48+__const_256^0 == 0 /\ tmp12^0-tmp12^post48 == 0 /\ -hsize_reg10^post48+hsize_reg10^0 == 0 /\ -tabort4^post48+tabort4^0 == 0 /\ -__const_10000^post48+__const_10000^0 == 0 /\ -hsize___019^post48+hsize___019^0 == 0 /\ -incnt^post48+incnt^0 == 0 /\ m130^0-m130^post48 == 0 /\ out_count^0-out_count^post48 == 0 /\ maxmaxcode^0-maxmaxcode^post48 == 0 /\ -bytes_out^post48+bytes_out^0 == 0 /\ -apsim_bound11113^post48+apsim_bound11113^0 == 0 /\ bits33^0-bits33^post48 == 0 /\ -__const_50^post48+__const_50^0 == 0 /\ 1-n40^0+i41^0 <= 0 /\ n40^0-n40^post48 == 0 /\ -n_bits^post48+n_bits^0 == 0 /\ -i41^post48+i41^0 == 0 /\ __const_65536^0-__const_65536^post48 == 0 /\ -fcode5^post48+fcode5^0 == 0 /\ offset^0-offset^post48 == 0 /\ i45^0-i45^post48 == 0 /\ ent8^0-ent8^post48 == 0 /\ apsim_incnt^0-apsim_incnt^post48 == 0 /\ -i21^post48+i21^0 == 0 /\ __const_16^0-__const_16^post48 == 0 /\ tmp___115^0-tmp___115^post48 == 0 /\ -ratio^post48+ratio^0 == 0 /\ -ret_getbyte18^post48+ret_getbyte18^0 == 0 /\ -in_count^post48+in_count^0 == 0 /\ -tmp___024^post48+tmp___024^0 == 0 /\ -i6^post48+i6^0 == 0 /\ count^0-count^post48 == 0 /\ __const_53^0-__const_53^post48 == 0 /\ -__const_8388607^post48+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post48 == 0 /\ ret_getbyte25^0-ret_getbyte25^post48 == 0 /\ -clear_flg^post48+clear_flg^0 == 0 /\ -checkpoint^post48+checkpoint^0 == 0 /\ hshift11^0-hshift11^post48 == 0 /\ -hsize^post48+hsize^0 == 0 /\ m122^0-m122^post48 == 0 /\ c37^0-c37^post48 == 0 /\ -disp9^post48+disp9^0 == 0 /\ -block_compress^post48+block_compress^0 == 0 /\ seed2^0-seed2^post48 == 0 /\ __const_2147483647^0-__const_2147483647^post48 == 0 /\ -code31^post48+code31^0 == 0 /\ -n44^post48+n44^0 == 0 /\ -r_off32^post48+r_off32^0 == 0 /\ -i3^post48+i3^0 == 0 /\ -maxbits^post48+maxbits^0 == 0 /\ __const_429496^0-__const_429496^post48 == 0 /\ free_ent^0-free_ent^post48 == 0 /\ c7^0-c7^post48 == 0), cost: 1
  22: l23 -> l24 : __const_10000^0'=__const_10000^post23, __const_16^0'=__const_16^post23, __const_2147483647^0'=__const_2147483647^post23, __const_256^0'=__const_256^post23, __const_257^0'=__const_257^post23, __const_429496^0'=__const_429496^post23, __const_50^0'=__const_50^post23, __const_53^0'=__const_53^post23, __const_65536^0'=__const_65536^post23, __const_8388607^0'=__const_8388607^post23, __const_8^0'=__const_8^post23, __const_9^0'=__const_9^post23, apsim_bound11113^0'=apsim_bound11113^post23, apsim_incnt^0'=apsim_incnt^post23, bits33^0'=bits33^post23, block_compress^0'=block_compress^post23, bytes_out^0'=bytes_out^post23, c37^0'=c37^post23, c7^0'=c7^post23, checkpoint^0'=checkpoint^post23, clear_flg^0'=clear_flg^post23, code31^0'=code31^post23, count^0'=count^post23, disp9^0'=disp9^post23, ent8^0'=ent8^post23, exit_stat^0'=exit_stat^post23, fcode5^0'=fcode5^post23, free_ent^0'=free_ent^post23, hshift11^0'=hshift11^post23, hsize^0'=hsize^post23, hsize___019^0'=hsize___019^post23, hsize___027^0'=hsize___027^post23, hsize_reg10^0'=hsize_reg10^post23, i21^0'=i21^post23, i29^0'=i29^post23, i3^0'=i3^post23, i41^0'=i41^post23, i45^0'=i45^post23, i6^0'=i6^post23, in_count^0'=in_count^post23, incnt^0'=incnt^post23, m122^0'=m122^post23, m130^0'=m130^post23, maxbits^0'=maxbits^post23, maxcode^0'=maxcode^post23, maxmaxcode^0'=maxmaxcode^post23, n40^0'=n40^post23, n44^0'=n44^post23, n_bits^0'=n_bits^post23, offset^0'=offset^post23, out_count^0'=out_count^post23, r_off32^0'=r_off32^post23, rat26^0'=rat26^post23, ratio^0'=ratio^post23, ret_getbyte18^0'=ret_getbyte18^post23, ret_getbyte25^0'=ret_getbyte25^post23, seed2^0'=seed2^post23, tabort4^0'=tabort4^post23, tmp12^0'=tmp12^post23, tmp___014^0'=tmp___014^post23, tmp___017^0'=tmp___017^post23, tmp___024^0'=tmp___024^post23, tmp___115^0'=tmp___115^post23, (__const_16^0-__const_16^post23 == 0 /\ -ret_getbyte18^post23+ret_getbyte18^0 == 0 /\ -maxbits^post23+maxbits^0 == 0 /\ -in_count^post23+in_count^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post23 == 0 /\ hsize___027^0-hsize___027^post23 == 0 /\ -n40^post23+n40^0 == 0 /\ n44^0-n44^post23 == 0 /\ -__const_9^post23+__const_9^0 == 0 /\ -apsim_bound11113^post23+apsim_bound11113^0 == 0 /\ i3^0-i3^post23 == 0 /\ -__const_10000^post23+__const_10000^0 == 0 /\ -__const_2147483647^post23+__const_2147483647^0 == 0 /\ -__const_8388607^post23+__const_8388607^0 == 0 /\ checkpoint^0-checkpoint^post23 == 0 /\ maxcode^0-maxcode^post23 == 0 /\ -hsize_reg10^post23+hsize_reg10^0 == 0 /\ -hsize^post23+hsize^0 == 0 /\ -hsize___019^post23+hsize___019^0 == 0 /\ -ratio^post23+ratio^0 == 0 /\ -m122^post23+m122^0 == 0 /\ i21^0-i21^post23 == 0 /\ tmp12^0-tmp12^post23 == 0 /\ -tmp___014^post23+tmp___014^0 == 0 /\ -n_bits^post23+n_bits^0 == 0 /\ -code31^post23+code31^0 == 0 /\ -tabort4^post23+tabort4^0 == 0 /\ clear_flg^0-clear_flg^post23 == 0 /\ __const_256^0-__const_256^post23 == 0 /\ -i45^post23+i45^0 == 0 /\ m130^0-m130^post23 == 0 /\ -__const_429496^post23+__const_429496^0 == 0 /\ -disp9^post23+disp9^0 == 0 /\ count^0-count^post23 == 0 /\ i6^0-i6^post23 == 0 /\ -tmp___024^post23+tmp___024^0 == 0 /\ -i29^post23+i29^0 == 0 /\ -free_ent^post23+free_ent^0 == 0 /\ bits33^0-bits33^post23 == 0 /\ bytes_out^0-bytes_out^post23 == 0 /\ r_off32^0-r_off32^post23 == 0 /\ -block_compress^post23+block_compress^0 == 0 /\ -c7^post23+c7^0 == 0 /\ hshift11^0-hshift11^post23 == 0 /\ tmp___115^0-tmp___115^post23 == 0 /\ apsim_incnt^0-apsim_incnt^post23 == 0 /\ exit_stat^0-exit_stat^post23 == 0 /\ __const_50^0-__const_50^post23 == 0 /\ -offset^post23+offset^0 == 0 /\ -i41^post23+i41^0 == 0 /\ rat26^0-rat26^post23 == 0 /\ -incnt^post23+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post23 == 0 /\ c37^0-c37^post23 == 0 /\ out_count^0-out_count^post23 == 0 /\ fcode5^0-fcode5^post23 == 0 /\ -seed2^post23+seed2^0 == 0 /\ -__const_65536^post23+__const_65536^0 == 0 /\ __const_257^0-__const_257^post23 == 0 /\ __const_53^0-__const_53^post23 == 0 /\ __const_8^0-__const_8^post23 == 0 /\ -ent8^post23+ent8^0 == 0 /\ tmp___017^0-tmp___017^post23 == 0), cost: 1
  23: l25 -> l23 : __const_10000^0'=__const_10000^post24, __const_16^0'=__const_16^post24, __const_2147483647^0'=__const_2147483647^post24, __const_256^0'=__const_256^post24, __const_257^0'=__const_257^post24, __const_429496^0'=__const_429496^post24, __const_50^0'=__const_50^post24, __const_53^0'=__const_53^post24, __const_65536^0'=__const_65536^post24, __const_8388607^0'=__const_8388607^post24, __const_8^0'=__const_8^post24, __const_9^0'=__const_9^post24, apsim_bound11113^0'=apsim_bound11113^post24, apsim_incnt^0'=apsim_incnt^post24, bits33^0'=bits33^post24, block_compress^0'=block_compress^post24, bytes_out^0'=bytes_out^post24, c37^0'=c37^post24, c7^0'=c7^post24, checkpoint^0'=checkpoint^post24, clear_flg^0'=clear_flg^post24, code31^0'=code31^post24, count^0'=count^post24, disp9^0'=disp9^post24, ent8^0'=ent8^post24, exit_stat^0'=exit_stat^post24, fcode5^0'=fcode5^post24, free_ent^0'=free_ent^post24, hshift11^0'=hshift11^post24, hsize^0'=hsize^post24, hsize___019^0'=hsize___019^post24, hsize___027^0'=hsize___027^post24, hsize_reg10^0'=hsize_reg10^post24, i21^0'=i21^post24, i29^0'=i29^post24, i3^0'=i3^post24, i41^0'=i41^post24, i45^0'=i45^post24, i6^0'=i6^post24, in_count^0'=in_count^post24, incnt^0'=incnt^post24, m122^0'=m122^post24, m130^0'=m130^post24, maxbits^0'=maxbits^post24, maxcode^0'=maxcode^post24, maxmaxcode^0'=maxmaxcode^post24, n40^0'=n40^post24, n44^0'=n44^post24, n_bits^0'=n_bits^post24, offset^0'=offset^post24, out_count^0'=out_count^post24, r_off32^0'=r_off32^post24, rat26^0'=rat26^post24, ratio^0'=ratio^post24, ret_getbyte18^0'=ret_getbyte18^post24, ret_getbyte25^0'=ret_getbyte25^post24, seed2^0'=seed2^post24, tabort4^0'=tabort4^post24, tmp12^0'=tmp12^post24, tmp___014^0'=tmp___014^post24, tmp___017^0'=tmp___017^post24, tmp___024^0'=tmp___024^post24, tmp___115^0'=tmp___115^post24, (i21^0-i21^post24 == 0 /\ i3^0-i3^post24 == 0 /\ exit_stat^0-exit_stat^post24 == 0 /\ tmp12^0-tmp12^post24 == 0 /\ offset^0-offset^post24 == 0 /\ maxmaxcode^0-maxmaxcode^post24 == 0 /\ -r_off32^post24+r_off32^0 == 0 /\ -apsim_bound11113^post24+apsim_bound11113^0 == 0 /\ apsim_incnt^0-apsim_incnt^post24 == 0 /\ i6^0-i6^post24 == 0 /\ -__const_50^post24+__const_50^0 == 0 /\ c37^0-c37^post24 == 0 /\ bits33^0-bits33^post24 == 0 /\ -n_bits^post24+n_bits^0 == 0 /\ hsize___027^0-hsize___027^post24 == 0 /\ -fcode5^post24+fcode5^0 == 0 /\ -ent8^post24+ent8^0 == 0 /\ -tmp___017^post24+tmp___017^0 == 0 /\ m130^0-m130^post24 == 0 /\ __const_53^0-__const_53^post24 == 0 /\ __const_65536^0-__const_65536^post24 == 0 /\ -hsize^post24+hsize^0 == 0 /\ c7^0-c7^post24 == 0 /\ -ret_getbyte18^post24+ret_getbyte18^0 == 0 /\ -n40^post24+n40^0 == 0 /\ -maxcode^post24+maxcode^0 == 0 /\ -checkpoint^post24+checkpoint^0 == 0 /\ n44^0-n44^post24 == 0 /\ -__const_8388607^post24+__const_8388607^0 == 0 /\ bytes_out^0-in_count^0 <= 0 /\ -__const_256^post24+__const_256^0 == 0 /\ tmp___014^0-tmp___014^post24 == 0 /\ -incnt^post24+incnt^0 == 0 /\ __const_2147483647^0-__const_2147483647^post24 == 0 /\ __const_8^0-__const_8^post24 == 0 /\ -i29^post24+i29^0 == 0 /\ -i41^post24+i41^0 == 0 /\ __const_429496^0-__const_429496^post24 == 0 /\ count^0-count^post24 == 0 /\ rat26^0-rat26^post24 == 0 /\ __const_16^0-__const_16^post24 == 0 /\ -in_count^post24+in_count^0 == 0 /\ seed2^0-seed2^post24 == 0 /\ -disp9^post24+disp9^0 == 0 /\ -free_ent^post24+free_ent^0 == 0 /\ -tmp___024^post24+tmp___024^0 == 0 /\ -ratio^post24+ratio^0 == 0 /\ __const_257^0-__const_257^post24 == 0 /\ -hsize_reg10^post24+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post24 == 0 /\ -maxbits^post24+maxbits^0 == 0 /\ hsize___019^0-hsize___019^post24 == 0 /\ block_compress^0-block_compress^post24 == 0 /\ tmp___115^0-tmp___115^post24 == 0 /\ -m122^post24+m122^0 == 0 /\ -clear_flg^post24+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post24 == 0 /\ -i45^post24+i45^0 == 0 /\ -bytes_out^post24+bytes_out^0 == 0 /\ __const_9^0-__const_9^post24 == 0 /\ -__const_10000^post24+__const_10000^0 == 0 /\ -tabort4^post24+tabort4^0 == 0 /\ out_count^0-out_count^post24 == 0 /\ -code31^post24+code31^0 == 0), cost: 1
  24: l25 -> l23 : __const_10000^0'=__const_10000^post25, __const_16^0'=__const_16^post25, __const_2147483647^0'=__const_2147483647^post25, __const_256^0'=__const_256^post25, __const_257^0'=__const_257^post25, __const_429496^0'=__const_429496^post25, __const_50^0'=__const_50^post25, __const_53^0'=__const_53^post25, __const_65536^0'=__const_65536^post25, __const_8388607^0'=__const_8388607^post25, __const_8^0'=__const_8^post25, __const_9^0'=__const_9^post25, apsim_bound11113^0'=apsim_bound11113^post25, apsim_incnt^0'=apsim_incnt^post25, bits33^0'=bits33^post25, block_compress^0'=block_compress^post25, bytes_out^0'=bytes_out^post25, c37^0'=c37^post25, c7^0'=c7^post25, checkpoint^0'=checkpoint^post25, clear_flg^0'=clear_flg^post25, code31^0'=code31^post25, count^0'=count^post25, disp9^0'=disp9^post25, ent8^0'=ent8^post25, exit_stat^0'=exit_stat^post25, fcode5^0'=fcode5^post25, free_ent^0'=free_ent^post25, hshift11^0'=hshift11^post25, hsize^0'=hsize^post25, hsize___019^0'=hsize___019^post25, hsize___027^0'=hsize___027^post25, hsize_reg10^0'=hsize_reg10^post25, i21^0'=i21^post25, i29^0'=i29^post25, i3^0'=i3^post25, i41^0'=i41^post25, i45^0'=i45^post25, i6^0'=i6^post25, in_count^0'=in_count^post25, incnt^0'=incnt^post25, m122^0'=m122^post25, m130^0'=m130^post25, maxbits^0'=maxbits^post25, maxcode^0'=maxcode^post25, maxmaxcode^0'=maxmaxcode^post25, n40^0'=n40^post25, n44^0'=n44^post25, n_bits^0'=n_bits^post25, offset^0'=offset^post25, out_count^0'=out_count^post25, r_off32^0'=r_off32^post25, rat26^0'=rat26^post25, ratio^0'=ratio^post25, ret_getbyte18^0'=ret_getbyte18^post25, ret_getbyte25^0'=ret_getbyte25^post25, seed2^0'=seed2^post25, tabort4^0'=tabort4^post25, tmp12^0'=tmp12^post25, tmp___014^0'=tmp___014^post25, tmp___017^0'=tmp___017^post25, tmp___024^0'=tmp___024^post25, tmp___115^0'=tmp___115^post25, (-bytes_out^post25+bytes_out^0 == 0 /\ c37^0-c37^post25 == 0 /\ tmp___014^0-tmp___014^post25 == 0 /\ maxmaxcode^0-maxmaxcode^post25 == 0 /\ free_ent^0-free_ent^post25 == 0 /\ apsim_bound11113^0-apsim_bound11113^post25 == 0 /\ n40^0-n40^post25 == 0 /\ -clear_flg^post25+clear_flg^0 == 0 /\ -checkpoint^post25+checkpoint^0 == 0 /\ -tmp___017^post25+tmp___017^0 == 0 /\ code31^0-code31^post25 == 0 /\ -disp9^post25+disp9^0 == 0 /\ out_count^0-out_count^post25 == 0 /\ 1-bytes_out^0+in_count^0 <= 0 /\ -tmp___024^post25+tmp___024^0 == 0 /\ -ent8^post25+ent8^0 == 0 /\ -tabort4^post25+tabort4^0 == 0 /\ -i29^post25+i29^0 == 0 /\ c7^0-c7^post25 == 0 /\ -i41^post25+i41^0 == 0 /\ __const_9^0-__const_9^post25 == 0 /\ -i45^post25+i45^0 == 0 /\ tmp12^0-tmp12^post25 == 0 /\ -fcode5^post25+fcode5^0 == 0 /\ offset^0-offset^post25 == 0 /\ __const_16^0-__const_16^post25 == 0 /\ bits33^0-bits33^post25 == 0 /\ i21^0-i21^post25 == 0 /\ -2+exit_stat^post25 == 0 /\ -__const_429496^post25+__const_429496^0 == 0 /\ apsim_incnt^0-apsim_incnt^post25 == 0 /\ -__const_50^post25+__const_50^0 == 0 /\ -hsize_reg10^post25+hsize_reg10^0 == 0 /\ -n_bits^post25+n_bits^0 == 0 /\ -incnt^post25+incnt^0 == 0 /\ __const_65536^0-__const_65536^post25 == 0 /\ -r_off32^post25+r_off32^0 == 0 /\ -m122^post25+m122^0 == 0 /\ count^0-count^post25 == 0 /\ -hsize^post25+hsize^0 == 0 /\ -hsize___027^post25+hsize___027^0 == 0 /\ -__const_2147483647^post25+__const_2147483647^0 == 0 /\ -__const_256^post25+__const_256^0 == 0 /\ __const_53^0-__const_53^post25 == 0 /\ ret_getbyte25^0-ret_getbyte25^post25 == 0 /\ n44^0-n44^post25 == 0 /\ -__const_10000^post25+__const_10000^0 == 0 /\ -maxcode^post25+maxcode^0 == 0 /\ -maxbits^post25+maxbits^0 == 0 /\ m130^0-m130^post25 == 0 /\ i3^0-i3^post25 == 0 /\ __const_8^0-__const_8^post25 == 0 /\ block_compress^0-block_compress^post25 == 0 /\ -in_count^post25+in_count^0 == 0 /\ -__const_8388607^post25+__const_8388607^0 == 0 /\ i6^0-i6^post25 == 0 /\ tmp___115^0-tmp___115^post25 == 0 /\ __const_257^0-__const_257^post25 == 0 /\ hshift11^0-hshift11^post25 == 0 /\ seed2^0-seed2^post25 == 0 /\ rat26^0-rat26^post25 == 0 /\ hsize___019^0-hsize___019^post25 == 0 /\ -ret_getbyte18^post25+ret_getbyte18^0 == 0 /\ -ratio^post25+ratio^0 == 0), cost: 1
  25: l26 -> l27 : __const_10000^0'=__const_10000^post26, __const_16^0'=__const_16^post26, __const_2147483647^0'=__const_2147483647^post26, __const_256^0'=__const_256^post26, __const_257^0'=__const_257^post26, __const_429496^0'=__const_429496^post26, __const_50^0'=__const_50^post26, __const_53^0'=__const_53^post26, __const_65536^0'=__const_65536^post26, __const_8388607^0'=__const_8388607^post26, __const_8^0'=__const_8^post26, __const_9^0'=__const_9^post26, apsim_bound11113^0'=apsim_bound11113^post26, apsim_incnt^0'=apsim_incnt^post26, bits33^0'=bits33^post26, block_compress^0'=block_compress^post26, bytes_out^0'=bytes_out^post26, c37^0'=c37^post26, c7^0'=c7^post26, checkpoint^0'=checkpoint^post26, clear_flg^0'=clear_flg^post26, code31^0'=code31^post26, count^0'=count^post26, disp9^0'=disp9^post26, ent8^0'=ent8^post26, exit_stat^0'=exit_stat^post26, fcode5^0'=fcode5^post26, free_ent^0'=free_ent^post26, hshift11^0'=hshift11^post26, hsize^0'=hsize^post26, hsize___019^0'=hsize___019^post26, hsize___027^0'=hsize___027^post26, hsize_reg10^0'=hsize_reg10^post26, i21^0'=i21^post26, i29^0'=i29^post26, i3^0'=i3^post26, i41^0'=i41^post26, i45^0'=i45^post26, i6^0'=i6^post26, in_count^0'=in_count^post26, incnt^0'=incnt^post26, m122^0'=m122^post26, m130^0'=m130^post26, maxbits^0'=maxbits^post26, maxcode^0'=maxcode^post26, maxmaxcode^0'=maxmaxcode^post26, n40^0'=n40^post26, n44^0'=n44^post26, n_bits^0'=n_bits^post26, offset^0'=offset^post26, out_count^0'=out_count^post26, r_off32^0'=r_off32^post26, rat26^0'=rat26^post26, ratio^0'=ratio^post26, ret_getbyte18^0'=ret_getbyte18^post26, ret_getbyte25^0'=ret_getbyte25^post26, seed2^0'=seed2^post26, tabort4^0'=tabort4^post26, tmp12^0'=tmp12^post26, tmp___014^0'=tmp___014^post26, tmp___017^0'=tmp___017^post26, tmp___024^0'=tmp___024^post26, tmp___115^0'=tmp___115^post26, (0 == 0 /\ c7^0-c7^post26 == 0 /\ rat26^0-rat26^post26 == 0 /\ tmp___115^0-tmp___115^post26 == 0 /\ -maxcode^post26+maxcode^0 == 0 /\ __const_50^0-__const_50^post26 == 0 /\ __const_8388607^0-__const_8388607^post26 == 0 /\ tmp___014^0-tmp___014^post26 == 0 /\ apsim_bound11113^0-apsim_bound11113^post26 == 0 /\ -hsize___027^post26+hsize___027^0 == 0 /\ -hsize_reg10^post26+hsize_reg10^0 == 0 /\ -hsize^post26+hsize^0 == 0 /\ hshift11^0-hshift11^post26 == 0 /\ -m122^post26+m122^0 == 0 /\ __const_9^0-__const_9^post26 == 0 /\ -tabort4^post26+tabort4^0 == 0 /\ -i29^post26+i29^0 == 0 /\ -i41^post26+i41^0 == 0 /\ -__const_2147483647^post26+__const_2147483647^0 == 0 /\ free_ent^0-free_ent^post26 == 0 /\ -__const_10000^post26+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post26 == 0 /\ out_count^0-out_count^post26 == 0 /\ bits33^0-bits33^post26 == 0 /\ -n_bits^post26+n_bits^0 == 0 /\ n40^0-n40^post26 == 0 /\ incnt^0-incnt^post26 == 0 /\ -disp9^post26+disp9^0 == 0 /\ -in_count^post26+in_count^0 == 0 /\ __const_16^0-__const_16^post26 == 0 /\ -tmp___024^post26+tmp___024^0 == 0 /\ -i6^post26+i6^0 == 0 /\ maxbits^0-maxbits^post26 == 0 /\ __const_257^0-__const_257^post26 == 0 /\ apsim_incnt^0-apsim_incnt^post26 == 0 /\ ret_getbyte25^0-ret_getbyte25^post26 == 0 /\ -fcode5^post26+fcode5^0 == 0 /\ -ratio^post26+ratio^0 == 0 /\ -ret_getbyte18^post26+ret_getbyte18^0 == 0 /\ count^0-count^post26 == 0 /\ hsize___019^0-hsize___019^post26 == 0 /\ __const_65536^0-__const_65536^post26 == 0 /\ ent8^0-ent8^post26 == 0 /\ -checkpoint^post26+checkpoint^0 == 0 /\ -clear_flg^post26+clear_flg^0 == 0 /\ i21^0-i21^post26 == 0 /\ exit_stat^0-exit_stat^post26 == 0 /\ -__const_256^post26+__const_256^0 == 0 /\ -__const_429496^post26+__const_429496^0 == 0 /\ -seed2^post26+seed2^0 == 0 /\ offset^post26 == 0 /\ -i3^post26+i3^0 == 0 /\ tmp12^0-tmp12^post26 == 0 /\ -block_compress^post26+block_compress^0 == 0 /\ -n44^post26+n44^0 == 0 /\ m130^0-m130^post26 == 0 /\ i45^0-i45^post26 == 0 /\ c37^0-c37^post26 == 0 /\ __const_53^0-__const_53^post26 == 0 /\ -r_off32^post26+r_off32^0 == 0 /\ -code31^post26+code31^0 == 0 /\ -tmp___017^post26+tmp___017^0 == 0 /\ __const_8^0-__const_8^post26 == 0), cost: 1
  37: l27 -> l35 : __const_10000^0'=__const_10000^post38, __const_16^0'=__const_16^post38, __const_2147483647^0'=__const_2147483647^post38, __const_256^0'=__const_256^post38, __const_257^0'=__const_257^post38, __const_429496^0'=__const_429496^post38, __const_50^0'=__const_50^post38, __const_53^0'=__const_53^post38, __const_65536^0'=__const_65536^post38, __const_8388607^0'=__const_8388607^post38, __const_8^0'=__const_8^post38, __const_9^0'=__const_9^post38, apsim_bound11113^0'=apsim_bound11113^post38, apsim_incnt^0'=apsim_incnt^post38, bits33^0'=bits33^post38, block_compress^0'=block_compress^post38, bytes_out^0'=bytes_out^post38, c37^0'=c37^post38, c7^0'=c7^post38, checkpoint^0'=checkpoint^post38, clear_flg^0'=clear_flg^post38, code31^0'=code31^post38, count^0'=count^post38, disp9^0'=disp9^post38, ent8^0'=ent8^post38, exit_stat^0'=exit_stat^post38, fcode5^0'=fcode5^post38, free_ent^0'=free_ent^post38, hshift11^0'=hshift11^post38, hsize^0'=hsize^post38, hsize___019^0'=hsize___019^post38, hsize___027^0'=hsize___027^post38, hsize_reg10^0'=hsize_reg10^post38, i21^0'=i21^post38, i29^0'=i29^post38, i3^0'=i3^post38, i41^0'=i41^post38, i45^0'=i45^post38, i6^0'=i6^post38, in_count^0'=in_count^post38, incnt^0'=incnt^post38, m122^0'=m122^post38, m130^0'=m130^post38, maxbits^0'=maxbits^post38, maxcode^0'=maxcode^post38, maxmaxcode^0'=maxmaxcode^post38, n40^0'=n40^post38, n44^0'=n44^post38, n_bits^0'=n_bits^post38, offset^0'=offset^post38, out_count^0'=out_count^post38, r_off32^0'=r_off32^post38, rat26^0'=rat26^post38, ratio^0'=ratio^post38, ret_getbyte18^0'=ret_getbyte18^post38, ret_getbyte25^0'=ret_getbyte25^post38, seed2^0'=seed2^post38, tabort4^0'=tabort4^post38, tmp12^0'=tmp12^post38, tmp___014^0'=tmp___014^post38, tmp___017^0'=tmp___017^post38, tmp___024^0'=tmp___024^post38, tmp___115^0'=tmp___115^post38, (-i41^post38+i41^0 == 0 /\ -i45^post38+i45^0 == 0 /\ -apsim_bound11113^post38+apsim_bound11113^0 == 0 /\ -n_bits^post38+n_bits^0 == 0 /\ maxcode^0-maxcode^post38 == 0 /\ offset^0-offset^post38 == 0 /\ -__const_50^post38+__const_50^0 == 0 /\ -m122^post38+m122^0 == 0 /\ -hsize_reg10^post38+hsize_reg10^0 == 0 /\ -__const_10000^post38+__const_10000^0 == 0 /\ -hsize^post38+hsize^0 == 0 /\ bits33^0-bits33^post38 == 0 /\ -hsize___027^post38+hsize___027^0 == 0 /\ __const_16^0-__const_16^post38 == 0 /\ i6^0-i6^post38 == 0 /\ -incnt^post38+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post38 == 0 /\ apsim_incnt^0-apsim_incnt^post38 == 0 /\ hshift11^0-hshift11^post38 == 0 /\ -maxbits^post38+maxbits^0 == 0 /\ -n40^post38+n40^0 == 0 /\ __const_65536^0-__const_65536^post38 == 0 /\ free_ent^0-free_ent^post38 == 0 /\ c37^0-c37^post38 == 0 /\ -tmp___115^post38+tmp___115^0 == 0 /\ -in_count^post38+in_count^0 == 0 /\ -i29^post38+i29^0 == 0 /\ -__const_8388607^post38+__const_8388607^0 == 0 /\ code31^0-code31^post38 == 0 /\ i3^0-i3^post38 == 0 /\ __const_53^0-__const_53^post38 == 0 /\ ret_getbyte25^0-ret_getbyte25^post38 == 0 /\ c7^0-c7^post38 == 0 /\ __const_257^0-__const_257^post38 == 0 /\ -clear_flg^post38+clear_flg^0 == 0 /\ n44^0-n44^post38 == 0 /\ m130^0-m130^post38 == 0 /\ -fcode5^post38+fcode5^0 == 0 /\ r_off32^0-r_off32^post38 == 0 /\ -bytes_out^post38+bytes_out^0 == 0 /\ __const_8^0-__const_8^post38 == 0 /\ -block_compress^post38+block_compress^0 == 0 /\ -__const_256^post38+__const_256^0 == 0 /\ -count^post38+count^0 == 0 /\ -disp9^post38+disp9^0 == 0 /\ -seed2^post38+seed2^0 == 0 /\ tabort4^0-tabort4^post38 == 0 /\ tmp12^0-tmp12^post38 == 0 /\ ent8^0-ent8^post38 == 0 /\ tmp___017^0-tmp___017^post38 == 0 /\ i21^0-i21^post38 == 0 /\ __const_429496^0-__const_429496^post38 == 0 /\ exit_stat^0-exit_stat^post38 == 0 /\ -rat26^post38+rat26^0 == 0 /\ hsize___019^0-hsize___019^post38 == 0 /\ -ratio^post38+ratio^0 == 0 /\ -tmp___024^post38+tmp___024^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post38 == 0 /\ out_count^0-out_count^post38 == 0 /\ -__const_2147483647^post38+__const_2147483647^0 == 0 /\ __const_9^0-__const_9^post38 == 0 /\ checkpoint^0-checkpoint^post38 == 0 /\ -tmp___014^post38+tmp___014^0 == 0), cost: 1
  26: l28 -> l26 : __const_10000^0'=__const_10000^post27, __const_16^0'=__const_16^post27, __const_2147483647^0'=__const_2147483647^post27, __const_256^0'=__const_256^post27, __const_257^0'=__const_257^post27, __const_429496^0'=__const_429496^post27, __const_50^0'=__const_50^post27, __const_53^0'=__const_53^post27, __const_65536^0'=__const_65536^post27, __const_8388607^0'=__const_8388607^post27, __const_8^0'=__const_8^post27, __const_9^0'=__const_9^post27, apsim_bound11113^0'=apsim_bound11113^post27, apsim_incnt^0'=apsim_incnt^post27, bits33^0'=bits33^post27, block_compress^0'=block_compress^post27, bytes_out^0'=bytes_out^post27, c37^0'=c37^post27, c7^0'=c7^post27, checkpoint^0'=checkpoint^post27, clear_flg^0'=clear_flg^post27, code31^0'=code31^post27, count^0'=count^post27, disp9^0'=disp9^post27, ent8^0'=ent8^post27, exit_stat^0'=exit_stat^post27, fcode5^0'=fcode5^post27, free_ent^0'=free_ent^post27, hshift11^0'=hshift11^post27, hsize^0'=hsize^post27, hsize___019^0'=hsize___019^post27, hsize___027^0'=hsize___027^post27, hsize_reg10^0'=hsize_reg10^post27, i21^0'=i21^post27, i29^0'=i29^post27, i3^0'=i3^post27, i41^0'=i41^post27, i45^0'=i45^post27, i6^0'=i6^post27, in_count^0'=in_count^post27, incnt^0'=incnt^post27, m122^0'=m122^post27, m130^0'=m130^post27, maxbits^0'=maxbits^post27, maxcode^0'=maxcode^post27, maxmaxcode^0'=maxmaxcode^post27, n40^0'=n40^post27, n44^0'=n44^post27, n_bits^0'=n_bits^post27, offset^0'=offset^post27, out_count^0'=out_count^post27, r_off32^0'=r_off32^post27, rat26^0'=rat26^post27, ratio^0'=ratio^post27, ret_getbyte18^0'=ret_getbyte18^post27, ret_getbyte25^0'=ret_getbyte25^post27, seed2^0'=seed2^post27, tabort4^0'=tabort4^post27, tmp12^0'=tmp12^post27, tmp___014^0'=tmp___014^post27, tmp___017^0'=tmp___017^post27, tmp___024^0'=tmp___024^post27, tmp___115^0'=tmp___115^post27, (ret_getbyte25^0-ret_getbyte25^post27 == 0 /\ exit_stat^0-exit_stat^post27 == 0 /\ -ratio^post27+ratio^0 == 0 /\ tmp12^0-tmp12^post27 == 0 /\ __const_53^0-__const_53^post27 == 0 /\ free_ent^0-free_ent^post27 == 0 /\ -in_count^post27+in_count^0 == 0 /\ -ret_getbyte18^post27+ret_getbyte18^0 == 0 /\ maxmaxcode^0-maxmaxcode^post27 == 0 /\ -code31^post27+code31^0 == 0 /\ out_count^0-out_count^post27 == 0 /\ -apsim_incnt^post27+apsim_incnt^0 == 0 /\ __const_16^0-__const_16^post27 == 0 /\ -__const_65536^post27+__const_65536^0 == 0 /\ -__const_9^post27+__const_9^0 == 0 /\ -disp9^post27+disp9^0 == 0 /\ offset^0-offset^post27 == 0 /\ n40^0-n40^post27 == 0 /\ -i45^post27+i45^0 == 0 /\ -incnt^post27+incnt^0 == 0 /\ __const_257^0-__const_257^post27 == 0 /\ n44^0-n44^post27 == 0 /\ tmp___014^0-tmp___014^post27 == 0 /\ -block_compress^post27+block_compress^0 == 0 /\ -fcode5^post27+fcode5^0 == 0 /\ -__const_8^post27+__const_8^0 == 0 /\ -__const_8388607^post27+__const_8388607^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post27 == 0 /\ -ent8^post27+ent8^0 == 0 /\ -r_off32^post27+r_off32^0 == 0 /\ i21^0-i21^post27 == 0 /\ __const_50^0-__const_50^post27 == 0 /\ __const_256^0-__const_256^post27 == 0 /\ -tmp___017^post27+tmp___017^0 == 0 /\ -maxbits^post27+maxbits^0 == 0 /\ -maxcode^post27+maxcode^0 == 0 /\ count^0-count^post27 == 0 /\ -__const_429496^post27+__const_429496^0 == 0 /\ m130^0-m130^post27 == 0 /\ -hsize_reg10^post27+hsize_reg10^0 == 0 /\ -m122^post27+m122^0 == 0 /\ c37^0-c37^post27 == 0 /\ bits33^0-bits33^post27 == 0 /\ -hsize^post27+hsize^0 == 0 /\ hsize___027^0-hsize___027^post27 == 0 /\ -i41^post27+i41^0 == 0 /\ checkpoint^0-checkpoint^post27 == 0 /\ tmp___115^0-tmp___115^post27 == 0 /\ rat26^0-rat26^post27 == 0 /\ -n_bits^post27+n_bits^0 == 0 /\ seed2^0-seed2^post27 == 0 /\ -tabort4^post27+tabort4^0 == 0 /\ -__const_2147483647^post27+__const_2147483647^0 == 0 /\ hsize___019^0-hsize___019^post27 == 0 /\ -clear_flg^post27+clear_flg^0 == 0 /\ -bytes_out^post27+bytes_out^0 == 0 /\ hshift11^0-hshift11^post27 == 0 /\ i6^0-i6^post27 == 0 /\ __const_10000^0-__const_10000^post27 == 0 /\ -i29^post27+i29^0 == 0 /\ -c7^post27+c7^0 == 0 /\ i3^0-i3^post27 == 0 /\ -tmp___024^post27+tmp___024^0 == 0), cost: 1
  27: l29 -> l28 : __const_10000^0'=__const_10000^post28, __const_16^0'=__const_16^post28, __const_2147483647^0'=__const_2147483647^post28, __const_256^0'=__const_256^post28, __const_257^0'=__const_257^post28, __const_429496^0'=__const_429496^post28, __const_50^0'=__const_50^post28, __const_53^0'=__const_53^post28, __const_65536^0'=__const_65536^post28, __const_8388607^0'=__const_8388607^post28, __const_8^0'=__const_8^post28, __const_9^0'=__const_9^post28, apsim_bound11113^0'=apsim_bound11113^post28, apsim_incnt^0'=apsim_incnt^post28, bits33^0'=bits33^post28, block_compress^0'=block_compress^post28, bytes_out^0'=bytes_out^post28, c37^0'=c37^post28, c7^0'=c7^post28, checkpoint^0'=checkpoint^post28, clear_flg^0'=clear_flg^post28, code31^0'=code31^post28, count^0'=count^post28, disp9^0'=disp9^post28, ent8^0'=ent8^post28, exit_stat^0'=exit_stat^post28, fcode5^0'=fcode5^post28, free_ent^0'=free_ent^post28, hshift11^0'=hshift11^post28, hsize^0'=hsize^post28, hsize___019^0'=hsize___019^post28, hsize___027^0'=hsize___027^post28, hsize_reg10^0'=hsize_reg10^post28, i21^0'=i21^post28, i29^0'=i29^post28, i3^0'=i3^post28, i41^0'=i41^post28, i45^0'=i45^post28, i6^0'=i6^post28, in_count^0'=in_count^post28, incnt^0'=incnt^post28, m122^0'=m122^post28, m130^0'=m130^post28, maxbits^0'=maxbits^post28, maxcode^0'=maxcode^post28, maxmaxcode^0'=maxmaxcode^post28, n40^0'=n40^post28, n44^0'=n44^post28, n_bits^0'=n_bits^post28, offset^0'=offset^post28, out_count^0'=out_count^post28, r_off32^0'=r_off32^post28, rat26^0'=rat26^post28, ratio^0'=ratio^post28, ret_getbyte18^0'=ret_getbyte18^post28, ret_getbyte25^0'=ret_getbyte25^post28, seed2^0'=seed2^post28, tabort4^0'=tabort4^post28, tmp12^0'=tmp12^post28, tmp___014^0'=tmp___014^post28, tmp___017^0'=tmp___017^post28, tmp___024^0'=tmp___024^post28, tmp___115^0'=tmp___115^post28, (ent8^0-ent8^post28 == 0 /\ n40^0-n40^post28 == 0 /\ apsim_bound11113^0-apsim_bound11113^post28 == 0 /\ -i29^post28+i29^0 == 0 /\ -i45^post28+i45^0 == 0 /\ -__const_429496^post28+__const_429496^0 == 0 /\ c7^0-c7^post28 == 0 /\ hshift11^0-hshift11^post28 == 0 /\ -i41^post28+i41^0 == 0 /\ rat26^0-rat26^post28 == 0 /\ free_ent^0-free_ent^post28 == 0 /\ tmp___115^0-tmp___115^post28 == 0 /\ __const_9^0-__const_9^post28 == 0 /\ out_count^0-out_count^post28 == 0 /\ -__const_65536^post28+__const_65536^0 == 0 /\ __const_50^0-__const_50^post28 == 0 /\ tmp___014^0-tmp___014^post28 == 0 /\ i21^0-i21^post28 == 0 /\ -hsize_reg10^post28+hsize_reg10^0 == 0 /\ -tmp___024^post28+tmp___024^0 == 0 /\ exit_stat^0-exit_stat^post28 == 0 /\ offset^0-offset^post28 == 0 /\ -m122^post28+m122^0 == 0 /\ maxmaxcode^0-maxmaxcode^post28 == 0 /\ -incnt^post28+incnt^0 == 0 /\ __const_16^0-__const_16^post28 == 0 /\ -__const_10000^post28+__const_10000^0 == 0 /\ -bytes_out^post28+bytes_out^0 == 0 /\ -clear_flg^post28+clear_flg^0 == 0 /\ -tabort4^post28+tabort4^0 == 0 /\ bits33^0-bits33^post28 == 0 /\ -__const_2147483647^post28+__const_2147483647^0 == 0 /\ m130^0-m130^post28 == 0 /\ __const_16^0-i45^0 <= 0 /\ __const_257^0-__const_257^post28 == 0 /\ apsim_incnt^0-apsim_incnt^post28 == 0 /\ hsize___019^0-hsize___019^post28 == 0 /\ -r_off32^post28+r_off32^0 == 0 /\ -ratio^post28+ratio^0 == 0 /\ -disp9^post28+disp9^0 == 0 /\ -count^post28+count^0 == 0 /\ n44^0-n44^post28 == 0 /\ -ret_getbyte18^post28+ret_getbyte18^0 == 0 /\ -i6^post28+i6^0 == 0 /\ -in_count^post28+in_count^0 == 0 /\ -n_bits^post28+n_bits^0 == 0 /\ maxbits^0-maxbits^post28 == 0 /\ seed2^0-seed2^post28 == 0 /\ -fcode5^post28+fcode5^0 == 0 /\ tmp12^0-tmp12^post28 == 0 /\ __const_53^0-__const_53^post28 == 0 /\ i3^0-i3^post28 == 0 /\ -hsize^post28+hsize^0 == 0 /\ __const_8^0-__const_8^post28 == 0 /\ code31^0-code31^post28 == 0 /\ -tmp___017^post28+tmp___017^0 == 0 /\ -hsize___027^post28+hsize___027^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post28 == 0 /\ -block_compress^post28+block_compress^0 == 0 /\ -checkpoint^post28+checkpoint^0 == 0 /\ -maxcode^post28+maxcode^0 == 0 /\ -__const_8388607^post28+__const_8388607^0 == 0 /\ -__const_256^post28+__const_256^0 == 0 /\ c37^0-c37^post28 == 0), cost: 1
  28: l29 -> l30 : __const_10000^0'=__const_10000^post29, __const_16^0'=__const_16^post29, __const_2147483647^0'=__const_2147483647^post29, __const_256^0'=__const_256^post29, __const_257^0'=__const_257^post29, __const_429496^0'=__const_429496^post29, __const_50^0'=__const_50^post29, __const_53^0'=__const_53^post29, __const_65536^0'=__const_65536^post29, __const_8388607^0'=__const_8388607^post29, __const_8^0'=__const_8^post29, __const_9^0'=__const_9^post29, apsim_bound11113^0'=apsim_bound11113^post29, apsim_incnt^0'=apsim_incnt^post29, bits33^0'=bits33^post29, block_compress^0'=block_compress^post29, bytes_out^0'=bytes_out^post29, c37^0'=c37^post29, c7^0'=c7^post29, checkpoint^0'=checkpoint^post29, clear_flg^0'=clear_flg^post29, code31^0'=code31^post29, count^0'=count^post29, disp9^0'=disp9^post29, ent8^0'=ent8^post29, exit_stat^0'=exit_stat^post29, fcode5^0'=fcode5^post29, free_ent^0'=free_ent^post29, hshift11^0'=hshift11^post29, hsize^0'=hsize^post29, hsize___019^0'=hsize___019^post29, hsize___027^0'=hsize___027^post29, hsize_reg10^0'=hsize_reg10^post29, i21^0'=i21^post29, i29^0'=i29^post29, i3^0'=i3^post29, i41^0'=i41^post29, i45^0'=i45^post29, i6^0'=i6^post29, in_count^0'=in_count^post29, incnt^0'=incnt^post29, m122^0'=m122^post29, m130^0'=m130^post29, maxbits^0'=maxbits^post29, maxcode^0'=maxcode^post29, maxmaxcode^0'=maxmaxcode^post29, n40^0'=n40^post29, n44^0'=n44^post29, n_bits^0'=n_bits^post29, offset^0'=offset^post29, out_count^0'=out_count^post29, r_off32^0'=r_off32^post29, rat26^0'=rat26^post29, ratio^0'=ratio^post29, ret_getbyte18^0'=ret_getbyte18^post29, ret_getbyte25^0'=ret_getbyte25^post29, seed2^0'=seed2^post29, tabort4^0'=tabort4^post29, tmp12^0'=tmp12^post29, tmp___014^0'=tmp___014^post29, tmp___017^0'=tmp___017^post29, tmp___024^0'=tmp___024^post29, tmp___115^0'=tmp___115^post29, (-n44^post29+n44^0 == 0 /\ -n_bits^post29+n_bits^0 == 0 /\ -r_off32^post29+r_off32^0 == 0 /\ __const_16^0-__const_16^post29 == 0 /\ -hsize^post29+hsize^0 == 0 /\ __const_50^0-__const_50^post29 == 0 /\ -__const_2147483647^post29+__const_2147483647^0 == 0 /\ tmp___115^0-tmp___115^post29 == 0 /\ -tabort4^post29+tabort4^0 == 0 /\ __const_53^0-__const_53^post29 == 0 /\ hshift11^0-hshift11^post29 == 0 /\ rat26^0-rat26^post29 == 0 /\ -__const_10000^post29+__const_10000^0 == 0 /\ -maxcode^post29+maxcode^0 == 0 /\ __const_256^0-__const_256^post29 == 0 /\ -1-i45^0+i45^post29 == 0 /\ free_ent^0-free_ent^post29 == 0 /\ n40^0-n40^post29 == 0 /\ apsim_bound11113^0-apsim_bound11113^post29 == 0 /\ -__const_8^post29+__const_8^0 == 0 /\ i29^0-i29^post29 == 0 /\ out_count^0-out_count^post29 == 0 /\ -i6^post29+i6^0 == 0 /\ ent8^0-ent8^post29 == 0 /\ -__const_65536^post29+__const_65536^0 == 0 /\ -hsize___027^post29+hsize___027^0 == 0 /\ __const_9^0-__const_9^post29 == 0 /\ exit_stat^0-exit_stat^post29 == 0 /\ -c7^post29+c7^0 == 0 /\ -clear_flg^post29+clear_flg^0 == 0 /\ -bytes_out^post29+bytes_out^0 == 0 /\ offset^0-offset^post29 == 0 /\ -incnt^post29+incnt^0 == 0 /\ i21^0-i21^post29 == 0 /\ maxbits^0-maxbits^post29 == 0 /\ bits33^0-bits33^post29 == 0 /\ -checkpoint^post29+checkpoint^0 == 0 /\ -m122^post29+m122^0 == 0 /\ -__const_8388607^post29+__const_8388607^0 == 0 /\ __const_257^0-__const_257^post29 == 0 /\ -fcode5^post29+fcode5^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post29 == 0 /\ -tmp___024^post29+tmp___024^0 == 0 /\ -tmp___017^post29+tmp___017^0 == 0 /\ maxmaxcode^0-maxmaxcode^post29 == 0 /\ hsize___019^0-hsize___019^post29 == 0 /\ -i41^post29+i41^0 == 0 /\ -i3^post29+i3^0 == 0 /\ apsim_incnt^0-apsim_incnt^post29 == 0 /\ -block_compress^post29+block_compress^0 == 0 /\ count^0-count^post29 == 0 /\ -ret_getbyte18^post29+ret_getbyte18^0 == 0 /\ c37^0-c37^post29 == 0 /\ -code31^post29+code31^0 == 0 /\ tmp___014^0-tmp___014^post29 == 0 /\ 1-__const_16^0+i45^0 <= 0 /\ -in_count^post29+in_count^0 == 0 /\ tmp12^0-tmp12^post29 == 0 /\ ratio^0-ratio^post29 == 0 /\ -__const_429496^post29+__const_429496^0 == 0 /\ seed2^0-seed2^post29 == 0 /\ -hsize_reg10^post29+hsize_reg10^0 == 0 /\ -disp9^post29+disp9^0 == 0 /\ m130^0-m130^post29 == 0), cost: 1
  69: l30 -> l31 : __const_10000^0'=__const_10000^post70, __const_16^0'=__const_16^post70, __const_2147483647^0'=__const_2147483647^post70, __const_256^0'=__const_256^post70, __const_257^0'=__const_257^post70, __const_429496^0'=__const_429496^post70, __const_50^0'=__const_50^post70, __const_53^0'=__const_53^post70, __const_65536^0'=__const_65536^post70, __const_8388607^0'=__const_8388607^post70, __const_8^0'=__const_8^post70, __const_9^0'=__const_9^post70, apsim_bound11113^0'=apsim_bound11113^post70, apsim_incnt^0'=apsim_incnt^post70, bits33^0'=bits33^post70, block_compress^0'=block_compress^post70, bytes_out^0'=bytes_out^post70, c37^0'=c37^post70, c7^0'=c7^post70, checkpoint^0'=checkpoint^post70, clear_flg^0'=clear_flg^post70, code31^0'=code31^post70, count^0'=count^post70, disp9^0'=disp9^post70, ent8^0'=ent8^post70, exit_stat^0'=exit_stat^post70, fcode5^0'=fcode5^post70, free_ent^0'=free_ent^post70, hshift11^0'=hshift11^post70, hsize^0'=hsize^post70, hsize___019^0'=hsize___019^post70, hsize___027^0'=hsize___027^post70, hsize_reg10^0'=hsize_reg10^post70, i21^0'=i21^post70, i29^0'=i29^post70, i3^0'=i3^post70, i41^0'=i41^post70, i45^0'=i45^post70, i6^0'=i6^post70, in_count^0'=in_count^post70, incnt^0'=incnt^post70, m122^0'=m122^post70, m130^0'=m130^post70, maxbits^0'=maxbits^post70, maxcode^0'=maxcode^post70, maxmaxcode^0'=maxmaxcode^post70, n40^0'=n40^post70, n44^0'=n44^post70, n_bits^0'=n_bits^post70, offset^0'=offset^post70, out_count^0'=out_count^post70, r_off32^0'=r_off32^post70, rat26^0'=rat26^post70, ratio^0'=ratio^post70, ret_getbyte18^0'=ret_getbyte18^post70, ret_getbyte25^0'=ret_getbyte25^post70, seed2^0'=seed2^post70, tabort4^0'=tabort4^post70, tmp12^0'=tmp12^post70, tmp___014^0'=tmp___014^post70, tmp___017^0'=tmp___017^post70, tmp___024^0'=tmp___024^post70, tmp___115^0'=tmp___115^post70, (-__const_2147483647^post70+__const_2147483647^0 == 0 /\ ent8^0-ent8^post70 == 0 /\ -incnt^post70+incnt^0 == 0 /\ -offset^post70+offset^0 == 0 /\ -__const_16^post70+__const_16^0 == 0 /\ r_off32^0-r_off32^post70 == 0 /\ -apsim_incnt^post70+apsim_incnt^0 == 0 /\ tabort4^0-tabort4^post70 == 0 /\ exit_stat^0-exit_stat^post70 == 0 /\ __const_50^0-__const_50^post70 == 0 /\ hsize___027^0-hsize___027^post70 == 0 /\ -__const_429496^post70+__const_429496^0 == 0 /\ -__const_9^post70+__const_9^0 == 0 /\ -__const_65536^post70+__const_65536^0 == 0 /\ -m130^post70+m130^0 == 0 /\ -maxbits^post70+maxbits^0 == 0 /\ -n40^post70+n40^0 == 0 /\ -i41^post70+i41^0 == 0 /\ -i45^post70+i45^0 == 0 /\ -maxmaxcode^post70+maxmaxcode^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post70 == 0 /\ -clear_flg^post70+clear_flg^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post70 == 0 /\ -in_count^post70+in_count^0 == 0 /\ -__const_8^post70+__const_8^0 == 0 /\ out_count^0-out_count^post70 == 0 /\ -__const_8388607^post70+__const_8388607^0 == 0 /\ -block_compress^post70+block_compress^0 == 0 /\ tmp12^0-tmp12^post70 == 0 /\ -hsize^post70+hsize^0 == 0 /\ i6^0-i6^post70 == 0 /\ __const_257^0-__const_257^post70 == 0 /\ __const_10000^0-__const_10000^post70 == 0 /\ n44^0-n44^post70 == 0 /\ -ret_getbyte25^post70+ret_getbyte25^0 == 0 /\ -tmp___014^post70+tmp___014^0 == 0 /\ -seed2^post70+seed2^0 == 0 /\ n_bits^0-n_bits^post70 == 0 /\ -fcode5^post70+fcode5^0 == 0 /\ m122^0-m122^post70 == 0 /\ maxcode^0-maxcode^post70 == 0 /\ -count^post70+count^0 == 0 /\ -disp9^post70+disp9^0 == 0 /\ -tmp___024^post70+tmp___024^0 == 0 /\ c37^0-c37^post70 == 0 /\ bits33^0-bits33^post70 == 0 /\ -i29^post70+i29^0 == 0 /\ -tmp___115^post70+tmp___115^0 == 0 /\ i3^0-i3^post70 == 0 /\ __const_53^0-__const_53^post70 == 0 /\ code31^0-code31^post70 == 0 /\ -checkpoint^post70+checkpoint^0 == 0 /\ hshift11^0-hshift11^post70 == 0 /\ -i21^post70+i21^0 == 0 /\ tmp___017^0-tmp___017^post70 == 0 /\ -__const_256^post70+__const_256^0 == 0 /\ -hsize_reg10^post70+hsize_reg10^0 == 0 /\ -bytes_out^post70+bytes_out^0 == 0 /\ free_ent^0-free_ent^post70 == 0 /\ rat26^0-rat26^post70 == 0 /\ -ratio^post70+ratio^0 == 0 /\ -hsize___019^post70+hsize___019^0 == 0 /\ -c7^post70+c7^0 == 0), cost: 1
  29: l31 -> l28 : __const_10000^0'=__const_10000^post30, __const_16^0'=__const_16^post30, __const_2147483647^0'=__const_2147483647^post30, __const_256^0'=__const_256^post30, __const_257^0'=__const_257^post30, __const_429496^0'=__const_429496^post30, __const_50^0'=__const_50^post30, __const_53^0'=__const_53^post30, __const_65536^0'=__const_65536^post30, __const_8388607^0'=__const_8388607^post30, __const_8^0'=__const_8^post30, __const_9^0'=__const_9^post30, apsim_bound11113^0'=apsim_bound11113^post30, apsim_incnt^0'=apsim_incnt^post30, bits33^0'=bits33^post30, block_compress^0'=block_compress^post30, bytes_out^0'=bytes_out^post30, c37^0'=c37^post30, c7^0'=c7^post30, checkpoint^0'=checkpoint^post30, clear_flg^0'=clear_flg^post30, code31^0'=code31^post30, count^0'=count^post30, disp9^0'=disp9^post30, ent8^0'=ent8^post30, exit_stat^0'=exit_stat^post30, fcode5^0'=fcode5^post30, free_ent^0'=free_ent^post30, hshift11^0'=hshift11^post30, hsize^0'=hsize^post30, hsize___019^0'=hsize___019^post30, hsize___027^0'=hsize___027^post30, hsize_reg10^0'=hsize_reg10^post30, i21^0'=i21^post30, i29^0'=i29^post30, i3^0'=i3^post30, i41^0'=i41^post30, i45^0'=i45^post30, i6^0'=i6^post30, in_count^0'=in_count^post30, incnt^0'=incnt^post30, m122^0'=m122^post30, m130^0'=m130^post30, maxbits^0'=maxbits^post30, maxcode^0'=maxcode^post30, maxmaxcode^0'=maxmaxcode^post30, n40^0'=n40^post30, n44^0'=n44^post30, n_bits^0'=n_bits^post30, offset^0'=offset^post30, out_count^0'=out_count^post30, r_off32^0'=r_off32^post30, rat26^0'=rat26^post30, ratio^0'=ratio^post30, ret_getbyte18^0'=ret_getbyte18^post30, ret_getbyte25^0'=ret_getbyte25^post30, seed2^0'=seed2^post30, tabort4^0'=tabort4^post30, tmp12^0'=tmp12^post30, tmp___014^0'=tmp___014^post30, tmp___017^0'=tmp___017^post30, tmp___024^0'=tmp___024^post30, tmp___115^0'=tmp___115^post30, (-i6^post30+i6^0 == 0 /\ -tmp___024^post30+tmp___024^0 == 0 /\ -in_count^post30+in_count^0 == 0 /\ -__const_8388607^post30+__const_8388607^0 == 0 /\ -ret_getbyte18^post30+ret_getbyte18^0 == 0 /\ -apsim_incnt^post30+apsim_incnt^0 == 0 /\ -c7^post30+c7^0 == 0 /\ -i21^post30+i21^0 == 0 /\ -clear_flg^post30+clear_flg^0 == 0 /\ __const_16^0-__const_16^post30 == 0 /\ hsize___027^0-hsize___027^post30 == 0 /\ rat26^0-rat26^post30 == 0 /\ -__const_429496^post30+__const_429496^0 == 0 /\ -m122^post30+m122^0 == 0 /\ -i3^post30+i3^0 == 0 /\ tmp___115^0-tmp___115^post30 == 0 /\ exit_stat^0-exit_stat^post30 == 0 /\ __const_50^0-__const_50^post30 == 0 /\ -block_compress^post30+block_compress^0 == 0 /\ -disp9^post30+disp9^0 == 0 /\ i29^0-i29^post30 == 0 /\ hsize___019^0-hsize___019^post30 == 0 /\ m130^0-m130^post30 == 0 /\ apsim_bound11113^0-apsim_bound11113^post30 == 0 /\ __const_256^0-__const_256^post30 == 0 /\ -n44^post30+n44^0 == 0 /\ -r_off32^post30+r_off32^0 == 0 /\ __const_257^0-__const_257^post30 == 0 /\ hshift11^0-hshift11^post30 == 0 /\ -code31^post30+code31^0 == 0 /\ __const_53^0-__const_53^post30 == 0 /\ -__const_8^post30+__const_8^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post30 == 0 /\ tmp___017^0-tmp___017^post30 == 0 /\ free_ent^0-free_ent^post30 == 0 /\ -maxbits^post30+maxbits^0 == 0 /\ -maxcode^post30+maxcode^0 == 0 /\ maxmaxcode^0-maxmaxcode^post30 == 0 /\ out_count^0-out_count^post30 == 0 /\ -hsize_reg10^post30+hsize_reg10^0 == 0 /\ bits33^0-bits33^post30 == 0 /\ -hsize^post30+hsize^0 == 0 /\ i45^0-i45^post30 == 0 /\ c37^0-c37^post30 == 0 /\ -tabort4^post30+tabort4^0 == 0 /\ n40^0-n40^post30 == 0 /\ -seed2^post30+seed2^0 == 0 /\ offset^0-offset^post30 == 0 /\ -tmp___014^post30+tmp___014^0 == 0 /\ -__const_65536^post30+__const_65536^0 == 0 /\ -__const_2147483647^post30+__const_2147483647^0 == 0 /\ -fcode5^post30+fcode5^0 == 0 /\ -i41^post30+i41^0 == 0 /\ -incnt^post30+incnt^0 == 0 /\ -bytes_out^post30+bytes_out^0 == 0 /\ -ent8^post30+ent8^0 == 0 /\ ratio^0-ratio^post30 == 0 /\ checkpoint^0-checkpoint^post30 == 0 /\ __const_10000^0-__const_10000^post30 == 0 /\ count^0-count^post30 == 0 /\ -n_bits^post30+n_bits^0 == 0 /\ tmp12^0-tmp12^post30 == 0 /\ -__const_9^post30+__const_9^0 == 0 /\ n44^0-i45^0 <= 0), cost: 1
  30: l31 -> l29 : __const_10000^0'=__const_10000^post31, __const_16^0'=__const_16^post31, __const_2147483647^0'=__const_2147483647^post31, __const_256^0'=__const_256^post31, __const_257^0'=__const_257^post31, __const_429496^0'=__const_429496^post31, __const_50^0'=__const_50^post31, __const_53^0'=__const_53^post31, __const_65536^0'=__const_65536^post31, __const_8388607^0'=__const_8388607^post31, __const_8^0'=__const_8^post31, __const_9^0'=__const_9^post31, apsim_bound11113^0'=apsim_bound11113^post31, apsim_incnt^0'=apsim_incnt^post31, bits33^0'=bits33^post31, block_compress^0'=block_compress^post31, bytes_out^0'=bytes_out^post31, c37^0'=c37^post31, c7^0'=c7^post31, checkpoint^0'=checkpoint^post31, clear_flg^0'=clear_flg^post31, code31^0'=code31^post31, count^0'=count^post31, disp9^0'=disp9^post31, ent8^0'=ent8^post31, exit_stat^0'=exit_stat^post31, fcode5^0'=fcode5^post31, free_ent^0'=free_ent^post31, hshift11^0'=hshift11^post31, hsize^0'=hsize^post31, hsize___019^0'=hsize___019^post31, hsize___027^0'=hsize___027^post31, hsize_reg10^0'=hsize_reg10^post31, i21^0'=i21^post31, i29^0'=i29^post31, i3^0'=i3^post31, i41^0'=i41^post31, i45^0'=i45^post31, i6^0'=i6^post31, in_count^0'=in_count^post31, incnt^0'=incnt^post31, m122^0'=m122^post31, m130^0'=m130^post31, maxbits^0'=maxbits^post31, maxcode^0'=maxcode^post31, maxmaxcode^0'=maxmaxcode^post31, n40^0'=n40^post31, n44^0'=n44^post31, n_bits^0'=n_bits^post31, offset^0'=offset^post31, out_count^0'=out_count^post31, r_off32^0'=r_off32^post31, rat26^0'=rat26^post31, ratio^0'=ratio^post31, ret_getbyte18^0'=ret_getbyte18^post31, ret_getbyte25^0'=ret_getbyte25^post31, seed2^0'=seed2^post31, tabort4^0'=tabort4^post31, tmp12^0'=tmp12^post31, tmp___014^0'=tmp___014^post31, tmp___017^0'=tmp___017^post31, tmp___024^0'=tmp___024^post31, tmp___115^0'=tmp___115^post31, (-tmp___014^post31+tmp___014^0 == 0 /\ -r_off32^post31+r_off32^0 == 0 /\ offset^0-offset^post31 == 0 /\ maxcode^0-maxcode^post31 == 0 /\ -n_bits^post31+n_bits^0 == 0 /\ -seed2^post31+seed2^0 == 0 /\ __const_257^0-__const_257^post31 == 0 /\ apsim_incnt^0-apsim_incnt^post31 == 0 /\ -__const_429496^post31+__const_429496^0 == 0 /\ hsize___027^0-hsize___027^post31 == 0 /\ ret_getbyte25^0-ret_getbyte25^post31 == 0 /\ -__const_53^post31+__const_53^0 == 0 /\ -__const_9^post31+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post31 == 0 /\ __const_256^0-__const_256^post31 == 0 /\ -__const_65536^post31+__const_65536^0 == 0 /\ bytes_out^0-bytes_out^post31 == 0 /\ -ratio^post31+ratio^0 == 0 /\ -n40^post31+n40^0 == 0 /\ -clear_flg^post31+clear_flg^0 == 0 /\ tabort4^0-tabort4^post31 == 0 /\ i45^0-i45^post31 == 0 /\ -__const_2147483647^post31+__const_2147483647^0 == 0 /\ -c7^post31+c7^0 == 0 /\ -__const_8388607^post31+__const_8388607^0 == 0 /\ n44^0-n44^post31 == 0 /\ -hsize^post31+hsize^0 == 0 /\ c37^0-c37^post31 == 0 /\ -incnt^post31+incnt^0 == 0 /\ checkpoint^0-checkpoint^post31 == 0 /\ __const_8^0-__const_8^post31 == 0 /\ -code31^post31+code31^0 == 0 /\ -fcode5^post31+fcode5^0 == 0 /\ -ent8^post31+ent8^0 == 0 /\ exit_stat^0-exit_stat^post31 == 0 /\ __const_50^0-__const_50^post31 == 0 /\ -free_ent^post31+free_ent^0 == 0 /\ hshift11^0-hshift11^post31 == 0 /\ 1-n44^0+i45^0 <= 0 /\ -disp9^post31+disp9^0 == 0 /\ rat26^0-rat26^post31 == 0 /\ tmp12^0-tmp12^post31 == 0 /\ m130^0-m130^post31 == 0 /\ -maxbits^post31+maxbits^0 == 0 /\ -tmp___024^post31+tmp___024^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post31 == 0 /\ -i29^post31+i29^0 == 0 /\ -i3^post31+i3^0 == 0 /\ -tmp___115^post31+tmp___115^0 == 0 /\ -i41^post31+i41^0 == 0 /\ __const_10000^0-__const_10000^post31 == 0 /\ -i21^post31+i21^0 == 0 /\ -ret_getbyte18^post31+ret_getbyte18^0 == 0 /\ tmp___017^0-tmp___017^post31 == 0 /\ count^0-count^post31 == 0 /\ -in_count^post31+in_count^0 == 0 /\ i6^0-i6^post31 == 0 /\ out_count^0-out_count^post31 == 0 /\ m122^0-m122^post31 == 0 /\ -block_compress^post31+block_compress^0 == 0 /\ -hsize___019^post31+hsize___019^0 == 0 /\ -hsize_reg10^post31+hsize_reg10^0 == 0 /\ -__const_16^post31+__const_16^0 == 0 /\ bits33^0-bits33^post31 == 0), cost: 1
  31: l32 -> l26 : __const_10000^0'=__const_10000^post32, __const_16^0'=__const_16^post32, __const_2147483647^0'=__const_2147483647^post32, __const_256^0'=__const_256^post32, __const_257^0'=__const_257^post32, __const_429496^0'=__const_429496^post32, __const_50^0'=__const_50^post32, __const_53^0'=__const_53^post32, __const_65536^0'=__const_65536^post32, __const_8388607^0'=__const_8388607^post32, __const_8^0'=__const_8^post32, __const_9^0'=__const_9^post32, apsim_bound11113^0'=apsim_bound11113^post32, apsim_incnt^0'=apsim_incnt^post32, bits33^0'=bits33^post32, block_compress^0'=block_compress^post32, bytes_out^0'=bytes_out^post32, c37^0'=c37^post32, c7^0'=c7^post32, checkpoint^0'=checkpoint^post32, clear_flg^0'=clear_flg^post32, code31^0'=code31^post32, count^0'=count^post32, disp9^0'=disp9^post32, ent8^0'=ent8^post32, exit_stat^0'=exit_stat^post32, fcode5^0'=fcode5^post32, free_ent^0'=free_ent^post32, hshift11^0'=hshift11^post32, hsize^0'=hsize^post32, hsize___019^0'=hsize___019^post32, hsize___027^0'=hsize___027^post32, hsize_reg10^0'=hsize_reg10^post32, i21^0'=i21^post32, i29^0'=i29^post32, i3^0'=i3^post32, i41^0'=i41^post32, i45^0'=i45^post32, i6^0'=i6^post32, in_count^0'=in_count^post32, incnt^0'=incnt^post32, m122^0'=m122^post32, m130^0'=m130^post32, maxbits^0'=maxbits^post32, maxcode^0'=maxcode^post32, maxmaxcode^0'=maxmaxcode^post32, n40^0'=n40^post32, n44^0'=n44^post32, n_bits^0'=n_bits^post32, offset^0'=offset^post32, out_count^0'=out_count^post32, r_off32^0'=r_off32^post32, rat26^0'=rat26^post32, ratio^0'=ratio^post32, ret_getbyte18^0'=ret_getbyte18^post32, ret_getbyte25^0'=ret_getbyte25^post32, seed2^0'=seed2^post32, tabort4^0'=tabort4^post32, tmp12^0'=tmp12^post32, tmp___014^0'=tmp___014^post32, tmp___017^0'=tmp___017^post32, tmp___024^0'=tmp___024^post32, tmp___115^0'=tmp___115^post32, (-m130^post32+m130^0 == 0 /\ -in_count^post32+in_count^0 == 0 /\ -__const_8388607^post32+__const_8388607^0 == 0 /\ -maxbits^post32+maxbits^0 == 0 /\ -tmp___115^post32+tmp___115^0 == 0 /\ tabort4^0-tabort4^post32 == 0 /\ out_count^0-out_count^post32 == 0 /\ -ratio^post32+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post32 == 0 /\ -bits33^post32+bits33^0 == 0 /\ -c7^post32+c7^0 == 0 /\ -c37^post32+c37^0 == 0 /\ -i21^post32+i21^0 == 0 /\ tmp___024^0-tmp___024^post32 == 0 /\ -incnt^post32+incnt^0 == 0 /\ n44^0-n44^post32 == 0 /\ apsim_incnt^0-apsim_incnt^post32 == 0 /\ clear_flg^0-clear_flg^post32 == 0 /\ -__const_16^post32+__const_16^0 == 0 /\ -__const_429496^post32+__const_429496^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post32 == 0 /\ -block_compress^post32+block_compress^0 == 0 /\ -i45^post32+i45^0 == 0 /\ -disp9^post32+disp9^0 == 0 /\ __const_10000^0-__const_10000^post32 == 0 /\ checkpoint^0-checkpoint^post32 == 0 /\ offset^0 <= 0 /\ count^0-count^post32 == 0 /\ -r_off32^post32+r_off32^0 == 0 /\ -code31^post32+code31^0 == 0 /\ tmp12^0-tmp12^post32 == 0 /\ -free_ent^post32+free_ent^0 == 0 /\ -offset^post32+offset^0 == 0 /\ -__const_9^post32+__const_9^0 == 0 /\ hshift11^0-hshift11^post32 == 0 /\ __const_256^0-__const_256^post32 == 0 /\ -hsize_reg10^post32+hsize_reg10^0 == 0 /\ -tmp___014^post32+tmp___014^0 == 0 /\ -n40^post32+n40^0 == 0 /\ -hsize___019^post32+hsize___019^0 == 0 /\ maxcode^0-maxcode^post32 == 0 /\ -hsize^post32+hsize^0 == 0 /\ -__const_2147483647^post32+__const_2147483647^0 == 0 /\ -seed2^post32+seed2^0 == 0 /\ m122^0-m122^post32 == 0 /\ rat26^0-rat26^post32 == 0 /\ -__const_65536^post32+__const_65536^0 == 0 /\ -i29^post32+i29^0 == 0 /\ tmp___017^0-tmp___017^post32 == 0 /\ exit_stat^0-exit_stat^post32 == 0 /\ -i41^post32+i41^0 == 0 /\ -ent8^post32+ent8^0 == 0 /\ __const_50^0-__const_50^post32 == 0 /\ fcode5^0-fcode5^post32 == 0 /\ hsize___027^0-hsize___027^post32 == 0 /\ __const_8^0-__const_8^post32 == 0 /\ -n_bits^post32+n_bits^0 == 0 /\ bytes_out^0-bytes_out^post32 == 0 /\ i6^0-i6^post32 == 0 /\ __const_53^0-__const_53^post32 == 0 /\ __const_257^0-__const_257^post32 == 0 /\ -apsim_bound11113^post32+apsim_bound11113^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post32 == 0 /\ i3^0-i3^post32 == 0), cost: 1
  32: l32 -> l30 : __const_10000^0'=__const_10000^post33, __const_16^0'=__const_16^post33, __const_2147483647^0'=__const_2147483647^post33, __const_256^0'=__const_256^post33, __const_257^0'=__const_257^post33, __const_429496^0'=__const_429496^post33, __const_50^0'=__const_50^post33, __const_53^0'=__const_53^post33, __const_65536^0'=__const_65536^post33, __const_8388607^0'=__const_8388607^post33, __const_8^0'=__const_8^post33, __const_9^0'=__const_9^post33, apsim_bound11113^0'=apsim_bound11113^post33, apsim_incnt^0'=apsim_incnt^post33, bits33^0'=bits33^post33, block_compress^0'=block_compress^post33, bytes_out^0'=bytes_out^post33, c37^0'=c37^post33, c7^0'=c7^post33, checkpoint^0'=checkpoint^post33, clear_flg^0'=clear_flg^post33, code31^0'=code31^post33, count^0'=count^post33, disp9^0'=disp9^post33, ent8^0'=ent8^post33, exit_stat^0'=exit_stat^post33, fcode5^0'=fcode5^post33, free_ent^0'=free_ent^post33, hshift11^0'=hshift11^post33, hsize^0'=hsize^post33, hsize___019^0'=hsize___019^post33, hsize___027^0'=hsize___027^post33, hsize_reg10^0'=hsize_reg10^post33, i21^0'=i21^post33, i29^0'=i29^post33, i3^0'=i3^post33, i41^0'=i41^post33, i45^0'=i45^post33, i6^0'=i6^post33, in_count^0'=in_count^post33, incnt^0'=incnt^post33, m122^0'=m122^post33, m130^0'=m130^post33, maxbits^0'=maxbits^post33, maxcode^0'=maxcode^post33, maxmaxcode^0'=maxmaxcode^post33, n40^0'=n40^post33, n44^0'=n44^post33, n_bits^0'=n_bits^post33, offset^0'=offset^post33, out_count^0'=out_count^post33, r_off32^0'=r_off32^post33, rat26^0'=rat26^post33, ratio^0'=ratio^post33, ret_getbyte18^0'=ret_getbyte18^post33, ret_getbyte25^0'=ret_getbyte25^post33, seed2^0'=seed2^post33, tabort4^0'=tabort4^post33, tmp12^0'=tmp12^post33, tmp___014^0'=tmp___014^post33, tmp___017^0'=tmp___017^post33, tmp___024^0'=tmp___024^post33, tmp___115^0'=tmp___115^post33, (0 == 0 /\ tmp12^0-tmp12^post33 == 0 /\ checkpoint^0-checkpoint^post33 == 0 /\ __const_8^0-__const_8^post33 == 0 /\ -apsim_bound11113^post33+apsim_bound11113^0 == 0 /\ exit_stat^0-exit_stat^post33 == 0 /\ ret_getbyte18^0-ret_getbyte18^post33 == 0 /\ -__const_429496^post33+__const_429496^0 == 0 /\ -__const_9^post33+__const_9^0 == 0 /\ __const_50^0-__const_50^post33 == 0 /\ tmp___017^0-tmp___017^post33 == 0 /\ r_off32^0-r_off32^post33 == 0 /\ __const_10000^0-__const_10000^post33 == 0 /\ -__const_65536^post33+__const_65536^0 == 0 /\ tabort4^0-tabort4^post33 == 0 /\ -hsize___019^post33+hsize___019^0 == 0 /\ -rat26^post33+rat26^0 == 0 /\ -c7^post33+c7^0 == 0 /\ out_count^0-out_count^post33 == 0 /\ m122^0-m122^post33 == 0 /\ count^0-count^post33 == 0 /\ -clear_flg^post33+clear_flg^0 == 0 /\ -m130^post33+m130^0 == 0 /\ -i29^post33+i29^0 == 0 /\ -i41^post33+i41^0 == 0 /\ -__const_2147483647^post33+__const_2147483647^0 == 0 /\ -seed2^post33+seed2^0 == 0 /\ -__const_8388607^post33+__const_8388607^0 == 0 /\ __const_16^0-__const_16^post33 == 0 /\ -i21^post33+i21^0 == 0 /\ -hsize^post33+hsize^0 == 0 /\ -incnt^post33+incnt^0 == 0 /\ i45^post33 == 0 /\ __const_257^0-__const_257^post33 == 0 /\ -bits33^post33+bits33^0 == 0 /\ -code31^post33+code31^0 == 0 /\ maxcode^0-maxcode^post33 == 0 /\ i6^0-i6^post33 == 0 /\ maxmaxcode^0-maxmaxcode^post33 == 0 /\ -in_count^post33+in_count^0 == 0 /\ -fcode5^post33+fcode5^0 == 0 /\ i3^0-i3^post33 == 0 /\ -ratio^post33+ratio^0 == 0 /\ -disp9^post33+disp9^0 == 0 /\ __const_256^0-__const_256^post33 == 0 /\ n_bits^0-n_bits^post33 == 0 /\ -ent8^post33+ent8^0 == 0 /\ 1-offset^0 <= 0 /\ bytes_out^0-bytes_out^post33 == 0 /\ __const_53^0-__const_53^post33 == 0 /\ hsize_reg10^0-hsize_reg10^post33 == 0 /\ -tmp___014^post33+tmp___014^0 == 0 /\ -offset^post33+offset^0 == 0 /\ -free_ent^post33+free_ent^0 == 0 /\ hshift11^0-hshift11^post33 == 0 /\ apsim_incnt^0-apsim_incnt^post33 == 0 /\ -maxbits^post33+maxbits^0 == 0 /\ -tmp___115^post33+tmp___115^0 == 0 /\ -block_compress^post33+block_compress^0 == 0 /\ -ret_getbyte25^post33+ret_getbyte25^0 == 0 /\ -tmp___024^post33+tmp___024^0 == 0 /\ -n40^post33+n40^0 == 0 /\ hsize___027^0-hsize___027^post33 == 0 /\ c37^0-c37^post33 == 0), cost: 1
  33: l33 -> l27 : __const_10000^0'=__const_10000^post34, __const_16^0'=__const_16^post34, __const_2147483647^0'=__const_2147483647^post34, __const_256^0'=__const_256^post34, __const_257^0'=__const_257^post34, __const_429496^0'=__const_429496^post34, __const_50^0'=__const_50^post34, __const_53^0'=__const_53^post34, __const_65536^0'=__const_65536^post34, __const_8388607^0'=__const_8388607^post34, __const_8^0'=__const_8^post34, __const_9^0'=__const_9^post34, apsim_bound11113^0'=apsim_bound11113^post34, apsim_incnt^0'=apsim_incnt^post34, bits33^0'=bits33^post34, block_compress^0'=block_compress^post34, bytes_out^0'=bytes_out^post34, c37^0'=c37^post34, c7^0'=c7^post34, checkpoint^0'=checkpoint^post34, clear_flg^0'=clear_flg^post34, code31^0'=code31^post34, count^0'=count^post34, disp9^0'=disp9^post34, ent8^0'=ent8^post34, exit_stat^0'=exit_stat^post34, fcode5^0'=fcode5^post34, free_ent^0'=free_ent^post34, hshift11^0'=hshift11^post34, hsize^0'=hsize^post34, hsize___019^0'=hsize___019^post34, hsize___027^0'=hsize___027^post34, hsize_reg10^0'=hsize_reg10^post34, i21^0'=i21^post34, i29^0'=i29^post34, i3^0'=i3^post34, i41^0'=i41^post34, i45^0'=i45^post34, i6^0'=i6^post34, in_count^0'=in_count^post34, incnt^0'=incnt^post34, m122^0'=m122^post34, m130^0'=m130^post34, maxbits^0'=maxbits^post34, maxcode^0'=maxcode^post34, maxmaxcode^0'=maxmaxcode^post34, n40^0'=n40^post34, n44^0'=n44^post34, n_bits^0'=n_bits^post34, offset^0'=offset^post34, out_count^0'=out_count^post34, r_off32^0'=r_off32^post34, rat26^0'=rat26^post34, ratio^0'=ratio^post34, ret_getbyte18^0'=ret_getbyte18^post34, ret_getbyte25^0'=ret_getbyte25^post34, seed2^0'=seed2^post34, tabort4^0'=tabort4^post34, tmp12^0'=tmp12^post34, tmp___014^0'=tmp___014^post34, tmp___017^0'=tmp___017^post34, tmp___024^0'=tmp___024^post34, tmp___115^0'=tmp___115^post34, (0 == 0 /\ -tmp12^post34+tmp12^0 == 0 /\ -__const_10000^post34+__const_10000^0 == 0 /\ -ent8^post34+ent8^0 == 0 /\ -fcode5^post34+fcode5^0 == 0 /\ -seed2^post34+seed2^0 == 0 /\ -__const_2147483647^post34+__const_2147483647^0 == 0 /\ free_ent^0-free_ent^post34 == 0 /\ __const_65536^0-__const_65536^post34 == 0 /\ -offset^post34+offset^0 == 0 /\ -disp9^post34+disp9^0 == 0 /\ -__const_256^post34+__const_256^0 == 0 /\ __const_16^0-__const_16^post34 == 0 /\ ret_getbyte18^0-ret_getbyte18^post34 == 0 /\ -ret_getbyte25^post34+ret_getbyte25^0 == 0 /\ __const_53^0-__const_53^post34 == 0 /\ -rat26^post34+rat26^0 == 0 /\ -code31^post34+code31^0 == 0 /\ checkpoint^0-checkpoint^post34 == 0 /\ m130^0-m130^post34 == 0 /\ r_off32^0-r_off32^post34 == 0 /\ __const_8^0-__const_8^post34 == 0 /\ -ratio^post34+ratio^0 == 0 /\ -tmp___024^post34+tmp___024^0 == 0 /\ i6^0-i6^post34 == 0 /\ tmp___017^0-tmp___017^post34 == 0 /\ m122^0-m122^post34 == 0 /\ -__const_50^post34+__const_50^0 == 0 /\ exit_stat^0-exit_stat^post34 == 0 /\ -tmp___014^post34+tmp___014^0 == 0 /\ out_count^0-out_count^post34 == 0 /\ count^0-count^post34 == 0 /\ i3^0-i3^post34 == 0 /\ -i41^post34+i41^0 == 0 /\ -block_compress^post34+block_compress^0 == 0 /\ -i45^post34+i45^0 == 0 /\ -apsim_bound11113^post34+apsim_bound11113^0 == 0 /\ -clear_flg^post34+clear_flg^0 == 0 /\ -c7^post34+c7^0 == 0 /\ n_bits^0-n_bits^post34 == 0 /\ hsize_reg10^0-hsize_reg10^post34 == 0 /\ -incnt^post34+incnt^0 == 0 /\ hsize___027^0-hsize___027^post34 == 0 /\ -hsize^post34+hsize^0 == 0 /\ __const_257^0-__const_257^post34 == 0 /\ bytes_out^0-bytes_out^post34 == 0 /\ -maxbits^post34+maxbits^0 == 0 /\ __const_9^0-__const_9^post34 == 0 /\ -i29^post34+i29^0 == 0 /\ c37^0-c37^post34 == 0 /\ -n40^post34+n40^0 == 0 /\ -tmp___115^post34+tmp___115^0 == 0 /\ -in_count^post34+in_count^0 == 0 /\ -__const_8388607^post34+__const_8388607^0 == 0 /\ bits33^0-bits33^post34 == 0 /\ tabort4^0-tabort4^post34 == 0 /\ -i21^post34+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post34 == 0 /\ apsim_incnt^0-apsim_incnt^post34 == 0 /\ hshift11^0-hshift11^post34 == 0 /\ n44^0-n44^post34 == 0 /\ -__const_429496^post34+__const_429496^0 == 0 /\ hsize___019^0-hsize___019^post34 == 0), cost: 1
  34: l34 -> l33 : __const_10000^0'=__const_10000^post35, __const_16^0'=__const_16^post35, __const_2147483647^0'=__const_2147483647^post35, __const_256^0'=__const_256^post35, __const_257^0'=__const_257^post35, __const_429496^0'=__const_429496^post35, __const_50^0'=__const_50^post35, __const_53^0'=__const_53^post35, __const_65536^0'=__const_65536^post35, __const_8388607^0'=__const_8388607^post35, __const_8^0'=__const_8^post35, __const_9^0'=__const_9^post35, apsim_bound11113^0'=apsim_bound11113^post35, apsim_incnt^0'=apsim_incnt^post35, bits33^0'=bits33^post35, block_compress^0'=block_compress^post35, bytes_out^0'=bytes_out^post35, c37^0'=c37^post35, c7^0'=c7^post35, checkpoint^0'=checkpoint^post35, clear_flg^0'=clear_flg^post35, code31^0'=code31^post35, count^0'=count^post35, disp9^0'=disp9^post35, ent8^0'=ent8^post35, exit_stat^0'=exit_stat^post35, fcode5^0'=fcode5^post35, free_ent^0'=free_ent^post35, hshift11^0'=hshift11^post35, hsize^0'=hsize^post35, hsize___019^0'=hsize___019^post35, hsize___027^0'=hsize___027^post35, hsize_reg10^0'=hsize_reg10^post35, i21^0'=i21^post35, i29^0'=i29^post35, i3^0'=i3^post35, i41^0'=i41^post35, i45^0'=i45^post35, i6^0'=i6^post35, in_count^0'=in_count^post35, incnt^0'=incnt^post35, m122^0'=m122^post35, m130^0'=m130^post35, maxbits^0'=maxbits^post35, maxcode^0'=maxcode^post35, maxmaxcode^0'=maxmaxcode^post35, n40^0'=n40^post35, n44^0'=n44^post35, n_bits^0'=n_bits^post35, offset^0'=offset^post35, out_count^0'=out_count^post35, r_off32^0'=r_off32^post35, rat26^0'=rat26^post35, ratio^0'=ratio^post35, ret_getbyte18^0'=ret_getbyte18^post35, ret_getbyte25^0'=ret_getbyte25^post35, seed2^0'=seed2^post35, tabort4^0'=tabort4^post35, tmp12^0'=tmp12^post35, tmp___014^0'=tmp___014^post35, tmp___017^0'=tmp___017^post35, tmp___024^0'=tmp___024^post35, tmp___115^0'=tmp___115^post35, (apsim_incnt^0-apsim_incnt^post35 == 0 /\ -incnt^post35+incnt^0 == 0 /\ hshift11^0-hshift11^post35 == 0 /\ -i45^post35+i45^0 == 0 /\ tabort4^0-tabort4^post35 == 0 /\ r_off32^0-r_off32^post35 == 0 /\ out_count^0-out_count^post35 == 0 /\ -clear_flg^post35+clear_flg^0 == 0 /\ tmp___017^0-tmp___017^post35 == 0 /\ __const_65536^0-__const_65536^post35 == 0 /\ -maxmaxcode^post35+maxmaxcode^0 == 0 /\ -i29^post35+i29^0 == 0 /\ -m130^post35+m130^0 == 0 /\ free_ent^0-free_ent^post35 == 0 /\ -maxbits^post35+maxbits^0 == 0 /\ -c7^post35+c7^0 == 0 /\ -__const_8388607^post35+__const_8388607^0 == 0 /\ -i41^post35+i41^0 == 0 /\ -tmp___115^post35+tmp___115^0 == 0 /\ -n40^post35+n40^0 == 0 /\ exit_stat^0-exit_stat^post35 == 0 /\ -in_count^post35+in_count^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post35 == 0 /\ -i21^post35+i21^0 == 0 /\ -disp9^post35+disp9^0 == 0 /\ -code31^post35+code31^0 == 0 /\ tmp12^0-tmp12^post35 == 0 /\ bytes_out^0-bytes_out^post35 == 0 /\ __const_53^0-__const_53^post35 == 0 /\ __const_257^0-__const_257^post35 == 0 /\ __const_8^0-__const_8^post35 == 0 /\ -seed2^post35+seed2^0 == 0 /\ -tmp___014^post35+tmp___014^0 == 0 /\ -ret_getbyte25^post35+ret_getbyte25^0 == 0 /\ 1-n_bits^0+maxbits^0 <= 0 /\ -offset^post35+offset^0 == 0 /\ hsize___019^0-hsize___019^post35 == 0 /\ c37^0-c37^post35 == 0 /\ -n_bits^post35+n_bits^0 == 0 /\ i6^0-i6^post35 == 0 /\ __const_429496^0-__const_429496^post35 == 0 /\ ent8^0-ent8^post35 == 0 /\ -__const_10000^post35+__const_10000^0 == 0 /\ m122^0-m122^post35 == 0 /\ -__const_256^post35+__const_256^0 == 0 /\ maxcode^0-maxcode^post35 == 0 /\ -__const_2147483647^post35+__const_2147483647^0 == 0 /\ -hsize^post35+hsize^0 == 0 /\ -tmp___024^post35+tmp___024^0 == 0 /\ -ratio^post35+ratio^0 == 0 /\ i3^0-i3^post35 == 0 /\ __const_9^0-__const_9^post35 == 0 /\ __const_16^0-__const_16^post35 == 0 /\ -hsize___027^post35+hsize___027^0 == 0 /\ -__const_50^post35+__const_50^0 == 0 /\ hsize_reg10^0-hsize_reg10^post35 == 0 /\ -block_compress^post35+block_compress^0 == 0 /\ bits33^0-bits33^post35 == 0 /\ count^0-count^post35 == 0 /\ rat26^0-rat26^post35 == 0 /\ checkpoint^0-checkpoint^post35 == 0 /\ n44^0-n44^post35 == 0 /\ -apsim_bound11113^post35+apsim_bound11113^0 == 0 /\ -fcode5^post35+fcode5^0 == 0), cost: 1
  35: l34 -> l33 : __const_10000^0'=__const_10000^post36, __const_16^0'=__const_16^post36, __const_2147483647^0'=__const_2147483647^post36, __const_256^0'=__const_256^post36, __const_257^0'=__const_257^post36, __const_429496^0'=__const_429496^post36, __const_50^0'=__const_50^post36, __const_53^0'=__const_53^post36, __const_65536^0'=__const_65536^post36, __const_8388607^0'=__const_8388607^post36, __const_8^0'=__const_8^post36, __const_9^0'=__const_9^post36, apsim_bound11113^0'=apsim_bound11113^post36, apsim_incnt^0'=apsim_incnt^post36, bits33^0'=bits33^post36, block_compress^0'=block_compress^post36, bytes_out^0'=bytes_out^post36, c37^0'=c37^post36, c7^0'=c7^post36, checkpoint^0'=checkpoint^post36, clear_flg^0'=clear_flg^post36, code31^0'=code31^post36, count^0'=count^post36, disp9^0'=disp9^post36, ent8^0'=ent8^post36, exit_stat^0'=exit_stat^post36, fcode5^0'=fcode5^post36, free_ent^0'=free_ent^post36, hshift11^0'=hshift11^post36, hsize^0'=hsize^post36, hsize___019^0'=hsize___019^post36, hsize___027^0'=hsize___027^post36, hsize_reg10^0'=hsize_reg10^post36, i21^0'=i21^post36, i29^0'=i29^post36, i3^0'=i3^post36, i41^0'=i41^post36, i45^0'=i45^post36, i6^0'=i6^post36, in_count^0'=in_count^post36, incnt^0'=incnt^post36, m122^0'=m122^post36, m130^0'=m130^post36, maxbits^0'=maxbits^post36, maxcode^0'=maxcode^post36, maxmaxcode^0'=maxmaxcode^post36, n40^0'=n40^post36, n44^0'=n44^post36, n_bits^0'=n_bits^post36, offset^0'=offset^post36, out_count^0'=out_count^post36, r_off32^0'=r_off32^post36, rat26^0'=rat26^post36, ratio^0'=ratio^post36, ret_getbyte18^0'=ret_getbyte18^post36, ret_getbyte25^0'=ret_getbyte25^post36, seed2^0'=seed2^post36, tabort4^0'=tabort4^post36, tmp12^0'=tmp12^post36, tmp___014^0'=tmp___014^post36, tmp___017^0'=tmp___017^post36, tmp___024^0'=tmp___024^post36, tmp___115^0'=tmp___115^post36, (__const_16^0-__const_16^post36 == 0 /\ tmp___017^0-tmp___017^post36 == 0 /\ exit_stat^0-exit_stat^post36 == 0 /\ ret_getbyte18^0-ret_getbyte18^post36 == 0 /\ __const_50^0-__const_50^post36 == 0 /\ -tmp___115^post36+tmp___115^0 == 0 /\ m130^0-m130^post36 == 0 /\ tmp___024^0-tmp___024^post36 == 0 /\ checkpoint^0-checkpoint^post36 == 0 /\ r_off32^0-r_off32^post36 == 0 /\ -tmp12^post36+tmp12^0 == 0 /\ -ret_getbyte25^post36+ret_getbyte25^0 == 0 /\ -tmp___014^post36+tmp___014^0 == 0 /\ hsize___027^0-hsize___027^post36 == 0 /\ __const_53^0-__const_53^post36 == 0 /\ -__const_2147483647^post36+__const_2147483647^0 == 0 /\ -seed2^post36+seed2^0 == 0 /\ __const_8^0-__const_8^post36 == 0 /\ -hsize^post36+hsize^0 == 0 /\ -i29^post36+i29^0 == 0 /\ -__const_65536^post36+__const_65536^0 == 0 /\ out_count^0-out_count^post36 == 0 /\ -i41^post36+i41^0 == 0 /\ __const_256^0-__const_256^post36 == 0 /\ -block_compress^post36+block_compress^0 == 0 /\ __const_10000^0-__const_10000^post36 == 0 /\ -rat26^post36+rat26^0 == 0 /\ -ent8^post36+ent8^0 == 0 /\ -fcode5^post36+fcode5^0 == 0 /\ -apsim_bound11113^post36+apsim_bound11113^0 == 0 /\ m122^0-m122^post36 == 0 /\ -in_count^post36+in_count^0 == 0 /\ -__const_8388607^post36+__const_8388607^0 == 0 /\ __const_9^0-__const_9^post36 == 0 /\ -maxbits^post36+maxbits^0 == 0 /\ -n40^post36+n40^0 == 0 /\ bytes_out^0-bytes_out^post36 == 0 /\ -ratio^post36+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post36 == 0 /\ -clear_flg^post36+clear_flg^0 == 0 /\ -c7^post36+c7^0 == 0 /\ -i21^post36+i21^0 == 0 /\ -incnt^post36+incnt^0 == 0 /\ count^0-count^post36 == 0 /\ bits33^0-bits33^post36 == 0 /\ i6^0-i6^post36 == 0 /\ __const_257^0-__const_257^post36 == 0 /\ i3^0-i3^post36 == 0 /\ hshift11^0-hshift11^post36 == 0 /\ -hsize_reg10^post36+hsize_reg10^0 == 0 /\ 1+n_bits^0-maxbits^0 <= 0 /\ tabort4^0-tabort4^post36 == 0 /\ apsim_incnt^0-apsim_incnt^post36 == 0 /\ -__const_429496^post36+__const_429496^0 == 0 /\ c37^0-c37^post36 == 0 /\ hsize___019^0-hsize___019^post36 == 0 /\ -i45^post36+i45^0 == 0 /\ -disp9^post36+disp9^0 == 0 /\ n44^0-n44^post36 == 0 /\ maxcode^0-maxcode^post36 == 0 /\ -offset^post36+offset^0 == 0 /\ -code31^post36+code31^0 == 0 /\ n_bits^0-n_bits^post36 == 0 /\ -free_ent^post36+free_ent^0 == 0), cost: 1
  36: l34 -> l27 : __const_10000^0'=__const_10000^post37, __const_16^0'=__const_16^post37, __const_2147483647^0'=__const_2147483647^post37, __const_256^0'=__const_256^post37, __const_257^0'=__const_257^post37, __const_429496^0'=__const_429496^post37, __const_50^0'=__const_50^post37, __const_53^0'=__const_53^post37, __const_65536^0'=__const_65536^post37, __const_8388607^0'=__const_8388607^post37, __const_8^0'=__const_8^post37, __const_9^0'=__const_9^post37, apsim_bound11113^0'=apsim_bound11113^post37, apsim_incnt^0'=apsim_incnt^post37, bits33^0'=bits33^post37, block_compress^0'=block_compress^post37, bytes_out^0'=bytes_out^post37, c37^0'=c37^post37, c7^0'=c7^post37, checkpoint^0'=checkpoint^post37, clear_flg^0'=clear_flg^post37, code31^0'=code31^post37, count^0'=count^post37, disp9^0'=disp9^post37, ent8^0'=ent8^post37, exit_stat^0'=exit_stat^post37, fcode5^0'=fcode5^post37, free_ent^0'=free_ent^post37, hshift11^0'=hshift11^post37, hsize^0'=hsize^post37, hsize___019^0'=hsize___019^post37, hsize___027^0'=hsize___027^post37, hsize_reg10^0'=hsize_reg10^post37, i21^0'=i21^post37, i29^0'=i29^post37, i3^0'=i3^post37, i41^0'=i41^post37, i45^0'=i45^post37, i6^0'=i6^post37, in_count^0'=in_count^post37, incnt^0'=incnt^post37, m122^0'=m122^post37, m130^0'=m130^post37, maxbits^0'=maxbits^post37, maxcode^0'=maxcode^post37, maxmaxcode^0'=maxmaxcode^post37, n40^0'=n40^post37, n44^0'=n44^post37, n_bits^0'=n_bits^post37, offset^0'=offset^post37, out_count^0'=out_count^post37, r_off32^0'=r_off32^post37, rat26^0'=rat26^post37, ratio^0'=ratio^post37, ret_getbyte18^0'=ret_getbyte18^post37, ret_getbyte25^0'=ret_getbyte25^post37, seed2^0'=seed2^post37, tabort4^0'=tabort4^post37, tmp12^0'=tmp12^post37, tmp___014^0'=tmp___014^post37, tmp___017^0'=tmp___017^post37, tmp___024^0'=tmp___024^post37, tmp___115^0'=tmp___115^post37, (-maxmaxcode^0+maxcode^post37 == 0 /\ __const_53^0-__const_53^post37 == 0 /\ m122^0-m122^post37 == 0 /\ -code31^post37+code31^0 == 0 /\ hshift11^0-hshift11^post37 == 0 /\ m130^0-m130^post37 == 0 /\ apsim_incnt^0-apsim_incnt^post37 == 0 /\ __const_65536^0-__const_65536^post37 == 0 /\ -fcode5^post37+fcode5^0 == 0 /\ n44^0-n44^post37 == 0 /\ free_ent^0-free_ent^post37 == 0 /\ -ratio^post37+ratio^0 == 0 /\ -disp9^post37+disp9^0 == 0 /\ -ent8^post37+ent8^0 == 0 /\ __const_257^0-__const_257^post37 == 0 /\ -__const_10000^post37+__const_10000^0 == 0 /\ __const_8^0-__const_8^post37 == 0 /\ -tmp___014^post37+tmp___014^0 == 0 /\ i21^0-i21^post37 == 0 /\ in_count^0-in_count^post37 == 0 /\ -__const_256^post37+__const_256^0 == 0 /\ exit_stat^0-exit_stat^post37 == 0 /\ -maxbits^post37+maxbits^0 == 0 /\ i6^0-i6^post37 == 0 /\ -hsize_reg10^post37+hsize_reg10^0 == 0 /\ i3^0-i3^post37 == 0 /\ -bytes_out^post37+bytes_out^0 == 0 /\ -tmp___024^post37+tmp___024^0 == 0 /\ __const_16^0-__const_16^post37 == 0 /\ -ret_getbyte25^post37+ret_getbyte25^0 == 0 /\ c37^0-c37^post37 == 0 /\ -i45^post37+i45^0 == 0 /\ r_off32^0-r_off32^post37 == 0 /\ tmp___017^0-tmp___017^post37 == 0 /\ hsize___019^0-hsize___019^post37 == 0 /\ out_count^0-out_count^post37 == 0 /\ count^0-count^post37 == 0 /\ -n_bits^0+maxbits^0 <= 0 /\ -apsim_bound11113^post37+apsim_bound11113^0 == 0 /\ -__const_50^post37+__const_50^0 == 0 /\ -__const_429496^post37+__const_429496^0 == 0 /\ __const_9^0-__const_9^post37 == 0 /\ -offset^post37+offset^0 == 0 /\ -n_bits^post37+n_bits^0 == 0 /\ tmp12^0-tmp12^post37 == 0 /\ -c7^post37+c7^0 == 0 /\ -rat26^post37+rat26^0 == 0 /\ -seed2^post37+seed2^0 == 0 /\ checkpoint^0-checkpoint^post37 == 0 /\ -clear_flg^post37+clear_flg^0 == 0 /\ n_bits^0-maxbits^0 <= 0 /\ -hsize___027^post37+hsize___027^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post37 == 0 /\ -i29^post37+i29^0 == 0 /\ maxmaxcode^0-maxmaxcode^post37 == 0 /\ -__const_8388607^post37+__const_8388607^0 == 0 /\ -i41^post37+i41^0 == 0 /\ -__const_2147483647^post37+__const_2147483647^0 == 0 /\ -block_compress^post37+block_compress^0 == 0 /\ -incnt^post37+incnt^0 == 0 /\ -tmp___115^post37+tmp___115^0 == 0 /\ -n40^post37+n40^0 == 0 /\ tabort4^0-tabort4^post37 == 0 /\ bits33^0-bits33^post37 == 0 /\ -hsize^post37+hsize^0 == 0), cost: 1
  76: l35 -> l1 : __const_10000^0'=__const_10000^post77, __const_16^0'=__const_16^post77, __const_2147483647^0'=__const_2147483647^post77, __const_256^0'=__const_256^post77, __const_257^0'=__const_257^post77, __const_429496^0'=__const_429496^post77, __const_50^0'=__const_50^post77, __const_53^0'=__const_53^post77, __const_65536^0'=__const_65536^post77, __const_8388607^0'=__const_8388607^post77, __const_8^0'=__const_8^post77, __const_9^0'=__const_9^post77, apsim_bound11113^0'=apsim_bound11113^post77, apsim_incnt^0'=apsim_incnt^post77, bits33^0'=bits33^post77, block_compress^0'=block_compress^post77, bytes_out^0'=bytes_out^post77, c37^0'=c37^post77, c7^0'=c7^post77, checkpoint^0'=checkpoint^post77, clear_flg^0'=clear_flg^post77, code31^0'=code31^post77, count^0'=count^post77, disp9^0'=disp9^post77, ent8^0'=ent8^post77, exit_stat^0'=exit_stat^post77, fcode5^0'=fcode5^post77, free_ent^0'=free_ent^post77, hshift11^0'=hshift11^post77, hsize^0'=hsize^post77, hsize___019^0'=hsize___019^post77, hsize___027^0'=hsize___027^post77, hsize_reg10^0'=hsize_reg10^post77, i21^0'=i21^post77, i29^0'=i29^post77, i3^0'=i3^post77, i41^0'=i41^post77, i45^0'=i45^post77, i6^0'=i6^post77, in_count^0'=in_count^post77, incnt^0'=incnt^post77, m122^0'=m122^post77, m130^0'=m130^post77, maxbits^0'=maxbits^post77, maxcode^0'=maxcode^post77, maxmaxcode^0'=maxmaxcode^post77, n40^0'=n40^post77, n44^0'=n44^post77, n_bits^0'=n_bits^post77, offset^0'=offset^post77, out_count^0'=out_count^post77, r_off32^0'=r_off32^post77, rat26^0'=rat26^post77, ratio^0'=ratio^post77, ret_getbyte18^0'=ret_getbyte18^post77, ret_getbyte25^0'=ret_getbyte25^post77, seed2^0'=seed2^post77, tabort4^0'=tabort4^post77, tmp12^0'=tmp12^post77, tmp___014^0'=tmp___014^post77, tmp___017^0'=tmp___017^post77, tmp___024^0'=tmp___024^post77, tmp___115^0'=tmp___115^post77, (__const_8388607^0-__const_8388607^post77 == 0 /\ tmp___014^0-tmp___014^post77 == 0 /\ -c7^post77+c7^0 == 0 /\ -bytes_out^post77+bytes_out^0 == 0 /\ -block_compress^post77+block_compress^0 == 0 /\ free_ent^0-free_ent^post77 == 0 /\ -ret_getbyte18^post77+ret_getbyte18^0 == 0 /\ -i29^post77+i29^0 == 0 /\ -i45^post77+i45^0 == 0 /\ -m122^post77+m122^0 == 0 /\ -tmp___024^post77+tmp___024^0 == 0 /\ -tmp___017^post77+tmp___017^0 == 0 /\ -i41^post77+i41^0 == 0 /\ m130^0-m130^post77 == 0 /\ -incnt^post77+incnt^0 == 0 /\ tmp12^0-tmp12^post77 == 0 /\ -fcode5^post77+fcode5^0 == 0 /\ rat26^0-rat26^post77 == 0 /\ __const_16^0-__const_16^post77 == 0 /\ i21^0-i21^post77 == 0 /\ code31^0-code31^post77 == 0 /\ __const_8^0-__const_8^post77 == 0 /\ -__const_429496^post77+__const_429496^0 == 0 /\ -n44^post77+n44^0 == 0 /\ -in_count^post77+in_count^0 == 0 /\ -r_off32^post77+r_off32^0 == 0 /\ -clear_flg^post77+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post77 == 0 /\ -hsize_reg10^post77+hsize_reg10^0 == 0 /\ -hsize^post77+hsize^0 == 0 /\ checkpoint^0-checkpoint^post77 == 0 /\ i6^0-i6^post77 == 0 /\ -hsize___027^post77+hsize___027^0 == 0 /\ c37^0-c37^post77 == 0 /\ -disp9^post77+disp9^0 == 0 /\ -count^post77+count^0 == 0 /\ -maxbits^post77+maxbits^0 == 0 /\ -maxcode^post77+maxcode^0 == 0 /\ ent8^0-ent8^post77 == 0 /\ out_count^0-out_count^post77 == 0 /\ maxmaxcode^0-maxmaxcode^post77 == 0 /\ -__const_256^post77+__const_256^0 == 0 /\ __const_9^0-__const_9^post77 == 0 /\ -__const_2147483647^post77+__const_2147483647^0 == 0 /\ n40^0-n40^post77 == 0 /\ -seed2^post77+seed2^0 == 0 /\ offset^0-offset^post77 == 0 /\ -apsim_bound11113^post77+apsim_bound11113^0 == 0 /\ exit_stat^0-exit_stat^post77 == 0 /\ -__const_10000^post77+__const_10000^0 == 0 /\ -tabort4^post77+tabort4^0 == 0 /\ i3^0-i3^post77 == 0 /\ bits33^0-bits33^post77 == 0 /\ ratio^0-ratio^post77 == 0 /\ tmp___115^0-tmp___115^post77 == 0 /\ __const_257^0-__const_257^post77 == 0 /\ hshift11^0-hshift11^post77 == 0 /\ -n_bits^post77+n_bits^0 == 0 /\ -__const_50^post77+__const_50^0 == 0 /\ -__const_65536^post77+__const_65536^0 == 0 /\ __const_53^0-__const_53^post77 == 0 /\ apsim_incnt^0-apsim_incnt^post77 == 0 /\ hsize___019^0-hsize___019^post77 == 0), cost: 1
  38: l36 -> l27 : __const_10000^0'=__const_10000^post39, __const_16^0'=__const_16^post39, __const_2147483647^0'=__const_2147483647^post39, __const_256^0'=__const_256^post39, __const_257^0'=__const_257^post39, __const_429496^0'=__const_429496^post39, __const_50^0'=__const_50^post39, __const_53^0'=__const_53^post39, __const_65536^0'=__const_65536^post39, __const_8388607^0'=__const_8388607^post39, __const_8^0'=__const_8^post39, __const_9^0'=__const_9^post39, apsim_bound11113^0'=apsim_bound11113^post39, apsim_incnt^0'=apsim_incnt^post39, bits33^0'=bits33^post39, block_compress^0'=block_compress^post39, bytes_out^0'=bytes_out^post39, c37^0'=c37^post39, c7^0'=c7^post39, checkpoint^0'=checkpoint^post39, clear_flg^0'=clear_flg^post39, code31^0'=code31^post39, count^0'=count^post39, disp9^0'=disp9^post39, ent8^0'=ent8^post39, exit_stat^0'=exit_stat^post39, fcode5^0'=fcode5^post39, free_ent^0'=free_ent^post39, hshift11^0'=hshift11^post39, hsize^0'=hsize^post39, hsize___019^0'=hsize___019^post39, hsize___027^0'=hsize___027^post39, hsize_reg10^0'=hsize_reg10^post39, i21^0'=i21^post39, i29^0'=i29^post39, i3^0'=i3^post39, i41^0'=i41^post39, i45^0'=i45^post39, i6^0'=i6^post39, in_count^0'=in_count^post39, incnt^0'=incnt^post39, m122^0'=m122^post39, m130^0'=m130^post39, maxbits^0'=maxbits^post39, maxcode^0'=maxcode^post39, maxmaxcode^0'=maxmaxcode^post39, n40^0'=n40^post39, n44^0'=n44^post39, n_bits^0'=n_bits^post39, offset^0'=offset^post39, out_count^0'=out_count^post39, r_off32^0'=r_off32^post39, rat26^0'=rat26^post39, ratio^0'=ratio^post39, ret_getbyte18^0'=ret_getbyte18^post39, ret_getbyte25^0'=ret_getbyte25^post39, seed2^0'=seed2^post39, tabort4^0'=tabort4^post39, tmp12^0'=tmp12^post39, tmp___014^0'=tmp___014^post39, tmp___017^0'=tmp___017^post39, tmp___024^0'=tmp___024^post39, tmp___115^0'=tmp___115^post39, (0 == 0 /\ -tmp___024^post39+tmp___024^0 == 0 /\ -i21^post39+i21^0 == 0 /\ __const_9^0-__const_9^post39 == 0 /\ rat26^0-rat26^post39 == 0 /\ tmp12^0-tmp12^post39 == 0 /\ c37^0-c37^post39 == 0 /\ n_bits^post39-__const_9^0 == 0 /\ bits33^0-bits33^post39 == 0 /\ __const_257^0-__const_257^post39 == 0 /\ -checkpoint^post39+checkpoint^0 == 0 /\ c7^0-c7^post39 == 0 /\ apsim_incnt^0-apsim_incnt^post39 == 0 /\ i29^0-i29^post39 == 0 /\ n40^0-n40^post39 == 0 /\ -incnt^post39+incnt^0 == 0 /\ hsize___027^0-hsize___027^post39 == 0 /\ -hsize^post39+hsize^0 == 0 /\ hshift11^0-hshift11^post39 == 0 /\ -r_off32^post39+r_off32^0 == 0 /\ -n44^post39+n44^0 == 0 /\ hsize___019^0-hsize___019^post39 == 0 /\ -__const_50^post39+__const_50^0 == 0 /\ tmp___014^0-tmp___014^post39 == 0 /\ -count^post39+count^0 == 0 /\ -fcode5^post39+fcode5^0 == 0 /\ -apsim_bound11113^post39+apsim_bound11113^0 == 0 /\ -i3^post39+i3^0 == 0 /\ __const_65536^0-__const_65536^post39 == 0 /\ free_ent^0-free_ent^post39 == 0 /\ code31^0-code31^post39 == 0 /\ -tmp___017^post39+tmp___017^0 == 0 /\ -i41^post39+i41^0 == 0 /\ -ratio^post39+ratio^0 == 0 /\ -ret_getbyte18^post39+ret_getbyte18^0 == 0 /\ out_count^0-out_count^post39 == 0 /\ -i6^post39+i6^0 == 0 /\ clear_flg^post39 == 0 /\ -in_count^post39+in_count^0 == 0 /\ -__const_256^post39+__const_256^0 == 0 /\ offset^0-offset^post39 == 0 /\ -__const_2147483647^post39+__const_2147483647^0 == 0 /\ maxmaxcode^0-maxmaxcode^post39 == 0 /\ __const_53^0-__const_53^post39 == 0 /\ -hsize_reg10^post39+hsize_reg10^0 == 0 /\ -__const_10000^post39+__const_10000^0 == 0 /\ -__const_8388607^post39+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post39 == 0 /\ -tabort4^post39+tabort4^0 == 0 /\ tmp___115^0-tmp___115^post39 == 0 /\ ret_getbyte25^0-ret_getbyte25^post39 == 0 /\ __const_16^0-__const_16^post39 == 0 /\ -m122^post39+m122^0 == 0 /\ seed2^0-seed2^post39 == 0 /\ -bytes_out^post39+bytes_out^0 == 0 /\ m130^0-m130^post39 == 0 /\ __const_429496^0-__const_429496^post39 == 0 /\ -disp9^post39+disp9^0 == 0 /\ ent8^0-ent8^post39 == 0 /\ -exit_stat^post39+exit_stat^0 == 0 /\ maxbits^0-maxbits^post39 == 0 /\ block_compress^0-block_compress^post39 == 0 /\ i45^0-i45^post39 == 0), cost: 1
  39: l37 -> l34 : __const_10000^0'=__const_10000^post40, __const_16^0'=__const_16^post40, __const_2147483647^0'=__const_2147483647^post40, __const_256^0'=__const_256^post40, __const_257^0'=__const_257^post40, __const_429496^0'=__const_429496^post40, __const_50^0'=__const_50^post40, __const_53^0'=__const_53^post40, __const_65536^0'=__const_65536^post40, __const_8388607^0'=__const_8388607^post40, __const_8^0'=__const_8^post40, __const_9^0'=__const_9^post40, apsim_bound11113^0'=apsim_bound11113^post40, apsim_incnt^0'=apsim_incnt^post40, bits33^0'=bits33^post40, block_compress^0'=block_compress^post40, bytes_out^0'=bytes_out^post40, c37^0'=c37^post40, c7^0'=c7^post40, checkpoint^0'=checkpoint^post40, clear_flg^0'=clear_flg^post40, code31^0'=code31^post40, count^0'=count^post40, disp9^0'=disp9^post40, ent8^0'=ent8^post40, exit_stat^0'=exit_stat^post40, fcode5^0'=fcode5^post40, free_ent^0'=free_ent^post40, hshift11^0'=hshift11^post40, hsize^0'=hsize^post40, hsize___019^0'=hsize___019^post40, hsize___027^0'=hsize___027^post40, hsize_reg10^0'=hsize_reg10^post40, i21^0'=i21^post40, i29^0'=i29^post40, i3^0'=i3^post40, i41^0'=i41^post40, i45^0'=i45^post40, i6^0'=i6^post40, in_count^0'=in_count^post40, incnt^0'=incnt^post40, m122^0'=m122^post40, m130^0'=m130^post40, maxbits^0'=maxbits^post40, maxcode^0'=maxcode^post40, maxmaxcode^0'=maxmaxcode^post40, n40^0'=n40^post40, n44^0'=n44^post40, n_bits^0'=n_bits^post40, offset^0'=offset^post40, out_count^0'=out_count^post40, r_off32^0'=r_off32^post40, rat26^0'=rat26^post40, ratio^0'=ratio^post40, ret_getbyte18^0'=ret_getbyte18^post40, ret_getbyte25^0'=ret_getbyte25^post40, seed2^0'=seed2^post40, tabort4^0'=tabort4^post40, tmp12^0'=tmp12^post40, tmp___014^0'=tmp___014^post40, tmp___017^0'=tmp___017^post40, tmp___024^0'=tmp___024^post40, tmp___115^0'=tmp___115^post40, (-1+n_bits^post40-n_bits^0 == 0 /\ m130^0-m130^post40 == 0 /\ -c7^post40+c7^0 == 0 /\ -ent8^post40+ent8^0 == 0 /\ -block_compress^post40+block_compress^0 == 0 /\ __const_53^0-__const_53^post40 == 0 /\ free_ent^0-free_ent^post40 == 0 /\ -disp9^post40+disp9^0 == 0 /\ -ret_getbyte18^post40+ret_getbyte18^0 == 0 /\ -i29^post40+i29^0 == 0 /\ tmp___115^0-tmp___115^post40 == 0 /\ -i41^post40+i41^0 == 0 /\ -code31^post40+code31^0 == 0 /\ -fcode5^post40+fcode5^0 == 0 /\ -i21^post40+i21^0 == 0 /\ tmp___014^0-tmp___014^post40 == 0 /\ n44^0-n44^post40 == 0 /\ -i6^post40+i6^0 == 0 /\ -maxbits^post40+maxbits^0 == 0 /\ -tmp___024^post40+tmp___024^0 == 0 /\ __const_16^0-__const_16^post40 == 0 /\ -__const_2147483647^post40+__const_2147483647^0 == 0 /\ -__const_10000^post40+__const_10000^0 == 0 /\ rat26^0-rat26^post40 == 0 /\ exit_stat^0-exit_stat^post40 == 0 /\ -clear_flg^post40+clear_flg^0 == 0 /\ -apsim_incnt^post40+apsim_incnt^0 == 0 /\ bytes_out^0-bytes_out^post40 == 0 /\ -tabort4^post40+tabort4^0 == 0 /\ __const_50^0-__const_50^post40 == 0 /\ -m122^post40+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post40 == 0 /\ -hsize^post40+hsize^0 == 0 /\ -hsize_reg10^post40+hsize_reg10^0 == 0 /\ -hsize___019^post40+hsize___019^0 == 0 /\ seed2^0-seed2^post40 == 0 /\ count^0-count^post40 == 0 /\ -__const_429496^post40+__const_429496^0 == 0 /\ c37^0-c37^post40 == 0 /\ -__const_65536^post40+__const_65536^0 == 0 /\ n40^0-n40^post40 == 0 /\ __const_257^0-__const_257^post40 == 0 /\ ret_getbyte25^0-ret_getbyte25^post40 == 0 /\ -r_off32^post40+r_off32^0 == 0 /\ out_count^0-out_count^post40 == 0 /\ -__const_9^post40+__const_9^0 == 0 /\ -in_count^post40+in_count^0 == 0 /\ -__const_8388607^post40+__const_8388607^0 == 0 /\ i45^0-i45^post40 == 0 /\ -__const_8^post40+__const_8^0 == 0 /\ i3^0-i3^post40 == 0 /\ bits33^0-bits33^post40 == 0 /\ -maxcode^post40+maxcode^0 == 0 /\ -tmp___017^post40+tmp___017^0 == 0 /\ hsize___027^0-hsize___027^post40 == 0 /\ tmp12^0-tmp12^post40 == 0 /\ offset^0-offset^post40 == 0 /\ hshift11^0-hshift11^post40 == 0 /\ -clear_flg^0 <= 0 /\ -__const_256^post40+__const_256^0 == 0 /\ -incnt^post40+incnt^0 == 0 /\ clear_flg^0 <= 0 /\ ratio^0-ratio^post40 == 0 /\ maxmaxcode^0-maxmaxcode^post40 == 0 /\ checkpoint^0-checkpoint^post40 == 0), cost: 1
  40: l37 -> l36 : __const_10000^0'=__const_10000^post41, __const_16^0'=__const_16^post41, __const_2147483647^0'=__const_2147483647^post41, __const_256^0'=__const_256^post41, __const_257^0'=__const_257^post41, __const_429496^0'=__const_429496^post41, __const_50^0'=__const_50^post41, __const_53^0'=__const_53^post41, __const_65536^0'=__const_65536^post41, __const_8388607^0'=__const_8388607^post41, __const_8^0'=__const_8^post41, __const_9^0'=__const_9^post41, apsim_bound11113^0'=apsim_bound11113^post41, apsim_incnt^0'=apsim_incnt^post41, bits33^0'=bits33^post41, block_compress^0'=block_compress^post41, bytes_out^0'=bytes_out^post41, c37^0'=c37^post41, c7^0'=c7^post41, checkpoint^0'=checkpoint^post41, clear_flg^0'=clear_flg^post41, code31^0'=code31^post41, count^0'=count^post41, disp9^0'=disp9^post41, ent8^0'=ent8^post41, exit_stat^0'=exit_stat^post41, fcode5^0'=fcode5^post41, free_ent^0'=free_ent^post41, hshift11^0'=hshift11^post41, hsize^0'=hsize^post41, hsize___019^0'=hsize___019^post41, hsize___027^0'=hsize___027^post41, hsize_reg10^0'=hsize_reg10^post41, i21^0'=i21^post41, i29^0'=i29^post41, i3^0'=i3^post41, i41^0'=i41^post41, i45^0'=i45^post41, i6^0'=i6^post41, in_count^0'=in_count^post41, incnt^0'=incnt^post41, m122^0'=m122^post41, m130^0'=m130^post41, maxbits^0'=maxbits^post41, maxcode^0'=maxcode^post41, maxmaxcode^0'=maxmaxcode^post41, n40^0'=n40^post41, n44^0'=n44^post41, n_bits^0'=n_bits^post41, offset^0'=offset^post41, out_count^0'=out_count^post41, r_off32^0'=r_off32^post41, rat26^0'=rat26^post41, ratio^0'=ratio^post41, ret_getbyte18^0'=ret_getbyte18^post41, ret_getbyte25^0'=ret_getbyte25^post41, seed2^0'=seed2^post41, tabort4^0'=tabort4^post41, tmp12^0'=tmp12^post41, tmp___014^0'=tmp___014^post41, tmp___017^0'=tmp___017^post41, tmp___024^0'=tmp___024^post41, tmp___115^0'=tmp___115^post41, (n44^0-n44^post41 == 0 /\ -__const_10000^post41+__const_10000^0 == 0 /\ tmp___115^0-tmp___115^post41 == 0 /\ __const_16^0-__const_16^post41 == 0 /\ -__const_2147483647^post41+__const_2147483647^0 == 0 /\ -r_off32^post41+r_off32^0 == 0 /\ -maxbits^post41+maxbits^0 == 0 /\ -m122^post41+m122^0 == 0 /\ -n40^post41+n40^0 == 0 /\ bytes_out^0-bytes_out^post41 == 0 /\ -__const_8388607^post41+__const_8388607^0 == 0 /\ hshift11^0-hshift11^post41 == 0 /\ -incnt^post41+incnt^0 == 0 /\ apsim_incnt^0-apsim_incnt^post41 == 0 /\ maxcode^0-maxcode^post41 == 0 /\ -hsize___019^post41+hsize___019^0 == 0 /\ __const_256^0-__const_256^post41 == 0 /\ -i41^post41+i41^0 == 0 /\ exit_stat^0-exit_stat^post41 == 0 /\ __const_50^0-__const_50^post41 == 0 /\ hsize^0-hsize^post41 == 0 /\ c37^0-c37^post41 == 0 /\ -bits33^post41+bits33^0 == 0 /\ -__const_9^post41+__const_9^0 == 0 /\ -in_count^post41+in_count^0 == 0 /\ __const_53^0-__const_53^post41 == 0 /\ -ratio^post41+ratio^0 == 0 /\ -disp9^post41+disp9^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post41 == 0 /\ m130^0-m130^post41 == 0 /\ -ret_getbyte18^post41+ret_getbyte18^0 == 0 /\ -i29^post41+i29^0 == 0 /\ -n_bits^post41+n_bits^0 == 0 /\ hsize___027^0-hsize___027^post41 == 0 /\ -free_ent^post41+free_ent^0 == 0 /\ -tabort4^post41+tabort4^0 == 0 /\ -seed2^post41+seed2^0 == 0 /\ -i21^post41+i21^0 == 0 /\ i3^0-i3^post41 == 0 /\ -__const_8^post41+__const_8^0 == 0 /\ __const_257^0-__const_257^post41 == 0 /\ -tmp___017^post41+tmp___017^0 == 0 /\ -clear_flg^post41+clear_flg^0 == 0 /\ -block_compress^post41+block_compress^0 == 0 /\ checkpoint^0-checkpoint^post41 == 0 /\ -tmp___024^post41+tmp___024^0 == 0 /\ -c7^post41+c7^0 == 0 /\ rat26^0-rat26^post41 == 0 /\ maxmaxcode^0-maxmaxcode^post41 == 0 /\ -i45^post41+i45^0 == 0 /\ tmp___014^0-tmp___014^post41 == 0 /\ out_count^0-out_count^post41 == 0 /\ -i6^post41+i6^0 == 0 /\ -apsim_bound11113^post41+apsim_bound11113^0 == 0 /\ 1-clear_flg^0 <= 0 /\ tmp12^0-tmp12^post41 == 0 /\ -__const_65536^post41+__const_65536^0 == 0 /\ -code31^post41+code31^0 == 0 /\ -fcode5^post41+fcode5^0 == 0 /\ -__const_429496^post41+__const_429496^0 == 0 /\ count^0-count^post41 == 0 /\ hsize_reg10^0-hsize_reg10^post41 == 0 /\ -ent8^post41+ent8^0 == 0 /\ offset^0-offset^post41 == 0), cost: 1
  41: l37 -> l36 : __const_10000^0'=__const_10000^post42, __const_16^0'=__const_16^post42, __const_2147483647^0'=__const_2147483647^post42, __const_256^0'=__const_256^post42, __const_257^0'=__const_257^post42, __const_429496^0'=__const_429496^post42, __const_50^0'=__const_50^post42, __const_53^0'=__const_53^post42, __const_65536^0'=__const_65536^post42, __const_8388607^0'=__const_8388607^post42, __const_8^0'=__const_8^post42, __const_9^0'=__const_9^post42, apsim_bound11113^0'=apsim_bound11113^post42, apsim_incnt^0'=apsim_incnt^post42, bits33^0'=bits33^post42, block_compress^0'=block_compress^post42, bytes_out^0'=bytes_out^post42, c37^0'=c37^post42, c7^0'=c7^post42, checkpoint^0'=checkpoint^post42, clear_flg^0'=clear_flg^post42, code31^0'=code31^post42, count^0'=count^post42, disp9^0'=disp9^post42, ent8^0'=ent8^post42, exit_stat^0'=exit_stat^post42, fcode5^0'=fcode5^post42, free_ent^0'=free_ent^post42, hshift11^0'=hshift11^post42, hsize^0'=hsize^post42, hsize___019^0'=hsize___019^post42, hsize___027^0'=hsize___027^post42, hsize_reg10^0'=hsize_reg10^post42, i21^0'=i21^post42, i29^0'=i29^post42, i3^0'=i3^post42, i41^0'=i41^post42, i45^0'=i45^post42, i6^0'=i6^post42, in_count^0'=in_count^post42, incnt^0'=incnt^post42, m122^0'=m122^post42, m130^0'=m130^post42, maxbits^0'=maxbits^post42, maxcode^0'=maxcode^post42, maxmaxcode^0'=maxmaxcode^post42, n40^0'=n40^post42, n44^0'=n44^post42, n_bits^0'=n_bits^post42, offset^0'=offset^post42, out_count^0'=out_count^post42, r_off32^0'=r_off32^post42, rat26^0'=rat26^post42, ratio^0'=ratio^post42, ret_getbyte18^0'=ret_getbyte18^post42, ret_getbyte25^0'=ret_getbyte25^post42, seed2^0'=seed2^post42, tabort4^0'=tabort4^post42, tmp12^0'=tmp12^post42, tmp___014^0'=tmp___014^post42, tmp___017^0'=tmp___017^post42, tmp___024^0'=tmp___024^post42, tmp___115^0'=tmp___115^post42, (out_count^0-out_count^post42 == 0 /\ -bits33^post42+bits33^0 == 0 /\ -ratio^post42+ratio^0 == 0 /\ -tmp___024^post42+tmp___024^0 == 0 /\ -code31^post42+code31^0 == 0 /\ maxmaxcode^0-maxmaxcode^post42 == 0 /\ __const_256^0-__const_256^post42 == 0 /\ bytes_out^0-bytes_out^post42 == 0 /\ count^0-count^post42 == 0 /\ 1+clear_flg^0 <= 0 /\ offset^0-offset^post42 == 0 /\ -tmp___014^post42+tmp___014^0 == 0 /\ __const_16^0-__const_16^post42 == 0 /\ ret_getbyte25^0-ret_getbyte25^post42 == 0 /\ -ent8^post42+ent8^0 == 0 /\ -c37^post42+c37^0 == 0 /\ -block_compress^post42+block_compress^0 == 0 /\ -r_off32^post42+r_off32^0 == 0 /\ -apsim_bound11113^post42+apsim_bound11113^0 == 0 /\ -__const_429496^post42+__const_429496^0 == 0 /\ -seed2^post42+seed2^0 == 0 /\ tmp___115^0-tmp___115^post42 == 0 /\ __const_50^0-__const_50^post42 == 0 /\ checkpoint^0-checkpoint^post42 == 0 /\ n44^0-n44^post42 == 0 /\ apsim_incnt^0-apsim_incnt^post42 == 0 /\ -hsize^post42+hsize^0 == 0 /\ hshift11^0-hshift11^post42 == 0 /\ m130^0-m130^post42 == 0 /\ -incnt^post42+incnt^0 == 0 /\ -__const_65536^post42+__const_65536^0 == 0 /\ maxcode^0-maxcode^post42 == 0 /\ i6^0-i6^post42 == 0 /\ __const_257^0-__const_257^post42 == 0 /\ ret_getbyte18^0-ret_getbyte18^post42 == 0 /\ tmp___017^0-tmp___017^post42 == 0 /\ hsize_reg10^0-hsize_reg10^post42 == 0 /\ fcode5^0-fcode5^post42 == 0 /\ -n40^post42+n40^0 == 0 /\ -i45^post42+i45^0 == 0 /\ -in_count^post42+in_count^0 == 0 /\ exit_stat^0-exit_stat^post42 == 0 /\ -i29^post42+i29^0 == 0 /\ -__const_8388607^post42+__const_8388607^0 == 0 /\ i3^0-i3^post42 == 0 /\ -i41^post42+i41^0 == 0 /\ __const_8^0-__const_8^post42 == 0 /\ -__const_2147483647^post42+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post42 == 0 /\ hsize___027^0-hsize___027^post42 == 0 /\ __const_53^0-__const_53^post42 == 0 /\ -clear_flg^post42+clear_flg^0 == 0 /\ m122^0-m122^post42 == 0 /\ -n_bits^post42+n_bits^0 == 0 /\ -c7^post42+c7^0 == 0 /\ -free_ent^post42+free_ent^0 == 0 /\ -disp9^post42+disp9^0 == 0 /\ -tabort4^post42+tabort4^0 == 0 /\ -__const_9^post42+__const_9^0 == 0 /\ rat26^0-rat26^post42 == 0 /\ -hsize___019^post42+hsize___019^0 == 0 /\ -i21^post42+i21^0 == 0 /\ __const_10000^0-__const_10000^post42 == 0 /\ -maxbits^post42+maxbits^0 == 0), cost: 1
  42: l38 -> l37 : __const_10000^0'=__const_10000^post43, __const_16^0'=__const_16^post43, __const_2147483647^0'=__const_2147483647^post43, __const_256^0'=__const_256^post43, __const_257^0'=__const_257^post43, __const_429496^0'=__const_429496^post43, __const_50^0'=__const_50^post43, __const_53^0'=__const_53^post43, __const_65536^0'=__const_65536^post43, __const_8388607^0'=__const_8388607^post43, __const_8^0'=__const_8^post43, __const_9^0'=__const_9^post43, apsim_bound11113^0'=apsim_bound11113^post43, apsim_incnt^0'=apsim_incnt^post43, bits33^0'=bits33^post43, block_compress^0'=block_compress^post43, bytes_out^0'=bytes_out^post43, c37^0'=c37^post43, c7^0'=c7^post43, checkpoint^0'=checkpoint^post43, clear_flg^0'=clear_flg^post43, code31^0'=code31^post43, count^0'=count^post43, disp9^0'=disp9^post43, ent8^0'=ent8^post43, exit_stat^0'=exit_stat^post43, fcode5^0'=fcode5^post43, free_ent^0'=free_ent^post43, hshift11^0'=hshift11^post43, hsize^0'=hsize^post43, hsize___019^0'=hsize___019^post43, hsize___027^0'=hsize___027^post43, hsize_reg10^0'=hsize_reg10^post43, i21^0'=i21^post43, i29^0'=i29^post43, i3^0'=i3^post43, i41^0'=i41^post43, i45^0'=i45^post43, i6^0'=i6^post43, in_count^0'=in_count^post43, incnt^0'=incnt^post43, m122^0'=m122^post43, m130^0'=m130^post43, maxbits^0'=maxbits^post43, maxcode^0'=maxcode^post43, maxmaxcode^0'=maxmaxcode^post43, n40^0'=n40^post43, n44^0'=n44^post43, n_bits^0'=n_bits^post43, offset^0'=offset^post43, out_count^0'=out_count^post43, r_off32^0'=r_off32^post43, rat26^0'=rat26^post43, ratio^0'=ratio^post43, ret_getbyte18^0'=ret_getbyte18^post43, ret_getbyte25^0'=ret_getbyte25^post43, seed2^0'=seed2^post43, tabort4^0'=tabort4^post43, tmp12^0'=tmp12^post43, tmp___014^0'=tmp___014^post43, tmp___017^0'=tmp___017^post43, tmp___024^0'=tmp___024^post43, tmp___115^0'=tmp___115^post43, (i6^0-i6^post43 == 0 /\ __const_257^0-__const_257^post43 == 0 /\ checkpoint^0-checkpoint^post43 == 0 /\ -n40^post43+n40^0 == 0 /\ tmp___115^0-tmp___115^post43 == 0 /\ n44^0-n44^post43 == 0 /\ -block_compress^post43+block_compress^0 == 0 /\ m130^0-m130^post43 == 0 /\ -free_ent^post43+free_ent^0 == 0 /\ -__const_53^post43+__const_53^0 == 0 /\ tmp___014^0-tmp___014^post43 == 0 /\ -__const_429496^post43+__const_429496^0 == 0 /\ -ent8^post43+ent8^0 == 0 /\ -i29^post43+i29^0 == 0 /\ -i41^post43+i41^0 == 0 /\ __const_256^0-__const_256^post43 == 0 /\ -i45^post43+i45^0 == 0 /\ -n_bits^post43+n_bits^0 == 0 /\ -tabort4^post43+tabort4^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post43 == 0 /\ i3^0-i3^post43 == 0 /\ -i21^post43+i21^0 == 0 /\ count^0-count^post43 == 0 /\ -m122^post43+m122^0 == 0 /\ apsim_incnt^0-apsim_incnt^post43 == 0 /\ -in_count^post43+in_count^0 == 0 /\ hsize___027^0-hsize___027^post43 == 0 /\ -__const_2147483647^post43+__const_2147483647^0 == 0 /\ hshift11^0-hshift11^post43 == 0 /\ -c7^post43+c7^0 == 0 /\ -maxbits^post43+maxbits^0 == 0 /\ -clear_flg^post43+clear_flg^0 == 0 /\ -hsize_reg10^post43+hsize_reg10^0 == 0 /\ -tmp___024^post43+tmp___024^0 == 0 /\ -tmp___017^post43+tmp___017^0 == 0 /\ offset^post43 == 0 /\ -hsize___019^post43+hsize___019^0 == 0 /\ -hsize^post43+hsize^0 == 0 /\ -disp9^post43+disp9^0 == 0 /\ rat26^0-rat26^post43 == 0 /\ __const_50^0-__const_50^post43 == 0 /\ -apsim_bound11113^post43+apsim_bound11113^0 == 0 /\ fcode5^0-fcode5^post43 == 0 /\ __const_10000^0-__const_10000^post43 == 0 /\ -__const_9^post43+__const_9^0 == 0 /\ -__const_65536^post43+__const_65536^0 == 0 /\ -code31^post43+code31^0 == 0 /\ -ratio^post43+ratio^0 == 0 /\ -ret_getbyte18^post43+ret_getbyte18^0 == 0 /\ -incnt^post43+incnt^0 == 0 /\ -seed2^post43+seed2^0 == 0 /\ tmp12^0-tmp12^post43 == 0 /\ -r_off32^post43+r_off32^0 == 0 /\ out_count^0-out_count^post43 == 0 /\ __const_8^0-__const_8^post43 == 0 /\ -__const_16^post43+__const_16^0 == 0 /\ exit_stat^0-exit_stat^post43 == 0 /\ -bits33^post43+bits33^0 == 0 /\ maxmaxcode^0-maxmaxcode^post43 == 0 /\ c37^0-c37^post43 == 0 /\ bytes_out^0-bytes_out^post43 == 0 /\ -__const_8388607^post43+__const_8388607^0 == 0 /\ -maxcode^post43+maxcode^0 == 0), cost: 1
  43: l39 -> l38 : __const_10000^0'=__const_10000^post44, __const_16^0'=__const_16^post44, __const_2147483647^0'=__const_2147483647^post44, __const_256^0'=__const_256^post44, __const_257^0'=__const_257^post44, __const_429496^0'=__const_429496^post44, __const_50^0'=__const_50^post44, __const_53^0'=__const_53^post44, __const_65536^0'=__const_65536^post44, __const_8388607^0'=__const_8388607^post44, __const_8^0'=__const_8^post44, __const_9^0'=__const_9^post44, apsim_bound11113^0'=apsim_bound11113^post44, apsim_incnt^0'=apsim_incnt^post44, bits33^0'=bits33^post44, block_compress^0'=block_compress^post44, bytes_out^0'=bytes_out^post44, c37^0'=c37^post44, c7^0'=c7^post44, checkpoint^0'=checkpoint^post44, clear_flg^0'=clear_flg^post44, code31^0'=code31^post44, count^0'=count^post44, disp9^0'=disp9^post44, ent8^0'=ent8^post44, exit_stat^0'=exit_stat^post44, fcode5^0'=fcode5^post44, free_ent^0'=free_ent^post44, hshift11^0'=hshift11^post44, hsize^0'=hsize^post44, hsize___019^0'=hsize___019^post44, hsize___027^0'=hsize___027^post44, hsize_reg10^0'=hsize_reg10^post44, i21^0'=i21^post44, i29^0'=i29^post44, i3^0'=i3^post44, i41^0'=i41^post44, i45^0'=i45^post44, i6^0'=i6^post44, in_count^0'=in_count^post44, incnt^0'=incnt^post44, m122^0'=m122^post44, m130^0'=m130^post44, maxbits^0'=maxbits^post44, maxcode^0'=maxcode^post44, maxmaxcode^0'=maxmaxcode^post44, n40^0'=n40^post44, n44^0'=n44^post44, n_bits^0'=n_bits^post44, offset^0'=offset^post44, out_count^0'=out_count^post44, r_off32^0'=r_off32^post44, rat26^0'=rat26^post44, ratio^0'=ratio^post44, ret_getbyte18^0'=ret_getbyte18^post44, ret_getbyte25^0'=ret_getbyte25^post44, seed2^0'=seed2^post44, tabort4^0'=tabort4^post44, tmp12^0'=tmp12^post44, tmp___014^0'=tmp___014^post44, tmp___017^0'=tmp___017^post44, tmp___024^0'=tmp___024^post44, tmp___115^0'=tmp___115^post44, (maxcode^0-maxcode^post44 == 0 /\ -hsize___019^post44+hsize___019^0 == 0 /\ -hsize^post44+hsize^0 == 0 /\ count^0-count^post44 == 0 /\ -seed2^post44+seed2^0 == 0 /\ __const_53^0-__const_53^post44 == 0 /\ offset^0-offset^post44 == 0 /\ -ent8^post44+ent8^0 == 0 /\ hshift11^0-hshift11^post44 == 0 /\ disp9^0-disp9^post44 == 0 /\ __const_16^0-__const_16^post44 == 0 /\ ret_getbyte25^0-ret_getbyte25^post44 == 0 /\ -n_bits^post44+n_bits^0 == 0 /\ apsim_incnt^0-apsim_incnt^post44 == 0 /\ -code31^post44+code31^0 == 0 /\ -r_off32^post44+r_off32^0 == 0 /\ -apsim_bound11113^post44+apsim_bound11113^0 == 0 /\ -__const_9^post44+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post44 == 0 /\ -__const_8388607^post44+__const_8388607^0 == 0 /\ m130^0-m130^post44 == 0 /\ i6^0-i6^post44 == 0 /\ checkpoint^0-checkpoint^post44 == 0 /\ c37^0-c37^post44 == 0 /\ -n40^post44+n40^0 == 0 /\ -ratio^post44+ratio^0 == 0 /\ __const_257^0-__const_257^post44 == 0 /\ __const_50^0-__const_50^post44 == 0 /\ -bits33^post44+bits33^0 == 0 /\ tmp___115^0-tmp___115^post44 == 0 /\ __const_256^0-__const_256^post44 == 0 /\ n44^0-n44^post44 == 0 /\ i3^0-i3^post44 == 0 /\ hsize___027^0-hsize___027^post44 == 0 /\ -c7^post44+c7^0 == 0 /\ -block_compress^post44+block_compress^0 == 0 /\ tmp12^0-tmp12^post44 == 0 /\ -__const_429496^post44+__const_429496^0 == 0 /\ __const_8^0-__const_8^post44 == 0 /\ -i29^post44+i29^0 == 0 /\ rat26^0-rat26^post44 == 0 /\ tmp___017^0-tmp___017^post44 == 0 /\ -i41^post44+i41^0 == 0 /\ exit_stat^0-exit_stat^post44 == 0 /\ -incnt^post44+incnt^0 == 0 /\ -bytes_out^0-n_bits^0+bytes_out^post44 == 0 /\ -i45^post44+i45^0 == 0 /\ -free_ent^post44+free_ent^0 == 0 /\ -fcode5^post44+fcode5^0 == 0 /\ -__const_65536^post44+__const_65536^0 == 0 /\ -maxbits^post44+maxbits^0 == 0 /\ -i21^post44+i21^0 == 0 /\ -ret_getbyte18^post44+ret_getbyte18^0 == 0 /\ -tmp___024^post44+tmp___024^0 == 0 /\ m122^0-m122^post44 == 0 /\ -__const_2147483647^post44+__const_2147483647^0 == 0 /\ -in_count^post44+in_count^0 == 0 /\ -tmp___014^post44+tmp___014^0 == 0 /\ hsize_reg10^0-hsize_reg10^post44 == 0 /\ -clear_flg^post44+clear_flg^0 == 0 /\ __const_10000^0-__const_10000^post44 == 0 /\ -tabort4^post44+tabort4^0 == 0 /\ out_count^0-out_count^post44 == 0), cost: 1
  44: l40 -> l39 : __const_10000^0'=__const_10000^post45, __const_16^0'=__const_16^post45, __const_2147483647^0'=__const_2147483647^post45, __const_256^0'=__const_256^post45, __const_257^0'=__const_257^post45, __const_429496^0'=__const_429496^post45, __const_50^0'=__const_50^post45, __const_53^0'=__const_53^post45, __const_65536^0'=__const_65536^post45, __const_8388607^0'=__const_8388607^post45, __const_8^0'=__const_8^post45, __const_9^0'=__const_9^post45, apsim_bound11113^0'=apsim_bound11113^post45, apsim_incnt^0'=apsim_incnt^post45, bits33^0'=bits33^post45, block_compress^0'=block_compress^post45, bytes_out^0'=bytes_out^post45, c37^0'=c37^post45, c7^0'=c7^post45, checkpoint^0'=checkpoint^post45, clear_flg^0'=clear_flg^post45, code31^0'=code31^post45, count^0'=count^post45, disp9^0'=disp9^post45, ent8^0'=ent8^post45, exit_stat^0'=exit_stat^post45, fcode5^0'=fcode5^post45, free_ent^0'=free_ent^post45, hshift11^0'=hshift11^post45, hsize^0'=hsize^post45, hsize___019^0'=hsize___019^post45, hsize___027^0'=hsize___027^post45, hsize_reg10^0'=hsize_reg10^post45, i21^0'=i21^post45, i29^0'=i29^post45, i3^0'=i3^post45, i41^0'=i41^post45, i45^0'=i45^post45, i6^0'=i6^post45, in_count^0'=in_count^post45, incnt^0'=incnt^post45, m122^0'=m122^post45, m130^0'=m130^post45, maxbits^0'=maxbits^post45, maxcode^0'=maxcode^post45, maxmaxcode^0'=maxmaxcode^post45, n40^0'=n40^post45, n44^0'=n44^post45, n_bits^0'=n_bits^post45, offset^0'=offset^post45, out_count^0'=out_count^post45, r_off32^0'=r_off32^post45, rat26^0'=rat26^post45, ratio^0'=ratio^post45, ret_getbyte18^0'=ret_getbyte18^post45, ret_getbyte25^0'=ret_getbyte25^post45, seed2^0'=seed2^post45, tabort4^0'=tabort4^post45, tmp12^0'=tmp12^post45, tmp___014^0'=tmp___014^post45, tmp___017^0'=tmp___017^post45, tmp___024^0'=tmp___024^post45, tmp___115^0'=tmp___115^post45, (__const_256^0-__const_256^post45 == 0 /\ tabort4^0-tabort4^post45 == 0 /\ m122^0-m122^post45 == 0 /\ maxmaxcode^0-maxmaxcode^post45 == 0 /\ r_off32^0-r_off32^post45 == 0 /\ -i21^post45+i21^0 == 0 /\ -tmp___014^post45+tmp___014^0 == 0 /\ -free_ent^post45+free_ent^0 == 0 /\ -__const_65536^post45+__const_65536^0 == 0 /\ out_count^0-out_count^post45 == 0 /\ -block_compress^post45+block_compress^0 == 0 /\ -tmp___024^post45+tmp___024^0 == 0 /\ -tmp___115^post45+tmp___115^0 == 0 /\ -c7^post45+c7^0 == 0 /\ -c37^post45+c37^0 == 0 /\ hsize___027^0-hsize___027^post45 == 0 /\ clear_flg^0-clear_flg^post45 == 0 /\ in_count^0-in_count^post45 == 0 /\ __const_16^0-i41^0 <= 0 /\ -i45^post45+i45^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post45 == 0 /\ __const_50^0-__const_50^post45 == 0 /\ n44^0-n44^post45 == 0 /\ -code31^post45+code31^0 == 0 /\ -__const_8388607^post45+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post45 == 0 /\ -offset^post45+offset^0 == 0 /\ __const_257^0-__const_257^post45 == 0 /\ -disp9^post45+disp9^0 == 0 /\ checkpoint^0-checkpoint^post45 == 0 /\ count^0-count^post45 == 0 /\ hshift11^0-hshift11^post45 == 0 /\ -__const_429496^post45+__const_429496^0 == 0 /\ i6^0-i6^post45 == 0 /\ apsim_incnt^0-apsim_incnt^post45 == 0 /\ maxcode^0-maxcode^post45 == 0 /\ i3^0-i3^post45 == 0 /\ -__const_16^post45+__const_16^0 == 0 /\ -__const_2147483647^post45+__const_2147483647^0 == 0 /\ -apsim_bound11113^post45+apsim_bound11113^0 == 0 /\ tmp___017^0-tmp___017^post45 == 0 /\ tmp12^0-tmp12^post45 == 0 /\ -seed2^post45+seed2^0 == 0 /\ fcode5^0-fcode5^post45 == 0 /\ -maxbits^post45+maxbits^0 == 0 /\ -hsize_reg10^post45+hsize_reg10^0 == 0 /\ __const_8^0-__const_8^post45 == 0 /\ m130^0-m130^post45 == 0 /\ -n40^post45+n40^0 == 0 /\ -hsize___019^post45+hsize___019^0 == 0 /\ -hsize^post45+hsize^0 == 0 /\ -i41^post45+i41^0 == 0 /\ exit_stat^0-exit_stat^post45 == 0 /\ __const_10000^0-__const_10000^post45 == 0 /\ -bits33^post45+bits33^0 == 0 /\ -incnt^post45+incnt^0 == 0 /\ -ent8^post45+ent8^0 == 0 /\ -__const_9^post45+__const_9^0 == 0 /\ -ratio^post45+ratio^0 == 0 /\ bytes_out^0-bytes_out^post45 == 0 /\ -n_bits^post45+n_bits^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post45 == 0 /\ -i29^post45+i29^0 == 0 /\ rat26^0-rat26^post45 == 0), cost: 1
  45: l40 -> l21 : __const_10000^0'=__const_10000^post46, __const_16^0'=__const_16^post46, __const_2147483647^0'=__const_2147483647^post46, __const_256^0'=__const_256^post46, __const_257^0'=__const_257^post46, __const_429496^0'=__const_429496^post46, __const_50^0'=__const_50^post46, __const_53^0'=__const_53^post46, __const_65536^0'=__const_65536^post46, __const_8388607^0'=__const_8388607^post46, __const_8^0'=__const_8^post46, __const_9^0'=__const_9^post46, apsim_bound11113^0'=apsim_bound11113^post46, apsim_incnt^0'=apsim_incnt^post46, bits33^0'=bits33^post46, block_compress^0'=block_compress^post46, bytes_out^0'=bytes_out^post46, c37^0'=c37^post46, c7^0'=c7^post46, checkpoint^0'=checkpoint^post46, clear_flg^0'=clear_flg^post46, code31^0'=code31^post46, count^0'=count^post46, disp9^0'=disp9^post46, ent8^0'=ent8^post46, exit_stat^0'=exit_stat^post46, fcode5^0'=fcode5^post46, free_ent^0'=free_ent^post46, hshift11^0'=hshift11^post46, hsize^0'=hsize^post46, hsize___019^0'=hsize___019^post46, hsize___027^0'=hsize___027^post46, hsize_reg10^0'=hsize_reg10^post46, i21^0'=i21^post46, i29^0'=i29^post46, i3^0'=i3^post46, i41^0'=i41^post46, i45^0'=i45^post46, i6^0'=i6^post46, in_count^0'=in_count^post46, incnt^0'=incnt^post46, m122^0'=m122^post46, m130^0'=m130^post46, maxbits^0'=maxbits^post46, maxcode^0'=maxcode^post46, maxmaxcode^0'=maxmaxcode^post46, n40^0'=n40^post46, n44^0'=n44^post46, n_bits^0'=n_bits^post46, offset^0'=offset^post46, out_count^0'=out_count^post46, r_off32^0'=r_off32^post46, rat26^0'=rat26^post46, ratio^0'=ratio^post46, ret_getbyte18^0'=ret_getbyte18^post46, ret_getbyte25^0'=ret_getbyte25^post46, seed2^0'=seed2^post46, tabort4^0'=tabort4^post46, tmp12^0'=tmp12^post46, tmp___014^0'=tmp___014^post46, tmp___017^0'=tmp___017^post46, tmp___024^0'=tmp___024^post46, tmp___115^0'=tmp___115^post46, (-n40^post46+n40^0 == 0 /\ -i29^post46+i29^0 == 0 /\ 1-__const_16^0+i41^0 <= 0 /\ checkpoint^0-checkpoint^post46 == 0 /\ exit_stat^0-exit_stat^post46 == 0 /\ i6^0-i6^post46 == 0 /\ -__const_2147483647^post46+__const_2147483647^0 == 0 /\ tabort4^0-tabort4^post46 == 0 /\ -__const_257^post46+__const_257^0 == 0 /\ -__const_16^post46+__const_16^0 == 0 /\ r_off32^0-r_off32^post46 == 0 /\ ret_getbyte18^0-ret_getbyte18^post46 == 0 /\ -rat26^post46+rat26^0 == 0 /\ -c7^post46+c7^0 == 0 /\ out_count^0-out_count^post46 == 0 /\ -clear_flg^post46+clear_flg^0 == 0 /\ -__const_9^post46+__const_9^0 == 0 /\ -ent8^post46+ent8^0 == 0 /\ -tmp12^post46+tmp12^0 == 0 /\ m130^0-m130^post46 == 0 /\ -free_ent^post46+free_ent^0 == 0 /\ -__const_65536^post46+__const_65536^0 == 0 /\ i3^0-i3^post46 == 0 /\ maxmaxcode^0-maxmaxcode^post46 == 0 /\ -hsize_reg10^post46+hsize_reg10^0 == 0 /\ -hsize___019^post46+hsize___019^0 == 0 /\ -seed2^post46+seed2^0 == 0 /\ -fcode5^post46+fcode5^0 == 0 /\ count^0-count^post46 == 0 /\ -incnt^post46+incnt^0 == 0 /\ -i21^post46+i21^0 == 0 /\ hsize___027^0-hsize___027^post46 == 0 /\ -maxbits^post46+maxbits^0 == 0 /\ -code31^post46+code31^0 == 0 /\ -__const_8388607^post46+__const_8388607^0 == 0 /\ -ratio^post46+ratio^0 == 0 /\ hshift11^0-hshift11^post46 == 0 /\ -1+i41^post46-i41^0 == 0 /\ -tmp___024^post46+tmp___024^0 == 0 /\ -tmp___115^post46+tmp___115^0 == 0 /\ apsim_incnt^0-apsim_incnt^post46 == 0 /\ n44^0-n44^post46 == 0 /\ __const_50^0-__const_50^post46 == 0 /\ __const_10000^0-__const_10000^post46 == 0 /\ maxcode^0-maxcode^post46 == 0 /\ n_bits^0-n_bits^post46 == 0 /\ __const_53^0-__const_53^post46 == 0 /\ -in_count^post46+in_count^0 == 0 /\ -bits33^post46+bits33^0 == 0 /\ -tmp___014^post46+tmp___014^0 == 0 /\ __const_8^0-__const_8^post46 == 0 /\ -offset^post46+offset^0 == 0 /\ -disp9^post46+disp9^0 == 0 /\ -block_compress^post46+block_compress^0 == 0 /\ tmp___017^0-tmp___017^post46 == 0 /\ -ret_getbyte25^post46+ret_getbyte25^0 == 0 /\ -apsim_bound11113^post46+apsim_bound11113^0 == 0 /\ -__const_429496^post46+__const_429496^0 == 0 /\ -hsize^post46+hsize^0 == 0 /\ __const_256^0-__const_256^post46 == 0 /\ bytes_out^0-bytes_out^post46 == 0 /\ c37^0-c37^post46 == 0 /\ -i45^post46+i45^0 == 0 /\ -m122^post46+m122^0 == 0), cost: 1
  48: l41 -> l38 : __const_10000^0'=__const_10000^post49, __const_16^0'=__const_16^post49, __const_2147483647^0'=__const_2147483647^post49, __const_256^0'=__const_256^post49, __const_257^0'=__const_257^post49, __const_429496^0'=__const_429496^post49, __const_50^0'=__const_50^post49, __const_53^0'=__const_53^post49, __const_65536^0'=__const_65536^post49, __const_8388607^0'=__const_8388607^post49, __const_8^0'=__const_8^post49, __const_9^0'=__const_9^post49, apsim_bound11113^0'=apsim_bound11113^post49, apsim_incnt^0'=apsim_incnt^post49, bits33^0'=bits33^post49, block_compress^0'=block_compress^post49, bytes_out^0'=bytes_out^post49, c37^0'=c37^post49, c7^0'=c7^post49, checkpoint^0'=checkpoint^post49, clear_flg^0'=clear_flg^post49, code31^0'=code31^post49, count^0'=count^post49, disp9^0'=disp9^post49, ent8^0'=ent8^post49, exit_stat^0'=exit_stat^post49, fcode5^0'=fcode5^post49, free_ent^0'=free_ent^post49, hshift11^0'=hshift11^post49, hsize^0'=hsize^post49, hsize___019^0'=hsize___019^post49, hsize___027^0'=hsize___027^post49, hsize_reg10^0'=hsize_reg10^post49, i21^0'=i21^post49, i29^0'=i29^post49, i3^0'=i3^post49, i41^0'=i41^post49, i45^0'=i45^post49, i6^0'=i6^post49, in_count^0'=in_count^post49, incnt^0'=incnt^post49, m122^0'=m122^post49, m130^0'=m130^post49, maxbits^0'=maxbits^post49, maxcode^0'=maxcode^post49, maxmaxcode^0'=maxmaxcode^post49, n40^0'=n40^post49, n44^0'=n44^post49, n_bits^0'=n_bits^post49, offset^0'=offset^post49, out_count^0'=out_count^post49, r_off32^0'=r_off32^post49, rat26^0'=rat26^post49, ratio^0'=ratio^post49, ret_getbyte18^0'=ret_getbyte18^post49, ret_getbyte25^0'=ret_getbyte25^post49, seed2^0'=seed2^post49, tabort4^0'=tabort4^post49, tmp12^0'=tmp12^post49, tmp___014^0'=tmp___014^post49, tmp___017^0'=tmp___017^post49, tmp___024^0'=tmp___024^post49, tmp___115^0'=tmp___115^post49, (free_ent^0-free_ent^post49 == 0 /\ -code31^post49+code31^0 == 0 /\ __const_8388607^0-__const_8388607^post49 == 0 /\ hshift11^0-hshift11^post49 == 0 /\ hsize___027^0-hsize___027^post49 == 0 /\ -fcode5^post49+fcode5^0 == 0 /\ tmp___014^0-tmp___014^post49 == 0 /\ -disp9^post49+disp9^0 == 0 /\ -n44^post49+n44^0 == 0 /\ -ret_getbyte18^post49+ret_getbyte18^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post49 == 0 /\ -ent8^post49+ent8^0 == 0 /\ -maxbits^post49+maxbits^0 == 0 /\ i45^0-i45^post49 == 0 /\ n40^0-n40^post49 == 0 /\ -__const_256^post49+__const_256^0 == 0 /\ maxcode^0-maxcode^post49 == 0 /\ -tabort4^post49+tabort4^0 == 0 /\ -r_off32^post49+r_off32^0 == 0 /\ __const_9^0-__const_9^post49 == 0 /\ rat26^0-rat26^post49 == 0 /\ exit_stat^0-exit_stat^post49 == 0 /\ offset^0 <= 0 /\ -tmp___024^post49+tmp___024^0 == 0 /\ maxmaxcode^0-maxmaxcode^post49 == 0 /\ -block_compress^post49+block_compress^0 == 0 /\ -i29^post49+i29^0 == 0 /\ m130^0-m130^post49 == 0 /\ out_count^0-out_count^post49 == 0 /\ -i3^post49+i3^0 == 0 /\ -i41^post49+i41^0 == 0 /\ seed2^0-seed2^post49 == 0 /\ apsim_incnt^0-apsim_incnt^post49 == 0 /\ ret_getbyte25^0-ret_getbyte25^post49 == 0 /\ -incnt^post49+incnt^0 == 0 /\ count^0-count^post49 == 0 /\ offset^0-offset^post49 == 0 /\ __const_65536^0-__const_65536^post49 == 0 /\ __const_16^0-__const_16^post49 == 0 /\ -__const_429496^post49+__const_429496^0 == 0 /\ bits33^0-bits33^post49 == 0 /\ c37^0-c37^post49 == 0 /\ -__const_10000^post49+__const_10000^0 == 0 /\ -__const_2147483647^post49+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post49 == 0 /\ -n_bits^post49+n_bits^0 == 0 /\ -in_count^post49+in_count^0 == 0 /\ __const_257^0-__const_257^post49 == 0 /\ -__const_50^post49+__const_50^0 == 0 /\ ratio^0-ratio^post49 == 0 /\ checkpoint^0-checkpoint^post49 == 0 /\ i6^0-i6^post49 == 0 /\ -clear_flg^post49+clear_flg^0 == 0 /\ -hsize_reg10^post49+hsize_reg10^0 == 0 /\ m122^0-m122^post49 == 0 /\ -hsize___019^post49+hsize___019^0 == 0 /\ __const_8^0-__const_8^post49 == 0 /\ -tmp___017^post49+tmp___017^0 == 0 /\ -i21^post49+i21^0 == 0 /\ -hsize^post49+hsize^0 == 0 /\ tmp___115^0-tmp___115^post49 == 0 /\ -c7^post49+c7^0 == 0 /\ -bytes_out^post49+bytes_out^0 == 0 /\ __const_53^0-__const_53^post49 == 0), cost: 1
  49: l41 -> l21 : __const_10000^0'=__const_10000^post50, __const_16^0'=__const_16^post50, __const_2147483647^0'=__const_2147483647^post50, __const_256^0'=__const_256^post50, __const_257^0'=__const_257^post50, __const_429496^0'=__const_429496^post50, __const_50^0'=__const_50^post50, __const_53^0'=__const_53^post50, __const_65536^0'=__const_65536^post50, __const_8388607^0'=__const_8388607^post50, __const_8^0'=__const_8^post50, __const_9^0'=__const_9^post50, apsim_bound11113^0'=apsim_bound11113^post50, apsim_incnt^0'=apsim_incnt^post50, bits33^0'=bits33^post50, block_compress^0'=block_compress^post50, bytes_out^0'=bytes_out^post50, c37^0'=c37^post50, c7^0'=c7^post50, checkpoint^0'=checkpoint^post50, clear_flg^0'=clear_flg^post50, code31^0'=code31^post50, count^0'=count^post50, disp9^0'=disp9^post50, ent8^0'=ent8^post50, exit_stat^0'=exit_stat^post50, fcode5^0'=fcode5^post50, free_ent^0'=free_ent^post50, hshift11^0'=hshift11^post50, hsize^0'=hsize^post50, hsize___019^0'=hsize___019^post50, hsize___027^0'=hsize___027^post50, hsize_reg10^0'=hsize_reg10^post50, i21^0'=i21^post50, i29^0'=i29^post50, i3^0'=i3^post50, i41^0'=i41^post50, i45^0'=i45^post50, i6^0'=i6^post50, in_count^0'=in_count^post50, incnt^0'=incnt^post50, m122^0'=m122^post50, m130^0'=m130^post50, maxbits^0'=maxbits^post50, maxcode^0'=maxcode^post50, maxmaxcode^0'=maxmaxcode^post50, n40^0'=n40^post50, n44^0'=n44^post50, n_bits^0'=n_bits^post50, offset^0'=offset^post50, out_count^0'=out_count^post50, r_off32^0'=r_off32^post50, rat26^0'=rat26^post50, ratio^0'=ratio^post50, ret_getbyte18^0'=ret_getbyte18^post50, ret_getbyte25^0'=ret_getbyte25^post50, seed2^0'=seed2^post50, tabort4^0'=tabort4^post50, tmp12^0'=tmp12^post50, tmp___014^0'=tmp___014^post50, tmp___017^0'=tmp___017^post50, tmp___024^0'=tmp___024^post50, tmp___115^0'=tmp___115^post50, (-__const_65536^post50+__const_65536^0 == 0 /\ -block_compress^post50+block_compress^0 == 0 /\ -clear_flg^post50+clear_flg^0 == 0 /\ -hsize___019^post50+hsize___019^0 == 0 /\ -__const_429496^post50+__const_429496^0 == 0 /\ -c7^post50+c7^0 == 0 /\ -maxbits^post50+maxbits^0 == 0 /\ -m130^post50+m130^0 == 0 /\ __const_8388607^0-__const_8388607^post50 == 0 /\ -i45^post50+i45^0 == 0 /\ -maxmaxcode^post50+maxmaxcode^0 == 0 /\ -i21^post50+i21^0 == 0 /\ __const_50^0-__const_50^post50 == 0 /\ hshift11^0-hshift11^post50 == 0 /\ n44^0-n44^post50 == 0 /\ -incnt^post50+incnt^0 == 0 /\ i41^post50 == 0 /\ apsim_bound11113^0-apsim_bound11113^post50 == 0 /\ hsize^0-hsize^post50 == 0 /\ -ret_getbyte18^post50+ret_getbyte18^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post50 == 0 /\ __const_9^0-__const_9^post50 == 0 /\ __const_16^0-__const_16^post50 == 0 /\ -__const_10000^post50+__const_10000^0 == 0 /\ tmp___115^0-tmp___115^post50 == 0 /\ rat26^0-rat26^post50 == 0 /\ -in_count^post50+in_count^0 == 0 /\ -__const_8^post50+__const_8^0 == 0 /\ -__const_2147483647^post50+__const_2147483647^0 == 0 /\ bytes_out^0-bytes_out^post50 == 0 /\ -seed2^post50+seed2^0 == 0 /\ bits33^0-bits33^post50 == 0 /\ -tmp___014^post50+tmp___014^0 == 0 /\ -fcode5^post50+fcode5^0 == 0 /\ -disp9^post50+disp9^0 == 0 /\ -free_ent^post50+free_ent^0 == 0 /\ -ent8^post50+ent8^0 == 0 /\ -tabort4^post50+tabort4^0 == 0 /\ -hsize_reg10^post50+hsize_reg10^0 == 0 /\ i6^0-i6^post50 == 0 /\ c37^0-c37^post50 == 0 /\ -n_bits^post50+n_bits^0 == 0 /\ __const_257^0-__const_257^post50 == 0 /\ apsim_incnt^0-apsim_incnt^post50 == 0 /\ out_count^0-out_count^post50 == 0 /\ tmp___017^0-tmp___017^post50 == 0 /\ n40^post50-n_bits^0 == 0 /\ m122^0-m122^post50 == 0 /\ -code31^post50+code31^0 == 0 /\ maxcode^0-maxcode^post50 == 0 /\ exit_stat^0-exit_stat^post50 == 0 /\ -r_off32^post50+r_off32^0 == 0 /\ count^0-count^post50 == 0 /\ 1-offset^0 <= 0 /\ -tmp___024^post50+tmp___024^0 == 0 /\ -ratio^post50+ratio^0 == 0 /\ i3^0-i3^post50 == 0 /\ offset^0-offset^post50 == 0 /\ hsize___027^0-hsize___027^post50 == 0 /\ __const_53^0-__const_53^post50 == 0 /\ -i29^post50+i29^0 == 0 /\ tmp12^0-tmp12^post50 == 0 /\ -__const_256^post50+__const_256^0 == 0 /\ checkpoint^0-checkpoint^post50 == 0), cost: 1
  50: l42 -> l27 : __const_10000^0'=__const_10000^post51, __const_16^0'=__const_16^post51, __const_2147483647^0'=__const_2147483647^post51, __const_256^0'=__const_256^post51, __const_257^0'=__const_257^post51, __const_429496^0'=__const_429496^post51, __const_50^0'=__const_50^post51, __const_53^0'=__const_53^post51, __const_65536^0'=__const_65536^post51, __const_8388607^0'=__const_8388607^post51, __const_8^0'=__const_8^post51, __const_9^0'=__const_9^post51, apsim_bound11113^0'=apsim_bound11113^post51, apsim_incnt^0'=apsim_incnt^post51, bits33^0'=bits33^post51, block_compress^0'=block_compress^post51, bytes_out^0'=bytes_out^post51, c37^0'=c37^post51, c7^0'=c7^post51, checkpoint^0'=checkpoint^post51, clear_flg^0'=clear_flg^post51, code31^0'=code31^post51, count^0'=count^post51, disp9^0'=disp9^post51, ent8^0'=ent8^post51, exit_stat^0'=exit_stat^post51, fcode5^0'=fcode5^post51, free_ent^0'=free_ent^post51, hshift11^0'=hshift11^post51, hsize^0'=hsize^post51, hsize___019^0'=hsize___019^post51, hsize___027^0'=hsize___027^post51, hsize_reg10^0'=hsize_reg10^post51, i21^0'=i21^post51, i29^0'=i29^post51, i3^0'=i3^post51, i41^0'=i41^post51, i45^0'=i45^post51, i6^0'=i6^post51, in_count^0'=in_count^post51, incnt^0'=incnt^post51, m122^0'=m122^post51, m130^0'=m130^post51, maxbits^0'=maxbits^post51, maxcode^0'=maxcode^post51, maxmaxcode^0'=maxmaxcode^post51, n40^0'=n40^post51, n44^0'=n44^post51, n_bits^0'=n_bits^post51, offset^0'=offset^post51, out_count^0'=out_count^post51, r_off32^0'=r_off32^post51, rat26^0'=rat26^post51, ratio^0'=ratio^post51, ret_getbyte18^0'=ret_getbyte18^post51, ret_getbyte25^0'=ret_getbyte25^post51, seed2^0'=seed2^post51, tabort4^0'=tabort4^post51, tmp12^0'=tmp12^post51, tmp___014^0'=tmp___014^post51, tmp___017^0'=tmp___017^post51, tmp___024^0'=tmp___024^post51, tmp___115^0'=tmp___115^post51, (tmp___014^0-tmp___014^post51 == 0 /\ -r_off32^post51+r_off32^0 == 0 /\ -tabort4^post51+tabort4^0 == 0 /\ __const_16^0-__const_16^post51 == 0 /\ __const_50^0-__const_50^post51 == 0 /\ -__const_2147483647^post51+__const_2147483647^0 == 0 /\ -n_bits^post51+n_bits^0 == 0 /\ __const_53^0-__const_53^post51 == 0 /\ bytes_out^0-bytes_out^post51 == 0 /\ tmp___115^0-tmp___115^post51 == 0 /\ rat26^0-rat26^post51 == 0 /\ count^0-count^post51 == 0 /\ -__const_8^post51+__const_8^0 == 0 /\ tmp12^0-tmp12^post51 == 0 /\ -__const_10000^post51+__const_10000^0 == 0 /\ -block_compress^post51+block_compress^0 == 0 /\ -tmp___017^post51+tmp___017^0 == 0 /\ -tmp___024^post51+tmp___024^0 == 0 /\ -hsize^post51+hsize^0 == 0 /\ __const_256^0-__const_256^post51 == 0 /\ -incnt^post51+incnt^0 == 0 /\ m122^0-m122^post51 == 0 /\ hshift11^0-hshift11^post51 == 0 /\ -apsim_incnt^post51+apsim_incnt^0 == 0 /\ c37^0-c37^post51 == 0 /\ out_count^0-out_count^post51 == 0 /\ -ent8^post51+ent8^0 == 0 /\ -__const_65536^post51+__const_65536^0 == 0 /\ -i29^post51+i29^0 == 0 /\ -n40^post51+n40^0 == 0 /\ -m130^post51+m130^0 == 0 /\ -i41^post51+i41^0 == 0 /\ offset^0-offset^post51 == 0 /\ exit_stat^0-exit_stat^post51 == 0 /\ fcode5^0-fcode5^post51 == 0 /\ apsim_bound11113^0-apsim_bound11113^post51 == 0 /\ maxcode^0-maxcode^post51 == 0 /\ -in_count^post51+in_count^0 == 0 /\ -__const_9^post51+__const_9^0 == 0 /\ -i21^post51+i21^0 == 0 /\ i3^0-i3^post51 == 0 /\ __const_257^0-__const_257^post51 == 0 /\ -__const_8388607^post51+__const_8388607^0 == 0 /\ -c7^post51+c7^0 == 0 /\ -clear_flg^post51+clear_flg^0 == 0 /\ checkpoint^0-checkpoint^post51 == 0 /\ ret_getbyte25^0-ret_getbyte25^post51 == 0 /\ maxmaxcode^0-maxmaxcode^post51 == 0 /\ hsize___027^0-hsize___027^post51 == 0 /\ i6^0-i6^post51 == 0 /\ -ret_getbyte18^post51+ret_getbyte18^0 == 0 /\ -hsize___019^post51+hsize___019^0 == 0 /\ n44^0-n44^post51 == 0 /\ bits33^0-bits33^post51 == 0 /\ -disp9^post51+disp9^0 == 0 /\ -code31^post51+code31^0 == 0 /\ -__const_429496^post51+__const_429496^0 == 0 /\ -i45^post51+i45^0 == 0 /\ seed2^0-seed2^post51 == 0 /\ ratio^0-ratio^post51 == 0 /\ clear_flg^0 <= 0 /\ hsize_reg10^0-hsize_reg10^post51 == 0 /\ -maxbits^post51+maxbits^0 == 0 /\ -free_ent^post51+free_ent^0 == 0), cost: 1
  51: l42 -> l41 : __const_10000^0'=__const_10000^post52, __const_16^0'=__const_16^post52, __const_2147483647^0'=__const_2147483647^post52, __const_256^0'=__const_256^post52, __const_257^0'=__const_257^post52, __const_429496^0'=__const_429496^post52, __const_50^0'=__const_50^post52, __const_53^0'=__const_53^post52, __const_65536^0'=__const_65536^post52, __const_8388607^0'=__const_8388607^post52, __const_8^0'=__const_8^post52, __const_9^0'=__const_9^post52, apsim_bound11113^0'=apsim_bound11113^post52, apsim_incnt^0'=apsim_incnt^post52, bits33^0'=bits33^post52, block_compress^0'=block_compress^post52, bytes_out^0'=bytes_out^post52, c37^0'=c37^post52, c7^0'=c7^post52, checkpoint^0'=checkpoint^post52, clear_flg^0'=clear_flg^post52, code31^0'=code31^post52, count^0'=count^post52, disp9^0'=disp9^post52, ent8^0'=ent8^post52, exit_stat^0'=exit_stat^post52, fcode5^0'=fcode5^post52, free_ent^0'=free_ent^post52, hshift11^0'=hshift11^post52, hsize^0'=hsize^post52, hsize___019^0'=hsize___019^post52, hsize___027^0'=hsize___027^post52, hsize_reg10^0'=hsize_reg10^post52, i21^0'=i21^post52, i29^0'=i29^post52, i3^0'=i3^post52, i41^0'=i41^post52, i45^0'=i45^post52, i6^0'=i6^post52, in_count^0'=in_count^post52, incnt^0'=incnt^post52, m122^0'=m122^post52, m130^0'=m130^post52, maxbits^0'=maxbits^post52, maxcode^0'=maxcode^post52, maxmaxcode^0'=maxmaxcode^post52, n40^0'=n40^post52, n44^0'=n44^post52, n_bits^0'=n_bits^post52, offset^0'=offset^post52, out_count^0'=out_count^post52, r_off32^0'=r_off32^post52, rat26^0'=rat26^post52, ratio^0'=ratio^post52, ret_getbyte18^0'=ret_getbyte18^post52, ret_getbyte25^0'=ret_getbyte25^post52, seed2^0'=seed2^post52, tabort4^0'=tabort4^post52, tmp12^0'=tmp12^post52, tmp___014^0'=tmp___014^post52, tmp___017^0'=tmp___017^post52, tmp___024^0'=tmp___024^post52, tmp___115^0'=tmp___115^post52, (hshift11^0-hshift11^post52 == 0 /\ -i21^post52+i21^0 == 0 /\ tmp___115^0-tmp___115^post52 == 0 /\ __const_8388607^0-__const_8388607^post52 == 0 /\ -in_count^post52+in_count^0 == 0 /\ -c7^post52+c7^0 == 0 /\ -__const_10000^post52+__const_10000^0 == 0 /\ free_ent^0-free_ent^post52 == 0 /\ -clear_flg^post52+clear_flg^0 == 0 /\ rat26^0-rat26^post52 == 0 /\ -hsize___019^post52+hsize___019^0 == 0 /\ __const_16^0-__const_16^post52 == 0 /\ exit_stat^0-exit_stat^post52 == 0 /\ __const_9^0-__const_9^post52 == 0 /\ maxcode^0-maxcode^post52 == 0 /\ apsim_bound11113^0-apsim_bound11113^post52 == 0 /\ -disp9^post52+disp9^0 == 0 /\ -ret_getbyte18^post52+ret_getbyte18^0 == 0 /\ -__const_429496^post52+__const_429496^0 == 0 /\ -r_off32^post52+r_off32^0 == 0 /\ maxmaxcode^0-maxmaxcode^post52 == 0 /\ -code31^post52+code31^0 == 0 /\ -maxbits^post52+maxbits^0 == 0 /\ -i45^post52+i45^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post52 == 0 /\ m122^0-m122^post52 == 0 /\ c37^0-c37^post52 == 0 /\ out_count^0-out_count^post52 == 0 /\ -tmp___017^post52+tmp___017^0 == 0 /\ -tmp___024^post52+tmp___024^0 == 0 /\ bits33^0-bits33^post52 == 0 /\ -__const_256^post52+__const_256^0 == 0 /\ -__const_8^post52+__const_8^0 == 0 /\ -bytes_out^post52+bytes_out^0 == 0 /\ -block_compress^post52+block_compress^0 == 0 /\ n44^0-n44^post52 == 0 /\ -__const_2147483647^post52+__const_2147483647^0 == 0 /\ -seed2^post52+seed2^0 == 0 /\ offset^0-offset^post52 == 0 /\ n_bits^0-n_bits^post52 == 0 /\ -tabort4^post52+tabort4^0 == 0 /\ apsim_incnt^0-apsim_incnt^post52 == 0 /\ -incnt^post52+incnt^0 == 0 /\ hsize_reg10^0-hsize_reg10^post52 == 0 /\ -ent8^post52+ent8^0 == 0 /\ tmp___014^0-tmp___014^post52 == 0 /\ -hsize^post52+hsize^0 == 0 /\ ratio^0-ratio^post52 == 0 /\ checkpoint^0-checkpoint^post52 == 0 /\ i6^0-i6^post52 == 0 /\ __const_257^0-__const_257^post52 == 0 /\ -__const_50^post52+__const_50^0 == 0 /\ 1-clear_flg^0 <= 0 /\ -__const_65536^post52+__const_65536^0 == 0 /\ i3^0-i3^post52 == 0 /\ count^0-count^post52 == 0 /\ -i29^post52+i29^0 == 0 /\ __const_53^0-__const_53^post52 == 0 /\ -m130^post52+m130^0 == 0 /\ -n40^post52+n40^0 == 0 /\ tmp12^0-tmp12^post52 == 0 /\ hsize___027^0-hsize___027^post52 == 0 /\ -fcode5^post52+fcode5^0 == 0 /\ -i41^post52+i41^0 == 0), cost: 1
  52: l43 -> l42 : __const_10000^0'=__const_10000^post53, __const_16^0'=__const_16^post53, __const_2147483647^0'=__const_2147483647^post53, __const_256^0'=__const_256^post53, __const_257^0'=__const_257^post53, __const_429496^0'=__const_429496^post53, __const_50^0'=__const_50^post53, __const_53^0'=__const_53^post53, __const_65536^0'=__const_65536^post53, __const_8388607^0'=__const_8388607^post53, __const_8^0'=__const_8^post53, __const_9^0'=__const_9^post53, apsim_bound11113^0'=apsim_bound11113^post53, apsim_incnt^0'=apsim_incnt^post53, bits33^0'=bits33^post53, block_compress^0'=block_compress^post53, bytes_out^0'=bytes_out^post53, c37^0'=c37^post53, c7^0'=c7^post53, checkpoint^0'=checkpoint^post53, clear_flg^0'=clear_flg^post53, code31^0'=code31^post53, count^0'=count^post53, disp9^0'=disp9^post53, ent8^0'=ent8^post53, exit_stat^0'=exit_stat^post53, fcode5^0'=fcode5^post53, free_ent^0'=free_ent^post53, hshift11^0'=hshift11^post53, hsize^0'=hsize^post53, hsize___019^0'=hsize___019^post53, hsize___027^0'=hsize___027^post53, hsize_reg10^0'=hsize_reg10^post53, i21^0'=i21^post53, i29^0'=i29^post53, i3^0'=i3^post53, i41^0'=i41^post53, i45^0'=i45^post53, i6^0'=i6^post53, in_count^0'=in_count^post53, incnt^0'=incnt^post53, m122^0'=m122^post53, m130^0'=m130^post53, maxbits^0'=maxbits^post53, maxcode^0'=maxcode^post53, maxmaxcode^0'=maxmaxcode^post53, n40^0'=n40^post53, n44^0'=n44^post53, n_bits^0'=n_bits^post53, offset^0'=offset^post53, out_count^0'=out_count^post53, r_off32^0'=r_off32^post53, rat26^0'=rat26^post53, ratio^0'=ratio^post53, ret_getbyte18^0'=ret_getbyte18^post53, ret_getbyte25^0'=ret_getbyte25^post53, seed2^0'=seed2^post53, tabort4^0'=tabort4^post53, tmp12^0'=tmp12^post53, tmp___014^0'=tmp___014^post53, tmp___017^0'=tmp___017^post53, tmp___024^0'=tmp___024^post53, tmp___115^0'=tmp___115^post53, (-i29^post53+i29^0 == 0 /\ -__const_8^post53+__const_8^0 == 0 /\ -apsim_incnt^post53+apsim_incnt^0 == 0 /\ -offset^post53+offset^0 == 0 /\ -i41^post53+i41^0 == 0 /\ -incnt^post53+incnt^0 == 0 /\ __const_50^0-__const_50^post53 == 0 /\ -i45^post53+i45^0 == 0 /\ free_ent^0-maxcode^0 <= 0 /\ __const_16^0-__const_16^post53 == 0 /\ __const_53^0-__const_53^post53 == 0 /\ -__const_429496^post53+__const_429496^0 == 0 /\ -m130^post53+m130^0 == 0 /\ -block_compress^post53+block_compress^0 == 0 /\ -in_count^post53+in_count^0 == 0 /\ -__const_2147483647^post53+__const_2147483647^0 == 0 /\ -c7^post53+c7^0 == 0 /\ hshift11^0-hshift11^post53 == 0 /\ -clear_flg^post53+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post53 == 0 /\ -n40^post53+n40^0 == 0 /\ m122^0-m122^post53 == 0 /\ -__const_65536^post53+__const_65536^0 == 0 /\ -seed2^post53+seed2^0 == 0 /\ -hsize^post53+hsize^0 == 0 /\ tmp___115^0-tmp___115^post53 == 0 /\ apsim_bound11113^0-apsim_bound11113^post53 == 0 /\ tmp12^0-tmp12^post53 == 0 /\ maxcode^0-maxcode^post53 == 0 /\ __const_257^0-__const_257^post53 == 0 /\ -__const_8388607^post53+__const_8388607^0 == 0 /\ -code31^post53+code31^0 == 0 /\ rat26^0-rat26^post53 == 0 /\ n_bits^0-n_bits^post53 == 0 /\ checkpoint^0-checkpoint^post53 == 0 /\ i6^0-i6^post53 == 0 /\ hsize_reg10^0-hsize_reg10^post53 == 0 /\ exit_stat^0-exit_stat^post53 == 0 /\ c37^0-c37^post53 == 0 /\ -fcode5^post53+fcode5^0 == 0 /\ hsize___027^0-hsize___027^post53 == 0 /\ tmp___017^0-tmp___017^post53 == 0 /\ -ratio^post53+ratio^0 == 0 /\ -disp9^post53+disp9^0 == 0 /\ bits33^0-bits33^post53 == 0 /\ maxmaxcode^0-maxmaxcode^post53 == 0 /\ -ent8^post53+ent8^0 == 0 /\ -ret_getbyte18^post53+ret_getbyte18^0 == 0 /\ -maxbits^post53+maxbits^0 == 0 /\ -__const_256^post53+__const_256^0 == 0 /\ -bytes_out^post53+bytes_out^0 == 0 /\ -__const_9^post53+__const_9^0 == 0 /\ out_count^0-out_count^post53 == 0 /\ -tmp___014^post53+tmp___014^0 == 0 /\ -r_off32^post53+r_off32^0 == 0 /\ -tabort4^post53+tabort4^0 == 0 /\ -free_ent^post53+free_ent^0 == 0 /\ count^0-count^post53 == 0 /\ -i21^post53+i21^0 == 0 /\ i3^0-i3^post53 == 0 /\ __const_10000^0-__const_10000^post53 == 0 /\ -tmp___024^post53+tmp___024^0 == 0 /\ -hsize___019^post53+hsize___019^0 == 0 /\ n44^0-n44^post53 == 0), cost: 1
  53: l43 -> l41 : __const_10000^0'=__const_10000^post54, __const_16^0'=__const_16^post54, __const_2147483647^0'=__const_2147483647^post54, __const_256^0'=__const_256^post54, __const_257^0'=__const_257^post54, __const_429496^0'=__const_429496^post54, __const_50^0'=__const_50^post54, __const_53^0'=__const_53^post54, __const_65536^0'=__const_65536^post54, __const_8388607^0'=__const_8388607^post54, __const_8^0'=__const_8^post54, __const_9^0'=__const_9^post54, apsim_bound11113^0'=apsim_bound11113^post54, apsim_incnt^0'=apsim_incnt^post54, bits33^0'=bits33^post54, block_compress^0'=block_compress^post54, bytes_out^0'=bytes_out^post54, c37^0'=c37^post54, c7^0'=c7^post54, checkpoint^0'=checkpoint^post54, clear_flg^0'=clear_flg^post54, code31^0'=code31^post54, count^0'=count^post54, disp9^0'=disp9^post54, ent8^0'=ent8^post54, exit_stat^0'=exit_stat^post54, fcode5^0'=fcode5^post54, free_ent^0'=free_ent^post54, hshift11^0'=hshift11^post54, hsize^0'=hsize^post54, hsize___019^0'=hsize___019^post54, hsize___027^0'=hsize___027^post54, hsize_reg10^0'=hsize_reg10^post54, i21^0'=i21^post54, i29^0'=i29^post54, i3^0'=i3^post54, i41^0'=i41^post54, i45^0'=i45^post54, i6^0'=i6^post54, in_count^0'=in_count^post54, incnt^0'=incnt^post54, m122^0'=m122^post54, m130^0'=m130^post54, maxbits^0'=maxbits^post54, maxcode^0'=maxcode^post54, maxmaxcode^0'=maxmaxcode^post54, n40^0'=n40^post54, n44^0'=n44^post54, n_bits^0'=n_bits^post54, offset^0'=offset^post54, out_count^0'=out_count^post54, r_off32^0'=r_off32^post54, rat26^0'=rat26^post54, ratio^0'=ratio^post54, ret_getbyte18^0'=ret_getbyte18^post54, ret_getbyte25^0'=ret_getbyte25^post54, seed2^0'=seed2^post54, tabort4^0'=tabort4^post54, tmp12^0'=tmp12^post54, tmp___014^0'=tmp___014^post54, tmp___017^0'=tmp___017^post54, tmp___024^0'=tmp___024^post54, tmp___115^0'=tmp___115^post54, (count^0-count^post54 == 0 /\ -ent8^post54+ent8^0 == 0 /\ -seed2^post54+seed2^0 == 0 /\ -free_ent^post54+free_ent^0 == 0 /\ __const_53^0-__const_53^post54 == 0 /\ -block_compress^post54+block_compress^0 == 0 /\ -i21^post54+i21^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post54 == 0 /\ m130^0-m130^post54 == 0 /\ disp9^0-disp9^post54 == 0 /\ -r_off32^post54+r_off32^0 == 0 /\ -code31^post54+code31^0 == 0 /\ -ratio^post54+ratio^0 == 0 /\ -tmp___024^post54+tmp___024^0 == 0 /\ i6^0-i6^post54 == 0 /\ tabort4^0-tabort4^post54 == 0 /\ hsize___027^0-hsize___027^post54 == 0 /\ __const_257^0-__const_257^post54 == 0 /\ -offset^post54+offset^0 == 0 /\ -c7^post54+c7^0 == 0 /\ -apsim_incnt^post54+apsim_incnt^0 == 0 /\ m122^0-m122^post54 == 0 /\ c37^0-c37^post54 == 0 /\ bytes_out^0-bytes_out^post54 == 0 /\ __const_50^0-__const_50^post54 == 0 /\ hshift11^0-hshift11^post54 == 0 /\ -tmp___014^post54+tmp___014^0 == 0 /\ 1-free_ent^0+maxcode^0 <= 0 /\ __const_256^0-__const_256^post54 == 0 /\ maxmaxcode^0-maxmaxcode^post54 == 0 /\ apsim_bound11113^0-apsim_bound11113^post54 == 0 /\ -__const_16^post54+__const_16^0 == 0 /\ -clear_flg^post54+clear_flg^0 == 0 /\ -__const_2147483647^post54+__const_2147483647^0 == 0 /\ i3^0-i3^post54 == 0 /\ -hsize___019^post54+hsize___019^0 == 0 /\ out_count^0-out_count^post54 == 0 /\ -hsize_reg10^post54+hsize_reg10^0 == 0 /\ -__const_429496^post54+__const_429496^0 == 0 /\ -maxbits^post54+maxbits^0 == 0 /\ -n40^post54+n40^0 == 0 /\ -i45^post54+i45^0 == 0 /\ -i41^post54+i41^0 == 0 /\ rat26^0-rat26^post54 == 0 /\ -hsize^post54+hsize^0 == 0 /\ tmp12^0-tmp12^post54 == 0 /\ fcode5^0-fcode5^post54 == 0 /\ -__const_9^post54+__const_9^0 == 0 /\ -__const_65536^post54+__const_65536^0 == 0 /\ checkpoint^0-checkpoint^post54 == 0 /\ -incnt^post54+incnt^0 == 0 /\ __const_10000^0-__const_10000^post54 == 0 /\ bits33^0-bits33^post54 == 0 /\ n44^0-n44^post54 == 0 /\ -tmp___115^post54+tmp___115^0 == 0 /\ -ret_getbyte18^post54+ret_getbyte18^0 == 0 /\ -i29^post54+i29^0 == 0 /\ n_bits^0-n_bits^post54 == 0 /\ tmp___017^0-tmp___017^post54 == 0 /\ -in_count^post54+in_count^0 == 0 /\ exit_stat^0-exit_stat^post54 == 0 /\ -__const_8388607^post54+__const_8388607^0 == 0 /\ maxcode^0-maxcode^post54 == 0 /\ -__const_8^post54+__const_8^0 == 0), cost: 1
  54: l44 -> l43 : __const_10000^0'=__const_10000^post55, __const_16^0'=__const_16^post55, __const_2147483647^0'=__const_2147483647^post55, __const_256^0'=__const_256^post55, __const_257^0'=__const_257^post55, __const_429496^0'=__const_429496^post55, __const_50^0'=__const_50^post55, __const_53^0'=__const_53^post55, __const_65536^0'=__const_65536^post55, __const_8388607^0'=__const_8388607^post55, __const_8^0'=__const_8^post55, __const_9^0'=__const_9^post55, apsim_bound11113^0'=apsim_bound11113^post55, apsim_incnt^0'=apsim_incnt^post55, bits33^0'=bits33^post55, block_compress^0'=block_compress^post55, bytes_out^0'=bytes_out^post55, c37^0'=c37^post55, c7^0'=c7^post55, checkpoint^0'=checkpoint^post55, clear_flg^0'=clear_flg^post55, code31^0'=code31^post55, count^0'=count^post55, disp9^0'=disp9^post55, ent8^0'=ent8^post55, exit_stat^0'=exit_stat^post55, fcode5^0'=fcode5^post55, free_ent^0'=free_ent^post55, hshift11^0'=hshift11^post55, hsize^0'=hsize^post55, hsize___019^0'=hsize___019^post55, hsize___027^0'=hsize___027^post55, hsize_reg10^0'=hsize_reg10^post55, i21^0'=i21^post55, i29^0'=i29^post55, i3^0'=i3^post55, i41^0'=i41^post55, i45^0'=i45^post55, i6^0'=i6^post55, in_count^0'=in_count^post55, incnt^0'=incnt^post55, m122^0'=m122^post55, m130^0'=m130^post55, maxbits^0'=maxbits^post55, maxcode^0'=maxcode^post55, maxmaxcode^0'=maxmaxcode^post55, n40^0'=n40^post55, n44^0'=n44^post55, n_bits^0'=n_bits^post55, offset^0'=offset^post55, out_count^0'=out_count^post55, r_off32^0'=r_off32^post55, rat26^0'=rat26^post55, ratio^0'=ratio^post55, ret_getbyte18^0'=ret_getbyte18^post55, ret_getbyte25^0'=ret_getbyte25^post55, seed2^0'=seed2^post55, tabort4^0'=tabort4^post55, tmp12^0'=tmp12^post55, tmp___014^0'=tmp___014^post55, tmp___017^0'=tmp___017^post55, tmp___024^0'=tmp___024^post55, tmp___115^0'=tmp___115^post55, (m122^0-m122^post55 == 0 /\ -ratio^post55+ratio^0 == 0 /\ -n40^post55+n40^0 == 0 /\ offset^post55 == 0 /\ n44^0-n44^post55 == 0 /\ -apsim_bound11113^post55+apsim_bound11113^0 == 0 /\ -__const_9^post55+__const_9^0 == 0 /\ m130^0-m130^post55 == 0 /\ bytes_out^0-bytes_out^post55 == 0 /\ -__const_8388607^post55+__const_8388607^0 == 0 /\ -__const_16^post55+__const_16^0 == 0 /\ -__const_2147483647^post55+__const_2147483647^0 == 0 /\ i3^0-i3^post55 == 0 /\ i21^0-i21^post55 == 0 /\ apsim_incnt^0-apsim_incnt^post55 == 0 /\ -hsize_reg10^post55+hsize_reg10^0 == 0 /\ -n_bits^post55+n_bits^0 == 0 /\ in_count^0-in_count^post55 == 0 /\ -tmp___014^post55+tmp___014^0 == 0 /\ -ret_getbyte25^post55+ret_getbyte25^0 == 0 /\ clear_flg^0-clear_flg^post55 == 0 /\ -bits33^post55+bits33^0 == 0 /\ -hsize___019^post55+hsize___019^0 == 0 /\ __const_50^0-__const_50^post55 == 0 /\ -i45^post55+i45^0 == 0 /\ c37^0-c37^post55 == 0 /\ -free_ent^post55+free_ent^0 == 0 /\ -disp9^post55+disp9^0 == 0 /\ -code31^post55+code31^0 == 0 /\ __const_53^0-__const_53^post55 == 0 /\ __const_257^0-__const_257^post55 == 0 /\ count^0-count^post55 == 0 /\ -i29^post55+i29^0 == 0 /\ -__const_429496^post55+__const_429496^0 == 0 /\ -maxbits^post55+maxbits^0 == 0 /\ hsize___027^0-hsize___027^post55 == 0 /\ tmp___017^0-tmp___017^post55 == 0 /\ -tmp___024^post55+tmp___024^0 == 0 /\ i6^0-i6^post55 == 0 /\ -tmp___115^post55+tmp___115^0 == 0 /\ hshift11^0-hshift11^post55 == 0 /\ __const_8^0-__const_8^post55 == 0 /\ __const_10000^0-__const_10000^post55 == 0 /\ -c7^post55+c7^0 == 0 /\ checkpoint^0-checkpoint^post55 == 0 /\ -block_compress^post55+block_compress^0 == 0 /\ r_off32^0-r_off32^post55 == 0 /\ -hsize^post55+hsize^0 == 0 /\ out_count^0-out_count^post55 == 0 /\ -incnt^post55+incnt^0 == 0 /\ -rat26^post55+rat26^0 == 0 /\ exit_stat^0-exit_stat^post55 == 0 /\ tmp12^0-tmp12^post55 == 0 /\ fcode5^0-fcode5^post55 == 0 /\ maxcode^0-maxcode^post55 == 0 /\ -seed2^post55+seed2^0 == 0 /\ __const_256^0-__const_256^post55 == 0 /\ -ent8^post55+ent8^0 == 0 /\ -__const_65536^post55+__const_65536^0 == 0 /\ maxmaxcode^0-maxmaxcode^post55 == 0 /\ tabort4^0-tabort4^post55 == 0 /\ ret_getbyte18^0-ret_getbyte18^post55 == 0 /\ -i41^post55+i41^0 == 0), cost: 1
  55: l45 -> l19 : __const_10000^0'=__const_10000^post56, __const_16^0'=__const_16^post56, __const_2147483647^0'=__const_2147483647^post56, __const_256^0'=__const_256^post56, __const_257^0'=__const_257^post56, __const_429496^0'=__const_429496^post56, __const_50^0'=__const_50^post56, __const_53^0'=__const_53^post56, __const_65536^0'=__const_65536^post56, __const_8388607^0'=__const_8388607^post56, __const_8^0'=__const_8^post56, __const_9^0'=__const_9^post56, apsim_bound11113^0'=apsim_bound11113^post56, apsim_incnt^0'=apsim_incnt^post56, bits33^0'=bits33^post56, block_compress^0'=block_compress^post56, bytes_out^0'=bytes_out^post56, c37^0'=c37^post56, c7^0'=c7^post56, checkpoint^0'=checkpoint^post56, clear_flg^0'=clear_flg^post56, code31^0'=code31^post56, count^0'=count^post56, disp9^0'=disp9^post56, ent8^0'=ent8^post56, exit_stat^0'=exit_stat^post56, fcode5^0'=fcode5^post56, free_ent^0'=free_ent^post56, hshift11^0'=hshift11^post56, hsize^0'=hsize^post56, hsize___019^0'=hsize___019^post56, hsize___027^0'=hsize___027^post56, hsize_reg10^0'=hsize_reg10^post56, i21^0'=i21^post56, i29^0'=i29^post56, i3^0'=i3^post56, i41^0'=i41^post56, i45^0'=i45^post56, i6^0'=i6^post56, in_count^0'=in_count^post56, incnt^0'=incnt^post56, m122^0'=m122^post56, m130^0'=m130^post56, maxbits^0'=maxbits^post56, maxcode^0'=maxcode^post56, maxmaxcode^0'=maxmaxcode^post56, n40^0'=n40^post56, n44^0'=n44^post56, n_bits^0'=n_bits^post56, offset^0'=offset^post56, out_count^0'=out_count^post56, r_off32^0'=r_off32^post56, rat26^0'=rat26^post56, ratio^0'=ratio^post56, ret_getbyte18^0'=ret_getbyte18^post56, ret_getbyte25^0'=ret_getbyte25^post56, seed2^0'=seed2^post56, tabort4^0'=tabort4^post56, tmp12^0'=tmp12^post56, tmp___014^0'=tmp___014^post56, tmp___017^0'=tmp___017^post56, tmp___024^0'=tmp___024^post56, tmp___115^0'=tmp___115^post56, (-hsize___027^post56+hsize___027^0 == 0 /\ -hsize_reg10^post56+hsize_reg10^0 == 0 /\ -incnt^post56+incnt^0 == 0 /\ __const_8^0-__const_8^post56 == 0 /\ -r_off32^post56+r_off32^0 == 0 /\ -hsize^post56+hsize^0 == 0 /\ -m122^post56+m122^0 == 0 /\ __const_50^0-__const_50^post56 == 0 /\ __const_16^0-__const_16^post56 == 0 /\ -apsim_bound11113^post56+apsim_bound11113^0 == 0 /\ hshift11^0-hshift11^post56 == 0 /\ -__const_9^post56+__const_9^0 == 0 /\ -__const_65536^post56+__const_65536^0 == 0 /\ -__const_429496^post56+__const_429496^0 == 0 /\ -maxcode^post56+maxcode^0 == 0 /\ -i45^post56+i45^0 == 0 /\ rat26^0-rat26^post56 == 0 /\ maxmaxcode^0-maxmaxcode^post56 == 0 /\ code31^0-code31^post56 == 0 /\ ret_getbyte25^0-ret_getbyte25^post56 == 0 /\ -i29^post56+i29^0 == 0 /\ -tmp___115^post56+tmp___115^0 == 0 /\ __const_257^0-__const_257^post56 == 0 /\ free_ent^0-free_ent^post56 == 0 /\ -in_count^post56+in_count^0 == 0 /\ n40^0-n40^post56 == 0 /\ out_count^0-out_count^post56 == 0 /\ -__const_8388607^post56+__const_8388607^0 == 0 /\ -block_compress^post56+block_compress^0 == 0 /\ -__const_256^post56+__const_256^0 == 0 /\ -seed2^post56+seed2^0 == 0 /\ -n_bits^post56+n_bits^0 == 0 /\ offset^0-offset^post56 == 0 /\ i6^0-i6^post56 == 0 /\ bytes_out^0-bytes_out^post56 == 0 /\ -count^post56+count^0 == 0 /\ tmp12^0-tmp12^post56 == 0 /\ -disp9^post56+disp9^0 == 0 /\ maxbits^0-maxbits^post56 == 0 /\ ent8^0-ent8^post56 == 0 /\ -i3^post56+i3^0 == 0 /\ -i41^post56+i41^0 == 0 /\ i21^0-i21^post56 == 0 /\ tmp___017^0-tmp___017^post56 == 0 /\ tabort4^0-tabort4^post56 == 0 /\ exit_stat^0-exit_stat^post56 == 0 /\ -fcode5^post56+fcode5^0 == 0 /\ hsize___019^0-hsize___019^post56 == 0 /\ c37^0-c37^post56 == 0 /\ bits33^0-bits33^post56 == 0 /\ checkpoint^0-checkpoint^post56 == 0 /\ __const_53^0-__const_53^post56 == 0 /\ ret_getbyte18^0-ret_getbyte18^post56 == 0 /\ -tmp___024^post56+tmp___024^0 == 0 /\ apsim_incnt^0-apsim_incnt^post56 == 0 /\ -ratio^post56+ratio^0 == 0 /\ -clear_flg^post56+clear_flg^0 == 0 /\ -tmp___014^post56+tmp___014^0 == 0 /\ -__const_10000^post56+__const_10000^0 == 0 /\ -n44^post56+n44^0 == 0 /\ m130^0-m130^post56 == 0 /\ -__const_2147483647^post56+__const_2147483647^0 == 0 /\ -c7^post56+c7^0 == 0), cost: 1
  56: l45 -> l44 : __const_10000^0'=__const_10000^post57, __const_16^0'=__const_16^post57, __const_2147483647^0'=__const_2147483647^post57, __const_256^0'=__const_256^post57, __const_257^0'=__const_257^post57, __const_429496^0'=__const_429496^post57, __const_50^0'=__const_50^post57, __const_53^0'=__const_53^post57, __const_65536^0'=__const_65536^post57, __const_8388607^0'=__const_8388607^post57, __const_8^0'=__const_8^post57, __const_9^0'=__const_9^post57, apsim_bound11113^0'=apsim_bound11113^post57, apsim_incnt^0'=apsim_incnt^post57, bits33^0'=bits33^post57, block_compress^0'=block_compress^post57, bytes_out^0'=bytes_out^post57, c37^0'=c37^post57, c7^0'=c7^post57, checkpoint^0'=checkpoint^post57, clear_flg^0'=clear_flg^post57, code31^0'=code31^post57, count^0'=count^post57, disp9^0'=disp9^post57, ent8^0'=ent8^post57, exit_stat^0'=exit_stat^post57, fcode5^0'=fcode5^post57, free_ent^0'=free_ent^post57, hshift11^0'=hshift11^post57, hsize^0'=hsize^post57, hsize___019^0'=hsize___019^post57, hsize___027^0'=hsize___027^post57, hsize_reg10^0'=hsize_reg10^post57, i21^0'=i21^post57, i29^0'=i29^post57, i3^0'=i3^post57, i41^0'=i41^post57, i45^0'=i45^post57, i6^0'=i6^post57, in_count^0'=in_count^post57, incnt^0'=incnt^post57, m122^0'=m122^post57, m130^0'=m130^post57, maxbits^0'=maxbits^post57, maxcode^0'=maxcode^post57, maxmaxcode^0'=maxmaxcode^post57, n40^0'=n40^post57, n44^0'=n44^post57, n_bits^0'=n_bits^post57, offset^0'=offset^post57, out_count^0'=out_count^post57, r_off32^0'=r_off32^post57, rat26^0'=rat26^post57, ratio^0'=ratio^post57, ret_getbyte18^0'=ret_getbyte18^post57, ret_getbyte25^0'=ret_getbyte25^post57, seed2^0'=seed2^post57, tabort4^0'=tabort4^post57, tmp12^0'=tmp12^post57, tmp___014^0'=tmp___014^post57, tmp___017^0'=tmp___017^post57, tmp___024^0'=tmp___024^post57, tmp___115^0'=tmp___115^post57, (__const_65536^0-__const_65536^post57 == 0 /\ -clear_flg^post57+clear_flg^0 == 0 /\ -bytes_out^post57+bytes_out^0 == 0 /\ -c7^post57+c7^0 == 0 /\ -block_compress^post57+block_compress^0 == 0 /\ -tmp___014^post57+tmp___014^0 == 0 /\ -i21^post57+i21^0 == 0 /\ __const_53^0-__const_53^post57 == 0 /\ m130^0-m130^post57 == 0 /\ -seed2^post57+seed2^0 == 0 /\ -tmp___024^post57+tmp___024^0 == 0 /\ -tmp___115^post57+tmp___115^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post57 == 0 /\ __const_8^0-__const_8^post57 == 0 /\ i29^0-i29^post57 == 0 /\ -code31^post57+code31^0 == 0 /\ hsize___027^0-hsize___027^post57 == 0 /\ rat26^0-rat26^post57 == 0 /\ -incnt^post57+incnt^0 == 0 /\ -n44^post57+n44^0 == 0 /\ tabort4^0-tabort4^post57 == 0 /\ __const_257^0-__const_257^post57 == 0 /\ -count^post57+count^0 == 0 /\ hsize___019^0-hsize___019^post57 == 0 /\ -fcode5^post57+fcode5^0 == 0 /\ free_ent^0-free_ent^post57 == 0 /\ hshift11^0-hshift11^post57 == 0 /\ -i3^post57+i3^0 == 0 /\ -r_off32^post57+r_off32^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post57 == 0 /\ out_count^0-out_count^post57 == 0 /\ c37^0-c37^post57 == 0 /\ -i6^post57+i6^0 == 0 /\ -maxcode^post57+maxcode^0 == 0 /\ -in_count^post57+in_count^0 == 0 /\ -apsim_bound11113^post57+apsim_bound11113^0 == 0 /\ -__const_50^post57+__const_50^0 == 0 /\ tmp___017^0-tmp___017^post57 == 0 /\ maxmaxcode^0-maxmaxcode^post57 == 0 /\ -__const_256^post57+__const_256^0 == 0 /\ -__const_2147483647^post57+__const_2147483647^0 == 0 /\ i45^0-i45^post57 == 0 /\ tmp12^0-tmp12^post57 == 0 /\ -hsize_reg10^post57+hsize_reg10^0 == 0 /\ offset^0-offset^post57 == 0 /\ -hsize^post57+hsize^0 == 0 /\ __const_429496^0-__const_429496^post57 == 0 /\ n40^0-n40^post57 == 0 /\ -__const_10000^post57+__const_10000^0 == 0 /\ __const_9^0-__const_9^post57 == 0 /\ -m122^post57+m122^0 == 0 /\ maxbits^0-maxbits^post57 == 0 /\ -__const_8388607^post57+__const_8388607^0 == 0 /\ ratio^0-ratio^post57 == 0 /\ __const_16^0-__const_16^post57 == 0 /\ bits33^0-bits33^post57 == 0 /\ -n_bits^post57+n_bits^0 == 0 /\ ent8^0-ent8^post57 == 0 /\ -disp9^post57+disp9^0 == 0 /\ apsim_incnt^0-apsim_incnt^post57 == 0 /\ -exit_stat^post57+exit_stat^0 == 0 /\ checkpoint^0-checkpoint^post57 == 0 /\ -i41^post57+i41^0 == 0), cost: 1
  60: l46 -> l19 : __const_10000^0'=__const_10000^post61, __const_16^0'=__const_16^post61, __const_2147483647^0'=__const_2147483647^post61, __const_256^0'=__const_256^post61, __const_257^0'=__const_257^post61, __const_429496^0'=__const_429496^post61, __const_50^0'=__const_50^post61, __const_53^0'=__const_53^post61, __const_65536^0'=__const_65536^post61, __const_8388607^0'=__const_8388607^post61, __const_8^0'=__const_8^post61, __const_9^0'=__const_9^post61, apsim_bound11113^0'=apsim_bound11113^post61, apsim_incnt^0'=apsim_incnt^post61, bits33^0'=bits33^post61, block_compress^0'=block_compress^post61, bytes_out^0'=bytes_out^post61, c37^0'=c37^post61, c7^0'=c7^post61, checkpoint^0'=checkpoint^post61, clear_flg^0'=clear_flg^post61, code31^0'=code31^post61, count^0'=count^post61, disp9^0'=disp9^post61, ent8^0'=ent8^post61, exit_stat^0'=exit_stat^post61, fcode5^0'=fcode5^post61, free_ent^0'=free_ent^post61, hshift11^0'=hshift11^post61, hsize^0'=hsize^post61, hsize___019^0'=hsize___019^post61, hsize___027^0'=hsize___027^post61, hsize_reg10^0'=hsize_reg10^post61, i21^0'=i21^post61, i29^0'=i29^post61, i3^0'=i3^post61, i41^0'=i41^post61, i45^0'=i45^post61, i6^0'=i6^post61, in_count^0'=in_count^post61, incnt^0'=incnt^post61, m122^0'=m122^post61, m130^0'=m130^post61, maxbits^0'=maxbits^post61, maxcode^0'=maxcode^post61, maxmaxcode^0'=maxmaxcode^post61, n40^0'=n40^post61, n44^0'=n44^post61, n_bits^0'=n_bits^post61, offset^0'=offset^post61, out_count^0'=out_count^post61, r_off32^0'=r_off32^post61, rat26^0'=rat26^post61, ratio^0'=ratio^post61, ret_getbyte18^0'=ret_getbyte18^post61, ret_getbyte25^0'=ret_getbyte25^post61, seed2^0'=seed2^post61, tabort4^0'=tabort4^post61, tmp12^0'=tmp12^post61, tmp___014^0'=tmp___014^post61, tmp___017^0'=tmp___017^post61, tmp___024^0'=tmp___024^post61, tmp___115^0'=tmp___115^post61, (-disp9^post61+disp9^0 == 0 /\ hsize___027^0-hsize___027^post61 == 0 /\ -exit_stat^post61+exit_stat^0 == 0 /\ -apsim_bound11113^post61+apsim_bound11113^0 == 0 /\ -__const_10000^post61+__const_10000^0 == 0 /\ i29^0-i29^post61 == 0 /\ -maxbits^post61+maxbits^0 == 0 /\ -__const_256^post61+__const_256^0 == 0 /\ n44^0-n44^post61 == 0 /\ -n40^post61+n40^0 == 0 /\ __const_257^0-__const_257^post61 == 0 /\ bits33^post61-n_bits^0 == 0 /\ bytes_out^post61-bytes_out^0-bits33^post61 == 0 /\ -hsize_reg10^post61+hsize_reg10^0 == 0 /\ maxcode^0-maxcode^post61 == 0 /\ apsim_incnt^0-apsim_incnt^post61 == 0 /\ -hsize^post61+hsize^0 == 0 /\ -hsize___019^post61+hsize___019^0 == 0 /\ -i41^post61+i41^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post61 == 0 /\ -seed2^post61+seed2^0 == 0 /\ c37^0-c37^post61 == 0 /\ tmp___014^0-tmp___014^post61 == 0 /\ -n_bits^post61+n_bits^0 == 0 /\ -incnt^post61+incnt^0 == 0 /\ i45^0-i45^post61 == 0 /\ m130^0-m130^post61 == 0 /\ code31^0-code31^post61 == 0 /\ tmp12^0-tmp12^post61 == 0 /\ c7^0-c7^post61 == 0 /\ -count^post61+count^0 == 0 /\ -__const_50^post61+__const_50^0 == 0 /\ __const_65536^0-__const_65536^post61 == 0 /\ -block_compress^post61+block_compress^0 == 0 /\ -checkpoint^post61+checkpoint^0 == 0 /\ -clear_flg^post61+clear_flg^0 == 0 /\ __const_8^0-__const_8^post61 == 0 /\ rat26^0-rat26^post61 == 0 /\ -ratio^post61+ratio^0 == 0 /\ tmp___115^0-tmp___115^post61 == 0 /\ -ret_getbyte18^post61+ret_getbyte18^0 == 0 /\ -in_count^post61+in_count^0 == 0 /\ __const_16^0-__const_16^post61 == 0 /\ -i21^post61+i21^0 == 0 /\ -i6^post61+i6^0 == 0 /\ __const_53^0-__const_53^post61 == 0 /\ -tmp___017^post61+tmp___017^0 == 0 /\ -tmp___024^post61+tmp___024^0 == 0 /\ hshift11^0-hshift11^post61 == 0 /\ m122^0-m122^post61 == 0 /\ -tabort4^post61+tabort4^0 == 0 /\ free_ent^0-free_ent^post61 == 0 /\ ent8^0-ent8^post61 == 0 /\ maxmaxcode^0-maxmaxcode^post61 == 0 /\ out_count^0-out_count^post61 == 0 /\ -__const_8388607^post61+__const_8388607^0 == 0 /\ -fcode5^post61+fcode5^0 == 0 /\ offset^0-offset^post61 == 0 /\ __const_429496^0-__const_429496^post61 == 0 /\ __const_9^0-__const_9^post61 == 0 /\ -r_off32^post61+r_off32^0 == 0 /\ __const_2147483647^0-__const_2147483647^post61 == 0 /\ -i3^post61+i3^0 == 0), cost: 1
  61: l46 -> l43 : __const_10000^0'=__const_10000^post62, __const_16^0'=__const_16^post62, __const_2147483647^0'=__const_2147483647^post62, __const_256^0'=__const_256^post62, __const_257^0'=__const_257^post62, __const_429496^0'=__const_429496^post62, __const_50^0'=__const_50^post62, __const_53^0'=__const_53^post62, __const_65536^0'=__const_65536^post62, __const_8388607^0'=__const_8388607^post62, __const_8^0'=__const_8^post62, __const_9^0'=__const_9^post62, apsim_bound11113^0'=apsim_bound11113^post62, apsim_incnt^0'=apsim_incnt^post62, bits33^0'=bits33^post62, block_compress^0'=block_compress^post62, bytes_out^0'=bytes_out^post62, c37^0'=c37^post62, c7^0'=c7^post62, checkpoint^0'=checkpoint^post62, clear_flg^0'=clear_flg^post62, code31^0'=code31^post62, count^0'=count^post62, disp9^0'=disp9^post62, ent8^0'=ent8^post62, exit_stat^0'=exit_stat^post62, fcode5^0'=fcode5^post62, free_ent^0'=free_ent^post62, hshift11^0'=hshift11^post62, hsize^0'=hsize^post62, hsize___019^0'=hsize___019^post62, hsize___027^0'=hsize___027^post62, hsize_reg10^0'=hsize_reg10^post62, i21^0'=i21^post62, i29^0'=i29^post62, i3^0'=i3^post62, i41^0'=i41^post62, i45^0'=i45^post62, i6^0'=i6^post62, in_count^0'=in_count^post62, incnt^0'=incnt^post62, m122^0'=m122^post62, m130^0'=m130^post62, maxbits^0'=maxbits^post62, maxcode^0'=maxcode^post62, maxmaxcode^0'=maxmaxcode^post62, n40^0'=n40^post62, n44^0'=n44^post62, n_bits^0'=n_bits^post62, offset^0'=offset^post62, out_count^0'=out_count^post62, r_off32^0'=r_off32^post62, rat26^0'=rat26^post62, ratio^0'=ratio^post62, ret_getbyte18^0'=ret_getbyte18^post62, ret_getbyte25^0'=ret_getbyte25^post62, seed2^0'=seed2^post62, tabort4^0'=tabort4^post62, tmp12^0'=tmp12^post62, tmp___014^0'=tmp___014^post62, tmp___017^0'=tmp___017^post62, tmp___024^0'=tmp___024^post62, tmp___115^0'=tmp___115^post62, (-tmp___017^post62+tmp___017^0 == 0 /\ __const_9^0-__const_9^post62 == 0 /\ -tmp___024^post62+tmp___024^0 == 0 /\ c37^0-c37^post62 == 0 /\ offset^0-offset^post62 == 0 /\ __const_8388607^0-__const_8388607^post62 == 0 /\ maxcode^0-maxcode^post62 == 0 /\ tmp___014^0-tmp___014^post62 == 0 /\ ret_getbyte25^0-ret_getbyte25^post62 == 0 /\ -bytes_out^post62+bytes_out^0 == 0 /\ -ratio^post62+ratio^0 == 0 /\ -r_off32^post62+r_off32^0 == 0 /\ bits33^0-bits33^post62 == 0 /\ maxmaxcode^0-maxmaxcode^post62 == 0 /\ code31^0-code31^post62 == 0 /\ -in_count^post62+in_count^0 == 0 /\ -n_bits^post62+n_bits^0 == 0 /\ -checkpoint^post62+checkpoint^0 == 0 /\ -clear_flg^post62+clear_flg^0 == 0 /\ ent8^0-ent8^post62 == 0 /\ hsize___027^0-hsize___027^post62 == 0 /\ c7^0-c7^post62 == 0 /\ apsim_incnt^0-apsim_incnt^post62 == 0 /\ -__const_429496^post62+__const_429496^0 == 0 /\ i45^0-i45^post62 == 0 /\ -hsize^post62+hsize^0 == 0 /\ -disp9^post62+disp9^0 == 0 /\ tmp12^0-tmp12^post62 == 0 /\ -n40^post62+n40^0 == 0 /\ tabort4^0-tabort4^post62 == 0 /\ n44^0-n44^post62 == 0 /\ -exit_stat^post62+exit_stat^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post62 == 0 /\ -apsim_bound11113^post62+apsim_bound11113^0 == 0 /\ -i3^post62+i3^0 == 0 /\ -i29^post62+i29^0 == 0 /\ m122^0-m122^post62 == 0 /\ -i41^post62+i41^0 == 0 /\ __const_65536^0-__const_65536^post62 == 0 /\ -__const_2147483647^post62+__const_2147483647^0 == 0 /\ -__const_256^post62+__const_256^0 == 0 /\ __const_16^0-__const_16^post62 == 0 /\ -__const_50^post62+__const_50^0 == 0 /\ -m130^post62+m130^0 == 0 /\ tmp___115^0-tmp___115^post62 == 0 /\ -__const_10000^post62+__const_10000^0 == 0 /\ -count^post62+count^0 == 0 /\ -hsize___019^post62+hsize___019^0 == 0 /\ -hsize_reg10^post62+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post62 == 0 /\ rat26^0-rat26^post62 == 0 /\ -i21^post62+i21^0 == 0 /\ __const_8^0-__const_8^post62 == 0 /\ -maxbits^post62+maxbits^0 == 0 /\ free_ent^0-free_ent^post62 == 0 /\ -incnt^post62+incnt^0 == 0 /\ i6^0-i6^post62 == 0 /\ -fcode5^post62+fcode5^0 == 0 /\ __const_53^0-__const_53^post62 == 0 /\ __const_257^0-__const_257^post62 == 0 /\ out_count^0-out_count^post62 == 0 /\ -seed2^post62+seed2^0 == 0 /\ block_compress^0-block_compress^post62 == 0), cost: 1
  62: l47 -> l46 : __const_10000^0'=__const_10000^post63, __const_16^0'=__const_16^post63, __const_2147483647^0'=__const_2147483647^post63, __const_256^0'=__const_256^post63, __const_257^0'=__const_257^post63, __const_429496^0'=__const_429496^post63, __const_50^0'=__const_50^post63, __const_53^0'=__const_53^post63, __const_65536^0'=__const_65536^post63, __const_8388607^0'=__const_8388607^post63, __const_8^0'=__const_8^post63, __const_9^0'=__const_9^post63, apsim_bound11113^0'=apsim_bound11113^post63, apsim_incnt^0'=apsim_incnt^post63, bits33^0'=bits33^post63, block_compress^0'=block_compress^post63, bytes_out^0'=bytes_out^post63, c37^0'=c37^post63, c7^0'=c7^post63, checkpoint^0'=checkpoint^post63, clear_flg^0'=clear_flg^post63, code31^0'=code31^post63, count^0'=count^post63, disp9^0'=disp9^post63, ent8^0'=ent8^post63, exit_stat^0'=exit_stat^post63, fcode5^0'=fcode5^post63, free_ent^0'=free_ent^post63, hshift11^0'=hshift11^post63, hsize^0'=hsize^post63, hsize___019^0'=hsize___019^post63, hsize___027^0'=hsize___027^post63, hsize_reg10^0'=hsize_reg10^post63, i21^0'=i21^post63, i29^0'=i29^post63, i3^0'=i3^post63, i41^0'=i41^post63, i45^0'=i45^post63, i6^0'=i6^post63, in_count^0'=in_count^post63, incnt^0'=incnt^post63, m122^0'=m122^post63, m130^0'=m130^post63, maxbits^0'=maxbits^post63, maxcode^0'=maxcode^post63, maxmaxcode^0'=maxmaxcode^post63, n40^0'=n40^post63, n44^0'=n44^post63, n_bits^0'=n_bits^post63, offset^0'=offset^post63, out_count^0'=out_count^post63, r_off32^0'=r_off32^post63, rat26^0'=rat26^post63, ratio^0'=ratio^post63, ret_getbyte18^0'=ret_getbyte18^post63, ret_getbyte25^0'=ret_getbyte25^post63, seed2^0'=seed2^post63, tabort4^0'=tabort4^post63, tmp12^0'=tmp12^post63, tmp___014^0'=tmp___014^post63, tmp___017^0'=tmp___017^post63, tmp___024^0'=tmp___024^post63, tmp___115^0'=tmp___115^post63, (ent8^0-ent8^post63 == 0 /\ -incnt^post63+incnt^0 == 0 /\ c7^0-c7^post63 == 0 /\ r_off32^0-r_off32^post63 == 0 /\ tabort4^0-tabort4^post63 == 0 /\ -m130^post63+m130^0 == 0 /\ exit_stat^0-exit_stat^post63 == 0 /\ -__const_429496^post63+__const_429496^0 == 0 /\ out_count^0-out_count^post63 == 0 /\ -__const_9^post63+__const_9^0 == 0 /\ __const_50^0-__const_50^post63 == 0 /\ -maxbits^post63+maxbits^0 == 0 /\ -i29^post63+i29^0 == 0 /\ -i41^post63+i41^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post63 == 0 /\ -i45^post63+i45^0 == 0 /\ -__const_65536^post63+__const_65536^0 == 0 /\ -i21^post63+i21^0 == 0 /\ -clear_flg^post63+clear_flg^0 == 0 /\ -tmp___115^post63+tmp___115^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post63 == 0 /\ tmp12^0-tmp12^post63 == 0 /\ -in_count^post63+in_count^0 == 0 /\ -__const_8^post63+__const_8^0 == 0 /\ -__const_2147483647^post63+__const_2147483647^0 == 0 /\ -__const_8388607^post63+__const_8388607^0 == 0 /\ __const_16^0-__const_16^post63 == 0 /\ bits33^0-bits33^post63 == 0 /\ maxmaxcode^0-maxmaxcode^post63 == 0 /\ maxcode^0-maxcode^post63 == 0 /\ -bytes_out^post63+bytes_out^0 == 0 /\ -__const_10000^post63+__const_10000^0 == 0 /\ i6^0-i6^post63 == 0 /\ __const_257^0-__const_257^post63 == 0 /\ -n_bits^post63+n_bits^0 == 0 /\ -tmp___014^post63+tmp___014^0 == 0 /\ -ret_getbyte25^post63+ret_getbyte25^0 == 0 /\ -hsize___019^post63+hsize___019^0 == 0 /\ -hsize^post63+hsize^0 == 0 /\ -seed2^post63+seed2^0 == 0 /\ apsim_incnt^0-apsim_incnt^post63 == 0 /\ -count^post63+count^0 == 0 /\ -fcode5^post63+fcode5^0 == 0 /\ tmp___017^0-tmp___017^post63 == 0 /\ m122^0-m122^post63 == 0 /\ -disp9^post63+disp9^0 == 0 /\ n44^0-n44^post63 == 0 /\ i3^0-i3^post63 == 0 /\ __const_53^0-__const_53^post63 == 0 /\ -n40^post63+n40^0 == 0 /\ code31^0-code31^post63 == 0 /\ hsize_reg10^0-hsize_reg10^post63 == 0 /\ -checkpoint^post63+checkpoint^0 == 0 /\ -tmp___024^post63+tmp___024^0 == 0 /\ -__const_256^post63+__const_256^0 == 0 /\ hsize___027^0-hsize___027^post63 == 0 /\ hshift11^0-hshift11^post63 == 0 /\ free_ent^0-free_ent^post63 == 0 /\ -block_compress^post63+block_compress^0 == 0 /\ rat26^0-rat26^post63 == 0 /\ offset^post63-offset^0-n_bits^0 == 0 /\ -ratio^post63+ratio^0 == 0 /\ c37^0-c37^post63 == 0), cost: 1
  63: l48 -> l47 : __const_10000^0'=__const_10000^post64, __const_16^0'=__const_16^post64, __const_2147483647^0'=__const_2147483647^post64, __const_256^0'=__const_256^post64, __const_257^0'=__const_257^post64, __const_429496^0'=__const_429496^post64, __const_50^0'=__const_50^post64, __const_53^0'=__const_53^post64, __const_65536^0'=__const_65536^post64, __const_8388607^0'=__const_8388607^post64, __const_8^0'=__const_8^post64, __const_9^0'=__const_9^post64, apsim_bound11113^0'=apsim_bound11113^post64, apsim_incnt^0'=apsim_incnt^post64, bits33^0'=bits33^post64, block_compress^0'=block_compress^post64, bytes_out^0'=bytes_out^post64, c37^0'=c37^post64, c7^0'=c7^post64, checkpoint^0'=checkpoint^post64, clear_flg^0'=clear_flg^post64, code31^0'=code31^post64, count^0'=count^post64, disp9^0'=disp9^post64, ent8^0'=ent8^post64, exit_stat^0'=exit_stat^post64, fcode5^0'=fcode5^post64, free_ent^0'=free_ent^post64, hshift11^0'=hshift11^post64, hsize^0'=hsize^post64, hsize___019^0'=hsize___019^post64, hsize___027^0'=hsize___027^post64, hsize_reg10^0'=hsize_reg10^post64, i21^0'=i21^post64, i29^0'=i29^post64, i3^0'=i3^post64, i41^0'=i41^post64, i45^0'=i45^post64, i6^0'=i6^post64, in_count^0'=in_count^post64, incnt^0'=incnt^post64, m122^0'=m122^post64, m130^0'=m130^post64, maxbits^0'=maxbits^post64, maxcode^0'=maxcode^post64, maxmaxcode^0'=maxmaxcode^post64, n40^0'=n40^post64, n44^0'=n44^post64, n_bits^0'=n_bits^post64, offset^0'=offset^post64, out_count^0'=out_count^post64, r_off32^0'=r_off32^post64, rat26^0'=rat26^post64, ratio^0'=ratio^post64, ret_getbyte18^0'=ret_getbyte18^post64, ret_getbyte25^0'=ret_getbyte25^post64, seed2^0'=seed2^post64, tabort4^0'=tabort4^post64, tmp12^0'=tmp12^post64, tmp___014^0'=tmp___014^post64, tmp___017^0'=tmp___017^post64, tmp___024^0'=tmp___024^post64, tmp___115^0'=tmp___115^post64, (-block_compress^post64+block_compress^0 == 0 /\ -clear_flg^post64+clear_flg^0 == 0 /\ -c7^post64+c7^0 == 0 /\ -bytes_out^post64+bytes_out^0 == 0 /\ -ret_getbyte18^post64+ret_getbyte18^0 == 0 /\ -in_count^post64+in_count^0 == 0 /\ -apsim_bound11113^post64+apsim_bound11113^0 == 0 /\ -i21^post64+i21^0 == 0 /\ -i6^post64+i6^0 == 0 /\ m130^0-m130^post64 == 0 /\ -tmp___024^post64+tmp___024^0 == 0 /\ -tmp___115^post64+tmp___115^0 == 0 /\ __const_65536^0-__const_65536^post64 == 0 /\ hshift11^0-hshift11^post64 == 0 /\ -code31^post64+code31^0 == 0 /\ -m122^post64+m122^0 == 0 /\ free_ent^0-free_ent^post64 == 0 /\ rat26^0-rat26^post64 == 0 /\ -tabort4^post64+tabort4^0 == 0 /\ i29^0-i29^post64 == 0 /\ hsize___027^0-hsize___027^post64 == 0 /\ -n44^post64+n44^0 == 0 /\ -__const_8388607^post64+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post64 == 0 /\ __const_257^0-__const_257^post64 == 0 /\ hsize___019^0-hsize___019^post64 == 0 /\ -maxbits^post64+maxbits^0 == 0 /\ -r_off32^post64+r_off32^0 == 0 /\ -i3^post64+i3^0 == 0 /\ -disp9^post64+disp9^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post64 == 0 /\ -tmp___017^post64+tmp___017^0 == 0 /\ c37^0-c37^post64 == 0 /\ -__const_10000^post64+__const_10000^0 == 0 /\ __const_8^0-__const_8^post64 == 0 /\ ent8^0-ent8^post64 == 0 /\ -__const_256^post64+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post64 == 0 /\ out_count^0-out_count^post64 == 0 /\ -__const_2147483647^post64+__const_2147483647^0 == 0 /\ -fcode5^post64+fcode5^0 == 0 /\ i45^0-i45^post64 == 0 /\ offset^0-offset^post64 == 0 /\ -hsize_reg10^post64+hsize_reg10^0 == 0 /\ n40^0-n40^post64 == 0 /\ __const_429496^0-__const_429496^post64 == 0 /\ exit_stat^0-exit_stat^post64 == 0 /\ -hsize^post64+hsize^0 == 0 /\ -i41^post64+i41^0 == 0 /\ -incnt^post64+incnt^0 == 0 /\ -seed2^post64+seed2^0 == 0 /\ bits33^0-bits33^post64 == 0 /\ tmp12^0-tmp12^post64 == 0 /\ ratio^0-ratio^post64 == 0 /\ -n_bits^post64+n_bits^0 == 0 /\ __const_16^0-__const_16^post64 == 0 /\ tmp___014^0-tmp___014^post64 == 0 /\ __const_9^0-__const_9^post64 == 0 /\ apsim_incnt^0-apsim_incnt^post64 == 0 /\ -__const_50^post64+__const_50^0 == 0 /\ count^0-count^post64 == 0 /\ checkpoint^0-checkpoint^post64 == 0 /\ -maxcode^post64+maxcode^0 == 0), cost: 1
  64: l49 -> l47 : __const_10000^0'=__const_10000^post65, __const_16^0'=__const_16^post65, __const_2147483647^0'=__const_2147483647^post65, __const_256^0'=__const_256^post65, __const_257^0'=__const_257^post65, __const_429496^0'=__const_429496^post65, __const_50^0'=__const_50^post65, __const_53^0'=__const_53^post65, __const_65536^0'=__const_65536^post65, __const_8388607^0'=__const_8388607^post65, __const_8^0'=__const_8^post65, __const_9^0'=__const_9^post65, apsim_bound11113^0'=apsim_bound11113^post65, apsim_incnt^0'=apsim_incnt^post65, bits33^0'=bits33^post65, block_compress^0'=block_compress^post65, bytes_out^0'=bytes_out^post65, c37^0'=c37^post65, c7^0'=c7^post65, checkpoint^0'=checkpoint^post65, clear_flg^0'=clear_flg^post65, code31^0'=code31^post65, count^0'=count^post65, disp9^0'=disp9^post65, ent8^0'=ent8^post65, exit_stat^0'=exit_stat^post65, fcode5^0'=fcode5^post65, free_ent^0'=free_ent^post65, hshift11^0'=hshift11^post65, hsize^0'=hsize^post65, hsize___019^0'=hsize___019^post65, hsize___027^0'=hsize___027^post65, hsize_reg10^0'=hsize_reg10^post65, i21^0'=i21^post65, i29^0'=i29^post65, i3^0'=i3^post65, i41^0'=i41^post65, i45^0'=i45^post65, i6^0'=i6^post65, in_count^0'=in_count^post65, incnt^0'=incnt^post65, m122^0'=m122^post65, m130^0'=m130^post65, maxbits^0'=maxbits^post65, maxcode^0'=maxcode^post65, maxmaxcode^0'=maxmaxcode^post65, n40^0'=n40^post65, n44^0'=n44^post65, n_bits^0'=n_bits^post65, offset^0'=offset^post65, out_count^0'=out_count^post65, r_off32^0'=r_off32^post65, rat26^0'=rat26^post65, ratio^0'=ratio^post65, ret_getbyte18^0'=ret_getbyte18^post65, ret_getbyte25^0'=ret_getbyte25^post65, seed2^0'=seed2^post65, tabort4^0'=tabort4^post65, tmp12^0'=tmp12^post65, tmp___014^0'=tmp___014^post65, tmp___017^0'=tmp___017^post65, tmp___024^0'=tmp___024^post65, tmp___115^0'=tmp___115^post65, (__const_9^0-__const_9^post65 == 0 /\ maxcode^0-maxcode^post65 == 0 /\ -i3^post65+i3^0 == 0 /\ -i41^post65+i41^0 == 0 /\ hsize___019^0-hsize___019^post65 == 0 /\ n44^0-n44^post65 == 0 /\ __const_257^0-__const_257^post65 == 0 /\ -__const_256^post65+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post65 == 0 /\ i29^0-i29^post65 == 0 /\ bits33^0 <= 0 /\ m130^0-m130^post65 == 0 /\ -__const_50^post65+__const_50^0 == 0 /\ hshift11^0-hshift11^post65 == 0 /\ apsim_incnt^0-apsim_incnt^post65 == 0 /\ -count^post65+count^0 == 0 /\ -__const_10000^post65+__const_10000^0 == 0 /\ c37^0-c37^post65 == 0 /\ -hsize_reg10^post65+hsize_reg10^0 == 0 /\ -hsize^post65+hsize^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post65 == 0 /\ -i21^post65+i21^0 == 0 /\ -incnt^post65+incnt^0 == 0 /\ __const_65536^0-__const_65536^post65 == 0 /\ code31^0-code31^post65 == 0 /\ -fcode5^post65+fcode5^0 == 0 /\ -apsim_bound11113^post65+apsim_bound11113^0 == 0 /\ hsize___027^0-hsize___027^post65 == 0 /\ -seed2^post65+seed2^0 == 0 /\ free_ent^0-free_ent^post65 == 0 /\ c7^0-c7^post65 == 0 /\ -__const_8388607^post65+__const_8388607^0 == 0 /\ -bits33^0 <= 0 /\ i45^0-i45^post65 == 0 /\ tmp___115^0-tmp___115^post65 == 0 /\ rat26^0-rat26^post65 == 0 /\ tmp12^0-tmp12^post65 == 0 /\ -bytes_out^post65+bytes_out^0 == 0 /\ __const_8^0-__const_8^post65 == 0 /\ -r_off32^post65+r_off32^0 == 0 /\ -ratio^post65+ratio^0 == 0 /\ -ret_getbyte18^post65+ret_getbyte18^0 == 0 /\ tmp___017^0-tmp___017^post65 == 0 /\ -i6^post65+i6^0 == 0 /\ __const_53^0-__const_53^post65 == 0 /\ out_count^0-out_count^post65 == 0 /\ -n_bits^post65+n_bits^0 == 0 /\ -in_count^post65+in_count^0 == 0 /\ -clear_flg^post65+clear_flg^0 == 0 /\ -checkpoint^post65+checkpoint^0 == 0 /\ -maxbits^post65+maxbits^0 == 0 /\ m122^0-m122^post65 == 0 /\ offset^0-offset^post65 == 0 /\ -disp9^post65+disp9^0 == 0 /\ -block_compress^post65+block_compress^0 == 0 /\ -tabort4^post65+tabort4^0 == 0 /\ -tmp___014^post65+tmp___014^0 == 0 /\ -tmp___024^post65+tmp___024^0 == 0 /\ -n40^post65+n40^0 == 0 /\ bits33^0-bits33^post65 == 0 /\ -exit_stat^post65+exit_stat^0 == 0 /\ __const_2147483647^0-__const_2147483647^post65 == 0 /\ __const_429496^0-__const_429496^post65 == 0 /\ __const_16^0-__const_16^post65 == 0 /\ ent8^0-ent8^post65 == 0), cost: 1
  65: l49 -> l48 : __const_10000^0'=__const_10000^post66, __const_16^0'=__const_16^post66, __const_2147483647^0'=__const_2147483647^post66, __const_256^0'=__const_256^post66, __const_257^0'=__const_257^post66, __const_429496^0'=__const_429496^post66, __const_50^0'=__const_50^post66, __const_53^0'=__const_53^post66, __const_65536^0'=__const_65536^post66, __const_8388607^0'=__const_8388607^post66, __const_8^0'=__const_8^post66, __const_9^0'=__const_9^post66, apsim_bound11113^0'=apsim_bound11113^post66, apsim_incnt^0'=apsim_incnt^post66, bits33^0'=bits33^post66, block_compress^0'=block_compress^post66, bytes_out^0'=bytes_out^post66, c37^0'=c37^post66, c7^0'=c7^post66, checkpoint^0'=checkpoint^post66, clear_flg^0'=clear_flg^post66, code31^0'=code31^post66, count^0'=count^post66, disp9^0'=disp9^post66, ent8^0'=ent8^post66, exit_stat^0'=exit_stat^post66, fcode5^0'=fcode5^post66, free_ent^0'=free_ent^post66, hshift11^0'=hshift11^post66, hsize^0'=hsize^post66, hsize___019^0'=hsize___019^post66, hsize___027^0'=hsize___027^post66, hsize_reg10^0'=hsize_reg10^post66, i21^0'=i21^post66, i29^0'=i29^post66, i3^0'=i3^post66, i41^0'=i41^post66, i45^0'=i45^post66, i6^0'=i6^post66, in_count^0'=in_count^post66, incnt^0'=incnt^post66, m122^0'=m122^post66, m130^0'=m130^post66, maxbits^0'=maxbits^post66, maxcode^0'=maxcode^post66, maxmaxcode^0'=maxmaxcode^post66, n40^0'=n40^post66, n44^0'=n44^post66, n_bits^0'=n_bits^post66, offset^0'=offset^post66, out_count^0'=out_count^post66, r_off32^0'=r_off32^post66, rat26^0'=rat26^post66, ratio^0'=ratio^post66, ret_getbyte18^0'=ret_getbyte18^post66, ret_getbyte25^0'=ret_getbyte25^post66, seed2^0'=seed2^post66, tabort4^0'=tabort4^post66, tmp12^0'=tmp12^post66, tmp___014^0'=tmp___014^post66, tmp___017^0'=tmp___017^post66, tmp___024^0'=tmp___024^post66, tmp___115^0'=tmp___115^post66, (-n_bits^post66+n_bits^0 == 0 /\ offset^0-offset^post66 == 0 /\ maxmaxcode^0-maxmaxcode^post66 == 0 /\ -tmp___014^post66+tmp___014^0 == 0 /\ -r_off32^post66+r_off32^0 == 0 /\ hsize___019^0-hsize___019^post66 == 0 /\ code31^0-code31^post66 == 0 /\ apsim_bound11113^0-apsim_bound11113^post66 == 0 /\ -seed2^post66+seed2^0 == 0 /\ -count^post66+count^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post66 == 0 /\ hsize___027^0-hsize___027^post66 == 0 /\ -fcode5^post66+fcode5^0 == 0 /\ __const_9^0-__const_9^post66 == 0 /\ -disp9^post66+disp9^0 == 0 /\ -exit_stat^post66+exit_stat^0 == 0 /\ -tmp___024^post66+tmp___024^0 == 0 /\ -tmp___115^post66+tmp___115^0 == 0 /\ c37^0-c37^post66 == 0 /\ c7^0-c7^post66 == 0 /\ -checkpoint^post66+checkpoint^0 == 0 /\ i45^0-i45^post66 == 0 /\ tabort4^0-tabort4^post66 == 0 /\ -__const_256^post66+__const_256^0 == 0 /\ apsim_incnt^0-apsim_incnt^post66 == 0 /\ n44^0-n44^post66 == 0 /\ bits33^0-bits33^post66 == 0 /\ -ratio^post66+ratio^0 == 0 /\ maxcode^0-maxcode^post66 == 0 /\ __const_2147483647^0-__const_2147483647^post66 == 0 /\ __const_53^0-__const_53^post66 == 0 /\ 1-bits33^0 <= 0 /\ -incnt^post66+incnt^0 == 0 /\ free_ent^0-free_ent^post66 == 0 /\ __const_65536^0-__const_65536^post66 == 0 /\ hshift11^0-hshift11^post66 == 0 /\ tmp___017^0-tmp___017^post66 == 0 /\ tmp12^0-tmp12^post66 == 0 /\ -__const_429496^post66+__const_429496^0 == 0 /\ -maxbits^post66+maxbits^0 == 0 /\ -__const_50^post66+__const_50^0 == 0 /\ -i3^post66+i3^0 == 0 /\ -i29^post66+i29^0 == 0 /\ __const_16^0-__const_16^post66 == 0 /\ -i41^post66+i41^0 == 0 /\ rat26^0-rat26^post66 == 0 /\ m130^0-m130^post66 == 0 /\ -n40^post66+n40^0 == 0 /\ i6^0-i6^post66 == 0 /\ ent8^0-ent8^post66 == 0 /\ -i21^post66+i21^0 == 0 /\ -clear_flg^post66+clear_flg^0 == 0 /\ __const_8^0-__const_8^post66 == 0 /\ __const_257^0-__const_257^post66 == 0 /\ out_count^0-out_count^post66 == 0 /\ -in_count^post66+in_count^0 == 0 /\ block_compress^0-block_compress^post66 == 0 /\ m122^0-m122^post66 == 0 /\ -__const_8388607^post66+__const_8388607^0 == 0 /\ -hsize^post66+hsize^0 == 0 /\ -bytes_out^post66+bytes_out^0 == 0 /\ -__const_10000^post66+__const_10000^0 == 0 /\ -ret_getbyte18^post66+ret_getbyte18^0 == 0 /\ -hsize_reg10^post66+hsize_reg10^0 == 0), cost: 1
  66: l49 -> l48 : __const_10000^0'=__const_10000^post67, __const_16^0'=__const_16^post67, __const_2147483647^0'=__const_2147483647^post67, __const_256^0'=__const_256^post67, __const_257^0'=__const_257^post67, __const_429496^0'=__const_429496^post67, __const_50^0'=__const_50^post67, __const_53^0'=__const_53^post67, __const_65536^0'=__const_65536^post67, __const_8388607^0'=__const_8388607^post67, __const_8^0'=__const_8^post67, __const_9^0'=__const_9^post67, apsim_bound11113^0'=apsim_bound11113^post67, apsim_incnt^0'=apsim_incnt^post67, bits33^0'=bits33^post67, block_compress^0'=block_compress^post67, bytes_out^0'=bytes_out^post67, c37^0'=c37^post67, c7^0'=c7^post67, checkpoint^0'=checkpoint^post67, clear_flg^0'=clear_flg^post67, code31^0'=code31^post67, count^0'=count^post67, disp9^0'=disp9^post67, ent8^0'=ent8^post67, exit_stat^0'=exit_stat^post67, fcode5^0'=fcode5^post67, free_ent^0'=free_ent^post67, hshift11^0'=hshift11^post67, hsize^0'=hsize^post67, hsize___019^0'=hsize___019^post67, hsize___027^0'=hsize___027^post67, hsize_reg10^0'=hsize_reg10^post67, i21^0'=i21^post67, i29^0'=i29^post67, i3^0'=i3^post67, i41^0'=i41^post67, i45^0'=i45^post67, i6^0'=i6^post67, in_count^0'=in_count^post67, incnt^0'=incnt^post67, m122^0'=m122^post67, m130^0'=m130^post67, maxbits^0'=maxbits^post67, maxcode^0'=maxcode^post67, maxmaxcode^0'=maxmaxcode^post67, n40^0'=n40^post67, n44^0'=n44^post67, n_bits^0'=n_bits^post67, offset^0'=offset^post67, out_count^0'=out_count^post67, r_off32^0'=r_off32^post67, rat26^0'=rat26^post67, ratio^0'=ratio^post67, ret_getbyte18^0'=ret_getbyte18^post67, ret_getbyte25^0'=ret_getbyte25^post67, seed2^0'=seed2^post67, tabort4^0'=tabort4^post67, tmp12^0'=tmp12^post67, tmp___014^0'=tmp___014^post67, tmp___017^0'=tmp___017^post67, tmp___024^0'=tmp___024^post67, tmp___115^0'=tmp___115^post67, (-maxbits^post67+maxbits^0 == 0 /\ -n40^post67+n40^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post67 == 0 /\ c37^0-c37^post67 == 0 /\ -in_count^post67+in_count^0 == 0 /\ tabort4^0-tabort4^post67 == 0 /\ -clear_flg^post67+clear_flg^0 == 0 /\ -checkpoint^post67+checkpoint^0 == 0 /\ -bytes_out^post67+bytes_out^0 == 0 /\ -hsize___019^post67+hsize___019^0 == 0 /\ -i21^post67+i21^0 == 0 /\ -__const_65536^post67+__const_65536^0 == 0 /\ -ratio^post67+ratio^0 == 0 /\ ent8^0-ent8^post67 == 0 /\ hsize___027^0-hsize___027^post67 == 0 /\ out_count^0-out_count^post67 == 0 /\ c7^0-c7^post67 == 0 /\ -hsize^post67+hsize^0 == 0 /\ __const_8388607^0-__const_8388607^post67 == 0 /\ exit_stat^0-exit_stat^post67 == 0 /\ -i45^post67+i45^0 == 0 /\ 1+bits33^0 <= 0 /\ __const_16^0-__const_16^post67 == 0 /\ maxmaxcode^0-maxmaxcode^post67 == 0 /\ apsim_bound11113^0-apsim_bound11113^post67 == 0 /\ -__const_8^post67+__const_8^0 == 0 /\ -offset^post67+offset^0 == 0 /\ -r_off32^post67+r_off32^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post67 == 0 /\ tmp12^0-tmp12^post67 == 0 /\ __const_9^0-__const_9^post67 == 0 /\ -__const_429496^post67+__const_429496^0 == 0 /\ m122^0-m122^post67 == 0 /\ -__const_2147483647^post67+__const_2147483647^0 == 0 /\ -__const_10000^post67+__const_10000^0 == 0 /\ -count^post67+count^0 == 0 /\ -fcode5^post67+fcode5^0 == 0 /\ -disp9^post67+disp9^0 == 0 /\ -__const_256^post67+__const_256^0 == 0 /\ -tmp___024^post67+tmp___024^0 == 0 /\ -tmp___115^post67+tmp___115^0 == 0 /\ bits33^0-bits33^post67 == 0 /\ n44^0-n44^post67 == 0 /\ -hsize_reg10^post67+hsize_reg10^0 == 0 /\ maxcode^0-maxcode^post67 == 0 /\ -tmp___014^post67+tmp___014^0 == 0 /\ apsim_incnt^0-apsim_incnt^post67 == 0 /\ -block_compress^post67+block_compress^0 == 0 /\ hshift11^0-hshift11^post67 == 0 /\ tmp___017^0-tmp___017^post67 == 0 /\ rat26^0-rat26^post67 == 0 /\ free_ent^0-free_ent^post67 == 0 /\ -i29^post67+i29^0 == 0 /\ -seed2^post67+seed2^0 == 0 /\ -i41^post67+i41^0 == 0 /\ -incnt^post67+incnt^0 == 0 /\ code31^0-code31^post67 == 0 /\ __const_53^0-__const_53^post67 == 0 /\ __const_257^0-__const_257^post67 == 0 /\ -n_bits^post67+n_bits^0 == 0 /\ -__const_50^post67+__const_50^0 == 0 /\ i6^0-i6^post67 == 0 /\ -m130^post67+m130^0 == 0 /\ i3^0-i3^post67 == 0), cost: 1
  67: l50 -> l49 : __const_10000^0'=__const_10000^post68, __const_16^0'=__const_16^post68, __const_2147483647^0'=__const_2147483647^post68, __const_256^0'=__const_256^post68, __const_257^0'=__const_257^post68, __const_429496^0'=__const_429496^post68, __const_50^0'=__const_50^post68, __const_53^0'=__const_53^post68, __const_65536^0'=__const_65536^post68, __const_8388607^0'=__const_8388607^post68, __const_8^0'=__const_8^post68, __const_9^0'=__const_9^post68, apsim_bound11113^0'=apsim_bound11113^post68, apsim_incnt^0'=apsim_incnt^post68, bits33^0'=bits33^post68, block_compress^0'=block_compress^post68, bytes_out^0'=bytes_out^post68, c37^0'=c37^post68, c7^0'=c7^post68, checkpoint^0'=checkpoint^post68, clear_flg^0'=clear_flg^post68, code31^0'=code31^post68, count^0'=count^post68, disp9^0'=disp9^post68, ent8^0'=ent8^post68, exit_stat^0'=exit_stat^post68, fcode5^0'=fcode5^post68, free_ent^0'=free_ent^post68, hshift11^0'=hshift11^post68, hsize^0'=hsize^post68, hsize___019^0'=hsize___019^post68, hsize___027^0'=hsize___027^post68, hsize_reg10^0'=hsize_reg10^post68, i21^0'=i21^post68, i29^0'=i29^post68, i3^0'=i3^post68, i41^0'=i41^post68, i45^0'=i45^post68, i6^0'=i6^post68, in_count^0'=in_count^post68, incnt^0'=incnt^post68, m122^0'=m122^post68, m130^0'=m130^post68, maxbits^0'=maxbits^post68, maxcode^0'=maxcode^post68, maxmaxcode^0'=maxmaxcode^post68, n40^0'=n40^post68, n44^0'=n44^post68, n_bits^0'=n_bits^post68, offset^0'=offset^post68, out_count^0'=out_count^post68, r_off32^0'=r_off32^post68, rat26^0'=rat26^post68, ratio^0'=ratio^post68, ret_getbyte18^0'=ret_getbyte18^post68, ret_getbyte25^0'=ret_getbyte25^post68, seed2^0'=seed2^post68, tabort4^0'=tabort4^post68, tmp12^0'=tmp12^post68, tmp___014^0'=tmp___014^post68, tmp___017^0'=tmp___017^post68, tmp___024^0'=tmp___024^post68, tmp___115^0'=tmp___115^post68, (-exit_stat^post68+exit_stat^0 == 0 /\ -disp9^post68+disp9^0 == 0 /\ -count^post68+count^0 == 0 /\ i29^0-i29^post68 == 0 /\ -tmp___024^post68+tmp___024^0 == 0 /\ -__const_256^post68+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post68 == 0 /\ apsim_bound11113^0-apsim_bound11113^post68 == 0 /\ -fcode5^post68+fcode5^0 == 0 /\ __const_257^0-__const_257^post68 == 0 /\ __const_9^0-__const_9^post68 == 0 /\ -bytes_out^post68+bytes_out^0 == 0 /\ -tmp___014^post68+tmp___014^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post68 == 0 /\ c37^0-c37^post68 == 0 /\ -i41^post68+i41^0 == 0 /\ -seed2^post68+seed2^0 == 0 /\ tmp___115^0-tmp___115^post68 == 0 /\ bits33^0-bits33^post68 == 0 /\ n44^0-n44^post68 == 0 /\ hsize___027^0-hsize___027^post68 == 0 /\ m130^0-m130^post68 == 0 /\ -incnt^post68+incnt^0 == 0 /\ hsize___019^0-hsize___019^post68 == 0 /\ i45^0-i45^post68 == 0 /\ c7^0-c7^post68 == 0 /\ code31^0-code31^post68 == 0 /\ maxcode^0-maxcode^post68 == 0 /\ __const_10000^0-__const_10000^post68 == 0 /\ apsim_incnt^0-apsim_incnt^post68 == 0 /\ -__const_50^post68+__const_50^0 == 0 /\ hshift11^0-hshift11^post68 == 0 /\ -n40^post68+n40^0 == 0 /\ -checkpoint^post68+checkpoint^0 == 0 /\ tmp___017^0-tmp___017^post68 == 0 /\ __const_65536^0-__const_65536^post68 == 0 /\ free_ent^0-free_ent^post68 == 0 /\ -ratio^post68+ratio^0 == 0 /\ rat26^0-rat26^post68 == 0 /\ -clear_flg^post68+clear_flg^0 == 0 /\ -ret_getbyte18^post68+ret_getbyte18^0 == 0 /\ -in_count^post68+in_count^0 == 0 /\ __const_16^0-__const_16^post68 == 0 /\ -i21^post68+i21^0 == 0 /\ -i6^post68+i6^0 == 0 /\ -hsize_reg10^post68+hsize_reg10^0 == 0 /\ __const_53^0-__const_53^post68 == 0 /\ -hsize^post68+hsize^0 == 0 /\ tmp12^0-tmp12^post68 == 0 /\ -i3^post68+i3^0 == 0 /\ -n_bits^post68+n_bits^0 == 0 /\ m122^0-m122^post68 == 0 /\ __const_8^0-__const_8^post68 == 0 /\ block_compress^0-block_compress^post68 == 0 /\ -tabort4^post68+tabort4^0 == 0 /\ ent8^0-ent8^post68 == 0 /\ out_count^0-out_count^post68 == 0 /\ -__const_8388607^post68+__const_8388607^0 == 0 /\ __const_429496^0-__const_429496^post68 == 0 /\ offset^0-offset^post68 == 0 /\ -r_off32^post68+r_off32^0 == 0 /\ 1+bits33^0-__const_8^0 <= 0 /\ __const_2147483647^0-__const_2147483647^post68 == 0 /\ -maxbits^post68+maxbits^0 == 0), cost: 1
  68: l50 -> l49 : __const_10000^0'=__const_10000^post69, __const_16^0'=__const_16^post69, __const_2147483647^0'=__const_2147483647^post69, __const_256^0'=__const_256^post69, __const_257^0'=__const_257^post69, __const_429496^0'=__const_429496^post69, __const_50^0'=__const_50^post69, __const_53^0'=__const_53^post69, __const_65536^0'=__const_65536^post69, __const_8388607^0'=__const_8388607^post69, __const_8^0'=__const_8^post69, __const_9^0'=__const_9^post69, apsim_bound11113^0'=apsim_bound11113^post69, apsim_incnt^0'=apsim_incnt^post69, bits33^0'=bits33^post69, block_compress^0'=block_compress^post69, bytes_out^0'=bytes_out^post69, c37^0'=c37^post69, c7^0'=c7^post69, checkpoint^0'=checkpoint^post69, clear_flg^0'=clear_flg^post69, code31^0'=code31^post69, count^0'=count^post69, disp9^0'=disp9^post69, ent8^0'=ent8^post69, exit_stat^0'=exit_stat^post69, fcode5^0'=fcode5^post69, free_ent^0'=free_ent^post69, hshift11^0'=hshift11^post69, hsize^0'=hsize^post69, hsize___019^0'=hsize___019^post69, hsize___027^0'=hsize___027^post69, hsize_reg10^0'=hsize_reg10^post69, i21^0'=i21^post69, i29^0'=i29^post69, i3^0'=i3^post69, i41^0'=i41^post69, i45^0'=i45^post69, i6^0'=i6^post69, in_count^0'=in_count^post69, incnt^0'=incnt^post69, m122^0'=m122^post69, m130^0'=m130^post69, maxbits^0'=maxbits^post69, maxcode^0'=maxcode^post69, maxmaxcode^0'=maxmaxcode^post69, n40^0'=n40^post69, n44^0'=n44^post69, n_bits^0'=n_bits^post69, offset^0'=offset^post69, out_count^0'=out_count^post69, r_off32^0'=r_off32^post69, rat26^0'=rat26^post69, ratio^0'=ratio^post69, ret_getbyte18^0'=ret_getbyte18^post69, ret_getbyte25^0'=ret_getbyte25^post69, seed2^0'=seed2^post69, tabort4^0'=tabort4^post69, tmp12^0'=tmp12^post69, tmp___014^0'=tmp___014^post69, tmp___017^0'=tmp___017^post69, tmp___024^0'=tmp___024^post69, tmp___115^0'=tmp___115^post69, (0 == 0 /\ __const_8388607^0-__const_8388607^post69 == 0 /\ ret_getbyte25^0-ret_getbyte25^post69 == 0 /\ -r_off32^post69+r_off32^0 == 0 /\ -ratio^post69+ratio^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post69 == 0 /\ -clear_flg^post69+clear_flg^0 == 0 /\ i45^0-i45^post69 == 0 /\ c7^0-c7^post69 == 0 /\ -in_count^post69+in_count^0 == 0 /\ -checkpoint^post69+checkpoint^0 == 0 /\ ent8^0-ent8^post69 == 0 /\ __const_9^0-__const_9^post69 == 0 /\ -hsize_reg10^post69+hsize_reg10^0 == 0 /\ maxcode^0-maxcode^post69 == 0 /\ -bits33^0+__const_8^0+bits33^post69 == 0 /\ -hsize___019^post69+hsize___019^0 == 0 /\ -__const_429496^post69+__const_429496^0 == 0 /\ -bytes_out^post69+bytes_out^0 == 0 /\ -maxbits^post69+maxbits^0 == 0 /\ tmp12^0-tmp12^post69 == 0 /\ -disp9^post69+disp9^0 == 0 /\ tabort4^0-tabort4^post69 == 0 /\ -tmp___024^post69+tmp___024^0 == 0 /\ -tmp___014^post69+tmp___014^0 == 0 /\ -exit_stat^post69+exit_stat^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post69 == 0 /\ -i21^post69+i21^0 == 0 /\ hsize___027^0-hsize___027^post69 == 0 /\ maxmaxcode^0-maxmaxcode^post69 == 0 /\ hshift11^0-hshift11^post69 == 0 /\ apsim_incnt^0-apsim_incnt^post69 == 0 /\ -i29^post69+i29^0 == 0 /\ -i3^post69+i3^0 == 0 /\ m122^0-m122^post69 == 0 /\ -i41^post69+i41^0 == 0 /\ n44^0-n44^post69 == 0 /\ __const_65536^0-__const_65536^post69 == 0 /\ -bits33^0+__const_8^0 <= 0 /\ -n_bits^post69+n_bits^0 == 0 /\ -__const_2147483647^post69+__const_2147483647^0 == 0 /\ __const_10000^0-__const_10000^post69 == 0 /\ -__const_256^post69+__const_256^0 == 0 /\ free_ent^0-free_ent^post69 == 0 /\ -offset^post69+offset^0 == 0 /\ -hsize^post69+hsize^0 == 0 /\ -block_compress^post69+block_compress^0 == 0 /\ -m130^post69+m130^0 == 0 /\ -count^post69+count^0 == 0 /\ rat26^0-rat26^post69 == 0 /\ -__const_50^post69+__const_50^0 == 0 /\ __const_8^0-__const_8^post69 == 0 /\ -__const_16^post69+__const_16^0 == 0 /\ -seed2^post69+seed2^0 == 0 /\ -incnt^post69+incnt^0 == 0 /\ -tmp___115^post69+tmp___115^0 == 0 /\ tmp___017^0-tmp___017^post69 == 0 /\ -n40^post69+n40^0 == 0 /\ i6^0-i6^post69 == 0 /\ c37^0-c37^post69 == 0 /\ -fcode5^post69+fcode5^0 == 0 /\ out_count^0-out_count^post69 == 0 /\ __const_257^0-__const_257^post69 == 0 /\ __const_53^0-__const_53^post69 == 0), cost: 1
  70: l51 -> l32 : __const_10000^0'=__const_10000^post71, __const_16^0'=__const_16^post71, __const_2147483647^0'=__const_2147483647^post71, __const_256^0'=__const_256^post71, __const_257^0'=__const_257^post71, __const_429496^0'=__const_429496^post71, __const_50^0'=__const_50^post71, __const_53^0'=__const_53^post71, __const_65536^0'=__const_65536^post71, __const_8388607^0'=__const_8388607^post71, __const_8^0'=__const_8^post71, __const_9^0'=__const_9^post71, apsim_bound11113^0'=apsim_bound11113^post71, apsim_incnt^0'=apsim_incnt^post71, bits33^0'=bits33^post71, block_compress^0'=block_compress^post71, bytes_out^0'=bytes_out^post71, c37^0'=c37^post71, c7^0'=c7^post71, checkpoint^0'=checkpoint^post71, clear_flg^0'=clear_flg^post71, code31^0'=code31^post71, count^0'=count^post71, disp9^0'=disp9^post71, ent8^0'=ent8^post71, exit_stat^0'=exit_stat^post71, fcode5^0'=fcode5^post71, free_ent^0'=free_ent^post71, hshift11^0'=hshift11^post71, hsize^0'=hsize^post71, hsize___019^0'=hsize___019^post71, hsize___027^0'=hsize___027^post71, hsize_reg10^0'=hsize_reg10^post71, i21^0'=i21^post71, i29^0'=i29^post71, i3^0'=i3^post71, i41^0'=i41^post71, i45^0'=i45^post71, i6^0'=i6^post71, in_count^0'=in_count^post71, incnt^0'=incnt^post71, m122^0'=m122^post71, m130^0'=m130^post71, maxbits^0'=maxbits^post71, maxcode^0'=maxcode^post71, maxmaxcode^0'=maxmaxcode^post71, n40^0'=n40^post71, n44^0'=n44^post71, n_bits^0'=n_bits^post71, offset^0'=offset^post71, out_count^0'=out_count^post71, r_off32^0'=r_off32^post71, rat26^0'=rat26^post71, ratio^0'=ratio^post71, ret_getbyte18^0'=ret_getbyte18^post71, ret_getbyte25^0'=ret_getbyte25^post71, seed2^0'=seed2^post71, tabort4^0'=tabort4^post71, tmp12^0'=tmp12^post71, tmp___014^0'=tmp___014^post71, tmp___017^0'=tmp___017^post71, tmp___024^0'=tmp___024^post71, tmp___115^0'=tmp___115^post71, (-fcode5^post71+fcode5^0 == 0 /\ free_ent^0-free_ent^post71 == 0 /\ -block_compress^post71+block_compress^0 == 0 /\ -c7^post71+c7^0 == 0 /\ -disp9^post71+disp9^0 == 0 /\ tmp___017^0-tmp___017^post71 == 0 /\ -tmp___115^post71+tmp___115^0 == 0 /\ __const_53^0-__const_53^post71 == 0 /\ m130^0-m130^post71 == 0 /\ tmp___024^0-tmp___024^post71 == 0 /\ ret_getbyte18^0-ret_getbyte18^post71 == 0 /\ -tmp12^post71+tmp12^0 == 0 /\ -seed2^post71+seed2^0 == 0 /\ -tmp___014^post71+tmp___014^0 == 0 /\ -code31^post71+code31^0 == 0 /\ -i21^post71+i21^0 == 0 /\ m122^0-m122^post71 == 0 /\ -apsim_incnt^post71+apsim_incnt^0 == 0 /\ __const_16^0-__const_16^post71 == 0 /\ -i41^post71+i41^0 == 0 /\ -offset^post71+offset^0 == 0 /\ -incnt^post71+incnt^0 == 0 /\ ent8^0-ent8^post71 == 0 /\ __const_10000^0-__const_10000^post71 == 0 /\ r_off32^0-r_off32^post71 == 0 /\ -rat26^post71+rat26^0 == 0 /\ exit_stat^0-exit_stat^post71 == 0 /\ __const_50^0-__const_50^post71 == 0 /\ bytes_out^0-bytes_out^post71 == 0 /\ out_count^0-out_count^post71 == 0 /\ c37^0-c37^post71 == 0 /\ -maxbits^post71+maxbits^0 == 0 /\ count^0-count^post71 == 0 /\ -in_count^post71+in_count^0 == 0 /\ -__const_9^post71+__const_9^0 == 0 /\ __const_256^0-__const_256^post71 == 0 /\ -hsize_reg10^post71+hsize_reg10^0 == 0 /\ -ratio^post71+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post71 == 0 /\ -hsize^post71+hsize^0 == 0 /\ -hsize___019^post71+hsize___019^0 == 0 /\ -n40^post71+n40^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post71 == 0 /\ -__const_65536^post71+__const_65536^0 == 0 /\ __const_257^0-__const_257^post71 == 0 /\ 1+code31^0 <= 0 /\ i6^0-i6^post71 == 0 /\ -__const_2147483647^post71+__const_2147483647^0 == 0 /\ -__const_8^post71+__const_8^0 == 0 /\ tabort4^0-tabort4^post71 == 0 /\ -__const_8388607^post71+__const_8388607^0 == 0 /\ -i29^post71+i29^0 == 0 /\ -ret_getbyte25^post71+ret_getbyte25^0 == 0 /\ bits33^0-bits33^post71 == 0 /\ n44^0-n44^post71 == 0 /\ -i45^post71+i45^0 == 0 /\ hsize___027^0-hsize___027^post71 == 0 /\ maxcode^0-maxcode^post71 == 0 /\ -clear_flg^post71+clear_flg^0 == 0 /\ n_bits^0-n_bits^post71 == 0 /\ i3^0-i3^post71 == 0 /\ hshift11^0-hshift11^post71 == 0 /\ checkpoint^0-checkpoint^post71 == 0 /\ -__const_429496^post71+__const_429496^0 == 0), cost: 1
  71: l51 -> l50 : __const_10000^0'=__const_10000^post72, __const_16^0'=__const_16^post72, __const_2147483647^0'=__const_2147483647^post72, __const_256^0'=__const_256^post72, __const_257^0'=__const_257^post72, __const_429496^0'=__const_429496^post72, __const_50^0'=__const_50^post72, __const_53^0'=__const_53^post72, __const_65536^0'=__const_65536^post72, __const_8388607^0'=__const_8388607^post72, __const_8^0'=__const_8^post72, __const_9^0'=__const_9^post72, apsim_bound11113^0'=apsim_bound11113^post72, apsim_incnt^0'=apsim_incnt^post72, bits33^0'=bits33^post72, block_compress^0'=block_compress^post72, bytes_out^0'=bytes_out^post72, c37^0'=c37^post72, c7^0'=c7^post72, checkpoint^0'=checkpoint^post72, clear_flg^0'=clear_flg^post72, code31^0'=code31^post72, count^0'=count^post72, disp9^0'=disp9^post72, ent8^0'=ent8^post72, exit_stat^0'=exit_stat^post72, fcode5^0'=fcode5^post72, free_ent^0'=free_ent^post72, hshift11^0'=hshift11^post72, hsize^0'=hsize^post72, hsize___019^0'=hsize___019^post72, hsize___027^0'=hsize___027^post72, hsize_reg10^0'=hsize_reg10^post72, i21^0'=i21^post72, i29^0'=i29^post72, i3^0'=i3^post72, i41^0'=i41^post72, i45^0'=i45^post72, i6^0'=i6^post72, in_count^0'=in_count^post72, incnt^0'=incnt^post72, m122^0'=m122^post72, m130^0'=m130^post72, maxbits^0'=maxbits^post72, maxcode^0'=maxcode^post72, maxmaxcode^0'=maxmaxcode^post72, n40^0'=n40^post72, n44^0'=n44^post72, n_bits^0'=n_bits^post72, offset^0'=offset^post72, out_count^0'=out_count^post72, r_off32^0'=r_off32^post72, rat26^0'=rat26^post72, ratio^0'=ratio^post72, ret_getbyte18^0'=ret_getbyte18^post72, ret_getbyte25^0'=ret_getbyte25^post72, seed2^0'=seed2^post72, tabort4^0'=tabort4^post72, tmp12^0'=tmp12^post72, tmp___014^0'=tmp___014^post72, tmp___017^0'=tmp___017^post72, tmp___024^0'=tmp___024^post72, tmp___115^0'=tmp___115^post72, (0 == 0 /\ disp9^0-disp9^post72 == 0 /\ -tabort4^post72+tabort4^0 == 0 /\ -seed2^post72+seed2^0 == 0 /\ -i29^post72+i29^0 == 0 /\ -i41^post72+i41^0 == 0 /\ checkpoint^0-checkpoint^post72 == 0 /\ n40^0-n40^post72 == 0 /\ -__const_8388607^post72+__const_8388607^0 == 0 /\ count^0-count^post72 == 0 /\ out_count^0-out_count^post72 == 0 /\ ret_getbyte25^0-ret_getbyte25^post72 == 0 /\ bits33^post72-bits33^0+__const_8^0-r_off32^post72 == 0 /\ __const_10000^0-__const_10000^post72 == 0 /\ -free_ent^post72+free_ent^0 == 0 /\ -c7^post72+c7^0 == 0 /\ offset^0-offset^post72 == 0 /\ -tmp___024^post72+tmp___024^0 == 0 /\ -ratio^post72+ratio^0 == 0 /\ -__const_2147483647^post72+__const_2147483647^0 == 0 /\ -__const_9^post72+__const_9^0 == 0 /\ i3^0-i3^post72 == 0 /\ -clear_flg^post72+clear_flg^0 == 0 /\ -hsize_reg10^post72+hsize_reg10^0 == 0 /\ hsize___027^0-hsize___027^post72 == 0 /\ -i21^post72+i21^0 == 0 /\ -hsize___019^post72+hsize___019^0 == 0 /\ -code31^0 <= 0 /\ __const_16^0-__const_16^post72 == 0 /\ maxmaxcode^0-maxmaxcode^post72 == 0 /\ -tmp___014^post72+tmp___014^0 == 0 /\ __const_53^0-__const_53^post72 == 0 /\ -n_bits^post72+n_bits^0 == 0 /\ __const_257^0-__const_257^post72 == 0 /\ -i45^post72+i45^0 == 0 /\ -m122^post72+m122^0 == 0 /\ apsim_incnt^0-apsim_incnt^post72 == 0 /\ ret_getbyte18^0-ret_getbyte18^post72 == 0 /\ hshift11^0-hshift11^post72 == 0 /\ -incnt^post72+incnt^0 == 0 /\ __const_256^0-__const_256^post72 == 0 /\ -__const_65536^post72+__const_65536^0 == 0 /\ tmp12^0-tmp12^post72 == 0 /\ tmp___115^0-tmp___115^post72 == 0 /\ n44^0-n44^post72 == 0 /\ -__const_429496^post72+__const_429496^0 == 0 /\ -maxbits^post72+maxbits^0 == 0 /\ m130^0-m130^post72 == 0 /\ -maxcode^post72+maxcode^0 == 0 /\ fcode5^0-fcode5^post72 == 0 /\ bytes_out^0-bytes_out^post72 == 0 /\ -ent8^post72+ent8^0 == 0 /\ -apsim_bound11113^post72+apsim_bound11113^0 == 0 /\ -in_count^post72+in_count^0 == 0 /\ i6^0-i6^post72 == 0 /\ exit_stat^0-exit_stat^post72 == 0 /\ -hsize^post72+hsize^0 == 0 /\ tmp___017^0-tmp___017^post72 == 0 /\ __const_8^0-__const_8^post72 == 0 /\ __const_50^0-__const_50^post72 == 0 /\ rat26^0-rat26^post72 == 0 /\ -block_compress^post72+block_compress^0 == 0 /\ c37^0-c37^post72 == 0), cost: 1
  77: l52 -> l53 : __const_10000^0'=__const_10000^post78, __const_16^0'=__const_16^post78, __const_2147483647^0'=__const_2147483647^post78, __const_256^0'=__const_256^post78, __const_257^0'=__const_257^post78, __const_429496^0'=__const_429496^post78, __const_50^0'=__const_50^post78, __const_53^0'=__const_53^post78, __const_65536^0'=__const_65536^post78, __const_8388607^0'=__const_8388607^post78, __const_8^0'=__const_8^post78, __const_9^0'=__const_9^post78, apsim_bound11113^0'=apsim_bound11113^post78, apsim_incnt^0'=apsim_incnt^post78, bits33^0'=bits33^post78, block_compress^0'=block_compress^post78, bytes_out^0'=bytes_out^post78, c37^0'=c37^post78, c7^0'=c7^post78, checkpoint^0'=checkpoint^post78, clear_flg^0'=clear_flg^post78, code31^0'=code31^post78, count^0'=count^post78, disp9^0'=disp9^post78, ent8^0'=ent8^post78, exit_stat^0'=exit_stat^post78, fcode5^0'=fcode5^post78, free_ent^0'=free_ent^post78, hshift11^0'=hshift11^post78, hsize^0'=hsize^post78, hsize___019^0'=hsize___019^post78, hsize___027^0'=hsize___027^post78, hsize_reg10^0'=hsize_reg10^post78, i21^0'=i21^post78, i29^0'=i29^post78, i3^0'=i3^post78, i41^0'=i41^post78, i45^0'=i45^post78, i6^0'=i6^post78, in_count^0'=in_count^post78, incnt^0'=incnt^post78, m122^0'=m122^post78, m130^0'=m130^post78, maxbits^0'=maxbits^post78, maxcode^0'=maxcode^post78, maxmaxcode^0'=maxmaxcode^post78, n40^0'=n40^post78, n44^0'=n44^post78, n_bits^0'=n_bits^post78, offset^0'=offset^post78, out_count^0'=out_count^post78, r_off32^0'=r_off32^post78, rat26^0'=rat26^post78, ratio^0'=ratio^post78, ret_getbyte18^0'=ret_getbyte18^post78, ret_getbyte25^0'=ret_getbyte25^post78, seed2^0'=seed2^post78, tabort4^0'=tabort4^post78, tmp12^0'=tmp12^post78, tmp___014^0'=tmp___014^post78, tmp___017^0'=tmp___017^post78, tmp___024^0'=tmp___024^post78, tmp___115^0'=tmp___115^post78, (0 == 0 /\ tmp___115^0-tmp___115^post78 == 0 /\ __const_50^0-__const_50^post78 == 0 /\ bits33^0-bits33^post78 == 0 /\ -__const_8^post78+__const_8^0 == 0 /\ -apsim_bound11113^post78+apsim_bound11113^0 == 0 /\ -hsize___027^post78+hsize___027^0 == 0 /\ tmp___014^0-tmp___014^post78 == 0 /\ -hsize_reg10^post78+hsize_reg10^0 == 0 /\ n44^0-n44^post78 == 0 /\ hshift11^0-hshift11^post78 == 0 /\ apsim_incnt^0-apsim_incnt^post78 == 0 /\ -hsize^post78+hsize^0 == 0 /\ -__const_429496^post78+__const_429496^0 == 0 /\ __const_53^0-__const_53^post78 == 0 /\ -__const_2147483647^post78+__const_2147483647^0 == 0 /\ -i41^post78+i41^0 == 0 /\ -__const_10000^post78+__const_10000^0 == 0 /\ -n_bits^post78+n_bits^0 == 0 /\ free_ent^0-free_ent^post78 == 0 /\ ret_getbyte25^0-ret_getbyte25^post78 == 0 /\ c37^0-c37^post78 == 0 /\ -incnt^post78+incnt^0 == 0 /\ -__const_65536^post78+__const_65536^0 == 0 /\ -count^post78+count^0 == 0 /\ -fcode5^post78+fcode5^0 == 0 /\ code31^0-code31^post78 == 0 /\ -seed2^post78+seed2^0 == 0 /\ -maxbits^post78+maxbits^0 == 0 /\ __const_16^0-__const_16^post78 == 0 /\ c7^0-c7^post78 == 0 /\ -i29^post78+i29^0 == 0 /\ -tmp___024^post78+tmp___024^0 == 0 /\ tmp12^0-tmp12^post78 == 0 /\ __const_257^0-__const_257^post78 == 0 /\ -in_count^post78+in_count^0 == 0 /\ -__const_8388607^post78+__const_8388607^0 == 0 /\ -i6^post78+i6^0 == 0 /\ hsize___019^0-hsize___019^post78 == 0 /\ -checkpoint^post78+checkpoint^0 == 0 /\ -clear_flg^post78+clear_flg^0 == 0 /\ -block_compress^post78+block_compress^0 == 0 /\ -bytes_out^post78+bytes_out^0 == 0 /\ -ratio^post78+ratio^0 == 0 /\ -ret_getbyte18^post78+ret_getbyte18^0 == 0 /\ i21^0-i21^post78 == 0 /\ -i3^post78+i3^0 == 0 /\ -__const_256^post78+__const_256^0 == 0 /\ out_count^0-out_count^post78 == 0 /\ -m122^post78+m122^0 == 0 /\ __const_9^0-__const_9^post78 == 0 /\ -tabort4^post78+tabort4^0 == 0 /\ -r_off32^post78+r_off32^0 == 0 /\ m130^0-m130^post78 == 0 /\ offset^0-offset^post78 == 0 /\ i45^0-i45^post78 == 0 /\ -exit_stat^post78+exit_stat^0 == 0 /\ -disp9^post78+disp9^0 == 0 /\ ent8^0-ent8^post78 == 0 /\ maxmaxcode^0-maxmaxcode^post78 == 0 /\ -n40^post78+n40^0 == 0 /\ -maxcode^post78+maxcode^0 == 0 /\ -tmp___017^post78+tmp___017^0 == 0), cost: 1
  78: l53 -> l10 : __const_10000^0'=__const_10000^post79, __const_16^0'=__const_16^post79, __const_2147483647^0'=__const_2147483647^post79, __const_256^0'=__const_256^post79, __const_257^0'=__const_257^post79, __const_429496^0'=__const_429496^post79, __const_50^0'=__const_50^post79, __const_53^0'=__const_53^post79, __const_65536^0'=__const_65536^post79, __const_8388607^0'=__const_8388607^post79, __const_8^0'=__const_8^post79, __const_9^0'=__const_9^post79, apsim_bound11113^0'=apsim_bound11113^post79, apsim_incnt^0'=apsim_incnt^post79, bits33^0'=bits33^post79, block_compress^0'=block_compress^post79, bytes_out^0'=bytes_out^post79, c37^0'=c37^post79, c7^0'=c7^post79, checkpoint^0'=checkpoint^post79, clear_flg^0'=clear_flg^post79, code31^0'=code31^post79, count^0'=count^post79, disp9^0'=disp9^post79, ent8^0'=ent8^post79, exit_stat^0'=exit_stat^post79, fcode5^0'=fcode5^post79, free_ent^0'=free_ent^post79, hshift11^0'=hshift11^post79, hsize^0'=hsize^post79, hsize___019^0'=hsize___019^post79, hsize___027^0'=hsize___027^post79, hsize_reg10^0'=hsize_reg10^post79, i21^0'=i21^post79, i29^0'=i29^post79, i3^0'=i3^post79, i41^0'=i41^post79, i45^0'=i45^post79, i6^0'=i6^post79, in_count^0'=in_count^post79, incnt^0'=incnt^post79, m122^0'=m122^post79, m130^0'=m130^post79, maxbits^0'=maxbits^post79, maxcode^0'=maxcode^post79, maxmaxcode^0'=maxmaxcode^post79, n40^0'=n40^post79, n44^0'=n44^post79, n_bits^0'=n_bits^post79, offset^0'=offset^post79, out_count^0'=out_count^post79, r_off32^0'=r_off32^post79, rat26^0'=rat26^post79, ratio^0'=ratio^post79, ret_getbyte18^0'=ret_getbyte18^post79, ret_getbyte25^0'=ret_getbyte25^post79, seed2^0'=seed2^post79, tabort4^0'=tabort4^post79, tmp12^0'=tmp12^post79, tmp___014^0'=tmp___014^post79, tmp___017^0'=tmp___017^post79, tmp___024^0'=tmp___024^post79, tmp___115^0'=tmp___115^post79, (-seed2^post79+seed2^0 == 0 /\ code31^0-code31^post79 == 0 /\ maxcode^0-maxcode^post79 == 0 /\ offset^0-offset^post79 == 0 /\ -n_bits^post79+n_bits^0 == 0 /\ __const_53^0-__const_53^post79 == 0 /\ 1+m130^post79 == 0 /\ ret_getbyte25^0-ret_getbyte25^post79 == 0 /\ c37^0-c37^post79 == 0 /\ __const_16^0-__const_16^post79 == 0 /\ -i6^post79+i6^0 == 0 /\ ent8^0-ent8^post79 == 0 /\ bits33^0-bits33^post79 == 0 /\ maxmaxcode^0-maxmaxcode^post79 == 0 /\ -count^post79+count^0 == 0 /\ -in_count^post79+in_count^0 == 0 /\ -r_off32^post79+r_off32^0 == 0 /\ -disp9^post79+disp9^0 == 0 /\ -apsim_bound11113^post79+apsim_bound11113^0 == 0 /\ -checkpoint^post79+checkpoint^0 == 0 /\ -hsize___027^post79+__const_16^0+i29^post79 == 0 /\ c7^0-c7^post79 == 0 /\ -exit_stat^post79+exit_stat^0 == 0 /\ -hsize^post79+hsize^0 == 0 /\ tabort4^0-tabort4^post79 == 0 /\ apsim_incnt^0-apsim_incnt^post79 == 0 /\ -maxbits^post79+maxbits^0 == 0 /\ __const_257^0-__const_257^post79 == 0 /\ hshift11^0-hshift11^post79 == 0 /\ -n40^post79+n40^0 == 0 /\ hsize___019^0-hsize___019^post79 == 0 /\ tmp___115^0-tmp___115^post79 == 0 /\ __const_256^0-__const_256^post79 == 0 /\ -m122^post79+m122^0 == 0 /\ __const_50^0-__const_50^post79 == 0 /\ -tmp___014^post79+tmp___014^0 == 0 /\ n44^0-n44^post79 == 0 /\ -__const_429496^post79+__const_429496^0 == 0 /\ -i3^post79+i3^0 == 0 /\ hsize___027^post79-hsize^0 == 0 /\ -i41^post79+i41^0 == 0 /\ free_ent^0-free_ent^post79 == 0 /\ tmp12^0-tmp12^post79 == 0 /\ tmp___017^0-tmp___017^post79 == 0 /\ rat26^0-rat26^post79 == 0 /\ ratio^post79 == 0 /\ -__const_9^post79+__const_9^0 == 0 /\ -__const_65536^post79+__const_65536^0 == 0 /\ -bytes_out^post79+bytes_out^0 == 0 /\ -clear_flg^post79+clear_flg^0 == 0 /\ -ret_getbyte18^post79+ret_getbyte18^0 == 0 /\ i45^0-i45^post79 == 0 /\ -hsize_reg10^post79+hsize_reg10^0 == 0 /\ -tmp___024^post79+tmp___024^0 == 0 /\ rat26^0-ratio^0 <= 0 /\ -fcode5^post79+fcode5^0 == 0 /\ -incnt^post79+incnt^0 == 0 /\ block_compress^0-block_compress^post79 == 0 /\ -__const_8^post79+__const_8^0 == 0 /\ -__const_2147483647^post79+__const_2147483647^0 == 0 /\ -__const_8388607^post79+__const_8388607^0 == 0 /\ out_count^0-out_count^post79 == 0 /\ -i21^post79+i21^0 == 0 /\ __const_10000^0-__const_10000^post79 == 0), cost: 1
  79: l53 -> l35 : __const_10000^0'=__const_10000^post80, __const_16^0'=__const_16^post80, __const_2147483647^0'=__const_2147483647^post80, __const_256^0'=__const_256^post80, __const_257^0'=__const_257^post80, __const_429496^0'=__const_429496^post80, __const_50^0'=__const_50^post80, __const_53^0'=__const_53^post80, __const_65536^0'=__const_65536^post80, __const_8388607^0'=__const_8388607^post80, __const_8^0'=__const_8^post80, __const_9^0'=__const_9^post80, apsim_bound11113^0'=apsim_bound11113^post80, apsim_incnt^0'=apsim_incnt^post80, bits33^0'=bits33^post80, block_compress^0'=block_compress^post80, bytes_out^0'=bytes_out^post80, c37^0'=c37^post80, c7^0'=c7^post80, checkpoint^0'=checkpoint^post80, clear_flg^0'=clear_flg^post80, code31^0'=code31^post80, count^0'=count^post80, disp9^0'=disp9^post80, ent8^0'=ent8^post80, exit_stat^0'=exit_stat^post80, fcode5^0'=fcode5^post80, free_ent^0'=free_ent^post80, hshift11^0'=hshift11^post80, hsize^0'=hsize^post80, hsize___019^0'=hsize___019^post80, hsize___027^0'=hsize___027^post80, hsize_reg10^0'=hsize_reg10^post80, i21^0'=i21^post80, i29^0'=i29^post80, i3^0'=i3^post80, i41^0'=i41^post80, i45^0'=i45^post80, i6^0'=i6^post80, in_count^0'=in_count^post80, incnt^0'=incnt^post80, m122^0'=m122^post80, m130^0'=m130^post80, maxbits^0'=maxbits^post80, maxcode^0'=maxcode^post80, maxmaxcode^0'=maxmaxcode^post80, n40^0'=n40^post80, n44^0'=n44^post80, n_bits^0'=n_bits^post80, offset^0'=offset^post80, out_count^0'=out_count^post80, r_off32^0'=r_off32^post80, rat26^0'=rat26^post80, ratio^0'=ratio^post80, ret_getbyte18^0'=ret_getbyte18^post80, ret_getbyte25^0'=ret_getbyte25^post80, seed2^0'=seed2^post80, tabort4^0'=tabort4^post80, tmp12^0'=tmp12^post80, tmp___014^0'=tmp___014^post80, tmp___017^0'=tmp___017^post80, tmp___024^0'=tmp___024^post80, tmp___115^0'=tmp___115^post80, (__const_256^0-__const_256^post80 == 0 /\ -ent8^post80+ent8^0 == 0 /\ -hsize___019^post80+hsize___019^0 == 0 /\ -hsize^post80+hsize^0 == 0 /\ n44^0-n44^post80 == 0 /\ -n40^post80+n40^0 == 0 /\ -apsim_bound11113^post80+apsim_bound11113^0 == 0 /\ -free_ent^post80+free_ent^0 == 0 /\ -__const_9^post80+__const_9^0 == 0 /\ m130^0-m130^post80 == 0 /\ -__const_8388607^post80+__const_8388607^0 == 0 /\ apsim_incnt^0-apsim_incnt^post80 == 0 /\ bytes_out^0-bytes_out^post80 == 0 /\ count^0-count^post80 == 0 /\ ret_getbyte25^0-ret_getbyte25^post80 == 0 /\ -seed2^post80+seed2^0 == 0 /\ c37^0-c37^post80 == 0 /\ -bits33^post80+bits33^0 == 0 /\ __const_50^0-__const_50^post80 == 0 /\ i6^0-i6^post80 == 0 /\ -i29^post80+i29^0 == 0 /\ -i41^post80+i41^0 == 0 /\ -n_bits^post80+n_bits^0 == 0 /\ __const_257^0-__const_257^post80 == 0 /\ __const_53^0-__const_53^post80 == 0 /\ -__const_429496^post80+__const_429496^0 == 0 /\ m122^0-m122^post80 == 0 /\ hshift11^0-hshift11^post80 == 0 /\ -clear_flg^post80+clear_flg^0 == 0 /\ -block_compress^post80+block_compress^0 == 0 /\ tmp___017^0-tmp___017^post80 == 0 /\ -c7^post80+c7^0 == 0 /\ tmp12^0-tmp12^post80 == 0 /\ 1-rat26^0+ratio^0 <= 0 /\ rat26^0-rat26^post80 == 0 /\ __const_8^0-__const_8^post80 == 0 /\ -__const_2147483647^post80+__const_2147483647^0 == 0 /\ -tmp___024^post80+tmp___024^0 == 0 /\ -maxbits^post80+maxbits^0 == 0 /\ -tmp___115^post80+tmp___115^0 == 0 /\ hsize___027^0-hsize___027^post80 == 0 /\ fcode5^0-fcode5^post80 == 0 /\ -i21^post80+i21^0 == 0 /\ r_off32^0-r_off32^post80 == 0 /\ -incnt^post80+incnt^0 == 0 /\ -rat26^0+ratio^post80 == 0 /\ tabort4^0-tabort4^post80 == 0 /\ i3^0-i3^post80 == 0 /\ ret_getbyte18^0-ret_getbyte18^post80 == 0 /\ checkpoint^0-checkpoint^post80 == 0 /\ out_count^0-out_count^post80 == 0 /\ -tmp___014^post80+tmp___014^0 == 0 /\ __const_16^0-__const_16^post80 == 0 /\ -code31^post80+code31^0 == 0 /\ -offset^post80+offset^0 == 0 /\ -i45^post80+i45^0 == 0 /\ __const_10000^0-__const_10000^post80 == 0 /\ maxmaxcode^0-maxmaxcode^post80 == 0 /\ maxcode^0-maxcode^post80 == 0 /\ hsize_reg10^0-hsize_reg10^post80 == 0 /\ -__const_65536^post80+__const_65536^0 == 0 /\ -in_count^post80+in_count^0 == 0 /\ -disp9^post80+disp9^0 == 0 /\ exit_stat^0-exit_stat^post80 == 0), cost: 1
  80: l54 -> l52 : __const_10000^0'=__const_10000^post81, __const_16^0'=__const_16^post81, __const_2147483647^0'=__const_2147483647^post81, __const_256^0'=__const_256^post81, __const_257^0'=__const_257^post81, __const_429496^0'=__const_429496^post81, __const_50^0'=__const_50^post81, __const_53^0'=__const_53^post81, __const_65536^0'=__const_65536^post81, __const_8388607^0'=__const_8388607^post81, __const_8^0'=__const_8^post81, __const_9^0'=__const_9^post81, apsim_bound11113^0'=apsim_bound11113^post81, apsim_incnt^0'=apsim_incnt^post81, bits33^0'=bits33^post81, block_compress^0'=block_compress^post81, bytes_out^0'=bytes_out^post81, c37^0'=c37^post81, c7^0'=c7^post81, checkpoint^0'=checkpoint^post81, clear_flg^0'=clear_flg^post81, code31^0'=code31^post81, count^0'=count^post81, disp9^0'=disp9^post81, ent8^0'=ent8^post81, exit_stat^0'=exit_stat^post81, fcode5^0'=fcode5^post81, free_ent^0'=free_ent^post81, hshift11^0'=hshift11^post81, hsize^0'=hsize^post81, hsize___019^0'=hsize___019^post81, hsize___027^0'=hsize___027^post81, hsize_reg10^0'=hsize_reg10^post81, i21^0'=i21^post81, i29^0'=i29^post81, i3^0'=i3^post81, i41^0'=i41^post81, i45^0'=i45^post81, i6^0'=i6^post81, in_count^0'=in_count^post81, incnt^0'=incnt^post81, m122^0'=m122^post81, m130^0'=m130^post81, maxbits^0'=maxbits^post81, maxcode^0'=maxcode^post81, maxmaxcode^0'=maxmaxcode^post81, n40^0'=n40^post81, n44^0'=n44^post81, n_bits^0'=n_bits^post81, offset^0'=offset^post81, out_count^0'=out_count^post81, r_off32^0'=r_off32^post81, rat26^0'=rat26^post81, ratio^0'=ratio^post81, ret_getbyte18^0'=ret_getbyte18^post81, ret_getbyte25^0'=ret_getbyte25^post81, seed2^0'=seed2^post81, tabort4^0'=tabort4^post81, tmp12^0'=tmp12^post81, tmp___014^0'=tmp___014^post81, tmp___017^0'=tmp___017^post81, tmp___024^0'=tmp___024^post81, tmp___115^0'=tmp___115^post81, (__const_53^0-__const_53^post81 == 0 /\ -i21^post81+i21^0 == 0 /\ m122^0-m122^post81 == 0 /\ m130^0-m130^post81 == 0 /\ bytes_out^0-bytes_out^post81 == 0 /\ offset^0-offset^post81 == 0 /\ ret_getbyte25^0-ret_getbyte25^post81 == 0 /\ apsim_incnt^0-apsim_incnt^post81 == 0 /\ __const_65536^0-__const_65536^post81 == 0 /\ -r_off32^post81+r_off32^0 == 0 /\ -n_bits^post81+n_bits^0 == 0 /\ -ratio^post81+ratio^0 == 0 /\ __const_16^0-__const_16^post81 == 0 /\ -c37^post81+c37^0 == 0 /\ -bits33^post81+bits33^0 == 0 /\ -c7^post81+c7^0 == 0 /\ __const_257^0-__const_257^post81 == 0 /\ hsize___027^0-hsize___027^post81 == 0 /\ clear_flg^0-clear_flg^post81 == 0 /\ __const_8^0-__const_8^post81 == 0 /\ -disp9^post81+disp9^0 == 0 /\ -__const_256^post81+__const_256^0 == 0 /\ in_count^0-in_count^post81 == 0 /\ -tmp___024^post81+tmp___024^0 == 0 /\ tmp12^0-tmp12^post81 == 0 /\ -block_compress^post81+block_compress^0 == 0 /\ -n40^post81+n40^0 == 0 /\ checkpoint^0-checkpoint^post81 == 0 /\ i6^0-i6^post81 == 0 /\ n44^0-n44^post81 == 0 /\ i3^0-i3^post81 == 0 /\ -maxbits^post81+maxbits^0 == 0 /\ count^0-count^post81 == 0 /\ ret_getbyte18^0-ret_getbyte18^post81 == 0 /\ -tmp___014^post81+tmp___014^0 == 0 /\ -tmp___115^post81+tmp___115^0 == 0 /\ -free_ent^post81+free_ent^0 == 0 /\ -code31^post81+code31^0 == 0 /\ -i45^post81+i45^0 == 0 /\ -tabort4^post81+tabort4^0 == 0 /\ hshift11^0-hshift11^post81 == 0 /\ 1-rat26^0 <= 0 /\ rat26^0-rat26^post81 == 0 /\ -__const_429496^post81+__const_429496^0 == 0 /\ -hsize_reg10^post81+hsize_reg10^0 == 0 /\ -__const_50^post81+__const_50^0 == 0 /\ -incnt^post81+incnt^0 == 0 /\ -hsize___019^post81+hsize___019^0 == 0 /\ __const_9^0-__const_9^post81 == 0 /\ -__const_2147483647^post81+__const_2147483647^0 == 0 /\ exit_stat^0-exit_stat^post81 == 0 /\ fcode5^0-fcode5^post81 == 0 /\ -ent8^post81+ent8^0 == 0 /\ -apsim_bound11113^post81+apsim_bound11113^0 == 0 /\ -hsize^post81+hsize^0 == 0 /\ maxcode^0-maxcode^post81 == 0 /\ -__const_8388607^post81+__const_8388607^0 == 0 /\ maxmaxcode^0-maxmaxcode^post81 == 0 /\ tmp___017^0-tmp___017^post81 == 0 /\ -i29^post81+i29^0 == 0 /\ -__const_10000^post81+__const_10000^0 == 0 /\ out_count^0-out_count^post81 == 0 /\ -i41^post81+i41^0 == 0 /\ -seed2^post81+seed2^0 == 0), cost: 1
  81: l54 -> l52 : __const_10000^0'=__const_10000^post82, __const_16^0'=__const_16^post82, __const_2147483647^0'=__const_2147483647^post82, __const_256^0'=__const_256^post82, __const_257^0'=__const_257^post82, __const_429496^0'=__const_429496^post82, __const_50^0'=__const_50^post82, __const_53^0'=__const_53^post82, __const_65536^0'=__const_65536^post82, __const_8388607^0'=__const_8388607^post82, __const_8^0'=__const_8^post82, __const_9^0'=__const_9^post82, apsim_bound11113^0'=apsim_bound11113^post82, apsim_incnt^0'=apsim_incnt^post82, bits33^0'=bits33^post82, block_compress^0'=block_compress^post82, bytes_out^0'=bytes_out^post82, c37^0'=c37^post82, c7^0'=c7^post82, checkpoint^0'=checkpoint^post82, clear_flg^0'=clear_flg^post82, code31^0'=code31^post82, count^0'=count^post82, disp9^0'=disp9^post82, ent8^0'=ent8^post82, exit_stat^0'=exit_stat^post82, fcode5^0'=fcode5^post82, free_ent^0'=free_ent^post82, hshift11^0'=hshift11^post82, hsize^0'=hsize^post82, hsize___019^0'=hsize___019^post82, hsize___027^0'=hsize___027^post82, hsize_reg10^0'=hsize_reg10^post82, i21^0'=i21^post82, i29^0'=i29^post82, i3^0'=i3^post82, i41^0'=i41^post82, i45^0'=i45^post82, i6^0'=i6^post82, in_count^0'=in_count^post82, incnt^0'=incnt^post82, m122^0'=m122^post82, m130^0'=m130^post82, maxbits^0'=maxbits^post82, maxcode^0'=maxcode^post82, maxmaxcode^0'=maxmaxcode^post82, n40^0'=n40^post82, n44^0'=n44^post82, n_bits^0'=n_bits^post82, offset^0'=offset^post82, out_count^0'=out_count^post82, r_off32^0'=r_off32^post82, rat26^0'=rat26^post82, ratio^0'=ratio^post82, ret_getbyte18^0'=ret_getbyte18^post82, ret_getbyte25^0'=ret_getbyte25^post82, seed2^0'=seed2^post82, tabort4^0'=tabort4^post82, tmp12^0'=tmp12^post82, tmp___014^0'=tmp___014^post82, tmp___017^0'=tmp___017^post82, tmp___024^0'=tmp___024^post82, tmp___115^0'=tmp___115^post82, (-apsim_bound11113^post82+apsim_bound11113^0 == 0 /\ -i45^post82+i45^0 == 0 /\ -i29^post82+i29^0 == 0 /\ -m122^post82+m122^0 == 0 /\ -__const_50^post82+__const_50^0 == 0 /\ maxcode^0-maxcode^post82 == 0 /\ bits33^0-bits33^post82 == 0 /\ -i41^post82+i41^0 == 0 /\ __const_257^0-__const_257^post82 == 0 /\ i6^0-i6^post82 == 0 /\ checkpoint^0-checkpoint^post82 == 0 /\ -incnt^post82+incnt^0 == 0 /\ exit_stat^0-exit_stat^post82 == 0 /\ apsim_incnt^0-apsim_incnt^post82 == 0 /\ out_count^0-out_count^post82 == 0 /\ maxmaxcode^0-maxmaxcode^post82 == 0 /\ __const_65536^0-__const_65536^post82 == 0 /\ -n40^post82+n40^0 == 0 /\ offset^0-offset^post82 == 0 /\ m130^0-m130^post82 == 0 /\ -in_count^post82+in_count^0 == 0 /\ tmp___014^0-tmp___014^post82 == 0 /\ 1+rat26^0 <= 0 /\ -__const_8388607^post82+__const_8388607^0 == 0 /\ -clear_flg^post82+clear_flg^0 == 0 /\ count^0-count^post82 == 0 /\ __const_53^0-__const_53^post82 == 0 /\ i3^0-i3^post82 == 0 /\ tmp12^0-tmp12^post82 == 0 /\ -hsize_reg10^post82+hsize_reg10^0 == 0 /\ hsize___027^0-hsize___027^post82 == 0 /\ -i21^post82+i21^0 == 0 /\ -hsize^post82+hsize^0 == 0 /\ -c7^post82+c7^0 == 0 /\ -ret_getbyte18^post82+ret_getbyte18^0 == 0 /\ -__const_256^post82+__const_256^0 == 0 /\ __const_8^0-__const_8^post82 == 0 /\ __const_429496^0-__const_429496^post82 == 0 /\ -__const_2147483647^post82+__const_2147483647^0 == 0 /\ -r_off32^post82+r_off32^0 == 0 /\ -n_bits^post82+n_bits^0 == 0 /\ -seed2^post82+seed2^0 == 0 /\ tmp___115^0-tmp___115^post82 == 0 /\ -tabort4^post82+tabort4^0 == 0 /\ -__const_10000^post82+__const_10000^0 == 0 /\ -code31^post82+code31^0 == 0 /\ -fcode5^post82+fcode5^0 == 0 /\ -disp9^post82+disp9^0 == 0 /\ -free_ent^post82+free_ent^0 == 0 /\ n44^0-n44^post82 == 0 /\ -tmp___024^post82+tmp___024^0 == 0 /\ -tmp___017^post82+tmp___017^0 == 0 /\ -ent8^post82+ent8^0 == 0 /\ -maxbits^post82+maxbits^0 == 0 /\ bytes_out^0-bytes_out^post82 == 0 /\ hsize___019^0-hsize___019^post82 == 0 /\ hshift11^0-hshift11^post82 == 0 /\ __const_16^0-__const_16^post82 == 0 /\ ret_getbyte25^0-ret_getbyte25^post82 == 0 /\ -block_compress^post82+block_compress^0 == 0 /\ rat26^0-rat26^post82 == 0 /\ __const_9^0-__const_9^post82 == 0 /\ c37^0-c37^post82 == 0 /\ -ratio^post82+ratio^0 == 0), cost: 1
  82: l54 -> l53 : __const_10000^0'=__const_10000^post83, __const_16^0'=__const_16^post83, __const_2147483647^0'=__const_2147483647^post83, __const_256^0'=__const_256^post83, __const_257^0'=__const_257^post83, __const_429496^0'=__const_429496^post83, __const_50^0'=__const_50^post83, __const_53^0'=__const_53^post83, __const_65536^0'=__const_65536^post83, __const_8388607^0'=__const_8388607^post83, __const_8^0'=__const_8^post83, __const_9^0'=__const_9^post83, apsim_bound11113^0'=apsim_bound11113^post83, apsim_incnt^0'=apsim_incnt^post83, bits33^0'=bits33^post83, block_compress^0'=block_compress^post83, bytes_out^0'=bytes_out^post83, c37^0'=c37^post83, c7^0'=c7^post83, checkpoint^0'=checkpoint^post83, clear_flg^0'=clear_flg^post83, code31^0'=code31^post83, count^0'=count^post83, disp9^0'=disp9^post83, ent8^0'=ent8^post83, exit_stat^0'=exit_stat^post83, fcode5^0'=fcode5^post83, free_ent^0'=free_ent^post83, hshift11^0'=hshift11^post83, hsize^0'=hsize^post83, hsize___019^0'=hsize___019^post83, hsize___027^0'=hsize___027^post83, hsize_reg10^0'=hsize_reg10^post83, i21^0'=i21^post83, i29^0'=i29^post83, i3^0'=i3^post83, i41^0'=i41^post83, i45^0'=i45^post83, i6^0'=i6^post83, in_count^0'=in_count^post83, incnt^0'=incnt^post83, m122^0'=m122^post83, m130^0'=m130^post83, maxbits^0'=maxbits^post83, maxcode^0'=maxcode^post83, maxmaxcode^0'=maxmaxcode^post83, n40^0'=n40^post83, n44^0'=n44^post83, n_bits^0'=n_bits^post83, offset^0'=offset^post83, out_count^0'=out_count^post83, r_off32^0'=r_off32^post83, rat26^0'=rat26^post83, ratio^0'=ratio^post83, ret_getbyte18^0'=ret_getbyte18^post83, ret_getbyte25^0'=ret_getbyte25^post83, seed2^0'=seed2^post83, tabort4^0'=tabort4^post83, tmp12^0'=tmp12^post83, tmp___014^0'=tmp___014^post83, tmp___017^0'=tmp___017^post83, tmp___024^0'=tmp___024^post83, tmp___115^0'=tmp___115^post83, (maxmaxcode^0-maxmaxcode^post83 == 0 /\ free_ent^0-free_ent^post83 == 0 /\ -disp9^post83+disp9^0 == 0 /\ -ent8^post83+ent8^0 == 0 /\ -fcode5^post83+fcode5^0 == 0 /\ __const_9^0-__const_9^post83 == 0 /\ -hsize_reg10^post83+hsize_reg10^0 == 0 /\ -tmp___017^post83+tmp___017^0 == 0 /\ -tmp___024^post83+tmp___024^0 == 0 /\ rat26^post83-__const_2147483647^0 == 0 /\ tmp___014^0-tmp___014^post83 == 0 /\ -__const_10000^post83+__const_10000^0 == 0 /\ bits33^0-bits33^post83 == 0 /\ n40^0-n40^post83 == 0 /\ i21^0-i21^post83 == 0 /\ -__const_256^post83+__const_256^0 == 0 /\ -tabort4^post83+tabort4^0 == 0 /\ i3^0-i3^post83 == 0 /\ tmp12^0-tmp12^post83 == 0 /\ checkpoint^0-checkpoint^post83 == 0 /\ __const_257^0-__const_257^post83 == 0 /\ rat26^0 <= 0 /\ apsim_incnt^0-apsim_incnt^post83 == 0 /\ n44^0-n44^post83 == 0 /\ -n_bits^post83+n_bits^0 == 0 /\ out_count^0-out_count^post83 == 0 /\ -i29^post83+i29^0 == 0 /\ -apsim_bound11113^post83+apsim_bound11113^0 == 0 /\ -__const_50^post83+__const_50^0 == 0 /\ offset^0-offset^post83 == 0 /\ __const_65536^0-__const_65536^post83 == 0 /\ exit_stat^0-exit_stat^post83 == 0 /\ count^0-count^post83 == 0 /\ __const_16^0-__const_16^post83 == 0 /\ -rat26^0 <= 0 /\ -clear_flg^post83+clear_flg^0 == 0 /\ -ratio^post83+ratio^0 == 0 /\ -ret_getbyte18^post83+ret_getbyte18^0 == 0 /\ -maxcode^post83+maxcode^0 == 0 /\ -maxbits^post83+maxbits^0 == 0 /\ -c7^post83+c7^0 == 0 /\ -i41^post83+i41^0 == 0 /\ -hsize^post83+hsize^0 == 0 /\ m130^0-m130^post83 == 0 /\ -i45^post83+i45^0 == 0 /\ __const_53^0-__const_53^post83 == 0 /\ -m122^post83+m122^0 == 0 /\ -__const_8388607^post83+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post83 == 0 /\ bytes_out^0-bytes_out^post83 == 0 /\ -incnt^post83+incnt^0 == 0 /\ block_compress^0-block_compress^post83 == 0 /\ tmp___115^0-tmp___115^post83 == 0 /\ ret_getbyte25^0-ret_getbyte25^post83 == 0 /\ -code31^post83+code31^0 == 0 /\ i6^0-i6^post83 == 0 /\ c37^0-c37^post83 == 0 /\ hsize___027^0-hsize___027^post83 == 0 /\ seed2^0-seed2^post83 == 0 /\ hsize___019^0-hsize___019^post83 == 0 /\ __const_429496^0-__const_429496^post83 == 0 /\ __const_2147483647^0-__const_2147483647^post83 == 0 /\ -in_count^post83+in_count^0 == 0 /\ -r_off32^post83+r_off32^0 == 0 /\ hshift11^0-hshift11^post83 == 0), cost: 1
  83: l55 -> l18 : __const_10000^0'=__const_10000^post84, __const_16^0'=__const_16^post84, __const_2147483647^0'=__const_2147483647^post84, __const_256^0'=__const_256^post84, __const_257^0'=__const_257^post84, __const_429496^0'=__const_429496^post84, __const_50^0'=__const_50^post84, __const_53^0'=__const_53^post84, __const_65536^0'=__const_65536^post84, __const_8388607^0'=__const_8388607^post84, __const_8^0'=__const_8^post84, __const_9^0'=__const_9^post84, apsim_bound11113^0'=apsim_bound11113^post84, apsim_incnt^0'=apsim_incnt^post84, bits33^0'=bits33^post84, block_compress^0'=block_compress^post84, bytes_out^0'=bytes_out^post84, c37^0'=c37^post84, c7^0'=c7^post84, checkpoint^0'=checkpoint^post84, clear_flg^0'=clear_flg^post84, code31^0'=code31^post84, count^0'=count^post84, disp9^0'=disp9^post84, ent8^0'=ent8^post84, exit_stat^0'=exit_stat^post84, fcode5^0'=fcode5^post84, free_ent^0'=free_ent^post84, hshift11^0'=hshift11^post84, hsize^0'=hsize^post84, hsize___019^0'=hsize___019^post84, hsize___027^0'=hsize___027^post84, hsize_reg10^0'=hsize_reg10^post84, i21^0'=i21^post84, i29^0'=i29^post84, i3^0'=i3^post84, i41^0'=i41^post84, i45^0'=i45^post84, i6^0'=i6^post84, in_count^0'=in_count^post84, incnt^0'=incnt^post84, m122^0'=m122^post84, m130^0'=m130^post84, maxbits^0'=maxbits^post84, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n40^0'=n40^post84, n44^0'=n44^post84, n_bits^0'=n_bits^post84, offset^0'=offset^post84, out_count^0'=out_count^post84, r_off32^0'=r_off32^post84, rat26^0'=rat26^post84, ratio^0'=ratio^post84, ret_getbyte18^0'=ret_getbyte18^post84, ret_getbyte25^0'=ret_getbyte25^post84, seed2^0'=seed2^post84, tabort4^0'=tabort4^post84, tmp12^0'=tmp12^post84, tmp___014^0'=tmp___014^post84, tmp___017^0'=tmp___017^post84, tmp___024^0'=tmp___024^post84, tmp___115^0'=tmp___115^post84, (0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post84 == 0 /\ n44^0-n44^post84 == 0 /\ -__const_10000^0+checkpoint^post84 == 0 /\ -c7^post84+c7^0 == 0 /\ hsize___027^0-hsize___027^post84 == 0 /\ -c37^post84+c37^0 == 0 /\ -ret_getbyte18^post84+ret_getbyte18^0 == 0 /\ incnt^post84-count^0 == 0 /\ __const_8388607^0-__const_8388607^post84 == 0 /\ -hsize_reg10^post84+hsize_reg10^0 == 0 /\ -hsize^post84+hsize^0 == 0 /\ ratio^post84 == 0 /\ -hsize___019^post84+hsize___019^0 == 0 /\ -n40^post84+n40^0 == 0 /\ -i45^post84+i45^0 == 0 /\ -m122^post84+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post84 == 0 /\ out_count^post84 == 0 /\ exit_stat^0-exit_stat^post84 == 0 /\ -i21^post84+i21^0 == 0 /\ -code31^post84+code31^0 == 0 /\ -__const_9^0+n_bits^post84 == 0 /\ -tabort4^post84+tabort4^0 == 0 /\ tmp12^0-tmp12^post84 == 0 /\ -__const_256^post84+__const_256^0 == 0 /\ __const_9^0-__const_9^post84 == 0 /\ tmp___014^0-tmp___014^post84 == 0 /\ m130^0-m130^post84 == 0 /\ i3^0-i3^post84 == 0 /\ bits33^0-bits33^post84 == 0 /\ -__const_53^0+apsim_incnt^post84 == 0 /\ -r_off32^post84+r_off32^0 == 0 /\ count^0-count^post84 == 0 /\ -__const_10000^post84+__const_10000^0 == 0 /\ -3+bytes_out^post84 == 0 /\ -disp9^post84+disp9^0 == 0 /\ __const_53^0-__const_53^post84 == 0 /\ -tmp___017^post84+tmp___017^0 == 0 /\ -i3^0+__const_50^0 <= 0 /\ -ent8^post84+ent8^0 == 0 /\ -tmp___024^post84+tmp___024^0 == 0 /\ tmp___115^0-tmp___115^post84 == 0 /\ __const_65536^0-__const_65536^post84 == 0 /\ -free_ent^post84+free_ent^0 == 0 /\ i6^post84 == 0 /\ maxbits^post84-__const_16^0 == 0 /\ -__const_429496^post84+__const_429496^0 == 0 /\ __const_16^0-__const_16^post84 == 0 /\ -__const_50^post84+__const_50^0 == 0 /\ hshift11^0-hshift11^post84 == 0 /\ -seed2^post84+seed2^0 == 0 /\ rat26^0-rat26^post84 == 0 /\ __const_257^0-__const_257^post84 == 0 /\ -i29^post84+i29^0 == 0 /\ -1+in_count^post84 == 0 /\ -__const_2147483647^post84+__const_2147483647^0 == 0 /\ -i41^post84+i41^0 == 0 /\ fcode5^0-fcode5^post84 == 0 /\ offset^post84 == 0 /\ __const_8^0-__const_8^post84 == 0 /\ clear_flg^post84 == 0 /\ -block_compress^post84+block_compress^0 == 0), cost: 1
  84: l55 -> l56 : __const_10000^0'=__const_10000^post85, __const_16^0'=__const_16^post85, __const_2147483647^0'=__const_2147483647^post85, __const_256^0'=__const_256^post85, __const_257^0'=__const_257^post85, __const_429496^0'=__const_429496^post85, __const_50^0'=__const_50^post85, __const_53^0'=__const_53^post85, __const_65536^0'=__const_65536^post85, __const_8388607^0'=__const_8388607^post85, __const_8^0'=__const_8^post85, __const_9^0'=__const_9^post85, apsim_bound11113^0'=apsim_bound11113^post85, apsim_incnt^0'=apsim_incnt^post85, bits33^0'=bits33^post85, block_compress^0'=block_compress^post85, bytes_out^0'=bytes_out^post85, c37^0'=c37^post85, c7^0'=c7^post85, checkpoint^0'=checkpoint^post85, clear_flg^0'=clear_flg^post85, code31^0'=code31^post85, count^0'=count^post85, disp9^0'=disp9^post85, ent8^0'=ent8^post85, exit_stat^0'=exit_stat^post85, fcode5^0'=fcode5^post85, free_ent^0'=free_ent^post85, hshift11^0'=hshift11^post85, hsize^0'=hsize^post85, hsize___019^0'=hsize___019^post85, hsize___027^0'=hsize___027^post85, hsize_reg10^0'=hsize_reg10^post85, i21^0'=i21^post85, i29^0'=i29^post85, i3^0'=i3^post85, i41^0'=i41^post85, i45^0'=i45^post85, i6^0'=i6^post85, in_count^0'=in_count^post85, incnt^0'=incnt^post85, m122^0'=m122^post85, m130^0'=m130^post85, maxbits^0'=maxbits^post85, maxcode^0'=maxcode^post85, maxmaxcode^0'=maxmaxcode^post85, n40^0'=n40^post85, n44^0'=n44^post85, n_bits^0'=n_bits^post85, offset^0'=offset^post85, out_count^0'=out_count^post85, r_off32^0'=r_off32^post85, rat26^0'=rat26^post85, ratio^0'=ratio^post85, ret_getbyte18^0'=ret_getbyte18^post85, ret_getbyte25^0'=ret_getbyte25^post85, seed2^0'=seed2^post85, tabort4^0'=tabort4^post85, tmp12^0'=tmp12^post85, tmp___014^0'=tmp___014^post85, tmp___017^0'=tmp___017^post85, tmp___024^0'=tmp___024^post85, tmp___115^0'=tmp___115^post85, (0 == 0 /\ __const_257^0-__const_257^post85 == 0 /\ i21^0-i21^post85 == 0 /\ exit_stat^0-exit_stat^post85 == 0 /\ __const_9^0-__const_9^post85 == 0 /\ rat26^0-rat26^post85 == 0 /\ tmp12^0-tmp12^post85 == 0 /\ checkpoint^0-checkpoint^post85 == 0 /\ offset^0-offset^post85 == 0 /\ i6^0-i6^post85 == 0 /\ maxmaxcode^0-maxmaxcode^post85 == 0 /\ hsize___027^0-hsize___027^post85 == 0 /\ out_count^0-out_count^post85 == 0 /\ -__const_50^post85+__const_50^0 == 0 /\ c37^0-c37^post85 == 0 /\ bits33^0-bits33^post85 == 0 /\ __const_53^0-__const_53^post85 == 0 /\ -incnt^post85+incnt^0 == 0 /\ -ent8^post85+ent8^0 == 0 /\ m130^0-m130^post85 == 0 /\ -apsim_bound11113^post85+apsim_bound11113^0 == 0 /\ -hsize^post85+hsize^0 == 0 /\ __const_65536^0-__const_65536^post85 == 0 /\ -tmp___017^post85+tmp___017^0 == 0 /\ apsim_incnt^0-apsim_incnt^post85 == 0 /\ -__const_8388607^post85+__const_8388607^0 == 0 /\ -i29^post85+i29^0 == 0 /\ n44^0-n44^post85 == 0 /\ tmp___014^0-tmp___014^post85 == 0 /\ -n40^post85+n40^0 == 0 /\ -maxcode^post85+maxcode^0 == 0 /\ -i41^post85+i41^0 == 0 /\ -fcode5^post85+fcode5^0 == 0 /\ __const_429496^0-__const_429496^post85 == 0 /\ -in_count^post85+in_count^0 == 0 /\ -r_off32^post85+r_off32^0 == 0 /\ -ratio^post85+ratio^0 == 0 /\ -ret_getbyte18^post85+ret_getbyte18^0 == 0 /\ count^0-count^post85 == 0 /\ -c7^post85+c7^0 == 0 /\ __const_16^0-__const_16^post85 == 0 /\ __const_8^0-__const_8^post85 == 0 /\ -1-i3^0+i3^post85 == 0 /\ -clear_flg^post85+clear_flg^0 == 0 /\ hshift11^0-hshift11^post85 == 0 /\ -hsize_reg10^post85+hsize_reg10^0 == 0 /\ -n_bits^post85+n_bits^0 == 0 /\ 1+i3^0-__const_50^0 <= 0 /\ -__const_256^post85+__const_256^0 == 0 /\ hsize___019^0-hsize___019^post85 == 0 /\ -disp9^post85+disp9^0 == 0 /\ -m122^post85+m122^0 == 0 /\ __const_2147483647^0-__const_2147483647^post85 == 0 /\ ret_getbyte25^0-ret_getbyte25^post85 == 0 /\ -tmp___024^post85+tmp___024^0 == 0 /\ -__const_10000^post85+__const_10000^0 == 0 /\ block_compress^0-block_compress^post85 == 0 /\ -code31^post85+code31^0 == 0 /\ -maxbits^post85+maxbits^0 == 0 /\ tabort4^post85-i3^0 == 0 /\ -i45^post85+i45^0 == 0 /\ -free_ent^post85+free_ent^0 == 0 /\ -bytes_out^post85+bytes_out^0 == 0 /\ tmp___115^0-tmp___115^post85 == 0), cost: 1
 113: l56 -> l55 : __const_10000^0'=__const_10000^post114, __const_16^0'=__const_16^post114, __const_2147483647^0'=__const_2147483647^post114, __const_256^0'=__const_256^post114, __const_257^0'=__const_257^post114, __const_429496^0'=__const_429496^post114, __const_50^0'=__const_50^post114, __const_53^0'=__const_53^post114, __const_65536^0'=__const_65536^post114, __const_8388607^0'=__const_8388607^post114, __const_8^0'=__const_8^post114, __const_9^0'=__const_9^post114, apsim_bound11113^0'=apsim_bound11113^post114, apsim_incnt^0'=apsim_incnt^post114, bits33^0'=bits33^post114, block_compress^0'=block_compress^post114, bytes_out^0'=bytes_out^post114, c37^0'=c37^post114, c7^0'=c7^post114, checkpoint^0'=checkpoint^post114, clear_flg^0'=clear_flg^post114, code31^0'=code31^post114, count^0'=count^post114, disp9^0'=disp9^post114, ent8^0'=ent8^post114, exit_stat^0'=exit_stat^post114, fcode5^0'=fcode5^post114, free_ent^0'=free_ent^post114, hshift11^0'=hshift11^post114, hsize^0'=hsize^post114, hsize___019^0'=hsize___019^post114, hsize___027^0'=hsize___027^post114, hsize_reg10^0'=hsize_reg10^post114, i21^0'=i21^post114, i29^0'=i29^post114, i3^0'=i3^post114, i41^0'=i41^post114, i45^0'=i45^post114, i6^0'=i6^post114, in_count^0'=in_count^post114, incnt^0'=incnt^post114, m122^0'=m122^post114, m130^0'=m130^post114, maxbits^0'=maxbits^post114, maxcode^0'=maxcode^post114, maxmaxcode^0'=maxmaxcode^post114, n40^0'=n40^post114, n44^0'=n44^post114, n_bits^0'=n_bits^post114, offset^0'=offset^post114, out_count^0'=out_count^post114, r_off32^0'=r_off32^post114, rat26^0'=rat26^post114, ratio^0'=ratio^post114, ret_getbyte18^0'=ret_getbyte18^post114, ret_getbyte25^0'=ret_getbyte25^post114, seed2^0'=seed2^post114, tabort4^0'=tabort4^post114, tmp12^0'=tmp12^post114, tmp___014^0'=tmp___014^post114, tmp___017^0'=tmp___017^post114, tmp___024^0'=tmp___024^post114, tmp___115^0'=tmp___115^post114, (-c7^post114+c7^0 == 0 /\ __const_8^0-__const_8^post114 == 0 /\ -__const_65536^post114+__const_65536^0 == 0 /\ -__const_9^post114+__const_9^0 == 0 /\ -clear_flg^post114+clear_flg^0 == 0 /\ -bytes_out^post114+bytes_out^0 == 0 /\ -block_compress^post114+block_compress^0 == 0 /\ -__const_429496^post114+__const_429496^0 == 0 /\ -maxcode^post114+maxcode^0 == 0 /\ -hsize^post114+hsize^0 == 0 /\ hshift11^0-hshift11^post114 == 0 /\ -m122^post114+m122^0 == 0 /\ __const_50^0-__const_50^post114 == 0 /\ n44^0-n44^post114 == 0 /\ -apsim_bound11113^post114+apsim_bound11113^0 == 0 /\ __const_10000^0-__const_10000^post114 == 0 /\ -__const_8388607^post114+__const_8388607^0 == 0 /\ free_ent^0-free_ent^post114 == 0 /\ -code31^post114+code31^0 == 0 /\ -i45^post114+i45^0 == 0 /\ __const_16^0-__const_16^post114 == 0 /\ tmp___017^0-tmp___017^post114 == 0 /\ maxmaxcode^0-maxmaxcode^post114 == 0 /\ i21^0-i21^post114 == 0 /\ ret_getbyte25^0-ret_getbyte25^post114 == 0 /\ n40^0-n40^post114 == 0 /\ incnt^0-incnt^post114 == 0 /\ -in_count^post114+in_count^0 == 0 /\ -disp9^post114+disp9^0 == 0 /\ -rat26^post114+rat26^0 == 0 /\ c37^0-c37^post114 == 0 /\ -offset^post114+offset^0 == 0 /\ maxbits^0-maxbits^post114 == 0 /\ -__const_2147483647^post114+__const_2147483647^0 == 0 /\ bits33^0-bits33^post114 == 0 /\ i6^0-i6^post114 == 0 /\ -tmp___014^post114+tmp___014^0 == 0 /\ -fcode5^post114+fcode5^0 == 0 /\ ent8^0-ent8^post114 == 0 /\ __const_257^0-__const_257^post114 == 0 /\ -hsize_reg10^post114+hsize_reg10^0 == 0 /\ r_off32^0-r_off32^post114 == 0 /\ tabort4^0-tabort4^post114 == 0 /\ -seed2^post114+seed2^0 == 0 /\ out_count^0-out_count^post114 == 0 /\ hsize___019^0-hsize___019^post114 == 0 /\ apsim_incnt^0-apsim_incnt^post114 == 0 /\ __const_256^0-__const_256^post114 == 0 /\ -tmp___024^post114+tmp___024^0 == 0 /\ exit_stat^0-exit_stat^post114 == 0 /\ -tmp___115^post114+tmp___115^0 == 0 /\ __const_53^0-__const_53^post114 == 0 /\ -i29^post114+i29^0 == 0 /\ -i41^post114+i41^0 == 0 /\ hsize___027^0-hsize___027^post114 == 0 /\ ret_getbyte18^0-ret_getbyte18^post114 == 0 /\ n_bits^0-n_bits^post114 == 0 /\ m130^0-m130^post114 == 0 /\ tmp12^0-tmp12^post114 == 0 /\ checkpoint^0-checkpoint^post114 == 0 /\ i3^0-i3^post114 == 0 /\ -ratio^post114+ratio^0 == 0 /\ count^0-count^post114 == 0), cost: 1
  85: l57 -> l53 : __const_10000^0'=__const_10000^post86, __const_16^0'=__const_16^post86, __const_2147483647^0'=__const_2147483647^post86, __const_256^0'=__const_256^post86, __const_257^0'=__const_257^post86, __const_429496^0'=__const_429496^post86, __const_50^0'=__const_50^post86, __const_53^0'=__const_53^post86, __const_65536^0'=__const_65536^post86, __const_8388607^0'=__const_8388607^post86, __const_8^0'=__const_8^post86, __const_9^0'=__const_9^post86, apsim_bound11113^0'=apsim_bound11113^post86, apsim_incnt^0'=apsim_incnt^post86, bits33^0'=bits33^post86, block_compress^0'=block_compress^post86, bytes_out^0'=bytes_out^post86, c37^0'=c37^post86, c7^0'=c7^post86, checkpoint^0'=checkpoint^post86, clear_flg^0'=clear_flg^post86, code31^0'=code31^post86, count^0'=count^post86, disp9^0'=disp9^post86, ent8^0'=ent8^post86, exit_stat^0'=exit_stat^post86, fcode5^0'=fcode5^post86, free_ent^0'=free_ent^post86, hshift11^0'=hshift11^post86, hsize^0'=hsize^post86, hsize___019^0'=hsize___019^post86, hsize___027^0'=hsize___027^post86, hsize_reg10^0'=hsize_reg10^post86, i21^0'=i21^post86, i29^0'=i29^post86, i3^0'=i3^post86, i41^0'=i41^post86, i45^0'=i45^post86, i6^0'=i6^post86, in_count^0'=in_count^post86, incnt^0'=incnt^post86, m122^0'=m122^post86, m130^0'=m130^post86, maxbits^0'=maxbits^post86, maxcode^0'=maxcode^post86, maxmaxcode^0'=maxmaxcode^post86, n40^0'=n40^post86, n44^0'=n44^post86, n_bits^0'=n_bits^post86, offset^0'=offset^post86, out_count^0'=out_count^post86, r_off32^0'=r_off32^post86, rat26^0'=rat26^post86, ratio^0'=ratio^post86, ret_getbyte18^0'=ret_getbyte18^post86, ret_getbyte25^0'=ret_getbyte25^post86, seed2^0'=seed2^post86, tabort4^0'=tabort4^post86, tmp12^0'=tmp12^post86, tmp___014^0'=tmp___014^post86, tmp___017^0'=tmp___017^post86, tmp___024^0'=tmp___024^post86, tmp___115^0'=tmp___115^post86, (0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post86 == 0 /\ tmp___014^0-tmp___014^post86 == 0 /\ -r_off32^post86+r_off32^0 == 0 /\ c37^0-c37^post86 == 0 /\ -bytes_out^post86+bytes_out^0 == 0 /\ free_ent^0-free_ent^post86 == 0 /\ n40^0-n40^post86 == 0 /\ -code31^post86+code31^0 == 0 /\ hshift11^0-hshift11^post86 == 0 /\ -tabort4^post86+tabort4^0 == 0 /\ i3^0-i3^post86 == 0 /\ tmp12^0-tmp12^post86 == 0 /\ out_count^0-out_count^post86 == 0 /\ c7^0-c7^post86 == 0 /\ -fcode5^post86+fcode5^0 == 0 /\ -disp9^post86+disp9^0 == 0 /\ -tmp___017^post86+tmp___017^0 == 0 /\ -ent8^post86+ent8^0 == 0 /\ -tmp___024^post86+tmp___024^0 == 0 /\ -i29^post86+i29^0 == 0 /\ __const_9^0-__const_9^post86 == 0 /\ bits33^0-bits33^post86 == 0 /\ offset^0-offset^post86 == 0 /\ -__const_8388607^0+in_count^0 <= 0 /\ __const_16^0-__const_16^post86 == 0 /\ i21^0-i21^post86 == 0 /\ exit_stat^0-exit_stat^post86 == 0 /\ apsim_incnt^0-apsim_incnt^post86 == 0 /\ -hsize_reg10^post86+hsize_reg10^0 == 0 /\ maxmaxcode^0-maxmaxcode^post86 == 0 /\ -__const_256^post86+__const_256^0 == 0 /\ -__const_50^post86+__const_50^0 == 0 /\ -m122^post86+m122^0 == 0 /\ m130^0-m130^post86 == 0 /\ hsize___019^0-hsize___019^post86 == 0 /\ -i41^post86+i41^0 == 0 /\ -__const_10000^post86+__const_10000^0 == 0 /\ __const_65536^0-__const_65536^post86 == 0 /\ -n_bits^post86+n_bits^0 == 0 /\ -incnt^post86+incnt^0 == 0 /\ count^0-count^post86 == 0 /\ __const_53^0-__const_53^post86 == 0 /\ -i45^post86+i45^0 == 0 /\ -__const_2147483647^post86+__const_2147483647^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post86 == 0 /\ maxbits^0-maxbits^post86 == 0 /\ n44^0-n44^post86 == 0 /\ -ret_getbyte18^post86+ret_getbyte18^0 == 0 /\ __const_8^0-__const_8^post86 == 0 /\ -in_count^post86+in_count^0 == 0 /\ __const_429496^0-__const_429496^post86 == 0 /\ -__const_8388607^post86+__const_8388607^0 == 0 /\ -maxcode^post86+maxcode^0 == 0 /\ __const_257^0-__const_257^post86 == 0 /\ -clear_flg^post86+clear_flg^0 == 0 /\ checkpoint^0-checkpoint^post86 == 0 /\ block_compress^0-block_compress^post86 == 0 /\ i6^0-i6^post86 == 0 /\ tmp___115^0-tmp___115^post86 == 0 /\ ratio^0-ratio^post86 == 0 /\ -hsize^post86+hsize^0 == 0 /\ seed2^0-seed2^post86 == 0 /\ -hsize___027^post86+hsize___027^0 == 0), cost: 1
  86: l57 -> l54 : __const_10000^0'=__const_10000^post87, __const_16^0'=__const_16^post87, __const_2147483647^0'=__const_2147483647^post87, __const_256^0'=__const_256^post87, __const_257^0'=__const_257^post87, __const_429496^0'=__const_429496^post87, __const_50^0'=__const_50^post87, __const_53^0'=__const_53^post87, __const_65536^0'=__const_65536^post87, __const_8388607^0'=__const_8388607^post87, __const_8^0'=__const_8^post87, __const_9^0'=__const_9^post87, apsim_bound11113^0'=apsim_bound11113^post87, apsim_incnt^0'=apsim_incnt^post87, bits33^0'=bits33^post87, block_compress^0'=block_compress^post87, bytes_out^0'=bytes_out^post87, c37^0'=c37^post87, c7^0'=c7^post87, checkpoint^0'=checkpoint^post87, clear_flg^0'=clear_flg^post87, code31^0'=code31^post87, count^0'=count^post87, disp9^0'=disp9^post87, ent8^0'=ent8^post87, exit_stat^0'=exit_stat^post87, fcode5^0'=fcode5^post87, free_ent^0'=free_ent^post87, hshift11^0'=hshift11^post87, hsize^0'=hsize^post87, hsize___019^0'=hsize___019^post87, hsize___027^0'=hsize___027^post87, hsize_reg10^0'=hsize_reg10^post87, i21^0'=i21^post87, i29^0'=i29^post87, i3^0'=i3^post87, i41^0'=i41^post87, i45^0'=i45^post87, i6^0'=i6^post87, in_count^0'=in_count^post87, incnt^0'=incnt^post87, m122^0'=m122^post87, m130^0'=m130^post87, maxbits^0'=maxbits^post87, maxcode^0'=maxcode^post87, maxmaxcode^0'=maxmaxcode^post87, n40^0'=n40^post87, n44^0'=n44^post87, n_bits^0'=n_bits^post87, offset^0'=offset^post87, out_count^0'=out_count^post87, r_off32^0'=r_off32^post87, rat26^0'=rat26^post87, ratio^0'=ratio^post87, ret_getbyte18^0'=ret_getbyte18^post87, ret_getbyte25^0'=ret_getbyte25^post87, seed2^0'=seed2^post87, tabort4^0'=tabort4^post87, tmp12^0'=tmp12^post87, tmp___014^0'=tmp___014^post87, tmp___017^0'=tmp___017^post87, tmp___024^0'=tmp___024^post87, tmp___115^0'=tmp___115^post87, (0 == 0 /\ __const_8388607^0-__const_8388607^post87 == 0 /\ tmp___115^0-tmp___115^post87 == 0 /\ __const_16^0-__const_16^post87 == 0 /\ -clear_flg^post87+clear_flg^0 == 0 /\ -hsize_reg10^post87+hsize_reg10^0 == 0 /\ -hsize___027^post87+hsize___027^0 == 0 /\ 1+__const_8388607^0-in_count^0 <= 0 /\ -ret_getbyte18^post87+ret_getbyte18^0 == 0 /\ -maxcode^post87+maxcode^0 == 0 /\ -i45^post87+i45^0 == 0 /\ -i41^post87+i41^0 == 0 /\ -hsize^post87+hsize^0 == 0 /\ -__const_10000^post87+__const_10000^0 == 0 /\ -m122^post87+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post87 == 0 /\ -__const_2147483647^post87+__const_2147483647^0 == 0 /\ hshift11^0-hshift11^post87 == 0 /\ -incnt^post87+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post87 == 0 /\ free_ent^0-free_ent^post87 == 0 /\ __const_9^0-__const_9^post87 == 0 /\ out_count^0-out_count^post87 == 0 /\ __const_256^0-__const_256^post87 == 0 /\ -i29^post87+i29^0 == 0 /\ code31^0-code31^post87 == 0 /\ -__const_429496^post87+__const_429496^0 == 0 /\ bits33^0-bits33^post87 == 0 /\ -in_count^post87+in_count^0 == 0 /\ n40^0-n40^post87 == 0 /\ offset^0-offset^post87 == 0 /\ -n_bits^post87+n_bits^0 == 0 /\ maxbits^0-maxbits^post87 == 0 /\ -count^post87+count^0 == 0 /\ -fcode5^post87+fcode5^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post87 == 0 /\ apsim_incnt^0-apsim_incnt^post87 == 0 /\ -disp9^post87+disp9^0 == 0 /\ -tmp___017^post87+tmp___017^0 == 0 /\ i6^0-i6^post87 == 0 /\ -tmp___024^post87+tmp___024^0 == 0 /\ ent8^0-ent8^post87 == 0 /\ i21^0-i21^post87 == 0 /\ -__const_8^post87+__const_8^0 == 0 /\ -block_compress^post87+block_compress^0 == 0 /\ -checkpoint^post87+checkpoint^0 == 0 /\ -bytes_out^post87+bytes_out^0 == 0 /\ -tabort4^post87+tabort4^0 == 0 /\ exit_stat^0-exit_stat^post87 == 0 /\ hsize___019^0-hsize___019^post87 == 0 /\ -seed2^post87+seed2^0 == 0 /\ -i3^post87+i3^0 == 0 /\ c37^0-c37^post87 == 0 /\ tmp___014^0-tmp___014^post87 == 0 /\ ratio^0-ratio^post87 == 0 /\ -n44^post87+n44^0 == 0 /\ -r_off32^post87+r_off32^0 == 0 /\ m130^0-m130^post87 == 0 /\ -__const_50^post87+__const_50^0 == 0 /\ __const_53^0-__const_53^post87 == 0 /\ tmp12^0-tmp12^post87 == 0 /\ c7^0-c7^post87 == 0 /\ -__const_65536^post87+__const_65536^0 == 0 /\ __const_257^0-__const_257^post87 == 0), cost: 1
  87: l58 -> l57 : __const_10000^0'=__const_10000^post88, __const_16^0'=__const_16^post88, __const_2147483647^0'=__const_2147483647^post88, __const_256^0'=__const_256^post88, __const_257^0'=__const_257^post88, __const_429496^0'=__const_429496^post88, __const_50^0'=__const_50^post88, __const_53^0'=__const_53^post88, __const_65536^0'=__const_65536^post88, __const_8388607^0'=__const_8388607^post88, __const_8^0'=__const_8^post88, __const_9^0'=__const_9^post88, apsim_bound11113^0'=apsim_bound11113^post88, apsim_incnt^0'=apsim_incnt^post88, bits33^0'=bits33^post88, block_compress^0'=block_compress^post88, bytes_out^0'=bytes_out^post88, c37^0'=c37^post88, c7^0'=c7^post88, checkpoint^0'=checkpoint^post88, clear_flg^0'=clear_flg^post88, code31^0'=code31^post88, count^0'=count^post88, disp9^0'=disp9^post88, ent8^0'=ent8^post88, exit_stat^0'=exit_stat^post88, fcode5^0'=fcode5^post88, free_ent^0'=free_ent^post88, hshift11^0'=hshift11^post88, hsize^0'=hsize^post88, hsize___019^0'=hsize___019^post88, hsize___027^0'=hsize___027^post88, hsize_reg10^0'=hsize_reg10^post88, i21^0'=i21^post88, i29^0'=i29^post88, i3^0'=i3^post88, i41^0'=i41^post88, i45^0'=i45^post88, i6^0'=i6^post88, in_count^0'=in_count^post88, incnt^0'=incnt^post88, m122^0'=m122^post88, m130^0'=m130^post88, maxbits^0'=maxbits^post88, maxcode^0'=maxcode^post88, maxmaxcode^0'=maxmaxcode^post88, n40^0'=n40^post88, n44^0'=n44^post88, n_bits^0'=n_bits^post88, offset^0'=offset^post88, out_count^0'=out_count^post88, r_off32^0'=r_off32^post88, rat26^0'=rat26^post88, ratio^0'=ratio^post88, ret_getbyte18^0'=ret_getbyte18^post88, ret_getbyte25^0'=ret_getbyte25^post88, seed2^0'=seed2^post88, tabort4^0'=tabort4^post88, tmp12^0'=tmp12^post88, tmp___014^0'=tmp___014^post88, tmp___017^0'=tmp___017^post88, tmp___024^0'=tmp___024^post88, tmp___115^0'=tmp___115^post88, (maxcode^0-maxcode^post88 == 0 /\ -apsim_incnt^post88+apsim_incnt^0 == 0 /\ offset^0-offset^post88 == 0 /\ tabort4^0-tabort4^post88 == 0 /\ -__const_8^post88+__const_8^0 == 0 /\ exit_stat^0-exit_stat^post88 == 0 /\ tmp___017^0-tmp___017^post88 == 0 /\ hsize___027^0-hsize___027^post88 == 0 /\ __const_50^0-__const_50^post88 == 0 /\ __const_16^0-__const_16^post88 == 0 /\ -r_off32^post88+r_off32^0 == 0 /\ -n_bits^post88+n_bits^0 == 0 /\ -__const_10000^0-in_count^0+checkpoint^post88 == 0 /\ -__const_429496^post88+__const_429496^0 == 0 /\ maxmaxcode^0-maxmaxcode^post88 == 0 /\ __const_257^0-__const_257^post88 == 0 /\ -tmp___115^post88+tmp___115^0 == 0 /\ m130^0-m130^post88 == 0 /\ -__const_65536^post88+__const_65536^0 == 0 /\ -n40^post88+n40^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post88 == 0 /\ -fcode5^post88+fcode5^0 == 0 /\ n44^0-n44^post88 == 0 /\ -hsize^post88+hsize^0 == 0 /\ -incnt^post88+incnt^0 == 0 /\ __const_256^0-__const_256^post88 == 0 /\ tmp12^0-tmp12^post88 == 0 /\ ent8^0-ent8^post88 == 0 /\ apsim_bound11113^0-apsim_bound11113^post88 == 0 /\ -block_compress^post88+block_compress^0 == 0 /\ -i29^post88+i29^0 == 0 /\ -seed2^post88+seed2^0 == 0 /\ -i3^post88+i3^0 == 0 /\ i45^0-i45^post88 == 0 /\ -i41^post88+i41^0 == 0 /\ -__const_8388607^post88+__const_8388607^0 == 0 /\ -ret_getbyte25^post88+ret_getbyte25^0 == 0 /\ c37^0-c37^post88 == 0 /\ rat26^0-rat26^post88 == 0 /\ -i6^post88+i6^0 == 0 /\ bits33^0-bits33^post88 == 0 /\ -count^post88+count^0 == 0 /\ -in_count^post88+in_count^0 == 0 /\ -disp9^post88+disp9^0 == 0 /\ __const_53^0-__const_53^post88 == 0 /\ code31^0-code31^post88 == 0 /\ -tmp___024^post88+tmp___024^0 == 0 /\ -ratio^post88+ratio^0 == 0 /\ -c7^post88+c7^0 == 0 /\ -__const_9^post88+__const_9^0 == 0 /\ -maxbits^post88+maxbits^0 == 0 /\ m122^0-m122^post88 == 0 /\ hshift11^0-hshift11^post88 == 0 /\ -clear_flg^post88+clear_flg^0 == 0 /\ -hsize_reg10^post88+hsize_reg10^0 == 0 /\ free_ent^0-free_ent^post88 == 0 /\ -hsize___019^post88+hsize___019^0 == 0 /\ -i21^post88+i21^0 == 0 /\ -__const_2147483647^post88+__const_2147483647^0 == 0 /\ __const_10000^0-__const_10000^post88 == 0 /\ -tmp___014^post88+tmp___014^0 == 0 /\ out_count^0-out_count^post88 == 0 /\ -bytes_out^post88+bytes_out^0 == 0), cost: 1
  88: l59 -> l1 : __const_10000^0'=__const_10000^post89, __const_16^0'=__const_16^post89, __const_2147483647^0'=__const_2147483647^post89, __const_256^0'=__const_256^post89, __const_257^0'=__const_257^post89, __const_429496^0'=__const_429496^post89, __const_50^0'=__const_50^post89, __const_53^0'=__const_53^post89, __const_65536^0'=__const_65536^post89, __const_8388607^0'=__const_8388607^post89, __const_8^0'=__const_8^post89, __const_9^0'=__const_9^post89, apsim_bound11113^0'=apsim_bound11113^post89, apsim_incnt^0'=apsim_incnt^post89, bits33^0'=bits33^post89, block_compress^0'=block_compress^post89, bytes_out^0'=bytes_out^post89, c37^0'=c37^post89, c7^0'=c7^post89, checkpoint^0'=checkpoint^post89, clear_flg^0'=clear_flg^post89, code31^0'=code31^post89, count^0'=count^post89, disp9^0'=disp9^post89, ent8^0'=ent8^post89, exit_stat^0'=exit_stat^post89, fcode5^0'=fcode5^post89, free_ent^0'=free_ent^post89, hshift11^0'=hshift11^post89, hsize^0'=hsize^post89, hsize___019^0'=hsize___019^post89, hsize___027^0'=hsize___027^post89, hsize_reg10^0'=hsize_reg10^post89, i21^0'=i21^post89, i29^0'=i29^post89, i3^0'=i3^post89, i41^0'=i41^post89, i45^0'=i45^post89, i6^0'=i6^post89, in_count^0'=in_count^post89, incnt^0'=incnt^post89, m122^0'=m122^post89, m130^0'=m130^post89, maxbits^0'=maxbits^post89, maxcode^0'=maxcode^post89, maxmaxcode^0'=maxmaxcode^post89, n40^0'=n40^post89, n44^0'=n44^post89, n_bits^0'=n_bits^post89, offset^0'=offset^post89, out_count^0'=out_count^post89, r_off32^0'=r_off32^post89, rat26^0'=rat26^post89, ratio^0'=ratio^post89, ret_getbyte18^0'=ret_getbyte18^post89, ret_getbyte25^0'=ret_getbyte25^post89, seed2^0'=seed2^post89, tabort4^0'=tabort4^post89, tmp12^0'=tmp12^post89, tmp___014^0'=tmp___014^post89, tmp___017^0'=tmp___017^post89, tmp___024^0'=tmp___024^post89, tmp___115^0'=tmp___115^post89, (tmp___017^0-tmp___017^post89 == 0 /\ maxmaxcode^0-maxmaxcode^post89 == 0 /\ ret_getbyte18^0-ret_getbyte18^post89 == 0 /\ r_off32^0-r_off32^post89 == 0 /\ -disp9^post89+disp9^0 == 0 /\ -ent8^post89+ent8^0 == 0 /\ free_ent^0-free_ent^post89 == 0 /\ -ret_getbyte25^post89+ret_getbyte25^0 == 0 /\ tmp___024^0-tmp___024^post89 == 0 /\ -tmp___115^post89+tmp___115^0 == 0 /\ -tmp___014^post89+tmp___014^0 == 0 /\ -i45^post89+i45^0 == 0 /\ -i41^post89+i41^0 == 0 /\ out_count^0-out_count^post89 == 0 /\ -tmp12^post89+tmp12^0 == 0 /\ -c37^post89+c37^0 == 0 /\ -block_compress^post89+block_compress^0 == 0 /\ -i21^post89+i21^0 == 0 /\ -fcode5^post89+fcode5^0 == 0 /\ -c7^post89+c7^0 == 0 /\ -seed2^post89+seed2^0 == 0 /\ __const_16^0-__const_16^post89 == 0 /\ n44^0-n44^post89 == 0 /\ __const_10000^0-__const_10000^post89 == 0 /\ -code31^post89+code31^0 == 0 /\ clear_flg^0-clear_flg^post89 == 0 /\ -__const_429496^post89+__const_429496^0 == 0 /\ checkpoint^0-checkpoint^post89 == 0 /\ -__const_65536^post89+__const_65536^0 == 0 /\ maxcode^0-maxcode^post89 == 0 /\ exit_stat^0-exit_stat^post89 == 0 /\ apsim_incnt^0-apsim_incnt^post89 == 0 /\ -hsize___019^post89+hsize___019^0 == 0 /\ count^0-count^post89 == 0 /\ -hsize_reg10^post89+hsize_reg10^0 == 0 /\ __const_50^0-__const_50^post89 == 0 /\ -incnt^post89+incnt^0 == 0 /\ -offset^post89+offset^0 == 0 /\ -apsim_bound11113^post89+apsim_bound11113^0 == 0 /\ __const_256^0-__const_256^post89 == 0 /\ -hsize^post89+hsize^0 == 0 /\ -__const_9^post89+__const_9^0 == 0 /\ -__const_8388607^post89+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post89 == 0 /\ -__const_2147483647^post89+__const_2147483647^0 == 0 /\ -maxbits^post89+maxbits^0 == 0 /\ __const_8^0-__const_8^post89 == 0 /\ m130^0-m130^post89 == 0 /\ -block_compress^0 <= 0 /\ -n40^post89+n40^0 == 0 /\ i6^0-i6^post89 == 0 /\ tabort4^0-tabort4^post89 == 0 /\ i3^0-i3^post89 == 0 /\ hsize___027^0-hsize___027^post89 == 0 /\ -bits33^post89+bits33^0 == 0 /\ -i29^post89+i29^0 == 0 /\ block_compress^0 <= 0 /\ -in_count^post89+in_count^0 == 0 /\ bytes_out^0-bytes_out^post89 == 0 /\ hshift11^0-hshift11^post89 == 0 /\ m122^0-m122^post89 == 0 /\ -ratio^post89+ratio^0 == 0 /\ -n_bits^post89+n_bits^0 == 0 /\ rat26^0-rat26^post89 == 0 /\ __const_257^0-__const_257^post89 == 0), cost: 1
  89: l59 -> l58 : __const_10000^0'=__const_10000^post90, __const_16^0'=__const_16^post90, __const_2147483647^0'=__const_2147483647^post90, __const_256^0'=__const_256^post90, __const_257^0'=__const_257^post90, __const_429496^0'=__const_429496^post90, __const_50^0'=__const_50^post90, __const_53^0'=__const_53^post90, __const_65536^0'=__const_65536^post90, __const_8388607^0'=__const_8388607^post90, __const_8^0'=__const_8^post90, __const_9^0'=__const_9^post90, apsim_bound11113^0'=apsim_bound11113^post90, apsim_incnt^0'=apsim_incnt^post90, bits33^0'=bits33^post90, block_compress^0'=block_compress^post90, bytes_out^0'=bytes_out^post90, c37^0'=c37^post90, c7^0'=c7^post90, checkpoint^0'=checkpoint^post90, clear_flg^0'=clear_flg^post90, code31^0'=code31^post90, count^0'=count^post90, disp9^0'=disp9^post90, ent8^0'=ent8^post90, exit_stat^0'=exit_stat^post90, fcode5^0'=fcode5^post90, free_ent^0'=free_ent^post90, hshift11^0'=hshift11^post90, hsize^0'=hsize^post90, hsize___019^0'=hsize___019^post90, hsize___027^0'=hsize___027^post90, hsize_reg10^0'=hsize_reg10^post90, i21^0'=i21^post90, i29^0'=i29^post90, i3^0'=i3^post90, i41^0'=i41^post90, i45^0'=i45^post90, i6^0'=i6^post90, in_count^0'=in_count^post90, incnt^0'=incnt^post90, m122^0'=m122^post90, m130^0'=m130^post90, maxbits^0'=maxbits^post90, maxcode^0'=maxcode^post90, maxmaxcode^0'=maxmaxcode^post90, n40^0'=n40^post90, n44^0'=n44^post90, n_bits^0'=n_bits^post90, offset^0'=offset^post90, out_count^0'=out_count^post90, r_off32^0'=r_off32^post90, rat26^0'=rat26^post90, ratio^0'=ratio^post90, ret_getbyte18^0'=ret_getbyte18^post90, ret_getbyte25^0'=ret_getbyte25^post90, seed2^0'=seed2^post90, tabort4^0'=tabort4^post90, tmp12^0'=tmp12^post90, tmp___014^0'=tmp___014^post90, tmp___017^0'=tmp___017^post90, tmp___024^0'=tmp___024^post90, tmp___115^0'=tmp___115^post90, (-n40^post90+n40^0 == 0 /\ -maxbits^post90+maxbits^0 == 0 /\ -m130^post90+m130^0 == 0 /\ -in_count^post90+in_count^0 == 0 /\ -__const_8388607^post90+__const_8388607^0 == 0 /\ checkpoint^0-checkpoint^post90 == 0 /\ r_off32^0-r_off32^post90 == 0 /\ __const_50^0-__const_50^post90 == 0 /\ hshift11^0-hshift11^post90 == 0 /\ -__const_429496^post90+__const_429496^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post90 == 0 /\ -hsize___019^post90+hsize___019^0 == 0 /\ hsize^0-hsize^post90 == 0 /\ out_count^0-out_count^post90 == 0 /\ -__const_9^post90+__const_9^0 == 0 /\ exit_stat^0-exit_stat^post90 == 0 /\ -clear_flg^post90+clear_flg^0 == 0 /\ -tmp___014^post90+tmp___014^0 == 0 /\ -ret_getbyte25^post90+ret_getbyte25^0 == 0 /\ -__const_10000^post90+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post90 == 0 /\ -__const_2147483647^post90+__const_2147483647^0 == 0 /\ -c7^post90+c7^0 == 0 /\ -free_ent^post90+free_ent^0 == 0 /\ -disp9^post90+disp9^0 == 0 /\ __const_16^0-__const_16^post90 == 0 /\ -i29^post90+i29^0 == 0 /\ -tmp___024^post90+tmp___024^0 == 0 /\ tmp___017^0-tmp___017^post90 == 0 /\ -rat26^post90+rat26^0 == 0 /\ -i41^post90+i41^0 == 0 /\ m122^0-m122^post90 == 0 /\ -code31^post90+code31^0 == 0 /\ apsim_incnt^0-apsim_incnt^post90 == 0 /\ __const_257^0-__const_257^post90 == 0 /\ -ratio^post90+ratio^0 == 0 /\ hsize___027^0-hsize___027^post90 == 0 /\ n44^0-n44^post90 == 0 /\ -i21^post90+i21^0 == 0 /\ count^0-count^post90 == 0 /\ i3^0-i3^post90 == 0 /\ maxcode^0-maxcode^post90 == 0 /\ __const_256^0-__const_256^post90 == 0 /\ 1-block_compress^0 <= 0 /\ n_bits^0-n_bits^post90 == 0 /\ -bits33^post90+bits33^0 == 0 /\ i6^0-i6^post90 == 0 /\ -apsim_bound11113^post90+apsim_bound11113^0 == 0 /\ tmp12^0-tmp12^post90 == 0 /\ -__const_65536^post90+__const_65536^0 == 0 /\ -block_compress^post90+block_compress^0 == 0 /\ -i45^post90+i45^0 == 0 /\ -offset^post90+offset^0 == 0 /\ -seed2^post90+seed2^0 == 0 /\ -incnt^post90+incnt^0 == 0 /\ bytes_out^0-bytes_out^post90 == 0 /\ __const_8^0-__const_8^post90 == 0 /\ c37^0-c37^post90 == 0 /\ -fcode5^post90+fcode5^0 == 0 /\ hsize_reg10^0-hsize_reg10^post90 == 0 /\ __const_53^0-__const_53^post90 == 0 /\ -tmp___115^post90+tmp___115^0 == 0 /\ tabort4^0-tabort4^post90 == 0 /\ -ent8^post90+ent8^0 == 0), cost: 1
  90: l59 -> l58 : __const_10000^0'=__const_10000^post91, __const_16^0'=__const_16^post91, __const_2147483647^0'=__const_2147483647^post91, __const_256^0'=__const_256^post91, __const_257^0'=__const_257^post91, __const_429496^0'=__const_429496^post91, __const_50^0'=__const_50^post91, __const_53^0'=__const_53^post91, __const_65536^0'=__const_65536^post91, __const_8388607^0'=__const_8388607^post91, __const_8^0'=__const_8^post91, __const_9^0'=__const_9^post91, apsim_bound11113^0'=apsim_bound11113^post91, apsim_incnt^0'=apsim_incnt^post91, bits33^0'=bits33^post91, block_compress^0'=block_compress^post91, bytes_out^0'=bytes_out^post91, c37^0'=c37^post91, c7^0'=c7^post91, checkpoint^0'=checkpoint^post91, clear_flg^0'=clear_flg^post91, code31^0'=code31^post91, count^0'=count^post91, disp9^0'=disp9^post91, ent8^0'=ent8^post91, exit_stat^0'=exit_stat^post91, fcode5^0'=fcode5^post91, free_ent^0'=free_ent^post91, hshift11^0'=hshift11^post91, hsize^0'=hsize^post91, hsize___019^0'=hsize___019^post91, hsize___027^0'=hsize___027^post91, hsize_reg10^0'=hsize_reg10^post91, i21^0'=i21^post91, i29^0'=i29^post91, i3^0'=i3^post91, i41^0'=i41^post91, i45^0'=i45^post91, i6^0'=i6^post91, in_count^0'=in_count^post91, incnt^0'=incnt^post91, m122^0'=m122^post91, m130^0'=m130^post91, maxbits^0'=maxbits^post91, maxcode^0'=maxcode^post91, maxmaxcode^0'=maxmaxcode^post91, n40^0'=n40^post91, n44^0'=n44^post91, n_bits^0'=n_bits^post91, offset^0'=offset^post91, out_count^0'=out_count^post91, r_off32^0'=r_off32^post91, rat26^0'=rat26^post91, ratio^0'=ratio^post91, ret_getbyte18^0'=ret_getbyte18^post91, ret_getbyte25^0'=ret_getbyte25^post91, seed2^0'=seed2^post91, tabort4^0'=tabort4^post91, tmp12^0'=tmp12^post91, tmp___014^0'=tmp___014^post91, tmp___017^0'=tmp___017^post91, tmp___024^0'=tmp___024^post91, tmp___115^0'=tmp___115^post91, (-__const_10000^post91+__const_10000^0 == 0 /\ __const_53^0-__const_53^post91 == 0 /\ __const_8^0-__const_8^post91 == 0 /\ -disp9^post91+disp9^0 == 0 /\ __const_16^0-__const_16^post91 == 0 /\ -offset^post91+offset^0 == 0 /\ -rat26^post91+rat26^0 == 0 /\ -ratio^post91+ratio^0 == 0 /\ -apsim_bound11113^post91+apsim_bound11113^0 == 0 /\ -__const_9^post91+__const_9^0 == 0 /\ -code31^post91+code31^0 == 0 /\ -__const_65536^post91+__const_65536^0 == 0 /\ -ent8^post91+ent8^0 == 0 /\ r_off32^0-r_off32^post91 == 0 /\ -tmp___115^post91+tmp___115^0 == 0 /\ i6^0-i6^post91 == 0 /\ in_count^0-in_count^post91 == 0 /\ m122^0-m122^post91 == 0 /\ __const_257^0-__const_257^post91 == 0 /\ hshift11^0-hshift11^post91 == 0 /\ -m130^post91+m130^0 == 0 /\ -n40^post91+n40^0 == 0 /\ -ret_getbyte25^post91+ret_getbyte25^0 == 0 /\ -block_compress^post91+block_compress^0 == 0 /\ -hsize^post91+hsize^0 == 0 /\ out_count^0-out_count^post91 == 0 /\ -__const_8388607^post91+__const_8388607^0 == 0 /\ 1+block_compress^0 <= 0 /\ -__const_256^post91+__const_256^0 == 0 /\ -incnt^post91+incnt^0 == 0 /\ hsize_reg10^0-hsize_reg10^post91 == 0 /\ bits33^0-bits33^post91 == 0 /\ -seed2^post91+seed2^0 == 0 /\ bytes_out^0-bytes_out^post91 == 0 /\ -i29^post91+i29^0 == 0 /\ fcode5^0-fcode5^post91 == 0 /\ count^0-count^post91 == 0 /\ n_bits^0-n_bits^post91 == 0 /\ -__const_429496^post91+__const_429496^0 == 0 /\ -i45^post91+i45^0 == 0 /\ -i41^post91+i41^0 == 0 /\ i3^0-i3^post91 == 0 /\ tmp12^0-tmp12^post91 == 0 /\ maxcode^0-maxcode^post91 == 0 /\ exit_stat^0-exit_stat^post91 == 0 /\ -__const_50^post91+__const_50^0 == 0 /\ tmp___017^0-tmp___017^post91 == 0 /\ maxmaxcode^0-maxmaxcode^post91 == 0 /\ apsim_incnt^0-apsim_incnt^post91 == 0 /\ tabort4^0-tabort4^post91 == 0 /\ c37^0-c37^post91 == 0 /\ hsize___027^0-hsize___027^post91 == 0 /\ -free_ent^post91+free_ent^0 == 0 /\ checkpoint^0-checkpoint^post91 == 0 /\ -tmp___024^post91+tmp___024^0 == 0 /\ -hsize___019^post91+hsize___019^0 == 0 /\ -maxbits^post91+maxbits^0 == 0 /\ -clear_flg^post91+clear_flg^0 == 0 /\ n44^0-n44^post91 == 0 /\ -i21^post91+i21^0 == 0 /\ -c7^post91+c7^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post91 == 0 /\ -tmp___014^post91+tmp___014^0 == 0 /\ -__const_2147483647^post91+__const_2147483647^0 == 0), cost: 1
  91: l60 -> l1 : __const_10000^0'=__const_10000^post92, __const_16^0'=__const_16^post92, __const_2147483647^0'=__const_2147483647^post92, __const_256^0'=__const_256^post92, __const_257^0'=__const_257^post92, __const_429496^0'=__const_429496^post92, __const_50^0'=__const_50^post92, __const_53^0'=__const_53^post92, __const_65536^0'=__const_65536^post92, __const_8388607^0'=__const_8388607^post92, __const_8^0'=__const_8^post92, __const_9^0'=__const_9^post92, apsim_bound11113^0'=apsim_bound11113^post92, apsim_incnt^0'=apsim_incnt^post92, bits33^0'=bits33^post92, block_compress^0'=block_compress^post92, bytes_out^0'=bytes_out^post92, c37^0'=c37^post92, c7^0'=c7^post92, checkpoint^0'=checkpoint^post92, clear_flg^0'=clear_flg^post92, code31^0'=code31^post92, count^0'=count^post92, disp9^0'=disp9^post92, ent8^0'=ent8^post92, exit_stat^0'=exit_stat^post92, fcode5^0'=fcode5^post92, free_ent^0'=free_ent^post92, hshift11^0'=hshift11^post92, hsize^0'=hsize^post92, hsize___019^0'=hsize___019^post92, hsize___027^0'=hsize___027^post92, hsize_reg10^0'=hsize_reg10^post92, i21^0'=i21^post92, i29^0'=i29^post92, i3^0'=i3^post92, i41^0'=i41^post92, i45^0'=i45^post92, i6^0'=i6^post92, in_count^0'=in_count^post92, incnt^0'=incnt^post92, m122^0'=m122^post92, m130^0'=m130^post92, maxbits^0'=maxbits^post92, maxcode^0'=maxcode^post92, maxmaxcode^0'=maxmaxcode^post92, n40^0'=n40^post92, n44^0'=n44^post92, n_bits^0'=n_bits^post92, offset^0'=offset^post92, out_count^0'=out_count^post92, r_off32^0'=r_off32^post92, rat26^0'=rat26^post92, ratio^0'=ratio^post92, ret_getbyte18^0'=ret_getbyte18^post92, ret_getbyte25^0'=ret_getbyte25^post92, seed2^0'=seed2^post92, tabort4^0'=tabort4^post92, tmp12^0'=tmp12^post92, tmp___014^0'=tmp___014^post92, tmp___017^0'=tmp___017^post92, tmp___024^0'=tmp___024^post92, tmp___115^0'=tmp___115^post92, (-tmp12^post92+tmp12^0 == 0 /\ -c7^post92+c7^0 == 0 /\ -i29^post92+i29^0 == 0 /\ r_off32^0-r_off32^post92 == 0 /\ -incnt^post92+incnt^0 == 0 /\ -i41^post92+i41^0 == 0 /\ -i45^post92+i45^0 == 0 /\ hshift11^0-hshift11^post92 == 0 /\ -clear_flg^post92+clear_flg^0 == 0 /\ free_ent^0-free_ent^post92 == 0 /\ out_count^0-out_count^post92 == 0 /\ -bytes_out^post92+bytes_out^0 == 0 /\ __const_65536^0-__const_65536^post92 == 0 /\ -block_compress^post92+block_compress^0 == 0 /\ -in_count^post92+in_count^0 == 0 /\ maxcode^0-maxcode^post92 == 0 /\ -tmp___024^post92+tmp___024^0 == 0 /\ __const_8^0-__const_8^post92 == 0 /\ ret_getbyte18^0-ret_getbyte18^post92 == 0 /\ -maxbits^post92+maxbits^0 == 0 /\ -code31^post92+code31^0 == 0 /\ exit_stat^0-exit_stat^post92 == 0 /\ __const_257^0-__const_257^post92 == 0 /\ tmp___017^0-tmp___017^post92 == 0 /\ -i21^post92+i21^0 == 0 /\ -hsize___019^post92+hsize___019^0 == 0 /\ __const_53^0-__const_53^post92 == 0 /\ -seed2^post92+seed2^0 == 0 /\ -disp9^post92+disp9^0 == 0 /\ -tmp___014^post92+tmp___014^0 == 0 /\ maxmaxcode^0-maxmaxcode^post92 == 0 /\ c37^0-c37^post92 == 0 /\ 1-checkpoint^0+in_count^0 <= 0 /\ -apsim_bound11113^post92+apsim_bound11113^0 == 0 /\ m122^0-m122^post92 == 0 /\ i6^0-i6^post92 == 0 /\ -__const_256^post92+__const_256^0 == 0 /\ -n_bits^post92+n_bits^0 == 0 /\ n44^0-n44^post92 == 0 /\ -__const_2147483647^post92+__const_2147483647^0 == 0 /\ ent8^0-ent8^post92 == 0 /\ __const_9^0-__const_9^post92 == 0 /\ -offset^post92+offset^0 == 0 /\ -__const_10000^post92+__const_10000^0 == 0 /\ __const_429496^0-__const_429496^post92 == 0 /\ hsize_reg10^0-hsize_reg10^post92 == 0 /\ __const_16^0-__const_16^post92 == 0 /\ -tmp___115^post92+tmp___115^0 == 0 /\ -m130^post92+m130^0 == 0 /\ bits33^0-bits33^post92 == 0 /\ tabort4^0-tabort4^post92 == 0 /\ i3^0-i3^post92 == 0 /\ -fcode5^post92+fcode5^0 == 0 /\ -__const_8388607^post92+__const_8388607^0 == 0 /\ -ratio^post92+ratio^0 == 0 /\ -hsize^post92+hsize^0 == 0 /\ -__const_50^post92+__const_50^0 == 0 /\ hsize___027^0-hsize___027^post92 == 0 /\ rat26^0-rat26^post92 == 0 /\ -n40^post92+n40^0 == 0 /\ -ret_getbyte25^post92+ret_getbyte25^0 == 0 /\ checkpoint^0-checkpoint^post92 == 0 /\ apsim_incnt^0-apsim_incnt^post92 == 0 /\ count^0-count^post92 == 0), cost: 1
  92: l60 -> l59 : __const_10000^0'=__const_10000^post93, __const_16^0'=__const_16^post93, __const_2147483647^0'=__const_2147483647^post93, __const_256^0'=__const_256^post93, __const_257^0'=__const_257^post93, __const_429496^0'=__const_429496^post93, __const_50^0'=__const_50^post93, __const_53^0'=__const_53^post93, __const_65536^0'=__const_65536^post93, __const_8388607^0'=__const_8388607^post93, __const_8^0'=__const_8^post93, __const_9^0'=__const_9^post93, apsim_bound11113^0'=apsim_bound11113^post93, apsim_incnt^0'=apsim_incnt^post93, bits33^0'=bits33^post93, block_compress^0'=block_compress^post93, bytes_out^0'=bytes_out^post93, c37^0'=c37^post93, c7^0'=c7^post93, checkpoint^0'=checkpoint^post93, clear_flg^0'=clear_flg^post93, code31^0'=code31^post93, count^0'=count^post93, disp9^0'=disp9^post93, ent8^0'=ent8^post93, exit_stat^0'=exit_stat^post93, fcode5^0'=fcode5^post93, free_ent^0'=free_ent^post93, hshift11^0'=hshift11^post93, hsize^0'=hsize^post93, hsize___019^0'=hsize___019^post93, hsize___027^0'=hsize___027^post93, hsize_reg10^0'=hsize_reg10^post93, i21^0'=i21^post93, i29^0'=i29^post93, i3^0'=i3^post93, i41^0'=i41^post93, i45^0'=i45^post93, i6^0'=i6^post93, in_count^0'=in_count^post93, incnt^0'=incnt^post93, m122^0'=m122^post93, m130^0'=m130^post93, maxbits^0'=maxbits^post93, maxcode^0'=maxcode^post93, maxmaxcode^0'=maxmaxcode^post93, n40^0'=n40^post93, n44^0'=n44^post93, n_bits^0'=n_bits^post93, offset^0'=offset^post93, out_count^0'=out_count^post93, r_off32^0'=r_off32^post93, rat26^0'=rat26^post93, ratio^0'=ratio^post93, ret_getbyte18^0'=ret_getbyte18^post93, ret_getbyte25^0'=ret_getbyte25^post93, seed2^0'=seed2^post93, tabort4^0'=tabort4^post93, tmp12^0'=tmp12^post93, tmp___014^0'=tmp___014^post93, tmp___017^0'=tmp___017^post93, tmp___024^0'=tmp___024^post93, tmp___115^0'=tmp___115^post93, (exit_stat^0-exit_stat^post93 == 0 /\ -hsize___019^post93+hsize___019^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post93 == 0 /\ -hsize^post93+hsize^0 == 0 /\ __const_16^0-__const_16^post93 == 0 /\ __const_8^0-__const_8^post93 == 0 /\ -offset^post93+offset^0 == 0 /\ -apsim_bound11113^post93+apsim_bound11113^0 == 0 /\ -rat26^post93+rat26^0 == 0 /\ -__const_9^post93+__const_9^0 == 0 /\ hshift11^0-hshift11^post93 == 0 /\ __const_53^0-__const_53^post93 == 0 /\ -m130^post93+m130^0 == 0 /\ -__const_2147483647^post93+__const_2147483647^0 == 0 /\ -seed2^post93+seed2^0 == 0 /\ -maxbits^post93+maxbits^0 == 0 /\ -n40^post93+n40^0 == 0 /\ -ret_getbyte25^post93+ret_getbyte25^0 == 0 /\ checkpoint^0-checkpoint^post93 == 0 /\ -__const_10000^post93+__const_10000^0 == 0 /\ -maxmaxcode^post93+maxmaxcode^0 == 0 /\ i6^0-i6^post93 == 0 /\ tmp___017^0-tmp___017^post93 == 0 /\ r_off32^0-r_off32^post93 == 0 /\ __const_256^0-__const_256^post93 == 0 /\ -__const_50^post93+__const_50^0 == 0 /\ out_count^0-out_count^post93 == 0 /\ m122^0-m122^post93 == 0 /\ -ratio^post93+ratio^0 == 0 /\ -ent8^post93+ent8^0 == 0 /\ -__const_65536^post93+__const_65536^0 == 0 /\ i3^0-i3^post93 == 0 /\ n44^0-n44^post93 == 0 /\ bits33^0-bits33^post93 == 0 /\ hsize___027^0-hsize___027^post93 == 0 /\ -clear_flg^post93+clear_flg^0 == 0 /\ n_bits^0-n_bits^post93 == 0 /\ -tmp___024^post93+tmp___024^0 == 0 /\ -tmp___014^post93+tmp___014^0 == 0 /\ -i45^post93+i45^0 == 0 /\ -tmp___115^post93+tmp___115^0 == 0 /\ -i29^post93+i29^0 == 0 /\ bytes_out^0-bytes_out^post93 == 0 /\ -i41^post93+i41^0 == 0 /\ -__const_8388607^post93+__const_8388607^0 == 0 /\ -i21^post93+i21^0 == 0 /\ maxcode^0-maxcode^post93 == 0 /\ -block_compress^post93+block_compress^0 == 0 /\ -fcode5^post93+fcode5^0 == 0 /\ -c7^post93+c7^0 == 0 /\ count^0-count^post93 == 0 /\ -incnt^post93+incnt^0 == 0 /\ -free_ent^post93+free_ent^0 == 0 /\ apsim_incnt^0-apsim_incnt^post93 == 0 /\ __const_257^0-__const_257^post93 == 0 /\ -code31^post93+code31^0 == 0 /\ tabort4^0-tabort4^post93 == 0 /\ checkpoint^0-in_count^0 <= 0 /\ c37^0-c37^post93 == 0 /\ -__const_429496^post93+__const_429496^0 == 0 /\ -in_count^post93+in_count^0 == 0 /\ hsize_reg10^0-hsize_reg10^post93 == 0 /\ -disp9^post93+disp9^0 == 0 /\ tmp12^0-tmp12^post93 == 0), cost: 1
  93: l61 -> l60 : __const_10000^0'=__const_10000^post94, __const_16^0'=__const_16^post94, __const_2147483647^0'=__const_2147483647^post94, __const_256^0'=__const_256^post94, __const_257^0'=__const_257^post94, __const_429496^0'=__const_429496^post94, __const_50^0'=__const_50^post94, __const_53^0'=__const_53^post94, __const_65536^0'=__const_65536^post94, __const_8388607^0'=__const_8388607^post94, __const_8^0'=__const_8^post94, __const_9^0'=__const_9^post94, apsim_bound11113^0'=apsim_bound11113^post94, apsim_incnt^0'=apsim_incnt^post94, bits33^0'=bits33^post94, block_compress^0'=block_compress^post94, bytes_out^0'=bytes_out^post94, c37^0'=c37^post94, c7^0'=c7^post94, checkpoint^0'=checkpoint^post94, clear_flg^0'=clear_flg^post94, code31^0'=code31^post94, count^0'=count^post94, disp9^0'=disp9^post94, ent8^0'=ent8^post94, exit_stat^0'=exit_stat^post94, fcode5^0'=fcode5^post94, free_ent^0'=free_ent^post94, hshift11^0'=hshift11^post94, hsize^0'=hsize^post94, hsize___019^0'=hsize___019^post94, hsize___027^0'=hsize___027^post94, hsize_reg10^0'=hsize_reg10^post94, i21^0'=i21^post94, i29^0'=i29^post94, i3^0'=i3^post94, i41^0'=i41^post94, i45^0'=i45^post94, i6^0'=i6^post94, in_count^0'=in_count^post94, incnt^0'=incnt^post94, m122^0'=m122^post94, m130^0'=m130^post94, maxbits^0'=maxbits^post94, maxcode^0'=maxcode^post94, maxmaxcode^0'=maxmaxcode^post94, n40^0'=n40^post94, n44^0'=n44^post94, n_bits^0'=n_bits^post94, offset^0'=offset^post94, out_count^0'=out_count^post94, r_off32^0'=r_off32^post94, rat26^0'=rat26^post94, ratio^0'=ratio^post94, ret_getbyte18^0'=ret_getbyte18^post94, ret_getbyte25^0'=ret_getbyte25^post94, seed2^0'=seed2^post94, tabort4^0'=tabort4^post94, tmp12^0'=tmp12^post94, tmp___014^0'=tmp___014^post94, tmp___017^0'=tmp___017^post94, tmp___024^0'=tmp___024^post94, tmp___115^0'=tmp___115^post94, (m122^0-m122^post94 == 0 /\ -ratio^post94+ratio^0 == 0 /\ -free_ent^post94+free_ent^0 == 0 /\ -__const_8388607^post94+__const_8388607^0 == 0 /\ -i21^post94+i21^0 == 0 /\ m130^0-m130^post94 == 0 /\ __const_65536^0-__const_65536^post94 == 0 /\ __const_16^0-__const_16^post94 == 0 /\ in_count^0-in_count^post94 == 0 /\ -offset^post94+offset^0 == 0 /\ -i45^post94+i45^0 == 0 /\ -block_compress^post94+block_compress^0 == 0 /\ -disp9^post94+disp9^0 == 0 /\ __const_257^0-__const_257^post94 == 0 /\ -__const_256^post94+__const_256^0 == 0 /\ hsize___027^0-hsize___027^post94 == 0 /\ exit_stat^0-exit_stat^post94 == 0 /\ -ret_getbyte25^post94+ret_getbyte25^0 == 0 /\ i3^0-i3^post94 == 0 /\ r_off32^0-r_off32^post94 == 0 /\ __const_8^0-__const_8^post94 == 0 /\ hshift11^0-hshift11^post94 == 0 /\ i6^0-i6^post94 == 0 /\ -code31^post94+code31^0 == 0 /\ -tmp___115^post94+tmp___115^0 == 0 /\ -apsim_bound11113^post94+apsim_bound11113^0 == 0 /\ __const_53^0-__const_53^post94 == 0 /\ maxmaxcode^0-free_ent^0 <= 0 /\ -maxbits^post94+maxbits^0 == 0 /\ bytes_out^0-bytes_out^post94 == 0 /\ maxmaxcode^0-maxmaxcode^post94 == 0 /\ -n40^post94+n40^0 == 0 /\ out_count^0-out_count^post94 == 0 /\ __const_9^0-__const_9^post94 == 0 /\ c37^0-c37^post94 == 0 /\ bits33^0-bits33^post94 == 0 /\ -hsize_reg10^post94+hsize_reg10^0 == 0 /\ -__const_50^post94+__const_50^0 == 0 /\ ent8^0-ent8^post94 == 0 /\ -hsize___019^post94+hsize___019^0 == 0 /\ -__const_429496^post94+__const_429496^0 == 0 /\ tmp___017^0-tmp___017^post94 == 0 /\ -hsize^post94+hsize^0 == 0 /\ -i41^post94+i41^0 == 0 /\ -incnt^post94+incnt^0 == 0 /\ -__const_10000^post94+__const_10000^0 == 0 /\ -__const_2147483647^post94+__const_2147483647^0 == 0 /\ -seed2^post94+seed2^0 == 0 /\ -fcode5^post94+fcode5^0 == 0 /\ -tmp___014^post94+tmp___014^0 == 0 /\ apsim_incnt^0-apsim_incnt^post94 == 0 /\ tmp12^0-tmp12^post94 == 0 /\ -clear_flg^post94+clear_flg^0 == 0 /\ checkpoint^0-checkpoint^post94 == 0 /\ n44^0-n44^post94 == 0 /\ -c7^post94+c7^0 == 0 /\ count^0-count^post94 == 0 /\ maxcode^0-maxcode^post94 == 0 /\ -rat26^post94+rat26^0 == 0 /\ n_bits^0-n_bits^post94 == 0 /\ tabort4^0-tabort4^post94 == 0 /\ -tmp___024^post94+tmp___024^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post94 == 0 /\ -i29^post94+i29^0 == 0), cost: 1
  94: l61 -> l1 : __const_10000^0'=__const_10000^post95, __const_16^0'=__const_16^post95, __const_2147483647^0'=__const_2147483647^post95, __const_256^0'=__const_256^post95, __const_257^0'=__const_257^post95, __const_429496^0'=__const_429496^post95, __const_50^0'=__const_50^post95, __const_53^0'=__const_53^post95, __const_65536^0'=__const_65536^post95, __const_8388607^0'=__const_8388607^post95, __const_8^0'=__const_8^post95, __const_9^0'=__const_9^post95, apsim_bound11113^0'=apsim_bound11113^post95, apsim_incnt^0'=apsim_incnt^post95, bits33^0'=bits33^post95, block_compress^0'=block_compress^post95, bytes_out^0'=bytes_out^post95, c37^0'=c37^post95, c7^0'=c7^post95, checkpoint^0'=checkpoint^post95, clear_flg^0'=clear_flg^post95, code31^0'=code31^post95, count^0'=count^post95, disp9^0'=disp9^post95, ent8^0'=ent8^post95, exit_stat^0'=exit_stat^post95, fcode5^0'=fcode5^post95, free_ent^0'=free_ent^post95, hshift11^0'=hshift11^post95, hsize^0'=hsize^post95, hsize___019^0'=hsize___019^post95, hsize___027^0'=hsize___027^post95, hsize_reg10^0'=hsize_reg10^post95, i21^0'=i21^post95, i29^0'=i29^post95, i3^0'=i3^post95, i41^0'=i41^post95, i45^0'=i45^post95, i6^0'=i6^post95, in_count^0'=in_count^post95, incnt^0'=incnt^post95, m122^0'=m122^post95, m130^0'=m130^post95, maxbits^0'=maxbits^post95, maxcode^0'=maxcode^post95, maxmaxcode^0'=maxmaxcode^post95, n40^0'=n40^post95, n44^0'=n44^post95, n_bits^0'=n_bits^post95, offset^0'=offset^post95, out_count^0'=out_count^post95, r_off32^0'=r_off32^post95, rat26^0'=rat26^post95, ratio^0'=ratio^post95, ret_getbyte18^0'=ret_getbyte18^post95, ret_getbyte25^0'=ret_getbyte25^post95, seed2^0'=seed2^post95, tabort4^0'=tabort4^post95, tmp12^0'=tmp12^post95, tmp___014^0'=tmp___014^post95, tmp___017^0'=tmp___017^post95, tmp___024^0'=tmp___024^post95, tmp___115^0'=tmp___115^post95, (-i45^post95+i45^0 == 0 /\ -i29^post95+i29^0 == 0 /\ __const_257^0-__const_257^post95 == 0 /\ -i41^post95+i41^0 == 0 /\ -__const_50^post95+__const_50^0 == 0 /\ n44^0-n44^post95 == 0 /\ i6^0-i6^post95 == 0 /\ m130^0-m130^post95 == 0 /\ -free_ent^0+tmp___115^post95 == 0 /\ __const_65536^0-__const_65536^post95 == 0 /\ -tmp___024^post95+tmp___024^0 == 0 /\ __const_53^0-__const_53^post95 == 0 /\ -hsize___019^post95+hsize___019^0 == 0 /\ i3^0-i3^post95 == 0 /\ code31^0-code31^post95 == 0 /\ -hsize_reg10^post95+hsize_reg10^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post95 == 0 /\ -i21^post95+i21^0 == 0 /\ -clear_flg^post95+clear_flg^0 == 0 /\ -c7^post95+c7^0 == 0 /\ -incnt^post95+incnt^0 == 0 /\ -bytes_out^post95+bytes_out^0 == 0 /\ -__const_10000^post95+__const_10000^0 == 0 /\ c37^0-c37^post95 == 0 /\ hsize___027^0-hsize___027^post95 == 0 /\ -seed2^post95+seed2^0 == 0 /\ -__const_8388607^post95+__const_8388607^0 == 0 /\ ent8^0-ent8^post95 == 0 /\ __const_429496^0-__const_429496^post95 == 0 /\ r_off32^0-r_off32^post95 == 0 /\ checkpoint^0-checkpoint^post95 == 0 /\ hshift11^0-hshift11^post95 == 0 /\ -count^post95+count^0 == 0 /\ rat26^0-rat26^post95 == 0 /\ __const_8^0-__const_8^post95 == 0 /\ tmp12^0-tmp12^post95 == 0 /\ -offset^post95+offset^0 == 0 /\ -disp9^post95+disp9^0 == 0 /\ tabort4^0-tabort4^post95 == 0 /\ -ratio^post95+ratio^0 == 0 /\ -apsim_bound11113^post95+apsim_bound11113^0 == 0 /\ exit_stat^0-exit_stat^post95 == 0 /\ ret_getbyte18^0-ret_getbyte18^post95 == 0 /\ out_count^0-out_count^post95 == 0 /\ -n_bits^post95+n_bits^0 == 0 /\ -fcode5^post95+fcode5^0 == 0 /\ -in_count^post95+in_count^0 == 0 /\ __const_2147483647^0-__const_2147483647^post95 == 0 /\ -1-free_ent^0+free_ent^post95 == 0 /\ -maxbits^post95+maxbits^0 == 0 /\ 1-maxmaxcode^0+free_ent^0 <= 0 /\ -hsize^post95+hsize^0 == 0 /\ maxcode^0-maxcode^post95 == 0 /\ tmp___017^0-tmp___017^post95 == 0 /\ -block_compress^post95+block_compress^0 == 0 /\ -n40^post95+n40^0 == 0 /\ -tmp___014^post95+tmp___014^0 == 0 /\ maxmaxcode^0-maxmaxcode^post95 == 0 /\ __const_9^0-__const_9^post95 == 0 /\ apsim_incnt^0-apsim_incnt^post95 == 0 /\ __const_16^0-__const_16^post95 == 0 /\ -m122^post95+m122^0 == 0 /\ -__const_256^post95+__const_256^0 == 0 /\ bits33^0-bits33^post95 == 0), cost: 1
  95: l62 -> l61 : __const_10000^0'=__const_10000^post96, __const_16^0'=__const_16^post96, __const_2147483647^0'=__const_2147483647^post96, __const_256^0'=__const_256^post96, __const_257^0'=__const_257^post96, __const_429496^0'=__const_429496^post96, __const_50^0'=__const_50^post96, __const_53^0'=__const_53^post96, __const_65536^0'=__const_65536^post96, __const_8388607^0'=__const_8388607^post96, __const_8^0'=__const_8^post96, __const_9^0'=__const_9^post96, apsim_bound11113^0'=apsim_bound11113^post96, apsim_incnt^0'=apsim_incnt^post96, bits33^0'=bits33^post96, block_compress^0'=block_compress^post96, bytes_out^0'=bytes_out^post96, c37^0'=c37^post96, c7^0'=c7^post96, checkpoint^0'=checkpoint^post96, clear_flg^0'=clear_flg^post96, code31^0'=code31^post96, count^0'=count^post96, disp9^0'=disp9^post96, ent8^0'=ent8^post96, exit_stat^0'=exit_stat^post96, fcode5^0'=fcode5^post96, free_ent^0'=free_ent^post96, hshift11^0'=hshift11^post96, hsize^0'=hsize^post96, hsize___019^0'=hsize___019^post96, hsize___027^0'=hsize___027^post96, hsize_reg10^0'=hsize_reg10^post96, i21^0'=i21^post96, i29^0'=i29^post96, i3^0'=i3^post96, i41^0'=i41^post96, i45^0'=i45^post96, i6^0'=i6^post96, in_count^0'=in_count^post96, incnt^0'=incnt^post96, m122^0'=m122^post96, m130^0'=m130^post96, maxbits^0'=maxbits^post96, maxcode^0'=maxcode^post96, maxmaxcode^0'=maxmaxcode^post96, n40^0'=n40^post96, n44^0'=n44^post96, n_bits^0'=n_bits^post96, offset^0'=offset^post96, out_count^0'=out_count^post96, r_off32^0'=r_off32^post96, rat26^0'=rat26^post96, ratio^0'=ratio^post96, ret_getbyte18^0'=ret_getbyte18^post96, ret_getbyte25^0'=ret_getbyte25^post96, seed2^0'=seed2^post96, tabort4^0'=tabort4^post96, tmp12^0'=tmp12^post96, tmp___014^0'=tmp___014^post96, tmp___017^0'=tmp___017^post96, tmp___024^0'=tmp___024^post96, tmp___115^0'=tmp___115^post96, (-tmp___024^post96+tmp___024^0 == 0 /\ -maxcode^post96+maxcode^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post96 == 0 /\ -exit_stat^post96+exit_stat^0 == 0 /\ -in_count^post96+in_count^0 == 0 /\ -fcode5^post96+fcode5^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post96 == 0 /\ bits33^0-bits33^post96 == 0 /\ -ratio^post96+ratio^0 == 0 /\ -ret_getbyte18^post96+ret_getbyte18^0 == 0 /\ -__const_256^post96+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post96 == 0 /\ __const_257^0-__const_257^post96 == 0 /\ __const_9^0-__const_9^post96 == 0 /\ apsim_incnt^0-apsim_incnt^post96 == 0 /\ -__const_10000^post96+__const_10000^0 == 0 /\ offset^0-offset^post96 == 0 /\ n40^0-n40^post96 == 0 /\ c37^0-c37^post96 == 0 /\ -m122^post96+m122^0 == 0 /\ -i45^post96+i45^0 == 0 /\ -tabort4^post96+tabort4^0 == 0 /\ n44^0-n44^post96 == 0 /\ tmp___014^0-tmp___014^post96 == 0 /\ -__const_50^post96+__const_50^0 == 0 /\ code31^0-code31^post96 == 0 /\ -c7^0+ent8^post96 == 0 /\ c7^0-c7^post96 == 0 /\ -count^post96+count^0 == 0 /\ hshift11^0-hshift11^post96 == 0 /\ tmp12^0-tmp12^post96 == 0 /\ -r_off32^post96+r_off32^0 == 0 /\ i21^0-i21^post96 == 0 /\ __const_65536^0-__const_65536^post96 == 0 /\ -bytes_out^post96+bytes_out^0 == 0 /\ __const_16^0-__const_16^post96 == 0 /\ free_ent^0-free_ent^post96 == 0 /\ -tmp___017^post96+tmp___017^0 == 0 /\ -1-out_count^0+out_count^post96 == 0 /\ m130^0-m130^post96 == 0 /\ -clear_flg^post96+clear_flg^0 == 0 /\ -checkpoint^post96+checkpoint^0 == 0 /\ __const_53^0-__const_53^post96 == 0 /\ -hsize_reg10^post96+hsize_reg10^0 == 0 /\ -__const_8388607^post96+__const_8388607^0 == 0 /\ maxbits^0-maxbits^post96 == 0 /\ __const_8^0-__const_8^post96 == 0 /\ -block_compress^post96+block_compress^0 == 0 /\ -hsize^post96+hsize^0 == 0 /\ hsize___027^0-hsize___027^post96 == 0 /\ -i41^post96+i41^0 == 0 /\ tmp___115^0-tmp___115^post96 == 0 /\ -seed2^post96+seed2^0 == 0 /\ rat26^0-rat26^post96 == 0 /\ -n_bits^post96+n_bits^0 == 0 /\ -incnt^post96+incnt^0 == 0 /\ hsize___019^0-hsize___019^post96 == 0 /\ -disp9^post96+disp9^0 == 0 /\ -i29^post96+i29^0 == 0 /\ i6^0-i6^post96 == 0 /\ i3^0-i3^post96 == 0 /\ __const_429496^0-__const_429496^post96 == 0 /\ __const_2147483647^0-__const_2147483647^post96 == 0), cost: 1
  96: l63 -> l62 : __const_10000^0'=__const_10000^post97, __const_16^0'=__const_16^post97, __const_2147483647^0'=__const_2147483647^post97, __const_256^0'=__const_256^post97, __const_257^0'=__const_257^post97, __const_429496^0'=__const_429496^post97, __const_50^0'=__const_50^post97, __const_53^0'=__const_53^post97, __const_65536^0'=__const_65536^post97, __const_8388607^0'=__const_8388607^post97, __const_8^0'=__const_8^post97, __const_9^0'=__const_9^post97, apsim_bound11113^0'=apsim_bound11113^post97, apsim_incnt^0'=apsim_incnt^post97, bits33^0'=bits33^post97, block_compress^0'=block_compress^post97, bytes_out^0'=bytes_out^post97, c37^0'=c37^post97, c7^0'=c7^post97, checkpoint^0'=checkpoint^post97, clear_flg^0'=clear_flg^post97, code31^0'=code31^post97, count^0'=count^post97, disp9^0'=disp9^post97, ent8^0'=ent8^post97, exit_stat^0'=exit_stat^post97, fcode5^0'=fcode5^post97, free_ent^0'=free_ent^post97, hshift11^0'=hshift11^post97, hsize^0'=hsize^post97, hsize___019^0'=hsize___019^post97, hsize___027^0'=hsize___027^post97, hsize_reg10^0'=hsize_reg10^post97, i21^0'=i21^post97, i29^0'=i29^post97, i3^0'=i3^post97, i41^0'=i41^post97, i45^0'=i45^post97, i6^0'=i6^post97, in_count^0'=in_count^post97, incnt^0'=incnt^post97, m122^0'=m122^post97, m130^0'=m130^post97, maxbits^0'=maxbits^post97, maxcode^0'=maxcode^post97, maxmaxcode^0'=maxmaxcode^post97, n40^0'=n40^post97, n44^0'=n44^post97, n_bits^0'=n_bits^post97, offset^0'=offset^post97, out_count^0'=out_count^post97, r_off32^0'=r_off32^post97, rat26^0'=rat26^post97, ratio^0'=ratio^post97, ret_getbyte18^0'=ret_getbyte18^post97, ret_getbyte25^0'=ret_getbyte25^post97, seed2^0'=seed2^post97, tabort4^0'=tabort4^post97, tmp12^0'=tmp12^post97, tmp___014^0'=tmp___014^post97, tmp___017^0'=tmp___017^post97, tmp___024^0'=tmp___024^post97, tmp___115^0'=tmp___115^post97, (n40^0-n40^post97 == 0 /\ ent8^0-ent8^post97 == 0 /\ -hsize^post97+hsize^0 == 0 /\ c7^0-c7^post97 == 0 /\ tmp12^0-tmp12^post97 == 0 /\ -__const_429496^post97+__const_429496^0 == 0 /\ -i41^post97+i41^0 == 0 /\ -i29^post97+i29^0 == 0 /\ rat26^0-rat26^post97 == 0 /\ tmp___115^0-tmp___115^post97 == 0 /\ __const_8388607^0-__const_8388607^post97 == 0 /\ exit_stat^0-exit_stat^post97 == 0 /\ -__const_65536^post97+__const_65536^0 == 0 /\ out_count^0-out_count^post97 == 0 /\ __const_50^0-__const_50^post97 == 0 /\ -apsim_bound11113^0+in_count^0 <= 0 /\ apsim_bound11113^0-apsim_bound11113^post97 == 0 /\ i21^0-i21^post97 == 0 /\ -hsize_reg10^post97+hsize_reg10^0 == 0 /\ -maxcode^post97+maxcode^0 == 0 /\ offset^0-offset^post97 == 0 /\ __const_16^0-__const_16^post97 == 0 /\ -incnt^post97+incnt^0 == 0 /\ -tmp___017^post97+tmp___017^0 == 0 /\ __const_9^0-__const_9^post97 == 0 /\ -__const_10000^post97+__const_10000^0 == 0 /\ -clear_flg^post97+clear_flg^0 == 0 /\ -bytes_out^post97+bytes_out^0 == 0 /\ tmp___014^0-tmp___014^post97 == 0 /\ -__const_8^post97+__const_8^0 == 0 /\ bits33^0-bits33^post97 == 0 /\ -__const_2147483647^post97+__const_2147483647^0 == 0 /\ hsize___019^0-hsize___019^post97 == 0 /\ __const_257^0-__const_257^post97 == 0 /\ apsim_incnt^0-apsim_incnt^post97 == 0 /\ -fcode5^post97+fcode5^0 == 0 /\ -count^post97+count^0 == 0 /\ -disp9^post97+disp9^0 == 0 /\ hshift11^0-hshift11^post97 == 0 /\ n44^0-n44^post97 == 0 /\ -ratio^post97+ratio^0 == 0 /\ -ret_getbyte18^post97+ret_getbyte18^0 == 0 /\ -i6^post97+i6^0 == 0 /\ -in_count^post97+in_count^0 == 0 /\ -n_bits^post97+n_bits^0 == 0 /\ maxmaxcode^0-maxmaxcode^post97 == 0 /\ code31^0-code31^post97 == 0 /\ seed2^0-seed2^post97 == 0 /\ __const_53^0-__const_53^post97 == 0 /\ m130^0-m130^post97 == 0 /\ ret_getbyte25^0-ret_getbyte25^post97 == 0 /\ i3^0-i3^post97 == 0 /\ free_ent^0-free_ent^post97 == 0 /\ -hsize___027^post97+hsize___027^0 == 0 /\ -r_off32^post97+r_off32^0 == 0 /\ maxbits^0-maxbits^post97 == 0 /\ -tmp___024^post97+tmp___024^0 == 0 /\ -tabort4^post97+tabort4^0 == 0 /\ -m122^post97+m122^0 == 0 /\ -__const_256^post97+__const_256^0 == 0 /\ -block_compress^post97+block_compress^0 == 0 /\ -checkpoint^post97+checkpoint^0 == 0 /\ i45^0-i45^post97 == 0 /\ c37^0-c37^post97 == 0), cost: 1
  97: l63 -> l6 : __const_10000^0'=__const_10000^post98, __const_16^0'=__const_16^post98, __const_2147483647^0'=__const_2147483647^post98, __const_256^0'=__const_256^post98, __const_257^0'=__const_257^post98, __const_429496^0'=__const_429496^post98, __const_50^0'=__const_50^post98, __const_53^0'=__const_53^post98, __const_65536^0'=__const_65536^post98, __const_8388607^0'=__const_8388607^post98, __const_8^0'=__const_8^post98, __const_9^0'=__const_9^post98, apsim_bound11113^0'=apsim_bound11113^post98, apsim_incnt^0'=apsim_incnt^post98, bits33^0'=bits33^post98, block_compress^0'=block_compress^post98, bytes_out^0'=bytes_out^post98, c37^0'=c37^post98, c7^0'=c7^post98, checkpoint^0'=checkpoint^post98, clear_flg^0'=clear_flg^post98, code31^0'=code31^post98, count^0'=count^post98, disp9^0'=disp9^post98, ent8^0'=ent8^post98, exit_stat^0'=exit_stat^post98, fcode5^0'=fcode5^post98, free_ent^0'=free_ent^post98, hshift11^0'=hshift11^post98, hsize^0'=hsize^post98, hsize___019^0'=hsize___019^post98, hsize___027^0'=hsize___027^post98, hsize_reg10^0'=hsize_reg10^post98, i21^0'=i21^post98, i29^0'=i29^post98, i3^0'=i3^post98, i41^0'=i41^post98, i45^0'=i45^post98, i6^0'=i6^post98, in_count^0'=in_count^post98, incnt^0'=incnt^post98, m122^0'=m122^post98, m130^0'=m130^post98, maxbits^0'=maxbits^post98, maxcode^0'=maxcode^post98, maxmaxcode^0'=maxmaxcode^post98, n40^0'=n40^post98, n44^0'=n44^post98, n_bits^0'=n_bits^post98, offset^0'=offset^post98, out_count^0'=out_count^post98, r_off32^0'=r_off32^post98, rat26^0'=rat26^post98, ratio^0'=ratio^post98, ret_getbyte18^0'=ret_getbyte18^post98, ret_getbyte25^0'=ret_getbyte25^post98, seed2^0'=seed2^post98, tabort4^0'=tabort4^post98, tmp12^0'=tmp12^post98, tmp___014^0'=tmp___014^post98, tmp___017^0'=tmp___017^post98, tmp___024^0'=tmp___024^post98, tmp___115^0'=tmp___115^post98, (-tabort4^post98+tabort4^0 == 0 /\ -n44^post98+n44^0 == 0 /\ -r_off32^post98+r_off32^0 == 0 /\ tmp___014^0-tmp___014^post98 == 0 /\ free_ent^0-free_ent^post98 == 0 /\ __const_50^0-__const_50^post98 == 0 /\ -__const_2147483647^post98+__const_2147483647^0 == 0 /\ __const_16^0-__const_16^post98 == 0 /\ -n_bits^post98+n_bits^0 == 0 /\ -fcode5^post98+fcode5^0 == 0 /\ 1+apsim_bound11113^0-in_count^0 <= 0 /\ __const_53^0-__const_53^post98 == 0 /\ tmp___115^0-tmp___115^post98 == 0 /\ tmp12^0-tmp12^post98 == 0 /\ m130^0-m130^post98 == 0 /\ rat26^0-rat26^post98 == 0 /\ -__const_10000^post98+__const_10000^0 == 0 /\ -tmp___024^post98+tmp___024^0 == 0 /\ -tmp___017^post98+tmp___017^0 == 0 /\ __const_256^0-__const_256^post98 == 0 /\ ent8^0-ent8^post98 == 0 /\ -apsim_incnt^post98+apsim_incnt^0 == 0 /\ out_count^0-out_count^post98 == 0 /\ -__const_65536^post98+__const_65536^0 == 0 /\ -i6^post98+i6^0 == 0 /\ i29^0-i29^post98 == 0 /\ -hsize___027^post98+hsize___027^0 == 0 /\ exit_stat^0-exit_stat^post98 == 0 /\ -checkpoint^post98+checkpoint^0 == 0 /\ -clear_flg^post98+clear_flg^0 == 0 /\ -c7^post98+c7^0 == 0 /\ -bytes_out^post98+bytes_out^0 == 0 /\ -block_compress^post98+block_compress^0 == 0 /\ -incnt^post98+incnt^0 == 0 /\ offset^0-offset^post98 == 0 /\ maxmaxcode^0-maxmaxcode^post98 == 0 /\ i21^0-i21^post98 == 0 /\ -m122^post98+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post98 == 0 /\ -__const_9^post98+__const_9^0 == 0 /\ -__const_8388607^post98+__const_8388607^0 == 0 /\ -hsize^post98+hsize^0 == 0 /\ n40^0-n40^post98 == 0 /\ __const_257^0-__const_257^post98 == 0 /\ -hsize___019^post98+hsize___019^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post98 == 0 /\ -i3^post98+i3^0 == 0 /\ -maxbits^post98+maxbits^0 == 0 /\ -maxcode^post98+maxcode^0 == 0 /\ -i41^post98+i41^0 == 0 /\ count^0-count^post98 == 0 /\ -code31^post98+code31^0 == 0 /\ c37^0-c37^post98 == 0 /\ -ret_getbyte18^post98+ret_getbyte18^0 == 0 /\ bits33^0-bits33^post98 == 0 /\ -__const_8^post98+__const_8^0 == 0 /\ -in_count^post98+in_count^0 == 0 /\ i45^0-i45^post98 == 0 /\ -__const_429496^post98+__const_429496^0 == 0 /\ -hsize_reg10^post98+hsize_reg10^0 == 0 /\ seed2^0-seed2^post98 == 0 /\ ratio^0-ratio^post98 == 0 /\ hshift11^0-hshift11^post98 == 0 /\ -disp9^post98+disp9^0 == 0), cost: 1
  98: l64 -> l63 : __const_10000^0'=__const_10000^post99, __const_16^0'=__const_16^post99, __const_2147483647^0'=__const_2147483647^post99, __const_256^0'=__const_256^post99, __const_257^0'=__const_257^post99, __const_429496^0'=__const_429496^post99, __const_50^0'=__const_50^post99, __const_53^0'=__const_53^post99, __const_65536^0'=__const_65536^post99, __const_8388607^0'=__const_8388607^post99, __const_8^0'=__const_8^post99, __const_9^0'=__const_9^post99, apsim_bound11113^0'=apsim_bound11113^post99, apsim_incnt^0'=apsim_incnt^post99, bits33^0'=bits33^post99, block_compress^0'=block_compress^post99, bytes_out^0'=bytes_out^post99, c37^0'=c37^post99, c7^0'=c7^post99, checkpoint^0'=checkpoint^post99, clear_flg^0'=clear_flg^post99, code31^0'=code31^post99, count^0'=count^post99, disp9^0'=disp9^post99, ent8^0'=ent8^post99, exit_stat^0'=exit_stat^post99, fcode5^0'=fcode5^post99, free_ent^0'=free_ent^post99, hshift11^0'=hshift11^post99, hsize^0'=hsize^post99, hsize___019^0'=hsize___019^post99, hsize___027^0'=hsize___027^post99, hsize_reg10^0'=hsize_reg10^post99, i21^0'=i21^post99, i29^0'=i29^post99, i3^0'=i3^post99, i41^0'=i41^post99, i45^0'=i45^post99, i6^0'=i6^post99, in_count^0'=in_count^post99, incnt^0'=incnt^post99, m122^0'=m122^post99, m130^0'=m130^post99, maxbits^0'=maxbits^post99, maxcode^0'=maxcode^post99, maxmaxcode^0'=maxmaxcode^post99, n40^0'=n40^post99, n44^0'=n44^post99, n_bits^0'=n_bits^post99, offset^0'=offset^post99, out_count^0'=out_count^post99, r_off32^0'=r_off32^post99, rat26^0'=rat26^post99, ratio^0'=ratio^post99, ret_getbyte18^0'=ret_getbyte18^post99, ret_getbyte25^0'=ret_getbyte25^post99, seed2^0'=seed2^post99, tabort4^0'=tabort4^post99, tmp12^0'=tmp12^post99, tmp___014^0'=tmp___014^post99, tmp___017^0'=tmp___017^post99, tmp___024^0'=tmp___024^post99, tmp___115^0'=tmp___115^post99, (hshift11^0-hshift11^post99 == 0 /\ tmp___115^0-tmp___115^post99 == 0 /\ -i6^post99+i6^0 == 0 /\ -in_count^post99+in_count^0 == 0 /\ -__const_8388607^post99+__const_8388607^0 == 0 /\ -maxbits^post99+maxbits^0 == 0 /\ apsim_incnt^0-apsim_incnt^post99 == 0 /\ __const_256^0-__const_256^post99 == 0 /\ n44^0-n44^post99 == 0 /\ -n40^post99+n40^0 == 0 /\ -ret_getbyte18^post99+ret_getbyte18^0 == 0 /\ -i21^post99+i21^0 == 0 /\ -c7^post99+c7^0 == 0 /\ maxcode^0-maxcode^post99 == 0 /\ -1-apsim_bound11113^0+apsim_bound11113^post99 == 0 /\ __const_16^0-__const_16^post99 == 0 /\ -m122^post99+m122^0 == 0 /\ free_ent^0-free_ent^post99 == 0 /\ -clear_flg^post99+clear_flg^0 == 0 /\ -hsize___019^post99+hsize___019^0 == 0 /\ -__const_9^post99+__const_9^0 == 0 /\ rat26^0-rat26^post99 == 0 /\ -__const_429496^post99+__const_429496^0 == 0 /\ -i3^post99+i3^0 == 0 /\ exit_stat^0-exit_stat^post99 == 0 /\ __const_50^0-__const_50^post99 == 0 /\ i29^0-i29^post99 == 0 /\ -disp9^post99+disp9^0 == 0 /\ m130^0-m130^post99 == 0 /\ -code31^post99+code31^0 == 0 /\ -r_off32^post99+r_off32^0 == 0 /\ __const_257^0-__const_257^post99 == 0 /\ __const_53^0-__const_53^post99 == 0 /\ ret_getbyte25^0-ret_getbyte25^post99 == 0 /\ -__const_8^post99+__const_8^0 == 0 /\ c37^0-c37^post99 == 0 /\ -tmp___024^post99+tmp___024^0 == 0 /\ -tmp___017^post99+tmp___017^0 == 0 /\ -hsize_reg10^post99+hsize_reg10^0 == 0 /\ out_count^0-out_count^post99 == 0 /\ i45^0-i45^post99 == 0 /\ -seed2^post99+seed2^0 == 0 /\ offset^0-offset^post99 == 0 /\ -tabort4^post99+tabort4^0 == 0 /\ -__const_65536^post99+__const_65536^0 == 0 /\ -block_compress^post99+block_compress^0 == 0 /\ -__const_2147483647^post99+__const_2147483647^0 == 0 /\ -i41^post99+i41^0 == 0 /\ -incnt^post99+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post99 == 0 /\ -ent8^post99+ent8^0 == 0 /\ -hsize^post99+hsize^0 == 0 /\ ratio^0-ratio^post99 == 0 /\ tmp___014^0-tmp___014^post99 == 0 /\ -bytes_out^post99+bytes_out^0 == 0 /\ checkpoint^0-checkpoint^post99 == 0 /\ -n_bits^post99+n_bits^0 == 0 /\ __const_10000^0-__const_10000^post99 == 0 /\ count^0-count^post99 == 0 /\ bits33^0-bits33^post99 == 0 /\ tmp12^0-tmp12^post99 == 0 /\ hsize___027^0-hsize___027^post99 == 0 /\ -fcode5^post99+fcode5^0 == 0), cost: 1
  99: l64 -> l62 : __const_10000^0'=__const_10000^post100, __const_16^0'=__const_16^post100, __const_2147483647^0'=__const_2147483647^post100, __const_256^0'=__const_256^post100, __const_257^0'=__const_257^post100, __const_429496^0'=__const_429496^post100, __const_50^0'=__const_50^post100, __const_53^0'=__const_53^post100, __const_65536^0'=__const_65536^post100, __const_8388607^0'=__const_8388607^post100, __const_8^0'=__const_8^post100, __const_9^0'=__const_9^post100, apsim_bound11113^0'=apsim_bound11113^post100, apsim_incnt^0'=apsim_incnt^post100, bits33^0'=bits33^post100, block_compress^0'=block_compress^post100, bytes_out^0'=bytes_out^post100, c37^0'=c37^post100, c7^0'=c7^post100, checkpoint^0'=checkpoint^post100, clear_flg^0'=clear_flg^post100, code31^0'=code31^post100, count^0'=count^post100, disp9^0'=disp9^post100, ent8^0'=ent8^post100, exit_stat^0'=exit_stat^post100, fcode5^0'=fcode5^post100, free_ent^0'=free_ent^post100, hshift11^0'=hshift11^post100, hsize^0'=hsize^post100, hsize___019^0'=hsize___019^post100, hsize___027^0'=hsize___027^post100, hsize_reg10^0'=hsize_reg10^post100, i21^0'=i21^post100, i29^0'=i29^post100, i3^0'=i3^post100, i41^0'=i41^post100, i45^0'=i45^post100, i6^0'=i6^post100, in_count^0'=in_count^post100, incnt^0'=incnt^post100, m122^0'=m122^post100, m130^0'=m130^post100, maxbits^0'=maxbits^post100, maxcode^0'=maxcode^post100, maxmaxcode^0'=maxmaxcode^post100, n40^0'=n40^post100, n44^0'=n44^post100, n_bits^0'=n_bits^post100, offset^0'=offset^post100, out_count^0'=out_count^post100, r_off32^0'=r_off32^post100, rat26^0'=rat26^post100, ratio^0'=ratio^post100, ret_getbyte18^0'=ret_getbyte18^post100, ret_getbyte25^0'=ret_getbyte25^post100, seed2^0'=seed2^post100, tabort4^0'=tabort4^post100, tmp12^0'=tmp12^post100, tmp___014^0'=tmp___014^post100, tmp___017^0'=tmp___017^post100, tmp___024^0'=tmp___024^post100, tmp___115^0'=tmp___115^post100, (rat26^0-rat26^post100 == 0 /\ -tmp___017^post100+tmp___017^0 == 0 /\ bytes_out^0-bytes_out^post100 == 0 /\ -tmp___024^post100+tmp___024^0 == 0 /\ tmp___014^0-tmp___014^post100 == 0 /\ -bits33^post100+bits33^0 == 0 /\ __const_257^0-__const_257^post100 == 0 /\ -__const_429496^post100+__const_429496^0 == 0 /\ -__const_53^post100+__const_53^0 == 0 /\ -apsim_bound11113^post100+apsim_bound11113^0 == 0 /\ apsim_incnt^0-apsim_incnt^post100 == 0 /\ -__const_9^post100+__const_9^0 == 0 /\ -tabort4^post100+tabort4^0 == 0 /\ tmp12^0-tmp12^post100 == 0 /\ -__const_65536^post100+__const_65536^0 == 0 /\ __const_256^0-__const_256^post100 == 0 /\ -i29^post100+i29^0 == 0 /\ -i41^post100+i41^0 == 0 /\ hshift11^0-hshift11^post100 == 0 /\ -clear_flg^post100+clear_flg^0 == 0 /\ -incnt^post100+incnt^0 == 0 /\ -n44^post100+n44^0 == 0 /\ out_count^0-out_count^post100 == 0 /\ -block_compress^post100+block_compress^0 == 0 /\ -__const_2147483647^post100+__const_2147483647^0 == 0 /\ offset^0-offset^post100 == 0 /\ -__const_8388607^post100+__const_8388607^0 == 0 /\ -hsize^post100+hsize^0 == 0 /\ -c7^post100+c7^0 == 0 /\ c37^0-c37^post100 == 0 /\ -i6^post100+i6^0 == 0 /\ -maxcode^post100+maxcode^0 == 0 /\ -in_count^post100+in_count^0 == 0 /\ -code31^post100+code31^0 == 0 /\ -ratio^post100+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post100 == 0 /\ checkpoint^0-checkpoint^post100 == 0 /\ -ret_getbyte18^post100+ret_getbyte18^0 == 0 /\ __const_8^0-__const_8^post100 == 0 /\ hsize_reg10^0-hsize_reg10^post100 == 0 /\ exit_stat^0-exit_stat^post100 == 0 /\ __const_50^0-__const_50^post100 == 0 /\ -free_ent^post100+free_ent^0 == 0 /\ -fcode5^post100+fcode5^0 == 0 /\ -disp9^post100+disp9^0 == 0 /\ hsize___027^0-hsize___027^post100 == 0 /\ i21^0-i21^post100 == 0 /\ n40^0-n40^post100 == 0 /\ -ent8^post100+ent8^0 == 0 /\ -m122^post100+m122^0 == 0 /\ tmp___115^0-tmp___115^post100 == 0 /\ -i3^post100+i3^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post100 == 0 /\ maxbits^0-maxbits^post100 == 0 /\ count^0-count^post100 == 0 /\ m130^0-m130^post100 == 0 /\ seed2^0-seed2^post100 == 0 /\ -n_bits^post100+n_bits^0 == 0 /\ -__const_16^post100+__const_16^0 == 0 /\ i45^0-i45^post100 == 0 /\ -r_off32^post100+r_off32^0 == 0 /\ __const_10000^0-__const_10000^post100 == 0 /\ -hsize___019^post100+hsize___019^0 == 0), cost: 1
 100: l65 -> l64 : __const_10000^0'=__const_10000^post101, __const_16^0'=__const_16^post101, __const_2147483647^0'=__const_2147483647^post101, __const_256^0'=__const_256^post101, __const_257^0'=__const_257^post101, __const_429496^0'=__const_429496^post101, __const_50^0'=__const_50^post101, __const_53^0'=__const_53^post101, __const_65536^0'=__const_65536^post101, __const_8388607^0'=__const_8388607^post101, __const_8^0'=__const_8^post101, __const_9^0'=__const_9^post101, apsim_bound11113^0'=apsim_bound11113^post101, apsim_incnt^0'=apsim_incnt^post101, bits33^0'=bits33^post101, block_compress^0'=block_compress^post101, bytes_out^0'=bytes_out^post101, c37^0'=c37^post101, c7^0'=c7^post101, checkpoint^0'=checkpoint^post101, clear_flg^0'=clear_flg^post101, code31^0'=code31^post101, count^0'=count^post101, disp9^0'=disp9^post101, ent8^0'=ent8^post101, exit_stat^0'=exit_stat^post101, fcode5^0'=fcode5^post101, free_ent^0'=free_ent^post101, hshift11^0'=hshift11^post101, hsize^0'=hsize^post101, hsize___019^0'=hsize___019^post101, hsize___027^0'=hsize___027^post101, hsize_reg10^0'=hsize_reg10^post101, i21^0'=i21^post101, i29^0'=i29^post101, i3^0'=i3^post101, i41^0'=i41^post101, i45^0'=i45^post101, i6^0'=i6^post101, in_count^0'=in_count^post101, incnt^0'=incnt^post101, m122^0'=m122^post101, m130^0'=m130^post101, maxbits^0'=maxbits^post101, maxcode^0'=maxcode^post101, maxmaxcode^0'=maxmaxcode^post101, n40^0'=n40^post101, n44^0'=n44^post101, n_bits^0'=n_bits^post101, offset^0'=offset^post101, out_count^0'=out_count^post101, r_off32^0'=r_off32^post101, rat26^0'=rat26^post101, ratio^0'=ratio^post101, ret_getbyte18^0'=ret_getbyte18^post101, ret_getbyte25^0'=ret_getbyte25^post101, seed2^0'=seed2^post101, tabort4^0'=tabort4^post101, tmp12^0'=tmp12^post101, tmp___014^0'=tmp___014^post101, tmp___017^0'=tmp___017^post101, tmp___024^0'=tmp___024^post101, tmp___115^0'=tmp___115^post101, (m130^0-m130^post101 == 0 /\ __const_53^0-__const_53^post101 == 0 /\ free_ent^0-free_ent^post101 == 0 /\ -block_compress^post101+block_compress^0 == 0 /\ -code31^post101+code31^0 == 0 /\ -ent8^post101+ent8^0 == 0 /\ -fcode5^post101+fcode5^0 == 0 /\ n44^0-n44^post101 == 0 /\ -disp9^post101+disp9^0 == 0 /\ tmp___014^0-tmp___014^post101 == 0 /\ -ret_getbyte18^post101+ret_getbyte18^0 == 0 /\ -in_count^post101+in_count^0 == 0 /\ -i6^post101+i6^0 == 0 /\ tmp___115^0-tmp___115^post101 == 0 /\ -i21^post101+i21^0 == 0 /\ bytes_out^0-bytes_out^post101 == 0 /\ -maxbits^post101+maxbits^0 == 0 /\ rat26^0-rat26^post101 == 0 /\ -r_off32^post101+r_off32^0 == 0 /\ __const_257^0-__const_257^post101 == 0 /\ -apsim_incnt^post101+apsim_incnt^0 == 0 /\ exit_stat^0-exit_stat^post101 == 0 /\ -m122^post101+m122^0 == 0 /\ __const_16^0-__const_16^post101 == 0 /\ -tabort4^post101+tabort4^0 == 0 /\ -tmp___024^post101+tmp___024^0 == 0 /\ -hsize___019^post101+hsize___019^0 == 0 /\ c37^0-c37^post101 == 0 /\ __const_50^0-__const_50^post101 == 0 /\ i29^0-i29^post101 == 0 /\ -__const_10000^post101+__const_10000^0 == 0 /\ __const_256^0-__const_256^post101 == 0 /\ seed2^0-seed2^post101 == 0 /\ -hsize^post101+hsize^0 == 0 /\ out_count^0-out_count^post101 == 0 /\ apsim_bound11113^0-apsim_bound11113^post101 == 0 /\ count^0-count^post101 == 0 /\ ret_getbyte25^0-ret_getbyte25^post101 == 0 /\ -__const_429496^post101+__const_429496^0 == 0 /\ -i3^post101+i3^0 == 0 /\ -n_bits^post101+n_bits^0 == 0 /\ -__const_9^post101+__const_9^0 == 0 /\ -__const_65536^post101+__const_65536^0 == 0 /\ i45^0-i45^post101 == 0 /\ ratio^0-ratio^post101 == 0 /\ bits33^0-bits33^post101 == 0 /\ checkpoint^0-checkpoint^post101 == 0 /\ hsize_reg10^0-hsize_reg10^post101 == 0 /\ tmp12^0-tmp12^post101 == 0 /\ offset^0-offset^post101 == 0 /\ -maxcode^post101+maxcode^0 == 0 /\ -i41^post101+i41^0 == 0 /\ maxmaxcode^0-maxmaxcode^post101 == 0 /\ -__const_2147483647^post101+__const_2147483647^0 == 0 /\ -tmp___017^post101+tmp___017^0 == 0 /\ hsize___027^0-hsize___027^post101 == 0 /\ hshift11^0-hshift11^post101 == 0 /\ -n40^post101+n40^0 == 0 /\ -clear_flg^post101+clear_flg^0 == 0 /\ -c7^post101+c7^0 == 0 /\ -__const_8388607^post101+__const_8388607^0 == 0 /\ -__const_8^post101+__const_8^0 == 0 /\ -incnt^post101+incnt^0 == 0), cost: 1
 101: l65 -> l1 : __const_10000^0'=__const_10000^post102, __const_16^0'=__const_16^post102, __const_2147483647^0'=__const_2147483647^post102, __const_256^0'=__const_256^post102, __const_257^0'=__const_257^post102, __const_429496^0'=__const_429496^post102, __const_50^0'=__const_50^post102, __const_53^0'=__const_53^post102, __const_65536^0'=__const_65536^post102, __const_8388607^0'=__const_8388607^post102, __const_8^0'=__const_8^post102, __const_9^0'=__const_9^post102, apsim_bound11113^0'=apsim_bound11113^post102, apsim_incnt^0'=apsim_incnt^post102, bits33^0'=bits33^post102, block_compress^0'=block_compress^post102, bytes_out^0'=bytes_out^post102, c37^0'=c37^post102, c7^0'=c7^post102, checkpoint^0'=checkpoint^post102, clear_flg^0'=clear_flg^post102, code31^0'=code31^post102, count^0'=count^post102, disp9^0'=disp9^post102, ent8^0'=ent8^post102, exit_stat^0'=exit_stat^post102, fcode5^0'=fcode5^post102, free_ent^0'=free_ent^post102, hshift11^0'=hshift11^post102, hsize^0'=hsize^post102, hsize___019^0'=hsize___019^post102, hsize___027^0'=hsize___027^post102, hsize_reg10^0'=hsize_reg10^post102, i21^0'=i21^post102, i29^0'=i29^post102, i3^0'=i3^post102, i41^0'=i41^post102, i45^0'=i45^post102, i6^0'=i6^post102, in_count^0'=in_count^post102, incnt^0'=incnt^post102, m122^0'=m122^post102, m130^0'=m130^post102, maxbits^0'=maxbits^post102, maxcode^0'=maxcode^post102, maxmaxcode^0'=maxmaxcode^post102, n40^0'=n40^post102, n44^0'=n44^post102, n_bits^0'=n_bits^post102, offset^0'=offset^post102, out_count^0'=out_count^post102, r_off32^0'=r_off32^post102, rat26^0'=rat26^post102, ratio^0'=ratio^post102, ret_getbyte18^0'=ret_getbyte18^post102, ret_getbyte25^0'=ret_getbyte25^post102, seed2^0'=seed2^post102, tabort4^0'=tabort4^post102, tmp12^0'=tmp12^post102, tmp___014^0'=tmp___014^post102, tmp___017^0'=tmp___017^post102, tmp___024^0'=tmp___024^post102, tmp___115^0'=tmp___115^post102, (0 == 0 /\ __const_256^0-__const_256^post102 == 0 /\ -__const_2147483647^post102+__const_2147483647^0 == 0 /\ -clear_flg^post102+clear_flg^0 == 0 /\ offset^0-offset^post102 == 0 /\ -incnt^post102+incnt^0 == 0 /\ -n_bits^post102+n_bits^0 == 0 /\ -m122^post102+m122^0 == 0 /\ -apsim_bound11113^post102+apsim_bound11113^0 == 0 /\ -__const_9^post102+__const_9^0 == 0 /\ -__const_10000^post102+__const_10000^0 == 0 /\ __const_16^0-__const_16^post102 == 0 /\ bytes_out^0-bytes_out^post102 == 0 /\ -hsize___019^post102+hsize___019^0 == 0 /\ apsim_incnt^0-apsim_incnt^post102 == 0 /\ -maxbits^post102+maxbits^0 == 0 /\ maxcode^0-maxcode^post102 == 0 /\ -i3^post102+i3^0 == 0 /\ -n40^post102+n40^0 == 0 /\ -i41^post102+i41^0 == 0 /\ hshift11^0-hshift11^post102 == 0 /\ -code31^post102+code31^0 == 0 /\ -ret_getbyte18^post102+ret_getbyte18^0 == 0 /\ hsize^0-hsize^post102 == 0 /\ -bits33^post102+bits33^0 == 0 /\ __const_50^0-__const_50^post102 == 0 /\ -i29^post102+i29^0 == 0 /\ -in_count^post102+in_count^0 == 0 /\ -__const_8388607^post102+__const_8388607^0 == 0 /\ c37^0-c37^post102 == 0 /\ __const_53^0-__const_53^post102 == 0 /\ __const_257^0-__const_257^post102 == 0 /\ tmp___115^0-tmp___115^post102 == 0 /\ rat26^0-rat26^post102 == 0 /\ ret_getbyte25^0-ret_getbyte25^post102 == 0 /\ m130^0-m130^post102 == 0 /\ n44^0-n44^post102 == 0 /\ -__const_429496^post102+__const_429496^0 == 0 /\ -r_off32^post102+r_off32^0 == 0 /\ -tabort4^post102+tabort4^0 == 0 /\ -disp9^post102+disp9^0 == 0 /\ -free_ent^post102+free_ent^0 == 0 /\ hsize___027^0-hsize___027^post102 == 0 /\ -c7^post102+c7^0 == 0 /\ __const_8^0-__const_8^post102 == 0 /\ -seed2^post102+seed2^0 == 0 /\ -fcode5^post102+fcode5^0 == 0 /\ i45^0-i45^post102 == 0 /\ -i21^post102+i21^0 == 0 /\ -block_compress^post102+block_compress^0 == 0 /\ exit_stat^0-exit_stat^post102 == 0 /\ -tmp___017^post102+tmp___017^0 == 0 /\ tmp___014^0-tmp___014^post102 == 0 /\ -ratio^post102+ratio^0 == 0 /\ -tmp___024^post102+tmp___024^0 == 0 /\ maxmaxcode^0-maxmaxcode^post102 == 0 /\ -i6^post102+i6^0 == 0 /\ hsize_reg10^0-hsize_reg10^post102 == 0 /\ -__const_65536^post102+__const_65536^0 == 0 /\ out_count^0-out_count^post102 == 0 /\ tmp12^0-tmp12^post102 == 0 /\ count^0-count^post102 == 0 /\ checkpoint^0-checkpoint^post102 == 0), cost: 1
 102: l65 -> l64 : __const_10000^0'=__const_10000^post103, __const_16^0'=__const_16^post103, __const_2147483647^0'=__const_2147483647^post103, __const_256^0'=__const_256^post103, __const_257^0'=__const_257^post103, __const_429496^0'=__const_429496^post103, __const_50^0'=__const_50^post103, __const_53^0'=__const_53^post103, __const_65536^0'=__const_65536^post103, __const_8388607^0'=__const_8388607^post103, __const_8^0'=__const_8^post103, __const_9^0'=__const_9^post103, apsim_bound11113^0'=apsim_bound11113^post103, apsim_incnt^0'=apsim_incnt^post103, bits33^0'=bits33^post103, block_compress^0'=block_compress^post103, bytes_out^0'=bytes_out^post103, c37^0'=c37^post103, c7^0'=c7^post103, checkpoint^0'=checkpoint^post103, clear_flg^0'=clear_flg^post103, code31^0'=code31^post103, count^0'=count^post103, disp9^0'=disp9^post103, ent8^0'=ent8^post103, exit_stat^0'=exit_stat^post103, fcode5^0'=fcode5^post103, free_ent^0'=free_ent^post103, hshift11^0'=hshift11^post103, hsize^0'=hsize^post103, hsize___019^0'=hsize___019^post103, hsize___027^0'=hsize___027^post103, hsize_reg10^0'=hsize_reg10^post103, i21^0'=i21^post103, i29^0'=i29^post103, i3^0'=i3^post103, i41^0'=i41^post103, i45^0'=i45^post103, i6^0'=i6^post103, in_count^0'=in_count^post103, incnt^0'=incnt^post103, m122^0'=m122^post103, m130^0'=m130^post103, maxbits^0'=maxbits^post103, maxcode^0'=maxcode^post103, maxmaxcode^0'=maxmaxcode^post103, n40^0'=n40^post103, n44^0'=n44^post103, n_bits^0'=n_bits^post103, offset^0'=offset^post103, out_count^0'=out_count^post103, r_off32^0'=r_off32^post103, rat26^0'=rat26^post103, ratio^0'=ratio^post103, ret_getbyte18^0'=ret_getbyte18^post103, ret_getbyte25^0'=ret_getbyte25^post103, seed2^0'=seed2^post103, tabort4^0'=tabort4^post103, tmp12^0'=tmp12^post103, tmp___014^0'=tmp___014^post103, tmp___017^0'=tmp___017^post103, tmp___024^0'=tmp___024^post103, tmp___115^0'=tmp___115^post103, (bytes_out^0-bytes_out^post103 == 0 /\ out_count^0-out_count^post103 == 0 /\ maxmaxcode^0-maxmaxcode^post103 == 0 /\ -tmp___024^post103+tmp___024^0 == 0 /\ -tmp___115^post103+tmp___115^0 == 0 /\ __const_256^0-__const_256^post103 == 0 /\ count^0-count^post103 == 0 /\ -tmp___014^post103+tmp___014^0 == 0 /\ offset^0-offset^post103 == 0 /\ -seed2^post103+seed2^0 == 0 /\ -__const_257^post103+__const_257^0 == 0 /\ -bits33^post103+bits33^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post103 == 0 /\ hshift11^0-hshift11^post103 == 0 /\ -__const_65536^post103+__const_65536^0 == 0 /\ -block_compress^post103+block_compress^0 == 0 /\ apsim_incnt^0-apsim_incnt^post103 == 0 /\ tabort4^0-tabort4^post103 == 0 /\ -ent8^post103+ent8^0 == 0 /\ -i41^post103+i41^0 == 0 /\ -hsize^post103+hsize^0 == 0 /\ -c37^post103+c37^0 == 0 /\ checkpoint^0-checkpoint^post103 == 0 /\ n44^0-n44^post103 == 0 /\ i45^0-i45^post103 == 0 /\ i3^0-i3^post103 == 0 /\ maxcode^0-maxcode^post103 == 0 /\ -r_off32^post103+r_off32^0 == 0 /\ -apsim_bound11113^post103+apsim_bound11113^0 == 0 /\ rat26^0-rat26^post103 == 0 /\ -in_count^post103+in_count^0 == 0 /\ -__const_8388607^post103+__const_8388607^0 == 0 /\ -maxbits^post103+maxbits^0 == 0 /\ -i6^post103+i6^0 == 0 /\ tmp___017^0-tmp___017^post103 == 0 /\ exit_stat^0-exit_stat^post103 == 0 /\ __const_50^0-__const_50^post103 == 0 /\ fcode5^0-fcode5^post103 == 0 /\ -ratio^post103+ratio^0 == 0 /\ -n40^post103+n40^0 == 0 /\ __const_8^0-__const_8^post103 == 0 /\ m130^0-m130^post103 == 0 /\ -incnt^post103+incnt^0 == 0 /\ tmp12^0-tmp12^post103 == 0 /\ hsize___027^0-hsize___027^post103 == 0 /\ __const_53^0-__const_53^post103 == 0 /\ -clear_flg^post103+clear_flg^0 == 0 /\ -__const_2147483647^post103+__const_2147483647^0 == 0 /\ -hsize___019^post103+hsize___019^0 == 0 /\ __const_16^0-__const_16^post103 == 0 /\ -hsize_reg10^post103+hsize_reg10^0 == 0 /\ -__const_429496^post103+__const_429496^0 == 0 /\ -c7^post103+c7^0 == 0 /\ -n_bits^post103+n_bits^0 == 0 /\ __const_10000^0-__const_10000^post103 == 0 /\ -disp9^post103+disp9^0 == 0 /\ -ret_getbyte18^post103+ret_getbyte18^0 == 0 /\ -i29^post103+i29^0 == 0 /\ -code31^post103+code31^0 == 0 /\ -i21^post103+i21^0 == 0 /\ -free_ent^post103+free_ent^0 == 0 /\ -__const_9^post103+__const_9^0 == 0 /\ m122^0-m122^post103 == 0), cost: 1
 105: l66 -> l6 : __const_10000^0'=__const_10000^post106, __const_16^0'=__const_16^post106, __const_2147483647^0'=__const_2147483647^post106, __const_256^0'=__const_256^post106, __const_257^0'=__const_257^post106, __const_429496^0'=__const_429496^post106, __const_50^0'=__const_50^post106, __const_53^0'=__const_53^post106, __const_65536^0'=__const_65536^post106, __const_8388607^0'=__const_8388607^post106, __const_8^0'=__const_8^post106, __const_9^0'=__const_9^post106, apsim_bound11113^0'=apsim_bound11113^post106, apsim_incnt^0'=apsim_incnt^post106, bits33^0'=bits33^post106, block_compress^0'=block_compress^post106, bytes_out^0'=bytes_out^post106, c37^0'=c37^post106, c7^0'=c7^post106, checkpoint^0'=checkpoint^post106, clear_flg^0'=clear_flg^post106, code31^0'=code31^post106, count^0'=count^post106, disp9^0'=disp9^post106, ent8^0'=ent8^post106, exit_stat^0'=exit_stat^post106, fcode5^0'=fcode5^post106, free_ent^0'=free_ent^post106, hshift11^0'=hshift11^post106, hsize^0'=hsize^post106, hsize___019^0'=hsize___019^post106, hsize___027^0'=hsize___027^post106, hsize_reg10^0'=hsize_reg10^post106, i21^0'=i21^post106, i29^0'=i29^post106, i3^0'=i3^post106, i41^0'=i41^post106, i45^0'=i45^post106, i6^0'=i6^post106, in_count^0'=in_count^post106, incnt^0'=incnt^post106, m122^0'=m122^post106, m130^0'=m130^post106, maxbits^0'=maxbits^post106, maxcode^0'=maxcode^post106, maxmaxcode^0'=maxmaxcode^post106, n40^0'=n40^post106, n44^0'=n44^post106, n_bits^0'=n_bits^post106, offset^0'=offset^post106, out_count^0'=out_count^post106, r_off32^0'=r_off32^post106, rat26^0'=rat26^post106, ratio^0'=ratio^post106, ret_getbyte18^0'=ret_getbyte18^post106, ret_getbyte25^0'=ret_getbyte25^post106, seed2^0'=seed2^post106, tabort4^0'=tabort4^post106, tmp12^0'=tmp12^post106, tmp___014^0'=tmp___014^post106, tmp___017^0'=tmp___017^post106, tmp___024^0'=tmp___024^post106, tmp___115^0'=tmp___115^post106, (-tmp___115^post106+tmp___115^0 == 0 /\ code31^0-code31^post106 == 0 /\ out_count^0-out_count^post106 == 0 /\ __const_9^0-__const_9^post106 == 0 /\ offset^0-offset^post106 == 0 /\ -count^post106+count^0 == 0 /\ maxmaxcode^0-maxmaxcode^post106 == 0 /\ bits33^0-bits33^post106 == 0 /\ -ratio^post106+ratio^0 == 0 /\ -ret_getbyte18^post106+ret_getbyte18^0 == 0 /\ c37^0-c37^post106 == 0 /\ __const_16^0-__const_16^post106 == 0 /\ __const_53^0-__const_53^post106 == 0 /\ hsize___019^0-hsize___019^post106 == 0 /\ -i6^post106+i6^0 == 0 /\ -__const_256^post106+__const_256^0 == 0 /\ -incnt^post106+incnt^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post106 == 0 /\ c7^0-c7^post106 == 0 /\ __const_257^0-__const_257^post106 == 0 /\ m130^0-m130^post106 == 0 /\ -r_off32^post106+r_off32^0 == 0 /\ -checkpoint^post106+checkpoint^0 == 0 /\ -apsim_bound11113^post106+apsim_bound11113^0 == 0 /\ -seed2^post106+seed2^0 == 0 /\ __const_65536^0-__const_65536^post106 == 0 /\ -fcode5^post106+fcode5^0 == 0 /\ apsim_incnt^0-apsim_incnt^post106 == 0 /\ hshift11^0-hshift11^post106 == 0 /\ -hsize^post106+hsize^0 == 0 /\ free_ent^0-free_ent^post106 == 0 /\ -hsize___027^post106+hsize___027^0 == 0 /\ n44^0-n44^post106 == 0 /\ i29^0-i29^post106 == 0 /\ -n40^post106+n40^0 == 0 /\ -maxcode^post106+maxcode^0 == 0 /\ -i3^post106+i3^0 == 0 /\ -i41^post106+i41^0 == 0 /\ tmp12^0-tmp12^post106 == 0 /\ -in_count^post106+in_count^0 == 0 /\ -__const_8388607^post106+__const_8388607^0 == 0 /\ exit_stat^0-exit_stat^post106 == 0 /\ 1-i6^0 <= 0 /\ __const_429496^0-__const_429496^post106 == 0 /\ __const_8^0-__const_8^post106 == 0 /\ tabort4^0-tabort4^post106 == 0 /\ tmp___017^0-tmp___017^post106 == 0 /\ -disp9^post106+disp9^0 == 0 /\ -tmp___014^post106+tmp___014^0 == 0 /\ -__const_10000^post106+__const_10000^0 == 0 /\ -__const_2147483647^post106+__const_2147483647^0 == 0 /\ i45^0-i45^post106 == 0 /\ -n_bits^post106+n_bits^0 == 0 /\ -__const_50^post106+__const_50^0 == 0 /\ -m122^post106+m122^0 == 0 /\ rat26^0-rat26^post106 == 0 /\ -clear_flg^post106+clear_flg^0 == 0 /\ -hsize_reg10^post106+hsize_reg10^0 == 0 /\ -i21^post106+i21^0 == 0 /\ block_compress^0-block_compress^post106 == 0 /\ ent8^0-ent8^post106 == 0 /\ -maxbits^post106+maxbits^0 == 0 /\ -bytes_out^post106+bytes_out^0 == 0 /\ -tmp___024^post106+tmp___024^0 == 0), cost: 1
 106: l66 -> l6 : __const_10000^0'=__const_10000^post107, __const_16^0'=__const_16^post107, __const_2147483647^0'=__const_2147483647^post107, __const_256^0'=__const_256^post107, __const_257^0'=__const_257^post107, __const_429496^0'=__const_429496^post107, __const_50^0'=__const_50^post107, __const_53^0'=__const_53^post107, __const_65536^0'=__const_65536^post107, __const_8388607^0'=__const_8388607^post107, __const_8^0'=__const_8^post107, __const_9^0'=__const_9^post107, apsim_bound11113^0'=apsim_bound11113^post107, apsim_incnt^0'=apsim_incnt^post107, bits33^0'=bits33^post107, block_compress^0'=block_compress^post107, bytes_out^0'=bytes_out^post107, c37^0'=c37^post107, c7^0'=c7^post107, checkpoint^0'=checkpoint^post107, clear_flg^0'=clear_flg^post107, code31^0'=code31^post107, count^0'=count^post107, disp9^0'=disp9^post107, ent8^0'=ent8^post107, exit_stat^0'=exit_stat^post107, fcode5^0'=fcode5^post107, free_ent^0'=free_ent^post107, hshift11^0'=hshift11^post107, hsize^0'=hsize^post107, hsize___019^0'=hsize___019^post107, hsize___027^0'=hsize___027^post107, hsize_reg10^0'=hsize_reg10^post107, i21^0'=i21^post107, i29^0'=i29^post107, i3^0'=i3^post107, i41^0'=i41^post107, i45^0'=i45^post107, i6^0'=i6^post107, in_count^0'=in_count^post107, incnt^0'=incnt^post107, m122^0'=m122^post107, m130^0'=m130^post107, maxbits^0'=maxbits^post107, maxcode^0'=maxcode^post107, maxmaxcode^0'=maxmaxcode^post107, n40^0'=n40^post107, n44^0'=n44^post107, n_bits^0'=n_bits^post107, offset^0'=offset^post107, out_count^0'=out_count^post107, r_off32^0'=r_off32^post107, rat26^0'=rat26^post107, ratio^0'=ratio^post107, ret_getbyte18^0'=ret_getbyte18^post107, ret_getbyte25^0'=ret_getbyte25^post107, seed2^0'=seed2^post107, tabort4^0'=tabort4^post107, tmp12^0'=tmp12^post107, tmp___014^0'=tmp___014^post107, tmp___017^0'=tmp___017^post107, tmp___024^0'=tmp___024^post107, tmp___115^0'=tmp___115^post107, (apsim_bound11113^0-apsim_bound11113^post107 == 0 /\ c37^0-c37^post107 == 0 /\ -checkpoint^post107+checkpoint^0 == 0 /\ n40^0-n40^post107 == 0 /\ -bytes_out^post107+bytes_out^0 == 0 /\ -__const_50^post107+__const_50^0 == 0 /\ __const_257^0-__const_257^post107 == 0 /\ __const_9^0-__const_9^post107 == 0 /\ c7^0-c7^post107 == 0 /\ -i3^post107+i3^0 == 0 /\ -i41^post107+i41^0 == 0 /\ i29^0-i29^post107 == 0 /\ -exit_stat^post107+exit_stat^0 == 0 /\ -i21^post107+i21^0 == 0 /\ -fcode5^post107+fcode5^0 == 0 /\ out_count^0-out_count^post107 == 0 /\ offset^0-offset^post107 == 0 /\ bits33^0-bits33^post107 == 0 /\ hsize___027^0-hsize___027^post107 == 0 /\ __const_53^0-__const_53^post107 == 0 /\ tmp12^0-tmp12^post107 == 0 /\ -ret_getbyte18^post107+ret_getbyte18^0 == 0 /\ -tmp___024^post107+tmp___024^0 == 0 /\ hshift11^0-hshift11^post107 == 0 /\ 1+i6^0 <= 0 /\ apsim_incnt^0-apsim_incnt^post107 == 0 /\ -tmp___014^post107+tmp___014^0 == 0 /\ -__const_10000^post107+__const_10000^0 == 0 /\ -in_count^post107+in_count^0 == 0 /\ -clear_flg^post107+clear_flg^0 == 0 /\ hsize___019^0-hsize___019^post107 == 0 /\ maxmaxcode^0-maxmaxcode^post107 == 0 /\ -tabort4^post107+tabort4^0 == 0 /\ -m122^post107+m122^0 == 0 /\ -count^post107+count^0 == 0 /\ m130^0-m130^post107 == 0 /\ -hsize_reg10^post107+hsize_reg10^0 == 0 /\ __const_429496^0-__const_429496^post107 == 0 /\ -disp9^post107+disp9^0 == 0 /\ __const_65536^0-__const_65536^post107 == 0 /\ -incnt^post107+incnt^0 == 0 /\ -n_bits^post107+n_bits^0 == 0 /\ i45^0-i45^post107 == 0 /\ -hsize^post107+hsize^0 == 0 /\ free_ent^0-free_ent^post107 == 0 /\ tmp___115^0-tmp___115^post107 == 0 /\ maxbits^0-maxbits^post107 == 0 /\ -r_off32^post107+r_off32^0 == 0 /\ n44^0-n44^post107 == 0 /\ __const_8^0-__const_8^post107 == 0 /\ -__const_8388607^post107+__const_8388607^0 == 0 /\ __const_2147483647^0-__const_2147483647^post107 == 0 /\ -ratio^post107+ratio^0 == 0 /\ -maxcode^post107+maxcode^0 == 0 /\ block_compress^0-block_compress^post107 == 0 /\ code31^0-code31^post107 == 0 /\ ent8^0-ent8^post107 == 0 /\ __const_16^0-__const_16^post107 == 0 /\ ret_getbyte25^0-ret_getbyte25^post107 == 0 /\ rat26^0-rat26^post107 == 0 /\ tmp___017^0-tmp___017^post107 == 0 /\ -__const_256^post107+__const_256^0 == 0 /\ -seed2^post107+seed2^0 == 0 /\ -i6^post107+i6^0 == 0), cost: 1
 107: l66 -> l6 : __const_10000^0'=__const_10000^post108, __const_16^0'=__const_16^post108, __const_2147483647^0'=__const_2147483647^post108, __const_256^0'=__const_256^post108, __const_257^0'=__const_257^post108, __const_429496^0'=__const_429496^post108, __const_50^0'=__const_50^post108, __const_53^0'=__const_53^post108, __const_65536^0'=__const_65536^post108, __const_8388607^0'=__const_8388607^post108, __const_8^0'=__const_8^post108, __const_9^0'=__const_9^post108, apsim_bound11113^0'=apsim_bound11113^post108, apsim_incnt^0'=apsim_incnt^post108, bits33^0'=bits33^post108, block_compress^0'=block_compress^post108, bytes_out^0'=bytes_out^post108, c37^0'=c37^post108, c7^0'=c7^post108, checkpoint^0'=checkpoint^post108, clear_flg^0'=clear_flg^post108, code31^0'=code31^post108, count^0'=count^post108, disp9^0'=disp9^post108, ent8^0'=ent8^post108, exit_stat^0'=exit_stat^post108, fcode5^0'=fcode5^post108, free_ent^0'=free_ent^post108, hshift11^0'=hshift11^post108, hsize^0'=hsize^post108, hsize___019^0'=hsize___019^post108, hsize___027^0'=hsize___027^post108, hsize_reg10^0'=hsize_reg10^post108, i21^0'=i21^post108, i29^0'=i29^post108, i3^0'=i3^post108, i41^0'=i41^post108, i45^0'=i45^post108, i6^0'=i6^post108, in_count^0'=in_count^post108, incnt^0'=incnt^post108, m122^0'=m122^post108, m130^0'=m130^post108, maxbits^0'=maxbits^post108, maxcode^0'=maxcode^post108, maxmaxcode^0'=maxmaxcode^post108, n40^0'=n40^post108, n44^0'=n44^post108, n_bits^0'=n_bits^post108, offset^0'=offset^post108, out_count^0'=out_count^post108, r_off32^0'=r_off32^post108, rat26^0'=rat26^post108, ratio^0'=ratio^post108, ret_getbyte18^0'=ret_getbyte18^post108, ret_getbyte25^0'=ret_getbyte25^post108, seed2^0'=seed2^post108, tabort4^0'=tabort4^post108, tmp12^0'=tmp12^post108, tmp___014^0'=tmp___014^post108, tmp___017^0'=tmp___017^post108, tmp___024^0'=tmp___024^post108, tmp___115^0'=tmp___115^post108, (-seed2^post108+seed2^0 == 0 /\ -m122^post108+m122^0 == 0 /\ maxcode^0-maxcode^post108 == 0 /\ i29^0-i29^post108 == 0 /\ __const_8388607^0-__const_8388607^post108 == 0 /\ hsize___027^0-hsize___027^post108 == 0 /\ offset^0-offset^post108 == 0 /\ -__const_256^post108+__const_256^0 == 0 /\ -n_bits^post108+n_bits^0 == 0 /\ __const_257^0-__const_257^post108 == 0 /\ -hsize_reg10^post108+hsize_reg10^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post108 == 0 /\ apsim_bound11113^0-apsim_bound11113^post108 == 0 /\ -hsize^post108+hsize^0 == 0 /\ -__const_10000^post108+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post108 == 0 /\ -hsize___019^post108+hsize___019^0 == 0 /\ -r_off32^post108+r_off32^0 == 0 /\ -ratio^post108+ratio^0 == 0 /\ -incnt^post108+incnt^0 == 0 /\ -n40^post108+n40^0 == 0 /\ m130^0-m130^post108 == 0 /\ __const_9^0-__const_9^post108 == 0 /\ -tmp___115^post108+tmp___115^0 == 0 /\ i6^0 <= 0 /\ ent8^0-ent8^post108 == 0 /\ i45^0-i45^post108 == 0 /\ -exit_stat^post108+exit_stat^0 == 0 /\ n44^0-n44^post108 == 0 /\ __const_65536^0-__const_65536^post108 == 0 /\ -__const_50^post108+__const_50^0 == 0 /\ -i41^post108+i41^0 == 0 /\ -1+disp9^post108 == 0 /\ apsim_incnt^0-apsim_incnt^post108 == 0 /\ __const_16^0-__const_16^post108 == 0 /\ -i6^post108+i6^0 == 0 /\ -in_count^post108+in_count^0 == 0 /\ tmp12^0-tmp12^post108 == 0 /\ bits33^0-bits33^post108 == 0 /\ -i21^post108+i21^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post108 == 0 /\ __const_53^0-__const_53^post108 == 0 /\ tmp___017^0-tmp___017^post108 == 0 /\ -i6^0 <= 0 /\ -checkpoint^post108+checkpoint^0 == 0 /\ -block_compress^post108+block_compress^0 == 0 /\ -__const_8^post108+__const_8^0 == 0 /\ -clear_flg^post108+clear_flg^0 == 0 /\ -bytes_out^post108+bytes_out^0 == 0 /\ tabort4^0-tabort4^post108 == 0 /\ count^0-count^post108 == 0 /\ rat26^0-rat26^post108 == 0 /\ free_ent^0-free_ent^post108 == 0 /\ hshift11^0-hshift11^post108 == 0 /\ -maxbits^post108+maxbits^0 == 0 /\ -tmp___024^post108+tmp___024^0 == 0 /\ c37^0-c37^post108 == 0 /\ out_count^0-out_count^post108 == 0 /\ -code31^post108+code31^0 == 0 /\ -fcode5^post108+fcode5^0 == 0 /\ -tmp___014^post108+tmp___014^0 == 0 /\ __const_429496^0-__const_429496^post108 == 0 /\ c7^0-c7^post108 == 0 /\ -i3^post108+i3^0 == 0 /\ __const_2147483647^0-__const_2147483647^post108 == 0), cost: 1
 108: l67 -> l62 : __const_10000^0'=__const_10000^post109, __const_16^0'=__const_16^post109, __const_2147483647^0'=__const_2147483647^post109, __const_256^0'=__const_256^post109, __const_257^0'=__const_257^post109, __const_429496^0'=__const_429496^post109, __const_50^0'=__const_50^post109, __const_53^0'=__const_53^post109, __const_65536^0'=__const_65536^post109, __const_8388607^0'=__const_8388607^post109, __const_8^0'=__const_8^post109, __const_9^0'=__const_9^post109, apsim_bound11113^0'=apsim_bound11113^post109, apsim_incnt^0'=apsim_incnt^post109, bits33^0'=bits33^post109, block_compress^0'=block_compress^post109, bytes_out^0'=bytes_out^post109, c37^0'=c37^post109, c7^0'=c7^post109, checkpoint^0'=checkpoint^post109, clear_flg^0'=clear_flg^post109, code31^0'=code31^post109, count^0'=count^post109, disp9^0'=disp9^post109, ent8^0'=ent8^post109, exit_stat^0'=exit_stat^post109, fcode5^0'=fcode5^post109, free_ent^0'=free_ent^post109, hshift11^0'=hshift11^post109, hsize^0'=hsize^post109, hsize___019^0'=hsize___019^post109, hsize___027^0'=hsize___027^post109, hsize_reg10^0'=hsize_reg10^post109, i21^0'=i21^post109, i29^0'=i29^post109, i3^0'=i3^post109, i41^0'=i41^post109, i45^0'=i45^post109, i6^0'=i6^post109, in_count^0'=in_count^post109, incnt^0'=incnt^post109, m122^0'=m122^post109, m130^0'=m130^post109, maxbits^0'=maxbits^post109, maxcode^0'=maxcode^post109, maxmaxcode^0'=maxmaxcode^post109, n40^0'=n40^post109, n44^0'=n44^post109, n_bits^0'=n_bits^post109, offset^0'=offset^post109, out_count^0'=out_count^post109, r_off32^0'=r_off32^post109, rat26^0'=rat26^post109, ratio^0'=ratio^post109, ret_getbyte18^0'=ret_getbyte18^post109, ret_getbyte25^0'=ret_getbyte25^post109, seed2^0'=seed2^post109, tabort4^0'=tabort4^post109, tmp12^0'=tmp12^post109, tmp___014^0'=tmp___014^post109, tmp___017^0'=tmp___017^post109, tmp___024^0'=tmp___024^post109, tmp___115^0'=tmp___115^post109, (maxmaxcode^0-maxmaxcode^post109 == 0 /\ -i21^post109+i21^0 == 0 /\ __const_9^0-__const_9^post109 == 0 /\ out_count^0-out_count^post109 == 0 /\ -i6^post109+i6^0 == 0 /\ c37^0-c37^post109 == 0 /\ -tmp___014^post109+tmp___014^0 == 0 /\ -ratio^post109+ratio^0 == 0 /\ -in_count^post109+in_count^0 == 0 /\ -clear_flg^post109+clear_flg^0 == 0 /\ ent8^0-ent8^post109 == 0 /\ -bytes_out^post109+bytes_out^0 == 0 /\ bits33^0-bits33^post109 == 0 /\ -__const_8388607^post109+__const_8388607^0 == 0 /\ n40^0-n40^post109 == 0 /\ -tmp___024^post109+tmp___024^0 == 0 /\ -tmp___115^post109+tmp___115^0 == 0 /\ code31^0-code31^post109 == 0 /\ -checkpoint^post109+checkpoint^0 == 0 /\ c7^0-c7^post109 == 0 /\ offset^0-offset^post109 == 0 /\ __const_65536^0-__const_65536^post109 == 0 /\ n44^0-n44^post109 == 0 /\ apsim_incnt^0-apsim_incnt^post109 == 0 /\ hshift11^0-hshift11^post109 == 0 /\ hsize___027^0-hsize___027^post109 == 0 /\ i29^0-i29^post109 == 0 /\ -m122^post109+m122^0 == 0 /\ -disp9^post109+disp9^0 == 0 /\ -ret_getbyte18^post109+ret_getbyte18^0 == 0 /\ -fcode5^post109+fcode5^0 == 0 /\ __const_257^0-__const_257^post109 == 0 /\ __const_53^0-__const_53^post109 == 0 /\ -r_off32^post109+r_off32^0 == 0 /\ -apsim_bound11113^post109+apsim_bound11113^0 == 0 /\ hsize___019^0-hsize___019^post109 == 0 /\ -exit_stat^post109+exit_stat^0 == 0 /\ free_ent^0-free_ent^post109 == 0 /\ -i3^post109+i3^0 == 0 /\ -__const_2147483647^post109+__const_2147483647^0 == 0 /\ tmp___017^0-tmp___017^post109 == 0 /\ -__const_256^post109+__const_256^0 == 0 /\ -maxbits^post109+maxbits^0 == 0 /\ -maxcode^post109+maxcode^0 == 0 /\ m130^0-m130^post109 == 0 /\ -__const_10000^post109+__const_10000^0 == 0 /\ -hsize^post109+hsize^0 == 0 /\ -hsize_reg10^post109+hsize_reg10^0 == 0 /\ __const_8^0-__const_8^post109 == 0 /\ tmp12^0-tmp12^post109 == 0 /\ i45^0-i45^post109 == 0 /\ -tabort4^post109+tabort4^0 == 0 /\ -seed2^post109+seed2^0 == 0 /\ __const_429496^0-__const_429496^post109 == 0 /\ block_compress^0-block_compress^post109 == 0 /\ rat26^0-rat26^post109 == 0 /\ -incnt^post109+incnt^0 == 0 /\ __const_16^0-__const_16^post109 == 0 /\ -count^post109+count^0 == 0 /\ -__const_50^post109+__const_50^0 == 0 /\ -n_bits^post109+n_bits^0 == 0 /\ -i41^post109+i41^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post109 == 0), cost: 1
 109: l67 -> l66 : __const_10000^0'=__const_10000^post110, __const_16^0'=__const_16^post110, __const_2147483647^0'=__const_2147483647^post110, __const_256^0'=__const_256^post110, __const_257^0'=__const_257^post110, __const_429496^0'=__const_429496^post110, __const_50^0'=__const_50^post110, __const_53^0'=__const_53^post110, __const_65536^0'=__const_65536^post110, __const_8388607^0'=__const_8388607^post110, __const_8^0'=__const_8^post110, __const_9^0'=__const_9^post110, apsim_bound11113^0'=apsim_bound11113^post110, apsim_incnt^0'=apsim_incnt^post110, bits33^0'=bits33^post110, block_compress^0'=block_compress^post110, bytes_out^0'=bytes_out^post110, c37^0'=c37^post110, c7^0'=c7^post110, checkpoint^0'=checkpoint^post110, clear_flg^0'=clear_flg^post110, code31^0'=code31^post110, count^0'=count^post110, disp9^0'=disp9^post110, ent8^0'=ent8^post110, exit_stat^0'=exit_stat^post110, fcode5^0'=fcode5^post110, free_ent^0'=free_ent^post110, hshift11^0'=hshift11^post110, hsize^0'=hsize^post110, hsize___019^0'=hsize___019^post110, hsize___027^0'=hsize___027^post110, hsize_reg10^0'=hsize_reg10^post110, i21^0'=i21^post110, i29^0'=i29^post110, i3^0'=i3^post110, i41^0'=i41^post110, i45^0'=i45^post110, i6^0'=i6^post110, in_count^0'=in_count^post110, incnt^0'=incnt^post110, m122^0'=m122^post110, m130^0'=m130^post110, maxbits^0'=maxbits^post110, maxcode^0'=maxcode^post110, maxmaxcode^0'=maxmaxcode^post110, n40^0'=n40^post110, n44^0'=n44^post110, n_bits^0'=n_bits^post110, offset^0'=offset^post110, out_count^0'=out_count^post110, r_off32^0'=r_off32^post110, rat26^0'=rat26^post110, ratio^0'=ratio^post110, ret_getbyte18^0'=ret_getbyte18^post110, ret_getbyte25^0'=ret_getbyte25^post110, seed2^0'=seed2^post110, tabort4^0'=tabort4^post110, tmp12^0'=tmp12^post110, tmp___014^0'=tmp___014^post110, tmp___017^0'=tmp___017^post110, tmp___024^0'=tmp___024^post110, tmp___115^0'=tmp___115^post110, (hsize___019^0-hsize___019^post110 == 0 /\ tmp12^0-tmp12^post110 == 0 /\ n40^0-n40^post110 == 0 /\ -i3^post110+i3^0 == 0 /\ c7^0-c7^post110 == 0 /\ __const_257^0-__const_257^post110 == 0 /\ ent8^0-ent8^post110 == 0 /\ -i41^post110+i41^0 == 0 /\ rat26^0-rat26^post110 == 0 /\ exit_stat^0-exit_stat^post110 == 0 /\ i29^0-i29^post110 == 0 /\ apsim_bound11113^0-apsim_bound11113^post110 == 0 /\ -tmp___014^post110+tmp___014^0 == 0 /\ -in_count^post110+in_count^0 == 0 /\ m130^0-m130^post110 == 0 /\ -__const_50^post110+__const_50^0 == 0 /\ out_count^0-out_count^post110 == 0 /\ -n_bits^post110+n_bits^0 == 0 /\ __const_9^0-__const_9^post110 == 0 /\ -fcode5^post110+fcode5^0 == 0 /\ -clear_flg^post110+clear_flg^0 == 0 /\ -__const_10000^post110+__const_10000^0 == 0 /\ -hsize_reg10^post110+hsize_reg10^0 == 0 /\ __const_65536^0-__const_65536^post110 == 0 /\ offset^0-offset^post110 == 0 /\ -i21^post110+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post110 == 0 /\ -incnt^post110+incnt^0 == 0 /\ bits33^0-bits33^post110 == 0 /\ hsize___027^0-hsize___027^post110 == 0 /\ -bytes_out^post110+bytes_out^0 == 0 /\ -tmp___024^post110+tmp___024^0 == 0 /\ i45^0-i45^post110 == 0 /\ tmp___115^0-tmp___115^post110 == 0 /\ -__const_8388607^post110+__const_8388607^0 == 0 /\ n44^0-n44^post110 == 0 /\ apsim_incnt^0-apsim_incnt^post110 == 0 /\ hshift11^0-hshift11^post110 == 0 /\ __const_8^0-__const_8^post110 == 0 /\ free_ent^0-free_ent^post110 == 0 /\ maxbits^0-maxbits^post110 == 0 /\ -count^post110+count^0 == 0 /\ -ret_getbyte18^post110+ret_getbyte18^0 == 0 /\ __const_53^0-__const_53^post110 == 0 /\ -ratio^post110+ratio^0 == 0 /\ -__const_256^post110+__const_256^0 == 0 /\ -i6^post110+i6^0 == 0 /\ -r_off32^post110+r_off32^0 == 0 /\ code31^0-code31^post110 == 0 /\ -checkpoint^post110+checkpoint^0 == 0 /\ seed2^0-seed2^post110 == 0 /\ __const_2147483647^0-__const_2147483647^post110 == 0 /\ -tabort4^post110+tabort4^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post110 == 0 /\ m122^0-m122^post110 == 0 /\ c37^0-c37^post110 == 0 /\ __const_429496^0-__const_429496^post110 == 0 /\ -hsize^post110+hsize^0 == 0 /\ tmp___017^0-tmp___017^post110 == 0 /\ -maxcode^post110+maxcode^0 == 0 /\ -block_compress^post110+block_compress^0 == 0 /\ disp9^post110+i6^0-hsize_reg10^0 == 0 /\ __const_16^0-__const_16^post110 == 0), cost: 1
 110: l68 -> l67 : __const_10000^0'=__const_10000^post111, __const_16^0'=__const_16^post111, __const_2147483647^0'=__const_2147483647^post111, __const_256^0'=__const_256^post111, __const_257^0'=__const_257^post111, __const_429496^0'=__const_429496^post111, __const_50^0'=__const_50^post111, __const_53^0'=__const_53^post111, __const_65536^0'=__const_65536^post111, __const_8388607^0'=__const_8388607^post111, __const_8^0'=__const_8^post111, __const_9^0'=__const_9^post111, apsim_bound11113^0'=apsim_bound11113^post111, apsim_incnt^0'=apsim_incnt^post111, bits33^0'=bits33^post111, block_compress^0'=block_compress^post111, bytes_out^0'=bytes_out^post111, c37^0'=c37^post111, c7^0'=c7^post111, checkpoint^0'=checkpoint^post111, clear_flg^0'=clear_flg^post111, code31^0'=code31^post111, count^0'=count^post111, disp9^0'=disp9^post111, ent8^0'=ent8^post111, exit_stat^0'=exit_stat^post111, fcode5^0'=fcode5^post111, free_ent^0'=free_ent^post111, hshift11^0'=hshift11^post111, hsize^0'=hsize^post111, hsize___019^0'=hsize___019^post111, hsize___027^0'=hsize___027^post111, hsize_reg10^0'=hsize_reg10^post111, i21^0'=i21^post111, i29^0'=i29^post111, i3^0'=i3^post111, i41^0'=i41^post111, i45^0'=i45^post111, i6^0'=i6^post111, in_count^0'=in_count^post111, incnt^0'=incnt^post111, m122^0'=m122^post111, m130^0'=m130^post111, maxbits^0'=maxbits^post111, maxcode^0'=maxcode^post111, maxmaxcode^0'=maxmaxcode^post111, n40^0'=n40^post111, n44^0'=n44^post111, n_bits^0'=n_bits^post111, offset^0'=offset^post111, out_count^0'=out_count^post111, r_off32^0'=r_off32^post111, rat26^0'=rat26^post111, ratio^0'=ratio^post111, ret_getbyte18^0'=ret_getbyte18^post111, ret_getbyte25^0'=ret_getbyte25^post111, seed2^0'=seed2^post111, tabort4^0'=tabort4^post111, tmp12^0'=tmp12^post111, tmp___014^0'=tmp___014^post111, tmp___017^0'=tmp___017^post111, tmp___024^0'=tmp___024^post111, tmp___115^0'=tmp___115^post111, (free_ent^0-free_ent^post111 == 0 /\ -hsize___019^post111+hsize___019^0 == 0 /\ -hsize_reg10^post111+hsize_reg10^0 == 0 /\ -hsize^post111+hsize^0 == 0 /\ -disp9^post111+disp9^0 == 0 /\ -tabort4^post111+tabort4^0 == 0 /\ -fcode5^post111+fcode5^0 == 0 /\ hsize___027^0-hsize___027^post111 == 0 /\ -n44^post111+n44^0 == 0 /\ -n_bits^post111+n_bits^0 == 0 /\ __const_9^0-__const_9^post111 == 0 /\ rat26^0-rat26^post111 == 0 /\ -r_off32^post111+r_off32^0 == 0 /\ tmp___014^0-tmp___014^post111 == 0 /\ -code31^post111+code31^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post111 == 0 /\ n40^0-n40^post111 == 0 /\ -maxcode^post111+maxcode^0 == 0 /\ -tmp___017^post111+tmp___017^0 == 0 /\ i45^0-i45^post111 == 0 /\ ent8^0-ent8^post111 == 0 /\ -__const_256^post111+__const_256^0 == 0 /\ exit_stat^0-exit_stat^post111 == 0 /\ out_count^0-out_count^post111 == 0 /\ count^0-count^post111 == 0 /\ __const_2147483647^0-__const_2147483647^post111 == 0 /\ -checkpoint^post111+checkpoint^0 == 0 /\ __const_53^0-__const_53^post111 == 0 /\ bits33^0-bits33^post111 == 0 /\ -__const_50^post111+__const_50^0 == 0 /\ offset^0-offset^post111 == 0 /\ -block_compress^post111+block_compress^0 == 0 /\ -bytes_out^post111+bytes_out^0 == 0 /\ __const_65536^0-__const_65536^post111 == 0 /\ -c7^post111+c7^0 == 0 /\ -__const_429496^post111+__const_429496^0 == 0 /\ hshift11^0-hshift11^post111 == 0 /\ -maxbits^post111+maxbits^0 == 0 /\ __const_16^0-__const_16^post111 == 0 /\ ret_getbyte25^0-ret_getbyte25^post111 == 0 /\ -i29^post111+i29^0 == 0 /\ -i3^post111+i3^0 == 0 /\ m130^0-m130^post111 == 0 /\ -i41^post111+i41^0 == 0 /\ apsim_incnt^0-apsim_incnt^post111 == 0 /\ -i21^post111+i21^0 == 0 /\ -incnt^post111+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post111 == 0 /\ i6^0-i6^post111 == 0 /\ c37^0-c37^post111 == 0 /\ -ret_getbyte18^post111+ret_getbyte18^0 == 0 /\ tmp12^0-tmp12^post111 == 0 /\ -tmp___024^post111+tmp___024^0 == 0 /\ __const_8^0-__const_8^post111 == 0 /\ __const_257^0-__const_257^post111 == 0 /\ -__const_10000^post111+__const_10000^0 == 0 /\ tmp___115^0-tmp___115^post111 == 0 /\ -in_count^post111+in_count^0 == 0 /\ m122^0-m122^post111 == 0 /\ -clear_flg^post111+clear_flg^0 == 0 /\ -__const_8388607^post111+__const_8388607^0 == 0 /\ seed2^0-seed2^post111 == 0 /\ ratio^0-ratio^post111 == 0), cost: 1
 111: l68 -> l1 : __const_10000^0'=__const_10000^post112, __const_16^0'=__const_16^post112, __const_2147483647^0'=__const_2147483647^post112, __const_256^0'=__const_256^post112, __const_257^0'=__const_257^post112, __const_429496^0'=__const_429496^post112, __const_50^0'=__const_50^post112, __const_53^0'=__const_53^post112, __const_65536^0'=__const_65536^post112, __const_8388607^0'=__const_8388607^post112, __const_8^0'=__const_8^post112, __const_9^0'=__const_9^post112, apsim_bound11113^0'=apsim_bound11113^post112, apsim_incnt^0'=apsim_incnt^post112, bits33^0'=bits33^post112, block_compress^0'=block_compress^post112, bytes_out^0'=bytes_out^post112, c37^0'=c37^post112, c7^0'=c7^post112, checkpoint^0'=checkpoint^post112, clear_flg^0'=clear_flg^post112, code31^0'=code31^post112, count^0'=count^post112, disp9^0'=disp9^post112, ent8^0'=ent8^post112, exit_stat^0'=exit_stat^post112, fcode5^0'=fcode5^post112, free_ent^0'=free_ent^post112, hshift11^0'=hshift11^post112, hsize^0'=hsize^post112, hsize___019^0'=hsize___019^post112, hsize___027^0'=hsize___027^post112, hsize_reg10^0'=hsize_reg10^post112, i21^0'=i21^post112, i29^0'=i29^post112, i3^0'=i3^post112, i41^0'=i41^post112, i45^0'=i45^post112, i6^0'=i6^post112, in_count^0'=in_count^post112, incnt^0'=incnt^post112, m122^0'=m122^post112, m130^0'=m130^post112, maxbits^0'=maxbits^post112, maxcode^0'=maxcode^post112, maxmaxcode^0'=maxmaxcode^post112, n40^0'=n40^post112, n44^0'=n44^post112, n_bits^0'=n_bits^post112, offset^0'=offset^post112, out_count^0'=out_count^post112, r_off32^0'=r_off32^post112, rat26^0'=rat26^post112, ratio^0'=ratio^post112, ret_getbyte18^0'=ret_getbyte18^post112, ret_getbyte25^0'=ret_getbyte25^post112, seed2^0'=seed2^post112, tabort4^0'=tabort4^post112, tmp12^0'=tmp12^post112, tmp___014^0'=tmp___014^post112, tmp___017^0'=tmp___017^post112, tmp___024^0'=tmp___024^post112, tmp___115^0'=tmp___115^post112, (0 == 0 /\ tmp___017^0-tmp___017^post112 == 0 /\ hshift11^0-hshift11^post112 == 0 /\ -in_count^post112+in_count^0 == 0 /\ -i21^post112+i21^0 == 0 /\ -n40^post112+n40^0 == 0 /\ r_off32^0-r_off32^post112 == 0 /\ -clear_flg^post112+clear_flg^0 == 0 /\ -block_compress^post112+block_compress^0 == 0 /\ tabort4^0-tabort4^post112 == 0 /\ ret_getbyte18^0-ret_getbyte18^post112 == 0 /\ __const_8388607^0-__const_8388607^post112 == 0 /\ -tmp___014^post112+tmp___014^0 == 0 /\ -tmp12^post112+tmp12^0 == 0 /\ -c7^post112+c7^0 == 0 /\ -i45^post112+i45^0 == 0 /\ exit_stat^0-exit_stat^post112 == 0 /\ -seed2^post112+seed2^0 == 0 /\ maxcode^0-maxcode^post112 == 0 /\ __const_16^0-__const_16^post112 == 0 /\ -__const_8^post112+__const_8^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post112 == 0 /\ out_count^0-out_count^post112 == 0 /\ maxmaxcode^0-maxmaxcode^post112 == 0 /\ -apsim_incnt^post112+apsim_incnt^0 == 0 /\ -disp9^post112+disp9^0 == 0 /\ -free_ent^post112+free_ent^0 == 0 /\ -code31^post112+code31^0 == 0 /\ bytes_out^0-bytes_out^post112 == 0 /\ -rat26^post112+rat26^0 == 0 /\ -__const_429496^post112+__const_429496^0 == 0 /\ __const_9^0-__const_9^post112 == 0 /\ -maxbits^post112+maxbits^0 == 0 /\ m122^0-m122^post112 == 0 /\ -ratio^post112+ratio^0 == 0 /\ -__const_10000^post112+__const_10000^0 == 0 /\ -__const_256^post112+__const_256^0 == 0 /\ -__const_2147483647^post112+__const_2147483647^0 == 0 /\ c37^0-c37^post112 == 0 /\ -tmp___024^post112+tmp___024^0 == 0 /\ -tmp___115^post112+tmp___115^0 == 0 /\ n44^0-n44^post112 == 0 /\ -hsize_reg10^post112+hsize_reg10^0 == 0 /\ n_bits^0-n_bits^post112 == 0 /\ -hsize___019^post112+hsize___019^0 == 0 /\ -hsize^post112+hsize^0 == 0 /\ hsize___027^0-hsize___027^post112 == 0 /\ -i41^post112+i41^0 == 0 /\ bits33^0-bits33^post112 == 0 /\ -ret_getbyte25^post112+ret_getbyte25^0 == 0 /\ -incnt^post112+incnt^0 == 0 /\ i3^0-i3^post112 == 0 /\ __const_53^0-__const_53^post112 == 0 /\ -fcode5^post112+fcode5^0 == 0 /\ -__const_65536^post112+__const_65536^0 == 0 /\ __const_257^0-__const_257^post112 == 0 /\ checkpoint^0-checkpoint^post112 == 0 /\ -m130^post112+m130^0 == 0 /\ count^0-count^post112 == 0 /\ -offset^post112+offset^0 == 0 /\ -__const_50^post112+__const_50^0 == 0 /\ i6^0-i6^post112 == 0 /\ -i29^post112+i29^0 == 0), cost: 1
 112: l68 -> l67 : __const_10000^0'=__const_10000^post113, __const_16^0'=__const_16^post113, __const_2147483647^0'=__const_2147483647^post113, __const_256^0'=__const_256^post113, __const_257^0'=__const_257^post113, __const_429496^0'=__const_429496^post113, __const_50^0'=__const_50^post113, __const_53^0'=__const_53^post113, __const_65536^0'=__const_65536^post113, __const_8388607^0'=__const_8388607^post113, __const_8^0'=__const_8^post113, __const_9^0'=__const_9^post113, apsim_bound11113^0'=apsim_bound11113^post113, apsim_incnt^0'=apsim_incnt^post113, bits33^0'=bits33^post113, block_compress^0'=block_compress^post113, bytes_out^0'=bytes_out^post113, c37^0'=c37^post113, c7^0'=c7^post113, checkpoint^0'=checkpoint^post113, clear_flg^0'=clear_flg^post113, code31^0'=code31^post113, count^0'=count^post113, disp9^0'=disp9^post113, ent8^0'=ent8^post113, exit_stat^0'=exit_stat^post113, fcode5^0'=fcode5^post113, free_ent^0'=free_ent^post113, hshift11^0'=hshift11^post113, hsize^0'=hsize^post113, hsize___019^0'=hsize___019^post113, hsize___027^0'=hsize___027^post113, hsize_reg10^0'=hsize_reg10^post113, i21^0'=i21^post113, i29^0'=i29^post113, i3^0'=i3^post113, i41^0'=i41^post113, i45^0'=i45^post113, i6^0'=i6^post113, in_count^0'=in_count^post113, incnt^0'=incnt^post113, m122^0'=m122^post113, m130^0'=m130^post113, maxbits^0'=maxbits^post113, maxcode^0'=maxcode^post113, maxmaxcode^0'=maxmaxcode^post113, n40^0'=n40^post113, n44^0'=n44^post113, n_bits^0'=n_bits^post113, offset^0'=offset^post113, out_count^0'=out_count^post113, r_off32^0'=r_off32^post113, rat26^0'=rat26^post113, ratio^0'=ratio^post113, ret_getbyte18^0'=ret_getbyte18^post113, ret_getbyte25^0'=ret_getbyte25^post113, seed2^0'=seed2^post113, tabort4^0'=tabort4^post113, tmp12^0'=tmp12^post113, tmp___014^0'=tmp___014^post113, tmp___017^0'=tmp___017^post113, tmp___024^0'=tmp___024^post113, tmp___115^0'=tmp___115^post113, (i3^0-i3^post113 == 0 /\ free_ent^0-free_ent^post113 == 0 /\ i21^0-i21^post113 == 0 /\ -__const_8388607^post113+__const_8388607^0 == 0 /\ -ratio^post113+ratio^0 == 0 /\ -code31^post113+code31^0 == 0 /\ -ent8^post113+ent8^0 == 0 /\ -disp9^post113+disp9^0 == 0 /\ -offset^post113+offset^0 == 0 /\ hsize___027^0-hsize___027^post113 == 0 /\ -fcode5^post113+fcode5^0 == 0 /\ r_off32^0-r_off32^post113 == 0 /\ -__const_16^post113+__const_16^0 == 0 /\ -__const_9^post113+__const_9^0 == 0 /\ -tmp___024^post113+tmp___024^0 == 0 /\ -block_compress^post113+block_compress^0 == 0 /\ -n40^post113+n40^0 == 0 /\ -tmp___014^post113+tmp___014^0 == 0 /\ -ret_getbyte25^post113+ret_getbyte25^0 == 0 /\ tmp___017^0-tmp___017^post113 == 0 /\ exit_stat^0-exit_stat^post113 == 0 /\ __const_10000^0-__const_10000^post113 == 0 /\ maxmaxcode^0-maxmaxcode^post113 == 0 /\ out_count^0-out_count^post113 == 0 /\ -tmp___115^post113+tmp___115^0 == 0 /\ __const_53^0-__const_53^post113 == 0 /\ -i41^post113+i41^0 == 0 /\ -incnt^post113+incnt^0 == 0 /\ n_bits^0-n_bits^post113 == 0 /\ -i45^post113+i45^0 == 0 /\ -m122^post113+m122^0 == 0 /\ bytes_out^0-bytes_out^post113 == 0 /\ -hsize^post113+hsize^0 == 0 /\ count^0-count^post113 == 0 /\ apsim_incnt^0-apsim_incnt^post113 == 0 /\ -__const_65536^post113+__const_65536^0 == 0 /\ -__const_429496^post113+__const_429496^0 == 0 /\ c37^0-c37^post113 == 0 /\ bits33^0-bits33^post113 == 0 /\ -maxbits^post113+maxbits^0 == 0 /\ m130^0-m130^post113 == 0 /\ -maxcode^post113+maxcode^0 == 0 /\ -i29^post113+i29^0 == 0 /\ __const_257^0-__const_257^post113 == 0 /\ hsize___019^0-hsize___019^post113 == 0 /\ checkpoint^0-checkpoint^post113 == 0 /\ -in_count^post113+in_count^0 == 0 /\ -__const_2147483647^post113+__const_2147483647^0 == 0 /\ -apsim_bound11113^post113+apsim_bound11113^0 == 0 /\ -rat26^post113+rat26^0 == 0 /\ tmp12^0-tmp12^post113 == 0 /\ i6^0-i6^post113 == 0 /\ tabort4^0-tabort4^post113 == 0 /\ __const_256^0-__const_256^post113 == 0 /\ -seed2^post113+seed2^0 == 0 /\ n44^0-n44^post113 == 0 /\ ret_getbyte18^0-ret_getbyte18^post113 == 0 /\ -clear_flg^post113+clear_flg^0 == 0 /\ hshift11^0-hshift11^post113 == 0 /\ __const_8^0-__const_8^post113 == 0 /\ __const_50^0-__const_50^post113 == 0 /\ -hsize_reg10^post113+hsize_reg10^0 == 0 /\ -c7^post113+c7^0 == 0), cost: 1
 114: l69 -> l68 : __const_10000^0'=__const_10000^post115, __const_16^0'=__const_16^post115, __const_2147483647^0'=__const_2147483647^post115, __const_256^0'=__const_256^post115, __const_257^0'=__const_257^post115, __const_429496^0'=__const_429496^post115, __const_50^0'=__const_50^post115, __const_53^0'=__const_53^post115, __const_65536^0'=__const_65536^post115, __const_8388607^0'=__const_8388607^post115, __const_8^0'=__const_8^post115, __const_9^0'=__const_9^post115, apsim_bound11113^0'=apsim_bound11113^post115, apsim_incnt^0'=apsim_incnt^post115, bits33^0'=bits33^post115, block_compress^0'=block_compress^post115, bytes_out^0'=bytes_out^post115, c37^0'=c37^post115, c7^0'=c7^post115, checkpoint^0'=checkpoint^post115, clear_flg^0'=clear_flg^post115, code31^0'=code31^post115, count^0'=count^post115, disp9^0'=disp9^post115, ent8^0'=ent8^post115, exit_stat^0'=exit_stat^post115, fcode5^0'=fcode5^post115, free_ent^0'=free_ent^post115, hshift11^0'=hshift11^post115, hsize^0'=hsize^post115, hsize___019^0'=hsize___019^post115, hsize___027^0'=hsize___027^post115, hsize_reg10^0'=hsize_reg10^post115, i21^0'=i21^post115, i29^0'=i29^post115, i3^0'=i3^post115, i41^0'=i41^post115, i45^0'=i45^post115, i6^0'=i6^post115, in_count^0'=in_count^post115, incnt^0'=incnt^post115, m122^0'=m122^post115, m130^0'=m130^post115, maxbits^0'=maxbits^post115, maxcode^0'=maxcode^post115, maxmaxcode^0'=maxmaxcode^post115, n40^0'=n40^post115, n44^0'=n44^post115, n_bits^0'=n_bits^post115, offset^0'=offset^post115, out_count^0'=out_count^post115, r_off32^0'=r_off32^post115, rat26^0'=rat26^post115, ratio^0'=ratio^post115, ret_getbyte18^0'=ret_getbyte18^post115, ret_getbyte25^0'=ret_getbyte25^post115, seed2^0'=seed2^post115, tabort4^0'=tabort4^post115, tmp12^0'=tmp12^post115, tmp___014^0'=tmp___014^post115, tmp___017^0'=tmp___017^post115, tmp___024^0'=tmp___024^post115, tmp___115^0'=tmp___115^post115, (0 == 0 /\ __const_16^0-__const_16^post115 == 0 /\ -tmp___024^post115+tmp___024^0 == 0 /\ -tmp___115^post115+tmp___115^0 == 0 /\ -block_compress^post115+block_compress^0 == 0 /\ -__const_2147483647^post115+__const_2147483647^0 == 0 /\ __const_53^0-__const_53^post115 == 0 /\ -1+in_count^post115-in_count^0 == 0 /\ __const_8^0-__const_8^post115 == 0 /\ -n44^post115+n44^0 == 0 /\ -seed2^post115+seed2^0 == 0 /\ -__const_10000^post115+__const_10000^0 == 0 /\ -hsize_reg10^post115+hsize_reg10^0 == 0 /\ -hsize___027^post115+hsize___027^0 == 0 /\ n40^0-n40^post115 == 0 /\ hshift11^0-hshift11^post115 == 0 /\ ret_getbyte25^0-ret_getbyte25^post115 == 0 /\ tabort4^0-tabort4^post115 == 0 /\ -count^post115+count^0 == 0 /\ hsize___019^0-hsize___019^post115 == 0 /\ -bytes_out^post115+bytes_out^0 == 0 /\ __const_256^0-__const_256^post115 == 0 /\ -hsize^post115+hsize^0 == 0 /\ tmp___014^post115-ret_getbyte25^0 == 0 /\ -apsim_bound11113^post115+apsim_bound11113^0 == 0 /\ -__const_50^post115+__const_50^0 == 0 /\ -maxcode^post115+maxcode^0 == 0 /\ -n_bits^post115+n_bits^0 == 0 /\ c37^0-c37^post115 == 0 /\ -i29^post115+i29^0 == 0 /\ -i41^post115+i41^0 == 0 /\ -incnt^post115+incnt^0 == 0 /\ -__const_65536^post115+__const_65536^0 == 0 /\ code31^0-code31^post115 == 0 /\ free_ent^0-free_ent^post115 == 0 /\ rat26^0-rat26^post115 == 0 /\ __const_9^0-__const_9^post115 == 0 /\ tmp___017^0-tmp___017^post115 == 0 /\ -ratio^post115+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post115 == 0 /\ -tmp___014^post115+c7^post115 == 0 /\ r_off32^0-r_off32^post115 == 0 /\ -__const_8388607^post115+__const_8388607^0 == 0 /\ -checkpoint^post115+checkpoint^0 == 0 /\ tmp12^0-tmp12^post115 == 0 /\ ret_getbyte18^0-ret_getbyte18^post115 == 0 /\ i21^0-i21^post115 == 0 /\ -clear_flg^post115+clear_flg^0 == 0 /\ __const_257^0-__const_257^post115 == 0 /\ apsim_incnt^0-apsim_incnt^post115 == 0 /\ -exit_stat^post115+exit_stat^0 == 0 /\ -disp9^post115+disp9^0 == 0 /\ m130^0-m130^post115 == 0 /\ -m122^post115+m122^0 == 0 /\ bits33^0-bits33^post115 == 0 /\ out_count^0-out_count^post115 == 0 /\ -__const_429496^post115+__const_429496^0 == 0 /\ -i3^post115+i3^0 == 0 /\ i45^0-i45^post115 == 0 /\ maxbits^0-maxbits^post115 == 0 /\ -offset^post115+offset^0 == 0 /\ ent8^0-ent8^post115 == 0), cost: 1
 116: l70 -> l69 : __const_10000^0'=__const_10000^post117, __const_16^0'=__const_16^post117, __const_2147483647^0'=__const_2147483647^post117, __const_256^0'=__const_256^post117, __const_257^0'=__const_257^post117, __const_429496^0'=__const_429496^post117, __const_50^0'=__const_50^post117, __const_53^0'=__const_53^post117, __const_65536^0'=__const_65536^post117, __const_8388607^0'=__const_8388607^post117, __const_8^0'=__const_8^post117, __const_9^0'=__const_9^post117, apsim_bound11113^0'=apsim_bound11113^post117, apsim_incnt^0'=apsim_incnt^post117, bits33^0'=bits33^post117, block_compress^0'=block_compress^post117, bytes_out^0'=bytes_out^post117, c37^0'=c37^post117, c7^0'=c7^post117, checkpoint^0'=checkpoint^post117, clear_flg^0'=clear_flg^post117, code31^0'=code31^post117, count^0'=count^post117, disp9^0'=disp9^post117, ent8^0'=ent8^post117, exit_stat^0'=exit_stat^post117, fcode5^0'=fcode5^post117, free_ent^0'=free_ent^post117, hshift11^0'=hshift11^post117, hsize^0'=hsize^post117, hsize___019^0'=hsize___019^post117, hsize___027^0'=hsize___027^post117, hsize_reg10^0'=hsize_reg10^post117, i21^0'=i21^post117, i29^0'=i29^post117, i3^0'=i3^post117, i41^0'=i41^post117, i45^0'=i45^post117, i6^0'=i6^post117, in_count^0'=in_count^post117, incnt^0'=incnt^post117, m122^0'=m122^post117, m130^0'=m130^post117, maxbits^0'=maxbits^post117, maxcode^0'=maxcode^post117, maxmaxcode^0'=maxmaxcode^post117, n40^0'=n40^post117, n44^0'=n44^post117, n_bits^0'=n_bits^post117, offset^0'=offset^post117, out_count^0'=out_count^post117, r_off32^0'=r_off32^post117, rat26^0'=rat26^post117, ratio^0'=ratio^post117, ret_getbyte18^0'=ret_getbyte18^post117, ret_getbyte25^0'=ret_getbyte25^post117, seed2^0'=seed2^post117, tabort4^0'=tabort4^post117, tmp12^0'=tmp12^post117, tmp___014^0'=tmp___014^post117, tmp___017^0'=tmp___017^post117, tmp___024^0'=tmp___024^post117, tmp___115^0'=tmp___115^post117, (-i41^post117+i41^0 == 0 /\ -n_bits^post117+n_bits^0 == 0 /\ -n44^post117+n44^0 == 0 /\ -i45^post117+i45^0 == 0 /\ -hsize^post117+hsize^0 == 0 /\ -m122^post117+m122^0 == 0 /\ -incnt^post117+incnt^0 == 0 /\ __const_16^0-__const_16^post117 == 0 /\ -__const_65536^post117+__const_65536^0 == 0 /\ __const_50^0-__const_50^post117 == 0 /\ hshift11^0-hshift11^post117 == 0 /\ __const_8^0-__const_8^post117 == 0 /\ -__const_429496^post117+__const_429496^0 == 0 /\ -i29^post117+i29^0 == 0 /\ -maxcode^post117+maxcode^0 == 0 /\ code31^0-code31^post117 == 0 /\ hsize___019^0-hsize___019^post117 == 0 /\ -apsim_bound11113^post117+apsim_bound11113^0 == 0 /\ -in_count^post117+in_count^0 == 0 /\ free_ent^0-free_ent^post117 == 0 /\ n40^0-n40^post117 == 0 /\ -__const_2147483647^post117+__const_2147483647^0 == 0 /\ -seed2^post117+seed2^0 == 0 /\ -tmp___115^post117+tmp___115^0 == 0 /\ -clear_flg^post117+clear_flg^0 == 0 /\ -hsize___027^post117+hsize___027^0 == 0 /\ -block_compress^post117+block_compress^0 == 0 /\ -c7^post117+c7^0 == 0 /\ bytes_out^0-bytes_out^post117 == 0 /\ ent8^0-ent8^post117 == 0 /\ checkpoint^0-checkpoint^post117 == 0 /\ __const_257^0-__const_257^post117 == 0 /\ offset^0-offset^post117 == 0 /\ maxbits^0-maxbits^post117 == 0 /\ i21^0-i21^post117 == 0 /\ __const_9^0-__const_9^post117 == 0 /\ i6^0-i6^post117 == 0 /\ tmp12^0-tmp12^post117 == 0 /\ -__const_8388607^post117+__const_8388607^0 == 0 /\ rat26^0-rat26^post117 == 0 /\ __const_256^0-__const_256^post117 == 0 /\ tabort4^0-tabort4^post117 == 0 /\ -fcode5^post117+fcode5^0 == 0 /\ -count^post117+count^0 == 0 /\ -disp9^post117+disp9^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post117 == 0 /\ exit_stat^0-exit_stat^post117 == 0 /\ -ratio^post117+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post117 == 0 /\ bits33^0-bits33^post117 == 0 /\ r_off32^0-r_off32^post117 == 0 /\ out_count^0-out_count^post117 == 0 /\ tmp___017^0-tmp___017^post117 == 0 /\ c37^0-c37^post117 == 0 /\ i3^0-i3^post117 == 0 /\ __const_53^0-__const_53^post117 == 0 /\ -__const_429496^0+ret_getbyte25^post117 == 0 /\ apsim_incnt^0-apsim_incnt^post117 == 0 /\ -tmp___014^post117+tmp___014^0 == 0 /\ -tmp___024^post117+tmp___024^0 == 0 /\ tmp___024^0 <= 0 /\ -hsize_reg10^post117+hsize_reg10^0 == 0 /\ m130^0-m130^post117 == 0 /\ -__const_10000^post117+__const_10000^0 == 0), cost: 1
 117: l70 -> l69 : __const_10000^0'=__const_10000^post118, __const_16^0'=__const_16^post118, __const_2147483647^0'=__const_2147483647^post118, __const_256^0'=__const_256^post118, __const_257^0'=__const_257^post118, __const_429496^0'=__const_429496^post118, __const_50^0'=__const_50^post118, __const_53^0'=__const_53^post118, __const_65536^0'=__const_65536^post118, __const_8388607^0'=__const_8388607^post118, __const_8^0'=__const_8^post118, __const_9^0'=__const_9^post118, apsim_bound11113^0'=apsim_bound11113^post118, apsim_incnt^0'=apsim_incnt^post118, bits33^0'=bits33^post118, block_compress^0'=block_compress^post118, bytes_out^0'=bytes_out^post118, c37^0'=c37^post118, c7^0'=c7^post118, checkpoint^0'=checkpoint^post118, clear_flg^0'=clear_flg^post118, code31^0'=code31^post118, count^0'=count^post118, disp9^0'=disp9^post118, ent8^0'=ent8^post118, exit_stat^0'=exit_stat^post118, fcode5^0'=fcode5^post118, free_ent^0'=free_ent^post118, hshift11^0'=hshift11^post118, hsize^0'=hsize^post118, hsize___019^0'=hsize___019^post118, hsize___027^0'=hsize___027^post118, hsize_reg10^0'=hsize_reg10^post118, i21^0'=i21^post118, i29^0'=i29^post118, i3^0'=i3^post118, i41^0'=i41^post118, i45^0'=i45^post118, i6^0'=i6^post118, in_count^0'=in_count^post118, incnt^0'=incnt^post118, m122^0'=m122^post118, m130^0'=m130^post118, maxbits^0'=maxbits^post118, maxcode^0'=maxcode^post118, maxmaxcode^0'=maxmaxcode^post118, n40^0'=n40^post118, n44^0'=n44^post118, n_bits^0'=n_bits^post118, offset^0'=offset^post118, out_count^0'=out_count^post118, r_off32^0'=r_off32^post118, rat26^0'=rat26^post118, ratio^0'=ratio^post118, ret_getbyte18^0'=ret_getbyte18^post118, ret_getbyte25^0'=ret_getbyte25^post118, seed2^0'=seed2^post118, tabort4^0'=tabort4^post118, tmp12^0'=tmp12^post118, tmp___014^0'=tmp___014^post118, tmp___017^0'=tmp___017^post118, tmp___024^0'=tmp___024^post118, tmp___115^0'=tmp___115^post118, (0 == 0 /\ -tabort4^post118+tabort4^0 == 0 /\ -r_off32^post118+r_off32^0 == 0 /\ -tmp___014^post118+tmp___014^0 == 0 /\ -exit_stat^post118+exit_stat^0 == 0 /\ __const_65536^0-__const_65536^post118 == 0 /\ -c7^post118+c7^0 == 0 /\ -bytes_out^post118+bytes_out^0 == 0 /\ -block_compress^post118+block_compress^0 == 0 /\ __const_53^0-__const_53^post118 == 0 /\ -seed2^post118+seed2^0 == 0 /\ -fcode5^post118+fcode5^0 == 0 /\ -i21^post118+i21^0 == 0 /\ m130^0-m130^post118 == 0 /\ -tmp___024^post118+tmp___024^0 == 0 /\ __const_8^0-__const_8^post118 == 0 /\ hsize___027^0-hsize___027^post118 == 0 /\ -ratio^post118+ratio^0 == 0 /\ i29^0-i29^post118 == 0 /\ __const_257^0-__const_257^post118 == 0 /\ -i41^post118+i41^0 == 0 /\ hsize___019^0-hsize___019^post118 == 0 /\ code31^0-code31^post118 == 0 /\ -n44^post118+n44^0 == 0 /\ -i6^post118+i6^0 == 0 /\ -__const_256^post118+__const_256^0 == 0 /\ hshift11^0-hshift11^post118 == 0 /\ -count^post118+count^0 == 0 /\ -clear_flg^post118+clear_flg^0 == 0 /\ -checkpoint^post118+checkpoint^0 == 0 /\ -__const_2147483647^post118+__const_2147483647^0 == 0 /\ -__const_10000^post118+__const_10000^0 == 0 /\ free_ent^0-free_ent^post118 == 0 /\ c37^0-c37^post118 == 0 /\ -__const_429496^post118+__const_429496^0 == 0 /\ -maxbits^post118+maxbits^0 == 0 /\ -maxcode^post118+maxcode^0 == 0 /\ tmp___017^0-tmp___017^post118 == 0 /\ out_count^0-out_count^post118 == 0 /\ maxmaxcode^0-maxmaxcode^post118 == 0 /\ ret_getbyte18^0-ret_getbyte18^post118 == 0 /\ -__const_50^post118+__const_50^0 == 0 /\ __const_9^0-__const_9^post118 == 0 /\ -hsize^post118+hsize^0 == 0 /\ -hsize_reg10^post118+hsize_reg10^0 == 0 /\ tmp___115^0-tmp___115^post118 == 0 /\ tmp12^0-tmp12^post118 == 0 /\ rat26^0-rat26^post118 == 0 /\ n40^0-n40^post118 == 0 /\ offset^0-offset^post118 == 0 /\ -m122^post118+m122^0 == 0 /\ -apsim_bound11113^post118+apsim_bound11113^0 == 0 /\ -__const_8388607^post118+__const_8388607^0 == 0 /\ bits33^0-bits33^post118 == 0 /\ ent8^0-ent8^post118 == 0 /\ 1-tmp___024^0 <= 0 /\ -i3^post118+i3^0 == 0 /\ __const_16^0-__const_16^post118 == 0 /\ apsim_incnt^0-apsim_incnt^post118 == 0 /\ -n_bits^post118+n_bits^0 == 0 /\ i45^0-i45^post118 == 0 /\ 1+incnt^post118-incnt^0 == 0 /\ -in_count^post118+in_count^0 == 0 /\ -disp9^post118+disp9^0 == 0), cost: 1
 118: l71 -> l69 : __const_10000^0'=__const_10000^post119, __const_16^0'=__const_16^post119, __const_2147483647^0'=__const_2147483647^post119, __const_256^0'=__const_256^post119, __const_257^0'=__const_257^post119, __const_429496^0'=__const_429496^post119, __const_50^0'=__const_50^post119, __const_53^0'=__const_53^post119, __const_65536^0'=__const_65536^post119, __const_8388607^0'=__const_8388607^post119, __const_8^0'=__const_8^post119, __const_9^0'=__const_9^post119, apsim_bound11113^0'=apsim_bound11113^post119, apsim_incnt^0'=apsim_incnt^post119, bits33^0'=bits33^post119, block_compress^0'=block_compress^post119, bytes_out^0'=bytes_out^post119, c37^0'=c37^post119, c7^0'=c7^post119, checkpoint^0'=checkpoint^post119, clear_flg^0'=clear_flg^post119, code31^0'=code31^post119, count^0'=count^post119, disp9^0'=disp9^post119, ent8^0'=ent8^post119, exit_stat^0'=exit_stat^post119, fcode5^0'=fcode5^post119, free_ent^0'=free_ent^post119, hshift11^0'=hshift11^post119, hsize^0'=hsize^post119, hsize___019^0'=hsize___019^post119, hsize___027^0'=hsize___027^post119, hsize_reg10^0'=hsize_reg10^post119, i21^0'=i21^post119, i29^0'=i29^post119, i3^0'=i3^post119, i41^0'=i41^post119, i45^0'=i45^post119, i6^0'=i6^post119, in_count^0'=in_count^post119, incnt^0'=incnt^post119, m122^0'=m122^post119, m130^0'=m130^post119, maxbits^0'=maxbits^post119, maxcode^0'=maxcode^post119, maxmaxcode^0'=maxmaxcode^post119, n40^0'=n40^post119, n44^0'=n44^post119, n_bits^0'=n_bits^post119, offset^0'=offset^post119, out_count^0'=out_count^post119, r_off32^0'=r_off32^post119, rat26^0'=rat26^post119, ratio^0'=ratio^post119, ret_getbyte18^0'=ret_getbyte18^post119, ret_getbyte25^0'=ret_getbyte25^post119, seed2^0'=seed2^post119, tabort4^0'=tabort4^post119, tmp12^0'=tmp12^post119, tmp___014^0'=tmp___014^post119, tmp___017^0'=tmp___017^post119, tmp___024^0'=tmp___024^post119, tmp___115^0'=tmp___115^post119, (ret_getbyte25^post119-__const_429496^0 == 0 /\ m130^0-m130^post119 == 0 /\ bits33^0-bits33^post119 == 0 /\ -ratio^post119+ratio^0 == 0 /\ -ret_getbyte18^post119+ret_getbyte18^0 == 0 /\ -in_count^post119+in_count^0 == 0 /\ -i6^post119+i6^0 == 0 /\ n44^0-n44^post119 == 0 /\ -__const_8388607^post119+__const_8388607^0 == 0 /\ -__const_256^post119+__const_256^0 == 0 /\ -__const_10000^post119+__const_10000^0 == 0 /\ code31^0-code31^post119 == 0 /\ __const_65536^0-__const_65536^post119 == 0 /\ apsim_incnt^0-apsim_incnt^post119 == 0 /\ i29^0-i29^post119 == 0 /\ -clear_flg^post119+clear_flg^0 == 0 /\ ent8^0-ent8^post119 == 0 /\ -hsize___019^post119+hsize___019^0 == 0 /\ -hsize_reg10^post119+hsize_reg10^0 == 0 /\ -exit_stat^post119+exit_stat^0 == 0 /\ -disp9^post119+disp9^0 == 0 /\ c37^0-c37^post119 == 0 /\ tmp___014^0-tmp___014^post119 == 0 /\ -m122^post119+m122^0 == 0 /\ __const_257^0-__const_257^post119 == 0 /\ __const_53^0-__const_53^post119 == 0 /\ -maxbits^post119+maxbits^0 == 0 /\ tmp12^0-tmp12^post119 == 0 /\ hsize___027^0-hsize___027^post119 == 0 /\ __const_8^0-__const_8^post119 == 0 /\ c7^0-c7^post119 == 0 /\ -i21^post119+i21^0 == 0 /\ __const_16^0-__const_16^post119 == 0 /\ hshift11^0-hshift11^post119 == 0 /\ tmp___115^0-tmp___115^post119 == 0 /\ -tmp___024^post119+tmp___024^0 == 0 /\ -tmp___017^post119+tmp___017^0 == 0 /\ -checkpoint^post119+checkpoint^0 == 0 /\ -bytes_out^post119+bytes_out^0 == 0 /\ -block_compress^post119+block_compress^0 == 0 /\ -seed2^post119+seed2^0 == 0 /\ -n_bits^post119+n_bits^0 == 0 /\ -tabort4^post119+tabort4^0 == 0 /\ __const_429496^0-__const_429496^post119 == 0 /\ i45^0-i45^post119 == 0 /\ free_ent^0-free_ent^post119 == 0 /\ rat26^0-rat26^post119 == 0 /\ out_count^0-out_count^post119 == 0 /\ __const_9^0-__const_9^post119 == 0 /\ -incnt^post119+incnt^0 == 0 /\ -count^post119+count^0 == 0 /\ -r_off32^post119+r_off32^0 == 0 /\ -hsize^post119+hsize^0 == 0 /\ -i3^post119+i3^0 == 0 /\ offset^0-offset^post119 == 0 /\ -apsim_bound11113^post119+apsim_bound11113^0 == 0 /\ -__const_50^post119+__const_50^0 == 0 /\ maxmaxcode^0-maxmaxcode^post119 == 0 /\ __const_2147483647^0-__const_2147483647^post119 == 0 /\ -maxcode^post119+maxcode^0 == 0 /\ -i41^post119+i41^0 == 0 /\ -fcode5^post119+fcode5^0 == 0 /\ incnt^0 <= 0 /\ -n40^post119+n40^0 == 0), cost: 1
 119: l71 -> l70 : __const_10000^0'=__const_10000^post120, __const_16^0'=__const_16^post120, __const_2147483647^0'=__const_2147483647^post120, __const_256^0'=__const_256^post120, __const_257^0'=__const_257^post120, __const_429496^0'=__const_429496^post120, __const_50^0'=__const_50^post120, __const_53^0'=__const_53^post120, __const_65536^0'=__const_65536^post120, __const_8388607^0'=__const_8388607^post120, __const_8^0'=__const_8^post120, __const_9^0'=__const_9^post120, apsim_bound11113^0'=apsim_bound11113^post120, apsim_incnt^0'=apsim_incnt^post120, bits33^0'=bits33^post120, block_compress^0'=block_compress^post120, bytes_out^0'=bytes_out^post120, c37^0'=c37^post120, c7^0'=c7^post120, checkpoint^0'=checkpoint^post120, clear_flg^0'=clear_flg^post120, code31^0'=code31^post120, count^0'=count^post120, disp9^0'=disp9^post120, ent8^0'=ent8^post120, exit_stat^0'=exit_stat^post120, fcode5^0'=fcode5^post120, free_ent^0'=free_ent^post120, hshift11^0'=hshift11^post120, hsize^0'=hsize^post120, hsize___019^0'=hsize___019^post120, hsize___027^0'=hsize___027^post120, hsize_reg10^0'=hsize_reg10^post120, i21^0'=i21^post120, i29^0'=i29^post120, i3^0'=i3^post120, i41^0'=i41^post120, i45^0'=i45^post120, i6^0'=i6^post120, in_count^0'=in_count^post120, incnt^0'=incnt^post120, m122^0'=m122^post120, m130^0'=m130^post120, maxbits^0'=maxbits^post120, maxcode^0'=maxcode^post120, maxmaxcode^0'=maxmaxcode^post120, n40^0'=n40^post120, n44^0'=n44^post120, n_bits^0'=n_bits^post120, offset^0'=offset^post120, out_count^0'=out_count^post120, r_off32^0'=r_off32^post120, rat26^0'=rat26^post120, ratio^0'=ratio^post120, ret_getbyte18^0'=ret_getbyte18^post120, ret_getbyte25^0'=ret_getbyte25^post120, seed2^0'=seed2^post120, tabort4^0'=tabort4^post120, tmp12^0'=tmp12^post120, tmp___014^0'=tmp___014^post120, tmp___017^0'=tmp___017^post120, tmp___024^0'=tmp___024^post120, tmp___115^0'=tmp___115^post120, (1-apsim_incnt^0+apsim_incnt^post120 == 0 /\ -m122^post120+m122^0 == 0 /\ ent8^0-ent8^post120 == 0 /\ maxcode^0-maxcode^post120 == 0 /\ offset^0-offset^post120 == 0 /\ -incnt^post120+incnt^0 == 0 /\ __const_9^0-__const_9^post120 == 0 /\ -n_bits^post120+n_bits^0 == 0 /\ c37^0-c37^post120 == 0 /\ exit_stat^0-exit_stat^post120 == 0 /\ hsize___027^0-hsize___027^post120 == 0 /\ bits33^0-bits33^post120 == 0 /\ maxmaxcode^0-maxmaxcode^post120 == 0 /\ -r_off32^post120+r_off32^0 == 0 /\ -apsim_incnt^0+tmp___024^post120 == 0 /\ -n40^post120+n40^0 == 0 /\ m130^0-m130^post120 == 0 /\ c7^0-c7^post120 == 0 /\ -in_count^post120+in_count^0 == 0 /\ -apsim_bound11113^post120+apsim_bound11113^0 == 0 /\ -__const_50^post120+__const_50^0 == 0 /\ -ret_getbyte18^post120+ret_getbyte18^0 == 0 /\ -__const_256^post120+__const_256^0 == 0 /\ -checkpoint^post120+checkpoint^0 == 0 /\ __const_65536^0-__const_65536^post120 == 0 /\ tmp___115^0-tmp___115^post120 == 0 /\ ret_getbyte25^0-ret_getbyte25^post120 == 0 /\ -hsize^post120+hsize^0 == 0 /\ n44^0-n44^post120 == 0 /\ i45^0-i45^post120 == 0 /\ -seed2^post120+seed2^0 == 0 /\ -tabort4^post120+tabort4^0 == 0 /\ __const_429496^0-__const_429496^post120 == 0 /\ tmp12^0-tmp12^post120 == 0 /\ -__const_8388607^post120+__const_8388607^0 == 0 /\ __const_2147483647^0-__const_2147483647^post120 == 0 /\ tmp___017^0-tmp___017^post120 == 0 /\ -count^post120+count^0 == 0 /\ __const_8^0-__const_8^post120 == 0 /\ -fcode5^post120+fcode5^0 == 0 /\ rat26^0-rat26^post120 == 0 /\ -disp9^post120+disp9^0 == 0 /\ -i29^post120+i29^0 == 0 /\ __const_16^0-__const_16^post120 == 0 /\ -i3^post120+i3^0 == 0 /\ __const_53^0-__const_53^post120 == 0 /\ -i41^post120+i41^0 == 0 /\ -clear_flg^post120+clear_flg^0 == 0 /\ -i6^post120+i6^0 == 0 /\ -bytes_out^post120+bytes_out^0 == 0 /\ -maxbits^post120+maxbits^0 == 0 /\ __const_257^0-__const_257^post120 == 0 /\ code31^0-code31^post120 == 0 /\ free_ent^0-free_ent^post120 == 0 /\ hshift11^0-hshift11^post120 == 0 /\ -ratio^post120+ratio^0 == 0 /\ -i21^post120+i21^0 == 0 /\ out_count^0-out_count^post120 == 0 /\ block_compress^0-block_compress^post120 == 0 /\ -hsize_reg10^post120+hsize_reg10^0 == 0 /\ -__const_10000^post120+__const_10000^0 == 0 /\ 1-incnt^0 <= 0 /\ -hsize___019^post120+hsize___019^0 == 0 /\ -tmp___014^post120+tmp___014^0 == 0), cost: 1
 125: l73 -> l56 : __const_10000^0'=__const_10000^post124, __const_16^0'=__const_16^post124, __const_2147483647^0'=__const_2147483647^post124, __const_256^0'=__const_256^post124, __const_257^0'=__const_257^post124, __const_429496^0'=__const_429496^post124, __const_50^0'=__const_50^post124, __const_53^0'=__const_53^post124, __const_65536^0'=__const_65536^post124, __const_8388607^0'=__const_8388607^post124, __const_8^0'=__const_8^post124, __const_9^0'=__const_9^post124, apsim_bound11113^0'=apsim_bound11113^post124, apsim_incnt^0'=apsim_incnt^post124, bits33^0'=bits33^post124, block_compress^0'=block_compress^post124, bytes_out^0'=bytes_out^post124, c37^0'=c37^post124, c7^0'=c7^post124, checkpoint^0'=checkpoint^post124, clear_flg^0'=clear_flg^post124, code31^0'=code31^post124, count^0'=count^post124, disp9^0'=disp9^post124, ent8^0'=ent8^post124, exit_stat^0'=exit_stat^post124, fcode5^0'=fcode5^post124, free_ent^0'=free_ent^post124, hshift11^0'=hshift11^post124, hsize^0'=hsize^post124, hsize___019^0'=hsize___019^post124, hsize___027^0'=hsize___027^post124, hsize_reg10^0'=hsize_reg10^post124, i21^0'=i21^post124, i29^0'=i29^post124, i3^0'=i3^post124, i41^0'=i41^post124, i45^0'=i45^post124, i6^0'=i6^post124, in_count^0'=in_count^post124, incnt^0'=incnt^post124, m122^0'=m122^post124, m130^0'=m130^post124, maxbits^0'=maxbits^post124, maxcode^0'=maxcode^post124, maxmaxcode^0'=maxmaxcode^post124, n40^0'=n40^post124, n44^0'=n44^post124, n_bits^0'=n_bits^post124, offset^0'=offset^post124, out_count^0'=out_count^post124, r_off32^0'=r_off32^post124, rat26^0'=rat26^post124, ratio^0'=ratio^post124, ret_getbyte18^0'=ret_getbyte18^post124, ret_getbyte25^0'=ret_getbyte25^post124, seed2^0'=seed2^post124, tabort4^0'=tabort4^post124, tmp12^0'=tmp12^post124, tmp___014^0'=tmp___014^post124, tmp___017^0'=tmp___017^post124, tmp___024^0'=tmp___024^post124, tmp___115^0'=tmp___115^post124, (-n40^post125+n40^0 == 0 /\ tmp___115^post125-tmp___115^post124 == 0 /\ -i45^post124+i45^post125 == 0 /\ hsize___027^0-hsize___027^post125 == 0 /\ -m122^post124+m122^post125 == 0 /\ -maxmaxcode^post124+maxmaxcode^post125 == 0 /\ -__const_10000^post124+__const_10000^post125 == 0 /\ -__const_256^post124+__const_256^post125 == 0 /\ -apsim_bound11113^post125+apsim_bound11113^0 == 0 /\ -__const_9^post124+__const_9^post125 == 0 /\ -i29^post124+i29^post125 == 0 /\ -__const_9^post125+__const_9^0 == 0 /\ n44^0-n44^post125 == 0 /\ -__const_257^post125+__const_257^0 == 0 /\ m130^0-m130^post125 == 0 /\ -m130^post124+m130^post125 == 0 /\ i6^0-i6^post125 == 0 /\ bytes_out^0-bytes_out^post125 == 0 /\ -__const_65536^post124+__const_65536^post125 == 0 /\ i3^0-i3^post125 == 0 /\ -1+seed2^post124 == 0 /\ maxcode^0-maxcode^post125 == 0 /\ -__const_16^post125+__const_16^0 == 0 /\ -__const_2147483647^post125+__const_2147483647^0 == 0 /\ i21^0-i21^post125 == 0 /\ -bits33^post124+bits33^post125 == 0 /\ apsim_incnt^0-apsim_incnt^post125 == 0 /\ -ratio^post124+ratio^post125 == 0 /\ -hsize___019^post125+hsize___019^0 == 0 /\ -n_bits^post124+n_bits^post125 == 0 /\ -hsize_reg10^post125+hsize_reg10^0 == 0 /\ -__const_8388607^post124+__const_8388607^post125 == 0 /\ count^0-count^post125 == 0 /\ -checkpoint^post124+checkpoint^post125 == 0 /\ c37^0-c37^post125 == 0 /\ -ent8^post124+ent8^post125 == 0 /\ -n_bits^post125+n_bits^0 == 0 /\ -fcode5^post124+fcode5^post125 == 0 /\ -incnt^post125+incnt^0 == 0 /\ -bytes_out^post124+bytes_out^post125 == 0 /\ ret_getbyte25^0-ret_getbyte25^post125 == 0 /\ -hsize_reg10^post124+hsize_reg10^post125 == 0 /\ -bits33^post125+bits33^0 == 0 /\ -in_count^post124+in_count^post125 == 0 /\ -seed2^post125+seed2^0 == 0 /\ -__const_429496^post124+__const_429496^post125 == 0 /\ -free_ent^post124+free_ent^post125 == 0 /\ -__const_50^post124+__const_50^post125 == 0 /\ -__const_65536^post125+__const_65536^0 == 0 /\ -free_ent^post125+free_ent^0 == 0 /\ tmp___024^post125-tmp___024^post124 == 0 /\ count^post124-__const_50^post125 == 0 /\ -i29^post125+i29^0 == 0 /\ -r_off32^post124+r_off32^post125 == 0 /\ -hsize___027^post124+hsize___027^post125 == 0 /\ -c37^post124+c37^post125 == 0 /\ -out_count^post124+out_count^post125 == 0 /\ -ent8^post125+ent8^0 == 0 /\ -i41^post125+i41^0 == 0 /\ i3^post124 == 0 /\ -maxbits^post124+maxbits^post125 == 0 /\ tmp12^0-tmp12^post125 == 0 /\ -maxbits^post125+maxbits^0 == 0 /\ -incnt^post124+incnt^post125 == 0 /\ exit_stat^0-exit_stat^post125 == 0 /\ __const_50^0-__const_50^post125 == 0 /\ hsize___019^post125-hsize___019^post124 == 0 /\ -__const_53^post124+__const_53^post125 == 0 /\ -ratio^post125+ratio^0 == 0 /\ -rat26^post124+rat26^post125 == 0 /\ __const_8^0-__const_8^post125 == 0 /\ hshift11^0-hshift11^post125 == 0 /\ -c7^post125+c7^0 == 0 /\ rat26^0-rat26^post125 == 0 /\ -block_compress^post124+block_compress^post125 == 0 /\ __const_10000^0-__const_10000^post125 == 0 /\ offset^post125-offset^post124 == 0 /\ -clear_flg^post125+clear_flg^0 == 0 /\ -tmp___014^post125+tmp___014^0 == 0 /\ -in_count^post125+in_count^0 == 0 /\ -c7^post124+c7^post125 == 0 /\ -maxcode^post124+maxcode^post125 == 0 /\ tmp___014^post125-tmp___014^post124 == 0 /\ -tmp___024^post125+tmp___024^0 == 0 /\ -__const_8388607^post125+__const_8388607^0 == 0 /\ tabort4^post125-tabort4^post124 == 0 /\ -i6^post124+i6^post125 == 0 /\ -tmp___115^post125+tmp___115^0 == 0 /\ __const_53^0-__const_53^post125 == 0 /\ disp9^post125-disp9^post124 == 0 /\ -__const_8^post124+__const_8^post125 == 0 /\ checkpoint^0-checkpoint^post125 == 0 /\ -i21^post124+i21^post125 == 0 /\ __const_257^post125-__const_257^post124 == 0 /\ r_off32^0-r_off32^post125 == 0 /\ tmp12^post125-tmp12^post124 == 0 /\ -block_compress^post125+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post125 == 0 /\ tabort4^0-tabort4^post125 == 0 /\ out_count^0-out_count^post125 == 0 /\ __const_256^0-__const_256^post125 == 0 /\ tmp___017^post125-tmp___017^post124 == 0 /\ -offset^post125+offset^0 == 0 /\ -hsize^post125+hsize^0 == 0 /\ -i41^post124+i41^post125 == 0 /\ -n44^post124+n44^post125 == 0 /\ maxmaxcode^0-maxmaxcode^post125 == 0 /\ -m122^post125+m122^0 == 0 /\ clear_flg^post125-clear_flg^post124 == 0 /\ tmp___017^0-tmp___017^post125 == 0 /\ -code31^post125+code31^0 == 0 /\ -apsim_incnt^post124+apsim_incnt^post125 == 0 /\ -hsize^post124+hsize^post125 == 0 /\ fcode5^0-fcode5^post125 == 0 /\ -ret_getbyte18^post124+ret_getbyte18^post125 == 0 /\ -code31^post124+code31^post125 == 0 /\ -__const_429496^post125+__const_429496^0 == 0 /\ n40^post125-n40^post124 == 0 /\ -__const_2147483647^post124+__const_2147483647^post125 == 0 /\ -exit_stat^post124+exit_stat^post125 == 0 /\ __const_16^post125-__const_16^post124 == 0 /\ -apsim_bound11113^post124+apsim_bound11113^post125 == 0 /\ -disp9^post125+disp9^0 == 0 /\ -i45^post125+i45^0 == 0 /\ -hshift11^post124+hshift11^post125 == 0 /\ -ret_getbyte25^post124+ret_getbyte25^post125 == 0), cost: 1

	Eliminating location l72 by chaining:

	Applied chaining

	First rule:
	l73 -> l72 : __const_10000^0'=__const_10000^post125, __const_16^0'=__const_16^post125, __const_2147483647^0'=__const_2147483647^post125, __const_256^0'=__const_256^post125, __const_257^0'=__const_257^post125, __const_429496^0'=__const_429496^post125, __const_50^0'=__const_50^post125, __const_53^0'=__const_53^post125, __const_65536^0'=__const_65536^post125, __const_8388607^0'=__const_8388607^post125, __const_8^0'=__const_8^post125, __const_9^0'=__const_9^post125, apsim_bound11113^0'=apsim_bound11113^post125, apsim_incnt^0'=apsim_incnt^post125, bits33^0'=bits33^post125, block_compress^0'=block_compress^post125, bytes_out^0'=bytes_out^post125, c37^0'=c37^post125, c7^0'=c7^post125, checkpoint^0'=checkpoint^post125, clear_flg^0'=clear_flg^post125, code31^0'=code31^post125, count^0'=count^post125, disp9^0'=disp9^post125, ent8^0'=ent8^post125, exit_stat^0'=exit_stat^post125, fcode5^0'=fcode5^post125, free_ent^0'=free_ent^post125, hshift11^0'=hshift11^post125, hsize^0'=hsize^post125, hsize___019^0'=hsize___019^post125, hsize___027^0'=hsize___027^post125, hsize_reg10^0'=hsize_reg10^post125, i21^0'=i21^post125, i29^0'=i29^post125, i3^0'=i3^post125, i41^0'=i41^post125, i45^0'=i45^post125, i6^0'=i6^post125, in_count^0'=in_count^post125, incnt^0'=incnt^post125, m122^0'=m122^post125, m130^0'=m130^post125, maxbits^0'=maxbits^post125, maxcode^0'=maxcode^post125, maxmaxcode^0'=maxmaxcode^post125, n40^0'=n40^post125, n44^0'=n44^post125, n_bits^0'=n_bits^post125, offset^0'=offset^post125, out_count^0'=out_count^post125, r_off32^0'=r_off32^post125, rat26^0'=rat26^post125, ratio^0'=ratio^post125, ret_getbyte18^0'=ret_getbyte18^post125, ret_getbyte25^0'=ret_getbyte25^post125, seed2^0'=seed2^post125, tabort4^0'=tabort4^post125, tmp12^0'=tmp12^post125, tmp___014^0'=tmp___014^post125, tmp___017^0'=tmp___017^post125, tmp___024^0'=tmp___024^post125, tmp___115^0'=tmp___115^post125, (-n40^post125+n40^0 == 0 /\ hsize___027^0-hsize___027^post125 == 0 /\ -apsim_bound11113^post125+apsim_bound11113^0 == 0 /\ -__const_9^post125+__const_9^0 == 0 /\ n44^0-n44^post125 == 0 /\ -__const_257^post125+__const_257^0 == 0 /\ m130^0-m130^post125 == 0 /\ i6^0-i6^post125 == 0 /\ bytes_out^0-bytes_out^post125 == 0 /\ i3^0-i3^post125 == 0 /\ maxcode^0-maxcode^post125 == 0 /\ -__const_16^post125+__const_16^0 == 0 /\ -__const_2147483647^post125+__const_2147483647^0 == 0 /\ i21^0-i21^post125 == 0 /\ apsim_incnt^0-apsim_incnt^post125 == 0 /\ -hsize___019^post125+hsize___019^0 == 0 /\ -hsize_reg10^post125+hsize_reg10^0 == 0 /\ count^0-count^post125 == 0 /\ c37^0-c37^post125 == 0 /\ -n_bits^post125+n_bits^0 == 0 /\ -incnt^post125+incnt^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post125 == 0 /\ -bits33^post125+bits33^0 == 0 /\ -seed2^post125+seed2^0 == 0 /\ -__const_65536^post125+__const_65536^0 == 0 /\ -free_ent^post125+free_ent^0 == 0 /\ -i29^post125+i29^0 == 0 /\ -ent8^post125+ent8^0 == 0 /\ -i41^post125+i41^0 == 0 /\ tmp12^0-tmp12^post125 == 0 /\ -maxbits^post125+maxbits^0 == 0 /\ exit_stat^0-exit_stat^post125 == 0 /\ __const_50^0-__const_50^post125 == 0 /\ -ratio^post125+ratio^0 == 0 /\ __const_8^0-__const_8^post125 == 0 /\ hshift11^0-hshift11^post125 == 0 /\ -c7^post125+c7^0 == 0 /\ rat26^0-rat26^post125 == 0 /\ __const_10000^0-__const_10000^post125 == 0 /\ -clear_flg^post125+clear_flg^0 == 0 /\ -tmp___014^post125+tmp___014^0 == 0 /\ -in_count^post125+in_count^0 == 0 /\ -tmp___024^post125+tmp___024^0 == 0 /\ -__const_8388607^post125+__const_8388607^0 == 0 /\ -tmp___115^post125+tmp___115^0 == 0 /\ __const_53^0-__const_53^post125 == 0 /\ checkpoint^0-checkpoint^post125 == 0 /\ r_off32^0-r_off32^post125 == 0 /\ -block_compress^post125+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post125 == 0 /\ tabort4^0-tabort4^post125 == 0 /\ out_count^0-out_count^post125 == 0 /\ __const_256^0-__const_256^post125 == 0 /\ -offset^post125+offset^0 == 0 /\ -hsize^post125+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post125 == 0 /\ -m122^post125+m122^0 == 0 /\ tmp___017^0-tmp___017^post125 == 0 /\ -code31^post125+code31^0 == 0 /\ fcode5^0-fcode5^post125 == 0 /\ -__const_429496^post125+__const_429496^0 == 0 /\ -disp9^post125+disp9^0 == 0 /\ -i45^post125+i45^0 == 0), cost: 1
	Second rule:
	l72 -> l56 : __const_10000^0'=__const_10000^post124, __const_16^0'=__const_16^post124, __const_2147483647^0'=__const_2147483647^post124, __const_256^0'=__const_256^post124, __const_257^0'=__const_257^post124, __const_429496^0'=__const_429496^post124, __const_50^0'=__const_50^post124, __const_53^0'=__const_53^post124, __const_65536^0'=__const_65536^post124, __const_8388607^0'=__const_8388607^post124, __const_8^0'=__const_8^post124, __const_9^0'=__const_9^post124, apsim_bound11113^0'=apsim_bound11113^post124, apsim_incnt^0'=apsim_incnt^post124, bits33^0'=bits33^post124, block_compress^0'=block_compress^post124, bytes_out^0'=bytes_out^post124, c37^0'=c37^post124, c7^0'=c7^post124, checkpoint^0'=checkpoint^post124, clear_flg^0'=clear_flg^post124, code31^0'=code31^post124, count^0'=count^post124, disp9^0'=disp9^post124, ent8^0'=ent8^post124, exit_stat^0'=exit_stat^post124, fcode5^0'=fcode5^post124, free_ent^0'=free_ent^post124, hshift11^0'=hshift11^post124, hsize^0'=hsize^post124, hsize___019^0'=hsize___019^post124, hsize___027^0'=hsize___027^post124, hsize_reg10^0'=hsize_reg10^post124, i21^0'=i21^post124, i29^0'=i29^post124, i3^0'=i3^post124, i41^0'=i41^post124, i45^0'=i45^post124, i6^0'=i6^post124, in_count^0'=in_count^post124, incnt^0'=incnt^post124, m122^0'=m122^post124, m130^0'=m130^post124, maxbits^0'=maxbits^post124, maxcode^0'=maxcode^post124, maxmaxcode^0'=maxmaxcode^post124, n40^0'=n40^post124, n44^0'=n44^post124, n_bits^0'=n_bits^post124, offset^0'=offset^post124, out_count^0'=out_count^post124, r_off32^0'=r_off32^post124, rat26^0'=rat26^post124, ratio^0'=ratio^post124, ret_getbyte18^0'=ret_getbyte18^post124, ret_getbyte25^0'=ret_getbyte25^post124, seed2^0'=seed2^post124, tabort4^0'=tabort4^post124, tmp12^0'=tmp12^post124, tmp___014^0'=tmp___014^post124, tmp___017^0'=tmp___017^post124, tmp___024^0'=tmp___024^post124, tmp___115^0'=tmp___115^post124, (-ratio^post124+ratio^0 == 0 /\ -c7^post124+c7^0 == 0 /\ -clear_flg^post124+clear_flg^0 == 0 /\ out_count^0-out_count^post124 == 0 /\ exit_stat^0-exit_stat^post124 == 0 /\ -ret_getbyte18^post124+ret_getbyte18^0 == 0 /\ -c37^post124+c37^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post124 == 0 /\ maxmaxcode^0-maxmaxcode^post124 == 0 /\ -in_count^post124+in_count^0 == 0 /\ -1+seed2^post124 == 0 /\ offset^0-offset^post124 == 0 /\ -block_compress^post124+block_compress^0 == 0 /\ n40^0-n40^post124 == 0 /\ __const_16^0-__const_16^post124 == 0 /\ -code31^post124+code31^0 == 0 /\ -tmp___024^post124+tmp___024^0 == 0 /\ -i45^post124+i45^0 == 0 /\ __const_10000^0-__const_10000^post124 == 0 /\ tmp12^0-tmp12^post124 == 0 /\ n44^0-n44^post124 == 0 /\ tabort4^0-tabort4^post124 == 0 /\ -__const_429496^post124+__const_429496^0 == 0 /\ -fcode5^post124+fcode5^0 == 0 /\ checkpoint^0-checkpoint^post124 == 0 /\ -tmp___014^post124+tmp___014^0 == 0 /\ apsim_incnt^0-apsim_incnt^post124 == 0 /\ i3^post124 == 0 /\ -disp9^post124+disp9^0 == 0 /\ i21^0-i21^post124 == 0 /\ -r_off32^post124+r_off32^0 == 0 /\ -maxbits^post124+maxbits^0 == 0 /\ __const_256^0-__const_256^post124 == 0 /\ -maxcode^post124+maxcode^0 == 0 /\ -apsim_bound11113^post124+apsim_bound11113^0 == 0 /\ -__const_9^post124+__const_9^0 == 0 /\ -__const_2147483647^post124+__const_2147483647^0 == 0 /\ m130^0-m130^post124 == 0 /\ -__const_50^0+count^post124 == 0 /\ -hsize_reg10^post124+hsize_reg10^0 == 0 /\ -hsize^post124+hsize^0 == 0 /\ -incnt^post124+incnt^0 == 0 /\ -bits33^post124+bits33^0 == 0 /\ -m122^post124+m122^0 == 0 /\ __const_8^0-__const_8^post124 == 0 /\ hsize___027^0-hsize___027^post124 == 0 /\ __const_50^0-__const_50^post124 == 0 /\ rat26^0-rat26^post124 == 0 /\ -tmp___115^post124+tmp___115^0 == 0 /\ -__const_8388607^post124+__const_8388607^0 == 0 /\ -n_bits^post124+n_bits^0 == 0 /\ tmp___017^0-tmp___017^post124 == 0 /\ __const_257^0-__const_257^post124 == 0 /\ __const_53^0-__const_53^post124 == 0 /\ hsize___019^0-hsize___019^post124 == 0 /\ -free_ent^post124+free_ent^0 == 0 /\ -__const_65536^post124+__const_65536^0 == 0 /\ -i29^post124+i29^0 == 0 /\ -ent8^post124+ent8^0 == 0 /\ hshift11^0-hshift11^post124 == 0 /\ bytes_out^0-bytes_out^post124 == 0 /\ i6^0-i6^post124 == 0 /\ -i41^post124+i41^0 == 0), cost: 1
	New rule:
	l73 -> l56 : __const_10000^0'=__const_10000^post124, __const_16^0'=__const_16^post124, __const_2147483647^0'=__const_2147483647^post124, __const_256^0'=__const_256^post124, __const_257^0'=__const_257^post124, __const_429496^0'=__const_429496^post124, __const_50^0'=__const_50^post124, __const_53^0'=__const_53^post124, __const_65536^0'=__const_65536^post124, __const_8388607^0'=__const_8388607^post124, __const_8^0'=__const_8^post124, __const_9^0'=__const_9^post124, apsim_bound11113^0'=apsim_bound11113^post124, apsim_incnt^0'=apsim_incnt^post124, bits33^0'=bits33^post124, block_compress^0'=block_compress^post124, bytes_out^0'=bytes_out^post124, c37^0'=c37^post124, c7^0'=c7^post124, checkpoint^0'=checkpoint^post124, clear_flg^0'=clear_flg^post124, code31^0'=code31^post124, count^0'=count^post124, disp9^0'=disp9^post124, ent8^0'=ent8^post124, exit_stat^0'=exit_stat^post124, fcode5^0'=fcode5^post124, free_ent^0'=free_ent^post124, hshift11^0'=hshift11^post124, hsize^0'=hsize^post124, hsize___019^0'=hsize___019^post124, hsize___027^0'=hsize___027^post124, hsize_reg10^0'=hsize_reg10^post124, i21^0'=i21^post124, i29^0'=i29^post124, i3^0'=i3^post124, i41^0'=i41^post124, i45^0'=i45^post124, i6^0'=i6^post124, in_count^0'=in_count^post124, incnt^0'=incnt^post124, m122^0'=m122^post124, m130^0'=m130^post124, maxbits^0'=maxbits^post124, maxcode^0'=maxcode^post124, maxmaxcode^0'=maxmaxcode^post124, n40^0'=n40^post124, n44^0'=n44^post124, n_bits^0'=n_bits^post124, offset^0'=offset^post124, out_count^0'=out_count^post124, r_off32^0'=r_off32^post124, rat26^0'=rat26^post124, ratio^0'=ratio^post124, ret_getbyte18^0'=ret_getbyte18^post124, ret_getbyte25^0'=ret_getbyte25^post124, seed2^0'=seed2^post124, tabort4^0'=tabort4^post124, tmp12^0'=tmp12^post124, tmp___014^0'=tmp___014^post124, tmp___017^0'=tmp___017^post124, tmp___024^0'=tmp___024^post124, tmp___115^0'=tmp___115^post124, (-n40^post125+n40^0 == 0 /\ tmp___115^post125-tmp___115^post124 == 0 /\ -i45^post124+i45^post125 == 0 /\ hsize___027^0-hsize___027^post125 == 0 /\ -m122^post124+m122^post125 == 0 /\ -maxmaxcode^post124+maxmaxcode^post125 == 0 /\ -__const_10000^post124+__const_10000^post125 == 0 /\ -__const_256^post124+__const_256^post125 == 0 /\ -apsim_bound11113^post125+apsim_bound11113^0 == 0 /\ -__const_9^post124+__const_9^post125 == 0 /\ -i29^post124+i29^post125 == 0 /\ -__const_9^post125+__const_9^0 == 0 /\ n44^0-n44^post125 == 0 /\ -__const_257^post125+__const_257^0 == 0 /\ m130^0-m130^post125 == 0 /\ -m130^post124+m130^post125 == 0 /\ i6^0-i6^post125 == 0 /\ bytes_out^0-bytes_out^post125 == 0 /\ -__const_65536^post124+__const_65536^post125 == 0 /\ i3^0-i3^post125 == 0 /\ -1+seed2^post124 == 0 /\ maxcode^0-maxcode^post125 == 0 /\ -__const_16^post125+__const_16^0 == 0 /\ -__const_2147483647^post125+__const_2147483647^0 == 0 /\ i21^0-i21^post125 == 0 /\ -bits33^post124+bits33^post125 == 0 /\ apsim_incnt^0-apsim_incnt^post125 == 0 /\ -ratio^post124+ratio^post125 == 0 /\ -hsize___019^post125+hsize___019^0 == 0 /\ -n_bits^post124+n_bits^post125 == 0 /\ -hsize_reg10^post125+hsize_reg10^0 == 0 /\ -__const_8388607^post124+__const_8388607^post125 == 0 /\ count^0-count^post125 == 0 /\ -checkpoint^post124+checkpoint^post125 == 0 /\ c37^0-c37^post125 == 0 /\ -ent8^post124+ent8^post125 == 0 /\ -n_bits^post125+n_bits^0 == 0 /\ -fcode5^post124+fcode5^post125 == 0 /\ -incnt^post125+incnt^0 == 0 /\ -bytes_out^post124+bytes_out^post125 == 0 /\ ret_getbyte25^0-ret_getbyte25^post125 == 0 /\ -hsize_reg10^post124+hsize_reg10^post125 == 0 /\ -bits33^post125+bits33^0 == 0 /\ -in_count^post124+in_count^post125 == 0 /\ -seed2^post125+seed2^0 == 0 /\ -__const_429496^post124+__const_429496^post125 == 0 /\ -free_ent^post124+free_ent^post125 == 0 /\ -__const_50^post124+__const_50^post125 == 0 /\ -__const_65536^post125+__const_65536^0 == 0 /\ -free_ent^post125+free_ent^0 == 0 /\ tmp___024^post125-tmp___024^post124 == 0 /\ count^post124-__const_50^post125 == 0 /\ -i29^post125+i29^0 == 0 /\ -r_off32^post124+r_off32^post125 == 0 /\ -hsize___027^post124+hsize___027^post125 == 0 /\ -c37^post124+c37^post125 == 0 /\ -out_count^post124+out_count^post125 == 0 /\ -ent8^post125+ent8^0 == 0 /\ -i41^post125+i41^0 == 0 /\ i3^post124 == 0 /\ -maxbits^post124+maxbits^post125 == 0 /\ tmp12^0-tmp12^post125 == 0 /\ -maxbits^post125+maxbits^0 == 0 /\ -incnt^post124+incnt^post125 == 0 /\ exit_stat^0-exit_stat^post125 == 0 /\ __const_50^0-__const_50^post125 == 0 /\ hsize___019^post125-hsize___019^post124 == 0 /\ -__const_53^post124+__const_53^post125 == 0 /\ -ratio^post125+ratio^0 == 0 /\ -rat26^post124+rat26^post125 == 0 /\ __const_8^0-__const_8^post125 == 0 /\ hshift11^0-hshift11^post125 == 0 /\ -c7^post125+c7^0 == 0 /\ rat26^0-rat26^post125 == 0 /\ -block_compress^post124+block_compress^post125 == 0 /\ __const_10000^0-__const_10000^post125 == 0 /\ offset^post125-offset^post124 == 0 /\ -clear_flg^post125+clear_flg^0 == 0 /\ -tmp___014^post125+tmp___014^0 == 0 /\ -in_count^post125+in_count^0 == 0 /\ -c7^post124+c7^post125 == 0 /\ -maxcode^post124+maxcode^post125 == 0 /\ tmp___014^post125-tmp___014^post124 == 0 /\ -tmp___024^post125+tmp___024^0 == 0 /\ -__const_8388607^post125+__const_8388607^0 == 0 /\ tabort4^post125-tabort4^post124 == 0 /\ -i6^post124+i6^post125 == 0 /\ -tmp___115^post125+tmp___115^0 == 0 /\ __const_53^0-__const_53^post125 == 0 /\ disp9^post125-disp9^post124 == 0 /\ -__const_8^post124+__const_8^post125 == 0 /\ checkpoint^0-checkpoint^post125 == 0 /\ -i21^post124+i21^post125 == 0 /\ __const_257^post125-__const_257^post124 == 0 /\ r_off32^0-r_off32^post125 == 0 /\ tmp12^post125-tmp12^post124 == 0 /\ -block_compress^post125+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post125 == 0 /\ tabort4^0-tabort4^post125 == 0 /\ out_count^0-out_count^post125 == 0 /\ __const_256^0-__const_256^post125 == 0 /\ tmp___017^post125-tmp___017^post124 == 0 /\ -offset^post125+offset^0 == 0 /\ -hsize^post125+hsize^0 == 0 /\ -i41^post124+i41^post125 == 0 /\ -n44^post124+n44^post125 == 0 /\ maxmaxcode^0-maxmaxcode^post125 == 0 /\ -m122^post125+m122^0 == 0 /\ clear_flg^post125-clear_flg^post124 == 0 /\ tmp___017^0-tmp___017^post125 == 0 /\ -code31^post125+code31^0 == 0 /\ -apsim_incnt^post124+apsim_incnt^post125 == 0 /\ -hsize^post124+hsize^post125 == 0 /\ fcode5^0-fcode5^post125 == 0 /\ -ret_getbyte18^post124+ret_getbyte18^post125 == 0 /\ -code31^post124+code31^post125 == 0 /\ -__const_429496^post125+__const_429496^0 == 0 /\ n40^post125-n40^post124 == 0 /\ -__const_2147483647^post124+__const_2147483647^post125 == 0 /\ -exit_stat^post124+exit_stat^post125 == 0 /\ __const_16^post125-__const_16^post124 == 0 /\ -apsim_bound11113^post124+apsim_bound11113^post125 == 0 /\ -disp9^post125+disp9^0 == 0 /\ -i45^post125+i45^0 == 0 /\ -hshift11^post124+hshift11^post125 == 0 /\ -ret_getbyte25^post124+ret_getbyte25^post125 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 123 124

Simplified Transitions

Start location: l73
Program variables: __const_10000^0 __const_16^0 __const_2147483647^0 __const_256^0 __const_257^0 __const_429496^0 __const_50^0 __const_53^0 __const_65536^0 __const_8388607^0 __const_8^0 __const_9^0 apsim_bound11113^0 apsim_incnt^0 bits33^0 block_compress^0 bytes_out^0 c37^0 c7^0 checkpoint^0 clear_flg^0 code31^0 count^0 disp9^0 ent8^0 exit_stat^0 fcode5^0 free_ent^0 hshift11^0 hsize^0 hsize___019^0 hsize___027^0 hsize_reg10^0 i21^0 i29^0 i3^0 i41^0 i45^0 i6^0 in_count^0 incnt^0 m122^0 m130^0 maxbits^0 maxcode^0 maxmaxcode^0 n40^0 n44^0 n_bits^0 offset^0 out_count^0 r_off32^0 rat26^0 ratio^0 ret_getbyte18^0 ret_getbyte25^0 seed2^0 tabort4^0 tmp12^0 tmp___014^0 tmp___017^0 tmp___024^0 tmp___115^0
 126: l0 -> l1 : i21^0 <= 0, cost: 1
 127: l0 -> l2 : i21^0'=-1+i21^0, 1-i21^0 <= 0, cost: 1
 131: l1 -> l5 : T, cost: 1
 128: l2 -> l0 : T, cost: 1
 129: l3 -> l2 : i21^0'=__const_16^0+i21^0, 1+i21^0 <= 0, cost: 1
 130: l3 -> l4 : -i21^0 <= 0, cost: 1
 248: l4 -> l3 : i21^0'=-__const_16^0+i21^0, T, cost: 1
 246: l5 -> l25 : incnt^0 <= 0, cost: 1
 247: l5 -> l71 : apsim_bound11113^0'=0, 1-incnt^0 <= 0, cost: 1
 132: l6 -> l7 : i6^0'=i6^0-disp9^0, T, cost: 1
 229: l7 -> l65 : -i6^0 <= 0, cost: 1
 230: l7 -> l65 : i6^0'=i6^0+hsize_reg10^0, 1+i6^0 <= 0, cost: 1
 133: l8 -> l4 : hshift11^0'=-hshift11^0+__const_8^0, hsize___019^0'=hsize^0, hsize_reg10^0'=hsize^0, i21^0'=-__const_16^0+hsize^0, m122^0'=-1, __const_65536^0-fcode5^0 <= 0, cost: 1
 134: l8 -> l9 : fcode5^0'=fcode5^post9, hshift11^0'=1+hshift11^0, 1-__const_65536^0+fcode5^0 <= 0, cost: 1
 241: l9 -> l8 : T, cost: 1
 135: l10 -> l11 : i29^0'=-__const_16^0+i29^0, T, cost: 1
 200: l11 -> l13 : i29^0'=__const_16^0+i29^0, 1+i29^0 <= 0, cost: 1
 201: l11 -> l10 : -i29^0 <= 0, cost: 1
 136: l12 -> l9 : ent8^0'=ret_getbyte18^0, fcode5^0'=hsize^0, hshift11^0'=0, tmp12^0'=ret_getbyte18^0, T, cost: 1
 137: l13 -> l14 : T, cost: 1
 198: l14 -> l51 : bits33^0'=n_bits^0, clear_flg^0'=1, code31^0'=__const_256^0, free_ent^0'=__const_257^0, r_off32^0'=offset^0, i29^0 <= 0, cost: 1
 199: l14 -> l13 : i29^0'=-1+i29^0, 1-i29^0 <= 0, cost: 1
 138: l15 -> l12 : ret_getbyte18^0'=__const_429496^0, tmp___017^0 <= 0, cost: 1
 139: l15 -> l12 : incnt^0'=-1+incnt^0, ret_getbyte18^0'=ret_getbyte18^post14, 1-tmp___017^0 <= 0, cost: 1
 140: l16 -> l12 : ret_getbyte18^0'=__const_429496^0, incnt^0 <= 0, cost: 1
 141: l16 -> l15 : apsim_incnt^0'=-1+apsim_incnt^0, tmp___017^0'=apsim_incnt^0, 1-incnt^0 <= 0, cost: 1
 142: l17 -> l16 : free_ent^0'=__const_257^0, T, cost: 1
 143: l18 -> l16 : free_ent^0'=__const_256^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
 144: l18 -> l17 : 1-block_compress^0 <= 0, cost: 1
 145: l18 -> l17 : 1+block_compress^0 <= 0, cost: 1
 146: l19 -> l20 : bits33^0'=-1+bits33^0, c37^0'=c37^post21, T, cost: 1
 183: l20 -> l44 : (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
 184: l20 -> l45 : 1-bits33^0 <= 0, cost: 1
 185: l20 -> l45 : 1+bits33^0 <= 0, cost: 1
 147: l21 -> l22 : T, cost: 1
 172: l22 -> l39 : n40^0-i41^0 <= 0, cost: 1
 173: l22 -> l40 : 1-n40^0+i41^0 <= 0, cost: 1
 148: l23 -> l24 : T, cost: 1
 149: l25 -> l23 : bytes_out^0-in_count^0 <= 0, cost: 1
 150: l25 -> l23 : exit_stat^0'=2, 1-bytes_out^0+in_count^0 <= 0, cost: 1
 151: l26 -> l27 : bytes_out^0'=bytes_out^post26, offset^0'=0, T, cost: 1
 163: l27 -> l35 : T, cost: 1
 152: l28 -> l26 : T, cost: 1
 153: l29 -> l28 : __const_16^0-i45^0 <= 0, cost: 1
 154: l29 -> l30 : i45^0'=1+i45^0, 1-__const_16^0+i45^0 <= 0, cost: 1
 195: l30 -> l31 : T, cost: 1
 155: l31 -> l28 : n44^0-i45^0 <= 0, cost: 1
 156: l31 -> l29 : 1-n44^0+i45^0 <= 0, cost: 1
 157: l32 -> l26 : offset^0 <= 0, cost: 1
 158: l32 -> l30 : i45^0'=0, n44^0'=n44^post33, 1-offset^0 <= 0, cost: 1
 159: l33 -> l27 : maxcode^0'=maxcode^post34, T, cost: 1
 160: l34 -> l33 : 1-n_bits^0+maxbits^0 <= 0, cost: 1
 161: l34 -> l33 : 1+n_bits^0-maxbits^0 <= 0, cost: 1
 162: l34 -> l27 : maxcode^0'=maxmaxcode^0, (-n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
 202: l35 -> l1 : T, cost: 1
 164: l36 -> l27 : clear_flg^0'=0, maxcode^0'=maxcode^post39, n_bits^0'=__const_9^0, T, cost: 1
 165: l37 -> l34 : n_bits^0'=1+n_bits^0, (-clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
 166: l37 -> l36 : 1-clear_flg^0 <= 0, cost: 1
 167: l37 -> l36 : 1+clear_flg^0 <= 0, cost: 1
 168: l38 -> l37 : offset^0'=0, T, cost: 1
 169: l39 -> l38 : bytes_out^0'=bytes_out^0+n_bits^0, T, cost: 1
 170: l40 -> l39 : __const_16^0-i41^0 <= 0, cost: 1
 171: l40 -> l21 : i41^0'=1+i41^0, 1-__const_16^0+i41^0 <= 0, cost: 1
 174: l41 -> l38 : offset^0 <= 0, cost: 1
 175: l41 -> l21 : i41^0'=0, n40^0'=n_bits^0, 1-offset^0 <= 0, cost: 1
 176: l42 -> l27 : clear_flg^0 <= 0, cost: 1
 177: l42 -> l41 : 1-clear_flg^0 <= 0, cost: 1
 178: l43 -> l42 : free_ent^0-maxcode^0 <= 0, cost: 1
 179: l43 -> l41 : 1-free_ent^0+maxcode^0 <= 0, cost: 1
 180: l44 -> l43 : offset^0'=0, T, cost: 1
 181: l45 -> l19 : T, cost: 1
 182: l45 -> l44 : T, cost: 1
 186: l46 -> l19 : bits33^0'=n_bits^0, bytes_out^0'=bytes_out^0+n_bits^0, T, cost: 1
 187: l46 -> l43 : T, cost: 1
 188: l47 -> l46 : offset^0'=offset^0+n_bits^0, T, cost: 1
 189: l48 -> l47 : T, cost: 1
 190: l49 -> l47 : (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
 191: l49 -> l48 : 1-bits33^0 <= 0, cost: 1
 192: l49 -> l48 : 1+bits33^0 <= 0, cost: 1
 193: l50 -> l49 : 1+bits33^0-__const_8^0 <= 0, cost: 1
 194: l50 -> l49 : bits33^0'=bits33^0-__const_8^0, code31^0'=code31^post69, -bits33^0+__const_8^0 <= 0, cost: 1
 196: l51 -> l32 : 1+code31^0 <= 0, cost: 1
 197: l51 -> l50 : bits33^0'=bits33^0-__const_8^0+r_off32^post72, code31^0'=code31^post72, r_off32^0'=r_off32^post72, -code31^0 <= 0, cost: 1
 203: l52 -> l53 : rat26^0'=rat26^post78, T, cost: 1
 204: l53 -> l10 : hsize___027^0'=hsize^0, i29^0'=-__const_16^0+hsize^0, m130^0'=-1, ratio^0'=0, rat26^0-ratio^0 <= 0, cost: 1
 205: l53 -> l35 : ratio^0'=rat26^0, 1-rat26^0+ratio^0 <= 0, cost: 1
 206: l54 -> l52 : 1-rat26^0 <= 0, cost: 1
 207: l54 -> l52 : 1+rat26^0 <= 0, cost: 1
 208: l54 -> l53 : rat26^0'=__const_2147483647^0, (rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
 209: l55 -> l18 : apsim_incnt^0'=__const_53^0, bytes_out^0'=3, checkpoint^0'=__const_10000^0, clear_flg^0'=0, i6^0'=0, in_count^0'=1, incnt^0'=count^0, maxbits^0'=__const_16^0, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n_bits^0'=__const_9^0, offset^0'=0, out_count^0'=0, ratio^0'=0, -i3^0+__const_50^0 <= 0, cost: 1
 210: l55 -> l56 : i3^0'=1+i3^0, seed2^0'=seed2^post85, tabort4^0'=i3^0, 1+i3^0-__const_50^0 <= 0, cost: 1
 239: l56 -> l55 : T, cost: 1
 211: l57 -> l53 : rat26^0'=rat26^post86, -__const_8388607^0+in_count^0 <= 0, cost: 1
 212: l57 -> l54 : rat26^0'=rat26^post87, 1+__const_8388607^0-in_count^0 <= 0, cost: 1
 213: l58 -> l57 : checkpoint^0'=__const_10000^0+in_count^0, T, cost: 1
 214: l59 -> l1 : (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
 215: l59 -> l58 : 1-block_compress^0 <= 0, cost: 1
 216: l59 -> l58 : 1+block_compress^0 <= 0, cost: 1
 217: l60 -> l1 : 1-checkpoint^0+in_count^0 <= 0, cost: 1
 218: l60 -> l59 : checkpoint^0-in_count^0 <= 0, cost: 1
 219: l61 -> l60 : maxmaxcode^0-free_ent^0 <= 0, cost: 1
 220: l61 -> l1 : free_ent^0'=1+free_ent^0, tmp___115^0'=free_ent^0, 1-maxmaxcode^0+free_ent^0 <= 0, cost: 1
 221: l62 -> l61 : ent8^0'=c7^0, out_count^0'=1+out_count^0, T, cost: 1
 222: l63 -> l62 : -apsim_bound11113^0+in_count^0 <= 0, cost: 1
 223: l63 -> l6 : 1+apsim_bound11113^0-in_count^0 <= 0, cost: 1
 224: l64 -> l63 : apsim_bound11113^0'=1+apsim_bound11113^0, T, cost: 1
 225: l64 -> l62 : T, cost: 1
 226: l65 -> l64 : T, cost: 1
 227: l65 -> l1 : ent8^0'=ent8^post102, T, cost: 1
 228: l65 -> l64 : T, cost: 1
 231: l66 -> l6 : 1-i6^0 <= 0, cost: 1
 232: l66 -> l6 : 1+i6^0 <= 0, cost: 1
 233: l66 -> l6 : disp9^0'=1, (i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
 234: l67 -> l62 : T, cost: 1
 235: l67 -> l66 : disp9^0'=-i6^0+hsize_reg10^0, T, cost: 1
 236: l68 -> l67 : T, cost: 1
 237: l68 -> l1 : ent8^0'=ent8^post112, T, cost: 1
 238: l68 -> l67 : T, cost: 1
 240: l69 -> l68 : c7^0'=ret_getbyte25^0, fcode5^0'=fcode5^post115, i6^0'=i6^post115, in_count^0'=1+in_count^0, tmp___014^0'=ret_getbyte25^0, T, cost: 1
 242: l70 -> l69 : ret_getbyte25^0'=__const_429496^0, tmp___024^0 <= 0, cost: 1
 243: l70 -> l69 : incnt^0'=-1+incnt^0, ret_getbyte25^0'=ret_getbyte25^post118, 1-tmp___024^0 <= 0, cost: 1
 244: l71 -> l69 : ret_getbyte25^0'=__const_429496^0, incnt^0 <= 0, cost: 1
 245: l71 -> l70 : apsim_incnt^0'=-1+apsim_incnt^0, tmp___024^0'=apsim_incnt^0, 1-incnt^0 <= 0, cost: 1
 249: l73 -> l56 : count^0'=__const_50^0, i3^0'=0, seed2^0'=1, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : __const_10000^0'=__const_10000^post1, __const_16^0'=__const_16^post1, __const_2147483647^0'=__const_2147483647^post1, __const_256^0'=__const_256^post1, __const_257^0'=__const_257^post1, __const_429496^0'=__const_429496^post1, __const_50^0'=__const_50^post1, __const_53^0'=__const_53^post1, __const_65536^0'=__const_65536^post1, __const_8388607^0'=__const_8388607^post1, __const_8^0'=__const_8^post1, __const_9^0'=__const_9^post1, apsim_bound11113^0'=apsim_bound11113^post1, apsim_incnt^0'=apsim_incnt^post1, bits33^0'=bits33^post1, block_compress^0'=block_compress^post1, bytes_out^0'=bytes_out^post1, c37^0'=c37^post1, c7^0'=c7^post1, checkpoint^0'=checkpoint^post1, clear_flg^0'=clear_flg^post1, code31^0'=code31^post1, count^0'=count^post1, disp9^0'=disp9^post1, ent8^0'=ent8^post1, exit_stat^0'=exit_stat^post1, fcode5^0'=fcode5^post1, free_ent^0'=free_ent^post1, hshift11^0'=hshift11^post1, hsize^0'=hsize^post1, hsize___019^0'=hsize___019^post1, hsize___027^0'=hsize___027^post1, hsize_reg10^0'=hsize_reg10^post1, i21^0'=i21^post1, i29^0'=i29^post1, i3^0'=i3^post1, i41^0'=i41^post1, i45^0'=i45^post1, i6^0'=i6^post1, in_count^0'=in_count^post1, incnt^0'=incnt^post1, m122^0'=m122^post1, m130^0'=m130^post1, maxbits^0'=maxbits^post1, maxcode^0'=maxcode^post1, maxmaxcode^0'=maxmaxcode^post1, n40^0'=n40^post1, n44^0'=n44^post1, n_bits^0'=n_bits^post1, offset^0'=offset^post1, out_count^0'=out_count^post1, r_off32^0'=r_off32^post1, rat26^0'=rat26^post1, ratio^0'=ratio^post1, ret_getbyte18^0'=ret_getbyte18^post1, ret_getbyte25^0'=ret_getbyte25^post1, seed2^0'=seed2^post1, tabort4^0'=tabort4^post1, tmp12^0'=tmp12^post1, tmp___014^0'=tmp___014^post1, tmp___017^0'=tmp___017^post1, tmp___024^0'=tmp___024^post1, tmp___115^0'=tmp___115^post1, (-i29^post1+i29^0 == 0 /\ maxmaxcode^0-maxmaxcode^post1 == 0 /\ i6^0-i6^post1 == 0 /\ n44^0-n44^post1 == 0 /\ i3^0-i3^post1 == 0 /\ bytes_out^0-bytes_out^post1 == 0 /\ -__const_257^post1+__const_257^0 == 0 /\ -__const_16^post1+__const_16^0 == 0 /\ count^0-count^post1 == 0 /\ -__const_2147483647^post1+__const_2147483647^0 == 0 /\ apsim_incnt^0-apsim_incnt^post1 == 0 /\ m130^0-m130^post1 == 0 /\ -hsize_reg10^post1+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post1 == 0 /\ -hsize^post1+hsize^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post1 == 0 /\ c37^0-c37^post1 == 0 /\ -bits33^post1+bits33^0 == 0 /\ -hsize___019^post1+hsize___019^0 == 0 /\ -maxcode^post1+maxcode^0 == 0 /\ -i41^post1+i41^0 == 0 /\ -ent8^post1+ent8^0 == 0 /\ -seed2^post1+seed2^0 == 0 /\ hsize___027^0-hsize___027^post1 == 0 /\ -apsim_bound11113^post1+apsim_bound11113^0 == 0 /\ -i21^post1+i21^0 == 0 /\ -__const_65536^post1+__const_65536^0 == 0 /\ -incnt^post1+incnt^0 == 0 /\ tmp12^0-tmp12^post1 == 0 /\ exit_stat^0-exit_stat^post1 == 0 /\ fcode5^0-fcode5^post1 == 0 /\ __const_50^0-__const_50^post1 == 0 /\ rat26^0-rat26^post1 == 0 /\ -tmp___115^post1+tmp___115^0 == 0 /\ __const_10000^0-__const_10000^post1 == 0 /\ -block_compress^post1+block_compress^0 == 0 /\ tabort4^0-tabort4^post1 == 0 /\ ret_getbyte18^0-ret_getbyte18^post1 == 0 /\ -ratio^post1+ratio^0 == 0 /\ -clear_flg^post1+clear_flg^0 == 0 /\ i21^0 <= 0 /\ checkpoint^0-checkpoint^post1 == 0 /\ -in_count^post1+in_count^0 == 0 /\ r_off32^0-r_off32^post1 == 0 /\ __const_53^0-__const_53^post1 == 0 /\ tmp___017^0-tmp___017^post1 == 0 /\ -n_bits^post1+n_bits^0 == 0 /\ -c7^post1+c7^0 == 0 /\ -__const_8388607^post1+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post1 == 0 /\ out_count^0-out_count^post1 == 0 /\ __const_256^0-__const_256^post1 == 0 /\ -offset^post1+offset^0 == 0 /\ -__const_429496^post1+__const_429496^0 == 0 /\ -tmp___014^post1+tmp___014^0 == 0 /\ -maxbits^post1+maxbits^0 == 0 /\ -free_ent^post1+free_ent^0 == 0 /\ -code31^post1+code31^0 == 0 /\ -disp9^post1+disp9^0 == 0 /\ -i45^post1+i45^0 == 0 /\ -tmp___024^post1+tmp___024^0 == 0 /\ -m122^post1+m122^0 == 0 /\ -__const_9^post1+__const_9^0 == 0 /\ -n40^post1+n40^0 == 0), cost: 1
	New rule:
	l0 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ i21^0 <= 0), cost: 1
	
		propagated equality i29^post1 = i29^0
		
		propagated equality maxmaxcode^post1 = maxmaxcode^0
		
		propagated equality i6^post1 = i6^0
		
		propagated equality n44^post1 = n44^0
		
		propagated equality i3^post1 = i3^0
		
		propagated equality bytes_out^post1 = bytes_out^0
		
		propagated equality __const_257^post1 = __const_257^0
		
		propagated equality __const_16^post1 = __const_16^0
		
		propagated equality count^post1 = count^0
		
		propagated equality __const_2147483647^post1 = __const_2147483647^0
		
		propagated equality apsim_incnt^post1 = apsim_incnt^0
		
		propagated equality m130^post1 = m130^0
		
		propagated equality hsize_reg10^post1 = hsize_reg10^0
		
		propagated equality hshift11^post1 = hshift11^0
		
		propagated equality hsize^post1 = hsize^0
		
		propagated equality ret_getbyte25^post1 = ret_getbyte25^0
		
		propagated equality c37^post1 = c37^0
		
		propagated equality bits33^post1 = bits33^0
		
		propagated equality hsize___019^post1 = hsize___019^0
		
		propagated equality maxcode^post1 = maxcode^0
		
		propagated equality i41^post1 = i41^0
		
		propagated equality ent8^post1 = ent8^0
		
		propagated equality seed2^post1 = seed2^0
		
		propagated equality hsize___027^post1 = hsize___027^0
		
		propagated equality apsim_bound11113^post1 = apsim_bound11113^0
		
		propagated equality i21^post1 = i21^0
		
		propagated equality __const_65536^post1 = __const_65536^0
		
		propagated equality incnt^post1 = incnt^0
		
		propagated equality tmp12^post1 = tmp12^0
		
		propagated equality exit_stat^post1 = exit_stat^0
		
		propagated equality fcode5^post1 = fcode5^0
		
		propagated equality __const_50^post1 = __const_50^0
		
		propagated equality rat26^post1 = rat26^0
		
		propagated equality tmp___115^post1 = tmp___115^0
		
		propagated equality __const_10000^post1 = __const_10000^0
		
		propagated equality block_compress^post1 = block_compress^0
		
		propagated equality tabort4^post1 = tabort4^0
		
		propagated equality ret_getbyte18^post1 = ret_getbyte18^0
		
		propagated equality ratio^post1 = ratio^0
		
		propagated equality clear_flg^post1 = clear_flg^0
		
		propagated equality checkpoint^post1 = checkpoint^0
		
		propagated equality in_count^post1 = in_count^0
		
		propagated equality r_off32^post1 = r_off32^0
		
		propagated equality __const_53^post1 = __const_53^0
		
		propagated equality tmp___017^post1 = tmp___017^0
		
		propagated equality n_bits^post1 = n_bits^0
		
		propagated equality c7^post1 = c7^0
		
		propagated equality __const_8388607^post1 = __const_8388607^0
		
		propagated equality __const_8^post1 = __const_8^0
		
		propagated equality out_count^post1 = out_count^0
		
		propagated equality __const_256^post1 = __const_256^0
		
		propagated equality offset^post1 = offset^0
		
		propagated equality __const_429496^post1 = __const_429496^0
		
		propagated equality tmp___014^post1 = tmp___014^0
		
		propagated equality maxbits^post1 = maxbits^0
		
		propagated equality free_ent^post1 = free_ent^0
		
		propagated equality code31^post1 = code31^0
		
		propagated equality disp9^post1 = disp9^0
		
		propagated equality i45^post1 = i45^0
		
		propagated equality tmp___024^post1 = tmp___024^0
		
		propagated equality m122^post1 = m122^0
		
		propagated equality __const_9^post1 = __const_9^0
		
		propagated equality n40^post1 = n40^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ i21^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, i21^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, i21^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : i21^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l2 : __const_10000^0'=__const_10000^post2, __const_16^0'=__const_16^post2, __const_2147483647^0'=__const_2147483647^post2, __const_256^0'=__const_256^post2, __const_257^0'=__const_257^post2, __const_429496^0'=__const_429496^post2, __const_50^0'=__const_50^post2, __const_53^0'=__const_53^post2, __const_65536^0'=__const_65536^post2, __const_8388607^0'=__const_8388607^post2, __const_8^0'=__const_8^post2, __const_9^0'=__const_9^post2, apsim_bound11113^0'=apsim_bound11113^post2, apsim_incnt^0'=apsim_incnt^post2, bits33^0'=bits33^post2, block_compress^0'=block_compress^post2, bytes_out^0'=bytes_out^post2, c37^0'=c37^post2, c7^0'=c7^post2, checkpoint^0'=checkpoint^post2, clear_flg^0'=clear_flg^post2, code31^0'=code31^post2, count^0'=count^post2, disp9^0'=disp9^post2, ent8^0'=ent8^post2, exit_stat^0'=exit_stat^post2, fcode5^0'=fcode5^post2, free_ent^0'=free_ent^post2, hshift11^0'=hshift11^post2, hsize^0'=hsize^post2, hsize___019^0'=hsize___019^post2, hsize___027^0'=hsize___027^post2, hsize_reg10^0'=hsize_reg10^post2, i21^0'=i21^post2, i29^0'=i29^post2, i3^0'=i3^post2, i41^0'=i41^post2, i45^0'=i45^post2, i6^0'=i6^post2, in_count^0'=in_count^post2, incnt^0'=incnt^post2, m122^0'=m122^post2, m130^0'=m130^post2, maxbits^0'=maxbits^post2, maxcode^0'=maxcode^post2, maxmaxcode^0'=maxmaxcode^post2, n40^0'=n40^post2, n44^0'=n44^post2, n_bits^0'=n_bits^post2, offset^0'=offset^post2, out_count^0'=out_count^post2, r_off32^0'=r_off32^post2, rat26^0'=rat26^post2, ratio^0'=ratio^post2, ret_getbyte18^0'=ret_getbyte18^post2, ret_getbyte25^0'=ret_getbyte25^post2, seed2^0'=seed2^post2, tabort4^0'=tabort4^post2, tmp12^0'=tmp12^post2, tmp___014^0'=tmp___014^post2, tmp___017^0'=tmp___017^post2, tmp___024^0'=tmp___024^post2, tmp___115^0'=tmp___115^post2, (i3^0-i3^post2 == 0 /\ -tabort4^post2+tabort4^0 == 0 /\ -seed2^post2+seed2^0 == 0 /\ -tmp___014^post2+tmp___014^0 == 0 /\ -code31^post2+code31^0 == 0 /\ maxmaxcode^0-maxmaxcode^post2 == 0 /\ offset^0-offset^post2 == 0 /\ bytes_out^0-bytes_out^post2 == 0 /\ n40^0-n40^post2 == 0 /\ -n_bits^post2+n_bits^0 == 0 /\ count^0-count^post2 == 0 /\ hsize___027^0-hsize___027^post2 == 0 /\ ret_getbyte25^0-ret_getbyte25^post2 == 0 /\ -ent8^post2+ent8^0 == 0 /\ disp9^0-disp9^post2 == 0 /\ -r_off32^post2+r_off32^0 == 0 /\ -tmp___024^post2+tmp___024^0 == 0 /\ -ratio^post2+ratio^0 == 0 /\ 1-i21^0+i21^post2 == 0 /\ -c37^post2+c37^0 == 0 /\ checkpoint^0-checkpoint^post2 == 0 /\ -__const_16^post2+__const_16^0 == 0 /\ -free_ent^post2+free_ent^0 == 0 /\ 1-i21^0 <= 0 /\ -__const_9^post2+__const_9^0 == 0 /\ -hsize___019^post2+hsize___019^0 == 0 /\ __const_10000^0-__const_10000^post2 == 0 /\ n44^0-n44^post2 == 0 /\ -block_compress^post2+block_compress^0 == 0 /\ -incnt^post2+incnt^0 == 0 /\ __const_53^0-__const_53^post2 == 0 /\ -i45^post2+i45^0 == 0 /\ hshift11^0-hshift11^post2 == 0 /\ -m122^post2+m122^0 == 0 /\ -bits33^post2+bits33^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post2 == 0 /\ apsim_incnt^0-apsim_incnt^post2 == 0 /\ tmp12^0-tmp12^post2 == 0 /\ tmp___115^0-tmp___115^post2 == 0 /\ rat26^0-rat26^post2 == 0 /\ -__const_429496^post2+__const_429496^0 == 0 /\ -__const_65536^post2+__const_65536^0 == 0 /\ -i29^post2+i29^0 == 0 /\ -maxbits^post2+maxbits^0 == 0 /\ -maxcode^post2+maxcode^0 == 0 /\ -i41^post2+i41^0 == 0 /\ m130^0-m130^post2 == 0 /\ -c7^post2+c7^0 == 0 /\ -clear_flg^post2+clear_flg^0 == 0 /\ __const_257^0-__const_257^post2 == 0 /\ fcode5^0-fcode5^post2 == 0 /\ -__const_2147483647^post2+__const_2147483647^0 == 0 /\ -in_count^post2+in_count^0 == 0 /\ -apsim_bound11113^post2+apsim_bound11113^0 == 0 /\ i6^0-i6^post2 == 0 /\ exit_stat^0-exit_stat^post2 == 0 /\ -__const_8388607^post2+__const_8388607^0 == 0 /\ out_count^0-out_count^post2 == 0 /\ __const_256^0-__const_256^post2 == 0 /\ -hsize^post2+hsize^0 == 0 /\ tmp___017^0-tmp___017^post2 == 0 /\ __const_50^0-__const_50^post2 == 0 /\ __const_8^0-__const_8^post2 == 0 /\ -hsize_reg10^post2+hsize_reg10^0 == 0), cost: 1
	New rule:
	l0 -> l2 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=-1+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-i21^0 <= 0), cost: 1
	
		propagated equality i3^post2 = i3^0
		
		propagated equality tabort4^post2 = tabort4^0
		
		propagated equality seed2^post2 = seed2^0
		
		propagated equality tmp___014^post2 = tmp___014^0
		
		propagated equality code31^post2 = code31^0
		
		propagated equality maxmaxcode^post2 = maxmaxcode^0
		
		propagated equality offset^post2 = offset^0
		
		propagated equality bytes_out^post2 = bytes_out^0
		
		propagated equality n40^post2 = n40^0
		
		propagated equality n_bits^post2 = n_bits^0
		
		propagated equality count^post2 = count^0
		
		propagated equality hsize___027^post2 = hsize___027^0
		
		propagated equality ret_getbyte25^post2 = ret_getbyte25^0
		
		propagated equality ent8^post2 = ent8^0
		
		propagated equality disp9^post2 = disp9^0
		
		propagated equality r_off32^post2 = r_off32^0
		
		propagated equality tmp___024^post2 = tmp___024^0
		
		propagated equality ratio^post2 = ratio^0
		
		propagated equality i21^post2 = -1+i21^0
		
		propagated equality c37^post2 = c37^0
		
		propagated equality checkpoint^post2 = checkpoint^0
		
		propagated equality __const_16^post2 = __const_16^0
		
		propagated equality free_ent^post2 = free_ent^0
		
		propagated equality __const_9^post2 = __const_9^0
		
		propagated equality hsize___019^post2 = hsize___019^0
		
		propagated equality __const_10000^post2 = __const_10000^0
		
		propagated equality n44^post2 = n44^0
		
		propagated equality block_compress^post2 = block_compress^0
		
		propagated equality incnt^post2 = incnt^0
		
		propagated equality __const_53^post2 = __const_53^0
		
		propagated equality i45^post2 = i45^0
		
		propagated equality hshift11^post2 = hshift11^0
		
		propagated equality m122^post2 = m122^0
		
		propagated equality bits33^post2 = bits33^0
		
		propagated equality ret_getbyte18^post2 = ret_getbyte18^0
		
		propagated equality apsim_incnt^post2 = apsim_incnt^0
		
		propagated equality tmp12^post2 = tmp12^0
		
		propagated equality tmp___115^post2 = tmp___115^0
		
		propagated equality rat26^post2 = rat26^0
		
		propagated equality __const_429496^post2 = __const_429496^0
		
		propagated equality __const_65536^post2 = __const_65536^0
		
		propagated equality i29^post2 = i29^0
		
		propagated equality maxbits^post2 = maxbits^0
		
		propagated equality maxcode^post2 = maxcode^0
		
		propagated equality i41^post2 = i41^0
		
		propagated equality m130^post2 = m130^0
		
		propagated equality c7^post2 = c7^0
		
		propagated equality clear_flg^post2 = clear_flg^0
		
		propagated equality __const_257^post2 = __const_257^0
		
		propagated equality fcode5^post2 = fcode5^0
		
		propagated equality __const_2147483647^post2 = __const_2147483647^0
		
		propagated equality in_count^post2 = in_count^0
		
		propagated equality apsim_bound11113^post2 = apsim_bound11113^0
		
		propagated equality i6^post2 = i6^0
		
		propagated equality exit_stat^post2 = exit_stat^0
		
		propagated equality __const_8388607^post2 = __const_8388607^0
		
		propagated equality out_count^post2 = out_count^0
		
		propagated equality __const_256^post2 = __const_256^0
		
		propagated equality hsize^post2 = hsize^0
		
		propagated equality tmp___017^post2 = tmp___017^0
		
		propagated equality __const_50^post2 = __const_50^0
		
		propagated equality __const_8^post2 = __const_8^0
		
		propagated equality hsize_reg10^post2 = hsize_reg10^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=-1+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-i21^0 <= 0), cost: 1
	New rule:
	l0 -> l2 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=-1+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-i21^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=-1+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-i21^0 <= 0, cost: 1
	New rule:
	l0 -> l2 : i21^0'=-1+i21^0, 1-i21^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : __const_10000^0'=__const_10000^post3, __const_16^0'=__const_16^post3, __const_2147483647^0'=__const_2147483647^post3, __const_256^0'=__const_256^post3, __const_257^0'=__const_257^post3, __const_429496^0'=__const_429496^post3, __const_50^0'=__const_50^post3, __const_53^0'=__const_53^post3, __const_65536^0'=__const_65536^post3, __const_8388607^0'=__const_8388607^post3, __const_8^0'=__const_8^post3, __const_9^0'=__const_9^post3, apsim_bound11113^0'=apsim_bound11113^post3, apsim_incnt^0'=apsim_incnt^post3, bits33^0'=bits33^post3, block_compress^0'=block_compress^post3, bytes_out^0'=bytes_out^post3, c37^0'=c37^post3, c7^0'=c7^post3, checkpoint^0'=checkpoint^post3, clear_flg^0'=clear_flg^post3, code31^0'=code31^post3, count^0'=count^post3, disp9^0'=disp9^post3, ent8^0'=ent8^post3, exit_stat^0'=exit_stat^post3, fcode5^0'=fcode5^post3, free_ent^0'=free_ent^post3, hshift11^0'=hshift11^post3, hsize^0'=hsize^post3, hsize___019^0'=hsize___019^post3, hsize___027^0'=hsize___027^post3, hsize_reg10^0'=hsize_reg10^post3, i21^0'=i21^post3, i29^0'=i29^post3, i3^0'=i3^post3, i41^0'=i41^post3, i45^0'=i45^post3, i6^0'=i6^post3, in_count^0'=in_count^post3, incnt^0'=incnt^post3, m122^0'=m122^post3, m130^0'=m130^post3, maxbits^0'=maxbits^post3, maxcode^0'=maxcode^post3, maxmaxcode^0'=maxmaxcode^post3, n40^0'=n40^post3, n44^0'=n44^post3, n_bits^0'=n_bits^post3, offset^0'=offset^post3, out_count^0'=out_count^post3, r_off32^0'=r_off32^post3, rat26^0'=rat26^post3, ratio^0'=ratio^post3, ret_getbyte18^0'=ret_getbyte18^post3, ret_getbyte25^0'=ret_getbyte25^post3, seed2^0'=seed2^post3, tabort4^0'=tabort4^post3, tmp12^0'=tmp12^post3, tmp___014^0'=tmp___014^post3, tmp___017^0'=tmp___017^post3, tmp___024^0'=tmp___024^post3, tmp___115^0'=tmp___115^post3, (i6^0-i6^post3 == 0 /\ __const_257^0-__const_257^post3 == 0 /\ -incnt^post3+incnt^0 == 0 /\ n44^0-n44^post3 == 0 /\ -bits33^post3+bits33^0 == 0 /\ -m122^post3+m122^0 == 0 /\ -__const_9^post3+__const_9^0 == 0 /\ -__const_65536^post3+__const_65536^0 == 0 /\ -__const_53^post3+__const_53^0 == 0 /\ __const_256^0-__const_256^post3 == 0 /\ -__const_429496^post3+__const_429496^0 == 0 /\ -i29^post3+i29^0 == 0 /\ maxcode^0-maxcode^post3 == 0 /\ -n40^post3+n40^0 == 0 /\ -maxbits^post3+maxbits^0 == 0 /\ -i41^post3+i41^0 == 0 /\ -i45^post3+i45^0 == 0 /\ -tmp___115^post3+tmp___115^0 == 0 /\ -i21^post3+i21^0 == 0 /\ bytes_out^0-bytes_out^post3 == 0 /\ i3^0-i3^post3 == 0 /\ -c7^post3+c7^0 == 0 /\ hshift11^0-hshift11^post3 == 0 /\ -clear_flg^post3+clear_flg^0 == 0 /\ apsim_incnt^0-apsim_incnt^post3 == 0 /\ tmp___017^0-tmp___017^post3 == 0 /\ -apsim_bound11113^post3+apsim_bound11113^0 == 0 /\ -in_count^post3+in_count^0 == 0 /\ c37^0-c37^post3 == 0 /\ -__const_8388607^post3+__const_8388607^0 == 0 /\ -block_compress^post3+block_compress^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post3 == 0 /\ -__const_2147483647^post3+__const_2147483647^0 == 0 /\ m130^0-m130^post3 == 0 /\ -hsize_reg10^post3+hsize_reg10^0 == 0 /\ -hsize^post3+hsize^0 == 0 /\ fcode5^0-fcode5^post3 == 0 /\ -rat26^post3+rat26^0 == 0 /\ -offset^post3+offset^0 == 0 /\ -tmp___014^post3+tmp___014^0 == 0 /\ checkpoint^0-checkpoint^post3 == 0 /\ __const_8^0-__const_8^post3 == 0 /\ -code31^post3+code31^0 == 0 /\ -seed2^post3+seed2^0 == 0 /\ r_off32^0-r_off32^post3 == 0 /\ tabort4^0-tabort4^post3 == 0 /\ hsize___027^0-hsize___027^post3 == 0 /\ out_count^0-out_count^post3 == 0 /\ exit_stat^0-exit_stat^post3 == 0 /\ __const_50^0-__const_50^post3 == 0 /\ __const_10000^0-__const_10000^post3 == 0 /\ -disp9^post3+disp9^0 == 0 /\ -ent8^post3+ent8^0 == 0 /\ -tmp___024^post3+tmp___024^0 == 0 /\ -ratio^post3+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post3 == 0 /\ -free_ent^post3+free_ent^0 == 0 /\ count^0-count^post3 == 0 /\ ret_getbyte18^0-ret_getbyte18^post3 == 0 /\ n_bits^0-n_bits^post3 == 0 /\ tmp12^0-tmp12^post3 == 0 /\ -__const_16^post3+__const_16^0 == 0 /\ -hsize___019^post3+hsize___019^0 == 0), cost: 1
	New rule:
	l2 -> l0 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality i6^post3 = i6^0
		
		propagated equality __const_257^post3 = __const_257^0
		
		propagated equality incnt^post3 = incnt^0
		
		propagated equality n44^post3 = n44^0
		
		propagated equality bits33^post3 = bits33^0
		
		propagated equality m122^post3 = m122^0
		
		propagated equality __const_9^post3 = __const_9^0
		
		propagated equality __const_65536^post3 = __const_65536^0
		
		propagated equality __const_53^post3 = __const_53^0
		
		propagated equality __const_256^post3 = __const_256^0
		
		propagated equality __const_429496^post3 = __const_429496^0
		
		propagated equality i29^post3 = i29^0
		
		propagated equality maxcode^post3 = maxcode^0
		
		propagated equality n40^post3 = n40^0
		
		propagated equality maxbits^post3 = maxbits^0
		
		propagated equality i41^post3 = i41^0
		
		propagated equality i45^post3 = i45^0
		
		propagated equality tmp___115^post3 = tmp___115^0
		
		propagated equality i21^post3 = i21^0
		
		propagated equality bytes_out^post3 = bytes_out^0
		
		propagated equality i3^post3 = i3^0
		
		propagated equality c7^post3 = c7^0
		
		propagated equality hshift11^post3 = hshift11^0
		
		propagated equality clear_flg^post3 = clear_flg^0
		
		propagated equality apsim_incnt^post3 = apsim_incnt^0
		
		propagated equality tmp___017^post3 = tmp___017^0
		
		propagated equality apsim_bound11113^post3 = apsim_bound11113^0
		
		propagated equality in_count^post3 = in_count^0
		
		propagated equality c37^post3 = c37^0
		
		propagated equality __const_8388607^post3 = __const_8388607^0
		
		propagated equality block_compress^post3 = block_compress^0
		
		propagated equality ret_getbyte25^post3 = ret_getbyte25^0
		
		propagated equality __const_2147483647^post3 = __const_2147483647^0
		
		propagated equality m130^post3 = m130^0
		
		propagated equality hsize_reg10^post3 = hsize_reg10^0
		
		propagated equality hsize^post3 = hsize^0
		
		propagated equality fcode5^post3 = fcode5^0
		
		propagated equality rat26^post3 = rat26^0
		
		propagated equality offset^post3 = offset^0
		
		propagated equality tmp___014^post3 = tmp___014^0
		
		propagated equality checkpoint^post3 = checkpoint^0
		
		propagated equality __const_8^post3 = __const_8^0
		
		propagated equality code31^post3 = code31^0
		
		propagated equality seed2^post3 = seed2^0
		
		propagated equality r_off32^post3 = r_off32^0
		
		propagated equality tabort4^post3 = tabort4^0
		
		propagated equality hsize___027^post3 = hsize___027^0
		
		propagated equality out_count^post3 = out_count^0
		
		propagated equality exit_stat^post3 = exit_stat^0
		
		propagated equality __const_50^post3 = __const_50^0
		
		propagated equality __const_10000^post3 = __const_10000^0
		
		propagated equality disp9^post3 = disp9^0
		
		propagated equality ent8^post3 = ent8^0
		
		propagated equality tmp___024^post3 = tmp___024^0
		
		propagated equality ratio^post3 = ratio^0
		
		propagated equality maxmaxcode^post3 = maxmaxcode^0
		
		propagated equality free_ent^post3 = free_ent^0
		
		propagated equality count^post3 = count^0
		
		propagated equality ret_getbyte18^post3 = ret_getbyte18^0
		
		propagated equality n_bits^post3 = n_bits^0
		
		propagated equality tmp12^post3 = tmp12^0
		
		propagated equality __const_16^post3 = __const_16^0
		
		propagated equality hsize___019^post3 = hsize___019^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l2 -> l0 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l2 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l2 : __const_10000^0'=__const_10000^post4, __const_16^0'=__const_16^post4, __const_2147483647^0'=__const_2147483647^post4, __const_256^0'=__const_256^post4, __const_257^0'=__const_257^post4, __const_429496^0'=__const_429496^post4, __const_50^0'=__const_50^post4, __const_53^0'=__const_53^post4, __const_65536^0'=__const_65536^post4, __const_8388607^0'=__const_8388607^post4, __const_8^0'=__const_8^post4, __const_9^0'=__const_9^post4, apsim_bound11113^0'=apsim_bound11113^post4, apsim_incnt^0'=apsim_incnt^post4, bits33^0'=bits33^post4, block_compress^0'=block_compress^post4, bytes_out^0'=bytes_out^post4, c37^0'=c37^post4, c7^0'=c7^post4, checkpoint^0'=checkpoint^post4, clear_flg^0'=clear_flg^post4, code31^0'=code31^post4, count^0'=count^post4, disp9^0'=disp9^post4, ent8^0'=ent8^post4, exit_stat^0'=exit_stat^post4, fcode5^0'=fcode5^post4, free_ent^0'=free_ent^post4, hshift11^0'=hshift11^post4, hsize^0'=hsize^post4, hsize___019^0'=hsize___019^post4, hsize___027^0'=hsize___027^post4, hsize_reg10^0'=hsize_reg10^post4, i21^0'=i21^post4, i29^0'=i29^post4, i3^0'=i3^post4, i41^0'=i41^post4, i45^0'=i45^post4, i6^0'=i6^post4, in_count^0'=in_count^post4, incnt^0'=incnt^post4, m122^0'=m122^post4, m130^0'=m130^post4, maxbits^0'=maxbits^post4, maxcode^0'=maxcode^post4, maxmaxcode^0'=maxmaxcode^post4, n40^0'=n40^post4, n44^0'=n44^post4, n_bits^0'=n_bits^post4, offset^0'=offset^post4, out_count^0'=out_count^post4, r_off32^0'=r_off32^post4, rat26^0'=rat26^post4, ratio^0'=ratio^post4, ret_getbyte18^0'=ret_getbyte18^post4, ret_getbyte25^0'=ret_getbyte25^post4, seed2^0'=seed2^post4, tabort4^0'=tabort4^post4, tmp12^0'=tmp12^post4, tmp___014^0'=tmp___014^post4, tmp___017^0'=tmp___017^post4, tmp___024^0'=tmp___024^post4, tmp___115^0'=tmp___115^post4, (-__const_257^post4+__const_257^0 == 0 /\ -block_compress^post4+block_compress^0 == 0 /\ -__const_2147483647^post4+__const_2147483647^0 == 0 /\ -__const_16^post4+__const_16^0 == 0 /\ count^0-count^post4 == 0 /\ -free_ent^post4+free_ent^0 == 0 /\ -tmp___024^post4+tmp___024^0 == 0 /\ maxmaxcode^0-maxmaxcode^post4 == 0 /\ -tmp___115^post4+tmp___115^0 == 0 /\ -ent8^post4+ent8^0 == 0 /\ -__const_16^0-i21^0+i21^post4 == 0 /\ disp9^0-disp9^post4 == 0 /\ -seed2^post4+seed2^0 == 0 /\ n40^0-n40^post4 == 0 /\ -tmp___014^post4+tmp___014^0 == 0 /\ i6^0-i6^post4 == 0 /\ ret_getbyte25^0-ret_getbyte25^post4 == 0 /\ i3^0-i3^post4 == 0 /\ -code31^post4+code31^0 == 0 /\ checkpoint^0-checkpoint^post4 == 0 /\ tabort4^0-tabort4^post4 == 0 /\ c37^0-c37^post4 == 0 /\ -i29^post4+i29^0 == 0 /\ -i41^post4+i41^0 == 0 /\ -incnt^post4+incnt^0 == 0 /\ n44^0-n44^post4 == 0 /\ hsize___027^0-hsize___027^post4 == 0 /\ hshift11^0-hshift11^post4 == 0 /\ apsim_incnt^0-apsim_incnt^post4 == 0 /\ -__const_429496^post4+__const_429496^0 == 0 /\ -apsim_bound11113^post4+apsim_bound11113^0 == 0 /\ -in_count^post4+in_count^0 == 0 /\ rat26^0-rat26^post4 == 0 /\ -maxbits^post4+maxbits^0 == 0 /\ -maxcode^post4+maxcode^0 == 0 /\ -__const_9^post4+__const_9^0 == 0 /\ tmp___017^0-tmp___017^post4 == 0 /\ -hsize^post4+hsize^0 == 0 /\ -hsize_reg10^post4+hsize_reg10^0 == 0 /\ -hsize___019^post4+hsize___019^0 == 0 /\ -c7^post4+c7^0 == 0 /\ 1+i21^0 <= 0 /\ -__const_65536^post4+__const_65536^0 == 0 /\ __const_53^0-__const_53^post4 == 0 /\ -ratio^post4+ratio^0 == 0 /\ m130^0-m130^post4 == 0 /\ fcode5^0-fcode5^post4 == 0 /\ r_off32^0-r_off32^post4 == 0 /\ -__const_10000^post4+__const_10000^0 == 0 /\ tmp12^0-tmp12^post4 == 0 /\ ret_getbyte18^0-ret_getbyte18^post4 == 0 /\ -m122^post4+m122^0 == 0 /\ __const_8^0-__const_8^post4 == 0 /\ __const_256^0-__const_256^post4 == 0 /\ -__const_8388607^post4+__const_8388607^0 == 0 /\ -n_bits^post4+n_bits^0 == 0 /\ out_count^0-out_count^post4 == 0 /\ -i45^post4+i45^0 == 0 /\ -clear_flg^post4+clear_flg^0 == 0 /\ __const_50^0-__const_50^post4 == 0 /\ exit_stat^0-exit_stat^post4 == 0 /\ bytes_out^0-bytes_out^post4 == 0 /\ -bits33^post4+bits33^0 == 0 /\ -offset^post4+offset^0 == 0), cost: 1
	New rule:
	l3 -> l2 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=__const_16^0+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i21^0 <= 0), cost: 1
	
		propagated equality __const_257^post4 = __const_257^0
		
		propagated equality block_compress^post4 = block_compress^0
		
		propagated equality __const_2147483647^post4 = __const_2147483647^0
		
		propagated equality __const_16^post4 = __const_16^0
		
		propagated equality count^post4 = count^0
		
		propagated equality free_ent^post4 = free_ent^0
		
		propagated equality tmp___024^post4 = tmp___024^0
		
		propagated equality maxmaxcode^post4 = maxmaxcode^0
		
		propagated equality tmp___115^post4 = tmp___115^0
		
		propagated equality ent8^post4 = ent8^0
		
		propagated equality i21^post4 = __const_16^0+i21^0
		
		propagated equality disp9^post4 = disp9^0
		
		propagated equality seed2^post4 = seed2^0
		
		propagated equality n40^post4 = n40^0
		
		propagated equality tmp___014^post4 = tmp___014^0
		
		propagated equality i6^post4 = i6^0
		
		propagated equality ret_getbyte25^post4 = ret_getbyte25^0
		
		propagated equality i3^post4 = i3^0
		
		propagated equality code31^post4 = code31^0
		
		propagated equality checkpoint^post4 = checkpoint^0
		
		propagated equality tabort4^post4 = tabort4^0
		
		propagated equality c37^post4 = c37^0
		
		propagated equality i29^post4 = i29^0
		
		propagated equality i41^post4 = i41^0
		
		propagated equality incnt^post4 = incnt^0
		
		propagated equality n44^post4 = n44^0
		
		propagated equality hsize___027^post4 = hsize___027^0
		
		propagated equality hshift11^post4 = hshift11^0
		
		propagated equality apsim_incnt^post4 = apsim_incnt^0
		
		propagated equality __const_429496^post4 = __const_429496^0
		
		propagated equality apsim_bound11113^post4 = apsim_bound11113^0
		
		propagated equality in_count^post4 = in_count^0
		
		propagated equality rat26^post4 = rat26^0
		
		propagated equality maxbits^post4 = maxbits^0
		
		propagated equality maxcode^post4 = maxcode^0
		
		propagated equality __const_9^post4 = __const_9^0
		
		propagated equality tmp___017^post4 = tmp___017^0
		
		propagated equality hsize^post4 = hsize^0
		
		propagated equality hsize_reg10^post4 = hsize_reg10^0
		
		propagated equality hsize___019^post4 = hsize___019^0
		
		propagated equality c7^post4 = c7^0
		
		propagated equality __const_65536^post4 = __const_65536^0
		
		propagated equality __const_53^post4 = __const_53^0
		
		propagated equality ratio^post4 = ratio^0
		
		propagated equality m130^post4 = m130^0
		
		propagated equality fcode5^post4 = fcode5^0
		
		propagated equality r_off32^post4 = r_off32^0
		
		propagated equality __const_10000^post4 = __const_10000^0
		
		propagated equality tmp12^post4 = tmp12^0
		
		propagated equality ret_getbyte18^post4 = ret_getbyte18^0
		
		propagated equality m122^post4 = m122^0
		
		propagated equality __const_8^post4 = __const_8^0
		
		propagated equality __const_256^post4 = __const_256^0
		
		propagated equality __const_8388607^post4 = __const_8388607^0
		
		propagated equality n_bits^post4 = n_bits^0
		
		propagated equality out_count^post4 = out_count^0
		
		propagated equality i45^post4 = i45^0
		
		propagated equality clear_flg^post4 = clear_flg^0
		
		propagated equality __const_50^post4 = __const_50^0
		
		propagated equality exit_stat^post4 = exit_stat^0
		
		propagated equality bytes_out^post4 = bytes_out^0
		
		propagated equality bits33^post4 = bits33^0
		
		propagated equality offset^post4 = offset^0
		
	Simplified Guard

	Original rule:
	l3 -> l2 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=__const_16^0+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i21^0 <= 0), cost: 1
	New rule:
	l3 -> l2 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=__const_16^0+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i21^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l2 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=__const_16^0+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i21^0 <= 0, cost: 1
	New rule:
	l3 -> l2 : i21^0'=__const_16^0+i21^0, 1+i21^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l4 : __const_10000^0'=__const_10000^post5, __const_16^0'=__const_16^post5, __const_2147483647^0'=__const_2147483647^post5, __const_256^0'=__const_256^post5, __const_257^0'=__const_257^post5, __const_429496^0'=__const_429496^post5, __const_50^0'=__const_50^post5, __const_53^0'=__const_53^post5, __const_65536^0'=__const_65536^post5, __const_8388607^0'=__const_8388607^post5, __const_8^0'=__const_8^post5, __const_9^0'=__const_9^post5, apsim_bound11113^0'=apsim_bound11113^post5, apsim_incnt^0'=apsim_incnt^post5, bits33^0'=bits33^post5, block_compress^0'=block_compress^post5, bytes_out^0'=bytes_out^post5, c37^0'=c37^post5, c7^0'=c7^post5, checkpoint^0'=checkpoint^post5, clear_flg^0'=clear_flg^post5, code31^0'=code31^post5, count^0'=count^post5, disp9^0'=disp9^post5, ent8^0'=ent8^post5, exit_stat^0'=exit_stat^post5, fcode5^0'=fcode5^post5, free_ent^0'=free_ent^post5, hshift11^0'=hshift11^post5, hsize^0'=hsize^post5, hsize___019^0'=hsize___019^post5, hsize___027^0'=hsize___027^post5, hsize_reg10^0'=hsize_reg10^post5, i21^0'=i21^post5, i29^0'=i29^post5, i3^0'=i3^post5, i41^0'=i41^post5, i45^0'=i45^post5, i6^0'=i6^post5, in_count^0'=in_count^post5, incnt^0'=incnt^post5, m122^0'=m122^post5, m130^0'=m130^post5, maxbits^0'=maxbits^post5, maxcode^0'=maxcode^post5, maxmaxcode^0'=maxmaxcode^post5, n40^0'=n40^post5, n44^0'=n44^post5, n_bits^0'=n_bits^post5, offset^0'=offset^post5, out_count^0'=out_count^post5, r_off32^0'=r_off32^post5, rat26^0'=rat26^post5, ratio^0'=ratio^post5, ret_getbyte18^0'=ret_getbyte18^post5, ret_getbyte25^0'=ret_getbyte25^post5, seed2^0'=seed2^post5, tabort4^0'=tabort4^post5, tmp12^0'=tmp12^post5, tmp___014^0'=tmp___014^post5, tmp___017^0'=tmp___017^post5, tmp___024^0'=tmp___024^post5, tmp___115^0'=tmp___115^post5, (hsize___027^0-hsize___027^post5 == 0 /\ out_count^0-out_count^post5 == 0 /\ n40^0-n40^post5 == 0 /\ ret_getbyte25^0-ret_getbyte25^post5 == 0 /\ -in_count^post5+in_count^0 == 0 /\ i21^0-i21^post5 == 0 /\ -ratio^post5+ratio^0 == 0 /\ -ret_getbyte18^post5+ret_getbyte18^0 == 0 /\ -__const_8388607^post5+__const_8388607^0 == 0 /\ -hsize_reg10^post5+hsize_reg10^0 == 0 /\ -c7^post5+c7^0 == 0 /\ clear_flg^0-clear_flg^post5 == 0 /\ tmp12^0-tmp12^post5 == 0 /\ -hsize___019^post5+hsize___019^0 == 0 /\ -tabort4^post5+tabort4^0 == 0 /\ -r_off32^post5+r_off32^0 == 0 /\ -__const_429496^post5+__const_429496^0 == 0 /\ offset^0-offset^post5 == 0 /\ -tmp___014^post5+tmp___014^0 == 0 /\ -i21^0 <= 0 /\ -m122^post5+m122^0 == 0 /\ maxmaxcode^0-maxmaxcode^post5 == 0 /\ -disp9^post5+disp9^0 == 0 /\ -i45^post5+i45^0 == 0 /\ -code31^post5+code31^0 == 0 /\ -free_ent^post5+free_ent^0 == 0 /\ checkpoint^0-checkpoint^post5 == 0 /\ -tmp___024^post5+tmp___024^0 == 0 /\ count^0-count^post5 == 0 /\ -__const_9^post5+__const_9^0 == 0 /\ -__const_10000^post5+__const_10000^0 == 0 /\ apsim_incnt^0-apsim_incnt^post5 == 0 /\ m130^0-m130^post5 == 0 /\ hshift11^0-hshift11^post5 == 0 /\ __const_256^0-__const_256^post5 == 0 /\ -bits33^post5+bits33^0 == 0 /\ n44^0-n44^post5 == 0 /\ bytes_out^0-bytes_out^post5 == 0 /\ tmp___115^0-tmp___115^post5 == 0 /\ -n_bits^post5+n_bits^0 == 0 /\ -__const_2147483647^post5+__const_2147483647^0 == 0 /\ maxbits^0-maxbits^post5 == 0 /\ exit_stat^0-exit_stat^post5 == 0 /\ -hsize^post5+hsize^0 == 0 /\ c37^0-c37^post5 == 0 /\ -block_compress^post5+block_compress^0 == 0 /\ rat26^0-rat26^post5 == 0 /\ __const_50^0-__const_50^post5 == 0 /\ fcode5^0-fcode5^post5 == 0 /\ -maxcode^post5+maxcode^0 == 0 /\ -ent8^post5+ent8^0 == 0 /\ -i41^post5+i41^0 == 0 /\ -i29^post5+i29^0 == 0 /\ -seed2^post5+seed2^0 == 0 /\ i6^0-i6^post5 == 0 /\ -apsim_bound11113^post5+apsim_bound11113^0 == 0 /\ __const_53^0-__const_53^post5 == 0 /\ i3^0-i3^post5 == 0 /\ tmp___017^0-tmp___017^post5 == 0 /\ -__const_65536^post5+__const_65536^0 == 0 /\ __const_16^0-__const_16^post5 == 0 /\ -incnt^post5+incnt^0 == 0 /\ __const_8^0-__const_8^post5 == 0 /\ __const_257^0-__const_257^post5 == 0), cost: 1
	New rule:
	l3 -> l4 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -i21^0 <= 0), cost: 1
	
		propagated equality hsize___027^post5 = hsize___027^0
		
		propagated equality out_count^post5 = out_count^0
		
		propagated equality n40^post5 = n40^0
		
		propagated equality ret_getbyte25^post5 = ret_getbyte25^0
		
		propagated equality in_count^post5 = in_count^0
		
		propagated equality i21^post5 = i21^0
		
		propagated equality ratio^post5 = ratio^0
		
		propagated equality ret_getbyte18^post5 = ret_getbyte18^0
		
		propagated equality __const_8388607^post5 = __const_8388607^0
		
		propagated equality hsize_reg10^post5 = hsize_reg10^0
		
		propagated equality c7^post5 = c7^0
		
		propagated equality clear_flg^post5 = clear_flg^0
		
		propagated equality tmp12^post5 = tmp12^0
		
		propagated equality hsize___019^post5 = hsize___019^0
		
		propagated equality tabort4^post5 = tabort4^0
		
		propagated equality r_off32^post5 = r_off32^0
		
		propagated equality __const_429496^post5 = __const_429496^0
		
		propagated equality offset^post5 = offset^0
		
		propagated equality tmp___014^post5 = tmp___014^0
		
		propagated equality m122^post5 = m122^0
		
		propagated equality maxmaxcode^post5 = maxmaxcode^0
		
		propagated equality disp9^post5 = disp9^0
		
		propagated equality i45^post5 = i45^0
		
		propagated equality code31^post5 = code31^0
		
		propagated equality free_ent^post5 = free_ent^0
		
		propagated equality checkpoint^post5 = checkpoint^0
		
		propagated equality tmp___024^post5 = tmp___024^0
		
		propagated equality count^post5 = count^0
		
		propagated equality __const_9^post5 = __const_9^0
		
		propagated equality __const_10000^post5 = __const_10000^0
		
		propagated equality apsim_incnt^post5 = apsim_incnt^0
		
		propagated equality m130^post5 = m130^0
		
		propagated equality hshift11^post5 = hshift11^0
		
		propagated equality __const_256^post5 = __const_256^0
		
		propagated equality bits33^post5 = bits33^0
		
		propagated equality n44^post5 = n44^0
		
		propagated equality bytes_out^post5 = bytes_out^0
		
		propagated equality tmp___115^post5 = tmp___115^0
		
		propagated equality n_bits^post5 = n_bits^0
		
		propagated equality __const_2147483647^post5 = __const_2147483647^0
		
		propagated equality maxbits^post5 = maxbits^0
		
		propagated equality exit_stat^post5 = exit_stat^0
		
		propagated equality hsize^post5 = hsize^0
		
		propagated equality c37^post5 = c37^0
		
		propagated equality block_compress^post5 = block_compress^0
		
		propagated equality rat26^post5 = rat26^0
		
		propagated equality __const_50^post5 = __const_50^0
		
		propagated equality fcode5^post5 = fcode5^0
		
		propagated equality maxcode^post5 = maxcode^0
		
		propagated equality ent8^post5 = ent8^0
		
		propagated equality i41^post5 = i41^0
		
		propagated equality i29^post5 = i29^0
		
		propagated equality seed2^post5 = seed2^0
		
		propagated equality i6^post5 = i6^0
		
		propagated equality apsim_bound11113^post5 = apsim_bound11113^0
		
		propagated equality __const_53^post5 = __const_53^0
		
		propagated equality i3^post5 = i3^0
		
		propagated equality tmp___017^post5 = tmp___017^0
		
		propagated equality __const_65536^post5 = __const_65536^0
		
		propagated equality __const_16^post5 = __const_16^0
		
		propagated equality incnt^post5 = incnt^0
		
		propagated equality __const_8^post5 = __const_8^0
		
		propagated equality __const_257^post5 = __const_257^0
		
	Simplified Guard

	Original rule:
	l3 -> l4 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -i21^0 <= 0), cost: 1
	New rule:
	l3 -> l4 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -i21^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l4 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -i21^0 <= 0, cost: 1
	New rule:
	l3 -> l4 : -i21^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l5 : __const_10000^0'=__const_10000^post6, __const_16^0'=__const_16^post6, __const_2147483647^0'=__const_2147483647^post6, __const_256^0'=__const_256^post6, __const_257^0'=__const_257^post6, __const_429496^0'=__const_429496^post6, __const_50^0'=__const_50^post6, __const_53^0'=__const_53^post6, __const_65536^0'=__const_65536^post6, __const_8388607^0'=__const_8388607^post6, __const_8^0'=__const_8^post6, __const_9^0'=__const_9^post6, apsim_bound11113^0'=apsim_bound11113^post6, apsim_incnt^0'=apsim_incnt^post6, bits33^0'=bits33^post6, block_compress^0'=block_compress^post6, bytes_out^0'=bytes_out^post6, c37^0'=c37^post6, c7^0'=c7^post6, checkpoint^0'=checkpoint^post6, clear_flg^0'=clear_flg^post6, code31^0'=code31^post6, count^0'=count^post6, disp9^0'=disp9^post6, ent8^0'=ent8^post6, exit_stat^0'=exit_stat^post6, fcode5^0'=fcode5^post6, free_ent^0'=free_ent^post6, hshift11^0'=hshift11^post6, hsize^0'=hsize^post6, hsize___019^0'=hsize___019^post6, hsize___027^0'=hsize___027^post6, hsize_reg10^0'=hsize_reg10^post6, i21^0'=i21^post6, i29^0'=i29^post6, i3^0'=i3^post6, i41^0'=i41^post6, i45^0'=i45^post6, i6^0'=i6^post6, in_count^0'=in_count^post6, incnt^0'=incnt^post6, m122^0'=m122^post6, m130^0'=m130^post6, maxbits^0'=maxbits^post6, maxcode^0'=maxcode^post6, maxmaxcode^0'=maxmaxcode^post6, n40^0'=n40^post6, n44^0'=n44^post6, n_bits^0'=n_bits^post6, offset^0'=offset^post6, out_count^0'=out_count^post6, r_off32^0'=r_off32^post6, rat26^0'=rat26^post6, ratio^0'=ratio^post6, ret_getbyte18^0'=ret_getbyte18^post6, ret_getbyte25^0'=ret_getbyte25^post6, seed2^0'=seed2^post6, tabort4^0'=tabort4^post6, tmp12^0'=tmp12^post6, tmp___014^0'=tmp___014^post6, tmp___017^0'=tmp___017^post6, tmp___024^0'=tmp___024^post6, tmp___115^0'=tmp___115^post6, (-incnt^post6+incnt^0 == 0 /\ -n_bits^post6+n_bits^0 == 0 /\ i21^0-i21^post6 == 0 /\ -m122^post6+m122^0 == 0 /\ -n44^post6+n44^0 == 0 /\ -i45^post6+i45^0 == 0 /\ checkpoint^0-checkpoint^post6 == 0 /\ exit_stat^0-exit_stat^post6 == 0 /\ -__const_10000^post6+__const_10000^0 == 0 /\ hsize___027^0-hsize___027^post6 == 0 /\ -__const_65536^post6+__const_65536^0 == 0 /\ __const_8^0-__const_8^post6 == 0 /\ __const_50^0-__const_50^post6 == 0 /\ -__const_429496^post6+__const_429496^0 == 0 /\ -maxcode^post6+maxcode^0 == 0 /\ -i41^post6+i41^0 == 0 /\ tmp___014^0-tmp___014^post6 == 0 /\ -tmp___017^post6+tmp___017^0 == 0 /\ -clear_flg^post6+clear_flg^0 == 0 /\ -ent8^post6+ent8^0 == 0 /\ maxmaxcode^0-maxmaxcode^post6 == 0 /\ -ret_getbyte18^post6+ret_getbyte18^0 == 0 /\ -in_count^post6+in_count^0 == 0 /\ -apsim_bound11113^post6+apsim_bound11113^0 == 0 /\ n40^0-n40^post6 == 0 /\ count^0-count^post6 == 0 /\ -fcode5^post6+fcode5^0 == 0 /\ -__const_8388607^post6+__const_8388607^0 == 0 /\ out_count^0-out_count^post6 == 0 /\ -hsize^post6+hsize^0 == 0 /\ tmp12^0-tmp12^post6 == 0 /\ -block_compress^post6+block_compress^0 == 0 /\ -seed2^post6+seed2^0 == 0 /\ -i29^post6+i29^0 == 0 /\ -code31^post6+code31^0 == 0 /\ offset^0-offset^post6 == 0 /\ __const_257^0-__const_257^post6 == 0 /\ bytes_out^0-bytes_out^post6 == 0 /\ -tabort4^post6+tabort4^0 == 0 /\ __const_9^0-__const_9^post6 == 0 /\ maxbits^0-maxbits^post6 == 0 /\ __const_16^0-__const_16^post6 == 0 /\ i6^0-i6^post6 == 0 /\ __const_256^0-__const_256^post6 == 0 /\ bits33^0-bits33^post6 == 0 /\ -r_off32^post6+r_off32^0 == 0 /\ -disp9^post6+disp9^0 == 0 /\ c37^0-c37^post6 == 0 /\ __const_53^0-__const_53^post6 == 0 /\ i3^0-i3^post6 == 0 /\ hsize___019^0-hsize___019^post6 == 0 /\ -tmp___024^post6+tmp___024^0 == 0 /\ -ratio^post6+ratio^0 == 0 /\ apsim_incnt^0-apsim_incnt^post6 == 0 /\ hshift11^0-hshift11^post6 == 0 /\ -free_ent^post6+free_ent^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post6 == 0 /\ -hsize_reg10^post6+hsize_reg10^0 == 0 /\ tmp___115^0-tmp___115^post6 == 0 /\ rat26^0-rat26^post6 == 0 /\ __const_2147483647^0-__const_2147483647^post6 == 0 /\ -c7^post6+c7^0 == 0 /\ m130^0-m130^post6 == 0), cost: 1
	New rule:
	l1 -> l5 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality incnt^post6 = incnt^0
		
		propagated equality n_bits^post6 = n_bits^0
		
		propagated equality i21^post6 = i21^0
		
		propagated equality m122^post6 = m122^0
		
		propagated equality n44^post6 = n44^0
		
		propagated equality i45^post6 = i45^0
		
		propagated equality checkpoint^post6 = checkpoint^0
		
		propagated equality exit_stat^post6 = exit_stat^0
		
		propagated equality __const_10000^post6 = __const_10000^0
		
		propagated equality hsize___027^post6 = hsize___027^0
		
		propagated equality __const_65536^post6 = __const_65536^0
		
		propagated equality __const_8^post6 = __const_8^0
		
		propagated equality __const_50^post6 = __const_50^0
		
		propagated equality __const_429496^post6 = __const_429496^0
		
		propagated equality maxcode^post6 = maxcode^0
		
		propagated equality i41^post6 = i41^0
		
		propagated equality tmp___014^post6 = tmp___014^0
		
		propagated equality tmp___017^post6 = tmp___017^0
		
		propagated equality clear_flg^post6 = clear_flg^0
		
		propagated equality ent8^post6 = ent8^0
		
		propagated equality maxmaxcode^post6 = maxmaxcode^0
		
		propagated equality ret_getbyte18^post6 = ret_getbyte18^0
		
		propagated equality in_count^post6 = in_count^0
		
		propagated equality apsim_bound11113^post6 = apsim_bound11113^0
		
		propagated equality n40^post6 = n40^0
		
		propagated equality count^post6 = count^0
		
		propagated equality fcode5^post6 = fcode5^0
		
		propagated equality __const_8388607^post6 = __const_8388607^0
		
		propagated equality out_count^post6 = out_count^0
		
		propagated equality hsize^post6 = hsize^0
		
		propagated equality tmp12^post6 = tmp12^0
		
		propagated equality block_compress^post6 = block_compress^0
		
		propagated equality seed2^post6 = seed2^0
		
		propagated equality i29^post6 = i29^0
		
		propagated equality code31^post6 = code31^0
		
		propagated equality offset^post6 = offset^0
		
		propagated equality __const_257^post6 = __const_257^0
		
		propagated equality bytes_out^post6 = bytes_out^0
		
		propagated equality tabort4^post6 = tabort4^0
		
		propagated equality __const_9^post6 = __const_9^0
		
		propagated equality maxbits^post6 = maxbits^0
		
		propagated equality __const_16^post6 = __const_16^0
		
		propagated equality i6^post6 = i6^0
		
		propagated equality __const_256^post6 = __const_256^0
		
		propagated equality bits33^post6 = bits33^0
		
		propagated equality r_off32^post6 = r_off32^0
		
		propagated equality disp9^post6 = disp9^0
		
		propagated equality c37^post6 = c37^0
		
		propagated equality __const_53^post6 = __const_53^0
		
		propagated equality i3^post6 = i3^0
		
		propagated equality hsize___019^post6 = hsize___019^0
		
		propagated equality tmp___024^post6 = tmp___024^0
		
		propagated equality ratio^post6 = ratio^0
		
		propagated equality apsim_incnt^post6 = apsim_incnt^0
		
		propagated equality hshift11^post6 = hshift11^0
		
		propagated equality free_ent^post6 = free_ent^0
		
		propagated equality ret_getbyte25^post6 = ret_getbyte25^0
		
		propagated equality hsize_reg10^post6 = hsize_reg10^0
		
		propagated equality tmp___115^post6 = tmp___115^0
		
		propagated equality rat26^post6 = rat26^0
		
		propagated equality __const_2147483647^post6 = __const_2147483647^0
		
		propagated equality c7^post6 = c7^0
		
		propagated equality m130^post6 = m130^0
		
	Simplified Guard

	Original rule:
	l1 -> l5 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l1 -> l5 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l5 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l1 -> l5 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l7 : __const_10000^0'=__const_10000^post7, __const_16^0'=__const_16^post7, __const_2147483647^0'=__const_2147483647^post7, __const_256^0'=__const_256^post7, __const_257^0'=__const_257^post7, __const_429496^0'=__const_429496^post7, __const_50^0'=__const_50^post7, __const_53^0'=__const_53^post7, __const_65536^0'=__const_65536^post7, __const_8388607^0'=__const_8388607^post7, __const_8^0'=__const_8^post7, __const_9^0'=__const_9^post7, apsim_bound11113^0'=apsim_bound11113^post7, apsim_incnt^0'=apsim_incnt^post7, bits33^0'=bits33^post7, block_compress^0'=block_compress^post7, bytes_out^0'=bytes_out^post7, c37^0'=c37^post7, c7^0'=c7^post7, checkpoint^0'=checkpoint^post7, clear_flg^0'=clear_flg^post7, code31^0'=code31^post7, count^0'=count^post7, disp9^0'=disp9^post7, ent8^0'=ent8^post7, exit_stat^0'=exit_stat^post7, fcode5^0'=fcode5^post7, free_ent^0'=free_ent^post7, hshift11^0'=hshift11^post7, hsize^0'=hsize^post7, hsize___019^0'=hsize___019^post7, hsize___027^0'=hsize___027^post7, hsize_reg10^0'=hsize_reg10^post7, i21^0'=i21^post7, i29^0'=i29^post7, i3^0'=i3^post7, i41^0'=i41^post7, i45^0'=i45^post7, i6^0'=i6^post7, in_count^0'=in_count^post7, incnt^0'=incnt^post7, m122^0'=m122^post7, m130^0'=m130^post7, maxbits^0'=maxbits^post7, maxcode^0'=maxcode^post7, maxmaxcode^0'=maxmaxcode^post7, n40^0'=n40^post7, n44^0'=n44^post7, n_bits^0'=n_bits^post7, offset^0'=offset^post7, out_count^0'=out_count^post7, r_off32^0'=r_off32^post7, rat26^0'=rat26^post7, ratio^0'=ratio^post7, ret_getbyte18^0'=ret_getbyte18^post7, ret_getbyte25^0'=ret_getbyte25^post7, seed2^0'=seed2^post7, tabort4^0'=tabort4^post7, tmp12^0'=tmp12^post7, tmp___014^0'=tmp___014^post7, tmp___017^0'=tmp___017^post7, tmp___024^0'=tmp___024^post7, tmp___115^0'=tmp___115^post7, (out_count^0-out_count^post7 == 0 /\ __const_9^0-__const_9^post7 == 0 /\ maxcode^0-maxcode^post7 == 0 /\ apsim_bound11113^0-apsim_bound11113^post7 == 0 /\ i6^post7-i6^0+disp9^0 == 0 /\ -i21^post7+i21^0 == 0 /\ c37^0-c37^post7 == 0 /\ __const_257^0-__const_257^post7 == 0 /\ offset^0-offset^post7 == 0 /\ maxmaxcode^0-maxmaxcode^post7 == 0 /\ -checkpoint^post7+checkpoint^0 == 0 /\ -bytes_out^post7+bytes_out^0 == 0 /\ c7^0-c7^post7 == 0 /\ hsize___027^0-hsize___027^post7 == 0 /\ -i3^post7+i3^0 == 0 /\ tmp___115^0-tmp___115^post7 == 0 /\ i29^0-i29^post7 == 0 /\ ret_getbyte25^0-ret_getbyte25^post7 == 0 /\ -incnt^post7+incnt^0 == 0 /\ __const_16^0-__const_16^post7 == 0 /\ m130^0-m130^post7 == 0 /\ -r_off32^post7+r_off32^0 == 0 /\ bits33^0-bits33^post7 == 0 /\ -seed2^post7+seed2^0 == 0 /\ -__const_50^post7+__const_50^0 == 0 /\ -fcode5^post7+fcode5^0 == 0 /\ hsize___019^0-hsize___019^post7 == 0 /\ n44^0-n44^post7 == 0 /\ code31^0-code31^post7 == 0 /\ -n40^post7+n40^0 == 0 /\ -i41^post7+i41^0 == 0 /\ -count^post7+count^0 == 0 /\ hshift11^0-hshift11^post7 == 0 /\ apsim_incnt^0-apsim_incnt^post7 == 0 /\ i45^0-i45^post7 == 0 /\ __const_65536^0-__const_65536^post7 == 0 /\ -ret_getbyte18^post7+ret_getbyte18^0 == 0 /\ -ratio^post7+ratio^0 == 0 /\ tmp12^0-tmp12^post7 == 0 /\ free_ent^0-free_ent^post7 == 0 /\ rat26^0-rat26^post7 == 0 /\ -clear_flg^post7+clear_flg^0 == 0 /\ -in_count^post7+in_count^0 == 0 /\ -__const_10000^post7+__const_10000^0 == 0 /\ -__const_2147483647^post7+__const_2147483647^0 == 0 /\ -__const_256^post7+__const_256^0 == 0 /\ -hsize_reg10^post7+hsize_reg10^0 == 0 /\ -__const_8388607^post7+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post7 == 0 /\ __const_8^0-__const_8^post7 == 0 /\ tmp___017^0-tmp___017^post7 == 0 /\ -hsize^post7+hsize^0 == 0 /\ block_compress^0-block_compress^post7 == 0 /\ -n_bits^post7+n_bits^0 == 0 /\ -tmp___014^post7+tmp___014^0 == 0 /\ m122^0-m122^post7 == 0 /\ -tabort4^post7+tabort4^0 == 0 /\ -maxbits^post7+maxbits^0 == 0 /\ ent8^0-ent8^post7 == 0 /\ -disp9^post7+disp9^0 == 0 /\ -exit_stat^post7+exit_stat^0 == 0 /\ __const_429496^0-__const_429496^post7 == 0 /\ -tmp___024^post7+tmp___024^0 == 0), cost: 1
	New rule:
	l6 -> l7 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0-disp9^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality out_count^post7 = out_count^0
		
		propagated equality __const_9^post7 = __const_9^0
		
		propagated equality maxcode^post7 = maxcode^0
		
		propagated equality apsim_bound11113^post7 = apsim_bound11113^0
		
		propagated equality i6^post7 = i6^0-disp9^0
		
		propagated equality i21^post7 = i21^0
		
		propagated equality c37^post7 = c37^0
		
		propagated equality __const_257^post7 = __const_257^0
		
		propagated equality offset^post7 = offset^0
		
		propagated equality maxmaxcode^post7 = maxmaxcode^0
		
		propagated equality checkpoint^post7 = checkpoint^0
		
		propagated equality bytes_out^post7 = bytes_out^0
		
		propagated equality c7^post7 = c7^0
		
		propagated equality hsize___027^post7 = hsize___027^0
		
		propagated equality i3^post7 = i3^0
		
		propagated equality tmp___115^post7 = tmp___115^0
		
		propagated equality i29^post7 = i29^0
		
		propagated equality ret_getbyte25^post7 = ret_getbyte25^0
		
		propagated equality incnt^post7 = incnt^0
		
		propagated equality __const_16^post7 = __const_16^0
		
		propagated equality m130^post7 = m130^0
		
		propagated equality r_off32^post7 = r_off32^0
		
		propagated equality bits33^post7 = bits33^0
		
		propagated equality seed2^post7 = seed2^0
		
		propagated equality __const_50^post7 = __const_50^0
		
		propagated equality fcode5^post7 = fcode5^0
		
		propagated equality hsize___019^post7 = hsize___019^0
		
		propagated equality n44^post7 = n44^0
		
		propagated equality code31^post7 = code31^0
		
		propagated equality n40^post7 = n40^0
		
		propagated equality i41^post7 = i41^0
		
		propagated equality count^post7 = count^0
		
		propagated equality hshift11^post7 = hshift11^0
		
		propagated equality apsim_incnt^post7 = apsim_incnt^0
		
		propagated equality i45^post7 = i45^0
		
		propagated equality __const_65536^post7 = __const_65536^0
		
		propagated equality ret_getbyte18^post7 = ret_getbyte18^0
		
		propagated equality ratio^post7 = ratio^0
		
		propagated equality tmp12^post7 = tmp12^0
		
		propagated equality free_ent^post7 = free_ent^0
		
		propagated equality rat26^post7 = rat26^0
		
		propagated equality clear_flg^post7 = clear_flg^0
		
		propagated equality in_count^post7 = in_count^0
		
		propagated equality __const_10000^post7 = __const_10000^0
		
		propagated equality __const_2147483647^post7 = __const_2147483647^0
		
		propagated equality __const_256^post7 = __const_256^0
		
		propagated equality hsize_reg10^post7 = hsize_reg10^0
		
		propagated equality __const_8388607^post7 = __const_8388607^0
		
		propagated equality __const_53^post7 = __const_53^0
		
		propagated equality __const_8^post7 = __const_8^0
		
		propagated equality tmp___017^post7 = tmp___017^0
		
		propagated equality hsize^post7 = hsize^0
		
		propagated equality block_compress^post7 = block_compress^0
		
		propagated equality n_bits^post7 = n_bits^0
		
		propagated equality tmp___014^post7 = tmp___014^0
		
		propagated equality m122^post7 = m122^0
		
		propagated equality tabort4^post7 = tabort4^0
		
		propagated equality maxbits^post7 = maxbits^0
		
		propagated equality ent8^post7 = ent8^0
		
		propagated equality disp9^post7 = disp9^0
		
		propagated equality exit_stat^post7 = exit_stat^0
		
		propagated equality __const_429496^post7 = __const_429496^0
		
		propagated equality tmp___024^post7 = tmp___024^0
		
	Simplified Guard

	Original rule:
	l6 -> l7 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0-disp9^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l6 -> l7 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0-disp9^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l7 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0-disp9^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l6 -> l7 : i6^0'=i6^0-disp9^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l4 : __const_10000^0'=__const_10000^post8, __const_16^0'=__const_16^post8, __const_2147483647^0'=__const_2147483647^post8, __const_256^0'=__const_256^post8, __const_257^0'=__const_257^post8, __const_429496^0'=__const_429496^post8, __const_50^0'=__const_50^post8, __const_53^0'=__const_53^post8, __const_65536^0'=__const_65536^post8, __const_8388607^0'=__const_8388607^post8, __const_8^0'=__const_8^post8, __const_9^0'=__const_9^post8, apsim_bound11113^0'=apsim_bound11113^post8, apsim_incnt^0'=apsim_incnt^post8, bits33^0'=bits33^post8, block_compress^0'=block_compress^post8, bytes_out^0'=bytes_out^post8, c37^0'=c37^post8, c7^0'=c7^post8, checkpoint^0'=checkpoint^post8, clear_flg^0'=clear_flg^post8, code31^0'=code31^post8, count^0'=count^post8, disp9^0'=disp9^post8, ent8^0'=ent8^post8, exit_stat^0'=exit_stat^post8, fcode5^0'=fcode5^post8, free_ent^0'=free_ent^post8, hshift11^0'=hshift11^post8, hsize^0'=hsize^post8, hsize___019^0'=hsize___019^post8, hsize___027^0'=hsize___027^post8, hsize_reg10^0'=hsize_reg10^post8, i21^0'=i21^post8, i29^0'=i29^post8, i3^0'=i3^post8, i41^0'=i41^post8, i45^0'=i45^post8, i6^0'=i6^post8, in_count^0'=in_count^post8, incnt^0'=incnt^post8, m122^0'=m122^post8, m130^0'=m130^post8, maxbits^0'=maxbits^post8, maxcode^0'=maxcode^post8, maxmaxcode^0'=maxmaxcode^post8, n40^0'=n40^post8, n44^0'=n44^post8, n_bits^0'=n_bits^post8, offset^0'=offset^post8, out_count^0'=out_count^post8, r_off32^0'=r_off32^post8, rat26^0'=rat26^post8, ratio^0'=ratio^post8, ret_getbyte18^0'=ret_getbyte18^post8, ret_getbyte25^0'=ret_getbyte25^post8, seed2^0'=seed2^post8, tabort4^0'=tabort4^post8, tmp12^0'=tmp12^post8, tmp___014^0'=tmp___014^post8, tmp___017^0'=tmp___017^post8, tmp___024^0'=tmp___024^post8, tmp___115^0'=tmp___115^post8, (__const_16^0+i21^post8-hsize___019^post8 == 0 /\ r_off32^0-r_off32^post8 == 0 /\ c7^0-c7^post8 == 0 /\ 1+m122^post8 == 0 /\ __const_8388607^0-__const_8388607^post8 == 0 /\ __const_257^0-__const_257^post8 == 0 /\ -i41^post8+i41^0 == 0 /\ -i3^post8+i3^0 == 0 /\ hshift11^0-__const_8^0+hshift11^post8 == 0 /\ out_count^0-out_count^post8 == 0 /\ ret_getbyte25^0-ret_getbyte25^post8 == 0 /\ __const_256^0-__const_256^post8 == 0 /\ ent8^0-ent8^post8 == 0 /\ code31^0-code31^post8 == 0 /\ i29^0-i29^post8 == 0 /\ apsim_bound11113^0-apsim_bound11113^post8 == 0 /\ -maxbits^post8+maxbits^0 == 0 /\ -clear_flg^post8+clear_flg^0 == 0 /\ -bytes_out^post8+bytes_out^0 == 0 /\ i45^0-i45^post8 == 0 /\ maxcode^0-maxcode^post8 == 0 /\ -disp9^post8+disp9^0 == 0 /\ tmp12^0-tmp12^post8 == 0 /\ -tmp___024^post8+tmp___024^0 == 0 /\ __const_9^0-__const_9^post8 == 0 /\ hsize_reg10^post8-hsize^0 == 0 /\ -ratio^post8+ratio^0 == 0 /\ -exit_stat^post8+exit_stat^0 == 0 /\ tabort4^0-tabort4^post8 == 0 /\ __const_65536^0-fcode5^0 <= 0 /\ maxmaxcode^0-maxmaxcode^post8 == 0 /\ -tmp___014^post8+tmp___014^0 == 0 /\ bits33^0-bits33^post8 == 0 /\ -__const_2147483647^post8+__const_2147483647^0 == 0 /\ hsize___027^0-hsize___027^post8 == 0 /\ -offset^post8+offset^0 == 0 /\ -n_bits^post8+n_bits^0 == 0 /\ -incnt^post8+incnt^0 == 0 /\ apsim_incnt^0-apsim_incnt^post8 == 0 /\ __const_65536^0-__const_65536^post8 == 0 /\ free_ent^0-free_ent^post8 == 0 /\ n44^0-n44^post8 == 0 /\ __const_10000^0-__const_10000^post8 == 0 /\ -__const_429496^post8+__const_429496^0 == 0 /\ -m130^post8+m130^0 == 0 /\ -checkpoint^post8+checkpoint^0 == 0 /\ -in_count^post8+in_count^0 == 0 /\ -block_compress^post8+block_compress^0 == 0 /\ -__const_50^post8+__const_50^0 == 0 /\ -count^post8+count^0 == 0 /\ -fcode5^post8+fcode5^0 == 0 /\ -hsize^post8+hsize^0 == 0 /\ i6^0-i6^post8 == 0 /\ -hsize_reg10^post8+hsize___019^post8 == 0 /\ -n40^post8+n40^0 == 0 /\ -ret_getbyte18^post8+ret_getbyte18^0 == 0 /\ -tmp___115^post8+tmp___115^0 == 0 /\ c37^0-c37^post8 == 0 /\ __const_8^0-__const_8^post8 == 0 /\ tmp___017^0-tmp___017^post8 == 0 /\ rat26^0-rat26^post8 == 0 /\ -__const_16^post8+__const_16^0 == 0 /\ -seed2^post8+seed2^0 == 0 /\ __const_53^0-__const_53^post8 == 0), cost: 1
	New rule:
	l8 -> l4 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=-hshift11^0+__const_8^0, hsize^0'=hsize^0, hsize___019^0'=hsize^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize^0, i21^0'=-__const_16^0+hsize^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=-1, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ __const_65536^0-fcode5^0 <= 0), cost: 1
	
		propagated equality hsize___019^post8 = __const_16^0+i21^post8
		
		propagated equality r_off32^post8 = r_off32^0
		
		propagated equality c7^post8 = c7^0
		
		propagated equality m122^post8 = -1
		
		propagated equality __const_8388607^post8 = __const_8388607^0
		
		propagated equality __const_257^post8 = __const_257^0
		
		propagated equality i41^post8 = i41^0
		
		propagated equality i3^post8 = i3^0
		
		propagated equality hshift11^post8 = -hshift11^0+__const_8^0
		
		propagated equality out_count^post8 = out_count^0
		
		propagated equality ret_getbyte25^post8 = ret_getbyte25^0
		
		propagated equality __const_256^post8 = __const_256^0
		
		propagated equality ent8^post8 = ent8^0
		
		propagated equality code31^post8 = code31^0
		
		propagated equality i29^post8 = i29^0
		
		propagated equality apsim_bound11113^post8 = apsim_bound11113^0
		
		propagated equality maxbits^post8 = maxbits^0
		
		propagated equality clear_flg^post8 = clear_flg^0
		
		propagated equality bytes_out^post8 = bytes_out^0
		
		propagated equality i45^post8 = i45^0
		
		propagated equality maxcode^post8 = maxcode^0
		
		propagated equality disp9^post8 = disp9^0
		
		propagated equality tmp12^post8 = tmp12^0
		
		propagated equality tmp___024^post8 = tmp___024^0
		
		propagated equality __const_9^post8 = __const_9^0
		
		propagated equality hsize_reg10^post8 = hsize^0
		
		propagated equality ratio^post8 = ratio^0
		
		propagated equality exit_stat^post8 = exit_stat^0
		
		propagated equality tabort4^post8 = tabort4^0
		
		propagated equality maxmaxcode^post8 = maxmaxcode^0
		
		propagated equality tmp___014^post8 = tmp___014^0
		
		propagated equality bits33^post8 = bits33^0
		
		propagated equality __const_2147483647^post8 = __const_2147483647^0
		
		propagated equality hsize___027^post8 = hsize___027^0
		
		propagated equality offset^post8 = offset^0
		
		propagated equality n_bits^post8 = n_bits^0
		
		propagated equality incnt^post8 = incnt^0
		
		propagated equality apsim_incnt^post8 = apsim_incnt^0
		
		propagated equality __const_65536^post8 = __const_65536^0
		
		propagated equality free_ent^post8 = free_ent^0
		
		propagated equality n44^post8 = n44^0
		
		propagated equality __const_10000^post8 = __const_10000^0
		
		propagated equality __const_429496^post8 = __const_429496^0
		
		propagated equality m130^post8 = m130^0
		
		propagated equality checkpoint^post8 = checkpoint^0
		
		propagated equality in_count^post8 = in_count^0
		
		propagated equality block_compress^post8 = block_compress^0
		
		propagated equality __const_50^post8 = __const_50^0
		
		propagated equality count^post8 = count^0
		
		propagated equality fcode5^post8 = fcode5^0
		
		propagated equality hsize^post8 = hsize^0
		
		propagated equality i6^post8 = i6^0
		
		propagated equality i21^post8 = -__const_16^0+hsize^0
		
		propagated equality n40^post8 = n40^0
		
		propagated equality ret_getbyte18^post8 = ret_getbyte18^0
		
		propagated equality tmp___115^post8 = tmp___115^0
		
		propagated equality c37^post8 = c37^0
		
		propagated equality __const_8^post8 = __const_8^0
		
		propagated equality tmp___017^post8 = tmp___017^0
		
		propagated equality rat26^post8 = rat26^0
		
		propagated equality __const_16^post8 = __const_16^0
		
		propagated equality seed2^post8 = seed2^0
		
		propagated equality __const_53^post8 = __const_53^0
		
	Simplified Guard

	Original rule:
	l8 -> l4 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=-hshift11^0+__const_8^0, hsize^0'=hsize^0, hsize___019^0'=hsize^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize^0, i21^0'=-__const_16^0+hsize^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=-1, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ __const_65536^0-fcode5^0 <= 0), cost: 1
	New rule:
	l8 -> l4 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=-hshift11^0+__const_8^0, hsize^0'=hsize^0, hsize___019^0'=hsize^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize^0, i21^0'=-__const_16^0+hsize^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=-1, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, __const_65536^0-fcode5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l4 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=-hshift11^0+__const_8^0, hsize^0'=hsize^0, hsize___019^0'=hsize^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize^0, i21^0'=-__const_16^0+hsize^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=-1, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, __const_65536^0-fcode5^0 <= 0, cost: 1
	New rule:
	l8 -> l4 : hshift11^0'=-hshift11^0+__const_8^0, hsize___019^0'=hsize^0, hsize_reg10^0'=hsize^0, i21^0'=-__const_16^0+hsize^0, m122^0'=-1, __const_65536^0-fcode5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l9 : __const_10000^0'=__const_10000^post9, __const_16^0'=__const_16^post9, __const_2147483647^0'=__const_2147483647^post9, __const_256^0'=__const_256^post9, __const_257^0'=__const_257^post9, __const_429496^0'=__const_429496^post9, __const_50^0'=__const_50^post9, __const_53^0'=__const_53^post9, __const_65536^0'=__const_65536^post9, __const_8388607^0'=__const_8388607^post9, __const_8^0'=__const_8^post9, __const_9^0'=__const_9^post9, apsim_bound11113^0'=apsim_bound11113^post9, apsim_incnt^0'=apsim_incnt^post9, bits33^0'=bits33^post9, block_compress^0'=block_compress^post9, bytes_out^0'=bytes_out^post9, c37^0'=c37^post9, c7^0'=c7^post9, checkpoint^0'=checkpoint^post9, clear_flg^0'=clear_flg^post9, code31^0'=code31^post9, count^0'=count^post9, disp9^0'=disp9^post9, ent8^0'=ent8^post9, exit_stat^0'=exit_stat^post9, fcode5^0'=fcode5^post9, free_ent^0'=free_ent^post9, hshift11^0'=hshift11^post9, hsize^0'=hsize^post9, hsize___019^0'=hsize___019^post9, hsize___027^0'=hsize___027^post9, hsize_reg10^0'=hsize_reg10^post9, i21^0'=i21^post9, i29^0'=i29^post9, i3^0'=i3^post9, i41^0'=i41^post9, i45^0'=i45^post9, i6^0'=i6^post9, in_count^0'=in_count^post9, incnt^0'=incnt^post9, m122^0'=m122^post9, m130^0'=m130^post9, maxbits^0'=maxbits^post9, maxcode^0'=maxcode^post9, maxmaxcode^0'=maxmaxcode^post9, n40^0'=n40^post9, n44^0'=n44^post9, n_bits^0'=n_bits^post9, offset^0'=offset^post9, out_count^0'=out_count^post9, r_off32^0'=r_off32^post9, rat26^0'=rat26^post9, ratio^0'=ratio^post9, ret_getbyte18^0'=ret_getbyte18^post9, ret_getbyte25^0'=ret_getbyte25^post9, seed2^0'=seed2^post9, tabort4^0'=tabort4^post9, tmp12^0'=tmp12^post9, tmp___014^0'=tmp___014^post9, tmp___017^0'=tmp___017^post9, tmp___024^0'=tmp___024^post9, tmp___115^0'=tmp___115^post9, (0 == 0 /\ tabort4^0-tabort4^post9 == 0 /\ ent8^0-ent8^post9 == 0 /\ -hsize^post9+hsize^0 == 0 /\ -hsize___019^post9+hsize___019^0 == 0 /\ -__const_2147483647^post9+__const_2147483647^0 == 0 /\ -__const_257^post9+__const_257^0 == 0 /\ -maxbits^post9+maxbits^0 == 0 /\ -m130^post9+m130^0 == 0 /\ -n40^post9+n40^0 == 0 /\ 1-__const_65536^0+fcode5^0 <= 0 /\ __const_8388607^0-__const_8388607^post9 == 0 /\ r_off32^0-r_off32^post9 == 0 /\ -__const_16^post9+__const_16^0 == 0 /\ hsize___027^0-hsize___027^post9 == 0 /\ -code31^post9+code31^0 == 0 /\ -maxmaxcode^post9+maxmaxcode^0 == 0 /\ exit_stat^0-exit_stat^post9 == 0 /\ -__const_65536^post9+__const_65536^0 == 0 /\ __const_50^0-__const_50^post9 == 0 /\ -1-hshift11^0+hshift11^post9 == 0 /\ -incnt^post9+incnt^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post9 == 0 /\ apsim_bound11113^0-apsim_bound11113^post9 == 0 /\ out_count^0-out_count^post9 == 0 /\ i45^0-i45^post9 == 0 /\ tmp12^0-tmp12^post9 == 0 /\ -ratio^post9+ratio^0 == 0 /\ -rat26^post9+rat26^0 == 0 /\ __const_9^0-__const_9^post9 == 0 /\ -in_count^post9+in_count^0 == 0 /\ -__const_8^post9+__const_8^0 == 0 /\ bits33^0-bits33^post9 == 0 /\ n44^0-n44^post9 == 0 /\ i6^0-i6^post9 == 0 /\ __const_10000^0-__const_10000^post9 == 0 /\ -block_compress^post9+block_compress^0 == 0 /\ -bytes_out^post9+bytes_out^0 == 0 /\ -tmp___014^post9+tmp___014^0 == 0 /\ n_bits^0-n_bits^post9 == 0 /\ apsim_incnt^0-apsim_incnt^post9 == 0 /\ -disp9^post9+disp9^0 == 0 /\ -count^post9+count^0 == 0 /\ -i29^post9+i29^0 == 0 /\ -tmp___024^post9+tmp___024^0 == 0 /\ -seed2^post9+seed2^0 == 0 /\ -tmp___115^post9+tmp___115^0 == 0 /\ -i3^post9+i3^0 == 0 /\ -i41^post9+i41^0 == 0 /\ c37^0-c37^post9 == 0 /\ m122^0-m122^post9 == 0 /\ maxcode^0-maxcode^post9 == 0 /\ checkpoint^0-checkpoint^post9 == 0 /\ __const_256^0-__const_256^post9 == 0 /\ -i21^post9+i21^0 == 0 /\ tmp___017^0-tmp___017^post9 == 0 /\ __const_53^0-__const_53^post9 == 0 /\ free_ent^0-free_ent^post9 == 0 /\ -offset^post9+offset^0 == 0 /\ -__const_429496^post9+__const_429496^0 == 0 /\ -c7^post9+c7^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post9 == 0 /\ -hsize_reg10^post9+hsize_reg10^0 == 0 /\ -clear_flg^post9+clear_flg^0 == 0), cost: 1
	New rule:
	l8 -> l9 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^post9, free_ent^0'=free_ent^0, hshift11^0'=1+hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-__const_65536^0+fcode5^0 <= 0), cost: 1
	
		propagated equality tabort4^post9 = tabort4^0
		
		propagated equality ent8^post9 = ent8^0
		
		propagated equality hsize^post9 = hsize^0
		
		propagated equality hsize___019^post9 = hsize___019^0
		
		propagated equality __const_2147483647^post9 = __const_2147483647^0
		
		propagated equality __const_257^post9 = __const_257^0
		
		propagated equality maxbits^post9 = maxbits^0
		
		propagated equality m130^post9 = m130^0
		
		propagated equality n40^post9 = n40^0
		
		propagated equality __const_8388607^post9 = __const_8388607^0
		
		propagated equality r_off32^post9 = r_off32^0
		
		propagated equality __const_16^post9 = __const_16^0
		
		propagated equality hsize___027^post9 = hsize___027^0
		
		propagated equality code31^post9 = code31^0
		
		propagated equality maxmaxcode^post9 = maxmaxcode^0
		
		propagated equality exit_stat^post9 = exit_stat^0
		
		propagated equality __const_65536^post9 = __const_65536^0
		
		propagated equality __const_50^post9 = __const_50^0
		
		propagated equality hshift11^post9 = 1+hshift11^0
		
		propagated equality incnt^post9 = incnt^0
		
		propagated equality ret_getbyte18^post9 = ret_getbyte18^0
		
		propagated equality apsim_bound11113^post9 = apsim_bound11113^0
		
		propagated equality out_count^post9 = out_count^0
		
		propagated equality i45^post9 = i45^0
		
		propagated equality tmp12^post9 = tmp12^0
		
		propagated equality ratio^post9 = ratio^0
		
		propagated equality rat26^post9 = rat26^0
		
		propagated equality __const_9^post9 = __const_9^0
		
		propagated equality in_count^post9 = in_count^0
		
		propagated equality __const_8^post9 = __const_8^0
		
		propagated equality bits33^post9 = bits33^0
		
		propagated equality n44^post9 = n44^0
		
		propagated equality i6^post9 = i6^0
		
		propagated equality __const_10000^post9 = __const_10000^0
		
		propagated equality block_compress^post9 = block_compress^0
		
		propagated equality bytes_out^post9 = bytes_out^0
		
		propagated equality tmp___014^post9 = tmp___014^0
		
		propagated equality n_bits^post9 = n_bits^0
		
		propagated equality apsim_incnt^post9 = apsim_incnt^0
		
		propagated equality disp9^post9 = disp9^0
		
		propagated equality count^post9 = count^0
		
		propagated equality i29^post9 = i29^0
		
		propagated equality tmp___024^post9 = tmp___024^0
		
		propagated equality seed2^post9 = seed2^0
		
		propagated equality tmp___115^post9 = tmp___115^0
		
		propagated equality i3^post9 = i3^0
		
		propagated equality i41^post9 = i41^0
		
		propagated equality c37^post9 = c37^0
		
		propagated equality m122^post9 = m122^0
		
		propagated equality maxcode^post9 = maxcode^0
		
		propagated equality checkpoint^post9 = checkpoint^0
		
		propagated equality __const_256^post9 = __const_256^0
		
		propagated equality i21^post9 = i21^0
		
		propagated equality tmp___017^post9 = tmp___017^0
		
		propagated equality __const_53^post9 = __const_53^0
		
		propagated equality free_ent^post9 = free_ent^0
		
		propagated equality offset^post9 = offset^0
		
		propagated equality __const_429496^post9 = __const_429496^0
		
		propagated equality c7^post9 = c7^0
		
		propagated equality ret_getbyte25^post9 = ret_getbyte25^0
		
		propagated equality hsize_reg10^post9 = hsize_reg10^0
		
		propagated equality clear_flg^post9 = clear_flg^0
		
	Simplified Guard

	Original rule:
	l8 -> l9 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^post9, free_ent^0'=free_ent^0, hshift11^0'=1+hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-__const_65536^0+fcode5^0 <= 0), cost: 1
	New rule:
	l8 -> l9 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^post9, free_ent^0'=free_ent^0, hshift11^0'=1+hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-__const_65536^0+fcode5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l9 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^post9, free_ent^0'=free_ent^0, hshift11^0'=1+hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-__const_65536^0+fcode5^0 <= 0, cost: 1
	New rule:
	l8 -> l9 : fcode5^0'=fcode5^post9, hshift11^0'=1+hshift11^0, 1-__const_65536^0+fcode5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l10 -> l11 : __const_10000^0'=__const_10000^post10, __const_16^0'=__const_16^post10, __const_2147483647^0'=__const_2147483647^post10, __const_256^0'=__const_256^post10, __const_257^0'=__const_257^post10, __const_429496^0'=__const_429496^post10, __const_50^0'=__const_50^post10, __const_53^0'=__const_53^post10, __const_65536^0'=__const_65536^post10, __const_8388607^0'=__const_8388607^post10, __const_8^0'=__const_8^post10, __const_9^0'=__const_9^post10, apsim_bound11113^0'=apsim_bound11113^post10, apsim_incnt^0'=apsim_incnt^post10, bits33^0'=bits33^post10, block_compress^0'=block_compress^post10, bytes_out^0'=bytes_out^post10, c37^0'=c37^post10, c7^0'=c7^post10, checkpoint^0'=checkpoint^post10, clear_flg^0'=clear_flg^post10, code31^0'=code31^post10, count^0'=count^post10, disp9^0'=disp9^post10, ent8^0'=ent8^post10, exit_stat^0'=exit_stat^post10, fcode5^0'=fcode5^post10, free_ent^0'=free_ent^post10, hshift11^0'=hshift11^post10, hsize^0'=hsize^post10, hsize___019^0'=hsize___019^post10, hsize___027^0'=hsize___027^post10, hsize_reg10^0'=hsize_reg10^post10, i21^0'=i21^post10, i29^0'=i29^post10, i3^0'=i3^post10, i41^0'=i41^post10, i45^0'=i45^post10, i6^0'=i6^post10, in_count^0'=in_count^post10, incnt^0'=incnt^post10, m122^0'=m122^post10, m130^0'=m130^post10, maxbits^0'=maxbits^post10, maxcode^0'=maxcode^post10, maxmaxcode^0'=maxmaxcode^post10, n40^0'=n40^post10, n44^0'=n44^post10, n_bits^0'=n_bits^post10, offset^0'=offset^post10, out_count^0'=out_count^post10, r_off32^0'=r_off32^post10, rat26^0'=rat26^post10, ratio^0'=ratio^post10, ret_getbyte18^0'=ret_getbyte18^post10, ret_getbyte25^0'=ret_getbyte25^post10, seed2^0'=seed2^post10, tabort4^0'=tabort4^post10, tmp12^0'=tmp12^post10, tmp___014^0'=tmp___014^post10, tmp___017^0'=tmp___017^post10, tmp___024^0'=tmp___024^post10, tmp___115^0'=tmp___115^post10, (tmp___017^0-tmp___017^post10 == 0 /\ -tmp___115^post10+tmp___115^0 == 0 /\ free_ent^0-free_ent^post10 == 0 /\ -clear_flg^post10+clear_flg^0 == 0 /\ -fcode5^post10+fcode5^0 == 0 /\ __const_53^0-__const_53^post10 == 0 /\ tmp___024^0-tmp___024^post10 == 0 /\ -i21^post10+i21^0 == 0 /\ tabort4^0-tabort4^post10 == 0 /\ -c7^post10+c7^0 == 0 /\ -block_compress^post10+block_compress^0 == 0 /\ -ratio^post10+ratio^0 == 0 /\ -__const_16^post10+__const_16^0 == 0 /\ -i45^post10+i45^0 == 0 /\ -incnt^post10+incnt^0 == 0 /\ m122^0-m122^post10 == 0 /\ -tmp12^post10+tmp12^0 == 0 /\ -__const_429496^post10+__const_429496^0 == 0 /\ -seed2^post10+seed2^0 == 0 /\ -code31^post10+code31^0 == 0 /\ ent8^0-ent8^post10 == 0 /\ -apsim_incnt^post10+apsim_incnt^0 == 0 /\ -offset^post10+offset^0 == 0 /\ bytes_out^0-bytes_out^post10 == 0 /\ __const_10000^0-__const_10000^post10 == 0 /\ -__const_65536^post10+__const_65536^0 == 0 /\ -m130^post10+m130^0 == 0 /\ r_off32^0-r_off32^post10 == 0 /\ exit_stat^0-exit_stat^post10 == 0 /\ out_count^0-out_count^post10 == 0 /\ -n40^post10+n40^0 == 0 /\ maxcode^0-maxcode^post10 == 0 /\ apsim_bound11113^0-apsim_bound11113^post10 == 0 /\ -in_count^post10+in_count^0 == 0 /\ -__const_9^post10+__const_9^0 == 0 /\ c37^0-c37^post10 == 0 /\ -hsize_reg10^post10+hsize_reg10^0 == 0 /\ -__const_8388607^post10+__const_8388607^0 == 0 /\ -hsize___019^post10+hsize___019^0 == 0 /\ -hsize^post10+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post10 == 0 /\ hsize___027^0-hsize___027^post10 == 0 /\ -tmp___014^post10+tmp___014^0 == 0 /\ __const_16^0+i29^post10-i29^0 == 0 /\ -ret_getbyte25^post10+ret_getbyte25^0 == 0 /\ -__const_2147483647^post10+__const_2147483647^0 == 0 /\ -rat26^post10+rat26^0 == 0 /\ -i41^post10+i41^0 == 0 /\ __const_50^0-__const_50^post10 == 0 /\ -__const_8^post10+__const_8^0 == 0 /\ n44^0-n44^post10 == 0 /\ bits33^0-bits33^post10 == 0 /\ ret_getbyte18^0-ret_getbyte18^post10 == 0 /\ __const_256^0-__const_256^post10 == 0 /\ __const_257^0-__const_257^post10 == 0 /\ hshift11^0-hshift11^post10 == 0 /\ checkpoint^0-checkpoint^post10 == 0 /\ i6^0-i6^post10 == 0 /\ -maxbits^post10+maxbits^0 == 0 /\ count^0-count^post10 == 0 /\ i3^0-i3^post10 == 0 /\ n_bits^0-n_bits^post10 == 0 /\ -disp9^post10+disp9^0 == 0), cost: 1
	New rule:
	l10 -> l11 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-__const_16^0+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality tmp___017^post10 = tmp___017^0
		
		propagated equality tmp___115^post10 = tmp___115^0
		
		propagated equality free_ent^post10 = free_ent^0
		
		propagated equality clear_flg^post10 = clear_flg^0
		
		propagated equality fcode5^post10 = fcode5^0
		
		propagated equality __const_53^post10 = __const_53^0
		
		propagated equality tmp___024^post10 = tmp___024^0
		
		propagated equality i21^post10 = i21^0
		
		propagated equality tabort4^post10 = tabort4^0
		
		propagated equality c7^post10 = c7^0
		
		propagated equality block_compress^post10 = block_compress^0
		
		propagated equality ratio^post10 = ratio^0
		
		propagated equality __const_16^post10 = __const_16^0
		
		propagated equality i45^post10 = i45^0
		
		propagated equality incnt^post10 = incnt^0
		
		propagated equality m122^post10 = m122^0
		
		propagated equality tmp12^post10 = tmp12^0
		
		propagated equality __const_429496^post10 = __const_429496^0
		
		propagated equality seed2^post10 = seed2^0
		
		propagated equality code31^post10 = code31^0
		
		propagated equality ent8^post10 = ent8^0
		
		propagated equality apsim_incnt^post10 = apsim_incnt^0
		
		propagated equality offset^post10 = offset^0
		
		propagated equality bytes_out^post10 = bytes_out^0
		
		propagated equality __const_10000^post10 = __const_10000^0
		
		propagated equality __const_65536^post10 = __const_65536^0
		
		propagated equality m130^post10 = m130^0
		
		propagated equality r_off32^post10 = r_off32^0
		
		propagated equality exit_stat^post10 = exit_stat^0
		
		propagated equality out_count^post10 = out_count^0
		
		propagated equality n40^post10 = n40^0
		
		propagated equality maxcode^post10 = maxcode^0
		
		propagated equality apsim_bound11113^post10 = apsim_bound11113^0
		
		propagated equality in_count^post10 = in_count^0
		
		propagated equality __const_9^post10 = __const_9^0
		
		propagated equality c37^post10 = c37^0
		
		propagated equality hsize_reg10^post10 = hsize_reg10^0
		
		propagated equality __const_8388607^post10 = __const_8388607^0
		
		propagated equality hsize___019^post10 = hsize___019^0
		
		propagated equality hsize^post10 = hsize^0
		
		propagated equality maxmaxcode^post10 = maxmaxcode^0
		
		propagated equality hsize___027^post10 = hsize___027^0
		
		propagated equality tmp___014^post10 = tmp___014^0
		
		propagated equality i29^post10 = -__const_16^0+i29^0
		
		propagated equality ret_getbyte25^post10 = ret_getbyte25^0
		
		propagated equality __const_2147483647^post10 = __const_2147483647^0
		
		propagated equality rat26^post10 = rat26^0
		
		propagated equality i41^post10 = i41^0
		
		propagated equality __const_50^post10 = __const_50^0
		
		propagated equality __const_8^post10 = __const_8^0
		
		propagated equality n44^post10 = n44^0
		
		propagated equality bits33^post10 = bits33^0
		
		propagated equality ret_getbyte18^post10 = ret_getbyte18^0
		
		propagated equality __const_256^post10 = __const_256^0
		
		propagated equality __const_257^post10 = __const_257^0
		
		propagated equality hshift11^post10 = hshift11^0
		
		propagated equality checkpoint^post10 = checkpoint^0
		
		propagated equality i6^post10 = i6^0
		
		propagated equality maxbits^post10 = maxbits^0
		
		propagated equality count^post10 = count^0
		
		propagated equality i3^post10 = i3^0
		
		propagated equality n_bits^post10 = n_bits^0
		
		propagated equality disp9^post10 = disp9^0
		
	Simplified Guard

	Original rule:
	l10 -> l11 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-__const_16^0+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l10 -> l11 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-__const_16^0+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l10 -> l11 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-__const_16^0+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l10 -> l11 : i29^0'=-__const_16^0+i29^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l12 -> l9 : __const_10000^0'=__const_10000^post11, __const_16^0'=__const_16^post11, __const_2147483647^0'=__const_2147483647^post11, __const_256^0'=__const_256^post11, __const_257^0'=__const_257^post11, __const_429496^0'=__const_429496^post11, __const_50^0'=__const_50^post11, __const_53^0'=__const_53^post11, __const_65536^0'=__const_65536^post11, __const_8388607^0'=__const_8388607^post11, __const_8^0'=__const_8^post11, __const_9^0'=__const_9^post11, apsim_bound11113^0'=apsim_bound11113^post11, apsim_incnt^0'=apsim_incnt^post11, bits33^0'=bits33^post11, block_compress^0'=block_compress^post11, bytes_out^0'=bytes_out^post11, c37^0'=c37^post11, c7^0'=c7^post11, checkpoint^0'=checkpoint^post11, clear_flg^0'=clear_flg^post11, code31^0'=code31^post11, count^0'=count^post11, disp9^0'=disp9^post11, ent8^0'=ent8^post11, exit_stat^0'=exit_stat^post11, fcode5^0'=fcode5^post11, free_ent^0'=free_ent^post11, hshift11^0'=hshift11^post11, hsize^0'=hsize^post11, hsize___019^0'=hsize___019^post11, hsize___027^0'=hsize___027^post11, hsize_reg10^0'=hsize_reg10^post11, i21^0'=i21^post11, i29^0'=i29^post11, i3^0'=i3^post11, i41^0'=i41^post11, i45^0'=i45^post11, i6^0'=i6^post11, in_count^0'=in_count^post11, incnt^0'=incnt^post11, m122^0'=m122^post11, m130^0'=m130^post11, maxbits^0'=maxbits^post11, maxcode^0'=maxcode^post11, maxmaxcode^0'=maxmaxcode^post11, n40^0'=n40^post11, n44^0'=n44^post11, n_bits^0'=n_bits^post11, offset^0'=offset^post11, out_count^0'=out_count^post11, r_off32^0'=r_off32^post11, rat26^0'=rat26^post11, ratio^0'=ratio^post11, ret_getbyte18^0'=ret_getbyte18^post11, ret_getbyte25^0'=ret_getbyte25^post11, seed2^0'=seed2^post11, tabort4^0'=tabort4^post11, tmp12^0'=tmp12^post11, tmp___014^0'=tmp___014^post11, tmp___017^0'=tmp___017^post11, tmp___024^0'=tmp___024^post11, tmp___115^0'=tmp___115^post11, (hsize___027^0-hsize___027^post11 == 0 /\ i29^0-i29^post11 == 0 /\ __const_8388607^0-__const_8388607^post11 == 0 /\ -__const_429496^post11+__const_429496^0 == 0 /\ -hsize___019^post11+hsize___019^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post11 == 0 /\ __const_50^0-__const_50^post11 == 0 /\ -hsize_reg10^post11+hsize_reg10^0 == 0 /\ r_off32^0-r_off32^post11 == 0 /\ __const_10000^0-__const_10000^post11 == 0 /\ -hsize^post11+hsize^0 == 0 /\ -tmp___014^post11+tmp___014^0 == 0 /\ -i41^post11+i41^0 == 0 /\ -rat26^post11+rat26^0 == 0 /\ __const_9^0-__const_9^post11 == 0 /\ out_count^0-out_count^post11 == 0 /\ apsim_bound11113^0-apsim_bound11113^post11 == 0 /\ maxcode^0-maxcode^post11 == 0 /\ tmp12^post11-ret_getbyte18^0 == 0 /\ -__const_2147483647^post11+__const_2147483647^0 == 0 /\ __const_16^0-__const_16^post11 == 0 /\ i45^0-i45^post11 == 0 /\ maxmaxcode^0-maxmaxcode^post11 == 0 /\ tabort4^0-tabort4^post11 == 0 /\ -maxbits^post11+maxbits^0 == 0 /\ -exit_stat^post11+exit_stat^0 == 0 /\ -tmp___024^post11+tmp___024^0 == 0 /\ -tmp___115^post11+tmp___115^0 == 0 /\ m122^0-m122^post11 == 0 /\ -in_count^post11+in_count^0 == 0 /\ -tmp12^post11+ent8^post11 == 0 /\ -i21^post11+i21^0 == 0 /\ __const_257^0-__const_257^post11 == 0 /\ bits33^0-bits33^post11 == 0 /\ -i6^post11+i6^0 == 0 /\ -block_compress^post11+block_compress^0 == 0 /\ -__const_8^post11+__const_8^0 == 0 /\ -checkpoint^post11+checkpoint^0 == 0 /\ -clear_flg^post11+clear_flg^0 == 0 /\ n44^0-n44^post11 == 0 /\ count^0-count^post11 == 0 /\ -bytes_out^post11+bytes_out^0 == 0 /\ -ratio^post11+ratio^0 == 0 /\ fcode5^post11-hsize^0 == 0 /\ n_bits^0-n_bits^post11 == 0 /\ apsim_incnt^0-apsim_incnt^post11 == 0 /\ __const_256^0-__const_256^post11 == 0 /\ -i3^post11+i3^0 == 0 /\ -incnt^post11+incnt^0 == 0 /\ free_ent^0-free_ent^post11 == 0 /\ __const_53^0-__const_53^post11 == 0 /\ -offset^post11+offset^0 == 0 /\ c37^0-c37^post11 == 0 /\ -seed2^post11+seed2^0 == 0 /\ -code31^post11+code31^0 == 0 /\ -__const_65536^post11+__const_65536^0 == 0 /\ -disp9^post11+disp9^0 == 0 /\ -m130^post11+m130^0 == 0 /\ hshift11^post11 == 0 /\ c7^0-c7^post11 == 0 /\ -n40^post11+n40^0 == 0 /\ -ret_getbyte25^post11+ret_getbyte25^0 == 0 /\ tmp___017^0-tmp___017^post11 == 0), cost: 1
	New rule:
	l12 -> l9 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ret_getbyte18^0, exit_stat^0'=exit_stat^0, fcode5^0'=hsize^0, free_ent^0'=free_ent^0, hshift11^0'=0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=ret_getbyte18^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality hsize___027^post11 = hsize___027^0
		
		propagated equality i29^post11 = i29^0
		
		propagated equality __const_8388607^post11 = __const_8388607^0
		
		propagated equality __const_429496^post11 = __const_429496^0
		
		propagated equality hsize___019^post11 = hsize___019^0
		
		propagated equality ret_getbyte18^post11 = ret_getbyte18^0
		
		propagated equality __const_50^post11 = __const_50^0
		
		propagated equality hsize_reg10^post11 = hsize_reg10^0
		
		propagated equality r_off32^post11 = r_off32^0
		
		propagated equality __const_10000^post11 = __const_10000^0
		
		propagated equality hsize^post11 = hsize^0
		
		propagated equality tmp___014^post11 = tmp___014^0
		
		propagated equality i41^post11 = i41^0
		
		propagated equality rat26^post11 = rat26^0
		
		propagated equality __const_9^post11 = __const_9^0
		
		propagated equality out_count^post11 = out_count^0
		
		propagated equality apsim_bound11113^post11 = apsim_bound11113^0
		
		propagated equality maxcode^post11 = maxcode^0
		
		propagated equality tmp12^post11 = ret_getbyte18^0
		
		propagated equality __const_2147483647^post11 = __const_2147483647^0
		
		propagated equality __const_16^post11 = __const_16^0
		
		propagated equality i45^post11 = i45^0
		
		propagated equality maxmaxcode^post11 = maxmaxcode^0
		
		propagated equality tabort4^post11 = tabort4^0
		
		propagated equality maxbits^post11 = maxbits^0
		
		propagated equality exit_stat^post11 = exit_stat^0
		
		propagated equality tmp___024^post11 = tmp___024^0
		
		propagated equality tmp___115^post11 = tmp___115^0
		
		propagated equality m122^post11 = m122^0
		
		propagated equality in_count^post11 = in_count^0
		
		propagated equality ent8^post11 = ret_getbyte18^0
		
		propagated equality i21^post11 = i21^0
		
		propagated equality __const_257^post11 = __const_257^0
		
		propagated equality bits33^post11 = bits33^0
		
		propagated equality i6^post11 = i6^0
		
		propagated equality block_compress^post11 = block_compress^0
		
		propagated equality __const_8^post11 = __const_8^0
		
		propagated equality checkpoint^post11 = checkpoint^0
		
		propagated equality clear_flg^post11 = clear_flg^0
		
		propagated equality n44^post11 = n44^0
		
		propagated equality count^post11 = count^0
		
		propagated equality bytes_out^post11 = bytes_out^0
		
		propagated equality ratio^post11 = ratio^0
		
		propagated equality fcode5^post11 = hsize^0
		
		propagated equality n_bits^post11 = n_bits^0
		
		propagated equality apsim_incnt^post11 = apsim_incnt^0
		
		propagated equality __const_256^post11 = __const_256^0
		
		propagated equality i3^post11 = i3^0
		
		propagated equality incnt^post11 = incnt^0
		
		propagated equality free_ent^post11 = free_ent^0
		
		propagated equality __const_53^post11 = __const_53^0
		
		propagated equality offset^post11 = offset^0
		
		propagated equality c37^post11 = c37^0
		
		propagated equality seed2^post11 = seed2^0
		
		propagated equality code31^post11 = code31^0
		
		propagated equality __const_65536^post11 = __const_65536^0
		
		propagated equality disp9^post11 = disp9^0
		
		propagated equality m130^post11 = m130^0
		
		propagated equality hshift11^post11 = 0
		
		propagated equality c7^post11 = c7^0
		
		propagated equality n40^post11 = n40^0
		
		propagated equality ret_getbyte25^post11 = ret_getbyte25^0
		
		propagated equality tmp___017^post11 = tmp___017^0
		
	Simplified Guard

	Original rule:
	l12 -> l9 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ret_getbyte18^0, exit_stat^0'=exit_stat^0, fcode5^0'=hsize^0, free_ent^0'=free_ent^0, hshift11^0'=0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=ret_getbyte18^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l12 -> l9 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ret_getbyte18^0, exit_stat^0'=exit_stat^0, fcode5^0'=hsize^0, free_ent^0'=free_ent^0, hshift11^0'=0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=ret_getbyte18^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l12 -> l9 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ret_getbyte18^0, exit_stat^0'=exit_stat^0, fcode5^0'=hsize^0, free_ent^0'=free_ent^0, hshift11^0'=0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=ret_getbyte18^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l12 -> l9 : ent8^0'=ret_getbyte18^0, fcode5^0'=hsize^0, hshift11^0'=0, tmp12^0'=ret_getbyte18^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l13 -> l14 : __const_10000^0'=__const_10000^post12, __const_16^0'=__const_16^post12, __const_2147483647^0'=__const_2147483647^post12, __const_256^0'=__const_256^post12, __const_257^0'=__const_257^post12, __const_429496^0'=__const_429496^post12, __const_50^0'=__const_50^post12, __const_53^0'=__const_53^post12, __const_65536^0'=__const_65536^post12, __const_8388607^0'=__const_8388607^post12, __const_8^0'=__const_8^post12, __const_9^0'=__const_9^post12, apsim_bound11113^0'=apsim_bound11113^post12, apsim_incnt^0'=apsim_incnt^post12, bits33^0'=bits33^post12, block_compress^0'=block_compress^post12, bytes_out^0'=bytes_out^post12, c37^0'=c37^post12, c7^0'=c7^post12, checkpoint^0'=checkpoint^post12, clear_flg^0'=clear_flg^post12, code31^0'=code31^post12, count^0'=count^post12, disp9^0'=disp9^post12, ent8^0'=ent8^post12, exit_stat^0'=exit_stat^post12, fcode5^0'=fcode5^post12, free_ent^0'=free_ent^post12, hshift11^0'=hshift11^post12, hsize^0'=hsize^post12, hsize___019^0'=hsize___019^post12, hsize___027^0'=hsize___027^post12, hsize_reg10^0'=hsize_reg10^post12, i21^0'=i21^post12, i29^0'=i29^post12, i3^0'=i3^post12, i41^0'=i41^post12, i45^0'=i45^post12, i6^0'=i6^post12, in_count^0'=in_count^post12, incnt^0'=incnt^post12, m122^0'=m122^post12, m130^0'=m130^post12, maxbits^0'=maxbits^post12, maxcode^0'=maxcode^post12, maxmaxcode^0'=maxmaxcode^post12, n40^0'=n40^post12, n44^0'=n44^post12, n_bits^0'=n_bits^post12, offset^0'=offset^post12, out_count^0'=out_count^post12, r_off32^0'=r_off32^post12, rat26^0'=rat26^post12, ratio^0'=ratio^post12, ret_getbyte18^0'=ret_getbyte18^post12, ret_getbyte25^0'=ret_getbyte25^post12, seed2^0'=seed2^post12, tabort4^0'=tabort4^post12, tmp12^0'=tmp12^post12, tmp___014^0'=tmp___014^post12, tmp___017^0'=tmp___017^post12, tmp___024^0'=tmp___024^post12, tmp___115^0'=tmp___115^post12, (-__const_8^post12+__const_8^0 == 0 /\ -code31^post12+code31^0 == 0 /\ -seed2^post12+seed2^0 == 0 /\ -apsim_incnt^post12+apsim_incnt^0 == 0 /\ -offset^post12+offset^0 == 0 /\ tmp12^0-tmp12^post12 == 0 /\ exit_stat^0-exit_stat^post12 == 0 /\ ret_getbyte18^0-ret_getbyte18^post12 == 0 /\ -ret_getbyte25^post12+ret_getbyte25^0 == 0 /\ tmp___017^0-tmp___017^post12 == 0 /\ tabort4^0-tabort4^post12 == 0 /\ i45^0-i45^post12 == 0 /\ -rat26^post12+rat26^0 == 0 /\ -in_count^post12+in_count^0 == 0 /\ hsize___027^0-hsize___027^post12 == 0 /\ -block_compress^post12+block_compress^0 == 0 /\ -m130^post12+m130^0 == 0 /\ -disp9^post12+disp9^0 == 0 /\ r_off32^0-r_off32^post12 == 0 /\ -ratio^post12+ratio^0 == 0 /\ -fcode5^post12+fcode5^0 == 0 /\ -hsize^post12+hsize^0 == 0 /\ -tmp___115^post12+tmp___115^0 == 0 /\ -n40^post12+n40^0 == 0 /\ m122^0-m122^post12 == 0 /\ out_count^0-out_count^post12 == 0 /\ apsim_bound11113^0-apsim_bound11113^post12 == 0 /\ -__const_16^post12+__const_16^0 == 0 /\ __const_10000^0-__const_10000^post12 == 0 /\ -__const_8388607^post12+__const_8388607^0 == 0 /\ maxcode^0-maxcode^post12 == 0 /\ -i29^post12+i29^0 == 0 /\ __const_53^0-__const_53^post12 == 0 /\ n_bits^0-n_bits^post12 == 0 /\ -__const_429496^post12+__const_429496^0 == 0 /\ -i3^post12+i3^0 == 0 /\ count^0-count^post12 == 0 /\ -i41^post12+i41^0 == 0 /\ c37^0-c37^post12 == 0 /\ bits33^0-bits33^post12 == 0 /\ -__const_65536^post12+__const_65536^0 == 0 /\ maxmaxcode^0-maxmaxcode^post12 == 0 /\ -clear_flg^post12+clear_flg^0 == 0 /\ hshift11^0-hshift11^post12 == 0 /\ -ent8^post12+ent8^0 == 0 /\ -bytes_out^post12+bytes_out^0 == 0 /\ -__const_9^post12+__const_9^0 == 0 /\ -maxbits^post12+maxbits^0 == 0 /\ -hsize_reg10^post12+hsize_reg10^0 == 0 /\ -tmp___024^post12+tmp___024^0 == 0 /\ -hsize___019^post12+hsize___019^0 == 0 /\ -c7^post12+c7^0 == 0 /\ __const_257^0-__const_257^post12 == 0 /\ checkpoint^0-checkpoint^post12 == 0 /\ free_ent^0-free_ent^post12 == 0 /\ -incnt^post12+incnt^0 == 0 /\ -tmp___014^post12+tmp___014^0 == 0 /\ i6^0-i6^post12 == 0 /\ n44^0-n44^post12 == 0 /\ __const_50^0-__const_50^post12 == 0 /\ -i21^post12+i21^0 == 0 /\ __const_256^0-__const_256^post12 == 0 /\ -__const_2147483647^post12+__const_2147483647^0 == 0), cost: 1
	New rule:
	l13 -> l14 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality __const_8^post12 = __const_8^0
		
		propagated equality code31^post12 = code31^0
		
		propagated equality seed2^post12 = seed2^0
		
		propagated equality apsim_incnt^post12 = apsim_incnt^0
		
		propagated equality offset^post12 = offset^0
		
		propagated equality tmp12^post12 = tmp12^0
		
		propagated equality exit_stat^post12 = exit_stat^0
		
		propagated equality ret_getbyte18^post12 = ret_getbyte18^0
		
		propagated equality ret_getbyte25^post12 = ret_getbyte25^0
		
		propagated equality tmp___017^post12 = tmp___017^0
		
		propagated equality tabort4^post12 = tabort4^0
		
		propagated equality i45^post12 = i45^0
		
		propagated equality rat26^post12 = rat26^0
		
		propagated equality in_count^post12 = in_count^0
		
		propagated equality hsize___027^post12 = hsize___027^0
		
		propagated equality block_compress^post12 = block_compress^0
		
		propagated equality m130^post12 = m130^0
		
		propagated equality disp9^post12 = disp9^0
		
		propagated equality r_off32^post12 = r_off32^0
		
		propagated equality ratio^post12 = ratio^0
		
		propagated equality fcode5^post12 = fcode5^0
		
		propagated equality hsize^post12 = hsize^0
		
		propagated equality tmp___115^post12 = tmp___115^0
		
		propagated equality n40^post12 = n40^0
		
		propagated equality m122^post12 = m122^0
		
		propagated equality out_count^post12 = out_count^0
		
		propagated equality apsim_bound11113^post12 = apsim_bound11113^0
		
		propagated equality __const_16^post12 = __const_16^0
		
		propagated equality __const_10000^post12 = __const_10000^0
		
		propagated equality __const_8388607^post12 = __const_8388607^0
		
		propagated equality maxcode^post12 = maxcode^0
		
		propagated equality i29^post12 = i29^0
		
		propagated equality __const_53^post12 = __const_53^0
		
		propagated equality n_bits^post12 = n_bits^0
		
		propagated equality __const_429496^post12 = __const_429496^0
		
		propagated equality i3^post12 = i3^0
		
		propagated equality count^post12 = count^0
		
		propagated equality i41^post12 = i41^0
		
		propagated equality c37^post12 = c37^0
		
		propagated equality bits33^post12 = bits33^0
		
		propagated equality __const_65536^post12 = __const_65536^0
		
		propagated equality maxmaxcode^post12 = maxmaxcode^0
		
		propagated equality clear_flg^post12 = clear_flg^0
		
		propagated equality hshift11^post12 = hshift11^0
		
		propagated equality ent8^post12 = ent8^0
		
		propagated equality bytes_out^post12 = bytes_out^0
		
		propagated equality __const_9^post12 = __const_9^0
		
		propagated equality maxbits^post12 = maxbits^0
		
		propagated equality hsize_reg10^post12 = hsize_reg10^0
		
		propagated equality tmp___024^post12 = tmp___024^0
		
		propagated equality hsize___019^post12 = hsize___019^0
		
		propagated equality c7^post12 = c7^0
		
		propagated equality __const_257^post12 = __const_257^0
		
		propagated equality checkpoint^post12 = checkpoint^0
		
		propagated equality free_ent^post12 = free_ent^0
		
		propagated equality incnt^post12 = incnt^0
		
		propagated equality tmp___014^post12 = tmp___014^0
		
		propagated equality i6^post12 = i6^0
		
		propagated equality n44^post12 = n44^0
		
		propagated equality __const_50^post12 = __const_50^0
		
		propagated equality i21^post12 = i21^0
		
		propagated equality __const_256^post12 = __const_256^0
		
		propagated equality __const_2147483647^post12 = __const_2147483647^0
		
	Simplified Guard

	Original rule:
	l13 -> l14 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l13 -> l14 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l14 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l13 -> l14 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l15 -> l12 : __const_10000^0'=__const_10000^post13, __const_16^0'=__const_16^post13, __const_2147483647^0'=__const_2147483647^post13, __const_256^0'=__const_256^post13, __const_257^0'=__const_257^post13, __const_429496^0'=__const_429496^post13, __const_50^0'=__const_50^post13, __const_53^0'=__const_53^post13, __const_65536^0'=__const_65536^post13, __const_8388607^0'=__const_8388607^post13, __const_8^0'=__const_8^post13, __const_9^0'=__const_9^post13, apsim_bound11113^0'=apsim_bound11113^post13, apsim_incnt^0'=apsim_incnt^post13, bits33^0'=bits33^post13, block_compress^0'=block_compress^post13, bytes_out^0'=bytes_out^post13, c37^0'=c37^post13, c7^0'=c7^post13, checkpoint^0'=checkpoint^post13, clear_flg^0'=clear_flg^post13, code31^0'=code31^post13, count^0'=count^post13, disp9^0'=disp9^post13, ent8^0'=ent8^post13, exit_stat^0'=exit_stat^post13, fcode5^0'=fcode5^post13, free_ent^0'=free_ent^post13, hshift11^0'=hshift11^post13, hsize^0'=hsize^post13, hsize___019^0'=hsize___019^post13, hsize___027^0'=hsize___027^post13, hsize_reg10^0'=hsize_reg10^post13, i21^0'=i21^post13, i29^0'=i29^post13, i3^0'=i3^post13, i41^0'=i41^post13, i45^0'=i45^post13, i6^0'=i6^post13, in_count^0'=in_count^post13, incnt^0'=incnt^post13, m122^0'=m122^post13, m130^0'=m130^post13, maxbits^0'=maxbits^post13, maxcode^0'=maxcode^post13, maxmaxcode^0'=maxmaxcode^post13, n40^0'=n40^post13, n44^0'=n44^post13, n_bits^0'=n_bits^post13, offset^0'=offset^post13, out_count^0'=out_count^post13, r_off32^0'=r_off32^post13, rat26^0'=rat26^post13, ratio^0'=ratio^post13, ret_getbyte18^0'=ret_getbyte18^post13, ret_getbyte25^0'=ret_getbyte25^post13, seed2^0'=seed2^post13, tabort4^0'=tabort4^post13, tmp12^0'=tmp12^post13, tmp___014^0'=tmp___014^post13, tmp___017^0'=tmp___017^post13, tmp___024^0'=tmp___024^post13, tmp___115^0'=tmp___115^post13, (-incnt^post13+incnt^0 == 0 /\ tmp___017^0-tmp___017^post13 == 0 /\ -tmp___014^post13+tmp___014^0 == 0 /\ free_ent^0-free_ent^post13 == 0 /\ -block_compress^post13+block_compress^0 == 0 /\ -tmp12^post13+tmp12^0 == 0 /\ -__const_8388607^post13+__const_8388607^0 == 0 /\ -fcode5^post13+fcode5^0 == 0 /\ m130^0-m130^post13 == 0 /\ -i29^post13+i29^0 == 0 /\ -tmp___115^post13+tmp___115^0 == 0 /\ -i41^post13+i41^0 == 0 /\ -i45^post13+i45^0 == 0 /\ tmp___024^0-tmp___024^post13 == 0 /\ -i21^post13+i21^0 == 0 /\ ret_getbyte18^post13-__const_429496^0 == 0 /\ bytes_out^0-bytes_out^post13 == 0 /\ tmp___017^0 <= 0 /\ __const_10000^0-__const_10000^post13 == 0 /\ __const_16^0-__const_16^post13 == 0 /\ -in_count^post13+in_count^0 == 0 /\ -c7^post13+c7^0 == 0 /\ -offset^post13+offset^0 == 0 /\ r_off32^0-r_off32^post13 == 0 /\ -apsim_incnt^post13+apsim_incnt^0 == 0 /\ c37^0-c37^post13 == 0 /\ -__const_429496^post13+__const_429496^0 == 0 /\ -hsize___019^post13+hsize___019^0 == 0 /\ -clear_flg^post13+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post13 == 0 /\ checkpoint^0-checkpoint^post13 == 0 /\ __const_256^0-__const_256^post13 == 0 /\ i6^0-i6^post13 == 0 /\ tabort4^0-tabort4^post13 == 0 /\ maxmaxcode^0-maxmaxcode^post13 == 0 /\ apsim_bound11113^0-apsim_bound11113^post13 == 0 /\ -hsize^post13+hsize^0 == 0 /\ -ent8^post13+ent8^0 == 0 /\ -__const_2147483647^post13+__const_2147483647^0 == 0 /\ out_count^0-out_count^post13 == 0 /\ -disp9^post13+disp9^0 == 0 /\ -rat26^post13+rat26^0 == 0 /\ -maxbits^post13+maxbits^0 == 0 /\ -n40^post13+n40^0 == 0 /\ -seed2^post13+seed2^0 == 0 /\ m122^0-m122^post13 == 0 /\ -code31^post13+code31^0 == 0 /\ exit_stat^0-exit_stat^post13 == 0 /\ -__const_9^post13+__const_9^0 == 0 /\ bits33^0-bits33^post13 == 0 /\ i3^0-i3^post13 == 0 /\ count^0-count^post13 == 0 /\ n44^0-n44^post13 == 0 /\ __const_50^0-__const_50^post13 == 0 /\ hsize_reg10^0-hsize_reg10^post13 == 0 /\ n_bits^0-n_bits^post13 == 0 /\ -ratio^post13+ratio^0 == 0 /\ __const_257^0-__const_257^post13 == 0 /\ __const_53^0-__const_53^post13 == 0 /\ hsize___027^0-hsize___027^post13 == 0 /\ hshift11^0-hshift11^post13 == 0 /\ -__const_65536^post13+__const_65536^0 == 0 /\ maxcode^0-maxcode^post13 == 0 /\ -__const_8^post13+__const_8^0 == 0), cost: 1
	New rule:
	l15 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=__const_429496^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ tmp___017^0 <= 0), cost: 1
	
		propagated equality incnt^post13 = incnt^0
		
		propagated equality tmp___017^post13 = tmp___017^0
		
		propagated equality tmp___014^post13 = tmp___014^0
		
		propagated equality free_ent^post13 = free_ent^0
		
		propagated equality block_compress^post13 = block_compress^0
		
		propagated equality tmp12^post13 = tmp12^0
		
		propagated equality __const_8388607^post13 = __const_8388607^0
		
		propagated equality fcode5^post13 = fcode5^0
		
		propagated equality m130^post13 = m130^0
		
		propagated equality i29^post13 = i29^0
		
		propagated equality tmp___115^post13 = tmp___115^0
		
		propagated equality i41^post13 = i41^0
		
		propagated equality i45^post13 = i45^0
		
		propagated equality tmp___024^post13 = tmp___024^0
		
		propagated equality i21^post13 = i21^0
		
		propagated equality ret_getbyte18^post13 = __const_429496^0
		
		propagated equality bytes_out^post13 = bytes_out^0
		
		propagated equality __const_10000^post13 = __const_10000^0
		
		propagated equality __const_16^post13 = __const_16^0
		
		propagated equality in_count^post13 = in_count^0
		
		propagated equality c7^post13 = c7^0
		
		propagated equality offset^post13 = offset^0
		
		propagated equality r_off32^post13 = r_off32^0
		
		propagated equality apsim_incnt^post13 = apsim_incnt^0
		
		propagated equality c37^post13 = c37^0
		
		propagated equality __const_429496^post13 = __const_429496^0
		
		propagated equality hsize___019^post13 = hsize___019^0
		
		propagated equality clear_flg^post13 = clear_flg^0
		
		propagated equality ret_getbyte25^post13 = ret_getbyte25^0
		
		propagated equality checkpoint^post13 = checkpoint^0
		
		propagated equality __const_256^post13 = __const_256^0
		
		propagated equality i6^post13 = i6^0
		
		propagated equality tabort4^post13 = tabort4^0
		
		propagated equality maxmaxcode^post13 = maxmaxcode^0
		
		propagated equality apsim_bound11113^post13 = apsim_bound11113^0
		
		propagated equality hsize^post13 = hsize^0
		
		propagated equality ent8^post13 = ent8^0
		
		propagated equality __const_2147483647^post13 = __const_2147483647^0
		
		propagated equality out_count^post13 = out_count^0
		
		propagated equality disp9^post13 = disp9^0
		
		propagated equality rat26^post13 = rat26^0
		
		propagated equality maxbits^post13 = maxbits^0
		
		propagated equality n40^post13 = n40^0
		
		propagated equality seed2^post13 = seed2^0
		
		propagated equality m122^post13 = m122^0
		
		propagated equality code31^post13 = code31^0
		
		propagated equality exit_stat^post13 = exit_stat^0
		
		propagated equality __const_9^post13 = __const_9^0
		
		propagated equality bits33^post13 = bits33^0
		
		propagated equality i3^post13 = i3^0
		
		propagated equality count^post13 = count^0
		
		propagated equality n44^post13 = n44^0
		
		propagated equality __const_50^post13 = __const_50^0
		
		propagated equality hsize_reg10^post13 = hsize_reg10^0
		
		propagated equality n_bits^post13 = n_bits^0
		
		propagated equality ratio^post13 = ratio^0
		
		propagated equality __const_257^post13 = __const_257^0
		
		propagated equality __const_53^post13 = __const_53^0
		
		propagated equality hsize___027^post13 = hsize___027^0
		
		propagated equality hshift11^post13 = hshift11^0
		
		propagated equality __const_65536^post13 = __const_65536^0
		
		propagated equality maxcode^post13 = maxcode^0
		
		propagated equality __const_8^post13 = __const_8^0
		
	Simplified Guard

	Original rule:
	l15 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=__const_429496^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ tmp___017^0 <= 0), cost: 1
	New rule:
	l15 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=__const_429496^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, tmp___017^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l15 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=__const_429496^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, tmp___017^0 <= 0, cost: 1
	New rule:
	l15 -> l12 : ret_getbyte18^0'=__const_429496^0, tmp___017^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l15 -> l12 : __const_10000^0'=__const_10000^post14, __const_16^0'=__const_16^post14, __const_2147483647^0'=__const_2147483647^post14, __const_256^0'=__const_256^post14, __const_257^0'=__const_257^post14, __const_429496^0'=__const_429496^post14, __const_50^0'=__const_50^post14, __const_53^0'=__const_53^post14, __const_65536^0'=__const_65536^post14, __const_8388607^0'=__const_8388607^post14, __const_8^0'=__const_8^post14, __const_9^0'=__const_9^post14, apsim_bound11113^0'=apsim_bound11113^post14, apsim_incnt^0'=apsim_incnt^post14, bits33^0'=bits33^post14, block_compress^0'=block_compress^post14, bytes_out^0'=bytes_out^post14, c37^0'=c37^post14, c7^0'=c7^post14, checkpoint^0'=checkpoint^post14, clear_flg^0'=clear_flg^post14, code31^0'=code31^post14, count^0'=count^post14, disp9^0'=disp9^post14, ent8^0'=ent8^post14, exit_stat^0'=exit_stat^post14, fcode5^0'=fcode5^post14, free_ent^0'=free_ent^post14, hshift11^0'=hshift11^post14, hsize^0'=hsize^post14, hsize___019^0'=hsize___019^post14, hsize___027^0'=hsize___027^post14, hsize_reg10^0'=hsize_reg10^post14, i21^0'=i21^post14, i29^0'=i29^post14, i3^0'=i3^post14, i41^0'=i41^post14, i45^0'=i45^post14, i6^0'=i6^post14, in_count^0'=in_count^post14, incnt^0'=incnt^post14, m122^0'=m122^post14, m130^0'=m130^post14, maxbits^0'=maxbits^post14, maxcode^0'=maxcode^post14, maxmaxcode^0'=maxmaxcode^post14, n40^0'=n40^post14, n44^0'=n44^post14, n_bits^0'=n_bits^post14, offset^0'=offset^post14, out_count^0'=out_count^post14, r_off32^0'=r_off32^post14, rat26^0'=rat26^post14, ratio^0'=ratio^post14, ret_getbyte18^0'=ret_getbyte18^post14, ret_getbyte25^0'=ret_getbyte25^post14, seed2^0'=seed2^post14, tabort4^0'=tabort4^post14, tmp12^0'=tmp12^post14, tmp___014^0'=tmp___014^post14, tmp___017^0'=tmp___017^post14, tmp___024^0'=tmp___024^post14, tmp___115^0'=tmp___115^post14, (0 == 0 /\ 1+incnt^post14-incnt^0 == 0 /\ -n40^post14+n40^0 == 0 /\ __const_50^0-__const_50^post14 == 0 /\ n44^0-n44^post14 == 0 /\ -apsim_bound11113^post14+apsim_bound11113^0 == 0 /\ -__const_9^post14+__const_9^0 == 0 /\ __const_8^0-__const_8^post14 == 0 /\ m130^0-m130^post14 == 0 /\ bytes_out^0-bytes_out^post14 == 0 /\ -hsize___019^post14+hsize___019^0 == 0 /\ count^0-count^post14 == 0 /\ __const_53^0-__const_53^post14 == 0 /\ apsim_incnt^0-apsim_incnt^post14 == 0 /\ hshift11^0-hshift11^post14 == 0 /\ -i29^post14+i29^0 == 0 /\ -n_bits^post14+n_bits^0 == 0 /\ -__const_65536^post14+__const_65536^0 == 0 /\ tmp___017^0-tmp___017^post14 == 0 /\ ret_getbyte25^0-ret_getbyte25^post14 == 0 /\ -bits33^post14+bits33^0 == 0 /\ -__const_2147483647^post14+__const_2147483647^0 == 0 /\ hsize^0-hsize^post14 == 0 /\ -i41^post14+i41^0 == 0 /\ __const_256^0-__const_256^post14 == 0 /\ -seed2^post14+seed2^0 == 0 /\ c37^0-c37^post14 == 0 /\ -__const_10000^post14+__const_10000^0 == 0 /\ __const_16^0-__const_16^post14 == 0 /\ -ent8^post14+ent8^0 == 0 /\ -maxbits^post14+maxbits^0 == 0 /\ m122^0-m122^post14 == 0 /\ exit_stat^0-exit_stat^post14 == 0 /\ tmp12^0-tmp12^post14 == 0 /\ -in_count^post14+in_count^0 == 0 /\ hsize___027^0-hsize___027^post14 == 0 /\ -__const_8388607^post14+__const_8388607^0 == 0 /\ -tmp___115^post14+tmp___115^0 == 0 /\ -tmp___024^post14+tmp___024^0 == 0 /\ -c7^post14+c7^0 == 0 /\ 1-tmp___017^0 <= 0 /\ rat26^0-rat26^post14 == 0 /\ -clear_flg^post14+clear_flg^0 == 0 /\ fcode5^0-fcode5^post14 == 0 /\ -free_ent^post14+free_ent^0 == 0 /\ -i21^post14+i21^0 == 0 /\ -block_compress^post14+block_compress^0 == 0 /\ __const_257^0-__const_257^post14 == 0 /\ i6^0-i6^post14 == 0 /\ checkpoint^0-checkpoint^post14 == 0 /\ -ratio^post14+ratio^0 == 0 /\ i3^0-i3^post14 == 0 /\ -tmp___014^post14+tmp___014^0 == 0 /\ r_off32^0-r_off32^post14 == 0 /\ tabort4^0-tabort4^post14 == 0 /\ out_count^0-out_count^post14 == 0 /\ -__const_429496^post14+__const_429496^0 == 0 /\ maxmaxcode^0-maxmaxcode^post14 == 0 /\ -code31^post14+code31^0 == 0 /\ maxcode^0-maxcode^post14 == 0 /\ -offset^post14+offset^0 == 0 /\ -i45^post14+i45^0 == 0 /\ hsize_reg10^0-hsize_reg10^post14 == 0 /\ -disp9^post14+disp9^0 == 0), cost: 1
	New rule:
	l15 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=-1+incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^post14, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-tmp___017^0 <= 0), cost: 1
	
		propagated equality incnt^post14 = -1+incnt^0
		
		propagated equality n40^post14 = n40^0
		
		propagated equality __const_50^post14 = __const_50^0
		
		propagated equality n44^post14 = n44^0
		
		propagated equality apsim_bound11113^post14 = apsim_bound11113^0
		
		propagated equality __const_9^post14 = __const_9^0
		
		propagated equality __const_8^post14 = __const_8^0
		
		propagated equality m130^post14 = m130^0
		
		propagated equality bytes_out^post14 = bytes_out^0
		
		propagated equality hsize___019^post14 = hsize___019^0
		
		propagated equality count^post14 = count^0
		
		propagated equality __const_53^post14 = __const_53^0
		
		propagated equality apsim_incnt^post14 = apsim_incnt^0
		
		propagated equality hshift11^post14 = hshift11^0
		
		propagated equality i29^post14 = i29^0
		
		propagated equality n_bits^post14 = n_bits^0
		
		propagated equality __const_65536^post14 = __const_65536^0
		
		propagated equality tmp___017^post14 = tmp___017^0
		
		propagated equality ret_getbyte25^post14 = ret_getbyte25^0
		
		propagated equality bits33^post14 = bits33^0
		
		propagated equality __const_2147483647^post14 = __const_2147483647^0
		
		propagated equality hsize^post14 = hsize^0
		
		propagated equality i41^post14 = i41^0
		
		propagated equality __const_256^post14 = __const_256^0
		
		propagated equality seed2^post14 = seed2^0
		
		propagated equality c37^post14 = c37^0
		
		propagated equality __const_10000^post14 = __const_10000^0
		
		propagated equality __const_16^post14 = __const_16^0
		
		propagated equality ent8^post14 = ent8^0
		
		propagated equality maxbits^post14 = maxbits^0
		
		propagated equality m122^post14 = m122^0
		
		propagated equality exit_stat^post14 = exit_stat^0
		
		propagated equality tmp12^post14 = tmp12^0
		
		propagated equality in_count^post14 = in_count^0
		
		propagated equality hsize___027^post14 = hsize___027^0
		
		propagated equality __const_8388607^post14 = __const_8388607^0
		
		propagated equality tmp___115^post14 = tmp___115^0
		
		propagated equality tmp___024^post14 = tmp___024^0
		
		propagated equality c7^post14 = c7^0
		
		propagated equality rat26^post14 = rat26^0
		
		propagated equality clear_flg^post14 = clear_flg^0
		
		propagated equality fcode5^post14 = fcode5^0
		
		propagated equality free_ent^post14 = free_ent^0
		
		propagated equality i21^post14 = i21^0
		
		propagated equality block_compress^post14 = block_compress^0
		
		propagated equality __const_257^post14 = __const_257^0
		
		propagated equality i6^post14 = i6^0
		
		propagated equality checkpoint^post14 = checkpoint^0
		
		propagated equality ratio^post14 = ratio^0
		
		propagated equality i3^post14 = i3^0
		
		propagated equality tmp___014^post14 = tmp___014^0
		
		propagated equality r_off32^post14 = r_off32^0
		
		propagated equality tabort4^post14 = tabort4^0
		
		propagated equality out_count^post14 = out_count^0
		
		propagated equality __const_429496^post14 = __const_429496^0
		
		propagated equality maxmaxcode^post14 = maxmaxcode^0
		
		propagated equality code31^post14 = code31^0
		
		propagated equality maxcode^post14 = maxcode^0
		
		propagated equality offset^post14 = offset^0
		
		propagated equality i45^post14 = i45^0
		
		propagated equality hsize_reg10^post14 = hsize_reg10^0
		
		propagated equality disp9^post14 = disp9^0
		
	Simplified Guard

	Original rule:
	l15 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=-1+incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^post14, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-tmp___017^0 <= 0), cost: 1
	New rule:
	l15 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=-1+incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^post14, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-tmp___017^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l15 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=-1+incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^post14, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-tmp___017^0 <= 0, cost: 1
	New rule:
	l15 -> l12 : incnt^0'=-1+incnt^0, ret_getbyte18^0'=ret_getbyte18^post14, 1-tmp___017^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l16 -> l12 : __const_10000^0'=__const_10000^post15, __const_16^0'=__const_16^post15, __const_2147483647^0'=__const_2147483647^post15, __const_256^0'=__const_256^post15, __const_257^0'=__const_257^post15, __const_429496^0'=__const_429496^post15, __const_50^0'=__const_50^post15, __const_53^0'=__const_53^post15, __const_65536^0'=__const_65536^post15, __const_8388607^0'=__const_8388607^post15, __const_8^0'=__const_8^post15, __const_9^0'=__const_9^post15, apsim_bound11113^0'=apsim_bound11113^post15, apsim_incnt^0'=apsim_incnt^post15, bits33^0'=bits33^post15, block_compress^0'=block_compress^post15, bytes_out^0'=bytes_out^post15, c37^0'=c37^post15, c7^0'=c7^post15, checkpoint^0'=checkpoint^post15, clear_flg^0'=clear_flg^post15, code31^0'=code31^post15, count^0'=count^post15, disp9^0'=disp9^post15, ent8^0'=ent8^post15, exit_stat^0'=exit_stat^post15, fcode5^0'=fcode5^post15, free_ent^0'=free_ent^post15, hshift11^0'=hshift11^post15, hsize^0'=hsize^post15, hsize___019^0'=hsize___019^post15, hsize___027^0'=hsize___027^post15, hsize_reg10^0'=hsize_reg10^post15, i21^0'=i21^post15, i29^0'=i29^post15, i3^0'=i3^post15, i41^0'=i41^post15, i45^0'=i45^post15, i6^0'=i6^post15, in_count^0'=in_count^post15, incnt^0'=incnt^post15, m122^0'=m122^post15, m130^0'=m130^post15, maxbits^0'=maxbits^post15, maxcode^0'=maxcode^post15, maxmaxcode^0'=maxmaxcode^post15, n40^0'=n40^post15, n44^0'=n44^post15, n_bits^0'=n_bits^post15, offset^0'=offset^post15, out_count^0'=out_count^post15, r_off32^0'=r_off32^post15, rat26^0'=rat26^post15, ratio^0'=ratio^post15, ret_getbyte18^0'=ret_getbyte18^post15, ret_getbyte25^0'=ret_getbyte25^post15, seed2^0'=seed2^post15, tabort4^0'=tabort4^post15, tmp12^0'=tmp12^post15, tmp___014^0'=tmp___014^post15, tmp___017^0'=tmp___017^post15, tmp___024^0'=tmp___024^post15, tmp___115^0'=tmp___115^post15, (-i29^post15+i29^0 == 0 /\ -m122^post15+m122^0 == 0 /\ __const_53^0-__const_53^post15 == 0 /\ -i41^post15+i41^0 == 0 /\ __const_65536^0-__const_65536^post15 == 0 /\ -incnt^post15+incnt^0 == 0 /\ -i45^post15+i45^0 == 0 /\ apsim_incnt^0-apsim_incnt^post15 == 0 /\ hshift11^0-hshift11^post15 == 0 /\ tmp___115^0-tmp___115^post15 == 0 /\ __const_16^0-__const_16^post15 == 0 /\ n44^0-n44^post15 == 0 /\ -tmp___024^post15+tmp___024^0 == 0 /\ i21^0-i21^post15 == 0 /\ -in_count^post15+in_count^0 == 0 /\ code31^0-code31^post15 == 0 /\ free_ent^0-free_ent^post15 == 0 /\ -clear_flg^post15+clear_flg^0 == 0 /\ __const_8^0-__const_8^post15 == 0 /\ __const_257^0-__const_257^post15 == 0 /\ ret_getbyte18^post15-__const_429496^0 == 0 /\ -hsize_reg10^post15+hsize_reg10^0 == 0 /\ -__const_256^post15+__const_256^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post15 == 0 /\ rat26^0-rat26^post15 == 0 /\ -c7^post15+c7^0 == 0 /\ -bytes_out^post15+bytes_out^0 == 0 /\ c37^0-c37^post15 == 0 /\ -n_bits^post15+n_bits^0 == 0 /\ hsize___019^0-hsize___019^post15 == 0 /\ ent8^0-ent8^post15 == 0 /\ -r_off32^post15+r_off32^0 == 0 /\ maxmaxcode^0-maxmaxcode^post15 == 0 /\ -seed2^post15+seed2^0 == 0 /\ n40^0-n40^post15 == 0 /\ -tabort4^post15+tabort4^0 == 0 /\ -__const_429496^post15+__const_429496^0 == 0 /\ exit_stat^0-exit_stat^post15 == 0 /\ out_count^0-out_count^post15 == 0 /\ -count^post15+count^0 == 0 /\ __const_9^0-__const_9^post15 == 0 /\ -__const_50^post15+__const_50^0 == 0 /\ -fcode5^post15+fcode5^0 == 0 /\ -disp9^post15+disp9^0 == 0 /\ -maxcode^post15+maxcode^0 == 0 /\ tmp___014^0-tmp___014^post15 == 0 /\ -tmp___017^post15+tmp___017^0 == 0 /\ offset^0-offset^post15 == 0 /\ m130^0-m130^post15 == 0 /\ -i6^post15+i6^0 == 0 /\ -apsim_bound11113^post15+apsim_bound11113^0 == 0 /\ -checkpoint^post15+checkpoint^0 == 0 /\ i3^0-i3^post15 == 0 /\ -hsize^post15+hsize^0 == 0 /\ tmp12^0-tmp12^post15 == 0 /\ -__const_2147483647^post15+__const_2147483647^0 == 0 /\ -__const_10000^post15+__const_10000^0 == 0 /\ -hsize___027^post15+hsize___027^0 == 0 /\ maxbits^0-maxbits^post15 == 0 /\ bits33^0-bits33^post15 == 0 /\ -__const_8388607^post15+__const_8388607^0 == 0 /\ -block_compress^post15+block_compress^0 == 0 /\ -ratio^post15+ratio^0 == 0 /\ incnt^0 <= 0), cost: 1
	New rule:
	l16 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=__const_429496^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ incnt^0 <= 0), cost: 1
	
		propagated equality i29^post15 = i29^0
		
		propagated equality m122^post15 = m122^0
		
		propagated equality __const_53^post15 = __const_53^0
		
		propagated equality i41^post15 = i41^0
		
		propagated equality __const_65536^post15 = __const_65536^0
		
		propagated equality incnt^post15 = incnt^0
		
		propagated equality i45^post15 = i45^0
		
		propagated equality apsim_incnt^post15 = apsim_incnt^0
		
		propagated equality hshift11^post15 = hshift11^0
		
		propagated equality tmp___115^post15 = tmp___115^0
		
		propagated equality __const_16^post15 = __const_16^0
		
		propagated equality n44^post15 = n44^0
		
		propagated equality tmp___024^post15 = tmp___024^0
		
		propagated equality i21^post15 = i21^0
		
		propagated equality in_count^post15 = in_count^0
		
		propagated equality code31^post15 = code31^0
		
		propagated equality free_ent^post15 = free_ent^0
		
		propagated equality clear_flg^post15 = clear_flg^0
		
		propagated equality __const_8^post15 = __const_8^0
		
		propagated equality __const_257^post15 = __const_257^0
		
		propagated equality ret_getbyte18^post15 = __const_429496^0
		
		propagated equality hsize_reg10^post15 = hsize_reg10^0
		
		propagated equality __const_256^post15 = __const_256^0
		
		propagated equality ret_getbyte25^post15 = ret_getbyte25^0
		
		propagated equality rat26^post15 = rat26^0
		
		propagated equality c7^post15 = c7^0
		
		propagated equality bytes_out^post15 = bytes_out^0
		
		propagated equality c37^post15 = c37^0
		
		propagated equality n_bits^post15 = n_bits^0
		
		propagated equality hsize___019^post15 = hsize___019^0
		
		propagated equality ent8^post15 = ent8^0
		
		propagated equality r_off32^post15 = r_off32^0
		
		propagated equality maxmaxcode^post15 = maxmaxcode^0
		
		propagated equality seed2^post15 = seed2^0
		
		propagated equality n40^post15 = n40^0
		
		propagated equality tabort4^post15 = tabort4^0
		
		propagated equality __const_429496^post15 = __const_429496^0
		
		propagated equality exit_stat^post15 = exit_stat^0
		
		propagated equality out_count^post15 = out_count^0
		
		propagated equality count^post15 = count^0
		
		propagated equality __const_9^post15 = __const_9^0
		
		propagated equality __const_50^post15 = __const_50^0
		
		propagated equality fcode5^post15 = fcode5^0
		
		propagated equality disp9^post15 = disp9^0
		
		propagated equality maxcode^post15 = maxcode^0
		
		propagated equality tmp___014^post15 = tmp___014^0
		
		propagated equality tmp___017^post15 = tmp___017^0
		
		propagated equality offset^post15 = offset^0
		
		propagated equality m130^post15 = m130^0
		
		propagated equality i6^post15 = i6^0
		
		propagated equality apsim_bound11113^post15 = apsim_bound11113^0
		
		propagated equality checkpoint^post15 = checkpoint^0
		
		propagated equality i3^post15 = i3^0
		
		propagated equality hsize^post15 = hsize^0
		
		propagated equality tmp12^post15 = tmp12^0
		
		propagated equality __const_2147483647^post15 = __const_2147483647^0
		
		propagated equality __const_10000^post15 = __const_10000^0
		
		propagated equality hsize___027^post15 = hsize___027^0
		
		propagated equality maxbits^post15 = maxbits^0
		
		propagated equality bits33^post15 = bits33^0
		
		propagated equality __const_8388607^post15 = __const_8388607^0
		
		propagated equality block_compress^post15 = block_compress^0
		
		propagated equality ratio^post15 = ratio^0
		
	Simplified Guard

	Original rule:
	l16 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=__const_429496^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ incnt^0 <= 0), cost: 1
	New rule:
	l16 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=__const_429496^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, incnt^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l16 -> l12 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=__const_429496^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, incnt^0 <= 0, cost: 1
	New rule:
	l16 -> l12 : ret_getbyte18^0'=__const_429496^0, incnt^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l16 -> l15 : __const_10000^0'=__const_10000^post16, __const_16^0'=__const_16^post16, __const_2147483647^0'=__const_2147483647^post16, __const_256^0'=__const_256^post16, __const_257^0'=__const_257^post16, __const_429496^0'=__const_429496^post16, __const_50^0'=__const_50^post16, __const_53^0'=__const_53^post16, __const_65536^0'=__const_65536^post16, __const_8388607^0'=__const_8388607^post16, __const_8^0'=__const_8^post16, __const_9^0'=__const_9^post16, apsim_bound11113^0'=apsim_bound11113^post16, apsim_incnt^0'=apsim_incnt^post16, bits33^0'=bits33^post16, block_compress^0'=block_compress^post16, bytes_out^0'=bytes_out^post16, c37^0'=c37^post16, c7^0'=c7^post16, checkpoint^0'=checkpoint^post16, clear_flg^0'=clear_flg^post16, code31^0'=code31^post16, count^0'=count^post16, disp9^0'=disp9^post16, ent8^0'=ent8^post16, exit_stat^0'=exit_stat^post16, fcode5^0'=fcode5^post16, free_ent^0'=free_ent^post16, hshift11^0'=hshift11^post16, hsize^0'=hsize^post16, hsize___019^0'=hsize___019^post16, hsize___027^0'=hsize___027^post16, hsize_reg10^0'=hsize_reg10^post16, i21^0'=i21^post16, i29^0'=i29^post16, i3^0'=i3^post16, i41^0'=i41^post16, i45^0'=i45^post16, i6^0'=i6^post16, in_count^0'=in_count^post16, incnt^0'=incnt^post16, m122^0'=m122^post16, m130^0'=m130^post16, maxbits^0'=maxbits^post16, maxcode^0'=maxcode^post16, maxmaxcode^0'=maxmaxcode^post16, n40^0'=n40^post16, n44^0'=n44^post16, n_bits^0'=n_bits^post16, offset^0'=offset^post16, out_count^0'=out_count^post16, r_off32^0'=r_off32^post16, rat26^0'=rat26^post16, ratio^0'=ratio^post16, ret_getbyte18^0'=ret_getbyte18^post16, ret_getbyte25^0'=ret_getbyte25^post16, seed2^0'=seed2^post16, tabort4^0'=tabort4^post16, tmp12^0'=tmp12^post16, tmp___014^0'=tmp___014^post16, tmp___017^0'=tmp___017^post16, tmp___024^0'=tmp___024^post16, tmp___115^0'=tmp___115^post16, (-count^post16+count^0 == 0 /\ -hsize___027^post16+hsize___027^0 == 0 /\ __const_50^0-__const_50^post16 == 0 /\ -fcode5^post16+fcode5^0 == 0 /\ -disp9^post16+disp9^0 == 0 /\ -hsize_reg10^post16+hsize_reg10^0 == 0 /\ bits33^0-bits33^post16 == 0 /\ __const_16^0-__const_16^post16 == 0 /\ -n40^post16+n40^0 == 0 /\ tmp___115^0-tmp___115^post16 == 0 /\ code31^0-code31^post16 == 0 /\ -hsize^post16+hsize^0 == 0 /\ -exit_stat^post16+exit_stat^0 == 0 /\ n44^0-n44^post16 == 0 /\ -__const_8^post16+__const_8^0 == 0 /\ -__const_2147483647^post16+__const_2147483647^0 == 0 /\ -__const_10000^post16+__const_10000^0 == 0 /\ m130^0-m130^post16 == 0 /\ __const_53^0-__const_53^post16 == 0 /\ -tmp___014^post16+tmp___014^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post16 == 0 /\ -seed2^post16+seed2^0 == 0 /\ tabort4^0-tabort4^post16 == 0 /\ c37^0-c37^post16 == 0 /\ -i29^post16+i29^0 == 0 /\ __const_256^0-__const_256^post16 == 0 /\ c7^0-c7^post16 == 0 /\ -n_bits^post16+n_bits^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post16 == 0 /\ hshift11^0-hshift11^post16 == 0 /\ 1-apsim_incnt^0+apsim_incnt^post16 == 0 /\ -__const_65536^post16+__const_65536^0 == 0 /\ -apsim_incnt^0+tmp___017^post16 == 0 /\ -i6^post16+i6^0 == 0 /\ free_ent^0-free_ent^post16 == 0 /\ rat26^0-rat26^post16 == 0 /\ -block_compress^post16+block_compress^0 == 0 /\ -clear_flg^post16+clear_flg^0 == 0 /\ -checkpoint^post16+checkpoint^0 == 0 /\ -bytes_out^post16+bytes_out^0 == 0 /\ -ratio^post16+ratio^0 == 0 /\ -ret_getbyte18^post16+ret_getbyte18^0 == 0 /\ -maxbits^post16+maxbits^0 == 0 /\ -tmp___024^post16+tmp___024^0 == 0 /\ -maxcode^post16+maxcode^0 == 0 /\ -i3^post16+i3^0 == 0 /\ -i41^post16+i41^0 == 0 /\ i21^0-i21^post16 == 0 /\ -m122^post16+m122^0 == 0 /\ -__const_8388607^post16+__const_8388607^0 == 0 /\ tmp12^0-tmp12^post16 == 0 /\ hsize___019^0-hsize___019^post16 == 0 /\ __const_257^0-__const_257^post16 == 0 /\ -incnt^post16+incnt^0 == 0 /\ ent8^0-ent8^post16 == 0 /\ i45^0-i45^post16 == 0 /\ maxmaxcode^0-maxmaxcode^post16 == 0 /\ out_count^0-out_count^post16 == 0 /\ -__const_429496^post16+__const_429496^0 == 0 /\ -__const_9^post16+__const_9^0 == 0 /\ -in_count^post16+in_count^0 == 0 /\ offset^0-offset^post16 == 0 /\ -r_off32^post16+r_off32^0 == 0 /\ 1-incnt^0 <= 0), cost: 1
	New rule:
	l16 -> l15 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=-1+apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=apsim_incnt^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-incnt^0 <= 0), cost: 1
	
		propagated equality count^post16 = count^0
		
		propagated equality hsize___027^post16 = hsize___027^0
		
		propagated equality __const_50^post16 = __const_50^0
		
		propagated equality fcode5^post16 = fcode5^0
		
		propagated equality disp9^post16 = disp9^0
		
		propagated equality hsize_reg10^post16 = hsize_reg10^0
		
		propagated equality bits33^post16 = bits33^0
		
		propagated equality __const_16^post16 = __const_16^0
		
		propagated equality n40^post16 = n40^0
		
		propagated equality tmp___115^post16 = tmp___115^0
		
		propagated equality code31^post16 = code31^0
		
		propagated equality hsize^post16 = hsize^0
		
		propagated equality exit_stat^post16 = exit_stat^0
		
		propagated equality n44^post16 = n44^0
		
		propagated equality __const_8^post16 = __const_8^0
		
		propagated equality __const_2147483647^post16 = __const_2147483647^0
		
		propagated equality __const_10000^post16 = __const_10000^0
		
		propagated equality m130^post16 = m130^0
		
		propagated equality __const_53^post16 = __const_53^0
		
		propagated equality tmp___014^post16 = tmp___014^0
		
		propagated equality ret_getbyte25^post16 = ret_getbyte25^0
		
		propagated equality seed2^post16 = seed2^0
		
		propagated equality tabort4^post16 = tabort4^0
		
		propagated equality c37^post16 = c37^0
		
		propagated equality i29^post16 = i29^0
		
		propagated equality __const_256^post16 = __const_256^0
		
		propagated equality c7^post16 = c7^0
		
		propagated equality n_bits^post16 = n_bits^0
		
		propagated equality apsim_bound11113^post16 = apsim_bound11113^0
		
		propagated equality hshift11^post16 = hshift11^0
		
		propagated equality apsim_incnt^post16 = -1+apsim_incnt^0
		
		propagated equality __const_65536^post16 = __const_65536^0
		
		propagated equality tmp___017^post16 = apsim_incnt^0
		
		propagated equality i6^post16 = i6^0
		
		propagated equality free_ent^post16 = free_ent^0
		
		propagated equality rat26^post16 = rat26^0
		
		propagated equality block_compress^post16 = block_compress^0
		
		propagated equality clear_flg^post16 = clear_flg^0
		
		propagated equality checkpoint^post16 = checkpoint^0
		
		propagated equality bytes_out^post16 = bytes_out^0
		
		propagated equality ratio^post16 = ratio^0
		
		propagated equality ret_getbyte18^post16 = ret_getbyte18^0
		
		propagated equality maxbits^post16 = maxbits^0
		
		propagated equality tmp___024^post16 = tmp___024^0
		
		propagated equality maxcode^post16 = maxcode^0
		
		propagated equality i3^post16 = i3^0
		
		propagated equality i41^post16 = i41^0
		
		propagated equality i21^post16 = i21^0
		
		propagated equality m122^post16 = m122^0
		
		propagated equality __const_8388607^post16 = __const_8388607^0
		
		propagated equality tmp12^post16 = tmp12^0
		
		propagated equality hsize___019^post16 = hsize___019^0
		
		propagated equality __const_257^post16 = __const_257^0
		
		propagated equality incnt^post16 = incnt^0
		
		propagated equality ent8^post16 = ent8^0
		
		propagated equality i45^post16 = i45^0
		
		propagated equality maxmaxcode^post16 = maxmaxcode^0
		
		propagated equality out_count^post16 = out_count^0
		
		propagated equality __const_429496^post16 = __const_429496^0
		
		propagated equality __const_9^post16 = __const_9^0
		
		propagated equality in_count^post16 = in_count^0
		
		propagated equality offset^post16 = offset^0
		
		propagated equality r_off32^post16 = r_off32^0
		
	Simplified Guard

	Original rule:
	l16 -> l15 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=-1+apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=apsim_incnt^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-incnt^0 <= 0), cost: 1
	New rule:
	l16 -> l15 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=-1+apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=apsim_incnt^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-incnt^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l16 -> l15 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=-1+apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=apsim_incnt^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-incnt^0 <= 0, cost: 1
	New rule:
	l16 -> l15 : apsim_incnt^0'=-1+apsim_incnt^0, tmp___017^0'=apsim_incnt^0, 1-incnt^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l17 -> l16 : __const_10000^0'=__const_10000^post17, __const_16^0'=__const_16^post17, __const_2147483647^0'=__const_2147483647^post17, __const_256^0'=__const_256^post17, __const_257^0'=__const_257^post17, __const_429496^0'=__const_429496^post17, __const_50^0'=__const_50^post17, __const_53^0'=__const_53^post17, __const_65536^0'=__const_65536^post17, __const_8388607^0'=__const_8388607^post17, __const_8^0'=__const_8^post17, __const_9^0'=__const_9^post17, apsim_bound11113^0'=apsim_bound11113^post17, apsim_incnt^0'=apsim_incnt^post17, bits33^0'=bits33^post17, block_compress^0'=block_compress^post17, bytes_out^0'=bytes_out^post17, c37^0'=c37^post17, c7^0'=c7^post17, checkpoint^0'=checkpoint^post17, clear_flg^0'=clear_flg^post17, code31^0'=code31^post17, count^0'=count^post17, disp9^0'=disp9^post17, ent8^0'=ent8^post17, exit_stat^0'=exit_stat^post17, fcode5^0'=fcode5^post17, free_ent^0'=free_ent^post17, hshift11^0'=hshift11^post17, hsize^0'=hsize^post17, hsize___019^0'=hsize___019^post17, hsize___027^0'=hsize___027^post17, hsize_reg10^0'=hsize_reg10^post17, i21^0'=i21^post17, i29^0'=i29^post17, i3^0'=i3^post17, i41^0'=i41^post17, i45^0'=i45^post17, i6^0'=i6^post17, in_count^0'=in_count^post17, incnt^0'=incnt^post17, m122^0'=m122^post17, m130^0'=m130^post17, maxbits^0'=maxbits^post17, maxcode^0'=maxcode^post17, maxmaxcode^0'=maxmaxcode^post17, n40^0'=n40^post17, n44^0'=n44^post17, n_bits^0'=n_bits^post17, offset^0'=offset^post17, out_count^0'=out_count^post17, r_off32^0'=r_off32^post17, rat26^0'=rat26^post17, ratio^0'=ratio^post17, ret_getbyte18^0'=ret_getbyte18^post17, ret_getbyte25^0'=ret_getbyte25^post17, seed2^0'=seed2^post17, tabort4^0'=tabort4^post17, tmp12^0'=tmp12^post17, tmp___014^0'=tmp___014^post17, tmp___017^0'=tmp___017^post17, tmp___024^0'=tmp___024^post17, tmp___115^0'=tmp___115^post17, (__const_53^0-__const_53^post17 == 0 /\ out_count^0-out_count^post17 == 0 /\ ret_getbyte25^0-ret_getbyte25^post17 == 0 /\ apsim_incnt^0-apsim_incnt^post17 == 0 /\ c37^0-c37^post17 == 0 /\ -i6^post17+i6^0 == 0 /\ -in_count^post17+in_count^0 == 0 /\ -__const_8388607^post17+__const_8388607^0 == 0 /\ offset^0-offset^post17 == 0 /\ -i21^post17+i21^0 == 0 /\ m130^0-m130^post17 == 0 /\ ent8^0-ent8^post17 == 0 /\ -checkpoint^post17+checkpoint^0 == 0 /\ -clear_flg^post17+clear_flg^0 == 0 /\ -__const_257^0+free_ent^post17 == 0 /\ -bytes_out^post17+bytes_out^0 == 0 /\ -ratio^post17+ratio^0 == 0 /\ __const_16^0-__const_16^post17 == 0 /\ -n_bits^post17+n_bits^0 == 0 /\ code31^0-code31^post17 == 0 /\ c7^0-c7^post17 == 0 /\ __const_257^0-__const_257^post17 == 0 /\ hsize___027^0-hsize___027^post17 == 0 /\ i29^0-i29^post17 == 0 /\ -__const_9^post17+__const_9^0 == 0 /\ -m122^post17+m122^0 == 0 /\ bits33^0-bits33^post17 == 0 /\ tmp12^0-tmp12^post17 == 0 /\ -tmp___014^post17+tmp___014^0 == 0 /\ -r_off32^post17+r_off32^0 == 0 /\ -disp9^post17+disp9^0 == 0 /\ -exit_stat^post17+exit_stat^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post17 == 0 /\ tabort4^0-tabort4^post17 == 0 /\ __const_50^0-__const_50^post17 == 0 /\ -tmp___024^post17+tmp___024^0 == 0 /\ n44^0-n44^post17 == 0 /\ hsize___019^0-hsize___019^post17 == 0 /\ __const_256^0-__const_256^post17 == 0 /\ tmp___115^0-tmp___115^post17 == 0 /\ -maxbits^post17+maxbits^0 == 0 /\ -i3^post17+i3^0 == 0 /\ -n40^post17+n40^0 == 0 /\ hshift11^0-hshift11^post17 == 0 /\ -__const_8^post17+__const_8^0 == 0 /\ i45^0-i45^post17 == 0 /\ -hsize_reg10^post17+hsize_reg10^0 == 0 /\ -__const_429496^post17+__const_429496^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post17 == 0 /\ -hsize^post17+hsize^0 == 0 /\ block_compress^0-block_compress^post17 == 0 /\ -incnt^post17+incnt^0 == 0 /\ -__const_65536^post17+__const_65536^0 == 0 /\ rat26^0-rat26^post17 == 0 /\ -count^post17+count^0 == 0 /\ -__const_2147483647^post17+__const_2147483647^0 == 0 /\ -seed2^post17+seed2^0 == 0 /\ maxmaxcode^0-maxmaxcode^post17 == 0 /\ __const_10000^0-__const_10000^post17 == 0 /\ tmp___017^0-tmp___017^post17 == 0 /\ -fcode5^post17+fcode5^0 == 0 /\ -maxcode^post17+maxcode^0 == 0 /\ -i41^post17+i41^0 == 0), cost: 1
	New rule:
	l17 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_257^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality __const_53^post17 = __const_53^0
		
		propagated equality out_count^post17 = out_count^0
		
		propagated equality ret_getbyte25^post17 = ret_getbyte25^0
		
		propagated equality apsim_incnt^post17 = apsim_incnt^0
		
		propagated equality c37^post17 = c37^0
		
		propagated equality i6^post17 = i6^0
		
		propagated equality in_count^post17 = in_count^0
		
		propagated equality __const_8388607^post17 = __const_8388607^0
		
		propagated equality offset^post17 = offset^0
		
		propagated equality i21^post17 = i21^0
		
		propagated equality m130^post17 = m130^0
		
		propagated equality ent8^post17 = ent8^0
		
		propagated equality checkpoint^post17 = checkpoint^0
		
		propagated equality clear_flg^post17 = clear_flg^0
		
		propagated equality free_ent^post17 = __const_257^0
		
		propagated equality bytes_out^post17 = bytes_out^0
		
		propagated equality ratio^post17 = ratio^0
		
		propagated equality __const_16^post17 = __const_16^0
		
		propagated equality n_bits^post17 = n_bits^0
		
		propagated equality code31^post17 = code31^0
		
		propagated equality c7^post17 = c7^0
		
		propagated equality __const_257^post17 = __const_257^0
		
		propagated equality hsize___027^post17 = hsize___027^0
		
		propagated equality i29^post17 = i29^0
		
		propagated equality __const_9^post17 = __const_9^0
		
		propagated equality m122^post17 = m122^0
		
		propagated equality bits33^post17 = bits33^0
		
		propagated equality tmp12^post17 = tmp12^0
		
		propagated equality tmp___014^post17 = tmp___014^0
		
		propagated equality r_off32^post17 = r_off32^0
		
		propagated equality disp9^post17 = disp9^0
		
		propagated equality exit_stat^post17 = exit_stat^0
		
		propagated equality ret_getbyte18^post17 = ret_getbyte18^0
		
		propagated equality tabort4^post17 = tabort4^0
		
		propagated equality __const_50^post17 = __const_50^0
		
		propagated equality tmp___024^post17 = tmp___024^0
		
		propagated equality n44^post17 = n44^0
		
		propagated equality hsize___019^post17 = hsize___019^0
		
		propagated equality __const_256^post17 = __const_256^0
		
		propagated equality tmp___115^post17 = tmp___115^0
		
		propagated equality maxbits^post17 = maxbits^0
		
		propagated equality i3^post17 = i3^0
		
		propagated equality n40^post17 = n40^0
		
		propagated equality hshift11^post17 = hshift11^0
		
		propagated equality __const_8^post17 = __const_8^0
		
		propagated equality i45^post17 = i45^0
		
		propagated equality hsize_reg10^post17 = hsize_reg10^0
		
		propagated equality __const_429496^post17 = __const_429496^0
		
		propagated equality apsim_bound11113^post17 = apsim_bound11113^0
		
		propagated equality hsize^post17 = hsize^0
		
		propagated equality block_compress^post17 = block_compress^0
		
		propagated equality incnt^post17 = incnt^0
		
		propagated equality __const_65536^post17 = __const_65536^0
		
		propagated equality rat26^post17 = rat26^0
		
		propagated equality count^post17 = count^0
		
		propagated equality __const_2147483647^post17 = __const_2147483647^0
		
		propagated equality seed2^post17 = seed2^0
		
		propagated equality maxmaxcode^post17 = maxmaxcode^0
		
		propagated equality __const_10000^post17 = __const_10000^0
		
		propagated equality tmp___017^post17 = tmp___017^0
		
		propagated equality fcode5^post17 = fcode5^0
		
		propagated equality maxcode^post17 = maxcode^0
		
		propagated equality i41^post17 = i41^0
		
	Simplified Guard

	Original rule:
	l17 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_257^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l17 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_257^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l17 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_257^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l17 -> l16 : free_ent^0'=__const_257^0, T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l18 -> l16 : __const_10000^0'=__const_10000^post18, __const_16^0'=__const_16^post18, __const_2147483647^0'=__const_2147483647^post18, __const_256^0'=__const_256^post18, __const_257^0'=__const_257^post18, __const_429496^0'=__const_429496^post18, __const_50^0'=__const_50^post18, __const_53^0'=__const_53^post18, __const_65536^0'=__const_65536^post18, __const_8388607^0'=__const_8388607^post18, __const_8^0'=__const_8^post18, __const_9^0'=__const_9^post18, apsim_bound11113^0'=apsim_bound11113^post18, apsim_incnt^0'=apsim_incnt^post18, bits33^0'=bits33^post18, block_compress^0'=block_compress^post18, bytes_out^0'=bytes_out^post18, c37^0'=c37^post18, c7^0'=c7^post18, checkpoint^0'=checkpoint^post18, clear_flg^0'=clear_flg^post18, code31^0'=code31^post18, count^0'=count^post18, disp9^0'=disp9^post18, ent8^0'=ent8^post18, exit_stat^0'=exit_stat^post18, fcode5^0'=fcode5^post18, free_ent^0'=free_ent^post18, hshift11^0'=hshift11^post18, hsize^0'=hsize^post18, hsize___019^0'=hsize___019^post18, hsize___027^0'=hsize___027^post18, hsize_reg10^0'=hsize_reg10^post18, i21^0'=i21^post18, i29^0'=i29^post18, i3^0'=i3^post18, i41^0'=i41^post18, i45^0'=i45^post18, i6^0'=i6^post18, in_count^0'=in_count^post18, incnt^0'=incnt^post18, m122^0'=m122^post18, m130^0'=m130^post18, maxbits^0'=maxbits^post18, maxcode^0'=maxcode^post18, maxmaxcode^0'=maxmaxcode^post18, n40^0'=n40^post18, n44^0'=n44^post18, n_bits^0'=n_bits^post18, offset^0'=offset^post18, out_count^0'=out_count^post18, r_off32^0'=r_off32^post18, rat26^0'=rat26^post18, ratio^0'=ratio^post18, ret_getbyte18^0'=ret_getbyte18^post18, ret_getbyte25^0'=ret_getbyte25^post18, seed2^0'=seed2^post18, tabort4^0'=tabort4^post18, tmp12^0'=tmp12^post18, tmp___014^0'=tmp___014^post18, tmp___017^0'=tmp___017^post18, tmp___024^0'=tmp___024^post18, tmp___115^0'=tmp___115^post18, (maxcode^0-maxcode^post18 == 0 /\ ent8^0-ent8^post18 == 0 /\ -__const_65536^post18+__const_65536^0 == 0 /\ c7^0-c7^post18 == 0 /\ -__const_429496^post18+__const_429496^0 == 0 /\ -i3^post18+i3^0 == 0 /\ tabort4^0-tabort4^post18 == 0 /\ -i41^post18+i41^0 == 0 /\ __const_257^0-__const_257^post18 == 0 /\ r_off32^0-r_off32^post18 == 0 /\ exit_stat^0-exit_stat^post18 == 0 /\ out_count^0-out_count^post18 == 0 /\ apsim_incnt^0-apsim_incnt^post18 == 0 /\ i29^0-i29^post18 == 0 /\ __const_256^0-__const_256^post18 == 0 /\ -apsim_bound11113^post18+apsim_bound11113^0 == 0 /\ -__const_9^post18+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post18 == 0 /\ -__const_8388607^post18+__const_8388607^0 == 0 /\ -bytes_out^post18+bytes_out^0 == 0 /\ m130^0-m130^post18 == 0 /\ -tmp___115^post18+tmp___115^0 == 0 /\ -n40^post18+n40^0 == 0 /\ -fcode5^post18+fcode5^0 == 0 /\ __const_53^0-__const_53^post18 == 0 /\ -hsize_reg10^post18+hsize_reg10^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post18 == 0 /\ -clear_flg^post18+clear_flg^0 == 0 /\ -i21^post18+i21^0 == 0 /\ -incnt^post18+incnt^0 == 0 /\ tmp12^0-tmp12^post18 == 0 /\ -bits33^post18+bits33^0 == 0 /\ -__const_2147483647^post18+__const_2147483647^0 == 0 /\ -hsize^post18+hsize^0 == 0 /\ hsize___027^0-hsize___027^post18 == 0 /\ -tmp___014^post18+tmp___014^0 == 0 /\ -offset^post18+offset^0 == 0 /\ -ret_getbyte25^post18+ret_getbyte25^0 == 0 /\ i45^0-i45^post18 == 0 /\ -seed2^post18+seed2^0 == 0 /\ -n_bits^post18+n_bits^0 == 0 /\ __const_8^0-__const_8^post18 == 0 /\ -count^post18+count^0 == 0 /\ -block_compress^0 <= 0 /\ n44^0-n44^post18 == 0 /\ -disp9^post18+disp9^0 == 0 /\ __const_50^0-__const_50^post18 == 0 /\ -in_count^post18+in_count^0 == 0 /\ code31^0-code31^post18 == 0 /\ -ratio^post18+ratio^0 == 0 /\ -tmp___024^post18+tmp___024^0 == 0 /\ __const_10000^0-__const_10000^post18 == 0 /\ -maxbits^post18+maxbits^0 == 0 /\ -i6^post18+i6^0 == 0 /\ hshift11^0-hshift11^post18 == 0 /\ tmp___017^0-tmp___017^post18 == 0 /\ -checkpoint^post18+checkpoint^0 == 0 /\ block_compress^0 <= 0 /\ m122^0-m122^post18 == 0 /\ c37^0-c37^post18 == 0 /\ -hsize___019^post18+hsize___019^0 == 0 /\ rat26^0-rat26^post18 == 0 /\ -__const_256^0+free_ent^post18 == 0 /\ -__const_16^post18+__const_16^0 == 0 /\ -block_compress^post18+block_compress^0 == 0), cost: 1
	New rule:
	l18 -> l16 : __const_10000^0'=__const_10000^post18, __const_16^0'=__const_16^post18, __const_2147483647^0'=__const_2147483647^post18, __const_256^0'=__const_256^post18, __const_257^0'=__const_257^post18, __const_429496^0'=__const_429496^post18, __const_50^0'=__const_50^post18, __const_53^0'=__const_53^post18, __const_65536^0'=__const_65536^post18, __const_8388607^0'=__const_8388607^post18, __const_8^0'=__const_8^post18, __const_9^0'=__const_9^post18, apsim_bound11113^0'=apsim_bound11113^post18, apsim_incnt^0'=apsim_incnt^post18, bits33^0'=bits33^post18, block_compress^0'=block_compress^post18, bytes_out^0'=bytes_out^post18, c37^0'=c37^post18, c7^0'=c7^post18, checkpoint^0'=checkpoint^post18, clear_flg^0'=clear_flg^post18, code31^0'=code31^post18, count^0'=count^post18, disp9^0'=disp9^post18, ent8^0'=ent8^post18, exit_stat^0'=exit_stat^post18, fcode5^0'=fcode5^post18, free_ent^0'=free_ent^post18, hshift11^0'=hshift11^post18, hsize^0'=hsize^post18, hsize___019^0'=hsize___019^post18, hsize___027^0'=hsize___027^post18, hsize_reg10^0'=hsize_reg10^post18, i21^0'=i21^post18, i29^0'=i29^post18, i3^0'=i3^post18, i41^0'=i41^post18, i45^0'=i45^post18, i6^0'=i6^post18, in_count^0'=in_count^post18, incnt^0'=incnt^post18, m122^0'=m122^post18, m130^0'=m130^post18, maxbits^0'=maxbits^post18, maxcode^0'=maxcode^post18, maxmaxcode^0'=maxmaxcode^post18, n40^0'=n40^post18, n44^0'=n44^post18, n_bits^0'=n_bits^post18, offset^0'=offset^post18, out_count^0'=out_count^post18, r_off32^0'=r_off32^post18, rat26^0'=rat26^post18, ratio^0'=ratio^post18, ret_getbyte18^0'=ret_getbyte18^post18, ret_getbyte25^0'=ret_getbyte25^post18, seed2^0'=seed2^post18, tabort4^0'=tabort4^post18, tmp12^0'=tmp12^post18, tmp___014^0'=tmp___014^post18, tmp___017^0'=tmp___017^post18, tmp___024^0'=tmp___024^post18, tmp___115^0'=tmp___115^post18, (maxcode^0-maxcode^post18 == 0 /\ ent8^0-ent8^post18 == 0 /\ -__const_65536^post18+__const_65536^0 == 0 /\ c7^0-c7^post18 == 0 /\ -__const_429496^post18+__const_429496^0 == 0 /\ -i3^post18+i3^0 == 0 /\ tabort4^0-tabort4^post18 == 0 /\ -i41^post18+i41^0 == 0 /\ __const_257^0-__const_257^post18 == 0 /\ r_off32^0-r_off32^post18 == 0 /\ exit_stat^0-exit_stat^post18 == 0 /\ out_count^0-out_count^post18 == 0 /\ apsim_incnt^0-apsim_incnt^post18 == 0 /\ i29^0-i29^post18 == 0 /\ __const_256^0-__const_256^post18 == 0 /\ -apsim_bound11113^post18+apsim_bound11113^0 == 0 /\ -__const_9^post18+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post18 == 0 /\ -__const_8388607^post18+__const_8388607^0 == 0 /\ -bytes_out^post18+bytes_out^0 == 0 /\ m130^0-m130^post18 == 0 /\ -tmp___115^post18+tmp___115^0 == 0 /\ -n40^post18+n40^0 == 0 /\ -fcode5^post18+fcode5^0 == 0 /\ __const_53^0-__const_53^post18 == 0 /\ -hsize_reg10^post18+hsize_reg10^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post18 == 0 /\ -clear_flg^post18+clear_flg^0 == 0 /\ -i21^post18+i21^0 == 0 /\ -incnt^post18+incnt^0 == 0 /\ tmp12^0-tmp12^post18 == 0 /\ -bits33^post18+bits33^0 == 0 /\ -__const_2147483647^post18+__const_2147483647^0 == 0 /\ -hsize^post18+hsize^0 == 0 /\ hsize___027^0-hsize___027^post18 == 0 /\ -tmp___014^post18+tmp___014^0 == 0 /\ -offset^post18+offset^0 == 0 /\ -ret_getbyte25^post18+ret_getbyte25^0 == 0 /\ i45^0-i45^post18 == 0 /\ -seed2^post18+seed2^0 == 0 /\ -n_bits^post18+n_bits^0 == 0 /\ __const_8^0-__const_8^post18 == 0 /\ -count^post18+count^0 == 0 /\ -block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ n44^0-n44^post18 == 0 /\ -disp9^post18+disp9^0 == 0 /\ __const_50^0-__const_50^post18 == 0 /\ -in_count^post18+in_count^0 == 0 /\ code31^0-code31^post18 == 0 /\ -ratio^post18+ratio^0 == 0 /\ -tmp___024^post18+tmp___024^0 == 0 /\ __const_10000^0-__const_10000^post18 == 0 /\ -maxbits^post18+maxbits^0 == 0 /\ -i6^post18+i6^0 == 0 /\ hshift11^0-hshift11^post18 == 0 /\ tmp___017^0-tmp___017^post18 == 0 /\ -checkpoint^post18+checkpoint^0 == 0 /\ block_compress^0 <= 0 /\ m122^0-m122^post18 == 0 /\ c37^0-c37^post18 == 0 /\ -hsize___019^post18+hsize___019^0 == 0 /\ rat26^0-rat26^post18 == 0 /\ -__const_256^0+free_ent^post18 == 0 /\ -__const_16^post18+__const_16^0 == 0 /\ -block_compress^post18+block_compress^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l18 -> l16 : __const_10000^0'=__const_10000^post18, __const_16^0'=__const_16^post18, __const_2147483647^0'=__const_2147483647^post18, __const_256^0'=__const_256^post18, __const_257^0'=__const_257^post18, __const_429496^0'=__const_429496^post18, __const_50^0'=__const_50^post18, __const_53^0'=__const_53^post18, __const_65536^0'=__const_65536^post18, __const_8388607^0'=__const_8388607^post18, __const_8^0'=__const_8^post18, __const_9^0'=__const_9^post18, apsim_bound11113^0'=apsim_bound11113^post18, apsim_incnt^0'=apsim_incnt^post18, bits33^0'=bits33^post18, block_compress^0'=block_compress^post18, bytes_out^0'=bytes_out^post18, c37^0'=c37^post18, c7^0'=c7^post18, checkpoint^0'=checkpoint^post18, clear_flg^0'=clear_flg^post18, code31^0'=code31^post18, count^0'=count^post18, disp9^0'=disp9^post18, ent8^0'=ent8^post18, exit_stat^0'=exit_stat^post18, fcode5^0'=fcode5^post18, free_ent^0'=free_ent^post18, hshift11^0'=hshift11^post18, hsize^0'=hsize^post18, hsize___019^0'=hsize___019^post18, hsize___027^0'=hsize___027^post18, hsize_reg10^0'=hsize_reg10^post18, i21^0'=i21^post18, i29^0'=i29^post18, i3^0'=i3^post18, i41^0'=i41^post18, i45^0'=i45^post18, i6^0'=i6^post18, in_count^0'=in_count^post18, incnt^0'=incnt^post18, m122^0'=m122^post18, m130^0'=m130^post18, maxbits^0'=maxbits^post18, maxcode^0'=maxcode^post18, maxmaxcode^0'=maxmaxcode^post18, n40^0'=n40^post18, n44^0'=n44^post18, n_bits^0'=n_bits^post18, offset^0'=offset^post18, out_count^0'=out_count^post18, r_off32^0'=r_off32^post18, rat26^0'=rat26^post18, ratio^0'=ratio^post18, ret_getbyte18^0'=ret_getbyte18^post18, ret_getbyte25^0'=ret_getbyte25^post18, seed2^0'=seed2^post18, tabort4^0'=tabort4^post18, tmp12^0'=tmp12^post18, tmp___014^0'=tmp___014^post18, tmp___017^0'=tmp___017^post18, tmp___024^0'=tmp___024^post18, tmp___115^0'=tmp___115^post18, (maxcode^0-maxcode^post18 == 0 /\ ent8^0-ent8^post18 == 0 /\ -__const_65536^post18+__const_65536^0 == 0 /\ c7^0-c7^post18 == 0 /\ -__const_429496^post18+__const_429496^0 == 0 /\ -i3^post18+i3^0 == 0 /\ tabort4^0-tabort4^post18 == 0 /\ -i41^post18+i41^0 == 0 /\ __const_257^0-__const_257^post18 == 0 /\ r_off32^0-r_off32^post18 == 0 /\ exit_stat^0-exit_stat^post18 == 0 /\ out_count^0-out_count^post18 == 0 /\ apsim_incnt^0-apsim_incnt^post18 == 0 /\ i29^0-i29^post18 == 0 /\ __const_256^0-__const_256^post18 == 0 /\ -apsim_bound11113^post18+apsim_bound11113^0 == 0 /\ -__const_9^post18+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post18 == 0 /\ -__const_8388607^post18+__const_8388607^0 == 0 /\ -bytes_out^post18+bytes_out^0 == 0 /\ m130^0-m130^post18 == 0 /\ -tmp___115^post18+tmp___115^0 == 0 /\ -n40^post18+n40^0 == 0 /\ -fcode5^post18+fcode5^0 == 0 /\ __const_53^0-__const_53^post18 == 0 /\ -hsize_reg10^post18+hsize_reg10^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post18 == 0 /\ -clear_flg^post18+clear_flg^0 == 0 /\ -i21^post18+i21^0 == 0 /\ -incnt^post18+incnt^0 == 0 /\ tmp12^0-tmp12^post18 == 0 /\ -bits33^post18+bits33^0 == 0 /\ -__const_2147483647^post18+__const_2147483647^0 == 0 /\ -hsize^post18+hsize^0 == 0 /\ hsize___027^0-hsize___027^post18 == 0 /\ -tmp___014^post18+tmp___014^0 == 0 /\ -offset^post18+offset^0 == 0 /\ -ret_getbyte25^post18+ret_getbyte25^0 == 0 /\ i45^0-i45^post18 == 0 /\ -seed2^post18+seed2^0 == 0 /\ -n_bits^post18+n_bits^0 == 0 /\ __const_8^0-__const_8^post18 == 0 /\ -count^post18+count^0 == 0 /\ -block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ n44^0-n44^post18 == 0 /\ -disp9^post18+disp9^0 == 0 /\ __const_50^0-__const_50^post18 == 0 /\ -in_count^post18+in_count^0 == 0 /\ code31^0-code31^post18 == 0 /\ -ratio^post18+ratio^0 == 0 /\ -tmp___024^post18+tmp___024^0 == 0 /\ __const_10000^0-__const_10000^post18 == 0 /\ -maxbits^post18+maxbits^0 == 0 /\ -i6^post18+i6^0 == 0 /\ hshift11^0-hshift11^post18 == 0 /\ tmp___017^0-tmp___017^post18 == 0 /\ -checkpoint^post18+checkpoint^0 == 0 /\ block_compress^0 <= 0 /\ m122^0-m122^post18 == 0 /\ c37^0-c37^post18 == 0 /\ -hsize___019^post18+hsize___019^0 == 0 /\ rat26^0-rat26^post18 == 0 /\ -__const_256^0+free_ent^post18 == 0 /\ -__const_16^post18+__const_16^0 == 0 /\ -block_compress^post18+block_compress^0 == 0), cost: 1
	New rule:
	l18 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_256^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	
		propagated equality maxcode^post18 = maxcode^0
		
		propagated equality ent8^post18 = ent8^0
		
		propagated equality __const_65536^post18 = __const_65536^0
		
		propagated equality c7^post18 = c7^0
		
		propagated equality __const_429496^post18 = __const_429496^0
		
		propagated equality i3^post18 = i3^0
		
		propagated equality tabort4^post18 = tabort4^0
		
		propagated equality i41^post18 = i41^0
		
		propagated equality __const_257^post18 = __const_257^0
		
		propagated equality r_off32^post18 = r_off32^0
		
		propagated equality exit_stat^post18 = exit_stat^0
		
		propagated equality out_count^post18 = out_count^0
		
		propagated equality apsim_incnt^post18 = apsim_incnt^0
		
		propagated equality i29^post18 = i29^0
		
		propagated equality __const_256^post18 = __const_256^0
		
		propagated equality apsim_bound11113^post18 = apsim_bound11113^0
		
		propagated equality __const_9^post18 = __const_9^0
		
		propagated equality maxmaxcode^post18 = maxmaxcode^0
		
		propagated equality __const_8388607^post18 = __const_8388607^0
		
		propagated equality bytes_out^post18 = bytes_out^0
		
		propagated equality m130^post18 = m130^0
		
		propagated equality tmp___115^post18 = tmp___115^0
		
		propagated equality n40^post18 = n40^0
		
		propagated equality fcode5^post18 = fcode5^0
		
		propagated equality __const_53^post18 = __const_53^0
		
		propagated equality hsize_reg10^post18 = hsize_reg10^0
		
		propagated equality ret_getbyte18^post18 = ret_getbyte18^0
		
		propagated equality clear_flg^post18 = clear_flg^0
		
		propagated equality i21^post18 = i21^0
		
		propagated equality incnt^post18 = incnt^0
		
		propagated equality tmp12^post18 = tmp12^0
		
		propagated equality bits33^post18 = bits33^0
		
		propagated equality __const_2147483647^post18 = __const_2147483647^0
		
		propagated equality hsize^post18 = hsize^0
		
		propagated equality hsize___027^post18 = hsize___027^0
		
		propagated equality tmp___014^post18 = tmp___014^0
		
		propagated equality offset^post18 = offset^0
		
		propagated equality ret_getbyte25^post18 = ret_getbyte25^0
		
		propagated equality i45^post18 = i45^0
		
		propagated equality seed2^post18 = seed2^0
		
		propagated equality n_bits^post18 = n_bits^0
		
		propagated equality __const_8^post18 = __const_8^0
		
		propagated equality count^post18 = count^0
		
		propagated equality n44^post18 = n44^0
		
		propagated equality disp9^post18 = disp9^0
		
		propagated equality __const_50^post18 = __const_50^0
		
		propagated equality in_count^post18 = in_count^0
		
		propagated equality code31^post18 = code31^0
		
		propagated equality ratio^post18 = ratio^0
		
		propagated equality tmp___024^post18 = tmp___024^0
		
		propagated equality __const_10000^post18 = __const_10000^0
		
		propagated equality maxbits^post18 = maxbits^0
		
		propagated equality i6^post18 = i6^0
		
		propagated equality hshift11^post18 = hshift11^0
		
		propagated equality tmp___017^post18 = tmp___017^0
		
		propagated equality checkpoint^post18 = checkpoint^0
		
		propagated equality m122^post18 = m122^0
		
		propagated equality c37^post18 = c37^0
		
		propagated equality hsize___019^post18 = hsize___019^0
		
		propagated equality rat26^post18 = rat26^0
		
		propagated equality free_ent^post18 = __const_256^0
		
		propagated equality __const_16^post18 = __const_16^0
		
		propagated equality block_compress^post18 = block_compress^0
		
	Simplified Guard

	Original rule:
	l18 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_256^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	New rule:
	l18 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_256^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l18 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_256^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	New rule:
	l18 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_256^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l18 -> l16 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_256^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	New rule:
	l18 -> l16 : free_ent^0'=__const_256^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l18 -> l17 : __const_10000^0'=__const_10000^post19, __const_16^0'=__const_16^post19, __const_2147483647^0'=__const_2147483647^post19, __const_256^0'=__const_256^post19, __const_257^0'=__const_257^post19, __const_429496^0'=__const_429496^post19, __const_50^0'=__const_50^post19, __const_53^0'=__const_53^post19, __const_65536^0'=__const_65536^post19, __const_8388607^0'=__const_8388607^post19, __const_8^0'=__const_8^post19, __const_9^0'=__const_9^post19, apsim_bound11113^0'=apsim_bound11113^post19, apsim_incnt^0'=apsim_incnt^post19, bits33^0'=bits33^post19, block_compress^0'=block_compress^post19, bytes_out^0'=bytes_out^post19, c37^0'=c37^post19, c7^0'=c7^post19, checkpoint^0'=checkpoint^post19, clear_flg^0'=clear_flg^post19, code31^0'=code31^post19, count^0'=count^post19, disp9^0'=disp9^post19, ent8^0'=ent8^post19, exit_stat^0'=exit_stat^post19, fcode5^0'=fcode5^post19, free_ent^0'=free_ent^post19, hshift11^0'=hshift11^post19, hsize^0'=hsize^post19, hsize___019^0'=hsize___019^post19, hsize___027^0'=hsize___027^post19, hsize_reg10^0'=hsize_reg10^post19, i21^0'=i21^post19, i29^0'=i29^post19, i3^0'=i3^post19, i41^0'=i41^post19, i45^0'=i45^post19, i6^0'=i6^post19, in_count^0'=in_count^post19, incnt^0'=incnt^post19, m122^0'=m122^post19, m130^0'=m130^post19, maxbits^0'=maxbits^post19, maxcode^0'=maxcode^post19, maxmaxcode^0'=maxmaxcode^post19, n40^0'=n40^post19, n44^0'=n44^post19, n_bits^0'=n_bits^post19, offset^0'=offset^post19, out_count^0'=out_count^post19, r_off32^0'=r_off32^post19, rat26^0'=rat26^post19, ratio^0'=ratio^post19, ret_getbyte18^0'=ret_getbyte18^post19, ret_getbyte25^0'=ret_getbyte25^post19, seed2^0'=seed2^post19, tabort4^0'=tabort4^post19, tmp12^0'=tmp12^post19, tmp___014^0'=tmp___014^post19, tmp___017^0'=tmp___017^post19, tmp___024^0'=tmp___024^post19, tmp___115^0'=tmp___115^post19, (-n_bits^post19+n_bits^0 == 0 /\ m130^0-m130^post19 == 0 /\ -r_off32^post19+r_off32^0 == 0 /\ hsize___019^0-hsize___019^post19 == 0 /\ offset^0-offset^post19 == 0 /\ code31^0-code31^post19 == 0 /\ -tmp___014^post19+tmp___014^0 == 0 /\ -__const_257^post19+__const_257^0 == 0 /\ -seed2^post19+seed2^0 == 0 /\ -fcode5^post19+fcode5^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post19 == 0 /\ -__const_16^post19+__const_16^0 == 0 /\ -block_compress^post19+block_compress^0 == 0 /\ -__const_2147483647^post19+__const_2147483647^0 == 0 /\ -exit_stat^post19+exit_stat^0 == 0 /\ -disp9^post19+disp9^0 == 0 /\ -count^post19+count^0 == 0 /\ -tmp___024^post19+tmp___024^0 == 0 /\ n44^0-n44^post19 == 0 /\ c37^0-c37^post19 == 0 /\ -tmp___115^post19+tmp___115^0 == 0 /\ -i6^post19+i6^0 == 0 /\ -maxbits^post19+maxbits^0 == 0 /\ c7^0-c7^post19 == 0 /\ -checkpoint^post19+checkpoint^0 == 0 /\ tabort4^0-tabort4^post19 == 0 /\ hsize___027^0-hsize___027^post19 == 0 /\ -__const_65536^post19+__const_65536^0 == 0 /\ i29^0-i29^post19 == 0 /\ -ratio^post19+ratio^0 == 0 /\ apsim_incnt^0-apsim_incnt^post19 == 0 /\ -m122^post19+m122^0 == 0 /\ __const_50^0-__const_50^post19 == 0 /\ -i3^post19+i3^0 == 0 /\ -i41^post19+i41^0 == 0 /\ -incnt^post19+incnt^0 == 0 /\ n40^0-n40^post19 == 0 /\ hshift11^0-hshift11^post19 == 0 /\ __const_10000^0-__const_10000^post19 == 0 /\ tmp___017^0-tmp___017^post19 == 0 /\ -apsim_bound11113^post19+apsim_bound11113^0 == 0 /\ -__const_8388607^post19+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post19 == 0 /\ tmp12^0-tmp12^post19 == 0 /\ free_ent^0-free_ent^post19 == 0 /\ rat26^0-rat26^post19 == 0 /\ 1-block_compress^0 <= 0 /\ __const_8^0-__const_8^post19 == 0 /\ -ret_getbyte18^post19+ret_getbyte18^0 == 0 /\ -in_count^post19+in_count^0 == 0 /\ __const_256^0-__const_256^post19 == 0 /\ i45^0-i45^post19 == 0 /\ ent8^0-ent8^post19 == 0 /\ -maxcode^post19+maxcode^0 == 0 /\ -bits33^post19+bits33^0 == 0 /\ -clear_flg^post19+clear_flg^0 == 0 /\ -hsize_reg10^post19+hsize_reg10^0 == 0 /\ -__const_9^post19+__const_9^0 == 0 /\ out_count^0-out_count^post19 == 0 /\ -__const_429496^post19+__const_429496^0 == 0 /\ -i21^post19+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post19 == 0 /\ -bytes_out^post19+bytes_out^0 == 0 /\ -hsize^post19+hsize^0 == 0), cost: 1
	New rule:
	l18 -> l17 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-block_compress^0 <= 0), cost: 1
	
		propagated equality n_bits^post19 = n_bits^0
		
		propagated equality m130^post19 = m130^0
		
		propagated equality r_off32^post19 = r_off32^0
		
		propagated equality hsize___019^post19 = hsize___019^0
		
		propagated equality offset^post19 = offset^0
		
		propagated equality code31^post19 = code31^0
		
		propagated equality tmp___014^post19 = tmp___014^0
		
		propagated equality __const_257^post19 = __const_257^0
		
		propagated equality seed2^post19 = seed2^0
		
		propagated equality fcode5^post19 = fcode5^0
		
		propagated equality ret_getbyte25^post19 = ret_getbyte25^0
		
		propagated equality __const_16^post19 = __const_16^0
		
		propagated equality block_compress^post19 = block_compress^0
		
		propagated equality __const_2147483647^post19 = __const_2147483647^0
		
		propagated equality exit_stat^post19 = exit_stat^0
		
		propagated equality disp9^post19 = disp9^0
		
		propagated equality count^post19 = count^0
		
		propagated equality tmp___024^post19 = tmp___024^0
		
		propagated equality n44^post19 = n44^0
		
		propagated equality c37^post19 = c37^0
		
		propagated equality tmp___115^post19 = tmp___115^0
		
		propagated equality i6^post19 = i6^0
		
		propagated equality maxbits^post19 = maxbits^0
		
		propagated equality c7^post19 = c7^0
		
		propagated equality checkpoint^post19 = checkpoint^0
		
		propagated equality tabort4^post19 = tabort4^0
		
		propagated equality hsize___027^post19 = hsize___027^0
		
		propagated equality __const_65536^post19 = __const_65536^0
		
		propagated equality i29^post19 = i29^0
		
		propagated equality ratio^post19 = ratio^0
		
		propagated equality apsim_incnt^post19 = apsim_incnt^0
		
		propagated equality m122^post19 = m122^0
		
		propagated equality __const_50^post19 = __const_50^0
		
		propagated equality i3^post19 = i3^0
		
		propagated equality i41^post19 = i41^0
		
		propagated equality incnt^post19 = incnt^0
		
		propagated equality n40^post19 = n40^0
		
		propagated equality hshift11^post19 = hshift11^0
		
		propagated equality __const_10000^post19 = __const_10000^0
		
		propagated equality tmp___017^post19 = tmp___017^0
		
		propagated equality apsim_bound11113^post19 = apsim_bound11113^0
		
		propagated equality __const_8388607^post19 = __const_8388607^0
		
		propagated equality __const_53^post19 = __const_53^0
		
		propagated equality tmp12^post19 = tmp12^0
		
		propagated equality free_ent^post19 = free_ent^0
		
		propagated equality rat26^post19 = rat26^0
		
		propagated equality __const_8^post19 = __const_8^0
		
		propagated equality ret_getbyte18^post19 = ret_getbyte18^0
		
		propagated equality in_count^post19 = in_count^0
		
		propagated equality __const_256^post19 = __const_256^0
		
		propagated equality i45^post19 = i45^0
		
		propagated equality ent8^post19 = ent8^0
		
		propagated equality maxcode^post19 = maxcode^0
		
		propagated equality bits33^post19 = bits33^0
		
		propagated equality clear_flg^post19 = clear_flg^0
		
		propagated equality hsize_reg10^post19 = hsize_reg10^0
		
		propagated equality __const_9^post19 = __const_9^0
		
		propagated equality out_count^post19 = out_count^0
		
		propagated equality __const_429496^post19 = __const_429496^0
		
		propagated equality i21^post19 = i21^0
		
		propagated equality maxmaxcode^post19 = maxmaxcode^0
		
		propagated equality bytes_out^post19 = bytes_out^0
		
		propagated equality hsize^post19 = hsize^0
		
	Simplified Guard

	Original rule:
	l18 -> l17 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-block_compress^0 <= 0), cost: 1
	New rule:
	l18 -> l17 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-block_compress^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l18 -> l17 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-block_compress^0 <= 0, cost: 1
	New rule:
	l18 -> l17 : 1-block_compress^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l18 -> l17 : __const_10000^0'=__const_10000^post20, __const_16^0'=__const_16^post20, __const_2147483647^0'=__const_2147483647^post20, __const_256^0'=__const_256^post20, __const_257^0'=__const_257^post20, __const_429496^0'=__const_429496^post20, __const_50^0'=__const_50^post20, __const_53^0'=__const_53^post20, __const_65536^0'=__const_65536^post20, __const_8388607^0'=__const_8388607^post20, __const_8^0'=__const_8^post20, __const_9^0'=__const_9^post20, apsim_bound11113^0'=apsim_bound11113^post20, apsim_incnt^0'=apsim_incnt^post20, bits33^0'=bits33^post20, block_compress^0'=block_compress^post20, bytes_out^0'=bytes_out^post20, c37^0'=c37^post20, c7^0'=c7^post20, checkpoint^0'=checkpoint^post20, clear_flg^0'=clear_flg^post20, code31^0'=code31^post20, count^0'=count^post20, disp9^0'=disp9^post20, ent8^0'=ent8^post20, exit_stat^0'=exit_stat^post20, fcode5^0'=fcode5^post20, free_ent^0'=free_ent^post20, hshift11^0'=hshift11^post20, hsize^0'=hsize^post20, hsize___019^0'=hsize___019^post20, hsize___027^0'=hsize___027^post20, hsize_reg10^0'=hsize_reg10^post20, i21^0'=i21^post20, i29^0'=i29^post20, i3^0'=i3^post20, i41^0'=i41^post20, i45^0'=i45^post20, i6^0'=i6^post20, in_count^0'=in_count^post20, incnt^0'=incnt^post20, m122^0'=m122^post20, m130^0'=m130^post20, maxbits^0'=maxbits^post20, maxcode^0'=maxcode^post20, maxmaxcode^0'=maxmaxcode^post20, n40^0'=n40^post20, n44^0'=n44^post20, n_bits^0'=n_bits^post20, offset^0'=offset^post20, out_count^0'=out_count^post20, r_off32^0'=r_off32^post20, rat26^0'=rat26^post20, ratio^0'=ratio^post20, ret_getbyte18^0'=ret_getbyte18^post20, ret_getbyte25^0'=ret_getbyte25^post20, seed2^0'=seed2^post20, tabort4^0'=tabort4^post20, tmp12^0'=tmp12^post20, tmp___014^0'=tmp___014^post20, tmp___017^0'=tmp___017^post20, tmp___024^0'=tmp___024^post20, tmp___115^0'=tmp___115^post20, (n44^0-n44^post20 == 0 /\ ret_getbyte25^0-ret_getbyte25^post20 == 0 /\ apsim_incnt^0-apsim_incnt^post20 == 0 /\ tabort4^0-tabort4^post20 == 0 /\ c37^0-c37^post20 == 0 /\ -checkpoint^post20+checkpoint^0 == 0 /\ -hsize_reg10^post20+hsize_reg10^0 == 0 /\ -ratio^post20+ratio^0 == 0 /\ ent8^0-ent8^post20 == 0 /\ -hsize___019^post20+hsize___019^0 == 0 /\ -hsize^post20+hsize^0 == 0 /\ __const_256^0-__const_256^post20 == 0 /\ out_count^0-out_count^post20 == 0 /\ hsize___027^0-hsize___027^post20 == 0 /\ c7^0-c7^post20 == 0 /\ -m122^post20+m122^0 == 0 /\ -maxbits^post20+maxbits^0 == 0 /\ -n40^post20+n40^0 == 0 /\ -i3^post20+i3^0 == 0 /\ i29^0-i29^post20 == 0 /\ -i41^post20+i41^0 == 0 /\ -__const_8388607^post20+__const_8388607^0 == 0 /\ bytes_out^0-bytes_out^post20 == 0 /\ -i21^post20+i21^0 == 0 /\ exit_stat^0-exit_stat^post20 == 0 /\ -incnt^post20+incnt^0 == 0 /\ maxcode^0-maxcode^post20 == 0 /\ __const_50^0-__const_50^post20 == 0 /\ -bits33^post20+bits33^0 == 0 /\ -__const_429496^post20+__const_429496^0 == 0 /\ __const_53^0-__const_53^post20 == 0 /\ m130^0-m130^post20 == 0 /\ -__const_9^post20+__const_9^0 == 0 /\ -in_count^post20+in_count^0 == 0 /\ -r_off32^post20+r_off32^0 == 0 /\ tmp12^0-tmp12^post20 == 0 /\ ret_getbyte18^0-ret_getbyte18^post20 == 0 /\ 1+block_compress^0 <= 0 /\ -clear_flg^post20+clear_flg^0 == 0 /\ -n_bits^post20+n_bits^0 == 0 /\ -offset^post20+offset^0 == 0 /\ __const_257^0-__const_257^post20 == 0 /\ -fcode5^post20+fcode5^0 == 0 /\ -disp9^post20+disp9^0 == 0 /\ -count^post20+count^0 == 0 /\ -tmp___024^post20+tmp___024^0 == 0 /\ i45^0-i45^post20 == 0 /\ -tmp___115^post20+tmp___115^0 == 0 /\ __const_10000^0-__const_10000^post20 == 0 /\ -block_compress^post20+block_compress^0 == 0 /\ -__const_2147483647^post20+__const_2147483647^0 == 0 /\ -__const_8^post20+__const_8^0 == 0 /\ -seed2^post20+seed2^0 == 0 /\ -tmp___014^post20+tmp___014^0 == 0 /\ hshift11^0-hshift11^post20 == 0 /\ free_ent^0-free_ent^post20 == 0 /\ maxmaxcode^0-maxmaxcode^post20 == 0 /\ rat26^0-rat26^post20 == 0 /\ __const_16^0-__const_16^post20 == 0 /\ tmp___017^0-tmp___017^post20 == 0 /\ code31^0-code31^post20 == 0 /\ -apsim_bound11113^post20+apsim_bound11113^0 == 0 /\ -__const_65536^post20+__const_65536^0 == 0 /\ -i6^post20+i6^0 == 0), cost: 1
	New rule:
	l18 -> l17 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+block_compress^0 <= 0), cost: 1
	
		propagated equality n44^post20 = n44^0
		
		propagated equality ret_getbyte25^post20 = ret_getbyte25^0
		
		propagated equality apsim_incnt^post20 = apsim_incnt^0
		
		propagated equality tabort4^post20 = tabort4^0
		
		propagated equality c37^post20 = c37^0
		
		propagated equality checkpoint^post20 = checkpoint^0
		
		propagated equality hsize_reg10^post20 = hsize_reg10^0
		
		propagated equality ratio^post20 = ratio^0
		
		propagated equality ent8^post20 = ent8^0
		
		propagated equality hsize___019^post20 = hsize___019^0
		
		propagated equality hsize^post20 = hsize^0
		
		propagated equality __const_256^post20 = __const_256^0
		
		propagated equality out_count^post20 = out_count^0
		
		propagated equality hsize___027^post20 = hsize___027^0
		
		propagated equality c7^post20 = c7^0
		
		propagated equality m122^post20 = m122^0
		
		propagated equality maxbits^post20 = maxbits^0
		
		propagated equality n40^post20 = n40^0
		
		propagated equality i3^post20 = i3^0
		
		propagated equality i29^post20 = i29^0
		
		propagated equality i41^post20 = i41^0
		
		propagated equality __const_8388607^post20 = __const_8388607^0
		
		propagated equality bytes_out^post20 = bytes_out^0
		
		propagated equality i21^post20 = i21^0
		
		propagated equality exit_stat^post20 = exit_stat^0
		
		propagated equality incnt^post20 = incnt^0
		
		propagated equality maxcode^post20 = maxcode^0
		
		propagated equality __const_50^post20 = __const_50^0
		
		propagated equality bits33^post20 = bits33^0
		
		propagated equality __const_429496^post20 = __const_429496^0
		
		propagated equality __const_53^post20 = __const_53^0
		
		propagated equality m130^post20 = m130^0
		
		propagated equality __const_9^post20 = __const_9^0
		
		propagated equality in_count^post20 = in_count^0
		
		propagated equality r_off32^post20 = r_off32^0
		
		propagated equality tmp12^post20 = tmp12^0
		
		propagated equality ret_getbyte18^post20 = ret_getbyte18^0
		
		propagated equality clear_flg^post20 = clear_flg^0
		
		propagated equality n_bits^post20 = n_bits^0
		
		propagated equality offset^post20 = offset^0
		
		propagated equality __const_257^post20 = __const_257^0
		
		propagated equality fcode5^post20 = fcode5^0
		
		propagated equality disp9^post20 = disp9^0
		
		propagated equality count^post20 = count^0
		
		propagated equality tmp___024^post20 = tmp___024^0
		
		propagated equality i45^post20 = i45^0
		
		propagated equality tmp___115^post20 = tmp___115^0
		
		propagated equality __const_10000^post20 = __const_10000^0
		
		propagated equality block_compress^post20 = block_compress^0
		
		propagated equality __const_2147483647^post20 = __const_2147483647^0
		
		propagated equality __const_8^post20 = __const_8^0
		
		propagated equality seed2^post20 = seed2^0
		
		propagated equality tmp___014^post20 = tmp___014^0
		
		propagated equality hshift11^post20 = hshift11^0
		
		propagated equality free_ent^post20 = free_ent^0
		
		propagated equality maxmaxcode^post20 = maxmaxcode^0
		
		propagated equality rat26^post20 = rat26^0
		
		propagated equality __const_16^post20 = __const_16^0
		
		propagated equality tmp___017^post20 = tmp___017^0
		
		propagated equality code31^post20 = code31^0
		
		propagated equality apsim_bound11113^post20 = apsim_bound11113^0
		
		propagated equality __const_65536^post20 = __const_65536^0
		
		propagated equality i6^post20 = i6^0
		
	Simplified Guard

	Original rule:
	l18 -> l17 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+block_compress^0 <= 0), cost: 1
	New rule:
	l18 -> l17 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+block_compress^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l18 -> l17 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+block_compress^0 <= 0, cost: 1
	New rule:
	l18 -> l17 : 1+block_compress^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l19 -> l20 : __const_10000^0'=__const_10000^post21, __const_16^0'=__const_16^post21, __const_2147483647^0'=__const_2147483647^post21, __const_256^0'=__const_256^post21, __const_257^0'=__const_257^post21, __const_429496^0'=__const_429496^post21, __const_50^0'=__const_50^post21, __const_53^0'=__const_53^post21, __const_65536^0'=__const_65536^post21, __const_8388607^0'=__const_8388607^post21, __const_8^0'=__const_8^post21, __const_9^0'=__const_9^post21, apsim_bound11113^0'=apsim_bound11113^post21, apsim_incnt^0'=apsim_incnt^post21, bits33^0'=bits33^post21, block_compress^0'=block_compress^post21, bytes_out^0'=bytes_out^post21, c37^0'=c37^post21, c7^0'=c7^post21, checkpoint^0'=checkpoint^post21, clear_flg^0'=clear_flg^post21, code31^0'=code31^post21, count^0'=count^post21, disp9^0'=disp9^post21, ent8^0'=ent8^post21, exit_stat^0'=exit_stat^post21, fcode5^0'=fcode5^post21, free_ent^0'=free_ent^post21, hshift11^0'=hshift11^post21, hsize^0'=hsize^post21, hsize___019^0'=hsize___019^post21, hsize___027^0'=hsize___027^post21, hsize_reg10^0'=hsize_reg10^post21, i21^0'=i21^post21, i29^0'=i29^post21, i3^0'=i3^post21, i41^0'=i41^post21, i45^0'=i45^post21, i6^0'=i6^post21, in_count^0'=in_count^post21, incnt^0'=incnt^post21, m122^0'=m122^post21, m130^0'=m130^post21, maxbits^0'=maxbits^post21, maxcode^0'=maxcode^post21, maxmaxcode^0'=maxmaxcode^post21, n40^0'=n40^post21, n44^0'=n44^post21, n_bits^0'=n_bits^post21, offset^0'=offset^post21, out_count^0'=out_count^post21, r_off32^0'=r_off32^post21, rat26^0'=rat26^post21, ratio^0'=ratio^post21, ret_getbyte18^0'=ret_getbyte18^post21, ret_getbyte25^0'=ret_getbyte25^post21, seed2^0'=seed2^post21, tabort4^0'=tabort4^post21, tmp12^0'=tmp12^post21, tmp___014^0'=tmp___014^post21, tmp___017^0'=tmp___017^post21, tmp___024^0'=tmp___024^post21, tmp___115^0'=tmp___115^post21, (0 == 0 /\ tmp12^0-tmp12^post21 == 0 /\ exit_stat^0-exit_stat^post21 == 0 /\ -i21^post21+i21^0 == 0 /\ __const_257^0-__const_257^post21 == 0 /\ i29^0-i29^post21 == 0 /\ maxmaxcode^0-maxmaxcode^post21 == 0 /\ maxcode^0-maxcode^post21 == 0 /\ bytes_out^0-bytes_out^post21 == 0 /\ offset^0-offset^post21 == 0 /\ tabort4^0-tabort4^post21 == 0 /\ ret_getbyte18^0-ret_getbyte18^post21 == 0 /\ __const_256^0-__const_256^post21 == 0 /\ r_off32^0-r_off32^post21 == 0 /\ tmp___017^0-tmp___017^post21 == 0 /\ -__const_429496^post21+__const_429496^0 == 0 /\ -incnt^post21+incnt^0 == 0 /\ -i41^post21+i41^0 == 0 /\ out_count^0-out_count^post21 == 0 /\ -apsim_bound11113^post21+apsim_bound11113^0 == 0 /\ -hsize^post21+hsize^0 == 0 /\ -rat26^post21+rat26^0 == 0 /\ -__const_65536^post21+__const_65536^0 == 0 /\ n44^0-n44^post21 == 0 /\ apsim_incnt^0-apsim_incnt^post21 == 0 /\ 1+bits33^post21-bits33^0 == 0 /\ -__const_2147483647^post21+__const_2147483647^0 == 0 /\ m130^0-m130^post21 == 0 /\ ent8^0-ent8^post21 == 0 /\ i45^0-i45^post21 == 0 /\ -__const_16^post21+__const_16^0 == 0 /\ -seed2^post21+seed2^0 == 0 /\ -tmp___115^post21+tmp___115^0 == 0 /\ __const_10000^0-__const_10000^post21 == 0 /\ -fcode5^post21+fcode5^0 == 0 /\ -block_compress^post21+block_compress^0 == 0 /\ -n40^post21+n40^0 == 0 /\ -i6^post21+i6^0 == 0 /\ -in_count^post21+in_count^0 == 0 /\ -__const_8388607^post21+__const_8388607^0 == 0 /\ -checkpoint^post21+checkpoint^0 == 0 /\ __const_8^0-__const_8^post21 == 0 /\ -ratio^post21+ratio^0 == 0 /\ __const_50^0-__const_50^post21 == 0 /\ -clear_flg^post21+clear_flg^0 == 0 /\ count^0-count^post21 == 0 /\ -hsize_reg10^post21+hsize_reg10^0 == 0 /\ __const_53^0-__const_53^post21 == 0 /\ -n_bits^post21+n_bits^0 == 0 /\ m122^0-m122^post21 == 0 /\ hsize___027^0-hsize___027^post21 == 0 /\ hshift11^0-hshift11^post21 == 0 /\ -hsize___019^post21+hsize___019^0 == 0 /\ -__const_9^post21+__const_9^0 == 0 /\ -tmp___014^post21+tmp___014^0 == 0 /\ -code31^post21+code31^0 == 0 /\ -disp9^post21+disp9^0 == 0 /\ -tmp___024^post21+tmp___024^0 == 0 /\ c7^0-c7^post21 == 0 /\ free_ent^0-free_ent^post21 == 0 /\ -maxbits^post21+maxbits^0 == 0 /\ -i3^post21+i3^0 == 0 /\ -ret_getbyte25^post21+ret_getbyte25^0 == 0), cost: 1
	New rule:
	l19 -> l20 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=-1+bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^post21, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality tmp12^post21 = tmp12^0
		
		propagated equality exit_stat^post21 = exit_stat^0
		
		propagated equality i21^post21 = i21^0
		
		propagated equality __const_257^post21 = __const_257^0
		
		propagated equality i29^post21 = i29^0
		
		propagated equality maxmaxcode^post21 = maxmaxcode^0
		
		propagated equality maxcode^post21 = maxcode^0
		
		propagated equality bytes_out^post21 = bytes_out^0
		
		propagated equality offset^post21 = offset^0
		
		propagated equality tabort4^post21 = tabort4^0
		
		propagated equality ret_getbyte18^post21 = ret_getbyte18^0
		
		propagated equality __const_256^post21 = __const_256^0
		
		propagated equality r_off32^post21 = r_off32^0
		
		propagated equality tmp___017^post21 = tmp___017^0
		
		propagated equality __const_429496^post21 = __const_429496^0
		
		propagated equality incnt^post21 = incnt^0
		
		propagated equality i41^post21 = i41^0
		
		propagated equality out_count^post21 = out_count^0
		
		propagated equality apsim_bound11113^post21 = apsim_bound11113^0
		
		propagated equality hsize^post21 = hsize^0
		
		propagated equality rat26^post21 = rat26^0
		
		propagated equality __const_65536^post21 = __const_65536^0
		
		propagated equality n44^post21 = n44^0
		
		propagated equality apsim_incnt^post21 = apsim_incnt^0
		
		propagated equality bits33^post21 = -1+bits33^0
		
		propagated equality __const_2147483647^post21 = __const_2147483647^0
		
		propagated equality m130^post21 = m130^0
		
		propagated equality ent8^post21 = ent8^0
		
		propagated equality i45^post21 = i45^0
		
		propagated equality __const_16^post21 = __const_16^0
		
		propagated equality seed2^post21 = seed2^0
		
		propagated equality tmp___115^post21 = tmp___115^0
		
		propagated equality __const_10000^post21 = __const_10000^0
		
		propagated equality fcode5^post21 = fcode5^0
		
		propagated equality block_compress^post21 = block_compress^0
		
		propagated equality n40^post21 = n40^0
		
		propagated equality i6^post21 = i6^0
		
		propagated equality in_count^post21 = in_count^0
		
		propagated equality __const_8388607^post21 = __const_8388607^0
		
		propagated equality checkpoint^post21 = checkpoint^0
		
		propagated equality __const_8^post21 = __const_8^0
		
		propagated equality ratio^post21 = ratio^0
		
		propagated equality __const_50^post21 = __const_50^0
		
		propagated equality clear_flg^post21 = clear_flg^0
		
		propagated equality count^post21 = count^0
		
		propagated equality hsize_reg10^post21 = hsize_reg10^0
		
		propagated equality __const_53^post21 = __const_53^0
		
		propagated equality n_bits^post21 = n_bits^0
		
		propagated equality m122^post21 = m122^0
		
		propagated equality hsize___027^post21 = hsize___027^0
		
		propagated equality hshift11^post21 = hshift11^0
		
		propagated equality hsize___019^post21 = hsize___019^0
		
		propagated equality __const_9^post21 = __const_9^0
		
		propagated equality tmp___014^post21 = tmp___014^0
		
		propagated equality code31^post21 = code31^0
		
		propagated equality disp9^post21 = disp9^0
		
		propagated equality tmp___024^post21 = tmp___024^0
		
		propagated equality c7^post21 = c7^0
		
		propagated equality free_ent^post21 = free_ent^0
		
		propagated equality maxbits^post21 = maxbits^0
		
		propagated equality i3^post21 = i3^0
		
		propagated equality ret_getbyte25^post21 = ret_getbyte25^0
		
	Simplified Guard

	Original rule:
	l19 -> l20 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=-1+bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^post21, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l19 -> l20 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=-1+bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^post21, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l19 -> l20 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=-1+bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^post21, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l19 -> l20 : bits33^0'=-1+bits33^0, c37^0'=c37^post21, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l21 -> l22 : __const_10000^0'=__const_10000^post22, __const_16^0'=__const_16^post22, __const_2147483647^0'=__const_2147483647^post22, __const_256^0'=__const_256^post22, __const_257^0'=__const_257^post22, __const_429496^0'=__const_429496^post22, __const_50^0'=__const_50^post22, __const_53^0'=__const_53^post22, __const_65536^0'=__const_65536^post22, __const_8388607^0'=__const_8388607^post22, __const_8^0'=__const_8^post22, __const_9^0'=__const_9^post22, apsim_bound11113^0'=apsim_bound11113^post22, apsim_incnt^0'=apsim_incnt^post22, bits33^0'=bits33^post22, block_compress^0'=block_compress^post22, bytes_out^0'=bytes_out^post22, c37^0'=c37^post22, c7^0'=c7^post22, checkpoint^0'=checkpoint^post22, clear_flg^0'=clear_flg^post22, code31^0'=code31^post22, count^0'=count^post22, disp9^0'=disp9^post22, ent8^0'=ent8^post22, exit_stat^0'=exit_stat^post22, fcode5^0'=fcode5^post22, free_ent^0'=free_ent^post22, hshift11^0'=hshift11^post22, hsize^0'=hsize^post22, hsize___019^0'=hsize___019^post22, hsize___027^0'=hsize___027^post22, hsize_reg10^0'=hsize_reg10^post22, i21^0'=i21^post22, i29^0'=i29^post22, i3^0'=i3^post22, i41^0'=i41^post22, i45^0'=i45^post22, i6^0'=i6^post22, in_count^0'=in_count^post22, incnt^0'=incnt^post22, m122^0'=m122^post22, m130^0'=m130^post22, maxbits^0'=maxbits^post22, maxcode^0'=maxcode^post22, maxmaxcode^0'=maxmaxcode^post22, n40^0'=n40^post22, n44^0'=n44^post22, n_bits^0'=n_bits^post22, offset^0'=offset^post22, out_count^0'=out_count^post22, r_off32^0'=r_off32^post22, rat26^0'=rat26^post22, ratio^0'=ratio^post22, ret_getbyte18^0'=ret_getbyte18^post22, ret_getbyte25^0'=ret_getbyte25^post22, seed2^0'=seed2^post22, tabort4^0'=tabort4^post22, tmp12^0'=tmp12^post22, tmp___014^0'=tmp___014^post22, tmp___017^0'=tmp___017^post22, tmp___024^0'=tmp___024^post22, tmp___115^0'=tmp___115^post22, (-i29^post22+i29^0 == 0 /\ -tmp12^post22+tmp12^0 == 0 /\ -seed2^post22+seed2^0 == 0 /\ -tmp___014^post22+tmp___014^0 == 0 /\ -ret_getbyte25^post22+ret_getbyte25^0 == 0 /\ -code31^post22+code31^0 == 0 /\ tmp___024^0-tmp___024^post22 == 0 /\ -c37^post22+c37^0 == 0 /\ hshift11^0-hshift11^post22 == 0 /\ -block_compress^post22+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post22 == 0 /\ free_ent^0-free_ent^post22 == 0 /\ -ent8^post22+ent8^0 == 0 /\ -rat26^post22+rat26^0 == 0 /\ -in_count^post22+in_count^0 == 0 /\ -disp9^post22+disp9^0 == 0 /\ out_count^0-out_count^post22 == 0 /\ -ratio^post22+ratio^0 == 0 /\ maxcode^0-maxcode^post22 == 0 /\ __const_10000^0-__const_10000^post22 == 0 /\ r_off32^0-r_off32^post22 == 0 /\ i45^0-i45^post22 == 0 /\ -maxbits^post22+maxbits^0 == 0 /\ exit_stat^0-exit_stat^post22 == 0 /\ __const_16^0-__const_16^post22 == 0 /\ -hsize___019^post22+hsize___019^0 == 0 /\ tmp___017^0-tmp___017^post22 == 0 /\ -c7^post22+c7^0 == 0 /\ -i21^post22+i21^0 == 0 /\ apsim_incnt^0-apsim_incnt^post22 == 0 /\ maxmaxcode^0-maxmaxcode^post22 == 0 /\ -__const_2147483647^post22+__const_2147483647^0 == 0 /\ -__const_65536^post22+__const_65536^0 == 0 /\ __const_53^0-__const_53^post22 == 0 /\ -__const_429496^post22+__const_429496^0 == 0 /\ -i3^post22+i3^0 == 0 /\ -i41^post22+i41^0 == 0 /\ m122^0-m122^post22 == 0 /\ count^0-count^post22 == 0 /\ -n_bits^post22+n_bits^0 == 0 /\ -offset^post22+offset^0 == 0 /\ -apsim_bound11113^post22+apsim_bound11113^0 == 0 /\ -__const_9^post22+__const_9^0 == 0 /\ n44^0-n44^post22 == 0 /\ -clear_flg^post22+clear_flg^0 == 0 /\ -tmp___115^post22+tmp___115^0 == 0 /\ -m130^post22+m130^0 == 0 /\ -fcode5^post22+fcode5^0 == 0 /\ tabort4^0-tabort4^post22 == 0 /\ i6^0-i6^post22 == 0 /\ checkpoint^0-checkpoint^post22 == 0 /\ -n40^post22+n40^0 == 0 /\ __const_257^0-__const_257^post22 == 0 /\ __const_8^0-__const_8^post22 == 0 /\ hsize_reg10^0-hsize_reg10^post22 == 0 /\ hsize___027^0-hsize___027^post22 == 0 /\ -hsize^post22+hsize^0 == 0 /\ -incnt^post22+incnt^0 == 0 /\ -bits33^post22+bits33^0 == 0 /\ __const_256^0-__const_256^post22 == 0 /\ bytes_out^0-bytes_out^post22 == 0 /\ -__const_8388607^post22+__const_8388607^0 == 0 /\ __const_50^0-__const_50^post22 == 0), cost: 1
	New rule:
	l21 -> l22 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality i29^post22 = i29^0
		
		propagated equality tmp12^post22 = tmp12^0
		
		propagated equality seed2^post22 = seed2^0
		
		propagated equality tmp___014^post22 = tmp___014^0
		
		propagated equality ret_getbyte25^post22 = ret_getbyte25^0
		
		propagated equality code31^post22 = code31^0
		
		propagated equality tmp___024^post22 = tmp___024^0
		
		propagated equality c37^post22 = c37^0
		
		propagated equality hshift11^post22 = hshift11^0
		
		propagated equality block_compress^post22 = block_compress^0
		
		propagated equality ret_getbyte18^post22 = ret_getbyte18^0
		
		propagated equality free_ent^post22 = free_ent^0
		
		propagated equality ent8^post22 = ent8^0
		
		propagated equality rat26^post22 = rat26^0
		
		propagated equality in_count^post22 = in_count^0
		
		propagated equality disp9^post22 = disp9^0
		
		propagated equality out_count^post22 = out_count^0
		
		propagated equality ratio^post22 = ratio^0
		
		propagated equality maxcode^post22 = maxcode^0
		
		propagated equality __const_10000^post22 = __const_10000^0
		
		propagated equality r_off32^post22 = r_off32^0
		
		propagated equality i45^post22 = i45^0
		
		propagated equality maxbits^post22 = maxbits^0
		
		propagated equality exit_stat^post22 = exit_stat^0
		
		propagated equality __const_16^post22 = __const_16^0
		
		propagated equality hsize___019^post22 = hsize___019^0
		
		propagated equality tmp___017^post22 = tmp___017^0
		
		propagated equality c7^post22 = c7^0
		
		propagated equality i21^post22 = i21^0
		
		propagated equality apsim_incnt^post22 = apsim_incnt^0
		
		propagated equality maxmaxcode^post22 = maxmaxcode^0
		
		propagated equality __const_2147483647^post22 = __const_2147483647^0
		
		propagated equality __const_65536^post22 = __const_65536^0
		
		propagated equality __const_53^post22 = __const_53^0
		
		propagated equality __const_429496^post22 = __const_429496^0
		
		propagated equality i3^post22 = i3^0
		
		propagated equality i41^post22 = i41^0
		
		propagated equality m122^post22 = m122^0
		
		propagated equality count^post22 = count^0
		
		propagated equality n_bits^post22 = n_bits^0
		
		propagated equality offset^post22 = offset^0
		
		propagated equality apsim_bound11113^post22 = apsim_bound11113^0
		
		propagated equality __const_9^post22 = __const_9^0
		
		propagated equality n44^post22 = n44^0
		
		propagated equality clear_flg^post22 = clear_flg^0
		
		propagated equality tmp___115^post22 = tmp___115^0
		
		propagated equality m130^post22 = m130^0
		
		propagated equality fcode5^post22 = fcode5^0
		
		propagated equality tabort4^post22 = tabort4^0
		
		propagated equality i6^post22 = i6^0
		
		propagated equality checkpoint^post22 = checkpoint^0
		
		propagated equality n40^post22 = n40^0
		
		propagated equality __const_257^post22 = __const_257^0
		
		propagated equality __const_8^post22 = __const_8^0
		
		propagated equality hsize_reg10^post22 = hsize_reg10^0
		
		propagated equality hsize___027^post22 = hsize___027^0
		
		propagated equality hsize^post22 = hsize^0
		
		propagated equality incnt^post22 = incnt^0
		
		propagated equality bits33^post22 = bits33^0
		
		propagated equality __const_256^post22 = __const_256^0
		
		propagated equality bytes_out^post22 = bytes_out^0
		
		propagated equality __const_8388607^post22 = __const_8388607^0
		
		propagated equality __const_50^post22 = __const_50^0
		
	Simplified Guard

	Original rule:
	l21 -> l22 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l21 -> l22 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l21 -> l22 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l21 -> l22 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l23 -> l24 : __const_10000^0'=__const_10000^post23, __const_16^0'=__const_16^post23, __const_2147483647^0'=__const_2147483647^post23, __const_256^0'=__const_256^post23, __const_257^0'=__const_257^post23, __const_429496^0'=__const_429496^post23, __const_50^0'=__const_50^post23, __const_53^0'=__const_53^post23, __const_65536^0'=__const_65536^post23, __const_8388607^0'=__const_8388607^post23, __const_8^0'=__const_8^post23, __const_9^0'=__const_9^post23, apsim_bound11113^0'=apsim_bound11113^post23, apsim_incnt^0'=apsim_incnt^post23, bits33^0'=bits33^post23, block_compress^0'=block_compress^post23, bytes_out^0'=bytes_out^post23, c37^0'=c37^post23, c7^0'=c7^post23, checkpoint^0'=checkpoint^post23, clear_flg^0'=clear_flg^post23, code31^0'=code31^post23, count^0'=count^post23, disp9^0'=disp9^post23, ent8^0'=ent8^post23, exit_stat^0'=exit_stat^post23, fcode5^0'=fcode5^post23, free_ent^0'=free_ent^post23, hshift11^0'=hshift11^post23, hsize^0'=hsize^post23, hsize___019^0'=hsize___019^post23, hsize___027^0'=hsize___027^post23, hsize_reg10^0'=hsize_reg10^post23, i21^0'=i21^post23, i29^0'=i29^post23, i3^0'=i3^post23, i41^0'=i41^post23, i45^0'=i45^post23, i6^0'=i6^post23, in_count^0'=in_count^post23, incnt^0'=incnt^post23, m122^0'=m122^post23, m130^0'=m130^post23, maxbits^0'=maxbits^post23, maxcode^0'=maxcode^post23, maxmaxcode^0'=maxmaxcode^post23, n40^0'=n40^post23, n44^0'=n44^post23, n_bits^0'=n_bits^post23, offset^0'=offset^post23, out_count^0'=out_count^post23, r_off32^0'=r_off32^post23, rat26^0'=rat26^post23, ratio^0'=ratio^post23, ret_getbyte18^0'=ret_getbyte18^post23, ret_getbyte25^0'=ret_getbyte25^post23, seed2^0'=seed2^post23, tabort4^0'=tabort4^post23, tmp12^0'=tmp12^post23, tmp___014^0'=tmp___014^post23, tmp___017^0'=tmp___017^post23, tmp___024^0'=tmp___024^post23, tmp___115^0'=tmp___115^post23, (__const_16^0-__const_16^post23 == 0 /\ -ret_getbyte18^post23+ret_getbyte18^0 == 0 /\ -maxbits^post23+maxbits^0 == 0 /\ -in_count^post23+in_count^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post23 == 0 /\ hsize___027^0-hsize___027^post23 == 0 /\ -n40^post23+n40^0 == 0 /\ n44^0-n44^post23 == 0 /\ -__const_9^post23+__const_9^0 == 0 /\ -apsim_bound11113^post23+apsim_bound11113^0 == 0 /\ i3^0-i3^post23 == 0 /\ -__const_10000^post23+__const_10000^0 == 0 /\ -__const_2147483647^post23+__const_2147483647^0 == 0 /\ -__const_8388607^post23+__const_8388607^0 == 0 /\ checkpoint^0-checkpoint^post23 == 0 /\ maxcode^0-maxcode^post23 == 0 /\ -hsize_reg10^post23+hsize_reg10^0 == 0 /\ -hsize^post23+hsize^0 == 0 /\ -hsize___019^post23+hsize___019^0 == 0 /\ -ratio^post23+ratio^0 == 0 /\ -m122^post23+m122^0 == 0 /\ i21^0-i21^post23 == 0 /\ tmp12^0-tmp12^post23 == 0 /\ -tmp___014^post23+tmp___014^0 == 0 /\ -n_bits^post23+n_bits^0 == 0 /\ -code31^post23+code31^0 == 0 /\ -tabort4^post23+tabort4^0 == 0 /\ clear_flg^0-clear_flg^post23 == 0 /\ __const_256^0-__const_256^post23 == 0 /\ -i45^post23+i45^0 == 0 /\ m130^0-m130^post23 == 0 /\ -__const_429496^post23+__const_429496^0 == 0 /\ -disp9^post23+disp9^0 == 0 /\ count^0-count^post23 == 0 /\ i6^0-i6^post23 == 0 /\ -tmp___024^post23+tmp___024^0 == 0 /\ -i29^post23+i29^0 == 0 /\ -free_ent^post23+free_ent^0 == 0 /\ bits33^0-bits33^post23 == 0 /\ bytes_out^0-bytes_out^post23 == 0 /\ r_off32^0-r_off32^post23 == 0 /\ -block_compress^post23+block_compress^0 == 0 /\ -c7^post23+c7^0 == 0 /\ hshift11^0-hshift11^post23 == 0 /\ tmp___115^0-tmp___115^post23 == 0 /\ apsim_incnt^0-apsim_incnt^post23 == 0 /\ exit_stat^0-exit_stat^post23 == 0 /\ __const_50^0-__const_50^post23 == 0 /\ -offset^post23+offset^0 == 0 /\ -i41^post23+i41^0 == 0 /\ rat26^0-rat26^post23 == 0 /\ -incnt^post23+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post23 == 0 /\ c37^0-c37^post23 == 0 /\ out_count^0-out_count^post23 == 0 /\ fcode5^0-fcode5^post23 == 0 /\ -seed2^post23+seed2^0 == 0 /\ -__const_65536^post23+__const_65536^0 == 0 /\ __const_257^0-__const_257^post23 == 0 /\ __const_53^0-__const_53^post23 == 0 /\ __const_8^0-__const_8^post23 == 0 /\ -ent8^post23+ent8^0 == 0 /\ tmp___017^0-tmp___017^post23 == 0), cost: 1
	New rule:
	l23 -> l24 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality __const_16^post23 = __const_16^0
		
		propagated equality ret_getbyte18^post23 = ret_getbyte18^0
		
		propagated equality maxbits^post23 = maxbits^0
		
		propagated equality in_count^post23 = in_count^0
		
		propagated equality ret_getbyte25^post23 = ret_getbyte25^0
		
		propagated equality hsize___027^post23 = hsize___027^0
		
		propagated equality n40^post23 = n40^0
		
		propagated equality n44^post23 = n44^0
		
		propagated equality __const_9^post23 = __const_9^0
		
		propagated equality apsim_bound11113^post23 = apsim_bound11113^0
		
		propagated equality i3^post23 = i3^0
		
		propagated equality __const_10000^post23 = __const_10000^0
		
		propagated equality __const_2147483647^post23 = __const_2147483647^0
		
		propagated equality __const_8388607^post23 = __const_8388607^0
		
		propagated equality checkpoint^post23 = checkpoint^0
		
		propagated equality maxcode^post23 = maxcode^0
		
		propagated equality hsize_reg10^post23 = hsize_reg10^0
		
		propagated equality hsize^post23 = hsize^0
		
		propagated equality hsize___019^post23 = hsize___019^0
		
		propagated equality ratio^post23 = ratio^0
		
		propagated equality m122^post23 = m122^0
		
		propagated equality i21^post23 = i21^0
		
		propagated equality tmp12^post23 = tmp12^0
		
		propagated equality tmp___014^post23 = tmp___014^0
		
		propagated equality n_bits^post23 = n_bits^0
		
		propagated equality code31^post23 = code31^0
		
		propagated equality tabort4^post23 = tabort4^0
		
		propagated equality clear_flg^post23 = clear_flg^0
		
		propagated equality __const_256^post23 = __const_256^0
		
		propagated equality i45^post23 = i45^0
		
		propagated equality m130^post23 = m130^0
		
		propagated equality __const_429496^post23 = __const_429496^0
		
		propagated equality disp9^post23 = disp9^0
		
		propagated equality count^post23 = count^0
		
		propagated equality i6^post23 = i6^0
		
		propagated equality tmp___024^post23 = tmp___024^0
		
		propagated equality i29^post23 = i29^0
		
		propagated equality free_ent^post23 = free_ent^0
		
		propagated equality bits33^post23 = bits33^0
		
		propagated equality bytes_out^post23 = bytes_out^0
		
		propagated equality r_off32^post23 = r_off32^0
		
		propagated equality block_compress^post23 = block_compress^0
		
		propagated equality c7^post23 = c7^0
		
		propagated equality hshift11^post23 = hshift11^0
		
		propagated equality tmp___115^post23 = tmp___115^0
		
		propagated equality apsim_incnt^post23 = apsim_incnt^0
		
		propagated equality exit_stat^post23 = exit_stat^0
		
		propagated equality __const_50^post23 = __const_50^0
		
		propagated equality offset^post23 = offset^0
		
		propagated equality i41^post23 = i41^0
		
		propagated equality rat26^post23 = rat26^0
		
		propagated equality incnt^post23 = incnt^0
		
		propagated equality maxmaxcode^post23 = maxmaxcode^0
		
		propagated equality c37^post23 = c37^0
		
		propagated equality out_count^post23 = out_count^0
		
		propagated equality fcode5^post23 = fcode5^0
		
		propagated equality seed2^post23 = seed2^0
		
		propagated equality __const_65536^post23 = __const_65536^0
		
		propagated equality __const_257^post23 = __const_257^0
		
		propagated equality __const_53^post23 = __const_53^0
		
		propagated equality __const_8^post23 = __const_8^0
		
		propagated equality ent8^post23 = ent8^0
		
		propagated equality tmp___017^post23 = tmp___017^0
		
	Simplified Guard

	Original rule:
	l23 -> l24 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l23 -> l24 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l23 -> l24 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l23 -> l24 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l25 -> l23 : __const_10000^0'=__const_10000^post24, __const_16^0'=__const_16^post24, __const_2147483647^0'=__const_2147483647^post24, __const_256^0'=__const_256^post24, __const_257^0'=__const_257^post24, __const_429496^0'=__const_429496^post24, __const_50^0'=__const_50^post24, __const_53^0'=__const_53^post24, __const_65536^0'=__const_65536^post24, __const_8388607^0'=__const_8388607^post24, __const_8^0'=__const_8^post24, __const_9^0'=__const_9^post24, apsim_bound11113^0'=apsim_bound11113^post24, apsim_incnt^0'=apsim_incnt^post24, bits33^0'=bits33^post24, block_compress^0'=block_compress^post24, bytes_out^0'=bytes_out^post24, c37^0'=c37^post24, c7^0'=c7^post24, checkpoint^0'=checkpoint^post24, clear_flg^0'=clear_flg^post24, code31^0'=code31^post24, count^0'=count^post24, disp9^0'=disp9^post24, ent8^0'=ent8^post24, exit_stat^0'=exit_stat^post24, fcode5^0'=fcode5^post24, free_ent^0'=free_ent^post24, hshift11^0'=hshift11^post24, hsize^0'=hsize^post24, hsize___019^0'=hsize___019^post24, hsize___027^0'=hsize___027^post24, hsize_reg10^0'=hsize_reg10^post24, i21^0'=i21^post24, i29^0'=i29^post24, i3^0'=i3^post24, i41^0'=i41^post24, i45^0'=i45^post24, i6^0'=i6^post24, in_count^0'=in_count^post24, incnt^0'=incnt^post24, m122^0'=m122^post24, m130^0'=m130^post24, maxbits^0'=maxbits^post24, maxcode^0'=maxcode^post24, maxmaxcode^0'=maxmaxcode^post24, n40^0'=n40^post24, n44^0'=n44^post24, n_bits^0'=n_bits^post24, offset^0'=offset^post24, out_count^0'=out_count^post24, r_off32^0'=r_off32^post24, rat26^0'=rat26^post24, ratio^0'=ratio^post24, ret_getbyte18^0'=ret_getbyte18^post24, ret_getbyte25^0'=ret_getbyte25^post24, seed2^0'=seed2^post24, tabort4^0'=tabort4^post24, tmp12^0'=tmp12^post24, tmp___014^0'=tmp___014^post24, tmp___017^0'=tmp___017^post24, tmp___024^0'=tmp___024^post24, tmp___115^0'=tmp___115^post24, (i21^0-i21^post24 == 0 /\ i3^0-i3^post24 == 0 /\ exit_stat^0-exit_stat^post24 == 0 /\ tmp12^0-tmp12^post24 == 0 /\ offset^0-offset^post24 == 0 /\ maxmaxcode^0-maxmaxcode^post24 == 0 /\ -r_off32^post24+r_off32^0 == 0 /\ -apsim_bound11113^post24+apsim_bound11113^0 == 0 /\ apsim_incnt^0-apsim_incnt^post24 == 0 /\ i6^0-i6^post24 == 0 /\ -__const_50^post24+__const_50^0 == 0 /\ c37^0-c37^post24 == 0 /\ bits33^0-bits33^post24 == 0 /\ -n_bits^post24+n_bits^0 == 0 /\ hsize___027^0-hsize___027^post24 == 0 /\ -fcode5^post24+fcode5^0 == 0 /\ -ent8^post24+ent8^0 == 0 /\ -tmp___017^post24+tmp___017^0 == 0 /\ m130^0-m130^post24 == 0 /\ __const_53^0-__const_53^post24 == 0 /\ __const_65536^0-__const_65536^post24 == 0 /\ -hsize^post24+hsize^0 == 0 /\ c7^0-c7^post24 == 0 /\ -ret_getbyte18^post24+ret_getbyte18^0 == 0 /\ -n40^post24+n40^0 == 0 /\ -maxcode^post24+maxcode^0 == 0 /\ -checkpoint^post24+checkpoint^0 == 0 /\ n44^0-n44^post24 == 0 /\ -__const_8388607^post24+__const_8388607^0 == 0 /\ bytes_out^0-in_count^0 <= 0 /\ -__const_256^post24+__const_256^0 == 0 /\ tmp___014^0-tmp___014^post24 == 0 /\ -incnt^post24+incnt^0 == 0 /\ __const_2147483647^0-__const_2147483647^post24 == 0 /\ __const_8^0-__const_8^post24 == 0 /\ -i29^post24+i29^0 == 0 /\ -i41^post24+i41^0 == 0 /\ __const_429496^0-__const_429496^post24 == 0 /\ count^0-count^post24 == 0 /\ rat26^0-rat26^post24 == 0 /\ __const_16^0-__const_16^post24 == 0 /\ -in_count^post24+in_count^0 == 0 /\ seed2^0-seed2^post24 == 0 /\ -disp9^post24+disp9^0 == 0 /\ -free_ent^post24+free_ent^0 == 0 /\ -tmp___024^post24+tmp___024^0 == 0 /\ -ratio^post24+ratio^0 == 0 /\ __const_257^0-__const_257^post24 == 0 /\ -hsize_reg10^post24+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post24 == 0 /\ -maxbits^post24+maxbits^0 == 0 /\ hsize___019^0-hsize___019^post24 == 0 /\ block_compress^0-block_compress^post24 == 0 /\ tmp___115^0-tmp___115^post24 == 0 /\ -m122^post24+m122^0 == 0 /\ -clear_flg^post24+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post24 == 0 /\ -i45^post24+i45^0 == 0 /\ -bytes_out^post24+bytes_out^0 == 0 /\ __const_9^0-__const_9^post24 == 0 /\ -__const_10000^post24+__const_10000^0 == 0 /\ -tabort4^post24+tabort4^0 == 0 /\ out_count^0-out_count^post24 == 0 /\ -code31^post24+code31^0 == 0), cost: 1
	New rule:
	l25 -> l23 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ bytes_out^0-in_count^0 <= 0), cost: 1
	
		propagated equality i21^post24 = i21^0
		
		propagated equality i3^post24 = i3^0
		
		propagated equality exit_stat^post24 = exit_stat^0
		
		propagated equality tmp12^post24 = tmp12^0
		
		propagated equality offset^post24 = offset^0
		
		propagated equality maxmaxcode^post24 = maxmaxcode^0
		
		propagated equality r_off32^post24 = r_off32^0
		
		propagated equality apsim_bound11113^post24 = apsim_bound11113^0
		
		propagated equality apsim_incnt^post24 = apsim_incnt^0
		
		propagated equality i6^post24 = i6^0
		
		propagated equality __const_50^post24 = __const_50^0
		
		propagated equality c37^post24 = c37^0
		
		propagated equality bits33^post24 = bits33^0
		
		propagated equality n_bits^post24 = n_bits^0
		
		propagated equality hsize___027^post24 = hsize___027^0
		
		propagated equality fcode5^post24 = fcode5^0
		
		propagated equality ent8^post24 = ent8^0
		
		propagated equality tmp___017^post24 = tmp___017^0
		
		propagated equality m130^post24 = m130^0
		
		propagated equality __const_53^post24 = __const_53^0
		
		propagated equality __const_65536^post24 = __const_65536^0
		
		propagated equality hsize^post24 = hsize^0
		
		propagated equality c7^post24 = c7^0
		
		propagated equality ret_getbyte18^post24 = ret_getbyte18^0
		
		propagated equality n40^post24 = n40^0
		
		propagated equality maxcode^post24 = maxcode^0
		
		propagated equality checkpoint^post24 = checkpoint^0
		
		propagated equality n44^post24 = n44^0
		
		propagated equality __const_8388607^post24 = __const_8388607^0
		
		propagated equality __const_256^post24 = __const_256^0
		
		propagated equality tmp___014^post24 = tmp___014^0
		
		propagated equality incnt^post24 = incnt^0
		
		propagated equality __const_2147483647^post24 = __const_2147483647^0
		
		propagated equality __const_8^post24 = __const_8^0
		
		propagated equality i29^post24 = i29^0
		
		propagated equality i41^post24 = i41^0
		
		propagated equality __const_429496^post24 = __const_429496^0
		
		propagated equality count^post24 = count^0
		
		propagated equality rat26^post24 = rat26^0
		
		propagated equality __const_16^post24 = __const_16^0
		
		propagated equality in_count^post24 = in_count^0
		
		propagated equality seed2^post24 = seed2^0
		
		propagated equality disp9^post24 = disp9^0
		
		propagated equality free_ent^post24 = free_ent^0
		
		propagated equality tmp___024^post24 = tmp___024^0
		
		propagated equality ratio^post24 = ratio^0
		
		propagated equality __const_257^post24 = __const_257^0
		
		propagated equality hsize_reg10^post24 = hsize_reg10^0
		
		propagated equality hshift11^post24 = hshift11^0
		
		propagated equality maxbits^post24 = maxbits^0
		
		propagated equality hsize___019^post24 = hsize___019^0
		
		propagated equality block_compress^post24 = block_compress^0
		
		propagated equality tmp___115^post24 = tmp___115^0
		
		propagated equality m122^post24 = m122^0
		
		propagated equality clear_flg^post24 = clear_flg^0
		
		propagated equality ret_getbyte25^post24 = ret_getbyte25^0
		
		propagated equality i45^post24 = i45^0
		
		propagated equality bytes_out^post24 = bytes_out^0
		
		propagated equality __const_9^post24 = __const_9^0
		
		propagated equality __const_10000^post24 = __const_10000^0
		
		propagated equality tabort4^post24 = tabort4^0
		
		propagated equality out_count^post24 = out_count^0
		
		propagated equality code31^post24 = code31^0
		
	Simplified Guard

	Original rule:
	l25 -> l23 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ bytes_out^0-in_count^0 <= 0), cost: 1
	New rule:
	l25 -> l23 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, bytes_out^0-in_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l25 -> l23 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, bytes_out^0-in_count^0 <= 0, cost: 1
	New rule:
	l25 -> l23 : bytes_out^0-in_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l25 -> l23 : __const_10000^0'=__const_10000^post25, __const_16^0'=__const_16^post25, __const_2147483647^0'=__const_2147483647^post25, __const_256^0'=__const_256^post25, __const_257^0'=__const_257^post25, __const_429496^0'=__const_429496^post25, __const_50^0'=__const_50^post25, __const_53^0'=__const_53^post25, __const_65536^0'=__const_65536^post25, __const_8388607^0'=__const_8388607^post25, __const_8^0'=__const_8^post25, __const_9^0'=__const_9^post25, apsim_bound11113^0'=apsim_bound11113^post25, apsim_incnt^0'=apsim_incnt^post25, bits33^0'=bits33^post25, block_compress^0'=block_compress^post25, bytes_out^0'=bytes_out^post25, c37^0'=c37^post25, c7^0'=c7^post25, checkpoint^0'=checkpoint^post25, clear_flg^0'=clear_flg^post25, code31^0'=code31^post25, count^0'=count^post25, disp9^0'=disp9^post25, ent8^0'=ent8^post25, exit_stat^0'=exit_stat^post25, fcode5^0'=fcode5^post25, free_ent^0'=free_ent^post25, hshift11^0'=hshift11^post25, hsize^0'=hsize^post25, hsize___019^0'=hsize___019^post25, hsize___027^0'=hsize___027^post25, hsize_reg10^0'=hsize_reg10^post25, i21^0'=i21^post25, i29^0'=i29^post25, i3^0'=i3^post25, i41^0'=i41^post25, i45^0'=i45^post25, i6^0'=i6^post25, in_count^0'=in_count^post25, incnt^0'=incnt^post25, m122^0'=m122^post25, m130^0'=m130^post25, maxbits^0'=maxbits^post25, maxcode^0'=maxcode^post25, maxmaxcode^0'=maxmaxcode^post25, n40^0'=n40^post25, n44^0'=n44^post25, n_bits^0'=n_bits^post25, offset^0'=offset^post25, out_count^0'=out_count^post25, r_off32^0'=r_off32^post25, rat26^0'=rat26^post25, ratio^0'=ratio^post25, ret_getbyte18^0'=ret_getbyte18^post25, ret_getbyte25^0'=ret_getbyte25^post25, seed2^0'=seed2^post25, tabort4^0'=tabort4^post25, tmp12^0'=tmp12^post25, tmp___014^0'=tmp___014^post25, tmp___017^0'=tmp___017^post25, tmp___024^0'=tmp___024^post25, tmp___115^0'=tmp___115^post25, (-bytes_out^post25+bytes_out^0 == 0 /\ c37^0-c37^post25 == 0 /\ tmp___014^0-tmp___014^post25 == 0 /\ maxmaxcode^0-maxmaxcode^post25 == 0 /\ free_ent^0-free_ent^post25 == 0 /\ apsim_bound11113^0-apsim_bound11113^post25 == 0 /\ n40^0-n40^post25 == 0 /\ -clear_flg^post25+clear_flg^0 == 0 /\ -checkpoint^post25+checkpoint^0 == 0 /\ -tmp___017^post25+tmp___017^0 == 0 /\ code31^0-code31^post25 == 0 /\ -disp9^post25+disp9^0 == 0 /\ out_count^0-out_count^post25 == 0 /\ 1-bytes_out^0+in_count^0 <= 0 /\ -tmp___024^post25+tmp___024^0 == 0 /\ -ent8^post25+ent8^0 == 0 /\ -tabort4^post25+tabort4^0 == 0 /\ -i29^post25+i29^0 == 0 /\ c7^0-c7^post25 == 0 /\ -i41^post25+i41^0 == 0 /\ __const_9^0-__const_9^post25 == 0 /\ -i45^post25+i45^0 == 0 /\ tmp12^0-tmp12^post25 == 0 /\ -fcode5^post25+fcode5^0 == 0 /\ offset^0-offset^post25 == 0 /\ __const_16^0-__const_16^post25 == 0 /\ bits33^0-bits33^post25 == 0 /\ i21^0-i21^post25 == 0 /\ -2+exit_stat^post25 == 0 /\ -__const_429496^post25+__const_429496^0 == 0 /\ apsim_incnt^0-apsim_incnt^post25 == 0 /\ -__const_50^post25+__const_50^0 == 0 /\ -hsize_reg10^post25+hsize_reg10^0 == 0 /\ -n_bits^post25+n_bits^0 == 0 /\ -incnt^post25+incnt^0 == 0 /\ __const_65536^0-__const_65536^post25 == 0 /\ -r_off32^post25+r_off32^0 == 0 /\ -m122^post25+m122^0 == 0 /\ count^0-count^post25 == 0 /\ -hsize^post25+hsize^0 == 0 /\ -hsize___027^post25+hsize___027^0 == 0 /\ -__const_2147483647^post25+__const_2147483647^0 == 0 /\ -__const_256^post25+__const_256^0 == 0 /\ __const_53^0-__const_53^post25 == 0 /\ ret_getbyte25^0-ret_getbyte25^post25 == 0 /\ n44^0-n44^post25 == 0 /\ -__const_10000^post25+__const_10000^0 == 0 /\ -maxcode^post25+maxcode^0 == 0 /\ -maxbits^post25+maxbits^0 == 0 /\ m130^0-m130^post25 == 0 /\ i3^0-i3^post25 == 0 /\ __const_8^0-__const_8^post25 == 0 /\ block_compress^0-block_compress^post25 == 0 /\ -in_count^post25+in_count^0 == 0 /\ -__const_8388607^post25+__const_8388607^0 == 0 /\ i6^0-i6^post25 == 0 /\ tmp___115^0-tmp___115^post25 == 0 /\ __const_257^0-__const_257^post25 == 0 /\ hshift11^0-hshift11^post25 == 0 /\ seed2^0-seed2^post25 == 0 /\ rat26^0-rat26^post25 == 0 /\ hsize___019^0-hsize___019^post25 == 0 /\ -ret_getbyte18^post25+ret_getbyte18^0 == 0 /\ -ratio^post25+ratio^0 == 0), cost: 1
	New rule:
	l25 -> l23 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=2, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-bytes_out^0+in_count^0 <= 0), cost: 1
	
		propagated equality bytes_out^post25 = bytes_out^0
		
		propagated equality c37^post25 = c37^0
		
		propagated equality tmp___014^post25 = tmp___014^0
		
		propagated equality maxmaxcode^post25 = maxmaxcode^0
		
		propagated equality free_ent^post25 = free_ent^0
		
		propagated equality apsim_bound11113^post25 = apsim_bound11113^0
		
		propagated equality n40^post25 = n40^0
		
		propagated equality clear_flg^post25 = clear_flg^0
		
		propagated equality checkpoint^post25 = checkpoint^0
		
		propagated equality tmp___017^post25 = tmp___017^0
		
		propagated equality code31^post25 = code31^0
		
		propagated equality disp9^post25 = disp9^0
		
		propagated equality out_count^post25 = out_count^0
		
		propagated equality tmp___024^post25 = tmp___024^0
		
		propagated equality ent8^post25 = ent8^0
		
		propagated equality tabort4^post25 = tabort4^0
		
		propagated equality i29^post25 = i29^0
		
		propagated equality c7^post25 = c7^0
		
		propagated equality i41^post25 = i41^0
		
		propagated equality __const_9^post25 = __const_9^0
		
		propagated equality i45^post25 = i45^0
		
		propagated equality tmp12^post25 = tmp12^0
		
		propagated equality fcode5^post25 = fcode5^0
		
		propagated equality offset^post25 = offset^0
		
		propagated equality __const_16^post25 = __const_16^0
		
		propagated equality bits33^post25 = bits33^0
		
		propagated equality i21^post25 = i21^0
		
		propagated equality exit_stat^post25 = 2
		
		propagated equality __const_429496^post25 = __const_429496^0
		
		propagated equality apsim_incnt^post25 = apsim_incnt^0
		
		propagated equality __const_50^post25 = __const_50^0
		
		propagated equality hsize_reg10^post25 = hsize_reg10^0
		
		propagated equality n_bits^post25 = n_bits^0
		
		propagated equality incnt^post25 = incnt^0
		
		propagated equality __const_65536^post25 = __const_65536^0
		
		propagated equality r_off32^post25 = r_off32^0
		
		propagated equality m122^post25 = m122^0
		
		propagated equality count^post25 = count^0
		
		propagated equality hsize^post25 = hsize^0
		
		propagated equality hsize___027^post25 = hsize___027^0
		
		propagated equality __const_2147483647^post25 = __const_2147483647^0
		
		propagated equality __const_256^post25 = __const_256^0
		
		propagated equality __const_53^post25 = __const_53^0
		
		propagated equality ret_getbyte25^post25 = ret_getbyte25^0
		
		propagated equality n44^post25 = n44^0
		
		propagated equality __const_10000^post25 = __const_10000^0
		
		propagated equality maxcode^post25 = maxcode^0
		
		propagated equality maxbits^post25 = maxbits^0
		
		propagated equality m130^post25 = m130^0
		
		propagated equality i3^post25 = i3^0
		
		propagated equality __const_8^post25 = __const_8^0
		
		propagated equality block_compress^post25 = block_compress^0
		
		propagated equality in_count^post25 = in_count^0
		
		propagated equality __const_8388607^post25 = __const_8388607^0
		
		propagated equality i6^post25 = i6^0
		
		propagated equality tmp___115^post25 = tmp___115^0
		
		propagated equality __const_257^post25 = __const_257^0
		
		propagated equality hshift11^post25 = hshift11^0
		
		propagated equality seed2^post25 = seed2^0
		
		propagated equality rat26^post25 = rat26^0
		
		propagated equality hsize___019^post25 = hsize___019^0
		
		propagated equality ret_getbyte18^post25 = ret_getbyte18^0
		
		propagated equality ratio^post25 = ratio^0
		
	Simplified Guard

	Original rule:
	l25 -> l23 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=2, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-bytes_out^0+in_count^0 <= 0), cost: 1
	New rule:
	l25 -> l23 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=2, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-bytes_out^0+in_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l25 -> l23 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=2, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-bytes_out^0+in_count^0 <= 0, cost: 1
	New rule:
	l25 -> l23 : exit_stat^0'=2, 1-bytes_out^0+in_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l26 -> l27 : __const_10000^0'=__const_10000^post26, __const_16^0'=__const_16^post26, __const_2147483647^0'=__const_2147483647^post26, __const_256^0'=__const_256^post26, __const_257^0'=__const_257^post26, __const_429496^0'=__const_429496^post26, __const_50^0'=__const_50^post26, __const_53^0'=__const_53^post26, __const_65536^0'=__const_65536^post26, __const_8388607^0'=__const_8388607^post26, __const_8^0'=__const_8^post26, __const_9^0'=__const_9^post26, apsim_bound11113^0'=apsim_bound11113^post26, apsim_incnt^0'=apsim_incnt^post26, bits33^0'=bits33^post26, block_compress^0'=block_compress^post26, bytes_out^0'=bytes_out^post26, c37^0'=c37^post26, c7^0'=c7^post26, checkpoint^0'=checkpoint^post26, clear_flg^0'=clear_flg^post26, code31^0'=code31^post26, count^0'=count^post26, disp9^0'=disp9^post26, ent8^0'=ent8^post26, exit_stat^0'=exit_stat^post26, fcode5^0'=fcode5^post26, free_ent^0'=free_ent^post26, hshift11^0'=hshift11^post26, hsize^0'=hsize^post26, hsize___019^0'=hsize___019^post26, hsize___027^0'=hsize___027^post26, hsize_reg10^0'=hsize_reg10^post26, i21^0'=i21^post26, i29^0'=i29^post26, i3^0'=i3^post26, i41^0'=i41^post26, i45^0'=i45^post26, i6^0'=i6^post26, in_count^0'=in_count^post26, incnt^0'=incnt^post26, m122^0'=m122^post26, m130^0'=m130^post26, maxbits^0'=maxbits^post26, maxcode^0'=maxcode^post26, maxmaxcode^0'=maxmaxcode^post26, n40^0'=n40^post26, n44^0'=n44^post26, n_bits^0'=n_bits^post26, offset^0'=offset^post26, out_count^0'=out_count^post26, r_off32^0'=r_off32^post26, rat26^0'=rat26^post26, ratio^0'=ratio^post26, ret_getbyte18^0'=ret_getbyte18^post26, ret_getbyte25^0'=ret_getbyte25^post26, seed2^0'=seed2^post26, tabort4^0'=tabort4^post26, tmp12^0'=tmp12^post26, tmp___014^0'=tmp___014^post26, tmp___017^0'=tmp___017^post26, tmp___024^0'=tmp___024^post26, tmp___115^0'=tmp___115^post26, (0 == 0 /\ c7^0-c7^post26 == 0 /\ rat26^0-rat26^post26 == 0 /\ tmp___115^0-tmp___115^post26 == 0 /\ -maxcode^post26+maxcode^0 == 0 /\ __const_50^0-__const_50^post26 == 0 /\ __const_8388607^0-__const_8388607^post26 == 0 /\ tmp___014^0-tmp___014^post26 == 0 /\ apsim_bound11113^0-apsim_bound11113^post26 == 0 /\ -hsize___027^post26+hsize___027^0 == 0 /\ -hsize_reg10^post26+hsize_reg10^0 == 0 /\ -hsize^post26+hsize^0 == 0 /\ hshift11^0-hshift11^post26 == 0 /\ -m122^post26+m122^0 == 0 /\ __const_9^0-__const_9^post26 == 0 /\ -tabort4^post26+tabort4^0 == 0 /\ -i29^post26+i29^0 == 0 /\ -i41^post26+i41^0 == 0 /\ -__const_2147483647^post26+__const_2147483647^0 == 0 /\ free_ent^0-free_ent^post26 == 0 /\ -__const_10000^post26+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post26 == 0 /\ out_count^0-out_count^post26 == 0 /\ bits33^0-bits33^post26 == 0 /\ -n_bits^post26+n_bits^0 == 0 /\ n40^0-n40^post26 == 0 /\ incnt^0-incnt^post26 == 0 /\ -disp9^post26+disp9^0 == 0 /\ -in_count^post26+in_count^0 == 0 /\ __const_16^0-__const_16^post26 == 0 /\ -tmp___024^post26+tmp___024^0 == 0 /\ -i6^post26+i6^0 == 0 /\ maxbits^0-maxbits^post26 == 0 /\ __const_257^0-__const_257^post26 == 0 /\ apsim_incnt^0-apsim_incnt^post26 == 0 /\ ret_getbyte25^0-ret_getbyte25^post26 == 0 /\ -fcode5^post26+fcode5^0 == 0 /\ -ratio^post26+ratio^0 == 0 /\ -ret_getbyte18^post26+ret_getbyte18^0 == 0 /\ count^0-count^post26 == 0 /\ hsize___019^0-hsize___019^post26 == 0 /\ __const_65536^0-__const_65536^post26 == 0 /\ ent8^0-ent8^post26 == 0 /\ -checkpoint^post26+checkpoint^0 == 0 /\ -clear_flg^post26+clear_flg^0 == 0 /\ i21^0-i21^post26 == 0 /\ exit_stat^0-exit_stat^post26 == 0 /\ -__const_256^post26+__const_256^0 == 0 /\ -__const_429496^post26+__const_429496^0 == 0 /\ -seed2^post26+seed2^0 == 0 /\ offset^post26 == 0 /\ -i3^post26+i3^0 == 0 /\ tmp12^0-tmp12^post26 == 0 /\ -block_compress^post26+block_compress^0 == 0 /\ -n44^post26+n44^0 == 0 /\ m130^0-m130^post26 == 0 /\ i45^0-i45^post26 == 0 /\ c37^0-c37^post26 == 0 /\ __const_53^0-__const_53^post26 == 0 /\ -r_off32^post26+r_off32^0 == 0 /\ -code31^post26+code31^0 == 0 /\ -tmp___017^post26+tmp___017^0 == 0 /\ __const_8^0-__const_8^post26 == 0), cost: 1
	New rule:
	l26 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^post26, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality c7^post26 = c7^0
		
		propagated equality rat26^post26 = rat26^0
		
		propagated equality tmp___115^post26 = tmp___115^0
		
		propagated equality maxcode^post26 = maxcode^0
		
		propagated equality __const_50^post26 = __const_50^0
		
		propagated equality __const_8388607^post26 = __const_8388607^0
		
		propagated equality tmp___014^post26 = tmp___014^0
		
		propagated equality apsim_bound11113^post26 = apsim_bound11113^0
		
		propagated equality hsize___027^post26 = hsize___027^0
		
		propagated equality hsize_reg10^post26 = hsize_reg10^0
		
		propagated equality hsize^post26 = hsize^0
		
		propagated equality hshift11^post26 = hshift11^0
		
		propagated equality m122^post26 = m122^0
		
		propagated equality __const_9^post26 = __const_9^0
		
		propagated equality tabort4^post26 = tabort4^0
		
		propagated equality i29^post26 = i29^0
		
		propagated equality i41^post26 = i41^0
		
		propagated equality __const_2147483647^post26 = __const_2147483647^0
		
		propagated equality free_ent^post26 = free_ent^0
		
		propagated equality __const_10000^post26 = __const_10000^0
		
		propagated equality maxmaxcode^post26 = maxmaxcode^0
		
		propagated equality out_count^post26 = out_count^0
		
		propagated equality bits33^post26 = bits33^0
		
		propagated equality n_bits^post26 = n_bits^0
		
		propagated equality n40^post26 = n40^0
		
		propagated equality incnt^post26 = incnt^0
		
		propagated equality disp9^post26 = disp9^0
		
		propagated equality in_count^post26 = in_count^0
		
		propagated equality __const_16^post26 = __const_16^0
		
		propagated equality tmp___024^post26 = tmp___024^0
		
		propagated equality i6^post26 = i6^0
		
		propagated equality maxbits^post26 = maxbits^0
		
		propagated equality __const_257^post26 = __const_257^0
		
		propagated equality apsim_incnt^post26 = apsim_incnt^0
		
		propagated equality ret_getbyte25^post26 = ret_getbyte25^0
		
		propagated equality fcode5^post26 = fcode5^0
		
		propagated equality ratio^post26 = ratio^0
		
		propagated equality ret_getbyte18^post26 = ret_getbyte18^0
		
		propagated equality count^post26 = count^0
		
		propagated equality hsize___019^post26 = hsize___019^0
		
		propagated equality __const_65536^post26 = __const_65536^0
		
		propagated equality ent8^post26 = ent8^0
		
		propagated equality checkpoint^post26 = checkpoint^0
		
		propagated equality clear_flg^post26 = clear_flg^0
		
		propagated equality i21^post26 = i21^0
		
		propagated equality exit_stat^post26 = exit_stat^0
		
		propagated equality __const_256^post26 = __const_256^0
		
		propagated equality __const_429496^post26 = __const_429496^0
		
		propagated equality seed2^post26 = seed2^0
		
		propagated equality offset^post26 = 0
		
		propagated equality i3^post26 = i3^0
		
		propagated equality tmp12^post26 = tmp12^0
		
		propagated equality block_compress^post26 = block_compress^0
		
		propagated equality n44^post26 = n44^0
		
		propagated equality m130^post26 = m130^0
		
		propagated equality i45^post26 = i45^0
		
		propagated equality c37^post26 = c37^0
		
		propagated equality __const_53^post26 = __const_53^0
		
		propagated equality r_off32^post26 = r_off32^0
		
		propagated equality code31^post26 = code31^0
		
		propagated equality tmp___017^post26 = tmp___017^0
		
		propagated equality __const_8^post26 = __const_8^0
		
	Simplified Guard

	Original rule:
	l26 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^post26, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l26 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^post26, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l26 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^post26, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l26 -> l27 : bytes_out^0'=bytes_out^post26, offset^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l28 -> l26 : __const_10000^0'=__const_10000^post27, __const_16^0'=__const_16^post27, __const_2147483647^0'=__const_2147483647^post27, __const_256^0'=__const_256^post27, __const_257^0'=__const_257^post27, __const_429496^0'=__const_429496^post27, __const_50^0'=__const_50^post27, __const_53^0'=__const_53^post27, __const_65536^0'=__const_65536^post27, __const_8388607^0'=__const_8388607^post27, __const_8^0'=__const_8^post27, __const_9^0'=__const_9^post27, apsim_bound11113^0'=apsim_bound11113^post27, apsim_incnt^0'=apsim_incnt^post27, bits33^0'=bits33^post27, block_compress^0'=block_compress^post27, bytes_out^0'=bytes_out^post27, c37^0'=c37^post27, c7^0'=c7^post27, checkpoint^0'=checkpoint^post27, clear_flg^0'=clear_flg^post27, code31^0'=code31^post27, count^0'=count^post27, disp9^0'=disp9^post27, ent8^0'=ent8^post27, exit_stat^0'=exit_stat^post27, fcode5^0'=fcode5^post27, free_ent^0'=free_ent^post27, hshift11^0'=hshift11^post27, hsize^0'=hsize^post27, hsize___019^0'=hsize___019^post27, hsize___027^0'=hsize___027^post27, hsize_reg10^0'=hsize_reg10^post27, i21^0'=i21^post27, i29^0'=i29^post27, i3^0'=i3^post27, i41^0'=i41^post27, i45^0'=i45^post27, i6^0'=i6^post27, in_count^0'=in_count^post27, incnt^0'=incnt^post27, m122^0'=m122^post27, m130^0'=m130^post27, maxbits^0'=maxbits^post27, maxcode^0'=maxcode^post27, maxmaxcode^0'=maxmaxcode^post27, n40^0'=n40^post27, n44^0'=n44^post27, n_bits^0'=n_bits^post27, offset^0'=offset^post27, out_count^0'=out_count^post27, r_off32^0'=r_off32^post27, rat26^0'=rat26^post27, ratio^0'=ratio^post27, ret_getbyte18^0'=ret_getbyte18^post27, ret_getbyte25^0'=ret_getbyte25^post27, seed2^0'=seed2^post27, tabort4^0'=tabort4^post27, tmp12^0'=tmp12^post27, tmp___014^0'=tmp___014^post27, tmp___017^0'=tmp___017^post27, tmp___024^0'=tmp___024^post27, tmp___115^0'=tmp___115^post27, (ret_getbyte25^0-ret_getbyte25^post27 == 0 /\ exit_stat^0-exit_stat^post27 == 0 /\ -ratio^post27+ratio^0 == 0 /\ tmp12^0-tmp12^post27 == 0 /\ __const_53^0-__const_53^post27 == 0 /\ free_ent^0-free_ent^post27 == 0 /\ -in_count^post27+in_count^0 == 0 /\ -ret_getbyte18^post27+ret_getbyte18^0 == 0 /\ maxmaxcode^0-maxmaxcode^post27 == 0 /\ -code31^post27+code31^0 == 0 /\ out_count^0-out_count^post27 == 0 /\ -apsim_incnt^post27+apsim_incnt^0 == 0 /\ __const_16^0-__const_16^post27 == 0 /\ -__const_65536^post27+__const_65536^0 == 0 /\ -__const_9^post27+__const_9^0 == 0 /\ -disp9^post27+disp9^0 == 0 /\ offset^0-offset^post27 == 0 /\ n40^0-n40^post27 == 0 /\ -i45^post27+i45^0 == 0 /\ -incnt^post27+incnt^0 == 0 /\ __const_257^0-__const_257^post27 == 0 /\ n44^0-n44^post27 == 0 /\ tmp___014^0-tmp___014^post27 == 0 /\ -block_compress^post27+block_compress^0 == 0 /\ -fcode5^post27+fcode5^0 == 0 /\ -__const_8^post27+__const_8^0 == 0 /\ -__const_8388607^post27+__const_8388607^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post27 == 0 /\ -ent8^post27+ent8^0 == 0 /\ -r_off32^post27+r_off32^0 == 0 /\ i21^0-i21^post27 == 0 /\ __const_50^0-__const_50^post27 == 0 /\ __const_256^0-__const_256^post27 == 0 /\ -tmp___017^post27+tmp___017^0 == 0 /\ -maxbits^post27+maxbits^0 == 0 /\ -maxcode^post27+maxcode^0 == 0 /\ count^0-count^post27 == 0 /\ -__const_429496^post27+__const_429496^0 == 0 /\ m130^0-m130^post27 == 0 /\ -hsize_reg10^post27+hsize_reg10^0 == 0 /\ -m122^post27+m122^0 == 0 /\ c37^0-c37^post27 == 0 /\ bits33^0-bits33^post27 == 0 /\ -hsize^post27+hsize^0 == 0 /\ hsize___027^0-hsize___027^post27 == 0 /\ -i41^post27+i41^0 == 0 /\ checkpoint^0-checkpoint^post27 == 0 /\ tmp___115^0-tmp___115^post27 == 0 /\ rat26^0-rat26^post27 == 0 /\ -n_bits^post27+n_bits^0 == 0 /\ seed2^0-seed2^post27 == 0 /\ -tabort4^post27+tabort4^0 == 0 /\ -__const_2147483647^post27+__const_2147483647^0 == 0 /\ hsize___019^0-hsize___019^post27 == 0 /\ -clear_flg^post27+clear_flg^0 == 0 /\ -bytes_out^post27+bytes_out^0 == 0 /\ hshift11^0-hshift11^post27 == 0 /\ i6^0-i6^post27 == 0 /\ __const_10000^0-__const_10000^post27 == 0 /\ -i29^post27+i29^0 == 0 /\ -c7^post27+c7^0 == 0 /\ i3^0-i3^post27 == 0 /\ -tmp___024^post27+tmp___024^0 == 0), cost: 1
	New rule:
	l28 -> l26 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality ret_getbyte25^post27 = ret_getbyte25^0
		
		propagated equality exit_stat^post27 = exit_stat^0
		
		propagated equality ratio^post27 = ratio^0
		
		propagated equality tmp12^post27 = tmp12^0
		
		propagated equality __const_53^post27 = __const_53^0
		
		propagated equality free_ent^post27 = free_ent^0
		
		propagated equality in_count^post27 = in_count^0
		
		propagated equality ret_getbyte18^post27 = ret_getbyte18^0
		
		propagated equality maxmaxcode^post27 = maxmaxcode^0
		
		propagated equality code31^post27 = code31^0
		
		propagated equality out_count^post27 = out_count^0
		
		propagated equality apsim_incnt^post27 = apsim_incnt^0
		
		propagated equality __const_16^post27 = __const_16^0
		
		propagated equality __const_65536^post27 = __const_65536^0
		
		propagated equality __const_9^post27 = __const_9^0
		
		propagated equality disp9^post27 = disp9^0
		
		propagated equality offset^post27 = offset^0
		
		propagated equality n40^post27 = n40^0
		
		propagated equality i45^post27 = i45^0
		
		propagated equality incnt^post27 = incnt^0
		
		propagated equality __const_257^post27 = __const_257^0
		
		propagated equality n44^post27 = n44^0
		
		propagated equality tmp___014^post27 = tmp___014^0
		
		propagated equality block_compress^post27 = block_compress^0
		
		propagated equality fcode5^post27 = fcode5^0
		
		propagated equality __const_8^post27 = __const_8^0
		
		propagated equality __const_8388607^post27 = __const_8388607^0
		
		propagated equality apsim_bound11113^post27 = apsim_bound11113^0
		
		propagated equality ent8^post27 = ent8^0
		
		propagated equality r_off32^post27 = r_off32^0
		
		propagated equality i21^post27 = i21^0
		
		propagated equality __const_50^post27 = __const_50^0
		
		propagated equality __const_256^post27 = __const_256^0
		
		propagated equality tmp___017^post27 = tmp___017^0
		
		propagated equality maxbits^post27 = maxbits^0
		
		propagated equality maxcode^post27 = maxcode^0
		
		propagated equality count^post27 = count^0
		
		propagated equality __const_429496^post27 = __const_429496^0
		
		propagated equality m130^post27 = m130^0
		
		propagated equality hsize_reg10^post27 = hsize_reg10^0
		
		propagated equality m122^post27 = m122^0
		
		propagated equality c37^post27 = c37^0
		
		propagated equality bits33^post27 = bits33^0
		
		propagated equality hsize^post27 = hsize^0
		
		propagated equality hsize___027^post27 = hsize___027^0
		
		propagated equality i41^post27 = i41^0
		
		propagated equality checkpoint^post27 = checkpoint^0
		
		propagated equality tmp___115^post27 = tmp___115^0
		
		propagated equality rat26^post27 = rat26^0
		
		propagated equality n_bits^post27 = n_bits^0
		
		propagated equality seed2^post27 = seed2^0
		
		propagated equality tabort4^post27 = tabort4^0
		
		propagated equality __const_2147483647^post27 = __const_2147483647^0
		
		propagated equality hsize___019^post27 = hsize___019^0
		
		propagated equality clear_flg^post27 = clear_flg^0
		
		propagated equality bytes_out^post27 = bytes_out^0
		
		propagated equality hshift11^post27 = hshift11^0
		
		propagated equality i6^post27 = i6^0
		
		propagated equality __const_10000^post27 = __const_10000^0
		
		propagated equality i29^post27 = i29^0
		
		propagated equality c7^post27 = c7^0
		
		propagated equality i3^post27 = i3^0
		
		propagated equality tmp___024^post27 = tmp___024^0
		
	Simplified Guard

	Original rule:
	l28 -> l26 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l28 -> l26 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l28 -> l26 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l28 -> l26 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l29 -> l28 : __const_10000^0'=__const_10000^post28, __const_16^0'=__const_16^post28, __const_2147483647^0'=__const_2147483647^post28, __const_256^0'=__const_256^post28, __const_257^0'=__const_257^post28, __const_429496^0'=__const_429496^post28, __const_50^0'=__const_50^post28, __const_53^0'=__const_53^post28, __const_65536^0'=__const_65536^post28, __const_8388607^0'=__const_8388607^post28, __const_8^0'=__const_8^post28, __const_9^0'=__const_9^post28, apsim_bound11113^0'=apsim_bound11113^post28, apsim_incnt^0'=apsim_incnt^post28, bits33^0'=bits33^post28, block_compress^0'=block_compress^post28, bytes_out^0'=bytes_out^post28, c37^0'=c37^post28, c7^0'=c7^post28, checkpoint^0'=checkpoint^post28, clear_flg^0'=clear_flg^post28, code31^0'=code31^post28, count^0'=count^post28, disp9^0'=disp9^post28, ent8^0'=ent8^post28, exit_stat^0'=exit_stat^post28, fcode5^0'=fcode5^post28, free_ent^0'=free_ent^post28, hshift11^0'=hshift11^post28, hsize^0'=hsize^post28, hsize___019^0'=hsize___019^post28, hsize___027^0'=hsize___027^post28, hsize_reg10^0'=hsize_reg10^post28, i21^0'=i21^post28, i29^0'=i29^post28, i3^0'=i3^post28, i41^0'=i41^post28, i45^0'=i45^post28, i6^0'=i6^post28, in_count^0'=in_count^post28, incnt^0'=incnt^post28, m122^0'=m122^post28, m130^0'=m130^post28, maxbits^0'=maxbits^post28, maxcode^0'=maxcode^post28, maxmaxcode^0'=maxmaxcode^post28, n40^0'=n40^post28, n44^0'=n44^post28, n_bits^0'=n_bits^post28, offset^0'=offset^post28, out_count^0'=out_count^post28, r_off32^0'=r_off32^post28, rat26^0'=rat26^post28, ratio^0'=ratio^post28, ret_getbyte18^0'=ret_getbyte18^post28, ret_getbyte25^0'=ret_getbyte25^post28, seed2^0'=seed2^post28, tabort4^0'=tabort4^post28, tmp12^0'=tmp12^post28, tmp___014^0'=tmp___014^post28, tmp___017^0'=tmp___017^post28, tmp___024^0'=tmp___024^post28, tmp___115^0'=tmp___115^post28, (ent8^0-ent8^post28 == 0 /\ n40^0-n40^post28 == 0 /\ apsim_bound11113^0-apsim_bound11113^post28 == 0 /\ -i29^post28+i29^0 == 0 /\ -i45^post28+i45^0 == 0 /\ -__const_429496^post28+__const_429496^0 == 0 /\ c7^0-c7^post28 == 0 /\ hshift11^0-hshift11^post28 == 0 /\ -i41^post28+i41^0 == 0 /\ rat26^0-rat26^post28 == 0 /\ free_ent^0-free_ent^post28 == 0 /\ tmp___115^0-tmp___115^post28 == 0 /\ __const_9^0-__const_9^post28 == 0 /\ out_count^0-out_count^post28 == 0 /\ -__const_65536^post28+__const_65536^0 == 0 /\ __const_50^0-__const_50^post28 == 0 /\ tmp___014^0-tmp___014^post28 == 0 /\ i21^0-i21^post28 == 0 /\ -hsize_reg10^post28+hsize_reg10^0 == 0 /\ -tmp___024^post28+tmp___024^0 == 0 /\ exit_stat^0-exit_stat^post28 == 0 /\ offset^0-offset^post28 == 0 /\ -m122^post28+m122^0 == 0 /\ maxmaxcode^0-maxmaxcode^post28 == 0 /\ -incnt^post28+incnt^0 == 0 /\ __const_16^0-__const_16^post28 == 0 /\ -__const_10000^post28+__const_10000^0 == 0 /\ -bytes_out^post28+bytes_out^0 == 0 /\ -clear_flg^post28+clear_flg^0 == 0 /\ -tabort4^post28+tabort4^0 == 0 /\ bits33^0-bits33^post28 == 0 /\ -__const_2147483647^post28+__const_2147483647^0 == 0 /\ m130^0-m130^post28 == 0 /\ __const_16^0-i45^0 <= 0 /\ __const_257^0-__const_257^post28 == 0 /\ apsim_incnt^0-apsim_incnt^post28 == 0 /\ hsize___019^0-hsize___019^post28 == 0 /\ -r_off32^post28+r_off32^0 == 0 /\ -ratio^post28+ratio^0 == 0 /\ -disp9^post28+disp9^0 == 0 /\ -count^post28+count^0 == 0 /\ n44^0-n44^post28 == 0 /\ -ret_getbyte18^post28+ret_getbyte18^0 == 0 /\ -i6^post28+i6^0 == 0 /\ -in_count^post28+in_count^0 == 0 /\ -n_bits^post28+n_bits^0 == 0 /\ maxbits^0-maxbits^post28 == 0 /\ seed2^0-seed2^post28 == 0 /\ -fcode5^post28+fcode5^0 == 0 /\ tmp12^0-tmp12^post28 == 0 /\ __const_53^0-__const_53^post28 == 0 /\ i3^0-i3^post28 == 0 /\ -hsize^post28+hsize^0 == 0 /\ __const_8^0-__const_8^post28 == 0 /\ code31^0-code31^post28 == 0 /\ -tmp___017^post28+tmp___017^0 == 0 /\ -hsize___027^post28+hsize___027^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post28 == 0 /\ -block_compress^post28+block_compress^0 == 0 /\ -checkpoint^post28+checkpoint^0 == 0 /\ -maxcode^post28+maxcode^0 == 0 /\ -__const_8388607^post28+__const_8388607^0 == 0 /\ -__const_256^post28+__const_256^0 == 0 /\ c37^0-c37^post28 == 0), cost: 1
	New rule:
	l29 -> l28 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ __const_16^0-i45^0 <= 0), cost: 1
	
		propagated equality ent8^post28 = ent8^0
		
		propagated equality n40^post28 = n40^0
		
		propagated equality apsim_bound11113^post28 = apsim_bound11113^0
		
		propagated equality i29^post28 = i29^0
		
		propagated equality i45^post28 = i45^0
		
		propagated equality __const_429496^post28 = __const_429496^0
		
		propagated equality c7^post28 = c7^0
		
		propagated equality hshift11^post28 = hshift11^0
		
		propagated equality i41^post28 = i41^0
		
		propagated equality rat26^post28 = rat26^0
		
		propagated equality free_ent^post28 = free_ent^0
		
		propagated equality tmp___115^post28 = tmp___115^0
		
		propagated equality __const_9^post28 = __const_9^0
		
		propagated equality out_count^post28 = out_count^0
		
		propagated equality __const_65536^post28 = __const_65536^0
		
		propagated equality __const_50^post28 = __const_50^0
		
		propagated equality tmp___014^post28 = tmp___014^0
		
		propagated equality i21^post28 = i21^0
		
		propagated equality hsize_reg10^post28 = hsize_reg10^0
		
		propagated equality tmp___024^post28 = tmp___024^0
		
		propagated equality exit_stat^post28 = exit_stat^0
		
		propagated equality offset^post28 = offset^0
		
		propagated equality m122^post28 = m122^0
		
		propagated equality maxmaxcode^post28 = maxmaxcode^0
		
		propagated equality incnt^post28 = incnt^0
		
		propagated equality __const_16^post28 = __const_16^0
		
		propagated equality __const_10000^post28 = __const_10000^0
		
		propagated equality bytes_out^post28 = bytes_out^0
		
		propagated equality clear_flg^post28 = clear_flg^0
		
		propagated equality tabort4^post28 = tabort4^0
		
		propagated equality bits33^post28 = bits33^0
		
		propagated equality __const_2147483647^post28 = __const_2147483647^0
		
		propagated equality m130^post28 = m130^0
		
		propagated equality __const_257^post28 = __const_257^0
		
		propagated equality apsim_incnt^post28 = apsim_incnt^0
		
		propagated equality hsize___019^post28 = hsize___019^0
		
		propagated equality r_off32^post28 = r_off32^0
		
		propagated equality ratio^post28 = ratio^0
		
		propagated equality disp9^post28 = disp9^0
		
		propagated equality count^post28 = count^0
		
		propagated equality n44^post28 = n44^0
		
		propagated equality ret_getbyte18^post28 = ret_getbyte18^0
		
		propagated equality i6^post28 = i6^0
		
		propagated equality in_count^post28 = in_count^0
		
		propagated equality n_bits^post28 = n_bits^0
		
		propagated equality maxbits^post28 = maxbits^0
		
		propagated equality seed2^post28 = seed2^0
		
		propagated equality fcode5^post28 = fcode5^0
		
		propagated equality tmp12^post28 = tmp12^0
		
		propagated equality __const_53^post28 = __const_53^0
		
		propagated equality i3^post28 = i3^0
		
		propagated equality hsize^post28 = hsize^0
		
		propagated equality __const_8^post28 = __const_8^0
		
		propagated equality code31^post28 = code31^0
		
		propagated equality tmp___017^post28 = tmp___017^0
		
		propagated equality hsize___027^post28 = hsize___027^0
		
		propagated equality ret_getbyte25^post28 = ret_getbyte25^0
		
		propagated equality block_compress^post28 = block_compress^0
		
		propagated equality checkpoint^post28 = checkpoint^0
		
		propagated equality maxcode^post28 = maxcode^0
		
		propagated equality __const_8388607^post28 = __const_8388607^0
		
		propagated equality __const_256^post28 = __const_256^0
		
		propagated equality c37^post28 = c37^0
		
	Simplified Guard

	Original rule:
	l29 -> l28 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ __const_16^0-i45^0 <= 0), cost: 1
	New rule:
	l29 -> l28 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, __const_16^0-i45^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l29 -> l28 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, __const_16^0-i45^0 <= 0, cost: 1
	New rule:
	l29 -> l28 : __const_16^0-i45^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l29 -> l30 : __const_10000^0'=__const_10000^post29, __const_16^0'=__const_16^post29, __const_2147483647^0'=__const_2147483647^post29, __const_256^0'=__const_256^post29, __const_257^0'=__const_257^post29, __const_429496^0'=__const_429496^post29, __const_50^0'=__const_50^post29, __const_53^0'=__const_53^post29, __const_65536^0'=__const_65536^post29, __const_8388607^0'=__const_8388607^post29, __const_8^0'=__const_8^post29, __const_9^0'=__const_9^post29, apsim_bound11113^0'=apsim_bound11113^post29, apsim_incnt^0'=apsim_incnt^post29, bits33^0'=bits33^post29, block_compress^0'=block_compress^post29, bytes_out^0'=bytes_out^post29, c37^0'=c37^post29, c7^0'=c7^post29, checkpoint^0'=checkpoint^post29, clear_flg^0'=clear_flg^post29, code31^0'=code31^post29, count^0'=count^post29, disp9^0'=disp9^post29, ent8^0'=ent8^post29, exit_stat^0'=exit_stat^post29, fcode5^0'=fcode5^post29, free_ent^0'=free_ent^post29, hshift11^0'=hshift11^post29, hsize^0'=hsize^post29, hsize___019^0'=hsize___019^post29, hsize___027^0'=hsize___027^post29, hsize_reg10^0'=hsize_reg10^post29, i21^0'=i21^post29, i29^0'=i29^post29, i3^0'=i3^post29, i41^0'=i41^post29, i45^0'=i45^post29, i6^0'=i6^post29, in_count^0'=in_count^post29, incnt^0'=incnt^post29, m122^0'=m122^post29, m130^0'=m130^post29, maxbits^0'=maxbits^post29, maxcode^0'=maxcode^post29, maxmaxcode^0'=maxmaxcode^post29, n40^0'=n40^post29, n44^0'=n44^post29, n_bits^0'=n_bits^post29, offset^0'=offset^post29, out_count^0'=out_count^post29, r_off32^0'=r_off32^post29, rat26^0'=rat26^post29, ratio^0'=ratio^post29, ret_getbyte18^0'=ret_getbyte18^post29, ret_getbyte25^0'=ret_getbyte25^post29, seed2^0'=seed2^post29, tabort4^0'=tabort4^post29, tmp12^0'=tmp12^post29, tmp___014^0'=tmp___014^post29, tmp___017^0'=tmp___017^post29, tmp___024^0'=tmp___024^post29, tmp___115^0'=tmp___115^post29, (-n44^post29+n44^0 == 0 /\ -n_bits^post29+n_bits^0 == 0 /\ -r_off32^post29+r_off32^0 == 0 /\ __const_16^0-__const_16^post29 == 0 /\ -hsize^post29+hsize^0 == 0 /\ __const_50^0-__const_50^post29 == 0 /\ -__const_2147483647^post29+__const_2147483647^0 == 0 /\ tmp___115^0-tmp___115^post29 == 0 /\ -tabort4^post29+tabort4^0 == 0 /\ __const_53^0-__const_53^post29 == 0 /\ hshift11^0-hshift11^post29 == 0 /\ rat26^0-rat26^post29 == 0 /\ -__const_10000^post29+__const_10000^0 == 0 /\ -maxcode^post29+maxcode^0 == 0 /\ __const_256^0-__const_256^post29 == 0 /\ -1-i45^0+i45^post29 == 0 /\ free_ent^0-free_ent^post29 == 0 /\ n40^0-n40^post29 == 0 /\ apsim_bound11113^0-apsim_bound11113^post29 == 0 /\ -__const_8^post29+__const_8^0 == 0 /\ i29^0-i29^post29 == 0 /\ out_count^0-out_count^post29 == 0 /\ -i6^post29+i6^0 == 0 /\ ent8^0-ent8^post29 == 0 /\ -__const_65536^post29+__const_65536^0 == 0 /\ -hsize___027^post29+hsize___027^0 == 0 /\ __const_9^0-__const_9^post29 == 0 /\ exit_stat^0-exit_stat^post29 == 0 /\ -c7^post29+c7^0 == 0 /\ -clear_flg^post29+clear_flg^0 == 0 /\ -bytes_out^post29+bytes_out^0 == 0 /\ offset^0-offset^post29 == 0 /\ -incnt^post29+incnt^0 == 0 /\ i21^0-i21^post29 == 0 /\ maxbits^0-maxbits^post29 == 0 /\ bits33^0-bits33^post29 == 0 /\ -checkpoint^post29+checkpoint^0 == 0 /\ -m122^post29+m122^0 == 0 /\ -__const_8388607^post29+__const_8388607^0 == 0 /\ __const_257^0-__const_257^post29 == 0 /\ -fcode5^post29+fcode5^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post29 == 0 /\ -tmp___024^post29+tmp___024^0 == 0 /\ -tmp___017^post29+tmp___017^0 == 0 /\ maxmaxcode^0-maxmaxcode^post29 == 0 /\ hsize___019^0-hsize___019^post29 == 0 /\ -i41^post29+i41^0 == 0 /\ -i3^post29+i3^0 == 0 /\ apsim_incnt^0-apsim_incnt^post29 == 0 /\ -block_compress^post29+block_compress^0 == 0 /\ count^0-count^post29 == 0 /\ -ret_getbyte18^post29+ret_getbyte18^0 == 0 /\ c37^0-c37^post29 == 0 /\ -code31^post29+code31^0 == 0 /\ tmp___014^0-tmp___014^post29 == 0 /\ 1-__const_16^0+i45^0 <= 0 /\ -in_count^post29+in_count^0 == 0 /\ tmp12^0-tmp12^post29 == 0 /\ ratio^0-ratio^post29 == 0 /\ -__const_429496^post29+__const_429496^0 == 0 /\ seed2^0-seed2^post29 == 0 /\ -hsize_reg10^post29+hsize_reg10^0 == 0 /\ -disp9^post29+disp9^0 == 0 /\ m130^0-m130^post29 == 0), cost: 1
	New rule:
	l29 -> l30 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=1+i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-__const_16^0+i45^0 <= 0), cost: 1
	
		propagated equality n44^post29 = n44^0
		
		propagated equality n_bits^post29 = n_bits^0
		
		propagated equality r_off32^post29 = r_off32^0
		
		propagated equality __const_16^post29 = __const_16^0
		
		propagated equality hsize^post29 = hsize^0
		
		propagated equality __const_50^post29 = __const_50^0
		
		propagated equality __const_2147483647^post29 = __const_2147483647^0
		
		propagated equality tmp___115^post29 = tmp___115^0
		
		propagated equality tabort4^post29 = tabort4^0
		
		propagated equality __const_53^post29 = __const_53^0
		
		propagated equality hshift11^post29 = hshift11^0
		
		propagated equality rat26^post29 = rat26^0
		
		propagated equality __const_10000^post29 = __const_10000^0
		
		propagated equality maxcode^post29 = maxcode^0
		
		propagated equality __const_256^post29 = __const_256^0
		
		propagated equality i45^post29 = 1+i45^0
		
		propagated equality free_ent^post29 = free_ent^0
		
		propagated equality n40^post29 = n40^0
		
		propagated equality apsim_bound11113^post29 = apsim_bound11113^0
		
		propagated equality __const_8^post29 = __const_8^0
		
		propagated equality i29^post29 = i29^0
		
		propagated equality out_count^post29 = out_count^0
		
		propagated equality i6^post29 = i6^0
		
		propagated equality ent8^post29 = ent8^0
		
		propagated equality __const_65536^post29 = __const_65536^0
		
		propagated equality hsize___027^post29 = hsize___027^0
		
		propagated equality __const_9^post29 = __const_9^0
		
		propagated equality exit_stat^post29 = exit_stat^0
		
		propagated equality c7^post29 = c7^0
		
		propagated equality clear_flg^post29 = clear_flg^0
		
		propagated equality bytes_out^post29 = bytes_out^0
		
		propagated equality offset^post29 = offset^0
		
		propagated equality incnt^post29 = incnt^0
		
		propagated equality i21^post29 = i21^0
		
		propagated equality maxbits^post29 = maxbits^0
		
		propagated equality bits33^post29 = bits33^0
		
		propagated equality checkpoint^post29 = checkpoint^0
		
		propagated equality m122^post29 = m122^0
		
		propagated equality __const_8388607^post29 = __const_8388607^0
		
		propagated equality __const_257^post29 = __const_257^0
		
		propagated equality fcode5^post29 = fcode5^0
		
		propagated equality ret_getbyte25^post29 = ret_getbyte25^0
		
		propagated equality tmp___024^post29 = tmp___024^0
		
		propagated equality tmp___017^post29 = tmp___017^0
		
		propagated equality maxmaxcode^post29 = maxmaxcode^0
		
		propagated equality hsize___019^post29 = hsize___019^0
		
		propagated equality i41^post29 = i41^0
		
		propagated equality i3^post29 = i3^0
		
		propagated equality apsim_incnt^post29 = apsim_incnt^0
		
		propagated equality block_compress^post29 = block_compress^0
		
		propagated equality count^post29 = count^0
		
		propagated equality ret_getbyte18^post29 = ret_getbyte18^0
		
		propagated equality c37^post29 = c37^0
		
		propagated equality code31^post29 = code31^0
		
		propagated equality tmp___014^post29 = tmp___014^0
		
		propagated equality in_count^post29 = in_count^0
		
		propagated equality tmp12^post29 = tmp12^0
		
		propagated equality ratio^post29 = ratio^0
		
		propagated equality __const_429496^post29 = __const_429496^0
		
		propagated equality seed2^post29 = seed2^0
		
		propagated equality hsize_reg10^post29 = hsize_reg10^0
		
		propagated equality disp9^post29 = disp9^0
		
		propagated equality m130^post29 = m130^0
		
	Simplified Guard

	Original rule:
	l29 -> l30 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=1+i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-__const_16^0+i45^0 <= 0), cost: 1
	New rule:
	l29 -> l30 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=1+i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-__const_16^0+i45^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l29 -> l30 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=1+i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-__const_16^0+i45^0 <= 0, cost: 1
	New rule:
	l29 -> l30 : i45^0'=1+i45^0, 1-__const_16^0+i45^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l31 -> l28 : __const_10000^0'=__const_10000^post30, __const_16^0'=__const_16^post30, __const_2147483647^0'=__const_2147483647^post30, __const_256^0'=__const_256^post30, __const_257^0'=__const_257^post30, __const_429496^0'=__const_429496^post30, __const_50^0'=__const_50^post30, __const_53^0'=__const_53^post30, __const_65536^0'=__const_65536^post30, __const_8388607^0'=__const_8388607^post30, __const_8^0'=__const_8^post30, __const_9^0'=__const_9^post30, apsim_bound11113^0'=apsim_bound11113^post30, apsim_incnt^0'=apsim_incnt^post30, bits33^0'=bits33^post30, block_compress^0'=block_compress^post30, bytes_out^0'=bytes_out^post30, c37^0'=c37^post30, c7^0'=c7^post30, checkpoint^0'=checkpoint^post30, clear_flg^0'=clear_flg^post30, code31^0'=code31^post30, count^0'=count^post30, disp9^0'=disp9^post30, ent8^0'=ent8^post30, exit_stat^0'=exit_stat^post30, fcode5^0'=fcode5^post30, free_ent^0'=free_ent^post30, hshift11^0'=hshift11^post30, hsize^0'=hsize^post30, hsize___019^0'=hsize___019^post30, hsize___027^0'=hsize___027^post30, hsize_reg10^0'=hsize_reg10^post30, i21^0'=i21^post30, i29^0'=i29^post30, i3^0'=i3^post30, i41^0'=i41^post30, i45^0'=i45^post30, i6^0'=i6^post30, in_count^0'=in_count^post30, incnt^0'=incnt^post30, m122^0'=m122^post30, m130^0'=m130^post30, maxbits^0'=maxbits^post30, maxcode^0'=maxcode^post30, maxmaxcode^0'=maxmaxcode^post30, n40^0'=n40^post30, n44^0'=n44^post30, n_bits^0'=n_bits^post30, offset^0'=offset^post30, out_count^0'=out_count^post30, r_off32^0'=r_off32^post30, rat26^0'=rat26^post30, ratio^0'=ratio^post30, ret_getbyte18^0'=ret_getbyte18^post30, ret_getbyte25^0'=ret_getbyte25^post30, seed2^0'=seed2^post30, tabort4^0'=tabort4^post30, tmp12^0'=tmp12^post30, tmp___014^0'=tmp___014^post30, tmp___017^0'=tmp___017^post30, tmp___024^0'=tmp___024^post30, tmp___115^0'=tmp___115^post30, (-i6^post30+i6^0 == 0 /\ -tmp___024^post30+tmp___024^0 == 0 /\ -in_count^post30+in_count^0 == 0 /\ -__const_8388607^post30+__const_8388607^0 == 0 /\ -ret_getbyte18^post30+ret_getbyte18^0 == 0 /\ -apsim_incnt^post30+apsim_incnt^0 == 0 /\ -c7^post30+c7^0 == 0 /\ -i21^post30+i21^0 == 0 /\ -clear_flg^post30+clear_flg^0 == 0 /\ __const_16^0-__const_16^post30 == 0 /\ hsize___027^0-hsize___027^post30 == 0 /\ rat26^0-rat26^post30 == 0 /\ -__const_429496^post30+__const_429496^0 == 0 /\ -m122^post30+m122^0 == 0 /\ -i3^post30+i3^0 == 0 /\ tmp___115^0-tmp___115^post30 == 0 /\ exit_stat^0-exit_stat^post30 == 0 /\ __const_50^0-__const_50^post30 == 0 /\ -block_compress^post30+block_compress^0 == 0 /\ -disp9^post30+disp9^0 == 0 /\ i29^0-i29^post30 == 0 /\ hsize___019^0-hsize___019^post30 == 0 /\ m130^0-m130^post30 == 0 /\ apsim_bound11113^0-apsim_bound11113^post30 == 0 /\ __const_256^0-__const_256^post30 == 0 /\ -n44^post30+n44^0 == 0 /\ -r_off32^post30+r_off32^0 == 0 /\ __const_257^0-__const_257^post30 == 0 /\ hshift11^0-hshift11^post30 == 0 /\ -code31^post30+code31^0 == 0 /\ __const_53^0-__const_53^post30 == 0 /\ -__const_8^post30+__const_8^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post30 == 0 /\ tmp___017^0-tmp___017^post30 == 0 /\ free_ent^0-free_ent^post30 == 0 /\ -maxbits^post30+maxbits^0 == 0 /\ -maxcode^post30+maxcode^0 == 0 /\ maxmaxcode^0-maxmaxcode^post30 == 0 /\ out_count^0-out_count^post30 == 0 /\ -hsize_reg10^post30+hsize_reg10^0 == 0 /\ bits33^0-bits33^post30 == 0 /\ -hsize^post30+hsize^0 == 0 /\ i45^0-i45^post30 == 0 /\ c37^0-c37^post30 == 0 /\ -tabort4^post30+tabort4^0 == 0 /\ n40^0-n40^post30 == 0 /\ -seed2^post30+seed2^0 == 0 /\ offset^0-offset^post30 == 0 /\ -tmp___014^post30+tmp___014^0 == 0 /\ -__const_65536^post30+__const_65536^0 == 0 /\ -__const_2147483647^post30+__const_2147483647^0 == 0 /\ -fcode5^post30+fcode5^0 == 0 /\ -i41^post30+i41^0 == 0 /\ -incnt^post30+incnt^0 == 0 /\ -bytes_out^post30+bytes_out^0 == 0 /\ -ent8^post30+ent8^0 == 0 /\ ratio^0-ratio^post30 == 0 /\ checkpoint^0-checkpoint^post30 == 0 /\ __const_10000^0-__const_10000^post30 == 0 /\ count^0-count^post30 == 0 /\ -n_bits^post30+n_bits^0 == 0 /\ tmp12^0-tmp12^post30 == 0 /\ -__const_9^post30+__const_9^0 == 0 /\ n44^0-i45^0 <= 0), cost: 1
	New rule:
	l31 -> l28 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ n44^0-i45^0 <= 0), cost: 1
	
		propagated equality i6^post30 = i6^0
		
		propagated equality tmp___024^post30 = tmp___024^0
		
		propagated equality in_count^post30 = in_count^0
		
		propagated equality __const_8388607^post30 = __const_8388607^0
		
		propagated equality ret_getbyte18^post30 = ret_getbyte18^0
		
		propagated equality apsim_incnt^post30 = apsim_incnt^0
		
		propagated equality c7^post30 = c7^0
		
		propagated equality i21^post30 = i21^0
		
		propagated equality clear_flg^post30 = clear_flg^0
		
		propagated equality __const_16^post30 = __const_16^0
		
		propagated equality hsize___027^post30 = hsize___027^0
		
		propagated equality rat26^post30 = rat26^0
		
		propagated equality __const_429496^post30 = __const_429496^0
		
		propagated equality m122^post30 = m122^0
		
		propagated equality i3^post30 = i3^0
		
		propagated equality tmp___115^post30 = tmp___115^0
		
		propagated equality exit_stat^post30 = exit_stat^0
		
		propagated equality __const_50^post30 = __const_50^0
		
		propagated equality block_compress^post30 = block_compress^0
		
		propagated equality disp9^post30 = disp9^0
		
		propagated equality i29^post30 = i29^0
		
		propagated equality hsize___019^post30 = hsize___019^0
		
		propagated equality m130^post30 = m130^0
		
		propagated equality apsim_bound11113^post30 = apsim_bound11113^0
		
		propagated equality __const_256^post30 = __const_256^0
		
		propagated equality n44^post30 = n44^0
		
		propagated equality r_off32^post30 = r_off32^0
		
		propagated equality __const_257^post30 = __const_257^0
		
		propagated equality hshift11^post30 = hshift11^0
		
		propagated equality code31^post30 = code31^0
		
		propagated equality __const_53^post30 = __const_53^0
		
		propagated equality __const_8^post30 = __const_8^0
		
		propagated equality ret_getbyte25^post30 = ret_getbyte25^0
		
		propagated equality tmp___017^post30 = tmp___017^0
		
		propagated equality free_ent^post30 = free_ent^0
		
		propagated equality maxbits^post30 = maxbits^0
		
		propagated equality maxcode^post30 = maxcode^0
		
		propagated equality maxmaxcode^post30 = maxmaxcode^0
		
		propagated equality out_count^post30 = out_count^0
		
		propagated equality hsize_reg10^post30 = hsize_reg10^0
		
		propagated equality bits33^post30 = bits33^0
		
		propagated equality hsize^post30 = hsize^0
		
		propagated equality i45^post30 = i45^0
		
		propagated equality c37^post30 = c37^0
		
		propagated equality tabort4^post30 = tabort4^0
		
		propagated equality n40^post30 = n40^0
		
		propagated equality seed2^post30 = seed2^0
		
		propagated equality offset^post30 = offset^0
		
		propagated equality tmp___014^post30 = tmp___014^0
		
		propagated equality __const_65536^post30 = __const_65536^0
		
		propagated equality __const_2147483647^post30 = __const_2147483647^0
		
		propagated equality fcode5^post30 = fcode5^0
		
		propagated equality i41^post30 = i41^0
		
		propagated equality incnt^post30 = incnt^0
		
		propagated equality bytes_out^post30 = bytes_out^0
		
		propagated equality ent8^post30 = ent8^0
		
		propagated equality ratio^post30 = ratio^0
		
		propagated equality checkpoint^post30 = checkpoint^0
		
		propagated equality __const_10000^post30 = __const_10000^0
		
		propagated equality count^post30 = count^0
		
		propagated equality n_bits^post30 = n_bits^0
		
		propagated equality tmp12^post30 = tmp12^0
		
		propagated equality __const_9^post30 = __const_9^0
		
	Simplified Guard

	Original rule:
	l31 -> l28 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ n44^0-i45^0 <= 0), cost: 1
	New rule:
	l31 -> l28 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, n44^0-i45^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l31 -> l28 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, n44^0-i45^0 <= 0, cost: 1
	New rule:
	l31 -> l28 : n44^0-i45^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l31 -> l29 : __const_10000^0'=__const_10000^post31, __const_16^0'=__const_16^post31, __const_2147483647^0'=__const_2147483647^post31, __const_256^0'=__const_256^post31, __const_257^0'=__const_257^post31, __const_429496^0'=__const_429496^post31, __const_50^0'=__const_50^post31, __const_53^0'=__const_53^post31, __const_65536^0'=__const_65536^post31, __const_8388607^0'=__const_8388607^post31, __const_8^0'=__const_8^post31, __const_9^0'=__const_9^post31, apsim_bound11113^0'=apsim_bound11113^post31, apsim_incnt^0'=apsim_incnt^post31, bits33^0'=bits33^post31, block_compress^0'=block_compress^post31, bytes_out^0'=bytes_out^post31, c37^0'=c37^post31, c7^0'=c7^post31, checkpoint^0'=checkpoint^post31, clear_flg^0'=clear_flg^post31, code31^0'=code31^post31, count^0'=count^post31, disp9^0'=disp9^post31, ent8^0'=ent8^post31, exit_stat^0'=exit_stat^post31, fcode5^0'=fcode5^post31, free_ent^0'=free_ent^post31, hshift11^0'=hshift11^post31, hsize^0'=hsize^post31, hsize___019^0'=hsize___019^post31, hsize___027^0'=hsize___027^post31, hsize_reg10^0'=hsize_reg10^post31, i21^0'=i21^post31, i29^0'=i29^post31, i3^0'=i3^post31, i41^0'=i41^post31, i45^0'=i45^post31, i6^0'=i6^post31, in_count^0'=in_count^post31, incnt^0'=incnt^post31, m122^0'=m122^post31, m130^0'=m130^post31, maxbits^0'=maxbits^post31, maxcode^0'=maxcode^post31, maxmaxcode^0'=maxmaxcode^post31, n40^0'=n40^post31, n44^0'=n44^post31, n_bits^0'=n_bits^post31, offset^0'=offset^post31, out_count^0'=out_count^post31, r_off32^0'=r_off32^post31, rat26^0'=rat26^post31, ratio^0'=ratio^post31, ret_getbyte18^0'=ret_getbyte18^post31, ret_getbyte25^0'=ret_getbyte25^post31, seed2^0'=seed2^post31, tabort4^0'=tabort4^post31, tmp12^0'=tmp12^post31, tmp___014^0'=tmp___014^post31, tmp___017^0'=tmp___017^post31, tmp___024^0'=tmp___024^post31, tmp___115^0'=tmp___115^post31, (-tmp___014^post31+tmp___014^0 == 0 /\ -r_off32^post31+r_off32^0 == 0 /\ offset^0-offset^post31 == 0 /\ maxcode^0-maxcode^post31 == 0 /\ -n_bits^post31+n_bits^0 == 0 /\ -seed2^post31+seed2^0 == 0 /\ __const_257^0-__const_257^post31 == 0 /\ apsim_incnt^0-apsim_incnt^post31 == 0 /\ -__const_429496^post31+__const_429496^0 == 0 /\ hsize___027^0-hsize___027^post31 == 0 /\ ret_getbyte25^0-ret_getbyte25^post31 == 0 /\ -__const_53^post31+__const_53^0 == 0 /\ -__const_9^post31+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post31 == 0 /\ __const_256^0-__const_256^post31 == 0 /\ -__const_65536^post31+__const_65536^0 == 0 /\ bytes_out^0-bytes_out^post31 == 0 /\ -ratio^post31+ratio^0 == 0 /\ -n40^post31+n40^0 == 0 /\ -clear_flg^post31+clear_flg^0 == 0 /\ tabort4^0-tabort4^post31 == 0 /\ i45^0-i45^post31 == 0 /\ -__const_2147483647^post31+__const_2147483647^0 == 0 /\ -c7^post31+c7^0 == 0 /\ -__const_8388607^post31+__const_8388607^0 == 0 /\ n44^0-n44^post31 == 0 /\ -hsize^post31+hsize^0 == 0 /\ c37^0-c37^post31 == 0 /\ -incnt^post31+incnt^0 == 0 /\ checkpoint^0-checkpoint^post31 == 0 /\ __const_8^0-__const_8^post31 == 0 /\ -code31^post31+code31^0 == 0 /\ -fcode5^post31+fcode5^0 == 0 /\ -ent8^post31+ent8^0 == 0 /\ exit_stat^0-exit_stat^post31 == 0 /\ __const_50^0-__const_50^post31 == 0 /\ -free_ent^post31+free_ent^0 == 0 /\ hshift11^0-hshift11^post31 == 0 /\ 1-n44^0+i45^0 <= 0 /\ -disp9^post31+disp9^0 == 0 /\ rat26^0-rat26^post31 == 0 /\ tmp12^0-tmp12^post31 == 0 /\ m130^0-m130^post31 == 0 /\ -maxbits^post31+maxbits^0 == 0 /\ -tmp___024^post31+tmp___024^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post31 == 0 /\ -i29^post31+i29^0 == 0 /\ -i3^post31+i3^0 == 0 /\ -tmp___115^post31+tmp___115^0 == 0 /\ -i41^post31+i41^0 == 0 /\ __const_10000^0-__const_10000^post31 == 0 /\ -i21^post31+i21^0 == 0 /\ -ret_getbyte18^post31+ret_getbyte18^0 == 0 /\ tmp___017^0-tmp___017^post31 == 0 /\ count^0-count^post31 == 0 /\ -in_count^post31+in_count^0 == 0 /\ i6^0-i6^post31 == 0 /\ out_count^0-out_count^post31 == 0 /\ m122^0-m122^post31 == 0 /\ -block_compress^post31+block_compress^0 == 0 /\ -hsize___019^post31+hsize___019^0 == 0 /\ -hsize_reg10^post31+hsize_reg10^0 == 0 /\ -__const_16^post31+__const_16^0 == 0 /\ bits33^0-bits33^post31 == 0), cost: 1
	New rule:
	l31 -> l29 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-n44^0+i45^0 <= 0), cost: 1
	
		propagated equality tmp___014^post31 = tmp___014^0
		
		propagated equality r_off32^post31 = r_off32^0
		
		propagated equality offset^post31 = offset^0
		
		propagated equality maxcode^post31 = maxcode^0
		
		propagated equality n_bits^post31 = n_bits^0
		
		propagated equality seed2^post31 = seed2^0
		
		propagated equality __const_257^post31 = __const_257^0
		
		propagated equality apsim_incnt^post31 = apsim_incnt^0
		
		propagated equality __const_429496^post31 = __const_429496^0
		
		propagated equality hsize___027^post31 = hsize___027^0
		
		propagated equality ret_getbyte25^post31 = ret_getbyte25^0
		
		propagated equality __const_53^post31 = __const_53^0
		
		propagated equality __const_9^post31 = __const_9^0
		
		propagated equality maxmaxcode^post31 = maxmaxcode^0
		
		propagated equality __const_256^post31 = __const_256^0
		
		propagated equality __const_65536^post31 = __const_65536^0
		
		propagated equality bytes_out^post31 = bytes_out^0
		
		propagated equality ratio^post31 = ratio^0
		
		propagated equality n40^post31 = n40^0
		
		propagated equality clear_flg^post31 = clear_flg^0
		
		propagated equality tabort4^post31 = tabort4^0
		
		propagated equality i45^post31 = i45^0
		
		propagated equality __const_2147483647^post31 = __const_2147483647^0
		
		propagated equality c7^post31 = c7^0
		
		propagated equality __const_8388607^post31 = __const_8388607^0
		
		propagated equality n44^post31 = n44^0
		
		propagated equality hsize^post31 = hsize^0
		
		propagated equality c37^post31 = c37^0
		
		propagated equality incnt^post31 = incnt^0
		
		propagated equality checkpoint^post31 = checkpoint^0
		
		propagated equality __const_8^post31 = __const_8^0
		
		propagated equality code31^post31 = code31^0
		
		propagated equality fcode5^post31 = fcode5^0
		
		propagated equality ent8^post31 = ent8^0
		
		propagated equality exit_stat^post31 = exit_stat^0
		
		propagated equality __const_50^post31 = __const_50^0
		
		propagated equality free_ent^post31 = free_ent^0
		
		propagated equality hshift11^post31 = hshift11^0
		
		propagated equality disp9^post31 = disp9^0
		
		propagated equality rat26^post31 = rat26^0
		
		propagated equality tmp12^post31 = tmp12^0
		
		propagated equality m130^post31 = m130^0
		
		propagated equality maxbits^post31 = maxbits^0
		
		propagated equality tmp___024^post31 = tmp___024^0
		
		propagated equality apsim_bound11113^post31 = apsim_bound11113^0
		
		propagated equality i29^post31 = i29^0
		
		propagated equality i3^post31 = i3^0
		
		propagated equality tmp___115^post31 = tmp___115^0
		
		propagated equality i41^post31 = i41^0
		
		propagated equality __const_10000^post31 = __const_10000^0
		
		propagated equality i21^post31 = i21^0
		
		propagated equality ret_getbyte18^post31 = ret_getbyte18^0
		
		propagated equality tmp___017^post31 = tmp___017^0
		
		propagated equality count^post31 = count^0
		
		propagated equality in_count^post31 = in_count^0
		
		propagated equality i6^post31 = i6^0
		
		propagated equality out_count^post31 = out_count^0
		
		propagated equality m122^post31 = m122^0
		
		propagated equality block_compress^post31 = block_compress^0
		
		propagated equality hsize___019^post31 = hsize___019^0
		
		propagated equality hsize_reg10^post31 = hsize_reg10^0
		
		propagated equality __const_16^post31 = __const_16^0
		
		propagated equality bits33^post31 = bits33^0
		
	Simplified Guard

	Original rule:
	l31 -> l29 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-n44^0+i45^0 <= 0), cost: 1
	New rule:
	l31 -> l29 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-n44^0+i45^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l31 -> l29 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-n44^0+i45^0 <= 0, cost: 1
	New rule:
	l31 -> l29 : 1-n44^0+i45^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l32 -> l26 : __const_10000^0'=__const_10000^post32, __const_16^0'=__const_16^post32, __const_2147483647^0'=__const_2147483647^post32, __const_256^0'=__const_256^post32, __const_257^0'=__const_257^post32, __const_429496^0'=__const_429496^post32, __const_50^0'=__const_50^post32, __const_53^0'=__const_53^post32, __const_65536^0'=__const_65536^post32, __const_8388607^0'=__const_8388607^post32, __const_8^0'=__const_8^post32, __const_9^0'=__const_9^post32, apsim_bound11113^0'=apsim_bound11113^post32, apsim_incnt^0'=apsim_incnt^post32, bits33^0'=bits33^post32, block_compress^0'=block_compress^post32, bytes_out^0'=bytes_out^post32, c37^0'=c37^post32, c7^0'=c7^post32, checkpoint^0'=checkpoint^post32, clear_flg^0'=clear_flg^post32, code31^0'=code31^post32, count^0'=count^post32, disp9^0'=disp9^post32, ent8^0'=ent8^post32, exit_stat^0'=exit_stat^post32, fcode5^0'=fcode5^post32, free_ent^0'=free_ent^post32, hshift11^0'=hshift11^post32, hsize^0'=hsize^post32, hsize___019^0'=hsize___019^post32, hsize___027^0'=hsize___027^post32, hsize_reg10^0'=hsize_reg10^post32, i21^0'=i21^post32, i29^0'=i29^post32, i3^0'=i3^post32, i41^0'=i41^post32, i45^0'=i45^post32, i6^0'=i6^post32, in_count^0'=in_count^post32, incnt^0'=incnt^post32, m122^0'=m122^post32, m130^0'=m130^post32, maxbits^0'=maxbits^post32, maxcode^0'=maxcode^post32, maxmaxcode^0'=maxmaxcode^post32, n40^0'=n40^post32, n44^0'=n44^post32, n_bits^0'=n_bits^post32, offset^0'=offset^post32, out_count^0'=out_count^post32, r_off32^0'=r_off32^post32, rat26^0'=rat26^post32, ratio^0'=ratio^post32, ret_getbyte18^0'=ret_getbyte18^post32, ret_getbyte25^0'=ret_getbyte25^post32, seed2^0'=seed2^post32, tabort4^0'=tabort4^post32, tmp12^0'=tmp12^post32, tmp___014^0'=tmp___014^post32, tmp___017^0'=tmp___017^post32, tmp___024^0'=tmp___024^post32, tmp___115^0'=tmp___115^post32, (-m130^post32+m130^0 == 0 /\ -in_count^post32+in_count^0 == 0 /\ -__const_8388607^post32+__const_8388607^0 == 0 /\ -maxbits^post32+maxbits^0 == 0 /\ -tmp___115^post32+tmp___115^0 == 0 /\ tabort4^0-tabort4^post32 == 0 /\ out_count^0-out_count^post32 == 0 /\ -ratio^post32+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post32 == 0 /\ -bits33^post32+bits33^0 == 0 /\ -c7^post32+c7^0 == 0 /\ -c37^post32+c37^0 == 0 /\ -i21^post32+i21^0 == 0 /\ tmp___024^0-tmp___024^post32 == 0 /\ -incnt^post32+incnt^0 == 0 /\ n44^0-n44^post32 == 0 /\ apsim_incnt^0-apsim_incnt^post32 == 0 /\ clear_flg^0-clear_flg^post32 == 0 /\ -__const_16^post32+__const_16^0 == 0 /\ -__const_429496^post32+__const_429496^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post32 == 0 /\ -block_compress^post32+block_compress^0 == 0 /\ -i45^post32+i45^0 == 0 /\ -disp9^post32+disp9^0 == 0 /\ __const_10000^0-__const_10000^post32 == 0 /\ checkpoint^0-checkpoint^post32 == 0 /\ offset^0 <= 0 /\ count^0-count^post32 == 0 /\ -r_off32^post32+r_off32^0 == 0 /\ -code31^post32+code31^0 == 0 /\ tmp12^0-tmp12^post32 == 0 /\ -free_ent^post32+free_ent^0 == 0 /\ -offset^post32+offset^0 == 0 /\ -__const_9^post32+__const_9^0 == 0 /\ hshift11^0-hshift11^post32 == 0 /\ __const_256^0-__const_256^post32 == 0 /\ -hsize_reg10^post32+hsize_reg10^0 == 0 /\ -tmp___014^post32+tmp___014^0 == 0 /\ -n40^post32+n40^0 == 0 /\ -hsize___019^post32+hsize___019^0 == 0 /\ maxcode^0-maxcode^post32 == 0 /\ -hsize^post32+hsize^0 == 0 /\ -__const_2147483647^post32+__const_2147483647^0 == 0 /\ -seed2^post32+seed2^0 == 0 /\ m122^0-m122^post32 == 0 /\ rat26^0-rat26^post32 == 0 /\ -__const_65536^post32+__const_65536^0 == 0 /\ -i29^post32+i29^0 == 0 /\ tmp___017^0-tmp___017^post32 == 0 /\ exit_stat^0-exit_stat^post32 == 0 /\ -i41^post32+i41^0 == 0 /\ -ent8^post32+ent8^0 == 0 /\ __const_50^0-__const_50^post32 == 0 /\ fcode5^0-fcode5^post32 == 0 /\ hsize___027^0-hsize___027^post32 == 0 /\ __const_8^0-__const_8^post32 == 0 /\ -n_bits^post32+n_bits^0 == 0 /\ bytes_out^0-bytes_out^post32 == 0 /\ i6^0-i6^post32 == 0 /\ __const_53^0-__const_53^post32 == 0 /\ __const_257^0-__const_257^post32 == 0 /\ -apsim_bound11113^post32+apsim_bound11113^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post32 == 0 /\ i3^0-i3^post32 == 0), cost: 1
	New rule:
	l32 -> l26 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ offset^0 <= 0), cost: 1
	
		propagated equality m130^post32 = m130^0
		
		propagated equality in_count^post32 = in_count^0
		
		propagated equality __const_8388607^post32 = __const_8388607^0
		
		propagated equality maxbits^post32 = maxbits^0
		
		propagated equality tmp___115^post32 = tmp___115^0
		
		propagated equality tabort4^post32 = tabort4^0
		
		propagated equality out_count^post32 = out_count^0
		
		propagated equality ratio^post32 = ratio^0
		
		propagated equality maxmaxcode^post32 = maxmaxcode^0
		
		propagated equality bits33^post32 = bits33^0
		
		propagated equality c7^post32 = c7^0
		
		propagated equality c37^post32 = c37^0
		
		propagated equality i21^post32 = i21^0
		
		propagated equality tmp___024^post32 = tmp___024^0
		
		propagated equality incnt^post32 = incnt^0
		
		propagated equality n44^post32 = n44^0
		
		propagated equality apsim_incnt^post32 = apsim_incnt^0
		
		propagated equality clear_flg^post32 = clear_flg^0
		
		propagated equality __const_16^post32 = __const_16^0
		
		propagated equality __const_429496^post32 = __const_429496^0
		
		propagated equality ret_getbyte18^post32 = ret_getbyte18^0
		
		propagated equality block_compress^post32 = block_compress^0
		
		propagated equality i45^post32 = i45^0
		
		propagated equality disp9^post32 = disp9^0
		
		propagated equality __const_10000^post32 = __const_10000^0
		
		propagated equality checkpoint^post32 = checkpoint^0
		
		propagated equality count^post32 = count^0
		
		propagated equality r_off32^post32 = r_off32^0
		
		propagated equality code31^post32 = code31^0
		
		propagated equality tmp12^post32 = tmp12^0
		
		propagated equality free_ent^post32 = free_ent^0
		
		propagated equality offset^post32 = offset^0
		
		propagated equality __const_9^post32 = __const_9^0
		
		propagated equality hshift11^post32 = hshift11^0
		
		propagated equality __const_256^post32 = __const_256^0
		
		propagated equality hsize_reg10^post32 = hsize_reg10^0
		
		propagated equality tmp___014^post32 = tmp___014^0
		
		propagated equality n40^post32 = n40^0
		
		propagated equality hsize___019^post32 = hsize___019^0
		
		propagated equality maxcode^post32 = maxcode^0
		
		propagated equality hsize^post32 = hsize^0
		
		propagated equality __const_2147483647^post32 = __const_2147483647^0
		
		propagated equality seed2^post32 = seed2^0
		
		propagated equality m122^post32 = m122^0
		
		propagated equality rat26^post32 = rat26^0
		
		propagated equality __const_65536^post32 = __const_65536^0
		
		propagated equality i29^post32 = i29^0
		
		propagated equality tmp___017^post32 = tmp___017^0
		
		propagated equality exit_stat^post32 = exit_stat^0
		
		propagated equality i41^post32 = i41^0
		
		propagated equality ent8^post32 = ent8^0
		
		propagated equality __const_50^post32 = __const_50^0
		
		propagated equality fcode5^post32 = fcode5^0
		
		propagated equality hsize___027^post32 = hsize___027^0
		
		propagated equality __const_8^post32 = __const_8^0
		
		propagated equality n_bits^post32 = n_bits^0
		
		propagated equality bytes_out^post32 = bytes_out^0
		
		propagated equality i6^post32 = i6^0
		
		propagated equality __const_53^post32 = __const_53^0
		
		propagated equality __const_257^post32 = __const_257^0
		
		propagated equality apsim_bound11113^post32 = apsim_bound11113^0
		
		propagated equality ret_getbyte25^post32 = ret_getbyte25^0
		
		propagated equality i3^post32 = i3^0
		
	Simplified Guard

	Original rule:
	l32 -> l26 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ offset^0 <= 0), cost: 1
	New rule:
	l32 -> l26 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, offset^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l32 -> l26 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, offset^0 <= 0, cost: 1
	New rule:
	l32 -> l26 : offset^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l32 -> l30 : __const_10000^0'=__const_10000^post33, __const_16^0'=__const_16^post33, __const_2147483647^0'=__const_2147483647^post33, __const_256^0'=__const_256^post33, __const_257^0'=__const_257^post33, __const_429496^0'=__const_429496^post33, __const_50^0'=__const_50^post33, __const_53^0'=__const_53^post33, __const_65536^0'=__const_65536^post33, __const_8388607^0'=__const_8388607^post33, __const_8^0'=__const_8^post33, __const_9^0'=__const_9^post33, apsim_bound11113^0'=apsim_bound11113^post33, apsim_incnt^0'=apsim_incnt^post33, bits33^0'=bits33^post33, block_compress^0'=block_compress^post33, bytes_out^0'=bytes_out^post33, c37^0'=c37^post33, c7^0'=c7^post33, checkpoint^0'=checkpoint^post33, clear_flg^0'=clear_flg^post33, code31^0'=code31^post33, count^0'=count^post33, disp9^0'=disp9^post33, ent8^0'=ent8^post33, exit_stat^0'=exit_stat^post33, fcode5^0'=fcode5^post33, free_ent^0'=free_ent^post33, hshift11^0'=hshift11^post33, hsize^0'=hsize^post33, hsize___019^0'=hsize___019^post33, hsize___027^0'=hsize___027^post33, hsize_reg10^0'=hsize_reg10^post33, i21^0'=i21^post33, i29^0'=i29^post33, i3^0'=i3^post33, i41^0'=i41^post33, i45^0'=i45^post33, i6^0'=i6^post33, in_count^0'=in_count^post33, incnt^0'=incnt^post33, m122^0'=m122^post33, m130^0'=m130^post33, maxbits^0'=maxbits^post33, maxcode^0'=maxcode^post33, maxmaxcode^0'=maxmaxcode^post33, n40^0'=n40^post33, n44^0'=n44^post33, n_bits^0'=n_bits^post33, offset^0'=offset^post33, out_count^0'=out_count^post33, r_off32^0'=r_off32^post33, rat26^0'=rat26^post33, ratio^0'=ratio^post33, ret_getbyte18^0'=ret_getbyte18^post33, ret_getbyte25^0'=ret_getbyte25^post33, seed2^0'=seed2^post33, tabort4^0'=tabort4^post33, tmp12^0'=tmp12^post33, tmp___014^0'=tmp___014^post33, tmp___017^0'=tmp___017^post33, tmp___024^0'=tmp___024^post33, tmp___115^0'=tmp___115^post33, (0 == 0 /\ tmp12^0-tmp12^post33 == 0 /\ checkpoint^0-checkpoint^post33 == 0 /\ __const_8^0-__const_8^post33 == 0 /\ -apsim_bound11113^post33+apsim_bound11113^0 == 0 /\ exit_stat^0-exit_stat^post33 == 0 /\ ret_getbyte18^0-ret_getbyte18^post33 == 0 /\ -__const_429496^post33+__const_429496^0 == 0 /\ -__const_9^post33+__const_9^0 == 0 /\ __const_50^0-__const_50^post33 == 0 /\ tmp___017^0-tmp___017^post33 == 0 /\ r_off32^0-r_off32^post33 == 0 /\ __const_10000^0-__const_10000^post33 == 0 /\ -__const_65536^post33+__const_65536^0 == 0 /\ tabort4^0-tabort4^post33 == 0 /\ -hsize___019^post33+hsize___019^0 == 0 /\ -rat26^post33+rat26^0 == 0 /\ -c7^post33+c7^0 == 0 /\ out_count^0-out_count^post33 == 0 /\ m122^0-m122^post33 == 0 /\ count^0-count^post33 == 0 /\ -clear_flg^post33+clear_flg^0 == 0 /\ -m130^post33+m130^0 == 0 /\ -i29^post33+i29^0 == 0 /\ -i41^post33+i41^0 == 0 /\ -__const_2147483647^post33+__const_2147483647^0 == 0 /\ -seed2^post33+seed2^0 == 0 /\ -__const_8388607^post33+__const_8388607^0 == 0 /\ __const_16^0-__const_16^post33 == 0 /\ -i21^post33+i21^0 == 0 /\ -hsize^post33+hsize^0 == 0 /\ -incnt^post33+incnt^0 == 0 /\ i45^post33 == 0 /\ __const_257^0-__const_257^post33 == 0 /\ -bits33^post33+bits33^0 == 0 /\ -code31^post33+code31^0 == 0 /\ maxcode^0-maxcode^post33 == 0 /\ i6^0-i6^post33 == 0 /\ maxmaxcode^0-maxmaxcode^post33 == 0 /\ -in_count^post33+in_count^0 == 0 /\ -fcode5^post33+fcode5^0 == 0 /\ i3^0-i3^post33 == 0 /\ -ratio^post33+ratio^0 == 0 /\ -disp9^post33+disp9^0 == 0 /\ __const_256^0-__const_256^post33 == 0 /\ n_bits^0-n_bits^post33 == 0 /\ -ent8^post33+ent8^0 == 0 /\ 1-offset^0 <= 0 /\ bytes_out^0-bytes_out^post33 == 0 /\ __const_53^0-__const_53^post33 == 0 /\ hsize_reg10^0-hsize_reg10^post33 == 0 /\ -tmp___014^post33+tmp___014^0 == 0 /\ -offset^post33+offset^0 == 0 /\ -free_ent^post33+free_ent^0 == 0 /\ hshift11^0-hshift11^post33 == 0 /\ apsim_incnt^0-apsim_incnt^post33 == 0 /\ -maxbits^post33+maxbits^0 == 0 /\ -tmp___115^post33+tmp___115^0 == 0 /\ -block_compress^post33+block_compress^0 == 0 /\ -ret_getbyte25^post33+ret_getbyte25^0 == 0 /\ -tmp___024^post33+tmp___024^0 == 0 /\ -n40^post33+n40^0 == 0 /\ hsize___027^0-hsize___027^post33 == 0 /\ c37^0-c37^post33 == 0), cost: 1
	New rule:
	l32 -> l30 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^post33, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-offset^0 <= 0), cost: 1
	
		propagated equality tmp12^post33 = tmp12^0
		
		propagated equality checkpoint^post33 = checkpoint^0
		
		propagated equality __const_8^post33 = __const_8^0
		
		propagated equality apsim_bound11113^post33 = apsim_bound11113^0
		
		propagated equality exit_stat^post33 = exit_stat^0
		
		propagated equality ret_getbyte18^post33 = ret_getbyte18^0
		
		propagated equality __const_429496^post33 = __const_429496^0
		
		propagated equality __const_9^post33 = __const_9^0
		
		propagated equality __const_50^post33 = __const_50^0
		
		propagated equality tmp___017^post33 = tmp___017^0
		
		propagated equality r_off32^post33 = r_off32^0
		
		propagated equality __const_10000^post33 = __const_10000^0
		
		propagated equality __const_65536^post33 = __const_65536^0
		
		propagated equality tabort4^post33 = tabort4^0
		
		propagated equality hsize___019^post33 = hsize___019^0
		
		propagated equality rat26^post33 = rat26^0
		
		propagated equality c7^post33 = c7^0
		
		propagated equality out_count^post33 = out_count^0
		
		propagated equality m122^post33 = m122^0
		
		propagated equality count^post33 = count^0
		
		propagated equality clear_flg^post33 = clear_flg^0
		
		propagated equality m130^post33 = m130^0
		
		propagated equality i29^post33 = i29^0
		
		propagated equality i41^post33 = i41^0
		
		propagated equality __const_2147483647^post33 = __const_2147483647^0
		
		propagated equality seed2^post33 = seed2^0
		
		propagated equality __const_8388607^post33 = __const_8388607^0
		
		propagated equality __const_16^post33 = __const_16^0
		
		propagated equality i21^post33 = i21^0
		
		propagated equality hsize^post33 = hsize^0
		
		propagated equality incnt^post33 = incnt^0
		
		propagated equality i45^post33 = 0
		
		propagated equality __const_257^post33 = __const_257^0
		
		propagated equality bits33^post33 = bits33^0
		
		propagated equality code31^post33 = code31^0
		
		propagated equality maxcode^post33 = maxcode^0
		
		propagated equality i6^post33 = i6^0
		
		propagated equality maxmaxcode^post33 = maxmaxcode^0
		
		propagated equality in_count^post33 = in_count^0
		
		propagated equality fcode5^post33 = fcode5^0
		
		propagated equality i3^post33 = i3^0
		
		propagated equality ratio^post33 = ratio^0
		
		propagated equality disp9^post33 = disp9^0
		
		propagated equality __const_256^post33 = __const_256^0
		
		propagated equality n_bits^post33 = n_bits^0
		
		propagated equality ent8^post33 = ent8^0
		
		propagated equality bytes_out^post33 = bytes_out^0
		
		propagated equality __const_53^post33 = __const_53^0
		
		propagated equality hsize_reg10^post33 = hsize_reg10^0
		
		propagated equality tmp___014^post33 = tmp___014^0
		
		propagated equality offset^post33 = offset^0
		
		propagated equality free_ent^post33 = free_ent^0
		
		propagated equality hshift11^post33 = hshift11^0
		
		propagated equality apsim_incnt^post33 = apsim_incnt^0
		
		propagated equality maxbits^post33 = maxbits^0
		
		propagated equality tmp___115^post33 = tmp___115^0
		
		propagated equality block_compress^post33 = block_compress^0
		
		propagated equality ret_getbyte25^post33 = ret_getbyte25^0
		
		propagated equality tmp___024^post33 = tmp___024^0
		
		propagated equality n40^post33 = n40^0
		
		propagated equality hsize___027^post33 = hsize___027^0
		
		propagated equality c37^post33 = c37^0
		
	Simplified Guard

	Original rule:
	l32 -> l30 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^post33, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-offset^0 <= 0), cost: 1
	New rule:
	l32 -> l30 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^post33, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-offset^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l32 -> l30 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^post33, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-offset^0 <= 0, cost: 1
	New rule:
	l32 -> l30 : i45^0'=0, n44^0'=n44^post33, 1-offset^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l33 -> l27 : __const_10000^0'=__const_10000^post34, __const_16^0'=__const_16^post34, __const_2147483647^0'=__const_2147483647^post34, __const_256^0'=__const_256^post34, __const_257^0'=__const_257^post34, __const_429496^0'=__const_429496^post34, __const_50^0'=__const_50^post34, __const_53^0'=__const_53^post34, __const_65536^0'=__const_65536^post34, __const_8388607^0'=__const_8388607^post34, __const_8^0'=__const_8^post34, __const_9^0'=__const_9^post34, apsim_bound11113^0'=apsim_bound11113^post34, apsim_incnt^0'=apsim_incnt^post34, bits33^0'=bits33^post34, block_compress^0'=block_compress^post34, bytes_out^0'=bytes_out^post34, c37^0'=c37^post34, c7^0'=c7^post34, checkpoint^0'=checkpoint^post34, clear_flg^0'=clear_flg^post34, code31^0'=code31^post34, count^0'=count^post34, disp9^0'=disp9^post34, ent8^0'=ent8^post34, exit_stat^0'=exit_stat^post34, fcode5^0'=fcode5^post34, free_ent^0'=free_ent^post34, hshift11^0'=hshift11^post34, hsize^0'=hsize^post34, hsize___019^0'=hsize___019^post34, hsize___027^0'=hsize___027^post34, hsize_reg10^0'=hsize_reg10^post34, i21^0'=i21^post34, i29^0'=i29^post34, i3^0'=i3^post34, i41^0'=i41^post34, i45^0'=i45^post34, i6^0'=i6^post34, in_count^0'=in_count^post34, incnt^0'=incnt^post34, m122^0'=m122^post34, m130^0'=m130^post34, maxbits^0'=maxbits^post34, maxcode^0'=maxcode^post34, maxmaxcode^0'=maxmaxcode^post34, n40^0'=n40^post34, n44^0'=n44^post34, n_bits^0'=n_bits^post34, offset^0'=offset^post34, out_count^0'=out_count^post34, r_off32^0'=r_off32^post34, rat26^0'=rat26^post34, ratio^0'=ratio^post34, ret_getbyte18^0'=ret_getbyte18^post34, ret_getbyte25^0'=ret_getbyte25^post34, seed2^0'=seed2^post34, tabort4^0'=tabort4^post34, tmp12^0'=tmp12^post34, tmp___014^0'=tmp___014^post34, tmp___017^0'=tmp___017^post34, tmp___024^0'=tmp___024^post34, tmp___115^0'=tmp___115^post34, (0 == 0 /\ -tmp12^post34+tmp12^0 == 0 /\ -__const_10000^post34+__const_10000^0 == 0 /\ -ent8^post34+ent8^0 == 0 /\ -fcode5^post34+fcode5^0 == 0 /\ -seed2^post34+seed2^0 == 0 /\ -__const_2147483647^post34+__const_2147483647^0 == 0 /\ free_ent^0-free_ent^post34 == 0 /\ __const_65536^0-__const_65536^post34 == 0 /\ -offset^post34+offset^0 == 0 /\ -disp9^post34+disp9^0 == 0 /\ -__const_256^post34+__const_256^0 == 0 /\ __const_16^0-__const_16^post34 == 0 /\ ret_getbyte18^0-ret_getbyte18^post34 == 0 /\ -ret_getbyte25^post34+ret_getbyte25^0 == 0 /\ __const_53^0-__const_53^post34 == 0 /\ -rat26^post34+rat26^0 == 0 /\ -code31^post34+code31^0 == 0 /\ checkpoint^0-checkpoint^post34 == 0 /\ m130^0-m130^post34 == 0 /\ r_off32^0-r_off32^post34 == 0 /\ __const_8^0-__const_8^post34 == 0 /\ -ratio^post34+ratio^0 == 0 /\ -tmp___024^post34+tmp___024^0 == 0 /\ i6^0-i6^post34 == 0 /\ tmp___017^0-tmp___017^post34 == 0 /\ m122^0-m122^post34 == 0 /\ -__const_50^post34+__const_50^0 == 0 /\ exit_stat^0-exit_stat^post34 == 0 /\ -tmp___014^post34+tmp___014^0 == 0 /\ out_count^0-out_count^post34 == 0 /\ count^0-count^post34 == 0 /\ i3^0-i3^post34 == 0 /\ -i41^post34+i41^0 == 0 /\ -block_compress^post34+block_compress^0 == 0 /\ -i45^post34+i45^0 == 0 /\ -apsim_bound11113^post34+apsim_bound11113^0 == 0 /\ -clear_flg^post34+clear_flg^0 == 0 /\ -c7^post34+c7^0 == 0 /\ n_bits^0-n_bits^post34 == 0 /\ hsize_reg10^0-hsize_reg10^post34 == 0 /\ -incnt^post34+incnt^0 == 0 /\ hsize___027^0-hsize___027^post34 == 0 /\ -hsize^post34+hsize^0 == 0 /\ __const_257^0-__const_257^post34 == 0 /\ bytes_out^0-bytes_out^post34 == 0 /\ -maxbits^post34+maxbits^0 == 0 /\ __const_9^0-__const_9^post34 == 0 /\ -i29^post34+i29^0 == 0 /\ c37^0-c37^post34 == 0 /\ -n40^post34+n40^0 == 0 /\ -tmp___115^post34+tmp___115^0 == 0 /\ -in_count^post34+in_count^0 == 0 /\ -__const_8388607^post34+__const_8388607^0 == 0 /\ bits33^0-bits33^post34 == 0 /\ tabort4^0-tabort4^post34 == 0 /\ -i21^post34+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post34 == 0 /\ apsim_incnt^0-apsim_incnt^post34 == 0 /\ hshift11^0-hshift11^post34 == 0 /\ n44^0-n44^post34 == 0 /\ -__const_429496^post34+__const_429496^0 == 0 /\ hsize___019^0-hsize___019^post34 == 0), cost: 1
	New rule:
	l33 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^post34, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality tmp12^post34 = tmp12^0
		
		propagated equality __const_10000^post34 = __const_10000^0
		
		propagated equality ent8^post34 = ent8^0
		
		propagated equality fcode5^post34 = fcode5^0
		
		propagated equality seed2^post34 = seed2^0
		
		propagated equality __const_2147483647^post34 = __const_2147483647^0
		
		propagated equality free_ent^post34 = free_ent^0
		
		propagated equality __const_65536^post34 = __const_65536^0
		
		propagated equality offset^post34 = offset^0
		
		propagated equality disp9^post34 = disp9^0
		
		propagated equality __const_256^post34 = __const_256^0
		
		propagated equality __const_16^post34 = __const_16^0
		
		propagated equality ret_getbyte18^post34 = ret_getbyte18^0
		
		propagated equality ret_getbyte25^post34 = ret_getbyte25^0
		
		propagated equality __const_53^post34 = __const_53^0
		
		propagated equality rat26^post34 = rat26^0
		
		propagated equality code31^post34 = code31^0
		
		propagated equality checkpoint^post34 = checkpoint^0
		
		propagated equality m130^post34 = m130^0
		
		propagated equality r_off32^post34 = r_off32^0
		
		propagated equality __const_8^post34 = __const_8^0
		
		propagated equality ratio^post34 = ratio^0
		
		propagated equality tmp___024^post34 = tmp___024^0
		
		propagated equality i6^post34 = i6^0
		
		propagated equality tmp___017^post34 = tmp___017^0
		
		propagated equality m122^post34 = m122^0
		
		propagated equality __const_50^post34 = __const_50^0
		
		propagated equality exit_stat^post34 = exit_stat^0
		
		propagated equality tmp___014^post34 = tmp___014^0
		
		propagated equality out_count^post34 = out_count^0
		
		propagated equality count^post34 = count^0
		
		propagated equality i3^post34 = i3^0
		
		propagated equality i41^post34 = i41^0
		
		propagated equality block_compress^post34 = block_compress^0
		
		propagated equality i45^post34 = i45^0
		
		propagated equality apsim_bound11113^post34 = apsim_bound11113^0
		
		propagated equality clear_flg^post34 = clear_flg^0
		
		propagated equality c7^post34 = c7^0
		
		propagated equality n_bits^post34 = n_bits^0
		
		propagated equality hsize_reg10^post34 = hsize_reg10^0
		
		propagated equality incnt^post34 = incnt^0
		
		propagated equality hsize___027^post34 = hsize___027^0
		
		propagated equality hsize^post34 = hsize^0
		
		propagated equality __const_257^post34 = __const_257^0
		
		propagated equality bytes_out^post34 = bytes_out^0
		
		propagated equality maxbits^post34 = maxbits^0
		
		propagated equality __const_9^post34 = __const_9^0
		
		propagated equality i29^post34 = i29^0
		
		propagated equality c37^post34 = c37^0
		
		propagated equality n40^post34 = n40^0
		
		propagated equality tmp___115^post34 = tmp___115^0
		
		propagated equality in_count^post34 = in_count^0
		
		propagated equality __const_8388607^post34 = __const_8388607^0
		
		propagated equality bits33^post34 = bits33^0
		
		propagated equality tabort4^post34 = tabort4^0
		
		propagated equality i21^post34 = i21^0
		
		propagated equality maxmaxcode^post34 = maxmaxcode^0
		
		propagated equality apsim_incnt^post34 = apsim_incnt^0
		
		propagated equality hshift11^post34 = hshift11^0
		
		propagated equality n44^post34 = n44^0
		
		propagated equality __const_429496^post34 = __const_429496^0
		
		propagated equality hsize___019^post34 = hsize___019^0
		
	Simplified Guard

	Original rule:
	l33 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^post34, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l33 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^post34, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l33 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^post34, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l33 -> l27 : maxcode^0'=maxcode^post34, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l34 -> l33 : __const_10000^0'=__const_10000^post35, __const_16^0'=__const_16^post35, __const_2147483647^0'=__const_2147483647^post35, __const_256^0'=__const_256^post35, __const_257^0'=__const_257^post35, __const_429496^0'=__const_429496^post35, __const_50^0'=__const_50^post35, __const_53^0'=__const_53^post35, __const_65536^0'=__const_65536^post35, __const_8388607^0'=__const_8388607^post35, __const_8^0'=__const_8^post35, __const_9^0'=__const_9^post35, apsim_bound11113^0'=apsim_bound11113^post35, apsim_incnt^0'=apsim_incnt^post35, bits33^0'=bits33^post35, block_compress^0'=block_compress^post35, bytes_out^0'=bytes_out^post35, c37^0'=c37^post35, c7^0'=c7^post35, checkpoint^0'=checkpoint^post35, clear_flg^0'=clear_flg^post35, code31^0'=code31^post35, count^0'=count^post35, disp9^0'=disp9^post35, ent8^0'=ent8^post35, exit_stat^0'=exit_stat^post35, fcode5^0'=fcode5^post35, free_ent^0'=free_ent^post35, hshift11^0'=hshift11^post35, hsize^0'=hsize^post35, hsize___019^0'=hsize___019^post35, hsize___027^0'=hsize___027^post35, hsize_reg10^0'=hsize_reg10^post35, i21^0'=i21^post35, i29^0'=i29^post35, i3^0'=i3^post35, i41^0'=i41^post35, i45^0'=i45^post35, i6^0'=i6^post35, in_count^0'=in_count^post35, incnt^0'=incnt^post35, m122^0'=m122^post35, m130^0'=m130^post35, maxbits^0'=maxbits^post35, maxcode^0'=maxcode^post35, maxmaxcode^0'=maxmaxcode^post35, n40^0'=n40^post35, n44^0'=n44^post35, n_bits^0'=n_bits^post35, offset^0'=offset^post35, out_count^0'=out_count^post35, r_off32^0'=r_off32^post35, rat26^0'=rat26^post35, ratio^0'=ratio^post35, ret_getbyte18^0'=ret_getbyte18^post35, ret_getbyte25^0'=ret_getbyte25^post35, seed2^0'=seed2^post35, tabort4^0'=tabort4^post35, tmp12^0'=tmp12^post35, tmp___014^0'=tmp___014^post35, tmp___017^0'=tmp___017^post35, tmp___024^0'=tmp___024^post35, tmp___115^0'=tmp___115^post35, (apsim_incnt^0-apsim_incnt^post35 == 0 /\ -incnt^post35+incnt^0 == 0 /\ hshift11^0-hshift11^post35 == 0 /\ -i45^post35+i45^0 == 0 /\ tabort4^0-tabort4^post35 == 0 /\ r_off32^0-r_off32^post35 == 0 /\ out_count^0-out_count^post35 == 0 /\ -clear_flg^post35+clear_flg^0 == 0 /\ tmp___017^0-tmp___017^post35 == 0 /\ __const_65536^0-__const_65536^post35 == 0 /\ -maxmaxcode^post35+maxmaxcode^0 == 0 /\ -i29^post35+i29^0 == 0 /\ -m130^post35+m130^0 == 0 /\ free_ent^0-free_ent^post35 == 0 /\ -maxbits^post35+maxbits^0 == 0 /\ -c7^post35+c7^0 == 0 /\ -__const_8388607^post35+__const_8388607^0 == 0 /\ -i41^post35+i41^0 == 0 /\ -tmp___115^post35+tmp___115^0 == 0 /\ -n40^post35+n40^0 == 0 /\ exit_stat^0-exit_stat^post35 == 0 /\ -in_count^post35+in_count^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post35 == 0 /\ -i21^post35+i21^0 == 0 /\ -disp9^post35+disp9^0 == 0 /\ -code31^post35+code31^0 == 0 /\ tmp12^0-tmp12^post35 == 0 /\ bytes_out^0-bytes_out^post35 == 0 /\ __const_53^0-__const_53^post35 == 0 /\ __const_257^0-__const_257^post35 == 0 /\ __const_8^0-__const_8^post35 == 0 /\ -seed2^post35+seed2^0 == 0 /\ -tmp___014^post35+tmp___014^0 == 0 /\ -ret_getbyte25^post35+ret_getbyte25^0 == 0 /\ 1-n_bits^0+maxbits^0 <= 0 /\ -offset^post35+offset^0 == 0 /\ hsize___019^0-hsize___019^post35 == 0 /\ c37^0-c37^post35 == 0 /\ -n_bits^post35+n_bits^0 == 0 /\ i6^0-i6^post35 == 0 /\ __const_429496^0-__const_429496^post35 == 0 /\ ent8^0-ent8^post35 == 0 /\ -__const_10000^post35+__const_10000^0 == 0 /\ m122^0-m122^post35 == 0 /\ -__const_256^post35+__const_256^0 == 0 /\ maxcode^0-maxcode^post35 == 0 /\ -__const_2147483647^post35+__const_2147483647^0 == 0 /\ -hsize^post35+hsize^0 == 0 /\ -tmp___024^post35+tmp___024^0 == 0 /\ -ratio^post35+ratio^0 == 0 /\ i3^0-i3^post35 == 0 /\ __const_9^0-__const_9^post35 == 0 /\ __const_16^0-__const_16^post35 == 0 /\ -hsize___027^post35+hsize___027^0 == 0 /\ -__const_50^post35+__const_50^0 == 0 /\ hsize_reg10^0-hsize_reg10^post35 == 0 /\ -block_compress^post35+block_compress^0 == 0 /\ bits33^0-bits33^post35 == 0 /\ count^0-count^post35 == 0 /\ rat26^0-rat26^post35 == 0 /\ checkpoint^0-checkpoint^post35 == 0 /\ n44^0-n44^post35 == 0 /\ -apsim_bound11113^post35+apsim_bound11113^0 == 0 /\ -fcode5^post35+fcode5^0 == 0), cost: 1
	New rule:
	l34 -> l33 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-n_bits^0+maxbits^0 <= 0), cost: 1
	
		propagated equality apsim_incnt^post35 = apsim_incnt^0
		
		propagated equality incnt^post35 = incnt^0
		
		propagated equality hshift11^post35 = hshift11^0
		
		propagated equality i45^post35 = i45^0
		
		propagated equality tabort4^post35 = tabort4^0
		
		propagated equality r_off32^post35 = r_off32^0
		
		propagated equality out_count^post35 = out_count^0
		
		propagated equality clear_flg^post35 = clear_flg^0
		
		propagated equality tmp___017^post35 = tmp___017^0
		
		propagated equality __const_65536^post35 = __const_65536^0
		
		propagated equality maxmaxcode^post35 = maxmaxcode^0
		
		propagated equality i29^post35 = i29^0
		
		propagated equality m130^post35 = m130^0
		
		propagated equality free_ent^post35 = free_ent^0
		
		propagated equality maxbits^post35 = maxbits^0
		
		propagated equality c7^post35 = c7^0
		
		propagated equality __const_8388607^post35 = __const_8388607^0
		
		propagated equality i41^post35 = i41^0
		
		propagated equality tmp___115^post35 = tmp___115^0
		
		propagated equality n40^post35 = n40^0
		
		propagated equality exit_stat^post35 = exit_stat^0
		
		propagated equality in_count^post35 = in_count^0
		
		propagated equality ret_getbyte18^post35 = ret_getbyte18^0
		
		propagated equality i21^post35 = i21^0
		
		propagated equality disp9^post35 = disp9^0
		
		propagated equality code31^post35 = code31^0
		
		propagated equality tmp12^post35 = tmp12^0
		
		propagated equality bytes_out^post35 = bytes_out^0
		
		propagated equality __const_53^post35 = __const_53^0
		
		propagated equality __const_257^post35 = __const_257^0
		
		propagated equality __const_8^post35 = __const_8^0
		
		propagated equality seed2^post35 = seed2^0
		
		propagated equality tmp___014^post35 = tmp___014^0
		
		propagated equality ret_getbyte25^post35 = ret_getbyte25^0
		
		propagated equality offset^post35 = offset^0
		
		propagated equality hsize___019^post35 = hsize___019^0
		
		propagated equality c37^post35 = c37^0
		
		propagated equality n_bits^post35 = n_bits^0
		
		propagated equality i6^post35 = i6^0
		
		propagated equality __const_429496^post35 = __const_429496^0
		
		propagated equality ent8^post35 = ent8^0
		
		propagated equality __const_10000^post35 = __const_10000^0
		
		propagated equality m122^post35 = m122^0
		
		propagated equality __const_256^post35 = __const_256^0
		
		propagated equality maxcode^post35 = maxcode^0
		
		propagated equality __const_2147483647^post35 = __const_2147483647^0
		
		propagated equality hsize^post35 = hsize^0
		
		propagated equality tmp___024^post35 = tmp___024^0
		
		propagated equality ratio^post35 = ratio^0
		
		propagated equality i3^post35 = i3^0
		
		propagated equality __const_9^post35 = __const_9^0
		
		propagated equality __const_16^post35 = __const_16^0
		
		propagated equality hsize___027^post35 = hsize___027^0
		
		propagated equality __const_50^post35 = __const_50^0
		
		propagated equality hsize_reg10^post35 = hsize_reg10^0
		
		propagated equality block_compress^post35 = block_compress^0
		
		propagated equality bits33^post35 = bits33^0
		
		propagated equality count^post35 = count^0
		
		propagated equality rat26^post35 = rat26^0
		
		propagated equality checkpoint^post35 = checkpoint^0
		
		propagated equality n44^post35 = n44^0
		
		propagated equality apsim_bound11113^post35 = apsim_bound11113^0
		
		propagated equality fcode5^post35 = fcode5^0
		
	Simplified Guard

	Original rule:
	l34 -> l33 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-n_bits^0+maxbits^0 <= 0), cost: 1
	New rule:
	l34 -> l33 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-n_bits^0+maxbits^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l34 -> l33 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-n_bits^0+maxbits^0 <= 0, cost: 1
	New rule:
	l34 -> l33 : 1-n_bits^0+maxbits^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l34 -> l33 : __const_10000^0'=__const_10000^post36, __const_16^0'=__const_16^post36, __const_2147483647^0'=__const_2147483647^post36, __const_256^0'=__const_256^post36, __const_257^0'=__const_257^post36, __const_429496^0'=__const_429496^post36, __const_50^0'=__const_50^post36, __const_53^0'=__const_53^post36, __const_65536^0'=__const_65536^post36, __const_8388607^0'=__const_8388607^post36, __const_8^0'=__const_8^post36, __const_9^0'=__const_9^post36, apsim_bound11113^0'=apsim_bound11113^post36, apsim_incnt^0'=apsim_incnt^post36, bits33^0'=bits33^post36, block_compress^0'=block_compress^post36, bytes_out^0'=bytes_out^post36, c37^0'=c37^post36, c7^0'=c7^post36, checkpoint^0'=checkpoint^post36, clear_flg^0'=clear_flg^post36, code31^0'=code31^post36, count^0'=count^post36, disp9^0'=disp9^post36, ent8^0'=ent8^post36, exit_stat^0'=exit_stat^post36, fcode5^0'=fcode5^post36, free_ent^0'=free_ent^post36, hshift11^0'=hshift11^post36, hsize^0'=hsize^post36, hsize___019^0'=hsize___019^post36, hsize___027^0'=hsize___027^post36, hsize_reg10^0'=hsize_reg10^post36, i21^0'=i21^post36, i29^0'=i29^post36, i3^0'=i3^post36, i41^0'=i41^post36, i45^0'=i45^post36, i6^0'=i6^post36, in_count^0'=in_count^post36, incnt^0'=incnt^post36, m122^0'=m122^post36, m130^0'=m130^post36, maxbits^0'=maxbits^post36, maxcode^0'=maxcode^post36, maxmaxcode^0'=maxmaxcode^post36, n40^0'=n40^post36, n44^0'=n44^post36, n_bits^0'=n_bits^post36, offset^0'=offset^post36, out_count^0'=out_count^post36, r_off32^0'=r_off32^post36, rat26^0'=rat26^post36, ratio^0'=ratio^post36, ret_getbyte18^0'=ret_getbyte18^post36, ret_getbyte25^0'=ret_getbyte25^post36, seed2^0'=seed2^post36, tabort4^0'=tabort4^post36, tmp12^0'=tmp12^post36, tmp___014^0'=tmp___014^post36, tmp___017^0'=tmp___017^post36, tmp___024^0'=tmp___024^post36, tmp___115^0'=tmp___115^post36, (__const_16^0-__const_16^post36 == 0 /\ tmp___017^0-tmp___017^post36 == 0 /\ exit_stat^0-exit_stat^post36 == 0 /\ ret_getbyte18^0-ret_getbyte18^post36 == 0 /\ __const_50^0-__const_50^post36 == 0 /\ -tmp___115^post36+tmp___115^0 == 0 /\ m130^0-m130^post36 == 0 /\ tmp___024^0-tmp___024^post36 == 0 /\ checkpoint^0-checkpoint^post36 == 0 /\ r_off32^0-r_off32^post36 == 0 /\ -tmp12^post36+tmp12^0 == 0 /\ -ret_getbyte25^post36+ret_getbyte25^0 == 0 /\ -tmp___014^post36+tmp___014^0 == 0 /\ hsize___027^0-hsize___027^post36 == 0 /\ __const_53^0-__const_53^post36 == 0 /\ -__const_2147483647^post36+__const_2147483647^0 == 0 /\ -seed2^post36+seed2^0 == 0 /\ __const_8^0-__const_8^post36 == 0 /\ -hsize^post36+hsize^0 == 0 /\ -i29^post36+i29^0 == 0 /\ -__const_65536^post36+__const_65536^0 == 0 /\ out_count^0-out_count^post36 == 0 /\ -i41^post36+i41^0 == 0 /\ __const_256^0-__const_256^post36 == 0 /\ -block_compress^post36+block_compress^0 == 0 /\ __const_10000^0-__const_10000^post36 == 0 /\ -rat26^post36+rat26^0 == 0 /\ -ent8^post36+ent8^0 == 0 /\ -fcode5^post36+fcode5^0 == 0 /\ -apsim_bound11113^post36+apsim_bound11113^0 == 0 /\ m122^0-m122^post36 == 0 /\ -in_count^post36+in_count^0 == 0 /\ -__const_8388607^post36+__const_8388607^0 == 0 /\ __const_9^0-__const_9^post36 == 0 /\ -maxbits^post36+maxbits^0 == 0 /\ -n40^post36+n40^0 == 0 /\ bytes_out^0-bytes_out^post36 == 0 /\ -ratio^post36+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post36 == 0 /\ -clear_flg^post36+clear_flg^0 == 0 /\ -c7^post36+c7^0 == 0 /\ -i21^post36+i21^0 == 0 /\ -incnt^post36+incnt^0 == 0 /\ count^0-count^post36 == 0 /\ bits33^0-bits33^post36 == 0 /\ i6^0-i6^post36 == 0 /\ __const_257^0-__const_257^post36 == 0 /\ i3^0-i3^post36 == 0 /\ hshift11^0-hshift11^post36 == 0 /\ -hsize_reg10^post36+hsize_reg10^0 == 0 /\ 1+n_bits^0-maxbits^0 <= 0 /\ tabort4^0-tabort4^post36 == 0 /\ apsim_incnt^0-apsim_incnt^post36 == 0 /\ -__const_429496^post36+__const_429496^0 == 0 /\ c37^0-c37^post36 == 0 /\ hsize___019^0-hsize___019^post36 == 0 /\ -i45^post36+i45^0 == 0 /\ -disp9^post36+disp9^0 == 0 /\ n44^0-n44^post36 == 0 /\ maxcode^0-maxcode^post36 == 0 /\ -offset^post36+offset^0 == 0 /\ -code31^post36+code31^0 == 0 /\ n_bits^0-n_bits^post36 == 0 /\ -free_ent^post36+free_ent^0 == 0), cost: 1
	New rule:
	l34 -> l33 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+n_bits^0-maxbits^0 <= 0), cost: 1
	
		propagated equality __const_16^post36 = __const_16^0
		
		propagated equality tmp___017^post36 = tmp___017^0
		
		propagated equality exit_stat^post36 = exit_stat^0
		
		propagated equality ret_getbyte18^post36 = ret_getbyte18^0
		
		propagated equality __const_50^post36 = __const_50^0
		
		propagated equality tmp___115^post36 = tmp___115^0
		
		propagated equality m130^post36 = m130^0
		
		propagated equality tmp___024^post36 = tmp___024^0
		
		propagated equality checkpoint^post36 = checkpoint^0
		
		propagated equality r_off32^post36 = r_off32^0
		
		propagated equality tmp12^post36 = tmp12^0
		
		propagated equality ret_getbyte25^post36 = ret_getbyte25^0
		
		propagated equality tmp___014^post36 = tmp___014^0
		
		propagated equality hsize___027^post36 = hsize___027^0
		
		propagated equality __const_53^post36 = __const_53^0
		
		propagated equality __const_2147483647^post36 = __const_2147483647^0
		
		propagated equality seed2^post36 = seed2^0
		
		propagated equality __const_8^post36 = __const_8^0
		
		propagated equality hsize^post36 = hsize^0
		
		propagated equality i29^post36 = i29^0
		
		propagated equality __const_65536^post36 = __const_65536^0
		
		propagated equality out_count^post36 = out_count^0
		
		propagated equality i41^post36 = i41^0
		
		propagated equality __const_256^post36 = __const_256^0
		
		propagated equality block_compress^post36 = block_compress^0
		
		propagated equality __const_10000^post36 = __const_10000^0
		
		propagated equality rat26^post36 = rat26^0
		
		propagated equality ent8^post36 = ent8^0
		
		propagated equality fcode5^post36 = fcode5^0
		
		propagated equality apsim_bound11113^post36 = apsim_bound11113^0
		
		propagated equality m122^post36 = m122^0
		
		propagated equality in_count^post36 = in_count^0
		
		propagated equality __const_8388607^post36 = __const_8388607^0
		
		propagated equality __const_9^post36 = __const_9^0
		
		propagated equality maxbits^post36 = maxbits^0
		
		propagated equality n40^post36 = n40^0
		
		propagated equality bytes_out^post36 = bytes_out^0
		
		propagated equality ratio^post36 = ratio^0
		
		propagated equality maxmaxcode^post36 = maxmaxcode^0
		
		propagated equality clear_flg^post36 = clear_flg^0
		
		propagated equality c7^post36 = c7^0
		
		propagated equality i21^post36 = i21^0
		
		propagated equality incnt^post36 = incnt^0
		
		propagated equality count^post36 = count^0
		
		propagated equality bits33^post36 = bits33^0
		
		propagated equality i6^post36 = i6^0
		
		propagated equality __const_257^post36 = __const_257^0
		
		propagated equality i3^post36 = i3^0
		
		propagated equality hshift11^post36 = hshift11^0
		
		propagated equality hsize_reg10^post36 = hsize_reg10^0
		
		propagated equality tabort4^post36 = tabort4^0
		
		propagated equality apsim_incnt^post36 = apsim_incnt^0
		
		propagated equality __const_429496^post36 = __const_429496^0
		
		propagated equality c37^post36 = c37^0
		
		propagated equality hsize___019^post36 = hsize___019^0
		
		propagated equality i45^post36 = i45^0
		
		propagated equality disp9^post36 = disp9^0
		
		propagated equality n44^post36 = n44^0
		
		propagated equality maxcode^post36 = maxcode^0
		
		propagated equality offset^post36 = offset^0
		
		propagated equality code31^post36 = code31^0
		
		propagated equality n_bits^post36 = n_bits^0
		
		propagated equality free_ent^post36 = free_ent^0
		
	Simplified Guard

	Original rule:
	l34 -> l33 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+n_bits^0-maxbits^0 <= 0), cost: 1
	New rule:
	l34 -> l33 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+n_bits^0-maxbits^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l34 -> l33 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+n_bits^0-maxbits^0 <= 0, cost: 1
	New rule:
	l34 -> l33 : 1+n_bits^0-maxbits^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l34 -> l27 : __const_10000^0'=__const_10000^post37, __const_16^0'=__const_16^post37, __const_2147483647^0'=__const_2147483647^post37, __const_256^0'=__const_256^post37, __const_257^0'=__const_257^post37, __const_429496^0'=__const_429496^post37, __const_50^0'=__const_50^post37, __const_53^0'=__const_53^post37, __const_65536^0'=__const_65536^post37, __const_8388607^0'=__const_8388607^post37, __const_8^0'=__const_8^post37, __const_9^0'=__const_9^post37, apsim_bound11113^0'=apsim_bound11113^post37, apsim_incnt^0'=apsim_incnt^post37, bits33^0'=bits33^post37, block_compress^0'=block_compress^post37, bytes_out^0'=bytes_out^post37, c37^0'=c37^post37, c7^0'=c7^post37, checkpoint^0'=checkpoint^post37, clear_flg^0'=clear_flg^post37, code31^0'=code31^post37, count^0'=count^post37, disp9^0'=disp9^post37, ent8^0'=ent8^post37, exit_stat^0'=exit_stat^post37, fcode5^0'=fcode5^post37, free_ent^0'=free_ent^post37, hshift11^0'=hshift11^post37, hsize^0'=hsize^post37, hsize___019^0'=hsize___019^post37, hsize___027^0'=hsize___027^post37, hsize_reg10^0'=hsize_reg10^post37, i21^0'=i21^post37, i29^0'=i29^post37, i3^0'=i3^post37, i41^0'=i41^post37, i45^0'=i45^post37, i6^0'=i6^post37, in_count^0'=in_count^post37, incnt^0'=incnt^post37, m122^0'=m122^post37, m130^0'=m130^post37, maxbits^0'=maxbits^post37, maxcode^0'=maxcode^post37, maxmaxcode^0'=maxmaxcode^post37, n40^0'=n40^post37, n44^0'=n44^post37, n_bits^0'=n_bits^post37, offset^0'=offset^post37, out_count^0'=out_count^post37, r_off32^0'=r_off32^post37, rat26^0'=rat26^post37, ratio^0'=ratio^post37, ret_getbyte18^0'=ret_getbyte18^post37, ret_getbyte25^0'=ret_getbyte25^post37, seed2^0'=seed2^post37, tabort4^0'=tabort4^post37, tmp12^0'=tmp12^post37, tmp___014^0'=tmp___014^post37, tmp___017^0'=tmp___017^post37, tmp___024^0'=tmp___024^post37, tmp___115^0'=tmp___115^post37, (-maxmaxcode^0+maxcode^post37 == 0 /\ __const_53^0-__const_53^post37 == 0 /\ m122^0-m122^post37 == 0 /\ -code31^post37+code31^0 == 0 /\ hshift11^0-hshift11^post37 == 0 /\ m130^0-m130^post37 == 0 /\ apsim_incnt^0-apsim_incnt^post37 == 0 /\ __const_65536^0-__const_65536^post37 == 0 /\ -fcode5^post37+fcode5^0 == 0 /\ n44^0-n44^post37 == 0 /\ free_ent^0-free_ent^post37 == 0 /\ -ratio^post37+ratio^0 == 0 /\ -disp9^post37+disp9^0 == 0 /\ -ent8^post37+ent8^0 == 0 /\ __const_257^0-__const_257^post37 == 0 /\ -__const_10000^post37+__const_10000^0 == 0 /\ __const_8^0-__const_8^post37 == 0 /\ -tmp___014^post37+tmp___014^0 == 0 /\ i21^0-i21^post37 == 0 /\ in_count^0-in_count^post37 == 0 /\ -__const_256^post37+__const_256^0 == 0 /\ exit_stat^0-exit_stat^post37 == 0 /\ -maxbits^post37+maxbits^0 == 0 /\ i6^0-i6^post37 == 0 /\ -hsize_reg10^post37+hsize_reg10^0 == 0 /\ i3^0-i3^post37 == 0 /\ -bytes_out^post37+bytes_out^0 == 0 /\ -tmp___024^post37+tmp___024^0 == 0 /\ __const_16^0-__const_16^post37 == 0 /\ -ret_getbyte25^post37+ret_getbyte25^0 == 0 /\ c37^0-c37^post37 == 0 /\ -i45^post37+i45^0 == 0 /\ r_off32^0-r_off32^post37 == 0 /\ tmp___017^0-tmp___017^post37 == 0 /\ hsize___019^0-hsize___019^post37 == 0 /\ out_count^0-out_count^post37 == 0 /\ count^0-count^post37 == 0 /\ -n_bits^0+maxbits^0 <= 0 /\ -apsim_bound11113^post37+apsim_bound11113^0 == 0 /\ -__const_50^post37+__const_50^0 == 0 /\ -__const_429496^post37+__const_429496^0 == 0 /\ __const_9^0-__const_9^post37 == 0 /\ -offset^post37+offset^0 == 0 /\ -n_bits^post37+n_bits^0 == 0 /\ tmp12^0-tmp12^post37 == 0 /\ -c7^post37+c7^0 == 0 /\ -rat26^post37+rat26^0 == 0 /\ -seed2^post37+seed2^0 == 0 /\ checkpoint^0-checkpoint^post37 == 0 /\ -clear_flg^post37+clear_flg^0 == 0 /\ n_bits^0-maxbits^0 <= 0 /\ -hsize___027^post37+hsize___027^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post37 == 0 /\ -i29^post37+i29^0 == 0 /\ maxmaxcode^0-maxmaxcode^post37 == 0 /\ -__const_8388607^post37+__const_8388607^0 == 0 /\ -i41^post37+i41^0 == 0 /\ -__const_2147483647^post37+__const_2147483647^0 == 0 /\ -block_compress^post37+block_compress^0 == 0 /\ -incnt^post37+incnt^0 == 0 /\ -tmp___115^post37+tmp___115^0 == 0 /\ -n40^post37+n40^0 == 0 /\ tabort4^0-tabort4^post37 == 0 /\ bits33^0-bits33^post37 == 0 /\ -hsize^post37+hsize^0 == 0), cost: 1
	New rule:
	l34 -> l27 : __const_10000^0'=__const_10000^post37, __const_16^0'=__const_16^post37, __const_2147483647^0'=__const_2147483647^post37, __const_256^0'=__const_256^post37, __const_257^0'=__const_257^post37, __const_429496^0'=__const_429496^post37, __const_50^0'=__const_50^post37, __const_53^0'=__const_53^post37, __const_65536^0'=__const_65536^post37, __const_8388607^0'=__const_8388607^post37, __const_8^0'=__const_8^post37, __const_9^0'=__const_9^post37, apsim_bound11113^0'=apsim_bound11113^post37, apsim_incnt^0'=apsim_incnt^post37, bits33^0'=bits33^post37, block_compress^0'=block_compress^post37, bytes_out^0'=bytes_out^post37, c37^0'=c37^post37, c7^0'=c7^post37, checkpoint^0'=checkpoint^post37, clear_flg^0'=clear_flg^post37, code31^0'=code31^post37, count^0'=count^post37, disp9^0'=disp9^post37, ent8^0'=ent8^post37, exit_stat^0'=exit_stat^post37, fcode5^0'=fcode5^post37, free_ent^0'=free_ent^post37, hshift11^0'=hshift11^post37, hsize^0'=hsize^post37, hsize___019^0'=hsize___019^post37, hsize___027^0'=hsize___027^post37, hsize_reg10^0'=hsize_reg10^post37, i21^0'=i21^post37, i29^0'=i29^post37, i3^0'=i3^post37, i41^0'=i41^post37, i45^0'=i45^post37, i6^0'=i6^post37, in_count^0'=in_count^post37, incnt^0'=incnt^post37, m122^0'=m122^post37, m130^0'=m130^post37, maxbits^0'=maxbits^post37, maxcode^0'=maxcode^post37, maxmaxcode^0'=maxmaxcode^post37, n40^0'=n40^post37, n44^0'=n44^post37, n_bits^0'=n_bits^post37, offset^0'=offset^post37, out_count^0'=out_count^post37, r_off32^0'=r_off32^post37, rat26^0'=rat26^post37, ratio^0'=ratio^post37, ret_getbyte18^0'=ret_getbyte18^post37, ret_getbyte25^0'=ret_getbyte25^post37, seed2^0'=seed2^post37, tabort4^0'=tabort4^post37, tmp12^0'=tmp12^post37, tmp___014^0'=tmp___014^post37, tmp___017^0'=tmp___017^post37, tmp___024^0'=tmp___024^post37, tmp___115^0'=tmp___115^post37, (-maxmaxcode^0+maxcode^post37 == 0 /\ __const_53^0-__const_53^post37 == 0 /\ m122^0-m122^post37 == 0 /\ -code31^post37+code31^0 == 0 /\ hshift11^0-hshift11^post37 == 0 /\ m130^0-m130^post37 == 0 /\ apsim_incnt^0-apsim_incnt^post37 == 0 /\ __const_65536^0-__const_65536^post37 == 0 /\ -fcode5^post37+fcode5^0 == 0 /\ n44^0-n44^post37 == 0 /\ free_ent^0-free_ent^post37 == 0 /\ -ratio^post37+ratio^0 == 0 /\ -disp9^post37+disp9^0 == 0 /\ -ent8^post37+ent8^0 == 0 /\ __const_257^0-__const_257^post37 == 0 /\ -__const_10000^post37+__const_10000^0 == 0 /\ __const_8^0-__const_8^post37 == 0 /\ -tmp___014^post37+tmp___014^0 == 0 /\ i21^0-i21^post37 == 0 /\ in_count^0-in_count^post37 == 0 /\ -__const_256^post37+__const_256^0 == 0 /\ exit_stat^0-exit_stat^post37 == 0 /\ -maxbits^post37+maxbits^0 == 0 /\ i6^0-i6^post37 == 0 /\ -hsize_reg10^post37+hsize_reg10^0 == 0 /\ i3^0-i3^post37 == 0 /\ -bytes_out^post37+bytes_out^0 == 0 /\ -tmp___024^post37+tmp___024^0 == 0 /\ __const_16^0-__const_16^post37 == 0 /\ -ret_getbyte25^post37+ret_getbyte25^0 == 0 /\ c37^0-c37^post37 == 0 /\ -i45^post37+i45^0 == 0 /\ r_off32^0-r_off32^post37 == 0 /\ tmp___017^0-tmp___017^post37 == 0 /\ hsize___019^0-hsize___019^post37 == 0 /\ out_count^0-out_count^post37 == 0 /\ count^0-count^post37 == 0 /\ -n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ -apsim_bound11113^post37+apsim_bound11113^0 == 0 /\ -__const_50^post37+__const_50^0 == 0 /\ -__const_429496^post37+__const_429496^0 == 0 /\ __const_9^0-__const_9^post37 == 0 /\ -offset^post37+offset^0 == 0 /\ -n_bits^post37+n_bits^0 == 0 /\ tmp12^0-tmp12^post37 == 0 /\ -c7^post37+c7^0 == 0 /\ -rat26^post37+rat26^0 == 0 /\ -seed2^post37+seed2^0 == 0 /\ checkpoint^0-checkpoint^post37 == 0 /\ -clear_flg^post37+clear_flg^0 == 0 /\ n_bits^0-maxbits^0 <= 0 /\ -hsize___027^post37+hsize___027^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post37 == 0 /\ -i29^post37+i29^0 == 0 /\ maxmaxcode^0-maxmaxcode^post37 == 0 /\ -__const_8388607^post37+__const_8388607^0 == 0 /\ -i41^post37+i41^0 == 0 /\ -__const_2147483647^post37+__const_2147483647^0 == 0 /\ -block_compress^post37+block_compress^0 == 0 /\ -incnt^post37+incnt^0 == 0 /\ -tmp___115^post37+tmp___115^0 == 0 /\ -n40^post37+n40^0 == 0 /\ tabort4^0-tabort4^post37 == 0 /\ bits33^0-bits33^post37 == 0 /\ -hsize^post37+hsize^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l34 -> l27 : __const_10000^0'=__const_10000^post37, __const_16^0'=__const_16^post37, __const_2147483647^0'=__const_2147483647^post37, __const_256^0'=__const_256^post37, __const_257^0'=__const_257^post37, __const_429496^0'=__const_429496^post37, __const_50^0'=__const_50^post37, __const_53^0'=__const_53^post37, __const_65536^0'=__const_65536^post37, __const_8388607^0'=__const_8388607^post37, __const_8^0'=__const_8^post37, __const_9^0'=__const_9^post37, apsim_bound11113^0'=apsim_bound11113^post37, apsim_incnt^0'=apsim_incnt^post37, bits33^0'=bits33^post37, block_compress^0'=block_compress^post37, bytes_out^0'=bytes_out^post37, c37^0'=c37^post37, c7^0'=c7^post37, checkpoint^0'=checkpoint^post37, clear_flg^0'=clear_flg^post37, code31^0'=code31^post37, count^0'=count^post37, disp9^0'=disp9^post37, ent8^0'=ent8^post37, exit_stat^0'=exit_stat^post37, fcode5^0'=fcode5^post37, free_ent^0'=free_ent^post37, hshift11^0'=hshift11^post37, hsize^0'=hsize^post37, hsize___019^0'=hsize___019^post37, hsize___027^0'=hsize___027^post37, hsize_reg10^0'=hsize_reg10^post37, i21^0'=i21^post37, i29^0'=i29^post37, i3^0'=i3^post37, i41^0'=i41^post37, i45^0'=i45^post37, i6^0'=i6^post37, in_count^0'=in_count^post37, incnt^0'=incnt^post37, m122^0'=m122^post37, m130^0'=m130^post37, maxbits^0'=maxbits^post37, maxcode^0'=maxcode^post37, maxmaxcode^0'=maxmaxcode^post37, n40^0'=n40^post37, n44^0'=n44^post37, n_bits^0'=n_bits^post37, offset^0'=offset^post37, out_count^0'=out_count^post37, r_off32^0'=r_off32^post37, rat26^0'=rat26^post37, ratio^0'=ratio^post37, ret_getbyte18^0'=ret_getbyte18^post37, ret_getbyte25^0'=ret_getbyte25^post37, seed2^0'=seed2^post37, tabort4^0'=tabort4^post37, tmp12^0'=tmp12^post37, tmp___014^0'=tmp___014^post37, tmp___017^0'=tmp___017^post37, tmp___024^0'=tmp___024^post37, tmp___115^0'=tmp___115^post37, (-maxmaxcode^0+maxcode^post37 == 0 /\ __const_53^0-__const_53^post37 == 0 /\ m122^0-m122^post37 == 0 /\ -code31^post37+code31^0 == 0 /\ hshift11^0-hshift11^post37 == 0 /\ m130^0-m130^post37 == 0 /\ apsim_incnt^0-apsim_incnt^post37 == 0 /\ __const_65536^0-__const_65536^post37 == 0 /\ -fcode5^post37+fcode5^0 == 0 /\ n44^0-n44^post37 == 0 /\ free_ent^0-free_ent^post37 == 0 /\ -ratio^post37+ratio^0 == 0 /\ -disp9^post37+disp9^0 == 0 /\ -ent8^post37+ent8^0 == 0 /\ __const_257^0-__const_257^post37 == 0 /\ -__const_10000^post37+__const_10000^0 == 0 /\ __const_8^0-__const_8^post37 == 0 /\ -tmp___014^post37+tmp___014^0 == 0 /\ i21^0-i21^post37 == 0 /\ in_count^0-in_count^post37 == 0 /\ -__const_256^post37+__const_256^0 == 0 /\ exit_stat^0-exit_stat^post37 == 0 /\ -maxbits^post37+maxbits^0 == 0 /\ i6^0-i6^post37 == 0 /\ -hsize_reg10^post37+hsize_reg10^0 == 0 /\ i3^0-i3^post37 == 0 /\ -bytes_out^post37+bytes_out^0 == 0 /\ -tmp___024^post37+tmp___024^0 == 0 /\ __const_16^0-__const_16^post37 == 0 /\ -ret_getbyte25^post37+ret_getbyte25^0 == 0 /\ c37^0-c37^post37 == 0 /\ -i45^post37+i45^0 == 0 /\ r_off32^0-r_off32^post37 == 0 /\ tmp___017^0-tmp___017^post37 == 0 /\ hsize___019^0-hsize___019^post37 == 0 /\ out_count^0-out_count^post37 == 0 /\ count^0-count^post37 == 0 /\ -n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ -apsim_bound11113^post37+apsim_bound11113^0 == 0 /\ -__const_50^post37+__const_50^0 == 0 /\ -__const_429496^post37+__const_429496^0 == 0 /\ __const_9^0-__const_9^post37 == 0 /\ -offset^post37+offset^0 == 0 /\ -n_bits^post37+n_bits^0 == 0 /\ tmp12^0-tmp12^post37 == 0 /\ -c7^post37+c7^0 == 0 /\ -rat26^post37+rat26^0 == 0 /\ -seed2^post37+seed2^0 == 0 /\ checkpoint^0-checkpoint^post37 == 0 /\ -clear_flg^post37+clear_flg^0 == 0 /\ n_bits^0-maxbits^0 <= 0 /\ -hsize___027^post37+hsize___027^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post37 == 0 /\ -i29^post37+i29^0 == 0 /\ maxmaxcode^0-maxmaxcode^post37 == 0 /\ -__const_8388607^post37+__const_8388607^0 == 0 /\ -i41^post37+i41^0 == 0 /\ -__const_2147483647^post37+__const_2147483647^0 == 0 /\ -block_compress^post37+block_compress^0 == 0 /\ -incnt^post37+incnt^0 == 0 /\ -tmp___115^post37+tmp___115^0 == 0 /\ -n40^post37+n40^0 == 0 /\ tabort4^0-tabort4^post37 == 0 /\ bits33^0-bits33^post37 == 0 /\ -hsize^post37+hsize^0 == 0), cost: 1
	New rule:
	l34 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxmaxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
	
		propagated equality maxcode^post37 = maxmaxcode^0
		
		propagated equality __const_53^post37 = __const_53^0
		
		propagated equality m122^post37 = m122^0
		
		propagated equality code31^post37 = code31^0
		
		propagated equality hshift11^post37 = hshift11^0
		
		propagated equality m130^post37 = m130^0
		
		propagated equality apsim_incnt^post37 = apsim_incnt^0
		
		propagated equality __const_65536^post37 = __const_65536^0
		
		propagated equality fcode5^post37 = fcode5^0
		
		propagated equality n44^post37 = n44^0
		
		propagated equality free_ent^post37 = free_ent^0
		
		propagated equality ratio^post37 = ratio^0
		
		propagated equality disp9^post37 = disp9^0
		
		propagated equality ent8^post37 = ent8^0
		
		propagated equality __const_257^post37 = __const_257^0
		
		propagated equality __const_10000^post37 = __const_10000^0
		
		propagated equality __const_8^post37 = __const_8^0
		
		propagated equality tmp___014^post37 = tmp___014^0
		
		propagated equality i21^post37 = i21^0
		
		propagated equality in_count^post37 = in_count^0
		
		propagated equality __const_256^post37 = __const_256^0
		
		propagated equality exit_stat^post37 = exit_stat^0
		
		propagated equality maxbits^post37 = maxbits^0
		
		propagated equality i6^post37 = i6^0
		
		propagated equality hsize_reg10^post37 = hsize_reg10^0
		
		propagated equality i3^post37 = i3^0
		
		propagated equality bytes_out^post37 = bytes_out^0
		
		propagated equality tmp___024^post37 = tmp___024^0
		
		propagated equality __const_16^post37 = __const_16^0
		
		propagated equality ret_getbyte25^post37 = ret_getbyte25^0
		
		propagated equality c37^post37 = c37^0
		
		propagated equality i45^post37 = i45^0
		
		propagated equality r_off32^post37 = r_off32^0
		
		propagated equality tmp___017^post37 = tmp___017^0
		
		propagated equality hsize___019^post37 = hsize___019^0
		
		propagated equality out_count^post37 = out_count^0
		
		propagated equality count^post37 = count^0
		
		propagated equality apsim_bound11113^post37 = apsim_bound11113^0
		
		propagated equality __const_50^post37 = __const_50^0
		
		propagated equality __const_429496^post37 = __const_429496^0
		
		propagated equality __const_9^post37 = __const_9^0
		
		propagated equality offset^post37 = offset^0
		
		propagated equality n_bits^post37 = n_bits^0
		
		propagated equality tmp12^post37 = tmp12^0
		
		propagated equality c7^post37 = c7^0
		
		propagated equality rat26^post37 = rat26^0
		
		propagated equality seed2^post37 = seed2^0
		
		propagated equality checkpoint^post37 = checkpoint^0
		
		propagated equality clear_flg^post37 = clear_flg^0
		
		propagated equality hsize___027^post37 = hsize___027^0
		
		propagated equality ret_getbyte18^post37 = ret_getbyte18^0
		
		propagated equality i29^post37 = i29^0
		
		propagated equality maxmaxcode^post37 = maxmaxcode^0
		
		propagated equality __const_8388607^post37 = __const_8388607^0
		
		propagated equality i41^post37 = i41^0
		
		propagated equality __const_2147483647^post37 = __const_2147483647^0
		
		propagated equality block_compress^post37 = block_compress^0
		
		propagated equality incnt^post37 = incnt^0
		
		propagated equality tmp___115^post37 = tmp___115^0
		
		propagated equality n40^post37 = n40^0
		
		propagated equality tabort4^post37 = tabort4^0
		
		propagated equality bits33^post37 = bits33^0
		
		propagated equality hsize^post37 = hsize^0
		
	Simplified Guard

	Original rule:
	l34 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxmaxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
	New rule:
	l34 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxmaxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l34 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxmaxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
	New rule:
	l34 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxmaxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l34 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxmaxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
	New rule:
	l34 -> l27 : maxcode^0'=maxmaxcode^0, (-n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l27 -> l35 : __const_10000^0'=__const_10000^post38, __const_16^0'=__const_16^post38, __const_2147483647^0'=__const_2147483647^post38, __const_256^0'=__const_256^post38, __const_257^0'=__const_257^post38, __const_429496^0'=__const_429496^post38, __const_50^0'=__const_50^post38, __const_53^0'=__const_53^post38, __const_65536^0'=__const_65536^post38, __const_8388607^0'=__const_8388607^post38, __const_8^0'=__const_8^post38, __const_9^0'=__const_9^post38, apsim_bound11113^0'=apsim_bound11113^post38, apsim_incnt^0'=apsim_incnt^post38, bits33^0'=bits33^post38, block_compress^0'=block_compress^post38, bytes_out^0'=bytes_out^post38, c37^0'=c37^post38, c7^0'=c7^post38, checkpoint^0'=checkpoint^post38, clear_flg^0'=clear_flg^post38, code31^0'=code31^post38, count^0'=count^post38, disp9^0'=disp9^post38, ent8^0'=ent8^post38, exit_stat^0'=exit_stat^post38, fcode5^0'=fcode5^post38, free_ent^0'=free_ent^post38, hshift11^0'=hshift11^post38, hsize^0'=hsize^post38, hsize___019^0'=hsize___019^post38, hsize___027^0'=hsize___027^post38, hsize_reg10^0'=hsize_reg10^post38, i21^0'=i21^post38, i29^0'=i29^post38, i3^0'=i3^post38, i41^0'=i41^post38, i45^0'=i45^post38, i6^0'=i6^post38, in_count^0'=in_count^post38, incnt^0'=incnt^post38, m122^0'=m122^post38, m130^0'=m130^post38, maxbits^0'=maxbits^post38, maxcode^0'=maxcode^post38, maxmaxcode^0'=maxmaxcode^post38, n40^0'=n40^post38, n44^0'=n44^post38, n_bits^0'=n_bits^post38, offset^0'=offset^post38, out_count^0'=out_count^post38, r_off32^0'=r_off32^post38, rat26^0'=rat26^post38, ratio^0'=ratio^post38, ret_getbyte18^0'=ret_getbyte18^post38, ret_getbyte25^0'=ret_getbyte25^post38, seed2^0'=seed2^post38, tabort4^0'=tabort4^post38, tmp12^0'=tmp12^post38, tmp___014^0'=tmp___014^post38, tmp___017^0'=tmp___017^post38, tmp___024^0'=tmp___024^post38, tmp___115^0'=tmp___115^post38, (-i41^post38+i41^0 == 0 /\ -i45^post38+i45^0 == 0 /\ -apsim_bound11113^post38+apsim_bound11113^0 == 0 /\ -n_bits^post38+n_bits^0 == 0 /\ maxcode^0-maxcode^post38 == 0 /\ offset^0-offset^post38 == 0 /\ -__const_50^post38+__const_50^0 == 0 /\ -m122^post38+m122^0 == 0 /\ -hsize_reg10^post38+hsize_reg10^0 == 0 /\ -__const_10000^post38+__const_10000^0 == 0 /\ -hsize^post38+hsize^0 == 0 /\ bits33^0-bits33^post38 == 0 /\ -hsize___027^post38+hsize___027^0 == 0 /\ __const_16^0-__const_16^post38 == 0 /\ i6^0-i6^post38 == 0 /\ -incnt^post38+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post38 == 0 /\ apsim_incnt^0-apsim_incnt^post38 == 0 /\ hshift11^0-hshift11^post38 == 0 /\ -maxbits^post38+maxbits^0 == 0 /\ -n40^post38+n40^0 == 0 /\ __const_65536^0-__const_65536^post38 == 0 /\ free_ent^0-free_ent^post38 == 0 /\ c37^0-c37^post38 == 0 /\ -tmp___115^post38+tmp___115^0 == 0 /\ -in_count^post38+in_count^0 == 0 /\ -i29^post38+i29^0 == 0 /\ -__const_8388607^post38+__const_8388607^0 == 0 /\ code31^0-code31^post38 == 0 /\ i3^0-i3^post38 == 0 /\ __const_53^0-__const_53^post38 == 0 /\ ret_getbyte25^0-ret_getbyte25^post38 == 0 /\ c7^0-c7^post38 == 0 /\ __const_257^0-__const_257^post38 == 0 /\ -clear_flg^post38+clear_flg^0 == 0 /\ n44^0-n44^post38 == 0 /\ m130^0-m130^post38 == 0 /\ -fcode5^post38+fcode5^0 == 0 /\ r_off32^0-r_off32^post38 == 0 /\ -bytes_out^post38+bytes_out^0 == 0 /\ __const_8^0-__const_8^post38 == 0 /\ -block_compress^post38+block_compress^0 == 0 /\ -__const_256^post38+__const_256^0 == 0 /\ -count^post38+count^0 == 0 /\ -disp9^post38+disp9^0 == 0 /\ -seed2^post38+seed2^0 == 0 /\ tabort4^0-tabort4^post38 == 0 /\ tmp12^0-tmp12^post38 == 0 /\ ent8^0-ent8^post38 == 0 /\ tmp___017^0-tmp___017^post38 == 0 /\ i21^0-i21^post38 == 0 /\ __const_429496^0-__const_429496^post38 == 0 /\ exit_stat^0-exit_stat^post38 == 0 /\ -rat26^post38+rat26^0 == 0 /\ hsize___019^0-hsize___019^post38 == 0 /\ -ratio^post38+ratio^0 == 0 /\ -tmp___024^post38+tmp___024^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post38 == 0 /\ out_count^0-out_count^post38 == 0 /\ -__const_2147483647^post38+__const_2147483647^0 == 0 /\ __const_9^0-__const_9^post38 == 0 /\ checkpoint^0-checkpoint^post38 == 0 /\ -tmp___014^post38+tmp___014^0 == 0), cost: 1
	New rule:
	l27 -> l35 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality i41^post38 = i41^0
		
		propagated equality i45^post38 = i45^0
		
		propagated equality apsim_bound11113^post38 = apsim_bound11113^0
		
		propagated equality n_bits^post38 = n_bits^0
		
		propagated equality maxcode^post38 = maxcode^0
		
		propagated equality offset^post38 = offset^0
		
		propagated equality __const_50^post38 = __const_50^0
		
		propagated equality m122^post38 = m122^0
		
		propagated equality hsize_reg10^post38 = hsize_reg10^0
		
		propagated equality __const_10000^post38 = __const_10000^0
		
		propagated equality hsize^post38 = hsize^0
		
		propagated equality bits33^post38 = bits33^0
		
		propagated equality hsize___027^post38 = hsize___027^0
		
		propagated equality __const_16^post38 = __const_16^0
		
		propagated equality i6^post38 = i6^0
		
		propagated equality incnt^post38 = incnt^0
		
		propagated equality maxmaxcode^post38 = maxmaxcode^0
		
		propagated equality apsim_incnt^post38 = apsim_incnt^0
		
		propagated equality hshift11^post38 = hshift11^0
		
		propagated equality maxbits^post38 = maxbits^0
		
		propagated equality n40^post38 = n40^0
		
		propagated equality __const_65536^post38 = __const_65536^0
		
		propagated equality free_ent^post38 = free_ent^0
		
		propagated equality c37^post38 = c37^0
		
		propagated equality tmp___115^post38 = tmp___115^0
		
		propagated equality in_count^post38 = in_count^0
		
		propagated equality i29^post38 = i29^0
		
		propagated equality __const_8388607^post38 = __const_8388607^0
		
		propagated equality code31^post38 = code31^0
		
		propagated equality i3^post38 = i3^0
		
		propagated equality __const_53^post38 = __const_53^0
		
		propagated equality ret_getbyte25^post38 = ret_getbyte25^0
		
		propagated equality c7^post38 = c7^0
		
		propagated equality __const_257^post38 = __const_257^0
		
		propagated equality clear_flg^post38 = clear_flg^0
		
		propagated equality n44^post38 = n44^0
		
		propagated equality m130^post38 = m130^0
		
		propagated equality fcode5^post38 = fcode5^0
		
		propagated equality r_off32^post38 = r_off32^0
		
		propagated equality bytes_out^post38 = bytes_out^0
		
		propagated equality __const_8^post38 = __const_8^0
		
		propagated equality block_compress^post38 = block_compress^0
		
		propagated equality __const_256^post38 = __const_256^0
		
		propagated equality count^post38 = count^0
		
		propagated equality disp9^post38 = disp9^0
		
		propagated equality seed2^post38 = seed2^0
		
		propagated equality tabort4^post38 = tabort4^0
		
		propagated equality tmp12^post38 = tmp12^0
		
		propagated equality ent8^post38 = ent8^0
		
		propagated equality tmp___017^post38 = tmp___017^0
		
		propagated equality i21^post38 = i21^0
		
		propagated equality __const_429496^post38 = __const_429496^0
		
		propagated equality exit_stat^post38 = exit_stat^0
		
		propagated equality rat26^post38 = rat26^0
		
		propagated equality hsize___019^post38 = hsize___019^0
		
		propagated equality ratio^post38 = ratio^0
		
		propagated equality tmp___024^post38 = tmp___024^0
		
		propagated equality ret_getbyte18^post38 = ret_getbyte18^0
		
		propagated equality out_count^post38 = out_count^0
		
		propagated equality __const_2147483647^post38 = __const_2147483647^0
		
		propagated equality __const_9^post38 = __const_9^0
		
		propagated equality checkpoint^post38 = checkpoint^0
		
		propagated equality tmp___014^post38 = tmp___014^0
		
	Simplified Guard

	Original rule:
	l27 -> l35 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l27 -> l35 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l27 -> l35 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l27 -> l35 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l36 -> l27 : __const_10000^0'=__const_10000^post39, __const_16^0'=__const_16^post39, __const_2147483647^0'=__const_2147483647^post39, __const_256^0'=__const_256^post39, __const_257^0'=__const_257^post39, __const_429496^0'=__const_429496^post39, __const_50^0'=__const_50^post39, __const_53^0'=__const_53^post39, __const_65536^0'=__const_65536^post39, __const_8388607^0'=__const_8388607^post39, __const_8^0'=__const_8^post39, __const_9^0'=__const_9^post39, apsim_bound11113^0'=apsim_bound11113^post39, apsim_incnt^0'=apsim_incnt^post39, bits33^0'=bits33^post39, block_compress^0'=block_compress^post39, bytes_out^0'=bytes_out^post39, c37^0'=c37^post39, c7^0'=c7^post39, checkpoint^0'=checkpoint^post39, clear_flg^0'=clear_flg^post39, code31^0'=code31^post39, count^0'=count^post39, disp9^0'=disp9^post39, ent8^0'=ent8^post39, exit_stat^0'=exit_stat^post39, fcode5^0'=fcode5^post39, free_ent^0'=free_ent^post39, hshift11^0'=hshift11^post39, hsize^0'=hsize^post39, hsize___019^0'=hsize___019^post39, hsize___027^0'=hsize___027^post39, hsize_reg10^0'=hsize_reg10^post39, i21^0'=i21^post39, i29^0'=i29^post39, i3^0'=i3^post39, i41^0'=i41^post39, i45^0'=i45^post39, i6^0'=i6^post39, in_count^0'=in_count^post39, incnt^0'=incnt^post39, m122^0'=m122^post39, m130^0'=m130^post39, maxbits^0'=maxbits^post39, maxcode^0'=maxcode^post39, maxmaxcode^0'=maxmaxcode^post39, n40^0'=n40^post39, n44^0'=n44^post39, n_bits^0'=n_bits^post39, offset^0'=offset^post39, out_count^0'=out_count^post39, r_off32^0'=r_off32^post39, rat26^0'=rat26^post39, ratio^0'=ratio^post39, ret_getbyte18^0'=ret_getbyte18^post39, ret_getbyte25^0'=ret_getbyte25^post39, seed2^0'=seed2^post39, tabort4^0'=tabort4^post39, tmp12^0'=tmp12^post39, tmp___014^0'=tmp___014^post39, tmp___017^0'=tmp___017^post39, tmp___024^0'=tmp___024^post39, tmp___115^0'=tmp___115^post39, (0 == 0 /\ -tmp___024^post39+tmp___024^0 == 0 /\ -i21^post39+i21^0 == 0 /\ __const_9^0-__const_9^post39 == 0 /\ rat26^0-rat26^post39 == 0 /\ tmp12^0-tmp12^post39 == 0 /\ c37^0-c37^post39 == 0 /\ n_bits^post39-__const_9^0 == 0 /\ bits33^0-bits33^post39 == 0 /\ __const_257^0-__const_257^post39 == 0 /\ -checkpoint^post39+checkpoint^0 == 0 /\ c7^0-c7^post39 == 0 /\ apsim_incnt^0-apsim_incnt^post39 == 0 /\ i29^0-i29^post39 == 0 /\ n40^0-n40^post39 == 0 /\ -incnt^post39+incnt^0 == 0 /\ hsize___027^0-hsize___027^post39 == 0 /\ -hsize^post39+hsize^0 == 0 /\ hshift11^0-hshift11^post39 == 0 /\ -r_off32^post39+r_off32^0 == 0 /\ -n44^post39+n44^0 == 0 /\ hsize___019^0-hsize___019^post39 == 0 /\ -__const_50^post39+__const_50^0 == 0 /\ tmp___014^0-tmp___014^post39 == 0 /\ -count^post39+count^0 == 0 /\ -fcode5^post39+fcode5^0 == 0 /\ -apsim_bound11113^post39+apsim_bound11113^0 == 0 /\ -i3^post39+i3^0 == 0 /\ __const_65536^0-__const_65536^post39 == 0 /\ free_ent^0-free_ent^post39 == 0 /\ code31^0-code31^post39 == 0 /\ -tmp___017^post39+tmp___017^0 == 0 /\ -i41^post39+i41^0 == 0 /\ -ratio^post39+ratio^0 == 0 /\ -ret_getbyte18^post39+ret_getbyte18^0 == 0 /\ out_count^0-out_count^post39 == 0 /\ -i6^post39+i6^0 == 0 /\ clear_flg^post39 == 0 /\ -in_count^post39+in_count^0 == 0 /\ -__const_256^post39+__const_256^0 == 0 /\ offset^0-offset^post39 == 0 /\ -__const_2147483647^post39+__const_2147483647^0 == 0 /\ maxmaxcode^0-maxmaxcode^post39 == 0 /\ __const_53^0-__const_53^post39 == 0 /\ -hsize_reg10^post39+hsize_reg10^0 == 0 /\ -__const_10000^post39+__const_10000^0 == 0 /\ -__const_8388607^post39+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post39 == 0 /\ -tabort4^post39+tabort4^0 == 0 /\ tmp___115^0-tmp___115^post39 == 0 /\ ret_getbyte25^0-ret_getbyte25^post39 == 0 /\ __const_16^0-__const_16^post39 == 0 /\ -m122^post39+m122^0 == 0 /\ seed2^0-seed2^post39 == 0 /\ -bytes_out^post39+bytes_out^0 == 0 /\ m130^0-m130^post39 == 0 /\ __const_429496^0-__const_429496^post39 == 0 /\ -disp9^post39+disp9^0 == 0 /\ ent8^0-ent8^post39 == 0 /\ -exit_stat^post39+exit_stat^0 == 0 /\ maxbits^0-maxbits^post39 == 0 /\ block_compress^0-block_compress^post39 == 0 /\ i45^0-i45^post39 == 0), cost: 1
	New rule:
	l36 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^post39, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=__const_9^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality tmp___024^post39 = tmp___024^0
		
		propagated equality i21^post39 = i21^0
		
		propagated equality __const_9^post39 = __const_9^0
		
		propagated equality rat26^post39 = rat26^0
		
		propagated equality tmp12^post39 = tmp12^0
		
		propagated equality c37^post39 = c37^0
		
		propagated equality n_bits^post39 = __const_9^0
		
		propagated equality bits33^post39 = bits33^0
		
		propagated equality __const_257^post39 = __const_257^0
		
		propagated equality checkpoint^post39 = checkpoint^0
		
		propagated equality c7^post39 = c7^0
		
		propagated equality apsim_incnt^post39 = apsim_incnt^0
		
		propagated equality i29^post39 = i29^0
		
		propagated equality n40^post39 = n40^0
		
		propagated equality incnt^post39 = incnt^0
		
		propagated equality hsize___027^post39 = hsize___027^0
		
		propagated equality hsize^post39 = hsize^0
		
		propagated equality hshift11^post39 = hshift11^0
		
		propagated equality r_off32^post39 = r_off32^0
		
		propagated equality n44^post39 = n44^0
		
		propagated equality hsize___019^post39 = hsize___019^0
		
		propagated equality __const_50^post39 = __const_50^0
		
		propagated equality tmp___014^post39 = tmp___014^0
		
		propagated equality count^post39 = count^0
		
		propagated equality fcode5^post39 = fcode5^0
		
		propagated equality apsim_bound11113^post39 = apsim_bound11113^0
		
		propagated equality i3^post39 = i3^0
		
		propagated equality __const_65536^post39 = __const_65536^0
		
		propagated equality free_ent^post39 = free_ent^0
		
		propagated equality code31^post39 = code31^0
		
		propagated equality tmp___017^post39 = tmp___017^0
		
		propagated equality i41^post39 = i41^0
		
		propagated equality ratio^post39 = ratio^0
		
		propagated equality ret_getbyte18^post39 = ret_getbyte18^0
		
		propagated equality out_count^post39 = out_count^0
		
		propagated equality i6^post39 = i6^0
		
		propagated equality clear_flg^post39 = 0
		
		propagated equality in_count^post39 = in_count^0
		
		propagated equality __const_256^post39 = __const_256^0
		
		propagated equality offset^post39 = offset^0
		
		propagated equality __const_2147483647^post39 = __const_2147483647^0
		
		propagated equality maxmaxcode^post39 = maxmaxcode^0
		
		propagated equality __const_53^post39 = __const_53^0
		
		propagated equality hsize_reg10^post39 = hsize_reg10^0
		
		propagated equality __const_10000^post39 = __const_10000^0
		
		propagated equality __const_8388607^post39 = __const_8388607^0
		
		propagated equality __const_8^post39 = __const_8^0
		
		propagated equality tabort4^post39 = tabort4^0
		
		propagated equality tmp___115^post39 = tmp___115^0
		
		propagated equality ret_getbyte25^post39 = ret_getbyte25^0
		
		propagated equality __const_16^post39 = __const_16^0
		
		propagated equality m122^post39 = m122^0
		
		propagated equality seed2^post39 = seed2^0
		
		propagated equality bytes_out^post39 = bytes_out^0
		
		propagated equality m130^post39 = m130^0
		
		propagated equality __const_429496^post39 = __const_429496^0
		
		propagated equality disp9^post39 = disp9^0
		
		propagated equality ent8^post39 = ent8^0
		
		propagated equality exit_stat^post39 = exit_stat^0
		
		propagated equality maxbits^post39 = maxbits^0
		
		propagated equality block_compress^post39 = block_compress^0
		
		propagated equality i45^post39 = i45^0
		
	Simplified Guard

	Original rule:
	l36 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^post39, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=__const_9^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l36 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^post39, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=__const_9^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l36 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^post39, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=__const_9^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l36 -> l27 : clear_flg^0'=0, maxcode^0'=maxcode^post39, n_bits^0'=__const_9^0, T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l37 -> l34 : __const_10000^0'=__const_10000^post40, __const_16^0'=__const_16^post40, __const_2147483647^0'=__const_2147483647^post40, __const_256^0'=__const_256^post40, __const_257^0'=__const_257^post40, __const_429496^0'=__const_429496^post40, __const_50^0'=__const_50^post40, __const_53^0'=__const_53^post40, __const_65536^0'=__const_65536^post40, __const_8388607^0'=__const_8388607^post40, __const_8^0'=__const_8^post40, __const_9^0'=__const_9^post40, apsim_bound11113^0'=apsim_bound11113^post40, apsim_incnt^0'=apsim_incnt^post40, bits33^0'=bits33^post40, block_compress^0'=block_compress^post40, bytes_out^0'=bytes_out^post40, c37^0'=c37^post40, c7^0'=c7^post40, checkpoint^0'=checkpoint^post40, clear_flg^0'=clear_flg^post40, code31^0'=code31^post40, count^0'=count^post40, disp9^0'=disp9^post40, ent8^0'=ent8^post40, exit_stat^0'=exit_stat^post40, fcode5^0'=fcode5^post40, free_ent^0'=free_ent^post40, hshift11^0'=hshift11^post40, hsize^0'=hsize^post40, hsize___019^0'=hsize___019^post40, hsize___027^0'=hsize___027^post40, hsize_reg10^0'=hsize_reg10^post40, i21^0'=i21^post40, i29^0'=i29^post40, i3^0'=i3^post40, i41^0'=i41^post40, i45^0'=i45^post40, i6^0'=i6^post40, in_count^0'=in_count^post40, incnt^0'=incnt^post40, m122^0'=m122^post40, m130^0'=m130^post40, maxbits^0'=maxbits^post40, maxcode^0'=maxcode^post40, maxmaxcode^0'=maxmaxcode^post40, n40^0'=n40^post40, n44^0'=n44^post40, n_bits^0'=n_bits^post40, offset^0'=offset^post40, out_count^0'=out_count^post40, r_off32^0'=r_off32^post40, rat26^0'=rat26^post40, ratio^0'=ratio^post40, ret_getbyte18^0'=ret_getbyte18^post40, ret_getbyte25^0'=ret_getbyte25^post40, seed2^0'=seed2^post40, tabort4^0'=tabort4^post40, tmp12^0'=tmp12^post40, tmp___014^0'=tmp___014^post40, tmp___017^0'=tmp___017^post40, tmp___024^0'=tmp___024^post40, tmp___115^0'=tmp___115^post40, (-1+n_bits^post40-n_bits^0 == 0 /\ m130^0-m130^post40 == 0 /\ -c7^post40+c7^0 == 0 /\ -ent8^post40+ent8^0 == 0 /\ -block_compress^post40+block_compress^0 == 0 /\ __const_53^0-__const_53^post40 == 0 /\ free_ent^0-free_ent^post40 == 0 /\ -disp9^post40+disp9^0 == 0 /\ -ret_getbyte18^post40+ret_getbyte18^0 == 0 /\ -i29^post40+i29^0 == 0 /\ tmp___115^0-tmp___115^post40 == 0 /\ -i41^post40+i41^0 == 0 /\ -code31^post40+code31^0 == 0 /\ -fcode5^post40+fcode5^0 == 0 /\ -i21^post40+i21^0 == 0 /\ tmp___014^0-tmp___014^post40 == 0 /\ n44^0-n44^post40 == 0 /\ -i6^post40+i6^0 == 0 /\ -maxbits^post40+maxbits^0 == 0 /\ -tmp___024^post40+tmp___024^0 == 0 /\ __const_16^0-__const_16^post40 == 0 /\ -__const_2147483647^post40+__const_2147483647^0 == 0 /\ -__const_10000^post40+__const_10000^0 == 0 /\ rat26^0-rat26^post40 == 0 /\ exit_stat^0-exit_stat^post40 == 0 /\ -clear_flg^post40+clear_flg^0 == 0 /\ -apsim_incnt^post40+apsim_incnt^0 == 0 /\ bytes_out^0-bytes_out^post40 == 0 /\ -tabort4^post40+tabort4^0 == 0 /\ __const_50^0-__const_50^post40 == 0 /\ -m122^post40+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post40 == 0 /\ -hsize^post40+hsize^0 == 0 /\ -hsize_reg10^post40+hsize_reg10^0 == 0 /\ -hsize___019^post40+hsize___019^0 == 0 /\ seed2^0-seed2^post40 == 0 /\ count^0-count^post40 == 0 /\ -__const_429496^post40+__const_429496^0 == 0 /\ c37^0-c37^post40 == 0 /\ -__const_65536^post40+__const_65536^0 == 0 /\ n40^0-n40^post40 == 0 /\ __const_257^0-__const_257^post40 == 0 /\ ret_getbyte25^0-ret_getbyte25^post40 == 0 /\ -r_off32^post40+r_off32^0 == 0 /\ out_count^0-out_count^post40 == 0 /\ -__const_9^post40+__const_9^0 == 0 /\ -in_count^post40+in_count^0 == 0 /\ -__const_8388607^post40+__const_8388607^0 == 0 /\ i45^0-i45^post40 == 0 /\ -__const_8^post40+__const_8^0 == 0 /\ i3^0-i3^post40 == 0 /\ bits33^0-bits33^post40 == 0 /\ -maxcode^post40+maxcode^0 == 0 /\ -tmp___017^post40+tmp___017^0 == 0 /\ hsize___027^0-hsize___027^post40 == 0 /\ tmp12^0-tmp12^post40 == 0 /\ offset^0-offset^post40 == 0 /\ hshift11^0-hshift11^post40 == 0 /\ -clear_flg^0 <= 0 /\ -__const_256^post40+__const_256^0 == 0 /\ -incnt^post40+incnt^0 == 0 /\ clear_flg^0 <= 0 /\ ratio^0-ratio^post40 == 0 /\ maxmaxcode^0-maxmaxcode^post40 == 0 /\ checkpoint^0-checkpoint^post40 == 0), cost: 1
	New rule:
	l37 -> l34 : __const_10000^0'=__const_10000^post40, __const_16^0'=__const_16^post40, __const_2147483647^0'=__const_2147483647^post40, __const_256^0'=__const_256^post40, __const_257^0'=__const_257^post40, __const_429496^0'=__const_429496^post40, __const_50^0'=__const_50^post40, __const_53^0'=__const_53^post40, __const_65536^0'=__const_65536^post40, __const_8388607^0'=__const_8388607^post40, __const_8^0'=__const_8^post40, __const_9^0'=__const_9^post40, apsim_bound11113^0'=apsim_bound11113^post40, apsim_incnt^0'=apsim_incnt^post40, bits33^0'=bits33^post40, block_compress^0'=block_compress^post40, bytes_out^0'=bytes_out^post40, c37^0'=c37^post40, c7^0'=c7^post40, checkpoint^0'=checkpoint^post40, clear_flg^0'=clear_flg^post40, code31^0'=code31^post40, count^0'=count^post40, disp9^0'=disp9^post40, ent8^0'=ent8^post40, exit_stat^0'=exit_stat^post40, fcode5^0'=fcode5^post40, free_ent^0'=free_ent^post40, hshift11^0'=hshift11^post40, hsize^0'=hsize^post40, hsize___019^0'=hsize___019^post40, hsize___027^0'=hsize___027^post40, hsize_reg10^0'=hsize_reg10^post40, i21^0'=i21^post40, i29^0'=i29^post40, i3^0'=i3^post40, i41^0'=i41^post40, i45^0'=i45^post40, i6^0'=i6^post40, in_count^0'=in_count^post40, incnt^0'=incnt^post40, m122^0'=m122^post40, m130^0'=m130^post40, maxbits^0'=maxbits^post40, maxcode^0'=maxcode^post40, maxmaxcode^0'=maxmaxcode^post40, n40^0'=n40^post40, n44^0'=n44^post40, n_bits^0'=n_bits^post40, offset^0'=offset^post40, out_count^0'=out_count^post40, r_off32^0'=r_off32^post40, rat26^0'=rat26^post40, ratio^0'=ratio^post40, ret_getbyte18^0'=ret_getbyte18^post40, ret_getbyte25^0'=ret_getbyte25^post40, seed2^0'=seed2^post40, tabort4^0'=tabort4^post40, tmp12^0'=tmp12^post40, tmp___014^0'=tmp___014^post40, tmp___017^0'=tmp___017^post40, tmp___024^0'=tmp___024^post40, tmp___115^0'=tmp___115^post40, (-1+n_bits^post40-n_bits^0 == 0 /\ m130^0-m130^post40 == 0 /\ -c7^post40+c7^0 == 0 /\ -ent8^post40+ent8^0 == 0 /\ -block_compress^post40+block_compress^0 == 0 /\ __const_53^0-__const_53^post40 == 0 /\ free_ent^0-free_ent^post40 == 0 /\ -disp9^post40+disp9^0 == 0 /\ -ret_getbyte18^post40+ret_getbyte18^0 == 0 /\ -i29^post40+i29^0 == 0 /\ tmp___115^0-tmp___115^post40 == 0 /\ -i41^post40+i41^0 == 0 /\ -code31^post40+code31^0 == 0 /\ -fcode5^post40+fcode5^0 == 0 /\ -i21^post40+i21^0 == 0 /\ tmp___014^0-tmp___014^post40 == 0 /\ n44^0-n44^post40 == 0 /\ -i6^post40+i6^0 == 0 /\ -maxbits^post40+maxbits^0 == 0 /\ -tmp___024^post40+tmp___024^0 == 0 /\ __const_16^0-__const_16^post40 == 0 /\ -__const_2147483647^post40+__const_2147483647^0 == 0 /\ -__const_10000^post40+__const_10000^0 == 0 /\ rat26^0-rat26^post40 == 0 /\ exit_stat^0-exit_stat^post40 == 0 /\ -clear_flg^post40+clear_flg^0 == 0 /\ -apsim_incnt^post40+apsim_incnt^0 == 0 /\ bytes_out^0-bytes_out^post40 == 0 /\ -tabort4^post40+tabort4^0 == 0 /\ __const_50^0-__const_50^post40 == 0 /\ -m122^post40+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post40 == 0 /\ -hsize^post40+hsize^0 == 0 /\ -hsize_reg10^post40+hsize_reg10^0 == 0 /\ -hsize___019^post40+hsize___019^0 == 0 /\ seed2^0-seed2^post40 == 0 /\ count^0-count^post40 == 0 /\ -__const_429496^post40+__const_429496^0 == 0 /\ c37^0-c37^post40 == 0 /\ -__const_65536^post40+__const_65536^0 == 0 /\ n40^0-n40^post40 == 0 /\ __const_257^0-__const_257^post40 == 0 /\ ret_getbyte25^0-ret_getbyte25^post40 == 0 /\ -r_off32^post40+r_off32^0 == 0 /\ out_count^0-out_count^post40 == 0 /\ -__const_9^post40+__const_9^0 == 0 /\ -in_count^post40+in_count^0 == 0 /\ -__const_8388607^post40+__const_8388607^0 == 0 /\ i45^0-i45^post40 == 0 /\ -__const_8^post40+__const_8^0 == 0 /\ i3^0-i3^post40 == 0 /\ bits33^0-bits33^post40 == 0 /\ -maxcode^post40+maxcode^0 == 0 /\ -tmp___017^post40+tmp___017^0 == 0 /\ hsize___027^0-hsize___027^post40 == 0 /\ tmp12^0-tmp12^post40 == 0 /\ offset^0-offset^post40 == 0 /\ hshift11^0-hshift11^post40 == 0 /\ -clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ -__const_256^post40+__const_256^0 == 0 /\ -incnt^post40+incnt^0 == 0 /\ clear_flg^0 <= 0 /\ ratio^0-ratio^post40 == 0 /\ maxmaxcode^0-maxmaxcode^post40 == 0 /\ checkpoint^0-checkpoint^post40 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l37 -> l34 : __const_10000^0'=__const_10000^post40, __const_16^0'=__const_16^post40, __const_2147483647^0'=__const_2147483647^post40, __const_256^0'=__const_256^post40, __const_257^0'=__const_257^post40, __const_429496^0'=__const_429496^post40, __const_50^0'=__const_50^post40, __const_53^0'=__const_53^post40, __const_65536^0'=__const_65536^post40, __const_8388607^0'=__const_8388607^post40, __const_8^0'=__const_8^post40, __const_9^0'=__const_9^post40, apsim_bound11113^0'=apsim_bound11113^post40, apsim_incnt^0'=apsim_incnt^post40, bits33^0'=bits33^post40, block_compress^0'=block_compress^post40, bytes_out^0'=bytes_out^post40, c37^0'=c37^post40, c7^0'=c7^post40, checkpoint^0'=checkpoint^post40, clear_flg^0'=clear_flg^post40, code31^0'=code31^post40, count^0'=count^post40, disp9^0'=disp9^post40, ent8^0'=ent8^post40, exit_stat^0'=exit_stat^post40, fcode5^0'=fcode5^post40, free_ent^0'=free_ent^post40, hshift11^0'=hshift11^post40, hsize^0'=hsize^post40, hsize___019^0'=hsize___019^post40, hsize___027^0'=hsize___027^post40, hsize_reg10^0'=hsize_reg10^post40, i21^0'=i21^post40, i29^0'=i29^post40, i3^0'=i3^post40, i41^0'=i41^post40, i45^0'=i45^post40, i6^0'=i6^post40, in_count^0'=in_count^post40, incnt^0'=incnt^post40, m122^0'=m122^post40, m130^0'=m130^post40, maxbits^0'=maxbits^post40, maxcode^0'=maxcode^post40, maxmaxcode^0'=maxmaxcode^post40, n40^0'=n40^post40, n44^0'=n44^post40, n_bits^0'=n_bits^post40, offset^0'=offset^post40, out_count^0'=out_count^post40, r_off32^0'=r_off32^post40, rat26^0'=rat26^post40, ratio^0'=ratio^post40, ret_getbyte18^0'=ret_getbyte18^post40, ret_getbyte25^0'=ret_getbyte25^post40, seed2^0'=seed2^post40, tabort4^0'=tabort4^post40, tmp12^0'=tmp12^post40, tmp___014^0'=tmp___014^post40, tmp___017^0'=tmp___017^post40, tmp___024^0'=tmp___024^post40, tmp___115^0'=tmp___115^post40, (-1+n_bits^post40-n_bits^0 == 0 /\ m130^0-m130^post40 == 0 /\ -c7^post40+c7^0 == 0 /\ -ent8^post40+ent8^0 == 0 /\ -block_compress^post40+block_compress^0 == 0 /\ __const_53^0-__const_53^post40 == 0 /\ free_ent^0-free_ent^post40 == 0 /\ -disp9^post40+disp9^0 == 0 /\ -ret_getbyte18^post40+ret_getbyte18^0 == 0 /\ -i29^post40+i29^0 == 0 /\ tmp___115^0-tmp___115^post40 == 0 /\ -i41^post40+i41^0 == 0 /\ -code31^post40+code31^0 == 0 /\ -fcode5^post40+fcode5^0 == 0 /\ -i21^post40+i21^0 == 0 /\ tmp___014^0-tmp___014^post40 == 0 /\ n44^0-n44^post40 == 0 /\ -i6^post40+i6^0 == 0 /\ -maxbits^post40+maxbits^0 == 0 /\ -tmp___024^post40+tmp___024^0 == 0 /\ __const_16^0-__const_16^post40 == 0 /\ -__const_2147483647^post40+__const_2147483647^0 == 0 /\ -__const_10000^post40+__const_10000^0 == 0 /\ rat26^0-rat26^post40 == 0 /\ exit_stat^0-exit_stat^post40 == 0 /\ -clear_flg^post40+clear_flg^0 == 0 /\ -apsim_incnt^post40+apsim_incnt^0 == 0 /\ bytes_out^0-bytes_out^post40 == 0 /\ -tabort4^post40+tabort4^0 == 0 /\ __const_50^0-__const_50^post40 == 0 /\ -m122^post40+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post40 == 0 /\ -hsize^post40+hsize^0 == 0 /\ -hsize_reg10^post40+hsize_reg10^0 == 0 /\ -hsize___019^post40+hsize___019^0 == 0 /\ seed2^0-seed2^post40 == 0 /\ count^0-count^post40 == 0 /\ -__const_429496^post40+__const_429496^0 == 0 /\ c37^0-c37^post40 == 0 /\ -__const_65536^post40+__const_65536^0 == 0 /\ n40^0-n40^post40 == 0 /\ __const_257^0-__const_257^post40 == 0 /\ ret_getbyte25^0-ret_getbyte25^post40 == 0 /\ -r_off32^post40+r_off32^0 == 0 /\ out_count^0-out_count^post40 == 0 /\ -__const_9^post40+__const_9^0 == 0 /\ -in_count^post40+in_count^0 == 0 /\ -__const_8388607^post40+__const_8388607^0 == 0 /\ i45^0-i45^post40 == 0 /\ -__const_8^post40+__const_8^0 == 0 /\ i3^0-i3^post40 == 0 /\ bits33^0-bits33^post40 == 0 /\ -maxcode^post40+maxcode^0 == 0 /\ -tmp___017^post40+tmp___017^0 == 0 /\ hsize___027^0-hsize___027^post40 == 0 /\ tmp12^0-tmp12^post40 == 0 /\ offset^0-offset^post40 == 0 /\ hshift11^0-hshift11^post40 == 0 /\ -clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ -__const_256^post40+__const_256^0 == 0 /\ -incnt^post40+incnt^0 == 0 /\ clear_flg^0 <= 0 /\ ratio^0-ratio^post40 == 0 /\ maxmaxcode^0-maxmaxcode^post40 == 0 /\ checkpoint^0-checkpoint^post40 == 0), cost: 1
	New rule:
	l37 -> l34 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=1+n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
	
		propagated equality n_bits^post40 = 1+n_bits^0
		
		propagated equality m130^post40 = m130^0
		
		propagated equality c7^post40 = c7^0
		
		propagated equality ent8^post40 = ent8^0
		
		propagated equality block_compress^post40 = block_compress^0
		
		propagated equality __const_53^post40 = __const_53^0
		
		propagated equality free_ent^post40 = free_ent^0
		
		propagated equality disp9^post40 = disp9^0
		
		propagated equality ret_getbyte18^post40 = ret_getbyte18^0
		
		propagated equality i29^post40 = i29^0
		
		propagated equality tmp___115^post40 = tmp___115^0
		
		propagated equality i41^post40 = i41^0
		
		propagated equality code31^post40 = code31^0
		
		propagated equality fcode5^post40 = fcode5^0
		
		propagated equality i21^post40 = i21^0
		
		propagated equality tmp___014^post40 = tmp___014^0
		
		propagated equality n44^post40 = n44^0
		
		propagated equality i6^post40 = i6^0
		
		propagated equality maxbits^post40 = maxbits^0
		
		propagated equality tmp___024^post40 = tmp___024^0
		
		propagated equality __const_16^post40 = __const_16^0
		
		propagated equality __const_2147483647^post40 = __const_2147483647^0
		
		propagated equality __const_10000^post40 = __const_10000^0
		
		propagated equality rat26^post40 = rat26^0
		
		propagated equality exit_stat^post40 = exit_stat^0
		
		propagated equality clear_flg^post40 = clear_flg^0
		
		propagated equality apsim_incnt^post40 = apsim_incnt^0
		
		propagated equality bytes_out^post40 = bytes_out^0
		
		propagated equality tabort4^post40 = tabort4^0
		
		propagated equality __const_50^post40 = __const_50^0
		
		propagated equality m122^post40 = m122^0
		
		propagated equality apsim_bound11113^post40 = apsim_bound11113^0
		
		propagated equality hsize^post40 = hsize^0
		
		propagated equality hsize_reg10^post40 = hsize_reg10^0
		
		propagated equality hsize___019^post40 = hsize___019^0
		
		propagated equality seed2^post40 = seed2^0
		
		propagated equality count^post40 = count^0
		
		propagated equality __const_429496^post40 = __const_429496^0
		
		propagated equality c37^post40 = c37^0
		
		propagated equality __const_65536^post40 = __const_65536^0
		
		propagated equality n40^post40 = n40^0
		
		propagated equality __const_257^post40 = __const_257^0
		
		propagated equality ret_getbyte25^post40 = ret_getbyte25^0
		
		propagated equality r_off32^post40 = r_off32^0
		
		propagated equality out_count^post40 = out_count^0
		
		propagated equality __const_9^post40 = __const_9^0
		
		propagated equality in_count^post40 = in_count^0
		
		propagated equality __const_8388607^post40 = __const_8388607^0
		
		propagated equality i45^post40 = i45^0
		
		propagated equality __const_8^post40 = __const_8^0
		
		propagated equality i3^post40 = i3^0
		
		propagated equality bits33^post40 = bits33^0
		
		propagated equality maxcode^post40 = maxcode^0
		
		propagated equality tmp___017^post40 = tmp___017^0
		
		propagated equality hsize___027^post40 = hsize___027^0
		
		propagated equality tmp12^post40 = tmp12^0
		
		propagated equality offset^post40 = offset^0
		
		propagated equality hshift11^post40 = hshift11^0
		
		propagated equality __const_256^post40 = __const_256^0
		
		propagated equality incnt^post40 = incnt^0
		
		propagated equality ratio^post40 = ratio^0
		
		propagated equality maxmaxcode^post40 = maxmaxcode^0
		
		propagated equality checkpoint^post40 = checkpoint^0
		
	Simplified Guard

	Original rule:
	l37 -> l34 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=1+n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
	New rule:
	l37 -> l34 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=1+n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l37 -> l34 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=1+n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
	New rule:
	l37 -> l34 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=1+n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l37 -> l34 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=1+n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
	New rule:
	l37 -> l34 : n_bits^0'=1+n_bits^0, (-clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l37 -> l36 : __const_10000^0'=__const_10000^post41, __const_16^0'=__const_16^post41, __const_2147483647^0'=__const_2147483647^post41, __const_256^0'=__const_256^post41, __const_257^0'=__const_257^post41, __const_429496^0'=__const_429496^post41, __const_50^0'=__const_50^post41, __const_53^0'=__const_53^post41, __const_65536^0'=__const_65536^post41, __const_8388607^0'=__const_8388607^post41, __const_8^0'=__const_8^post41, __const_9^0'=__const_9^post41, apsim_bound11113^0'=apsim_bound11113^post41, apsim_incnt^0'=apsim_incnt^post41, bits33^0'=bits33^post41, block_compress^0'=block_compress^post41, bytes_out^0'=bytes_out^post41, c37^0'=c37^post41, c7^0'=c7^post41, checkpoint^0'=checkpoint^post41, clear_flg^0'=clear_flg^post41, code31^0'=code31^post41, count^0'=count^post41, disp9^0'=disp9^post41, ent8^0'=ent8^post41, exit_stat^0'=exit_stat^post41, fcode5^0'=fcode5^post41, free_ent^0'=free_ent^post41, hshift11^0'=hshift11^post41, hsize^0'=hsize^post41, hsize___019^0'=hsize___019^post41, hsize___027^0'=hsize___027^post41, hsize_reg10^0'=hsize_reg10^post41, i21^0'=i21^post41, i29^0'=i29^post41, i3^0'=i3^post41, i41^0'=i41^post41, i45^0'=i45^post41, i6^0'=i6^post41, in_count^0'=in_count^post41, incnt^0'=incnt^post41, m122^0'=m122^post41, m130^0'=m130^post41, maxbits^0'=maxbits^post41, maxcode^0'=maxcode^post41, maxmaxcode^0'=maxmaxcode^post41, n40^0'=n40^post41, n44^0'=n44^post41, n_bits^0'=n_bits^post41, offset^0'=offset^post41, out_count^0'=out_count^post41, r_off32^0'=r_off32^post41, rat26^0'=rat26^post41, ratio^0'=ratio^post41, ret_getbyte18^0'=ret_getbyte18^post41, ret_getbyte25^0'=ret_getbyte25^post41, seed2^0'=seed2^post41, tabort4^0'=tabort4^post41, tmp12^0'=tmp12^post41, tmp___014^0'=tmp___014^post41, tmp___017^0'=tmp___017^post41, tmp___024^0'=tmp___024^post41, tmp___115^0'=tmp___115^post41, (n44^0-n44^post41 == 0 /\ -__const_10000^post41+__const_10000^0 == 0 /\ tmp___115^0-tmp___115^post41 == 0 /\ __const_16^0-__const_16^post41 == 0 /\ -__const_2147483647^post41+__const_2147483647^0 == 0 /\ -r_off32^post41+r_off32^0 == 0 /\ -maxbits^post41+maxbits^0 == 0 /\ -m122^post41+m122^0 == 0 /\ -n40^post41+n40^0 == 0 /\ bytes_out^0-bytes_out^post41 == 0 /\ -__const_8388607^post41+__const_8388607^0 == 0 /\ hshift11^0-hshift11^post41 == 0 /\ -incnt^post41+incnt^0 == 0 /\ apsim_incnt^0-apsim_incnt^post41 == 0 /\ maxcode^0-maxcode^post41 == 0 /\ -hsize___019^post41+hsize___019^0 == 0 /\ __const_256^0-__const_256^post41 == 0 /\ -i41^post41+i41^0 == 0 /\ exit_stat^0-exit_stat^post41 == 0 /\ __const_50^0-__const_50^post41 == 0 /\ hsize^0-hsize^post41 == 0 /\ c37^0-c37^post41 == 0 /\ -bits33^post41+bits33^0 == 0 /\ -__const_9^post41+__const_9^0 == 0 /\ -in_count^post41+in_count^0 == 0 /\ __const_53^0-__const_53^post41 == 0 /\ -ratio^post41+ratio^0 == 0 /\ -disp9^post41+disp9^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post41 == 0 /\ m130^0-m130^post41 == 0 /\ -ret_getbyte18^post41+ret_getbyte18^0 == 0 /\ -i29^post41+i29^0 == 0 /\ -n_bits^post41+n_bits^0 == 0 /\ hsize___027^0-hsize___027^post41 == 0 /\ -free_ent^post41+free_ent^0 == 0 /\ -tabort4^post41+tabort4^0 == 0 /\ -seed2^post41+seed2^0 == 0 /\ -i21^post41+i21^0 == 0 /\ i3^0-i3^post41 == 0 /\ -__const_8^post41+__const_8^0 == 0 /\ __const_257^0-__const_257^post41 == 0 /\ -tmp___017^post41+tmp___017^0 == 0 /\ -clear_flg^post41+clear_flg^0 == 0 /\ -block_compress^post41+block_compress^0 == 0 /\ checkpoint^0-checkpoint^post41 == 0 /\ -tmp___024^post41+tmp___024^0 == 0 /\ -c7^post41+c7^0 == 0 /\ rat26^0-rat26^post41 == 0 /\ maxmaxcode^0-maxmaxcode^post41 == 0 /\ -i45^post41+i45^0 == 0 /\ tmp___014^0-tmp___014^post41 == 0 /\ out_count^0-out_count^post41 == 0 /\ -i6^post41+i6^0 == 0 /\ -apsim_bound11113^post41+apsim_bound11113^0 == 0 /\ 1-clear_flg^0 <= 0 /\ tmp12^0-tmp12^post41 == 0 /\ -__const_65536^post41+__const_65536^0 == 0 /\ -code31^post41+code31^0 == 0 /\ -fcode5^post41+fcode5^0 == 0 /\ -__const_429496^post41+__const_429496^0 == 0 /\ count^0-count^post41 == 0 /\ hsize_reg10^0-hsize_reg10^post41 == 0 /\ -ent8^post41+ent8^0 == 0 /\ offset^0-offset^post41 == 0), cost: 1
	New rule:
	l37 -> l36 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-clear_flg^0 <= 0), cost: 1
	
		propagated equality n44^post41 = n44^0
		
		propagated equality __const_10000^post41 = __const_10000^0
		
		propagated equality tmp___115^post41 = tmp___115^0
		
		propagated equality __const_16^post41 = __const_16^0
		
		propagated equality __const_2147483647^post41 = __const_2147483647^0
		
		propagated equality r_off32^post41 = r_off32^0
		
		propagated equality maxbits^post41 = maxbits^0
		
		propagated equality m122^post41 = m122^0
		
		propagated equality n40^post41 = n40^0
		
		propagated equality bytes_out^post41 = bytes_out^0
		
		propagated equality __const_8388607^post41 = __const_8388607^0
		
		propagated equality hshift11^post41 = hshift11^0
		
		propagated equality incnt^post41 = incnt^0
		
		propagated equality apsim_incnt^post41 = apsim_incnt^0
		
		propagated equality maxcode^post41 = maxcode^0
		
		propagated equality hsize___019^post41 = hsize___019^0
		
		propagated equality __const_256^post41 = __const_256^0
		
		propagated equality i41^post41 = i41^0
		
		propagated equality exit_stat^post41 = exit_stat^0
		
		propagated equality __const_50^post41 = __const_50^0
		
		propagated equality hsize^post41 = hsize^0
		
		propagated equality c37^post41 = c37^0
		
		propagated equality bits33^post41 = bits33^0
		
		propagated equality __const_9^post41 = __const_9^0
		
		propagated equality in_count^post41 = in_count^0
		
		propagated equality __const_53^post41 = __const_53^0
		
		propagated equality ratio^post41 = ratio^0
		
		propagated equality disp9^post41 = disp9^0
		
		propagated equality ret_getbyte25^post41 = ret_getbyte25^0
		
		propagated equality m130^post41 = m130^0
		
		propagated equality ret_getbyte18^post41 = ret_getbyte18^0
		
		propagated equality i29^post41 = i29^0
		
		propagated equality n_bits^post41 = n_bits^0
		
		propagated equality hsize___027^post41 = hsize___027^0
		
		propagated equality free_ent^post41 = free_ent^0
		
		propagated equality tabort4^post41 = tabort4^0
		
		propagated equality seed2^post41 = seed2^0
		
		propagated equality i21^post41 = i21^0
		
		propagated equality i3^post41 = i3^0
		
		propagated equality __const_8^post41 = __const_8^0
		
		propagated equality __const_257^post41 = __const_257^0
		
		propagated equality tmp___017^post41 = tmp___017^0
		
		propagated equality clear_flg^post41 = clear_flg^0
		
		propagated equality block_compress^post41 = block_compress^0
		
		propagated equality checkpoint^post41 = checkpoint^0
		
		propagated equality tmp___024^post41 = tmp___024^0
		
		propagated equality c7^post41 = c7^0
		
		propagated equality rat26^post41 = rat26^0
		
		propagated equality maxmaxcode^post41 = maxmaxcode^0
		
		propagated equality i45^post41 = i45^0
		
		propagated equality tmp___014^post41 = tmp___014^0
		
		propagated equality out_count^post41 = out_count^0
		
		propagated equality i6^post41 = i6^0
		
		propagated equality apsim_bound11113^post41 = apsim_bound11113^0
		
		propagated equality tmp12^post41 = tmp12^0
		
		propagated equality __const_65536^post41 = __const_65536^0
		
		propagated equality code31^post41 = code31^0
		
		propagated equality fcode5^post41 = fcode5^0
		
		propagated equality __const_429496^post41 = __const_429496^0
		
		propagated equality count^post41 = count^0
		
		propagated equality hsize_reg10^post41 = hsize_reg10^0
		
		propagated equality ent8^post41 = ent8^0
		
		propagated equality offset^post41 = offset^0
		
	Simplified Guard

	Original rule:
	l37 -> l36 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-clear_flg^0 <= 0), cost: 1
	New rule:
	l37 -> l36 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-clear_flg^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l37 -> l36 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-clear_flg^0 <= 0, cost: 1
	New rule:
	l37 -> l36 : 1-clear_flg^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l37 -> l36 : __const_10000^0'=__const_10000^post42, __const_16^0'=__const_16^post42, __const_2147483647^0'=__const_2147483647^post42, __const_256^0'=__const_256^post42, __const_257^0'=__const_257^post42, __const_429496^0'=__const_429496^post42, __const_50^0'=__const_50^post42, __const_53^0'=__const_53^post42, __const_65536^0'=__const_65536^post42, __const_8388607^0'=__const_8388607^post42, __const_8^0'=__const_8^post42, __const_9^0'=__const_9^post42, apsim_bound11113^0'=apsim_bound11113^post42, apsim_incnt^0'=apsim_incnt^post42, bits33^0'=bits33^post42, block_compress^0'=block_compress^post42, bytes_out^0'=bytes_out^post42, c37^0'=c37^post42, c7^0'=c7^post42, checkpoint^0'=checkpoint^post42, clear_flg^0'=clear_flg^post42, code31^0'=code31^post42, count^0'=count^post42, disp9^0'=disp9^post42, ent8^0'=ent8^post42, exit_stat^0'=exit_stat^post42, fcode5^0'=fcode5^post42, free_ent^0'=free_ent^post42, hshift11^0'=hshift11^post42, hsize^0'=hsize^post42, hsize___019^0'=hsize___019^post42, hsize___027^0'=hsize___027^post42, hsize_reg10^0'=hsize_reg10^post42, i21^0'=i21^post42, i29^0'=i29^post42, i3^0'=i3^post42, i41^0'=i41^post42, i45^0'=i45^post42, i6^0'=i6^post42, in_count^0'=in_count^post42, incnt^0'=incnt^post42, m122^0'=m122^post42, m130^0'=m130^post42, maxbits^0'=maxbits^post42, maxcode^0'=maxcode^post42, maxmaxcode^0'=maxmaxcode^post42, n40^0'=n40^post42, n44^0'=n44^post42, n_bits^0'=n_bits^post42, offset^0'=offset^post42, out_count^0'=out_count^post42, r_off32^0'=r_off32^post42, rat26^0'=rat26^post42, ratio^0'=ratio^post42, ret_getbyte18^0'=ret_getbyte18^post42, ret_getbyte25^0'=ret_getbyte25^post42, seed2^0'=seed2^post42, tabort4^0'=tabort4^post42, tmp12^0'=tmp12^post42, tmp___014^0'=tmp___014^post42, tmp___017^0'=tmp___017^post42, tmp___024^0'=tmp___024^post42, tmp___115^0'=tmp___115^post42, (out_count^0-out_count^post42 == 0 /\ -bits33^post42+bits33^0 == 0 /\ -ratio^post42+ratio^0 == 0 /\ -tmp___024^post42+tmp___024^0 == 0 /\ -code31^post42+code31^0 == 0 /\ maxmaxcode^0-maxmaxcode^post42 == 0 /\ __const_256^0-__const_256^post42 == 0 /\ bytes_out^0-bytes_out^post42 == 0 /\ count^0-count^post42 == 0 /\ 1+clear_flg^0 <= 0 /\ offset^0-offset^post42 == 0 /\ -tmp___014^post42+tmp___014^0 == 0 /\ __const_16^0-__const_16^post42 == 0 /\ ret_getbyte25^0-ret_getbyte25^post42 == 0 /\ -ent8^post42+ent8^0 == 0 /\ -c37^post42+c37^0 == 0 /\ -block_compress^post42+block_compress^0 == 0 /\ -r_off32^post42+r_off32^0 == 0 /\ -apsim_bound11113^post42+apsim_bound11113^0 == 0 /\ -__const_429496^post42+__const_429496^0 == 0 /\ -seed2^post42+seed2^0 == 0 /\ tmp___115^0-tmp___115^post42 == 0 /\ __const_50^0-__const_50^post42 == 0 /\ checkpoint^0-checkpoint^post42 == 0 /\ n44^0-n44^post42 == 0 /\ apsim_incnt^0-apsim_incnt^post42 == 0 /\ -hsize^post42+hsize^0 == 0 /\ hshift11^0-hshift11^post42 == 0 /\ m130^0-m130^post42 == 0 /\ -incnt^post42+incnt^0 == 0 /\ -__const_65536^post42+__const_65536^0 == 0 /\ maxcode^0-maxcode^post42 == 0 /\ i6^0-i6^post42 == 0 /\ __const_257^0-__const_257^post42 == 0 /\ ret_getbyte18^0-ret_getbyte18^post42 == 0 /\ tmp___017^0-tmp___017^post42 == 0 /\ hsize_reg10^0-hsize_reg10^post42 == 0 /\ fcode5^0-fcode5^post42 == 0 /\ -n40^post42+n40^0 == 0 /\ -i45^post42+i45^0 == 0 /\ -in_count^post42+in_count^0 == 0 /\ exit_stat^0-exit_stat^post42 == 0 /\ -i29^post42+i29^0 == 0 /\ -__const_8388607^post42+__const_8388607^0 == 0 /\ i3^0-i3^post42 == 0 /\ -i41^post42+i41^0 == 0 /\ __const_8^0-__const_8^post42 == 0 /\ -__const_2147483647^post42+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post42 == 0 /\ hsize___027^0-hsize___027^post42 == 0 /\ __const_53^0-__const_53^post42 == 0 /\ -clear_flg^post42+clear_flg^0 == 0 /\ m122^0-m122^post42 == 0 /\ -n_bits^post42+n_bits^0 == 0 /\ -c7^post42+c7^0 == 0 /\ -free_ent^post42+free_ent^0 == 0 /\ -disp9^post42+disp9^0 == 0 /\ -tabort4^post42+tabort4^0 == 0 /\ -__const_9^post42+__const_9^0 == 0 /\ rat26^0-rat26^post42 == 0 /\ -hsize___019^post42+hsize___019^0 == 0 /\ -i21^post42+i21^0 == 0 /\ __const_10000^0-__const_10000^post42 == 0 /\ -maxbits^post42+maxbits^0 == 0), cost: 1
	New rule:
	l37 -> l36 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+clear_flg^0 <= 0), cost: 1
	
		propagated equality out_count^post42 = out_count^0
		
		propagated equality bits33^post42 = bits33^0
		
		propagated equality ratio^post42 = ratio^0
		
		propagated equality tmp___024^post42 = tmp___024^0
		
		propagated equality code31^post42 = code31^0
		
		propagated equality maxmaxcode^post42 = maxmaxcode^0
		
		propagated equality __const_256^post42 = __const_256^0
		
		propagated equality bytes_out^post42 = bytes_out^0
		
		propagated equality count^post42 = count^0
		
		propagated equality offset^post42 = offset^0
		
		propagated equality tmp___014^post42 = tmp___014^0
		
		propagated equality __const_16^post42 = __const_16^0
		
		propagated equality ret_getbyte25^post42 = ret_getbyte25^0
		
		propagated equality ent8^post42 = ent8^0
		
		propagated equality c37^post42 = c37^0
		
		propagated equality block_compress^post42 = block_compress^0
		
		propagated equality r_off32^post42 = r_off32^0
		
		propagated equality apsim_bound11113^post42 = apsim_bound11113^0
		
		propagated equality __const_429496^post42 = __const_429496^0
		
		propagated equality seed2^post42 = seed2^0
		
		propagated equality tmp___115^post42 = tmp___115^0
		
		propagated equality __const_50^post42 = __const_50^0
		
		propagated equality checkpoint^post42 = checkpoint^0
		
		propagated equality n44^post42 = n44^0
		
		propagated equality apsim_incnt^post42 = apsim_incnt^0
		
		propagated equality hsize^post42 = hsize^0
		
		propagated equality hshift11^post42 = hshift11^0
		
		propagated equality m130^post42 = m130^0
		
		propagated equality incnt^post42 = incnt^0
		
		propagated equality __const_65536^post42 = __const_65536^0
		
		propagated equality maxcode^post42 = maxcode^0
		
		propagated equality i6^post42 = i6^0
		
		propagated equality __const_257^post42 = __const_257^0
		
		propagated equality ret_getbyte18^post42 = ret_getbyte18^0
		
		propagated equality tmp___017^post42 = tmp___017^0
		
		propagated equality hsize_reg10^post42 = hsize_reg10^0
		
		propagated equality fcode5^post42 = fcode5^0
		
		propagated equality n40^post42 = n40^0
		
		propagated equality i45^post42 = i45^0
		
		propagated equality in_count^post42 = in_count^0
		
		propagated equality exit_stat^post42 = exit_stat^0
		
		propagated equality i29^post42 = i29^0
		
		propagated equality __const_8388607^post42 = __const_8388607^0
		
		propagated equality i3^post42 = i3^0
		
		propagated equality i41^post42 = i41^0
		
		propagated equality __const_8^post42 = __const_8^0
		
		propagated equality __const_2147483647^post42 = __const_2147483647^0
		
		propagated equality tmp12^post42 = tmp12^0
		
		propagated equality hsize___027^post42 = hsize___027^0
		
		propagated equality __const_53^post42 = __const_53^0
		
		propagated equality clear_flg^post42 = clear_flg^0
		
		propagated equality m122^post42 = m122^0
		
		propagated equality n_bits^post42 = n_bits^0
		
		propagated equality c7^post42 = c7^0
		
		propagated equality free_ent^post42 = free_ent^0
		
		propagated equality disp9^post42 = disp9^0
		
		propagated equality tabort4^post42 = tabort4^0
		
		propagated equality __const_9^post42 = __const_9^0
		
		propagated equality rat26^post42 = rat26^0
		
		propagated equality hsize___019^post42 = hsize___019^0
		
		propagated equality i21^post42 = i21^0
		
		propagated equality __const_10000^post42 = __const_10000^0
		
		propagated equality maxbits^post42 = maxbits^0
		
	Simplified Guard

	Original rule:
	l37 -> l36 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+clear_flg^0 <= 0), cost: 1
	New rule:
	l37 -> l36 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+clear_flg^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l37 -> l36 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+clear_flg^0 <= 0, cost: 1
	New rule:
	l37 -> l36 : 1+clear_flg^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l38 -> l37 : __const_10000^0'=__const_10000^post43, __const_16^0'=__const_16^post43, __const_2147483647^0'=__const_2147483647^post43, __const_256^0'=__const_256^post43, __const_257^0'=__const_257^post43, __const_429496^0'=__const_429496^post43, __const_50^0'=__const_50^post43, __const_53^0'=__const_53^post43, __const_65536^0'=__const_65536^post43, __const_8388607^0'=__const_8388607^post43, __const_8^0'=__const_8^post43, __const_9^0'=__const_9^post43, apsim_bound11113^0'=apsim_bound11113^post43, apsim_incnt^0'=apsim_incnt^post43, bits33^0'=bits33^post43, block_compress^0'=block_compress^post43, bytes_out^0'=bytes_out^post43, c37^0'=c37^post43, c7^0'=c7^post43, checkpoint^0'=checkpoint^post43, clear_flg^0'=clear_flg^post43, code31^0'=code31^post43, count^0'=count^post43, disp9^0'=disp9^post43, ent8^0'=ent8^post43, exit_stat^0'=exit_stat^post43, fcode5^0'=fcode5^post43, free_ent^0'=free_ent^post43, hshift11^0'=hshift11^post43, hsize^0'=hsize^post43, hsize___019^0'=hsize___019^post43, hsize___027^0'=hsize___027^post43, hsize_reg10^0'=hsize_reg10^post43, i21^0'=i21^post43, i29^0'=i29^post43, i3^0'=i3^post43, i41^0'=i41^post43, i45^0'=i45^post43, i6^0'=i6^post43, in_count^0'=in_count^post43, incnt^0'=incnt^post43, m122^0'=m122^post43, m130^0'=m130^post43, maxbits^0'=maxbits^post43, maxcode^0'=maxcode^post43, maxmaxcode^0'=maxmaxcode^post43, n40^0'=n40^post43, n44^0'=n44^post43, n_bits^0'=n_bits^post43, offset^0'=offset^post43, out_count^0'=out_count^post43, r_off32^0'=r_off32^post43, rat26^0'=rat26^post43, ratio^0'=ratio^post43, ret_getbyte18^0'=ret_getbyte18^post43, ret_getbyte25^0'=ret_getbyte25^post43, seed2^0'=seed2^post43, tabort4^0'=tabort4^post43, tmp12^0'=tmp12^post43, tmp___014^0'=tmp___014^post43, tmp___017^0'=tmp___017^post43, tmp___024^0'=tmp___024^post43, tmp___115^0'=tmp___115^post43, (i6^0-i6^post43 == 0 /\ __const_257^0-__const_257^post43 == 0 /\ checkpoint^0-checkpoint^post43 == 0 /\ -n40^post43+n40^0 == 0 /\ tmp___115^0-tmp___115^post43 == 0 /\ n44^0-n44^post43 == 0 /\ -block_compress^post43+block_compress^0 == 0 /\ m130^0-m130^post43 == 0 /\ -free_ent^post43+free_ent^0 == 0 /\ -__const_53^post43+__const_53^0 == 0 /\ tmp___014^0-tmp___014^post43 == 0 /\ -__const_429496^post43+__const_429496^0 == 0 /\ -ent8^post43+ent8^0 == 0 /\ -i29^post43+i29^0 == 0 /\ -i41^post43+i41^0 == 0 /\ __const_256^0-__const_256^post43 == 0 /\ -i45^post43+i45^0 == 0 /\ -n_bits^post43+n_bits^0 == 0 /\ -tabort4^post43+tabort4^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post43 == 0 /\ i3^0-i3^post43 == 0 /\ -i21^post43+i21^0 == 0 /\ count^0-count^post43 == 0 /\ -m122^post43+m122^0 == 0 /\ apsim_incnt^0-apsim_incnt^post43 == 0 /\ -in_count^post43+in_count^0 == 0 /\ hsize___027^0-hsize___027^post43 == 0 /\ -__const_2147483647^post43+__const_2147483647^0 == 0 /\ hshift11^0-hshift11^post43 == 0 /\ -c7^post43+c7^0 == 0 /\ -maxbits^post43+maxbits^0 == 0 /\ -clear_flg^post43+clear_flg^0 == 0 /\ -hsize_reg10^post43+hsize_reg10^0 == 0 /\ -tmp___024^post43+tmp___024^0 == 0 /\ -tmp___017^post43+tmp___017^0 == 0 /\ offset^post43 == 0 /\ -hsize___019^post43+hsize___019^0 == 0 /\ -hsize^post43+hsize^0 == 0 /\ -disp9^post43+disp9^0 == 0 /\ rat26^0-rat26^post43 == 0 /\ __const_50^0-__const_50^post43 == 0 /\ -apsim_bound11113^post43+apsim_bound11113^0 == 0 /\ fcode5^0-fcode5^post43 == 0 /\ __const_10000^0-__const_10000^post43 == 0 /\ -__const_9^post43+__const_9^0 == 0 /\ -__const_65536^post43+__const_65536^0 == 0 /\ -code31^post43+code31^0 == 0 /\ -ratio^post43+ratio^0 == 0 /\ -ret_getbyte18^post43+ret_getbyte18^0 == 0 /\ -incnt^post43+incnt^0 == 0 /\ -seed2^post43+seed2^0 == 0 /\ tmp12^0-tmp12^post43 == 0 /\ -r_off32^post43+r_off32^0 == 0 /\ out_count^0-out_count^post43 == 0 /\ __const_8^0-__const_8^post43 == 0 /\ -__const_16^post43+__const_16^0 == 0 /\ exit_stat^0-exit_stat^post43 == 0 /\ -bits33^post43+bits33^0 == 0 /\ maxmaxcode^0-maxmaxcode^post43 == 0 /\ c37^0-c37^post43 == 0 /\ bytes_out^0-bytes_out^post43 == 0 /\ -__const_8388607^post43+__const_8388607^0 == 0 /\ -maxcode^post43+maxcode^0 == 0), cost: 1
	New rule:
	l38 -> l37 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality i6^post43 = i6^0
		
		propagated equality __const_257^post43 = __const_257^0
		
		propagated equality checkpoint^post43 = checkpoint^0
		
		propagated equality n40^post43 = n40^0
		
		propagated equality tmp___115^post43 = tmp___115^0
		
		propagated equality n44^post43 = n44^0
		
		propagated equality block_compress^post43 = block_compress^0
		
		propagated equality m130^post43 = m130^0
		
		propagated equality free_ent^post43 = free_ent^0
		
		propagated equality __const_53^post43 = __const_53^0
		
		propagated equality tmp___014^post43 = tmp___014^0
		
		propagated equality __const_429496^post43 = __const_429496^0
		
		propagated equality ent8^post43 = ent8^0
		
		propagated equality i29^post43 = i29^0
		
		propagated equality i41^post43 = i41^0
		
		propagated equality __const_256^post43 = __const_256^0
		
		propagated equality i45^post43 = i45^0
		
		propagated equality n_bits^post43 = n_bits^0
		
		propagated equality tabort4^post43 = tabort4^0
		
		propagated equality ret_getbyte25^post43 = ret_getbyte25^0
		
		propagated equality i3^post43 = i3^0
		
		propagated equality i21^post43 = i21^0
		
		propagated equality count^post43 = count^0
		
		propagated equality m122^post43 = m122^0
		
		propagated equality apsim_incnt^post43 = apsim_incnt^0
		
		propagated equality in_count^post43 = in_count^0
		
		propagated equality hsize___027^post43 = hsize___027^0
		
		propagated equality __const_2147483647^post43 = __const_2147483647^0
		
		propagated equality hshift11^post43 = hshift11^0
		
		propagated equality c7^post43 = c7^0
		
		propagated equality maxbits^post43 = maxbits^0
		
		propagated equality clear_flg^post43 = clear_flg^0
		
		propagated equality hsize_reg10^post43 = hsize_reg10^0
		
		propagated equality tmp___024^post43 = tmp___024^0
		
		propagated equality tmp___017^post43 = tmp___017^0
		
		propagated equality offset^post43 = 0
		
		propagated equality hsize___019^post43 = hsize___019^0
		
		propagated equality hsize^post43 = hsize^0
		
		propagated equality disp9^post43 = disp9^0
		
		propagated equality rat26^post43 = rat26^0
		
		propagated equality __const_50^post43 = __const_50^0
		
		propagated equality apsim_bound11113^post43 = apsim_bound11113^0
		
		propagated equality fcode5^post43 = fcode5^0
		
		propagated equality __const_10000^post43 = __const_10000^0
		
		propagated equality __const_9^post43 = __const_9^0
		
		propagated equality __const_65536^post43 = __const_65536^0
		
		propagated equality code31^post43 = code31^0
		
		propagated equality ratio^post43 = ratio^0
		
		propagated equality ret_getbyte18^post43 = ret_getbyte18^0
		
		propagated equality incnt^post43 = incnt^0
		
		propagated equality seed2^post43 = seed2^0
		
		propagated equality tmp12^post43 = tmp12^0
		
		propagated equality r_off32^post43 = r_off32^0
		
		propagated equality out_count^post43 = out_count^0
		
		propagated equality __const_8^post43 = __const_8^0
		
		propagated equality __const_16^post43 = __const_16^0
		
		propagated equality exit_stat^post43 = exit_stat^0
		
		propagated equality bits33^post43 = bits33^0
		
		propagated equality maxmaxcode^post43 = maxmaxcode^0
		
		propagated equality c37^post43 = c37^0
		
		propagated equality bytes_out^post43 = bytes_out^0
		
		propagated equality __const_8388607^post43 = __const_8388607^0
		
		propagated equality maxcode^post43 = maxcode^0
		
	Simplified Guard

	Original rule:
	l38 -> l37 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l38 -> l37 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l38 -> l37 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l38 -> l37 : offset^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l39 -> l38 : __const_10000^0'=__const_10000^post44, __const_16^0'=__const_16^post44, __const_2147483647^0'=__const_2147483647^post44, __const_256^0'=__const_256^post44, __const_257^0'=__const_257^post44, __const_429496^0'=__const_429496^post44, __const_50^0'=__const_50^post44, __const_53^0'=__const_53^post44, __const_65536^0'=__const_65536^post44, __const_8388607^0'=__const_8388607^post44, __const_8^0'=__const_8^post44, __const_9^0'=__const_9^post44, apsim_bound11113^0'=apsim_bound11113^post44, apsim_incnt^0'=apsim_incnt^post44, bits33^0'=bits33^post44, block_compress^0'=block_compress^post44, bytes_out^0'=bytes_out^post44, c37^0'=c37^post44, c7^0'=c7^post44, checkpoint^0'=checkpoint^post44, clear_flg^0'=clear_flg^post44, code31^0'=code31^post44, count^0'=count^post44, disp9^0'=disp9^post44, ent8^0'=ent8^post44, exit_stat^0'=exit_stat^post44, fcode5^0'=fcode5^post44, free_ent^0'=free_ent^post44, hshift11^0'=hshift11^post44, hsize^0'=hsize^post44, hsize___019^0'=hsize___019^post44, hsize___027^0'=hsize___027^post44, hsize_reg10^0'=hsize_reg10^post44, i21^0'=i21^post44, i29^0'=i29^post44, i3^0'=i3^post44, i41^0'=i41^post44, i45^0'=i45^post44, i6^0'=i6^post44, in_count^0'=in_count^post44, incnt^0'=incnt^post44, m122^0'=m122^post44, m130^0'=m130^post44, maxbits^0'=maxbits^post44, maxcode^0'=maxcode^post44, maxmaxcode^0'=maxmaxcode^post44, n40^0'=n40^post44, n44^0'=n44^post44, n_bits^0'=n_bits^post44, offset^0'=offset^post44, out_count^0'=out_count^post44, r_off32^0'=r_off32^post44, rat26^0'=rat26^post44, ratio^0'=ratio^post44, ret_getbyte18^0'=ret_getbyte18^post44, ret_getbyte25^0'=ret_getbyte25^post44, seed2^0'=seed2^post44, tabort4^0'=tabort4^post44, tmp12^0'=tmp12^post44, tmp___014^0'=tmp___014^post44, tmp___017^0'=tmp___017^post44, tmp___024^0'=tmp___024^post44, tmp___115^0'=tmp___115^post44, (maxcode^0-maxcode^post44 == 0 /\ -hsize___019^post44+hsize___019^0 == 0 /\ -hsize^post44+hsize^0 == 0 /\ count^0-count^post44 == 0 /\ -seed2^post44+seed2^0 == 0 /\ __const_53^0-__const_53^post44 == 0 /\ offset^0-offset^post44 == 0 /\ -ent8^post44+ent8^0 == 0 /\ hshift11^0-hshift11^post44 == 0 /\ disp9^0-disp9^post44 == 0 /\ __const_16^0-__const_16^post44 == 0 /\ ret_getbyte25^0-ret_getbyte25^post44 == 0 /\ -n_bits^post44+n_bits^0 == 0 /\ apsim_incnt^0-apsim_incnt^post44 == 0 /\ -code31^post44+code31^0 == 0 /\ -r_off32^post44+r_off32^0 == 0 /\ -apsim_bound11113^post44+apsim_bound11113^0 == 0 /\ -__const_9^post44+__const_9^0 == 0 /\ maxmaxcode^0-maxmaxcode^post44 == 0 /\ -__const_8388607^post44+__const_8388607^0 == 0 /\ m130^0-m130^post44 == 0 /\ i6^0-i6^post44 == 0 /\ checkpoint^0-checkpoint^post44 == 0 /\ c37^0-c37^post44 == 0 /\ -n40^post44+n40^0 == 0 /\ -ratio^post44+ratio^0 == 0 /\ __const_257^0-__const_257^post44 == 0 /\ __const_50^0-__const_50^post44 == 0 /\ -bits33^post44+bits33^0 == 0 /\ tmp___115^0-tmp___115^post44 == 0 /\ __const_256^0-__const_256^post44 == 0 /\ n44^0-n44^post44 == 0 /\ i3^0-i3^post44 == 0 /\ hsize___027^0-hsize___027^post44 == 0 /\ -c7^post44+c7^0 == 0 /\ -block_compress^post44+block_compress^0 == 0 /\ tmp12^0-tmp12^post44 == 0 /\ -__const_429496^post44+__const_429496^0 == 0 /\ __const_8^0-__const_8^post44 == 0 /\ -i29^post44+i29^0 == 0 /\ rat26^0-rat26^post44 == 0 /\ tmp___017^0-tmp___017^post44 == 0 /\ -i41^post44+i41^0 == 0 /\ exit_stat^0-exit_stat^post44 == 0 /\ -incnt^post44+incnt^0 == 0 /\ -bytes_out^0-n_bits^0+bytes_out^post44 == 0 /\ -i45^post44+i45^0 == 0 /\ -free_ent^post44+free_ent^0 == 0 /\ -fcode5^post44+fcode5^0 == 0 /\ -__const_65536^post44+__const_65536^0 == 0 /\ -maxbits^post44+maxbits^0 == 0 /\ -i21^post44+i21^0 == 0 /\ -ret_getbyte18^post44+ret_getbyte18^0 == 0 /\ -tmp___024^post44+tmp___024^0 == 0 /\ m122^0-m122^post44 == 0 /\ -__const_2147483647^post44+__const_2147483647^0 == 0 /\ -in_count^post44+in_count^0 == 0 /\ -tmp___014^post44+tmp___014^0 == 0 /\ hsize_reg10^0-hsize_reg10^post44 == 0 /\ -clear_flg^post44+clear_flg^0 == 0 /\ __const_10000^0-__const_10000^post44 == 0 /\ -tabort4^post44+tabort4^0 == 0 /\ out_count^0-out_count^post44 == 0), cost: 1
	New rule:
	l39 -> l38 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0+n_bits^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality maxcode^post44 = maxcode^0
		
		propagated equality hsize___019^post44 = hsize___019^0
		
		propagated equality hsize^post44 = hsize^0
		
		propagated equality count^post44 = count^0
		
		propagated equality seed2^post44 = seed2^0
		
		propagated equality __const_53^post44 = __const_53^0
		
		propagated equality offset^post44 = offset^0
		
		propagated equality ent8^post44 = ent8^0
		
		propagated equality hshift11^post44 = hshift11^0
		
		propagated equality disp9^post44 = disp9^0
		
		propagated equality __const_16^post44 = __const_16^0
		
		propagated equality ret_getbyte25^post44 = ret_getbyte25^0
		
		propagated equality n_bits^post44 = n_bits^0
		
		propagated equality apsim_incnt^post44 = apsim_incnt^0
		
		propagated equality code31^post44 = code31^0
		
		propagated equality r_off32^post44 = r_off32^0
		
		propagated equality apsim_bound11113^post44 = apsim_bound11113^0
		
		propagated equality __const_9^post44 = __const_9^0
		
		propagated equality maxmaxcode^post44 = maxmaxcode^0
		
		propagated equality __const_8388607^post44 = __const_8388607^0
		
		propagated equality m130^post44 = m130^0
		
		propagated equality i6^post44 = i6^0
		
		propagated equality checkpoint^post44 = checkpoint^0
		
		propagated equality c37^post44 = c37^0
		
		propagated equality n40^post44 = n40^0
		
		propagated equality ratio^post44 = ratio^0
		
		propagated equality __const_257^post44 = __const_257^0
		
		propagated equality __const_50^post44 = __const_50^0
		
		propagated equality bits33^post44 = bits33^0
		
		propagated equality tmp___115^post44 = tmp___115^0
		
		propagated equality __const_256^post44 = __const_256^0
		
		propagated equality n44^post44 = n44^0
		
		propagated equality i3^post44 = i3^0
		
		propagated equality hsize___027^post44 = hsize___027^0
		
		propagated equality c7^post44 = c7^0
		
		propagated equality block_compress^post44 = block_compress^0
		
		propagated equality tmp12^post44 = tmp12^0
		
		propagated equality __const_429496^post44 = __const_429496^0
		
		propagated equality __const_8^post44 = __const_8^0
		
		propagated equality i29^post44 = i29^0
		
		propagated equality rat26^post44 = rat26^0
		
		propagated equality tmp___017^post44 = tmp___017^0
		
		propagated equality i41^post44 = i41^0
		
		propagated equality exit_stat^post44 = exit_stat^0
		
		propagated equality incnt^post44 = incnt^0
		
		propagated equality bytes_out^post44 = bytes_out^0+n_bits^0
		
		propagated equality i45^post44 = i45^0
		
		propagated equality free_ent^post44 = free_ent^0
		
		propagated equality fcode5^post44 = fcode5^0
		
		propagated equality __const_65536^post44 = __const_65536^0
		
		propagated equality maxbits^post44 = maxbits^0
		
		propagated equality i21^post44 = i21^0
		
		propagated equality ret_getbyte18^post44 = ret_getbyte18^0
		
		propagated equality tmp___024^post44 = tmp___024^0
		
		propagated equality m122^post44 = m122^0
		
		propagated equality __const_2147483647^post44 = __const_2147483647^0
		
		propagated equality in_count^post44 = in_count^0
		
		propagated equality tmp___014^post44 = tmp___014^0
		
		propagated equality hsize_reg10^post44 = hsize_reg10^0
		
		propagated equality clear_flg^post44 = clear_flg^0
		
		propagated equality __const_10000^post44 = __const_10000^0
		
		propagated equality tabort4^post44 = tabort4^0
		
		propagated equality out_count^post44 = out_count^0
		
	Simplified Guard

	Original rule:
	l39 -> l38 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0+n_bits^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l39 -> l38 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0+n_bits^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l39 -> l38 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0+n_bits^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l39 -> l38 : bytes_out^0'=bytes_out^0+n_bits^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l40 -> l39 : __const_10000^0'=__const_10000^post45, __const_16^0'=__const_16^post45, __const_2147483647^0'=__const_2147483647^post45, __const_256^0'=__const_256^post45, __const_257^0'=__const_257^post45, __const_429496^0'=__const_429496^post45, __const_50^0'=__const_50^post45, __const_53^0'=__const_53^post45, __const_65536^0'=__const_65536^post45, __const_8388607^0'=__const_8388607^post45, __const_8^0'=__const_8^post45, __const_9^0'=__const_9^post45, apsim_bound11113^0'=apsim_bound11113^post45, apsim_incnt^0'=apsim_incnt^post45, bits33^0'=bits33^post45, block_compress^0'=block_compress^post45, bytes_out^0'=bytes_out^post45, c37^0'=c37^post45, c7^0'=c7^post45, checkpoint^0'=checkpoint^post45, clear_flg^0'=clear_flg^post45, code31^0'=code31^post45, count^0'=count^post45, disp9^0'=disp9^post45, ent8^0'=ent8^post45, exit_stat^0'=exit_stat^post45, fcode5^0'=fcode5^post45, free_ent^0'=free_ent^post45, hshift11^0'=hshift11^post45, hsize^0'=hsize^post45, hsize___019^0'=hsize___019^post45, hsize___027^0'=hsize___027^post45, hsize_reg10^0'=hsize_reg10^post45, i21^0'=i21^post45, i29^0'=i29^post45, i3^0'=i3^post45, i41^0'=i41^post45, i45^0'=i45^post45, i6^0'=i6^post45, in_count^0'=in_count^post45, incnt^0'=incnt^post45, m122^0'=m122^post45, m130^0'=m130^post45, maxbits^0'=maxbits^post45, maxcode^0'=maxcode^post45, maxmaxcode^0'=maxmaxcode^post45, n40^0'=n40^post45, n44^0'=n44^post45, n_bits^0'=n_bits^post45, offset^0'=offset^post45, out_count^0'=out_count^post45, r_off32^0'=r_off32^post45, rat26^0'=rat26^post45, ratio^0'=ratio^post45, ret_getbyte18^0'=ret_getbyte18^post45, ret_getbyte25^0'=ret_getbyte25^post45, seed2^0'=seed2^post45, tabort4^0'=tabort4^post45, tmp12^0'=tmp12^post45, tmp___014^0'=tmp___014^post45, tmp___017^0'=tmp___017^post45, tmp___024^0'=tmp___024^post45, tmp___115^0'=tmp___115^post45, (__const_256^0-__const_256^post45 == 0 /\ tabort4^0-tabort4^post45 == 0 /\ m122^0-m122^post45 == 0 /\ maxmaxcode^0-maxmaxcode^post45 == 0 /\ r_off32^0-r_off32^post45 == 0 /\ -i21^post45+i21^0 == 0 /\ -tmp___014^post45+tmp___014^0 == 0 /\ -free_ent^post45+free_ent^0 == 0 /\ -__const_65536^post45+__const_65536^0 == 0 /\ out_count^0-out_count^post45 == 0 /\ -block_compress^post45+block_compress^0 == 0 /\ -tmp___024^post45+tmp___024^0 == 0 /\ -tmp___115^post45+tmp___115^0 == 0 /\ -c7^post45+c7^0 == 0 /\ -c37^post45+c37^0 == 0 /\ hsize___027^0-hsize___027^post45 == 0 /\ clear_flg^0-clear_flg^post45 == 0 /\ in_count^0-in_count^post45 == 0 /\ __const_16^0-i41^0 <= 0 /\ -i45^post45+i45^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post45 == 0 /\ __const_50^0-__const_50^post45 == 0 /\ n44^0-n44^post45 == 0 /\ -code31^post45+code31^0 == 0 /\ -__const_8388607^post45+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post45 == 0 /\ -offset^post45+offset^0 == 0 /\ __const_257^0-__const_257^post45 == 0 /\ -disp9^post45+disp9^0 == 0 /\ checkpoint^0-checkpoint^post45 == 0 /\ count^0-count^post45 == 0 /\ hshift11^0-hshift11^post45 == 0 /\ -__const_429496^post45+__const_429496^0 == 0 /\ i6^0-i6^post45 == 0 /\ apsim_incnt^0-apsim_incnt^post45 == 0 /\ maxcode^0-maxcode^post45 == 0 /\ i3^0-i3^post45 == 0 /\ -__const_16^post45+__const_16^0 == 0 /\ -__const_2147483647^post45+__const_2147483647^0 == 0 /\ -apsim_bound11113^post45+apsim_bound11113^0 == 0 /\ tmp___017^0-tmp___017^post45 == 0 /\ tmp12^0-tmp12^post45 == 0 /\ -seed2^post45+seed2^0 == 0 /\ fcode5^0-fcode5^post45 == 0 /\ -maxbits^post45+maxbits^0 == 0 /\ -hsize_reg10^post45+hsize_reg10^0 == 0 /\ __const_8^0-__const_8^post45 == 0 /\ m130^0-m130^post45 == 0 /\ -n40^post45+n40^0 == 0 /\ -hsize___019^post45+hsize___019^0 == 0 /\ -hsize^post45+hsize^0 == 0 /\ -i41^post45+i41^0 == 0 /\ exit_stat^0-exit_stat^post45 == 0 /\ __const_10000^0-__const_10000^post45 == 0 /\ -bits33^post45+bits33^0 == 0 /\ -incnt^post45+incnt^0 == 0 /\ -ent8^post45+ent8^0 == 0 /\ -__const_9^post45+__const_9^0 == 0 /\ -ratio^post45+ratio^0 == 0 /\ bytes_out^0-bytes_out^post45 == 0 /\ -n_bits^post45+n_bits^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post45 == 0 /\ -i29^post45+i29^0 == 0 /\ rat26^0-rat26^post45 == 0), cost: 1
	New rule:
	l40 -> l39 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ __const_16^0-i41^0 <= 0), cost: 1
	
		propagated equality __const_256^post45 = __const_256^0
		
		propagated equality tabort4^post45 = tabort4^0
		
		propagated equality m122^post45 = m122^0
		
		propagated equality maxmaxcode^post45 = maxmaxcode^0
		
		propagated equality r_off32^post45 = r_off32^0
		
		propagated equality i21^post45 = i21^0
		
		propagated equality tmp___014^post45 = tmp___014^0
		
		propagated equality free_ent^post45 = free_ent^0
		
		propagated equality __const_65536^post45 = __const_65536^0
		
		propagated equality out_count^post45 = out_count^0
		
		propagated equality block_compress^post45 = block_compress^0
		
		propagated equality tmp___024^post45 = tmp___024^0
		
		propagated equality tmp___115^post45 = tmp___115^0
		
		propagated equality c7^post45 = c7^0
		
		propagated equality c37^post45 = c37^0
		
		propagated equality hsize___027^post45 = hsize___027^0
		
		propagated equality clear_flg^post45 = clear_flg^0
		
		propagated equality in_count^post45 = in_count^0
		
		propagated equality i45^post45 = i45^0
		
		propagated equality ret_getbyte18^post45 = ret_getbyte18^0
		
		propagated equality __const_50^post45 = __const_50^0
		
		propagated equality n44^post45 = n44^0
		
		propagated equality code31^post45 = code31^0
		
		propagated equality __const_8388607^post45 = __const_8388607^0
		
		propagated equality __const_53^post45 = __const_53^0
		
		propagated equality offset^post45 = offset^0
		
		propagated equality __const_257^post45 = __const_257^0
		
		propagated equality disp9^post45 = disp9^0
		
		propagated equality checkpoint^post45 = checkpoint^0
		
		propagated equality count^post45 = count^0
		
		propagated equality hshift11^post45 = hshift11^0
		
		propagated equality __const_429496^post45 = __const_429496^0
		
		propagated equality i6^post45 = i6^0
		
		propagated equality apsim_incnt^post45 = apsim_incnt^0
		
		propagated equality maxcode^post45 = maxcode^0
		
		propagated equality i3^post45 = i3^0
		
		propagated equality __const_16^post45 = __const_16^0
		
		propagated equality __const_2147483647^post45 = __const_2147483647^0
		
		propagated equality apsim_bound11113^post45 = apsim_bound11113^0
		
		propagated equality tmp___017^post45 = tmp___017^0
		
		propagated equality tmp12^post45 = tmp12^0
		
		propagated equality seed2^post45 = seed2^0
		
		propagated equality fcode5^post45 = fcode5^0
		
		propagated equality maxbits^post45 = maxbits^0
		
		propagated equality hsize_reg10^post45 = hsize_reg10^0
		
		propagated equality __const_8^post45 = __const_8^0
		
		propagated equality m130^post45 = m130^0
		
		propagated equality n40^post45 = n40^0
		
		propagated equality hsize___019^post45 = hsize___019^0
		
		propagated equality hsize^post45 = hsize^0
		
		propagated equality i41^post45 = i41^0
		
		propagated equality exit_stat^post45 = exit_stat^0
		
		propagated equality __const_10000^post45 = __const_10000^0
		
		propagated equality bits33^post45 = bits33^0
		
		propagated equality incnt^post45 = incnt^0
		
		propagated equality ent8^post45 = ent8^0
		
		propagated equality __const_9^post45 = __const_9^0
		
		propagated equality ratio^post45 = ratio^0
		
		propagated equality bytes_out^post45 = bytes_out^0
		
		propagated equality n_bits^post45 = n_bits^0
		
		propagated equality ret_getbyte25^post45 = ret_getbyte25^0
		
		propagated equality i29^post45 = i29^0
		
		propagated equality rat26^post45 = rat26^0
		
	Simplified Guard

	Original rule:
	l40 -> l39 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ __const_16^0-i41^0 <= 0), cost: 1
	New rule:
	l40 -> l39 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, __const_16^0-i41^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l40 -> l39 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, __const_16^0-i41^0 <= 0, cost: 1
	New rule:
	l40 -> l39 : __const_16^0-i41^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l40 -> l21 : __const_10000^0'=__const_10000^post46, __const_16^0'=__const_16^post46, __const_2147483647^0'=__const_2147483647^post46, __const_256^0'=__const_256^post46, __const_257^0'=__const_257^post46, __const_429496^0'=__const_429496^post46, __const_50^0'=__const_50^post46, __const_53^0'=__const_53^post46, __const_65536^0'=__const_65536^post46, __const_8388607^0'=__const_8388607^post46, __const_8^0'=__const_8^post46, __const_9^0'=__const_9^post46, apsim_bound11113^0'=apsim_bound11113^post46, apsim_incnt^0'=apsim_incnt^post46, bits33^0'=bits33^post46, block_compress^0'=block_compress^post46, bytes_out^0'=bytes_out^post46, c37^0'=c37^post46, c7^0'=c7^post46, checkpoint^0'=checkpoint^post46, clear_flg^0'=clear_flg^post46, code31^0'=code31^post46, count^0'=count^post46, disp9^0'=disp9^post46, ent8^0'=ent8^post46, exit_stat^0'=exit_stat^post46, fcode5^0'=fcode5^post46, free_ent^0'=free_ent^post46, hshift11^0'=hshift11^post46, hsize^0'=hsize^post46, hsize___019^0'=hsize___019^post46, hsize___027^0'=hsize___027^post46, hsize_reg10^0'=hsize_reg10^post46, i21^0'=i21^post46, i29^0'=i29^post46, i3^0'=i3^post46, i41^0'=i41^post46, i45^0'=i45^post46, i6^0'=i6^post46, in_count^0'=in_count^post46, incnt^0'=incnt^post46, m122^0'=m122^post46, m130^0'=m130^post46, maxbits^0'=maxbits^post46, maxcode^0'=maxcode^post46, maxmaxcode^0'=maxmaxcode^post46, n40^0'=n40^post46, n44^0'=n44^post46, n_bits^0'=n_bits^post46, offset^0'=offset^post46, out_count^0'=out_count^post46, r_off32^0'=r_off32^post46, rat26^0'=rat26^post46, ratio^0'=ratio^post46, ret_getbyte18^0'=ret_getbyte18^post46, ret_getbyte25^0'=ret_getbyte25^post46, seed2^0'=seed2^post46, tabort4^0'=tabort4^post46, tmp12^0'=tmp12^post46, tmp___014^0'=tmp___014^post46, tmp___017^0'=tmp___017^post46, tmp___024^0'=tmp___024^post46, tmp___115^0'=tmp___115^post46, (-n40^post46+n40^0 == 0 /\ -i29^post46+i29^0 == 0 /\ 1-__const_16^0+i41^0 <= 0 /\ checkpoint^0-checkpoint^post46 == 0 /\ exit_stat^0-exit_stat^post46 == 0 /\ i6^0-i6^post46 == 0 /\ -__const_2147483647^post46+__const_2147483647^0 == 0 /\ tabort4^0-tabort4^post46 == 0 /\ -__const_257^post46+__const_257^0 == 0 /\ -__const_16^post46+__const_16^0 == 0 /\ r_off32^0-r_off32^post46 == 0 /\ ret_getbyte18^0-ret_getbyte18^post46 == 0 /\ -rat26^post46+rat26^0 == 0 /\ -c7^post46+c7^0 == 0 /\ out_count^0-out_count^post46 == 0 /\ -clear_flg^post46+clear_flg^0 == 0 /\ -__const_9^post46+__const_9^0 == 0 /\ -ent8^post46+ent8^0 == 0 /\ -tmp12^post46+tmp12^0 == 0 /\ m130^0-m130^post46 == 0 /\ -free_ent^post46+free_ent^0 == 0 /\ -__const_65536^post46+__const_65536^0 == 0 /\ i3^0-i3^post46 == 0 /\ maxmaxcode^0-maxmaxcode^post46 == 0 /\ -hsize_reg10^post46+hsize_reg10^0 == 0 /\ -hsize___019^post46+hsize___019^0 == 0 /\ -seed2^post46+seed2^0 == 0 /\ -fcode5^post46+fcode5^0 == 0 /\ count^0-count^post46 == 0 /\ -incnt^post46+incnt^0 == 0 /\ -i21^post46+i21^0 == 0 /\ hsize___027^0-hsize___027^post46 == 0 /\ -maxbits^post46+maxbits^0 == 0 /\ -code31^post46+code31^0 == 0 /\ -__const_8388607^post46+__const_8388607^0 == 0 /\ -ratio^post46+ratio^0 == 0 /\ hshift11^0-hshift11^post46 == 0 /\ -1+i41^post46-i41^0 == 0 /\ -tmp___024^post46+tmp___024^0 == 0 /\ -tmp___115^post46+tmp___115^0 == 0 /\ apsim_incnt^0-apsim_incnt^post46 == 0 /\ n44^0-n44^post46 == 0 /\ __const_50^0-__const_50^post46 == 0 /\ __const_10000^0-__const_10000^post46 == 0 /\ maxcode^0-maxcode^post46 == 0 /\ n_bits^0-n_bits^post46 == 0 /\ __const_53^0-__const_53^post46 == 0 /\ -in_count^post46+in_count^0 == 0 /\ -bits33^post46+bits33^0 == 0 /\ -tmp___014^post46+tmp___014^0 == 0 /\ __const_8^0-__const_8^post46 == 0 /\ -offset^post46+offset^0 == 0 /\ -disp9^post46+disp9^0 == 0 /\ -block_compress^post46+block_compress^0 == 0 /\ tmp___017^0-tmp___017^post46 == 0 /\ -ret_getbyte25^post46+ret_getbyte25^0 == 0 /\ -apsim_bound11113^post46+apsim_bound11113^0 == 0 /\ -__const_429496^post46+__const_429496^0 == 0 /\ -hsize^post46+hsize^0 == 0 /\ __const_256^0-__const_256^post46 == 0 /\ bytes_out^0-bytes_out^post46 == 0 /\ c37^0-c37^post46 == 0 /\ -i45^post46+i45^0 == 0 /\ -m122^post46+m122^0 == 0), cost: 1
	New rule:
	l40 -> l21 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=1+i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-__const_16^0+i41^0 <= 0), cost: 1
	
		propagated equality n40^post46 = n40^0
		
		propagated equality i29^post46 = i29^0
		
		propagated equality checkpoint^post46 = checkpoint^0
		
		propagated equality exit_stat^post46 = exit_stat^0
		
		propagated equality i6^post46 = i6^0
		
		propagated equality __const_2147483647^post46 = __const_2147483647^0
		
		propagated equality tabort4^post46 = tabort4^0
		
		propagated equality __const_257^post46 = __const_257^0
		
		propagated equality __const_16^post46 = __const_16^0
		
		propagated equality r_off32^post46 = r_off32^0
		
		propagated equality ret_getbyte18^post46 = ret_getbyte18^0
		
		propagated equality rat26^post46 = rat26^0
		
		propagated equality c7^post46 = c7^0
		
		propagated equality out_count^post46 = out_count^0
		
		propagated equality clear_flg^post46 = clear_flg^0
		
		propagated equality __const_9^post46 = __const_9^0
		
		propagated equality ent8^post46 = ent8^0
		
		propagated equality tmp12^post46 = tmp12^0
		
		propagated equality m130^post46 = m130^0
		
		propagated equality free_ent^post46 = free_ent^0
		
		propagated equality __const_65536^post46 = __const_65536^0
		
		propagated equality i3^post46 = i3^0
		
		propagated equality maxmaxcode^post46 = maxmaxcode^0
		
		propagated equality hsize_reg10^post46 = hsize_reg10^0
		
		propagated equality hsize___019^post46 = hsize___019^0
		
		propagated equality seed2^post46 = seed2^0
		
		propagated equality fcode5^post46 = fcode5^0
		
		propagated equality count^post46 = count^0
		
		propagated equality incnt^post46 = incnt^0
		
		propagated equality i21^post46 = i21^0
		
		propagated equality hsize___027^post46 = hsize___027^0
		
		propagated equality maxbits^post46 = maxbits^0
		
		propagated equality code31^post46 = code31^0
		
		propagated equality __const_8388607^post46 = __const_8388607^0
		
		propagated equality ratio^post46 = ratio^0
		
		propagated equality hshift11^post46 = hshift11^0
		
		propagated equality i41^post46 = 1+i41^0
		
		propagated equality tmp___024^post46 = tmp___024^0
		
		propagated equality tmp___115^post46 = tmp___115^0
		
		propagated equality apsim_incnt^post46 = apsim_incnt^0
		
		propagated equality n44^post46 = n44^0
		
		propagated equality __const_50^post46 = __const_50^0
		
		propagated equality __const_10000^post46 = __const_10000^0
		
		propagated equality maxcode^post46 = maxcode^0
		
		propagated equality n_bits^post46 = n_bits^0
		
		propagated equality __const_53^post46 = __const_53^0
		
		propagated equality in_count^post46 = in_count^0
		
		propagated equality bits33^post46 = bits33^0
		
		propagated equality tmp___014^post46 = tmp___014^0
		
		propagated equality __const_8^post46 = __const_8^0
		
		propagated equality offset^post46 = offset^0
		
		propagated equality disp9^post46 = disp9^0
		
		propagated equality block_compress^post46 = block_compress^0
		
		propagated equality tmp___017^post46 = tmp___017^0
		
		propagated equality ret_getbyte25^post46 = ret_getbyte25^0
		
		propagated equality apsim_bound11113^post46 = apsim_bound11113^0
		
		propagated equality __const_429496^post46 = __const_429496^0
		
		propagated equality hsize^post46 = hsize^0
		
		propagated equality __const_256^post46 = __const_256^0
		
		propagated equality bytes_out^post46 = bytes_out^0
		
		propagated equality c37^post46 = c37^0
		
		propagated equality i45^post46 = i45^0
		
		propagated equality m122^post46 = m122^0
		
	Simplified Guard

	Original rule:
	l40 -> l21 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=1+i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-__const_16^0+i41^0 <= 0), cost: 1
	New rule:
	l40 -> l21 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=1+i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-__const_16^0+i41^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l40 -> l21 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=1+i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-__const_16^0+i41^0 <= 0, cost: 1
	New rule:
	l40 -> l21 : i41^0'=1+i41^0, 1-__const_16^0+i41^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l22 -> l39 : __const_10000^0'=__const_10000^post47, __const_16^0'=__const_16^post47, __const_2147483647^0'=__const_2147483647^post47, __const_256^0'=__const_256^post47, __const_257^0'=__const_257^post47, __const_429496^0'=__const_429496^post47, __const_50^0'=__const_50^post47, __const_53^0'=__const_53^post47, __const_65536^0'=__const_65536^post47, __const_8388607^0'=__const_8388607^post47, __const_8^0'=__const_8^post47, __const_9^0'=__const_9^post47, apsim_bound11113^0'=apsim_bound11113^post47, apsim_incnt^0'=apsim_incnt^post47, bits33^0'=bits33^post47, block_compress^0'=block_compress^post47, bytes_out^0'=bytes_out^post47, c37^0'=c37^post47, c7^0'=c7^post47, checkpoint^0'=checkpoint^post47, clear_flg^0'=clear_flg^post47, code31^0'=code31^post47, count^0'=count^post47, disp9^0'=disp9^post47, ent8^0'=ent8^post47, exit_stat^0'=exit_stat^post47, fcode5^0'=fcode5^post47, free_ent^0'=free_ent^post47, hshift11^0'=hshift11^post47, hsize^0'=hsize^post47, hsize___019^0'=hsize___019^post47, hsize___027^0'=hsize___027^post47, hsize_reg10^0'=hsize_reg10^post47, i21^0'=i21^post47, i29^0'=i29^post47, i3^0'=i3^post47, i41^0'=i41^post47, i45^0'=i45^post47, i6^0'=i6^post47, in_count^0'=in_count^post47, incnt^0'=incnt^post47, m122^0'=m122^post47, m130^0'=m130^post47, maxbits^0'=maxbits^post47, maxcode^0'=maxcode^post47, maxmaxcode^0'=maxmaxcode^post47, n40^0'=n40^post47, n44^0'=n44^post47, n_bits^0'=n_bits^post47, offset^0'=offset^post47, out_count^0'=out_count^post47, r_off32^0'=r_off32^post47, rat26^0'=rat26^post47, ratio^0'=ratio^post47, ret_getbyte18^0'=ret_getbyte18^post47, ret_getbyte25^0'=ret_getbyte25^post47, seed2^0'=seed2^post47, tabort4^0'=tabort4^post47, tmp12^0'=tmp12^post47, tmp___014^0'=tmp___014^post47, tmp___017^0'=tmp___017^post47, tmp___024^0'=tmp___024^post47, tmp___115^0'=tmp___115^post47, (i3^0-i3^post47 == 0 /\ -hsize^post47+hsize^0 == 0 /\ -hsize___019^post47+hsize___019^0 == 0 /\ -ent8^post47+ent8^0 == 0 /\ i21^0-i21^post47 == 0 /\ -disp9^post47+disp9^0 == 0 /\ free_ent^0-free_ent^post47 == 0 /\ n40^0-n40^post47 == 0 /\ out_count^0-out_count^post47 == 0 /\ hsize___027^0-hsize___027^post47 == 0 /\ -code31^post47+code31^0 == 0 /\ -apsim_bound11113^post47+apsim_bound11113^0 == 0 /\ -fcode5^post47+fcode5^0 == 0 /\ n40^0-i41^0 <= 0 /\ tmp___014^0-tmp___014^post47 == 0 /\ -ret_getbyte18^post47+ret_getbyte18^0 == 0 /\ -tmp___024^post47+tmp___024^0 == 0 /\ offset^0-offset^post47 == 0 /\ tmp12^0-tmp12^post47 == 0 /\ -__const_16^post47+__const_16^0 == 0 /\ maxmaxcode^0-maxmaxcode^post47 == 0 /\ exit_stat^0-exit_stat^post47 == 0 /\ __const_10000^0-__const_10000^post47 == 0 /\ bits33^0-bits33^post47 == 0 /\ -r_off32^post47+r_off32^0 == 0 /\ -n_bits^post47+n_bits^0 == 0 /\ count^0-count^post47 == 0 /\ __const_53^0-__const_53^post47 == 0 /\ -incnt^post47+incnt^0 == 0 /\ -seed2^post47+seed2^0 == 0 /\ -block_compress^post47+block_compress^0 == 0 /\ -m122^post47+m122^0 == 0 /\ -tabort4^post47+tabort4^0 == 0 /\ apsim_incnt^0-apsim_incnt^post47 == 0 /\ -__const_9^post47+__const_9^0 == 0 /\ -__const_65536^post47+__const_65536^0 == 0 /\ -__const_429496^post47+__const_429496^0 == 0 /\ hshift11^0-hshift11^post47 == 0 /\ -i29^post47+i29^0 == 0 /\ -maxbits^post47+maxbits^0 == 0 /\ tmp___115^0-tmp___115^post47 == 0 /\ m130^0-m130^post47 == 0 /\ c37^0-c37^post47 == 0 /\ bytes_out^0-bytes_out^post47 == 0 /\ -i41^post47+i41^0 == 0 /\ -i45^post47+i45^0 == 0 /\ n44^0-n44^post47 == 0 /\ __const_257^0-__const_257^post47 == 0 /\ -maxcode^post47+maxcode^0 == 0 /\ checkpoint^0-checkpoint^post47 == 0 /\ i6^0-i6^post47 == 0 /\ -ratio^post47+ratio^0 == 0 /\ __const_8^0-__const_8^post47 == 0 /\ -in_count^post47+in_count^0 == 0 /\ __const_50^0-__const_50^post47 == 0 /\ tmp___017^0-tmp___017^post47 == 0 /\ -__const_2147483647^post47+__const_2147483647^0 == 0 /\ -__const_8388607^post47+__const_8388607^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post47 == 0 /\ -c7^post47+c7^0 == 0 /\ rat26^0-rat26^post47 == 0 /\ __const_256^0-__const_256^post47 == 0 /\ -hsize_reg10^post47+hsize_reg10^0 == 0 /\ -clear_flg^post47+clear_flg^0 == 0), cost: 1
	New rule:
	l22 -> l39 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ n40^0-i41^0 <= 0), cost: 1
	
		propagated equality i3^post47 = i3^0
		
		propagated equality hsize^post47 = hsize^0
		
		propagated equality hsize___019^post47 = hsize___019^0
		
		propagated equality ent8^post47 = ent8^0
		
		propagated equality i21^post47 = i21^0
		
		propagated equality disp9^post47 = disp9^0
		
		propagated equality free_ent^post47 = free_ent^0
		
		propagated equality n40^post47 = n40^0
		
		propagated equality out_count^post47 = out_count^0
		
		propagated equality hsize___027^post47 = hsize___027^0
		
		propagated equality code31^post47 = code31^0
		
		propagated equality apsim_bound11113^post47 = apsim_bound11113^0
		
		propagated equality fcode5^post47 = fcode5^0
		
		propagated equality tmp___014^post47 = tmp___014^0
		
		propagated equality ret_getbyte18^post47 = ret_getbyte18^0
		
		propagated equality tmp___024^post47 = tmp___024^0
		
		propagated equality offset^post47 = offset^0
		
		propagated equality tmp12^post47 = tmp12^0
		
		propagated equality __const_16^post47 = __const_16^0
		
		propagated equality maxmaxcode^post47 = maxmaxcode^0
		
		propagated equality exit_stat^post47 = exit_stat^0
		
		propagated equality __const_10000^post47 = __const_10000^0
		
		propagated equality bits33^post47 = bits33^0
		
		propagated equality r_off32^post47 = r_off32^0
		
		propagated equality n_bits^post47 = n_bits^0
		
		propagated equality count^post47 = count^0
		
		propagated equality __const_53^post47 = __const_53^0
		
		propagated equality incnt^post47 = incnt^0
		
		propagated equality seed2^post47 = seed2^0
		
		propagated equality block_compress^post47 = block_compress^0
		
		propagated equality m122^post47 = m122^0
		
		propagated equality tabort4^post47 = tabort4^0
		
		propagated equality apsim_incnt^post47 = apsim_incnt^0
		
		propagated equality __const_9^post47 = __const_9^0
		
		propagated equality __const_65536^post47 = __const_65536^0
		
		propagated equality __const_429496^post47 = __const_429496^0
		
		propagated equality hshift11^post47 = hshift11^0
		
		propagated equality i29^post47 = i29^0
		
		propagated equality maxbits^post47 = maxbits^0
		
		propagated equality tmp___115^post47 = tmp___115^0
		
		propagated equality m130^post47 = m130^0
		
		propagated equality c37^post47 = c37^0
		
		propagated equality bytes_out^post47 = bytes_out^0
		
		propagated equality i41^post47 = i41^0
		
		propagated equality i45^post47 = i45^0
		
		propagated equality n44^post47 = n44^0
		
		propagated equality __const_257^post47 = __const_257^0
		
		propagated equality maxcode^post47 = maxcode^0
		
		propagated equality checkpoint^post47 = checkpoint^0
		
		propagated equality i6^post47 = i6^0
		
		propagated equality ratio^post47 = ratio^0
		
		propagated equality __const_8^post47 = __const_8^0
		
		propagated equality in_count^post47 = in_count^0
		
		propagated equality __const_50^post47 = __const_50^0
		
		propagated equality tmp___017^post47 = tmp___017^0
		
		propagated equality __const_2147483647^post47 = __const_2147483647^0
		
		propagated equality __const_8388607^post47 = __const_8388607^0
		
		propagated equality ret_getbyte25^post47 = ret_getbyte25^0
		
		propagated equality c7^post47 = c7^0
		
		propagated equality rat26^post47 = rat26^0
		
		propagated equality __const_256^post47 = __const_256^0
		
		propagated equality hsize_reg10^post47 = hsize_reg10^0
		
		propagated equality clear_flg^post47 = clear_flg^0
		
	Simplified Guard

	Original rule:
	l22 -> l39 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ n40^0-i41^0 <= 0), cost: 1
	New rule:
	l22 -> l39 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, n40^0-i41^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l22 -> l39 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, n40^0-i41^0 <= 0, cost: 1
	New rule:
	l22 -> l39 : n40^0-i41^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l22 -> l40 : __const_10000^0'=__const_10000^post48, __const_16^0'=__const_16^post48, __const_2147483647^0'=__const_2147483647^post48, __const_256^0'=__const_256^post48, __const_257^0'=__const_257^post48, __const_429496^0'=__const_429496^post48, __const_50^0'=__const_50^post48, __const_53^0'=__const_53^post48, __const_65536^0'=__const_65536^post48, __const_8388607^0'=__const_8388607^post48, __const_8^0'=__const_8^post48, __const_9^0'=__const_9^post48, apsim_bound11113^0'=apsim_bound11113^post48, apsim_incnt^0'=apsim_incnt^post48, bits33^0'=bits33^post48, block_compress^0'=block_compress^post48, bytes_out^0'=bytes_out^post48, c37^0'=c37^post48, c7^0'=c7^post48, checkpoint^0'=checkpoint^post48, clear_flg^0'=clear_flg^post48, code31^0'=code31^post48, count^0'=count^post48, disp9^0'=disp9^post48, ent8^0'=ent8^post48, exit_stat^0'=exit_stat^post48, fcode5^0'=fcode5^post48, free_ent^0'=free_ent^post48, hshift11^0'=hshift11^post48, hsize^0'=hsize^post48, hsize___019^0'=hsize___019^post48, hsize___027^0'=hsize___027^post48, hsize_reg10^0'=hsize_reg10^post48, i21^0'=i21^post48, i29^0'=i29^post48, i3^0'=i3^post48, i41^0'=i41^post48, i45^0'=i45^post48, i6^0'=i6^post48, in_count^0'=in_count^post48, incnt^0'=incnt^post48, m122^0'=m122^post48, m130^0'=m130^post48, maxbits^0'=maxbits^post48, maxcode^0'=maxcode^post48, maxmaxcode^0'=maxmaxcode^post48, n40^0'=n40^post48, n44^0'=n44^post48, n_bits^0'=n_bits^post48, offset^0'=offset^post48, out_count^0'=out_count^post48, r_off32^0'=r_off32^post48, rat26^0'=rat26^post48, ratio^0'=ratio^post48, ret_getbyte18^0'=ret_getbyte18^post48, ret_getbyte25^0'=ret_getbyte25^post48, seed2^0'=seed2^post48, tabort4^0'=tabort4^post48, tmp12^0'=tmp12^post48, tmp___014^0'=tmp___014^post48, tmp___017^0'=tmp___017^post48, tmp___024^0'=tmp___024^post48, tmp___115^0'=tmp___115^post48, (i29^0-i29^post48 == 0 /\ rat26^0-rat26^post48 == 0 /\ hsize___027^0-hsize___027^post48 == 0 /\ __const_9^0-__const_9^post48 == 0 /\ maxcode^0-maxcode^post48 == 0 /\ exit_stat^0-exit_stat^post48 == 0 /\ -tmp___017^post48+tmp___017^0 == 0 /\ tmp___014^0-tmp___014^post48 == 0 /\ __const_257^0-__const_257^post48 == 0 /\ -__const_256^post48+__const_256^0 == 0 /\ tmp12^0-tmp12^post48 == 0 /\ -hsize_reg10^post48+hsize_reg10^0 == 0 /\ -tabort4^post48+tabort4^0 == 0 /\ -__const_10000^post48+__const_10000^0 == 0 /\ -hsize___019^post48+hsize___019^0 == 0 /\ -incnt^post48+incnt^0 == 0 /\ m130^0-m130^post48 == 0 /\ out_count^0-out_count^post48 == 0 /\ maxmaxcode^0-maxmaxcode^post48 == 0 /\ -bytes_out^post48+bytes_out^0 == 0 /\ -apsim_bound11113^post48+apsim_bound11113^0 == 0 /\ bits33^0-bits33^post48 == 0 /\ -__const_50^post48+__const_50^0 == 0 /\ 1-n40^0+i41^0 <= 0 /\ n40^0-n40^post48 == 0 /\ -n_bits^post48+n_bits^0 == 0 /\ -i41^post48+i41^0 == 0 /\ __const_65536^0-__const_65536^post48 == 0 /\ -fcode5^post48+fcode5^0 == 0 /\ offset^0-offset^post48 == 0 /\ i45^0-i45^post48 == 0 /\ ent8^0-ent8^post48 == 0 /\ apsim_incnt^0-apsim_incnt^post48 == 0 /\ -i21^post48+i21^0 == 0 /\ __const_16^0-__const_16^post48 == 0 /\ tmp___115^0-tmp___115^post48 == 0 /\ -ratio^post48+ratio^0 == 0 /\ -ret_getbyte18^post48+ret_getbyte18^0 == 0 /\ -in_count^post48+in_count^0 == 0 /\ -tmp___024^post48+tmp___024^0 == 0 /\ -i6^post48+i6^0 == 0 /\ count^0-count^post48 == 0 /\ __const_53^0-__const_53^post48 == 0 /\ -__const_8388607^post48+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post48 == 0 /\ ret_getbyte25^0-ret_getbyte25^post48 == 0 /\ -clear_flg^post48+clear_flg^0 == 0 /\ -checkpoint^post48+checkpoint^0 == 0 /\ hshift11^0-hshift11^post48 == 0 /\ -hsize^post48+hsize^0 == 0 /\ m122^0-m122^post48 == 0 /\ c37^0-c37^post48 == 0 /\ -disp9^post48+disp9^0 == 0 /\ -block_compress^post48+block_compress^0 == 0 /\ seed2^0-seed2^post48 == 0 /\ __const_2147483647^0-__const_2147483647^post48 == 0 /\ -code31^post48+code31^0 == 0 /\ -n44^post48+n44^0 == 0 /\ -r_off32^post48+r_off32^0 == 0 /\ -i3^post48+i3^0 == 0 /\ -maxbits^post48+maxbits^0 == 0 /\ __const_429496^0-__const_429496^post48 == 0 /\ free_ent^0-free_ent^post48 == 0 /\ c7^0-c7^post48 == 0), cost: 1
	New rule:
	l22 -> l40 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-n40^0+i41^0 <= 0), cost: 1
	
		propagated equality i29^post48 = i29^0
		
		propagated equality rat26^post48 = rat26^0
		
		propagated equality hsize___027^post48 = hsize___027^0
		
		propagated equality __const_9^post48 = __const_9^0
		
		propagated equality maxcode^post48 = maxcode^0
		
		propagated equality exit_stat^post48 = exit_stat^0
		
		propagated equality tmp___017^post48 = tmp___017^0
		
		propagated equality tmp___014^post48 = tmp___014^0
		
		propagated equality __const_257^post48 = __const_257^0
		
		propagated equality __const_256^post48 = __const_256^0
		
		propagated equality tmp12^post48 = tmp12^0
		
		propagated equality hsize_reg10^post48 = hsize_reg10^0
		
		propagated equality tabort4^post48 = tabort4^0
		
		propagated equality __const_10000^post48 = __const_10000^0
		
		propagated equality hsize___019^post48 = hsize___019^0
		
		propagated equality incnt^post48 = incnt^0
		
		propagated equality m130^post48 = m130^0
		
		propagated equality out_count^post48 = out_count^0
		
		propagated equality maxmaxcode^post48 = maxmaxcode^0
		
		propagated equality bytes_out^post48 = bytes_out^0
		
		propagated equality apsim_bound11113^post48 = apsim_bound11113^0
		
		propagated equality bits33^post48 = bits33^0
		
		propagated equality __const_50^post48 = __const_50^0
		
		propagated equality n40^post48 = n40^0
		
		propagated equality n_bits^post48 = n_bits^0
		
		propagated equality i41^post48 = i41^0
		
		propagated equality __const_65536^post48 = __const_65536^0
		
		propagated equality fcode5^post48 = fcode5^0
		
		propagated equality offset^post48 = offset^0
		
		propagated equality i45^post48 = i45^0
		
		propagated equality ent8^post48 = ent8^0
		
		propagated equality apsim_incnt^post48 = apsim_incnt^0
		
		propagated equality i21^post48 = i21^0
		
		propagated equality __const_16^post48 = __const_16^0
		
		propagated equality tmp___115^post48 = tmp___115^0
		
		propagated equality ratio^post48 = ratio^0
		
		propagated equality ret_getbyte18^post48 = ret_getbyte18^0
		
		propagated equality in_count^post48 = in_count^0
		
		propagated equality tmp___024^post48 = tmp___024^0
		
		propagated equality i6^post48 = i6^0
		
		propagated equality count^post48 = count^0
		
		propagated equality __const_53^post48 = __const_53^0
		
		propagated equality __const_8388607^post48 = __const_8388607^0
		
		propagated equality __const_8^post48 = __const_8^0
		
		propagated equality ret_getbyte25^post48 = ret_getbyte25^0
		
		propagated equality clear_flg^post48 = clear_flg^0
		
		propagated equality checkpoint^post48 = checkpoint^0
		
		propagated equality hshift11^post48 = hshift11^0
		
		propagated equality hsize^post48 = hsize^0
		
		propagated equality m122^post48 = m122^0
		
		propagated equality c37^post48 = c37^0
		
		propagated equality disp9^post48 = disp9^0
		
		propagated equality block_compress^post48 = block_compress^0
		
		propagated equality seed2^post48 = seed2^0
		
		propagated equality __const_2147483647^post48 = __const_2147483647^0
		
		propagated equality code31^post48 = code31^0
		
		propagated equality n44^post48 = n44^0
		
		propagated equality r_off32^post48 = r_off32^0
		
		propagated equality i3^post48 = i3^0
		
		propagated equality maxbits^post48 = maxbits^0
		
		propagated equality __const_429496^post48 = __const_429496^0
		
		propagated equality free_ent^post48 = free_ent^0
		
		propagated equality c7^post48 = c7^0
		
	Simplified Guard

	Original rule:
	l22 -> l40 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-n40^0+i41^0 <= 0), cost: 1
	New rule:
	l22 -> l40 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-n40^0+i41^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l22 -> l40 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-n40^0+i41^0 <= 0, cost: 1
	New rule:
	l22 -> l40 : 1-n40^0+i41^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l41 -> l38 : __const_10000^0'=__const_10000^post49, __const_16^0'=__const_16^post49, __const_2147483647^0'=__const_2147483647^post49, __const_256^0'=__const_256^post49, __const_257^0'=__const_257^post49, __const_429496^0'=__const_429496^post49, __const_50^0'=__const_50^post49, __const_53^0'=__const_53^post49, __const_65536^0'=__const_65536^post49, __const_8388607^0'=__const_8388607^post49, __const_8^0'=__const_8^post49, __const_9^0'=__const_9^post49, apsim_bound11113^0'=apsim_bound11113^post49, apsim_incnt^0'=apsim_incnt^post49, bits33^0'=bits33^post49, block_compress^0'=block_compress^post49, bytes_out^0'=bytes_out^post49, c37^0'=c37^post49, c7^0'=c7^post49, checkpoint^0'=checkpoint^post49, clear_flg^0'=clear_flg^post49, code31^0'=code31^post49, count^0'=count^post49, disp9^0'=disp9^post49, ent8^0'=ent8^post49, exit_stat^0'=exit_stat^post49, fcode5^0'=fcode5^post49, free_ent^0'=free_ent^post49, hshift11^0'=hshift11^post49, hsize^0'=hsize^post49, hsize___019^0'=hsize___019^post49, hsize___027^0'=hsize___027^post49, hsize_reg10^0'=hsize_reg10^post49, i21^0'=i21^post49, i29^0'=i29^post49, i3^0'=i3^post49, i41^0'=i41^post49, i45^0'=i45^post49, i6^0'=i6^post49, in_count^0'=in_count^post49, incnt^0'=incnt^post49, m122^0'=m122^post49, m130^0'=m130^post49, maxbits^0'=maxbits^post49, maxcode^0'=maxcode^post49, maxmaxcode^0'=maxmaxcode^post49, n40^0'=n40^post49, n44^0'=n44^post49, n_bits^0'=n_bits^post49, offset^0'=offset^post49, out_count^0'=out_count^post49, r_off32^0'=r_off32^post49, rat26^0'=rat26^post49, ratio^0'=ratio^post49, ret_getbyte18^0'=ret_getbyte18^post49, ret_getbyte25^0'=ret_getbyte25^post49, seed2^0'=seed2^post49, tabort4^0'=tabort4^post49, tmp12^0'=tmp12^post49, tmp___014^0'=tmp___014^post49, tmp___017^0'=tmp___017^post49, tmp___024^0'=tmp___024^post49, tmp___115^0'=tmp___115^post49, (free_ent^0-free_ent^post49 == 0 /\ -code31^post49+code31^0 == 0 /\ __const_8388607^0-__const_8388607^post49 == 0 /\ hshift11^0-hshift11^post49 == 0 /\ hsize___027^0-hsize___027^post49 == 0 /\ -fcode5^post49+fcode5^0 == 0 /\ tmp___014^0-tmp___014^post49 == 0 /\ -disp9^post49+disp9^0 == 0 /\ -n44^post49+n44^0 == 0 /\ -ret_getbyte18^post49+ret_getbyte18^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post49 == 0 /\ -ent8^post49+ent8^0 == 0 /\ -maxbits^post49+maxbits^0 == 0 /\ i45^0-i45^post49 == 0 /\ n40^0-n40^post49 == 0 /\ -__const_256^post49+__const_256^0 == 0 /\ maxcode^0-maxcode^post49 == 0 /\ -tabort4^post49+tabort4^0 == 0 /\ -r_off32^post49+r_off32^0 == 0 /\ __const_9^0-__const_9^post49 == 0 /\ rat26^0-rat26^post49 == 0 /\ exit_stat^0-exit_stat^post49 == 0 /\ offset^0 <= 0 /\ -tmp___024^post49+tmp___024^0 == 0 /\ maxmaxcode^0-maxmaxcode^post49 == 0 /\ -block_compress^post49+block_compress^0 == 0 /\ -i29^post49+i29^0 == 0 /\ m130^0-m130^post49 == 0 /\ out_count^0-out_count^post49 == 0 /\ -i3^post49+i3^0 == 0 /\ -i41^post49+i41^0 == 0 /\ seed2^0-seed2^post49 == 0 /\ apsim_incnt^0-apsim_incnt^post49 == 0 /\ ret_getbyte25^0-ret_getbyte25^post49 == 0 /\ -incnt^post49+incnt^0 == 0 /\ count^0-count^post49 == 0 /\ offset^0-offset^post49 == 0 /\ __const_65536^0-__const_65536^post49 == 0 /\ __const_16^0-__const_16^post49 == 0 /\ -__const_429496^post49+__const_429496^0 == 0 /\ bits33^0-bits33^post49 == 0 /\ c37^0-c37^post49 == 0 /\ -__const_10000^post49+__const_10000^0 == 0 /\ -__const_2147483647^post49+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post49 == 0 /\ -n_bits^post49+n_bits^0 == 0 /\ -in_count^post49+in_count^0 == 0 /\ __const_257^0-__const_257^post49 == 0 /\ -__const_50^post49+__const_50^0 == 0 /\ ratio^0-ratio^post49 == 0 /\ checkpoint^0-checkpoint^post49 == 0 /\ i6^0-i6^post49 == 0 /\ -clear_flg^post49+clear_flg^0 == 0 /\ -hsize_reg10^post49+hsize_reg10^0 == 0 /\ m122^0-m122^post49 == 0 /\ -hsize___019^post49+hsize___019^0 == 0 /\ __const_8^0-__const_8^post49 == 0 /\ -tmp___017^post49+tmp___017^0 == 0 /\ -i21^post49+i21^0 == 0 /\ -hsize^post49+hsize^0 == 0 /\ tmp___115^0-tmp___115^post49 == 0 /\ -c7^post49+c7^0 == 0 /\ -bytes_out^post49+bytes_out^0 == 0 /\ __const_53^0-__const_53^post49 == 0), cost: 1
	New rule:
	l41 -> l38 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ offset^0 <= 0), cost: 1
	
		propagated equality free_ent^post49 = free_ent^0
		
		propagated equality code31^post49 = code31^0
		
		propagated equality __const_8388607^post49 = __const_8388607^0
		
		propagated equality hshift11^post49 = hshift11^0
		
		propagated equality hsize___027^post49 = hsize___027^0
		
		propagated equality fcode5^post49 = fcode5^0
		
		propagated equality tmp___014^post49 = tmp___014^0
		
		propagated equality disp9^post49 = disp9^0
		
		propagated equality n44^post49 = n44^0
		
		propagated equality ret_getbyte18^post49 = ret_getbyte18^0
		
		propagated equality apsim_bound11113^post49 = apsim_bound11113^0
		
		propagated equality ent8^post49 = ent8^0
		
		propagated equality maxbits^post49 = maxbits^0
		
		propagated equality i45^post49 = i45^0
		
		propagated equality n40^post49 = n40^0
		
		propagated equality __const_256^post49 = __const_256^0
		
		propagated equality maxcode^post49 = maxcode^0
		
		propagated equality tabort4^post49 = tabort4^0
		
		propagated equality r_off32^post49 = r_off32^0
		
		propagated equality __const_9^post49 = __const_9^0
		
		propagated equality rat26^post49 = rat26^0
		
		propagated equality exit_stat^post49 = exit_stat^0
		
		propagated equality tmp___024^post49 = tmp___024^0
		
		propagated equality maxmaxcode^post49 = maxmaxcode^0
		
		propagated equality block_compress^post49 = block_compress^0
		
		propagated equality i29^post49 = i29^0
		
		propagated equality m130^post49 = m130^0
		
		propagated equality out_count^post49 = out_count^0
		
		propagated equality i3^post49 = i3^0
		
		propagated equality i41^post49 = i41^0
		
		propagated equality seed2^post49 = seed2^0
		
		propagated equality apsim_incnt^post49 = apsim_incnt^0
		
		propagated equality ret_getbyte25^post49 = ret_getbyte25^0
		
		propagated equality incnt^post49 = incnt^0
		
		propagated equality count^post49 = count^0
		
		propagated equality offset^post49 = offset^0
		
		propagated equality __const_65536^post49 = __const_65536^0
		
		propagated equality __const_16^post49 = __const_16^0
		
		propagated equality __const_429496^post49 = __const_429496^0
		
		propagated equality bits33^post49 = bits33^0
		
		propagated equality c37^post49 = c37^0
		
		propagated equality __const_10000^post49 = __const_10000^0
		
		propagated equality __const_2147483647^post49 = __const_2147483647^0
		
		propagated equality tmp12^post49 = tmp12^0
		
		propagated equality n_bits^post49 = n_bits^0
		
		propagated equality in_count^post49 = in_count^0
		
		propagated equality __const_257^post49 = __const_257^0
		
		propagated equality __const_50^post49 = __const_50^0
		
		propagated equality ratio^post49 = ratio^0
		
		propagated equality checkpoint^post49 = checkpoint^0
		
		propagated equality i6^post49 = i6^0
		
		propagated equality clear_flg^post49 = clear_flg^0
		
		propagated equality hsize_reg10^post49 = hsize_reg10^0
		
		propagated equality m122^post49 = m122^0
		
		propagated equality hsize___019^post49 = hsize___019^0
		
		propagated equality __const_8^post49 = __const_8^0
		
		propagated equality tmp___017^post49 = tmp___017^0
		
		propagated equality i21^post49 = i21^0
		
		propagated equality hsize^post49 = hsize^0
		
		propagated equality tmp___115^post49 = tmp___115^0
		
		propagated equality c7^post49 = c7^0
		
		propagated equality bytes_out^post49 = bytes_out^0
		
		propagated equality __const_53^post49 = __const_53^0
		
	Simplified Guard

	Original rule:
	l41 -> l38 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ offset^0 <= 0), cost: 1
	New rule:
	l41 -> l38 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, offset^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l41 -> l38 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, offset^0 <= 0, cost: 1
	New rule:
	l41 -> l38 : offset^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l41 -> l21 : __const_10000^0'=__const_10000^post50, __const_16^0'=__const_16^post50, __const_2147483647^0'=__const_2147483647^post50, __const_256^0'=__const_256^post50, __const_257^0'=__const_257^post50, __const_429496^0'=__const_429496^post50, __const_50^0'=__const_50^post50, __const_53^0'=__const_53^post50, __const_65536^0'=__const_65536^post50, __const_8388607^0'=__const_8388607^post50, __const_8^0'=__const_8^post50, __const_9^0'=__const_9^post50, apsim_bound11113^0'=apsim_bound11113^post50, apsim_incnt^0'=apsim_incnt^post50, bits33^0'=bits33^post50, block_compress^0'=block_compress^post50, bytes_out^0'=bytes_out^post50, c37^0'=c37^post50, c7^0'=c7^post50, checkpoint^0'=checkpoint^post50, clear_flg^0'=clear_flg^post50, code31^0'=code31^post50, count^0'=count^post50, disp9^0'=disp9^post50, ent8^0'=ent8^post50, exit_stat^0'=exit_stat^post50, fcode5^0'=fcode5^post50, free_ent^0'=free_ent^post50, hshift11^0'=hshift11^post50, hsize^0'=hsize^post50, hsize___019^0'=hsize___019^post50, hsize___027^0'=hsize___027^post50, hsize_reg10^0'=hsize_reg10^post50, i21^0'=i21^post50, i29^0'=i29^post50, i3^0'=i3^post50, i41^0'=i41^post50, i45^0'=i45^post50, i6^0'=i6^post50, in_count^0'=in_count^post50, incnt^0'=incnt^post50, m122^0'=m122^post50, m130^0'=m130^post50, maxbits^0'=maxbits^post50, maxcode^0'=maxcode^post50, maxmaxcode^0'=maxmaxcode^post50, n40^0'=n40^post50, n44^0'=n44^post50, n_bits^0'=n_bits^post50, offset^0'=offset^post50, out_count^0'=out_count^post50, r_off32^0'=r_off32^post50, rat26^0'=rat26^post50, ratio^0'=ratio^post50, ret_getbyte18^0'=ret_getbyte18^post50, ret_getbyte25^0'=ret_getbyte25^post50, seed2^0'=seed2^post50, tabort4^0'=tabort4^post50, tmp12^0'=tmp12^post50, tmp___014^0'=tmp___014^post50, tmp___017^0'=tmp___017^post50, tmp___024^0'=tmp___024^post50, tmp___115^0'=tmp___115^post50, (-__const_65536^post50+__const_65536^0 == 0 /\ -block_compress^post50+block_compress^0 == 0 /\ -clear_flg^post50+clear_flg^0 == 0 /\ -hsize___019^post50+hsize___019^0 == 0 /\ -__const_429496^post50+__const_429496^0 == 0 /\ -c7^post50+c7^0 == 0 /\ -maxbits^post50+maxbits^0 == 0 /\ -m130^post50+m130^0 == 0 /\ __const_8388607^0-__const_8388607^post50 == 0 /\ -i45^post50+i45^0 == 0 /\ -maxmaxcode^post50+maxmaxcode^0 == 0 /\ -i21^post50+i21^0 == 0 /\ __const_50^0-__const_50^post50 == 0 /\ hshift11^0-hshift11^post50 == 0 /\ n44^0-n44^post50 == 0 /\ -incnt^post50+incnt^0 == 0 /\ i41^post50 == 0 /\ apsim_bound11113^0-apsim_bound11113^post50 == 0 /\ hsize^0-hsize^post50 == 0 /\ -ret_getbyte18^post50+ret_getbyte18^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post50 == 0 /\ __const_9^0-__const_9^post50 == 0 /\ __const_16^0-__const_16^post50 == 0 /\ -__const_10000^post50+__const_10000^0 == 0 /\ tmp___115^0-tmp___115^post50 == 0 /\ rat26^0-rat26^post50 == 0 /\ -in_count^post50+in_count^0 == 0 /\ -__const_8^post50+__const_8^0 == 0 /\ -__const_2147483647^post50+__const_2147483647^0 == 0 /\ bytes_out^0-bytes_out^post50 == 0 /\ -seed2^post50+seed2^0 == 0 /\ bits33^0-bits33^post50 == 0 /\ -tmp___014^post50+tmp___014^0 == 0 /\ -fcode5^post50+fcode5^0 == 0 /\ -disp9^post50+disp9^0 == 0 /\ -free_ent^post50+free_ent^0 == 0 /\ -ent8^post50+ent8^0 == 0 /\ -tabort4^post50+tabort4^0 == 0 /\ -hsize_reg10^post50+hsize_reg10^0 == 0 /\ i6^0-i6^post50 == 0 /\ c37^0-c37^post50 == 0 /\ -n_bits^post50+n_bits^0 == 0 /\ __const_257^0-__const_257^post50 == 0 /\ apsim_incnt^0-apsim_incnt^post50 == 0 /\ out_count^0-out_count^post50 == 0 /\ tmp___017^0-tmp___017^post50 == 0 /\ n40^post50-n_bits^0 == 0 /\ m122^0-m122^post50 == 0 /\ -code31^post50+code31^0 == 0 /\ maxcode^0-maxcode^post50 == 0 /\ exit_stat^0-exit_stat^post50 == 0 /\ -r_off32^post50+r_off32^0 == 0 /\ count^0-count^post50 == 0 /\ 1-offset^0 <= 0 /\ -tmp___024^post50+tmp___024^0 == 0 /\ -ratio^post50+ratio^0 == 0 /\ i3^0-i3^post50 == 0 /\ offset^0-offset^post50 == 0 /\ hsize___027^0-hsize___027^post50 == 0 /\ __const_53^0-__const_53^post50 == 0 /\ -i29^post50+i29^0 == 0 /\ tmp12^0-tmp12^post50 == 0 /\ -__const_256^post50+__const_256^0 == 0 /\ checkpoint^0-checkpoint^post50 == 0), cost: 1
	New rule:
	l41 -> l21 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n_bits^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-offset^0 <= 0), cost: 1
	
		propagated equality __const_65536^post50 = __const_65536^0
		
		propagated equality block_compress^post50 = block_compress^0
		
		propagated equality clear_flg^post50 = clear_flg^0
		
		propagated equality hsize___019^post50 = hsize___019^0
		
		propagated equality __const_429496^post50 = __const_429496^0
		
		propagated equality c7^post50 = c7^0
		
		propagated equality maxbits^post50 = maxbits^0
		
		propagated equality m130^post50 = m130^0
		
		propagated equality __const_8388607^post50 = __const_8388607^0
		
		propagated equality i45^post50 = i45^0
		
		propagated equality maxmaxcode^post50 = maxmaxcode^0
		
		propagated equality i21^post50 = i21^0
		
		propagated equality __const_50^post50 = __const_50^0
		
		propagated equality hshift11^post50 = hshift11^0
		
		propagated equality n44^post50 = n44^0
		
		propagated equality incnt^post50 = incnt^0
		
		propagated equality i41^post50 = 0
		
		propagated equality apsim_bound11113^post50 = apsim_bound11113^0
		
		propagated equality hsize^post50 = hsize^0
		
		propagated equality ret_getbyte18^post50 = ret_getbyte18^0
		
		propagated equality ret_getbyte25^post50 = ret_getbyte25^0
		
		propagated equality __const_9^post50 = __const_9^0
		
		propagated equality __const_16^post50 = __const_16^0
		
		propagated equality __const_10000^post50 = __const_10000^0
		
		propagated equality tmp___115^post50 = tmp___115^0
		
		propagated equality rat26^post50 = rat26^0
		
		propagated equality in_count^post50 = in_count^0
		
		propagated equality __const_8^post50 = __const_8^0
		
		propagated equality __const_2147483647^post50 = __const_2147483647^0
		
		propagated equality bytes_out^post50 = bytes_out^0
		
		propagated equality seed2^post50 = seed2^0
		
		propagated equality bits33^post50 = bits33^0
		
		propagated equality tmp___014^post50 = tmp___014^0
		
		propagated equality fcode5^post50 = fcode5^0
		
		propagated equality disp9^post50 = disp9^0
		
		propagated equality free_ent^post50 = free_ent^0
		
		propagated equality ent8^post50 = ent8^0
		
		propagated equality tabort4^post50 = tabort4^0
		
		propagated equality hsize_reg10^post50 = hsize_reg10^0
		
		propagated equality i6^post50 = i6^0
		
		propagated equality c37^post50 = c37^0
		
		propagated equality n_bits^post50 = n_bits^0
		
		propagated equality __const_257^post50 = __const_257^0
		
		propagated equality apsim_incnt^post50 = apsim_incnt^0
		
		propagated equality out_count^post50 = out_count^0
		
		propagated equality tmp___017^post50 = tmp___017^0
		
		propagated equality n40^post50 = n_bits^0
		
		propagated equality m122^post50 = m122^0
		
		propagated equality code31^post50 = code31^0
		
		propagated equality maxcode^post50 = maxcode^0
		
		propagated equality exit_stat^post50 = exit_stat^0
		
		propagated equality r_off32^post50 = r_off32^0
		
		propagated equality count^post50 = count^0
		
		propagated equality tmp___024^post50 = tmp___024^0
		
		propagated equality ratio^post50 = ratio^0
		
		propagated equality i3^post50 = i3^0
		
		propagated equality offset^post50 = offset^0
		
		propagated equality hsize___027^post50 = hsize___027^0
		
		propagated equality __const_53^post50 = __const_53^0
		
		propagated equality i29^post50 = i29^0
		
		propagated equality tmp12^post50 = tmp12^0
		
		propagated equality __const_256^post50 = __const_256^0
		
		propagated equality checkpoint^post50 = checkpoint^0
		
	Simplified Guard

	Original rule:
	l41 -> l21 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n_bits^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-offset^0 <= 0), cost: 1
	New rule:
	l41 -> l21 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n_bits^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-offset^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l41 -> l21 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n_bits^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-offset^0 <= 0, cost: 1
	New rule:
	l41 -> l21 : i41^0'=0, n40^0'=n_bits^0, 1-offset^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l42 -> l27 : __const_10000^0'=__const_10000^post51, __const_16^0'=__const_16^post51, __const_2147483647^0'=__const_2147483647^post51, __const_256^0'=__const_256^post51, __const_257^0'=__const_257^post51, __const_429496^0'=__const_429496^post51, __const_50^0'=__const_50^post51, __const_53^0'=__const_53^post51, __const_65536^0'=__const_65536^post51, __const_8388607^0'=__const_8388607^post51, __const_8^0'=__const_8^post51, __const_9^0'=__const_9^post51, apsim_bound11113^0'=apsim_bound11113^post51, apsim_incnt^0'=apsim_incnt^post51, bits33^0'=bits33^post51, block_compress^0'=block_compress^post51, bytes_out^0'=bytes_out^post51, c37^0'=c37^post51, c7^0'=c7^post51, checkpoint^0'=checkpoint^post51, clear_flg^0'=clear_flg^post51, code31^0'=code31^post51, count^0'=count^post51, disp9^0'=disp9^post51, ent8^0'=ent8^post51, exit_stat^0'=exit_stat^post51, fcode5^0'=fcode5^post51, free_ent^0'=free_ent^post51, hshift11^0'=hshift11^post51, hsize^0'=hsize^post51, hsize___019^0'=hsize___019^post51, hsize___027^0'=hsize___027^post51, hsize_reg10^0'=hsize_reg10^post51, i21^0'=i21^post51, i29^0'=i29^post51, i3^0'=i3^post51, i41^0'=i41^post51, i45^0'=i45^post51, i6^0'=i6^post51, in_count^0'=in_count^post51, incnt^0'=incnt^post51, m122^0'=m122^post51, m130^0'=m130^post51, maxbits^0'=maxbits^post51, maxcode^0'=maxcode^post51, maxmaxcode^0'=maxmaxcode^post51, n40^0'=n40^post51, n44^0'=n44^post51, n_bits^0'=n_bits^post51, offset^0'=offset^post51, out_count^0'=out_count^post51, r_off32^0'=r_off32^post51, rat26^0'=rat26^post51, ratio^0'=ratio^post51, ret_getbyte18^0'=ret_getbyte18^post51, ret_getbyte25^0'=ret_getbyte25^post51, seed2^0'=seed2^post51, tabort4^0'=tabort4^post51, tmp12^0'=tmp12^post51, tmp___014^0'=tmp___014^post51, tmp___017^0'=tmp___017^post51, tmp___024^0'=tmp___024^post51, tmp___115^0'=tmp___115^post51, (tmp___014^0-tmp___014^post51 == 0 /\ -r_off32^post51+r_off32^0 == 0 /\ -tabort4^post51+tabort4^0 == 0 /\ __const_16^0-__const_16^post51 == 0 /\ __const_50^0-__const_50^post51 == 0 /\ -__const_2147483647^post51+__const_2147483647^0 == 0 /\ -n_bits^post51+n_bits^0 == 0 /\ __const_53^0-__const_53^post51 == 0 /\ bytes_out^0-bytes_out^post51 == 0 /\ tmp___115^0-tmp___115^post51 == 0 /\ rat26^0-rat26^post51 == 0 /\ count^0-count^post51 == 0 /\ -__const_8^post51+__const_8^0 == 0 /\ tmp12^0-tmp12^post51 == 0 /\ -__const_10000^post51+__const_10000^0 == 0 /\ -block_compress^post51+block_compress^0 == 0 /\ -tmp___017^post51+tmp___017^0 == 0 /\ -tmp___024^post51+tmp___024^0 == 0 /\ -hsize^post51+hsize^0 == 0 /\ __const_256^0-__const_256^post51 == 0 /\ -incnt^post51+incnt^0 == 0 /\ m122^0-m122^post51 == 0 /\ hshift11^0-hshift11^post51 == 0 /\ -apsim_incnt^post51+apsim_incnt^0 == 0 /\ c37^0-c37^post51 == 0 /\ out_count^0-out_count^post51 == 0 /\ -ent8^post51+ent8^0 == 0 /\ -__const_65536^post51+__const_65536^0 == 0 /\ -i29^post51+i29^0 == 0 /\ -n40^post51+n40^0 == 0 /\ -m130^post51+m130^0 == 0 /\ -i41^post51+i41^0 == 0 /\ offset^0-offset^post51 == 0 /\ exit_stat^0-exit_stat^post51 == 0 /\ fcode5^0-fcode5^post51 == 0 /\ apsim_bound11113^0-apsim_bound11113^post51 == 0 /\ maxcode^0-maxcode^post51 == 0 /\ -in_count^post51+in_count^0 == 0 /\ -__const_9^post51+__const_9^0 == 0 /\ -i21^post51+i21^0 == 0 /\ i3^0-i3^post51 == 0 /\ __const_257^0-__const_257^post51 == 0 /\ -__const_8388607^post51+__const_8388607^0 == 0 /\ -c7^post51+c7^0 == 0 /\ -clear_flg^post51+clear_flg^0 == 0 /\ checkpoint^0-checkpoint^post51 == 0 /\ ret_getbyte25^0-ret_getbyte25^post51 == 0 /\ maxmaxcode^0-maxmaxcode^post51 == 0 /\ hsize___027^0-hsize___027^post51 == 0 /\ i6^0-i6^post51 == 0 /\ -ret_getbyte18^post51+ret_getbyte18^0 == 0 /\ -hsize___019^post51+hsize___019^0 == 0 /\ n44^0-n44^post51 == 0 /\ bits33^0-bits33^post51 == 0 /\ -disp9^post51+disp9^0 == 0 /\ -code31^post51+code31^0 == 0 /\ -__const_429496^post51+__const_429496^0 == 0 /\ -i45^post51+i45^0 == 0 /\ seed2^0-seed2^post51 == 0 /\ ratio^0-ratio^post51 == 0 /\ clear_flg^0 <= 0 /\ hsize_reg10^0-hsize_reg10^post51 == 0 /\ -maxbits^post51+maxbits^0 == 0 /\ -free_ent^post51+free_ent^0 == 0), cost: 1
	New rule:
	l42 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ clear_flg^0 <= 0), cost: 1
	
		propagated equality tmp___014^post51 = tmp___014^0
		
		propagated equality r_off32^post51 = r_off32^0
		
		propagated equality tabort4^post51 = tabort4^0
		
		propagated equality __const_16^post51 = __const_16^0
		
		propagated equality __const_50^post51 = __const_50^0
		
		propagated equality __const_2147483647^post51 = __const_2147483647^0
		
		propagated equality n_bits^post51 = n_bits^0
		
		propagated equality __const_53^post51 = __const_53^0
		
		propagated equality bytes_out^post51 = bytes_out^0
		
		propagated equality tmp___115^post51 = tmp___115^0
		
		propagated equality rat26^post51 = rat26^0
		
		propagated equality count^post51 = count^0
		
		propagated equality __const_8^post51 = __const_8^0
		
		propagated equality tmp12^post51 = tmp12^0
		
		propagated equality __const_10000^post51 = __const_10000^0
		
		propagated equality block_compress^post51 = block_compress^0
		
		propagated equality tmp___017^post51 = tmp___017^0
		
		propagated equality tmp___024^post51 = tmp___024^0
		
		propagated equality hsize^post51 = hsize^0
		
		propagated equality __const_256^post51 = __const_256^0
		
		propagated equality incnt^post51 = incnt^0
		
		propagated equality m122^post51 = m122^0
		
		propagated equality hshift11^post51 = hshift11^0
		
		propagated equality apsim_incnt^post51 = apsim_incnt^0
		
		propagated equality c37^post51 = c37^0
		
		propagated equality out_count^post51 = out_count^0
		
		propagated equality ent8^post51 = ent8^0
		
		propagated equality __const_65536^post51 = __const_65536^0
		
		propagated equality i29^post51 = i29^0
		
		propagated equality n40^post51 = n40^0
		
		propagated equality m130^post51 = m130^0
		
		propagated equality i41^post51 = i41^0
		
		propagated equality offset^post51 = offset^0
		
		propagated equality exit_stat^post51 = exit_stat^0
		
		propagated equality fcode5^post51 = fcode5^0
		
		propagated equality apsim_bound11113^post51 = apsim_bound11113^0
		
		propagated equality maxcode^post51 = maxcode^0
		
		propagated equality in_count^post51 = in_count^0
		
		propagated equality __const_9^post51 = __const_9^0
		
		propagated equality i21^post51 = i21^0
		
		propagated equality i3^post51 = i3^0
		
		propagated equality __const_257^post51 = __const_257^0
		
		propagated equality __const_8388607^post51 = __const_8388607^0
		
		propagated equality c7^post51 = c7^0
		
		propagated equality clear_flg^post51 = clear_flg^0
		
		propagated equality checkpoint^post51 = checkpoint^0
		
		propagated equality ret_getbyte25^post51 = ret_getbyte25^0
		
		propagated equality maxmaxcode^post51 = maxmaxcode^0
		
		propagated equality hsize___027^post51 = hsize___027^0
		
		propagated equality i6^post51 = i6^0
		
		propagated equality ret_getbyte18^post51 = ret_getbyte18^0
		
		propagated equality hsize___019^post51 = hsize___019^0
		
		propagated equality n44^post51 = n44^0
		
		propagated equality bits33^post51 = bits33^0
		
		propagated equality disp9^post51 = disp9^0
		
		propagated equality code31^post51 = code31^0
		
		propagated equality __const_429496^post51 = __const_429496^0
		
		propagated equality i45^post51 = i45^0
		
		propagated equality seed2^post51 = seed2^0
		
		propagated equality ratio^post51 = ratio^0
		
		propagated equality hsize_reg10^post51 = hsize_reg10^0
		
		propagated equality maxbits^post51 = maxbits^0
		
		propagated equality free_ent^post51 = free_ent^0
		
	Simplified Guard

	Original rule:
	l42 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ clear_flg^0 <= 0), cost: 1
	New rule:
	l42 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, clear_flg^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l42 -> l27 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, clear_flg^0 <= 0, cost: 1
	New rule:
	l42 -> l27 : clear_flg^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l42 -> l41 : __const_10000^0'=__const_10000^post52, __const_16^0'=__const_16^post52, __const_2147483647^0'=__const_2147483647^post52, __const_256^0'=__const_256^post52, __const_257^0'=__const_257^post52, __const_429496^0'=__const_429496^post52, __const_50^0'=__const_50^post52, __const_53^0'=__const_53^post52, __const_65536^0'=__const_65536^post52, __const_8388607^0'=__const_8388607^post52, __const_8^0'=__const_8^post52, __const_9^0'=__const_9^post52, apsim_bound11113^0'=apsim_bound11113^post52, apsim_incnt^0'=apsim_incnt^post52, bits33^0'=bits33^post52, block_compress^0'=block_compress^post52, bytes_out^0'=bytes_out^post52, c37^0'=c37^post52, c7^0'=c7^post52, checkpoint^0'=checkpoint^post52, clear_flg^0'=clear_flg^post52, code31^0'=code31^post52, count^0'=count^post52, disp9^0'=disp9^post52, ent8^0'=ent8^post52, exit_stat^0'=exit_stat^post52, fcode5^0'=fcode5^post52, free_ent^0'=free_ent^post52, hshift11^0'=hshift11^post52, hsize^0'=hsize^post52, hsize___019^0'=hsize___019^post52, hsize___027^0'=hsize___027^post52, hsize_reg10^0'=hsize_reg10^post52, i21^0'=i21^post52, i29^0'=i29^post52, i3^0'=i3^post52, i41^0'=i41^post52, i45^0'=i45^post52, i6^0'=i6^post52, in_count^0'=in_count^post52, incnt^0'=incnt^post52, m122^0'=m122^post52, m130^0'=m130^post52, maxbits^0'=maxbits^post52, maxcode^0'=maxcode^post52, maxmaxcode^0'=maxmaxcode^post52, n40^0'=n40^post52, n44^0'=n44^post52, n_bits^0'=n_bits^post52, offset^0'=offset^post52, out_count^0'=out_count^post52, r_off32^0'=r_off32^post52, rat26^0'=rat26^post52, ratio^0'=ratio^post52, ret_getbyte18^0'=ret_getbyte18^post52, ret_getbyte25^0'=ret_getbyte25^post52, seed2^0'=seed2^post52, tabort4^0'=tabort4^post52, tmp12^0'=tmp12^post52, tmp___014^0'=tmp___014^post52, tmp___017^0'=tmp___017^post52, tmp___024^0'=tmp___024^post52, tmp___115^0'=tmp___115^post52, (hshift11^0-hshift11^post52 == 0 /\ -i21^post52+i21^0 == 0 /\ tmp___115^0-tmp___115^post52 == 0 /\ __const_8388607^0-__const_8388607^post52 == 0 /\ -in_count^post52+in_count^0 == 0 /\ -c7^post52+c7^0 == 0 /\ -__const_10000^post52+__const_10000^0 == 0 /\ free_ent^0-free_ent^post52 == 0 /\ -clear_flg^post52+clear_flg^0 == 0 /\ rat26^0-rat26^post52 == 0 /\ -hsize___019^post52+hsize___019^0 == 0 /\ __const_16^0-__const_16^post52 == 0 /\ exit_stat^0-exit_stat^post52 == 0 /\ __const_9^0-__const_9^post52 == 0 /\ maxcode^0-maxcode^post52 == 0 /\ apsim_bound11113^0-apsim_bound11113^post52 == 0 /\ -disp9^post52+disp9^0 == 0 /\ -ret_getbyte18^post52+ret_getbyte18^0 == 0 /\ -__const_429496^post52+__const_429496^0 == 0 /\ -r_off32^post52+r_off32^0 == 0 /\ maxmaxcode^0-maxmaxcode^post52 == 0 /\ -code31^post52+code31^0 == 0 /\ -maxbits^post52+maxbits^0 == 0 /\ -i45^post52+i45^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post52 == 0 /\ m122^0-m122^post52 == 0 /\ c37^0-c37^post52 == 0 /\ out_count^0-out_count^post52 == 0 /\ -tmp___017^post52+tmp___017^0 == 0 /\ -tmp___024^post52+tmp___024^0 == 0 /\ bits33^0-bits33^post52 == 0 /\ -__const_256^post52+__const_256^0 == 0 /\ -__const_8^post52+__const_8^0 == 0 /\ -bytes_out^post52+bytes_out^0 == 0 /\ -block_compress^post52+block_compress^0 == 0 /\ n44^0-n44^post52 == 0 /\ -__const_2147483647^post52+__const_2147483647^0 == 0 /\ -seed2^post52+seed2^0 == 0 /\ offset^0-offset^post52 == 0 /\ n_bits^0-n_bits^post52 == 0 /\ -tabort4^post52+tabort4^0 == 0 /\ apsim_incnt^0-apsim_incnt^post52 == 0 /\ -incnt^post52+incnt^0 == 0 /\ hsize_reg10^0-hsize_reg10^post52 == 0 /\ -ent8^post52+ent8^0 == 0 /\ tmp___014^0-tmp___014^post52 == 0 /\ -hsize^post52+hsize^0 == 0 /\ ratio^0-ratio^post52 == 0 /\ checkpoint^0-checkpoint^post52 == 0 /\ i6^0-i6^post52 == 0 /\ __const_257^0-__const_257^post52 == 0 /\ -__const_50^post52+__const_50^0 == 0 /\ 1-clear_flg^0 <= 0 /\ -__const_65536^post52+__const_65536^0 == 0 /\ i3^0-i3^post52 == 0 /\ count^0-count^post52 == 0 /\ -i29^post52+i29^0 == 0 /\ __const_53^0-__const_53^post52 == 0 /\ -m130^post52+m130^0 == 0 /\ -n40^post52+n40^0 == 0 /\ tmp12^0-tmp12^post52 == 0 /\ hsize___027^0-hsize___027^post52 == 0 /\ -fcode5^post52+fcode5^0 == 0 /\ -i41^post52+i41^0 == 0), cost: 1
	New rule:
	l42 -> l41 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-clear_flg^0 <= 0), cost: 1
	
		propagated equality hshift11^post52 = hshift11^0
		
		propagated equality i21^post52 = i21^0
		
		propagated equality tmp___115^post52 = tmp___115^0
		
		propagated equality __const_8388607^post52 = __const_8388607^0
		
		propagated equality in_count^post52 = in_count^0
		
		propagated equality c7^post52 = c7^0
		
		propagated equality __const_10000^post52 = __const_10000^0
		
		propagated equality free_ent^post52 = free_ent^0
		
		propagated equality clear_flg^post52 = clear_flg^0
		
		propagated equality rat26^post52 = rat26^0
		
		propagated equality hsize___019^post52 = hsize___019^0
		
		propagated equality __const_16^post52 = __const_16^0
		
		propagated equality exit_stat^post52 = exit_stat^0
		
		propagated equality __const_9^post52 = __const_9^0
		
		propagated equality maxcode^post52 = maxcode^0
		
		propagated equality apsim_bound11113^post52 = apsim_bound11113^0
		
		propagated equality disp9^post52 = disp9^0
		
		propagated equality ret_getbyte18^post52 = ret_getbyte18^0
		
		propagated equality __const_429496^post52 = __const_429496^0
		
		propagated equality r_off32^post52 = r_off32^0
		
		propagated equality maxmaxcode^post52 = maxmaxcode^0
		
		propagated equality code31^post52 = code31^0
		
		propagated equality maxbits^post52 = maxbits^0
		
		propagated equality i45^post52 = i45^0
		
		propagated equality ret_getbyte25^post52 = ret_getbyte25^0
		
		propagated equality m122^post52 = m122^0
		
		propagated equality c37^post52 = c37^0
		
		propagated equality out_count^post52 = out_count^0
		
		propagated equality tmp___017^post52 = tmp___017^0
		
		propagated equality tmp___024^post52 = tmp___024^0
		
		propagated equality bits33^post52 = bits33^0
		
		propagated equality __const_256^post52 = __const_256^0
		
		propagated equality __const_8^post52 = __const_8^0
		
		propagated equality bytes_out^post52 = bytes_out^0
		
		propagated equality block_compress^post52 = block_compress^0
		
		propagated equality n44^post52 = n44^0
		
		propagated equality __const_2147483647^post52 = __const_2147483647^0
		
		propagated equality seed2^post52 = seed2^0
		
		propagated equality offset^post52 = offset^0
		
		propagated equality n_bits^post52 = n_bits^0
		
		propagated equality tabort4^post52 = tabort4^0
		
		propagated equality apsim_incnt^post52 = apsim_incnt^0
		
		propagated equality incnt^post52 = incnt^0
		
		propagated equality hsize_reg10^post52 = hsize_reg10^0
		
		propagated equality ent8^post52 = ent8^0
		
		propagated equality tmp___014^post52 = tmp___014^0
		
		propagated equality hsize^post52 = hsize^0
		
		propagated equality ratio^post52 = ratio^0
		
		propagated equality checkpoint^post52 = checkpoint^0
		
		propagated equality i6^post52 = i6^0
		
		propagated equality __const_257^post52 = __const_257^0
		
		propagated equality __const_50^post52 = __const_50^0
		
		propagated equality __const_65536^post52 = __const_65536^0
		
		propagated equality i3^post52 = i3^0
		
		propagated equality count^post52 = count^0
		
		propagated equality i29^post52 = i29^0
		
		propagated equality __const_53^post52 = __const_53^0
		
		propagated equality m130^post52 = m130^0
		
		propagated equality n40^post52 = n40^0
		
		propagated equality tmp12^post52 = tmp12^0
		
		propagated equality hsize___027^post52 = hsize___027^0
		
		propagated equality fcode5^post52 = fcode5^0
		
		propagated equality i41^post52 = i41^0
		
	Simplified Guard

	Original rule:
	l42 -> l41 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-clear_flg^0 <= 0), cost: 1
	New rule:
	l42 -> l41 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-clear_flg^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l42 -> l41 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-clear_flg^0 <= 0, cost: 1
	New rule:
	l42 -> l41 : 1-clear_flg^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l43 -> l42 : __const_10000^0'=__const_10000^post53, __const_16^0'=__const_16^post53, __const_2147483647^0'=__const_2147483647^post53, __const_256^0'=__const_256^post53, __const_257^0'=__const_257^post53, __const_429496^0'=__const_429496^post53, __const_50^0'=__const_50^post53, __const_53^0'=__const_53^post53, __const_65536^0'=__const_65536^post53, __const_8388607^0'=__const_8388607^post53, __const_8^0'=__const_8^post53, __const_9^0'=__const_9^post53, apsim_bound11113^0'=apsim_bound11113^post53, apsim_incnt^0'=apsim_incnt^post53, bits33^0'=bits33^post53, block_compress^0'=block_compress^post53, bytes_out^0'=bytes_out^post53, c37^0'=c37^post53, c7^0'=c7^post53, checkpoint^0'=checkpoint^post53, clear_flg^0'=clear_flg^post53, code31^0'=code31^post53, count^0'=count^post53, disp9^0'=disp9^post53, ent8^0'=ent8^post53, exit_stat^0'=exit_stat^post53, fcode5^0'=fcode5^post53, free_ent^0'=free_ent^post53, hshift11^0'=hshift11^post53, hsize^0'=hsize^post53, hsize___019^0'=hsize___019^post53, hsize___027^0'=hsize___027^post53, hsize_reg10^0'=hsize_reg10^post53, i21^0'=i21^post53, i29^0'=i29^post53, i3^0'=i3^post53, i41^0'=i41^post53, i45^0'=i45^post53, i6^0'=i6^post53, in_count^0'=in_count^post53, incnt^0'=incnt^post53, m122^0'=m122^post53, m130^0'=m130^post53, maxbits^0'=maxbits^post53, maxcode^0'=maxcode^post53, maxmaxcode^0'=maxmaxcode^post53, n40^0'=n40^post53, n44^0'=n44^post53, n_bits^0'=n_bits^post53, offset^0'=offset^post53, out_count^0'=out_count^post53, r_off32^0'=r_off32^post53, rat26^0'=rat26^post53, ratio^0'=ratio^post53, ret_getbyte18^0'=ret_getbyte18^post53, ret_getbyte25^0'=ret_getbyte25^post53, seed2^0'=seed2^post53, tabort4^0'=tabort4^post53, tmp12^0'=tmp12^post53, tmp___014^0'=tmp___014^post53, tmp___017^0'=tmp___017^post53, tmp___024^0'=tmp___024^post53, tmp___115^0'=tmp___115^post53, (-i29^post53+i29^0 == 0 /\ -__const_8^post53+__const_8^0 == 0 /\ -apsim_incnt^post53+apsim_incnt^0 == 0 /\ -offset^post53+offset^0 == 0 /\ -i41^post53+i41^0 == 0 /\ -incnt^post53+incnt^0 == 0 /\ __const_50^0-__const_50^post53 == 0 /\ -i45^post53+i45^0 == 0 /\ free_ent^0-maxcode^0 <= 0 /\ __const_16^0-__const_16^post53 == 0 /\ __const_53^0-__const_53^post53 == 0 /\ -__const_429496^post53+__const_429496^0 == 0 /\ -m130^post53+m130^0 == 0 /\ -block_compress^post53+block_compress^0 == 0 /\ -in_count^post53+in_count^0 == 0 /\ -__const_2147483647^post53+__const_2147483647^0 == 0 /\ -c7^post53+c7^0 == 0 /\ hshift11^0-hshift11^post53 == 0 /\ -clear_flg^post53+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post53 == 0 /\ -n40^post53+n40^0 == 0 /\ m122^0-m122^post53 == 0 /\ -__const_65536^post53+__const_65536^0 == 0 /\ -seed2^post53+seed2^0 == 0 /\ -hsize^post53+hsize^0 == 0 /\ tmp___115^0-tmp___115^post53 == 0 /\ apsim_bound11113^0-apsim_bound11113^post53 == 0 /\ tmp12^0-tmp12^post53 == 0 /\ maxcode^0-maxcode^post53 == 0 /\ __const_257^0-__const_257^post53 == 0 /\ -__const_8388607^post53+__const_8388607^0 == 0 /\ -code31^post53+code31^0 == 0 /\ rat26^0-rat26^post53 == 0 /\ n_bits^0-n_bits^post53 == 0 /\ checkpoint^0-checkpoint^post53 == 0 /\ i6^0-i6^post53 == 0 /\ hsize_reg10^0-hsize_reg10^post53 == 0 /\ exit_stat^0-exit_stat^post53 == 0 /\ c37^0-c37^post53 == 0 /\ -fcode5^post53+fcode5^0 == 0 /\ hsize___027^0-hsize___027^post53 == 0 /\ tmp___017^0-tmp___017^post53 == 0 /\ -ratio^post53+ratio^0 == 0 /\ -disp9^post53+disp9^0 == 0 /\ bits33^0-bits33^post53 == 0 /\ maxmaxcode^0-maxmaxcode^post53 == 0 /\ -ent8^post53+ent8^0 == 0 /\ -ret_getbyte18^post53+ret_getbyte18^0 == 0 /\ -maxbits^post53+maxbits^0 == 0 /\ -__const_256^post53+__const_256^0 == 0 /\ -bytes_out^post53+bytes_out^0 == 0 /\ -__const_9^post53+__const_9^0 == 0 /\ out_count^0-out_count^post53 == 0 /\ -tmp___014^post53+tmp___014^0 == 0 /\ -r_off32^post53+r_off32^0 == 0 /\ -tabort4^post53+tabort4^0 == 0 /\ -free_ent^post53+free_ent^0 == 0 /\ count^0-count^post53 == 0 /\ -i21^post53+i21^0 == 0 /\ i3^0-i3^post53 == 0 /\ __const_10000^0-__const_10000^post53 == 0 /\ -tmp___024^post53+tmp___024^0 == 0 /\ -hsize___019^post53+hsize___019^0 == 0 /\ n44^0-n44^post53 == 0), cost: 1
	New rule:
	l43 -> l42 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ free_ent^0-maxcode^0 <= 0), cost: 1
	
		propagated equality i29^post53 = i29^0
		
		propagated equality __const_8^post53 = __const_8^0
		
		propagated equality apsim_incnt^post53 = apsim_incnt^0
		
		propagated equality offset^post53 = offset^0
		
		propagated equality i41^post53 = i41^0
		
		propagated equality incnt^post53 = incnt^0
		
		propagated equality __const_50^post53 = __const_50^0
		
		propagated equality i45^post53 = i45^0
		
		propagated equality __const_16^post53 = __const_16^0
		
		propagated equality __const_53^post53 = __const_53^0
		
		propagated equality __const_429496^post53 = __const_429496^0
		
		propagated equality m130^post53 = m130^0
		
		propagated equality block_compress^post53 = block_compress^0
		
		propagated equality in_count^post53 = in_count^0
		
		propagated equality __const_2147483647^post53 = __const_2147483647^0
		
		propagated equality c7^post53 = c7^0
		
		propagated equality hshift11^post53 = hshift11^0
		
		propagated equality clear_flg^post53 = clear_flg^0
		
		propagated equality ret_getbyte25^post53 = ret_getbyte25^0
		
		propagated equality n40^post53 = n40^0
		
		propagated equality m122^post53 = m122^0
		
		propagated equality __const_65536^post53 = __const_65536^0
		
		propagated equality seed2^post53 = seed2^0
		
		propagated equality hsize^post53 = hsize^0
		
		propagated equality tmp___115^post53 = tmp___115^0
		
		propagated equality apsim_bound11113^post53 = apsim_bound11113^0
		
		propagated equality tmp12^post53 = tmp12^0
		
		propagated equality maxcode^post53 = maxcode^0
		
		propagated equality __const_257^post53 = __const_257^0
		
		propagated equality __const_8388607^post53 = __const_8388607^0
		
		propagated equality code31^post53 = code31^0
		
		propagated equality rat26^post53 = rat26^0
		
		propagated equality n_bits^post53 = n_bits^0
		
		propagated equality checkpoint^post53 = checkpoint^0
		
		propagated equality i6^post53 = i6^0
		
		propagated equality hsize_reg10^post53 = hsize_reg10^0
		
		propagated equality exit_stat^post53 = exit_stat^0
		
		propagated equality c37^post53 = c37^0
		
		propagated equality fcode5^post53 = fcode5^0
		
		propagated equality hsize___027^post53 = hsize___027^0
		
		propagated equality tmp___017^post53 = tmp___017^0
		
		propagated equality ratio^post53 = ratio^0
		
		propagated equality disp9^post53 = disp9^0
		
		propagated equality bits33^post53 = bits33^0
		
		propagated equality maxmaxcode^post53 = maxmaxcode^0
		
		propagated equality ent8^post53 = ent8^0
		
		propagated equality ret_getbyte18^post53 = ret_getbyte18^0
		
		propagated equality maxbits^post53 = maxbits^0
		
		propagated equality __const_256^post53 = __const_256^0
		
		propagated equality bytes_out^post53 = bytes_out^0
		
		propagated equality __const_9^post53 = __const_9^0
		
		propagated equality out_count^post53 = out_count^0
		
		propagated equality tmp___014^post53 = tmp___014^0
		
		propagated equality r_off32^post53 = r_off32^0
		
		propagated equality tabort4^post53 = tabort4^0
		
		propagated equality free_ent^post53 = free_ent^0
		
		propagated equality count^post53 = count^0
		
		propagated equality i21^post53 = i21^0
		
		propagated equality i3^post53 = i3^0
		
		propagated equality __const_10000^post53 = __const_10000^0
		
		propagated equality tmp___024^post53 = tmp___024^0
		
		propagated equality hsize___019^post53 = hsize___019^0
		
		propagated equality n44^post53 = n44^0
		
	Simplified Guard

	Original rule:
	l43 -> l42 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ free_ent^0-maxcode^0 <= 0), cost: 1
	New rule:
	l43 -> l42 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, free_ent^0-maxcode^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l43 -> l42 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, free_ent^0-maxcode^0 <= 0, cost: 1
	New rule:
	l43 -> l42 : free_ent^0-maxcode^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l43 -> l41 : __const_10000^0'=__const_10000^post54, __const_16^0'=__const_16^post54, __const_2147483647^0'=__const_2147483647^post54, __const_256^0'=__const_256^post54, __const_257^0'=__const_257^post54, __const_429496^0'=__const_429496^post54, __const_50^0'=__const_50^post54, __const_53^0'=__const_53^post54, __const_65536^0'=__const_65536^post54, __const_8388607^0'=__const_8388607^post54, __const_8^0'=__const_8^post54, __const_9^0'=__const_9^post54, apsim_bound11113^0'=apsim_bound11113^post54, apsim_incnt^0'=apsim_incnt^post54, bits33^0'=bits33^post54, block_compress^0'=block_compress^post54, bytes_out^0'=bytes_out^post54, c37^0'=c37^post54, c7^0'=c7^post54, checkpoint^0'=checkpoint^post54, clear_flg^0'=clear_flg^post54, code31^0'=code31^post54, count^0'=count^post54, disp9^0'=disp9^post54, ent8^0'=ent8^post54, exit_stat^0'=exit_stat^post54, fcode5^0'=fcode5^post54, free_ent^0'=free_ent^post54, hshift11^0'=hshift11^post54, hsize^0'=hsize^post54, hsize___019^0'=hsize___019^post54, hsize___027^0'=hsize___027^post54, hsize_reg10^0'=hsize_reg10^post54, i21^0'=i21^post54, i29^0'=i29^post54, i3^0'=i3^post54, i41^0'=i41^post54, i45^0'=i45^post54, i6^0'=i6^post54, in_count^0'=in_count^post54, incnt^0'=incnt^post54, m122^0'=m122^post54, m130^0'=m130^post54, maxbits^0'=maxbits^post54, maxcode^0'=maxcode^post54, maxmaxcode^0'=maxmaxcode^post54, n40^0'=n40^post54, n44^0'=n44^post54, n_bits^0'=n_bits^post54, offset^0'=offset^post54, out_count^0'=out_count^post54, r_off32^0'=r_off32^post54, rat26^0'=rat26^post54, ratio^0'=ratio^post54, ret_getbyte18^0'=ret_getbyte18^post54, ret_getbyte25^0'=ret_getbyte25^post54, seed2^0'=seed2^post54, tabort4^0'=tabort4^post54, tmp12^0'=tmp12^post54, tmp___014^0'=tmp___014^post54, tmp___017^0'=tmp___017^post54, tmp___024^0'=tmp___024^post54, tmp___115^0'=tmp___115^post54, (count^0-count^post54 == 0 /\ -ent8^post54+ent8^0 == 0 /\ -seed2^post54+seed2^0 == 0 /\ -free_ent^post54+free_ent^0 == 0 /\ __const_53^0-__const_53^post54 == 0 /\ -block_compress^post54+block_compress^0 == 0 /\ -i21^post54+i21^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post54 == 0 /\ m130^0-m130^post54 == 0 /\ disp9^0-disp9^post54 == 0 /\ -r_off32^post54+r_off32^0 == 0 /\ -code31^post54+code31^0 == 0 /\ -ratio^post54+ratio^0 == 0 /\ -tmp___024^post54+tmp___024^0 == 0 /\ i6^0-i6^post54 == 0 /\ tabort4^0-tabort4^post54 == 0 /\ hsize___027^0-hsize___027^post54 == 0 /\ __const_257^0-__const_257^post54 == 0 /\ -offset^post54+offset^0 == 0 /\ -c7^post54+c7^0 == 0 /\ -apsim_incnt^post54+apsim_incnt^0 == 0 /\ m122^0-m122^post54 == 0 /\ c37^0-c37^post54 == 0 /\ bytes_out^0-bytes_out^post54 == 0 /\ __const_50^0-__const_50^post54 == 0 /\ hshift11^0-hshift11^post54 == 0 /\ -tmp___014^post54+tmp___014^0 == 0 /\ 1-free_ent^0+maxcode^0 <= 0 /\ __const_256^0-__const_256^post54 == 0 /\ maxmaxcode^0-maxmaxcode^post54 == 0 /\ apsim_bound11113^0-apsim_bound11113^post54 == 0 /\ -__const_16^post54+__const_16^0 == 0 /\ -clear_flg^post54+clear_flg^0 == 0 /\ -__const_2147483647^post54+__const_2147483647^0 == 0 /\ i3^0-i3^post54 == 0 /\ -hsize___019^post54+hsize___019^0 == 0 /\ out_count^0-out_count^post54 == 0 /\ -hsize_reg10^post54+hsize_reg10^0 == 0 /\ -__const_429496^post54+__const_429496^0 == 0 /\ -maxbits^post54+maxbits^0 == 0 /\ -n40^post54+n40^0 == 0 /\ -i45^post54+i45^0 == 0 /\ -i41^post54+i41^0 == 0 /\ rat26^0-rat26^post54 == 0 /\ -hsize^post54+hsize^0 == 0 /\ tmp12^0-tmp12^post54 == 0 /\ fcode5^0-fcode5^post54 == 0 /\ -__const_9^post54+__const_9^0 == 0 /\ -__const_65536^post54+__const_65536^0 == 0 /\ checkpoint^0-checkpoint^post54 == 0 /\ -incnt^post54+incnt^0 == 0 /\ __const_10000^0-__const_10000^post54 == 0 /\ bits33^0-bits33^post54 == 0 /\ n44^0-n44^post54 == 0 /\ -tmp___115^post54+tmp___115^0 == 0 /\ -ret_getbyte18^post54+ret_getbyte18^0 == 0 /\ -i29^post54+i29^0 == 0 /\ n_bits^0-n_bits^post54 == 0 /\ tmp___017^0-tmp___017^post54 == 0 /\ -in_count^post54+in_count^0 == 0 /\ exit_stat^0-exit_stat^post54 == 0 /\ -__const_8388607^post54+__const_8388607^0 == 0 /\ maxcode^0-maxcode^post54 == 0 /\ -__const_8^post54+__const_8^0 == 0), cost: 1
	New rule:
	l43 -> l41 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-free_ent^0+maxcode^0 <= 0), cost: 1
	
		propagated equality count^post54 = count^0
		
		propagated equality ent8^post54 = ent8^0
		
		propagated equality seed2^post54 = seed2^0
		
		propagated equality free_ent^post54 = free_ent^0
		
		propagated equality __const_53^post54 = __const_53^0
		
		propagated equality block_compress^post54 = block_compress^0
		
		propagated equality i21^post54 = i21^0
		
		propagated equality ret_getbyte25^post54 = ret_getbyte25^0
		
		propagated equality m130^post54 = m130^0
		
		propagated equality disp9^post54 = disp9^0
		
		propagated equality r_off32^post54 = r_off32^0
		
		propagated equality code31^post54 = code31^0
		
		propagated equality ratio^post54 = ratio^0
		
		propagated equality tmp___024^post54 = tmp___024^0
		
		propagated equality i6^post54 = i6^0
		
		propagated equality tabort4^post54 = tabort4^0
		
		propagated equality hsize___027^post54 = hsize___027^0
		
		propagated equality __const_257^post54 = __const_257^0
		
		propagated equality offset^post54 = offset^0
		
		propagated equality c7^post54 = c7^0
		
		propagated equality apsim_incnt^post54 = apsim_incnt^0
		
		propagated equality m122^post54 = m122^0
		
		propagated equality c37^post54 = c37^0
		
		propagated equality bytes_out^post54 = bytes_out^0
		
		propagated equality __const_50^post54 = __const_50^0
		
		propagated equality hshift11^post54 = hshift11^0
		
		propagated equality tmp___014^post54 = tmp___014^0
		
		propagated equality __const_256^post54 = __const_256^0
		
		propagated equality maxmaxcode^post54 = maxmaxcode^0
		
		propagated equality apsim_bound11113^post54 = apsim_bound11113^0
		
		propagated equality __const_16^post54 = __const_16^0
		
		propagated equality clear_flg^post54 = clear_flg^0
		
		propagated equality __const_2147483647^post54 = __const_2147483647^0
		
		propagated equality i3^post54 = i3^0
		
		propagated equality hsize___019^post54 = hsize___019^0
		
		propagated equality out_count^post54 = out_count^0
		
		propagated equality hsize_reg10^post54 = hsize_reg10^0
		
		propagated equality __const_429496^post54 = __const_429496^0
		
		propagated equality maxbits^post54 = maxbits^0
		
		propagated equality n40^post54 = n40^0
		
		propagated equality i45^post54 = i45^0
		
		propagated equality i41^post54 = i41^0
		
		propagated equality rat26^post54 = rat26^0
		
		propagated equality hsize^post54 = hsize^0
		
		propagated equality tmp12^post54 = tmp12^0
		
		propagated equality fcode5^post54 = fcode5^0
		
		propagated equality __const_9^post54 = __const_9^0
		
		propagated equality __const_65536^post54 = __const_65536^0
		
		propagated equality checkpoint^post54 = checkpoint^0
		
		propagated equality incnt^post54 = incnt^0
		
		propagated equality __const_10000^post54 = __const_10000^0
		
		propagated equality bits33^post54 = bits33^0
		
		propagated equality n44^post54 = n44^0
		
		propagated equality tmp___115^post54 = tmp___115^0
		
		propagated equality ret_getbyte18^post54 = ret_getbyte18^0
		
		propagated equality i29^post54 = i29^0
		
		propagated equality n_bits^post54 = n_bits^0
		
		propagated equality tmp___017^post54 = tmp___017^0
		
		propagated equality in_count^post54 = in_count^0
		
		propagated equality exit_stat^post54 = exit_stat^0
		
		propagated equality __const_8388607^post54 = __const_8388607^0
		
		propagated equality maxcode^post54 = maxcode^0
		
		propagated equality __const_8^post54 = __const_8^0
		
	Simplified Guard

	Original rule:
	l43 -> l41 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-free_ent^0+maxcode^0 <= 0), cost: 1
	New rule:
	l43 -> l41 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-free_ent^0+maxcode^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l43 -> l41 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-free_ent^0+maxcode^0 <= 0, cost: 1
	New rule:
	l43 -> l41 : 1-free_ent^0+maxcode^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l44 -> l43 : __const_10000^0'=__const_10000^post55, __const_16^0'=__const_16^post55, __const_2147483647^0'=__const_2147483647^post55, __const_256^0'=__const_256^post55, __const_257^0'=__const_257^post55, __const_429496^0'=__const_429496^post55, __const_50^0'=__const_50^post55, __const_53^0'=__const_53^post55, __const_65536^0'=__const_65536^post55, __const_8388607^0'=__const_8388607^post55, __const_8^0'=__const_8^post55, __const_9^0'=__const_9^post55, apsim_bound11113^0'=apsim_bound11113^post55, apsim_incnt^0'=apsim_incnt^post55, bits33^0'=bits33^post55, block_compress^0'=block_compress^post55, bytes_out^0'=bytes_out^post55, c37^0'=c37^post55, c7^0'=c7^post55, checkpoint^0'=checkpoint^post55, clear_flg^0'=clear_flg^post55, code31^0'=code31^post55, count^0'=count^post55, disp9^0'=disp9^post55, ent8^0'=ent8^post55, exit_stat^0'=exit_stat^post55, fcode5^0'=fcode5^post55, free_ent^0'=free_ent^post55, hshift11^0'=hshift11^post55, hsize^0'=hsize^post55, hsize___019^0'=hsize___019^post55, hsize___027^0'=hsize___027^post55, hsize_reg10^0'=hsize_reg10^post55, i21^0'=i21^post55, i29^0'=i29^post55, i3^0'=i3^post55, i41^0'=i41^post55, i45^0'=i45^post55, i6^0'=i6^post55, in_count^0'=in_count^post55, incnt^0'=incnt^post55, m122^0'=m122^post55, m130^0'=m130^post55, maxbits^0'=maxbits^post55, maxcode^0'=maxcode^post55, maxmaxcode^0'=maxmaxcode^post55, n40^0'=n40^post55, n44^0'=n44^post55, n_bits^0'=n_bits^post55, offset^0'=offset^post55, out_count^0'=out_count^post55, r_off32^0'=r_off32^post55, rat26^0'=rat26^post55, ratio^0'=ratio^post55, ret_getbyte18^0'=ret_getbyte18^post55, ret_getbyte25^0'=ret_getbyte25^post55, seed2^0'=seed2^post55, tabort4^0'=tabort4^post55, tmp12^0'=tmp12^post55, tmp___014^0'=tmp___014^post55, tmp___017^0'=tmp___017^post55, tmp___024^0'=tmp___024^post55, tmp___115^0'=tmp___115^post55, (m122^0-m122^post55 == 0 /\ -ratio^post55+ratio^0 == 0 /\ -n40^post55+n40^0 == 0 /\ offset^post55 == 0 /\ n44^0-n44^post55 == 0 /\ -apsim_bound11113^post55+apsim_bound11113^0 == 0 /\ -__const_9^post55+__const_9^0 == 0 /\ m130^0-m130^post55 == 0 /\ bytes_out^0-bytes_out^post55 == 0 /\ -__const_8388607^post55+__const_8388607^0 == 0 /\ -__const_16^post55+__const_16^0 == 0 /\ -__const_2147483647^post55+__const_2147483647^0 == 0 /\ i3^0-i3^post55 == 0 /\ i21^0-i21^post55 == 0 /\ apsim_incnt^0-apsim_incnt^post55 == 0 /\ -hsize_reg10^post55+hsize_reg10^0 == 0 /\ -n_bits^post55+n_bits^0 == 0 /\ in_count^0-in_count^post55 == 0 /\ -tmp___014^post55+tmp___014^0 == 0 /\ -ret_getbyte25^post55+ret_getbyte25^0 == 0 /\ clear_flg^0-clear_flg^post55 == 0 /\ -bits33^post55+bits33^0 == 0 /\ -hsize___019^post55+hsize___019^0 == 0 /\ __const_50^0-__const_50^post55 == 0 /\ -i45^post55+i45^0 == 0 /\ c37^0-c37^post55 == 0 /\ -free_ent^post55+free_ent^0 == 0 /\ -disp9^post55+disp9^0 == 0 /\ -code31^post55+code31^0 == 0 /\ __const_53^0-__const_53^post55 == 0 /\ __const_257^0-__const_257^post55 == 0 /\ count^0-count^post55 == 0 /\ -i29^post55+i29^0 == 0 /\ -__const_429496^post55+__const_429496^0 == 0 /\ -maxbits^post55+maxbits^0 == 0 /\ hsize___027^0-hsize___027^post55 == 0 /\ tmp___017^0-tmp___017^post55 == 0 /\ -tmp___024^post55+tmp___024^0 == 0 /\ i6^0-i6^post55 == 0 /\ -tmp___115^post55+tmp___115^0 == 0 /\ hshift11^0-hshift11^post55 == 0 /\ __const_8^0-__const_8^post55 == 0 /\ __const_10000^0-__const_10000^post55 == 0 /\ -c7^post55+c7^0 == 0 /\ checkpoint^0-checkpoint^post55 == 0 /\ -block_compress^post55+block_compress^0 == 0 /\ r_off32^0-r_off32^post55 == 0 /\ -hsize^post55+hsize^0 == 0 /\ out_count^0-out_count^post55 == 0 /\ -incnt^post55+incnt^0 == 0 /\ -rat26^post55+rat26^0 == 0 /\ exit_stat^0-exit_stat^post55 == 0 /\ tmp12^0-tmp12^post55 == 0 /\ fcode5^0-fcode5^post55 == 0 /\ maxcode^0-maxcode^post55 == 0 /\ -seed2^post55+seed2^0 == 0 /\ __const_256^0-__const_256^post55 == 0 /\ -ent8^post55+ent8^0 == 0 /\ -__const_65536^post55+__const_65536^0 == 0 /\ maxmaxcode^0-maxmaxcode^post55 == 0 /\ tabort4^0-tabort4^post55 == 0 /\ ret_getbyte18^0-ret_getbyte18^post55 == 0 /\ -i41^post55+i41^0 == 0), cost: 1
	New rule:
	l44 -> l43 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality m122^post55 = m122^0
		
		propagated equality ratio^post55 = ratio^0
		
		propagated equality n40^post55 = n40^0
		
		propagated equality offset^post55 = 0
		
		propagated equality n44^post55 = n44^0
		
		propagated equality apsim_bound11113^post55 = apsim_bound11113^0
		
		propagated equality __const_9^post55 = __const_9^0
		
		propagated equality m130^post55 = m130^0
		
		propagated equality bytes_out^post55 = bytes_out^0
		
		propagated equality __const_8388607^post55 = __const_8388607^0
		
		propagated equality __const_16^post55 = __const_16^0
		
		propagated equality __const_2147483647^post55 = __const_2147483647^0
		
		propagated equality i3^post55 = i3^0
		
		propagated equality i21^post55 = i21^0
		
		propagated equality apsim_incnt^post55 = apsim_incnt^0
		
		propagated equality hsize_reg10^post55 = hsize_reg10^0
		
		propagated equality n_bits^post55 = n_bits^0
		
		propagated equality in_count^post55 = in_count^0
		
		propagated equality tmp___014^post55 = tmp___014^0
		
		propagated equality ret_getbyte25^post55 = ret_getbyte25^0
		
		propagated equality clear_flg^post55 = clear_flg^0
		
		propagated equality bits33^post55 = bits33^0
		
		propagated equality hsize___019^post55 = hsize___019^0
		
		propagated equality __const_50^post55 = __const_50^0
		
		propagated equality i45^post55 = i45^0
		
		propagated equality c37^post55 = c37^0
		
		propagated equality free_ent^post55 = free_ent^0
		
		propagated equality disp9^post55 = disp9^0
		
		propagated equality code31^post55 = code31^0
		
		propagated equality __const_53^post55 = __const_53^0
		
		propagated equality __const_257^post55 = __const_257^0
		
		propagated equality count^post55 = count^0
		
		propagated equality i29^post55 = i29^0
		
		propagated equality __const_429496^post55 = __const_429496^0
		
		propagated equality maxbits^post55 = maxbits^0
		
		propagated equality hsize___027^post55 = hsize___027^0
		
		propagated equality tmp___017^post55 = tmp___017^0
		
		propagated equality tmp___024^post55 = tmp___024^0
		
		propagated equality i6^post55 = i6^0
		
		propagated equality tmp___115^post55 = tmp___115^0
		
		propagated equality hshift11^post55 = hshift11^0
		
		propagated equality __const_8^post55 = __const_8^0
		
		propagated equality __const_10000^post55 = __const_10000^0
		
		propagated equality c7^post55 = c7^0
		
		propagated equality checkpoint^post55 = checkpoint^0
		
		propagated equality block_compress^post55 = block_compress^0
		
		propagated equality r_off32^post55 = r_off32^0
		
		propagated equality hsize^post55 = hsize^0
		
		propagated equality out_count^post55 = out_count^0
		
		propagated equality incnt^post55 = incnt^0
		
		propagated equality rat26^post55 = rat26^0
		
		propagated equality exit_stat^post55 = exit_stat^0
		
		propagated equality tmp12^post55 = tmp12^0
		
		propagated equality fcode5^post55 = fcode5^0
		
		propagated equality maxcode^post55 = maxcode^0
		
		propagated equality seed2^post55 = seed2^0
		
		propagated equality __const_256^post55 = __const_256^0
		
		propagated equality ent8^post55 = ent8^0
		
		propagated equality __const_65536^post55 = __const_65536^0
		
		propagated equality maxmaxcode^post55 = maxmaxcode^0
		
		propagated equality tabort4^post55 = tabort4^0
		
		propagated equality ret_getbyte18^post55 = ret_getbyte18^0
		
		propagated equality i41^post55 = i41^0
		
	Simplified Guard

	Original rule:
	l44 -> l43 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l44 -> l43 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l44 -> l43 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l44 -> l43 : offset^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l45 -> l19 : __const_10000^0'=__const_10000^post56, __const_16^0'=__const_16^post56, __const_2147483647^0'=__const_2147483647^post56, __const_256^0'=__const_256^post56, __const_257^0'=__const_257^post56, __const_429496^0'=__const_429496^post56, __const_50^0'=__const_50^post56, __const_53^0'=__const_53^post56, __const_65536^0'=__const_65536^post56, __const_8388607^0'=__const_8388607^post56, __const_8^0'=__const_8^post56, __const_9^0'=__const_9^post56, apsim_bound11113^0'=apsim_bound11113^post56, apsim_incnt^0'=apsim_incnt^post56, bits33^0'=bits33^post56, block_compress^0'=block_compress^post56, bytes_out^0'=bytes_out^post56, c37^0'=c37^post56, c7^0'=c7^post56, checkpoint^0'=checkpoint^post56, clear_flg^0'=clear_flg^post56, code31^0'=code31^post56, count^0'=count^post56, disp9^0'=disp9^post56, ent8^0'=ent8^post56, exit_stat^0'=exit_stat^post56, fcode5^0'=fcode5^post56, free_ent^0'=free_ent^post56, hshift11^0'=hshift11^post56, hsize^0'=hsize^post56, hsize___019^0'=hsize___019^post56, hsize___027^0'=hsize___027^post56, hsize_reg10^0'=hsize_reg10^post56, i21^0'=i21^post56, i29^0'=i29^post56, i3^0'=i3^post56, i41^0'=i41^post56, i45^0'=i45^post56, i6^0'=i6^post56, in_count^0'=in_count^post56, incnt^0'=incnt^post56, m122^0'=m122^post56, m130^0'=m130^post56, maxbits^0'=maxbits^post56, maxcode^0'=maxcode^post56, maxmaxcode^0'=maxmaxcode^post56, n40^0'=n40^post56, n44^0'=n44^post56, n_bits^0'=n_bits^post56, offset^0'=offset^post56, out_count^0'=out_count^post56, r_off32^0'=r_off32^post56, rat26^0'=rat26^post56, ratio^0'=ratio^post56, ret_getbyte18^0'=ret_getbyte18^post56, ret_getbyte25^0'=ret_getbyte25^post56, seed2^0'=seed2^post56, tabort4^0'=tabort4^post56, tmp12^0'=tmp12^post56, tmp___014^0'=tmp___014^post56, tmp___017^0'=tmp___017^post56, tmp___024^0'=tmp___024^post56, tmp___115^0'=tmp___115^post56, (-hsize___027^post56+hsize___027^0 == 0 /\ -hsize_reg10^post56+hsize_reg10^0 == 0 /\ -incnt^post56+incnt^0 == 0 /\ __const_8^0-__const_8^post56 == 0 /\ -r_off32^post56+r_off32^0 == 0 /\ -hsize^post56+hsize^0 == 0 /\ -m122^post56+m122^0 == 0 /\ __const_50^0-__const_50^post56 == 0 /\ __const_16^0-__const_16^post56 == 0 /\ -apsim_bound11113^post56+apsim_bound11113^0 == 0 /\ hshift11^0-hshift11^post56 == 0 /\ -__const_9^post56+__const_9^0 == 0 /\ -__const_65536^post56+__const_65536^0 == 0 /\ -__const_429496^post56+__const_429496^0 == 0 /\ -maxcode^post56+maxcode^0 == 0 /\ -i45^post56+i45^0 == 0 /\ rat26^0-rat26^post56 == 0 /\ maxmaxcode^0-maxmaxcode^post56 == 0 /\ code31^0-code31^post56 == 0 /\ ret_getbyte25^0-ret_getbyte25^post56 == 0 /\ -i29^post56+i29^0 == 0 /\ -tmp___115^post56+tmp___115^0 == 0 /\ __const_257^0-__const_257^post56 == 0 /\ free_ent^0-free_ent^post56 == 0 /\ -in_count^post56+in_count^0 == 0 /\ n40^0-n40^post56 == 0 /\ out_count^0-out_count^post56 == 0 /\ -__const_8388607^post56+__const_8388607^0 == 0 /\ -block_compress^post56+block_compress^0 == 0 /\ -__const_256^post56+__const_256^0 == 0 /\ -seed2^post56+seed2^0 == 0 /\ -n_bits^post56+n_bits^0 == 0 /\ offset^0-offset^post56 == 0 /\ i6^0-i6^post56 == 0 /\ bytes_out^0-bytes_out^post56 == 0 /\ -count^post56+count^0 == 0 /\ tmp12^0-tmp12^post56 == 0 /\ -disp9^post56+disp9^0 == 0 /\ maxbits^0-maxbits^post56 == 0 /\ ent8^0-ent8^post56 == 0 /\ -i3^post56+i3^0 == 0 /\ -i41^post56+i41^0 == 0 /\ i21^0-i21^post56 == 0 /\ tmp___017^0-tmp___017^post56 == 0 /\ tabort4^0-tabort4^post56 == 0 /\ exit_stat^0-exit_stat^post56 == 0 /\ -fcode5^post56+fcode5^0 == 0 /\ hsize___019^0-hsize___019^post56 == 0 /\ c37^0-c37^post56 == 0 /\ bits33^0-bits33^post56 == 0 /\ checkpoint^0-checkpoint^post56 == 0 /\ __const_53^0-__const_53^post56 == 0 /\ ret_getbyte18^0-ret_getbyte18^post56 == 0 /\ -tmp___024^post56+tmp___024^0 == 0 /\ apsim_incnt^0-apsim_incnt^post56 == 0 /\ -ratio^post56+ratio^0 == 0 /\ -clear_flg^post56+clear_flg^0 == 0 /\ -tmp___014^post56+tmp___014^0 == 0 /\ -__const_10000^post56+__const_10000^0 == 0 /\ -n44^post56+n44^0 == 0 /\ m130^0-m130^post56 == 0 /\ -__const_2147483647^post56+__const_2147483647^0 == 0 /\ -c7^post56+c7^0 == 0), cost: 1
	New rule:
	l45 -> l19 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality hsize___027^post56 = hsize___027^0
		
		propagated equality hsize_reg10^post56 = hsize_reg10^0
		
		propagated equality incnt^post56 = incnt^0
		
		propagated equality __const_8^post56 = __const_8^0
		
		propagated equality r_off32^post56 = r_off32^0
		
		propagated equality hsize^post56 = hsize^0
		
		propagated equality m122^post56 = m122^0
		
		propagated equality __const_50^post56 = __const_50^0
		
		propagated equality __const_16^post56 = __const_16^0
		
		propagated equality apsim_bound11113^post56 = apsim_bound11113^0
		
		propagated equality hshift11^post56 = hshift11^0
		
		propagated equality __const_9^post56 = __const_9^0
		
		propagated equality __const_65536^post56 = __const_65536^0
		
		propagated equality __const_429496^post56 = __const_429496^0
		
		propagated equality maxcode^post56 = maxcode^0
		
		propagated equality i45^post56 = i45^0
		
		propagated equality rat26^post56 = rat26^0
		
		propagated equality maxmaxcode^post56 = maxmaxcode^0
		
		propagated equality code31^post56 = code31^0
		
		propagated equality ret_getbyte25^post56 = ret_getbyte25^0
		
		propagated equality i29^post56 = i29^0
		
		propagated equality tmp___115^post56 = tmp___115^0
		
		propagated equality __const_257^post56 = __const_257^0
		
		propagated equality free_ent^post56 = free_ent^0
		
		propagated equality in_count^post56 = in_count^0
		
		propagated equality n40^post56 = n40^0
		
		propagated equality out_count^post56 = out_count^0
		
		propagated equality __const_8388607^post56 = __const_8388607^0
		
		propagated equality block_compress^post56 = block_compress^0
		
		propagated equality __const_256^post56 = __const_256^0
		
		propagated equality seed2^post56 = seed2^0
		
		propagated equality n_bits^post56 = n_bits^0
		
		propagated equality offset^post56 = offset^0
		
		propagated equality i6^post56 = i6^0
		
		propagated equality bytes_out^post56 = bytes_out^0
		
		propagated equality count^post56 = count^0
		
		propagated equality tmp12^post56 = tmp12^0
		
		propagated equality disp9^post56 = disp9^0
		
		propagated equality maxbits^post56 = maxbits^0
		
		propagated equality ent8^post56 = ent8^0
		
		propagated equality i3^post56 = i3^0
		
		propagated equality i41^post56 = i41^0
		
		propagated equality i21^post56 = i21^0
		
		propagated equality tmp___017^post56 = tmp___017^0
		
		propagated equality tabort4^post56 = tabort4^0
		
		propagated equality exit_stat^post56 = exit_stat^0
		
		propagated equality fcode5^post56 = fcode5^0
		
		propagated equality hsize___019^post56 = hsize___019^0
		
		propagated equality c37^post56 = c37^0
		
		propagated equality bits33^post56 = bits33^0
		
		propagated equality checkpoint^post56 = checkpoint^0
		
		propagated equality __const_53^post56 = __const_53^0
		
		propagated equality ret_getbyte18^post56 = ret_getbyte18^0
		
		propagated equality tmp___024^post56 = tmp___024^0
		
		propagated equality apsim_incnt^post56 = apsim_incnt^0
		
		propagated equality ratio^post56 = ratio^0
		
		propagated equality clear_flg^post56 = clear_flg^0
		
		propagated equality tmp___014^post56 = tmp___014^0
		
		propagated equality __const_10000^post56 = __const_10000^0
		
		propagated equality n44^post56 = n44^0
		
		propagated equality m130^post56 = m130^0
		
		propagated equality __const_2147483647^post56 = __const_2147483647^0
		
		propagated equality c7^post56 = c7^0
		
	Simplified Guard

	Original rule:
	l45 -> l19 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l45 -> l19 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l45 -> l19 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l45 -> l19 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l45 -> l44 : __const_10000^0'=__const_10000^post57, __const_16^0'=__const_16^post57, __const_2147483647^0'=__const_2147483647^post57, __const_256^0'=__const_256^post57, __const_257^0'=__const_257^post57, __const_429496^0'=__const_429496^post57, __const_50^0'=__const_50^post57, __const_53^0'=__const_53^post57, __const_65536^0'=__const_65536^post57, __const_8388607^0'=__const_8388607^post57, __const_8^0'=__const_8^post57, __const_9^0'=__const_9^post57, apsim_bound11113^0'=apsim_bound11113^post57, apsim_incnt^0'=apsim_incnt^post57, bits33^0'=bits33^post57, block_compress^0'=block_compress^post57, bytes_out^0'=bytes_out^post57, c37^0'=c37^post57, c7^0'=c7^post57, checkpoint^0'=checkpoint^post57, clear_flg^0'=clear_flg^post57, code31^0'=code31^post57, count^0'=count^post57, disp9^0'=disp9^post57, ent8^0'=ent8^post57, exit_stat^0'=exit_stat^post57, fcode5^0'=fcode5^post57, free_ent^0'=free_ent^post57, hshift11^0'=hshift11^post57, hsize^0'=hsize^post57, hsize___019^0'=hsize___019^post57, hsize___027^0'=hsize___027^post57, hsize_reg10^0'=hsize_reg10^post57, i21^0'=i21^post57, i29^0'=i29^post57, i3^0'=i3^post57, i41^0'=i41^post57, i45^0'=i45^post57, i6^0'=i6^post57, in_count^0'=in_count^post57, incnt^0'=incnt^post57, m122^0'=m122^post57, m130^0'=m130^post57, maxbits^0'=maxbits^post57, maxcode^0'=maxcode^post57, maxmaxcode^0'=maxmaxcode^post57, n40^0'=n40^post57, n44^0'=n44^post57, n_bits^0'=n_bits^post57, offset^0'=offset^post57, out_count^0'=out_count^post57, r_off32^0'=r_off32^post57, rat26^0'=rat26^post57, ratio^0'=ratio^post57, ret_getbyte18^0'=ret_getbyte18^post57, ret_getbyte25^0'=ret_getbyte25^post57, seed2^0'=seed2^post57, tabort4^0'=tabort4^post57, tmp12^0'=tmp12^post57, tmp___014^0'=tmp___014^post57, tmp___017^0'=tmp___017^post57, tmp___024^0'=tmp___024^post57, tmp___115^0'=tmp___115^post57, (__const_65536^0-__const_65536^post57 == 0 /\ -clear_flg^post57+clear_flg^0 == 0 /\ -bytes_out^post57+bytes_out^0 == 0 /\ -c7^post57+c7^0 == 0 /\ -block_compress^post57+block_compress^0 == 0 /\ -tmp___014^post57+tmp___014^0 == 0 /\ -i21^post57+i21^0 == 0 /\ __const_53^0-__const_53^post57 == 0 /\ m130^0-m130^post57 == 0 /\ -seed2^post57+seed2^0 == 0 /\ -tmp___024^post57+tmp___024^0 == 0 /\ -tmp___115^post57+tmp___115^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post57 == 0 /\ __const_8^0-__const_8^post57 == 0 /\ i29^0-i29^post57 == 0 /\ -code31^post57+code31^0 == 0 /\ hsize___027^0-hsize___027^post57 == 0 /\ rat26^0-rat26^post57 == 0 /\ -incnt^post57+incnt^0 == 0 /\ -n44^post57+n44^0 == 0 /\ tabort4^0-tabort4^post57 == 0 /\ __const_257^0-__const_257^post57 == 0 /\ -count^post57+count^0 == 0 /\ hsize___019^0-hsize___019^post57 == 0 /\ -fcode5^post57+fcode5^0 == 0 /\ free_ent^0-free_ent^post57 == 0 /\ hshift11^0-hshift11^post57 == 0 /\ -i3^post57+i3^0 == 0 /\ -r_off32^post57+r_off32^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post57 == 0 /\ out_count^0-out_count^post57 == 0 /\ c37^0-c37^post57 == 0 /\ -i6^post57+i6^0 == 0 /\ -maxcode^post57+maxcode^0 == 0 /\ -in_count^post57+in_count^0 == 0 /\ -apsim_bound11113^post57+apsim_bound11113^0 == 0 /\ -__const_50^post57+__const_50^0 == 0 /\ tmp___017^0-tmp___017^post57 == 0 /\ maxmaxcode^0-maxmaxcode^post57 == 0 /\ -__const_256^post57+__const_256^0 == 0 /\ -__const_2147483647^post57+__const_2147483647^0 == 0 /\ i45^0-i45^post57 == 0 /\ tmp12^0-tmp12^post57 == 0 /\ -hsize_reg10^post57+hsize_reg10^0 == 0 /\ offset^0-offset^post57 == 0 /\ -hsize^post57+hsize^0 == 0 /\ __const_429496^0-__const_429496^post57 == 0 /\ n40^0-n40^post57 == 0 /\ -__const_10000^post57+__const_10000^0 == 0 /\ __const_9^0-__const_9^post57 == 0 /\ -m122^post57+m122^0 == 0 /\ maxbits^0-maxbits^post57 == 0 /\ -__const_8388607^post57+__const_8388607^0 == 0 /\ ratio^0-ratio^post57 == 0 /\ __const_16^0-__const_16^post57 == 0 /\ bits33^0-bits33^post57 == 0 /\ -n_bits^post57+n_bits^0 == 0 /\ ent8^0-ent8^post57 == 0 /\ -disp9^post57+disp9^0 == 0 /\ apsim_incnt^0-apsim_incnt^post57 == 0 /\ -exit_stat^post57+exit_stat^0 == 0 /\ checkpoint^0-checkpoint^post57 == 0 /\ -i41^post57+i41^0 == 0), cost: 1
	New rule:
	l45 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality __const_65536^post57 = __const_65536^0
		
		propagated equality clear_flg^post57 = clear_flg^0
		
		propagated equality bytes_out^post57 = bytes_out^0
		
		propagated equality c7^post57 = c7^0
		
		propagated equality block_compress^post57 = block_compress^0
		
		propagated equality tmp___014^post57 = tmp___014^0
		
		propagated equality i21^post57 = i21^0
		
		propagated equality __const_53^post57 = __const_53^0
		
		propagated equality m130^post57 = m130^0
		
		propagated equality seed2^post57 = seed2^0
		
		propagated equality tmp___024^post57 = tmp___024^0
		
		propagated equality tmp___115^post57 = tmp___115^0
		
		propagated equality ret_getbyte25^post57 = ret_getbyte25^0
		
		propagated equality __const_8^post57 = __const_8^0
		
		propagated equality i29^post57 = i29^0
		
		propagated equality code31^post57 = code31^0
		
		propagated equality hsize___027^post57 = hsize___027^0
		
		propagated equality rat26^post57 = rat26^0
		
		propagated equality incnt^post57 = incnt^0
		
		propagated equality n44^post57 = n44^0
		
		propagated equality tabort4^post57 = tabort4^0
		
		propagated equality __const_257^post57 = __const_257^0
		
		propagated equality count^post57 = count^0
		
		propagated equality hsize___019^post57 = hsize___019^0
		
		propagated equality fcode5^post57 = fcode5^0
		
		propagated equality free_ent^post57 = free_ent^0
		
		propagated equality hshift11^post57 = hshift11^0
		
		propagated equality i3^post57 = i3^0
		
		propagated equality r_off32^post57 = r_off32^0
		
		propagated equality ret_getbyte18^post57 = ret_getbyte18^0
		
		propagated equality out_count^post57 = out_count^0
		
		propagated equality c37^post57 = c37^0
		
		propagated equality i6^post57 = i6^0
		
		propagated equality maxcode^post57 = maxcode^0
		
		propagated equality in_count^post57 = in_count^0
		
		propagated equality apsim_bound11113^post57 = apsim_bound11113^0
		
		propagated equality __const_50^post57 = __const_50^0
		
		propagated equality tmp___017^post57 = tmp___017^0
		
		propagated equality maxmaxcode^post57 = maxmaxcode^0
		
		propagated equality __const_256^post57 = __const_256^0
		
		propagated equality __const_2147483647^post57 = __const_2147483647^0
		
		propagated equality i45^post57 = i45^0
		
		propagated equality tmp12^post57 = tmp12^0
		
		propagated equality hsize_reg10^post57 = hsize_reg10^0
		
		propagated equality offset^post57 = offset^0
		
		propagated equality hsize^post57 = hsize^0
		
		propagated equality __const_429496^post57 = __const_429496^0
		
		propagated equality n40^post57 = n40^0
		
		propagated equality __const_10000^post57 = __const_10000^0
		
		propagated equality __const_9^post57 = __const_9^0
		
		propagated equality m122^post57 = m122^0
		
		propagated equality maxbits^post57 = maxbits^0
		
		propagated equality __const_8388607^post57 = __const_8388607^0
		
		propagated equality ratio^post57 = ratio^0
		
		propagated equality __const_16^post57 = __const_16^0
		
		propagated equality bits33^post57 = bits33^0
		
		propagated equality n_bits^post57 = n_bits^0
		
		propagated equality ent8^post57 = ent8^0
		
		propagated equality disp9^post57 = disp9^0
		
		propagated equality apsim_incnt^post57 = apsim_incnt^0
		
		propagated equality exit_stat^post57 = exit_stat^0
		
		propagated equality checkpoint^post57 = checkpoint^0
		
		propagated equality i41^post57 = i41^0
		
	Simplified Guard

	Original rule:
	l45 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l45 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l45 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l45 -> l44 : T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l20 -> l44 : __const_10000^0'=__const_10000^post58, __const_16^0'=__const_16^post58, __const_2147483647^0'=__const_2147483647^post58, __const_256^0'=__const_256^post58, __const_257^0'=__const_257^post58, __const_429496^0'=__const_429496^post58, __const_50^0'=__const_50^post58, __const_53^0'=__const_53^post58, __const_65536^0'=__const_65536^post58, __const_8388607^0'=__const_8388607^post58, __const_8^0'=__const_8^post58, __const_9^0'=__const_9^post58, apsim_bound11113^0'=apsim_bound11113^post58, apsim_incnt^0'=apsim_incnt^post58, bits33^0'=bits33^post58, block_compress^0'=block_compress^post58, bytes_out^0'=bytes_out^post58, c37^0'=c37^post58, c7^0'=c7^post58, checkpoint^0'=checkpoint^post58, clear_flg^0'=clear_flg^post58, code31^0'=code31^post58, count^0'=count^post58, disp9^0'=disp9^post58, ent8^0'=ent8^post58, exit_stat^0'=exit_stat^post58, fcode5^0'=fcode5^post58, free_ent^0'=free_ent^post58, hshift11^0'=hshift11^post58, hsize^0'=hsize^post58, hsize___019^0'=hsize___019^post58, hsize___027^0'=hsize___027^post58, hsize_reg10^0'=hsize_reg10^post58, i21^0'=i21^post58, i29^0'=i29^post58, i3^0'=i3^post58, i41^0'=i41^post58, i45^0'=i45^post58, i6^0'=i6^post58, in_count^0'=in_count^post58, incnt^0'=incnt^post58, m122^0'=m122^post58, m130^0'=m130^post58, maxbits^0'=maxbits^post58, maxcode^0'=maxcode^post58, maxmaxcode^0'=maxmaxcode^post58, n40^0'=n40^post58, n44^0'=n44^post58, n_bits^0'=n_bits^post58, offset^0'=offset^post58, out_count^0'=out_count^post58, r_off32^0'=r_off32^post58, rat26^0'=rat26^post58, ratio^0'=ratio^post58, ret_getbyte18^0'=ret_getbyte18^post58, ret_getbyte25^0'=ret_getbyte25^post58, seed2^0'=seed2^post58, tabort4^0'=tabort4^post58, tmp12^0'=tmp12^post58, tmp___014^0'=tmp___014^post58, tmp___017^0'=tmp___017^post58, tmp___024^0'=tmp___024^post58, tmp___115^0'=tmp___115^post58, (ret_getbyte25^0-ret_getbyte25^post58 == 0 /\ apsim_incnt^0-apsim_incnt^post58 == 0 /\ m130^0-m130^post58 == 0 /\ -i3^post58+i3^0 == 0 /\ -i41^post58+i41^0 == 0 /\ hsize___019^0-hsize___019^post58 == 0 /\ n44^0-n44^post58 == 0 /\ -in_count^post58+in_count^0 == 0 /\ __const_257^0-__const_257^post58 == 0 /\ ent8^0-ent8^post58 == 0 /\ __const_65536^0-__const_65536^post58 == 0 /\ -__const_8388607^post58+__const_8388607^0 == 0 /\ -__const_256^post58+__const_256^0 == 0 /\ i29^0-i29^post58 == 0 /\ bits33^0 <= 0 /\ -__const_50^post58+__const_50^0 == 0 /\ -disp9^post58+disp9^0 == 0 /\ -tabort4^post58+tabort4^0 == 0 /\ tmp12^0-tmp12^post58 == 0 /\ c37^0-c37^post58 == 0 /\ -hsize_reg10^post58+hsize_reg10^0 == 0 /\ -count^post58+count^0 == 0 /\ -exit_stat^post58+exit_stat^0 == 0 /\ -maxbits^post58+maxbits^0 == 0 /\ tmp___014^0-tmp___014^post58 == 0 /\ -__const_10000^post58+__const_10000^0 == 0 /\ -bytes_out^post58+bytes_out^0 == 0 /\ -i21^post58+i21^0 == 0 /\ rat26^0-rat26^post58 == 0 /\ -m122^post58+m122^0 == 0 /\ __const_53^0-__const_53^post58 == 0 /\ hsize___027^0-hsize___027^post58 == 0 /\ __const_8^0-__const_8^post58 == 0 /\ code31^0-code31^post58 == 0 /\ c7^0-c7^post58 == 0 /\ -tmp___017^post58+tmp___017^0 == 0 /\ -tmp___024^post58+tmp___024^0 == 0 /\ -bits33^0 <= 0 /\ tmp___115^0-tmp___115^post58 == 0 /\ i45^0-i45^post58 == 0 /\ hshift11^0-hshift11^post58 == 0 /\ free_ent^0-free_ent^post58 == 0 /\ -r_off32^post58+r_off32^0 == 0 /\ -ratio^post58+ratio^0 == 0 /\ -ret_getbyte18^post58+ret_getbyte18^0 == 0 /\ out_count^0-out_count^post58 == 0 /\ -n_bits^post58+n_bits^0 == 0 /\ -clear_flg^post58+clear_flg^0 == 0 /\ -checkpoint^post58+checkpoint^0 == 0 /\ -seed2^post58+seed2^0 == 0 /\ -fcode5^post58+fcode5^0 == 0 /\ __const_9^0-__const_9^post58 == 0 /\ -i6^post58+i6^0 == 0 /\ __const_2147483647^0-__const_2147483647^post58 == 0 /\ offset^0-offset^post58 == 0 /\ -block_compress^post58+block_compress^0 == 0 /\ -n40^post58+n40^0 == 0 /\ -maxcode^post58+maxcode^0 == 0 /\ maxmaxcode^0-maxmaxcode^post58 == 0 /\ bits33^0-bits33^post58 == 0 /\ -hsize^post58+hsize^0 == 0 /\ __const_429496^0-__const_429496^post58 == 0 /\ -apsim_bound11113^post58+apsim_bound11113^0 == 0 /\ __const_16^0-__const_16^post58 == 0 /\ -incnt^post58+incnt^0 == 0), cost: 1
	New rule:
	l20 -> l44 : __const_10000^0'=__const_10000^post58, __const_16^0'=__const_16^post58, __const_2147483647^0'=__const_2147483647^post58, __const_256^0'=__const_256^post58, __const_257^0'=__const_257^post58, __const_429496^0'=__const_429496^post58, __const_50^0'=__const_50^post58, __const_53^0'=__const_53^post58, __const_65536^0'=__const_65536^post58, __const_8388607^0'=__const_8388607^post58, __const_8^0'=__const_8^post58, __const_9^0'=__const_9^post58, apsim_bound11113^0'=apsim_bound11113^post58, apsim_incnt^0'=apsim_incnt^post58, bits33^0'=bits33^post58, block_compress^0'=block_compress^post58, bytes_out^0'=bytes_out^post58, c37^0'=c37^post58, c7^0'=c7^post58, checkpoint^0'=checkpoint^post58, clear_flg^0'=clear_flg^post58, code31^0'=code31^post58, count^0'=count^post58, disp9^0'=disp9^post58, ent8^0'=ent8^post58, exit_stat^0'=exit_stat^post58, fcode5^0'=fcode5^post58, free_ent^0'=free_ent^post58, hshift11^0'=hshift11^post58, hsize^0'=hsize^post58, hsize___019^0'=hsize___019^post58, hsize___027^0'=hsize___027^post58, hsize_reg10^0'=hsize_reg10^post58, i21^0'=i21^post58, i29^0'=i29^post58, i3^0'=i3^post58, i41^0'=i41^post58, i45^0'=i45^post58, i6^0'=i6^post58, in_count^0'=in_count^post58, incnt^0'=incnt^post58, m122^0'=m122^post58, m130^0'=m130^post58, maxbits^0'=maxbits^post58, maxcode^0'=maxcode^post58, maxmaxcode^0'=maxmaxcode^post58, n40^0'=n40^post58, n44^0'=n44^post58, n_bits^0'=n_bits^post58, offset^0'=offset^post58, out_count^0'=out_count^post58, r_off32^0'=r_off32^post58, rat26^0'=rat26^post58, ratio^0'=ratio^post58, ret_getbyte18^0'=ret_getbyte18^post58, ret_getbyte25^0'=ret_getbyte25^post58, seed2^0'=seed2^post58, tabort4^0'=tabort4^post58, tmp12^0'=tmp12^post58, tmp___014^0'=tmp___014^post58, tmp___017^0'=tmp___017^post58, tmp___024^0'=tmp___024^post58, tmp___115^0'=tmp___115^post58, (ret_getbyte25^0-ret_getbyte25^post58 == 0 /\ apsim_incnt^0-apsim_incnt^post58 == 0 /\ m130^0-m130^post58 == 0 /\ -i3^post58+i3^0 == 0 /\ -i41^post58+i41^0 == 0 /\ hsize___019^0-hsize___019^post58 == 0 /\ n44^0-n44^post58 == 0 /\ -in_count^post58+in_count^0 == 0 /\ __const_257^0-__const_257^post58 == 0 /\ ent8^0-ent8^post58 == 0 /\ __const_65536^0-__const_65536^post58 == 0 /\ -__const_8388607^post58+__const_8388607^0 == 0 /\ -__const_256^post58+__const_256^0 == 0 /\ i29^0-i29^post58 == 0 /\ bits33^0 <= 0 /\ bits33^0 == 0 /\ -__const_50^post58+__const_50^0 == 0 /\ -disp9^post58+disp9^0 == 0 /\ -tabort4^post58+tabort4^0 == 0 /\ tmp12^0-tmp12^post58 == 0 /\ c37^0-c37^post58 == 0 /\ -hsize_reg10^post58+hsize_reg10^0 == 0 /\ -count^post58+count^0 == 0 /\ -exit_stat^post58+exit_stat^0 == 0 /\ -maxbits^post58+maxbits^0 == 0 /\ tmp___014^0-tmp___014^post58 == 0 /\ -__const_10000^post58+__const_10000^0 == 0 /\ -bytes_out^post58+bytes_out^0 == 0 /\ -i21^post58+i21^0 == 0 /\ rat26^0-rat26^post58 == 0 /\ -m122^post58+m122^0 == 0 /\ __const_53^0-__const_53^post58 == 0 /\ hsize___027^0-hsize___027^post58 == 0 /\ __const_8^0-__const_8^post58 == 0 /\ code31^0-code31^post58 == 0 /\ c7^0-c7^post58 == 0 /\ -tmp___017^post58+tmp___017^0 == 0 /\ -tmp___024^post58+tmp___024^0 == 0 /\ -bits33^0 <= 0 /\ tmp___115^0-tmp___115^post58 == 0 /\ i45^0-i45^post58 == 0 /\ hshift11^0-hshift11^post58 == 0 /\ free_ent^0-free_ent^post58 == 0 /\ -r_off32^post58+r_off32^0 == 0 /\ -ratio^post58+ratio^0 == 0 /\ -ret_getbyte18^post58+ret_getbyte18^0 == 0 /\ out_count^0-out_count^post58 == 0 /\ -n_bits^post58+n_bits^0 == 0 /\ -clear_flg^post58+clear_flg^0 == 0 /\ -checkpoint^post58+checkpoint^0 == 0 /\ -seed2^post58+seed2^0 == 0 /\ -fcode5^post58+fcode5^0 == 0 /\ __const_9^0-__const_9^post58 == 0 /\ -i6^post58+i6^0 == 0 /\ __const_2147483647^0-__const_2147483647^post58 == 0 /\ offset^0-offset^post58 == 0 /\ -block_compress^post58+block_compress^0 == 0 /\ -n40^post58+n40^0 == 0 /\ -maxcode^post58+maxcode^0 == 0 /\ maxmaxcode^0-maxmaxcode^post58 == 0 /\ bits33^0-bits33^post58 == 0 /\ -hsize^post58+hsize^0 == 0 /\ __const_429496^0-__const_429496^post58 == 0 /\ -apsim_bound11113^post58+apsim_bound11113^0 == 0 /\ __const_16^0-__const_16^post58 == 0 /\ -incnt^post58+incnt^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l44 : __const_10000^0'=__const_10000^post58, __const_16^0'=__const_16^post58, __const_2147483647^0'=__const_2147483647^post58, __const_256^0'=__const_256^post58, __const_257^0'=__const_257^post58, __const_429496^0'=__const_429496^post58, __const_50^0'=__const_50^post58, __const_53^0'=__const_53^post58, __const_65536^0'=__const_65536^post58, __const_8388607^0'=__const_8388607^post58, __const_8^0'=__const_8^post58, __const_9^0'=__const_9^post58, apsim_bound11113^0'=apsim_bound11113^post58, apsim_incnt^0'=apsim_incnt^post58, bits33^0'=bits33^post58, block_compress^0'=block_compress^post58, bytes_out^0'=bytes_out^post58, c37^0'=c37^post58, c7^0'=c7^post58, checkpoint^0'=checkpoint^post58, clear_flg^0'=clear_flg^post58, code31^0'=code31^post58, count^0'=count^post58, disp9^0'=disp9^post58, ent8^0'=ent8^post58, exit_stat^0'=exit_stat^post58, fcode5^0'=fcode5^post58, free_ent^0'=free_ent^post58, hshift11^0'=hshift11^post58, hsize^0'=hsize^post58, hsize___019^0'=hsize___019^post58, hsize___027^0'=hsize___027^post58, hsize_reg10^0'=hsize_reg10^post58, i21^0'=i21^post58, i29^0'=i29^post58, i3^0'=i3^post58, i41^0'=i41^post58, i45^0'=i45^post58, i6^0'=i6^post58, in_count^0'=in_count^post58, incnt^0'=incnt^post58, m122^0'=m122^post58, m130^0'=m130^post58, maxbits^0'=maxbits^post58, maxcode^0'=maxcode^post58, maxmaxcode^0'=maxmaxcode^post58, n40^0'=n40^post58, n44^0'=n44^post58, n_bits^0'=n_bits^post58, offset^0'=offset^post58, out_count^0'=out_count^post58, r_off32^0'=r_off32^post58, rat26^0'=rat26^post58, ratio^0'=ratio^post58, ret_getbyte18^0'=ret_getbyte18^post58, ret_getbyte25^0'=ret_getbyte25^post58, seed2^0'=seed2^post58, tabort4^0'=tabort4^post58, tmp12^0'=tmp12^post58, tmp___014^0'=tmp___014^post58, tmp___017^0'=tmp___017^post58, tmp___024^0'=tmp___024^post58, tmp___115^0'=tmp___115^post58, (ret_getbyte25^0-ret_getbyte25^post58 == 0 /\ apsim_incnt^0-apsim_incnt^post58 == 0 /\ m130^0-m130^post58 == 0 /\ -i3^post58+i3^0 == 0 /\ -i41^post58+i41^0 == 0 /\ hsize___019^0-hsize___019^post58 == 0 /\ n44^0-n44^post58 == 0 /\ -in_count^post58+in_count^0 == 0 /\ __const_257^0-__const_257^post58 == 0 /\ ent8^0-ent8^post58 == 0 /\ __const_65536^0-__const_65536^post58 == 0 /\ -__const_8388607^post58+__const_8388607^0 == 0 /\ -__const_256^post58+__const_256^0 == 0 /\ i29^0-i29^post58 == 0 /\ bits33^0 <= 0 /\ bits33^0 == 0 /\ -__const_50^post58+__const_50^0 == 0 /\ -disp9^post58+disp9^0 == 0 /\ -tabort4^post58+tabort4^0 == 0 /\ tmp12^0-tmp12^post58 == 0 /\ c37^0-c37^post58 == 0 /\ -hsize_reg10^post58+hsize_reg10^0 == 0 /\ -count^post58+count^0 == 0 /\ -exit_stat^post58+exit_stat^0 == 0 /\ -maxbits^post58+maxbits^0 == 0 /\ tmp___014^0-tmp___014^post58 == 0 /\ -__const_10000^post58+__const_10000^0 == 0 /\ -bytes_out^post58+bytes_out^0 == 0 /\ -i21^post58+i21^0 == 0 /\ rat26^0-rat26^post58 == 0 /\ -m122^post58+m122^0 == 0 /\ __const_53^0-__const_53^post58 == 0 /\ hsize___027^0-hsize___027^post58 == 0 /\ __const_8^0-__const_8^post58 == 0 /\ code31^0-code31^post58 == 0 /\ c7^0-c7^post58 == 0 /\ -tmp___017^post58+tmp___017^0 == 0 /\ -tmp___024^post58+tmp___024^0 == 0 /\ -bits33^0 <= 0 /\ tmp___115^0-tmp___115^post58 == 0 /\ i45^0-i45^post58 == 0 /\ hshift11^0-hshift11^post58 == 0 /\ free_ent^0-free_ent^post58 == 0 /\ -r_off32^post58+r_off32^0 == 0 /\ -ratio^post58+ratio^0 == 0 /\ -ret_getbyte18^post58+ret_getbyte18^0 == 0 /\ out_count^0-out_count^post58 == 0 /\ -n_bits^post58+n_bits^0 == 0 /\ -clear_flg^post58+clear_flg^0 == 0 /\ -checkpoint^post58+checkpoint^0 == 0 /\ -seed2^post58+seed2^0 == 0 /\ -fcode5^post58+fcode5^0 == 0 /\ __const_9^0-__const_9^post58 == 0 /\ -i6^post58+i6^0 == 0 /\ __const_2147483647^0-__const_2147483647^post58 == 0 /\ offset^0-offset^post58 == 0 /\ -block_compress^post58+block_compress^0 == 0 /\ -n40^post58+n40^0 == 0 /\ -maxcode^post58+maxcode^0 == 0 /\ maxmaxcode^0-maxmaxcode^post58 == 0 /\ bits33^0-bits33^post58 == 0 /\ -hsize^post58+hsize^0 == 0 /\ __const_429496^0-__const_429496^post58 == 0 /\ -apsim_bound11113^post58+apsim_bound11113^0 == 0 /\ __const_16^0-__const_16^post58 == 0 /\ -incnt^post58+incnt^0 == 0), cost: 1
	New rule:
	l20 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	
		propagated equality ret_getbyte25^post58 = ret_getbyte25^0
		
		propagated equality apsim_incnt^post58 = apsim_incnt^0
		
		propagated equality m130^post58 = m130^0
		
		propagated equality i3^post58 = i3^0
		
		propagated equality i41^post58 = i41^0
		
		propagated equality hsize___019^post58 = hsize___019^0
		
		propagated equality n44^post58 = n44^0
		
		propagated equality in_count^post58 = in_count^0
		
		propagated equality __const_257^post58 = __const_257^0
		
		propagated equality ent8^post58 = ent8^0
		
		propagated equality __const_65536^post58 = __const_65536^0
		
		propagated equality __const_8388607^post58 = __const_8388607^0
		
		propagated equality __const_256^post58 = __const_256^0
		
		propagated equality i29^post58 = i29^0
		
		propagated equality __const_50^post58 = __const_50^0
		
		propagated equality disp9^post58 = disp9^0
		
		propagated equality tabort4^post58 = tabort4^0
		
		propagated equality tmp12^post58 = tmp12^0
		
		propagated equality c37^post58 = c37^0
		
		propagated equality hsize_reg10^post58 = hsize_reg10^0
		
		propagated equality count^post58 = count^0
		
		propagated equality exit_stat^post58 = exit_stat^0
		
		propagated equality maxbits^post58 = maxbits^0
		
		propagated equality tmp___014^post58 = tmp___014^0
		
		propagated equality __const_10000^post58 = __const_10000^0
		
		propagated equality bytes_out^post58 = bytes_out^0
		
		propagated equality i21^post58 = i21^0
		
		propagated equality rat26^post58 = rat26^0
		
		propagated equality m122^post58 = m122^0
		
		propagated equality __const_53^post58 = __const_53^0
		
		propagated equality hsize___027^post58 = hsize___027^0
		
		propagated equality __const_8^post58 = __const_8^0
		
		propagated equality code31^post58 = code31^0
		
		propagated equality c7^post58 = c7^0
		
		propagated equality tmp___017^post58 = tmp___017^0
		
		propagated equality tmp___024^post58 = tmp___024^0
		
		propagated equality tmp___115^post58 = tmp___115^0
		
		propagated equality i45^post58 = i45^0
		
		propagated equality hshift11^post58 = hshift11^0
		
		propagated equality free_ent^post58 = free_ent^0
		
		propagated equality r_off32^post58 = r_off32^0
		
		propagated equality ratio^post58 = ratio^0
		
		propagated equality ret_getbyte18^post58 = ret_getbyte18^0
		
		propagated equality out_count^post58 = out_count^0
		
		propagated equality n_bits^post58 = n_bits^0
		
		propagated equality clear_flg^post58 = clear_flg^0
		
		propagated equality checkpoint^post58 = checkpoint^0
		
		propagated equality seed2^post58 = seed2^0
		
		propagated equality fcode5^post58 = fcode5^0
		
		propagated equality __const_9^post58 = __const_9^0
		
		propagated equality i6^post58 = i6^0
		
		propagated equality __const_2147483647^post58 = __const_2147483647^0
		
		propagated equality offset^post58 = offset^0
		
		propagated equality block_compress^post58 = block_compress^0
		
		propagated equality n40^post58 = n40^0
		
		propagated equality maxcode^post58 = maxcode^0
		
		propagated equality maxmaxcode^post58 = maxmaxcode^0
		
		propagated equality bits33^post58 = bits33^0
		
		propagated equality hsize^post58 = hsize^0
		
		propagated equality __const_429496^post58 = __const_429496^0
		
		propagated equality apsim_bound11113^post58 = apsim_bound11113^0
		
		propagated equality __const_16^post58 = __const_16^0
		
		propagated equality incnt^post58 = incnt^0
		
	Simplified Guard

	Original rule:
	l20 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	New rule:
	l20 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l20 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	New rule:
	l20 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l44 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	New rule:
	l20 -> l44 : (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l45 : __const_10000^0'=__const_10000^post59, __const_16^0'=__const_16^post59, __const_2147483647^0'=__const_2147483647^post59, __const_256^0'=__const_256^post59, __const_257^0'=__const_257^post59, __const_429496^0'=__const_429496^post59, __const_50^0'=__const_50^post59, __const_53^0'=__const_53^post59, __const_65536^0'=__const_65536^post59, __const_8388607^0'=__const_8388607^post59, __const_8^0'=__const_8^post59, __const_9^0'=__const_9^post59, apsim_bound11113^0'=apsim_bound11113^post59, apsim_incnt^0'=apsim_incnt^post59, bits33^0'=bits33^post59, block_compress^0'=block_compress^post59, bytes_out^0'=bytes_out^post59, c37^0'=c37^post59, c7^0'=c7^post59, checkpoint^0'=checkpoint^post59, clear_flg^0'=clear_flg^post59, code31^0'=code31^post59, count^0'=count^post59, disp9^0'=disp9^post59, ent8^0'=ent8^post59, exit_stat^0'=exit_stat^post59, fcode5^0'=fcode5^post59, free_ent^0'=free_ent^post59, hshift11^0'=hshift11^post59, hsize^0'=hsize^post59, hsize___019^0'=hsize___019^post59, hsize___027^0'=hsize___027^post59, hsize_reg10^0'=hsize_reg10^post59, i21^0'=i21^post59, i29^0'=i29^post59, i3^0'=i3^post59, i41^0'=i41^post59, i45^0'=i45^post59, i6^0'=i6^post59, in_count^0'=in_count^post59, incnt^0'=incnt^post59, m122^0'=m122^post59, m130^0'=m130^post59, maxbits^0'=maxbits^post59, maxcode^0'=maxcode^post59, maxmaxcode^0'=maxmaxcode^post59, n40^0'=n40^post59, n44^0'=n44^post59, n_bits^0'=n_bits^post59, offset^0'=offset^post59, out_count^0'=out_count^post59, r_off32^0'=r_off32^post59, rat26^0'=rat26^post59, ratio^0'=ratio^post59, ret_getbyte18^0'=ret_getbyte18^post59, ret_getbyte25^0'=ret_getbyte25^post59, seed2^0'=seed2^post59, tabort4^0'=tabort4^post59, tmp12^0'=tmp12^post59, tmp___014^0'=tmp___014^post59, tmp___017^0'=tmp___017^post59, tmp___024^0'=tmp___024^post59, tmp___115^0'=tmp___115^post59, (ent8^0-ent8^post59 == 0 /\ -tmp___024^post59+tmp___024^0 == 0 /\ -hsize^post59+hsize^0 == 0 /\ -n_bits^post59+n_bits^0 == 0 /\ -incnt^post59+incnt^0 == 0 /\ -tmp___115^post59+tmp___115^0 == 0 /\ offset^0-offset^post59 == 0 /\ -hsize___019^post59+hsize___019^0 == 0 /\ code31^0-code31^post59 == 0 /\ -r_off32^post59+r_off32^0 == 0 /\ __const_9^0-__const_9^post59 == 0 /\ -m122^post59+m122^0 == 0 /\ hsize___027^0-hsize___027^post59 == 0 /\ ret_getbyte25^0-ret_getbyte25^post59 == 0 /\ exit_stat^0-exit_stat^post59 == 0 /\ -disp9^post59+disp9^0 == 0 /\ -count^post59+count^0 == 0 /\ -maxbits^post59+maxbits^0 == 0 /\ maxcode^0-maxcode^post59 == 0 /\ c37^0-c37^post59 == 0 /\ bits33^0-bits33^post59 == 0 /\ -seed2^post59+seed2^0 == 0 /\ -n40^post59+n40^0 == 0 /\ c7^0-c7^post59 == 0 /\ -checkpoint^post59+checkpoint^0 == 0 /\ __const_65536^0-__const_65536^post59 == 0 /\ i45^0-i45^post59 == 0 /\ -apsim_bound11113^post59+apsim_bound11113^0 == 0 /\ apsim_incnt^0-apsim_incnt^post59 == 0 /\ -__const_8388607^post59+__const_8388607^0 == 0 /\ -__const_256^post59+__const_256^0 == 0 /\ n44^0-n44^post59 == 0 /\ -ratio^post59+ratio^0 == 0 /\ m130^0-m130^post59 == 0 /\ __const_2147483647^0-__const_2147483647^post59 == 0 /\ __const_53^0-__const_53^post59 == 0 /\ 1-bits33^0 <= 0 /\ tmp12^0-tmp12^post59 == 0 /\ -__const_429496^post59+__const_429496^0 == 0 /\ -i3^post59+i3^0 == 0 /\ -__const_50^post59+__const_50^0 == 0 /\ __const_16^0-__const_16^post59 == 0 /\ -i41^post59+i41^0 == 0 /\ -i29^post59+i29^0 == 0 /\ __const_8^0-__const_8^post59 == 0 /\ hshift11^0-hshift11^post59 == 0 /\ tabort4^0-tabort4^post59 == 0 /\ rat26^0-rat26^post59 == 0 /\ tmp___017^0-tmp___017^post59 == 0 /\ -fcode5^post59+fcode5^0 == 0 /\ -tmp___014^post59+tmp___014^0 == 0 /\ i6^0-i6^post59 == 0 /\ -i21^post59+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post59 == 0 /\ -clear_flg^post59+clear_flg^0 == 0 /\ free_ent^0-free_ent^post59 == 0 /\ __const_257^0-__const_257^post59 == 0 /\ -__const_10000^post59+__const_10000^0 == 0 /\ -in_count^post59+in_count^0 == 0 /\ block_compress^0-block_compress^post59 == 0 /\ out_count^0-out_count^post59 == 0 /\ -bytes_out^post59+bytes_out^0 == 0 /\ -hsize_reg10^post59+hsize_reg10^0 == 0 /\ -ret_getbyte18^post59+ret_getbyte18^0 == 0), cost: 1
	New rule:
	l20 -> l45 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-bits33^0 <= 0), cost: 1
	
		propagated equality ent8^post59 = ent8^0
		
		propagated equality tmp___024^post59 = tmp___024^0
		
		propagated equality hsize^post59 = hsize^0
		
		propagated equality n_bits^post59 = n_bits^0
		
		propagated equality incnt^post59 = incnt^0
		
		propagated equality tmp___115^post59 = tmp___115^0
		
		propagated equality offset^post59 = offset^0
		
		propagated equality hsize___019^post59 = hsize___019^0
		
		propagated equality code31^post59 = code31^0
		
		propagated equality r_off32^post59 = r_off32^0
		
		propagated equality __const_9^post59 = __const_9^0
		
		propagated equality m122^post59 = m122^0
		
		propagated equality hsize___027^post59 = hsize___027^0
		
		propagated equality ret_getbyte25^post59 = ret_getbyte25^0
		
		propagated equality exit_stat^post59 = exit_stat^0
		
		propagated equality disp9^post59 = disp9^0
		
		propagated equality count^post59 = count^0
		
		propagated equality maxbits^post59 = maxbits^0
		
		propagated equality maxcode^post59 = maxcode^0
		
		propagated equality c37^post59 = c37^0
		
		propagated equality bits33^post59 = bits33^0
		
		propagated equality seed2^post59 = seed2^0
		
		propagated equality n40^post59 = n40^0
		
		propagated equality c7^post59 = c7^0
		
		propagated equality checkpoint^post59 = checkpoint^0
		
		propagated equality __const_65536^post59 = __const_65536^0
		
		propagated equality i45^post59 = i45^0
		
		propagated equality apsim_bound11113^post59 = apsim_bound11113^0
		
		propagated equality apsim_incnt^post59 = apsim_incnt^0
		
		propagated equality __const_8388607^post59 = __const_8388607^0
		
		propagated equality __const_256^post59 = __const_256^0
		
		propagated equality n44^post59 = n44^0
		
		propagated equality ratio^post59 = ratio^0
		
		propagated equality m130^post59 = m130^0
		
		propagated equality __const_2147483647^post59 = __const_2147483647^0
		
		propagated equality __const_53^post59 = __const_53^0
		
		propagated equality tmp12^post59 = tmp12^0
		
		propagated equality __const_429496^post59 = __const_429496^0
		
		propagated equality i3^post59 = i3^0
		
		propagated equality __const_50^post59 = __const_50^0
		
		propagated equality __const_16^post59 = __const_16^0
		
		propagated equality i41^post59 = i41^0
		
		propagated equality i29^post59 = i29^0
		
		propagated equality __const_8^post59 = __const_8^0
		
		propagated equality hshift11^post59 = hshift11^0
		
		propagated equality tabort4^post59 = tabort4^0
		
		propagated equality rat26^post59 = rat26^0
		
		propagated equality tmp___017^post59 = tmp___017^0
		
		propagated equality fcode5^post59 = fcode5^0
		
		propagated equality tmp___014^post59 = tmp___014^0
		
		propagated equality i6^post59 = i6^0
		
		propagated equality i21^post59 = i21^0
		
		propagated equality maxmaxcode^post59 = maxmaxcode^0
		
		propagated equality clear_flg^post59 = clear_flg^0
		
		propagated equality free_ent^post59 = free_ent^0
		
		propagated equality __const_257^post59 = __const_257^0
		
		propagated equality __const_10000^post59 = __const_10000^0
		
		propagated equality in_count^post59 = in_count^0
		
		propagated equality block_compress^post59 = block_compress^0
		
		propagated equality out_count^post59 = out_count^0
		
		propagated equality bytes_out^post59 = bytes_out^0
		
		propagated equality hsize_reg10^post59 = hsize_reg10^0
		
		propagated equality ret_getbyte18^post59 = ret_getbyte18^0
		
	Simplified Guard

	Original rule:
	l20 -> l45 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-bits33^0 <= 0), cost: 1
	New rule:
	l20 -> l45 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-bits33^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l45 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-bits33^0 <= 0, cost: 1
	New rule:
	l20 -> l45 : 1-bits33^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l45 : __const_10000^0'=__const_10000^post60, __const_16^0'=__const_16^post60, __const_2147483647^0'=__const_2147483647^post60, __const_256^0'=__const_256^post60, __const_257^0'=__const_257^post60, __const_429496^0'=__const_429496^post60, __const_50^0'=__const_50^post60, __const_53^0'=__const_53^post60, __const_65536^0'=__const_65536^post60, __const_8388607^0'=__const_8388607^post60, __const_8^0'=__const_8^post60, __const_9^0'=__const_9^post60, apsim_bound11113^0'=apsim_bound11113^post60, apsim_incnt^0'=apsim_incnt^post60, bits33^0'=bits33^post60, block_compress^0'=block_compress^post60, bytes_out^0'=bytes_out^post60, c37^0'=c37^post60, c7^0'=c7^post60, checkpoint^0'=checkpoint^post60, clear_flg^0'=clear_flg^post60, code31^0'=code31^post60, count^0'=count^post60, disp9^0'=disp9^post60, ent8^0'=ent8^post60, exit_stat^0'=exit_stat^post60, fcode5^0'=fcode5^post60, free_ent^0'=free_ent^post60, hshift11^0'=hshift11^post60, hsize^0'=hsize^post60, hsize___019^0'=hsize___019^post60, hsize___027^0'=hsize___027^post60, hsize_reg10^0'=hsize_reg10^post60, i21^0'=i21^post60, i29^0'=i29^post60, i3^0'=i3^post60, i41^0'=i41^post60, i45^0'=i45^post60, i6^0'=i6^post60, in_count^0'=in_count^post60, incnt^0'=incnt^post60, m122^0'=m122^post60, m130^0'=m130^post60, maxbits^0'=maxbits^post60, maxcode^0'=maxcode^post60, maxmaxcode^0'=maxmaxcode^post60, n40^0'=n40^post60, n44^0'=n44^post60, n_bits^0'=n_bits^post60, offset^0'=offset^post60, out_count^0'=out_count^post60, r_off32^0'=r_off32^post60, rat26^0'=rat26^post60, ratio^0'=ratio^post60, ret_getbyte18^0'=ret_getbyte18^post60, ret_getbyte25^0'=ret_getbyte25^post60, seed2^0'=seed2^post60, tabort4^0'=tabort4^post60, tmp12^0'=tmp12^post60, tmp___014^0'=tmp___014^post60, tmp___017^0'=tmp___017^post60, tmp___024^0'=tmp___024^post60, tmp___115^0'=tmp___115^post60, (-__const_50^post60+__const_50^0 == 0 /\ __const_257^0-__const_257^post60 == 0 /\ apsim_incnt^0-apsim_incnt^post60 == 0 /\ -i3^post60+i3^0 == 0 /\ i29^0-i29^post60 == 0 /\ -i41^post60+i41^0 == 0 /\ -exit_stat^post60+exit_stat^0 == 0 /\ -fcode5^post60+fcode5^0 == 0 /\ -i21^post60+i21^0 == 0 /\ m130^0-m130^post60 == 0 /\ -incnt^post60+incnt^0 == 0 /\ code31^0-code31^post60 == 0 /\ __const_53^0-__const_53^post60 == 0 /\ 1+bits33^0 <= 0 /\ hsize___027^0-hsize___027^post60 == 0 /\ __const_8^0-__const_8^post60 == 0 /\ tmp12^0-tmp12^post60 == 0 /\ __const_65536^0-__const_65536^post60 == 0 /\ -tmp___024^post60+tmp___024^0 == 0 /\ hshift11^0-hshift11^post60 == 0 /\ -__const_10000^post60+__const_10000^0 == 0 /\ -tmp___014^post60+tmp___014^0 == 0 /\ -in_count^post60+in_count^0 == 0 /\ -clear_flg^post60+clear_flg^0 == 0 /\ -bytes_out^post60+bytes_out^0 == 0 /\ -n44^post60+n44^0 == 0 /\ rat26^0-rat26^post60 == 0 /\ hsize___019^0-hsize___019^post60 == 0 /\ -ret_getbyte18^post60+ret_getbyte18^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post60 == 0 /\ c37^0-c37^post60 == 0 /\ -tabort4^post60+tabort4^0 == 0 /\ -c7^post60+c7^0 == 0 /\ ent8^0-ent8^post60 == 0 /\ -hsize^post60+hsize^0 == 0 /\ -hsize_reg10^post60+hsize_reg10^0 == 0 /\ __const_429496^0-__const_429496^post60 == 0 /\ checkpoint^0-checkpoint^post60 == 0 /\ maxmaxcode^0-maxmaxcode^post60 == 0 /\ -n_bits^post60+n_bits^0 == 0 /\ -m122^post60+m122^0 == 0 /\ -r_off32^post60+r_off32^0 == 0 /\ i45^0-i45^post60 == 0 /\ free_ent^0-free_ent^post60 == 0 /\ -count^post60+count^0 == 0 /\ n40^0-n40^post60 == 0 /\ tmp___115^0-tmp___115^post60 == 0 /\ -disp9^post60+disp9^0 == 0 /\ -seed2^post60+seed2^0 == 0 /\ out_count^0-out_count^post60 == 0 /\ __const_9^0-__const_9^post60 == 0 /\ -maxbits^post60+maxbits^0 == 0 /\ -maxcode^post60+maxcode^0 == 0 /\ offset^0-offset^post60 == 0 /\ __const_2147483647^0-__const_2147483647^post60 == 0 /\ -apsim_bound11113^post60+apsim_bound11113^0 == 0 /\ __const_16^0-__const_16^post60 == 0 /\ -i6^post60+i6^0 == 0 /\ -__const_8388607^post60+__const_8388607^0 == 0 /\ -block_compress^post60+block_compress^0 == 0 /\ -__const_256^post60+__const_256^0 == 0 /\ tmp___017^0-tmp___017^post60 == 0 /\ -ratio^post60+ratio^0 == 0 /\ bits33^0-bits33^post60 == 0), cost: 1
	New rule:
	l20 -> l45 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+bits33^0 <= 0), cost: 1
	
		propagated equality __const_50^post60 = __const_50^0
		
		propagated equality __const_257^post60 = __const_257^0
		
		propagated equality apsim_incnt^post60 = apsim_incnt^0
		
		propagated equality i3^post60 = i3^0
		
		propagated equality i29^post60 = i29^0
		
		propagated equality i41^post60 = i41^0
		
		propagated equality exit_stat^post60 = exit_stat^0
		
		propagated equality fcode5^post60 = fcode5^0
		
		propagated equality i21^post60 = i21^0
		
		propagated equality m130^post60 = m130^0
		
		propagated equality incnt^post60 = incnt^0
		
		propagated equality code31^post60 = code31^0
		
		propagated equality __const_53^post60 = __const_53^0
		
		propagated equality hsize___027^post60 = hsize___027^0
		
		propagated equality __const_8^post60 = __const_8^0
		
		propagated equality tmp12^post60 = tmp12^0
		
		propagated equality __const_65536^post60 = __const_65536^0
		
		propagated equality tmp___024^post60 = tmp___024^0
		
		propagated equality hshift11^post60 = hshift11^0
		
		propagated equality __const_10000^post60 = __const_10000^0
		
		propagated equality tmp___014^post60 = tmp___014^0
		
		propagated equality in_count^post60 = in_count^0
		
		propagated equality clear_flg^post60 = clear_flg^0
		
		propagated equality bytes_out^post60 = bytes_out^0
		
		propagated equality n44^post60 = n44^0
		
		propagated equality rat26^post60 = rat26^0
		
		propagated equality hsize___019^post60 = hsize___019^0
		
		propagated equality ret_getbyte18^post60 = ret_getbyte18^0
		
		propagated equality ret_getbyte25^post60 = ret_getbyte25^0
		
		propagated equality c37^post60 = c37^0
		
		propagated equality tabort4^post60 = tabort4^0
		
		propagated equality c7^post60 = c7^0
		
		propagated equality ent8^post60 = ent8^0
		
		propagated equality hsize^post60 = hsize^0
		
		propagated equality hsize_reg10^post60 = hsize_reg10^0
		
		propagated equality __const_429496^post60 = __const_429496^0
		
		propagated equality checkpoint^post60 = checkpoint^0
		
		propagated equality maxmaxcode^post60 = maxmaxcode^0
		
		propagated equality n_bits^post60 = n_bits^0
		
		propagated equality m122^post60 = m122^0
		
		propagated equality r_off32^post60 = r_off32^0
		
		propagated equality i45^post60 = i45^0
		
		propagated equality free_ent^post60 = free_ent^0
		
		propagated equality count^post60 = count^0
		
		propagated equality n40^post60 = n40^0
		
		propagated equality tmp___115^post60 = tmp___115^0
		
		propagated equality disp9^post60 = disp9^0
		
		propagated equality seed2^post60 = seed2^0
		
		propagated equality out_count^post60 = out_count^0
		
		propagated equality __const_9^post60 = __const_9^0
		
		propagated equality maxbits^post60 = maxbits^0
		
		propagated equality maxcode^post60 = maxcode^0
		
		propagated equality offset^post60 = offset^0
		
		propagated equality __const_2147483647^post60 = __const_2147483647^0
		
		propagated equality apsim_bound11113^post60 = apsim_bound11113^0
		
		propagated equality __const_16^post60 = __const_16^0
		
		propagated equality i6^post60 = i6^0
		
		propagated equality __const_8388607^post60 = __const_8388607^0
		
		propagated equality block_compress^post60 = block_compress^0
		
		propagated equality __const_256^post60 = __const_256^0
		
		propagated equality tmp___017^post60 = tmp___017^0
		
		propagated equality ratio^post60 = ratio^0
		
		propagated equality bits33^post60 = bits33^0
		
	Simplified Guard

	Original rule:
	l20 -> l45 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+bits33^0 <= 0), cost: 1
	New rule:
	l20 -> l45 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+bits33^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l45 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+bits33^0 <= 0, cost: 1
	New rule:
	l20 -> l45 : 1+bits33^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l46 -> l19 : __const_10000^0'=__const_10000^post61, __const_16^0'=__const_16^post61, __const_2147483647^0'=__const_2147483647^post61, __const_256^0'=__const_256^post61, __const_257^0'=__const_257^post61, __const_429496^0'=__const_429496^post61, __const_50^0'=__const_50^post61, __const_53^0'=__const_53^post61, __const_65536^0'=__const_65536^post61, __const_8388607^0'=__const_8388607^post61, __const_8^0'=__const_8^post61, __const_9^0'=__const_9^post61, apsim_bound11113^0'=apsim_bound11113^post61, apsim_incnt^0'=apsim_incnt^post61, bits33^0'=bits33^post61, block_compress^0'=block_compress^post61, bytes_out^0'=bytes_out^post61, c37^0'=c37^post61, c7^0'=c7^post61, checkpoint^0'=checkpoint^post61, clear_flg^0'=clear_flg^post61, code31^0'=code31^post61, count^0'=count^post61, disp9^0'=disp9^post61, ent8^0'=ent8^post61, exit_stat^0'=exit_stat^post61, fcode5^0'=fcode5^post61, free_ent^0'=free_ent^post61, hshift11^0'=hshift11^post61, hsize^0'=hsize^post61, hsize___019^0'=hsize___019^post61, hsize___027^0'=hsize___027^post61, hsize_reg10^0'=hsize_reg10^post61, i21^0'=i21^post61, i29^0'=i29^post61, i3^0'=i3^post61, i41^0'=i41^post61, i45^0'=i45^post61, i6^0'=i6^post61, in_count^0'=in_count^post61, incnt^0'=incnt^post61, m122^0'=m122^post61, m130^0'=m130^post61, maxbits^0'=maxbits^post61, maxcode^0'=maxcode^post61, maxmaxcode^0'=maxmaxcode^post61, n40^0'=n40^post61, n44^0'=n44^post61, n_bits^0'=n_bits^post61, offset^0'=offset^post61, out_count^0'=out_count^post61, r_off32^0'=r_off32^post61, rat26^0'=rat26^post61, ratio^0'=ratio^post61, ret_getbyte18^0'=ret_getbyte18^post61, ret_getbyte25^0'=ret_getbyte25^post61, seed2^0'=seed2^post61, tabort4^0'=tabort4^post61, tmp12^0'=tmp12^post61, tmp___014^0'=tmp___014^post61, tmp___017^0'=tmp___017^post61, tmp___024^0'=tmp___024^post61, tmp___115^0'=tmp___115^post61, (-disp9^post61+disp9^0 == 0 /\ hsize___027^0-hsize___027^post61 == 0 /\ -exit_stat^post61+exit_stat^0 == 0 /\ -apsim_bound11113^post61+apsim_bound11113^0 == 0 /\ -__const_10000^post61+__const_10000^0 == 0 /\ i29^0-i29^post61 == 0 /\ -maxbits^post61+maxbits^0 == 0 /\ -__const_256^post61+__const_256^0 == 0 /\ n44^0-n44^post61 == 0 /\ -n40^post61+n40^0 == 0 /\ __const_257^0-__const_257^post61 == 0 /\ bits33^post61-n_bits^0 == 0 /\ bytes_out^post61-bytes_out^0-bits33^post61 == 0 /\ -hsize_reg10^post61+hsize_reg10^0 == 0 /\ maxcode^0-maxcode^post61 == 0 /\ apsim_incnt^0-apsim_incnt^post61 == 0 /\ -hsize^post61+hsize^0 == 0 /\ -hsize___019^post61+hsize___019^0 == 0 /\ -i41^post61+i41^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post61 == 0 /\ -seed2^post61+seed2^0 == 0 /\ c37^0-c37^post61 == 0 /\ tmp___014^0-tmp___014^post61 == 0 /\ -n_bits^post61+n_bits^0 == 0 /\ -incnt^post61+incnt^0 == 0 /\ i45^0-i45^post61 == 0 /\ m130^0-m130^post61 == 0 /\ code31^0-code31^post61 == 0 /\ tmp12^0-tmp12^post61 == 0 /\ c7^0-c7^post61 == 0 /\ -count^post61+count^0 == 0 /\ -__const_50^post61+__const_50^0 == 0 /\ __const_65536^0-__const_65536^post61 == 0 /\ -block_compress^post61+block_compress^0 == 0 /\ -checkpoint^post61+checkpoint^0 == 0 /\ -clear_flg^post61+clear_flg^0 == 0 /\ __const_8^0-__const_8^post61 == 0 /\ rat26^0-rat26^post61 == 0 /\ -ratio^post61+ratio^0 == 0 /\ tmp___115^0-tmp___115^post61 == 0 /\ -ret_getbyte18^post61+ret_getbyte18^0 == 0 /\ -in_count^post61+in_count^0 == 0 /\ __const_16^0-__const_16^post61 == 0 /\ -i21^post61+i21^0 == 0 /\ -i6^post61+i6^0 == 0 /\ __const_53^0-__const_53^post61 == 0 /\ -tmp___017^post61+tmp___017^0 == 0 /\ -tmp___024^post61+tmp___024^0 == 0 /\ hshift11^0-hshift11^post61 == 0 /\ m122^0-m122^post61 == 0 /\ -tabort4^post61+tabort4^0 == 0 /\ free_ent^0-free_ent^post61 == 0 /\ ent8^0-ent8^post61 == 0 /\ maxmaxcode^0-maxmaxcode^post61 == 0 /\ out_count^0-out_count^post61 == 0 /\ -__const_8388607^post61+__const_8388607^0 == 0 /\ -fcode5^post61+fcode5^0 == 0 /\ offset^0-offset^post61 == 0 /\ __const_429496^0-__const_429496^post61 == 0 /\ __const_9^0-__const_9^post61 == 0 /\ -r_off32^post61+r_off32^0 == 0 /\ __const_2147483647^0-__const_2147483647^post61 == 0 /\ -i3^post61+i3^0 == 0), cost: 1
	New rule:
	l46 -> l19 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=n_bits^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0+n_bits^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality disp9^post61 = disp9^0
		
		propagated equality hsize___027^post61 = hsize___027^0
		
		propagated equality exit_stat^post61 = exit_stat^0
		
		propagated equality apsim_bound11113^post61 = apsim_bound11113^0
		
		propagated equality __const_10000^post61 = __const_10000^0
		
		propagated equality i29^post61 = i29^0
		
		propagated equality maxbits^post61 = maxbits^0
		
		propagated equality __const_256^post61 = __const_256^0
		
		propagated equality n44^post61 = n44^0
		
		propagated equality n40^post61 = n40^0
		
		propagated equality __const_257^post61 = __const_257^0
		
		propagated equality bits33^post61 = n_bits^0
		
		propagated equality bytes_out^post61 = bytes_out^0+n_bits^0
		
		propagated equality hsize_reg10^post61 = hsize_reg10^0
		
		propagated equality maxcode^post61 = maxcode^0
		
		propagated equality apsim_incnt^post61 = apsim_incnt^0
		
		propagated equality hsize^post61 = hsize^0
		
		propagated equality hsize___019^post61 = hsize___019^0
		
		propagated equality i41^post61 = i41^0
		
		propagated equality ret_getbyte25^post61 = ret_getbyte25^0
		
		propagated equality seed2^post61 = seed2^0
		
		propagated equality c37^post61 = c37^0
		
		propagated equality tmp___014^post61 = tmp___014^0
		
		propagated equality n_bits^post61 = n_bits^0
		
		propagated equality incnt^post61 = incnt^0
		
		propagated equality i45^post61 = i45^0
		
		propagated equality m130^post61 = m130^0
		
		propagated equality code31^post61 = code31^0
		
		propagated equality tmp12^post61 = tmp12^0
		
		propagated equality c7^post61 = c7^0
		
		propagated equality count^post61 = count^0
		
		propagated equality __const_50^post61 = __const_50^0
		
		propagated equality __const_65536^post61 = __const_65536^0
		
		propagated equality block_compress^post61 = block_compress^0
		
		propagated equality checkpoint^post61 = checkpoint^0
		
		propagated equality clear_flg^post61 = clear_flg^0
		
		propagated equality __const_8^post61 = __const_8^0
		
		propagated equality rat26^post61 = rat26^0
		
		propagated equality ratio^post61 = ratio^0
		
		propagated equality tmp___115^post61 = tmp___115^0
		
		propagated equality ret_getbyte18^post61 = ret_getbyte18^0
		
		propagated equality in_count^post61 = in_count^0
		
		propagated equality __const_16^post61 = __const_16^0
		
		propagated equality i21^post61 = i21^0
		
		propagated equality i6^post61 = i6^0
		
		propagated equality __const_53^post61 = __const_53^0
		
		propagated equality tmp___017^post61 = tmp___017^0
		
		propagated equality tmp___024^post61 = tmp___024^0
		
		propagated equality hshift11^post61 = hshift11^0
		
		propagated equality m122^post61 = m122^0
		
		propagated equality tabort4^post61 = tabort4^0
		
		propagated equality free_ent^post61 = free_ent^0
		
		propagated equality ent8^post61 = ent8^0
		
		propagated equality maxmaxcode^post61 = maxmaxcode^0
		
		propagated equality out_count^post61 = out_count^0
		
		propagated equality __const_8388607^post61 = __const_8388607^0
		
		propagated equality fcode5^post61 = fcode5^0
		
		propagated equality offset^post61 = offset^0
		
		propagated equality __const_429496^post61 = __const_429496^0
		
		propagated equality __const_9^post61 = __const_9^0
		
		propagated equality r_off32^post61 = r_off32^0
		
		propagated equality __const_2147483647^post61 = __const_2147483647^0
		
		propagated equality i3^post61 = i3^0
		
	Simplified Guard

	Original rule:
	l46 -> l19 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=n_bits^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0+n_bits^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l46 -> l19 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=n_bits^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0+n_bits^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l46 -> l19 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=n_bits^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0+n_bits^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l46 -> l19 : bits33^0'=n_bits^0, bytes_out^0'=bytes_out^0+n_bits^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l46 -> l43 : __const_10000^0'=__const_10000^post62, __const_16^0'=__const_16^post62, __const_2147483647^0'=__const_2147483647^post62, __const_256^0'=__const_256^post62, __const_257^0'=__const_257^post62, __const_429496^0'=__const_429496^post62, __const_50^0'=__const_50^post62, __const_53^0'=__const_53^post62, __const_65536^0'=__const_65536^post62, __const_8388607^0'=__const_8388607^post62, __const_8^0'=__const_8^post62, __const_9^0'=__const_9^post62, apsim_bound11113^0'=apsim_bound11113^post62, apsim_incnt^0'=apsim_incnt^post62, bits33^0'=bits33^post62, block_compress^0'=block_compress^post62, bytes_out^0'=bytes_out^post62, c37^0'=c37^post62, c7^0'=c7^post62, checkpoint^0'=checkpoint^post62, clear_flg^0'=clear_flg^post62, code31^0'=code31^post62, count^0'=count^post62, disp9^0'=disp9^post62, ent8^0'=ent8^post62, exit_stat^0'=exit_stat^post62, fcode5^0'=fcode5^post62, free_ent^0'=free_ent^post62, hshift11^0'=hshift11^post62, hsize^0'=hsize^post62, hsize___019^0'=hsize___019^post62, hsize___027^0'=hsize___027^post62, hsize_reg10^0'=hsize_reg10^post62, i21^0'=i21^post62, i29^0'=i29^post62, i3^0'=i3^post62, i41^0'=i41^post62, i45^0'=i45^post62, i6^0'=i6^post62, in_count^0'=in_count^post62, incnt^0'=incnt^post62, m122^0'=m122^post62, m130^0'=m130^post62, maxbits^0'=maxbits^post62, maxcode^0'=maxcode^post62, maxmaxcode^0'=maxmaxcode^post62, n40^0'=n40^post62, n44^0'=n44^post62, n_bits^0'=n_bits^post62, offset^0'=offset^post62, out_count^0'=out_count^post62, r_off32^0'=r_off32^post62, rat26^0'=rat26^post62, ratio^0'=ratio^post62, ret_getbyte18^0'=ret_getbyte18^post62, ret_getbyte25^0'=ret_getbyte25^post62, seed2^0'=seed2^post62, tabort4^0'=tabort4^post62, tmp12^0'=tmp12^post62, tmp___014^0'=tmp___014^post62, tmp___017^0'=tmp___017^post62, tmp___024^0'=tmp___024^post62, tmp___115^0'=tmp___115^post62, (-tmp___017^post62+tmp___017^0 == 0 /\ __const_9^0-__const_9^post62 == 0 /\ -tmp___024^post62+tmp___024^0 == 0 /\ c37^0-c37^post62 == 0 /\ offset^0-offset^post62 == 0 /\ __const_8388607^0-__const_8388607^post62 == 0 /\ maxcode^0-maxcode^post62 == 0 /\ tmp___014^0-tmp___014^post62 == 0 /\ ret_getbyte25^0-ret_getbyte25^post62 == 0 /\ -bytes_out^post62+bytes_out^0 == 0 /\ -ratio^post62+ratio^0 == 0 /\ -r_off32^post62+r_off32^0 == 0 /\ bits33^0-bits33^post62 == 0 /\ maxmaxcode^0-maxmaxcode^post62 == 0 /\ code31^0-code31^post62 == 0 /\ -in_count^post62+in_count^0 == 0 /\ -n_bits^post62+n_bits^0 == 0 /\ -checkpoint^post62+checkpoint^0 == 0 /\ -clear_flg^post62+clear_flg^0 == 0 /\ ent8^0-ent8^post62 == 0 /\ hsize___027^0-hsize___027^post62 == 0 /\ c7^0-c7^post62 == 0 /\ apsim_incnt^0-apsim_incnt^post62 == 0 /\ -__const_429496^post62+__const_429496^0 == 0 /\ i45^0-i45^post62 == 0 /\ -hsize^post62+hsize^0 == 0 /\ -disp9^post62+disp9^0 == 0 /\ tmp12^0-tmp12^post62 == 0 /\ -n40^post62+n40^0 == 0 /\ tabort4^0-tabort4^post62 == 0 /\ n44^0-n44^post62 == 0 /\ -exit_stat^post62+exit_stat^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post62 == 0 /\ -apsim_bound11113^post62+apsim_bound11113^0 == 0 /\ -i3^post62+i3^0 == 0 /\ -i29^post62+i29^0 == 0 /\ m122^0-m122^post62 == 0 /\ -i41^post62+i41^0 == 0 /\ __const_65536^0-__const_65536^post62 == 0 /\ -__const_2147483647^post62+__const_2147483647^0 == 0 /\ -__const_256^post62+__const_256^0 == 0 /\ __const_16^0-__const_16^post62 == 0 /\ -__const_50^post62+__const_50^0 == 0 /\ -m130^post62+m130^0 == 0 /\ tmp___115^0-tmp___115^post62 == 0 /\ -__const_10000^post62+__const_10000^0 == 0 /\ -count^post62+count^0 == 0 /\ -hsize___019^post62+hsize___019^0 == 0 /\ -hsize_reg10^post62+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post62 == 0 /\ rat26^0-rat26^post62 == 0 /\ -i21^post62+i21^0 == 0 /\ __const_8^0-__const_8^post62 == 0 /\ -maxbits^post62+maxbits^0 == 0 /\ free_ent^0-free_ent^post62 == 0 /\ -incnt^post62+incnt^0 == 0 /\ i6^0-i6^post62 == 0 /\ -fcode5^post62+fcode5^0 == 0 /\ __const_53^0-__const_53^post62 == 0 /\ __const_257^0-__const_257^post62 == 0 /\ out_count^0-out_count^post62 == 0 /\ -seed2^post62+seed2^0 == 0 /\ block_compress^0-block_compress^post62 == 0), cost: 1
	New rule:
	l46 -> l43 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality tmp___017^post62 = tmp___017^0
		
		propagated equality __const_9^post62 = __const_9^0
		
		propagated equality tmp___024^post62 = tmp___024^0
		
		propagated equality c37^post62 = c37^0
		
		propagated equality offset^post62 = offset^0
		
		propagated equality __const_8388607^post62 = __const_8388607^0
		
		propagated equality maxcode^post62 = maxcode^0
		
		propagated equality tmp___014^post62 = tmp___014^0
		
		propagated equality ret_getbyte25^post62 = ret_getbyte25^0
		
		propagated equality bytes_out^post62 = bytes_out^0
		
		propagated equality ratio^post62 = ratio^0
		
		propagated equality r_off32^post62 = r_off32^0
		
		propagated equality bits33^post62 = bits33^0
		
		propagated equality maxmaxcode^post62 = maxmaxcode^0
		
		propagated equality code31^post62 = code31^0
		
		propagated equality in_count^post62 = in_count^0
		
		propagated equality n_bits^post62 = n_bits^0
		
		propagated equality checkpoint^post62 = checkpoint^0
		
		propagated equality clear_flg^post62 = clear_flg^0
		
		propagated equality ent8^post62 = ent8^0
		
		propagated equality hsize___027^post62 = hsize___027^0
		
		propagated equality c7^post62 = c7^0
		
		propagated equality apsim_incnt^post62 = apsim_incnt^0
		
		propagated equality __const_429496^post62 = __const_429496^0
		
		propagated equality i45^post62 = i45^0
		
		propagated equality hsize^post62 = hsize^0
		
		propagated equality disp9^post62 = disp9^0
		
		propagated equality tmp12^post62 = tmp12^0
		
		propagated equality n40^post62 = n40^0
		
		propagated equality tabort4^post62 = tabort4^0
		
		propagated equality n44^post62 = n44^0
		
		propagated equality exit_stat^post62 = exit_stat^0
		
		propagated equality ret_getbyte18^post62 = ret_getbyte18^0
		
		propagated equality apsim_bound11113^post62 = apsim_bound11113^0
		
		propagated equality i3^post62 = i3^0
		
		propagated equality i29^post62 = i29^0
		
		propagated equality m122^post62 = m122^0
		
		propagated equality i41^post62 = i41^0
		
		propagated equality __const_65536^post62 = __const_65536^0
		
		propagated equality __const_2147483647^post62 = __const_2147483647^0
		
		propagated equality __const_256^post62 = __const_256^0
		
		propagated equality __const_16^post62 = __const_16^0
		
		propagated equality __const_50^post62 = __const_50^0
		
		propagated equality m130^post62 = m130^0
		
		propagated equality tmp___115^post62 = tmp___115^0
		
		propagated equality __const_10000^post62 = __const_10000^0
		
		propagated equality count^post62 = count^0
		
		propagated equality hsize___019^post62 = hsize___019^0
		
		propagated equality hsize_reg10^post62 = hsize_reg10^0
		
		propagated equality hshift11^post62 = hshift11^0
		
		propagated equality rat26^post62 = rat26^0
		
		propagated equality i21^post62 = i21^0
		
		propagated equality __const_8^post62 = __const_8^0
		
		propagated equality maxbits^post62 = maxbits^0
		
		propagated equality free_ent^post62 = free_ent^0
		
		propagated equality incnt^post62 = incnt^0
		
		propagated equality i6^post62 = i6^0
		
		propagated equality fcode5^post62 = fcode5^0
		
		propagated equality __const_53^post62 = __const_53^0
		
		propagated equality __const_257^post62 = __const_257^0
		
		propagated equality out_count^post62 = out_count^0
		
		propagated equality seed2^post62 = seed2^0
		
		propagated equality block_compress^post62 = block_compress^0
		
	Simplified Guard

	Original rule:
	l46 -> l43 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l46 -> l43 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l46 -> l43 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l46 -> l43 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l47 -> l46 : __const_10000^0'=__const_10000^post63, __const_16^0'=__const_16^post63, __const_2147483647^0'=__const_2147483647^post63, __const_256^0'=__const_256^post63, __const_257^0'=__const_257^post63, __const_429496^0'=__const_429496^post63, __const_50^0'=__const_50^post63, __const_53^0'=__const_53^post63, __const_65536^0'=__const_65536^post63, __const_8388607^0'=__const_8388607^post63, __const_8^0'=__const_8^post63, __const_9^0'=__const_9^post63, apsim_bound11113^0'=apsim_bound11113^post63, apsim_incnt^0'=apsim_incnt^post63, bits33^0'=bits33^post63, block_compress^0'=block_compress^post63, bytes_out^0'=bytes_out^post63, c37^0'=c37^post63, c7^0'=c7^post63, checkpoint^0'=checkpoint^post63, clear_flg^0'=clear_flg^post63, code31^0'=code31^post63, count^0'=count^post63, disp9^0'=disp9^post63, ent8^0'=ent8^post63, exit_stat^0'=exit_stat^post63, fcode5^0'=fcode5^post63, free_ent^0'=free_ent^post63, hshift11^0'=hshift11^post63, hsize^0'=hsize^post63, hsize___019^0'=hsize___019^post63, hsize___027^0'=hsize___027^post63, hsize_reg10^0'=hsize_reg10^post63, i21^0'=i21^post63, i29^0'=i29^post63, i3^0'=i3^post63, i41^0'=i41^post63, i45^0'=i45^post63, i6^0'=i6^post63, in_count^0'=in_count^post63, incnt^0'=incnt^post63, m122^0'=m122^post63, m130^0'=m130^post63, maxbits^0'=maxbits^post63, maxcode^0'=maxcode^post63, maxmaxcode^0'=maxmaxcode^post63, n40^0'=n40^post63, n44^0'=n44^post63, n_bits^0'=n_bits^post63, offset^0'=offset^post63, out_count^0'=out_count^post63, r_off32^0'=r_off32^post63, rat26^0'=rat26^post63, ratio^0'=ratio^post63, ret_getbyte18^0'=ret_getbyte18^post63, ret_getbyte25^0'=ret_getbyte25^post63, seed2^0'=seed2^post63, tabort4^0'=tabort4^post63, tmp12^0'=tmp12^post63, tmp___014^0'=tmp___014^post63, tmp___017^0'=tmp___017^post63, tmp___024^0'=tmp___024^post63, tmp___115^0'=tmp___115^post63, (ent8^0-ent8^post63 == 0 /\ -incnt^post63+incnt^0 == 0 /\ c7^0-c7^post63 == 0 /\ r_off32^0-r_off32^post63 == 0 /\ tabort4^0-tabort4^post63 == 0 /\ -m130^post63+m130^0 == 0 /\ exit_stat^0-exit_stat^post63 == 0 /\ -__const_429496^post63+__const_429496^0 == 0 /\ out_count^0-out_count^post63 == 0 /\ -__const_9^post63+__const_9^0 == 0 /\ __const_50^0-__const_50^post63 == 0 /\ -maxbits^post63+maxbits^0 == 0 /\ -i29^post63+i29^0 == 0 /\ -i41^post63+i41^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post63 == 0 /\ -i45^post63+i45^0 == 0 /\ -__const_65536^post63+__const_65536^0 == 0 /\ -i21^post63+i21^0 == 0 /\ -clear_flg^post63+clear_flg^0 == 0 /\ -tmp___115^post63+tmp___115^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post63 == 0 /\ tmp12^0-tmp12^post63 == 0 /\ -in_count^post63+in_count^0 == 0 /\ -__const_8^post63+__const_8^0 == 0 /\ -__const_2147483647^post63+__const_2147483647^0 == 0 /\ -__const_8388607^post63+__const_8388607^0 == 0 /\ __const_16^0-__const_16^post63 == 0 /\ bits33^0-bits33^post63 == 0 /\ maxmaxcode^0-maxmaxcode^post63 == 0 /\ maxcode^0-maxcode^post63 == 0 /\ -bytes_out^post63+bytes_out^0 == 0 /\ -__const_10000^post63+__const_10000^0 == 0 /\ i6^0-i6^post63 == 0 /\ __const_257^0-__const_257^post63 == 0 /\ -n_bits^post63+n_bits^0 == 0 /\ -tmp___014^post63+tmp___014^0 == 0 /\ -ret_getbyte25^post63+ret_getbyte25^0 == 0 /\ -hsize___019^post63+hsize___019^0 == 0 /\ -hsize^post63+hsize^0 == 0 /\ -seed2^post63+seed2^0 == 0 /\ apsim_incnt^0-apsim_incnt^post63 == 0 /\ -count^post63+count^0 == 0 /\ -fcode5^post63+fcode5^0 == 0 /\ tmp___017^0-tmp___017^post63 == 0 /\ m122^0-m122^post63 == 0 /\ -disp9^post63+disp9^0 == 0 /\ n44^0-n44^post63 == 0 /\ i3^0-i3^post63 == 0 /\ __const_53^0-__const_53^post63 == 0 /\ -n40^post63+n40^0 == 0 /\ code31^0-code31^post63 == 0 /\ hsize_reg10^0-hsize_reg10^post63 == 0 /\ -checkpoint^post63+checkpoint^0 == 0 /\ -tmp___024^post63+tmp___024^0 == 0 /\ -__const_256^post63+__const_256^0 == 0 /\ hsize___027^0-hsize___027^post63 == 0 /\ hshift11^0-hshift11^post63 == 0 /\ free_ent^0-free_ent^post63 == 0 /\ -block_compress^post63+block_compress^0 == 0 /\ rat26^0-rat26^post63 == 0 /\ offset^post63-offset^0-n_bits^0 == 0 /\ -ratio^post63+ratio^0 == 0 /\ c37^0-c37^post63 == 0), cost: 1
	New rule:
	l47 -> l46 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0+n_bits^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality ent8^post63 = ent8^0
		
		propagated equality incnt^post63 = incnt^0
		
		propagated equality c7^post63 = c7^0
		
		propagated equality r_off32^post63 = r_off32^0
		
		propagated equality tabort4^post63 = tabort4^0
		
		propagated equality m130^post63 = m130^0
		
		propagated equality exit_stat^post63 = exit_stat^0
		
		propagated equality __const_429496^post63 = __const_429496^0
		
		propagated equality out_count^post63 = out_count^0
		
		propagated equality __const_9^post63 = __const_9^0
		
		propagated equality __const_50^post63 = __const_50^0
		
		propagated equality maxbits^post63 = maxbits^0
		
		propagated equality i29^post63 = i29^0
		
		propagated equality i41^post63 = i41^0
		
		propagated equality apsim_bound11113^post63 = apsim_bound11113^0
		
		propagated equality i45^post63 = i45^0
		
		propagated equality __const_65536^post63 = __const_65536^0
		
		propagated equality i21^post63 = i21^0
		
		propagated equality clear_flg^post63 = clear_flg^0
		
		propagated equality tmp___115^post63 = tmp___115^0
		
		propagated equality ret_getbyte18^post63 = ret_getbyte18^0
		
		propagated equality tmp12^post63 = tmp12^0
		
		propagated equality in_count^post63 = in_count^0
		
		propagated equality __const_8^post63 = __const_8^0
		
		propagated equality __const_2147483647^post63 = __const_2147483647^0
		
		propagated equality __const_8388607^post63 = __const_8388607^0
		
		propagated equality __const_16^post63 = __const_16^0
		
		propagated equality bits33^post63 = bits33^0
		
		propagated equality maxmaxcode^post63 = maxmaxcode^0
		
		propagated equality maxcode^post63 = maxcode^0
		
		propagated equality bytes_out^post63 = bytes_out^0
		
		propagated equality __const_10000^post63 = __const_10000^0
		
		propagated equality i6^post63 = i6^0
		
		propagated equality __const_257^post63 = __const_257^0
		
		propagated equality n_bits^post63 = n_bits^0
		
		propagated equality tmp___014^post63 = tmp___014^0
		
		propagated equality ret_getbyte25^post63 = ret_getbyte25^0
		
		propagated equality hsize___019^post63 = hsize___019^0
		
		propagated equality hsize^post63 = hsize^0
		
		propagated equality seed2^post63 = seed2^0
		
		propagated equality apsim_incnt^post63 = apsim_incnt^0
		
		propagated equality count^post63 = count^0
		
		propagated equality fcode5^post63 = fcode5^0
		
		propagated equality tmp___017^post63 = tmp___017^0
		
		propagated equality m122^post63 = m122^0
		
		propagated equality disp9^post63 = disp9^0
		
		propagated equality n44^post63 = n44^0
		
		propagated equality i3^post63 = i3^0
		
		propagated equality __const_53^post63 = __const_53^0
		
		propagated equality n40^post63 = n40^0
		
		propagated equality code31^post63 = code31^0
		
		propagated equality hsize_reg10^post63 = hsize_reg10^0
		
		propagated equality checkpoint^post63 = checkpoint^0
		
		propagated equality tmp___024^post63 = tmp___024^0
		
		propagated equality __const_256^post63 = __const_256^0
		
		propagated equality hsize___027^post63 = hsize___027^0
		
		propagated equality hshift11^post63 = hshift11^0
		
		propagated equality free_ent^post63 = free_ent^0
		
		propagated equality block_compress^post63 = block_compress^0
		
		propagated equality rat26^post63 = rat26^0
		
		propagated equality offset^post63 = offset^0+n_bits^0
		
		propagated equality ratio^post63 = ratio^0
		
		propagated equality c37^post63 = c37^0
		
	Simplified Guard

	Original rule:
	l47 -> l46 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0+n_bits^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l47 -> l46 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0+n_bits^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l47 -> l46 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0+n_bits^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l47 -> l46 : offset^0'=offset^0+n_bits^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l48 -> l47 : __const_10000^0'=__const_10000^post64, __const_16^0'=__const_16^post64, __const_2147483647^0'=__const_2147483647^post64, __const_256^0'=__const_256^post64, __const_257^0'=__const_257^post64, __const_429496^0'=__const_429496^post64, __const_50^0'=__const_50^post64, __const_53^0'=__const_53^post64, __const_65536^0'=__const_65536^post64, __const_8388607^0'=__const_8388607^post64, __const_8^0'=__const_8^post64, __const_9^0'=__const_9^post64, apsim_bound11113^0'=apsim_bound11113^post64, apsim_incnt^0'=apsim_incnt^post64, bits33^0'=bits33^post64, block_compress^0'=block_compress^post64, bytes_out^0'=bytes_out^post64, c37^0'=c37^post64, c7^0'=c7^post64, checkpoint^0'=checkpoint^post64, clear_flg^0'=clear_flg^post64, code31^0'=code31^post64, count^0'=count^post64, disp9^0'=disp9^post64, ent8^0'=ent8^post64, exit_stat^0'=exit_stat^post64, fcode5^0'=fcode5^post64, free_ent^0'=free_ent^post64, hshift11^0'=hshift11^post64, hsize^0'=hsize^post64, hsize___019^0'=hsize___019^post64, hsize___027^0'=hsize___027^post64, hsize_reg10^0'=hsize_reg10^post64, i21^0'=i21^post64, i29^0'=i29^post64, i3^0'=i3^post64, i41^0'=i41^post64, i45^0'=i45^post64, i6^0'=i6^post64, in_count^0'=in_count^post64, incnt^0'=incnt^post64, m122^0'=m122^post64, m130^0'=m130^post64, maxbits^0'=maxbits^post64, maxcode^0'=maxcode^post64, maxmaxcode^0'=maxmaxcode^post64, n40^0'=n40^post64, n44^0'=n44^post64, n_bits^0'=n_bits^post64, offset^0'=offset^post64, out_count^0'=out_count^post64, r_off32^0'=r_off32^post64, rat26^0'=rat26^post64, ratio^0'=ratio^post64, ret_getbyte18^0'=ret_getbyte18^post64, ret_getbyte25^0'=ret_getbyte25^post64, seed2^0'=seed2^post64, tabort4^0'=tabort4^post64, tmp12^0'=tmp12^post64, tmp___014^0'=tmp___014^post64, tmp___017^0'=tmp___017^post64, tmp___024^0'=tmp___024^post64, tmp___115^0'=tmp___115^post64, (-block_compress^post64+block_compress^0 == 0 /\ -clear_flg^post64+clear_flg^0 == 0 /\ -c7^post64+c7^0 == 0 /\ -bytes_out^post64+bytes_out^0 == 0 /\ -ret_getbyte18^post64+ret_getbyte18^0 == 0 /\ -in_count^post64+in_count^0 == 0 /\ -apsim_bound11113^post64+apsim_bound11113^0 == 0 /\ -i21^post64+i21^0 == 0 /\ -i6^post64+i6^0 == 0 /\ m130^0-m130^post64 == 0 /\ -tmp___024^post64+tmp___024^0 == 0 /\ -tmp___115^post64+tmp___115^0 == 0 /\ __const_65536^0-__const_65536^post64 == 0 /\ hshift11^0-hshift11^post64 == 0 /\ -code31^post64+code31^0 == 0 /\ -m122^post64+m122^0 == 0 /\ free_ent^0-free_ent^post64 == 0 /\ rat26^0-rat26^post64 == 0 /\ -tabort4^post64+tabort4^0 == 0 /\ i29^0-i29^post64 == 0 /\ hsize___027^0-hsize___027^post64 == 0 /\ -n44^post64+n44^0 == 0 /\ -__const_8388607^post64+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post64 == 0 /\ __const_257^0-__const_257^post64 == 0 /\ hsize___019^0-hsize___019^post64 == 0 /\ -maxbits^post64+maxbits^0 == 0 /\ -r_off32^post64+r_off32^0 == 0 /\ -i3^post64+i3^0 == 0 /\ -disp9^post64+disp9^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post64 == 0 /\ -tmp___017^post64+tmp___017^0 == 0 /\ c37^0-c37^post64 == 0 /\ -__const_10000^post64+__const_10000^0 == 0 /\ __const_8^0-__const_8^post64 == 0 /\ ent8^0-ent8^post64 == 0 /\ -__const_256^post64+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post64 == 0 /\ out_count^0-out_count^post64 == 0 /\ -__const_2147483647^post64+__const_2147483647^0 == 0 /\ -fcode5^post64+fcode5^0 == 0 /\ i45^0-i45^post64 == 0 /\ offset^0-offset^post64 == 0 /\ -hsize_reg10^post64+hsize_reg10^0 == 0 /\ n40^0-n40^post64 == 0 /\ __const_429496^0-__const_429496^post64 == 0 /\ exit_stat^0-exit_stat^post64 == 0 /\ -hsize^post64+hsize^0 == 0 /\ -i41^post64+i41^0 == 0 /\ -incnt^post64+incnt^0 == 0 /\ -seed2^post64+seed2^0 == 0 /\ bits33^0-bits33^post64 == 0 /\ tmp12^0-tmp12^post64 == 0 /\ ratio^0-ratio^post64 == 0 /\ -n_bits^post64+n_bits^0 == 0 /\ __const_16^0-__const_16^post64 == 0 /\ tmp___014^0-tmp___014^post64 == 0 /\ __const_9^0-__const_9^post64 == 0 /\ apsim_incnt^0-apsim_incnt^post64 == 0 /\ -__const_50^post64+__const_50^0 == 0 /\ count^0-count^post64 == 0 /\ checkpoint^0-checkpoint^post64 == 0 /\ -maxcode^post64+maxcode^0 == 0), cost: 1
	New rule:
	l48 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality block_compress^post64 = block_compress^0
		
		propagated equality clear_flg^post64 = clear_flg^0
		
		propagated equality c7^post64 = c7^0
		
		propagated equality bytes_out^post64 = bytes_out^0
		
		propagated equality ret_getbyte18^post64 = ret_getbyte18^0
		
		propagated equality in_count^post64 = in_count^0
		
		propagated equality apsim_bound11113^post64 = apsim_bound11113^0
		
		propagated equality i21^post64 = i21^0
		
		propagated equality i6^post64 = i6^0
		
		propagated equality m130^post64 = m130^0
		
		propagated equality tmp___024^post64 = tmp___024^0
		
		propagated equality tmp___115^post64 = tmp___115^0
		
		propagated equality __const_65536^post64 = __const_65536^0
		
		propagated equality hshift11^post64 = hshift11^0
		
		propagated equality code31^post64 = code31^0
		
		propagated equality m122^post64 = m122^0
		
		propagated equality free_ent^post64 = free_ent^0
		
		propagated equality rat26^post64 = rat26^0
		
		propagated equality tabort4^post64 = tabort4^0
		
		propagated equality i29^post64 = i29^0
		
		propagated equality hsize___027^post64 = hsize___027^0
		
		propagated equality n44^post64 = n44^0
		
		propagated equality __const_8388607^post64 = __const_8388607^0
		
		propagated equality __const_53^post64 = __const_53^0
		
		propagated equality __const_257^post64 = __const_257^0
		
		propagated equality hsize___019^post64 = hsize___019^0
		
		propagated equality maxbits^post64 = maxbits^0
		
		propagated equality r_off32^post64 = r_off32^0
		
		propagated equality i3^post64 = i3^0
		
		propagated equality disp9^post64 = disp9^0
		
		propagated equality ret_getbyte25^post64 = ret_getbyte25^0
		
		propagated equality tmp___017^post64 = tmp___017^0
		
		propagated equality c37^post64 = c37^0
		
		propagated equality __const_10000^post64 = __const_10000^0
		
		propagated equality __const_8^post64 = __const_8^0
		
		propagated equality ent8^post64 = ent8^0
		
		propagated equality __const_256^post64 = __const_256^0
		
		propagated equality maxmaxcode^post64 = maxmaxcode^0
		
		propagated equality out_count^post64 = out_count^0
		
		propagated equality __const_2147483647^post64 = __const_2147483647^0
		
		propagated equality fcode5^post64 = fcode5^0
		
		propagated equality i45^post64 = i45^0
		
		propagated equality offset^post64 = offset^0
		
		propagated equality hsize_reg10^post64 = hsize_reg10^0
		
		propagated equality n40^post64 = n40^0
		
		propagated equality __const_429496^post64 = __const_429496^0
		
		propagated equality exit_stat^post64 = exit_stat^0
		
		propagated equality hsize^post64 = hsize^0
		
		propagated equality i41^post64 = i41^0
		
		propagated equality incnt^post64 = incnt^0
		
		propagated equality seed2^post64 = seed2^0
		
		propagated equality bits33^post64 = bits33^0
		
		propagated equality tmp12^post64 = tmp12^0
		
		propagated equality ratio^post64 = ratio^0
		
		propagated equality n_bits^post64 = n_bits^0
		
		propagated equality __const_16^post64 = __const_16^0
		
		propagated equality tmp___014^post64 = tmp___014^0
		
		propagated equality __const_9^post64 = __const_9^0
		
		propagated equality apsim_incnt^post64 = apsim_incnt^0
		
		propagated equality __const_50^post64 = __const_50^0
		
		propagated equality count^post64 = count^0
		
		propagated equality checkpoint^post64 = checkpoint^0
		
		propagated equality maxcode^post64 = maxcode^0
		
	Simplified Guard

	Original rule:
	l48 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l48 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l48 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l48 -> l47 : T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l49 -> l47 : __const_10000^0'=__const_10000^post65, __const_16^0'=__const_16^post65, __const_2147483647^0'=__const_2147483647^post65, __const_256^0'=__const_256^post65, __const_257^0'=__const_257^post65, __const_429496^0'=__const_429496^post65, __const_50^0'=__const_50^post65, __const_53^0'=__const_53^post65, __const_65536^0'=__const_65536^post65, __const_8388607^0'=__const_8388607^post65, __const_8^0'=__const_8^post65, __const_9^0'=__const_9^post65, apsim_bound11113^0'=apsim_bound11113^post65, apsim_incnt^0'=apsim_incnt^post65, bits33^0'=bits33^post65, block_compress^0'=block_compress^post65, bytes_out^0'=bytes_out^post65, c37^0'=c37^post65, c7^0'=c7^post65, checkpoint^0'=checkpoint^post65, clear_flg^0'=clear_flg^post65, code31^0'=code31^post65, count^0'=count^post65, disp9^0'=disp9^post65, ent8^0'=ent8^post65, exit_stat^0'=exit_stat^post65, fcode5^0'=fcode5^post65, free_ent^0'=free_ent^post65, hshift11^0'=hshift11^post65, hsize^0'=hsize^post65, hsize___019^0'=hsize___019^post65, hsize___027^0'=hsize___027^post65, hsize_reg10^0'=hsize_reg10^post65, i21^0'=i21^post65, i29^0'=i29^post65, i3^0'=i3^post65, i41^0'=i41^post65, i45^0'=i45^post65, i6^0'=i6^post65, in_count^0'=in_count^post65, incnt^0'=incnt^post65, m122^0'=m122^post65, m130^0'=m130^post65, maxbits^0'=maxbits^post65, maxcode^0'=maxcode^post65, maxmaxcode^0'=maxmaxcode^post65, n40^0'=n40^post65, n44^0'=n44^post65, n_bits^0'=n_bits^post65, offset^0'=offset^post65, out_count^0'=out_count^post65, r_off32^0'=r_off32^post65, rat26^0'=rat26^post65, ratio^0'=ratio^post65, ret_getbyte18^0'=ret_getbyte18^post65, ret_getbyte25^0'=ret_getbyte25^post65, seed2^0'=seed2^post65, tabort4^0'=tabort4^post65, tmp12^0'=tmp12^post65, tmp___014^0'=tmp___014^post65, tmp___017^0'=tmp___017^post65, tmp___024^0'=tmp___024^post65, tmp___115^0'=tmp___115^post65, (__const_9^0-__const_9^post65 == 0 /\ maxcode^0-maxcode^post65 == 0 /\ -i3^post65+i3^0 == 0 /\ -i41^post65+i41^0 == 0 /\ hsize___019^0-hsize___019^post65 == 0 /\ n44^0-n44^post65 == 0 /\ __const_257^0-__const_257^post65 == 0 /\ -__const_256^post65+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post65 == 0 /\ i29^0-i29^post65 == 0 /\ bits33^0 <= 0 /\ m130^0-m130^post65 == 0 /\ -__const_50^post65+__const_50^0 == 0 /\ hshift11^0-hshift11^post65 == 0 /\ apsim_incnt^0-apsim_incnt^post65 == 0 /\ -count^post65+count^0 == 0 /\ -__const_10000^post65+__const_10000^0 == 0 /\ c37^0-c37^post65 == 0 /\ -hsize_reg10^post65+hsize_reg10^0 == 0 /\ -hsize^post65+hsize^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post65 == 0 /\ -i21^post65+i21^0 == 0 /\ -incnt^post65+incnt^0 == 0 /\ __const_65536^0-__const_65536^post65 == 0 /\ code31^0-code31^post65 == 0 /\ -fcode5^post65+fcode5^0 == 0 /\ -apsim_bound11113^post65+apsim_bound11113^0 == 0 /\ hsize___027^0-hsize___027^post65 == 0 /\ -seed2^post65+seed2^0 == 0 /\ free_ent^0-free_ent^post65 == 0 /\ c7^0-c7^post65 == 0 /\ -__const_8388607^post65+__const_8388607^0 == 0 /\ -bits33^0 <= 0 /\ i45^0-i45^post65 == 0 /\ tmp___115^0-tmp___115^post65 == 0 /\ rat26^0-rat26^post65 == 0 /\ tmp12^0-tmp12^post65 == 0 /\ -bytes_out^post65+bytes_out^0 == 0 /\ __const_8^0-__const_8^post65 == 0 /\ -r_off32^post65+r_off32^0 == 0 /\ -ratio^post65+ratio^0 == 0 /\ -ret_getbyte18^post65+ret_getbyte18^0 == 0 /\ tmp___017^0-tmp___017^post65 == 0 /\ -i6^post65+i6^0 == 0 /\ __const_53^0-__const_53^post65 == 0 /\ out_count^0-out_count^post65 == 0 /\ -n_bits^post65+n_bits^0 == 0 /\ -in_count^post65+in_count^0 == 0 /\ -clear_flg^post65+clear_flg^0 == 0 /\ -checkpoint^post65+checkpoint^0 == 0 /\ -maxbits^post65+maxbits^0 == 0 /\ m122^0-m122^post65 == 0 /\ offset^0-offset^post65 == 0 /\ -disp9^post65+disp9^0 == 0 /\ -block_compress^post65+block_compress^0 == 0 /\ -tabort4^post65+tabort4^0 == 0 /\ -tmp___014^post65+tmp___014^0 == 0 /\ -tmp___024^post65+tmp___024^0 == 0 /\ -n40^post65+n40^0 == 0 /\ bits33^0-bits33^post65 == 0 /\ -exit_stat^post65+exit_stat^0 == 0 /\ __const_2147483647^0-__const_2147483647^post65 == 0 /\ __const_429496^0-__const_429496^post65 == 0 /\ __const_16^0-__const_16^post65 == 0 /\ ent8^0-ent8^post65 == 0), cost: 1
	New rule:
	l49 -> l47 : __const_10000^0'=__const_10000^post65, __const_16^0'=__const_16^post65, __const_2147483647^0'=__const_2147483647^post65, __const_256^0'=__const_256^post65, __const_257^0'=__const_257^post65, __const_429496^0'=__const_429496^post65, __const_50^0'=__const_50^post65, __const_53^0'=__const_53^post65, __const_65536^0'=__const_65536^post65, __const_8388607^0'=__const_8388607^post65, __const_8^0'=__const_8^post65, __const_9^0'=__const_9^post65, apsim_bound11113^0'=apsim_bound11113^post65, apsim_incnt^0'=apsim_incnt^post65, bits33^0'=bits33^post65, block_compress^0'=block_compress^post65, bytes_out^0'=bytes_out^post65, c37^0'=c37^post65, c7^0'=c7^post65, checkpoint^0'=checkpoint^post65, clear_flg^0'=clear_flg^post65, code31^0'=code31^post65, count^0'=count^post65, disp9^0'=disp9^post65, ent8^0'=ent8^post65, exit_stat^0'=exit_stat^post65, fcode5^0'=fcode5^post65, free_ent^0'=free_ent^post65, hshift11^0'=hshift11^post65, hsize^0'=hsize^post65, hsize___019^0'=hsize___019^post65, hsize___027^0'=hsize___027^post65, hsize_reg10^0'=hsize_reg10^post65, i21^0'=i21^post65, i29^0'=i29^post65, i3^0'=i3^post65, i41^0'=i41^post65, i45^0'=i45^post65, i6^0'=i6^post65, in_count^0'=in_count^post65, incnt^0'=incnt^post65, m122^0'=m122^post65, m130^0'=m130^post65, maxbits^0'=maxbits^post65, maxcode^0'=maxcode^post65, maxmaxcode^0'=maxmaxcode^post65, n40^0'=n40^post65, n44^0'=n44^post65, n_bits^0'=n_bits^post65, offset^0'=offset^post65, out_count^0'=out_count^post65, r_off32^0'=r_off32^post65, rat26^0'=rat26^post65, ratio^0'=ratio^post65, ret_getbyte18^0'=ret_getbyte18^post65, ret_getbyte25^0'=ret_getbyte25^post65, seed2^0'=seed2^post65, tabort4^0'=tabort4^post65, tmp12^0'=tmp12^post65, tmp___014^0'=tmp___014^post65, tmp___017^0'=tmp___017^post65, tmp___024^0'=tmp___024^post65, tmp___115^0'=tmp___115^post65, (__const_9^0-__const_9^post65 == 0 /\ maxcode^0-maxcode^post65 == 0 /\ -i3^post65+i3^0 == 0 /\ -i41^post65+i41^0 == 0 /\ hsize___019^0-hsize___019^post65 == 0 /\ n44^0-n44^post65 == 0 /\ __const_257^0-__const_257^post65 == 0 /\ -__const_256^post65+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post65 == 0 /\ i29^0-i29^post65 == 0 /\ bits33^0 <= 0 /\ bits33^0 == 0 /\ m130^0-m130^post65 == 0 /\ -__const_50^post65+__const_50^0 == 0 /\ hshift11^0-hshift11^post65 == 0 /\ apsim_incnt^0-apsim_incnt^post65 == 0 /\ -count^post65+count^0 == 0 /\ -__const_10000^post65+__const_10000^0 == 0 /\ c37^0-c37^post65 == 0 /\ -hsize_reg10^post65+hsize_reg10^0 == 0 /\ -hsize^post65+hsize^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post65 == 0 /\ -i21^post65+i21^0 == 0 /\ -incnt^post65+incnt^0 == 0 /\ __const_65536^0-__const_65536^post65 == 0 /\ code31^0-code31^post65 == 0 /\ -fcode5^post65+fcode5^0 == 0 /\ -apsim_bound11113^post65+apsim_bound11113^0 == 0 /\ hsize___027^0-hsize___027^post65 == 0 /\ -seed2^post65+seed2^0 == 0 /\ free_ent^0-free_ent^post65 == 0 /\ c7^0-c7^post65 == 0 /\ -__const_8388607^post65+__const_8388607^0 == 0 /\ -bits33^0 <= 0 /\ i45^0-i45^post65 == 0 /\ tmp___115^0-tmp___115^post65 == 0 /\ rat26^0-rat26^post65 == 0 /\ tmp12^0-tmp12^post65 == 0 /\ -bytes_out^post65+bytes_out^0 == 0 /\ __const_8^0-__const_8^post65 == 0 /\ -r_off32^post65+r_off32^0 == 0 /\ -ratio^post65+ratio^0 == 0 /\ -ret_getbyte18^post65+ret_getbyte18^0 == 0 /\ tmp___017^0-tmp___017^post65 == 0 /\ -i6^post65+i6^0 == 0 /\ __const_53^0-__const_53^post65 == 0 /\ out_count^0-out_count^post65 == 0 /\ -n_bits^post65+n_bits^0 == 0 /\ -in_count^post65+in_count^0 == 0 /\ -clear_flg^post65+clear_flg^0 == 0 /\ -checkpoint^post65+checkpoint^0 == 0 /\ -maxbits^post65+maxbits^0 == 0 /\ m122^0-m122^post65 == 0 /\ offset^0-offset^post65 == 0 /\ -disp9^post65+disp9^0 == 0 /\ -block_compress^post65+block_compress^0 == 0 /\ -tabort4^post65+tabort4^0 == 0 /\ -tmp___014^post65+tmp___014^0 == 0 /\ -tmp___024^post65+tmp___024^0 == 0 /\ -n40^post65+n40^0 == 0 /\ bits33^0-bits33^post65 == 0 /\ -exit_stat^post65+exit_stat^0 == 0 /\ __const_2147483647^0-__const_2147483647^post65 == 0 /\ __const_429496^0-__const_429496^post65 == 0 /\ __const_16^0-__const_16^post65 == 0 /\ ent8^0-ent8^post65 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l49 -> l47 : __const_10000^0'=__const_10000^post65, __const_16^0'=__const_16^post65, __const_2147483647^0'=__const_2147483647^post65, __const_256^0'=__const_256^post65, __const_257^0'=__const_257^post65, __const_429496^0'=__const_429496^post65, __const_50^0'=__const_50^post65, __const_53^0'=__const_53^post65, __const_65536^0'=__const_65536^post65, __const_8388607^0'=__const_8388607^post65, __const_8^0'=__const_8^post65, __const_9^0'=__const_9^post65, apsim_bound11113^0'=apsim_bound11113^post65, apsim_incnt^0'=apsim_incnt^post65, bits33^0'=bits33^post65, block_compress^0'=block_compress^post65, bytes_out^0'=bytes_out^post65, c37^0'=c37^post65, c7^0'=c7^post65, checkpoint^0'=checkpoint^post65, clear_flg^0'=clear_flg^post65, code31^0'=code31^post65, count^0'=count^post65, disp9^0'=disp9^post65, ent8^0'=ent8^post65, exit_stat^0'=exit_stat^post65, fcode5^0'=fcode5^post65, free_ent^0'=free_ent^post65, hshift11^0'=hshift11^post65, hsize^0'=hsize^post65, hsize___019^0'=hsize___019^post65, hsize___027^0'=hsize___027^post65, hsize_reg10^0'=hsize_reg10^post65, i21^0'=i21^post65, i29^0'=i29^post65, i3^0'=i3^post65, i41^0'=i41^post65, i45^0'=i45^post65, i6^0'=i6^post65, in_count^0'=in_count^post65, incnt^0'=incnt^post65, m122^0'=m122^post65, m130^0'=m130^post65, maxbits^0'=maxbits^post65, maxcode^0'=maxcode^post65, maxmaxcode^0'=maxmaxcode^post65, n40^0'=n40^post65, n44^0'=n44^post65, n_bits^0'=n_bits^post65, offset^0'=offset^post65, out_count^0'=out_count^post65, r_off32^0'=r_off32^post65, rat26^0'=rat26^post65, ratio^0'=ratio^post65, ret_getbyte18^0'=ret_getbyte18^post65, ret_getbyte25^0'=ret_getbyte25^post65, seed2^0'=seed2^post65, tabort4^0'=tabort4^post65, tmp12^0'=tmp12^post65, tmp___014^0'=tmp___014^post65, tmp___017^0'=tmp___017^post65, tmp___024^0'=tmp___024^post65, tmp___115^0'=tmp___115^post65, (__const_9^0-__const_9^post65 == 0 /\ maxcode^0-maxcode^post65 == 0 /\ -i3^post65+i3^0 == 0 /\ -i41^post65+i41^0 == 0 /\ hsize___019^0-hsize___019^post65 == 0 /\ n44^0-n44^post65 == 0 /\ __const_257^0-__const_257^post65 == 0 /\ -__const_256^post65+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post65 == 0 /\ i29^0-i29^post65 == 0 /\ bits33^0 <= 0 /\ bits33^0 == 0 /\ m130^0-m130^post65 == 0 /\ -__const_50^post65+__const_50^0 == 0 /\ hshift11^0-hshift11^post65 == 0 /\ apsim_incnt^0-apsim_incnt^post65 == 0 /\ -count^post65+count^0 == 0 /\ -__const_10000^post65+__const_10000^0 == 0 /\ c37^0-c37^post65 == 0 /\ -hsize_reg10^post65+hsize_reg10^0 == 0 /\ -hsize^post65+hsize^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post65 == 0 /\ -i21^post65+i21^0 == 0 /\ -incnt^post65+incnt^0 == 0 /\ __const_65536^0-__const_65536^post65 == 0 /\ code31^0-code31^post65 == 0 /\ -fcode5^post65+fcode5^0 == 0 /\ -apsim_bound11113^post65+apsim_bound11113^0 == 0 /\ hsize___027^0-hsize___027^post65 == 0 /\ -seed2^post65+seed2^0 == 0 /\ free_ent^0-free_ent^post65 == 0 /\ c7^0-c7^post65 == 0 /\ -__const_8388607^post65+__const_8388607^0 == 0 /\ -bits33^0 <= 0 /\ i45^0-i45^post65 == 0 /\ tmp___115^0-tmp___115^post65 == 0 /\ rat26^0-rat26^post65 == 0 /\ tmp12^0-tmp12^post65 == 0 /\ -bytes_out^post65+bytes_out^0 == 0 /\ __const_8^0-__const_8^post65 == 0 /\ -r_off32^post65+r_off32^0 == 0 /\ -ratio^post65+ratio^0 == 0 /\ -ret_getbyte18^post65+ret_getbyte18^0 == 0 /\ tmp___017^0-tmp___017^post65 == 0 /\ -i6^post65+i6^0 == 0 /\ __const_53^0-__const_53^post65 == 0 /\ out_count^0-out_count^post65 == 0 /\ -n_bits^post65+n_bits^0 == 0 /\ -in_count^post65+in_count^0 == 0 /\ -clear_flg^post65+clear_flg^0 == 0 /\ -checkpoint^post65+checkpoint^0 == 0 /\ -maxbits^post65+maxbits^0 == 0 /\ m122^0-m122^post65 == 0 /\ offset^0-offset^post65 == 0 /\ -disp9^post65+disp9^0 == 0 /\ -block_compress^post65+block_compress^0 == 0 /\ -tabort4^post65+tabort4^0 == 0 /\ -tmp___014^post65+tmp___014^0 == 0 /\ -tmp___024^post65+tmp___024^0 == 0 /\ -n40^post65+n40^0 == 0 /\ bits33^0-bits33^post65 == 0 /\ -exit_stat^post65+exit_stat^0 == 0 /\ __const_2147483647^0-__const_2147483647^post65 == 0 /\ __const_429496^0-__const_429496^post65 == 0 /\ __const_16^0-__const_16^post65 == 0 /\ ent8^0-ent8^post65 == 0), cost: 1
	New rule:
	l49 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	
		propagated equality __const_9^post65 = __const_9^0
		
		propagated equality maxcode^post65 = maxcode^0
		
		propagated equality i3^post65 = i3^0
		
		propagated equality i41^post65 = i41^0
		
		propagated equality hsize___019^post65 = hsize___019^0
		
		propagated equality n44^post65 = n44^0
		
		propagated equality __const_257^post65 = __const_257^0
		
		propagated equality __const_256^post65 = __const_256^0
		
		propagated equality maxmaxcode^post65 = maxmaxcode^0
		
		propagated equality i29^post65 = i29^0
		
		propagated equality m130^post65 = m130^0
		
		propagated equality __const_50^post65 = __const_50^0
		
		propagated equality hshift11^post65 = hshift11^0
		
		propagated equality apsim_incnt^post65 = apsim_incnt^0
		
		propagated equality count^post65 = count^0
		
		propagated equality __const_10000^post65 = __const_10000^0
		
		propagated equality c37^post65 = c37^0
		
		propagated equality hsize_reg10^post65 = hsize_reg10^0
		
		propagated equality hsize^post65 = hsize^0
		
		propagated equality ret_getbyte25^post65 = ret_getbyte25^0
		
		propagated equality i21^post65 = i21^0
		
		propagated equality incnt^post65 = incnt^0
		
		propagated equality __const_65536^post65 = __const_65536^0
		
		propagated equality code31^post65 = code31^0
		
		propagated equality fcode5^post65 = fcode5^0
		
		propagated equality apsim_bound11113^post65 = apsim_bound11113^0
		
		propagated equality hsize___027^post65 = hsize___027^0
		
		propagated equality seed2^post65 = seed2^0
		
		propagated equality free_ent^post65 = free_ent^0
		
		propagated equality c7^post65 = c7^0
		
		propagated equality __const_8388607^post65 = __const_8388607^0
		
		propagated equality i45^post65 = i45^0
		
		propagated equality tmp___115^post65 = tmp___115^0
		
		propagated equality rat26^post65 = rat26^0
		
		propagated equality tmp12^post65 = tmp12^0
		
		propagated equality bytes_out^post65 = bytes_out^0
		
		propagated equality __const_8^post65 = __const_8^0
		
		propagated equality r_off32^post65 = r_off32^0
		
		propagated equality ratio^post65 = ratio^0
		
		propagated equality ret_getbyte18^post65 = ret_getbyte18^0
		
		propagated equality tmp___017^post65 = tmp___017^0
		
		propagated equality i6^post65 = i6^0
		
		propagated equality __const_53^post65 = __const_53^0
		
		propagated equality out_count^post65 = out_count^0
		
		propagated equality n_bits^post65 = n_bits^0
		
		propagated equality in_count^post65 = in_count^0
		
		propagated equality clear_flg^post65 = clear_flg^0
		
		propagated equality checkpoint^post65 = checkpoint^0
		
		propagated equality maxbits^post65 = maxbits^0
		
		propagated equality m122^post65 = m122^0
		
		propagated equality offset^post65 = offset^0
		
		propagated equality disp9^post65 = disp9^0
		
		propagated equality block_compress^post65 = block_compress^0
		
		propagated equality tabort4^post65 = tabort4^0
		
		propagated equality tmp___014^post65 = tmp___014^0
		
		propagated equality tmp___024^post65 = tmp___024^0
		
		propagated equality n40^post65 = n40^0
		
		propagated equality bits33^post65 = bits33^0
		
		propagated equality exit_stat^post65 = exit_stat^0
		
		propagated equality __const_2147483647^post65 = __const_2147483647^0
		
		propagated equality __const_429496^post65 = __const_429496^0
		
		propagated equality __const_16^post65 = __const_16^0
		
		propagated equality ent8^post65 = ent8^0
		
	Simplified Guard

	Original rule:
	l49 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	New rule:
	l49 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l49 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	New rule:
	l49 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l49 -> l47 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	New rule:
	l49 -> l47 : (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l49 -> l48 : __const_10000^0'=__const_10000^post66, __const_16^0'=__const_16^post66, __const_2147483647^0'=__const_2147483647^post66, __const_256^0'=__const_256^post66, __const_257^0'=__const_257^post66, __const_429496^0'=__const_429496^post66, __const_50^0'=__const_50^post66, __const_53^0'=__const_53^post66, __const_65536^0'=__const_65536^post66, __const_8388607^0'=__const_8388607^post66, __const_8^0'=__const_8^post66, __const_9^0'=__const_9^post66, apsim_bound11113^0'=apsim_bound11113^post66, apsim_incnt^0'=apsim_incnt^post66, bits33^0'=bits33^post66, block_compress^0'=block_compress^post66, bytes_out^0'=bytes_out^post66, c37^0'=c37^post66, c7^0'=c7^post66, checkpoint^0'=checkpoint^post66, clear_flg^0'=clear_flg^post66, code31^0'=code31^post66, count^0'=count^post66, disp9^0'=disp9^post66, ent8^0'=ent8^post66, exit_stat^0'=exit_stat^post66, fcode5^0'=fcode5^post66, free_ent^0'=free_ent^post66, hshift11^0'=hshift11^post66, hsize^0'=hsize^post66, hsize___019^0'=hsize___019^post66, hsize___027^0'=hsize___027^post66, hsize_reg10^0'=hsize_reg10^post66, i21^0'=i21^post66, i29^0'=i29^post66, i3^0'=i3^post66, i41^0'=i41^post66, i45^0'=i45^post66, i6^0'=i6^post66, in_count^0'=in_count^post66, incnt^0'=incnt^post66, m122^0'=m122^post66, m130^0'=m130^post66, maxbits^0'=maxbits^post66, maxcode^0'=maxcode^post66, maxmaxcode^0'=maxmaxcode^post66, n40^0'=n40^post66, n44^0'=n44^post66, n_bits^0'=n_bits^post66, offset^0'=offset^post66, out_count^0'=out_count^post66, r_off32^0'=r_off32^post66, rat26^0'=rat26^post66, ratio^0'=ratio^post66, ret_getbyte18^0'=ret_getbyte18^post66, ret_getbyte25^0'=ret_getbyte25^post66, seed2^0'=seed2^post66, tabort4^0'=tabort4^post66, tmp12^0'=tmp12^post66, tmp___014^0'=tmp___014^post66, tmp___017^0'=tmp___017^post66, tmp___024^0'=tmp___024^post66, tmp___115^0'=tmp___115^post66, (-n_bits^post66+n_bits^0 == 0 /\ offset^0-offset^post66 == 0 /\ maxmaxcode^0-maxmaxcode^post66 == 0 /\ -tmp___014^post66+tmp___014^0 == 0 /\ -r_off32^post66+r_off32^0 == 0 /\ hsize___019^0-hsize___019^post66 == 0 /\ code31^0-code31^post66 == 0 /\ apsim_bound11113^0-apsim_bound11113^post66 == 0 /\ -seed2^post66+seed2^0 == 0 /\ -count^post66+count^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post66 == 0 /\ hsize___027^0-hsize___027^post66 == 0 /\ -fcode5^post66+fcode5^0 == 0 /\ __const_9^0-__const_9^post66 == 0 /\ -disp9^post66+disp9^0 == 0 /\ -exit_stat^post66+exit_stat^0 == 0 /\ -tmp___024^post66+tmp___024^0 == 0 /\ -tmp___115^post66+tmp___115^0 == 0 /\ c37^0-c37^post66 == 0 /\ c7^0-c7^post66 == 0 /\ -checkpoint^post66+checkpoint^0 == 0 /\ i45^0-i45^post66 == 0 /\ tabort4^0-tabort4^post66 == 0 /\ -__const_256^post66+__const_256^0 == 0 /\ apsim_incnt^0-apsim_incnt^post66 == 0 /\ n44^0-n44^post66 == 0 /\ bits33^0-bits33^post66 == 0 /\ -ratio^post66+ratio^0 == 0 /\ maxcode^0-maxcode^post66 == 0 /\ __const_2147483647^0-__const_2147483647^post66 == 0 /\ __const_53^0-__const_53^post66 == 0 /\ 1-bits33^0 <= 0 /\ -incnt^post66+incnt^0 == 0 /\ free_ent^0-free_ent^post66 == 0 /\ __const_65536^0-__const_65536^post66 == 0 /\ hshift11^0-hshift11^post66 == 0 /\ tmp___017^0-tmp___017^post66 == 0 /\ tmp12^0-tmp12^post66 == 0 /\ -__const_429496^post66+__const_429496^0 == 0 /\ -maxbits^post66+maxbits^0 == 0 /\ -__const_50^post66+__const_50^0 == 0 /\ -i3^post66+i3^0 == 0 /\ -i29^post66+i29^0 == 0 /\ __const_16^0-__const_16^post66 == 0 /\ -i41^post66+i41^0 == 0 /\ rat26^0-rat26^post66 == 0 /\ m130^0-m130^post66 == 0 /\ -n40^post66+n40^0 == 0 /\ i6^0-i6^post66 == 0 /\ ent8^0-ent8^post66 == 0 /\ -i21^post66+i21^0 == 0 /\ -clear_flg^post66+clear_flg^0 == 0 /\ __const_8^0-__const_8^post66 == 0 /\ __const_257^0-__const_257^post66 == 0 /\ out_count^0-out_count^post66 == 0 /\ -in_count^post66+in_count^0 == 0 /\ block_compress^0-block_compress^post66 == 0 /\ m122^0-m122^post66 == 0 /\ -__const_8388607^post66+__const_8388607^0 == 0 /\ -hsize^post66+hsize^0 == 0 /\ -bytes_out^post66+bytes_out^0 == 0 /\ -__const_10000^post66+__const_10000^0 == 0 /\ -ret_getbyte18^post66+ret_getbyte18^0 == 0 /\ -hsize_reg10^post66+hsize_reg10^0 == 0), cost: 1
	New rule:
	l49 -> l48 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-bits33^0 <= 0), cost: 1
	
		propagated equality n_bits^post66 = n_bits^0
		
		propagated equality offset^post66 = offset^0
		
		propagated equality maxmaxcode^post66 = maxmaxcode^0
		
		propagated equality tmp___014^post66 = tmp___014^0
		
		propagated equality r_off32^post66 = r_off32^0
		
		propagated equality hsize___019^post66 = hsize___019^0
		
		propagated equality code31^post66 = code31^0
		
		propagated equality apsim_bound11113^post66 = apsim_bound11113^0
		
		propagated equality seed2^post66 = seed2^0
		
		propagated equality count^post66 = count^0
		
		propagated equality ret_getbyte25^post66 = ret_getbyte25^0
		
		propagated equality hsize___027^post66 = hsize___027^0
		
		propagated equality fcode5^post66 = fcode5^0
		
		propagated equality __const_9^post66 = __const_9^0
		
		propagated equality disp9^post66 = disp9^0
		
		propagated equality exit_stat^post66 = exit_stat^0
		
		propagated equality tmp___024^post66 = tmp___024^0
		
		propagated equality tmp___115^post66 = tmp___115^0
		
		propagated equality c37^post66 = c37^0
		
		propagated equality c7^post66 = c7^0
		
		propagated equality checkpoint^post66 = checkpoint^0
		
		propagated equality i45^post66 = i45^0
		
		propagated equality tabort4^post66 = tabort4^0
		
		propagated equality __const_256^post66 = __const_256^0
		
		propagated equality apsim_incnt^post66 = apsim_incnt^0
		
		propagated equality n44^post66 = n44^0
		
		propagated equality bits33^post66 = bits33^0
		
		propagated equality ratio^post66 = ratio^0
		
		propagated equality maxcode^post66 = maxcode^0
		
		propagated equality __const_2147483647^post66 = __const_2147483647^0
		
		propagated equality __const_53^post66 = __const_53^0
		
		propagated equality incnt^post66 = incnt^0
		
		propagated equality free_ent^post66 = free_ent^0
		
		propagated equality __const_65536^post66 = __const_65536^0
		
		propagated equality hshift11^post66 = hshift11^0
		
		propagated equality tmp___017^post66 = tmp___017^0
		
		propagated equality tmp12^post66 = tmp12^0
		
		propagated equality __const_429496^post66 = __const_429496^0
		
		propagated equality maxbits^post66 = maxbits^0
		
		propagated equality __const_50^post66 = __const_50^0
		
		propagated equality i3^post66 = i3^0
		
		propagated equality i29^post66 = i29^0
		
		propagated equality __const_16^post66 = __const_16^0
		
		propagated equality i41^post66 = i41^0
		
		propagated equality rat26^post66 = rat26^0
		
		propagated equality m130^post66 = m130^0
		
		propagated equality n40^post66 = n40^0
		
		propagated equality i6^post66 = i6^0
		
		propagated equality ent8^post66 = ent8^0
		
		propagated equality i21^post66 = i21^0
		
		propagated equality clear_flg^post66 = clear_flg^0
		
		propagated equality __const_8^post66 = __const_8^0
		
		propagated equality __const_257^post66 = __const_257^0
		
		propagated equality out_count^post66 = out_count^0
		
		propagated equality in_count^post66 = in_count^0
		
		propagated equality block_compress^post66 = block_compress^0
		
		propagated equality m122^post66 = m122^0
		
		propagated equality __const_8388607^post66 = __const_8388607^0
		
		propagated equality hsize^post66 = hsize^0
		
		propagated equality bytes_out^post66 = bytes_out^0
		
		propagated equality __const_10000^post66 = __const_10000^0
		
		propagated equality ret_getbyte18^post66 = ret_getbyte18^0
		
		propagated equality hsize_reg10^post66 = hsize_reg10^0
		
	Simplified Guard

	Original rule:
	l49 -> l48 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-bits33^0 <= 0), cost: 1
	New rule:
	l49 -> l48 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-bits33^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l49 -> l48 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-bits33^0 <= 0, cost: 1
	New rule:
	l49 -> l48 : 1-bits33^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l49 -> l48 : __const_10000^0'=__const_10000^post67, __const_16^0'=__const_16^post67, __const_2147483647^0'=__const_2147483647^post67, __const_256^0'=__const_256^post67, __const_257^0'=__const_257^post67, __const_429496^0'=__const_429496^post67, __const_50^0'=__const_50^post67, __const_53^0'=__const_53^post67, __const_65536^0'=__const_65536^post67, __const_8388607^0'=__const_8388607^post67, __const_8^0'=__const_8^post67, __const_9^0'=__const_9^post67, apsim_bound11113^0'=apsim_bound11113^post67, apsim_incnt^0'=apsim_incnt^post67, bits33^0'=bits33^post67, block_compress^0'=block_compress^post67, bytes_out^0'=bytes_out^post67, c37^0'=c37^post67, c7^0'=c7^post67, checkpoint^0'=checkpoint^post67, clear_flg^0'=clear_flg^post67, code31^0'=code31^post67, count^0'=count^post67, disp9^0'=disp9^post67, ent8^0'=ent8^post67, exit_stat^0'=exit_stat^post67, fcode5^0'=fcode5^post67, free_ent^0'=free_ent^post67, hshift11^0'=hshift11^post67, hsize^0'=hsize^post67, hsize___019^0'=hsize___019^post67, hsize___027^0'=hsize___027^post67, hsize_reg10^0'=hsize_reg10^post67, i21^0'=i21^post67, i29^0'=i29^post67, i3^0'=i3^post67, i41^0'=i41^post67, i45^0'=i45^post67, i6^0'=i6^post67, in_count^0'=in_count^post67, incnt^0'=incnt^post67, m122^0'=m122^post67, m130^0'=m130^post67, maxbits^0'=maxbits^post67, maxcode^0'=maxcode^post67, maxmaxcode^0'=maxmaxcode^post67, n40^0'=n40^post67, n44^0'=n44^post67, n_bits^0'=n_bits^post67, offset^0'=offset^post67, out_count^0'=out_count^post67, r_off32^0'=r_off32^post67, rat26^0'=rat26^post67, ratio^0'=ratio^post67, ret_getbyte18^0'=ret_getbyte18^post67, ret_getbyte25^0'=ret_getbyte25^post67, seed2^0'=seed2^post67, tabort4^0'=tabort4^post67, tmp12^0'=tmp12^post67, tmp___014^0'=tmp___014^post67, tmp___017^0'=tmp___017^post67, tmp___024^0'=tmp___024^post67, tmp___115^0'=tmp___115^post67, (-maxbits^post67+maxbits^0 == 0 /\ -n40^post67+n40^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post67 == 0 /\ c37^0-c37^post67 == 0 /\ -in_count^post67+in_count^0 == 0 /\ tabort4^0-tabort4^post67 == 0 /\ -clear_flg^post67+clear_flg^0 == 0 /\ -checkpoint^post67+checkpoint^0 == 0 /\ -bytes_out^post67+bytes_out^0 == 0 /\ -hsize___019^post67+hsize___019^0 == 0 /\ -i21^post67+i21^0 == 0 /\ -__const_65536^post67+__const_65536^0 == 0 /\ -ratio^post67+ratio^0 == 0 /\ ent8^0-ent8^post67 == 0 /\ hsize___027^0-hsize___027^post67 == 0 /\ out_count^0-out_count^post67 == 0 /\ c7^0-c7^post67 == 0 /\ -hsize^post67+hsize^0 == 0 /\ __const_8388607^0-__const_8388607^post67 == 0 /\ exit_stat^0-exit_stat^post67 == 0 /\ -i45^post67+i45^0 == 0 /\ 1+bits33^0 <= 0 /\ __const_16^0-__const_16^post67 == 0 /\ maxmaxcode^0-maxmaxcode^post67 == 0 /\ apsim_bound11113^0-apsim_bound11113^post67 == 0 /\ -__const_8^post67+__const_8^0 == 0 /\ -offset^post67+offset^0 == 0 /\ -r_off32^post67+r_off32^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post67 == 0 /\ tmp12^0-tmp12^post67 == 0 /\ __const_9^0-__const_9^post67 == 0 /\ -__const_429496^post67+__const_429496^0 == 0 /\ m122^0-m122^post67 == 0 /\ -__const_2147483647^post67+__const_2147483647^0 == 0 /\ -__const_10000^post67+__const_10000^0 == 0 /\ -count^post67+count^0 == 0 /\ -fcode5^post67+fcode5^0 == 0 /\ -disp9^post67+disp9^0 == 0 /\ -__const_256^post67+__const_256^0 == 0 /\ -tmp___024^post67+tmp___024^0 == 0 /\ -tmp___115^post67+tmp___115^0 == 0 /\ bits33^0-bits33^post67 == 0 /\ n44^0-n44^post67 == 0 /\ -hsize_reg10^post67+hsize_reg10^0 == 0 /\ maxcode^0-maxcode^post67 == 0 /\ -tmp___014^post67+tmp___014^0 == 0 /\ apsim_incnt^0-apsim_incnt^post67 == 0 /\ -block_compress^post67+block_compress^0 == 0 /\ hshift11^0-hshift11^post67 == 0 /\ tmp___017^0-tmp___017^post67 == 0 /\ rat26^0-rat26^post67 == 0 /\ free_ent^0-free_ent^post67 == 0 /\ -i29^post67+i29^0 == 0 /\ -seed2^post67+seed2^0 == 0 /\ -i41^post67+i41^0 == 0 /\ -incnt^post67+incnt^0 == 0 /\ code31^0-code31^post67 == 0 /\ __const_53^0-__const_53^post67 == 0 /\ __const_257^0-__const_257^post67 == 0 /\ -n_bits^post67+n_bits^0 == 0 /\ -__const_50^post67+__const_50^0 == 0 /\ i6^0-i6^post67 == 0 /\ -m130^post67+m130^0 == 0 /\ i3^0-i3^post67 == 0), cost: 1
	New rule:
	l49 -> l48 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+bits33^0 <= 0), cost: 1
	
		propagated equality maxbits^post67 = maxbits^0
		
		propagated equality n40^post67 = n40^0
		
		propagated equality ret_getbyte25^post67 = ret_getbyte25^0
		
		propagated equality c37^post67 = c37^0
		
		propagated equality in_count^post67 = in_count^0
		
		propagated equality tabort4^post67 = tabort4^0
		
		propagated equality clear_flg^post67 = clear_flg^0
		
		propagated equality checkpoint^post67 = checkpoint^0
		
		propagated equality bytes_out^post67 = bytes_out^0
		
		propagated equality hsize___019^post67 = hsize___019^0
		
		propagated equality i21^post67 = i21^0
		
		propagated equality __const_65536^post67 = __const_65536^0
		
		propagated equality ratio^post67 = ratio^0
		
		propagated equality ent8^post67 = ent8^0
		
		propagated equality hsize___027^post67 = hsize___027^0
		
		propagated equality out_count^post67 = out_count^0
		
		propagated equality c7^post67 = c7^0
		
		propagated equality hsize^post67 = hsize^0
		
		propagated equality __const_8388607^post67 = __const_8388607^0
		
		propagated equality exit_stat^post67 = exit_stat^0
		
		propagated equality i45^post67 = i45^0
		
		propagated equality __const_16^post67 = __const_16^0
		
		propagated equality maxmaxcode^post67 = maxmaxcode^0
		
		propagated equality apsim_bound11113^post67 = apsim_bound11113^0
		
		propagated equality __const_8^post67 = __const_8^0
		
		propagated equality offset^post67 = offset^0
		
		propagated equality r_off32^post67 = r_off32^0
		
		propagated equality ret_getbyte18^post67 = ret_getbyte18^0
		
		propagated equality tmp12^post67 = tmp12^0
		
		propagated equality __const_9^post67 = __const_9^0
		
		propagated equality __const_429496^post67 = __const_429496^0
		
		propagated equality m122^post67 = m122^0
		
		propagated equality __const_2147483647^post67 = __const_2147483647^0
		
		propagated equality __const_10000^post67 = __const_10000^0
		
		propagated equality count^post67 = count^0
		
		propagated equality fcode5^post67 = fcode5^0
		
		propagated equality disp9^post67 = disp9^0
		
		propagated equality __const_256^post67 = __const_256^0
		
		propagated equality tmp___024^post67 = tmp___024^0
		
		propagated equality tmp___115^post67 = tmp___115^0
		
		propagated equality bits33^post67 = bits33^0
		
		propagated equality n44^post67 = n44^0
		
		propagated equality hsize_reg10^post67 = hsize_reg10^0
		
		propagated equality maxcode^post67 = maxcode^0
		
		propagated equality tmp___014^post67 = tmp___014^0
		
		propagated equality apsim_incnt^post67 = apsim_incnt^0
		
		propagated equality block_compress^post67 = block_compress^0
		
		propagated equality hshift11^post67 = hshift11^0
		
		propagated equality tmp___017^post67 = tmp___017^0
		
		propagated equality rat26^post67 = rat26^0
		
		propagated equality free_ent^post67 = free_ent^0
		
		propagated equality i29^post67 = i29^0
		
		propagated equality seed2^post67 = seed2^0
		
		propagated equality i41^post67 = i41^0
		
		propagated equality incnt^post67 = incnt^0
		
		propagated equality code31^post67 = code31^0
		
		propagated equality __const_53^post67 = __const_53^0
		
		propagated equality __const_257^post67 = __const_257^0
		
		propagated equality n_bits^post67 = n_bits^0
		
		propagated equality __const_50^post67 = __const_50^0
		
		propagated equality i6^post67 = i6^0
		
		propagated equality m130^post67 = m130^0
		
		propagated equality i3^post67 = i3^0
		
	Simplified Guard

	Original rule:
	l49 -> l48 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+bits33^0 <= 0), cost: 1
	New rule:
	l49 -> l48 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+bits33^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l49 -> l48 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+bits33^0 <= 0, cost: 1
	New rule:
	l49 -> l48 : 1+bits33^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l50 -> l49 : __const_10000^0'=__const_10000^post68, __const_16^0'=__const_16^post68, __const_2147483647^0'=__const_2147483647^post68, __const_256^0'=__const_256^post68, __const_257^0'=__const_257^post68, __const_429496^0'=__const_429496^post68, __const_50^0'=__const_50^post68, __const_53^0'=__const_53^post68, __const_65536^0'=__const_65536^post68, __const_8388607^0'=__const_8388607^post68, __const_8^0'=__const_8^post68, __const_9^0'=__const_9^post68, apsim_bound11113^0'=apsim_bound11113^post68, apsim_incnt^0'=apsim_incnt^post68, bits33^0'=bits33^post68, block_compress^0'=block_compress^post68, bytes_out^0'=bytes_out^post68, c37^0'=c37^post68, c7^0'=c7^post68, checkpoint^0'=checkpoint^post68, clear_flg^0'=clear_flg^post68, code31^0'=code31^post68, count^0'=count^post68, disp9^0'=disp9^post68, ent8^0'=ent8^post68, exit_stat^0'=exit_stat^post68, fcode5^0'=fcode5^post68, free_ent^0'=free_ent^post68, hshift11^0'=hshift11^post68, hsize^0'=hsize^post68, hsize___019^0'=hsize___019^post68, hsize___027^0'=hsize___027^post68, hsize_reg10^0'=hsize_reg10^post68, i21^0'=i21^post68, i29^0'=i29^post68, i3^0'=i3^post68, i41^0'=i41^post68, i45^0'=i45^post68, i6^0'=i6^post68, in_count^0'=in_count^post68, incnt^0'=incnt^post68, m122^0'=m122^post68, m130^0'=m130^post68, maxbits^0'=maxbits^post68, maxcode^0'=maxcode^post68, maxmaxcode^0'=maxmaxcode^post68, n40^0'=n40^post68, n44^0'=n44^post68, n_bits^0'=n_bits^post68, offset^0'=offset^post68, out_count^0'=out_count^post68, r_off32^0'=r_off32^post68, rat26^0'=rat26^post68, ratio^0'=ratio^post68, ret_getbyte18^0'=ret_getbyte18^post68, ret_getbyte25^0'=ret_getbyte25^post68, seed2^0'=seed2^post68, tabort4^0'=tabort4^post68, tmp12^0'=tmp12^post68, tmp___014^0'=tmp___014^post68, tmp___017^0'=tmp___017^post68, tmp___024^0'=tmp___024^post68, tmp___115^0'=tmp___115^post68, (-exit_stat^post68+exit_stat^0 == 0 /\ -disp9^post68+disp9^0 == 0 /\ -count^post68+count^0 == 0 /\ i29^0-i29^post68 == 0 /\ -tmp___024^post68+tmp___024^0 == 0 /\ -__const_256^post68+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post68 == 0 /\ apsim_bound11113^0-apsim_bound11113^post68 == 0 /\ -fcode5^post68+fcode5^0 == 0 /\ __const_257^0-__const_257^post68 == 0 /\ __const_9^0-__const_9^post68 == 0 /\ -bytes_out^post68+bytes_out^0 == 0 /\ -tmp___014^post68+tmp___014^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post68 == 0 /\ c37^0-c37^post68 == 0 /\ -i41^post68+i41^0 == 0 /\ -seed2^post68+seed2^0 == 0 /\ tmp___115^0-tmp___115^post68 == 0 /\ bits33^0-bits33^post68 == 0 /\ n44^0-n44^post68 == 0 /\ hsize___027^0-hsize___027^post68 == 0 /\ m130^0-m130^post68 == 0 /\ -incnt^post68+incnt^0 == 0 /\ hsize___019^0-hsize___019^post68 == 0 /\ i45^0-i45^post68 == 0 /\ c7^0-c7^post68 == 0 /\ code31^0-code31^post68 == 0 /\ maxcode^0-maxcode^post68 == 0 /\ __const_10000^0-__const_10000^post68 == 0 /\ apsim_incnt^0-apsim_incnt^post68 == 0 /\ -__const_50^post68+__const_50^0 == 0 /\ hshift11^0-hshift11^post68 == 0 /\ -n40^post68+n40^0 == 0 /\ -checkpoint^post68+checkpoint^0 == 0 /\ tmp___017^0-tmp___017^post68 == 0 /\ __const_65536^0-__const_65536^post68 == 0 /\ free_ent^0-free_ent^post68 == 0 /\ -ratio^post68+ratio^0 == 0 /\ rat26^0-rat26^post68 == 0 /\ -clear_flg^post68+clear_flg^0 == 0 /\ -ret_getbyte18^post68+ret_getbyte18^0 == 0 /\ -in_count^post68+in_count^0 == 0 /\ __const_16^0-__const_16^post68 == 0 /\ -i21^post68+i21^0 == 0 /\ -i6^post68+i6^0 == 0 /\ -hsize_reg10^post68+hsize_reg10^0 == 0 /\ __const_53^0-__const_53^post68 == 0 /\ -hsize^post68+hsize^0 == 0 /\ tmp12^0-tmp12^post68 == 0 /\ -i3^post68+i3^0 == 0 /\ -n_bits^post68+n_bits^0 == 0 /\ m122^0-m122^post68 == 0 /\ __const_8^0-__const_8^post68 == 0 /\ block_compress^0-block_compress^post68 == 0 /\ -tabort4^post68+tabort4^0 == 0 /\ ent8^0-ent8^post68 == 0 /\ out_count^0-out_count^post68 == 0 /\ -__const_8388607^post68+__const_8388607^0 == 0 /\ __const_429496^0-__const_429496^post68 == 0 /\ offset^0-offset^post68 == 0 /\ -r_off32^post68+r_off32^0 == 0 /\ 1+bits33^0-__const_8^0 <= 0 /\ __const_2147483647^0-__const_2147483647^post68 == 0 /\ -maxbits^post68+maxbits^0 == 0), cost: 1
	New rule:
	l50 -> l49 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+bits33^0-__const_8^0 <= 0), cost: 1
	
		propagated equality exit_stat^post68 = exit_stat^0
		
		propagated equality disp9^post68 = disp9^0
		
		propagated equality count^post68 = count^0
		
		propagated equality i29^post68 = i29^0
		
		propagated equality tmp___024^post68 = tmp___024^0
		
		propagated equality __const_256^post68 = __const_256^0
		
		propagated equality maxmaxcode^post68 = maxmaxcode^0
		
		propagated equality apsim_bound11113^post68 = apsim_bound11113^0
		
		propagated equality fcode5^post68 = fcode5^0
		
		propagated equality __const_257^post68 = __const_257^0
		
		propagated equality __const_9^post68 = __const_9^0
		
		propagated equality bytes_out^post68 = bytes_out^0
		
		propagated equality tmp___014^post68 = tmp___014^0
		
		propagated equality ret_getbyte25^post68 = ret_getbyte25^0
		
		propagated equality c37^post68 = c37^0
		
		propagated equality i41^post68 = i41^0
		
		propagated equality seed2^post68 = seed2^0
		
		propagated equality tmp___115^post68 = tmp___115^0
		
		propagated equality bits33^post68 = bits33^0
		
		propagated equality n44^post68 = n44^0
		
		propagated equality hsize___027^post68 = hsize___027^0
		
		propagated equality m130^post68 = m130^0
		
		propagated equality incnt^post68 = incnt^0
		
		propagated equality hsize___019^post68 = hsize___019^0
		
		propagated equality i45^post68 = i45^0
		
		propagated equality c7^post68 = c7^0
		
		propagated equality code31^post68 = code31^0
		
		propagated equality maxcode^post68 = maxcode^0
		
		propagated equality __const_10000^post68 = __const_10000^0
		
		propagated equality apsim_incnt^post68 = apsim_incnt^0
		
		propagated equality __const_50^post68 = __const_50^0
		
		propagated equality hshift11^post68 = hshift11^0
		
		propagated equality n40^post68 = n40^0
		
		propagated equality checkpoint^post68 = checkpoint^0
		
		propagated equality tmp___017^post68 = tmp___017^0
		
		propagated equality __const_65536^post68 = __const_65536^0
		
		propagated equality free_ent^post68 = free_ent^0
		
		propagated equality ratio^post68 = ratio^0
		
		propagated equality rat26^post68 = rat26^0
		
		propagated equality clear_flg^post68 = clear_flg^0
		
		propagated equality ret_getbyte18^post68 = ret_getbyte18^0
		
		propagated equality in_count^post68 = in_count^0
		
		propagated equality __const_16^post68 = __const_16^0
		
		propagated equality i21^post68 = i21^0
		
		propagated equality i6^post68 = i6^0
		
		propagated equality hsize_reg10^post68 = hsize_reg10^0
		
		propagated equality __const_53^post68 = __const_53^0
		
		propagated equality hsize^post68 = hsize^0
		
		propagated equality tmp12^post68 = tmp12^0
		
		propagated equality i3^post68 = i3^0
		
		propagated equality n_bits^post68 = n_bits^0
		
		propagated equality m122^post68 = m122^0
		
		propagated equality __const_8^post68 = __const_8^0
		
		propagated equality block_compress^post68 = block_compress^0
		
		propagated equality tabort4^post68 = tabort4^0
		
		propagated equality ent8^post68 = ent8^0
		
		propagated equality out_count^post68 = out_count^0
		
		propagated equality __const_8388607^post68 = __const_8388607^0
		
		propagated equality __const_429496^post68 = __const_429496^0
		
		propagated equality offset^post68 = offset^0
		
		propagated equality r_off32^post68 = r_off32^0
		
		propagated equality __const_2147483647^post68 = __const_2147483647^0
		
		propagated equality maxbits^post68 = maxbits^0
		
	Simplified Guard

	Original rule:
	l50 -> l49 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+bits33^0-__const_8^0 <= 0), cost: 1
	New rule:
	l50 -> l49 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+bits33^0-__const_8^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l50 -> l49 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+bits33^0-__const_8^0 <= 0, cost: 1
	New rule:
	l50 -> l49 : 1+bits33^0-__const_8^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l50 -> l49 : __const_10000^0'=__const_10000^post69, __const_16^0'=__const_16^post69, __const_2147483647^0'=__const_2147483647^post69, __const_256^0'=__const_256^post69, __const_257^0'=__const_257^post69, __const_429496^0'=__const_429496^post69, __const_50^0'=__const_50^post69, __const_53^0'=__const_53^post69, __const_65536^0'=__const_65536^post69, __const_8388607^0'=__const_8388607^post69, __const_8^0'=__const_8^post69, __const_9^0'=__const_9^post69, apsim_bound11113^0'=apsim_bound11113^post69, apsim_incnt^0'=apsim_incnt^post69, bits33^0'=bits33^post69, block_compress^0'=block_compress^post69, bytes_out^0'=bytes_out^post69, c37^0'=c37^post69, c7^0'=c7^post69, checkpoint^0'=checkpoint^post69, clear_flg^0'=clear_flg^post69, code31^0'=code31^post69, count^0'=count^post69, disp9^0'=disp9^post69, ent8^0'=ent8^post69, exit_stat^0'=exit_stat^post69, fcode5^0'=fcode5^post69, free_ent^0'=free_ent^post69, hshift11^0'=hshift11^post69, hsize^0'=hsize^post69, hsize___019^0'=hsize___019^post69, hsize___027^0'=hsize___027^post69, hsize_reg10^0'=hsize_reg10^post69, i21^0'=i21^post69, i29^0'=i29^post69, i3^0'=i3^post69, i41^0'=i41^post69, i45^0'=i45^post69, i6^0'=i6^post69, in_count^0'=in_count^post69, incnt^0'=incnt^post69, m122^0'=m122^post69, m130^0'=m130^post69, maxbits^0'=maxbits^post69, maxcode^0'=maxcode^post69, maxmaxcode^0'=maxmaxcode^post69, n40^0'=n40^post69, n44^0'=n44^post69, n_bits^0'=n_bits^post69, offset^0'=offset^post69, out_count^0'=out_count^post69, r_off32^0'=r_off32^post69, rat26^0'=rat26^post69, ratio^0'=ratio^post69, ret_getbyte18^0'=ret_getbyte18^post69, ret_getbyte25^0'=ret_getbyte25^post69, seed2^0'=seed2^post69, tabort4^0'=tabort4^post69, tmp12^0'=tmp12^post69, tmp___014^0'=tmp___014^post69, tmp___017^0'=tmp___017^post69, tmp___024^0'=tmp___024^post69, tmp___115^0'=tmp___115^post69, (0 == 0 /\ __const_8388607^0-__const_8388607^post69 == 0 /\ ret_getbyte25^0-ret_getbyte25^post69 == 0 /\ -r_off32^post69+r_off32^0 == 0 /\ -ratio^post69+ratio^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post69 == 0 /\ -clear_flg^post69+clear_flg^0 == 0 /\ i45^0-i45^post69 == 0 /\ c7^0-c7^post69 == 0 /\ -in_count^post69+in_count^0 == 0 /\ -checkpoint^post69+checkpoint^0 == 0 /\ ent8^0-ent8^post69 == 0 /\ __const_9^0-__const_9^post69 == 0 /\ -hsize_reg10^post69+hsize_reg10^0 == 0 /\ maxcode^0-maxcode^post69 == 0 /\ -bits33^0+__const_8^0+bits33^post69 == 0 /\ -hsize___019^post69+hsize___019^0 == 0 /\ -__const_429496^post69+__const_429496^0 == 0 /\ -bytes_out^post69+bytes_out^0 == 0 /\ -maxbits^post69+maxbits^0 == 0 /\ tmp12^0-tmp12^post69 == 0 /\ -disp9^post69+disp9^0 == 0 /\ tabort4^0-tabort4^post69 == 0 /\ -tmp___024^post69+tmp___024^0 == 0 /\ -tmp___014^post69+tmp___014^0 == 0 /\ -exit_stat^post69+exit_stat^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post69 == 0 /\ -i21^post69+i21^0 == 0 /\ hsize___027^0-hsize___027^post69 == 0 /\ maxmaxcode^0-maxmaxcode^post69 == 0 /\ hshift11^0-hshift11^post69 == 0 /\ apsim_incnt^0-apsim_incnt^post69 == 0 /\ -i29^post69+i29^0 == 0 /\ -i3^post69+i3^0 == 0 /\ m122^0-m122^post69 == 0 /\ -i41^post69+i41^0 == 0 /\ n44^0-n44^post69 == 0 /\ __const_65536^0-__const_65536^post69 == 0 /\ -bits33^0+__const_8^0 <= 0 /\ -n_bits^post69+n_bits^0 == 0 /\ -__const_2147483647^post69+__const_2147483647^0 == 0 /\ __const_10000^0-__const_10000^post69 == 0 /\ -__const_256^post69+__const_256^0 == 0 /\ free_ent^0-free_ent^post69 == 0 /\ -offset^post69+offset^0 == 0 /\ -hsize^post69+hsize^0 == 0 /\ -block_compress^post69+block_compress^0 == 0 /\ -m130^post69+m130^0 == 0 /\ -count^post69+count^0 == 0 /\ rat26^0-rat26^post69 == 0 /\ -__const_50^post69+__const_50^0 == 0 /\ __const_8^0-__const_8^post69 == 0 /\ -__const_16^post69+__const_16^0 == 0 /\ -seed2^post69+seed2^0 == 0 /\ -incnt^post69+incnt^0 == 0 /\ -tmp___115^post69+tmp___115^0 == 0 /\ tmp___017^0-tmp___017^post69 == 0 /\ -n40^post69+n40^0 == 0 /\ i6^0-i6^post69 == 0 /\ c37^0-c37^post69 == 0 /\ -fcode5^post69+fcode5^0 == 0 /\ out_count^0-out_count^post69 == 0 /\ __const_257^0-__const_257^post69 == 0 /\ __const_53^0-__const_53^post69 == 0), cost: 1
	New rule:
	l50 -> l49 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0-__const_8^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^post69, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -bits33^0+__const_8^0 <= 0), cost: 1
	
		propagated equality __const_8388607^post69 = __const_8388607^0
		
		propagated equality ret_getbyte25^post69 = ret_getbyte25^0
		
		propagated equality r_off32^post69 = r_off32^0
		
		propagated equality ratio^post69 = ratio^0
		
		propagated equality apsim_bound11113^post69 = apsim_bound11113^0
		
		propagated equality clear_flg^post69 = clear_flg^0
		
		propagated equality i45^post69 = i45^0
		
		propagated equality c7^post69 = c7^0
		
		propagated equality in_count^post69 = in_count^0
		
		propagated equality checkpoint^post69 = checkpoint^0
		
		propagated equality ent8^post69 = ent8^0
		
		propagated equality __const_9^post69 = __const_9^0
		
		propagated equality hsize_reg10^post69 = hsize_reg10^0
		
		propagated equality maxcode^post69 = maxcode^0
		
		propagated equality bits33^post69 = bits33^0-__const_8^0
		
		propagated equality hsize___019^post69 = hsize___019^0
		
		propagated equality __const_429496^post69 = __const_429496^0
		
		propagated equality bytes_out^post69 = bytes_out^0
		
		propagated equality maxbits^post69 = maxbits^0
		
		propagated equality tmp12^post69 = tmp12^0
		
		propagated equality disp9^post69 = disp9^0
		
		propagated equality tabort4^post69 = tabort4^0
		
		propagated equality tmp___024^post69 = tmp___024^0
		
		propagated equality tmp___014^post69 = tmp___014^0
		
		propagated equality exit_stat^post69 = exit_stat^0
		
		propagated equality ret_getbyte18^post69 = ret_getbyte18^0
		
		propagated equality i21^post69 = i21^0
		
		propagated equality hsize___027^post69 = hsize___027^0
		
		propagated equality maxmaxcode^post69 = maxmaxcode^0
		
		propagated equality hshift11^post69 = hshift11^0
		
		propagated equality apsim_incnt^post69 = apsim_incnt^0
		
		propagated equality i29^post69 = i29^0
		
		propagated equality i3^post69 = i3^0
		
		propagated equality m122^post69 = m122^0
		
		propagated equality i41^post69 = i41^0
		
		propagated equality n44^post69 = n44^0
		
		propagated equality __const_65536^post69 = __const_65536^0
		
		propagated equality n_bits^post69 = n_bits^0
		
		propagated equality __const_2147483647^post69 = __const_2147483647^0
		
		propagated equality __const_10000^post69 = __const_10000^0
		
		propagated equality __const_256^post69 = __const_256^0
		
		propagated equality free_ent^post69 = free_ent^0
		
		propagated equality offset^post69 = offset^0
		
		propagated equality hsize^post69 = hsize^0
		
		propagated equality block_compress^post69 = block_compress^0
		
		propagated equality m130^post69 = m130^0
		
		propagated equality count^post69 = count^0
		
		propagated equality rat26^post69 = rat26^0
		
		propagated equality __const_50^post69 = __const_50^0
		
		propagated equality __const_8^post69 = __const_8^0
		
		propagated equality __const_16^post69 = __const_16^0
		
		propagated equality seed2^post69 = seed2^0
		
		propagated equality incnt^post69 = incnt^0
		
		propagated equality tmp___115^post69 = tmp___115^0
		
		propagated equality tmp___017^post69 = tmp___017^0
		
		propagated equality n40^post69 = n40^0
		
		propagated equality i6^post69 = i6^0
		
		propagated equality c37^post69 = c37^0
		
		propagated equality fcode5^post69 = fcode5^0
		
		propagated equality out_count^post69 = out_count^0
		
		propagated equality __const_257^post69 = __const_257^0
		
		propagated equality __const_53^post69 = __const_53^0
		
	Simplified Guard

	Original rule:
	l50 -> l49 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0-__const_8^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^post69, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -bits33^0+__const_8^0 <= 0), cost: 1
	New rule:
	l50 -> l49 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0-__const_8^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^post69, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -bits33^0+__const_8^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l50 -> l49 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0-__const_8^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^post69, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -bits33^0+__const_8^0 <= 0, cost: 1
	New rule:
	l50 -> l49 : bits33^0'=bits33^0-__const_8^0, code31^0'=code31^post69, -bits33^0+__const_8^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l30 -> l31 : __const_10000^0'=__const_10000^post70, __const_16^0'=__const_16^post70, __const_2147483647^0'=__const_2147483647^post70, __const_256^0'=__const_256^post70, __const_257^0'=__const_257^post70, __const_429496^0'=__const_429496^post70, __const_50^0'=__const_50^post70, __const_53^0'=__const_53^post70, __const_65536^0'=__const_65536^post70, __const_8388607^0'=__const_8388607^post70, __const_8^0'=__const_8^post70, __const_9^0'=__const_9^post70, apsim_bound11113^0'=apsim_bound11113^post70, apsim_incnt^0'=apsim_incnt^post70, bits33^0'=bits33^post70, block_compress^0'=block_compress^post70, bytes_out^0'=bytes_out^post70, c37^0'=c37^post70, c7^0'=c7^post70, checkpoint^0'=checkpoint^post70, clear_flg^0'=clear_flg^post70, code31^0'=code31^post70, count^0'=count^post70, disp9^0'=disp9^post70, ent8^0'=ent8^post70, exit_stat^0'=exit_stat^post70, fcode5^0'=fcode5^post70, free_ent^0'=free_ent^post70, hshift11^0'=hshift11^post70, hsize^0'=hsize^post70, hsize___019^0'=hsize___019^post70, hsize___027^0'=hsize___027^post70, hsize_reg10^0'=hsize_reg10^post70, i21^0'=i21^post70, i29^0'=i29^post70, i3^0'=i3^post70, i41^0'=i41^post70, i45^0'=i45^post70, i6^0'=i6^post70, in_count^0'=in_count^post70, incnt^0'=incnt^post70, m122^0'=m122^post70, m130^0'=m130^post70, maxbits^0'=maxbits^post70, maxcode^0'=maxcode^post70, maxmaxcode^0'=maxmaxcode^post70, n40^0'=n40^post70, n44^0'=n44^post70, n_bits^0'=n_bits^post70, offset^0'=offset^post70, out_count^0'=out_count^post70, r_off32^0'=r_off32^post70, rat26^0'=rat26^post70, ratio^0'=ratio^post70, ret_getbyte18^0'=ret_getbyte18^post70, ret_getbyte25^0'=ret_getbyte25^post70, seed2^0'=seed2^post70, tabort4^0'=tabort4^post70, tmp12^0'=tmp12^post70, tmp___014^0'=tmp___014^post70, tmp___017^0'=tmp___017^post70, tmp___024^0'=tmp___024^post70, tmp___115^0'=tmp___115^post70, (-__const_2147483647^post70+__const_2147483647^0 == 0 /\ ent8^0-ent8^post70 == 0 /\ -incnt^post70+incnt^0 == 0 /\ -offset^post70+offset^0 == 0 /\ -__const_16^post70+__const_16^0 == 0 /\ r_off32^0-r_off32^post70 == 0 /\ -apsim_incnt^post70+apsim_incnt^0 == 0 /\ tabort4^0-tabort4^post70 == 0 /\ exit_stat^0-exit_stat^post70 == 0 /\ __const_50^0-__const_50^post70 == 0 /\ hsize___027^0-hsize___027^post70 == 0 /\ -__const_429496^post70+__const_429496^0 == 0 /\ -__const_9^post70+__const_9^0 == 0 /\ -__const_65536^post70+__const_65536^0 == 0 /\ -m130^post70+m130^0 == 0 /\ -maxbits^post70+maxbits^0 == 0 /\ -n40^post70+n40^0 == 0 /\ -i41^post70+i41^0 == 0 /\ -i45^post70+i45^0 == 0 /\ -maxmaxcode^post70+maxmaxcode^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post70 == 0 /\ -clear_flg^post70+clear_flg^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post70 == 0 /\ -in_count^post70+in_count^0 == 0 /\ -__const_8^post70+__const_8^0 == 0 /\ out_count^0-out_count^post70 == 0 /\ -__const_8388607^post70+__const_8388607^0 == 0 /\ -block_compress^post70+block_compress^0 == 0 /\ tmp12^0-tmp12^post70 == 0 /\ -hsize^post70+hsize^0 == 0 /\ i6^0-i6^post70 == 0 /\ __const_257^0-__const_257^post70 == 0 /\ __const_10000^0-__const_10000^post70 == 0 /\ n44^0-n44^post70 == 0 /\ -ret_getbyte25^post70+ret_getbyte25^0 == 0 /\ -tmp___014^post70+tmp___014^0 == 0 /\ -seed2^post70+seed2^0 == 0 /\ n_bits^0-n_bits^post70 == 0 /\ -fcode5^post70+fcode5^0 == 0 /\ m122^0-m122^post70 == 0 /\ maxcode^0-maxcode^post70 == 0 /\ -count^post70+count^0 == 0 /\ -disp9^post70+disp9^0 == 0 /\ -tmp___024^post70+tmp___024^0 == 0 /\ c37^0-c37^post70 == 0 /\ bits33^0-bits33^post70 == 0 /\ -i29^post70+i29^0 == 0 /\ -tmp___115^post70+tmp___115^0 == 0 /\ i3^0-i3^post70 == 0 /\ __const_53^0-__const_53^post70 == 0 /\ code31^0-code31^post70 == 0 /\ -checkpoint^post70+checkpoint^0 == 0 /\ hshift11^0-hshift11^post70 == 0 /\ -i21^post70+i21^0 == 0 /\ tmp___017^0-tmp___017^post70 == 0 /\ -__const_256^post70+__const_256^0 == 0 /\ -hsize_reg10^post70+hsize_reg10^0 == 0 /\ -bytes_out^post70+bytes_out^0 == 0 /\ free_ent^0-free_ent^post70 == 0 /\ rat26^0-rat26^post70 == 0 /\ -ratio^post70+ratio^0 == 0 /\ -hsize___019^post70+hsize___019^0 == 0 /\ -c7^post70+c7^0 == 0), cost: 1
	New rule:
	l30 -> l31 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality __const_2147483647^post70 = __const_2147483647^0
		
		propagated equality ent8^post70 = ent8^0
		
		propagated equality incnt^post70 = incnt^0
		
		propagated equality offset^post70 = offset^0
		
		propagated equality __const_16^post70 = __const_16^0
		
		propagated equality r_off32^post70 = r_off32^0
		
		propagated equality apsim_incnt^post70 = apsim_incnt^0
		
		propagated equality tabort4^post70 = tabort4^0
		
		propagated equality exit_stat^post70 = exit_stat^0
		
		propagated equality __const_50^post70 = __const_50^0
		
		propagated equality hsize___027^post70 = hsize___027^0
		
		propagated equality __const_429496^post70 = __const_429496^0
		
		propagated equality __const_9^post70 = __const_9^0
		
		propagated equality __const_65536^post70 = __const_65536^0
		
		propagated equality m130^post70 = m130^0
		
		propagated equality maxbits^post70 = maxbits^0
		
		propagated equality n40^post70 = n40^0
		
		propagated equality i41^post70 = i41^0
		
		propagated equality i45^post70 = i45^0
		
		propagated equality maxmaxcode^post70 = maxmaxcode^0
		
		propagated equality apsim_bound11113^post70 = apsim_bound11113^0
		
		propagated equality clear_flg^post70 = clear_flg^0
		
		propagated equality ret_getbyte18^post70 = ret_getbyte18^0
		
		propagated equality in_count^post70 = in_count^0
		
		propagated equality __const_8^post70 = __const_8^0
		
		propagated equality out_count^post70 = out_count^0
		
		propagated equality __const_8388607^post70 = __const_8388607^0
		
		propagated equality block_compress^post70 = block_compress^0
		
		propagated equality tmp12^post70 = tmp12^0
		
		propagated equality hsize^post70 = hsize^0
		
		propagated equality i6^post70 = i6^0
		
		propagated equality __const_257^post70 = __const_257^0
		
		propagated equality __const_10000^post70 = __const_10000^0
		
		propagated equality n44^post70 = n44^0
		
		propagated equality ret_getbyte25^post70 = ret_getbyte25^0
		
		propagated equality tmp___014^post70 = tmp___014^0
		
		propagated equality seed2^post70 = seed2^0
		
		propagated equality n_bits^post70 = n_bits^0
		
		propagated equality fcode5^post70 = fcode5^0
		
		propagated equality m122^post70 = m122^0
		
		propagated equality maxcode^post70 = maxcode^0
		
		propagated equality count^post70 = count^0
		
		propagated equality disp9^post70 = disp9^0
		
		propagated equality tmp___024^post70 = tmp___024^0
		
		propagated equality c37^post70 = c37^0
		
		propagated equality bits33^post70 = bits33^0
		
		propagated equality i29^post70 = i29^0
		
		propagated equality tmp___115^post70 = tmp___115^0
		
		propagated equality i3^post70 = i3^0
		
		propagated equality __const_53^post70 = __const_53^0
		
		propagated equality code31^post70 = code31^0
		
		propagated equality checkpoint^post70 = checkpoint^0
		
		propagated equality hshift11^post70 = hshift11^0
		
		propagated equality i21^post70 = i21^0
		
		propagated equality tmp___017^post70 = tmp___017^0
		
		propagated equality __const_256^post70 = __const_256^0
		
		propagated equality hsize_reg10^post70 = hsize_reg10^0
		
		propagated equality bytes_out^post70 = bytes_out^0
		
		propagated equality free_ent^post70 = free_ent^0
		
		propagated equality rat26^post70 = rat26^0
		
		propagated equality ratio^post70 = ratio^0
		
		propagated equality hsize___019^post70 = hsize___019^0
		
		propagated equality c7^post70 = c7^0
		
	Simplified Guard

	Original rule:
	l30 -> l31 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l30 -> l31 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l30 -> l31 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l30 -> l31 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l51 -> l32 : __const_10000^0'=__const_10000^post71, __const_16^0'=__const_16^post71, __const_2147483647^0'=__const_2147483647^post71, __const_256^0'=__const_256^post71, __const_257^0'=__const_257^post71, __const_429496^0'=__const_429496^post71, __const_50^0'=__const_50^post71, __const_53^0'=__const_53^post71, __const_65536^0'=__const_65536^post71, __const_8388607^0'=__const_8388607^post71, __const_8^0'=__const_8^post71, __const_9^0'=__const_9^post71, apsim_bound11113^0'=apsim_bound11113^post71, apsim_incnt^0'=apsim_incnt^post71, bits33^0'=bits33^post71, block_compress^0'=block_compress^post71, bytes_out^0'=bytes_out^post71, c37^0'=c37^post71, c7^0'=c7^post71, checkpoint^0'=checkpoint^post71, clear_flg^0'=clear_flg^post71, code31^0'=code31^post71, count^0'=count^post71, disp9^0'=disp9^post71, ent8^0'=ent8^post71, exit_stat^0'=exit_stat^post71, fcode5^0'=fcode5^post71, free_ent^0'=free_ent^post71, hshift11^0'=hshift11^post71, hsize^0'=hsize^post71, hsize___019^0'=hsize___019^post71, hsize___027^0'=hsize___027^post71, hsize_reg10^0'=hsize_reg10^post71, i21^0'=i21^post71, i29^0'=i29^post71, i3^0'=i3^post71, i41^0'=i41^post71, i45^0'=i45^post71, i6^0'=i6^post71, in_count^0'=in_count^post71, incnt^0'=incnt^post71, m122^0'=m122^post71, m130^0'=m130^post71, maxbits^0'=maxbits^post71, maxcode^0'=maxcode^post71, maxmaxcode^0'=maxmaxcode^post71, n40^0'=n40^post71, n44^0'=n44^post71, n_bits^0'=n_bits^post71, offset^0'=offset^post71, out_count^0'=out_count^post71, r_off32^0'=r_off32^post71, rat26^0'=rat26^post71, ratio^0'=ratio^post71, ret_getbyte18^0'=ret_getbyte18^post71, ret_getbyte25^0'=ret_getbyte25^post71, seed2^0'=seed2^post71, tabort4^0'=tabort4^post71, tmp12^0'=tmp12^post71, tmp___014^0'=tmp___014^post71, tmp___017^0'=tmp___017^post71, tmp___024^0'=tmp___024^post71, tmp___115^0'=tmp___115^post71, (-fcode5^post71+fcode5^0 == 0 /\ free_ent^0-free_ent^post71 == 0 /\ -block_compress^post71+block_compress^0 == 0 /\ -c7^post71+c7^0 == 0 /\ -disp9^post71+disp9^0 == 0 /\ tmp___017^0-tmp___017^post71 == 0 /\ -tmp___115^post71+tmp___115^0 == 0 /\ __const_53^0-__const_53^post71 == 0 /\ m130^0-m130^post71 == 0 /\ tmp___024^0-tmp___024^post71 == 0 /\ ret_getbyte18^0-ret_getbyte18^post71 == 0 /\ -tmp12^post71+tmp12^0 == 0 /\ -seed2^post71+seed2^0 == 0 /\ -tmp___014^post71+tmp___014^0 == 0 /\ -code31^post71+code31^0 == 0 /\ -i21^post71+i21^0 == 0 /\ m122^0-m122^post71 == 0 /\ -apsim_incnt^post71+apsim_incnt^0 == 0 /\ __const_16^0-__const_16^post71 == 0 /\ -i41^post71+i41^0 == 0 /\ -offset^post71+offset^0 == 0 /\ -incnt^post71+incnt^0 == 0 /\ ent8^0-ent8^post71 == 0 /\ __const_10000^0-__const_10000^post71 == 0 /\ r_off32^0-r_off32^post71 == 0 /\ -rat26^post71+rat26^0 == 0 /\ exit_stat^0-exit_stat^post71 == 0 /\ __const_50^0-__const_50^post71 == 0 /\ bytes_out^0-bytes_out^post71 == 0 /\ out_count^0-out_count^post71 == 0 /\ c37^0-c37^post71 == 0 /\ -maxbits^post71+maxbits^0 == 0 /\ count^0-count^post71 == 0 /\ -in_count^post71+in_count^0 == 0 /\ -__const_9^post71+__const_9^0 == 0 /\ __const_256^0-__const_256^post71 == 0 /\ -hsize_reg10^post71+hsize_reg10^0 == 0 /\ -ratio^post71+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post71 == 0 /\ -hsize^post71+hsize^0 == 0 /\ -hsize___019^post71+hsize___019^0 == 0 /\ -n40^post71+n40^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post71 == 0 /\ -__const_65536^post71+__const_65536^0 == 0 /\ __const_257^0-__const_257^post71 == 0 /\ 1+code31^0 <= 0 /\ i6^0-i6^post71 == 0 /\ -__const_2147483647^post71+__const_2147483647^0 == 0 /\ -__const_8^post71+__const_8^0 == 0 /\ tabort4^0-tabort4^post71 == 0 /\ -__const_8388607^post71+__const_8388607^0 == 0 /\ -i29^post71+i29^0 == 0 /\ -ret_getbyte25^post71+ret_getbyte25^0 == 0 /\ bits33^0-bits33^post71 == 0 /\ n44^0-n44^post71 == 0 /\ -i45^post71+i45^0 == 0 /\ hsize___027^0-hsize___027^post71 == 0 /\ maxcode^0-maxcode^post71 == 0 /\ -clear_flg^post71+clear_flg^0 == 0 /\ n_bits^0-n_bits^post71 == 0 /\ i3^0-i3^post71 == 0 /\ hshift11^0-hshift11^post71 == 0 /\ checkpoint^0-checkpoint^post71 == 0 /\ -__const_429496^post71+__const_429496^0 == 0), cost: 1
	New rule:
	l51 -> l32 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+code31^0 <= 0), cost: 1
	
		propagated equality fcode5^post71 = fcode5^0
		
		propagated equality free_ent^post71 = free_ent^0
		
		propagated equality block_compress^post71 = block_compress^0
		
		propagated equality c7^post71 = c7^0
		
		propagated equality disp9^post71 = disp9^0
		
		propagated equality tmp___017^post71 = tmp___017^0
		
		propagated equality tmp___115^post71 = tmp___115^0
		
		propagated equality __const_53^post71 = __const_53^0
		
		propagated equality m130^post71 = m130^0
		
		propagated equality tmp___024^post71 = tmp___024^0
		
		propagated equality ret_getbyte18^post71 = ret_getbyte18^0
		
		propagated equality tmp12^post71 = tmp12^0
		
		propagated equality seed2^post71 = seed2^0
		
		propagated equality tmp___014^post71 = tmp___014^0
		
		propagated equality code31^post71 = code31^0
		
		propagated equality i21^post71 = i21^0
		
		propagated equality m122^post71 = m122^0
		
		propagated equality apsim_incnt^post71 = apsim_incnt^0
		
		propagated equality __const_16^post71 = __const_16^0
		
		propagated equality i41^post71 = i41^0
		
		propagated equality offset^post71 = offset^0
		
		propagated equality incnt^post71 = incnt^0
		
		propagated equality ent8^post71 = ent8^0
		
		propagated equality __const_10000^post71 = __const_10000^0
		
		propagated equality r_off32^post71 = r_off32^0
		
		propagated equality rat26^post71 = rat26^0
		
		propagated equality exit_stat^post71 = exit_stat^0
		
		propagated equality __const_50^post71 = __const_50^0
		
		propagated equality bytes_out^post71 = bytes_out^0
		
		propagated equality out_count^post71 = out_count^0
		
		propagated equality c37^post71 = c37^0
		
		propagated equality maxbits^post71 = maxbits^0
		
		propagated equality count^post71 = count^0
		
		propagated equality in_count^post71 = in_count^0
		
		propagated equality __const_9^post71 = __const_9^0
		
		propagated equality __const_256^post71 = __const_256^0
		
		propagated equality hsize_reg10^post71 = hsize_reg10^0
		
		propagated equality ratio^post71 = ratio^0
		
		propagated equality maxmaxcode^post71 = maxmaxcode^0
		
		propagated equality hsize^post71 = hsize^0
		
		propagated equality hsize___019^post71 = hsize___019^0
		
		propagated equality n40^post71 = n40^0
		
		propagated equality apsim_bound11113^post71 = apsim_bound11113^0
		
		propagated equality __const_65536^post71 = __const_65536^0
		
		propagated equality __const_257^post71 = __const_257^0
		
		propagated equality i6^post71 = i6^0
		
		propagated equality __const_2147483647^post71 = __const_2147483647^0
		
		propagated equality __const_8^post71 = __const_8^0
		
		propagated equality tabort4^post71 = tabort4^0
		
		propagated equality __const_8388607^post71 = __const_8388607^0
		
		propagated equality i29^post71 = i29^0
		
		propagated equality ret_getbyte25^post71 = ret_getbyte25^0
		
		propagated equality bits33^post71 = bits33^0
		
		propagated equality n44^post71 = n44^0
		
		propagated equality i45^post71 = i45^0
		
		propagated equality hsize___027^post71 = hsize___027^0
		
		propagated equality maxcode^post71 = maxcode^0
		
		propagated equality clear_flg^post71 = clear_flg^0
		
		propagated equality n_bits^post71 = n_bits^0
		
		propagated equality i3^post71 = i3^0
		
		propagated equality hshift11^post71 = hshift11^0
		
		propagated equality checkpoint^post71 = checkpoint^0
		
		propagated equality __const_429496^post71 = __const_429496^0
		
	Simplified Guard

	Original rule:
	l51 -> l32 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+code31^0 <= 0), cost: 1
	New rule:
	l51 -> l32 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+code31^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l51 -> l32 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+code31^0 <= 0, cost: 1
	New rule:
	l51 -> l32 : 1+code31^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l51 -> l50 : __const_10000^0'=__const_10000^post72, __const_16^0'=__const_16^post72, __const_2147483647^0'=__const_2147483647^post72, __const_256^0'=__const_256^post72, __const_257^0'=__const_257^post72, __const_429496^0'=__const_429496^post72, __const_50^0'=__const_50^post72, __const_53^0'=__const_53^post72, __const_65536^0'=__const_65536^post72, __const_8388607^0'=__const_8388607^post72, __const_8^0'=__const_8^post72, __const_9^0'=__const_9^post72, apsim_bound11113^0'=apsim_bound11113^post72, apsim_incnt^0'=apsim_incnt^post72, bits33^0'=bits33^post72, block_compress^0'=block_compress^post72, bytes_out^0'=bytes_out^post72, c37^0'=c37^post72, c7^0'=c7^post72, checkpoint^0'=checkpoint^post72, clear_flg^0'=clear_flg^post72, code31^0'=code31^post72, count^0'=count^post72, disp9^0'=disp9^post72, ent8^0'=ent8^post72, exit_stat^0'=exit_stat^post72, fcode5^0'=fcode5^post72, free_ent^0'=free_ent^post72, hshift11^0'=hshift11^post72, hsize^0'=hsize^post72, hsize___019^0'=hsize___019^post72, hsize___027^0'=hsize___027^post72, hsize_reg10^0'=hsize_reg10^post72, i21^0'=i21^post72, i29^0'=i29^post72, i3^0'=i3^post72, i41^0'=i41^post72, i45^0'=i45^post72, i6^0'=i6^post72, in_count^0'=in_count^post72, incnt^0'=incnt^post72, m122^0'=m122^post72, m130^0'=m130^post72, maxbits^0'=maxbits^post72, maxcode^0'=maxcode^post72, maxmaxcode^0'=maxmaxcode^post72, n40^0'=n40^post72, n44^0'=n44^post72, n_bits^0'=n_bits^post72, offset^0'=offset^post72, out_count^0'=out_count^post72, r_off32^0'=r_off32^post72, rat26^0'=rat26^post72, ratio^0'=ratio^post72, ret_getbyte18^0'=ret_getbyte18^post72, ret_getbyte25^0'=ret_getbyte25^post72, seed2^0'=seed2^post72, tabort4^0'=tabort4^post72, tmp12^0'=tmp12^post72, tmp___014^0'=tmp___014^post72, tmp___017^0'=tmp___017^post72, tmp___024^0'=tmp___024^post72, tmp___115^0'=tmp___115^post72, (0 == 0 /\ disp9^0-disp9^post72 == 0 /\ -tabort4^post72+tabort4^0 == 0 /\ -seed2^post72+seed2^0 == 0 /\ -i29^post72+i29^0 == 0 /\ -i41^post72+i41^0 == 0 /\ checkpoint^0-checkpoint^post72 == 0 /\ n40^0-n40^post72 == 0 /\ -__const_8388607^post72+__const_8388607^0 == 0 /\ count^0-count^post72 == 0 /\ out_count^0-out_count^post72 == 0 /\ ret_getbyte25^0-ret_getbyte25^post72 == 0 /\ bits33^post72-bits33^0+__const_8^0-r_off32^post72 == 0 /\ __const_10000^0-__const_10000^post72 == 0 /\ -free_ent^post72+free_ent^0 == 0 /\ -c7^post72+c7^0 == 0 /\ offset^0-offset^post72 == 0 /\ -tmp___024^post72+tmp___024^0 == 0 /\ -ratio^post72+ratio^0 == 0 /\ -__const_2147483647^post72+__const_2147483647^0 == 0 /\ -__const_9^post72+__const_9^0 == 0 /\ i3^0-i3^post72 == 0 /\ -clear_flg^post72+clear_flg^0 == 0 /\ -hsize_reg10^post72+hsize_reg10^0 == 0 /\ hsize___027^0-hsize___027^post72 == 0 /\ -i21^post72+i21^0 == 0 /\ -hsize___019^post72+hsize___019^0 == 0 /\ -code31^0 <= 0 /\ __const_16^0-__const_16^post72 == 0 /\ maxmaxcode^0-maxmaxcode^post72 == 0 /\ -tmp___014^post72+tmp___014^0 == 0 /\ __const_53^0-__const_53^post72 == 0 /\ -n_bits^post72+n_bits^0 == 0 /\ __const_257^0-__const_257^post72 == 0 /\ -i45^post72+i45^0 == 0 /\ -m122^post72+m122^0 == 0 /\ apsim_incnt^0-apsim_incnt^post72 == 0 /\ ret_getbyte18^0-ret_getbyte18^post72 == 0 /\ hshift11^0-hshift11^post72 == 0 /\ -incnt^post72+incnt^0 == 0 /\ __const_256^0-__const_256^post72 == 0 /\ -__const_65536^post72+__const_65536^0 == 0 /\ tmp12^0-tmp12^post72 == 0 /\ tmp___115^0-tmp___115^post72 == 0 /\ n44^0-n44^post72 == 0 /\ -__const_429496^post72+__const_429496^0 == 0 /\ -maxbits^post72+maxbits^0 == 0 /\ m130^0-m130^post72 == 0 /\ -maxcode^post72+maxcode^0 == 0 /\ fcode5^0-fcode5^post72 == 0 /\ bytes_out^0-bytes_out^post72 == 0 /\ -ent8^post72+ent8^0 == 0 /\ -apsim_bound11113^post72+apsim_bound11113^0 == 0 /\ -in_count^post72+in_count^0 == 0 /\ i6^0-i6^post72 == 0 /\ exit_stat^0-exit_stat^post72 == 0 /\ -hsize^post72+hsize^0 == 0 /\ tmp___017^0-tmp___017^post72 == 0 /\ __const_8^0-__const_8^post72 == 0 /\ __const_50^0-__const_50^post72 == 0 /\ rat26^0-rat26^post72 == 0 /\ -block_compress^post72+block_compress^0 == 0 /\ c37^0-c37^post72 == 0), cost: 1
	New rule:
	l51 -> l50 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0-__const_8^0+r_off32^post72, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^post72, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^post72, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -code31^0 <= 0), cost: 1
	
		propagated equality disp9^post72 = disp9^0
		
		propagated equality tabort4^post72 = tabort4^0
		
		propagated equality seed2^post72 = seed2^0
		
		propagated equality i29^post72 = i29^0
		
		propagated equality i41^post72 = i41^0
		
		propagated equality checkpoint^post72 = checkpoint^0
		
		propagated equality n40^post72 = n40^0
		
		propagated equality __const_8388607^post72 = __const_8388607^0
		
		propagated equality count^post72 = count^0
		
		propagated equality out_count^post72 = out_count^0
		
		propagated equality ret_getbyte25^post72 = ret_getbyte25^0
		
		propagated equality bits33^post72 = bits33^0-__const_8^0+r_off32^post72
		
		propagated equality __const_10000^post72 = __const_10000^0
		
		propagated equality free_ent^post72 = free_ent^0
		
		propagated equality c7^post72 = c7^0
		
		propagated equality offset^post72 = offset^0
		
		propagated equality tmp___024^post72 = tmp___024^0
		
		propagated equality ratio^post72 = ratio^0
		
		propagated equality __const_2147483647^post72 = __const_2147483647^0
		
		propagated equality __const_9^post72 = __const_9^0
		
		propagated equality i3^post72 = i3^0
		
		propagated equality clear_flg^post72 = clear_flg^0
		
		propagated equality hsize_reg10^post72 = hsize_reg10^0
		
		propagated equality hsize___027^post72 = hsize___027^0
		
		propagated equality i21^post72 = i21^0
		
		propagated equality hsize___019^post72 = hsize___019^0
		
		propagated equality __const_16^post72 = __const_16^0
		
		propagated equality maxmaxcode^post72 = maxmaxcode^0
		
		propagated equality tmp___014^post72 = tmp___014^0
		
		propagated equality __const_53^post72 = __const_53^0
		
		propagated equality n_bits^post72 = n_bits^0
		
		propagated equality __const_257^post72 = __const_257^0
		
		propagated equality i45^post72 = i45^0
		
		propagated equality m122^post72 = m122^0
		
		propagated equality apsim_incnt^post72 = apsim_incnt^0
		
		propagated equality ret_getbyte18^post72 = ret_getbyte18^0
		
		propagated equality hshift11^post72 = hshift11^0
		
		propagated equality incnt^post72 = incnt^0
		
		propagated equality __const_256^post72 = __const_256^0
		
		propagated equality __const_65536^post72 = __const_65536^0
		
		propagated equality tmp12^post72 = tmp12^0
		
		propagated equality tmp___115^post72 = tmp___115^0
		
		propagated equality n44^post72 = n44^0
		
		propagated equality __const_429496^post72 = __const_429496^0
		
		propagated equality maxbits^post72 = maxbits^0
		
		propagated equality m130^post72 = m130^0
		
		propagated equality maxcode^post72 = maxcode^0
		
		propagated equality fcode5^post72 = fcode5^0
		
		propagated equality bytes_out^post72 = bytes_out^0
		
		propagated equality ent8^post72 = ent8^0
		
		propagated equality apsim_bound11113^post72 = apsim_bound11113^0
		
		propagated equality in_count^post72 = in_count^0
		
		propagated equality i6^post72 = i6^0
		
		propagated equality exit_stat^post72 = exit_stat^0
		
		propagated equality hsize^post72 = hsize^0
		
		propagated equality tmp___017^post72 = tmp___017^0
		
		propagated equality __const_8^post72 = __const_8^0
		
		propagated equality __const_50^post72 = __const_50^0
		
		propagated equality rat26^post72 = rat26^0
		
		propagated equality block_compress^post72 = block_compress^0
		
		propagated equality c37^post72 = c37^0
		
	Simplified Guard

	Original rule:
	l51 -> l50 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0-__const_8^0+r_off32^post72, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^post72, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^post72, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -code31^0 <= 0), cost: 1
	New rule:
	l51 -> l50 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0-__const_8^0+r_off32^post72, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^post72, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^post72, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -code31^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l51 -> l50 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0-__const_8^0+r_off32^post72, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^post72, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^post72, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -code31^0 <= 0, cost: 1
	New rule:
	l51 -> l50 : bits33^0'=bits33^0-__const_8^0+r_off32^post72, code31^0'=code31^post72, r_off32^0'=r_off32^post72, -code31^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l14 -> l51 : __const_10000^0'=__const_10000^post73, __const_16^0'=__const_16^post73, __const_2147483647^0'=__const_2147483647^post73, __const_256^0'=__const_256^post73, __const_257^0'=__const_257^post73, __const_429496^0'=__const_429496^post73, __const_50^0'=__const_50^post73, __const_53^0'=__const_53^post73, __const_65536^0'=__const_65536^post73, __const_8388607^0'=__const_8388607^post73, __const_8^0'=__const_8^post73, __const_9^0'=__const_9^post73, apsim_bound11113^0'=apsim_bound11113^post73, apsim_incnt^0'=apsim_incnt^post73, bits33^0'=bits33^post73, block_compress^0'=block_compress^post73, bytes_out^0'=bytes_out^post73, c37^0'=c37^post73, c7^0'=c7^post73, checkpoint^0'=checkpoint^post73, clear_flg^0'=clear_flg^post73, code31^0'=code31^post73, count^0'=count^post73, disp9^0'=disp9^post73, ent8^0'=ent8^post73, exit_stat^0'=exit_stat^post73, fcode5^0'=fcode5^post73, free_ent^0'=free_ent^post73, hshift11^0'=hshift11^post73, hsize^0'=hsize^post73, hsize___019^0'=hsize___019^post73, hsize___027^0'=hsize___027^post73, hsize_reg10^0'=hsize_reg10^post73, i21^0'=i21^post73, i29^0'=i29^post73, i3^0'=i3^post73, i41^0'=i41^post73, i45^0'=i45^post73, i6^0'=i6^post73, in_count^0'=in_count^post73, incnt^0'=incnt^post73, m122^0'=m122^post73, m130^0'=m130^post73, maxbits^0'=maxbits^post73, maxcode^0'=maxcode^post73, maxmaxcode^0'=maxmaxcode^post73, n40^0'=n40^post73, n44^0'=n44^post73, n_bits^0'=n_bits^post73, offset^0'=offset^post73, out_count^0'=out_count^post73, r_off32^0'=r_off32^post73, rat26^0'=rat26^post73, ratio^0'=ratio^post73, ret_getbyte18^0'=ret_getbyte18^post73, ret_getbyte25^0'=ret_getbyte25^post73, seed2^0'=seed2^post73, tabort4^0'=tabort4^post73, tmp12^0'=tmp12^post73, tmp___014^0'=tmp___014^post73, tmp___017^0'=tmp___017^post73, tmp___024^0'=tmp___024^post73, tmp___115^0'=tmp___115^post73, (__const_8^0-__const_8^post73 == 0 /\ -__const_65536^post73+__const_65536^0 == 0 /\ -hsize___019^post73+hsize___019^0 == 0 /\ rat26^0-rat26^post73 == 0 /\ -hsize_reg10^post73+hsize_reg10^0 == 0 /\ i3^0-i3^post73 == 0 /\ hsize___027^0-hsize___027^post73 == 0 /\ -maxcode^post73+maxcode^0 == 0 /\ -hsize^post73+hsize^0 == 0 /\ r_off32^post73-offset^0 == 0 /\ -__const_256^post73+__const_256^0 == 0 /\ i21^0-i21^post73 == 0 /\ exit_stat^0-exit_stat^post73 == 0 /\ -m122^post73+m122^0 == 0 /\ -apsim_bound11113^post73+apsim_bound11113^0 == 0 /\ -__const_10000^post73+__const_10000^0 == 0 /\ checkpoint^0-checkpoint^post73 == 0 /\ -__const_9^post73+__const_9^0 == 0 /\ __const_50^0-__const_50^post73 == 0 /\ __const_257^0-__const_257^post73 == 0 /\ -__const_8388607^post73+__const_8388607^0 == 0 /\ -__const_257^0+free_ent^post73 == 0 /\ count^0-count^post73 == 0 /\ tmp___014^0-tmp___014^post73 == 0 /\ out_count^0-out_count^post73 == 0 /\ maxmaxcode^0-maxmaxcode^post73 == 0 /\ -ret_getbyte18^post73+ret_getbyte18^0 == 0 /\ -n_bits^post73+n_bits^0 == 0 /\ incnt^0-incnt^post73 == 0 /\ n40^0-n40^post73 == 0 /\ offset^0-offset^post73 == 0 /\ -in_count^post73+in_count^0 == 0 /\ tmp12^0-tmp12^post73 == 0 /\ maxbits^0-maxbits^post73 == 0 /\ i6^0-i6^post73 == 0 /\ __const_16^0-__const_16^post73 == 0 /\ -1+clear_flg^post73 == 0 /\ -ratio^post73+ratio^0 == 0 /\ -c7^post73+c7^0 == 0 /\ -ent8^post73+ent8^0 == 0 /\ -block_compress^post73+block_compress^0 == 0 /\ -tmp___017^post73+tmp___017^0 == 0 /\ -disp9^post73+disp9^0 == 0 /\ tmp___115^0-tmp___115^post73 == 0 /\ -tmp___024^post73+tmp___024^0 == 0 /\ hshift11^0-hshift11^post73 == 0 /\ -i45^post73+i45^0 == 0 /\ -tabort4^post73+tabort4^0 == 0 /\ -seed2^post73+seed2^0 == 0 /\ -i29^post73+i29^0 == 0 /\ -i41^post73+i41^0 == 0 /\ apsim_incnt^0-apsim_incnt^post73 == 0 /\ -fcode5^post73+fcode5^0 == 0 /\ bytes_out^0-bytes_out^post73 == 0 /\ i29^0 <= 0 /\ c37^0-c37^post73 == 0 /\ __const_53^0-__const_53^post73 == 0 /\ __const_2147483647^0-__const_2147483647^post73 == 0 /\ -n_bits^0+bits33^post73 == 0 /\ m130^0-m130^post73 == 0 /\ -n44^post73+n44^0 == 0 /\ __const_429496^0-__const_429496^post73 == 0 /\ code31^post73-__const_256^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post73 == 0), cost: 1
	New rule:
	l14 -> l51 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=n_bits^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=1, code31^0'=__const_256^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_257^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=offset^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ i29^0 <= 0), cost: 1
	
		propagated equality __const_8^post73 = __const_8^0
		
		propagated equality __const_65536^post73 = __const_65536^0
		
		propagated equality hsize___019^post73 = hsize___019^0
		
		propagated equality rat26^post73 = rat26^0
		
		propagated equality hsize_reg10^post73 = hsize_reg10^0
		
		propagated equality i3^post73 = i3^0
		
		propagated equality hsize___027^post73 = hsize___027^0
		
		propagated equality maxcode^post73 = maxcode^0
		
		propagated equality hsize^post73 = hsize^0
		
		propagated equality r_off32^post73 = offset^0
		
		propagated equality __const_256^post73 = __const_256^0
		
		propagated equality i21^post73 = i21^0
		
		propagated equality exit_stat^post73 = exit_stat^0
		
		propagated equality m122^post73 = m122^0
		
		propagated equality apsim_bound11113^post73 = apsim_bound11113^0
		
		propagated equality __const_10000^post73 = __const_10000^0
		
		propagated equality checkpoint^post73 = checkpoint^0
		
		propagated equality __const_9^post73 = __const_9^0
		
		propagated equality __const_50^post73 = __const_50^0
		
		propagated equality __const_257^post73 = __const_257^0
		
		propagated equality __const_8388607^post73 = __const_8388607^0
		
		propagated equality free_ent^post73 = __const_257^0
		
		propagated equality count^post73 = count^0
		
		propagated equality tmp___014^post73 = tmp___014^0
		
		propagated equality out_count^post73 = out_count^0
		
		propagated equality maxmaxcode^post73 = maxmaxcode^0
		
		propagated equality ret_getbyte18^post73 = ret_getbyte18^0
		
		propagated equality n_bits^post73 = n_bits^0
		
		propagated equality incnt^post73 = incnt^0
		
		propagated equality n40^post73 = n40^0
		
		propagated equality offset^post73 = offset^0
		
		propagated equality in_count^post73 = in_count^0
		
		propagated equality tmp12^post73 = tmp12^0
		
		propagated equality maxbits^post73 = maxbits^0
		
		propagated equality i6^post73 = i6^0
		
		propagated equality __const_16^post73 = __const_16^0
		
		propagated equality clear_flg^post73 = 1
		
		propagated equality ratio^post73 = ratio^0
		
		propagated equality c7^post73 = c7^0
		
		propagated equality ent8^post73 = ent8^0
		
		propagated equality block_compress^post73 = block_compress^0
		
		propagated equality tmp___017^post73 = tmp___017^0
		
		propagated equality disp9^post73 = disp9^0
		
		propagated equality tmp___115^post73 = tmp___115^0
		
		propagated equality tmp___024^post73 = tmp___024^0
		
		propagated equality hshift11^post73 = hshift11^0
		
		propagated equality i45^post73 = i45^0
		
		propagated equality tabort4^post73 = tabort4^0
		
		propagated equality seed2^post73 = seed2^0
		
		propagated equality i29^post73 = i29^0
		
		propagated equality i41^post73 = i41^0
		
		propagated equality apsim_incnt^post73 = apsim_incnt^0
		
		propagated equality fcode5^post73 = fcode5^0
		
		propagated equality bytes_out^post73 = bytes_out^0
		
		propagated equality c37^post73 = c37^0
		
		propagated equality __const_53^post73 = __const_53^0
		
		propagated equality __const_2147483647^post73 = __const_2147483647^0
		
		propagated equality bits33^post73 = n_bits^0
		
		propagated equality m130^post73 = m130^0
		
		propagated equality n44^post73 = n44^0
		
		propagated equality __const_429496^post73 = __const_429496^0
		
		propagated equality code31^post73 = __const_256^0
		
		propagated equality ret_getbyte25^post73 = ret_getbyte25^0
		
	Simplified Guard

	Original rule:
	l14 -> l51 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=n_bits^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=1, code31^0'=__const_256^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_257^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=offset^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ i29^0 <= 0), cost: 1
	New rule:
	l14 -> l51 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=n_bits^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=1, code31^0'=__const_256^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_257^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=offset^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, i29^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l14 -> l51 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=n_bits^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=1, code31^0'=__const_256^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=__const_257^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=offset^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, i29^0 <= 0, cost: 1
	New rule:
	l14 -> l51 : bits33^0'=n_bits^0, clear_flg^0'=1, code31^0'=__const_256^0, free_ent^0'=__const_257^0, r_off32^0'=offset^0, i29^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l14 -> l13 : __const_10000^0'=__const_10000^post74, __const_16^0'=__const_16^post74, __const_2147483647^0'=__const_2147483647^post74, __const_256^0'=__const_256^post74, __const_257^0'=__const_257^post74, __const_429496^0'=__const_429496^post74, __const_50^0'=__const_50^post74, __const_53^0'=__const_53^post74, __const_65536^0'=__const_65536^post74, __const_8388607^0'=__const_8388607^post74, __const_8^0'=__const_8^post74, __const_9^0'=__const_9^post74, apsim_bound11113^0'=apsim_bound11113^post74, apsim_incnt^0'=apsim_incnt^post74, bits33^0'=bits33^post74, block_compress^0'=block_compress^post74, bytes_out^0'=bytes_out^post74, c37^0'=c37^post74, c7^0'=c7^post74, checkpoint^0'=checkpoint^post74, clear_flg^0'=clear_flg^post74, code31^0'=code31^post74, count^0'=count^post74, disp9^0'=disp9^post74, ent8^0'=ent8^post74, exit_stat^0'=exit_stat^post74, fcode5^0'=fcode5^post74, free_ent^0'=free_ent^post74, hshift11^0'=hshift11^post74, hsize^0'=hsize^post74, hsize___019^0'=hsize___019^post74, hsize___027^0'=hsize___027^post74, hsize_reg10^0'=hsize_reg10^post74, i21^0'=i21^post74, i29^0'=i29^post74, i3^0'=i3^post74, i41^0'=i41^post74, i45^0'=i45^post74, i6^0'=i6^post74, in_count^0'=in_count^post74, incnt^0'=incnt^post74, m122^0'=m122^post74, m130^0'=m130^post74, maxbits^0'=maxbits^post74, maxcode^0'=maxcode^post74, maxmaxcode^0'=maxmaxcode^post74, n40^0'=n40^post74, n44^0'=n44^post74, n_bits^0'=n_bits^post74, offset^0'=offset^post74, out_count^0'=out_count^post74, r_off32^0'=r_off32^post74, rat26^0'=rat26^post74, ratio^0'=ratio^post74, ret_getbyte18^0'=ret_getbyte18^post74, ret_getbyte25^0'=ret_getbyte25^post74, seed2^0'=seed2^post74, tabort4^0'=tabort4^post74, tmp12^0'=tmp12^post74, tmp___014^0'=tmp___014^post74, tmp___017^0'=tmp___017^post74, tmp___024^0'=tmp___024^post74, tmp___115^0'=tmp___115^post74, (exit_stat^0-exit_stat^post74 == 0 /\ tmp12^0-tmp12^post74 == 0 /\ free_ent^0-free_ent^post74 == 0 /\ -clear_flg^post74+clear_flg^0 == 0 /\ __const_53^0-__const_53^post74 == 0 /\ -block_compress^post74+block_compress^0 == 0 /\ -ret_getbyte18^post74+ret_getbyte18^0 == 0 /\ __const_8^0-__const_8^post74 == 0 /\ -n_bits^post74+n_bits^0 == 0 /\ -n44^post74+n44^0 == 0 /\ -c7^post74+c7^0 == 0 /\ n40^0-n40^post74 == 0 /\ -i45^post74+i45^0 == 0 /\ -__const_256^post74+__const_256^0 == 0 /\ -incnt^post74+incnt^0 == 0 /\ -r_off32^post74+r_off32^0 == 0 /\ rat26^0-rat26^post74 == 0 /\ -apsim_bound11113^post74+apsim_bound11113^0 == 0 /\ -code31^post74+code31^0 == 0 /\ tmp___014^0-tmp___014^post74 == 0 /\ -fcode5^post74+fcode5^0 == 0 /\ -maxcode^post74+maxcode^0 == 0 /\ bytes_out^0-bytes_out^post74 == 0 /\ -tmp___017^post74+tmp___017^0 == 0 /\ 1-i29^0 <= 0 /\ -__const_65536^post74+__const_65536^0 == 0 /\ -ent8^post74+ent8^0 == 0 /\ i21^0-i21^post74 == 0 /\ out_count^0-out_count^post74 == 0 /\ __const_9^0-__const_9^post74 == 0 /\ c37^0-c37^post74 == 0 /\ -in_count^post74+in_count^0 == 0 /\ offset^0-offset^post74 == 0 /\ maxmaxcode^0-maxmaxcode^post74 == 0 /\ 1+i29^post74-i29^0 == 0 /\ -__const_8388607^post74+__const_8388607^0 == 0 /\ -hsize_reg10^post74+hsize_reg10^0 == 0 /\ -__const_50^post74+__const_50^0 == 0 /\ __const_16^0-__const_16^post74 == 0 /\ -__const_429496^post74+__const_429496^0 == 0 /\ -hsize^post74+hsize^0 == 0 /\ ratio^0-ratio^post74 == 0 /\ -i41^post74+i41^0 == 0 /\ -__const_2147483647^post74+__const_2147483647^0 == 0 /\ -__const_10000^post74+__const_10000^0 == 0 /\ __const_257^0-__const_257^post74 == 0 /\ ret_getbyte25^0-ret_getbyte25^post74 == 0 /\ hsize___027^0-hsize___027^post74 == 0 /\ m130^0-m130^post74 == 0 /\ seed2^0-seed2^post74 == 0 /\ bits33^0-bits33^post74 == 0 /\ -tabort4^post74+tabort4^0 == 0 /\ -m122^post74+m122^0 == 0 /\ i3^0-i3^post74 == 0 /\ hsize___019^0-hsize___019^post74 == 0 /\ checkpoint^0-checkpoint^post74 == 0 /\ -disp9^post74+disp9^0 == 0 /\ count^0-count^post74 == 0 /\ hshift11^0-hshift11^post74 == 0 /\ tmp___115^0-tmp___115^post74 == 0 /\ maxbits^0-maxbits^post74 == 0 /\ apsim_incnt^0-apsim_incnt^post74 == 0 /\ -tmp___024^post74+tmp___024^0 == 0 /\ i6^0-i6^post74 == 0), cost: 1
	New rule:
	l14 -> l13 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-1+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-i29^0 <= 0), cost: 1
	
		propagated equality exit_stat^post74 = exit_stat^0
		
		propagated equality tmp12^post74 = tmp12^0
		
		propagated equality free_ent^post74 = free_ent^0
		
		propagated equality clear_flg^post74 = clear_flg^0
		
		propagated equality __const_53^post74 = __const_53^0
		
		propagated equality block_compress^post74 = block_compress^0
		
		propagated equality ret_getbyte18^post74 = ret_getbyte18^0
		
		propagated equality __const_8^post74 = __const_8^0
		
		propagated equality n_bits^post74 = n_bits^0
		
		propagated equality n44^post74 = n44^0
		
		propagated equality c7^post74 = c7^0
		
		propagated equality n40^post74 = n40^0
		
		propagated equality i45^post74 = i45^0
		
		propagated equality __const_256^post74 = __const_256^0
		
		propagated equality incnt^post74 = incnt^0
		
		propagated equality r_off32^post74 = r_off32^0
		
		propagated equality rat26^post74 = rat26^0
		
		propagated equality apsim_bound11113^post74 = apsim_bound11113^0
		
		propagated equality code31^post74 = code31^0
		
		propagated equality tmp___014^post74 = tmp___014^0
		
		propagated equality fcode5^post74 = fcode5^0
		
		propagated equality maxcode^post74 = maxcode^0
		
		propagated equality bytes_out^post74 = bytes_out^0
		
		propagated equality tmp___017^post74 = tmp___017^0
		
		propagated equality __const_65536^post74 = __const_65536^0
		
		propagated equality ent8^post74 = ent8^0
		
		propagated equality i21^post74 = i21^0
		
		propagated equality out_count^post74 = out_count^0
		
		propagated equality __const_9^post74 = __const_9^0
		
		propagated equality c37^post74 = c37^0
		
		propagated equality in_count^post74 = in_count^0
		
		propagated equality offset^post74 = offset^0
		
		propagated equality maxmaxcode^post74 = maxmaxcode^0
		
		propagated equality i29^post74 = -1+i29^0
		
		propagated equality __const_8388607^post74 = __const_8388607^0
		
		propagated equality hsize_reg10^post74 = hsize_reg10^0
		
		propagated equality __const_50^post74 = __const_50^0
		
		propagated equality __const_16^post74 = __const_16^0
		
		propagated equality __const_429496^post74 = __const_429496^0
		
		propagated equality hsize^post74 = hsize^0
		
		propagated equality ratio^post74 = ratio^0
		
		propagated equality i41^post74 = i41^0
		
		propagated equality __const_2147483647^post74 = __const_2147483647^0
		
		propagated equality __const_10000^post74 = __const_10000^0
		
		propagated equality __const_257^post74 = __const_257^0
		
		propagated equality ret_getbyte25^post74 = ret_getbyte25^0
		
		propagated equality hsize___027^post74 = hsize___027^0
		
		propagated equality m130^post74 = m130^0
		
		propagated equality seed2^post74 = seed2^0
		
		propagated equality bits33^post74 = bits33^0
		
		propagated equality tabort4^post74 = tabort4^0
		
		propagated equality m122^post74 = m122^0
		
		propagated equality i3^post74 = i3^0
		
		propagated equality hsize___019^post74 = hsize___019^0
		
		propagated equality checkpoint^post74 = checkpoint^0
		
		propagated equality disp9^post74 = disp9^0
		
		propagated equality count^post74 = count^0
		
		propagated equality hshift11^post74 = hshift11^0
		
		propagated equality tmp___115^post74 = tmp___115^0
		
		propagated equality maxbits^post74 = maxbits^0
		
		propagated equality apsim_incnt^post74 = apsim_incnt^0
		
		propagated equality tmp___024^post74 = tmp___024^0
		
		propagated equality i6^post74 = i6^0
		
	Simplified Guard

	Original rule:
	l14 -> l13 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-1+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-i29^0 <= 0), cost: 1
	New rule:
	l14 -> l13 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-1+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-i29^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l14 -> l13 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-1+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-i29^0 <= 0, cost: 1
	New rule:
	l14 -> l13 : i29^0'=-1+i29^0, 1-i29^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l11 -> l13 : __const_10000^0'=__const_10000^post75, __const_16^0'=__const_16^post75, __const_2147483647^0'=__const_2147483647^post75, __const_256^0'=__const_256^post75, __const_257^0'=__const_257^post75, __const_429496^0'=__const_429496^post75, __const_50^0'=__const_50^post75, __const_53^0'=__const_53^post75, __const_65536^0'=__const_65536^post75, __const_8388607^0'=__const_8388607^post75, __const_8^0'=__const_8^post75, __const_9^0'=__const_9^post75, apsim_bound11113^0'=apsim_bound11113^post75, apsim_incnt^0'=apsim_incnt^post75, bits33^0'=bits33^post75, block_compress^0'=block_compress^post75, bytes_out^0'=bytes_out^post75, c37^0'=c37^post75, c7^0'=c7^post75, checkpoint^0'=checkpoint^post75, clear_flg^0'=clear_flg^post75, code31^0'=code31^post75, count^0'=count^post75, disp9^0'=disp9^post75, ent8^0'=ent8^post75, exit_stat^0'=exit_stat^post75, fcode5^0'=fcode5^post75, free_ent^0'=free_ent^post75, hshift11^0'=hshift11^post75, hsize^0'=hsize^post75, hsize___019^0'=hsize___019^post75, hsize___027^0'=hsize___027^post75, hsize_reg10^0'=hsize_reg10^post75, i21^0'=i21^post75, i29^0'=i29^post75, i3^0'=i3^post75, i41^0'=i41^post75, i45^0'=i45^post75, i6^0'=i6^post75, in_count^0'=in_count^post75, incnt^0'=incnt^post75, m122^0'=m122^post75, m130^0'=m130^post75, maxbits^0'=maxbits^post75, maxcode^0'=maxcode^post75, maxmaxcode^0'=maxmaxcode^post75, n40^0'=n40^post75, n44^0'=n44^post75, n_bits^0'=n_bits^post75, offset^0'=offset^post75, out_count^0'=out_count^post75, r_off32^0'=r_off32^post75, rat26^0'=rat26^post75, ratio^0'=ratio^post75, ret_getbyte18^0'=ret_getbyte18^post75, ret_getbyte25^0'=ret_getbyte25^post75, seed2^0'=seed2^post75, tabort4^0'=tabort4^post75, tmp12^0'=tmp12^post75, tmp___014^0'=tmp___014^post75, tmp___017^0'=tmp___017^post75, tmp___024^0'=tmp___024^post75, tmp___115^0'=tmp___115^post75, (m130^0-m130^post75 == 0 /\ -i45^post75+i45^0 == 0 /\ -__const_429496^post75+__const_429496^0 == 0 /\ apsim_incnt^0-apsim_incnt^post75 == 0 /\ -__const_8388607^post75+__const_8388607^0 == 0 /\ hshift11^0-hshift11^post75 == 0 /\ -i41^post75+i41^0 == 0 /\ tmp___115^0-tmp___115^post75 == 0 /\ free_ent^0-free_ent^post75 == 0 /\ i29^post75-__const_16^0-i29^0 == 0 /\ __const_65536^0-__const_65536^post75 == 0 /\ n44^0-n44^post75 == 0 /\ tmp___014^0-tmp___014^post75 == 0 /\ __const_50^0-__const_50^post75 == 0 /\ -clear_flg^post75+clear_flg^0 == 0 /\ -c7^post75+c7^0 == 0 /\ i21^0-i21^post75 == 0 /\ code31^0-code31^post75 == 0 /\ -bytes_out^post75+bytes_out^0 == 0 /\ -maxbits^post75+maxbits^0 == 0 /\ -ret_getbyte18^post75+ret_getbyte18^0 == 0 /\ -tmp___024^post75+tmp___024^0 == 0 /\ exit_stat^0-exit_stat^post75 == 0 /\ -hsize_reg10^post75+hsize_reg10^0 == 0 /\ c37^0-c37^post75 == 0 /\ __const_16^0-__const_16^post75 == 0 /\ __const_8^0-__const_8^post75 == 0 /\ -__const_10000^post75+__const_10000^0 == 0 /\ rat26^0-rat26^post75 == 0 /\ ret_getbyte25^0-ret_getbyte25^post75 == 0 /\ -tabort4^post75+tabort4^0 == 0 /\ -__const_2147483647^post75+__const_2147483647^0 == 0 /\ seed2^0-seed2^post75 == 0 /\ -m122^post75+m122^0 == 0 /\ __const_257^0-__const_257^post75 == 0 /\ -incnt^post75+incnt^0 == 0 /\ n40^0-n40^post75 == 0 /\ hsize___019^0-hsize___019^post75 == 0 /\ -n_bits^post75+n_bits^0 == 0 /\ out_count^0-out_count^post75 == 0 /\ 1+i29^0 <= 0 /\ -i6^post75+i6^0 == 0 /\ ent8^0-ent8^post75 == 0 /\ -in_count^post75+in_count^0 == 0 /\ -count^post75+count^0 == 0 /\ -disp9^post75+disp9^0 == 0 /\ -r_off32^post75+r_off32^0 == 0 /\ -fcode5^post75+fcode5^0 == 0 /\ -block_compress^post75+block_compress^0 == 0 /\ -maxcode^post75+maxcode^0 == 0 /\ -apsim_bound11113^post75+apsim_bound11113^0 == 0 /\ -tmp___017^post75+tmp___017^0 == 0 /\ -ratio^post75+ratio^0 == 0 /\ offset^0-offset^post75 == 0 /\ __const_53^0-__const_53^post75 == 0 /\ i3^0-i3^post75 == 0 /\ -hsize^post75+hsize^0 == 0 /\ tmp12^0-tmp12^post75 == 0 /\ -hsize___027^post75+hsize___027^0 == 0 /\ __const_9^0-__const_9^post75 == 0 /\ -checkpoint^post75+checkpoint^0 == 0 /\ -__const_256^post75+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post75 == 0 /\ bits33^0-bits33^post75 == 0), cost: 1
	New rule:
	l11 -> l13 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=__const_16^0+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i29^0 <= 0), cost: 1
	
		propagated equality m130^post75 = m130^0
		
		propagated equality i45^post75 = i45^0
		
		propagated equality __const_429496^post75 = __const_429496^0
		
		propagated equality apsim_incnt^post75 = apsim_incnt^0
		
		propagated equality __const_8388607^post75 = __const_8388607^0
		
		propagated equality hshift11^post75 = hshift11^0
		
		propagated equality i41^post75 = i41^0
		
		propagated equality tmp___115^post75 = tmp___115^0
		
		propagated equality free_ent^post75 = free_ent^0
		
		propagated equality i29^post75 = __const_16^0+i29^0
		
		propagated equality __const_65536^post75 = __const_65536^0
		
		propagated equality n44^post75 = n44^0
		
		propagated equality tmp___014^post75 = tmp___014^0
		
		propagated equality __const_50^post75 = __const_50^0
		
		propagated equality clear_flg^post75 = clear_flg^0
		
		propagated equality c7^post75 = c7^0
		
		propagated equality i21^post75 = i21^0
		
		propagated equality code31^post75 = code31^0
		
		propagated equality bytes_out^post75 = bytes_out^0
		
		propagated equality maxbits^post75 = maxbits^0
		
		propagated equality ret_getbyte18^post75 = ret_getbyte18^0
		
		propagated equality tmp___024^post75 = tmp___024^0
		
		propagated equality exit_stat^post75 = exit_stat^0
		
		propagated equality hsize_reg10^post75 = hsize_reg10^0
		
		propagated equality c37^post75 = c37^0
		
		propagated equality __const_16^post75 = __const_16^0
		
		propagated equality __const_8^post75 = __const_8^0
		
		propagated equality __const_10000^post75 = __const_10000^0
		
		propagated equality rat26^post75 = rat26^0
		
		propagated equality ret_getbyte25^post75 = ret_getbyte25^0
		
		propagated equality tabort4^post75 = tabort4^0
		
		propagated equality __const_2147483647^post75 = __const_2147483647^0
		
		propagated equality seed2^post75 = seed2^0
		
		propagated equality m122^post75 = m122^0
		
		propagated equality __const_257^post75 = __const_257^0
		
		propagated equality incnt^post75 = incnt^0
		
		propagated equality n40^post75 = n40^0
		
		propagated equality hsize___019^post75 = hsize___019^0
		
		propagated equality n_bits^post75 = n_bits^0
		
		propagated equality out_count^post75 = out_count^0
		
		propagated equality i6^post75 = i6^0
		
		propagated equality ent8^post75 = ent8^0
		
		propagated equality in_count^post75 = in_count^0
		
		propagated equality count^post75 = count^0
		
		propagated equality disp9^post75 = disp9^0
		
		propagated equality r_off32^post75 = r_off32^0
		
		propagated equality fcode5^post75 = fcode5^0
		
		propagated equality block_compress^post75 = block_compress^0
		
		propagated equality maxcode^post75 = maxcode^0
		
		propagated equality apsim_bound11113^post75 = apsim_bound11113^0
		
		propagated equality tmp___017^post75 = tmp___017^0
		
		propagated equality ratio^post75 = ratio^0
		
		propagated equality offset^post75 = offset^0
		
		propagated equality __const_53^post75 = __const_53^0
		
		propagated equality i3^post75 = i3^0
		
		propagated equality hsize^post75 = hsize^0
		
		propagated equality tmp12^post75 = tmp12^0
		
		propagated equality hsize___027^post75 = hsize___027^0
		
		propagated equality __const_9^post75 = __const_9^0
		
		propagated equality checkpoint^post75 = checkpoint^0
		
		propagated equality __const_256^post75 = __const_256^0
		
		propagated equality maxmaxcode^post75 = maxmaxcode^0
		
		propagated equality bits33^post75 = bits33^0
		
	Simplified Guard

	Original rule:
	l11 -> l13 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=__const_16^0+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i29^0 <= 0), cost: 1
	New rule:
	l11 -> l13 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=__const_16^0+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i29^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l11 -> l13 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=__const_16^0+i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i29^0 <= 0, cost: 1
	New rule:
	l11 -> l13 : i29^0'=__const_16^0+i29^0, 1+i29^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l11 -> l10 : __const_10000^0'=__const_10000^post76, __const_16^0'=__const_16^post76, __const_2147483647^0'=__const_2147483647^post76, __const_256^0'=__const_256^post76, __const_257^0'=__const_257^post76, __const_429496^0'=__const_429496^post76, __const_50^0'=__const_50^post76, __const_53^0'=__const_53^post76, __const_65536^0'=__const_65536^post76, __const_8388607^0'=__const_8388607^post76, __const_8^0'=__const_8^post76, __const_9^0'=__const_9^post76, apsim_bound11113^0'=apsim_bound11113^post76, apsim_incnt^0'=apsim_incnt^post76, bits33^0'=bits33^post76, block_compress^0'=block_compress^post76, bytes_out^0'=bytes_out^post76, c37^0'=c37^post76, c7^0'=c7^post76, checkpoint^0'=checkpoint^post76, clear_flg^0'=clear_flg^post76, code31^0'=code31^post76, count^0'=count^post76, disp9^0'=disp9^post76, ent8^0'=ent8^post76, exit_stat^0'=exit_stat^post76, fcode5^0'=fcode5^post76, free_ent^0'=free_ent^post76, hshift11^0'=hshift11^post76, hsize^0'=hsize^post76, hsize___019^0'=hsize___019^post76, hsize___027^0'=hsize___027^post76, hsize_reg10^0'=hsize_reg10^post76, i21^0'=i21^post76, i29^0'=i29^post76, i3^0'=i3^post76, i41^0'=i41^post76, i45^0'=i45^post76, i6^0'=i6^post76, in_count^0'=in_count^post76, incnt^0'=incnt^post76, m122^0'=m122^post76, m130^0'=m130^post76, maxbits^0'=maxbits^post76, maxcode^0'=maxcode^post76, maxmaxcode^0'=maxmaxcode^post76, n40^0'=n40^post76, n44^0'=n44^post76, n_bits^0'=n_bits^post76, offset^0'=offset^post76, out_count^0'=out_count^post76, r_off32^0'=r_off32^post76, rat26^0'=rat26^post76, ratio^0'=ratio^post76, ret_getbyte18^0'=ret_getbyte18^post76, ret_getbyte25^0'=ret_getbyte25^post76, seed2^0'=seed2^post76, tabort4^0'=tabort4^post76, tmp12^0'=tmp12^post76, tmp___014^0'=tmp___014^post76, tmp___017^0'=tmp___017^post76, tmp___024^0'=tmp___024^post76, tmp___115^0'=tmp___115^post76, (-n44^post76+n44^0 == 0 /\ i21^0-i21^post76 == 0 /\ __const_50^0-__const_50^post76 == 0 /\ -r_off32^post76+r_off32^0 == 0 /\ -code31^post76+code31^0 == 0 /\ __const_16^0-__const_16^post76 == 0 /\ -m122^post76+m122^0 == 0 /\ -__const_2147483647^post76+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post76 == 0 /\ i3^0-i3^post76 == 0 /\ -n_bits^post76+n_bits^0 == 0 /\ exit_stat^0-exit_stat^post76 == 0 /\ __const_53^0-__const_53^post76 == 0 /\ __const_8^0-__const_8^post76 == 0 /\ -__const_10000^post76+__const_10000^0 == 0 /\ rat26^0-rat26^post76 == 0 /\ -ent8^post76+ent8^0 == 0 /\ -disp9^post76+disp9^0 == 0 /\ hsize___027^0-hsize___027^post76 == 0 /\ -maxcode^post76+maxcode^0 == 0 /\ __const_256^0-__const_256^post76 == 0 /\ -apsim_bound11113^post76+apsim_bound11113^0 == 0 /\ -tmp___017^post76+tmp___017^0 == 0 /\ -fcode5^post76+fcode5^0 == 0 /\ n40^0-n40^post76 == 0 /\ out_count^0-out_count^post76 == 0 /\ -__const_65536^post76+__const_65536^0 == 0 /\ -hsize^post76+hsize^0 == 0 /\ -i29^0 <= 0 /\ tmp___014^0-tmp___014^post76 == 0 /\ -block_compress^post76+block_compress^0 == 0 /\ bytes_out^0-bytes_out^post76 == 0 /\ offset^0-offset^post76 == 0 /\ -i29^post76+i29^0 == 0 /\ -tabort4^post76+tabort4^0 == 0 /\ maxbits^0-maxbits^post76 == 0 /\ -i41^post76+i41^0 == 0 /\ __const_9^0-__const_9^post76 == 0 /\ -i45^post76+i45^0 == 0 /\ count^0-count^post76 == 0 /\ -__const_8388607^post76+__const_8388607^0 == 0 /\ __const_257^0-__const_257^post76 == 0 /\ c37^0-c37^post76 == 0 /\ ret_getbyte25^0-ret_getbyte25^post76 == 0 /\ maxmaxcode^0-maxmaxcode^post76 == 0 /\ bits33^0-bits33^post76 == 0 /\ -in_count^post76+in_count^0 == 0 /\ hsize___019^0-hsize___019^post76 == 0 /\ -free_ent^post76+free_ent^0 == 0 /\ -ret_getbyte18^post76+ret_getbyte18^0 == 0 /\ -c7^post76+c7^0 == 0 /\ -tmp___024^post76+tmp___024^0 == 0 /\ checkpoint^0-checkpoint^post76 == 0 /\ i6^0-i6^post76 == 0 /\ apsim_incnt^0-apsim_incnt^post76 == 0 /\ -hsize_reg10^post76+hsize_reg10^0 == 0 /\ hshift11^0-hshift11^post76 == 0 /\ -clear_flg^post76+clear_flg^0 == 0 /\ tmp___115^0-tmp___115^post76 == 0 /\ -__const_429496^post76+__const_429496^0 == 0 /\ -incnt^post76+incnt^0 == 0 /\ seed2^0-seed2^post76 == 0 /\ ratio^0-ratio^post76 == 0 /\ m130^0-m130^post76 == 0), cost: 1
	New rule:
	l11 -> l10 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -i29^0 <= 0), cost: 1
	
		propagated equality n44^post76 = n44^0
		
		propagated equality i21^post76 = i21^0
		
		propagated equality __const_50^post76 = __const_50^0
		
		propagated equality r_off32^post76 = r_off32^0
		
		propagated equality code31^post76 = code31^0
		
		propagated equality __const_16^post76 = __const_16^0
		
		propagated equality m122^post76 = m122^0
		
		propagated equality __const_2147483647^post76 = __const_2147483647^0
		
		propagated equality tmp12^post76 = tmp12^0
		
		propagated equality i3^post76 = i3^0
		
		propagated equality n_bits^post76 = n_bits^0
		
		propagated equality exit_stat^post76 = exit_stat^0
		
		propagated equality __const_53^post76 = __const_53^0
		
		propagated equality __const_8^post76 = __const_8^0
		
		propagated equality __const_10000^post76 = __const_10000^0
		
		propagated equality rat26^post76 = rat26^0
		
		propagated equality ent8^post76 = ent8^0
		
		propagated equality disp9^post76 = disp9^0
		
		propagated equality hsize___027^post76 = hsize___027^0
		
		propagated equality maxcode^post76 = maxcode^0
		
		propagated equality __const_256^post76 = __const_256^0
		
		propagated equality apsim_bound11113^post76 = apsim_bound11113^0
		
		propagated equality tmp___017^post76 = tmp___017^0
		
		propagated equality fcode5^post76 = fcode5^0
		
		propagated equality n40^post76 = n40^0
		
		propagated equality out_count^post76 = out_count^0
		
		propagated equality __const_65536^post76 = __const_65536^0
		
		propagated equality hsize^post76 = hsize^0
		
		propagated equality tmp___014^post76 = tmp___014^0
		
		propagated equality block_compress^post76 = block_compress^0
		
		propagated equality bytes_out^post76 = bytes_out^0
		
		propagated equality offset^post76 = offset^0
		
		propagated equality i29^post76 = i29^0
		
		propagated equality tabort4^post76 = tabort4^0
		
		propagated equality maxbits^post76 = maxbits^0
		
		propagated equality i41^post76 = i41^0
		
		propagated equality __const_9^post76 = __const_9^0
		
		propagated equality i45^post76 = i45^0
		
		propagated equality count^post76 = count^0
		
		propagated equality __const_8388607^post76 = __const_8388607^0
		
		propagated equality __const_257^post76 = __const_257^0
		
		propagated equality c37^post76 = c37^0
		
		propagated equality ret_getbyte25^post76 = ret_getbyte25^0
		
		propagated equality maxmaxcode^post76 = maxmaxcode^0
		
		propagated equality bits33^post76 = bits33^0
		
		propagated equality in_count^post76 = in_count^0
		
		propagated equality hsize___019^post76 = hsize___019^0
		
		propagated equality free_ent^post76 = free_ent^0
		
		propagated equality ret_getbyte18^post76 = ret_getbyte18^0
		
		propagated equality c7^post76 = c7^0
		
		propagated equality tmp___024^post76 = tmp___024^0
		
		propagated equality checkpoint^post76 = checkpoint^0
		
		propagated equality i6^post76 = i6^0
		
		propagated equality apsim_incnt^post76 = apsim_incnt^0
		
		propagated equality hsize_reg10^post76 = hsize_reg10^0
		
		propagated equality hshift11^post76 = hshift11^0
		
		propagated equality clear_flg^post76 = clear_flg^0
		
		propagated equality tmp___115^post76 = tmp___115^0
		
		propagated equality __const_429496^post76 = __const_429496^0
		
		propagated equality incnt^post76 = incnt^0
		
		propagated equality seed2^post76 = seed2^0
		
		propagated equality ratio^post76 = ratio^0
		
		propagated equality m130^post76 = m130^0
		
	Simplified Guard

	Original rule:
	l11 -> l10 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -i29^0 <= 0), cost: 1
	New rule:
	l11 -> l10 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -i29^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l11 -> l10 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -i29^0 <= 0, cost: 1
	New rule:
	l11 -> l10 : -i29^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l35 -> l1 : __const_10000^0'=__const_10000^post77, __const_16^0'=__const_16^post77, __const_2147483647^0'=__const_2147483647^post77, __const_256^0'=__const_256^post77, __const_257^0'=__const_257^post77, __const_429496^0'=__const_429496^post77, __const_50^0'=__const_50^post77, __const_53^0'=__const_53^post77, __const_65536^0'=__const_65536^post77, __const_8388607^0'=__const_8388607^post77, __const_8^0'=__const_8^post77, __const_9^0'=__const_9^post77, apsim_bound11113^0'=apsim_bound11113^post77, apsim_incnt^0'=apsim_incnt^post77, bits33^0'=bits33^post77, block_compress^0'=block_compress^post77, bytes_out^0'=bytes_out^post77, c37^0'=c37^post77, c7^0'=c7^post77, checkpoint^0'=checkpoint^post77, clear_flg^0'=clear_flg^post77, code31^0'=code31^post77, count^0'=count^post77, disp9^0'=disp9^post77, ent8^0'=ent8^post77, exit_stat^0'=exit_stat^post77, fcode5^0'=fcode5^post77, free_ent^0'=free_ent^post77, hshift11^0'=hshift11^post77, hsize^0'=hsize^post77, hsize___019^0'=hsize___019^post77, hsize___027^0'=hsize___027^post77, hsize_reg10^0'=hsize_reg10^post77, i21^0'=i21^post77, i29^0'=i29^post77, i3^0'=i3^post77, i41^0'=i41^post77, i45^0'=i45^post77, i6^0'=i6^post77, in_count^0'=in_count^post77, incnt^0'=incnt^post77, m122^0'=m122^post77, m130^0'=m130^post77, maxbits^0'=maxbits^post77, maxcode^0'=maxcode^post77, maxmaxcode^0'=maxmaxcode^post77, n40^0'=n40^post77, n44^0'=n44^post77, n_bits^0'=n_bits^post77, offset^0'=offset^post77, out_count^0'=out_count^post77, r_off32^0'=r_off32^post77, rat26^0'=rat26^post77, ratio^0'=ratio^post77, ret_getbyte18^0'=ret_getbyte18^post77, ret_getbyte25^0'=ret_getbyte25^post77, seed2^0'=seed2^post77, tabort4^0'=tabort4^post77, tmp12^0'=tmp12^post77, tmp___014^0'=tmp___014^post77, tmp___017^0'=tmp___017^post77, tmp___024^0'=tmp___024^post77, tmp___115^0'=tmp___115^post77, (__const_8388607^0-__const_8388607^post77 == 0 /\ tmp___014^0-tmp___014^post77 == 0 /\ -c7^post77+c7^0 == 0 /\ -bytes_out^post77+bytes_out^0 == 0 /\ -block_compress^post77+block_compress^0 == 0 /\ free_ent^0-free_ent^post77 == 0 /\ -ret_getbyte18^post77+ret_getbyte18^0 == 0 /\ -i29^post77+i29^0 == 0 /\ -i45^post77+i45^0 == 0 /\ -m122^post77+m122^0 == 0 /\ -tmp___024^post77+tmp___024^0 == 0 /\ -tmp___017^post77+tmp___017^0 == 0 /\ -i41^post77+i41^0 == 0 /\ m130^0-m130^post77 == 0 /\ -incnt^post77+incnt^0 == 0 /\ tmp12^0-tmp12^post77 == 0 /\ -fcode5^post77+fcode5^0 == 0 /\ rat26^0-rat26^post77 == 0 /\ __const_16^0-__const_16^post77 == 0 /\ i21^0-i21^post77 == 0 /\ code31^0-code31^post77 == 0 /\ __const_8^0-__const_8^post77 == 0 /\ -__const_429496^post77+__const_429496^0 == 0 /\ -n44^post77+n44^0 == 0 /\ -in_count^post77+in_count^0 == 0 /\ -r_off32^post77+r_off32^0 == 0 /\ -clear_flg^post77+clear_flg^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post77 == 0 /\ -hsize_reg10^post77+hsize_reg10^0 == 0 /\ -hsize^post77+hsize^0 == 0 /\ checkpoint^0-checkpoint^post77 == 0 /\ i6^0-i6^post77 == 0 /\ -hsize___027^post77+hsize___027^0 == 0 /\ c37^0-c37^post77 == 0 /\ -disp9^post77+disp9^0 == 0 /\ -count^post77+count^0 == 0 /\ -maxbits^post77+maxbits^0 == 0 /\ -maxcode^post77+maxcode^0 == 0 /\ ent8^0-ent8^post77 == 0 /\ out_count^0-out_count^post77 == 0 /\ maxmaxcode^0-maxmaxcode^post77 == 0 /\ -__const_256^post77+__const_256^0 == 0 /\ __const_9^0-__const_9^post77 == 0 /\ -__const_2147483647^post77+__const_2147483647^0 == 0 /\ n40^0-n40^post77 == 0 /\ -seed2^post77+seed2^0 == 0 /\ offset^0-offset^post77 == 0 /\ -apsim_bound11113^post77+apsim_bound11113^0 == 0 /\ exit_stat^0-exit_stat^post77 == 0 /\ -__const_10000^post77+__const_10000^0 == 0 /\ -tabort4^post77+tabort4^0 == 0 /\ i3^0-i3^post77 == 0 /\ bits33^0-bits33^post77 == 0 /\ ratio^0-ratio^post77 == 0 /\ tmp___115^0-tmp___115^post77 == 0 /\ __const_257^0-__const_257^post77 == 0 /\ hshift11^0-hshift11^post77 == 0 /\ -n_bits^post77+n_bits^0 == 0 /\ -__const_50^post77+__const_50^0 == 0 /\ -__const_65536^post77+__const_65536^0 == 0 /\ __const_53^0-__const_53^post77 == 0 /\ apsim_incnt^0-apsim_incnt^post77 == 0 /\ hsize___019^0-hsize___019^post77 == 0), cost: 1
	New rule:
	l35 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality __const_8388607^post77 = __const_8388607^0
		
		propagated equality tmp___014^post77 = tmp___014^0
		
		propagated equality c7^post77 = c7^0
		
		propagated equality bytes_out^post77 = bytes_out^0
		
		propagated equality block_compress^post77 = block_compress^0
		
		propagated equality free_ent^post77 = free_ent^0
		
		propagated equality ret_getbyte18^post77 = ret_getbyte18^0
		
		propagated equality i29^post77 = i29^0
		
		propagated equality i45^post77 = i45^0
		
		propagated equality m122^post77 = m122^0
		
		propagated equality tmp___024^post77 = tmp___024^0
		
		propagated equality tmp___017^post77 = tmp___017^0
		
		propagated equality i41^post77 = i41^0
		
		propagated equality m130^post77 = m130^0
		
		propagated equality incnt^post77 = incnt^0
		
		propagated equality tmp12^post77 = tmp12^0
		
		propagated equality fcode5^post77 = fcode5^0
		
		propagated equality rat26^post77 = rat26^0
		
		propagated equality __const_16^post77 = __const_16^0
		
		propagated equality i21^post77 = i21^0
		
		propagated equality code31^post77 = code31^0
		
		propagated equality __const_8^post77 = __const_8^0
		
		propagated equality __const_429496^post77 = __const_429496^0
		
		propagated equality n44^post77 = n44^0
		
		propagated equality in_count^post77 = in_count^0
		
		propagated equality r_off32^post77 = r_off32^0
		
		propagated equality clear_flg^post77 = clear_flg^0
		
		propagated equality ret_getbyte25^post77 = ret_getbyte25^0
		
		propagated equality hsize_reg10^post77 = hsize_reg10^0
		
		propagated equality hsize^post77 = hsize^0
		
		propagated equality checkpoint^post77 = checkpoint^0
		
		propagated equality i6^post77 = i6^0
		
		propagated equality hsize___027^post77 = hsize___027^0
		
		propagated equality c37^post77 = c37^0
		
		propagated equality disp9^post77 = disp9^0
		
		propagated equality count^post77 = count^0
		
		propagated equality maxbits^post77 = maxbits^0
		
		propagated equality maxcode^post77 = maxcode^0
		
		propagated equality ent8^post77 = ent8^0
		
		propagated equality out_count^post77 = out_count^0
		
		propagated equality maxmaxcode^post77 = maxmaxcode^0
		
		propagated equality __const_256^post77 = __const_256^0
		
		propagated equality __const_9^post77 = __const_9^0
		
		propagated equality __const_2147483647^post77 = __const_2147483647^0
		
		propagated equality n40^post77 = n40^0
		
		propagated equality seed2^post77 = seed2^0
		
		propagated equality offset^post77 = offset^0
		
		propagated equality apsim_bound11113^post77 = apsim_bound11113^0
		
		propagated equality exit_stat^post77 = exit_stat^0
		
		propagated equality __const_10000^post77 = __const_10000^0
		
		propagated equality tabort4^post77 = tabort4^0
		
		propagated equality i3^post77 = i3^0
		
		propagated equality bits33^post77 = bits33^0
		
		propagated equality ratio^post77 = ratio^0
		
		propagated equality tmp___115^post77 = tmp___115^0
		
		propagated equality __const_257^post77 = __const_257^0
		
		propagated equality hshift11^post77 = hshift11^0
		
		propagated equality n_bits^post77 = n_bits^0
		
		propagated equality __const_50^post77 = __const_50^0
		
		propagated equality __const_65536^post77 = __const_65536^0
		
		propagated equality __const_53^post77 = __const_53^0
		
		propagated equality apsim_incnt^post77 = apsim_incnt^0
		
		propagated equality hsize___019^post77 = hsize___019^0
		
	Simplified Guard

	Original rule:
	l35 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l35 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l35 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l35 -> l1 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l52 -> l53 : __const_10000^0'=__const_10000^post78, __const_16^0'=__const_16^post78, __const_2147483647^0'=__const_2147483647^post78, __const_256^0'=__const_256^post78, __const_257^0'=__const_257^post78, __const_429496^0'=__const_429496^post78, __const_50^0'=__const_50^post78, __const_53^0'=__const_53^post78, __const_65536^0'=__const_65536^post78, __const_8388607^0'=__const_8388607^post78, __const_8^0'=__const_8^post78, __const_9^0'=__const_9^post78, apsim_bound11113^0'=apsim_bound11113^post78, apsim_incnt^0'=apsim_incnt^post78, bits33^0'=bits33^post78, block_compress^0'=block_compress^post78, bytes_out^0'=bytes_out^post78, c37^0'=c37^post78, c7^0'=c7^post78, checkpoint^0'=checkpoint^post78, clear_flg^0'=clear_flg^post78, code31^0'=code31^post78, count^0'=count^post78, disp9^0'=disp9^post78, ent8^0'=ent8^post78, exit_stat^0'=exit_stat^post78, fcode5^0'=fcode5^post78, free_ent^0'=free_ent^post78, hshift11^0'=hshift11^post78, hsize^0'=hsize^post78, hsize___019^0'=hsize___019^post78, hsize___027^0'=hsize___027^post78, hsize_reg10^0'=hsize_reg10^post78, i21^0'=i21^post78, i29^0'=i29^post78, i3^0'=i3^post78, i41^0'=i41^post78, i45^0'=i45^post78, i6^0'=i6^post78, in_count^0'=in_count^post78, incnt^0'=incnt^post78, m122^0'=m122^post78, m130^0'=m130^post78, maxbits^0'=maxbits^post78, maxcode^0'=maxcode^post78, maxmaxcode^0'=maxmaxcode^post78, n40^0'=n40^post78, n44^0'=n44^post78, n_bits^0'=n_bits^post78, offset^0'=offset^post78, out_count^0'=out_count^post78, r_off32^0'=r_off32^post78, rat26^0'=rat26^post78, ratio^0'=ratio^post78, ret_getbyte18^0'=ret_getbyte18^post78, ret_getbyte25^0'=ret_getbyte25^post78, seed2^0'=seed2^post78, tabort4^0'=tabort4^post78, tmp12^0'=tmp12^post78, tmp___014^0'=tmp___014^post78, tmp___017^0'=tmp___017^post78, tmp___024^0'=tmp___024^post78, tmp___115^0'=tmp___115^post78, (0 == 0 /\ tmp___115^0-tmp___115^post78 == 0 /\ __const_50^0-__const_50^post78 == 0 /\ bits33^0-bits33^post78 == 0 /\ -__const_8^post78+__const_8^0 == 0 /\ -apsim_bound11113^post78+apsim_bound11113^0 == 0 /\ -hsize___027^post78+hsize___027^0 == 0 /\ tmp___014^0-tmp___014^post78 == 0 /\ -hsize_reg10^post78+hsize_reg10^0 == 0 /\ n44^0-n44^post78 == 0 /\ hshift11^0-hshift11^post78 == 0 /\ apsim_incnt^0-apsim_incnt^post78 == 0 /\ -hsize^post78+hsize^0 == 0 /\ -__const_429496^post78+__const_429496^0 == 0 /\ __const_53^0-__const_53^post78 == 0 /\ -__const_2147483647^post78+__const_2147483647^0 == 0 /\ -i41^post78+i41^0 == 0 /\ -__const_10000^post78+__const_10000^0 == 0 /\ -n_bits^post78+n_bits^0 == 0 /\ free_ent^0-free_ent^post78 == 0 /\ ret_getbyte25^0-ret_getbyte25^post78 == 0 /\ c37^0-c37^post78 == 0 /\ -incnt^post78+incnt^0 == 0 /\ -__const_65536^post78+__const_65536^0 == 0 /\ -count^post78+count^0 == 0 /\ -fcode5^post78+fcode5^0 == 0 /\ code31^0-code31^post78 == 0 /\ -seed2^post78+seed2^0 == 0 /\ -maxbits^post78+maxbits^0 == 0 /\ __const_16^0-__const_16^post78 == 0 /\ c7^0-c7^post78 == 0 /\ -i29^post78+i29^0 == 0 /\ -tmp___024^post78+tmp___024^0 == 0 /\ tmp12^0-tmp12^post78 == 0 /\ __const_257^0-__const_257^post78 == 0 /\ -in_count^post78+in_count^0 == 0 /\ -__const_8388607^post78+__const_8388607^0 == 0 /\ -i6^post78+i6^0 == 0 /\ hsize___019^0-hsize___019^post78 == 0 /\ -checkpoint^post78+checkpoint^0 == 0 /\ -clear_flg^post78+clear_flg^0 == 0 /\ -block_compress^post78+block_compress^0 == 0 /\ -bytes_out^post78+bytes_out^0 == 0 /\ -ratio^post78+ratio^0 == 0 /\ -ret_getbyte18^post78+ret_getbyte18^0 == 0 /\ i21^0-i21^post78 == 0 /\ -i3^post78+i3^0 == 0 /\ -__const_256^post78+__const_256^0 == 0 /\ out_count^0-out_count^post78 == 0 /\ -m122^post78+m122^0 == 0 /\ __const_9^0-__const_9^post78 == 0 /\ -tabort4^post78+tabort4^0 == 0 /\ -r_off32^post78+r_off32^0 == 0 /\ m130^0-m130^post78 == 0 /\ offset^0-offset^post78 == 0 /\ i45^0-i45^post78 == 0 /\ -exit_stat^post78+exit_stat^0 == 0 /\ -disp9^post78+disp9^0 == 0 /\ ent8^0-ent8^post78 == 0 /\ maxmaxcode^0-maxmaxcode^post78 == 0 /\ -n40^post78+n40^0 == 0 /\ -maxcode^post78+maxcode^0 == 0 /\ -tmp___017^post78+tmp___017^0 == 0), cost: 1
	New rule:
	l52 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post78, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality tmp___115^post78 = tmp___115^0
		
		propagated equality __const_50^post78 = __const_50^0
		
		propagated equality bits33^post78 = bits33^0
		
		propagated equality __const_8^post78 = __const_8^0
		
		propagated equality apsim_bound11113^post78 = apsim_bound11113^0
		
		propagated equality hsize___027^post78 = hsize___027^0
		
		propagated equality tmp___014^post78 = tmp___014^0
		
		propagated equality hsize_reg10^post78 = hsize_reg10^0
		
		propagated equality n44^post78 = n44^0
		
		propagated equality hshift11^post78 = hshift11^0
		
		propagated equality apsim_incnt^post78 = apsim_incnt^0
		
		propagated equality hsize^post78 = hsize^0
		
		propagated equality __const_429496^post78 = __const_429496^0
		
		propagated equality __const_53^post78 = __const_53^0
		
		propagated equality __const_2147483647^post78 = __const_2147483647^0
		
		propagated equality i41^post78 = i41^0
		
		propagated equality __const_10000^post78 = __const_10000^0
		
		propagated equality n_bits^post78 = n_bits^0
		
		propagated equality free_ent^post78 = free_ent^0
		
		propagated equality ret_getbyte25^post78 = ret_getbyte25^0
		
		propagated equality c37^post78 = c37^0
		
		propagated equality incnt^post78 = incnt^0
		
		propagated equality __const_65536^post78 = __const_65536^0
		
		propagated equality count^post78 = count^0
		
		propagated equality fcode5^post78 = fcode5^0
		
		propagated equality code31^post78 = code31^0
		
		propagated equality seed2^post78 = seed2^0
		
		propagated equality maxbits^post78 = maxbits^0
		
		propagated equality __const_16^post78 = __const_16^0
		
		propagated equality c7^post78 = c7^0
		
		propagated equality i29^post78 = i29^0
		
		propagated equality tmp___024^post78 = tmp___024^0
		
		propagated equality tmp12^post78 = tmp12^0
		
		propagated equality __const_257^post78 = __const_257^0
		
		propagated equality in_count^post78 = in_count^0
		
		propagated equality __const_8388607^post78 = __const_8388607^0
		
		propagated equality i6^post78 = i6^0
		
		propagated equality hsize___019^post78 = hsize___019^0
		
		propagated equality checkpoint^post78 = checkpoint^0
		
		propagated equality clear_flg^post78 = clear_flg^0
		
		propagated equality block_compress^post78 = block_compress^0
		
		propagated equality bytes_out^post78 = bytes_out^0
		
		propagated equality ratio^post78 = ratio^0
		
		propagated equality ret_getbyte18^post78 = ret_getbyte18^0
		
		propagated equality i21^post78 = i21^0
		
		propagated equality i3^post78 = i3^0
		
		propagated equality __const_256^post78 = __const_256^0
		
		propagated equality out_count^post78 = out_count^0
		
		propagated equality m122^post78 = m122^0
		
		propagated equality __const_9^post78 = __const_9^0
		
		propagated equality tabort4^post78 = tabort4^0
		
		propagated equality r_off32^post78 = r_off32^0
		
		propagated equality m130^post78 = m130^0
		
		propagated equality offset^post78 = offset^0
		
		propagated equality i45^post78 = i45^0
		
		propagated equality exit_stat^post78 = exit_stat^0
		
		propagated equality disp9^post78 = disp9^0
		
		propagated equality ent8^post78 = ent8^0
		
		propagated equality maxmaxcode^post78 = maxmaxcode^0
		
		propagated equality n40^post78 = n40^0
		
		propagated equality maxcode^post78 = maxcode^0
		
		propagated equality tmp___017^post78 = tmp___017^0
		
	Simplified Guard

	Original rule:
	l52 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post78, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l52 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post78, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l52 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post78, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l52 -> l53 : rat26^0'=rat26^post78, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l53 -> l10 : __const_10000^0'=__const_10000^post79, __const_16^0'=__const_16^post79, __const_2147483647^0'=__const_2147483647^post79, __const_256^0'=__const_256^post79, __const_257^0'=__const_257^post79, __const_429496^0'=__const_429496^post79, __const_50^0'=__const_50^post79, __const_53^0'=__const_53^post79, __const_65536^0'=__const_65536^post79, __const_8388607^0'=__const_8388607^post79, __const_8^0'=__const_8^post79, __const_9^0'=__const_9^post79, apsim_bound11113^0'=apsim_bound11113^post79, apsim_incnt^0'=apsim_incnt^post79, bits33^0'=bits33^post79, block_compress^0'=block_compress^post79, bytes_out^0'=bytes_out^post79, c37^0'=c37^post79, c7^0'=c7^post79, checkpoint^0'=checkpoint^post79, clear_flg^0'=clear_flg^post79, code31^0'=code31^post79, count^0'=count^post79, disp9^0'=disp9^post79, ent8^0'=ent8^post79, exit_stat^0'=exit_stat^post79, fcode5^0'=fcode5^post79, free_ent^0'=free_ent^post79, hshift11^0'=hshift11^post79, hsize^0'=hsize^post79, hsize___019^0'=hsize___019^post79, hsize___027^0'=hsize___027^post79, hsize_reg10^0'=hsize_reg10^post79, i21^0'=i21^post79, i29^0'=i29^post79, i3^0'=i3^post79, i41^0'=i41^post79, i45^0'=i45^post79, i6^0'=i6^post79, in_count^0'=in_count^post79, incnt^0'=incnt^post79, m122^0'=m122^post79, m130^0'=m130^post79, maxbits^0'=maxbits^post79, maxcode^0'=maxcode^post79, maxmaxcode^0'=maxmaxcode^post79, n40^0'=n40^post79, n44^0'=n44^post79, n_bits^0'=n_bits^post79, offset^0'=offset^post79, out_count^0'=out_count^post79, r_off32^0'=r_off32^post79, rat26^0'=rat26^post79, ratio^0'=ratio^post79, ret_getbyte18^0'=ret_getbyte18^post79, ret_getbyte25^0'=ret_getbyte25^post79, seed2^0'=seed2^post79, tabort4^0'=tabort4^post79, tmp12^0'=tmp12^post79, tmp___014^0'=tmp___014^post79, tmp___017^0'=tmp___017^post79, tmp___024^0'=tmp___024^post79, tmp___115^0'=tmp___115^post79, (-seed2^post79+seed2^0 == 0 /\ code31^0-code31^post79 == 0 /\ maxcode^0-maxcode^post79 == 0 /\ offset^0-offset^post79 == 0 /\ -n_bits^post79+n_bits^0 == 0 /\ __const_53^0-__const_53^post79 == 0 /\ 1+m130^post79 == 0 /\ ret_getbyte25^0-ret_getbyte25^post79 == 0 /\ c37^0-c37^post79 == 0 /\ __const_16^0-__const_16^post79 == 0 /\ -i6^post79+i6^0 == 0 /\ ent8^0-ent8^post79 == 0 /\ bits33^0-bits33^post79 == 0 /\ maxmaxcode^0-maxmaxcode^post79 == 0 /\ -count^post79+count^0 == 0 /\ -in_count^post79+in_count^0 == 0 /\ -r_off32^post79+r_off32^0 == 0 /\ -disp9^post79+disp9^0 == 0 /\ -apsim_bound11113^post79+apsim_bound11113^0 == 0 /\ -checkpoint^post79+checkpoint^0 == 0 /\ -hsize___027^post79+__const_16^0+i29^post79 == 0 /\ c7^0-c7^post79 == 0 /\ -exit_stat^post79+exit_stat^0 == 0 /\ -hsize^post79+hsize^0 == 0 /\ tabort4^0-tabort4^post79 == 0 /\ apsim_incnt^0-apsim_incnt^post79 == 0 /\ -maxbits^post79+maxbits^0 == 0 /\ __const_257^0-__const_257^post79 == 0 /\ hshift11^0-hshift11^post79 == 0 /\ -n40^post79+n40^0 == 0 /\ hsize___019^0-hsize___019^post79 == 0 /\ tmp___115^0-tmp___115^post79 == 0 /\ __const_256^0-__const_256^post79 == 0 /\ -m122^post79+m122^0 == 0 /\ __const_50^0-__const_50^post79 == 0 /\ -tmp___014^post79+tmp___014^0 == 0 /\ n44^0-n44^post79 == 0 /\ -__const_429496^post79+__const_429496^0 == 0 /\ -i3^post79+i3^0 == 0 /\ hsize___027^post79-hsize^0 == 0 /\ -i41^post79+i41^0 == 0 /\ free_ent^0-free_ent^post79 == 0 /\ tmp12^0-tmp12^post79 == 0 /\ tmp___017^0-tmp___017^post79 == 0 /\ rat26^0-rat26^post79 == 0 /\ ratio^post79 == 0 /\ -__const_9^post79+__const_9^0 == 0 /\ -__const_65536^post79+__const_65536^0 == 0 /\ -bytes_out^post79+bytes_out^0 == 0 /\ -clear_flg^post79+clear_flg^0 == 0 /\ -ret_getbyte18^post79+ret_getbyte18^0 == 0 /\ i45^0-i45^post79 == 0 /\ -hsize_reg10^post79+hsize_reg10^0 == 0 /\ -tmp___024^post79+tmp___024^0 == 0 /\ rat26^0-ratio^0 <= 0 /\ -fcode5^post79+fcode5^0 == 0 /\ -incnt^post79+incnt^0 == 0 /\ block_compress^0-block_compress^post79 == 0 /\ -__const_8^post79+__const_8^0 == 0 /\ -__const_2147483647^post79+__const_2147483647^0 == 0 /\ -__const_8388607^post79+__const_8388607^0 == 0 /\ out_count^0-out_count^post79 == 0 /\ -i21^post79+i21^0 == 0 /\ __const_10000^0-__const_10000^post79 == 0), cost: 1
	New rule:
	l53 -> l10 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-__const_16^0+hsize^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=-1, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ rat26^0-ratio^0 <= 0), cost: 1
	
		propagated equality seed2^post79 = seed2^0
		
		propagated equality code31^post79 = code31^0
		
		propagated equality maxcode^post79 = maxcode^0
		
		propagated equality offset^post79 = offset^0
		
		propagated equality n_bits^post79 = n_bits^0
		
		propagated equality __const_53^post79 = __const_53^0
		
		propagated equality m130^post79 = -1
		
		propagated equality ret_getbyte25^post79 = ret_getbyte25^0
		
		propagated equality c37^post79 = c37^0
		
		propagated equality __const_16^post79 = __const_16^0
		
		propagated equality i6^post79 = i6^0
		
		propagated equality ent8^post79 = ent8^0
		
		propagated equality bits33^post79 = bits33^0
		
		propagated equality maxmaxcode^post79 = maxmaxcode^0
		
		propagated equality count^post79 = count^0
		
		propagated equality in_count^post79 = in_count^0
		
		propagated equality r_off32^post79 = r_off32^0
		
		propagated equality disp9^post79 = disp9^0
		
		propagated equality apsim_bound11113^post79 = apsim_bound11113^0
		
		propagated equality checkpoint^post79 = checkpoint^0
		
		propagated equality hsize___027^post79 = __const_16^0+i29^post79
		
		propagated equality c7^post79 = c7^0
		
		propagated equality exit_stat^post79 = exit_stat^0
		
		propagated equality hsize^post79 = hsize^0
		
		propagated equality tabort4^post79 = tabort4^0
		
		propagated equality apsim_incnt^post79 = apsim_incnt^0
		
		propagated equality maxbits^post79 = maxbits^0
		
		propagated equality __const_257^post79 = __const_257^0
		
		propagated equality hshift11^post79 = hshift11^0
		
		propagated equality n40^post79 = n40^0
		
		propagated equality hsize___019^post79 = hsize___019^0
		
		propagated equality tmp___115^post79 = tmp___115^0
		
		propagated equality __const_256^post79 = __const_256^0
		
		propagated equality m122^post79 = m122^0
		
		propagated equality __const_50^post79 = __const_50^0
		
		propagated equality tmp___014^post79 = tmp___014^0
		
		propagated equality n44^post79 = n44^0
		
		propagated equality __const_429496^post79 = __const_429496^0
		
		propagated equality i3^post79 = i3^0
		
		propagated equality i29^post79 = -__const_16^0+hsize^0
		
		propagated equality i41^post79 = i41^0
		
		propagated equality free_ent^post79 = free_ent^0
		
		propagated equality tmp12^post79 = tmp12^0
		
		propagated equality tmp___017^post79 = tmp___017^0
		
		propagated equality rat26^post79 = rat26^0
		
		propagated equality ratio^post79 = 0
		
		propagated equality __const_9^post79 = __const_9^0
		
		propagated equality __const_65536^post79 = __const_65536^0
		
		propagated equality bytes_out^post79 = bytes_out^0
		
		propagated equality clear_flg^post79 = clear_flg^0
		
		propagated equality ret_getbyte18^post79 = ret_getbyte18^0
		
		propagated equality i45^post79 = i45^0
		
		propagated equality hsize_reg10^post79 = hsize_reg10^0
		
		propagated equality tmp___024^post79 = tmp___024^0
		
		propagated equality fcode5^post79 = fcode5^0
		
		propagated equality incnt^post79 = incnt^0
		
		propagated equality block_compress^post79 = block_compress^0
		
		propagated equality __const_8^post79 = __const_8^0
		
		propagated equality __const_2147483647^post79 = __const_2147483647^0
		
		propagated equality __const_8388607^post79 = __const_8388607^0
		
		propagated equality out_count^post79 = out_count^0
		
		propagated equality i21^post79 = i21^0
		
		propagated equality __const_10000^post79 = __const_10000^0
		
	Simplified Guard

	Original rule:
	l53 -> l10 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-__const_16^0+hsize^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=-1, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ rat26^0-ratio^0 <= 0), cost: 1
	New rule:
	l53 -> l10 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-__const_16^0+hsize^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=-1, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, rat26^0-ratio^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l53 -> l10 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=-__const_16^0+hsize^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=-1, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, rat26^0-ratio^0 <= 0, cost: 1
	New rule:
	l53 -> l10 : hsize___027^0'=hsize^0, i29^0'=-__const_16^0+hsize^0, m130^0'=-1, ratio^0'=0, rat26^0-ratio^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l53 -> l35 : __const_10000^0'=__const_10000^post80, __const_16^0'=__const_16^post80, __const_2147483647^0'=__const_2147483647^post80, __const_256^0'=__const_256^post80, __const_257^0'=__const_257^post80, __const_429496^0'=__const_429496^post80, __const_50^0'=__const_50^post80, __const_53^0'=__const_53^post80, __const_65536^0'=__const_65536^post80, __const_8388607^0'=__const_8388607^post80, __const_8^0'=__const_8^post80, __const_9^0'=__const_9^post80, apsim_bound11113^0'=apsim_bound11113^post80, apsim_incnt^0'=apsim_incnt^post80, bits33^0'=bits33^post80, block_compress^0'=block_compress^post80, bytes_out^0'=bytes_out^post80, c37^0'=c37^post80, c7^0'=c7^post80, checkpoint^0'=checkpoint^post80, clear_flg^0'=clear_flg^post80, code31^0'=code31^post80, count^0'=count^post80, disp9^0'=disp9^post80, ent8^0'=ent8^post80, exit_stat^0'=exit_stat^post80, fcode5^0'=fcode5^post80, free_ent^0'=free_ent^post80, hshift11^0'=hshift11^post80, hsize^0'=hsize^post80, hsize___019^0'=hsize___019^post80, hsize___027^0'=hsize___027^post80, hsize_reg10^0'=hsize_reg10^post80, i21^0'=i21^post80, i29^0'=i29^post80, i3^0'=i3^post80, i41^0'=i41^post80, i45^0'=i45^post80, i6^0'=i6^post80, in_count^0'=in_count^post80, incnt^0'=incnt^post80, m122^0'=m122^post80, m130^0'=m130^post80, maxbits^0'=maxbits^post80, maxcode^0'=maxcode^post80, maxmaxcode^0'=maxmaxcode^post80, n40^0'=n40^post80, n44^0'=n44^post80, n_bits^0'=n_bits^post80, offset^0'=offset^post80, out_count^0'=out_count^post80, r_off32^0'=r_off32^post80, rat26^0'=rat26^post80, ratio^0'=ratio^post80, ret_getbyte18^0'=ret_getbyte18^post80, ret_getbyte25^0'=ret_getbyte25^post80, seed2^0'=seed2^post80, tabort4^0'=tabort4^post80, tmp12^0'=tmp12^post80, tmp___014^0'=tmp___014^post80, tmp___017^0'=tmp___017^post80, tmp___024^0'=tmp___024^post80, tmp___115^0'=tmp___115^post80, (__const_256^0-__const_256^post80 == 0 /\ -ent8^post80+ent8^0 == 0 /\ -hsize___019^post80+hsize___019^0 == 0 /\ -hsize^post80+hsize^0 == 0 /\ n44^0-n44^post80 == 0 /\ -n40^post80+n40^0 == 0 /\ -apsim_bound11113^post80+apsim_bound11113^0 == 0 /\ -free_ent^post80+free_ent^0 == 0 /\ -__const_9^post80+__const_9^0 == 0 /\ m130^0-m130^post80 == 0 /\ -__const_8388607^post80+__const_8388607^0 == 0 /\ apsim_incnt^0-apsim_incnt^post80 == 0 /\ bytes_out^0-bytes_out^post80 == 0 /\ count^0-count^post80 == 0 /\ ret_getbyte25^0-ret_getbyte25^post80 == 0 /\ -seed2^post80+seed2^0 == 0 /\ c37^0-c37^post80 == 0 /\ -bits33^post80+bits33^0 == 0 /\ __const_50^0-__const_50^post80 == 0 /\ i6^0-i6^post80 == 0 /\ -i29^post80+i29^0 == 0 /\ -i41^post80+i41^0 == 0 /\ -n_bits^post80+n_bits^0 == 0 /\ __const_257^0-__const_257^post80 == 0 /\ __const_53^0-__const_53^post80 == 0 /\ -__const_429496^post80+__const_429496^0 == 0 /\ m122^0-m122^post80 == 0 /\ hshift11^0-hshift11^post80 == 0 /\ -clear_flg^post80+clear_flg^0 == 0 /\ -block_compress^post80+block_compress^0 == 0 /\ tmp___017^0-tmp___017^post80 == 0 /\ -c7^post80+c7^0 == 0 /\ tmp12^0-tmp12^post80 == 0 /\ 1-rat26^0+ratio^0 <= 0 /\ rat26^0-rat26^post80 == 0 /\ __const_8^0-__const_8^post80 == 0 /\ -__const_2147483647^post80+__const_2147483647^0 == 0 /\ -tmp___024^post80+tmp___024^0 == 0 /\ -maxbits^post80+maxbits^0 == 0 /\ -tmp___115^post80+tmp___115^0 == 0 /\ hsize___027^0-hsize___027^post80 == 0 /\ fcode5^0-fcode5^post80 == 0 /\ -i21^post80+i21^0 == 0 /\ r_off32^0-r_off32^post80 == 0 /\ -incnt^post80+incnt^0 == 0 /\ -rat26^0+ratio^post80 == 0 /\ tabort4^0-tabort4^post80 == 0 /\ i3^0-i3^post80 == 0 /\ ret_getbyte18^0-ret_getbyte18^post80 == 0 /\ checkpoint^0-checkpoint^post80 == 0 /\ out_count^0-out_count^post80 == 0 /\ -tmp___014^post80+tmp___014^0 == 0 /\ __const_16^0-__const_16^post80 == 0 /\ -code31^post80+code31^0 == 0 /\ -offset^post80+offset^0 == 0 /\ -i45^post80+i45^0 == 0 /\ __const_10000^0-__const_10000^post80 == 0 /\ maxmaxcode^0-maxmaxcode^post80 == 0 /\ maxcode^0-maxcode^post80 == 0 /\ hsize_reg10^0-hsize_reg10^post80 == 0 /\ -__const_65536^post80+__const_65536^0 == 0 /\ -in_count^post80+in_count^0 == 0 /\ -disp9^post80+disp9^0 == 0 /\ exit_stat^0-exit_stat^post80 == 0), cost: 1
	New rule:
	l53 -> l35 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=rat26^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-rat26^0+ratio^0 <= 0), cost: 1
	
		propagated equality __const_256^post80 = __const_256^0
		
		propagated equality ent8^post80 = ent8^0
		
		propagated equality hsize___019^post80 = hsize___019^0
		
		propagated equality hsize^post80 = hsize^0
		
		propagated equality n44^post80 = n44^0
		
		propagated equality n40^post80 = n40^0
		
		propagated equality apsim_bound11113^post80 = apsim_bound11113^0
		
		propagated equality free_ent^post80 = free_ent^0
		
		propagated equality __const_9^post80 = __const_9^0
		
		propagated equality m130^post80 = m130^0
		
		propagated equality __const_8388607^post80 = __const_8388607^0
		
		propagated equality apsim_incnt^post80 = apsim_incnt^0
		
		propagated equality bytes_out^post80 = bytes_out^0
		
		propagated equality count^post80 = count^0
		
		propagated equality ret_getbyte25^post80 = ret_getbyte25^0
		
		propagated equality seed2^post80 = seed2^0
		
		propagated equality c37^post80 = c37^0
		
		propagated equality bits33^post80 = bits33^0
		
		propagated equality __const_50^post80 = __const_50^0
		
		propagated equality i6^post80 = i6^0
		
		propagated equality i29^post80 = i29^0
		
		propagated equality i41^post80 = i41^0
		
		propagated equality n_bits^post80 = n_bits^0
		
		propagated equality __const_257^post80 = __const_257^0
		
		propagated equality __const_53^post80 = __const_53^0
		
		propagated equality __const_429496^post80 = __const_429496^0
		
		propagated equality m122^post80 = m122^0
		
		propagated equality hshift11^post80 = hshift11^0
		
		propagated equality clear_flg^post80 = clear_flg^0
		
		propagated equality block_compress^post80 = block_compress^0
		
		propagated equality tmp___017^post80 = tmp___017^0
		
		propagated equality c7^post80 = c7^0
		
		propagated equality tmp12^post80 = tmp12^0
		
		propagated equality rat26^post80 = rat26^0
		
		propagated equality __const_8^post80 = __const_8^0
		
		propagated equality __const_2147483647^post80 = __const_2147483647^0
		
		propagated equality tmp___024^post80 = tmp___024^0
		
		propagated equality maxbits^post80 = maxbits^0
		
		propagated equality tmp___115^post80 = tmp___115^0
		
		propagated equality hsize___027^post80 = hsize___027^0
		
		propagated equality fcode5^post80 = fcode5^0
		
		propagated equality i21^post80 = i21^0
		
		propagated equality r_off32^post80 = r_off32^0
		
		propagated equality incnt^post80 = incnt^0
		
		propagated equality ratio^post80 = rat26^0
		
		propagated equality tabort4^post80 = tabort4^0
		
		propagated equality i3^post80 = i3^0
		
		propagated equality ret_getbyte18^post80 = ret_getbyte18^0
		
		propagated equality checkpoint^post80 = checkpoint^0
		
		propagated equality out_count^post80 = out_count^0
		
		propagated equality tmp___014^post80 = tmp___014^0
		
		propagated equality __const_16^post80 = __const_16^0
		
		propagated equality code31^post80 = code31^0
		
		propagated equality offset^post80 = offset^0
		
		propagated equality i45^post80 = i45^0
		
		propagated equality __const_10000^post80 = __const_10000^0
		
		propagated equality maxmaxcode^post80 = maxmaxcode^0
		
		propagated equality maxcode^post80 = maxcode^0
		
		propagated equality hsize_reg10^post80 = hsize_reg10^0
		
		propagated equality __const_65536^post80 = __const_65536^0
		
		propagated equality in_count^post80 = in_count^0
		
		propagated equality disp9^post80 = disp9^0
		
		propagated equality exit_stat^post80 = exit_stat^0
		
	Simplified Guard

	Original rule:
	l53 -> l35 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=rat26^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-rat26^0+ratio^0 <= 0), cost: 1
	New rule:
	l53 -> l35 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=rat26^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-rat26^0+ratio^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l53 -> l35 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=rat26^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-rat26^0+ratio^0 <= 0, cost: 1
	New rule:
	l53 -> l35 : ratio^0'=rat26^0, 1-rat26^0+ratio^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l54 -> l52 : __const_10000^0'=__const_10000^post81, __const_16^0'=__const_16^post81, __const_2147483647^0'=__const_2147483647^post81, __const_256^0'=__const_256^post81, __const_257^0'=__const_257^post81, __const_429496^0'=__const_429496^post81, __const_50^0'=__const_50^post81, __const_53^0'=__const_53^post81, __const_65536^0'=__const_65536^post81, __const_8388607^0'=__const_8388607^post81, __const_8^0'=__const_8^post81, __const_9^0'=__const_9^post81, apsim_bound11113^0'=apsim_bound11113^post81, apsim_incnt^0'=apsim_incnt^post81, bits33^0'=bits33^post81, block_compress^0'=block_compress^post81, bytes_out^0'=bytes_out^post81, c37^0'=c37^post81, c7^0'=c7^post81, checkpoint^0'=checkpoint^post81, clear_flg^0'=clear_flg^post81, code31^0'=code31^post81, count^0'=count^post81, disp9^0'=disp9^post81, ent8^0'=ent8^post81, exit_stat^0'=exit_stat^post81, fcode5^0'=fcode5^post81, free_ent^0'=free_ent^post81, hshift11^0'=hshift11^post81, hsize^0'=hsize^post81, hsize___019^0'=hsize___019^post81, hsize___027^0'=hsize___027^post81, hsize_reg10^0'=hsize_reg10^post81, i21^0'=i21^post81, i29^0'=i29^post81, i3^0'=i3^post81, i41^0'=i41^post81, i45^0'=i45^post81, i6^0'=i6^post81, in_count^0'=in_count^post81, incnt^0'=incnt^post81, m122^0'=m122^post81, m130^0'=m130^post81, maxbits^0'=maxbits^post81, maxcode^0'=maxcode^post81, maxmaxcode^0'=maxmaxcode^post81, n40^0'=n40^post81, n44^0'=n44^post81, n_bits^0'=n_bits^post81, offset^0'=offset^post81, out_count^0'=out_count^post81, r_off32^0'=r_off32^post81, rat26^0'=rat26^post81, ratio^0'=ratio^post81, ret_getbyte18^0'=ret_getbyte18^post81, ret_getbyte25^0'=ret_getbyte25^post81, seed2^0'=seed2^post81, tabort4^0'=tabort4^post81, tmp12^0'=tmp12^post81, tmp___014^0'=tmp___014^post81, tmp___017^0'=tmp___017^post81, tmp___024^0'=tmp___024^post81, tmp___115^0'=tmp___115^post81, (__const_53^0-__const_53^post81 == 0 /\ -i21^post81+i21^0 == 0 /\ m122^0-m122^post81 == 0 /\ m130^0-m130^post81 == 0 /\ bytes_out^0-bytes_out^post81 == 0 /\ offset^0-offset^post81 == 0 /\ ret_getbyte25^0-ret_getbyte25^post81 == 0 /\ apsim_incnt^0-apsim_incnt^post81 == 0 /\ __const_65536^0-__const_65536^post81 == 0 /\ -r_off32^post81+r_off32^0 == 0 /\ -n_bits^post81+n_bits^0 == 0 /\ -ratio^post81+ratio^0 == 0 /\ __const_16^0-__const_16^post81 == 0 /\ -c37^post81+c37^0 == 0 /\ -bits33^post81+bits33^0 == 0 /\ -c7^post81+c7^0 == 0 /\ __const_257^0-__const_257^post81 == 0 /\ hsize___027^0-hsize___027^post81 == 0 /\ clear_flg^0-clear_flg^post81 == 0 /\ __const_8^0-__const_8^post81 == 0 /\ -disp9^post81+disp9^0 == 0 /\ -__const_256^post81+__const_256^0 == 0 /\ in_count^0-in_count^post81 == 0 /\ -tmp___024^post81+tmp___024^0 == 0 /\ tmp12^0-tmp12^post81 == 0 /\ -block_compress^post81+block_compress^0 == 0 /\ -n40^post81+n40^0 == 0 /\ checkpoint^0-checkpoint^post81 == 0 /\ i6^0-i6^post81 == 0 /\ n44^0-n44^post81 == 0 /\ i3^0-i3^post81 == 0 /\ -maxbits^post81+maxbits^0 == 0 /\ count^0-count^post81 == 0 /\ ret_getbyte18^0-ret_getbyte18^post81 == 0 /\ -tmp___014^post81+tmp___014^0 == 0 /\ -tmp___115^post81+tmp___115^0 == 0 /\ -free_ent^post81+free_ent^0 == 0 /\ -code31^post81+code31^0 == 0 /\ -i45^post81+i45^0 == 0 /\ -tabort4^post81+tabort4^0 == 0 /\ hshift11^0-hshift11^post81 == 0 /\ 1-rat26^0 <= 0 /\ rat26^0-rat26^post81 == 0 /\ -__const_429496^post81+__const_429496^0 == 0 /\ -hsize_reg10^post81+hsize_reg10^0 == 0 /\ -__const_50^post81+__const_50^0 == 0 /\ -incnt^post81+incnt^0 == 0 /\ -hsize___019^post81+hsize___019^0 == 0 /\ __const_9^0-__const_9^post81 == 0 /\ -__const_2147483647^post81+__const_2147483647^0 == 0 /\ exit_stat^0-exit_stat^post81 == 0 /\ fcode5^0-fcode5^post81 == 0 /\ -ent8^post81+ent8^0 == 0 /\ -apsim_bound11113^post81+apsim_bound11113^0 == 0 /\ -hsize^post81+hsize^0 == 0 /\ maxcode^0-maxcode^post81 == 0 /\ -__const_8388607^post81+__const_8388607^0 == 0 /\ maxmaxcode^0-maxmaxcode^post81 == 0 /\ tmp___017^0-tmp___017^post81 == 0 /\ -i29^post81+i29^0 == 0 /\ -__const_10000^post81+__const_10000^0 == 0 /\ out_count^0-out_count^post81 == 0 /\ -i41^post81+i41^0 == 0 /\ -seed2^post81+seed2^0 == 0), cost: 1
	New rule:
	l54 -> l52 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-rat26^0 <= 0), cost: 1
	
		propagated equality __const_53^post81 = __const_53^0
		
		propagated equality i21^post81 = i21^0
		
		propagated equality m122^post81 = m122^0
		
		propagated equality m130^post81 = m130^0
		
		propagated equality bytes_out^post81 = bytes_out^0
		
		propagated equality offset^post81 = offset^0
		
		propagated equality ret_getbyte25^post81 = ret_getbyte25^0
		
		propagated equality apsim_incnt^post81 = apsim_incnt^0
		
		propagated equality __const_65536^post81 = __const_65536^0
		
		propagated equality r_off32^post81 = r_off32^0
		
		propagated equality n_bits^post81 = n_bits^0
		
		propagated equality ratio^post81 = ratio^0
		
		propagated equality __const_16^post81 = __const_16^0
		
		propagated equality c37^post81 = c37^0
		
		propagated equality bits33^post81 = bits33^0
		
		propagated equality c7^post81 = c7^0
		
		propagated equality __const_257^post81 = __const_257^0
		
		propagated equality hsize___027^post81 = hsize___027^0
		
		propagated equality clear_flg^post81 = clear_flg^0
		
		propagated equality __const_8^post81 = __const_8^0
		
		propagated equality disp9^post81 = disp9^0
		
		propagated equality __const_256^post81 = __const_256^0
		
		propagated equality in_count^post81 = in_count^0
		
		propagated equality tmp___024^post81 = tmp___024^0
		
		propagated equality tmp12^post81 = tmp12^0
		
		propagated equality block_compress^post81 = block_compress^0
		
		propagated equality n40^post81 = n40^0
		
		propagated equality checkpoint^post81 = checkpoint^0
		
		propagated equality i6^post81 = i6^0
		
		propagated equality n44^post81 = n44^0
		
		propagated equality i3^post81 = i3^0
		
		propagated equality maxbits^post81 = maxbits^0
		
		propagated equality count^post81 = count^0
		
		propagated equality ret_getbyte18^post81 = ret_getbyte18^0
		
		propagated equality tmp___014^post81 = tmp___014^0
		
		propagated equality tmp___115^post81 = tmp___115^0
		
		propagated equality free_ent^post81 = free_ent^0
		
		propagated equality code31^post81 = code31^0
		
		propagated equality i45^post81 = i45^0
		
		propagated equality tabort4^post81 = tabort4^0
		
		propagated equality hshift11^post81 = hshift11^0
		
		propagated equality rat26^post81 = rat26^0
		
		propagated equality __const_429496^post81 = __const_429496^0
		
		propagated equality hsize_reg10^post81 = hsize_reg10^0
		
		propagated equality __const_50^post81 = __const_50^0
		
		propagated equality incnt^post81 = incnt^0
		
		propagated equality hsize___019^post81 = hsize___019^0
		
		propagated equality __const_9^post81 = __const_9^0
		
		propagated equality __const_2147483647^post81 = __const_2147483647^0
		
		propagated equality exit_stat^post81 = exit_stat^0
		
		propagated equality fcode5^post81 = fcode5^0
		
		propagated equality ent8^post81 = ent8^0
		
		propagated equality apsim_bound11113^post81 = apsim_bound11113^0
		
		propagated equality hsize^post81 = hsize^0
		
		propagated equality maxcode^post81 = maxcode^0
		
		propagated equality __const_8388607^post81 = __const_8388607^0
		
		propagated equality maxmaxcode^post81 = maxmaxcode^0
		
		propagated equality tmp___017^post81 = tmp___017^0
		
		propagated equality i29^post81 = i29^0
		
		propagated equality __const_10000^post81 = __const_10000^0
		
		propagated equality out_count^post81 = out_count^0
		
		propagated equality i41^post81 = i41^0
		
		propagated equality seed2^post81 = seed2^0
		
	Simplified Guard

	Original rule:
	l54 -> l52 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-rat26^0 <= 0), cost: 1
	New rule:
	l54 -> l52 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-rat26^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l54 -> l52 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-rat26^0 <= 0, cost: 1
	New rule:
	l54 -> l52 : 1-rat26^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l54 -> l52 : __const_10000^0'=__const_10000^post82, __const_16^0'=__const_16^post82, __const_2147483647^0'=__const_2147483647^post82, __const_256^0'=__const_256^post82, __const_257^0'=__const_257^post82, __const_429496^0'=__const_429496^post82, __const_50^0'=__const_50^post82, __const_53^0'=__const_53^post82, __const_65536^0'=__const_65536^post82, __const_8388607^0'=__const_8388607^post82, __const_8^0'=__const_8^post82, __const_9^0'=__const_9^post82, apsim_bound11113^0'=apsim_bound11113^post82, apsim_incnt^0'=apsim_incnt^post82, bits33^0'=bits33^post82, block_compress^0'=block_compress^post82, bytes_out^0'=bytes_out^post82, c37^0'=c37^post82, c7^0'=c7^post82, checkpoint^0'=checkpoint^post82, clear_flg^0'=clear_flg^post82, code31^0'=code31^post82, count^0'=count^post82, disp9^0'=disp9^post82, ent8^0'=ent8^post82, exit_stat^0'=exit_stat^post82, fcode5^0'=fcode5^post82, free_ent^0'=free_ent^post82, hshift11^0'=hshift11^post82, hsize^0'=hsize^post82, hsize___019^0'=hsize___019^post82, hsize___027^0'=hsize___027^post82, hsize_reg10^0'=hsize_reg10^post82, i21^0'=i21^post82, i29^0'=i29^post82, i3^0'=i3^post82, i41^0'=i41^post82, i45^0'=i45^post82, i6^0'=i6^post82, in_count^0'=in_count^post82, incnt^0'=incnt^post82, m122^0'=m122^post82, m130^0'=m130^post82, maxbits^0'=maxbits^post82, maxcode^0'=maxcode^post82, maxmaxcode^0'=maxmaxcode^post82, n40^0'=n40^post82, n44^0'=n44^post82, n_bits^0'=n_bits^post82, offset^0'=offset^post82, out_count^0'=out_count^post82, r_off32^0'=r_off32^post82, rat26^0'=rat26^post82, ratio^0'=ratio^post82, ret_getbyte18^0'=ret_getbyte18^post82, ret_getbyte25^0'=ret_getbyte25^post82, seed2^0'=seed2^post82, tabort4^0'=tabort4^post82, tmp12^0'=tmp12^post82, tmp___014^0'=tmp___014^post82, tmp___017^0'=tmp___017^post82, tmp___024^0'=tmp___024^post82, tmp___115^0'=tmp___115^post82, (-apsim_bound11113^post82+apsim_bound11113^0 == 0 /\ -i45^post82+i45^0 == 0 /\ -i29^post82+i29^0 == 0 /\ -m122^post82+m122^0 == 0 /\ -__const_50^post82+__const_50^0 == 0 /\ maxcode^0-maxcode^post82 == 0 /\ bits33^0-bits33^post82 == 0 /\ -i41^post82+i41^0 == 0 /\ __const_257^0-__const_257^post82 == 0 /\ i6^0-i6^post82 == 0 /\ checkpoint^0-checkpoint^post82 == 0 /\ -incnt^post82+incnt^0 == 0 /\ exit_stat^0-exit_stat^post82 == 0 /\ apsim_incnt^0-apsim_incnt^post82 == 0 /\ out_count^0-out_count^post82 == 0 /\ maxmaxcode^0-maxmaxcode^post82 == 0 /\ __const_65536^0-__const_65536^post82 == 0 /\ -n40^post82+n40^0 == 0 /\ offset^0-offset^post82 == 0 /\ m130^0-m130^post82 == 0 /\ -in_count^post82+in_count^0 == 0 /\ tmp___014^0-tmp___014^post82 == 0 /\ 1+rat26^0 <= 0 /\ -__const_8388607^post82+__const_8388607^0 == 0 /\ -clear_flg^post82+clear_flg^0 == 0 /\ count^0-count^post82 == 0 /\ __const_53^0-__const_53^post82 == 0 /\ i3^0-i3^post82 == 0 /\ tmp12^0-tmp12^post82 == 0 /\ -hsize_reg10^post82+hsize_reg10^0 == 0 /\ hsize___027^0-hsize___027^post82 == 0 /\ -i21^post82+i21^0 == 0 /\ -hsize^post82+hsize^0 == 0 /\ -c7^post82+c7^0 == 0 /\ -ret_getbyte18^post82+ret_getbyte18^0 == 0 /\ -__const_256^post82+__const_256^0 == 0 /\ __const_8^0-__const_8^post82 == 0 /\ __const_429496^0-__const_429496^post82 == 0 /\ -__const_2147483647^post82+__const_2147483647^0 == 0 /\ -r_off32^post82+r_off32^0 == 0 /\ -n_bits^post82+n_bits^0 == 0 /\ -seed2^post82+seed2^0 == 0 /\ tmp___115^0-tmp___115^post82 == 0 /\ -tabort4^post82+tabort4^0 == 0 /\ -__const_10000^post82+__const_10000^0 == 0 /\ -code31^post82+code31^0 == 0 /\ -fcode5^post82+fcode5^0 == 0 /\ -disp9^post82+disp9^0 == 0 /\ -free_ent^post82+free_ent^0 == 0 /\ n44^0-n44^post82 == 0 /\ -tmp___024^post82+tmp___024^0 == 0 /\ -tmp___017^post82+tmp___017^0 == 0 /\ -ent8^post82+ent8^0 == 0 /\ -maxbits^post82+maxbits^0 == 0 /\ bytes_out^0-bytes_out^post82 == 0 /\ hsize___019^0-hsize___019^post82 == 0 /\ hshift11^0-hshift11^post82 == 0 /\ __const_16^0-__const_16^post82 == 0 /\ ret_getbyte25^0-ret_getbyte25^post82 == 0 /\ -block_compress^post82+block_compress^0 == 0 /\ rat26^0-rat26^post82 == 0 /\ __const_9^0-__const_9^post82 == 0 /\ c37^0-c37^post82 == 0 /\ -ratio^post82+ratio^0 == 0), cost: 1
	New rule:
	l54 -> l52 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+rat26^0 <= 0), cost: 1
	
		propagated equality apsim_bound11113^post82 = apsim_bound11113^0
		
		propagated equality i45^post82 = i45^0
		
		propagated equality i29^post82 = i29^0
		
		propagated equality m122^post82 = m122^0
		
		propagated equality __const_50^post82 = __const_50^0
		
		propagated equality maxcode^post82 = maxcode^0
		
		propagated equality bits33^post82 = bits33^0
		
		propagated equality i41^post82 = i41^0
		
		propagated equality __const_257^post82 = __const_257^0
		
		propagated equality i6^post82 = i6^0
		
		propagated equality checkpoint^post82 = checkpoint^0
		
		propagated equality incnt^post82 = incnt^0
		
		propagated equality exit_stat^post82 = exit_stat^0
		
		propagated equality apsim_incnt^post82 = apsim_incnt^0
		
		propagated equality out_count^post82 = out_count^0
		
		propagated equality maxmaxcode^post82 = maxmaxcode^0
		
		propagated equality __const_65536^post82 = __const_65536^0
		
		propagated equality n40^post82 = n40^0
		
		propagated equality offset^post82 = offset^0
		
		propagated equality m130^post82 = m130^0
		
		propagated equality in_count^post82 = in_count^0
		
		propagated equality tmp___014^post82 = tmp___014^0
		
		propagated equality __const_8388607^post82 = __const_8388607^0
		
		propagated equality clear_flg^post82 = clear_flg^0
		
		propagated equality count^post82 = count^0
		
		propagated equality __const_53^post82 = __const_53^0
		
		propagated equality i3^post82 = i3^0
		
		propagated equality tmp12^post82 = tmp12^0
		
		propagated equality hsize_reg10^post82 = hsize_reg10^0
		
		propagated equality hsize___027^post82 = hsize___027^0
		
		propagated equality i21^post82 = i21^0
		
		propagated equality hsize^post82 = hsize^0
		
		propagated equality c7^post82 = c7^0
		
		propagated equality ret_getbyte18^post82 = ret_getbyte18^0
		
		propagated equality __const_256^post82 = __const_256^0
		
		propagated equality __const_8^post82 = __const_8^0
		
		propagated equality __const_429496^post82 = __const_429496^0
		
		propagated equality __const_2147483647^post82 = __const_2147483647^0
		
		propagated equality r_off32^post82 = r_off32^0
		
		propagated equality n_bits^post82 = n_bits^0
		
		propagated equality seed2^post82 = seed2^0
		
		propagated equality tmp___115^post82 = tmp___115^0
		
		propagated equality tabort4^post82 = tabort4^0
		
		propagated equality __const_10000^post82 = __const_10000^0
		
		propagated equality code31^post82 = code31^0
		
		propagated equality fcode5^post82 = fcode5^0
		
		propagated equality disp9^post82 = disp9^0
		
		propagated equality free_ent^post82 = free_ent^0
		
		propagated equality n44^post82 = n44^0
		
		propagated equality tmp___024^post82 = tmp___024^0
		
		propagated equality tmp___017^post82 = tmp___017^0
		
		propagated equality ent8^post82 = ent8^0
		
		propagated equality maxbits^post82 = maxbits^0
		
		propagated equality bytes_out^post82 = bytes_out^0
		
		propagated equality hsize___019^post82 = hsize___019^0
		
		propagated equality hshift11^post82 = hshift11^0
		
		propagated equality __const_16^post82 = __const_16^0
		
		propagated equality ret_getbyte25^post82 = ret_getbyte25^0
		
		propagated equality block_compress^post82 = block_compress^0
		
		propagated equality rat26^post82 = rat26^0
		
		propagated equality __const_9^post82 = __const_9^0
		
		propagated equality c37^post82 = c37^0
		
		propagated equality ratio^post82 = ratio^0
		
	Simplified Guard

	Original rule:
	l54 -> l52 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+rat26^0 <= 0), cost: 1
	New rule:
	l54 -> l52 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+rat26^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l54 -> l52 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+rat26^0 <= 0, cost: 1
	New rule:
	l54 -> l52 : 1+rat26^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l54 -> l53 : __const_10000^0'=__const_10000^post83, __const_16^0'=__const_16^post83, __const_2147483647^0'=__const_2147483647^post83, __const_256^0'=__const_256^post83, __const_257^0'=__const_257^post83, __const_429496^0'=__const_429496^post83, __const_50^0'=__const_50^post83, __const_53^0'=__const_53^post83, __const_65536^0'=__const_65536^post83, __const_8388607^0'=__const_8388607^post83, __const_8^0'=__const_8^post83, __const_9^0'=__const_9^post83, apsim_bound11113^0'=apsim_bound11113^post83, apsim_incnt^0'=apsim_incnt^post83, bits33^0'=bits33^post83, block_compress^0'=block_compress^post83, bytes_out^0'=bytes_out^post83, c37^0'=c37^post83, c7^0'=c7^post83, checkpoint^0'=checkpoint^post83, clear_flg^0'=clear_flg^post83, code31^0'=code31^post83, count^0'=count^post83, disp9^0'=disp9^post83, ent8^0'=ent8^post83, exit_stat^0'=exit_stat^post83, fcode5^0'=fcode5^post83, free_ent^0'=free_ent^post83, hshift11^0'=hshift11^post83, hsize^0'=hsize^post83, hsize___019^0'=hsize___019^post83, hsize___027^0'=hsize___027^post83, hsize_reg10^0'=hsize_reg10^post83, i21^0'=i21^post83, i29^0'=i29^post83, i3^0'=i3^post83, i41^0'=i41^post83, i45^0'=i45^post83, i6^0'=i6^post83, in_count^0'=in_count^post83, incnt^0'=incnt^post83, m122^0'=m122^post83, m130^0'=m130^post83, maxbits^0'=maxbits^post83, maxcode^0'=maxcode^post83, maxmaxcode^0'=maxmaxcode^post83, n40^0'=n40^post83, n44^0'=n44^post83, n_bits^0'=n_bits^post83, offset^0'=offset^post83, out_count^0'=out_count^post83, r_off32^0'=r_off32^post83, rat26^0'=rat26^post83, ratio^0'=ratio^post83, ret_getbyte18^0'=ret_getbyte18^post83, ret_getbyte25^0'=ret_getbyte25^post83, seed2^0'=seed2^post83, tabort4^0'=tabort4^post83, tmp12^0'=tmp12^post83, tmp___014^0'=tmp___014^post83, tmp___017^0'=tmp___017^post83, tmp___024^0'=tmp___024^post83, tmp___115^0'=tmp___115^post83, (maxmaxcode^0-maxmaxcode^post83 == 0 /\ free_ent^0-free_ent^post83 == 0 /\ -disp9^post83+disp9^0 == 0 /\ -ent8^post83+ent8^0 == 0 /\ -fcode5^post83+fcode5^0 == 0 /\ __const_9^0-__const_9^post83 == 0 /\ -hsize_reg10^post83+hsize_reg10^0 == 0 /\ -tmp___017^post83+tmp___017^0 == 0 /\ -tmp___024^post83+tmp___024^0 == 0 /\ rat26^post83-__const_2147483647^0 == 0 /\ tmp___014^0-tmp___014^post83 == 0 /\ -__const_10000^post83+__const_10000^0 == 0 /\ bits33^0-bits33^post83 == 0 /\ n40^0-n40^post83 == 0 /\ i21^0-i21^post83 == 0 /\ -__const_256^post83+__const_256^0 == 0 /\ -tabort4^post83+tabort4^0 == 0 /\ i3^0-i3^post83 == 0 /\ tmp12^0-tmp12^post83 == 0 /\ checkpoint^0-checkpoint^post83 == 0 /\ __const_257^0-__const_257^post83 == 0 /\ rat26^0 <= 0 /\ apsim_incnt^0-apsim_incnt^post83 == 0 /\ n44^0-n44^post83 == 0 /\ -n_bits^post83+n_bits^0 == 0 /\ out_count^0-out_count^post83 == 0 /\ -i29^post83+i29^0 == 0 /\ -apsim_bound11113^post83+apsim_bound11113^0 == 0 /\ -__const_50^post83+__const_50^0 == 0 /\ offset^0-offset^post83 == 0 /\ __const_65536^0-__const_65536^post83 == 0 /\ exit_stat^0-exit_stat^post83 == 0 /\ count^0-count^post83 == 0 /\ __const_16^0-__const_16^post83 == 0 /\ -rat26^0 <= 0 /\ -clear_flg^post83+clear_flg^0 == 0 /\ -ratio^post83+ratio^0 == 0 /\ -ret_getbyte18^post83+ret_getbyte18^0 == 0 /\ -maxcode^post83+maxcode^0 == 0 /\ -maxbits^post83+maxbits^0 == 0 /\ -c7^post83+c7^0 == 0 /\ -i41^post83+i41^0 == 0 /\ -hsize^post83+hsize^0 == 0 /\ m130^0-m130^post83 == 0 /\ -i45^post83+i45^0 == 0 /\ __const_53^0-__const_53^post83 == 0 /\ -m122^post83+m122^0 == 0 /\ -__const_8388607^post83+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post83 == 0 /\ bytes_out^0-bytes_out^post83 == 0 /\ -incnt^post83+incnt^0 == 0 /\ block_compress^0-block_compress^post83 == 0 /\ tmp___115^0-tmp___115^post83 == 0 /\ ret_getbyte25^0-ret_getbyte25^post83 == 0 /\ -code31^post83+code31^0 == 0 /\ i6^0-i6^post83 == 0 /\ c37^0-c37^post83 == 0 /\ hsize___027^0-hsize___027^post83 == 0 /\ seed2^0-seed2^post83 == 0 /\ hsize___019^0-hsize___019^post83 == 0 /\ __const_429496^0-__const_429496^post83 == 0 /\ __const_2147483647^0-__const_2147483647^post83 == 0 /\ -in_count^post83+in_count^0 == 0 /\ -r_off32^post83+r_off32^0 == 0 /\ hshift11^0-hshift11^post83 == 0), cost: 1
	New rule:
	l54 -> l53 : __const_10000^0'=__const_10000^post83, __const_16^0'=__const_16^post83, __const_2147483647^0'=__const_2147483647^post83, __const_256^0'=__const_256^post83, __const_257^0'=__const_257^post83, __const_429496^0'=__const_429496^post83, __const_50^0'=__const_50^post83, __const_53^0'=__const_53^post83, __const_65536^0'=__const_65536^post83, __const_8388607^0'=__const_8388607^post83, __const_8^0'=__const_8^post83, __const_9^0'=__const_9^post83, apsim_bound11113^0'=apsim_bound11113^post83, apsim_incnt^0'=apsim_incnt^post83, bits33^0'=bits33^post83, block_compress^0'=block_compress^post83, bytes_out^0'=bytes_out^post83, c37^0'=c37^post83, c7^0'=c7^post83, checkpoint^0'=checkpoint^post83, clear_flg^0'=clear_flg^post83, code31^0'=code31^post83, count^0'=count^post83, disp9^0'=disp9^post83, ent8^0'=ent8^post83, exit_stat^0'=exit_stat^post83, fcode5^0'=fcode5^post83, free_ent^0'=free_ent^post83, hshift11^0'=hshift11^post83, hsize^0'=hsize^post83, hsize___019^0'=hsize___019^post83, hsize___027^0'=hsize___027^post83, hsize_reg10^0'=hsize_reg10^post83, i21^0'=i21^post83, i29^0'=i29^post83, i3^0'=i3^post83, i41^0'=i41^post83, i45^0'=i45^post83, i6^0'=i6^post83, in_count^0'=in_count^post83, incnt^0'=incnt^post83, m122^0'=m122^post83, m130^0'=m130^post83, maxbits^0'=maxbits^post83, maxcode^0'=maxcode^post83, maxmaxcode^0'=maxmaxcode^post83, n40^0'=n40^post83, n44^0'=n44^post83, n_bits^0'=n_bits^post83, offset^0'=offset^post83, out_count^0'=out_count^post83, r_off32^0'=r_off32^post83, rat26^0'=rat26^post83, ratio^0'=ratio^post83, ret_getbyte18^0'=ret_getbyte18^post83, ret_getbyte25^0'=ret_getbyte25^post83, seed2^0'=seed2^post83, tabort4^0'=tabort4^post83, tmp12^0'=tmp12^post83, tmp___014^0'=tmp___014^post83, tmp___017^0'=tmp___017^post83, tmp___024^0'=tmp___024^post83, tmp___115^0'=tmp___115^post83, (maxmaxcode^0-maxmaxcode^post83 == 0 /\ free_ent^0-free_ent^post83 == 0 /\ -disp9^post83+disp9^0 == 0 /\ -ent8^post83+ent8^0 == 0 /\ -fcode5^post83+fcode5^0 == 0 /\ __const_9^0-__const_9^post83 == 0 /\ -hsize_reg10^post83+hsize_reg10^0 == 0 /\ -tmp___017^post83+tmp___017^0 == 0 /\ -tmp___024^post83+tmp___024^0 == 0 /\ rat26^post83-__const_2147483647^0 == 0 /\ tmp___014^0-tmp___014^post83 == 0 /\ -__const_10000^post83+__const_10000^0 == 0 /\ bits33^0-bits33^post83 == 0 /\ n40^0-n40^post83 == 0 /\ i21^0-i21^post83 == 0 /\ -__const_256^post83+__const_256^0 == 0 /\ -tabort4^post83+tabort4^0 == 0 /\ i3^0-i3^post83 == 0 /\ tmp12^0-tmp12^post83 == 0 /\ checkpoint^0-checkpoint^post83 == 0 /\ __const_257^0-__const_257^post83 == 0 /\ rat26^0 <= 0 /\ rat26^0 == 0 /\ apsim_incnt^0-apsim_incnt^post83 == 0 /\ n44^0-n44^post83 == 0 /\ -n_bits^post83+n_bits^0 == 0 /\ out_count^0-out_count^post83 == 0 /\ -i29^post83+i29^0 == 0 /\ -apsim_bound11113^post83+apsim_bound11113^0 == 0 /\ -__const_50^post83+__const_50^0 == 0 /\ offset^0-offset^post83 == 0 /\ __const_65536^0-__const_65536^post83 == 0 /\ exit_stat^0-exit_stat^post83 == 0 /\ count^0-count^post83 == 0 /\ __const_16^0-__const_16^post83 == 0 /\ -rat26^0 <= 0 /\ -clear_flg^post83+clear_flg^0 == 0 /\ -ratio^post83+ratio^0 == 0 /\ -ret_getbyte18^post83+ret_getbyte18^0 == 0 /\ -maxcode^post83+maxcode^0 == 0 /\ -maxbits^post83+maxbits^0 == 0 /\ -c7^post83+c7^0 == 0 /\ -i41^post83+i41^0 == 0 /\ -hsize^post83+hsize^0 == 0 /\ m130^0-m130^post83 == 0 /\ -i45^post83+i45^0 == 0 /\ __const_53^0-__const_53^post83 == 0 /\ -m122^post83+m122^0 == 0 /\ -__const_8388607^post83+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post83 == 0 /\ bytes_out^0-bytes_out^post83 == 0 /\ -incnt^post83+incnt^0 == 0 /\ block_compress^0-block_compress^post83 == 0 /\ tmp___115^0-tmp___115^post83 == 0 /\ ret_getbyte25^0-ret_getbyte25^post83 == 0 /\ -code31^post83+code31^0 == 0 /\ i6^0-i6^post83 == 0 /\ c37^0-c37^post83 == 0 /\ hsize___027^0-hsize___027^post83 == 0 /\ seed2^0-seed2^post83 == 0 /\ hsize___019^0-hsize___019^post83 == 0 /\ __const_429496^0-__const_429496^post83 == 0 /\ __const_2147483647^0-__const_2147483647^post83 == 0 /\ -in_count^post83+in_count^0 == 0 /\ -r_off32^post83+r_off32^0 == 0 /\ hshift11^0-hshift11^post83 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l54 -> l53 : __const_10000^0'=__const_10000^post83, __const_16^0'=__const_16^post83, __const_2147483647^0'=__const_2147483647^post83, __const_256^0'=__const_256^post83, __const_257^0'=__const_257^post83, __const_429496^0'=__const_429496^post83, __const_50^0'=__const_50^post83, __const_53^0'=__const_53^post83, __const_65536^0'=__const_65536^post83, __const_8388607^0'=__const_8388607^post83, __const_8^0'=__const_8^post83, __const_9^0'=__const_9^post83, apsim_bound11113^0'=apsim_bound11113^post83, apsim_incnt^0'=apsim_incnt^post83, bits33^0'=bits33^post83, block_compress^0'=block_compress^post83, bytes_out^0'=bytes_out^post83, c37^0'=c37^post83, c7^0'=c7^post83, checkpoint^0'=checkpoint^post83, clear_flg^0'=clear_flg^post83, code31^0'=code31^post83, count^0'=count^post83, disp9^0'=disp9^post83, ent8^0'=ent8^post83, exit_stat^0'=exit_stat^post83, fcode5^0'=fcode5^post83, free_ent^0'=free_ent^post83, hshift11^0'=hshift11^post83, hsize^0'=hsize^post83, hsize___019^0'=hsize___019^post83, hsize___027^0'=hsize___027^post83, hsize_reg10^0'=hsize_reg10^post83, i21^0'=i21^post83, i29^0'=i29^post83, i3^0'=i3^post83, i41^0'=i41^post83, i45^0'=i45^post83, i6^0'=i6^post83, in_count^0'=in_count^post83, incnt^0'=incnt^post83, m122^0'=m122^post83, m130^0'=m130^post83, maxbits^0'=maxbits^post83, maxcode^0'=maxcode^post83, maxmaxcode^0'=maxmaxcode^post83, n40^0'=n40^post83, n44^0'=n44^post83, n_bits^0'=n_bits^post83, offset^0'=offset^post83, out_count^0'=out_count^post83, r_off32^0'=r_off32^post83, rat26^0'=rat26^post83, ratio^0'=ratio^post83, ret_getbyte18^0'=ret_getbyte18^post83, ret_getbyte25^0'=ret_getbyte25^post83, seed2^0'=seed2^post83, tabort4^0'=tabort4^post83, tmp12^0'=tmp12^post83, tmp___014^0'=tmp___014^post83, tmp___017^0'=tmp___017^post83, tmp___024^0'=tmp___024^post83, tmp___115^0'=tmp___115^post83, (maxmaxcode^0-maxmaxcode^post83 == 0 /\ free_ent^0-free_ent^post83 == 0 /\ -disp9^post83+disp9^0 == 0 /\ -ent8^post83+ent8^0 == 0 /\ -fcode5^post83+fcode5^0 == 0 /\ __const_9^0-__const_9^post83 == 0 /\ -hsize_reg10^post83+hsize_reg10^0 == 0 /\ -tmp___017^post83+tmp___017^0 == 0 /\ -tmp___024^post83+tmp___024^0 == 0 /\ rat26^post83-__const_2147483647^0 == 0 /\ tmp___014^0-tmp___014^post83 == 0 /\ -__const_10000^post83+__const_10000^0 == 0 /\ bits33^0-bits33^post83 == 0 /\ n40^0-n40^post83 == 0 /\ i21^0-i21^post83 == 0 /\ -__const_256^post83+__const_256^0 == 0 /\ -tabort4^post83+tabort4^0 == 0 /\ i3^0-i3^post83 == 0 /\ tmp12^0-tmp12^post83 == 0 /\ checkpoint^0-checkpoint^post83 == 0 /\ __const_257^0-__const_257^post83 == 0 /\ rat26^0 <= 0 /\ rat26^0 == 0 /\ apsim_incnt^0-apsim_incnt^post83 == 0 /\ n44^0-n44^post83 == 0 /\ -n_bits^post83+n_bits^0 == 0 /\ out_count^0-out_count^post83 == 0 /\ -i29^post83+i29^0 == 0 /\ -apsim_bound11113^post83+apsim_bound11113^0 == 0 /\ -__const_50^post83+__const_50^0 == 0 /\ offset^0-offset^post83 == 0 /\ __const_65536^0-__const_65536^post83 == 0 /\ exit_stat^0-exit_stat^post83 == 0 /\ count^0-count^post83 == 0 /\ __const_16^0-__const_16^post83 == 0 /\ -rat26^0 <= 0 /\ -clear_flg^post83+clear_flg^0 == 0 /\ -ratio^post83+ratio^0 == 0 /\ -ret_getbyte18^post83+ret_getbyte18^0 == 0 /\ -maxcode^post83+maxcode^0 == 0 /\ -maxbits^post83+maxbits^0 == 0 /\ -c7^post83+c7^0 == 0 /\ -i41^post83+i41^0 == 0 /\ -hsize^post83+hsize^0 == 0 /\ m130^0-m130^post83 == 0 /\ -i45^post83+i45^0 == 0 /\ __const_53^0-__const_53^post83 == 0 /\ -m122^post83+m122^0 == 0 /\ -__const_8388607^post83+__const_8388607^0 == 0 /\ __const_8^0-__const_8^post83 == 0 /\ bytes_out^0-bytes_out^post83 == 0 /\ -incnt^post83+incnt^0 == 0 /\ block_compress^0-block_compress^post83 == 0 /\ tmp___115^0-tmp___115^post83 == 0 /\ ret_getbyte25^0-ret_getbyte25^post83 == 0 /\ -code31^post83+code31^0 == 0 /\ i6^0-i6^post83 == 0 /\ c37^0-c37^post83 == 0 /\ hsize___027^0-hsize___027^post83 == 0 /\ seed2^0-seed2^post83 == 0 /\ hsize___019^0-hsize___019^post83 == 0 /\ __const_429496^0-__const_429496^post83 == 0 /\ __const_2147483647^0-__const_2147483647^post83 == 0 /\ -in_count^post83+in_count^0 == 0 /\ -r_off32^post83+r_off32^0 == 0 /\ hshift11^0-hshift11^post83 == 0), cost: 1
	New rule:
	l54 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=__const_2147483647^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
	
		propagated equality maxmaxcode^post83 = maxmaxcode^0
		
		propagated equality free_ent^post83 = free_ent^0
		
		propagated equality disp9^post83 = disp9^0
		
		propagated equality ent8^post83 = ent8^0
		
		propagated equality fcode5^post83 = fcode5^0
		
		propagated equality __const_9^post83 = __const_9^0
		
		propagated equality hsize_reg10^post83 = hsize_reg10^0
		
		propagated equality tmp___017^post83 = tmp___017^0
		
		propagated equality tmp___024^post83 = tmp___024^0
		
		propagated equality rat26^post83 = __const_2147483647^0
		
		propagated equality tmp___014^post83 = tmp___014^0
		
		propagated equality __const_10000^post83 = __const_10000^0
		
		propagated equality bits33^post83 = bits33^0
		
		propagated equality n40^post83 = n40^0
		
		propagated equality i21^post83 = i21^0
		
		propagated equality __const_256^post83 = __const_256^0
		
		propagated equality tabort4^post83 = tabort4^0
		
		propagated equality i3^post83 = i3^0
		
		propagated equality tmp12^post83 = tmp12^0
		
		propagated equality checkpoint^post83 = checkpoint^0
		
		propagated equality __const_257^post83 = __const_257^0
		
		propagated equality apsim_incnt^post83 = apsim_incnt^0
		
		propagated equality n44^post83 = n44^0
		
		propagated equality n_bits^post83 = n_bits^0
		
		propagated equality out_count^post83 = out_count^0
		
		propagated equality i29^post83 = i29^0
		
		propagated equality apsim_bound11113^post83 = apsim_bound11113^0
		
		propagated equality __const_50^post83 = __const_50^0
		
		propagated equality offset^post83 = offset^0
		
		propagated equality __const_65536^post83 = __const_65536^0
		
		propagated equality exit_stat^post83 = exit_stat^0
		
		propagated equality count^post83 = count^0
		
		propagated equality __const_16^post83 = __const_16^0
		
		propagated equality clear_flg^post83 = clear_flg^0
		
		propagated equality ratio^post83 = ratio^0
		
		propagated equality ret_getbyte18^post83 = ret_getbyte18^0
		
		propagated equality maxcode^post83 = maxcode^0
		
		propagated equality maxbits^post83 = maxbits^0
		
		propagated equality c7^post83 = c7^0
		
		propagated equality i41^post83 = i41^0
		
		propagated equality hsize^post83 = hsize^0
		
		propagated equality m130^post83 = m130^0
		
		propagated equality i45^post83 = i45^0
		
		propagated equality __const_53^post83 = __const_53^0
		
		propagated equality m122^post83 = m122^0
		
		propagated equality __const_8388607^post83 = __const_8388607^0
		
		propagated equality __const_8^post83 = __const_8^0
		
		propagated equality bytes_out^post83 = bytes_out^0
		
		propagated equality incnt^post83 = incnt^0
		
		propagated equality block_compress^post83 = block_compress^0
		
		propagated equality tmp___115^post83 = tmp___115^0
		
		propagated equality ret_getbyte25^post83 = ret_getbyte25^0
		
		propagated equality code31^post83 = code31^0
		
		propagated equality i6^post83 = i6^0
		
		propagated equality c37^post83 = c37^0
		
		propagated equality hsize___027^post83 = hsize___027^0
		
		propagated equality seed2^post83 = seed2^0
		
		propagated equality hsize___019^post83 = hsize___019^0
		
		propagated equality __const_429496^post83 = __const_429496^0
		
		propagated equality __const_2147483647^post83 = __const_2147483647^0
		
		propagated equality in_count^post83 = in_count^0
		
		propagated equality r_off32^post83 = r_off32^0
		
		propagated equality hshift11^post83 = hshift11^0
		
	Simplified Guard

	Original rule:
	l54 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=__const_2147483647^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
	New rule:
	l54 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=__const_2147483647^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l54 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=__const_2147483647^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
	New rule:
	l54 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=__const_2147483647^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l54 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=__const_2147483647^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
	New rule:
	l54 -> l53 : rat26^0'=__const_2147483647^0, (rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l55 -> l18 : __const_10000^0'=__const_10000^post84, __const_16^0'=__const_16^post84, __const_2147483647^0'=__const_2147483647^post84, __const_256^0'=__const_256^post84, __const_257^0'=__const_257^post84, __const_429496^0'=__const_429496^post84, __const_50^0'=__const_50^post84, __const_53^0'=__const_53^post84, __const_65536^0'=__const_65536^post84, __const_8388607^0'=__const_8388607^post84, __const_8^0'=__const_8^post84, __const_9^0'=__const_9^post84, apsim_bound11113^0'=apsim_bound11113^post84, apsim_incnt^0'=apsim_incnt^post84, bits33^0'=bits33^post84, block_compress^0'=block_compress^post84, bytes_out^0'=bytes_out^post84, c37^0'=c37^post84, c7^0'=c7^post84, checkpoint^0'=checkpoint^post84, clear_flg^0'=clear_flg^post84, code31^0'=code31^post84, count^0'=count^post84, disp9^0'=disp9^post84, ent8^0'=ent8^post84, exit_stat^0'=exit_stat^post84, fcode5^0'=fcode5^post84, free_ent^0'=free_ent^post84, hshift11^0'=hshift11^post84, hsize^0'=hsize^post84, hsize___019^0'=hsize___019^post84, hsize___027^0'=hsize___027^post84, hsize_reg10^0'=hsize_reg10^post84, i21^0'=i21^post84, i29^0'=i29^post84, i3^0'=i3^post84, i41^0'=i41^post84, i45^0'=i45^post84, i6^0'=i6^post84, in_count^0'=in_count^post84, incnt^0'=incnt^post84, m122^0'=m122^post84, m130^0'=m130^post84, maxbits^0'=maxbits^post84, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n40^0'=n40^post84, n44^0'=n44^post84, n_bits^0'=n_bits^post84, offset^0'=offset^post84, out_count^0'=out_count^post84, r_off32^0'=r_off32^post84, rat26^0'=rat26^post84, ratio^0'=ratio^post84, ret_getbyte18^0'=ret_getbyte18^post84, ret_getbyte25^0'=ret_getbyte25^post84, seed2^0'=seed2^post84, tabort4^0'=tabort4^post84, tmp12^0'=tmp12^post84, tmp___014^0'=tmp___014^post84, tmp___017^0'=tmp___017^post84, tmp___024^0'=tmp___024^post84, tmp___115^0'=tmp___115^post84, (0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post84 == 0 /\ n44^0-n44^post84 == 0 /\ -__const_10000^0+checkpoint^post84 == 0 /\ -c7^post84+c7^0 == 0 /\ hsize___027^0-hsize___027^post84 == 0 /\ -c37^post84+c37^0 == 0 /\ -ret_getbyte18^post84+ret_getbyte18^0 == 0 /\ incnt^post84-count^0 == 0 /\ __const_8388607^0-__const_8388607^post84 == 0 /\ -hsize_reg10^post84+hsize_reg10^0 == 0 /\ -hsize^post84+hsize^0 == 0 /\ ratio^post84 == 0 /\ -hsize___019^post84+hsize___019^0 == 0 /\ -n40^post84+n40^0 == 0 /\ -i45^post84+i45^0 == 0 /\ -m122^post84+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post84 == 0 /\ out_count^post84 == 0 /\ exit_stat^0-exit_stat^post84 == 0 /\ -i21^post84+i21^0 == 0 /\ -code31^post84+code31^0 == 0 /\ -__const_9^0+n_bits^post84 == 0 /\ -tabort4^post84+tabort4^0 == 0 /\ tmp12^0-tmp12^post84 == 0 /\ -__const_256^post84+__const_256^0 == 0 /\ __const_9^0-__const_9^post84 == 0 /\ tmp___014^0-tmp___014^post84 == 0 /\ m130^0-m130^post84 == 0 /\ i3^0-i3^post84 == 0 /\ bits33^0-bits33^post84 == 0 /\ -__const_53^0+apsim_incnt^post84 == 0 /\ -r_off32^post84+r_off32^0 == 0 /\ count^0-count^post84 == 0 /\ -__const_10000^post84+__const_10000^0 == 0 /\ -3+bytes_out^post84 == 0 /\ -disp9^post84+disp9^0 == 0 /\ __const_53^0-__const_53^post84 == 0 /\ -tmp___017^post84+tmp___017^0 == 0 /\ -i3^0+__const_50^0 <= 0 /\ -ent8^post84+ent8^0 == 0 /\ -tmp___024^post84+tmp___024^0 == 0 /\ tmp___115^0-tmp___115^post84 == 0 /\ __const_65536^0-__const_65536^post84 == 0 /\ -free_ent^post84+free_ent^0 == 0 /\ i6^post84 == 0 /\ maxbits^post84-__const_16^0 == 0 /\ -__const_429496^post84+__const_429496^0 == 0 /\ __const_16^0-__const_16^post84 == 0 /\ -__const_50^post84+__const_50^0 == 0 /\ hshift11^0-hshift11^post84 == 0 /\ -seed2^post84+seed2^0 == 0 /\ rat26^0-rat26^post84 == 0 /\ __const_257^0-__const_257^post84 == 0 /\ -i29^post84+i29^0 == 0 /\ -1+in_count^post84 == 0 /\ -__const_2147483647^post84+__const_2147483647^0 == 0 /\ -i41^post84+i41^0 == 0 /\ fcode5^0-fcode5^post84 == 0 /\ offset^post84 == 0 /\ __const_8^0-__const_8^post84 == 0 /\ clear_flg^post84 == 0 /\ -block_compress^post84+block_compress^0 == 0), cost: 1
	New rule:
	l55 -> l18 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=__const_53^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=3, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=__const_10000^0, clear_flg^0'=0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=0, in_count^0'=1, incnt^0'=count^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=__const_16^0, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=__const_9^0, offset^0'=0, out_count^0'=0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -i3^0+__const_50^0 <= 0), cost: 1
	
		propagated equality ret_getbyte25^post84 = ret_getbyte25^0
		
		propagated equality n44^post84 = n44^0
		
		propagated equality checkpoint^post84 = __const_10000^0
		
		propagated equality c7^post84 = c7^0
		
		propagated equality hsize___027^post84 = hsize___027^0
		
		propagated equality c37^post84 = c37^0
		
		propagated equality ret_getbyte18^post84 = ret_getbyte18^0
		
		propagated equality incnt^post84 = count^0
		
		propagated equality __const_8388607^post84 = __const_8388607^0
		
		propagated equality hsize_reg10^post84 = hsize_reg10^0
		
		propagated equality hsize^post84 = hsize^0
		
		propagated equality ratio^post84 = 0
		
		propagated equality hsize___019^post84 = hsize___019^0
		
		propagated equality n40^post84 = n40^0
		
		propagated equality i45^post84 = i45^0
		
		propagated equality m122^post84 = m122^0
		
		propagated equality apsim_bound11113^post84 = apsim_bound11113^0
		
		propagated equality out_count^post84 = 0
		
		propagated equality exit_stat^post84 = exit_stat^0
		
		propagated equality i21^post84 = i21^0
		
		propagated equality code31^post84 = code31^0
		
		propagated equality n_bits^post84 = __const_9^0
		
		propagated equality tabort4^post84 = tabort4^0
		
		propagated equality tmp12^post84 = tmp12^0
		
		propagated equality __const_256^post84 = __const_256^0
		
		propagated equality __const_9^post84 = __const_9^0
		
		propagated equality tmp___014^post84 = tmp___014^0
		
		propagated equality m130^post84 = m130^0
		
		propagated equality i3^post84 = i3^0
		
		propagated equality bits33^post84 = bits33^0
		
		propagated equality apsim_incnt^post84 = __const_53^0
		
		propagated equality r_off32^post84 = r_off32^0
		
		propagated equality count^post84 = count^0
		
		propagated equality __const_10000^post84 = __const_10000^0
		
		propagated equality bytes_out^post84 = 3
		
		propagated equality disp9^post84 = disp9^0
		
		propagated equality __const_53^post84 = __const_53^0
		
		propagated equality tmp___017^post84 = tmp___017^0
		
		propagated equality ent8^post84 = ent8^0
		
		propagated equality tmp___024^post84 = tmp___024^0
		
		propagated equality tmp___115^post84 = tmp___115^0
		
		propagated equality __const_65536^post84 = __const_65536^0
		
		propagated equality free_ent^post84 = free_ent^0
		
		propagated equality i6^post84 = 0
		
		propagated equality maxbits^post84 = __const_16^0
		
		propagated equality __const_429496^post84 = __const_429496^0
		
		propagated equality __const_16^post84 = __const_16^0
		
		propagated equality __const_50^post84 = __const_50^0
		
		propagated equality hshift11^post84 = hshift11^0
		
		propagated equality seed2^post84 = seed2^0
		
		propagated equality rat26^post84 = rat26^0
		
		propagated equality __const_257^post84 = __const_257^0
		
		propagated equality i29^post84 = i29^0
		
		propagated equality in_count^post84 = 1
		
		propagated equality __const_2147483647^post84 = __const_2147483647^0
		
		propagated equality i41^post84 = i41^0
		
		propagated equality fcode5^post84 = fcode5^0
		
		propagated equality offset^post84 = 0
		
		propagated equality __const_8^post84 = __const_8^0
		
		propagated equality clear_flg^post84 = 0
		
		propagated equality block_compress^post84 = block_compress^0
		
	Simplified Guard

	Original rule:
	l55 -> l18 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=__const_53^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=3, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=__const_10000^0, clear_flg^0'=0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=0, in_count^0'=1, incnt^0'=count^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=__const_16^0, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=__const_9^0, offset^0'=0, out_count^0'=0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -i3^0+__const_50^0 <= 0), cost: 1
	New rule:
	l55 -> l18 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=__const_53^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=3, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=__const_10000^0, clear_flg^0'=0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=0, in_count^0'=1, incnt^0'=count^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=__const_16^0, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=__const_9^0, offset^0'=0, out_count^0'=0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -i3^0+__const_50^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l55 -> l18 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=__const_53^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=3, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=__const_10000^0, clear_flg^0'=0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=0, in_count^0'=1, incnt^0'=count^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=__const_16^0, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=__const_9^0, offset^0'=0, out_count^0'=0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -i3^0+__const_50^0 <= 0, cost: 1
	New rule:
	l55 -> l18 : apsim_incnt^0'=__const_53^0, bytes_out^0'=3, checkpoint^0'=__const_10000^0, clear_flg^0'=0, i6^0'=0, in_count^0'=1, incnt^0'=count^0, maxbits^0'=__const_16^0, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n_bits^0'=__const_9^0, offset^0'=0, out_count^0'=0, ratio^0'=0, -i3^0+__const_50^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l55 -> l56 : __const_10000^0'=__const_10000^post85, __const_16^0'=__const_16^post85, __const_2147483647^0'=__const_2147483647^post85, __const_256^0'=__const_256^post85, __const_257^0'=__const_257^post85, __const_429496^0'=__const_429496^post85, __const_50^0'=__const_50^post85, __const_53^0'=__const_53^post85, __const_65536^0'=__const_65536^post85, __const_8388607^0'=__const_8388607^post85, __const_8^0'=__const_8^post85, __const_9^0'=__const_9^post85, apsim_bound11113^0'=apsim_bound11113^post85, apsim_incnt^0'=apsim_incnt^post85, bits33^0'=bits33^post85, block_compress^0'=block_compress^post85, bytes_out^0'=bytes_out^post85, c37^0'=c37^post85, c7^0'=c7^post85, checkpoint^0'=checkpoint^post85, clear_flg^0'=clear_flg^post85, code31^0'=code31^post85, count^0'=count^post85, disp9^0'=disp9^post85, ent8^0'=ent8^post85, exit_stat^0'=exit_stat^post85, fcode5^0'=fcode5^post85, free_ent^0'=free_ent^post85, hshift11^0'=hshift11^post85, hsize^0'=hsize^post85, hsize___019^0'=hsize___019^post85, hsize___027^0'=hsize___027^post85, hsize_reg10^0'=hsize_reg10^post85, i21^0'=i21^post85, i29^0'=i29^post85, i3^0'=i3^post85, i41^0'=i41^post85, i45^0'=i45^post85, i6^0'=i6^post85, in_count^0'=in_count^post85, incnt^0'=incnt^post85, m122^0'=m122^post85, m130^0'=m130^post85, maxbits^0'=maxbits^post85, maxcode^0'=maxcode^post85, maxmaxcode^0'=maxmaxcode^post85, n40^0'=n40^post85, n44^0'=n44^post85, n_bits^0'=n_bits^post85, offset^0'=offset^post85, out_count^0'=out_count^post85, r_off32^0'=r_off32^post85, rat26^0'=rat26^post85, ratio^0'=ratio^post85, ret_getbyte18^0'=ret_getbyte18^post85, ret_getbyte25^0'=ret_getbyte25^post85, seed2^0'=seed2^post85, tabort4^0'=tabort4^post85, tmp12^0'=tmp12^post85, tmp___014^0'=tmp___014^post85, tmp___017^0'=tmp___017^post85, tmp___024^0'=tmp___024^post85, tmp___115^0'=tmp___115^post85, (0 == 0 /\ __const_257^0-__const_257^post85 == 0 /\ i21^0-i21^post85 == 0 /\ exit_stat^0-exit_stat^post85 == 0 /\ __const_9^0-__const_9^post85 == 0 /\ rat26^0-rat26^post85 == 0 /\ tmp12^0-tmp12^post85 == 0 /\ checkpoint^0-checkpoint^post85 == 0 /\ offset^0-offset^post85 == 0 /\ i6^0-i6^post85 == 0 /\ maxmaxcode^0-maxmaxcode^post85 == 0 /\ hsize___027^0-hsize___027^post85 == 0 /\ out_count^0-out_count^post85 == 0 /\ -__const_50^post85+__const_50^0 == 0 /\ c37^0-c37^post85 == 0 /\ bits33^0-bits33^post85 == 0 /\ __const_53^0-__const_53^post85 == 0 /\ -incnt^post85+incnt^0 == 0 /\ -ent8^post85+ent8^0 == 0 /\ m130^0-m130^post85 == 0 /\ -apsim_bound11113^post85+apsim_bound11113^0 == 0 /\ -hsize^post85+hsize^0 == 0 /\ __const_65536^0-__const_65536^post85 == 0 /\ -tmp___017^post85+tmp___017^0 == 0 /\ apsim_incnt^0-apsim_incnt^post85 == 0 /\ -__const_8388607^post85+__const_8388607^0 == 0 /\ -i29^post85+i29^0 == 0 /\ n44^0-n44^post85 == 0 /\ tmp___014^0-tmp___014^post85 == 0 /\ -n40^post85+n40^0 == 0 /\ -maxcode^post85+maxcode^0 == 0 /\ -i41^post85+i41^0 == 0 /\ -fcode5^post85+fcode5^0 == 0 /\ __const_429496^0-__const_429496^post85 == 0 /\ -in_count^post85+in_count^0 == 0 /\ -r_off32^post85+r_off32^0 == 0 /\ -ratio^post85+ratio^0 == 0 /\ -ret_getbyte18^post85+ret_getbyte18^0 == 0 /\ count^0-count^post85 == 0 /\ -c7^post85+c7^0 == 0 /\ __const_16^0-__const_16^post85 == 0 /\ __const_8^0-__const_8^post85 == 0 /\ -1-i3^0+i3^post85 == 0 /\ -clear_flg^post85+clear_flg^0 == 0 /\ hshift11^0-hshift11^post85 == 0 /\ -hsize_reg10^post85+hsize_reg10^0 == 0 /\ -n_bits^post85+n_bits^0 == 0 /\ 1+i3^0-__const_50^0 <= 0 /\ -__const_256^post85+__const_256^0 == 0 /\ hsize___019^0-hsize___019^post85 == 0 /\ -disp9^post85+disp9^0 == 0 /\ -m122^post85+m122^0 == 0 /\ __const_2147483647^0-__const_2147483647^post85 == 0 /\ ret_getbyte25^0-ret_getbyte25^post85 == 0 /\ -tmp___024^post85+tmp___024^0 == 0 /\ -__const_10000^post85+__const_10000^0 == 0 /\ block_compress^0-block_compress^post85 == 0 /\ -code31^post85+code31^0 == 0 /\ -maxbits^post85+maxbits^0 == 0 /\ tabort4^post85-i3^0 == 0 /\ -i45^post85+i45^0 == 0 /\ -free_ent^post85+free_ent^0 == 0 /\ -bytes_out^post85+bytes_out^0 == 0 /\ tmp___115^0-tmp___115^post85 == 0), cost: 1
	New rule:
	l55 -> l56 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=1+i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^post85, tabort4^0'=i3^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i3^0-__const_50^0 <= 0), cost: 1
	
		propagated equality __const_257^post85 = __const_257^0
		
		propagated equality i21^post85 = i21^0
		
		propagated equality exit_stat^post85 = exit_stat^0
		
		propagated equality __const_9^post85 = __const_9^0
		
		propagated equality rat26^post85 = rat26^0
		
		propagated equality tmp12^post85 = tmp12^0
		
		propagated equality checkpoint^post85 = checkpoint^0
		
		propagated equality offset^post85 = offset^0
		
		propagated equality i6^post85 = i6^0
		
		propagated equality maxmaxcode^post85 = maxmaxcode^0
		
		propagated equality hsize___027^post85 = hsize___027^0
		
		propagated equality out_count^post85 = out_count^0
		
		propagated equality __const_50^post85 = __const_50^0
		
		propagated equality c37^post85 = c37^0
		
		propagated equality bits33^post85 = bits33^0
		
		propagated equality __const_53^post85 = __const_53^0
		
		propagated equality incnt^post85 = incnt^0
		
		propagated equality ent8^post85 = ent8^0
		
		propagated equality m130^post85 = m130^0
		
		propagated equality apsim_bound11113^post85 = apsim_bound11113^0
		
		propagated equality hsize^post85 = hsize^0
		
		propagated equality __const_65536^post85 = __const_65536^0
		
		propagated equality tmp___017^post85 = tmp___017^0
		
		propagated equality apsim_incnt^post85 = apsim_incnt^0
		
		propagated equality __const_8388607^post85 = __const_8388607^0
		
		propagated equality i29^post85 = i29^0
		
		propagated equality n44^post85 = n44^0
		
		propagated equality tmp___014^post85 = tmp___014^0
		
		propagated equality n40^post85 = n40^0
		
		propagated equality maxcode^post85 = maxcode^0
		
		propagated equality i41^post85 = i41^0
		
		propagated equality fcode5^post85 = fcode5^0
		
		propagated equality __const_429496^post85 = __const_429496^0
		
		propagated equality in_count^post85 = in_count^0
		
		propagated equality r_off32^post85 = r_off32^0
		
		propagated equality ratio^post85 = ratio^0
		
		propagated equality ret_getbyte18^post85 = ret_getbyte18^0
		
		propagated equality count^post85 = count^0
		
		propagated equality c7^post85 = c7^0
		
		propagated equality __const_16^post85 = __const_16^0
		
		propagated equality __const_8^post85 = __const_8^0
		
		propagated equality i3^post85 = 1+i3^0
		
		propagated equality clear_flg^post85 = clear_flg^0
		
		propagated equality hshift11^post85 = hshift11^0
		
		propagated equality hsize_reg10^post85 = hsize_reg10^0
		
		propagated equality n_bits^post85 = n_bits^0
		
		propagated equality __const_256^post85 = __const_256^0
		
		propagated equality hsize___019^post85 = hsize___019^0
		
		propagated equality disp9^post85 = disp9^0
		
		propagated equality m122^post85 = m122^0
		
		propagated equality __const_2147483647^post85 = __const_2147483647^0
		
		propagated equality ret_getbyte25^post85 = ret_getbyte25^0
		
		propagated equality tmp___024^post85 = tmp___024^0
		
		propagated equality __const_10000^post85 = __const_10000^0
		
		propagated equality block_compress^post85 = block_compress^0
		
		propagated equality code31^post85 = code31^0
		
		propagated equality maxbits^post85 = maxbits^0
		
		propagated equality tabort4^post85 = i3^0
		
		propagated equality i45^post85 = i45^0
		
		propagated equality free_ent^post85 = free_ent^0
		
		propagated equality bytes_out^post85 = bytes_out^0
		
		propagated equality tmp___115^post85 = tmp___115^0
		
	Simplified Guard

	Original rule:
	l55 -> l56 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=1+i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^post85, tabort4^0'=i3^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i3^0-__const_50^0 <= 0), cost: 1
	New rule:
	l55 -> l56 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=1+i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^post85, tabort4^0'=i3^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i3^0-__const_50^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l55 -> l56 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=1+i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^post85, tabort4^0'=i3^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i3^0-__const_50^0 <= 0, cost: 1
	New rule:
	l55 -> l56 : i3^0'=1+i3^0, seed2^0'=seed2^post85, tabort4^0'=i3^0, 1+i3^0-__const_50^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l57 -> l53 : __const_10000^0'=__const_10000^post86, __const_16^0'=__const_16^post86, __const_2147483647^0'=__const_2147483647^post86, __const_256^0'=__const_256^post86, __const_257^0'=__const_257^post86, __const_429496^0'=__const_429496^post86, __const_50^0'=__const_50^post86, __const_53^0'=__const_53^post86, __const_65536^0'=__const_65536^post86, __const_8388607^0'=__const_8388607^post86, __const_8^0'=__const_8^post86, __const_9^0'=__const_9^post86, apsim_bound11113^0'=apsim_bound11113^post86, apsim_incnt^0'=apsim_incnt^post86, bits33^0'=bits33^post86, block_compress^0'=block_compress^post86, bytes_out^0'=bytes_out^post86, c37^0'=c37^post86, c7^0'=c7^post86, checkpoint^0'=checkpoint^post86, clear_flg^0'=clear_flg^post86, code31^0'=code31^post86, count^0'=count^post86, disp9^0'=disp9^post86, ent8^0'=ent8^post86, exit_stat^0'=exit_stat^post86, fcode5^0'=fcode5^post86, free_ent^0'=free_ent^post86, hshift11^0'=hshift11^post86, hsize^0'=hsize^post86, hsize___019^0'=hsize___019^post86, hsize___027^0'=hsize___027^post86, hsize_reg10^0'=hsize_reg10^post86, i21^0'=i21^post86, i29^0'=i29^post86, i3^0'=i3^post86, i41^0'=i41^post86, i45^0'=i45^post86, i6^0'=i6^post86, in_count^0'=in_count^post86, incnt^0'=incnt^post86, m122^0'=m122^post86, m130^0'=m130^post86, maxbits^0'=maxbits^post86, maxcode^0'=maxcode^post86, maxmaxcode^0'=maxmaxcode^post86, n40^0'=n40^post86, n44^0'=n44^post86, n_bits^0'=n_bits^post86, offset^0'=offset^post86, out_count^0'=out_count^post86, r_off32^0'=r_off32^post86, rat26^0'=rat26^post86, ratio^0'=ratio^post86, ret_getbyte18^0'=ret_getbyte18^post86, ret_getbyte25^0'=ret_getbyte25^post86, seed2^0'=seed2^post86, tabort4^0'=tabort4^post86, tmp12^0'=tmp12^post86, tmp___014^0'=tmp___014^post86, tmp___017^0'=tmp___017^post86, tmp___024^0'=tmp___024^post86, tmp___115^0'=tmp___115^post86, (0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post86 == 0 /\ tmp___014^0-tmp___014^post86 == 0 /\ -r_off32^post86+r_off32^0 == 0 /\ c37^0-c37^post86 == 0 /\ -bytes_out^post86+bytes_out^0 == 0 /\ free_ent^0-free_ent^post86 == 0 /\ n40^0-n40^post86 == 0 /\ -code31^post86+code31^0 == 0 /\ hshift11^0-hshift11^post86 == 0 /\ -tabort4^post86+tabort4^0 == 0 /\ i3^0-i3^post86 == 0 /\ tmp12^0-tmp12^post86 == 0 /\ out_count^0-out_count^post86 == 0 /\ c7^0-c7^post86 == 0 /\ -fcode5^post86+fcode5^0 == 0 /\ -disp9^post86+disp9^0 == 0 /\ -tmp___017^post86+tmp___017^0 == 0 /\ -ent8^post86+ent8^0 == 0 /\ -tmp___024^post86+tmp___024^0 == 0 /\ -i29^post86+i29^0 == 0 /\ __const_9^0-__const_9^post86 == 0 /\ bits33^0-bits33^post86 == 0 /\ offset^0-offset^post86 == 0 /\ -__const_8388607^0+in_count^0 <= 0 /\ __const_16^0-__const_16^post86 == 0 /\ i21^0-i21^post86 == 0 /\ exit_stat^0-exit_stat^post86 == 0 /\ apsim_incnt^0-apsim_incnt^post86 == 0 /\ -hsize_reg10^post86+hsize_reg10^0 == 0 /\ maxmaxcode^0-maxmaxcode^post86 == 0 /\ -__const_256^post86+__const_256^0 == 0 /\ -__const_50^post86+__const_50^0 == 0 /\ -m122^post86+m122^0 == 0 /\ m130^0-m130^post86 == 0 /\ hsize___019^0-hsize___019^post86 == 0 /\ -i41^post86+i41^0 == 0 /\ -__const_10000^post86+__const_10000^0 == 0 /\ __const_65536^0-__const_65536^post86 == 0 /\ -n_bits^post86+n_bits^0 == 0 /\ -incnt^post86+incnt^0 == 0 /\ count^0-count^post86 == 0 /\ __const_53^0-__const_53^post86 == 0 /\ -i45^post86+i45^0 == 0 /\ -__const_2147483647^post86+__const_2147483647^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post86 == 0 /\ maxbits^0-maxbits^post86 == 0 /\ n44^0-n44^post86 == 0 /\ -ret_getbyte18^post86+ret_getbyte18^0 == 0 /\ __const_8^0-__const_8^post86 == 0 /\ -in_count^post86+in_count^0 == 0 /\ __const_429496^0-__const_429496^post86 == 0 /\ -__const_8388607^post86+__const_8388607^0 == 0 /\ -maxcode^post86+maxcode^0 == 0 /\ __const_257^0-__const_257^post86 == 0 /\ -clear_flg^post86+clear_flg^0 == 0 /\ checkpoint^0-checkpoint^post86 == 0 /\ block_compress^0-block_compress^post86 == 0 /\ i6^0-i6^post86 == 0 /\ tmp___115^0-tmp___115^post86 == 0 /\ ratio^0-ratio^post86 == 0 /\ -hsize^post86+hsize^0 == 0 /\ seed2^0-seed2^post86 == 0 /\ -hsize___027^post86+hsize___027^0 == 0), cost: 1
	New rule:
	l57 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post86, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -__const_8388607^0+in_count^0 <= 0), cost: 1
	
		propagated equality apsim_bound11113^post86 = apsim_bound11113^0
		
		propagated equality tmp___014^post86 = tmp___014^0
		
		propagated equality r_off32^post86 = r_off32^0
		
		propagated equality c37^post86 = c37^0
		
		propagated equality bytes_out^post86 = bytes_out^0
		
		propagated equality free_ent^post86 = free_ent^0
		
		propagated equality n40^post86 = n40^0
		
		propagated equality code31^post86 = code31^0
		
		propagated equality hshift11^post86 = hshift11^0
		
		propagated equality tabort4^post86 = tabort4^0
		
		propagated equality i3^post86 = i3^0
		
		propagated equality tmp12^post86 = tmp12^0
		
		propagated equality out_count^post86 = out_count^0
		
		propagated equality c7^post86 = c7^0
		
		propagated equality fcode5^post86 = fcode5^0
		
		propagated equality disp9^post86 = disp9^0
		
		propagated equality tmp___017^post86 = tmp___017^0
		
		propagated equality ent8^post86 = ent8^0
		
		propagated equality tmp___024^post86 = tmp___024^0
		
		propagated equality i29^post86 = i29^0
		
		propagated equality __const_9^post86 = __const_9^0
		
		propagated equality bits33^post86 = bits33^0
		
		propagated equality offset^post86 = offset^0
		
		propagated equality __const_16^post86 = __const_16^0
		
		propagated equality i21^post86 = i21^0
		
		propagated equality exit_stat^post86 = exit_stat^0
		
		propagated equality apsim_incnt^post86 = apsim_incnt^0
		
		propagated equality hsize_reg10^post86 = hsize_reg10^0
		
		propagated equality maxmaxcode^post86 = maxmaxcode^0
		
		propagated equality __const_256^post86 = __const_256^0
		
		propagated equality __const_50^post86 = __const_50^0
		
		propagated equality m122^post86 = m122^0
		
		propagated equality m130^post86 = m130^0
		
		propagated equality hsize___019^post86 = hsize___019^0
		
		propagated equality i41^post86 = i41^0
		
		propagated equality __const_10000^post86 = __const_10000^0
		
		propagated equality __const_65536^post86 = __const_65536^0
		
		propagated equality n_bits^post86 = n_bits^0
		
		propagated equality incnt^post86 = incnt^0
		
		propagated equality count^post86 = count^0
		
		propagated equality __const_53^post86 = __const_53^0
		
		propagated equality i45^post86 = i45^0
		
		propagated equality __const_2147483647^post86 = __const_2147483647^0
		
		propagated equality ret_getbyte25^post86 = ret_getbyte25^0
		
		propagated equality maxbits^post86 = maxbits^0
		
		propagated equality n44^post86 = n44^0
		
		propagated equality ret_getbyte18^post86 = ret_getbyte18^0
		
		propagated equality __const_8^post86 = __const_8^0
		
		propagated equality in_count^post86 = in_count^0
		
		propagated equality __const_429496^post86 = __const_429496^0
		
		propagated equality __const_8388607^post86 = __const_8388607^0
		
		propagated equality maxcode^post86 = maxcode^0
		
		propagated equality __const_257^post86 = __const_257^0
		
		propagated equality clear_flg^post86 = clear_flg^0
		
		propagated equality checkpoint^post86 = checkpoint^0
		
		propagated equality block_compress^post86 = block_compress^0
		
		propagated equality i6^post86 = i6^0
		
		propagated equality tmp___115^post86 = tmp___115^0
		
		propagated equality ratio^post86 = ratio^0
		
		propagated equality hsize^post86 = hsize^0
		
		propagated equality seed2^post86 = seed2^0
		
		propagated equality hsize___027^post86 = hsize___027^0
		
	Simplified Guard

	Original rule:
	l57 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post86, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -__const_8388607^0+in_count^0 <= 0), cost: 1
	New rule:
	l57 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post86, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -__const_8388607^0+in_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l57 -> l53 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post86, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -__const_8388607^0+in_count^0 <= 0, cost: 1
	New rule:
	l57 -> l53 : rat26^0'=rat26^post86, -__const_8388607^0+in_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l57 -> l54 : __const_10000^0'=__const_10000^post87, __const_16^0'=__const_16^post87, __const_2147483647^0'=__const_2147483647^post87, __const_256^0'=__const_256^post87, __const_257^0'=__const_257^post87, __const_429496^0'=__const_429496^post87, __const_50^0'=__const_50^post87, __const_53^0'=__const_53^post87, __const_65536^0'=__const_65536^post87, __const_8388607^0'=__const_8388607^post87, __const_8^0'=__const_8^post87, __const_9^0'=__const_9^post87, apsim_bound11113^0'=apsim_bound11113^post87, apsim_incnt^0'=apsim_incnt^post87, bits33^0'=bits33^post87, block_compress^0'=block_compress^post87, bytes_out^0'=bytes_out^post87, c37^0'=c37^post87, c7^0'=c7^post87, checkpoint^0'=checkpoint^post87, clear_flg^0'=clear_flg^post87, code31^0'=code31^post87, count^0'=count^post87, disp9^0'=disp9^post87, ent8^0'=ent8^post87, exit_stat^0'=exit_stat^post87, fcode5^0'=fcode5^post87, free_ent^0'=free_ent^post87, hshift11^0'=hshift11^post87, hsize^0'=hsize^post87, hsize___019^0'=hsize___019^post87, hsize___027^0'=hsize___027^post87, hsize_reg10^0'=hsize_reg10^post87, i21^0'=i21^post87, i29^0'=i29^post87, i3^0'=i3^post87, i41^0'=i41^post87, i45^0'=i45^post87, i6^0'=i6^post87, in_count^0'=in_count^post87, incnt^0'=incnt^post87, m122^0'=m122^post87, m130^0'=m130^post87, maxbits^0'=maxbits^post87, maxcode^0'=maxcode^post87, maxmaxcode^0'=maxmaxcode^post87, n40^0'=n40^post87, n44^0'=n44^post87, n_bits^0'=n_bits^post87, offset^0'=offset^post87, out_count^0'=out_count^post87, r_off32^0'=r_off32^post87, rat26^0'=rat26^post87, ratio^0'=ratio^post87, ret_getbyte18^0'=ret_getbyte18^post87, ret_getbyte25^0'=ret_getbyte25^post87, seed2^0'=seed2^post87, tabort4^0'=tabort4^post87, tmp12^0'=tmp12^post87, tmp___014^0'=tmp___014^post87, tmp___017^0'=tmp___017^post87, tmp___024^0'=tmp___024^post87, tmp___115^0'=tmp___115^post87, (0 == 0 /\ __const_8388607^0-__const_8388607^post87 == 0 /\ tmp___115^0-tmp___115^post87 == 0 /\ __const_16^0-__const_16^post87 == 0 /\ -clear_flg^post87+clear_flg^0 == 0 /\ -hsize_reg10^post87+hsize_reg10^0 == 0 /\ -hsize___027^post87+hsize___027^0 == 0 /\ 1+__const_8388607^0-in_count^0 <= 0 /\ -ret_getbyte18^post87+ret_getbyte18^0 == 0 /\ -maxcode^post87+maxcode^0 == 0 /\ -i45^post87+i45^0 == 0 /\ -i41^post87+i41^0 == 0 /\ -hsize^post87+hsize^0 == 0 /\ -__const_10000^post87+__const_10000^0 == 0 /\ -m122^post87+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post87 == 0 /\ -__const_2147483647^post87+__const_2147483647^0 == 0 /\ hshift11^0-hshift11^post87 == 0 /\ -incnt^post87+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post87 == 0 /\ free_ent^0-free_ent^post87 == 0 /\ __const_9^0-__const_9^post87 == 0 /\ out_count^0-out_count^post87 == 0 /\ __const_256^0-__const_256^post87 == 0 /\ -i29^post87+i29^0 == 0 /\ code31^0-code31^post87 == 0 /\ -__const_429496^post87+__const_429496^0 == 0 /\ bits33^0-bits33^post87 == 0 /\ -in_count^post87+in_count^0 == 0 /\ n40^0-n40^post87 == 0 /\ offset^0-offset^post87 == 0 /\ -n_bits^post87+n_bits^0 == 0 /\ maxbits^0-maxbits^post87 == 0 /\ -count^post87+count^0 == 0 /\ -fcode5^post87+fcode5^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post87 == 0 /\ apsim_incnt^0-apsim_incnt^post87 == 0 /\ -disp9^post87+disp9^0 == 0 /\ -tmp___017^post87+tmp___017^0 == 0 /\ i6^0-i6^post87 == 0 /\ -tmp___024^post87+tmp___024^0 == 0 /\ ent8^0-ent8^post87 == 0 /\ i21^0-i21^post87 == 0 /\ -__const_8^post87+__const_8^0 == 0 /\ -block_compress^post87+block_compress^0 == 0 /\ -checkpoint^post87+checkpoint^0 == 0 /\ -bytes_out^post87+bytes_out^0 == 0 /\ -tabort4^post87+tabort4^0 == 0 /\ exit_stat^0-exit_stat^post87 == 0 /\ hsize___019^0-hsize___019^post87 == 0 /\ -seed2^post87+seed2^0 == 0 /\ -i3^post87+i3^0 == 0 /\ c37^0-c37^post87 == 0 /\ tmp___014^0-tmp___014^post87 == 0 /\ ratio^0-ratio^post87 == 0 /\ -n44^post87+n44^0 == 0 /\ -r_off32^post87+r_off32^0 == 0 /\ m130^0-m130^post87 == 0 /\ -__const_50^post87+__const_50^0 == 0 /\ __const_53^0-__const_53^post87 == 0 /\ tmp12^0-tmp12^post87 == 0 /\ c7^0-c7^post87 == 0 /\ -__const_65536^post87+__const_65536^0 == 0 /\ __const_257^0-__const_257^post87 == 0), cost: 1
	New rule:
	l57 -> l54 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post87, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+__const_8388607^0-in_count^0 <= 0), cost: 1
	
		propagated equality __const_8388607^post87 = __const_8388607^0
		
		propagated equality tmp___115^post87 = tmp___115^0
		
		propagated equality __const_16^post87 = __const_16^0
		
		propagated equality clear_flg^post87 = clear_flg^0
		
		propagated equality hsize_reg10^post87 = hsize_reg10^0
		
		propagated equality hsize___027^post87 = hsize___027^0
		
		propagated equality ret_getbyte18^post87 = ret_getbyte18^0
		
		propagated equality maxcode^post87 = maxcode^0
		
		propagated equality i45^post87 = i45^0
		
		propagated equality i41^post87 = i41^0
		
		propagated equality hsize^post87 = hsize^0
		
		propagated equality __const_10000^post87 = __const_10000^0
		
		propagated equality m122^post87 = m122^0
		
		propagated equality apsim_bound11113^post87 = apsim_bound11113^0
		
		propagated equality __const_2147483647^post87 = __const_2147483647^0
		
		propagated equality hshift11^post87 = hshift11^0
		
		propagated equality incnt^post87 = incnt^0
		
		propagated equality maxmaxcode^post87 = maxmaxcode^0
		
		propagated equality free_ent^post87 = free_ent^0
		
		propagated equality __const_9^post87 = __const_9^0
		
		propagated equality out_count^post87 = out_count^0
		
		propagated equality __const_256^post87 = __const_256^0
		
		propagated equality i29^post87 = i29^0
		
		propagated equality code31^post87 = code31^0
		
		propagated equality __const_429496^post87 = __const_429496^0
		
		propagated equality bits33^post87 = bits33^0
		
		propagated equality in_count^post87 = in_count^0
		
		propagated equality n40^post87 = n40^0
		
		propagated equality offset^post87 = offset^0
		
		propagated equality n_bits^post87 = n_bits^0
		
		propagated equality maxbits^post87 = maxbits^0
		
		propagated equality count^post87 = count^0
		
		propagated equality fcode5^post87 = fcode5^0
		
		propagated equality ret_getbyte25^post87 = ret_getbyte25^0
		
		propagated equality apsim_incnt^post87 = apsim_incnt^0
		
		propagated equality disp9^post87 = disp9^0
		
		propagated equality tmp___017^post87 = tmp___017^0
		
		propagated equality i6^post87 = i6^0
		
		propagated equality tmp___024^post87 = tmp___024^0
		
		propagated equality ent8^post87 = ent8^0
		
		propagated equality i21^post87 = i21^0
		
		propagated equality __const_8^post87 = __const_8^0
		
		propagated equality block_compress^post87 = block_compress^0
		
		propagated equality checkpoint^post87 = checkpoint^0
		
		propagated equality bytes_out^post87 = bytes_out^0
		
		propagated equality tabort4^post87 = tabort4^0
		
		propagated equality exit_stat^post87 = exit_stat^0
		
		propagated equality hsize___019^post87 = hsize___019^0
		
		propagated equality seed2^post87 = seed2^0
		
		propagated equality i3^post87 = i3^0
		
		propagated equality c37^post87 = c37^0
		
		propagated equality tmp___014^post87 = tmp___014^0
		
		propagated equality ratio^post87 = ratio^0
		
		propagated equality n44^post87 = n44^0
		
		propagated equality r_off32^post87 = r_off32^0
		
		propagated equality m130^post87 = m130^0
		
		propagated equality __const_50^post87 = __const_50^0
		
		propagated equality __const_53^post87 = __const_53^0
		
		propagated equality tmp12^post87 = tmp12^0
		
		propagated equality c7^post87 = c7^0
		
		propagated equality __const_65536^post87 = __const_65536^0
		
		propagated equality __const_257^post87 = __const_257^0
		
	Simplified Guard

	Original rule:
	l57 -> l54 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post87, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+__const_8388607^0-in_count^0 <= 0), cost: 1
	New rule:
	l57 -> l54 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post87, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+__const_8388607^0-in_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l57 -> l54 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^post87, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+__const_8388607^0-in_count^0 <= 0, cost: 1
	New rule:
	l57 -> l54 : rat26^0'=rat26^post87, 1+__const_8388607^0-in_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l58 -> l57 : __const_10000^0'=__const_10000^post88, __const_16^0'=__const_16^post88, __const_2147483647^0'=__const_2147483647^post88, __const_256^0'=__const_256^post88, __const_257^0'=__const_257^post88, __const_429496^0'=__const_429496^post88, __const_50^0'=__const_50^post88, __const_53^0'=__const_53^post88, __const_65536^0'=__const_65536^post88, __const_8388607^0'=__const_8388607^post88, __const_8^0'=__const_8^post88, __const_9^0'=__const_9^post88, apsim_bound11113^0'=apsim_bound11113^post88, apsim_incnt^0'=apsim_incnt^post88, bits33^0'=bits33^post88, block_compress^0'=block_compress^post88, bytes_out^0'=bytes_out^post88, c37^0'=c37^post88, c7^0'=c7^post88, checkpoint^0'=checkpoint^post88, clear_flg^0'=clear_flg^post88, code31^0'=code31^post88, count^0'=count^post88, disp9^0'=disp9^post88, ent8^0'=ent8^post88, exit_stat^0'=exit_stat^post88, fcode5^0'=fcode5^post88, free_ent^0'=free_ent^post88, hshift11^0'=hshift11^post88, hsize^0'=hsize^post88, hsize___019^0'=hsize___019^post88, hsize___027^0'=hsize___027^post88, hsize_reg10^0'=hsize_reg10^post88, i21^0'=i21^post88, i29^0'=i29^post88, i3^0'=i3^post88, i41^0'=i41^post88, i45^0'=i45^post88, i6^0'=i6^post88, in_count^0'=in_count^post88, incnt^0'=incnt^post88, m122^0'=m122^post88, m130^0'=m130^post88, maxbits^0'=maxbits^post88, maxcode^0'=maxcode^post88, maxmaxcode^0'=maxmaxcode^post88, n40^0'=n40^post88, n44^0'=n44^post88, n_bits^0'=n_bits^post88, offset^0'=offset^post88, out_count^0'=out_count^post88, r_off32^0'=r_off32^post88, rat26^0'=rat26^post88, ratio^0'=ratio^post88, ret_getbyte18^0'=ret_getbyte18^post88, ret_getbyte25^0'=ret_getbyte25^post88, seed2^0'=seed2^post88, tabort4^0'=tabort4^post88, tmp12^0'=tmp12^post88, tmp___014^0'=tmp___014^post88, tmp___017^0'=tmp___017^post88, tmp___024^0'=tmp___024^post88, tmp___115^0'=tmp___115^post88, (maxcode^0-maxcode^post88 == 0 /\ -apsim_incnt^post88+apsim_incnt^0 == 0 /\ offset^0-offset^post88 == 0 /\ tabort4^0-tabort4^post88 == 0 /\ -__const_8^post88+__const_8^0 == 0 /\ exit_stat^0-exit_stat^post88 == 0 /\ tmp___017^0-tmp___017^post88 == 0 /\ hsize___027^0-hsize___027^post88 == 0 /\ __const_50^0-__const_50^post88 == 0 /\ __const_16^0-__const_16^post88 == 0 /\ -r_off32^post88+r_off32^0 == 0 /\ -n_bits^post88+n_bits^0 == 0 /\ -__const_10000^0-in_count^0+checkpoint^post88 == 0 /\ -__const_429496^post88+__const_429496^0 == 0 /\ maxmaxcode^0-maxmaxcode^post88 == 0 /\ __const_257^0-__const_257^post88 == 0 /\ -tmp___115^post88+tmp___115^0 == 0 /\ m130^0-m130^post88 == 0 /\ -__const_65536^post88+__const_65536^0 == 0 /\ -n40^post88+n40^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post88 == 0 /\ -fcode5^post88+fcode5^0 == 0 /\ n44^0-n44^post88 == 0 /\ -hsize^post88+hsize^0 == 0 /\ -incnt^post88+incnt^0 == 0 /\ __const_256^0-__const_256^post88 == 0 /\ tmp12^0-tmp12^post88 == 0 /\ ent8^0-ent8^post88 == 0 /\ apsim_bound11113^0-apsim_bound11113^post88 == 0 /\ -block_compress^post88+block_compress^0 == 0 /\ -i29^post88+i29^0 == 0 /\ -seed2^post88+seed2^0 == 0 /\ -i3^post88+i3^0 == 0 /\ i45^0-i45^post88 == 0 /\ -i41^post88+i41^0 == 0 /\ -__const_8388607^post88+__const_8388607^0 == 0 /\ -ret_getbyte25^post88+ret_getbyte25^0 == 0 /\ c37^0-c37^post88 == 0 /\ rat26^0-rat26^post88 == 0 /\ -i6^post88+i6^0 == 0 /\ bits33^0-bits33^post88 == 0 /\ -count^post88+count^0 == 0 /\ -in_count^post88+in_count^0 == 0 /\ -disp9^post88+disp9^0 == 0 /\ __const_53^0-__const_53^post88 == 0 /\ code31^0-code31^post88 == 0 /\ -tmp___024^post88+tmp___024^0 == 0 /\ -ratio^post88+ratio^0 == 0 /\ -c7^post88+c7^0 == 0 /\ -__const_9^post88+__const_9^0 == 0 /\ -maxbits^post88+maxbits^0 == 0 /\ m122^0-m122^post88 == 0 /\ hshift11^0-hshift11^post88 == 0 /\ -clear_flg^post88+clear_flg^0 == 0 /\ -hsize_reg10^post88+hsize_reg10^0 == 0 /\ free_ent^0-free_ent^post88 == 0 /\ -hsize___019^post88+hsize___019^0 == 0 /\ -i21^post88+i21^0 == 0 /\ -__const_2147483647^post88+__const_2147483647^0 == 0 /\ __const_10000^0-__const_10000^post88 == 0 /\ -tmp___014^post88+tmp___014^0 == 0 /\ out_count^0-out_count^post88 == 0 /\ -bytes_out^post88+bytes_out^0 == 0), cost: 1
	New rule:
	l58 -> l57 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=__const_10000^0+in_count^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality maxcode^post88 = maxcode^0
		
		propagated equality apsim_incnt^post88 = apsim_incnt^0
		
		propagated equality offset^post88 = offset^0
		
		propagated equality tabort4^post88 = tabort4^0
		
		propagated equality __const_8^post88 = __const_8^0
		
		propagated equality exit_stat^post88 = exit_stat^0
		
		propagated equality tmp___017^post88 = tmp___017^0
		
		propagated equality hsize___027^post88 = hsize___027^0
		
		propagated equality __const_50^post88 = __const_50^0
		
		propagated equality __const_16^post88 = __const_16^0
		
		propagated equality r_off32^post88 = r_off32^0
		
		propagated equality n_bits^post88 = n_bits^0
		
		propagated equality checkpoint^post88 = __const_10000^0+in_count^0
		
		propagated equality __const_429496^post88 = __const_429496^0
		
		propagated equality maxmaxcode^post88 = maxmaxcode^0
		
		propagated equality __const_257^post88 = __const_257^0
		
		propagated equality tmp___115^post88 = tmp___115^0
		
		propagated equality m130^post88 = m130^0
		
		propagated equality __const_65536^post88 = __const_65536^0
		
		propagated equality n40^post88 = n40^0
		
		propagated equality ret_getbyte18^post88 = ret_getbyte18^0
		
		propagated equality fcode5^post88 = fcode5^0
		
		propagated equality n44^post88 = n44^0
		
		propagated equality hsize^post88 = hsize^0
		
		propagated equality incnt^post88 = incnt^0
		
		propagated equality __const_256^post88 = __const_256^0
		
		propagated equality tmp12^post88 = tmp12^0
		
		propagated equality ent8^post88 = ent8^0
		
		propagated equality apsim_bound11113^post88 = apsim_bound11113^0
		
		propagated equality block_compress^post88 = block_compress^0
		
		propagated equality i29^post88 = i29^0
		
		propagated equality seed2^post88 = seed2^0
		
		propagated equality i3^post88 = i3^0
		
		propagated equality i45^post88 = i45^0
		
		propagated equality i41^post88 = i41^0
		
		propagated equality __const_8388607^post88 = __const_8388607^0
		
		propagated equality ret_getbyte25^post88 = ret_getbyte25^0
		
		propagated equality c37^post88 = c37^0
		
		propagated equality rat26^post88 = rat26^0
		
		propagated equality i6^post88 = i6^0
		
		propagated equality bits33^post88 = bits33^0
		
		propagated equality count^post88 = count^0
		
		propagated equality in_count^post88 = in_count^0
		
		propagated equality disp9^post88 = disp9^0
		
		propagated equality __const_53^post88 = __const_53^0
		
		propagated equality code31^post88 = code31^0
		
		propagated equality tmp___024^post88 = tmp___024^0
		
		propagated equality ratio^post88 = ratio^0
		
		propagated equality c7^post88 = c7^0
		
		propagated equality __const_9^post88 = __const_9^0
		
		propagated equality maxbits^post88 = maxbits^0
		
		propagated equality m122^post88 = m122^0
		
		propagated equality hshift11^post88 = hshift11^0
		
		propagated equality clear_flg^post88 = clear_flg^0
		
		propagated equality hsize_reg10^post88 = hsize_reg10^0
		
		propagated equality free_ent^post88 = free_ent^0
		
		propagated equality hsize___019^post88 = hsize___019^0
		
		propagated equality i21^post88 = i21^0
		
		propagated equality __const_2147483647^post88 = __const_2147483647^0
		
		propagated equality __const_10000^post88 = __const_10000^0
		
		propagated equality tmp___014^post88 = tmp___014^0
		
		propagated equality out_count^post88 = out_count^0
		
		propagated equality bytes_out^post88 = bytes_out^0
		
	Simplified Guard

	Original rule:
	l58 -> l57 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=__const_10000^0+in_count^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l58 -> l57 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=__const_10000^0+in_count^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l58 -> l57 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=__const_10000^0+in_count^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l58 -> l57 : checkpoint^0'=__const_10000^0+in_count^0, T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l59 -> l1 : __const_10000^0'=__const_10000^post89, __const_16^0'=__const_16^post89, __const_2147483647^0'=__const_2147483647^post89, __const_256^0'=__const_256^post89, __const_257^0'=__const_257^post89, __const_429496^0'=__const_429496^post89, __const_50^0'=__const_50^post89, __const_53^0'=__const_53^post89, __const_65536^0'=__const_65536^post89, __const_8388607^0'=__const_8388607^post89, __const_8^0'=__const_8^post89, __const_9^0'=__const_9^post89, apsim_bound11113^0'=apsim_bound11113^post89, apsim_incnt^0'=apsim_incnt^post89, bits33^0'=bits33^post89, block_compress^0'=block_compress^post89, bytes_out^0'=bytes_out^post89, c37^0'=c37^post89, c7^0'=c7^post89, checkpoint^0'=checkpoint^post89, clear_flg^0'=clear_flg^post89, code31^0'=code31^post89, count^0'=count^post89, disp9^0'=disp9^post89, ent8^0'=ent8^post89, exit_stat^0'=exit_stat^post89, fcode5^0'=fcode5^post89, free_ent^0'=free_ent^post89, hshift11^0'=hshift11^post89, hsize^0'=hsize^post89, hsize___019^0'=hsize___019^post89, hsize___027^0'=hsize___027^post89, hsize_reg10^0'=hsize_reg10^post89, i21^0'=i21^post89, i29^0'=i29^post89, i3^0'=i3^post89, i41^0'=i41^post89, i45^0'=i45^post89, i6^0'=i6^post89, in_count^0'=in_count^post89, incnt^0'=incnt^post89, m122^0'=m122^post89, m130^0'=m130^post89, maxbits^0'=maxbits^post89, maxcode^0'=maxcode^post89, maxmaxcode^0'=maxmaxcode^post89, n40^0'=n40^post89, n44^0'=n44^post89, n_bits^0'=n_bits^post89, offset^0'=offset^post89, out_count^0'=out_count^post89, r_off32^0'=r_off32^post89, rat26^0'=rat26^post89, ratio^0'=ratio^post89, ret_getbyte18^0'=ret_getbyte18^post89, ret_getbyte25^0'=ret_getbyte25^post89, seed2^0'=seed2^post89, tabort4^0'=tabort4^post89, tmp12^0'=tmp12^post89, tmp___014^0'=tmp___014^post89, tmp___017^0'=tmp___017^post89, tmp___024^0'=tmp___024^post89, tmp___115^0'=tmp___115^post89, (tmp___017^0-tmp___017^post89 == 0 /\ maxmaxcode^0-maxmaxcode^post89 == 0 /\ ret_getbyte18^0-ret_getbyte18^post89 == 0 /\ r_off32^0-r_off32^post89 == 0 /\ -disp9^post89+disp9^0 == 0 /\ -ent8^post89+ent8^0 == 0 /\ free_ent^0-free_ent^post89 == 0 /\ -ret_getbyte25^post89+ret_getbyte25^0 == 0 /\ tmp___024^0-tmp___024^post89 == 0 /\ -tmp___115^post89+tmp___115^0 == 0 /\ -tmp___014^post89+tmp___014^0 == 0 /\ -i45^post89+i45^0 == 0 /\ -i41^post89+i41^0 == 0 /\ out_count^0-out_count^post89 == 0 /\ -tmp12^post89+tmp12^0 == 0 /\ -c37^post89+c37^0 == 0 /\ -block_compress^post89+block_compress^0 == 0 /\ -i21^post89+i21^0 == 0 /\ -fcode5^post89+fcode5^0 == 0 /\ -c7^post89+c7^0 == 0 /\ -seed2^post89+seed2^0 == 0 /\ __const_16^0-__const_16^post89 == 0 /\ n44^0-n44^post89 == 0 /\ __const_10000^0-__const_10000^post89 == 0 /\ -code31^post89+code31^0 == 0 /\ clear_flg^0-clear_flg^post89 == 0 /\ -__const_429496^post89+__const_429496^0 == 0 /\ checkpoint^0-checkpoint^post89 == 0 /\ -__const_65536^post89+__const_65536^0 == 0 /\ maxcode^0-maxcode^post89 == 0 /\ exit_stat^0-exit_stat^post89 == 0 /\ apsim_incnt^0-apsim_incnt^post89 == 0 /\ -hsize___019^post89+hsize___019^0 == 0 /\ count^0-count^post89 == 0 /\ -hsize_reg10^post89+hsize_reg10^0 == 0 /\ __const_50^0-__const_50^post89 == 0 /\ -incnt^post89+incnt^0 == 0 /\ -offset^post89+offset^0 == 0 /\ -apsim_bound11113^post89+apsim_bound11113^0 == 0 /\ __const_256^0-__const_256^post89 == 0 /\ -hsize^post89+hsize^0 == 0 /\ -__const_9^post89+__const_9^0 == 0 /\ -__const_8388607^post89+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post89 == 0 /\ -__const_2147483647^post89+__const_2147483647^0 == 0 /\ -maxbits^post89+maxbits^0 == 0 /\ __const_8^0-__const_8^post89 == 0 /\ m130^0-m130^post89 == 0 /\ -block_compress^0 <= 0 /\ -n40^post89+n40^0 == 0 /\ i6^0-i6^post89 == 0 /\ tabort4^0-tabort4^post89 == 0 /\ i3^0-i3^post89 == 0 /\ hsize___027^0-hsize___027^post89 == 0 /\ -bits33^post89+bits33^0 == 0 /\ -i29^post89+i29^0 == 0 /\ block_compress^0 <= 0 /\ -in_count^post89+in_count^0 == 0 /\ bytes_out^0-bytes_out^post89 == 0 /\ hshift11^0-hshift11^post89 == 0 /\ m122^0-m122^post89 == 0 /\ -ratio^post89+ratio^0 == 0 /\ -n_bits^post89+n_bits^0 == 0 /\ rat26^0-rat26^post89 == 0 /\ __const_257^0-__const_257^post89 == 0), cost: 1
	New rule:
	l59 -> l1 : __const_10000^0'=__const_10000^post89, __const_16^0'=__const_16^post89, __const_2147483647^0'=__const_2147483647^post89, __const_256^0'=__const_256^post89, __const_257^0'=__const_257^post89, __const_429496^0'=__const_429496^post89, __const_50^0'=__const_50^post89, __const_53^0'=__const_53^post89, __const_65536^0'=__const_65536^post89, __const_8388607^0'=__const_8388607^post89, __const_8^0'=__const_8^post89, __const_9^0'=__const_9^post89, apsim_bound11113^0'=apsim_bound11113^post89, apsim_incnt^0'=apsim_incnt^post89, bits33^0'=bits33^post89, block_compress^0'=block_compress^post89, bytes_out^0'=bytes_out^post89, c37^0'=c37^post89, c7^0'=c7^post89, checkpoint^0'=checkpoint^post89, clear_flg^0'=clear_flg^post89, code31^0'=code31^post89, count^0'=count^post89, disp9^0'=disp9^post89, ent8^0'=ent8^post89, exit_stat^0'=exit_stat^post89, fcode5^0'=fcode5^post89, free_ent^0'=free_ent^post89, hshift11^0'=hshift11^post89, hsize^0'=hsize^post89, hsize___019^0'=hsize___019^post89, hsize___027^0'=hsize___027^post89, hsize_reg10^0'=hsize_reg10^post89, i21^0'=i21^post89, i29^0'=i29^post89, i3^0'=i3^post89, i41^0'=i41^post89, i45^0'=i45^post89, i6^0'=i6^post89, in_count^0'=in_count^post89, incnt^0'=incnt^post89, m122^0'=m122^post89, m130^0'=m130^post89, maxbits^0'=maxbits^post89, maxcode^0'=maxcode^post89, maxmaxcode^0'=maxmaxcode^post89, n40^0'=n40^post89, n44^0'=n44^post89, n_bits^0'=n_bits^post89, offset^0'=offset^post89, out_count^0'=out_count^post89, r_off32^0'=r_off32^post89, rat26^0'=rat26^post89, ratio^0'=ratio^post89, ret_getbyte18^0'=ret_getbyte18^post89, ret_getbyte25^0'=ret_getbyte25^post89, seed2^0'=seed2^post89, tabort4^0'=tabort4^post89, tmp12^0'=tmp12^post89, tmp___014^0'=tmp___014^post89, tmp___017^0'=tmp___017^post89, tmp___024^0'=tmp___024^post89, tmp___115^0'=tmp___115^post89, (tmp___017^0-tmp___017^post89 == 0 /\ maxmaxcode^0-maxmaxcode^post89 == 0 /\ ret_getbyte18^0-ret_getbyte18^post89 == 0 /\ r_off32^0-r_off32^post89 == 0 /\ -disp9^post89+disp9^0 == 0 /\ -ent8^post89+ent8^0 == 0 /\ free_ent^0-free_ent^post89 == 0 /\ -ret_getbyte25^post89+ret_getbyte25^0 == 0 /\ tmp___024^0-tmp___024^post89 == 0 /\ -tmp___115^post89+tmp___115^0 == 0 /\ -tmp___014^post89+tmp___014^0 == 0 /\ -i45^post89+i45^0 == 0 /\ -i41^post89+i41^0 == 0 /\ out_count^0-out_count^post89 == 0 /\ -tmp12^post89+tmp12^0 == 0 /\ -c37^post89+c37^0 == 0 /\ -block_compress^post89+block_compress^0 == 0 /\ -i21^post89+i21^0 == 0 /\ -fcode5^post89+fcode5^0 == 0 /\ -c7^post89+c7^0 == 0 /\ -seed2^post89+seed2^0 == 0 /\ __const_16^0-__const_16^post89 == 0 /\ n44^0-n44^post89 == 0 /\ __const_10000^0-__const_10000^post89 == 0 /\ -code31^post89+code31^0 == 0 /\ clear_flg^0-clear_flg^post89 == 0 /\ -__const_429496^post89+__const_429496^0 == 0 /\ checkpoint^0-checkpoint^post89 == 0 /\ -__const_65536^post89+__const_65536^0 == 0 /\ maxcode^0-maxcode^post89 == 0 /\ exit_stat^0-exit_stat^post89 == 0 /\ apsim_incnt^0-apsim_incnt^post89 == 0 /\ -hsize___019^post89+hsize___019^0 == 0 /\ count^0-count^post89 == 0 /\ -hsize_reg10^post89+hsize_reg10^0 == 0 /\ __const_50^0-__const_50^post89 == 0 /\ -incnt^post89+incnt^0 == 0 /\ -offset^post89+offset^0 == 0 /\ -apsim_bound11113^post89+apsim_bound11113^0 == 0 /\ __const_256^0-__const_256^post89 == 0 /\ -hsize^post89+hsize^0 == 0 /\ -__const_9^post89+__const_9^0 == 0 /\ -__const_8388607^post89+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post89 == 0 /\ -__const_2147483647^post89+__const_2147483647^0 == 0 /\ -maxbits^post89+maxbits^0 == 0 /\ __const_8^0-__const_8^post89 == 0 /\ m130^0-m130^post89 == 0 /\ -block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ -n40^post89+n40^0 == 0 /\ i6^0-i6^post89 == 0 /\ tabort4^0-tabort4^post89 == 0 /\ i3^0-i3^post89 == 0 /\ hsize___027^0-hsize___027^post89 == 0 /\ -bits33^post89+bits33^0 == 0 /\ -i29^post89+i29^0 == 0 /\ block_compress^0 <= 0 /\ -in_count^post89+in_count^0 == 0 /\ bytes_out^0-bytes_out^post89 == 0 /\ hshift11^0-hshift11^post89 == 0 /\ m122^0-m122^post89 == 0 /\ -ratio^post89+ratio^0 == 0 /\ -n_bits^post89+n_bits^0 == 0 /\ rat26^0-rat26^post89 == 0 /\ __const_257^0-__const_257^post89 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l59 -> l1 : __const_10000^0'=__const_10000^post89, __const_16^0'=__const_16^post89, __const_2147483647^0'=__const_2147483647^post89, __const_256^0'=__const_256^post89, __const_257^0'=__const_257^post89, __const_429496^0'=__const_429496^post89, __const_50^0'=__const_50^post89, __const_53^0'=__const_53^post89, __const_65536^0'=__const_65536^post89, __const_8388607^0'=__const_8388607^post89, __const_8^0'=__const_8^post89, __const_9^0'=__const_9^post89, apsim_bound11113^0'=apsim_bound11113^post89, apsim_incnt^0'=apsim_incnt^post89, bits33^0'=bits33^post89, block_compress^0'=block_compress^post89, bytes_out^0'=bytes_out^post89, c37^0'=c37^post89, c7^0'=c7^post89, checkpoint^0'=checkpoint^post89, clear_flg^0'=clear_flg^post89, code31^0'=code31^post89, count^0'=count^post89, disp9^0'=disp9^post89, ent8^0'=ent8^post89, exit_stat^0'=exit_stat^post89, fcode5^0'=fcode5^post89, free_ent^0'=free_ent^post89, hshift11^0'=hshift11^post89, hsize^0'=hsize^post89, hsize___019^0'=hsize___019^post89, hsize___027^0'=hsize___027^post89, hsize_reg10^0'=hsize_reg10^post89, i21^0'=i21^post89, i29^0'=i29^post89, i3^0'=i3^post89, i41^0'=i41^post89, i45^0'=i45^post89, i6^0'=i6^post89, in_count^0'=in_count^post89, incnt^0'=incnt^post89, m122^0'=m122^post89, m130^0'=m130^post89, maxbits^0'=maxbits^post89, maxcode^0'=maxcode^post89, maxmaxcode^0'=maxmaxcode^post89, n40^0'=n40^post89, n44^0'=n44^post89, n_bits^0'=n_bits^post89, offset^0'=offset^post89, out_count^0'=out_count^post89, r_off32^0'=r_off32^post89, rat26^0'=rat26^post89, ratio^0'=ratio^post89, ret_getbyte18^0'=ret_getbyte18^post89, ret_getbyte25^0'=ret_getbyte25^post89, seed2^0'=seed2^post89, tabort4^0'=tabort4^post89, tmp12^0'=tmp12^post89, tmp___014^0'=tmp___014^post89, tmp___017^0'=tmp___017^post89, tmp___024^0'=tmp___024^post89, tmp___115^0'=tmp___115^post89, (tmp___017^0-tmp___017^post89 == 0 /\ maxmaxcode^0-maxmaxcode^post89 == 0 /\ ret_getbyte18^0-ret_getbyte18^post89 == 0 /\ r_off32^0-r_off32^post89 == 0 /\ -disp9^post89+disp9^0 == 0 /\ -ent8^post89+ent8^0 == 0 /\ free_ent^0-free_ent^post89 == 0 /\ -ret_getbyte25^post89+ret_getbyte25^0 == 0 /\ tmp___024^0-tmp___024^post89 == 0 /\ -tmp___115^post89+tmp___115^0 == 0 /\ -tmp___014^post89+tmp___014^0 == 0 /\ -i45^post89+i45^0 == 0 /\ -i41^post89+i41^0 == 0 /\ out_count^0-out_count^post89 == 0 /\ -tmp12^post89+tmp12^0 == 0 /\ -c37^post89+c37^0 == 0 /\ -block_compress^post89+block_compress^0 == 0 /\ -i21^post89+i21^0 == 0 /\ -fcode5^post89+fcode5^0 == 0 /\ -c7^post89+c7^0 == 0 /\ -seed2^post89+seed2^0 == 0 /\ __const_16^0-__const_16^post89 == 0 /\ n44^0-n44^post89 == 0 /\ __const_10000^0-__const_10000^post89 == 0 /\ -code31^post89+code31^0 == 0 /\ clear_flg^0-clear_flg^post89 == 0 /\ -__const_429496^post89+__const_429496^0 == 0 /\ checkpoint^0-checkpoint^post89 == 0 /\ -__const_65536^post89+__const_65536^0 == 0 /\ maxcode^0-maxcode^post89 == 0 /\ exit_stat^0-exit_stat^post89 == 0 /\ apsim_incnt^0-apsim_incnt^post89 == 0 /\ -hsize___019^post89+hsize___019^0 == 0 /\ count^0-count^post89 == 0 /\ -hsize_reg10^post89+hsize_reg10^0 == 0 /\ __const_50^0-__const_50^post89 == 0 /\ -incnt^post89+incnt^0 == 0 /\ -offset^post89+offset^0 == 0 /\ -apsim_bound11113^post89+apsim_bound11113^0 == 0 /\ __const_256^0-__const_256^post89 == 0 /\ -hsize^post89+hsize^0 == 0 /\ -__const_9^post89+__const_9^0 == 0 /\ -__const_8388607^post89+__const_8388607^0 == 0 /\ __const_53^0-__const_53^post89 == 0 /\ -__const_2147483647^post89+__const_2147483647^0 == 0 /\ -maxbits^post89+maxbits^0 == 0 /\ __const_8^0-__const_8^post89 == 0 /\ m130^0-m130^post89 == 0 /\ -block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ -n40^post89+n40^0 == 0 /\ i6^0-i6^post89 == 0 /\ tabort4^0-tabort4^post89 == 0 /\ i3^0-i3^post89 == 0 /\ hsize___027^0-hsize___027^post89 == 0 /\ -bits33^post89+bits33^0 == 0 /\ -i29^post89+i29^0 == 0 /\ block_compress^0 <= 0 /\ -in_count^post89+in_count^0 == 0 /\ bytes_out^0-bytes_out^post89 == 0 /\ hshift11^0-hshift11^post89 == 0 /\ m122^0-m122^post89 == 0 /\ -ratio^post89+ratio^0 == 0 /\ -n_bits^post89+n_bits^0 == 0 /\ rat26^0-rat26^post89 == 0 /\ __const_257^0-__const_257^post89 == 0), cost: 1
	New rule:
	l59 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	
		propagated equality tmp___017^post89 = tmp___017^0
		
		propagated equality maxmaxcode^post89 = maxmaxcode^0
		
		propagated equality ret_getbyte18^post89 = ret_getbyte18^0
		
		propagated equality r_off32^post89 = r_off32^0
		
		propagated equality disp9^post89 = disp9^0
		
		propagated equality ent8^post89 = ent8^0
		
		propagated equality free_ent^post89 = free_ent^0
		
		propagated equality ret_getbyte25^post89 = ret_getbyte25^0
		
		propagated equality tmp___024^post89 = tmp___024^0
		
		propagated equality tmp___115^post89 = tmp___115^0
		
		propagated equality tmp___014^post89 = tmp___014^0
		
		propagated equality i45^post89 = i45^0
		
		propagated equality i41^post89 = i41^0
		
		propagated equality out_count^post89 = out_count^0
		
		propagated equality tmp12^post89 = tmp12^0
		
		propagated equality c37^post89 = c37^0
		
		propagated equality block_compress^post89 = block_compress^0
		
		propagated equality i21^post89 = i21^0
		
		propagated equality fcode5^post89 = fcode5^0
		
		propagated equality c7^post89 = c7^0
		
		propagated equality seed2^post89 = seed2^0
		
		propagated equality __const_16^post89 = __const_16^0
		
		propagated equality n44^post89 = n44^0
		
		propagated equality __const_10000^post89 = __const_10000^0
		
		propagated equality code31^post89 = code31^0
		
		propagated equality clear_flg^post89 = clear_flg^0
		
		propagated equality __const_429496^post89 = __const_429496^0
		
		propagated equality checkpoint^post89 = checkpoint^0
		
		propagated equality __const_65536^post89 = __const_65536^0
		
		propagated equality maxcode^post89 = maxcode^0
		
		propagated equality exit_stat^post89 = exit_stat^0
		
		propagated equality apsim_incnt^post89 = apsim_incnt^0
		
		propagated equality hsize___019^post89 = hsize___019^0
		
		propagated equality count^post89 = count^0
		
		propagated equality hsize_reg10^post89 = hsize_reg10^0
		
		propagated equality __const_50^post89 = __const_50^0
		
		propagated equality incnt^post89 = incnt^0
		
		propagated equality offset^post89 = offset^0
		
		propagated equality apsim_bound11113^post89 = apsim_bound11113^0
		
		propagated equality __const_256^post89 = __const_256^0
		
		propagated equality hsize^post89 = hsize^0
		
		propagated equality __const_9^post89 = __const_9^0
		
		propagated equality __const_8388607^post89 = __const_8388607^0
		
		propagated equality __const_53^post89 = __const_53^0
		
		propagated equality __const_2147483647^post89 = __const_2147483647^0
		
		propagated equality maxbits^post89 = maxbits^0
		
		propagated equality __const_8^post89 = __const_8^0
		
		propagated equality m130^post89 = m130^0
		
		propagated equality n40^post89 = n40^0
		
		propagated equality i6^post89 = i6^0
		
		propagated equality tabort4^post89 = tabort4^0
		
		propagated equality i3^post89 = i3^0
		
		propagated equality hsize___027^post89 = hsize___027^0
		
		propagated equality bits33^post89 = bits33^0
		
		propagated equality i29^post89 = i29^0
		
		propagated equality in_count^post89 = in_count^0
		
		propagated equality bytes_out^post89 = bytes_out^0
		
		propagated equality hshift11^post89 = hshift11^0
		
		propagated equality m122^post89 = m122^0
		
		propagated equality ratio^post89 = ratio^0
		
		propagated equality n_bits^post89 = n_bits^0
		
		propagated equality rat26^post89 = rat26^0
		
		propagated equality __const_257^post89 = __const_257^0
		
	Simplified Guard

	Original rule:
	l59 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	New rule:
	l59 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l59 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	New rule:
	l59 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l59 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	New rule:
	l59 -> l1 : (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l59 -> l58 : __const_10000^0'=__const_10000^post90, __const_16^0'=__const_16^post90, __const_2147483647^0'=__const_2147483647^post90, __const_256^0'=__const_256^post90, __const_257^0'=__const_257^post90, __const_429496^0'=__const_429496^post90, __const_50^0'=__const_50^post90, __const_53^0'=__const_53^post90, __const_65536^0'=__const_65536^post90, __const_8388607^0'=__const_8388607^post90, __const_8^0'=__const_8^post90, __const_9^0'=__const_9^post90, apsim_bound11113^0'=apsim_bound11113^post90, apsim_incnt^0'=apsim_incnt^post90, bits33^0'=bits33^post90, block_compress^0'=block_compress^post90, bytes_out^0'=bytes_out^post90, c37^0'=c37^post90, c7^0'=c7^post90, checkpoint^0'=checkpoint^post90, clear_flg^0'=clear_flg^post90, code31^0'=code31^post90, count^0'=count^post90, disp9^0'=disp9^post90, ent8^0'=ent8^post90, exit_stat^0'=exit_stat^post90, fcode5^0'=fcode5^post90, free_ent^0'=free_ent^post90, hshift11^0'=hshift11^post90, hsize^0'=hsize^post90, hsize___019^0'=hsize___019^post90, hsize___027^0'=hsize___027^post90, hsize_reg10^0'=hsize_reg10^post90, i21^0'=i21^post90, i29^0'=i29^post90, i3^0'=i3^post90, i41^0'=i41^post90, i45^0'=i45^post90, i6^0'=i6^post90, in_count^0'=in_count^post90, incnt^0'=incnt^post90, m122^0'=m122^post90, m130^0'=m130^post90, maxbits^0'=maxbits^post90, maxcode^0'=maxcode^post90, maxmaxcode^0'=maxmaxcode^post90, n40^0'=n40^post90, n44^0'=n44^post90, n_bits^0'=n_bits^post90, offset^0'=offset^post90, out_count^0'=out_count^post90, r_off32^0'=r_off32^post90, rat26^0'=rat26^post90, ratio^0'=ratio^post90, ret_getbyte18^0'=ret_getbyte18^post90, ret_getbyte25^0'=ret_getbyte25^post90, seed2^0'=seed2^post90, tabort4^0'=tabort4^post90, tmp12^0'=tmp12^post90, tmp___014^0'=tmp___014^post90, tmp___017^0'=tmp___017^post90, tmp___024^0'=tmp___024^post90, tmp___115^0'=tmp___115^post90, (-n40^post90+n40^0 == 0 /\ -maxbits^post90+maxbits^0 == 0 /\ -m130^post90+m130^0 == 0 /\ -in_count^post90+in_count^0 == 0 /\ -__const_8388607^post90+__const_8388607^0 == 0 /\ checkpoint^0-checkpoint^post90 == 0 /\ r_off32^0-r_off32^post90 == 0 /\ __const_50^0-__const_50^post90 == 0 /\ hshift11^0-hshift11^post90 == 0 /\ -__const_429496^post90+__const_429496^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post90 == 0 /\ -hsize___019^post90+hsize___019^0 == 0 /\ hsize^0-hsize^post90 == 0 /\ out_count^0-out_count^post90 == 0 /\ -__const_9^post90+__const_9^0 == 0 /\ exit_stat^0-exit_stat^post90 == 0 /\ -clear_flg^post90+clear_flg^0 == 0 /\ -tmp___014^post90+tmp___014^0 == 0 /\ -ret_getbyte25^post90+ret_getbyte25^0 == 0 /\ -__const_10000^post90+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post90 == 0 /\ -__const_2147483647^post90+__const_2147483647^0 == 0 /\ -c7^post90+c7^0 == 0 /\ -free_ent^post90+free_ent^0 == 0 /\ -disp9^post90+disp9^0 == 0 /\ __const_16^0-__const_16^post90 == 0 /\ -i29^post90+i29^0 == 0 /\ -tmp___024^post90+tmp___024^0 == 0 /\ tmp___017^0-tmp___017^post90 == 0 /\ -rat26^post90+rat26^0 == 0 /\ -i41^post90+i41^0 == 0 /\ m122^0-m122^post90 == 0 /\ -code31^post90+code31^0 == 0 /\ apsim_incnt^0-apsim_incnt^post90 == 0 /\ __const_257^0-__const_257^post90 == 0 /\ -ratio^post90+ratio^0 == 0 /\ hsize___027^0-hsize___027^post90 == 0 /\ n44^0-n44^post90 == 0 /\ -i21^post90+i21^0 == 0 /\ count^0-count^post90 == 0 /\ i3^0-i3^post90 == 0 /\ maxcode^0-maxcode^post90 == 0 /\ __const_256^0-__const_256^post90 == 0 /\ 1-block_compress^0 <= 0 /\ n_bits^0-n_bits^post90 == 0 /\ -bits33^post90+bits33^0 == 0 /\ i6^0-i6^post90 == 0 /\ -apsim_bound11113^post90+apsim_bound11113^0 == 0 /\ tmp12^0-tmp12^post90 == 0 /\ -__const_65536^post90+__const_65536^0 == 0 /\ -block_compress^post90+block_compress^0 == 0 /\ -i45^post90+i45^0 == 0 /\ -offset^post90+offset^0 == 0 /\ -seed2^post90+seed2^0 == 0 /\ -incnt^post90+incnt^0 == 0 /\ bytes_out^0-bytes_out^post90 == 0 /\ __const_8^0-__const_8^post90 == 0 /\ c37^0-c37^post90 == 0 /\ -fcode5^post90+fcode5^0 == 0 /\ hsize_reg10^0-hsize_reg10^post90 == 0 /\ __const_53^0-__const_53^post90 == 0 /\ -tmp___115^post90+tmp___115^0 == 0 /\ tabort4^0-tabort4^post90 == 0 /\ -ent8^post90+ent8^0 == 0), cost: 1
	New rule:
	l59 -> l58 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-block_compress^0 <= 0), cost: 1
	
		propagated equality n40^post90 = n40^0
		
		propagated equality maxbits^post90 = maxbits^0
		
		propagated equality m130^post90 = m130^0
		
		propagated equality in_count^post90 = in_count^0
		
		propagated equality __const_8388607^post90 = __const_8388607^0
		
		propagated equality checkpoint^post90 = checkpoint^0
		
		propagated equality r_off32^post90 = r_off32^0
		
		propagated equality __const_50^post90 = __const_50^0
		
		propagated equality hshift11^post90 = hshift11^0
		
		propagated equality __const_429496^post90 = __const_429496^0
		
		propagated equality ret_getbyte18^post90 = ret_getbyte18^0
		
		propagated equality hsize___019^post90 = hsize___019^0
		
		propagated equality hsize^post90 = hsize^0
		
		propagated equality out_count^post90 = out_count^0
		
		propagated equality __const_9^post90 = __const_9^0
		
		propagated equality exit_stat^post90 = exit_stat^0
		
		propagated equality clear_flg^post90 = clear_flg^0
		
		propagated equality tmp___014^post90 = tmp___014^0
		
		propagated equality ret_getbyte25^post90 = ret_getbyte25^0
		
		propagated equality __const_10000^post90 = __const_10000^0
		
		propagated equality maxmaxcode^post90 = maxmaxcode^0
		
		propagated equality __const_2147483647^post90 = __const_2147483647^0
		
		propagated equality c7^post90 = c7^0
		
		propagated equality free_ent^post90 = free_ent^0
		
		propagated equality disp9^post90 = disp9^0
		
		propagated equality __const_16^post90 = __const_16^0
		
		propagated equality i29^post90 = i29^0
		
		propagated equality tmp___024^post90 = tmp___024^0
		
		propagated equality tmp___017^post90 = tmp___017^0
		
		propagated equality rat26^post90 = rat26^0
		
		propagated equality i41^post90 = i41^0
		
		propagated equality m122^post90 = m122^0
		
		propagated equality code31^post90 = code31^0
		
		propagated equality apsim_incnt^post90 = apsim_incnt^0
		
		propagated equality __const_257^post90 = __const_257^0
		
		propagated equality ratio^post90 = ratio^0
		
		propagated equality hsize___027^post90 = hsize___027^0
		
		propagated equality n44^post90 = n44^0
		
		propagated equality i21^post90 = i21^0
		
		propagated equality count^post90 = count^0
		
		propagated equality i3^post90 = i3^0
		
		propagated equality maxcode^post90 = maxcode^0
		
		propagated equality __const_256^post90 = __const_256^0
		
		propagated equality n_bits^post90 = n_bits^0
		
		propagated equality bits33^post90 = bits33^0
		
		propagated equality i6^post90 = i6^0
		
		propagated equality apsim_bound11113^post90 = apsim_bound11113^0
		
		propagated equality tmp12^post90 = tmp12^0
		
		propagated equality __const_65536^post90 = __const_65536^0
		
		propagated equality block_compress^post90 = block_compress^0
		
		propagated equality i45^post90 = i45^0
		
		propagated equality offset^post90 = offset^0
		
		propagated equality seed2^post90 = seed2^0
		
		propagated equality incnt^post90 = incnt^0
		
		propagated equality bytes_out^post90 = bytes_out^0
		
		propagated equality __const_8^post90 = __const_8^0
		
		propagated equality c37^post90 = c37^0
		
		propagated equality fcode5^post90 = fcode5^0
		
		propagated equality hsize_reg10^post90 = hsize_reg10^0
		
		propagated equality __const_53^post90 = __const_53^0
		
		propagated equality tmp___115^post90 = tmp___115^0
		
		propagated equality tabort4^post90 = tabort4^0
		
		propagated equality ent8^post90 = ent8^0
		
	Simplified Guard

	Original rule:
	l59 -> l58 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-block_compress^0 <= 0), cost: 1
	New rule:
	l59 -> l58 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-block_compress^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l59 -> l58 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-block_compress^0 <= 0, cost: 1
	New rule:
	l59 -> l58 : 1-block_compress^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l59 -> l58 : __const_10000^0'=__const_10000^post91, __const_16^0'=__const_16^post91, __const_2147483647^0'=__const_2147483647^post91, __const_256^0'=__const_256^post91, __const_257^0'=__const_257^post91, __const_429496^0'=__const_429496^post91, __const_50^0'=__const_50^post91, __const_53^0'=__const_53^post91, __const_65536^0'=__const_65536^post91, __const_8388607^0'=__const_8388607^post91, __const_8^0'=__const_8^post91, __const_9^0'=__const_9^post91, apsim_bound11113^0'=apsim_bound11113^post91, apsim_incnt^0'=apsim_incnt^post91, bits33^0'=bits33^post91, block_compress^0'=block_compress^post91, bytes_out^0'=bytes_out^post91, c37^0'=c37^post91, c7^0'=c7^post91, checkpoint^0'=checkpoint^post91, clear_flg^0'=clear_flg^post91, code31^0'=code31^post91, count^0'=count^post91, disp9^0'=disp9^post91, ent8^0'=ent8^post91, exit_stat^0'=exit_stat^post91, fcode5^0'=fcode5^post91, free_ent^0'=free_ent^post91, hshift11^0'=hshift11^post91, hsize^0'=hsize^post91, hsize___019^0'=hsize___019^post91, hsize___027^0'=hsize___027^post91, hsize_reg10^0'=hsize_reg10^post91, i21^0'=i21^post91, i29^0'=i29^post91, i3^0'=i3^post91, i41^0'=i41^post91, i45^0'=i45^post91, i6^0'=i6^post91, in_count^0'=in_count^post91, incnt^0'=incnt^post91, m122^0'=m122^post91, m130^0'=m130^post91, maxbits^0'=maxbits^post91, maxcode^0'=maxcode^post91, maxmaxcode^0'=maxmaxcode^post91, n40^0'=n40^post91, n44^0'=n44^post91, n_bits^0'=n_bits^post91, offset^0'=offset^post91, out_count^0'=out_count^post91, r_off32^0'=r_off32^post91, rat26^0'=rat26^post91, ratio^0'=ratio^post91, ret_getbyte18^0'=ret_getbyte18^post91, ret_getbyte25^0'=ret_getbyte25^post91, seed2^0'=seed2^post91, tabort4^0'=tabort4^post91, tmp12^0'=tmp12^post91, tmp___014^0'=tmp___014^post91, tmp___017^0'=tmp___017^post91, tmp___024^0'=tmp___024^post91, tmp___115^0'=tmp___115^post91, (-__const_10000^post91+__const_10000^0 == 0 /\ __const_53^0-__const_53^post91 == 0 /\ __const_8^0-__const_8^post91 == 0 /\ -disp9^post91+disp9^0 == 0 /\ __const_16^0-__const_16^post91 == 0 /\ -offset^post91+offset^0 == 0 /\ -rat26^post91+rat26^0 == 0 /\ -ratio^post91+ratio^0 == 0 /\ -apsim_bound11113^post91+apsim_bound11113^0 == 0 /\ -__const_9^post91+__const_9^0 == 0 /\ -code31^post91+code31^0 == 0 /\ -__const_65536^post91+__const_65536^0 == 0 /\ -ent8^post91+ent8^0 == 0 /\ r_off32^0-r_off32^post91 == 0 /\ -tmp___115^post91+tmp___115^0 == 0 /\ i6^0-i6^post91 == 0 /\ in_count^0-in_count^post91 == 0 /\ m122^0-m122^post91 == 0 /\ __const_257^0-__const_257^post91 == 0 /\ hshift11^0-hshift11^post91 == 0 /\ -m130^post91+m130^0 == 0 /\ -n40^post91+n40^0 == 0 /\ -ret_getbyte25^post91+ret_getbyte25^0 == 0 /\ -block_compress^post91+block_compress^0 == 0 /\ -hsize^post91+hsize^0 == 0 /\ out_count^0-out_count^post91 == 0 /\ -__const_8388607^post91+__const_8388607^0 == 0 /\ 1+block_compress^0 <= 0 /\ -__const_256^post91+__const_256^0 == 0 /\ -incnt^post91+incnt^0 == 0 /\ hsize_reg10^0-hsize_reg10^post91 == 0 /\ bits33^0-bits33^post91 == 0 /\ -seed2^post91+seed2^0 == 0 /\ bytes_out^0-bytes_out^post91 == 0 /\ -i29^post91+i29^0 == 0 /\ fcode5^0-fcode5^post91 == 0 /\ count^0-count^post91 == 0 /\ n_bits^0-n_bits^post91 == 0 /\ -__const_429496^post91+__const_429496^0 == 0 /\ -i45^post91+i45^0 == 0 /\ -i41^post91+i41^0 == 0 /\ i3^0-i3^post91 == 0 /\ tmp12^0-tmp12^post91 == 0 /\ maxcode^0-maxcode^post91 == 0 /\ exit_stat^0-exit_stat^post91 == 0 /\ -__const_50^post91+__const_50^0 == 0 /\ tmp___017^0-tmp___017^post91 == 0 /\ maxmaxcode^0-maxmaxcode^post91 == 0 /\ apsim_incnt^0-apsim_incnt^post91 == 0 /\ tabort4^0-tabort4^post91 == 0 /\ c37^0-c37^post91 == 0 /\ hsize___027^0-hsize___027^post91 == 0 /\ -free_ent^post91+free_ent^0 == 0 /\ checkpoint^0-checkpoint^post91 == 0 /\ -tmp___024^post91+tmp___024^0 == 0 /\ -hsize___019^post91+hsize___019^0 == 0 /\ -maxbits^post91+maxbits^0 == 0 /\ -clear_flg^post91+clear_flg^0 == 0 /\ n44^0-n44^post91 == 0 /\ -i21^post91+i21^0 == 0 /\ -c7^post91+c7^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post91 == 0 /\ -tmp___014^post91+tmp___014^0 == 0 /\ -__const_2147483647^post91+__const_2147483647^0 == 0), cost: 1
	New rule:
	l59 -> l58 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+block_compress^0 <= 0), cost: 1
	
		propagated equality __const_10000^post91 = __const_10000^0
		
		propagated equality __const_53^post91 = __const_53^0
		
		propagated equality __const_8^post91 = __const_8^0
		
		propagated equality disp9^post91 = disp9^0
		
		propagated equality __const_16^post91 = __const_16^0
		
		propagated equality offset^post91 = offset^0
		
		propagated equality rat26^post91 = rat26^0
		
		propagated equality ratio^post91 = ratio^0
		
		propagated equality apsim_bound11113^post91 = apsim_bound11113^0
		
		propagated equality __const_9^post91 = __const_9^0
		
		propagated equality code31^post91 = code31^0
		
		propagated equality __const_65536^post91 = __const_65536^0
		
		propagated equality ent8^post91 = ent8^0
		
		propagated equality r_off32^post91 = r_off32^0
		
		propagated equality tmp___115^post91 = tmp___115^0
		
		propagated equality i6^post91 = i6^0
		
		propagated equality in_count^post91 = in_count^0
		
		propagated equality m122^post91 = m122^0
		
		propagated equality __const_257^post91 = __const_257^0
		
		propagated equality hshift11^post91 = hshift11^0
		
		propagated equality m130^post91 = m130^0
		
		propagated equality n40^post91 = n40^0
		
		propagated equality ret_getbyte25^post91 = ret_getbyte25^0
		
		propagated equality block_compress^post91 = block_compress^0
		
		propagated equality hsize^post91 = hsize^0
		
		propagated equality out_count^post91 = out_count^0
		
		propagated equality __const_8388607^post91 = __const_8388607^0
		
		propagated equality __const_256^post91 = __const_256^0
		
		propagated equality incnt^post91 = incnt^0
		
		propagated equality hsize_reg10^post91 = hsize_reg10^0
		
		propagated equality bits33^post91 = bits33^0
		
		propagated equality seed2^post91 = seed2^0
		
		propagated equality bytes_out^post91 = bytes_out^0
		
		propagated equality i29^post91 = i29^0
		
		propagated equality fcode5^post91 = fcode5^0
		
		propagated equality count^post91 = count^0
		
		propagated equality n_bits^post91 = n_bits^0
		
		propagated equality __const_429496^post91 = __const_429496^0
		
		propagated equality i45^post91 = i45^0
		
		propagated equality i41^post91 = i41^0
		
		propagated equality i3^post91 = i3^0
		
		propagated equality tmp12^post91 = tmp12^0
		
		propagated equality maxcode^post91 = maxcode^0
		
		propagated equality exit_stat^post91 = exit_stat^0
		
		propagated equality __const_50^post91 = __const_50^0
		
		propagated equality tmp___017^post91 = tmp___017^0
		
		propagated equality maxmaxcode^post91 = maxmaxcode^0
		
		propagated equality apsim_incnt^post91 = apsim_incnt^0
		
		propagated equality tabort4^post91 = tabort4^0
		
		propagated equality c37^post91 = c37^0
		
		propagated equality hsize___027^post91 = hsize___027^0
		
		propagated equality free_ent^post91 = free_ent^0
		
		propagated equality checkpoint^post91 = checkpoint^0
		
		propagated equality tmp___024^post91 = tmp___024^0
		
		propagated equality hsize___019^post91 = hsize___019^0
		
		propagated equality maxbits^post91 = maxbits^0
		
		propagated equality clear_flg^post91 = clear_flg^0
		
		propagated equality n44^post91 = n44^0
		
		propagated equality i21^post91 = i21^0
		
		propagated equality c7^post91 = c7^0
		
		propagated equality ret_getbyte18^post91 = ret_getbyte18^0
		
		propagated equality tmp___014^post91 = tmp___014^0
		
		propagated equality __const_2147483647^post91 = __const_2147483647^0
		
	Simplified Guard

	Original rule:
	l59 -> l58 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+block_compress^0 <= 0), cost: 1
	New rule:
	l59 -> l58 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+block_compress^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l59 -> l58 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+block_compress^0 <= 0, cost: 1
	New rule:
	l59 -> l58 : 1+block_compress^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l60 -> l1 : __const_10000^0'=__const_10000^post92, __const_16^0'=__const_16^post92, __const_2147483647^0'=__const_2147483647^post92, __const_256^0'=__const_256^post92, __const_257^0'=__const_257^post92, __const_429496^0'=__const_429496^post92, __const_50^0'=__const_50^post92, __const_53^0'=__const_53^post92, __const_65536^0'=__const_65536^post92, __const_8388607^0'=__const_8388607^post92, __const_8^0'=__const_8^post92, __const_9^0'=__const_9^post92, apsim_bound11113^0'=apsim_bound11113^post92, apsim_incnt^0'=apsim_incnt^post92, bits33^0'=bits33^post92, block_compress^0'=block_compress^post92, bytes_out^0'=bytes_out^post92, c37^0'=c37^post92, c7^0'=c7^post92, checkpoint^0'=checkpoint^post92, clear_flg^0'=clear_flg^post92, code31^0'=code31^post92, count^0'=count^post92, disp9^0'=disp9^post92, ent8^0'=ent8^post92, exit_stat^0'=exit_stat^post92, fcode5^0'=fcode5^post92, free_ent^0'=free_ent^post92, hshift11^0'=hshift11^post92, hsize^0'=hsize^post92, hsize___019^0'=hsize___019^post92, hsize___027^0'=hsize___027^post92, hsize_reg10^0'=hsize_reg10^post92, i21^0'=i21^post92, i29^0'=i29^post92, i3^0'=i3^post92, i41^0'=i41^post92, i45^0'=i45^post92, i6^0'=i6^post92, in_count^0'=in_count^post92, incnt^0'=incnt^post92, m122^0'=m122^post92, m130^0'=m130^post92, maxbits^0'=maxbits^post92, maxcode^0'=maxcode^post92, maxmaxcode^0'=maxmaxcode^post92, n40^0'=n40^post92, n44^0'=n44^post92, n_bits^0'=n_bits^post92, offset^0'=offset^post92, out_count^0'=out_count^post92, r_off32^0'=r_off32^post92, rat26^0'=rat26^post92, ratio^0'=ratio^post92, ret_getbyte18^0'=ret_getbyte18^post92, ret_getbyte25^0'=ret_getbyte25^post92, seed2^0'=seed2^post92, tabort4^0'=tabort4^post92, tmp12^0'=tmp12^post92, tmp___014^0'=tmp___014^post92, tmp___017^0'=tmp___017^post92, tmp___024^0'=tmp___024^post92, tmp___115^0'=tmp___115^post92, (-tmp12^post92+tmp12^0 == 0 /\ -c7^post92+c7^0 == 0 /\ -i29^post92+i29^0 == 0 /\ r_off32^0-r_off32^post92 == 0 /\ -incnt^post92+incnt^0 == 0 /\ -i41^post92+i41^0 == 0 /\ -i45^post92+i45^0 == 0 /\ hshift11^0-hshift11^post92 == 0 /\ -clear_flg^post92+clear_flg^0 == 0 /\ free_ent^0-free_ent^post92 == 0 /\ out_count^0-out_count^post92 == 0 /\ -bytes_out^post92+bytes_out^0 == 0 /\ __const_65536^0-__const_65536^post92 == 0 /\ -block_compress^post92+block_compress^0 == 0 /\ -in_count^post92+in_count^0 == 0 /\ maxcode^0-maxcode^post92 == 0 /\ -tmp___024^post92+tmp___024^0 == 0 /\ __const_8^0-__const_8^post92 == 0 /\ ret_getbyte18^0-ret_getbyte18^post92 == 0 /\ -maxbits^post92+maxbits^0 == 0 /\ -code31^post92+code31^0 == 0 /\ exit_stat^0-exit_stat^post92 == 0 /\ __const_257^0-__const_257^post92 == 0 /\ tmp___017^0-tmp___017^post92 == 0 /\ -i21^post92+i21^0 == 0 /\ -hsize___019^post92+hsize___019^0 == 0 /\ __const_53^0-__const_53^post92 == 0 /\ -seed2^post92+seed2^0 == 0 /\ -disp9^post92+disp9^0 == 0 /\ -tmp___014^post92+tmp___014^0 == 0 /\ maxmaxcode^0-maxmaxcode^post92 == 0 /\ c37^0-c37^post92 == 0 /\ 1-checkpoint^0+in_count^0 <= 0 /\ -apsim_bound11113^post92+apsim_bound11113^0 == 0 /\ m122^0-m122^post92 == 0 /\ i6^0-i6^post92 == 0 /\ -__const_256^post92+__const_256^0 == 0 /\ -n_bits^post92+n_bits^0 == 0 /\ n44^0-n44^post92 == 0 /\ -__const_2147483647^post92+__const_2147483647^0 == 0 /\ ent8^0-ent8^post92 == 0 /\ __const_9^0-__const_9^post92 == 0 /\ -offset^post92+offset^0 == 0 /\ -__const_10000^post92+__const_10000^0 == 0 /\ __const_429496^0-__const_429496^post92 == 0 /\ hsize_reg10^0-hsize_reg10^post92 == 0 /\ __const_16^0-__const_16^post92 == 0 /\ -tmp___115^post92+tmp___115^0 == 0 /\ -m130^post92+m130^0 == 0 /\ bits33^0-bits33^post92 == 0 /\ tabort4^0-tabort4^post92 == 0 /\ i3^0-i3^post92 == 0 /\ -fcode5^post92+fcode5^0 == 0 /\ -__const_8388607^post92+__const_8388607^0 == 0 /\ -ratio^post92+ratio^0 == 0 /\ -hsize^post92+hsize^0 == 0 /\ -__const_50^post92+__const_50^0 == 0 /\ hsize___027^0-hsize___027^post92 == 0 /\ rat26^0-rat26^post92 == 0 /\ -n40^post92+n40^0 == 0 /\ -ret_getbyte25^post92+ret_getbyte25^0 == 0 /\ checkpoint^0-checkpoint^post92 == 0 /\ apsim_incnt^0-apsim_incnt^post92 == 0 /\ count^0-count^post92 == 0), cost: 1
	New rule:
	l60 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-checkpoint^0+in_count^0 <= 0), cost: 1
	
		propagated equality tmp12^post92 = tmp12^0
		
		propagated equality c7^post92 = c7^0
		
		propagated equality i29^post92 = i29^0
		
		propagated equality r_off32^post92 = r_off32^0
		
		propagated equality incnt^post92 = incnt^0
		
		propagated equality i41^post92 = i41^0
		
		propagated equality i45^post92 = i45^0
		
		propagated equality hshift11^post92 = hshift11^0
		
		propagated equality clear_flg^post92 = clear_flg^0
		
		propagated equality free_ent^post92 = free_ent^0
		
		propagated equality out_count^post92 = out_count^0
		
		propagated equality bytes_out^post92 = bytes_out^0
		
		propagated equality __const_65536^post92 = __const_65536^0
		
		propagated equality block_compress^post92 = block_compress^0
		
		propagated equality in_count^post92 = in_count^0
		
		propagated equality maxcode^post92 = maxcode^0
		
		propagated equality tmp___024^post92 = tmp___024^0
		
		propagated equality __const_8^post92 = __const_8^0
		
		propagated equality ret_getbyte18^post92 = ret_getbyte18^0
		
		propagated equality maxbits^post92 = maxbits^0
		
		propagated equality code31^post92 = code31^0
		
		propagated equality exit_stat^post92 = exit_stat^0
		
		propagated equality __const_257^post92 = __const_257^0
		
		propagated equality tmp___017^post92 = tmp___017^0
		
		propagated equality i21^post92 = i21^0
		
		propagated equality hsize___019^post92 = hsize___019^0
		
		propagated equality __const_53^post92 = __const_53^0
		
		propagated equality seed2^post92 = seed2^0
		
		propagated equality disp9^post92 = disp9^0
		
		propagated equality tmp___014^post92 = tmp___014^0
		
		propagated equality maxmaxcode^post92 = maxmaxcode^0
		
		propagated equality c37^post92 = c37^0
		
		propagated equality apsim_bound11113^post92 = apsim_bound11113^0
		
		propagated equality m122^post92 = m122^0
		
		propagated equality i6^post92 = i6^0
		
		propagated equality __const_256^post92 = __const_256^0
		
		propagated equality n_bits^post92 = n_bits^0
		
		propagated equality n44^post92 = n44^0
		
		propagated equality __const_2147483647^post92 = __const_2147483647^0
		
		propagated equality ent8^post92 = ent8^0
		
		propagated equality __const_9^post92 = __const_9^0
		
		propagated equality offset^post92 = offset^0
		
		propagated equality __const_10000^post92 = __const_10000^0
		
		propagated equality __const_429496^post92 = __const_429496^0
		
		propagated equality hsize_reg10^post92 = hsize_reg10^0
		
		propagated equality __const_16^post92 = __const_16^0
		
		propagated equality tmp___115^post92 = tmp___115^0
		
		propagated equality m130^post92 = m130^0
		
		propagated equality bits33^post92 = bits33^0
		
		propagated equality tabort4^post92 = tabort4^0
		
		propagated equality i3^post92 = i3^0
		
		propagated equality fcode5^post92 = fcode5^0
		
		propagated equality __const_8388607^post92 = __const_8388607^0
		
		propagated equality ratio^post92 = ratio^0
		
		propagated equality hsize^post92 = hsize^0
		
		propagated equality __const_50^post92 = __const_50^0
		
		propagated equality hsize___027^post92 = hsize___027^0
		
		propagated equality rat26^post92 = rat26^0
		
		propagated equality n40^post92 = n40^0
		
		propagated equality ret_getbyte25^post92 = ret_getbyte25^0
		
		propagated equality checkpoint^post92 = checkpoint^0
		
		propagated equality apsim_incnt^post92 = apsim_incnt^0
		
		propagated equality count^post92 = count^0
		
	Simplified Guard

	Original rule:
	l60 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-checkpoint^0+in_count^0 <= 0), cost: 1
	New rule:
	l60 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-checkpoint^0+in_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l60 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-checkpoint^0+in_count^0 <= 0, cost: 1
	New rule:
	l60 -> l1 : 1-checkpoint^0+in_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l60 -> l59 : __const_10000^0'=__const_10000^post93, __const_16^0'=__const_16^post93, __const_2147483647^0'=__const_2147483647^post93, __const_256^0'=__const_256^post93, __const_257^0'=__const_257^post93, __const_429496^0'=__const_429496^post93, __const_50^0'=__const_50^post93, __const_53^0'=__const_53^post93, __const_65536^0'=__const_65536^post93, __const_8388607^0'=__const_8388607^post93, __const_8^0'=__const_8^post93, __const_9^0'=__const_9^post93, apsim_bound11113^0'=apsim_bound11113^post93, apsim_incnt^0'=apsim_incnt^post93, bits33^0'=bits33^post93, block_compress^0'=block_compress^post93, bytes_out^0'=bytes_out^post93, c37^0'=c37^post93, c7^0'=c7^post93, checkpoint^0'=checkpoint^post93, clear_flg^0'=clear_flg^post93, code31^0'=code31^post93, count^0'=count^post93, disp9^0'=disp9^post93, ent8^0'=ent8^post93, exit_stat^0'=exit_stat^post93, fcode5^0'=fcode5^post93, free_ent^0'=free_ent^post93, hshift11^0'=hshift11^post93, hsize^0'=hsize^post93, hsize___019^0'=hsize___019^post93, hsize___027^0'=hsize___027^post93, hsize_reg10^0'=hsize_reg10^post93, i21^0'=i21^post93, i29^0'=i29^post93, i3^0'=i3^post93, i41^0'=i41^post93, i45^0'=i45^post93, i6^0'=i6^post93, in_count^0'=in_count^post93, incnt^0'=incnt^post93, m122^0'=m122^post93, m130^0'=m130^post93, maxbits^0'=maxbits^post93, maxcode^0'=maxcode^post93, maxmaxcode^0'=maxmaxcode^post93, n40^0'=n40^post93, n44^0'=n44^post93, n_bits^0'=n_bits^post93, offset^0'=offset^post93, out_count^0'=out_count^post93, r_off32^0'=r_off32^post93, rat26^0'=rat26^post93, ratio^0'=ratio^post93, ret_getbyte18^0'=ret_getbyte18^post93, ret_getbyte25^0'=ret_getbyte25^post93, seed2^0'=seed2^post93, tabort4^0'=tabort4^post93, tmp12^0'=tmp12^post93, tmp___014^0'=tmp___014^post93, tmp___017^0'=tmp___017^post93, tmp___024^0'=tmp___024^post93, tmp___115^0'=tmp___115^post93, (exit_stat^0-exit_stat^post93 == 0 /\ -hsize___019^post93+hsize___019^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post93 == 0 /\ -hsize^post93+hsize^0 == 0 /\ __const_16^0-__const_16^post93 == 0 /\ __const_8^0-__const_8^post93 == 0 /\ -offset^post93+offset^0 == 0 /\ -apsim_bound11113^post93+apsim_bound11113^0 == 0 /\ -rat26^post93+rat26^0 == 0 /\ -__const_9^post93+__const_9^0 == 0 /\ hshift11^0-hshift11^post93 == 0 /\ __const_53^0-__const_53^post93 == 0 /\ -m130^post93+m130^0 == 0 /\ -__const_2147483647^post93+__const_2147483647^0 == 0 /\ -seed2^post93+seed2^0 == 0 /\ -maxbits^post93+maxbits^0 == 0 /\ -n40^post93+n40^0 == 0 /\ -ret_getbyte25^post93+ret_getbyte25^0 == 0 /\ checkpoint^0-checkpoint^post93 == 0 /\ -__const_10000^post93+__const_10000^0 == 0 /\ -maxmaxcode^post93+maxmaxcode^0 == 0 /\ i6^0-i6^post93 == 0 /\ tmp___017^0-tmp___017^post93 == 0 /\ r_off32^0-r_off32^post93 == 0 /\ __const_256^0-__const_256^post93 == 0 /\ -__const_50^post93+__const_50^0 == 0 /\ out_count^0-out_count^post93 == 0 /\ m122^0-m122^post93 == 0 /\ -ratio^post93+ratio^0 == 0 /\ -ent8^post93+ent8^0 == 0 /\ -__const_65536^post93+__const_65536^0 == 0 /\ i3^0-i3^post93 == 0 /\ n44^0-n44^post93 == 0 /\ bits33^0-bits33^post93 == 0 /\ hsize___027^0-hsize___027^post93 == 0 /\ -clear_flg^post93+clear_flg^0 == 0 /\ n_bits^0-n_bits^post93 == 0 /\ -tmp___024^post93+tmp___024^0 == 0 /\ -tmp___014^post93+tmp___014^0 == 0 /\ -i45^post93+i45^0 == 0 /\ -tmp___115^post93+tmp___115^0 == 0 /\ -i29^post93+i29^0 == 0 /\ bytes_out^0-bytes_out^post93 == 0 /\ -i41^post93+i41^0 == 0 /\ -__const_8388607^post93+__const_8388607^0 == 0 /\ -i21^post93+i21^0 == 0 /\ maxcode^0-maxcode^post93 == 0 /\ -block_compress^post93+block_compress^0 == 0 /\ -fcode5^post93+fcode5^0 == 0 /\ -c7^post93+c7^0 == 0 /\ count^0-count^post93 == 0 /\ -incnt^post93+incnt^0 == 0 /\ -free_ent^post93+free_ent^0 == 0 /\ apsim_incnt^0-apsim_incnt^post93 == 0 /\ __const_257^0-__const_257^post93 == 0 /\ -code31^post93+code31^0 == 0 /\ tabort4^0-tabort4^post93 == 0 /\ checkpoint^0-in_count^0 <= 0 /\ c37^0-c37^post93 == 0 /\ -__const_429496^post93+__const_429496^0 == 0 /\ -in_count^post93+in_count^0 == 0 /\ hsize_reg10^0-hsize_reg10^post93 == 0 /\ -disp9^post93+disp9^0 == 0 /\ tmp12^0-tmp12^post93 == 0), cost: 1
	New rule:
	l60 -> l59 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ checkpoint^0-in_count^0 <= 0), cost: 1
	
		propagated equality exit_stat^post93 = exit_stat^0
		
		propagated equality hsize___019^post93 = hsize___019^0
		
		propagated equality ret_getbyte18^post93 = ret_getbyte18^0
		
		propagated equality hsize^post93 = hsize^0
		
		propagated equality __const_16^post93 = __const_16^0
		
		propagated equality __const_8^post93 = __const_8^0
		
		propagated equality offset^post93 = offset^0
		
		propagated equality apsim_bound11113^post93 = apsim_bound11113^0
		
		propagated equality rat26^post93 = rat26^0
		
		propagated equality __const_9^post93 = __const_9^0
		
		propagated equality hshift11^post93 = hshift11^0
		
		propagated equality __const_53^post93 = __const_53^0
		
		propagated equality m130^post93 = m130^0
		
		propagated equality __const_2147483647^post93 = __const_2147483647^0
		
		propagated equality seed2^post93 = seed2^0
		
		propagated equality maxbits^post93 = maxbits^0
		
		propagated equality n40^post93 = n40^0
		
		propagated equality ret_getbyte25^post93 = ret_getbyte25^0
		
		propagated equality checkpoint^post93 = checkpoint^0
		
		propagated equality __const_10000^post93 = __const_10000^0
		
		propagated equality maxmaxcode^post93 = maxmaxcode^0
		
		propagated equality i6^post93 = i6^0
		
		propagated equality tmp___017^post93 = tmp___017^0
		
		propagated equality r_off32^post93 = r_off32^0
		
		propagated equality __const_256^post93 = __const_256^0
		
		propagated equality __const_50^post93 = __const_50^0
		
		propagated equality out_count^post93 = out_count^0
		
		propagated equality m122^post93 = m122^0
		
		propagated equality ratio^post93 = ratio^0
		
		propagated equality ent8^post93 = ent8^0
		
		propagated equality __const_65536^post93 = __const_65536^0
		
		propagated equality i3^post93 = i3^0
		
		propagated equality n44^post93 = n44^0
		
		propagated equality bits33^post93 = bits33^0
		
		propagated equality hsize___027^post93 = hsize___027^0
		
		propagated equality clear_flg^post93 = clear_flg^0
		
		propagated equality n_bits^post93 = n_bits^0
		
		propagated equality tmp___024^post93 = tmp___024^0
		
		propagated equality tmp___014^post93 = tmp___014^0
		
		propagated equality i45^post93 = i45^0
		
		propagated equality tmp___115^post93 = tmp___115^0
		
		propagated equality i29^post93 = i29^0
		
		propagated equality bytes_out^post93 = bytes_out^0
		
		propagated equality i41^post93 = i41^0
		
		propagated equality __const_8388607^post93 = __const_8388607^0
		
		propagated equality i21^post93 = i21^0
		
		propagated equality maxcode^post93 = maxcode^0
		
		propagated equality block_compress^post93 = block_compress^0
		
		propagated equality fcode5^post93 = fcode5^0
		
		propagated equality c7^post93 = c7^0
		
		propagated equality count^post93 = count^0
		
		propagated equality incnt^post93 = incnt^0
		
		propagated equality free_ent^post93 = free_ent^0
		
		propagated equality apsim_incnt^post93 = apsim_incnt^0
		
		propagated equality __const_257^post93 = __const_257^0
		
		propagated equality code31^post93 = code31^0
		
		propagated equality tabort4^post93 = tabort4^0
		
		propagated equality c37^post93 = c37^0
		
		propagated equality __const_429496^post93 = __const_429496^0
		
		propagated equality in_count^post93 = in_count^0
		
		propagated equality hsize_reg10^post93 = hsize_reg10^0
		
		propagated equality disp9^post93 = disp9^0
		
		propagated equality tmp12^post93 = tmp12^0
		
	Simplified Guard

	Original rule:
	l60 -> l59 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ checkpoint^0-in_count^0 <= 0), cost: 1
	New rule:
	l60 -> l59 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, checkpoint^0-in_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l60 -> l59 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, checkpoint^0-in_count^0 <= 0, cost: 1
	New rule:
	l60 -> l59 : checkpoint^0-in_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l61 -> l60 : __const_10000^0'=__const_10000^post94, __const_16^0'=__const_16^post94, __const_2147483647^0'=__const_2147483647^post94, __const_256^0'=__const_256^post94, __const_257^0'=__const_257^post94, __const_429496^0'=__const_429496^post94, __const_50^0'=__const_50^post94, __const_53^0'=__const_53^post94, __const_65536^0'=__const_65536^post94, __const_8388607^0'=__const_8388607^post94, __const_8^0'=__const_8^post94, __const_9^0'=__const_9^post94, apsim_bound11113^0'=apsim_bound11113^post94, apsim_incnt^0'=apsim_incnt^post94, bits33^0'=bits33^post94, block_compress^0'=block_compress^post94, bytes_out^0'=bytes_out^post94, c37^0'=c37^post94, c7^0'=c7^post94, checkpoint^0'=checkpoint^post94, clear_flg^0'=clear_flg^post94, code31^0'=code31^post94, count^0'=count^post94, disp9^0'=disp9^post94, ent8^0'=ent8^post94, exit_stat^0'=exit_stat^post94, fcode5^0'=fcode5^post94, free_ent^0'=free_ent^post94, hshift11^0'=hshift11^post94, hsize^0'=hsize^post94, hsize___019^0'=hsize___019^post94, hsize___027^0'=hsize___027^post94, hsize_reg10^0'=hsize_reg10^post94, i21^0'=i21^post94, i29^0'=i29^post94, i3^0'=i3^post94, i41^0'=i41^post94, i45^0'=i45^post94, i6^0'=i6^post94, in_count^0'=in_count^post94, incnt^0'=incnt^post94, m122^0'=m122^post94, m130^0'=m130^post94, maxbits^0'=maxbits^post94, maxcode^0'=maxcode^post94, maxmaxcode^0'=maxmaxcode^post94, n40^0'=n40^post94, n44^0'=n44^post94, n_bits^0'=n_bits^post94, offset^0'=offset^post94, out_count^0'=out_count^post94, r_off32^0'=r_off32^post94, rat26^0'=rat26^post94, ratio^0'=ratio^post94, ret_getbyte18^0'=ret_getbyte18^post94, ret_getbyte25^0'=ret_getbyte25^post94, seed2^0'=seed2^post94, tabort4^0'=tabort4^post94, tmp12^0'=tmp12^post94, tmp___014^0'=tmp___014^post94, tmp___017^0'=tmp___017^post94, tmp___024^0'=tmp___024^post94, tmp___115^0'=tmp___115^post94, (m122^0-m122^post94 == 0 /\ -ratio^post94+ratio^0 == 0 /\ -free_ent^post94+free_ent^0 == 0 /\ -__const_8388607^post94+__const_8388607^0 == 0 /\ -i21^post94+i21^0 == 0 /\ m130^0-m130^post94 == 0 /\ __const_65536^0-__const_65536^post94 == 0 /\ __const_16^0-__const_16^post94 == 0 /\ in_count^0-in_count^post94 == 0 /\ -offset^post94+offset^0 == 0 /\ -i45^post94+i45^0 == 0 /\ -block_compress^post94+block_compress^0 == 0 /\ -disp9^post94+disp9^0 == 0 /\ __const_257^0-__const_257^post94 == 0 /\ -__const_256^post94+__const_256^0 == 0 /\ hsize___027^0-hsize___027^post94 == 0 /\ exit_stat^0-exit_stat^post94 == 0 /\ -ret_getbyte25^post94+ret_getbyte25^0 == 0 /\ i3^0-i3^post94 == 0 /\ r_off32^0-r_off32^post94 == 0 /\ __const_8^0-__const_8^post94 == 0 /\ hshift11^0-hshift11^post94 == 0 /\ i6^0-i6^post94 == 0 /\ -code31^post94+code31^0 == 0 /\ -tmp___115^post94+tmp___115^0 == 0 /\ -apsim_bound11113^post94+apsim_bound11113^0 == 0 /\ __const_53^0-__const_53^post94 == 0 /\ maxmaxcode^0-free_ent^0 <= 0 /\ -maxbits^post94+maxbits^0 == 0 /\ bytes_out^0-bytes_out^post94 == 0 /\ maxmaxcode^0-maxmaxcode^post94 == 0 /\ -n40^post94+n40^0 == 0 /\ out_count^0-out_count^post94 == 0 /\ __const_9^0-__const_9^post94 == 0 /\ c37^0-c37^post94 == 0 /\ bits33^0-bits33^post94 == 0 /\ -hsize_reg10^post94+hsize_reg10^0 == 0 /\ -__const_50^post94+__const_50^0 == 0 /\ ent8^0-ent8^post94 == 0 /\ -hsize___019^post94+hsize___019^0 == 0 /\ -__const_429496^post94+__const_429496^0 == 0 /\ tmp___017^0-tmp___017^post94 == 0 /\ -hsize^post94+hsize^0 == 0 /\ -i41^post94+i41^0 == 0 /\ -incnt^post94+incnt^0 == 0 /\ -__const_10000^post94+__const_10000^0 == 0 /\ -__const_2147483647^post94+__const_2147483647^0 == 0 /\ -seed2^post94+seed2^0 == 0 /\ -fcode5^post94+fcode5^0 == 0 /\ -tmp___014^post94+tmp___014^0 == 0 /\ apsim_incnt^0-apsim_incnt^post94 == 0 /\ tmp12^0-tmp12^post94 == 0 /\ -clear_flg^post94+clear_flg^0 == 0 /\ checkpoint^0-checkpoint^post94 == 0 /\ n44^0-n44^post94 == 0 /\ -c7^post94+c7^0 == 0 /\ count^0-count^post94 == 0 /\ maxcode^0-maxcode^post94 == 0 /\ -rat26^post94+rat26^0 == 0 /\ n_bits^0-n_bits^post94 == 0 /\ tabort4^0-tabort4^post94 == 0 /\ -tmp___024^post94+tmp___024^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post94 == 0 /\ -i29^post94+i29^0 == 0), cost: 1
	New rule:
	l61 -> l60 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ maxmaxcode^0-free_ent^0 <= 0), cost: 1
	
		propagated equality m122^post94 = m122^0
		
		propagated equality ratio^post94 = ratio^0
		
		propagated equality free_ent^post94 = free_ent^0
		
		propagated equality __const_8388607^post94 = __const_8388607^0
		
		propagated equality i21^post94 = i21^0
		
		propagated equality m130^post94 = m130^0
		
		propagated equality __const_65536^post94 = __const_65536^0
		
		propagated equality __const_16^post94 = __const_16^0
		
		propagated equality in_count^post94 = in_count^0
		
		propagated equality offset^post94 = offset^0
		
		propagated equality i45^post94 = i45^0
		
		propagated equality block_compress^post94 = block_compress^0
		
		propagated equality disp9^post94 = disp9^0
		
		propagated equality __const_257^post94 = __const_257^0
		
		propagated equality __const_256^post94 = __const_256^0
		
		propagated equality hsize___027^post94 = hsize___027^0
		
		propagated equality exit_stat^post94 = exit_stat^0
		
		propagated equality ret_getbyte25^post94 = ret_getbyte25^0
		
		propagated equality i3^post94 = i3^0
		
		propagated equality r_off32^post94 = r_off32^0
		
		propagated equality __const_8^post94 = __const_8^0
		
		propagated equality hshift11^post94 = hshift11^0
		
		propagated equality i6^post94 = i6^0
		
		propagated equality code31^post94 = code31^0
		
		propagated equality tmp___115^post94 = tmp___115^0
		
		propagated equality apsim_bound11113^post94 = apsim_bound11113^0
		
		propagated equality __const_53^post94 = __const_53^0
		
		propagated equality maxbits^post94 = maxbits^0
		
		propagated equality bytes_out^post94 = bytes_out^0
		
		propagated equality maxmaxcode^post94 = maxmaxcode^0
		
		propagated equality n40^post94 = n40^0
		
		propagated equality out_count^post94 = out_count^0
		
		propagated equality __const_9^post94 = __const_9^0
		
		propagated equality c37^post94 = c37^0
		
		propagated equality bits33^post94 = bits33^0
		
		propagated equality hsize_reg10^post94 = hsize_reg10^0
		
		propagated equality __const_50^post94 = __const_50^0
		
		propagated equality ent8^post94 = ent8^0
		
		propagated equality hsize___019^post94 = hsize___019^0
		
		propagated equality __const_429496^post94 = __const_429496^0
		
		propagated equality tmp___017^post94 = tmp___017^0
		
		propagated equality hsize^post94 = hsize^0
		
		propagated equality i41^post94 = i41^0
		
		propagated equality incnt^post94 = incnt^0
		
		propagated equality __const_10000^post94 = __const_10000^0
		
		propagated equality __const_2147483647^post94 = __const_2147483647^0
		
		propagated equality seed2^post94 = seed2^0
		
		propagated equality fcode5^post94 = fcode5^0
		
		propagated equality tmp___014^post94 = tmp___014^0
		
		propagated equality apsim_incnt^post94 = apsim_incnt^0
		
		propagated equality tmp12^post94 = tmp12^0
		
		propagated equality clear_flg^post94 = clear_flg^0
		
		propagated equality checkpoint^post94 = checkpoint^0
		
		propagated equality n44^post94 = n44^0
		
		propagated equality c7^post94 = c7^0
		
		propagated equality count^post94 = count^0
		
		propagated equality maxcode^post94 = maxcode^0
		
		propagated equality rat26^post94 = rat26^0
		
		propagated equality n_bits^post94 = n_bits^0
		
		propagated equality tabort4^post94 = tabort4^0
		
		propagated equality tmp___024^post94 = tmp___024^0
		
		propagated equality ret_getbyte18^post94 = ret_getbyte18^0
		
		propagated equality i29^post94 = i29^0
		
	Simplified Guard

	Original rule:
	l61 -> l60 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ maxmaxcode^0-free_ent^0 <= 0), cost: 1
	New rule:
	l61 -> l60 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, maxmaxcode^0-free_ent^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l61 -> l60 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, maxmaxcode^0-free_ent^0 <= 0, cost: 1
	New rule:
	l61 -> l60 : maxmaxcode^0-free_ent^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l61 -> l1 : __const_10000^0'=__const_10000^post95, __const_16^0'=__const_16^post95, __const_2147483647^0'=__const_2147483647^post95, __const_256^0'=__const_256^post95, __const_257^0'=__const_257^post95, __const_429496^0'=__const_429496^post95, __const_50^0'=__const_50^post95, __const_53^0'=__const_53^post95, __const_65536^0'=__const_65536^post95, __const_8388607^0'=__const_8388607^post95, __const_8^0'=__const_8^post95, __const_9^0'=__const_9^post95, apsim_bound11113^0'=apsim_bound11113^post95, apsim_incnt^0'=apsim_incnt^post95, bits33^0'=bits33^post95, block_compress^0'=block_compress^post95, bytes_out^0'=bytes_out^post95, c37^0'=c37^post95, c7^0'=c7^post95, checkpoint^0'=checkpoint^post95, clear_flg^0'=clear_flg^post95, code31^0'=code31^post95, count^0'=count^post95, disp9^0'=disp9^post95, ent8^0'=ent8^post95, exit_stat^0'=exit_stat^post95, fcode5^0'=fcode5^post95, free_ent^0'=free_ent^post95, hshift11^0'=hshift11^post95, hsize^0'=hsize^post95, hsize___019^0'=hsize___019^post95, hsize___027^0'=hsize___027^post95, hsize_reg10^0'=hsize_reg10^post95, i21^0'=i21^post95, i29^0'=i29^post95, i3^0'=i3^post95, i41^0'=i41^post95, i45^0'=i45^post95, i6^0'=i6^post95, in_count^0'=in_count^post95, incnt^0'=incnt^post95, m122^0'=m122^post95, m130^0'=m130^post95, maxbits^0'=maxbits^post95, maxcode^0'=maxcode^post95, maxmaxcode^0'=maxmaxcode^post95, n40^0'=n40^post95, n44^0'=n44^post95, n_bits^0'=n_bits^post95, offset^0'=offset^post95, out_count^0'=out_count^post95, r_off32^0'=r_off32^post95, rat26^0'=rat26^post95, ratio^0'=ratio^post95, ret_getbyte18^0'=ret_getbyte18^post95, ret_getbyte25^0'=ret_getbyte25^post95, seed2^0'=seed2^post95, tabort4^0'=tabort4^post95, tmp12^0'=tmp12^post95, tmp___014^0'=tmp___014^post95, tmp___017^0'=tmp___017^post95, tmp___024^0'=tmp___024^post95, tmp___115^0'=tmp___115^post95, (-i45^post95+i45^0 == 0 /\ -i29^post95+i29^0 == 0 /\ __const_257^0-__const_257^post95 == 0 /\ -i41^post95+i41^0 == 0 /\ -__const_50^post95+__const_50^0 == 0 /\ n44^0-n44^post95 == 0 /\ i6^0-i6^post95 == 0 /\ m130^0-m130^post95 == 0 /\ -free_ent^0+tmp___115^post95 == 0 /\ __const_65536^0-__const_65536^post95 == 0 /\ -tmp___024^post95+tmp___024^0 == 0 /\ __const_53^0-__const_53^post95 == 0 /\ -hsize___019^post95+hsize___019^0 == 0 /\ i3^0-i3^post95 == 0 /\ code31^0-code31^post95 == 0 /\ -hsize_reg10^post95+hsize_reg10^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post95 == 0 /\ -i21^post95+i21^0 == 0 /\ -clear_flg^post95+clear_flg^0 == 0 /\ -c7^post95+c7^0 == 0 /\ -incnt^post95+incnt^0 == 0 /\ -bytes_out^post95+bytes_out^0 == 0 /\ -__const_10000^post95+__const_10000^0 == 0 /\ c37^0-c37^post95 == 0 /\ hsize___027^0-hsize___027^post95 == 0 /\ -seed2^post95+seed2^0 == 0 /\ -__const_8388607^post95+__const_8388607^0 == 0 /\ ent8^0-ent8^post95 == 0 /\ __const_429496^0-__const_429496^post95 == 0 /\ r_off32^0-r_off32^post95 == 0 /\ checkpoint^0-checkpoint^post95 == 0 /\ hshift11^0-hshift11^post95 == 0 /\ -count^post95+count^0 == 0 /\ rat26^0-rat26^post95 == 0 /\ __const_8^0-__const_8^post95 == 0 /\ tmp12^0-tmp12^post95 == 0 /\ -offset^post95+offset^0 == 0 /\ -disp9^post95+disp9^0 == 0 /\ tabort4^0-tabort4^post95 == 0 /\ -ratio^post95+ratio^0 == 0 /\ -apsim_bound11113^post95+apsim_bound11113^0 == 0 /\ exit_stat^0-exit_stat^post95 == 0 /\ ret_getbyte18^0-ret_getbyte18^post95 == 0 /\ out_count^0-out_count^post95 == 0 /\ -n_bits^post95+n_bits^0 == 0 /\ -fcode5^post95+fcode5^0 == 0 /\ -in_count^post95+in_count^0 == 0 /\ __const_2147483647^0-__const_2147483647^post95 == 0 /\ -1-free_ent^0+free_ent^post95 == 0 /\ -maxbits^post95+maxbits^0 == 0 /\ 1-maxmaxcode^0+free_ent^0 <= 0 /\ -hsize^post95+hsize^0 == 0 /\ maxcode^0-maxcode^post95 == 0 /\ tmp___017^0-tmp___017^post95 == 0 /\ -block_compress^post95+block_compress^0 == 0 /\ -n40^post95+n40^0 == 0 /\ -tmp___014^post95+tmp___014^0 == 0 /\ maxmaxcode^0-maxmaxcode^post95 == 0 /\ __const_9^0-__const_9^post95 == 0 /\ apsim_incnt^0-apsim_incnt^post95 == 0 /\ __const_16^0-__const_16^post95 == 0 /\ -m122^post95+m122^0 == 0 /\ -__const_256^post95+__const_256^0 == 0 /\ bits33^0-bits33^post95 == 0), cost: 1
	New rule:
	l61 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=1+free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=free_ent^0, (0 == 0 /\ 1-maxmaxcode^0+free_ent^0 <= 0), cost: 1
	
		propagated equality i45^post95 = i45^0
		
		propagated equality i29^post95 = i29^0
		
		propagated equality __const_257^post95 = __const_257^0
		
		propagated equality i41^post95 = i41^0
		
		propagated equality __const_50^post95 = __const_50^0
		
		propagated equality n44^post95 = n44^0
		
		propagated equality i6^post95 = i6^0
		
		propagated equality m130^post95 = m130^0
		
		propagated equality tmp___115^post95 = free_ent^0
		
		propagated equality __const_65536^post95 = __const_65536^0
		
		propagated equality tmp___024^post95 = tmp___024^0
		
		propagated equality __const_53^post95 = __const_53^0
		
		propagated equality hsize___019^post95 = hsize___019^0
		
		propagated equality i3^post95 = i3^0
		
		propagated equality code31^post95 = code31^0
		
		propagated equality hsize_reg10^post95 = hsize_reg10^0
		
		propagated equality ret_getbyte25^post95 = ret_getbyte25^0
		
		propagated equality i21^post95 = i21^0
		
		propagated equality clear_flg^post95 = clear_flg^0
		
		propagated equality c7^post95 = c7^0
		
		propagated equality incnt^post95 = incnt^0
		
		propagated equality bytes_out^post95 = bytes_out^0
		
		propagated equality __const_10000^post95 = __const_10000^0
		
		propagated equality c37^post95 = c37^0
		
		propagated equality hsize___027^post95 = hsize___027^0
		
		propagated equality seed2^post95 = seed2^0
		
		propagated equality __const_8388607^post95 = __const_8388607^0
		
		propagated equality ent8^post95 = ent8^0
		
		propagated equality __const_429496^post95 = __const_429496^0
		
		propagated equality r_off32^post95 = r_off32^0
		
		propagated equality checkpoint^post95 = checkpoint^0
		
		propagated equality hshift11^post95 = hshift11^0
		
		propagated equality count^post95 = count^0
		
		propagated equality rat26^post95 = rat26^0
		
		propagated equality __const_8^post95 = __const_8^0
		
		propagated equality tmp12^post95 = tmp12^0
		
		propagated equality offset^post95 = offset^0
		
		propagated equality disp9^post95 = disp9^0
		
		propagated equality tabort4^post95 = tabort4^0
		
		propagated equality ratio^post95 = ratio^0
		
		propagated equality apsim_bound11113^post95 = apsim_bound11113^0
		
		propagated equality exit_stat^post95 = exit_stat^0
		
		propagated equality ret_getbyte18^post95 = ret_getbyte18^0
		
		propagated equality out_count^post95 = out_count^0
		
		propagated equality n_bits^post95 = n_bits^0
		
		propagated equality fcode5^post95 = fcode5^0
		
		propagated equality in_count^post95 = in_count^0
		
		propagated equality __const_2147483647^post95 = __const_2147483647^0
		
		propagated equality free_ent^post95 = 1+free_ent^0
		
		propagated equality maxbits^post95 = maxbits^0
		
		propagated equality hsize^post95 = hsize^0
		
		propagated equality maxcode^post95 = maxcode^0
		
		propagated equality tmp___017^post95 = tmp___017^0
		
		propagated equality block_compress^post95 = block_compress^0
		
		propagated equality n40^post95 = n40^0
		
		propagated equality tmp___014^post95 = tmp___014^0
		
		propagated equality maxmaxcode^post95 = maxmaxcode^0
		
		propagated equality __const_9^post95 = __const_9^0
		
		propagated equality apsim_incnt^post95 = apsim_incnt^0
		
		propagated equality __const_16^post95 = __const_16^0
		
		propagated equality m122^post95 = m122^0
		
		propagated equality __const_256^post95 = __const_256^0
		
		propagated equality bits33^post95 = bits33^0
		
	Simplified Guard

	Original rule:
	l61 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=1+free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=free_ent^0, (0 == 0 /\ 1-maxmaxcode^0+free_ent^0 <= 0), cost: 1
	New rule:
	l61 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=1+free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=free_ent^0, 1-maxmaxcode^0+free_ent^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l61 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=1+free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=free_ent^0, 1-maxmaxcode^0+free_ent^0 <= 0, cost: 1
	New rule:
	l61 -> l1 : free_ent^0'=1+free_ent^0, tmp___115^0'=free_ent^0, 1-maxmaxcode^0+free_ent^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l62 -> l61 : __const_10000^0'=__const_10000^post96, __const_16^0'=__const_16^post96, __const_2147483647^0'=__const_2147483647^post96, __const_256^0'=__const_256^post96, __const_257^0'=__const_257^post96, __const_429496^0'=__const_429496^post96, __const_50^0'=__const_50^post96, __const_53^0'=__const_53^post96, __const_65536^0'=__const_65536^post96, __const_8388607^0'=__const_8388607^post96, __const_8^0'=__const_8^post96, __const_9^0'=__const_9^post96, apsim_bound11113^0'=apsim_bound11113^post96, apsim_incnt^0'=apsim_incnt^post96, bits33^0'=bits33^post96, block_compress^0'=block_compress^post96, bytes_out^0'=bytes_out^post96, c37^0'=c37^post96, c7^0'=c7^post96, checkpoint^0'=checkpoint^post96, clear_flg^0'=clear_flg^post96, code31^0'=code31^post96, count^0'=count^post96, disp9^0'=disp9^post96, ent8^0'=ent8^post96, exit_stat^0'=exit_stat^post96, fcode5^0'=fcode5^post96, free_ent^0'=free_ent^post96, hshift11^0'=hshift11^post96, hsize^0'=hsize^post96, hsize___019^0'=hsize___019^post96, hsize___027^0'=hsize___027^post96, hsize_reg10^0'=hsize_reg10^post96, i21^0'=i21^post96, i29^0'=i29^post96, i3^0'=i3^post96, i41^0'=i41^post96, i45^0'=i45^post96, i6^0'=i6^post96, in_count^0'=in_count^post96, incnt^0'=incnt^post96, m122^0'=m122^post96, m130^0'=m130^post96, maxbits^0'=maxbits^post96, maxcode^0'=maxcode^post96, maxmaxcode^0'=maxmaxcode^post96, n40^0'=n40^post96, n44^0'=n44^post96, n_bits^0'=n_bits^post96, offset^0'=offset^post96, out_count^0'=out_count^post96, r_off32^0'=r_off32^post96, rat26^0'=rat26^post96, ratio^0'=ratio^post96, ret_getbyte18^0'=ret_getbyte18^post96, ret_getbyte25^0'=ret_getbyte25^post96, seed2^0'=seed2^post96, tabort4^0'=tabort4^post96, tmp12^0'=tmp12^post96, tmp___014^0'=tmp___014^post96, tmp___017^0'=tmp___017^post96, tmp___024^0'=tmp___024^post96, tmp___115^0'=tmp___115^post96, (-tmp___024^post96+tmp___024^0 == 0 /\ -maxcode^post96+maxcode^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post96 == 0 /\ -exit_stat^post96+exit_stat^0 == 0 /\ -in_count^post96+in_count^0 == 0 /\ -fcode5^post96+fcode5^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post96 == 0 /\ bits33^0-bits33^post96 == 0 /\ -ratio^post96+ratio^0 == 0 /\ -ret_getbyte18^post96+ret_getbyte18^0 == 0 /\ -__const_256^post96+__const_256^0 == 0 /\ maxmaxcode^0-maxmaxcode^post96 == 0 /\ __const_257^0-__const_257^post96 == 0 /\ __const_9^0-__const_9^post96 == 0 /\ apsim_incnt^0-apsim_incnt^post96 == 0 /\ -__const_10000^post96+__const_10000^0 == 0 /\ offset^0-offset^post96 == 0 /\ n40^0-n40^post96 == 0 /\ c37^0-c37^post96 == 0 /\ -m122^post96+m122^0 == 0 /\ -i45^post96+i45^0 == 0 /\ -tabort4^post96+tabort4^0 == 0 /\ n44^0-n44^post96 == 0 /\ tmp___014^0-tmp___014^post96 == 0 /\ -__const_50^post96+__const_50^0 == 0 /\ code31^0-code31^post96 == 0 /\ -c7^0+ent8^post96 == 0 /\ c7^0-c7^post96 == 0 /\ -count^post96+count^0 == 0 /\ hshift11^0-hshift11^post96 == 0 /\ tmp12^0-tmp12^post96 == 0 /\ -r_off32^post96+r_off32^0 == 0 /\ i21^0-i21^post96 == 0 /\ __const_65536^0-__const_65536^post96 == 0 /\ -bytes_out^post96+bytes_out^0 == 0 /\ __const_16^0-__const_16^post96 == 0 /\ free_ent^0-free_ent^post96 == 0 /\ -tmp___017^post96+tmp___017^0 == 0 /\ -1-out_count^0+out_count^post96 == 0 /\ m130^0-m130^post96 == 0 /\ -clear_flg^post96+clear_flg^0 == 0 /\ -checkpoint^post96+checkpoint^0 == 0 /\ __const_53^0-__const_53^post96 == 0 /\ -hsize_reg10^post96+hsize_reg10^0 == 0 /\ -__const_8388607^post96+__const_8388607^0 == 0 /\ maxbits^0-maxbits^post96 == 0 /\ __const_8^0-__const_8^post96 == 0 /\ -block_compress^post96+block_compress^0 == 0 /\ -hsize^post96+hsize^0 == 0 /\ hsize___027^0-hsize___027^post96 == 0 /\ -i41^post96+i41^0 == 0 /\ tmp___115^0-tmp___115^post96 == 0 /\ -seed2^post96+seed2^0 == 0 /\ rat26^0-rat26^post96 == 0 /\ -n_bits^post96+n_bits^0 == 0 /\ -incnt^post96+incnt^0 == 0 /\ hsize___019^0-hsize___019^post96 == 0 /\ -disp9^post96+disp9^0 == 0 /\ -i29^post96+i29^0 == 0 /\ i6^0-i6^post96 == 0 /\ i3^0-i3^post96 == 0 /\ __const_429496^0-__const_429496^post96 == 0 /\ __const_2147483647^0-__const_2147483647^post96 == 0), cost: 1
	New rule:
	l62 -> l61 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=c7^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=1+out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality tmp___024^post96 = tmp___024^0
		
		propagated equality maxcode^post96 = maxcode^0
		
		propagated equality ret_getbyte25^post96 = ret_getbyte25^0
		
		propagated equality exit_stat^post96 = exit_stat^0
		
		propagated equality in_count^post96 = in_count^0
		
		propagated equality fcode5^post96 = fcode5^0
		
		propagated equality apsim_bound11113^post96 = apsim_bound11113^0
		
		propagated equality bits33^post96 = bits33^0
		
		propagated equality ratio^post96 = ratio^0
		
		propagated equality ret_getbyte18^post96 = ret_getbyte18^0
		
		propagated equality __const_256^post96 = __const_256^0
		
		propagated equality maxmaxcode^post96 = maxmaxcode^0
		
		propagated equality __const_257^post96 = __const_257^0
		
		propagated equality __const_9^post96 = __const_9^0
		
		propagated equality apsim_incnt^post96 = apsim_incnt^0
		
		propagated equality __const_10000^post96 = __const_10000^0
		
		propagated equality offset^post96 = offset^0
		
		propagated equality n40^post96 = n40^0
		
		propagated equality c37^post96 = c37^0
		
		propagated equality m122^post96 = m122^0
		
		propagated equality i45^post96 = i45^0
		
		propagated equality tabort4^post96 = tabort4^0
		
		propagated equality n44^post96 = n44^0
		
		propagated equality tmp___014^post96 = tmp___014^0
		
		propagated equality __const_50^post96 = __const_50^0
		
		propagated equality code31^post96 = code31^0
		
		propagated equality ent8^post96 = c7^0
		
		propagated equality c7^post96 = c7^0
		
		propagated equality count^post96 = count^0
		
		propagated equality hshift11^post96 = hshift11^0
		
		propagated equality tmp12^post96 = tmp12^0
		
		propagated equality r_off32^post96 = r_off32^0
		
		propagated equality i21^post96 = i21^0
		
		propagated equality __const_65536^post96 = __const_65536^0
		
		propagated equality bytes_out^post96 = bytes_out^0
		
		propagated equality __const_16^post96 = __const_16^0
		
		propagated equality free_ent^post96 = free_ent^0
		
		propagated equality tmp___017^post96 = tmp___017^0
		
		propagated equality out_count^post96 = 1+out_count^0
		
		propagated equality m130^post96 = m130^0
		
		propagated equality clear_flg^post96 = clear_flg^0
		
		propagated equality checkpoint^post96 = checkpoint^0
		
		propagated equality __const_53^post96 = __const_53^0
		
		propagated equality hsize_reg10^post96 = hsize_reg10^0
		
		propagated equality __const_8388607^post96 = __const_8388607^0
		
		propagated equality maxbits^post96 = maxbits^0
		
		propagated equality __const_8^post96 = __const_8^0
		
		propagated equality block_compress^post96 = block_compress^0
		
		propagated equality hsize^post96 = hsize^0
		
		propagated equality hsize___027^post96 = hsize___027^0
		
		propagated equality i41^post96 = i41^0
		
		propagated equality tmp___115^post96 = tmp___115^0
		
		propagated equality seed2^post96 = seed2^0
		
		propagated equality rat26^post96 = rat26^0
		
		propagated equality n_bits^post96 = n_bits^0
		
		propagated equality incnt^post96 = incnt^0
		
		propagated equality hsize___019^post96 = hsize___019^0
		
		propagated equality disp9^post96 = disp9^0
		
		propagated equality i29^post96 = i29^0
		
		propagated equality i6^post96 = i6^0
		
		propagated equality i3^post96 = i3^0
		
		propagated equality __const_429496^post96 = __const_429496^0
		
		propagated equality __const_2147483647^post96 = __const_2147483647^0
		
	Simplified Guard

	Original rule:
	l62 -> l61 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=c7^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=1+out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l62 -> l61 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=c7^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=1+out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l62 -> l61 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=c7^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=1+out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l62 -> l61 : ent8^0'=c7^0, out_count^0'=1+out_count^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l63 -> l62 : __const_10000^0'=__const_10000^post97, __const_16^0'=__const_16^post97, __const_2147483647^0'=__const_2147483647^post97, __const_256^0'=__const_256^post97, __const_257^0'=__const_257^post97, __const_429496^0'=__const_429496^post97, __const_50^0'=__const_50^post97, __const_53^0'=__const_53^post97, __const_65536^0'=__const_65536^post97, __const_8388607^0'=__const_8388607^post97, __const_8^0'=__const_8^post97, __const_9^0'=__const_9^post97, apsim_bound11113^0'=apsim_bound11113^post97, apsim_incnt^0'=apsim_incnt^post97, bits33^0'=bits33^post97, block_compress^0'=block_compress^post97, bytes_out^0'=bytes_out^post97, c37^0'=c37^post97, c7^0'=c7^post97, checkpoint^0'=checkpoint^post97, clear_flg^0'=clear_flg^post97, code31^0'=code31^post97, count^0'=count^post97, disp9^0'=disp9^post97, ent8^0'=ent8^post97, exit_stat^0'=exit_stat^post97, fcode5^0'=fcode5^post97, free_ent^0'=free_ent^post97, hshift11^0'=hshift11^post97, hsize^0'=hsize^post97, hsize___019^0'=hsize___019^post97, hsize___027^0'=hsize___027^post97, hsize_reg10^0'=hsize_reg10^post97, i21^0'=i21^post97, i29^0'=i29^post97, i3^0'=i3^post97, i41^0'=i41^post97, i45^0'=i45^post97, i6^0'=i6^post97, in_count^0'=in_count^post97, incnt^0'=incnt^post97, m122^0'=m122^post97, m130^0'=m130^post97, maxbits^0'=maxbits^post97, maxcode^0'=maxcode^post97, maxmaxcode^0'=maxmaxcode^post97, n40^0'=n40^post97, n44^0'=n44^post97, n_bits^0'=n_bits^post97, offset^0'=offset^post97, out_count^0'=out_count^post97, r_off32^0'=r_off32^post97, rat26^0'=rat26^post97, ratio^0'=ratio^post97, ret_getbyte18^0'=ret_getbyte18^post97, ret_getbyte25^0'=ret_getbyte25^post97, seed2^0'=seed2^post97, tabort4^0'=tabort4^post97, tmp12^0'=tmp12^post97, tmp___014^0'=tmp___014^post97, tmp___017^0'=tmp___017^post97, tmp___024^0'=tmp___024^post97, tmp___115^0'=tmp___115^post97, (n40^0-n40^post97 == 0 /\ ent8^0-ent8^post97 == 0 /\ -hsize^post97+hsize^0 == 0 /\ c7^0-c7^post97 == 0 /\ tmp12^0-tmp12^post97 == 0 /\ -__const_429496^post97+__const_429496^0 == 0 /\ -i41^post97+i41^0 == 0 /\ -i29^post97+i29^0 == 0 /\ rat26^0-rat26^post97 == 0 /\ tmp___115^0-tmp___115^post97 == 0 /\ __const_8388607^0-__const_8388607^post97 == 0 /\ exit_stat^0-exit_stat^post97 == 0 /\ -__const_65536^post97+__const_65536^0 == 0 /\ out_count^0-out_count^post97 == 0 /\ __const_50^0-__const_50^post97 == 0 /\ -apsim_bound11113^0+in_count^0 <= 0 /\ apsim_bound11113^0-apsim_bound11113^post97 == 0 /\ i21^0-i21^post97 == 0 /\ -hsize_reg10^post97+hsize_reg10^0 == 0 /\ -maxcode^post97+maxcode^0 == 0 /\ offset^0-offset^post97 == 0 /\ __const_16^0-__const_16^post97 == 0 /\ -incnt^post97+incnt^0 == 0 /\ -tmp___017^post97+tmp___017^0 == 0 /\ __const_9^0-__const_9^post97 == 0 /\ -__const_10000^post97+__const_10000^0 == 0 /\ -clear_flg^post97+clear_flg^0 == 0 /\ -bytes_out^post97+bytes_out^0 == 0 /\ tmp___014^0-tmp___014^post97 == 0 /\ -__const_8^post97+__const_8^0 == 0 /\ bits33^0-bits33^post97 == 0 /\ -__const_2147483647^post97+__const_2147483647^0 == 0 /\ hsize___019^0-hsize___019^post97 == 0 /\ __const_257^0-__const_257^post97 == 0 /\ apsim_incnt^0-apsim_incnt^post97 == 0 /\ -fcode5^post97+fcode5^0 == 0 /\ -count^post97+count^0 == 0 /\ -disp9^post97+disp9^0 == 0 /\ hshift11^0-hshift11^post97 == 0 /\ n44^0-n44^post97 == 0 /\ -ratio^post97+ratio^0 == 0 /\ -ret_getbyte18^post97+ret_getbyte18^0 == 0 /\ -i6^post97+i6^0 == 0 /\ -in_count^post97+in_count^0 == 0 /\ -n_bits^post97+n_bits^0 == 0 /\ maxmaxcode^0-maxmaxcode^post97 == 0 /\ code31^0-code31^post97 == 0 /\ seed2^0-seed2^post97 == 0 /\ __const_53^0-__const_53^post97 == 0 /\ m130^0-m130^post97 == 0 /\ ret_getbyte25^0-ret_getbyte25^post97 == 0 /\ i3^0-i3^post97 == 0 /\ free_ent^0-free_ent^post97 == 0 /\ -hsize___027^post97+hsize___027^0 == 0 /\ -r_off32^post97+r_off32^0 == 0 /\ maxbits^0-maxbits^post97 == 0 /\ -tmp___024^post97+tmp___024^0 == 0 /\ -tabort4^post97+tabort4^0 == 0 /\ -m122^post97+m122^0 == 0 /\ -__const_256^post97+__const_256^0 == 0 /\ -block_compress^post97+block_compress^0 == 0 /\ -checkpoint^post97+checkpoint^0 == 0 /\ i45^0-i45^post97 == 0 /\ c37^0-c37^post97 == 0), cost: 1
	New rule:
	l63 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -apsim_bound11113^0+in_count^0 <= 0), cost: 1
	
		propagated equality n40^post97 = n40^0
		
		propagated equality ent8^post97 = ent8^0
		
		propagated equality hsize^post97 = hsize^0
		
		propagated equality c7^post97 = c7^0
		
		propagated equality tmp12^post97 = tmp12^0
		
		propagated equality __const_429496^post97 = __const_429496^0
		
		propagated equality i41^post97 = i41^0
		
		propagated equality i29^post97 = i29^0
		
		propagated equality rat26^post97 = rat26^0
		
		propagated equality tmp___115^post97 = tmp___115^0
		
		propagated equality __const_8388607^post97 = __const_8388607^0
		
		propagated equality exit_stat^post97 = exit_stat^0
		
		propagated equality __const_65536^post97 = __const_65536^0
		
		propagated equality out_count^post97 = out_count^0
		
		propagated equality __const_50^post97 = __const_50^0
		
		propagated equality apsim_bound11113^post97 = apsim_bound11113^0
		
		propagated equality i21^post97 = i21^0
		
		propagated equality hsize_reg10^post97 = hsize_reg10^0
		
		propagated equality maxcode^post97 = maxcode^0
		
		propagated equality offset^post97 = offset^0
		
		propagated equality __const_16^post97 = __const_16^0
		
		propagated equality incnt^post97 = incnt^0
		
		propagated equality tmp___017^post97 = tmp___017^0
		
		propagated equality __const_9^post97 = __const_9^0
		
		propagated equality __const_10000^post97 = __const_10000^0
		
		propagated equality clear_flg^post97 = clear_flg^0
		
		propagated equality bytes_out^post97 = bytes_out^0
		
		propagated equality tmp___014^post97 = tmp___014^0
		
		propagated equality __const_8^post97 = __const_8^0
		
		propagated equality bits33^post97 = bits33^0
		
		propagated equality __const_2147483647^post97 = __const_2147483647^0
		
		propagated equality hsize___019^post97 = hsize___019^0
		
		propagated equality __const_257^post97 = __const_257^0
		
		propagated equality apsim_incnt^post97 = apsim_incnt^0
		
		propagated equality fcode5^post97 = fcode5^0
		
		propagated equality count^post97 = count^0
		
		propagated equality disp9^post97 = disp9^0
		
		propagated equality hshift11^post97 = hshift11^0
		
		propagated equality n44^post97 = n44^0
		
		propagated equality ratio^post97 = ratio^0
		
		propagated equality ret_getbyte18^post97 = ret_getbyte18^0
		
		propagated equality i6^post97 = i6^0
		
		propagated equality in_count^post97 = in_count^0
		
		propagated equality n_bits^post97 = n_bits^0
		
		propagated equality maxmaxcode^post97 = maxmaxcode^0
		
		propagated equality code31^post97 = code31^0
		
		propagated equality seed2^post97 = seed2^0
		
		propagated equality __const_53^post97 = __const_53^0
		
		propagated equality m130^post97 = m130^0
		
		propagated equality ret_getbyte25^post97 = ret_getbyte25^0
		
		propagated equality i3^post97 = i3^0
		
		propagated equality free_ent^post97 = free_ent^0
		
		propagated equality hsize___027^post97 = hsize___027^0
		
		propagated equality r_off32^post97 = r_off32^0
		
		propagated equality maxbits^post97 = maxbits^0
		
		propagated equality tmp___024^post97 = tmp___024^0
		
		propagated equality tabort4^post97 = tabort4^0
		
		propagated equality m122^post97 = m122^0
		
		propagated equality __const_256^post97 = __const_256^0
		
		propagated equality block_compress^post97 = block_compress^0
		
		propagated equality checkpoint^post97 = checkpoint^0
		
		propagated equality i45^post97 = i45^0
		
		propagated equality c37^post97 = c37^0
		
	Simplified Guard

	Original rule:
	l63 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -apsim_bound11113^0+in_count^0 <= 0), cost: 1
	New rule:
	l63 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -apsim_bound11113^0+in_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l63 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -apsim_bound11113^0+in_count^0 <= 0, cost: 1
	New rule:
	l63 -> l62 : -apsim_bound11113^0+in_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l63 -> l6 : __const_10000^0'=__const_10000^post98, __const_16^0'=__const_16^post98, __const_2147483647^0'=__const_2147483647^post98, __const_256^0'=__const_256^post98, __const_257^0'=__const_257^post98, __const_429496^0'=__const_429496^post98, __const_50^0'=__const_50^post98, __const_53^0'=__const_53^post98, __const_65536^0'=__const_65536^post98, __const_8388607^0'=__const_8388607^post98, __const_8^0'=__const_8^post98, __const_9^0'=__const_9^post98, apsim_bound11113^0'=apsim_bound11113^post98, apsim_incnt^0'=apsim_incnt^post98, bits33^0'=bits33^post98, block_compress^0'=block_compress^post98, bytes_out^0'=bytes_out^post98, c37^0'=c37^post98, c7^0'=c7^post98, checkpoint^0'=checkpoint^post98, clear_flg^0'=clear_flg^post98, code31^0'=code31^post98, count^0'=count^post98, disp9^0'=disp9^post98, ent8^0'=ent8^post98, exit_stat^0'=exit_stat^post98, fcode5^0'=fcode5^post98, free_ent^0'=free_ent^post98, hshift11^0'=hshift11^post98, hsize^0'=hsize^post98, hsize___019^0'=hsize___019^post98, hsize___027^0'=hsize___027^post98, hsize_reg10^0'=hsize_reg10^post98, i21^0'=i21^post98, i29^0'=i29^post98, i3^0'=i3^post98, i41^0'=i41^post98, i45^0'=i45^post98, i6^0'=i6^post98, in_count^0'=in_count^post98, incnt^0'=incnt^post98, m122^0'=m122^post98, m130^0'=m130^post98, maxbits^0'=maxbits^post98, maxcode^0'=maxcode^post98, maxmaxcode^0'=maxmaxcode^post98, n40^0'=n40^post98, n44^0'=n44^post98, n_bits^0'=n_bits^post98, offset^0'=offset^post98, out_count^0'=out_count^post98, r_off32^0'=r_off32^post98, rat26^0'=rat26^post98, ratio^0'=ratio^post98, ret_getbyte18^0'=ret_getbyte18^post98, ret_getbyte25^0'=ret_getbyte25^post98, seed2^0'=seed2^post98, tabort4^0'=tabort4^post98, tmp12^0'=tmp12^post98, tmp___014^0'=tmp___014^post98, tmp___017^0'=tmp___017^post98, tmp___024^0'=tmp___024^post98, tmp___115^0'=tmp___115^post98, (-tabort4^post98+tabort4^0 == 0 /\ -n44^post98+n44^0 == 0 /\ -r_off32^post98+r_off32^0 == 0 /\ tmp___014^0-tmp___014^post98 == 0 /\ free_ent^0-free_ent^post98 == 0 /\ __const_50^0-__const_50^post98 == 0 /\ -__const_2147483647^post98+__const_2147483647^0 == 0 /\ __const_16^0-__const_16^post98 == 0 /\ -n_bits^post98+n_bits^0 == 0 /\ -fcode5^post98+fcode5^0 == 0 /\ 1+apsim_bound11113^0-in_count^0 <= 0 /\ __const_53^0-__const_53^post98 == 0 /\ tmp___115^0-tmp___115^post98 == 0 /\ tmp12^0-tmp12^post98 == 0 /\ m130^0-m130^post98 == 0 /\ rat26^0-rat26^post98 == 0 /\ -__const_10000^post98+__const_10000^0 == 0 /\ -tmp___024^post98+tmp___024^0 == 0 /\ -tmp___017^post98+tmp___017^0 == 0 /\ __const_256^0-__const_256^post98 == 0 /\ ent8^0-ent8^post98 == 0 /\ -apsim_incnt^post98+apsim_incnt^0 == 0 /\ out_count^0-out_count^post98 == 0 /\ -__const_65536^post98+__const_65536^0 == 0 /\ -i6^post98+i6^0 == 0 /\ i29^0-i29^post98 == 0 /\ -hsize___027^post98+hsize___027^0 == 0 /\ exit_stat^0-exit_stat^post98 == 0 /\ -checkpoint^post98+checkpoint^0 == 0 /\ -clear_flg^post98+clear_flg^0 == 0 /\ -c7^post98+c7^0 == 0 /\ -bytes_out^post98+bytes_out^0 == 0 /\ -block_compress^post98+block_compress^0 == 0 /\ -incnt^post98+incnt^0 == 0 /\ offset^0-offset^post98 == 0 /\ maxmaxcode^0-maxmaxcode^post98 == 0 /\ i21^0-i21^post98 == 0 /\ -m122^post98+m122^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post98 == 0 /\ -__const_9^post98+__const_9^0 == 0 /\ -__const_8388607^post98+__const_8388607^0 == 0 /\ -hsize^post98+hsize^0 == 0 /\ n40^0-n40^post98 == 0 /\ __const_257^0-__const_257^post98 == 0 /\ -hsize___019^post98+hsize___019^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post98 == 0 /\ -i3^post98+i3^0 == 0 /\ -maxbits^post98+maxbits^0 == 0 /\ -maxcode^post98+maxcode^0 == 0 /\ -i41^post98+i41^0 == 0 /\ count^0-count^post98 == 0 /\ -code31^post98+code31^0 == 0 /\ c37^0-c37^post98 == 0 /\ -ret_getbyte18^post98+ret_getbyte18^0 == 0 /\ bits33^0-bits33^post98 == 0 /\ -__const_8^post98+__const_8^0 == 0 /\ -in_count^post98+in_count^0 == 0 /\ i45^0-i45^post98 == 0 /\ -__const_429496^post98+__const_429496^0 == 0 /\ -hsize_reg10^post98+hsize_reg10^0 == 0 /\ seed2^0-seed2^post98 == 0 /\ ratio^0-ratio^post98 == 0 /\ hshift11^0-hshift11^post98 == 0 /\ -disp9^post98+disp9^0 == 0), cost: 1
	New rule:
	l63 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+apsim_bound11113^0-in_count^0 <= 0), cost: 1
	
		propagated equality tabort4^post98 = tabort4^0
		
		propagated equality n44^post98 = n44^0
		
		propagated equality r_off32^post98 = r_off32^0
		
		propagated equality tmp___014^post98 = tmp___014^0
		
		propagated equality free_ent^post98 = free_ent^0
		
		propagated equality __const_50^post98 = __const_50^0
		
		propagated equality __const_2147483647^post98 = __const_2147483647^0
		
		propagated equality __const_16^post98 = __const_16^0
		
		propagated equality n_bits^post98 = n_bits^0
		
		propagated equality fcode5^post98 = fcode5^0
		
		propagated equality __const_53^post98 = __const_53^0
		
		propagated equality tmp___115^post98 = tmp___115^0
		
		propagated equality tmp12^post98 = tmp12^0
		
		propagated equality m130^post98 = m130^0
		
		propagated equality rat26^post98 = rat26^0
		
		propagated equality __const_10000^post98 = __const_10000^0
		
		propagated equality tmp___024^post98 = tmp___024^0
		
		propagated equality tmp___017^post98 = tmp___017^0
		
		propagated equality __const_256^post98 = __const_256^0
		
		propagated equality ent8^post98 = ent8^0
		
		propagated equality apsim_incnt^post98 = apsim_incnt^0
		
		propagated equality out_count^post98 = out_count^0
		
		propagated equality __const_65536^post98 = __const_65536^0
		
		propagated equality i6^post98 = i6^0
		
		propagated equality i29^post98 = i29^0
		
		propagated equality hsize___027^post98 = hsize___027^0
		
		propagated equality exit_stat^post98 = exit_stat^0
		
		propagated equality checkpoint^post98 = checkpoint^0
		
		propagated equality clear_flg^post98 = clear_flg^0
		
		propagated equality c7^post98 = c7^0
		
		propagated equality bytes_out^post98 = bytes_out^0
		
		propagated equality block_compress^post98 = block_compress^0
		
		propagated equality incnt^post98 = incnt^0
		
		propagated equality offset^post98 = offset^0
		
		propagated equality maxmaxcode^post98 = maxmaxcode^0
		
		propagated equality i21^post98 = i21^0
		
		propagated equality m122^post98 = m122^0
		
		propagated equality apsim_bound11113^post98 = apsim_bound11113^0
		
		propagated equality __const_9^post98 = __const_9^0
		
		propagated equality __const_8388607^post98 = __const_8388607^0
		
		propagated equality hsize^post98 = hsize^0
		
		propagated equality n40^post98 = n40^0
		
		propagated equality __const_257^post98 = __const_257^0
		
		propagated equality hsize___019^post98 = hsize___019^0
		
		propagated equality ret_getbyte25^post98 = ret_getbyte25^0
		
		propagated equality i3^post98 = i3^0
		
		propagated equality maxbits^post98 = maxbits^0
		
		propagated equality maxcode^post98 = maxcode^0
		
		propagated equality i41^post98 = i41^0
		
		propagated equality count^post98 = count^0
		
		propagated equality code31^post98 = code31^0
		
		propagated equality c37^post98 = c37^0
		
		propagated equality ret_getbyte18^post98 = ret_getbyte18^0
		
		propagated equality bits33^post98 = bits33^0
		
		propagated equality __const_8^post98 = __const_8^0
		
		propagated equality in_count^post98 = in_count^0
		
		propagated equality i45^post98 = i45^0
		
		propagated equality __const_429496^post98 = __const_429496^0
		
		propagated equality hsize_reg10^post98 = hsize_reg10^0
		
		propagated equality seed2^post98 = seed2^0
		
		propagated equality ratio^post98 = ratio^0
		
		propagated equality hshift11^post98 = hshift11^0
		
		propagated equality disp9^post98 = disp9^0
		
	Simplified Guard

	Original rule:
	l63 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+apsim_bound11113^0-in_count^0 <= 0), cost: 1
	New rule:
	l63 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+apsim_bound11113^0-in_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l63 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+apsim_bound11113^0-in_count^0 <= 0, cost: 1
	New rule:
	l63 -> l6 : 1+apsim_bound11113^0-in_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l64 -> l63 : __const_10000^0'=__const_10000^post99, __const_16^0'=__const_16^post99, __const_2147483647^0'=__const_2147483647^post99, __const_256^0'=__const_256^post99, __const_257^0'=__const_257^post99, __const_429496^0'=__const_429496^post99, __const_50^0'=__const_50^post99, __const_53^0'=__const_53^post99, __const_65536^0'=__const_65536^post99, __const_8388607^0'=__const_8388607^post99, __const_8^0'=__const_8^post99, __const_9^0'=__const_9^post99, apsim_bound11113^0'=apsim_bound11113^post99, apsim_incnt^0'=apsim_incnt^post99, bits33^0'=bits33^post99, block_compress^0'=block_compress^post99, bytes_out^0'=bytes_out^post99, c37^0'=c37^post99, c7^0'=c7^post99, checkpoint^0'=checkpoint^post99, clear_flg^0'=clear_flg^post99, code31^0'=code31^post99, count^0'=count^post99, disp9^0'=disp9^post99, ent8^0'=ent8^post99, exit_stat^0'=exit_stat^post99, fcode5^0'=fcode5^post99, free_ent^0'=free_ent^post99, hshift11^0'=hshift11^post99, hsize^0'=hsize^post99, hsize___019^0'=hsize___019^post99, hsize___027^0'=hsize___027^post99, hsize_reg10^0'=hsize_reg10^post99, i21^0'=i21^post99, i29^0'=i29^post99, i3^0'=i3^post99, i41^0'=i41^post99, i45^0'=i45^post99, i6^0'=i6^post99, in_count^0'=in_count^post99, incnt^0'=incnt^post99, m122^0'=m122^post99, m130^0'=m130^post99, maxbits^0'=maxbits^post99, maxcode^0'=maxcode^post99, maxmaxcode^0'=maxmaxcode^post99, n40^0'=n40^post99, n44^0'=n44^post99, n_bits^0'=n_bits^post99, offset^0'=offset^post99, out_count^0'=out_count^post99, r_off32^0'=r_off32^post99, rat26^0'=rat26^post99, ratio^0'=ratio^post99, ret_getbyte18^0'=ret_getbyte18^post99, ret_getbyte25^0'=ret_getbyte25^post99, seed2^0'=seed2^post99, tabort4^0'=tabort4^post99, tmp12^0'=tmp12^post99, tmp___014^0'=tmp___014^post99, tmp___017^0'=tmp___017^post99, tmp___024^0'=tmp___024^post99, tmp___115^0'=tmp___115^post99, (hshift11^0-hshift11^post99 == 0 /\ tmp___115^0-tmp___115^post99 == 0 /\ -i6^post99+i6^0 == 0 /\ -in_count^post99+in_count^0 == 0 /\ -__const_8388607^post99+__const_8388607^0 == 0 /\ -maxbits^post99+maxbits^0 == 0 /\ apsim_incnt^0-apsim_incnt^post99 == 0 /\ __const_256^0-__const_256^post99 == 0 /\ n44^0-n44^post99 == 0 /\ -n40^post99+n40^0 == 0 /\ -ret_getbyte18^post99+ret_getbyte18^0 == 0 /\ -i21^post99+i21^0 == 0 /\ -c7^post99+c7^0 == 0 /\ maxcode^0-maxcode^post99 == 0 /\ -1-apsim_bound11113^0+apsim_bound11113^post99 == 0 /\ __const_16^0-__const_16^post99 == 0 /\ -m122^post99+m122^0 == 0 /\ free_ent^0-free_ent^post99 == 0 /\ -clear_flg^post99+clear_flg^0 == 0 /\ -hsize___019^post99+hsize___019^0 == 0 /\ -__const_9^post99+__const_9^0 == 0 /\ rat26^0-rat26^post99 == 0 /\ -__const_429496^post99+__const_429496^0 == 0 /\ -i3^post99+i3^0 == 0 /\ exit_stat^0-exit_stat^post99 == 0 /\ __const_50^0-__const_50^post99 == 0 /\ i29^0-i29^post99 == 0 /\ -disp9^post99+disp9^0 == 0 /\ m130^0-m130^post99 == 0 /\ -code31^post99+code31^0 == 0 /\ -r_off32^post99+r_off32^0 == 0 /\ __const_257^0-__const_257^post99 == 0 /\ __const_53^0-__const_53^post99 == 0 /\ ret_getbyte25^0-ret_getbyte25^post99 == 0 /\ -__const_8^post99+__const_8^0 == 0 /\ c37^0-c37^post99 == 0 /\ -tmp___024^post99+tmp___024^0 == 0 /\ -tmp___017^post99+tmp___017^0 == 0 /\ -hsize_reg10^post99+hsize_reg10^0 == 0 /\ out_count^0-out_count^post99 == 0 /\ i45^0-i45^post99 == 0 /\ -seed2^post99+seed2^0 == 0 /\ offset^0-offset^post99 == 0 /\ -tabort4^post99+tabort4^0 == 0 /\ -__const_65536^post99+__const_65536^0 == 0 /\ -block_compress^post99+block_compress^0 == 0 /\ -__const_2147483647^post99+__const_2147483647^0 == 0 /\ -i41^post99+i41^0 == 0 /\ -incnt^post99+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post99 == 0 /\ -ent8^post99+ent8^0 == 0 /\ -hsize^post99+hsize^0 == 0 /\ ratio^0-ratio^post99 == 0 /\ tmp___014^0-tmp___014^post99 == 0 /\ -bytes_out^post99+bytes_out^0 == 0 /\ checkpoint^0-checkpoint^post99 == 0 /\ -n_bits^post99+n_bits^0 == 0 /\ __const_10000^0-__const_10000^post99 == 0 /\ count^0-count^post99 == 0 /\ bits33^0-bits33^post99 == 0 /\ tmp12^0-tmp12^post99 == 0 /\ hsize___027^0-hsize___027^post99 == 0 /\ -fcode5^post99+fcode5^0 == 0), cost: 1
	New rule:
	l64 -> l63 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=1+apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality hshift11^post99 = hshift11^0
		
		propagated equality tmp___115^post99 = tmp___115^0
		
		propagated equality i6^post99 = i6^0
		
		propagated equality in_count^post99 = in_count^0
		
		propagated equality __const_8388607^post99 = __const_8388607^0
		
		propagated equality maxbits^post99 = maxbits^0
		
		propagated equality apsim_incnt^post99 = apsim_incnt^0
		
		propagated equality __const_256^post99 = __const_256^0
		
		propagated equality n44^post99 = n44^0
		
		propagated equality n40^post99 = n40^0
		
		propagated equality ret_getbyte18^post99 = ret_getbyte18^0
		
		propagated equality i21^post99 = i21^0
		
		propagated equality c7^post99 = c7^0
		
		propagated equality maxcode^post99 = maxcode^0
		
		propagated equality apsim_bound11113^post99 = 1+apsim_bound11113^0
		
		propagated equality __const_16^post99 = __const_16^0
		
		propagated equality m122^post99 = m122^0
		
		propagated equality free_ent^post99 = free_ent^0
		
		propagated equality clear_flg^post99 = clear_flg^0
		
		propagated equality hsize___019^post99 = hsize___019^0
		
		propagated equality __const_9^post99 = __const_9^0
		
		propagated equality rat26^post99 = rat26^0
		
		propagated equality __const_429496^post99 = __const_429496^0
		
		propagated equality i3^post99 = i3^0
		
		propagated equality exit_stat^post99 = exit_stat^0
		
		propagated equality __const_50^post99 = __const_50^0
		
		propagated equality i29^post99 = i29^0
		
		propagated equality disp9^post99 = disp9^0
		
		propagated equality m130^post99 = m130^0
		
		propagated equality code31^post99 = code31^0
		
		propagated equality r_off32^post99 = r_off32^0
		
		propagated equality __const_257^post99 = __const_257^0
		
		propagated equality __const_53^post99 = __const_53^0
		
		propagated equality ret_getbyte25^post99 = ret_getbyte25^0
		
		propagated equality __const_8^post99 = __const_8^0
		
		propagated equality c37^post99 = c37^0
		
		propagated equality tmp___024^post99 = tmp___024^0
		
		propagated equality tmp___017^post99 = tmp___017^0
		
		propagated equality hsize_reg10^post99 = hsize_reg10^0
		
		propagated equality out_count^post99 = out_count^0
		
		propagated equality i45^post99 = i45^0
		
		propagated equality seed2^post99 = seed2^0
		
		propagated equality offset^post99 = offset^0
		
		propagated equality tabort4^post99 = tabort4^0
		
		propagated equality __const_65536^post99 = __const_65536^0
		
		propagated equality block_compress^post99 = block_compress^0
		
		propagated equality __const_2147483647^post99 = __const_2147483647^0
		
		propagated equality i41^post99 = i41^0
		
		propagated equality incnt^post99 = incnt^0
		
		propagated equality maxmaxcode^post99 = maxmaxcode^0
		
		propagated equality ent8^post99 = ent8^0
		
		propagated equality hsize^post99 = hsize^0
		
		propagated equality ratio^post99 = ratio^0
		
		propagated equality tmp___014^post99 = tmp___014^0
		
		propagated equality bytes_out^post99 = bytes_out^0
		
		propagated equality checkpoint^post99 = checkpoint^0
		
		propagated equality n_bits^post99 = n_bits^0
		
		propagated equality __const_10000^post99 = __const_10000^0
		
		propagated equality count^post99 = count^0
		
		propagated equality bits33^post99 = bits33^0
		
		propagated equality tmp12^post99 = tmp12^0
		
		propagated equality hsize___027^post99 = hsize___027^0
		
		propagated equality fcode5^post99 = fcode5^0
		
	Simplified Guard

	Original rule:
	l64 -> l63 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=1+apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l64 -> l63 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=1+apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l64 -> l63 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=1+apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l64 -> l63 : apsim_bound11113^0'=1+apsim_bound11113^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l64 -> l62 : __const_10000^0'=__const_10000^post100, __const_16^0'=__const_16^post100, __const_2147483647^0'=__const_2147483647^post100, __const_256^0'=__const_256^post100, __const_257^0'=__const_257^post100, __const_429496^0'=__const_429496^post100, __const_50^0'=__const_50^post100, __const_53^0'=__const_53^post100, __const_65536^0'=__const_65536^post100, __const_8388607^0'=__const_8388607^post100, __const_8^0'=__const_8^post100, __const_9^0'=__const_9^post100, apsim_bound11113^0'=apsim_bound11113^post100, apsim_incnt^0'=apsim_incnt^post100, bits33^0'=bits33^post100, block_compress^0'=block_compress^post100, bytes_out^0'=bytes_out^post100, c37^0'=c37^post100, c7^0'=c7^post100, checkpoint^0'=checkpoint^post100, clear_flg^0'=clear_flg^post100, code31^0'=code31^post100, count^0'=count^post100, disp9^0'=disp9^post100, ent8^0'=ent8^post100, exit_stat^0'=exit_stat^post100, fcode5^0'=fcode5^post100, free_ent^0'=free_ent^post100, hshift11^0'=hshift11^post100, hsize^0'=hsize^post100, hsize___019^0'=hsize___019^post100, hsize___027^0'=hsize___027^post100, hsize_reg10^0'=hsize_reg10^post100, i21^0'=i21^post100, i29^0'=i29^post100, i3^0'=i3^post100, i41^0'=i41^post100, i45^0'=i45^post100, i6^0'=i6^post100, in_count^0'=in_count^post100, incnt^0'=incnt^post100, m122^0'=m122^post100, m130^0'=m130^post100, maxbits^0'=maxbits^post100, maxcode^0'=maxcode^post100, maxmaxcode^0'=maxmaxcode^post100, n40^0'=n40^post100, n44^0'=n44^post100, n_bits^0'=n_bits^post100, offset^0'=offset^post100, out_count^0'=out_count^post100, r_off32^0'=r_off32^post100, rat26^0'=rat26^post100, ratio^0'=ratio^post100, ret_getbyte18^0'=ret_getbyte18^post100, ret_getbyte25^0'=ret_getbyte25^post100, seed2^0'=seed2^post100, tabort4^0'=tabort4^post100, tmp12^0'=tmp12^post100, tmp___014^0'=tmp___014^post100, tmp___017^0'=tmp___017^post100, tmp___024^0'=tmp___024^post100, tmp___115^0'=tmp___115^post100, (rat26^0-rat26^post100 == 0 /\ -tmp___017^post100+tmp___017^0 == 0 /\ bytes_out^0-bytes_out^post100 == 0 /\ -tmp___024^post100+tmp___024^0 == 0 /\ tmp___014^0-tmp___014^post100 == 0 /\ -bits33^post100+bits33^0 == 0 /\ __const_257^0-__const_257^post100 == 0 /\ -__const_429496^post100+__const_429496^0 == 0 /\ -__const_53^post100+__const_53^0 == 0 /\ -apsim_bound11113^post100+apsim_bound11113^0 == 0 /\ apsim_incnt^0-apsim_incnt^post100 == 0 /\ -__const_9^post100+__const_9^0 == 0 /\ -tabort4^post100+tabort4^0 == 0 /\ tmp12^0-tmp12^post100 == 0 /\ -__const_65536^post100+__const_65536^0 == 0 /\ __const_256^0-__const_256^post100 == 0 /\ -i29^post100+i29^0 == 0 /\ -i41^post100+i41^0 == 0 /\ hshift11^0-hshift11^post100 == 0 /\ -clear_flg^post100+clear_flg^0 == 0 /\ -incnt^post100+incnt^0 == 0 /\ -n44^post100+n44^0 == 0 /\ out_count^0-out_count^post100 == 0 /\ -block_compress^post100+block_compress^0 == 0 /\ -__const_2147483647^post100+__const_2147483647^0 == 0 /\ offset^0-offset^post100 == 0 /\ -__const_8388607^post100+__const_8388607^0 == 0 /\ -hsize^post100+hsize^0 == 0 /\ -c7^post100+c7^0 == 0 /\ c37^0-c37^post100 == 0 /\ -i6^post100+i6^0 == 0 /\ -maxcode^post100+maxcode^0 == 0 /\ -in_count^post100+in_count^0 == 0 /\ -code31^post100+code31^0 == 0 /\ -ratio^post100+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post100 == 0 /\ checkpoint^0-checkpoint^post100 == 0 /\ -ret_getbyte18^post100+ret_getbyte18^0 == 0 /\ __const_8^0-__const_8^post100 == 0 /\ hsize_reg10^0-hsize_reg10^post100 == 0 /\ exit_stat^0-exit_stat^post100 == 0 /\ __const_50^0-__const_50^post100 == 0 /\ -free_ent^post100+free_ent^0 == 0 /\ -fcode5^post100+fcode5^0 == 0 /\ -disp9^post100+disp9^0 == 0 /\ hsize___027^0-hsize___027^post100 == 0 /\ i21^0-i21^post100 == 0 /\ n40^0-n40^post100 == 0 /\ -ent8^post100+ent8^0 == 0 /\ -m122^post100+m122^0 == 0 /\ tmp___115^0-tmp___115^post100 == 0 /\ -i3^post100+i3^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post100 == 0 /\ maxbits^0-maxbits^post100 == 0 /\ count^0-count^post100 == 0 /\ m130^0-m130^post100 == 0 /\ seed2^0-seed2^post100 == 0 /\ -n_bits^post100+n_bits^0 == 0 /\ -__const_16^post100+__const_16^0 == 0 /\ i45^0-i45^post100 == 0 /\ -r_off32^post100+r_off32^0 == 0 /\ __const_10000^0-__const_10000^post100 == 0 /\ -hsize___019^post100+hsize___019^0 == 0), cost: 1
	New rule:
	l64 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality rat26^post100 = rat26^0
		
		propagated equality tmp___017^post100 = tmp___017^0
		
		propagated equality bytes_out^post100 = bytes_out^0
		
		propagated equality tmp___024^post100 = tmp___024^0
		
		propagated equality tmp___014^post100 = tmp___014^0
		
		propagated equality bits33^post100 = bits33^0
		
		propagated equality __const_257^post100 = __const_257^0
		
		propagated equality __const_429496^post100 = __const_429496^0
		
		propagated equality __const_53^post100 = __const_53^0
		
		propagated equality apsim_bound11113^post100 = apsim_bound11113^0
		
		propagated equality apsim_incnt^post100 = apsim_incnt^0
		
		propagated equality __const_9^post100 = __const_9^0
		
		propagated equality tabort4^post100 = tabort4^0
		
		propagated equality tmp12^post100 = tmp12^0
		
		propagated equality __const_65536^post100 = __const_65536^0
		
		propagated equality __const_256^post100 = __const_256^0
		
		propagated equality i29^post100 = i29^0
		
		propagated equality i41^post100 = i41^0
		
		propagated equality hshift11^post100 = hshift11^0
		
		propagated equality clear_flg^post100 = clear_flg^0
		
		propagated equality incnt^post100 = incnt^0
		
		propagated equality n44^post100 = n44^0
		
		propagated equality out_count^post100 = out_count^0
		
		propagated equality block_compress^post100 = block_compress^0
		
		propagated equality __const_2147483647^post100 = __const_2147483647^0
		
		propagated equality offset^post100 = offset^0
		
		propagated equality __const_8388607^post100 = __const_8388607^0
		
		propagated equality hsize^post100 = hsize^0
		
		propagated equality c7^post100 = c7^0
		
		propagated equality c37^post100 = c37^0
		
		propagated equality i6^post100 = i6^0
		
		propagated equality maxcode^post100 = maxcode^0
		
		propagated equality in_count^post100 = in_count^0
		
		propagated equality code31^post100 = code31^0
		
		propagated equality ratio^post100 = ratio^0
		
		propagated equality maxmaxcode^post100 = maxmaxcode^0
		
		propagated equality checkpoint^post100 = checkpoint^0
		
		propagated equality ret_getbyte18^post100 = ret_getbyte18^0
		
		propagated equality __const_8^post100 = __const_8^0
		
		propagated equality hsize_reg10^post100 = hsize_reg10^0
		
		propagated equality exit_stat^post100 = exit_stat^0
		
		propagated equality __const_50^post100 = __const_50^0
		
		propagated equality free_ent^post100 = free_ent^0
		
		propagated equality fcode5^post100 = fcode5^0
		
		propagated equality disp9^post100 = disp9^0
		
		propagated equality hsize___027^post100 = hsize___027^0
		
		propagated equality i21^post100 = i21^0
		
		propagated equality n40^post100 = n40^0
		
		propagated equality ent8^post100 = ent8^0
		
		propagated equality m122^post100 = m122^0
		
		propagated equality tmp___115^post100 = tmp___115^0
		
		propagated equality i3^post100 = i3^0
		
		propagated equality ret_getbyte25^post100 = ret_getbyte25^0
		
		propagated equality maxbits^post100 = maxbits^0
		
		propagated equality count^post100 = count^0
		
		propagated equality m130^post100 = m130^0
		
		propagated equality seed2^post100 = seed2^0
		
		propagated equality n_bits^post100 = n_bits^0
		
		propagated equality __const_16^post100 = __const_16^0
		
		propagated equality i45^post100 = i45^0
		
		propagated equality r_off32^post100 = r_off32^0
		
		propagated equality __const_10000^post100 = __const_10000^0
		
		propagated equality hsize___019^post100 = hsize___019^0
		
	Simplified Guard

	Original rule:
	l64 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l64 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l64 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l64 -> l62 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l65 -> l64 : __const_10000^0'=__const_10000^post101, __const_16^0'=__const_16^post101, __const_2147483647^0'=__const_2147483647^post101, __const_256^0'=__const_256^post101, __const_257^0'=__const_257^post101, __const_429496^0'=__const_429496^post101, __const_50^0'=__const_50^post101, __const_53^0'=__const_53^post101, __const_65536^0'=__const_65536^post101, __const_8388607^0'=__const_8388607^post101, __const_8^0'=__const_8^post101, __const_9^0'=__const_9^post101, apsim_bound11113^0'=apsim_bound11113^post101, apsim_incnt^0'=apsim_incnt^post101, bits33^0'=bits33^post101, block_compress^0'=block_compress^post101, bytes_out^0'=bytes_out^post101, c37^0'=c37^post101, c7^0'=c7^post101, checkpoint^0'=checkpoint^post101, clear_flg^0'=clear_flg^post101, code31^0'=code31^post101, count^0'=count^post101, disp9^0'=disp9^post101, ent8^0'=ent8^post101, exit_stat^0'=exit_stat^post101, fcode5^0'=fcode5^post101, free_ent^0'=free_ent^post101, hshift11^0'=hshift11^post101, hsize^0'=hsize^post101, hsize___019^0'=hsize___019^post101, hsize___027^0'=hsize___027^post101, hsize_reg10^0'=hsize_reg10^post101, i21^0'=i21^post101, i29^0'=i29^post101, i3^0'=i3^post101, i41^0'=i41^post101, i45^0'=i45^post101, i6^0'=i6^post101, in_count^0'=in_count^post101, incnt^0'=incnt^post101, m122^0'=m122^post101, m130^0'=m130^post101, maxbits^0'=maxbits^post101, maxcode^0'=maxcode^post101, maxmaxcode^0'=maxmaxcode^post101, n40^0'=n40^post101, n44^0'=n44^post101, n_bits^0'=n_bits^post101, offset^0'=offset^post101, out_count^0'=out_count^post101, r_off32^0'=r_off32^post101, rat26^0'=rat26^post101, ratio^0'=ratio^post101, ret_getbyte18^0'=ret_getbyte18^post101, ret_getbyte25^0'=ret_getbyte25^post101, seed2^0'=seed2^post101, tabort4^0'=tabort4^post101, tmp12^0'=tmp12^post101, tmp___014^0'=tmp___014^post101, tmp___017^0'=tmp___017^post101, tmp___024^0'=tmp___024^post101, tmp___115^0'=tmp___115^post101, (m130^0-m130^post101 == 0 /\ __const_53^0-__const_53^post101 == 0 /\ free_ent^0-free_ent^post101 == 0 /\ -block_compress^post101+block_compress^0 == 0 /\ -code31^post101+code31^0 == 0 /\ -ent8^post101+ent8^0 == 0 /\ -fcode5^post101+fcode5^0 == 0 /\ n44^0-n44^post101 == 0 /\ -disp9^post101+disp9^0 == 0 /\ tmp___014^0-tmp___014^post101 == 0 /\ -ret_getbyte18^post101+ret_getbyte18^0 == 0 /\ -in_count^post101+in_count^0 == 0 /\ -i6^post101+i6^0 == 0 /\ tmp___115^0-tmp___115^post101 == 0 /\ -i21^post101+i21^0 == 0 /\ bytes_out^0-bytes_out^post101 == 0 /\ -maxbits^post101+maxbits^0 == 0 /\ rat26^0-rat26^post101 == 0 /\ -r_off32^post101+r_off32^0 == 0 /\ __const_257^0-__const_257^post101 == 0 /\ -apsim_incnt^post101+apsim_incnt^0 == 0 /\ exit_stat^0-exit_stat^post101 == 0 /\ -m122^post101+m122^0 == 0 /\ __const_16^0-__const_16^post101 == 0 /\ -tabort4^post101+tabort4^0 == 0 /\ -tmp___024^post101+tmp___024^0 == 0 /\ -hsize___019^post101+hsize___019^0 == 0 /\ c37^0-c37^post101 == 0 /\ __const_50^0-__const_50^post101 == 0 /\ i29^0-i29^post101 == 0 /\ -__const_10000^post101+__const_10000^0 == 0 /\ __const_256^0-__const_256^post101 == 0 /\ seed2^0-seed2^post101 == 0 /\ -hsize^post101+hsize^0 == 0 /\ out_count^0-out_count^post101 == 0 /\ apsim_bound11113^0-apsim_bound11113^post101 == 0 /\ count^0-count^post101 == 0 /\ ret_getbyte25^0-ret_getbyte25^post101 == 0 /\ -__const_429496^post101+__const_429496^0 == 0 /\ -i3^post101+i3^0 == 0 /\ -n_bits^post101+n_bits^0 == 0 /\ -__const_9^post101+__const_9^0 == 0 /\ -__const_65536^post101+__const_65536^0 == 0 /\ i45^0-i45^post101 == 0 /\ ratio^0-ratio^post101 == 0 /\ bits33^0-bits33^post101 == 0 /\ checkpoint^0-checkpoint^post101 == 0 /\ hsize_reg10^0-hsize_reg10^post101 == 0 /\ tmp12^0-tmp12^post101 == 0 /\ offset^0-offset^post101 == 0 /\ -maxcode^post101+maxcode^0 == 0 /\ -i41^post101+i41^0 == 0 /\ maxmaxcode^0-maxmaxcode^post101 == 0 /\ -__const_2147483647^post101+__const_2147483647^0 == 0 /\ -tmp___017^post101+tmp___017^0 == 0 /\ hsize___027^0-hsize___027^post101 == 0 /\ hshift11^0-hshift11^post101 == 0 /\ -n40^post101+n40^0 == 0 /\ -clear_flg^post101+clear_flg^0 == 0 /\ -c7^post101+c7^0 == 0 /\ -__const_8388607^post101+__const_8388607^0 == 0 /\ -__const_8^post101+__const_8^0 == 0 /\ -incnt^post101+incnt^0 == 0), cost: 1
	New rule:
	l65 -> l64 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality m130^post101 = m130^0
		
		propagated equality __const_53^post101 = __const_53^0
		
		propagated equality free_ent^post101 = free_ent^0
		
		propagated equality block_compress^post101 = block_compress^0
		
		propagated equality code31^post101 = code31^0
		
		propagated equality ent8^post101 = ent8^0
		
		propagated equality fcode5^post101 = fcode5^0
		
		propagated equality n44^post101 = n44^0
		
		propagated equality disp9^post101 = disp9^0
		
		propagated equality tmp___014^post101 = tmp___014^0
		
		propagated equality ret_getbyte18^post101 = ret_getbyte18^0
		
		propagated equality in_count^post101 = in_count^0
		
		propagated equality i6^post101 = i6^0
		
		propagated equality tmp___115^post101 = tmp___115^0
		
		propagated equality i21^post101 = i21^0
		
		propagated equality bytes_out^post101 = bytes_out^0
		
		propagated equality maxbits^post101 = maxbits^0
		
		propagated equality rat26^post101 = rat26^0
		
		propagated equality r_off32^post101 = r_off32^0
		
		propagated equality __const_257^post101 = __const_257^0
		
		propagated equality apsim_incnt^post101 = apsim_incnt^0
		
		propagated equality exit_stat^post101 = exit_stat^0
		
		propagated equality m122^post101 = m122^0
		
		propagated equality __const_16^post101 = __const_16^0
		
		propagated equality tabort4^post101 = tabort4^0
		
		propagated equality tmp___024^post101 = tmp___024^0
		
		propagated equality hsize___019^post101 = hsize___019^0
		
		propagated equality c37^post101 = c37^0
		
		propagated equality __const_50^post101 = __const_50^0
		
		propagated equality i29^post101 = i29^0
		
		propagated equality __const_10000^post101 = __const_10000^0
		
		propagated equality __const_256^post101 = __const_256^0
		
		propagated equality seed2^post101 = seed2^0
		
		propagated equality hsize^post101 = hsize^0
		
		propagated equality out_count^post101 = out_count^0
		
		propagated equality apsim_bound11113^post101 = apsim_bound11113^0
		
		propagated equality count^post101 = count^0
		
		propagated equality ret_getbyte25^post101 = ret_getbyte25^0
		
		propagated equality __const_429496^post101 = __const_429496^0
		
		propagated equality i3^post101 = i3^0
		
		propagated equality n_bits^post101 = n_bits^0
		
		propagated equality __const_9^post101 = __const_9^0
		
		propagated equality __const_65536^post101 = __const_65536^0
		
		propagated equality i45^post101 = i45^0
		
		propagated equality ratio^post101 = ratio^0
		
		propagated equality bits33^post101 = bits33^0
		
		propagated equality checkpoint^post101 = checkpoint^0
		
		propagated equality hsize_reg10^post101 = hsize_reg10^0
		
		propagated equality tmp12^post101 = tmp12^0
		
		propagated equality offset^post101 = offset^0
		
		propagated equality maxcode^post101 = maxcode^0
		
		propagated equality i41^post101 = i41^0
		
		propagated equality maxmaxcode^post101 = maxmaxcode^0
		
		propagated equality __const_2147483647^post101 = __const_2147483647^0
		
		propagated equality tmp___017^post101 = tmp___017^0
		
		propagated equality hsize___027^post101 = hsize___027^0
		
		propagated equality hshift11^post101 = hshift11^0
		
		propagated equality n40^post101 = n40^0
		
		propagated equality clear_flg^post101 = clear_flg^0
		
		propagated equality c7^post101 = c7^0
		
		propagated equality __const_8388607^post101 = __const_8388607^0
		
		propagated equality __const_8^post101 = __const_8^0
		
		propagated equality incnt^post101 = incnt^0
		
	Simplified Guard

	Original rule:
	l65 -> l64 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l65 -> l64 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l65 -> l64 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l65 -> l64 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l65 -> l1 : __const_10000^0'=__const_10000^post102, __const_16^0'=__const_16^post102, __const_2147483647^0'=__const_2147483647^post102, __const_256^0'=__const_256^post102, __const_257^0'=__const_257^post102, __const_429496^0'=__const_429496^post102, __const_50^0'=__const_50^post102, __const_53^0'=__const_53^post102, __const_65536^0'=__const_65536^post102, __const_8388607^0'=__const_8388607^post102, __const_8^0'=__const_8^post102, __const_9^0'=__const_9^post102, apsim_bound11113^0'=apsim_bound11113^post102, apsim_incnt^0'=apsim_incnt^post102, bits33^0'=bits33^post102, block_compress^0'=block_compress^post102, bytes_out^0'=bytes_out^post102, c37^0'=c37^post102, c7^0'=c7^post102, checkpoint^0'=checkpoint^post102, clear_flg^0'=clear_flg^post102, code31^0'=code31^post102, count^0'=count^post102, disp9^0'=disp9^post102, ent8^0'=ent8^post102, exit_stat^0'=exit_stat^post102, fcode5^0'=fcode5^post102, free_ent^0'=free_ent^post102, hshift11^0'=hshift11^post102, hsize^0'=hsize^post102, hsize___019^0'=hsize___019^post102, hsize___027^0'=hsize___027^post102, hsize_reg10^0'=hsize_reg10^post102, i21^0'=i21^post102, i29^0'=i29^post102, i3^0'=i3^post102, i41^0'=i41^post102, i45^0'=i45^post102, i6^0'=i6^post102, in_count^0'=in_count^post102, incnt^0'=incnt^post102, m122^0'=m122^post102, m130^0'=m130^post102, maxbits^0'=maxbits^post102, maxcode^0'=maxcode^post102, maxmaxcode^0'=maxmaxcode^post102, n40^0'=n40^post102, n44^0'=n44^post102, n_bits^0'=n_bits^post102, offset^0'=offset^post102, out_count^0'=out_count^post102, r_off32^0'=r_off32^post102, rat26^0'=rat26^post102, ratio^0'=ratio^post102, ret_getbyte18^0'=ret_getbyte18^post102, ret_getbyte25^0'=ret_getbyte25^post102, seed2^0'=seed2^post102, tabort4^0'=tabort4^post102, tmp12^0'=tmp12^post102, tmp___014^0'=tmp___014^post102, tmp___017^0'=tmp___017^post102, tmp___024^0'=tmp___024^post102, tmp___115^0'=tmp___115^post102, (0 == 0 /\ __const_256^0-__const_256^post102 == 0 /\ -__const_2147483647^post102+__const_2147483647^0 == 0 /\ -clear_flg^post102+clear_flg^0 == 0 /\ offset^0-offset^post102 == 0 /\ -incnt^post102+incnt^0 == 0 /\ -n_bits^post102+n_bits^0 == 0 /\ -m122^post102+m122^0 == 0 /\ -apsim_bound11113^post102+apsim_bound11113^0 == 0 /\ -__const_9^post102+__const_9^0 == 0 /\ -__const_10000^post102+__const_10000^0 == 0 /\ __const_16^0-__const_16^post102 == 0 /\ bytes_out^0-bytes_out^post102 == 0 /\ -hsize___019^post102+hsize___019^0 == 0 /\ apsim_incnt^0-apsim_incnt^post102 == 0 /\ -maxbits^post102+maxbits^0 == 0 /\ maxcode^0-maxcode^post102 == 0 /\ -i3^post102+i3^0 == 0 /\ -n40^post102+n40^0 == 0 /\ -i41^post102+i41^0 == 0 /\ hshift11^0-hshift11^post102 == 0 /\ -code31^post102+code31^0 == 0 /\ -ret_getbyte18^post102+ret_getbyte18^0 == 0 /\ hsize^0-hsize^post102 == 0 /\ -bits33^post102+bits33^0 == 0 /\ __const_50^0-__const_50^post102 == 0 /\ -i29^post102+i29^0 == 0 /\ -in_count^post102+in_count^0 == 0 /\ -__const_8388607^post102+__const_8388607^0 == 0 /\ c37^0-c37^post102 == 0 /\ __const_53^0-__const_53^post102 == 0 /\ __const_257^0-__const_257^post102 == 0 /\ tmp___115^0-tmp___115^post102 == 0 /\ rat26^0-rat26^post102 == 0 /\ ret_getbyte25^0-ret_getbyte25^post102 == 0 /\ m130^0-m130^post102 == 0 /\ n44^0-n44^post102 == 0 /\ -__const_429496^post102+__const_429496^0 == 0 /\ -r_off32^post102+r_off32^0 == 0 /\ -tabort4^post102+tabort4^0 == 0 /\ -disp9^post102+disp9^0 == 0 /\ -free_ent^post102+free_ent^0 == 0 /\ hsize___027^0-hsize___027^post102 == 0 /\ -c7^post102+c7^0 == 0 /\ __const_8^0-__const_8^post102 == 0 /\ -seed2^post102+seed2^0 == 0 /\ -fcode5^post102+fcode5^0 == 0 /\ i45^0-i45^post102 == 0 /\ -i21^post102+i21^0 == 0 /\ -block_compress^post102+block_compress^0 == 0 /\ exit_stat^0-exit_stat^post102 == 0 /\ -tmp___017^post102+tmp___017^0 == 0 /\ tmp___014^0-tmp___014^post102 == 0 /\ -ratio^post102+ratio^0 == 0 /\ -tmp___024^post102+tmp___024^0 == 0 /\ maxmaxcode^0-maxmaxcode^post102 == 0 /\ -i6^post102+i6^0 == 0 /\ hsize_reg10^0-hsize_reg10^post102 == 0 /\ -__const_65536^post102+__const_65536^0 == 0 /\ out_count^0-out_count^post102 == 0 /\ tmp12^0-tmp12^post102 == 0 /\ count^0-count^post102 == 0 /\ checkpoint^0-checkpoint^post102 == 0), cost: 1
	New rule:
	l65 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^post102, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality __const_256^post102 = __const_256^0
		
		propagated equality __const_2147483647^post102 = __const_2147483647^0
		
		propagated equality clear_flg^post102 = clear_flg^0
		
		propagated equality offset^post102 = offset^0
		
		propagated equality incnt^post102 = incnt^0
		
		propagated equality n_bits^post102 = n_bits^0
		
		propagated equality m122^post102 = m122^0
		
		propagated equality apsim_bound11113^post102 = apsim_bound11113^0
		
		propagated equality __const_9^post102 = __const_9^0
		
		propagated equality __const_10000^post102 = __const_10000^0
		
		propagated equality __const_16^post102 = __const_16^0
		
		propagated equality bytes_out^post102 = bytes_out^0
		
		propagated equality hsize___019^post102 = hsize___019^0
		
		propagated equality apsim_incnt^post102 = apsim_incnt^0
		
		propagated equality maxbits^post102 = maxbits^0
		
		propagated equality maxcode^post102 = maxcode^0
		
		propagated equality i3^post102 = i3^0
		
		propagated equality n40^post102 = n40^0
		
		propagated equality i41^post102 = i41^0
		
		propagated equality hshift11^post102 = hshift11^0
		
		propagated equality code31^post102 = code31^0
		
		propagated equality ret_getbyte18^post102 = ret_getbyte18^0
		
		propagated equality hsize^post102 = hsize^0
		
		propagated equality bits33^post102 = bits33^0
		
		propagated equality __const_50^post102 = __const_50^0
		
		propagated equality i29^post102 = i29^0
		
		propagated equality in_count^post102 = in_count^0
		
		propagated equality __const_8388607^post102 = __const_8388607^0
		
		propagated equality c37^post102 = c37^0
		
		propagated equality __const_53^post102 = __const_53^0
		
		propagated equality __const_257^post102 = __const_257^0
		
		propagated equality tmp___115^post102 = tmp___115^0
		
		propagated equality rat26^post102 = rat26^0
		
		propagated equality ret_getbyte25^post102 = ret_getbyte25^0
		
		propagated equality m130^post102 = m130^0
		
		propagated equality n44^post102 = n44^0
		
		propagated equality __const_429496^post102 = __const_429496^0
		
		propagated equality r_off32^post102 = r_off32^0
		
		propagated equality tabort4^post102 = tabort4^0
		
		propagated equality disp9^post102 = disp9^0
		
		propagated equality free_ent^post102 = free_ent^0
		
		propagated equality hsize___027^post102 = hsize___027^0
		
		propagated equality c7^post102 = c7^0
		
		propagated equality __const_8^post102 = __const_8^0
		
		propagated equality seed2^post102 = seed2^0
		
		propagated equality fcode5^post102 = fcode5^0
		
		propagated equality i45^post102 = i45^0
		
		propagated equality i21^post102 = i21^0
		
		propagated equality block_compress^post102 = block_compress^0
		
		propagated equality exit_stat^post102 = exit_stat^0
		
		propagated equality tmp___017^post102 = tmp___017^0
		
		propagated equality tmp___014^post102 = tmp___014^0
		
		propagated equality ratio^post102 = ratio^0
		
		propagated equality tmp___024^post102 = tmp___024^0
		
		propagated equality maxmaxcode^post102 = maxmaxcode^0
		
		propagated equality i6^post102 = i6^0
		
		propagated equality hsize_reg10^post102 = hsize_reg10^0
		
		propagated equality __const_65536^post102 = __const_65536^0
		
		propagated equality out_count^post102 = out_count^0
		
		propagated equality tmp12^post102 = tmp12^0
		
		propagated equality count^post102 = count^0
		
		propagated equality checkpoint^post102 = checkpoint^0
		
	Simplified Guard

	Original rule:
	l65 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^post102, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l65 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^post102, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l65 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^post102, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l65 -> l1 : ent8^0'=ent8^post102, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l65 -> l64 : __const_10000^0'=__const_10000^post103, __const_16^0'=__const_16^post103, __const_2147483647^0'=__const_2147483647^post103, __const_256^0'=__const_256^post103, __const_257^0'=__const_257^post103, __const_429496^0'=__const_429496^post103, __const_50^0'=__const_50^post103, __const_53^0'=__const_53^post103, __const_65536^0'=__const_65536^post103, __const_8388607^0'=__const_8388607^post103, __const_8^0'=__const_8^post103, __const_9^0'=__const_9^post103, apsim_bound11113^0'=apsim_bound11113^post103, apsim_incnt^0'=apsim_incnt^post103, bits33^0'=bits33^post103, block_compress^0'=block_compress^post103, bytes_out^0'=bytes_out^post103, c37^0'=c37^post103, c7^0'=c7^post103, checkpoint^0'=checkpoint^post103, clear_flg^0'=clear_flg^post103, code31^0'=code31^post103, count^0'=count^post103, disp9^0'=disp9^post103, ent8^0'=ent8^post103, exit_stat^0'=exit_stat^post103, fcode5^0'=fcode5^post103, free_ent^0'=free_ent^post103, hshift11^0'=hshift11^post103, hsize^0'=hsize^post103, hsize___019^0'=hsize___019^post103, hsize___027^0'=hsize___027^post103, hsize_reg10^0'=hsize_reg10^post103, i21^0'=i21^post103, i29^0'=i29^post103, i3^0'=i3^post103, i41^0'=i41^post103, i45^0'=i45^post103, i6^0'=i6^post103, in_count^0'=in_count^post103, incnt^0'=incnt^post103, m122^0'=m122^post103, m130^0'=m130^post103, maxbits^0'=maxbits^post103, maxcode^0'=maxcode^post103, maxmaxcode^0'=maxmaxcode^post103, n40^0'=n40^post103, n44^0'=n44^post103, n_bits^0'=n_bits^post103, offset^0'=offset^post103, out_count^0'=out_count^post103, r_off32^0'=r_off32^post103, rat26^0'=rat26^post103, ratio^0'=ratio^post103, ret_getbyte18^0'=ret_getbyte18^post103, ret_getbyte25^0'=ret_getbyte25^post103, seed2^0'=seed2^post103, tabort4^0'=tabort4^post103, tmp12^0'=tmp12^post103, tmp___014^0'=tmp___014^post103, tmp___017^0'=tmp___017^post103, tmp___024^0'=tmp___024^post103, tmp___115^0'=tmp___115^post103, (bytes_out^0-bytes_out^post103 == 0 /\ out_count^0-out_count^post103 == 0 /\ maxmaxcode^0-maxmaxcode^post103 == 0 /\ -tmp___024^post103+tmp___024^0 == 0 /\ -tmp___115^post103+tmp___115^0 == 0 /\ __const_256^0-__const_256^post103 == 0 /\ count^0-count^post103 == 0 /\ -tmp___014^post103+tmp___014^0 == 0 /\ offset^0-offset^post103 == 0 /\ -seed2^post103+seed2^0 == 0 /\ -__const_257^post103+__const_257^0 == 0 /\ -bits33^post103+bits33^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post103 == 0 /\ hshift11^0-hshift11^post103 == 0 /\ -__const_65536^post103+__const_65536^0 == 0 /\ -block_compress^post103+block_compress^0 == 0 /\ apsim_incnt^0-apsim_incnt^post103 == 0 /\ tabort4^0-tabort4^post103 == 0 /\ -ent8^post103+ent8^0 == 0 /\ -i41^post103+i41^0 == 0 /\ -hsize^post103+hsize^0 == 0 /\ -c37^post103+c37^0 == 0 /\ checkpoint^0-checkpoint^post103 == 0 /\ n44^0-n44^post103 == 0 /\ i45^0-i45^post103 == 0 /\ i3^0-i3^post103 == 0 /\ maxcode^0-maxcode^post103 == 0 /\ -r_off32^post103+r_off32^0 == 0 /\ -apsim_bound11113^post103+apsim_bound11113^0 == 0 /\ rat26^0-rat26^post103 == 0 /\ -in_count^post103+in_count^0 == 0 /\ -__const_8388607^post103+__const_8388607^0 == 0 /\ -maxbits^post103+maxbits^0 == 0 /\ -i6^post103+i6^0 == 0 /\ tmp___017^0-tmp___017^post103 == 0 /\ exit_stat^0-exit_stat^post103 == 0 /\ __const_50^0-__const_50^post103 == 0 /\ fcode5^0-fcode5^post103 == 0 /\ -ratio^post103+ratio^0 == 0 /\ -n40^post103+n40^0 == 0 /\ __const_8^0-__const_8^post103 == 0 /\ m130^0-m130^post103 == 0 /\ -incnt^post103+incnt^0 == 0 /\ tmp12^0-tmp12^post103 == 0 /\ hsize___027^0-hsize___027^post103 == 0 /\ __const_53^0-__const_53^post103 == 0 /\ -clear_flg^post103+clear_flg^0 == 0 /\ -__const_2147483647^post103+__const_2147483647^0 == 0 /\ -hsize___019^post103+hsize___019^0 == 0 /\ __const_16^0-__const_16^post103 == 0 /\ -hsize_reg10^post103+hsize_reg10^0 == 0 /\ -__const_429496^post103+__const_429496^0 == 0 /\ -c7^post103+c7^0 == 0 /\ -n_bits^post103+n_bits^0 == 0 /\ __const_10000^0-__const_10000^post103 == 0 /\ -disp9^post103+disp9^0 == 0 /\ -ret_getbyte18^post103+ret_getbyte18^0 == 0 /\ -i29^post103+i29^0 == 0 /\ -code31^post103+code31^0 == 0 /\ -i21^post103+i21^0 == 0 /\ -free_ent^post103+free_ent^0 == 0 /\ -__const_9^post103+__const_9^0 == 0 /\ m122^0-m122^post103 == 0), cost: 1
	New rule:
	l65 -> l64 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality bytes_out^post103 = bytes_out^0
		
		propagated equality out_count^post103 = out_count^0
		
		propagated equality maxmaxcode^post103 = maxmaxcode^0
		
		propagated equality tmp___024^post103 = tmp___024^0
		
		propagated equality tmp___115^post103 = tmp___115^0
		
		propagated equality __const_256^post103 = __const_256^0
		
		propagated equality count^post103 = count^0
		
		propagated equality tmp___014^post103 = tmp___014^0
		
		propagated equality offset^post103 = offset^0
		
		propagated equality seed2^post103 = seed2^0
		
		propagated equality __const_257^post103 = __const_257^0
		
		propagated equality bits33^post103 = bits33^0
		
		propagated equality ret_getbyte25^post103 = ret_getbyte25^0
		
		propagated equality hshift11^post103 = hshift11^0
		
		propagated equality __const_65536^post103 = __const_65536^0
		
		propagated equality block_compress^post103 = block_compress^0
		
		propagated equality apsim_incnt^post103 = apsim_incnt^0
		
		propagated equality tabort4^post103 = tabort4^0
		
		propagated equality ent8^post103 = ent8^0
		
		propagated equality i41^post103 = i41^0
		
		propagated equality hsize^post103 = hsize^0
		
		propagated equality c37^post103 = c37^0
		
		propagated equality checkpoint^post103 = checkpoint^0
		
		propagated equality n44^post103 = n44^0
		
		propagated equality i45^post103 = i45^0
		
		propagated equality i3^post103 = i3^0
		
		propagated equality maxcode^post103 = maxcode^0
		
		propagated equality r_off32^post103 = r_off32^0
		
		propagated equality apsim_bound11113^post103 = apsim_bound11113^0
		
		propagated equality rat26^post103 = rat26^0
		
		propagated equality in_count^post103 = in_count^0
		
		propagated equality __const_8388607^post103 = __const_8388607^0
		
		propagated equality maxbits^post103 = maxbits^0
		
		propagated equality i6^post103 = i6^0
		
		propagated equality tmp___017^post103 = tmp___017^0
		
		propagated equality exit_stat^post103 = exit_stat^0
		
		propagated equality __const_50^post103 = __const_50^0
		
		propagated equality fcode5^post103 = fcode5^0
		
		propagated equality ratio^post103 = ratio^0
		
		propagated equality n40^post103 = n40^0
		
		propagated equality __const_8^post103 = __const_8^0
		
		propagated equality m130^post103 = m130^0
		
		propagated equality incnt^post103 = incnt^0
		
		propagated equality tmp12^post103 = tmp12^0
		
		propagated equality hsize___027^post103 = hsize___027^0
		
		propagated equality __const_53^post103 = __const_53^0
		
		propagated equality clear_flg^post103 = clear_flg^0
		
		propagated equality __const_2147483647^post103 = __const_2147483647^0
		
		propagated equality hsize___019^post103 = hsize___019^0
		
		propagated equality __const_16^post103 = __const_16^0
		
		propagated equality hsize_reg10^post103 = hsize_reg10^0
		
		propagated equality __const_429496^post103 = __const_429496^0
		
		propagated equality c7^post103 = c7^0
		
		propagated equality n_bits^post103 = n_bits^0
		
		propagated equality __const_10000^post103 = __const_10000^0
		
		propagated equality disp9^post103 = disp9^0
		
		propagated equality ret_getbyte18^post103 = ret_getbyte18^0
		
		propagated equality i29^post103 = i29^0
		
		propagated equality code31^post103 = code31^0
		
		propagated equality i21^post103 = i21^0
		
		propagated equality free_ent^post103 = free_ent^0
		
		propagated equality __const_9^post103 = __const_9^0
		
		propagated equality m122^post103 = m122^0
		
	Simplified Guard

	Original rule:
	l65 -> l64 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l65 -> l64 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l65 -> l64 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l65 -> l64 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l65 : __const_10000^0'=__const_10000^post104, __const_16^0'=__const_16^post104, __const_2147483647^0'=__const_2147483647^post104, __const_256^0'=__const_256^post104, __const_257^0'=__const_257^post104, __const_429496^0'=__const_429496^post104, __const_50^0'=__const_50^post104, __const_53^0'=__const_53^post104, __const_65536^0'=__const_65536^post104, __const_8388607^0'=__const_8388607^post104, __const_8^0'=__const_8^post104, __const_9^0'=__const_9^post104, apsim_bound11113^0'=apsim_bound11113^post104, apsim_incnt^0'=apsim_incnt^post104, bits33^0'=bits33^post104, block_compress^0'=block_compress^post104, bytes_out^0'=bytes_out^post104, c37^0'=c37^post104, c7^0'=c7^post104, checkpoint^0'=checkpoint^post104, clear_flg^0'=clear_flg^post104, code31^0'=code31^post104, count^0'=count^post104, disp9^0'=disp9^post104, ent8^0'=ent8^post104, exit_stat^0'=exit_stat^post104, fcode5^0'=fcode5^post104, free_ent^0'=free_ent^post104, hshift11^0'=hshift11^post104, hsize^0'=hsize^post104, hsize___019^0'=hsize___019^post104, hsize___027^0'=hsize___027^post104, hsize_reg10^0'=hsize_reg10^post104, i21^0'=i21^post104, i29^0'=i29^post104, i3^0'=i3^post104, i41^0'=i41^post104, i45^0'=i45^post104, i6^0'=i6^post104, in_count^0'=in_count^post104, incnt^0'=incnt^post104, m122^0'=m122^post104, m130^0'=m130^post104, maxbits^0'=maxbits^post104, maxcode^0'=maxcode^post104, maxmaxcode^0'=maxmaxcode^post104, n40^0'=n40^post104, n44^0'=n44^post104, n_bits^0'=n_bits^post104, offset^0'=offset^post104, out_count^0'=out_count^post104, r_off32^0'=r_off32^post104, rat26^0'=rat26^post104, ratio^0'=ratio^post104, ret_getbyte18^0'=ret_getbyte18^post104, ret_getbyte25^0'=ret_getbyte25^post104, seed2^0'=seed2^post104, tabort4^0'=tabort4^post104, tmp12^0'=tmp12^post104, tmp___014^0'=tmp___014^post104, tmp___017^0'=tmp___017^post104, tmp___024^0'=tmp___024^post104, tmp___115^0'=tmp___115^post104, (-i41^post104+i41^0 == 0 /\ __const_257^0-__const_257^post104 == 0 /\ -seed2^post104+seed2^0 == 0 /\ checkpoint^0-checkpoint^post104 == 0 /\ -code31^post104+code31^0 == 0 /\ -ret_getbyte25^post104+ret_getbyte25^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post104 == 0 /\ count^0-count^post104 == 0 /\ __const_256^0-__const_256^post104 == 0 /\ disp9^0-disp9^post104 == 0 /\ n44^0-n44^post104 == 0 /\ m130^0-m130^post104 == 0 /\ -ent8^post104+ent8^0 == 0 /\ -i29^post104+i29^0 == 0 /\ i3^0-i3^post104 == 0 /\ -maxbits^post104+maxbits^0 == 0 /\ -tmp___024^post104+tmp___024^0 == 0 /\ -free_ent^post104+free_ent^0 == 0 /\ -ratio^post104+ratio^0 == 0 /\ -__const_2147483647^post104+__const_2147483647^0 == 0 /\ -i21^post104+i21^0 == 0 /\ i6^0-i6^post104 == 0 /\ m122^0-m122^post104 == 0 /\ tmp___017^0-tmp___017^post104 == 0 /\ -clear_flg^post104+clear_flg^0 == 0 /\ hsize___027^0-hsize___027^post104 == 0 /\ -hsize_reg10^post104+hsize_reg10^0 == 0 /\ -tmp___014^post104+tmp___014^0 == 0 /\ -c7^post104+c7^0 == 0 /\ -hsize___019^post104+hsize___019^0 == 0 /\ -offset^post104+offset^0 == 0 /\ -i45^post104+i45^0 == 0 /\ __const_53^0-__const_53^post104 == 0 /\ hshift11^0-hshift11^post104 == 0 /\ apsim_incnt^0-apsim_incnt^post104 == 0 /\ -incnt^post104+incnt^0 == 0 /\ r_off32^0-r_off32^post104 == 0 /\ -bits33^post104+bits33^0 == 0 /\ -apsim_bound11113^post104+apsim_bound11113^0 == 0 /\ -i6^0 <= 0 /\ -__const_9^post104+__const_9^0 == 0 /\ -__const_429496^post104+__const_429496^0 == 0 /\ out_count^0-out_count^post104 == 0 /\ __const_10000^0-__const_10000^post104 == 0 /\ -__const_65536^post104+__const_65536^0 == 0 /\ -rat26^post104+rat26^0 == 0 /\ fcode5^0-fcode5^post104 == 0 /\ -n40^post104+n40^0 == 0 /\ maxcode^0-maxcode^post104 == 0 /\ -in_count^post104+in_count^0 == 0 /\ bytes_out^0-bytes_out^post104 == 0 /\ n_bits^0-n_bits^post104 == 0 /\ -tmp___115^post104+tmp___115^0 == 0 /\ -__const_16^post104+__const_16^0 == 0 /\ __const_8^0-__const_8^post104 == 0 /\ tmp12^0-tmp12^post104 == 0 /\ exit_stat^0-exit_stat^post104 == 0 /\ __const_50^0-__const_50^post104 == 0 /\ tabort4^0-tabort4^post104 == 0 /\ -__const_8388607^post104+__const_8388607^0 == 0 /\ -block_compress^post104+block_compress^0 == 0 /\ -hsize^post104+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post104 == 0 /\ c37^0-c37^post104 == 0), cost: 1
	New rule:
	l7 -> l65 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -i6^0 <= 0), cost: 1
	
		propagated equality i41^post104 = i41^0
		
		propagated equality __const_257^post104 = __const_257^0
		
		propagated equality seed2^post104 = seed2^0
		
		propagated equality checkpoint^post104 = checkpoint^0
		
		propagated equality code31^post104 = code31^0
		
		propagated equality ret_getbyte25^post104 = ret_getbyte25^0
		
		propagated equality ret_getbyte18^post104 = ret_getbyte18^0
		
		propagated equality count^post104 = count^0
		
		propagated equality __const_256^post104 = __const_256^0
		
		propagated equality disp9^post104 = disp9^0
		
		propagated equality n44^post104 = n44^0
		
		propagated equality m130^post104 = m130^0
		
		propagated equality ent8^post104 = ent8^0
		
		propagated equality i29^post104 = i29^0
		
		propagated equality i3^post104 = i3^0
		
		propagated equality maxbits^post104 = maxbits^0
		
		propagated equality tmp___024^post104 = tmp___024^0
		
		propagated equality free_ent^post104 = free_ent^0
		
		propagated equality ratio^post104 = ratio^0
		
		propagated equality __const_2147483647^post104 = __const_2147483647^0
		
		propagated equality i21^post104 = i21^0
		
		propagated equality i6^post104 = i6^0
		
		propagated equality m122^post104 = m122^0
		
		propagated equality tmp___017^post104 = tmp___017^0
		
		propagated equality clear_flg^post104 = clear_flg^0
		
		propagated equality hsize___027^post104 = hsize___027^0
		
		propagated equality hsize_reg10^post104 = hsize_reg10^0
		
		propagated equality tmp___014^post104 = tmp___014^0
		
		propagated equality c7^post104 = c7^0
		
		propagated equality hsize___019^post104 = hsize___019^0
		
		propagated equality offset^post104 = offset^0
		
		propagated equality i45^post104 = i45^0
		
		propagated equality __const_53^post104 = __const_53^0
		
		propagated equality hshift11^post104 = hshift11^0
		
		propagated equality apsim_incnt^post104 = apsim_incnt^0
		
		propagated equality incnt^post104 = incnt^0
		
		propagated equality r_off32^post104 = r_off32^0
		
		propagated equality bits33^post104 = bits33^0
		
		propagated equality apsim_bound11113^post104 = apsim_bound11113^0
		
		propagated equality __const_9^post104 = __const_9^0
		
		propagated equality __const_429496^post104 = __const_429496^0
		
		propagated equality out_count^post104 = out_count^0
		
		propagated equality __const_10000^post104 = __const_10000^0
		
		propagated equality __const_65536^post104 = __const_65536^0
		
		propagated equality rat26^post104 = rat26^0
		
		propagated equality fcode5^post104 = fcode5^0
		
		propagated equality n40^post104 = n40^0
		
		propagated equality maxcode^post104 = maxcode^0
		
		propagated equality in_count^post104 = in_count^0
		
		propagated equality bytes_out^post104 = bytes_out^0
		
		propagated equality n_bits^post104 = n_bits^0
		
		propagated equality tmp___115^post104 = tmp___115^0
		
		propagated equality __const_16^post104 = __const_16^0
		
		propagated equality __const_8^post104 = __const_8^0
		
		propagated equality tmp12^post104 = tmp12^0
		
		propagated equality exit_stat^post104 = exit_stat^0
		
		propagated equality __const_50^post104 = __const_50^0
		
		propagated equality tabort4^post104 = tabort4^0
		
		propagated equality __const_8388607^post104 = __const_8388607^0
		
		propagated equality block_compress^post104 = block_compress^0
		
		propagated equality hsize^post104 = hsize^0
		
		propagated equality maxmaxcode^post104 = maxmaxcode^0
		
		propagated equality c37^post104 = c37^0
		
	Simplified Guard

	Original rule:
	l7 -> l65 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ -i6^0 <= 0), cost: 1
	New rule:
	l7 -> l65 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -i6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l65 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, -i6^0 <= 0, cost: 1
	New rule:
	l7 -> l65 : -i6^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l65 : __const_10000^0'=__const_10000^post105, __const_16^0'=__const_16^post105, __const_2147483647^0'=__const_2147483647^post105, __const_256^0'=__const_256^post105, __const_257^0'=__const_257^post105, __const_429496^0'=__const_429496^post105, __const_50^0'=__const_50^post105, __const_53^0'=__const_53^post105, __const_65536^0'=__const_65536^post105, __const_8388607^0'=__const_8388607^post105, __const_8^0'=__const_8^post105, __const_9^0'=__const_9^post105, apsim_bound11113^0'=apsim_bound11113^post105, apsim_incnt^0'=apsim_incnt^post105, bits33^0'=bits33^post105, block_compress^0'=block_compress^post105, bytes_out^0'=bytes_out^post105, c37^0'=c37^post105, c7^0'=c7^post105, checkpoint^0'=checkpoint^post105, clear_flg^0'=clear_flg^post105, code31^0'=code31^post105, count^0'=count^post105, disp9^0'=disp9^post105, ent8^0'=ent8^post105, exit_stat^0'=exit_stat^post105, fcode5^0'=fcode5^post105, free_ent^0'=free_ent^post105, hshift11^0'=hshift11^post105, hsize^0'=hsize^post105, hsize___019^0'=hsize___019^post105, hsize___027^0'=hsize___027^post105, hsize_reg10^0'=hsize_reg10^post105, i21^0'=i21^post105, i29^0'=i29^post105, i3^0'=i3^post105, i41^0'=i41^post105, i45^0'=i45^post105, i6^0'=i6^post105, in_count^0'=in_count^post105, incnt^0'=incnt^post105, m122^0'=m122^post105, m130^0'=m130^post105, maxbits^0'=maxbits^post105, maxcode^0'=maxcode^post105, maxmaxcode^0'=maxmaxcode^post105, n40^0'=n40^post105, n44^0'=n44^post105, n_bits^0'=n_bits^post105, offset^0'=offset^post105, out_count^0'=out_count^post105, r_off32^0'=r_off32^post105, rat26^0'=rat26^post105, ratio^0'=ratio^post105, ret_getbyte18^0'=ret_getbyte18^post105, ret_getbyte25^0'=ret_getbyte25^post105, seed2^0'=seed2^post105, tabort4^0'=tabort4^post105, tmp12^0'=tmp12^post105, tmp___014^0'=tmp___014^post105, tmp___017^0'=tmp___017^post105, tmp___024^0'=tmp___024^post105, tmp___115^0'=tmp___115^post105, (n44^0-n44^post105 == 0 /\ apsim_incnt^0-apsim_incnt^post105 == 0 /\ __const_16^0-__const_16^post105 == 0 /\ hshift11^0-hshift11^post105 == 0 /\ -maxbits^post105+maxbits^0 == 0 /\ -incnt^post105+incnt^0 == 0 /\ maxcode^0-maxcode^post105 == 0 /\ -m122^post105+m122^0 == 0 /\ -n40^post105+n40^0 == 0 /\ -__const_2147483647^post105+__const_2147483647^0 == 0 /\ free_ent^0-free_ent^post105 == 0 /\ -hsize___027^post105+hsize___027^0 == 0 /\ -hsize_reg10^post105+hsize_reg10^0 == 0 /\ -__const_8388607^post105+__const_8388607^0 == 0 /\ __const_65536^0-__const_65536^post105 == 0 /\ -__const_10000^post105+__const_10000^0 == 0 /\ __const_256^0-__const_256^post105 == 0 /\ exit_stat^0-exit_stat^post105 == 0 /\ c37^0-c37^post105 == 0 /\ tmp___017^0-tmp___017^post105 == 0 /\ -n_bits^post105+n_bits^0 == 0 /\ 1+i6^0 <= 0 /\ -disp9^post105+disp9^0 == 0 /\ -i29^post105+i29^0 == 0 /\ __const_53^0-__const_53^post105 == 0 /\ m130^0-m130^post105 == 0 /\ code31^0-code31^post105 == 0 /\ ret_getbyte25^0-ret_getbyte25^post105 == 0 /\ -in_count^post105+in_count^0 == 0 /\ -i41^post105+i41^0 == 0 /\ __const_8^0-__const_8^post105 == 0 /\ c7^0-c7^post105 == 0 /\ rat26^0-rat26^post105 == 0 /\ tabort4^0-tabort4^post105 == 0 /\ -tmp___014^post105+tmp___014^0 == 0 /\ -ratio^post105+ratio^0 == 0 /\ -seed2^post105+seed2^0 == 0 /\ -bytes_out^post105+bytes_out^0 == 0 /\ -clear_flg^post105+clear_flg^0 == 0 /\ __const_257^0-__const_257^post105 == 0 /\ ent8^0-ent8^post105 == 0 /\ -tmp___024^post105+tmp___024^0 == 0 /\ -tmp___115^post105+tmp___115^0 == 0 /\ hsize___019^0-hsize___019^post105 == 0 /\ i21^0-i21^post105 == 0 /\ -checkpoint^post105+checkpoint^0 == 0 /\ maxmaxcode^0-maxmaxcode^post105 == 0 /\ __const_9^0-__const_9^post105 == 0 /\ ret_getbyte18^0-ret_getbyte18^post105 == 0 /\ -hsize^post105+hsize^0 == 0 /\ -__const_50^post105+__const_50^0 == 0 /\ out_count^0-out_count^post105 == 0 /\ -block_compress^post105+block_compress^0 == 0 /\ -fcode5^post105+fcode5^0 == 0 /\ bits33^0-bits33^post105 == 0 /\ -__const_429496^post105+__const_429496^0 == 0 /\ -r_off32^post105+r_off32^0 == 0 /\ -i6^0+i6^post105-hsize_reg10^0 == 0 /\ -apsim_bound11113^post105+apsim_bound11113^0 == 0 /\ count^0-count^post105 == 0 /\ -i3^post105+i3^0 == 0 /\ -offset^post105+offset^0 == 0 /\ tmp12^0-tmp12^post105 == 0 /\ i45^0-i45^post105 == 0), cost: 1
	New rule:
	l7 -> l65 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0+hsize_reg10^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i6^0 <= 0), cost: 1
	
		propagated equality n44^post105 = n44^0
		
		propagated equality apsim_incnt^post105 = apsim_incnt^0
		
		propagated equality __const_16^post105 = __const_16^0
		
		propagated equality hshift11^post105 = hshift11^0
		
		propagated equality maxbits^post105 = maxbits^0
		
		propagated equality incnt^post105 = incnt^0
		
		propagated equality maxcode^post105 = maxcode^0
		
		propagated equality m122^post105 = m122^0
		
		propagated equality n40^post105 = n40^0
		
		propagated equality __const_2147483647^post105 = __const_2147483647^0
		
		propagated equality free_ent^post105 = free_ent^0
		
		propagated equality hsize___027^post105 = hsize___027^0
		
		propagated equality hsize_reg10^post105 = hsize_reg10^0
		
		propagated equality __const_8388607^post105 = __const_8388607^0
		
		propagated equality __const_65536^post105 = __const_65536^0
		
		propagated equality __const_10000^post105 = __const_10000^0
		
		propagated equality __const_256^post105 = __const_256^0
		
		propagated equality exit_stat^post105 = exit_stat^0
		
		propagated equality c37^post105 = c37^0
		
		propagated equality tmp___017^post105 = tmp___017^0
		
		propagated equality n_bits^post105 = n_bits^0
		
		propagated equality disp9^post105 = disp9^0
		
		propagated equality i29^post105 = i29^0
		
		propagated equality __const_53^post105 = __const_53^0
		
		propagated equality m130^post105 = m130^0
		
		propagated equality code31^post105 = code31^0
		
		propagated equality ret_getbyte25^post105 = ret_getbyte25^0
		
		propagated equality in_count^post105 = in_count^0
		
		propagated equality i41^post105 = i41^0
		
		propagated equality __const_8^post105 = __const_8^0
		
		propagated equality c7^post105 = c7^0
		
		propagated equality rat26^post105 = rat26^0
		
		propagated equality tabort4^post105 = tabort4^0
		
		propagated equality tmp___014^post105 = tmp___014^0
		
		propagated equality ratio^post105 = ratio^0
		
		propagated equality seed2^post105 = seed2^0
		
		propagated equality bytes_out^post105 = bytes_out^0
		
		propagated equality clear_flg^post105 = clear_flg^0
		
		propagated equality __const_257^post105 = __const_257^0
		
		propagated equality ent8^post105 = ent8^0
		
		propagated equality tmp___024^post105 = tmp___024^0
		
		propagated equality tmp___115^post105 = tmp___115^0
		
		propagated equality hsize___019^post105 = hsize___019^0
		
		propagated equality i21^post105 = i21^0
		
		propagated equality checkpoint^post105 = checkpoint^0
		
		propagated equality maxmaxcode^post105 = maxmaxcode^0
		
		propagated equality __const_9^post105 = __const_9^0
		
		propagated equality ret_getbyte18^post105 = ret_getbyte18^0
		
		propagated equality hsize^post105 = hsize^0
		
		propagated equality __const_50^post105 = __const_50^0
		
		propagated equality out_count^post105 = out_count^0
		
		propagated equality block_compress^post105 = block_compress^0
		
		propagated equality fcode5^post105 = fcode5^0
		
		propagated equality bits33^post105 = bits33^0
		
		propagated equality __const_429496^post105 = __const_429496^0
		
		propagated equality r_off32^post105 = r_off32^0
		
		propagated equality i6^post105 = i6^0+hsize_reg10^0
		
		propagated equality apsim_bound11113^post105 = apsim_bound11113^0
		
		propagated equality count^post105 = count^0
		
		propagated equality i3^post105 = i3^0
		
		propagated equality offset^post105 = offset^0
		
		propagated equality tmp12^post105 = tmp12^0
		
		propagated equality i45^post105 = i45^0
		
	Simplified Guard

	Original rule:
	l7 -> l65 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0+hsize_reg10^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i6^0 <= 0), cost: 1
	New rule:
	l7 -> l65 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0+hsize_reg10^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l65 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0+hsize_reg10^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i6^0 <= 0, cost: 1
	New rule:
	l7 -> l65 : i6^0'=i6^0+hsize_reg10^0, 1+i6^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^post106, __const_16^0'=__const_16^post106, __const_2147483647^0'=__const_2147483647^post106, __const_256^0'=__const_256^post106, __const_257^0'=__const_257^post106, __const_429496^0'=__const_429496^post106, __const_50^0'=__const_50^post106, __const_53^0'=__const_53^post106, __const_65536^0'=__const_65536^post106, __const_8388607^0'=__const_8388607^post106, __const_8^0'=__const_8^post106, __const_9^0'=__const_9^post106, apsim_bound11113^0'=apsim_bound11113^post106, apsim_incnt^0'=apsim_incnt^post106, bits33^0'=bits33^post106, block_compress^0'=block_compress^post106, bytes_out^0'=bytes_out^post106, c37^0'=c37^post106, c7^0'=c7^post106, checkpoint^0'=checkpoint^post106, clear_flg^0'=clear_flg^post106, code31^0'=code31^post106, count^0'=count^post106, disp9^0'=disp9^post106, ent8^0'=ent8^post106, exit_stat^0'=exit_stat^post106, fcode5^0'=fcode5^post106, free_ent^0'=free_ent^post106, hshift11^0'=hshift11^post106, hsize^0'=hsize^post106, hsize___019^0'=hsize___019^post106, hsize___027^0'=hsize___027^post106, hsize_reg10^0'=hsize_reg10^post106, i21^0'=i21^post106, i29^0'=i29^post106, i3^0'=i3^post106, i41^0'=i41^post106, i45^0'=i45^post106, i6^0'=i6^post106, in_count^0'=in_count^post106, incnt^0'=incnt^post106, m122^0'=m122^post106, m130^0'=m130^post106, maxbits^0'=maxbits^post106, maxcode^0'=maxcode^post106, maxmaxcode^0'=maxmaxcode^post106, n40^0'=n40^post106, n44^0'=n44^post106, n_bits^0'=n_bits^post106, offset^0'=offset^post106, out_count^0'=out_count^post106, r_off32^0'=r_off32^post106, rat26^0'=rat26^post106, ratio^0'=ratio^post106, ret_getbyte18^0'=ret_getbyte18^post106, ret_getbyte25^0'=ret_getbyte25^post106, seed2^0'=seed2^post106, tabort4^0'=tabort4^post106, tmp12^0'=tmp12^post106, tmp___014^0'=tmp___014^post106, tmp___017^0'=tmp___017^post106, tmp___024^0'=tmp___024^post106, tmp___115^0'=tmp___115^post106, (-tmp___115^post106+tmp___115^0 == 0 /\ code31^0-code31^post106 == 0 /\ out_count^0-out_count^post106 == 0 /\ __const_9^0-__const_9^post106 == 0 /\ offset^0-offset^post106 == 0 /\ -count^post106+count^0 == 0 /\ maxmaxcode^0-maxmaxcode^post106 == 0 /\ bits33^0-bits33^post106 == 0 /\ -ratio^post106+ratio^0 == 0 /\ -ret_getbyte18^post106+ret_getbyte18^0 == 0 /\ c37^0-c37^post106 == 0 /\ __const_16^0-__const_16^post106 == 0 /\ __const_53^0-__const_53^post106 == 0 /\ hsize___019^0-hsize___019^post106 == 0 /\ -i6^post106+i6^0 == 0 /\ -__const_256^post106+__const_256^0 == 0 /\ -incnt^post106+incnt^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post106 == 0 /\ c7^0-c7^post106 == 0 /\ __const_257^0-__const_257^post106 == 0 /\ m130^0-m130^post106 == 0 /\ -r_off32^post106+r_off32^0 == 0 /\ -checkpoint^post106+checkpoint^0 == 0 /\ -apsim_bound11113^post106+apsim_bound11113^0 == 0 /\ -seed2^post106+seed2^0 == 0 /\ __const_65536^0-__const_65536^post106 == 0 /\ -fcode5^post106+fcode5^0 == 0 /\ apsim_incnt^0-apsim_incnt^post106 == 0 /\ hshift11^0-hshift11^post106 == 0 /\ -hsize^post106+hsize^0 == 0 /\ free_ent^0-free_ent^post106 == 0 /\ -hsize___027^post106+hsize___027^0 == 0 /\ n44^0-n44^post106 == 0 /\ i29^0-i29^post106 == 0 /\ -n40^post106+n40^0 == 0 /\ -maxcode^post106+maxcode^0 == 0 /\ -i3^post106+i3^0 == 0 /\ -i41^post106+i41^0 == 0 /\ tmp12^0-tmp12^post106 == 0 /\ -in_count^post106+in_count^0 == 0 /\ -__const_8388607^post106+__const_8388607^0 == 0 /\ exit_stat^0-exit_stat^post106 == 0 /\ 1-i6^0 <= 0 /\ __const_429496^0-__const_429496^post106 == 0 /\ __const_8^0-__const_8^post106 == 0 /\ tabort4^0-tabort4^post106 == 0 /\ tmp___017^0-tmp___017^post106 == 0 /\ -disp9^post106+disp9^0 == 0 /\ -tmp___014^post106+tmp___014^0 == 0 /\ -__const_10000^post106+__const_10000^0 == 0 /\ -__const_2147483647^post106+__const_2147483647^0 == 0 /\ i45^0-i45^post106 == 0 /\ -n_bits^post106+n_bits^0 == 0 /\ -__const_50^post106+__const_50^0 == 0 /\ -m122^post106+m122^0 == 0 /\ rat26^0-rat26^post106 == 0 /\ -clear_flg^post106+clear_flg^0 == 0 /\ -hsize_reg10^post106+hsize_reg10^0 == 0 /\ -i21^post106+i21^0 == 0 /\ block_compress^0-block_compress^post106 == 0 /\ ent8^0-ent8^post106 == 0 /\ -maxbits^post106+maxbits^0 == 0 /\ -bytes_out^post106+bytes_out^0 == 0 /\ -tmp___024^post106+tmp___024^0 == 0), cost: 1
	New rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-i6^0 <= 0), cost: 1
	
		propagated equality tmp___115^post106 = tmp___115^0
		
		propagated equality code31^post106 = code31^0
		
		propagated equality out_count^post106 = out_count^0
		
		propagated equality __const_9^post106 = __const_9^0
		
		propagated equality offset^post106 = offset^0
		
		propagated equality count^post106 = count^0
		
		propagated equality maxmaxcode^post106 = maxmaxcode^0
		
		propagated equality bits33^post106 = bits33^0
		
		propagated equality ratio^post106 = ratio^0
		
		propagated equality ret_getbyte18^post106 = ret_getbyte18^0
		
		propagated equality c37^post106 = c37^0
		
		propagated equality __const_16^post106 = __const_16^0
		
		propagated equality __const_53^post106 = __const_53^0
		
		propagated equality hsize___019^post106 = hsize___019^0
		
		propagated equality i6^post106 = i6^0
		
		propagated equality __const_256^post106 = __const_256^0
		
		propagated equality incnt^post106 = incnt^0
		
		propagated equality ret_getbyte25^post106 = ret_getbyte25^0
		
		propagated equality c7^post106 = c7^0
		
		propagated equality __const_257^post106 = __const_257^0
		
		propagated equality m130^post106 = m130^0
		
		propagated equality r_off32^post106 = r_off32^0
		
		propagated equality checkpoint^post106 = checkpoint^0
		
		propagated equality apsim_bound11113^post106 = apsim_bound11113^0
		
		propagated equality seed2^post106 = seed2^0
		
		propagated equality __const_65536^post106 = __const_65536^0
		
		propagated equality fcode5^post106 = fcode5^0
		
		propagated equality apsim_incnt^post106 = apsim_incnt^0
		
		propagated equality hshift11^post106 = hshift11^0
		
		propagated equality hsize^post106 = hsize^0
		
		propagated equality free_ent^post106 = free_ent^0
		
		propagated equality hsize___027^post106 = hsize___027^0
		
		propagated equality n44^post106 = n44^0
		
		propagated equality i29^post106 = i29^0
		
		propagated equality n40^post106 = n40^0
		
		propagated equality maxcode^post106 = maxcode^0
		
		propagated equality i3^post106 = i3^0
		
		propagated equality i41^post106 = i41^0
		
		propagated equality tmp12^post106 = tmp12^0
		
		propagated equality in_count^post106 = in_count^0
		
		propagated equality __const_8388607^post106 = __const_8388607^0
		
		propagated equality exit_stat^post106 = exit_stat^0
		
		propagated equality __const_429496^post106 = __const_429496^0
		
		propagated equality __const_8^post106 = __const_8^0
		
		propagated equality tabort4^post106 = tabort4^0
		
		propagated equality tmp___017^post106 = tmp___017^0
		
		propagated equality disp9^post106 = disp9^0
		
		propagated equality tmp___014^post106 = tmp___014^0
		
		propagated equality __const_10000^post106 = __const_10000^0
		
		propagated equality __const_2147483647^post106 = __const_2147483647^0
		
		propagated equality i45^post106 = i45^0
		
		propagated equality n_bits^post106 = n_bits^0
		
		propagated equality __const_50^post106 = __const_50^0
		
		propagated equality m122^post106 = m122^0
		
		propagated equality rat26^post106 = rat26^0
		
		propagated equality clear_flg^post106 = clear_flg^0
		
		propagated equality hsize_reg10^post106 = hsize_reg10^0
		
		propagated equality i21^post106 = i21^0
		
		propagated equality block_compress^post106 = block_compress^0
		
		propagated equality ent8^post106 = ent8^0
		
		propagated equality maxbits^post106 = maxbits^0
		
		propagated equality bytes_out^post106 = bytes_out^0
		
		propagated equality tmp___024^post106 = tmp___024^0
		
	Simplified Guard

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-i6^0 <= 0), cost: 1
	New rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-i6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-i6^0 <= 0, cost: 1
	New rule:
	l66 -> l6 : 1-i6^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^post107, __const_16^0'=__const_16^post107, __const_2147483647^0'=__const_2147483647^post107, __const_256^0'=__const_256^post107, __const_257^0'=__const_257^post107, __const_429496^0'=__const_429496^post107, __const_50^0'=__const_50^post107, __const_53^0'=__const_53^post107, __const_65536^0'=__const_65536^post107, __const_8388607^0'=__const_8388607^post107, __const_8^0'=__const_8^post107, __const_9^0'=__const_9^post107, apsim_bound11113^0'=apsim_bound11113^post107, apsim_incnt^0'=apsim_incnt^post107, bits33^0'=bits33^post107, block_compress^0'=block_compress^post107, bytes_out^0'=bytes_out^post107, c37^0'=c37^post107, c7^0'=c7^post107, checkpoint^0'=checkpoint^post107, clear_flg^0'=clear_flg^post107, code31^0'=code31^post107, count^0'=count^post107, disp9^0'=disp9^post107, ent8^0'=ent8^post107, exit_stat^0'=exit_stat^post107, fcode5^0'=fcode5^post107, free_ent^0'=free_ent^post107, hshift11^0'=hshift11^post107, hsize^0'=hsize^post107, hsize___019^0'=hsize___019^post107, hsize___027^0'=hsize___027^post107, hsize_reg10^0'=hsize_reg10^post107, i21^0'=i21^post107, i29^0'=i29^post107, i3^0'=i3^post107, i41^0'=i41^post107, i45^0'=i45^post107, i6^0'=i6^post107, in_count^0'=in_count^post107, incnt^0'=incnt^post107, m122^0'=m122^post107, m130^0'=m130^post107, maxbits^0'=maxbits^post107, maxcode^0'=maxcode^post107, maxmaxcode^0'=maxmaxcode^post107, n40^0'=n40^post107, n44^0'=n44^post107, n_bits^0'=n_bits^post107, offset^0'=offset^post107, out_count^0'=out_count^post107, r_off32^0'=r_off32^post107, rat26^0'=rat26^post107, ratio^0'=ratio^post107, ret_getbyte18^0'=ret_getbyte18^post107, ret_getbyte25^0'=ret_getbyte25^post107, seed2^0'=seed2^post107, tabort4^0'=tabort4^post107, tmp12^0'=tmp12^post107, tmp___014^0'=tmp___014^post107, tmp___017^0'=tmp___017^post107, tmp___024^0'=tmp___024^post107, tmp___115^0'=tmp___115^post107, (apsim_bound11113^0-apsim_bound11113^post107 == 0 /\ c37^0-c37^post107 == 0 /\ -checkpoint^post107+checkpoint^0 == 0 /\ n40^0-n40^post107 == 0 /\ -bytes_out^post107+bytes_out^0 == 0 /\ -__const_50^post107+__const_50^0 == 0 /\ __const_257^0-__const_257^post107 == 0 /\ __const_9^0-__const_9^post107 == 0 /\ c7^0-c7^post107 == 0 /\ -i3^post107+i3^0 == 0 /\ -i41^post107+i41^0 == 0 /\ i29^0-i29^post107 == 0 /\ -exit_stat^post107+exit_stat^0 == 0 /\ -i21^post107+i21^0 == 0 /\ -fcode5^post107+fcode5^0 == 0 /\ out_count^0-out_count^post107 == 0 /\ offset^0-offset^post107 == 0 /\ bits33^0-bits33^post107 == 0 /\ hsize___027^0-hsize___027^post107 == 0 /\ __const_53^0-__const_53^post107 == 0 /\ tmp12^0-tmp12^post107 == 0 /\ -ret_getbyte18^post107+ret_getbyte18^0 == 0 /\ -tmp___024^post107+tmp___024^0 == 0 /\ hshift11^0-hshift11^post107 == 0 /\ 1+i6^0 <= 0 /\ apsim_incnt^0-apsim_incnt^post107 == 0 /\ -tmp___014^post107+tmp___014^0 == 0 /\ -__const_10000^post107+__const_10000^0 == 0 /\ -in_count^post107+in_count^0 == 0 /\ -clear_flg^post107+clear_flg^0 == 0 /\ hsize___019^0-hsize___019^post107 == 0 /\ maxmaxcode^0-maxmaxcode^post107 == 0 /\ -tabort4^post107+tabort4^0 == 0 /\ -m122^post107+m122^0 == 0 /\ -count^post107+count^0 == 0 /\ m130^0-m130^post107 == 0 /\ -hsize_reg10^post107+hsize_reg10^0 == 0 /\ __const_429496^0-__const_429496^post107 == 0 /\ -disp9^post107+disp9^0 == 0 /\ __const_65536^0-__const_65536^post107 == 0 /\ -incnt^post107+incnt^0 == 0 /\ -n_bits^post107+n_bits^0 == 0 /\ i45^0-i45^post107 == 0 /\ -hsize^post107+hsize^0 == 0 /\ free_ent^0-free_ent^post107 == 0 /\ tmp___115^0-tmp___115^post107 == 0 /\ maxbits^0-maxbits^post107 == 0 /\ -r_off32^post107+r_off32^0 == 0 /\ n44^0-n44^post107 == 0 /\ __const_8^0-__const_8^post107 == 0 /\ -__const_8388607^post107+__const_8388607^0 == 0 /\ __const_2147483647^0-__const_2147483647^post107 == 0 /\ -ratio^post107+ratio^0 == 0 /\ -maxcode^post107+maxcode^0 == 0 /\ block_compress^0-block_compress^post107 == 0 /\ code31^0-code31^post107 == 0 /\ ent8^0-ent8^post107 == 0 /\ __const_16^0-__const_16^post107 == 0 /\ ret_getbyte25^0-ret_getbyte25^post107 == 0 /\ rat26^0-rat26^post107 == 0 /\ tmp___017^0-tmp___017^post107 == 0 /\ -__const_256^post107+__const_256^0 == 0 /\ -seed2^post107+seed2^0 == 0 /\ -i6^post107+i6^0 == 0), cost: 1
	New rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i6^0 <= 0), cost: 1
	
		propagated equality apsim_bound11113^post107 = apsim_bound11113^0
		
		propagated equality c37^post107 = c37^0
		
		propagated equality checkpoint^post107 = checkpoint^0
		
		propagated equality n40^post107 = n40^0
		
		propagated equality bytes_out^post107 = bytes_out^0
		
		propagated equality __const_50^post107 = __const_50^0
		
		propagated equality __const_257^post107 = __const_257^0
		
		propagated equality __const_9^post107 = __const_9^0
		
		propagated equality c7^post107 = c7^0
		
		propagated equality i3^post107 = i3^0
		
		propagated equality i41^post107 = i41^0
		
		propagated equality i29^post107 = i29^0
		
		propagated equality exit_stat^post107 = exit_stat^0
		
		propagated equality i21^post107 = i21^0
		
		propagated equality fcode5^post107 = fcode5^0
		
		propagated equality out_count^post107 = out_count^0
		
		propagated equality offset^post107 = offset^0
		
		propagated equality bits33^post107 = bits33^0
		
		propagated equality hsize___027^post107 = hsize___027^0
		
		propagated equality __const_53^post107 = __const_53^0
		
		propagated equality tmp12^post107 = tmp12^0
		
		propagated equality ret_getbyte18^post107 = ret_getbyte18^0
		
		propagated equality tmp___024^post107 = tmp___024^0
		
		propagated equality hshift11^post107 = hshift11^0
		
		propagated equality apsim_incnt^post107 = apsim_incnt^0
		
		propagated equality tmp___014^post107 = tmp___014^0
		
		propagated equality __const_10000^post107 = __const_10000^0
		
		propagated equality in_count^post107 = in_count^0
		
		propagated equality clear_flg^post107 = clear_flg^0
		
		propagated equality hsize___019^post107 = hsize___019^0
		
		propagated equality maxmaxcode^post107 = maxmaxcode^0
		
		propagated equality tabort4^post107 = tabort4^0
		
		propagated equality m122^post107 = m122^0
		
		propagated equality count^post107 = count^0
		
		propagated equality m130^post107 = m130^0
		
		propagated equality hsize_reg10^post107 = hsize_reg10^0
		
		propagated equality __const_429496^post107 = __const_429496^0
		
		propagated equality disp9^post107 = disp9^0
		
		propagated equality __const_65536^post107 = __const_65536^0
		
		propagated equality incnt^post107 = incnt^0
		
		propagated equality n_bits^post107 = n_bits^0
		
		propagated equality i45^post107 = i45^0
		
		propagated equality hsize^post107 = hsize^0
		
		propagated equality free_ent^post107 = free_ent^0
		
		propagated equality tmp___115^post107 = tmp___115^0
		
		propagated equality maxbits^post107 = maxbits^0
		
		propagated equality r_off32^post107 = r_off32^0
		
		propagated equality n44^post107 = n44^0
		
		propagated equality __const_8^post107 = __const_8^0
		
		propagated equality __const_8388607^post107 = __const_8388607^0
		
		propagated equality __const_2147483647^post107 = __const_2147483647^0
		
		propagated equality ratio^post107 = ratio^0
		
		propagated equality maxcode^post107 = maxcode^0
		
		propagated equality block_compress^post107 = block_compress^0
		
		propagated equality code31^post107 = code31^0
		
		propagated equality ent8^post107 = ent8^0
		
		propagated equality __const_16^post107 = __const_16^0
		
		propagated equality ret_getbyte25^post107 = ret_getbyte25^0
		
		propagated equality rat26^post107 = rat26^0
		
		propagated equality tmp___017^post107 = tmp___017^0
		
		propagated equality __const_256^post107 = __const_256^0
		
		propagated equality seed2^post107 = seed2^0
		
		propagated equality i6^post107 = i6^0
		
	Simplified Guard

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1+i6^0 <= 0), cost: 1
	New rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1+i6^0 <= 0, cost: 1
	New rule:
	l66 -> l6 : 1+i6^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^post108, __const_16^0'=__const_16^post108, __const_2147483647^0'=__const_2147483647^post108, __const_256^0'=__const_256^post108, __const_257^0'=__const_257^post108, __const_429496^0'=__const_429496^post108, __const_50^0'=__const_50^post108, __const_53^0'=__const_53^post108, __const_65536^0'=__const_65536^post108, __const_8388607^0'=__const_8388607^post108, __const_8^0'=__const_8^post108, __const_9^0'=__const_9^post108, apsim_bound11113^0'=apsim_bound11113^post108, apsim_incnt^0'=apsim_incnt^post108, bits33^0'=bits33^post108, block_compress^0'=block_compress^post108, bytes_out^0'=bytes_out^post108, c37^0'=c37^post108, c7^0'=c7^post108, checkpoint^0'=checkpoint^post108, clear_flg^0'=clear_flg^post108, code31^0'=code31^post108, count^0'=count^post108, disp9^0'=disp9^post108, ent8^0'=ent8^post108, exit_stat^0'=exit_stat^post108, fcode5^0'=fcode5^post108, free_ent^0'=free_ent^post108, hshift11^0'=hshift11^post108, hsize^0'=hsize^post108, hsize___019^0'=hsize___019^post108, hsize___027^0'=hsize___027^post108, hsize_reg10^0'=hsize_reg10^post108, i21^0'=i21^post108, i29^0'=i29^post108, i3^0'=i3^post108, i41^0'=i41^post108, i45^0'=i45^post108, i6^0'=i6^post108, in_count^0'=in_count^post108, incnt^0'=incnt^post108, m122^0'=m122^post108, m130^0'=m130^post108, maxbits^0'=maxbits^post108, maxcode^0'=maxcode^post108, maxmaxcode^0'=maxmaxcode^post108, n40^0'=n40^post108, n44^0'=n44^post108, n_bits^0'=n_bits^post108, offset^0'=offset^post108, out_count^0'=out_count^post108, r_off32^0'=r_off32^post108, rat26^0'=rat26^post108, ratio^0'=ratio^post108, ret_getbyte18^0'=ret_getbyte18^post108, ret_getbyte25^0'=ret_getbyte25^post108, seed2^0'=seed2^post108, tabort4^0'=tabort4^post108, tmp12^0'=tmp12^post108, tmp___014^0'=tmp___014^post108, tmp___017^0'=tmp___017^post108, tmp___024^0'=tmp___024^post108, tmp___115^0'=tmp___115^post108, (-seed2^post108+seed2^0 == 0 /\ -m122^post108+m122^0 == 0 /\ maxcode^0-maxcode^post108 == 0 /\ i29^0-i29^post108 == 0 /\ __const_8388607^0-__const_8388607^post108 == 0 /\ hsize___027^0-hsize___027^post108 == 0 /\ offset^0-offset^post108 == 0 /\ -__const_256^post108+__const_256^0 == 0 /\ -n_bits^post108+n_bits^0 == 0 /\ __const_257^0-__const_257^post108 == 0 /\ -hsize_reg10^post108+hsize_reg10^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post108 == 0 /\ apsim_bound11113^0-apsim_bound11113^post108 == 0 /\ -hsize^post108+hsize^0 == 0 /\ -__const_10000^post108+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post108 == 0 /\ -hsize___019^post108+hsize___019^0 == 0 /\ -r_off32^post108+r_off32^0 == 0 /\ -ratio^post108+ratio^0 == 0 /\ -incnt^post108+incnt^0 == 0 /\ -n40^post108+n40^0 == 0 /\ m130^0-m130^post108 == 0 /\ __const_9^0-__const_9^post108 == 0 /\ -tmp___115^post108+tmp___115^0 == 0 /\ i6^0 <= 0 /\ ent8^0-ent8^post108 == 0 /\ i45^0-i45^post108 == 0 /\ -exit_stat^post108+exit_stat^0 == 0 /\ n44^0-n44^post108 == 0 /\ __const_65536^0-__const_65536^post108 == 0 /\ -__const_50^post108+__const_50^0 == 0 /\ -i41^post108+i41^0 == 0 /\ -1+disp9^post108 == 0 /\ apsim_incnt^0-apsim_incnt^post108 == 0 /\ __const_16^0-__const_16^post108 == 0 /\ -i6^post108+i6^0 == 0 /\ -in_count^post108+in_count^0 == 0 /\ tmp12^0-tmp12^post108 == 0 /\ bits33^0-bits33^post108 == 0 /\ -i21^post108+i21^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post108 == 0 /\ __const_53^0-__const_53^post108 == 0 /\ tmp___017^0-tmp___017^post108 == 0 /\ -i6^0 <= 0 /\ -checkpoint^post108+checkpoint^0 == 0 /\ -block_compress^post108+block_compress^0 == 0 /\ -__const_8^post108+__const_8^0 == 0 /\ -clear_flg^post108+clear_flg^0 == 0 /\ -bytes_out^post108+bytes_out^0 == 0 /\ tabort4^0-tabort4^post108 == 0 /\ count^0-count^post108 == 0 /\ rat26^0-rat26^post108 == 0 /\ free_ent^0-free_ent^post108 == 0 /\ hshift11^0-hshift11^post108 == 0 /\ -maxbits^post108+maxbits^0 == 0 /\ -tmp___024^post108+tmp___024^0 == 0 /\ c37^0-c37^post108 == 0 /\ out_count^0-out_count^post108 == 0 /\ -code31^post108+code31^0 == 0 /\ -fcode5^post108+fcode5^0 == 0 /\ -tmp___014^post108+tmp___014^0 == 0 /\ __const_429496^0-__const_429496^post108 == 0 /\ c7^0-c7^post108 == 0 /\ -i3^post108+i3^0 == 0 /\ __const_2147483647^0-__const_2147483647^post108 == 0), cost: 1
	New rule:
	l66 -> l6 : __const_10000^0'=__const_10000^post108, __const_16^0'=__const_16^post108, __const_2147483647^0'=__const_2147483647^post108, __const_256^0'=__const_256^post108, __const_257^0'=__const_257^post108, __const_429496^0'=__const_429496^post108, __const_50^0'=__const_50^post108, __const_53^0'=__const_53^post108, __const_65536^0'=__const_65536^post108, __const_8388607^0'=__const_8388607^post108, __const_8^0'=__const_8^post108, __const_9^0'=__const_9^post108, apsim_bound11113^0'=apsim_bound11113^post108, apsim_incnt^0'=apsim_incnt^post108, bits33^0'=bits33^post108, block_compress^0'=block_compress^post108, bytes_out^0'=bytes_out^post108, c37^0'=c37^post108, c7^0'=c7^post108, checkpoint^0'=checkpoint^post108, clear_flg^0'=clear_flg^post108, code31^0'=code31^post108, count^0'=count^post108, disp9^0'=disp9^post108, ent8^0'=ent8^post108, exit_stat^0'=exit_stat^post108, fcode5^0'=fcode5^post108, free_ent^0'=free_ent^post108, hshift11^0'=hshift11^post108, hsize^0'=hsize^post108, hsize___019^0'=hsize___019^post108, hsize___027^0'=hsize___027^post108, hsize_reg10^0'=hsize_reg10^post108, i21^0'=i21^post108, i29^0'=i29^post108, i3^0'=i3^post108, i41^0'=i41^post108, i45^0'=i45^post108, i6^0'=i6^post108, in_count^0'=in_count^post108, incnt^0'=incnt^post108, m122^0'=m122^post108, m130^0'=m130^post108, maxbits^0'=maxbits^post108, maxcode^0'=maxcode^post108, maxmaxcode^0'=maxmaxcode^post108, n40^0'=n40^post108, n44^0'=n44^post108, n_bits^0'=n_bits^post108, offset^0'=offset^post108, out_count^0'=out_count^post108, r_off32^0'=r_off32^post108, rat26^0'=rat26^post108, ratio^0'=ratio^post108, ret_getbyte18^0'=ret_getbyte18^post108, ret_getbyte25^0'=ret_getbyte25^post108, seed2^0'=seed2^post108, tabort4^0'=tabort4^post108, tmp12^0'=tmp12^post108, tmp___014^0'=tmp___014^post108, tmp___017^0'=tmp___017^post108, tmp___024^0'=tmp___024^post108, tmp___115^0'=tmp___115^post108, (-seed2^post108+seed2^0 == 0 /\ -m122^post108+m122^0 == 0 /\ maxcode^0-maxcode^post108 == 0 /\ i29^0-i29^post108 == 0 /\ __const_8388607^0-__const_8388607^post108 == 0 /\ hsize___027^0-hsize___027^post108 == 0 /\ offset^0-offset^post108 == 0 /\ -__const_256^post108+__const_256^0 == 0 /\ -n_bits^post108+n_bits^0 == 0 /\ __const_257^0-__const_257^post108 == 0 /\ -hsize_reg10^post108+hsize_reg10^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post108 == 0 /\ apsim_bound11113^0-apsim_bound11113^post108 == 0 /\ -hsize^post108+hsize^0 == 0 /\ -__const_10000^post108+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post108 == 0 /\ -hsize___019^post108+hsize___019^0 == 0 /\ -r_off32^post108+r_off32^0 == 0 /\ -ratio^post108+ratio^0 == 0 /\ -incnt^post108+incnt^0 == 0 /\ -n40^post108+n40^0 == 0 /\ m130^0-m130^post108 == 0 /\ __const_9^0-__const_9^post108 == 0 /\ -tmp___115^post108+tmp___115^0 == 0 /\ i6^0 <= 0 /\ i6^0 == 0 /\ ent8^0-ent8^post108 == 0 /\ i45^0-i45^post108 == 0 /\ -exit_stat^post108+exit_stat^0 == 0 /\ n44^0-n44^post108 == 0 /\ __const_65536^0-__const_65536^post108 == 0 /\ -__const_50^post108+__const_50^0 == 0 /\ -i41^post108+i41^0 == 0 /\ -1+disp9^post108 == 0 /\ apsim_incnt^0-apsim_incnt^post108 == 0 /\ __const_16^0-__const_16^post108 == 0 /\ -i6^post108+i6^0 == 0 /\ -in_count^post108+in_count^0 == 0 /\ tmp12^0-tmp12^post108 == 0 /\ bits33^0-bits33^post108 == 0 /\ -i21^post108+i21^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post108 == 0 /\ __const_53^0-__const_53^post108 == 0 /\ tmp___017^0-tmp___017^post108 == 0 /\ -i6^0 <= 0 /\ -checkpoint^post108+checkpoint^0 == 0 /\ -block_compress^post108+block_compress^0 == 0 /\ -__const_8^post108+__const_8^0 == 0 /\ -clear_flg^post108+clear_flg^0 == 0 /\ -bytes_out^post108+bytes_out^0 == 0 /\ tabort4^0-tabort4^post108 == 0 /\ count^0-count^post108 == 0 /\ rat26^0-rat26^post108 == 0 /\ free_ent^0-free_ent^post108 == 0 /\ hshift11^0-hshift11^post108 == 0 /\ -maxbits^post108+maxbits^0 == 0 /\ -tmp___024^post108+tmp___024^0 == 0 /\ c37^0-c37^post108 == 0 /\ out_count^0-out_count^post108 == 0 /\ -code31^post108+code31^0 == 0 /\ -fcode5^post108+fcode5^0 == 0 /\ -tmp___014^post108+tmp___014^0 == 0 /\ __const_429496^0-__const_429496^post108 == 0 /\ c7^0-c7^post108 == 0 /\ -i3^post108+i3^0 == 0 /\ __const_2147483647^0-__const_2147483647^post108 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^post108, __const_16^0'=__const_16^post108, __const_2147483647^0'=__const_2147483647^post108, __const_256^0'=__const_256^post108, __const_257^0'=__const_257^post108, __const_429496^0'=__const_429496^post108, __const_50^0'=__const_50^post108, __const_53^0'=__const_53^post108, __const_65536^0'=__const_65536^post108, __const_8388607^0'=__const_8388607^post108, __const_8^0'=__const_8^post108, __const_9^0'=__const_9^post108, apsim_bound11113^0'=apsim_bound11113^post108, apsim_incnt^0'=apsim_incnt^post108, bits33^0'=bits33^post108, block_compress^0'=block_compress^post108, bytes_out^0'=bytes_out^post108, c37^0'=c37^post108, c7^0'=c7^post108, checkpoint^0'=checkpoint^post108, clear_flg^0'=clear_flg^post108, code31^0'=code31^post108, count^0'=count^post108, disp9^0'=disp9^post108, ent8^0'=ent8^post108, exit_stat^0'=exit_stat^post108, fcode5^0'=fcode5^post108, free_ent^0'=free_ent^post108, hshift11^0'=hshift11^post108, hsize^0'=hsize^post108, hsize___019^0'=hsize___019^post108, hsize___027^0'=hsize___027^post108, hsize_reg10^0'=hsize_reg10^post108, i21^0'=i21^post108, i29^0'=i29^post108, i3^0'=i3^post108, i41^0'=i41^post108, i45^0'=i45^post108, i6^0'=i6^post108, in_count^0'=in_count^post108, incnt^0'=incnt^post108, m122^0'=m122^post108, m130^0'=m130^post108, maxbits^0'=maxbits^post108, maxcode^0'=maxcode^post108, maxmaxcode^0'=maxmaxcode^post108, n40^0'=n40^post108, n44^0'=n44^post108, n_bits^0'=n_bits^post108, offset^0'=offset^post108, out_count^0'=out_count^post108, r_off32^0'=r_off32^post108, rat26^0'=rat26^post108, ratio^0'=ratio^post108, ret_getbyte18^0'=ret_getbyte18^post108, ret_getbyte25^0'=ret_getbyte25^post108, seed2^0'=seed2^post108, tabort4^0'=tabort4^post108, tmp12^0'=tmp12^post108, tmp___014^0'=tmp___014^post108, tmp___017^0'=tmp___017^post108, tmp___024^0'=tmp___024^post108, tmp___115^0'=tmp___115^post108, (-seed2^post108+seed2^0 == 0 /\ -m122^post108+m122^0 == 0 /\ maxcode^0-maxcode^post108 == 0 /\ i29^0-i29^post108 == 0 /\ __const_8388607^0-__const_8388607^post108 == 0 /\ hsize___027^0-hsize___027^post108 == 0 /\ offset^0-offset^post108 == 0 /\ -__const_256^post108+__const_256^0 == 0 /\ -n_bits^post108+n_bits^0 == 0 /\ __const_257^0-__const_257^post108 == 0 /\ -hsize_reg10^post108+hsize_reg10^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post108 == 0 /\ apsim_bound11113^0-apsim_bound11113^post108 == 0 /\ -hsize^post108+hsize^0 == 0 /\ -__const_10000^post108+__const_10000^0 == 0 /\ maxmaxcode^0-maxmaxcode^post108 == 0 /\ -hsize___019^post108+hsize___019^0 == 0 /\ -r_off32^post108+r_off32^0 == 0 /\ -ratio^post108+ratio^0 == 0 /\ -incnt^post108+incnt^0 == 0 /\ -n40^post108+n40^0 == 0 /\ m130^0-m130^post108 == 0 /\ __const_9^0-__const_9^post108 == 0 /\ -tmp___115^post108+tmp___115^0 == 0 /\ i6^0 <= 0 /\ i6^0 == 0 /\ ent8^0-ent8^post108 == 0 /\ i45^0-i45^post108 == 0 /\ -exit_stat^post108+exit_stat^0 == 0 /\ n44^0-n44^post108 == 0 /\ __const_65536^0-__const_65536^post108 == 0 /\ -__const_50^post108+__const_50^0 == 0 /\ -i41^post108+i41^0 == 0 /\ -1+disp9^post108 == 0 /\ apsim_incnt^0-apsim_incnt^post108 == 0 /\ __const_16^0-__const_16^post108 == 0 /\ -i6^post108+i6^0 == 0 /\ -in_count^post108+in_count^0 == 0 /\ tmp12^0-tmp12^post108 == 0 /\ bits33^0-bits33^post108 == 0 /\ -i21^post108+i21^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post108 == 0 /\ __const_53^0-__const_53^post108 == 0 /\ tmp___017^0-tmp___017^post108 == 0 /\ -i6^0 <= 0 /\ -checkpoint^post108+checkpoint^0 == 0 /\ -block_compress^post108+block_compress^0 == 0 /\ -__const_8^post108+__const_8^0 == 0 /\ -clear_flg^post108+clear_flg^0 == 0 /\ -bytes_out^post108+bytes_out^0 == 0 /\ tabort4^0-tabort4^post108 == 0 /\ count^0-count^post108 == 0 /\ rat26^0-rat26^post108 == 0 /\ free_ent^0-free_ent^post108 == 0 /\ hshift11^0-hshift11^post108 == 0 /\ -maxbits^post108+maxbits^0 == 0 /\ -tmp___024^post108+tmp___024^0 == 0 /\ c37^0-c37^post108 == 0 /\ out_count^0-out_count^post108 == 0 /\ -code31^post108+code31^0 == 0 /\ -fcode5^post108+fcode5^0 == 0 /\ -tmp___014^post108+tmp___014^0 == 0 /\ __const_429496^0-__const_429496^post108 == 0 /\ c7^0-c7^post108 == 0 /\ -i3^post108+i3^0 == 0 /\ __const_2147483647^0-__const_2147483647^post108 == 0), cost: 1
	New rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=1, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
	
		propagated equality seed2^post108 = seed2^0
		
		propagated equality m122^post108 = m122^0
		
		propagated equality maxcode^post108 = maxcode^0
		
		propagated equality i29^post108 = i29^0
		
		propagated equality __const_8388607^post108 = __const_8388607^0
		
		propagated equality hsize___027^post108 = hsize___027^0
		
		propagated equality offset^post108 = offset^0
		
		propagated equality __const_256^post108 = __const_256^0
		
		propagated equality n_bits^post108 = n_bits^0
		
		propagated equality __const_257^post108 = __const_257^0
		
		propagated equality hsize_reg10^post108 = hsize_reg10^0
		
		propagated equality ret_getbyte25^post108 = ret_getbyte25^0
		
		propagated equality apsim_bound11113^post108 = apsim_bound11113^0
		
		propagated equality hsize^post108 = hsize^0
		
		propagated equality __const_10000^post108 = __const_10000^0
		
		propagated equality maxmaxcode^post108 = maxmaxcode^0
		
		propagated equality hsize___019^post108 = hsize___019^0
		
		propagated equality r_off32^post108 = r_off32^0
		
		propagated equality ratio^post108 = ratio^0
		
		propagated equality incnt^post108 = incnt^0
		
		propagated equality n40^post108 = n40^0
		
		propagated equality m130^post108 = m130^0
		
		propagated equality __const_9^post108 = __const_9^0
		
		propagated equality tmp___115^post108 = tmp___115^0
		
		propagated equality ent8^post108 = ent8^0
		
		propagated equality i45^post108 = i45^0
		
		propagated equality exit_stat^post108 = exit_stat^0
		
		propagated equality n44^post108 = n44^0
		
		propagated equality __const_65536^post108 = __const_65536^0
		
		propagated equality __const_50^post108 = __const_50^0
		
		propagated equality i41^post108 = i41^0
		
		propagated equality disp9^post108 = 1
		
		propagated equality apsim_incnt^post108 = apsim_incnt^0
		
		propagated equality __const_16^post108 = __const_16^0
		
		propagated equality i6^post108 = i6^0
		
		propagated equality in_count^post108 = in_count^0
		
		propagated equality tmp12^post108 = tmp12^0
		
		propagated equality bits33^post108 = bits33^0
		
		propagated equality i21^post108 = i21^0
		
		propagated equality ret_getbyte18^post108 = ret_getbyte18^0
		
		propagated equality __const_53^post108 = __const_53^0
		
		propagated equality tmp___017^post108 = tmp___017^0
		
		propagated equality checkpoint^post108 = checkpoint^0
		
		propagated equality block_compress^post108 = block_compress^0
		
		propagated equality __const_8^post108 = __const_8^0
		
		propagated equality clear_flg^post108 = clear_flg^0
		
		propagated equality bytes_out^post108 = bytes_out^0
		
		propagated equality tabort4^post108 = tabort4^0
		
		propagated equality count^post108 = count^0
		
		propagated equality rat26^post108 = rat26^0
		
		propagated equality free_ent^post108 = free_ent^0
		
		propagated equality hshift11^post108 = hshift11^0
		
		propagated equality maxbits^post108 = maxbits^0
		
		propagated equality tmp___024^post108 = tmp___024^0
		
		propagated equality c37^post108 = c37^0
		
		propagated equality out_count^post108 = out_count^0
		
		propagated equality code31^post108 = code31^0
		
		propagated equality fcode5^post108 = fcode5^0
		
		propagated equality tmp___014^post108 = tmp___014^0
		
		propagated equality __const_429496^post108 = __const_429496^0
		
		propagated equality c7^post108 = c7^0
		
		propagated equality i3^post108 = i3^0
		
		propagated equality __const_2147483647^post108 = __const_2147483647^0
		
	Simplified Guard

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=1, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
	New rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=1, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=1, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
	New rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=1, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l66 -> l6 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=1, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
	New rule:
	l66 -> l6 : disp9^0'=1, (i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l67 -> l62 : __const_10000^0'=__const_10000^post109, __const_16^0'=__const_16^post109, __const_2147483647^0'=__const_2147483647^post109, __const_256^0'=__const_256^post109, __const_257^0'=__const_257^post109, __const_429496^0'=__const_429496^post109, __const_50^0'=__const_50^post109, __const_53^0'=__const_53^post109, __const_65536^0'=__const_65536^post109, __const_8388607^0'=__const_8388607^post109, __const_8^0'=__const_8^post109, __const_9^0'=__const_9^post109, apsim_bound11113^0'=apsim_bound11113^post109, apsim_incnt^0'=apsim_incnt^post109, bits33^0'=bits33^post109, block_compress^0'=block_compress^post109, bytes_out^0'=bytes_out^post109, c37^0'=c37^post109, c7^0'=c7^post109, checkpoint^0'=checkpoint^post109, clear_flg^0'=clear_flg^post109, code31^0'=code31^post109, count^0'=count^post109, disp9^0'=disp9^post109, ent8^0'=ent8^post109, exit_stat^0'=exit_stat^post109, fcode5^0'=fcode5^post109, free_ent^0'=free_ent^post109, hshift11^0'=hshift11^post109, hsize^0'=hsize^post109, hsize___019^0'=hsize___019^post109, hsize___027^0'=hsize___027^post109, hsize_reg10^0'=hsize_reg10^post109, i21^0'=i21^post109, i29^0'=i29^post109, i3^0'=i3^post109, i41^0'=i41^post109, i45^0'=i45^post109, i6^0'=i6^post109, in_count^0'=in_count^post109, incnt^0'=incnt^post109, m122^0'=m122^post109, m130^0'=m130^post109, maxbits^0'=maxbits^post109, maxcode^0'=maxcode^post109, maxmaxcode^0'=maxmaxcode^post109, n40^0'=n40^post109, n44^0'=n44^post109, n_bits^0'=n_bits^post109, offset^0'=offset^post109, out_count^0'=out_count^post109, r_off32^0'=r_off32^post109, rat26^0'=rat26^post109, ratio^0'=ratio^post109, ret_getbyte18^0'=ret_getbyte18^post109, ret_getbyte25^0'=ret_getbyte25^post109, seed2^0'=seed2^post109, tabort4^0'=tabort4^post109, tmp12^0'=tmp12^post109, tmp___014^0'=tmp___014^post109, tmp___017^0'=tmp___017^post109, tmp___024^0'=tmp___024^post109, tmp___115^0'=tmp___115^post109, (maxmaxcode^0-maxmaxcode^post109 == 0 /\ -i21^post109+i21^0 == 0 /\ __const_9^0-__const_9^post109 == 0 /\ out_count^0-out_count^post109 == 0 /\ -i6^post109+i6^0 == 0 /\ c37^0-c37^post109 == 0 /\ -tmp___014^post109+tmp___014^0 == 0 /\ -ratio^post109+ratio^0 == 0 /\ -in_count^post109+in_count^0 == 0 /\ -clear_flg^post109+clear_flg^0 == 0 /\ ent8^0-ent8^post109 == 0 /\ -bytes_out^post109+bytes_out^0 == 0 /\ bits33^0-bits33^post109 == 0 /\ -__const_8388607^post109+__const_8388607^0 == 0 /\ n40^0-n40^post109 == 0 /\ -tmp___024^post109+tmp___024^0 == 0 /\ -tmp___115^post109+tmp___115^0 == 0 /\ code31^0-code31^post109 == 0 /\ -checkpoint^post109+checkpoint^0 == 0 /\ c7^0-c7^post109 == 0 /\ offset^0-offset^post109 == 0 /\ __const_65536^0-__const_65536^post109 == 0 /\ n44^0-n44^post109 == 0 /\ apsim_incnt^0-apsim_incnt^post109 == 0 /\ hshift11^0-hshift11^post109 == 0 /\ hsize___027^0-hsize___027^post109 == 0 /\ i29^0-i29^post109 == 0 /\ -m122^post109+m122^0 == 0 /\ -disp9^post109+disp9^0 == 0 /\ -ret_getbyte18^post109+ret_getbyte18^0 == 0 /\ -fcode5^post109+fcode5^0 == 0 /\ __const_257^0-__const_257^post109 == 0 /\ __const_53^0-__const_53^post109 == 0 /\ -r_off32^post109+r_off32^0 == 0 /\ -apsim_bound11113^post109+apsim_bound11113^0 == 0 /\ hsize___019^0-hsize___019^post109 == 0 /\ -exit_stat^post109+exit_stat^0 == 0 /\ free_ent^0-free_ent^post109 == 0 /\ -i3^post109+i3^0 == 0 /\ -__const_2147483647^post109+__const_2147483647^0 == 0 /\ tmp___017^0-tmp___017^post109 == 0 /\ -__const_256^post109+__const_256^0 == 0 /\ -maxbits^post109+maxbits^0 == 0 /\ -maxcode^post109+maxcode^0 == 0 /\ m130^0-m130^post109 == 0 /\ -__const_10000^post109+__const_10000^0 == 0 /\ -hsize^post109+hsize^0 == 0 /\ -hsize_reg10^post109+hsize_reg10^0 == 0 /\ __const_8^0-__const_8^post109 == 0 /\ tmp12^0-tmp12^post109 == 0 /\ i45^0-i45^post109 == 0 /\ -tabort4^post109+tabort4^0 == 0 /\ -seed2^post109+seed2^0 == 0 /\ __const_429496^0-__const_429496^post109 == 0 /\ block_compress^0-block_compress^post109 == 0 /\ rat26^0-rat26^post109 == 0 /\ -incnt^post109+incnt^0 == 0 /\ __const_16^0-__const_16^post109 == 0 /\ -count^post109+count^0 == 0 /\ -__const_50^post109+__const_50^0 == 0 /\ -n_bits^post109+n_bits^0 == 0 /\ -i41^post109+i41^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post109 == 0), cost: 1
	New rule:
	l67 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality maxmaxcode^post109 = maxmaxcode^0
		
		propagated equality i21^post109 = i21^0
		
		propagated equality __const_9^post109 = __const_9^0
		
		propagated equality out_count^post109 = out_count^0
		
		propagated equality i6^post109 = i6^0
		
		propagated equality c37^post109 = c37^0
		
		propagated equality tmp___014^post109 = tmp___014^0
		
		propagated equality ratio^post109 = ratio^0
		
		propagated equality in_count^post109 = in_count^0
		
		propagated equality clear_flg^post109 = clear_flg^0
		
		propagated equality ent8^post109 = ent8^0
		
		propagated equality bytes_out^post109 = bytes_out^0
		
		propagated equality bits33^post109 = bits33^0
		
		propagated equality __const_8388607^post109 = __const_8388607^0
		
		propagated equality n40^post109 = n40^0
		
		propagated equality tmp___024^post109 = tmp___024^0
		
		propagated equality tmp___115^post109 = tmp___115^0
		
		propagated equality code31^post109 = code31^0
		
		propagated equality checkpoint^post109 = checkpoint^0
		
		propagated equality c7^post109 = c7^0
		
		propagated equality offset^post109 = offset^0
		
		propagated equality __const_65536^post109 = __const_65536^0
		
		propagated equality n44^post109 = n44^0
		
		propagated equality apsim_incnt^post109 = apsim_incnt^0
		
		propagated equality hshift11^post109 = hshift11^0
		
		propagated equality hsize___027^post109 = hsize___027^0
		
		propagated equality i29^post109 = i29^0
		
		propagated equality m122^post109 = m122^0
		
		propagated equality disp9^post109 = disp9^0
		
		propagated equality ret_getbyte18^post109 = ret_getbyte18^0
		
		propagated equality fcode5^post109 = fcode5^0
		
		propagated equality __const_257^post109 = __const_257^0
		
		propagated equality __const_53^post109 = __const_53^0
		
		propagated equality r_off32^post109 = r_off32^0
		
		propagated equality apsim_bound11113^post109 = apsim_bound11113^0
		
		propagated equality hsize___019^post109 = hsize___019^0
		
		propagated equality exit_stat^post109 = exit_stat^0
		
		propagated equality free_ent^post109 = free_ent^0
		
		propagated equality i3^post109 = i3^0
		
		propagated equality __const_2147483647^post109 = __const_2147483647^0
		
		propagated equality tmp___017^post109 = tmp___017^0
		
		propagated equality __const_256^post109 = __const_256^0
		
		propagated equality maxbits^post109 = maxbits^0
		
		propagated equality maxcode^post109 = maxcode^0
		
		propagated equality m130^post109 = m130^0
		
		propagated equality __const_10000^post109 = __const_10000^0
		
		propagated equality hsize^post109 = hsize^0
		
		propagated equality hsize_reg10^post109 = hsize_reg10^0
		
		propagated equality __const_8^post109 = __const_8^0
		
		propagated equality tmp12^post109 = tmp12^0
		
		propagated equality i45^post109 = i45^0
		
		propagated equality tabort4^post109 = tabort4^0
		
		propagated equality seed2^post109 = seed2^0
		
		propagated equality __const_429496^post109 = __const_429496^0
		
		propagated equality block_compress^post109 = block_compress^0
		
		propagated equality rat26^post109 = rat26^0
		
		propagated equality incnt^post109 = incnt^0
		
		propagated equality __const_16^post109 = __const_16^0
		
		propagated equality count^post109 = count^0
		
		propagated equality __const_50^post109 = __const_50^0
		
		propagated equality n_bits^post109 = n_bits^0
		
		propagated equality i41^post109 = i41^0
		
		propagated equality ret_getbyte25^post109 = ret_getbyte25^0
		
	Simplified Guard

	Original rule:
	l67 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l67 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l67 -> l62 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l67 -> l62 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l67 -> l66 : __const_10000^0'=__const_10000^post110, __const_16^0'=__const_16^post110, __const_2147483647^0'=__const_2147483647^post110, __const_256^0'=__const_256^post110, __const_257^0'=__const_257^post110, __const_429496^0'=__const_429496^post110, __const_50^0'=__const_50^post110, __const_53^0'=__const_53^post110, __const_65536^0'=__const_65536^post110, __const_8388607^0'=__const_8388607^post110, __const_8^0'=__const_8^post110, __const_9^0'=__const_9^post110, apsim_bound11113^0'=apsim_bound11113^post110, apsim_incnt^0'=apsim_incnt^post110, bits33^0'=bits33^post110, block_compress^0'=block_compress^post110, bytes_out^0'=bytes_out^post110, c37^0'=c37^post110, c7^0'=c7^post110, checkpoint^0'=checkpoint^post110, clear_flg^0'=clear_flg^post110, code31^0'=code31^post110, count^0'=count^post110, disp9^0'=disp9^post110, ent8^0'=ent8^post110, exit_stat^0'=exit_stat^post110, fcode5^0'=fcode5^post110, free_ent^0'=free_ent^post110, hshift11^0'=hshift11^post110, hsize^0'=hsize^post110, hsize___019^0'=hsize___019^post110, hsize___027^0'=hsize___027^post110, hsize_reg10^0'=hsize_reg10^post110, i21^0'=i21^post110, i29^0'=i29^post110, i3^0'=i3^post110, i41^0'=i41^post110, i45^0'=i45^post110, i6^0'=i6^post110, in_count^0'=in_count^post110, incnt^0'=incnt^post110, m122^0'=m122^post110, m130^0'=m130^post110, maxbits^0'=maxbits^post110, maxcode^0'=maxcode^post110, maxmaxcode^0'=maxmaxcode^post110, n40^0'=n40^post110, n44^0'=n44^post110, n_bits^0'=n_bits^post110, offset^0'=offset^post110, out_count^0'=out_count^post110, r_off32^0'=r_off32^post110, rat26^0'=rat26^post110, ratio^0'=ratio^post110, ret_getbyte18^0'=ret_getbyte18^post110, ret_getbyte25^0'=ret_getbyte25^post110, seed2^0'=seed2^post110, tabort4^0'=tabort4^post110, tmp12^0'=tmp12^post110, tmp___014^0'=tmp___014^post110, tmp___017^0'=tmp___017^post110, tmp___024^0'=tmp___024^post110, tmp___115^0'=tmp___115^post110, (hsize___019^0-hsize___019^post110 == 0 /\ tmp12^0-tmp12^post110 == 0 /\ n40^0-n40^post110 == 0 /\ -i3^post110+i3^0 == 0 /\ c7^0-c7^post110 == 0 /\ __const_257^0-__const_257^post110 == 0 /\ ent8^0-ent8^post110 == 0 /\ -i41^post110+i41^0 == 0 /\ rat26^0-rat26^post110 == 0 /\ exit_stat^0-exit_stat^post110 == 0 /\ i29^0-i29^post110 == 0 /\ apsim_bound11113^0-apsim_bound11113^post110 == 0 /\ -tmp___014^post110+tmp___014^0 == 0 /\ -in_count^post110+in_count^0 == 0 /\ m130^0-m130^post110 == 0 /\ -__const_50^post110+__const_50^0 == 0 /\ out_count^0-out_count^post110 == 0 /\ -n_bits^post110+n_bits^0 == 0 /\ __const_9^0-__const_9^post110 == 0 /\ -fcode5^post110+fcode5^0 == 0 /\ -clear_flg^post110+clear_flg^0 == 0 /\ -__const_10000^post110+__const_10000^0 == 0 /\ -hsize_reg10^post110+hsize_reg10^0 == 0 /\ __const_65536^0-__const_65536^post110 == 0 /\ offset^0-offset^post110 == 0 /\ -i21^post110+i21^0 == 0 /\ maxmaxcode^0-maxmaxcode^post110 == 0 /\ -incnt^post110+incnt^0 == 0 /\ bits33^0-bits33^post110 == 0 /\ hsize___027^0-hsize___027^post110 == 0 /\ -bytes_out^post110+bytes_out^0 == 0 /\ -tmp___024^post110+tmp___024^0 == 0 /\ i45^0-i45^post110 == 0 /\ tmp___115^0-tmp___115^post110 == 0 /\ -__const_8388607^post110+__const_8388607^0 == 0 /\ n44^0-n44^post110 == 0 /\ apsim_incnt^0-apsim_incnt^post110 == 0 /\ hshift11^0-hshift11^post110 == 0 /\ __const_8^0-__const_8^post110 == 0 /\ free_ent^0-free_ent^post110 == 0 /\ maxbits^0-maxbits^post110 == 0 /\ -count^post110+count^0 == 0 /\ -ret_getbyte18^post110+ret_getbyte18^0 == 0 /\ __const_53^0-__const_53^post110 == 0 /\ -ratio^post110+ratio^0 == 0 /\ -__const_256^post110+__const_256^0 == 0 /\ -i6^post110+i6^0 == 0 /\ -r_off32^post110+r_off32^0 == 0 /\ code31^0-code31^post110 == 0 /\ -checkpoint^post110+checkpoint^0 == 0 /\ seed2^0-seed2^post110 == 0 /\ __const_2147483647^0-__const_2147483647^post110 == 0 /\ -tabort4^post110+tabort4^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post110 == 0 /\ m122^0-m122^post110 == 0 /\ c37^0-c37^post110 == 0 /\ __const_429496^0-__const_429496^post110 == 0 /\ -hsize^post110+hsize^0 == 0 /\ tmp___017^0-tmp___017^post110 == 0 /\ -maxcode^post110+maxcode^0 == 0 /\ -block_compress^post110+block_compress^0 == 0 /\ disp9^post110+i6^0-hsize_reg10^0 == 0 /\ __const_16^0-__const_16^post110 == 0), cost: 1
	New rule:
	l67 -> l66 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=-i6^0+hsize_reg10^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality hsize___019^post110 = hsize___019^0
		
		propagated equality tmp12^post110 = tmp12^0
		
		propagated equality n40^post110 = n40^0
		
		propagated equality i3^post110 = i3^0
		
		propagated equality c7^post110 = c7^0
		
		propagated equality __const_257^post110 = __const_257^0
		
		propagated equality ent8^post110 = ent8^0
		
		propagated equality i41^post110 = i41^0
		
		propagated equality rat26^post110 = rat26^0
		
		propagated equality exit_stat^post110 = exit_stat^0
		
		propagated equality i29^post110 = i29^0
		
		propagated equality apsim_bound11113^post110 = apsim_bound11113^0
		
		propagated equality tmp___014^post110 = tmp___014^0
		
		propagated equality in_count^post110 = in_count^0
		
		propagated equality m130^post110 = m130^0
		
		propagated equality __const_50^post110 = __const_50^0
		
		propagated equality out_count^post110 = out_count^0
		
		propagated equality n_bits^post110 = n_bits^0
		
		propagated equality __const_9^post110 = __const_9^0
		
		propagated equality fcode5^post110 = fcode5^0
		
		propagated equality clear_flg^post110 = clear_flg^0
		
		propagated equality __const_10000^post110 = __const_10000^0
		
		propagated equality hsize_reg10^post110 = hsize_reg10^0
		
		propagated equality __const_65536^post110 = __const_65536^0
		
		propagated equality offset^post110 = offset^0
		
		propagated equality i21^post110 = i21^0
		
		propagated equality maxmaxcode^post110 = maxmaxcode^0
		
		propagated equality incnt^post110 = incnt^0
		
		propagated equality bits33^post110 = bits33^0
		
		propagated equality hsize___027^post110 = hsize___027^0
		
		propagated equality bytes_out^post110 = bytes_out^0
		
		propagated equality tmp___024^post110 = tmp___024^0
		
		propagated equality i45^post110 = i45^0
		
		propagated equality tmp___115^post110 = tmp___115^0
		
		propagated equality __const_8388607^post110 = __const_8388607^0
		
		propagated equality n44^post110 = n44^0
		
		propagated equality apsim_incnt^post110 = apsim_incnt^0
		
		propagated equality hshift11^post110 = hshift11^0
		
		propagated equality __const_8^post110 = __const_8^0
		
		propagated equality free_ent^post110 = free_ent^0
		
		propagated equality maxbits^post110 = maxbits^0
		
		propagated equality count^post110 = count^0
		
		propagated equality ret_getbyte18^post110 = ret_getbyte18^0
		
		propagated equality __const_53^post110 = __const_53^0
		
		propagated equality ratio^post110 = ratio^0
		
		propagated equality __const_256^post110 = __const_256^0
		
		propagated equality i6^post110 = i6^0
		
		propagated equality r_off32^post110 = r_off32^0
		
		propagated equality code31^post110 = code31^0
		
		propagated equality checkpoint^post110 = checkpoint^0
		
		propagated equality seed2^post110 = seed2^0
		
		propagated equality __const_2147483647^post110 = __const_2147483647^0
		
		propagated equality tabort4^post110 = tabort4^0
		
		propagated equality ret_getbyte25^post110 = ret_getbyte25^0
		
		propagated equality m122^post110 = m122^0
		
		propagated equality c37^post110 = c37^0
		
		propagated equality __const_429496^post110 = __const_429496^0
		
		propagated equality hsize^post110 = hsize^0
		
		propagated equality tmp___017^post110 = tmp___017^0
		
		propagated equality maxcode^post110 = maxcode^0
		
		propagated equality block_compress^post110 = block_compress^0
		
		propagated equality disp9^post110 = -i6^0+hsize_reg10^0
		
		propagated equality __const_16^post110 = __const_16^0
		
	Simplified Guard

	Original rule:
	l67 -> l66 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=-i6^0+hsize_reg10^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l67 -> l66 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=-i6^0+hsize_reg10^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l67 -> l66 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=-i6^0+hsize_reg10^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l67 -> l66 : disp9^0'=-i6^0+hsize_reg10^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l68 -> l67 : __const_10000^0'=__const_10000^post111, __const_16^0'=__const_16^post111, __const_2147483647^0'=__const_2147483647^post111, __const_256^0'=__const_256^post111, __const_257^0'=__const_257^post111, __const_429496^0'=__const_429496^post111, __const_50^0'=__const_50^post111, __const_53^0'=__const_53^post111, __const_65536^0'=__const_65536^post111, __const_8388607^0'=__const_8388607^post111, __const_8^0'=__const_8^post111, __const_9^0'=__const_9^post111, apsim_bound11113^0'=apsim_bound11113^post111, apsim_incnt^0'=apsim_incnt^post111, bits33^0'=bits33^post111, block_compress^0'=block_compress^post111, bytes_out^0'=bytes_out^post111, c37^0'=c37^post111, c7^0'=c7^post111, checkpoint^0'=checkpoint^post111, clear_flg^0'=clear_flg^post111, code31^0'=code31^post111, count^0'=count^post111, disp9^0'=disp9^post111, ent8^0'=ent8^post111, exit_stat^0'=exit_stat^post111, fcode5^0'=fcode5^post111, free_ent^0'=free_ent^post111, hshift11^0'=hshift11^post111, hsize^0'=hsize^post111, hsize___019^0'=hsize___019^post111, hsize___027^0'=hsize___027^post111, hsize_reg10^0'=hsize_reg10^post111, i21^0'=i21^post111, i29^0'=i29^post111, i3^0'=i3^post111, i41^0'=i41^post111, i45^0'=i45^post111, i6^0'=i6^post111, in_count^0'=in_count^post111, incnt^0'=incnt^post111, m122^0'=m122^post111, m130^0'=m130^post111, maxbits^0'=maxbits^post111, maxcode^0'=maxcode^post111, maxmaxcode^0'=maxmaxcode^post111, n40^0'=n40^post111, n44^0'=n44^post111, n_bits^0'=n_bits^post111, offset^0'=offset^post111, out_count^0'=out_count^post111, r_off32^0'=r_off32^post111, rat26^0'=rat26^post111, ratio^0'=ratio^post111, ret_getbyte18^0'=ret_getbyte18^post111, ret_getbyte25^0'=ret_getbyte25^post111, seed2^0'=seed2^post111, tabort4^0'=tabort4^post111, tmp12^0'=tmp12^post111, tmp___014^0'=tmp___014^post111, tmp___017^0'=tmp___017^post111, tmp___024^0'=tmp___024^post111, tmp___115^0'=tmp___115^post111, (free_ent^0-free_ent^post111 == 0 /\ -hsize___019^post111+hsize___019^0 == 0 /\ -hsize_reg10^post111+hsize_reg10^0 == 0 /\ -hsize^post111+hsize^0 == 0 /\ -disp9^post111+disp9^0 == 0 /\ -tabort4^post111+tabort4^0 == 0 /\ -fcode5^post111+fcode5^0 == 0 /\ hsize___027^0-hsize___027^post111 == 0 /\ -n44^post111+n44^0 == 0 /\ -n_bits^post111+n_bits^0 == 0 /\ __const_9^0-__const_9^post111 == 0 /\ rat26^0-rat26^post111 == 0 /\ -r_off32^post111+r_off32^0 == 0 /\ tmp___014^0-tmp___014^post111 == 0 /\ -code31^post111+code31^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post111 == 0 /\ n40^0-n40^post111 == 0 /\ -maxcode^post111+maxcode^0 == 0 /\ -tmp___017^post111+tmp___017^0 == 0 /\ i45^0-i45^post111 == 0 /\ ent8^0-ent8^post111 == 0 /\ -__const_256^post111+__const_256^0 == 0 /\ exit_stat^0-exit_stat^post111 == 0 /\ out_count^0-out_count^post111 == 0 /\ count^0-count^post111 == 0 /\ __const_2147483647^0-__const_2147483647^post111 == 0 /\ -checkpoint^post111+checkpoint^0 == 0 /\ __const_53^0-__const_53^post111 == 0 /\ bits33^0-bits33^post111 == 0 /\ -__const_50^post111+__const_50^0 == 0 /\ offset^0-offset^post111 == 0 /\ -block_compress^post111+block_compress^0 == 0 /\ -bytes_out^post111+bytes_out^0 == 0 /\ __const_65536^0-__const_65536^post111 == 0 /\ -c7^post111+c7^0 == 0 /\ -__const_429496^post111+__const_429496^0 == 0 /\ hshift11^0-hshift11^post111 == 0 /\ -maxbits^post111+maxbits^0 == 0 /\ __const_16^0-__const_16^post111 == 0 /\ ret_getbyte25^0-ret_getbyte25^post111 == 0 /\ -i29^post111+i29^0 == 0 /\ -i3^post111+i3^0 == 0 /\ m130^0-m130^post111 == 0 /\ -i41^post111+i41^0 == 0 /\ apsim_incnt^0-apsim_incnt^post111 == 0 /\ -i21^post111+i21^0 == 0 /\ -incnt^post111+incnt^0 == 0 /\ maxmaxcode^0-maxmaxcode^post111 == 0 /\ i6^0-i6^post111 == 0 /\ c37^0-c37^post111 == 0 /\ -ret_getbyte18^post111+ret_getbyte18^0 == 0 /\ tmp12^0-tmp12^post111 == 0 /\ -tmp___024^post111+tmp___024^0 == 0 /\ __const_8^0-__const_8^post111 == 0 /\ __const_257^0-__const_257^post111 == 0 /\ -__const_10000^post111+__const_10000^0 == 0 /\ tmp___115^0-tmp___115^post111 == 0 /\ -in_count^post111+in_count^0 == 0 /\ m122^0-m122^post111 == 0 /\ -clear_flg^post111+clear_flg^0 == 0 /\ -__const_8388607^post111+__const_8388607^0 == 0 /\ seed2^0-seed2^post111 == 0 /\ ratio^0-ratio^post111 == 0), cost: 1
	New rule:
	l68 -> l67 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality free_ent^post111 = free_ent^0
		
		propagated equality hsize___019^post111 = hsize___019^0
		
		propagated equality hsize_reg10^post111 = hsize_reg10^0
		
		propagated equality hsize^post111 = hsize^0
		
		propagated equality disp9^post111 = disp9^0
		
		propagated equality tabort4^post111 = tabort4^0
		
		propagated equality fcode5^post111 = fcode5^0
		
		propagated equality hsize___027^post111 = hsize___027^0
		
		propagated equality n44^post111 = n44^0
		
		propagated equality n_bits^post111 = n_bits^0
		
		propagated equality __const_9^post111 = __const_9^0
		
		propagated equality rat26^post111 = rat26^0
		
		propagated equality r_off32^post111 = r_off32^0
		
		propagated equality tmp___014^post111 = tmp___014^0
		
		propagated equality code31^post111 = code31^0
		
		propagated equality apsim_bound11113^post111 = apsim_bound11113^0
		
		propagated equality n40^post111 = n40^0
		
		propagated equality maxcode^post111 = maxcode^0
		
		propagated equality tmp___017^post111 = tmp___017^0
		
		propagated equality i45^post111 = i45^0
		
		propagated equality ent8^post111 = ent8^0
		
		propagated equality __const_256^post111 = __const_256^0
		
		propagated equality exit_stat^post111 = exit_stat^0
		
		propagated equality out_count^post111 = out_count^0
		
		propagated equality count^post111 = count^0
		
		propagated equality __const_2147483647^post111 = __const_2147483647^0
		
		propagated equality checkpoint^post111 = checkpoint^0
		
		propagated equality __const_53^post111 = __const_53^0
		
		propagated equality bits33^post111 = bits33^0
		
		propagated equality __const_50^post111 = __const_50^0
		
		propagated equality offset^post111 = offset^0
		
		propagated equality block_compress^post111 = block_compress^0
		
		propagated equality bytes_out^post111 = bytes_out^0
		
		propagated equality __const_65536^post111 = __const_65536^0
		
		propagated equality c7^post111 = c7^0
		
		propagated equality __const_429496^post111 = __const_429496^0
		
		propagated equality hshift11^post111 = hshift11^0
		
		propagated equality maxbits^post111 = maxbits^0
		
		propagated equality __const_16^post111 = __const_16^0
		
		propagated equality ret_getbyte25^post111 = ret_getbyte25^0
		
		propagated equality i29^post111 = i29^0
		
		propagated equality i3^post111 = i3^0
		
		propagated equality m130^post111 = m130^0
		
		propagated equality i41^post111 = i41^0
		
		propagated equality apsim_incnt^post111 = apsim_incnt^0
		
		propagated equality i21^post111 = i21^0
		
		propagated equality incnt^post111 = incnt^0
		
		propagated equality maxmaxcode^post111 = maxmaxcode^0
		
		propagated equality i6^post111 = i6^0
		
		propagated equality c37^post111 = c37^0
		
		propagated equality ret_getbyte18^post111 = ret_getbyte18^0
		
		propagated equality tmp12^post111 = tmp12^0
		
		propagated equality tmp___024^post111 = tmp___024^0
		
		propagated equality __const_8^post111 = __const_8^0
		
		propagated equality __const_257^post111 = __const_257^0
		
		propagated equality __const_10000^post111 = __const_10000^0
		
		propagated equality tmp___115^post111 = tmp___115^0
		
		propagated equality in_count^post111 = in_count^0
		
		propagated equality m122^post111 = m122^0
		
		propagated equality clear_flg^post111 = clear_flg^0
		
		propagated equality __const_8388607^post111 = __const_8388607^0
		
		propagated equality seed2^post111 = seed2^0
		
		propagated equality ratio^post111 = ratio^0
		
	Simplified Guard

	Original rule:
	l68 -> l67 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l68 -> l67 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l68 -> l67 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l68 -> l67 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l68 -> l1 : __const_10000^0'=__const_10000^post112, __const_16^0'=__const_16^post112, __const_2147483647^0'=__const_2147483647^post112, __const_256^0'=__const_256^post112, __const_257^0'=__const_257^post112, __const_429496^0'=__const_429496^post112, __const_50^0'=__const_50^post112, __const_53^0'=__const_53^post112, __const_65536^0'=__const_65536^post112, __const_8388607^0'=__const_8388607^post112, __const_8^0'=__const_8^post112, __const_9^0'=__const_9^post112, apsim_bound11113^0'=apsim_bound11113^post112, apsim_incnt^0'=apsim_incnt^post112, bits33^0'=bits33^post112, block_compress^0'=block_compress^post112, bytes_out^0'=bytes_out^post112, c37^0'=c37^post112, c7^0'=c7^post112, checkpoint^0'=checkpoint^post112, clear_flg^0'=clear_flg^post112, code31^0'=code31^post112, count^0'=count^post112, disp9^0'=disp9^post112, ent8^0'=ent8^post112, exit_stat^0'=exit_stat^post112, fcode5^0'=fcode5^post112, free_ent^0'=free_ent^post112, hshift11^0'=hshift11^post112, hsize^0'=hsize^post112, hsize___019^0'=hsize___019^post112, hsize___027^0'=hsize___027^post112, hsize_reg10^0'=hsize_reg10^post112, i21^0'=i21^post112, i29^0'=i29^post112, i3^0'=i3^post112, i41^0'=i41^post112, i45^0'=i45^post112, i6^0'=i6^post112, in_count^0'=in_count^post112, incnt^0'=incnt^post112, m122^0'=m122^post112, m130^0'=m130^post112, maxbits^0'=maxbits^post112, maxcode^0'=maxcode^post112, maxmaxcode^0'=maxmaxcode^post112, n40^0'=n40^post112, n44^0'=n44^post112, n_bits^0'=n_bits^post112, offset^0'=offset^post112, out_count^0'=out_count^post112, r_off32^0'=r_off32^post112, rat26^0'=rat26^post112, ratio^0'=ratio^post112, ret_getbyte18^0'=ret_getbyte18^post112, ret_getbyte25^0'=ret_getbyte25^post112, seed2^0'=seed2^post112, tabort4^0'=tabort4^post112, tmp12^0'=tmp12^post112, tmp___014^0'=tmp___014^post112, tmp___017^0'=tmp___017^post112, tmp___024^0'=tmp___024^post112, tmp___115^0'=tmp___115^post112, (0 == 0 /\ tmp___017^0-tmp___017^post112 == 0 /\ hshift11^0-hshift11^post112 == 0 /\ -in_count^post112+in_count^0 == 0 /\ -i21^post112+i21^0 == 0 /\ -n40^post112+n40^0 == 0 /\ r_off32^0-r_off32^post112 == 0 /\ -clear_flg^post112+clear_flg^0 == 0 /\ -block_compress^post112+block_compress^0 == 0 /\ tabort4^0-tabort4^post112 == 0 /\ ret_getbyte18^0-ret_getbyte18^post112 == 0 /\ __const_8388607^0-__const_8388607^post112 == 0 /\ -tmp___014^post112+tmp___014^0 == 0 /\ -tmp12^post112+tmp12^0 == 0 /\ -c7^post112+c7^0 == 0 /\ -i45^post112+i45^0 == 0 /\ exit_stat^0-exit_stat^post112 == 0 /\ -seed2^post112+seed2^0 == 0 /\ maxcode^0-maxcode^post112 == 0 /\ __const_16^0-__const_16^post112 == 0 /\ -__const_8^post112+__const_8^0 == 0 /\ apsim_bound11113^0-apsim_bound11113^post112 == 0 /\ out_count^0-out_count^post112 == 0 /\ maxmaxcode^0-maxmaxcode^post112 == 0 /\ -apsim_incnt^post112+apsim_incnt^0 == 0 /\ -disp9^post112+disp9^0 == 0 /\ -free_ent^post112+free_ent^0 == 0 /\ -code31^post112+code31^0 == 0 /\ bytes_out^0-bytes_out^post112 == 0 /\ -rat26^post112+rat26^0 == 0 /\ -__const_429496^post112+__const_429496^0 == 0 /\ __const_9^0-__const_9^post112 == 0 /\ -maxbits^post112+maxbits^0 == 0 /\ m122^0-m122^post112 == 0 /\ -ratio^post112+ratio^0 == 0 /\ -__const_10000^post112+__const_10000^0 == 0 /\ -__const_256^post112+__const_256^0 == 0 /\ -__const_2147483647^post112+__const_2147483647^0 == 0 /\ c37^0-c37^post112 == 0 /\ -tmp___024^post112+tmp___024^0 == 0 /\ -tmp___115^post112+tmp___115^0 == 0 /\ n44^0-n44^post112 == 0 /\ -hsize_reg10^post112+hsize_reg10^0 == 0 /\ n_bits^0-n_bits^post112 == 0 /\ -hsize___019^post112+hsize___019^0 == 0 /\ -hsize^post112+hsize^0 == 0 /\ hsize___027^0-hsize___027^post112 == 0 /\ -i41^post112+i41^0 == 0 /\ bits33^0-bits33^post112 == 0 /\ -ret_getbyte25^post112+ret_getbyte25^0 == 0 /\ -incnt^post112+incnt^0 == 0 /\ i3^0-i3^post112 == 0 /\ __const_53^0-__const_53^post112 == 0 /\ -fcode5^post112+fcode5^0 == 0 /\ -__const_65536^post112+__const_65536^0 == 0 /\ __const_257^0-__const_257^post112 == 0 /\ checkpoint^0-checkpoint^post112 == 0 /\ -m130^post112+m130^0 == 0 /\ count^0-count^post112 == 0 /\ -offset^post112+offset^0 == 0 /\ -__const_50^post112+__const_50^0 == 0 /\ i6^0-i6^post112 == 0 /\ -i29^post112+i29^0 == 0), cost: 1
	New rule:
	l68 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^post112, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality tmp___017^post112 = tmp___017^0
		
		propagated equality hshift11^post112 = hshift11^0
		
		propagated equality in_count^post112 = in_count^0
		
		propagated equality i21^post112 = i21^0
		
		propagated equality n40^post112 = n40^0
		
		propagated equality r_off32^post112 = r_off32^0
		
		propagated equality clear_flg^post112 = clear_flg^0
		
		propagated equality block_compress^post112 = block_compress^0
		
		propagated equality tabort4^post112 = tabort4^0
		
		propagated equality ret_getbyte18^post112 = ret_getbyte18^0
		
		propagated equality __const_8388607^post112 = __const_8388607^0
		
		propagated equality tmp___014^post112 = tmp___014^0
		
		propagated equality tmp12^post112 = tmp12^0
		
		propagated equality c7^post112 = c7^0
		
		propagated equality i45^post112 = i45^0
		
		propagated equality exit_stat^post112 = exit_stat^0
		
		propagated equality seed2^post112 = seed2^0
		
		propagated equality maxcode^post112 = maxcode^0
		
		propagated equality __const_16^post112 = __const_16^0
		
		propagated equality __const_8^post112 = __const_8^0
		
		propagated equality apsim_bound11113^post112 = apsim_bound11113^0
		
		propagated equality out_count^post112 = out_count^0
		
		propagated equality maxmaxcode^post112 = maxmaxcode^0
		
		propagated equality apsim_incnt^post112 = apsim_incnt^0
		
		propagated equality disp9^post112 = disp9^0
		
		propagated equality free_ent^post112 = free_ent^0
		
		propagated equality code31^post112 = code31^0
		
		propagated equality bytes_out^post112 = bytes_out^0
		
		propagated equality rat26^post112 = rat26^0
		
		propagated equality __const_429496^post112 = __const_429496^0
		
		propagated equality __const_9^post112 = __const_9^0
		
		propagated equality maxbits^post112 = maxbits^0
		
		propagated equality m122^post112 = m122^0
		
		propagated equality ratio^post112 = ratio^0
		
		propagated equality __const_10000^post112 = __const_10000^0
		
		propagated equality __const_256^post112 = __const_256^0
		
		propagated equality __const_2147483647^post112 = __const_2147483647^0
		
		propagated equality c37^post112 = c37^0
		
		propagated equality tmp___024^post112 = tmp___024^0
		
		propagated equality tmp___115^post112 = tmp___115^0
		
		propagated equality n44^post112 = n44^0
		
		propagated equality hsize_reg10^post112 = hsize_reg10^0
		
		propagated equality n_bits^post112 = n_bits^0
		
		propagated equality hsize___019^post112 = hsize___019^0
		
		propagated equality hsize^post112 = hsize^0
		
		propagated equality hsize___027^post112 = hsize___027^0
		
		propagated equality i41^post112 = i41^0
		
		propagated equality bits33^post112 = bits33^0
		
		propagated equality ret_getbyte25^post112 = ret_getbyte25^0
		
		propagated equality incnt^post112 = incnt^0
		
		propagated equality i3^post112 = i3^0
		
		propagated equality __const_53^post112 = __const_53^0
		
		propagated equality fcode5^post112 = fcode5^0
		
		propagated equality __const_65536^post112 = __const_65536^0
		
		propagated equality __const_257^post112 = __const_257^0
		
		propagated equality checkpoint^post112 = checkpoint^0
		
		propagated equality m130^post112 = m130^0
		
		propagated equality count^post112 = count^0
		
		propagated equality offset^post112 = offset^0
		
		propagated equality __const_50^post112 = __const_50^0
		
		propagated equality i6^post112 = i6^0
		
		propagated equality i29^post112 = i29^0
		
	Simplified Guard

	Original rule:
	l68 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^post112, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l68 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^post112, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l68 -> l1 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^post112, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l68 -> l1 : ent8^0'=ent8^post112, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l68 -> l67 : __const_10000^0'=__const_10000^post113, __const_16^0'=__const_16^post113, __const_2147483647^0'=__const_2147483647^post113, __const_256^0'=__const_256^post113, __const_257^0'=__const_257^post113, __const_429496^0'=__const_429496^post113, __const_50^0'=__const_50^post113, __const_53^0'=__const_53^post113, __const_65536^0'=__const_65536^post113, __const_8388607^0'=__const_8388607^post113, __const_8^0'=__const_8^post113, __const_9^0'=__const_9^post113, apsim_bound11113^0'=apsim_bound11113^post113, apsim_incnt^0'=apsim_incnt^post113, bits33^0'=bits33^post113, block_compress^0'=block_compress^post113, bytes_out^0'=bytes_out^post113, c37^0'=c37^post113, c7^0'=c7^post113, checkpoint^0'=checkpoint^post113, clear_flg^0'=clear_flg^post113, code31^0'=code31^post113, count^0'=count^post113, disp9^0'=disp9^post113, ent8^0'=ent8^post113, exit_stat^0'=exit_stat^post113, fcode5^0'=fcode5^post113, free_ent^0'=free_ent^post113, hshift11^0'=hshift11^post113, hsize^0'=hsize^post113, hsize___019^0'=hsize___019^post113, hsize___027^0'=hsize___027^post113, hsize_reg10^0'=hsize_reg10^post113, i21^0'=i21^post113, i29^0'=i29^post113, i3^0'=i3^post113, i41^0'=i41^post113, i45^0'=i45^post113, i6^0'=i6^post113, in_count^0'=in_count^post113, incnt^0'=incnt^post113, m122^0'=m122^post113, m130^0'=m130^post113, maxbits^0'=maxbits^post113, maxcode^0'=maxcode^post113, maxmaxcode^0'=maxmaxcode^post113, n40^0'=n40^post113, n44^0'=n44^post113, n_bits^0'=n_bits^post113, offset^0'=offset^post113, out_count^0'=out_count^post113, r_off32^0'=r_off32^post113, rat26^0'=rat26^post113, ratio^0'=ratio^post113, ret_getbyte18^0'=ret_getbyte18^post113, ret_getbyte25^0'=ret_getbyte25^post113, seed2^0'=seed2^post113, tabort4^0'=tabort4^post113, tmp12^0'=tmp12^post113, tmp___014^0'=tmp___014^post113, tmp___017^0'=tmp___017^post113, tmp___024^0'=tmp___024^post113, tmp___115^0'=tmp___115^post113, (i3^0-i3^post113 == 0 /\ free_ent^0-free_ent^post113 == 0 /\ i21^0-i21^post113 == 0 /\ -__const_8388607^post113+__const_8388607^0 == 0 /\ -ratio^post113+ratio^0 == 0 /\ -code31^post113+code31^0 == 0 /\ -ent8^post113+ent8^0 == 0 /\ -disp9^post113+disp9^0 == 0 /\ -offset^post113+offset^0 == 0 /\ hsize___027^0-hsize___027^post113 == 0 /\ -fcode5^post113+fcode5^0 == 0 /\ r_off32^0-r_off32^post113 == 0 /\ -__const_16^post113+__const_16^0 == 0 /\ -__const_9^post113+__const_9^0 == 0 /\ -tmp___024^post113+tmp___024^0 == 0 /\ -block_compress^post113+block_compress^0 == 0 /\ -n40^post113+n40^0 == 0 /\ -tmp___014^post113+tmp___014^0 == 0 /\ -ret_getbyte25^post113+ret_getbyte25^0 == 0 /\ tmp___017^0-tmp___017^post113 == 0 /\ exit_stat^0-exit_stat^post113 == 0 /\ __const_10000^0-__const_10000^post113 == 0 /\ maxmaxcode^0-maxmaxcode^post113 == 0 /\ out_count^0-out_count^post113 == 0 /\ -tmp___115^post113+tmp___115^0 == 0 /\ __const_53^0-__const_53^post113 == 0 /\ -i41^post113+i41^0 == 0 /\ -incnt^post113+incnt^0 == 0 /\ n_bits^0-n_bits^post113 == 0 /\ -i45^post113+i45^0 == 0 /\ -m122^post113+m122^0 == 0 /\ bytes_out^0-bytes_out^post113 == 0 /\ -hsize^post113+hsize^0 == 0 /\ count^0-count^post113 == 0 /\ apsim_incnt^0-apsim_incnt^post113 == 0 /\ -__const_65536^post113+__const_65536^0 == 0 /\ -__const_429496^post113+__const_429496^0 == 0 /\ c37^0-c37^post113 == 0 /\ bits33^0-bits33^post113 == 0 /\ -maxbits^post113+maxbits^0 == 0 /\ m130^0-m130^post113 == 0 /\ -maxcode^post113+maxcode^0 == 0 /\ -i29^post113+i29^0 == 0 /\ __const_257^0-__const_257^post113 == 0 /\ hsize___019^0-hsize___019^post113 == 0 /\ checkpoint^0-checkpoint^post113 == 0 /\ -in_count^post113+in_count^0 == 0 /\ -__const_2147483647^post113+__const_2147483647^0 == 0 /\ -apsim_bound11113^post113+apsim_bound11113^0 == 0 /\ -rat26^post113+rat26^0 == 0 /\ tmp12^0-tmp12^post113 == 0 /\ i6^0-i6^post113 == 0 /\ tabort4^0-tabort4^post113 == 0 /\ __const_256^0-__const_256^post113 == 0 /\ -seed2^post113+seed2^0 == 0 /\ n44^0-n44^post113 == 0 /\ ret_getbyte18^0-ret_getbyte18^post113 == 0 /\ -clear_flg^post113+clear_flg^0 == 0 /\ hshift11^0-hshift11^post113 == 0 /\ __const_8^0-__const_8^post113 == 0 /\ __const_50^0-__const_50^post113 == 0 /\ -hsize_reg10^post113+hsize_reg10^0 == 0 /\ -c7^post113+c7^0 == 0), cost: 1
	New rule:
	l68 -> l67 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality i3^post113 = i3^0
		
		propagated equality free_ent^post113 = free_ent^0
		
		propagated equality i21^post113 = i21^0
		
		propagated equality __const_8388607^post113 = __const_8388607^0
		
		propagated equality ratio^post113 = ratio^0
		
		propagated equality code31^post113 = code31^0
		
		propagated equality ent8^post113 = ent8^0
		
		propagated equality disp9^post113 = disp9^0
		
		propagated equality offset^post113 = offset^0
		
		propagated equality hsize___027^post113 = hsize___027^0
		
		propagated equality fcode5^post113 = fcode5^0
		
		propagated equality r_off32^post113 = r_off32^0
		
		propagated equality __const_16^post113 = __const_16^0
		
		propagated equality __const_9^post113 = __const_9^0
		
		propagated equality tmp___024^post113 = tmp___024^0
		
		propagated equality block_compress^post113 = block_compress^0
		
		propagated equality n40^post113 = n40^0
		
		propagated equality tmp___014^post113 = tmp___014^0
		
		propagated equality ret_getbyte25^post113 = ret_getbyte25^0
		
		propagated equality tmp___017^post113 = tmp___017^0
		
		propagated equality exit_stat^post113 = exit_stat^0
		
		propagated equality __const_10000^post113 = __const_10000^0
		
		propagated equality maxmaxcode^post113 = maxmaxcode^0
		
		propagated equality out_count^post113 = out_count^0
		
		propagated equality tmp___115^post113 = tmp___115^0
		
		propagated equality __const_53^post113 = __const_53^0
		
		propagated equality i41^post113 = i41^0
		
		propagated equality incnt^post113 = incnt^0
		
		propagated equality n_bits^post113 = n_bits^0
		
		propagated equality i45^post113 = i45^0
		
		propagated equality m122^post113 = m122^0
		
		propagated equality bytes_out^post113 = bytes_out^0
		
		propagated equality hsize^post113 = hsize^0
		
		propagated equality count^post113 = count^0
		
		propagated equality apsim_incnt^post113 = apsim_incnt^0
		
		propagated equality __const_65536^post113 = __const_65536^0
		
		propagated equality __const_429496^post113 = __const_429496^0
		
		propagated equality c37^post113 = c37^0
		
		propagated equality bits33^post113 = bits33^0
		
		propagated equality maxbits^post113 = maxbits^0
		
		propagated equality m130^post113 = m130^0
		
		propagated equality maxcode^post113 = maxcode^0
		
		propagated equality i29^post113 = i29^0
		
		propagated equality __const_257^post113 = __const_257^0
		
		propagated equality hsize___019^post113 = hsize___019^0
		
		propagated equality checkpoint^post113 = checkpoint^0
		
		propagated equality in_count^post113 = in_count^0
		
		propagated equality __const_2147483647^post113 = __const_2147483647^0
		
		propagated equality apsim_bound11113^post113 = apsim_bound11113^0
		
		propagated equality rat26^post113 = rat26^0
		
		propagated equality tmp12^post113 = tmp12^0
		
		propagated equality i6^post113 = i6^0
		
		propagated equality tabort4^post113 = tabort4^0
		
		propagated equality __const_256^post113 = __const_256^0
		
		propagated equality seed2^post113 = seed2^0
		
		propagated equality n44^post113 = n44^0
		
		propagated equality ret_getbyte18^post113 = ret_getbyte18^0
		
		propagated equality clear_flg^post113 = clear_flg^0
		
		propagated equality hshift11^post113 = hshift11^0
		
		propagated equality __const_8^post113 = __const_8^0
		
		propagated equality __const_50^post113 = __const_50^0
		
		propagated equality hsize_reg10^post113 = hsize_reg10^0
		
		propagated equality c7^post113 = c7^0
		
	Simplified Guard

	Original rule:
	l68 -> l67 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l68 -> l67 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l68 -> l67 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l68 -> l67 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l56 -> l55 : __const_10000^0'=__const_10000^post114, __const_16^0'=__const_16^post114, __const_2147483647^0'=__const_2147483647^post114, __const_256^0'=__const_256^post114, __const_257^0'=__const_257^post114, __const_429496^0'=__const_429496^post114, __const_50^0'=__const_50^post114, __const_53^0'=__const_53^post114, __const_65536^0'=__const_65536^post114, __const_8388607^0'=__const_8388607^post114, __const_8^0'=__const_8^post114, __const_9^0'=__const_9^post114, apsim_bound11113^0'=apsim_bound11113^post114, apsim_incnt^0'=apsim_incnt^post114, bits33^0'=bits33^post114, block_compress^0'=block_compress^post114, bytes_out^0'=bytes_out^post114, c37^0'=c37^post114, c7^0'=c7^post114, checkpoint^0'=checkpoint^post114, clear_flg^0'=clear_flg^post114, code31^0'=code31^post114, count^0'=count^post114, disp9^0'=disp9^post114, ent8^0'=ent8^post114, exit_stat^0'=exit_stat^post114, fcode5^0'=fcode5^post114, free_ent^0'=free_ent^post114, hshift11^0'=hshift11^post114, hsize^0'=hsize^post114, hsize___019^0'=hsize___019^post114, hsize___027^0'=hsize___027^post114, hsize_reg10^0'=hsize_reg10^post114, i21^0'=i21^post114, i29^0'=i29^post114, i3^0'=i3^post114, i41^0'=i41^post114, i45^0'=i45^post114, i6^0'=i6^post114, in_count^0'=in_count^post114, incnt^0'=incnt^post114, m122^0'=m122^post114, m130^0'=m130^post114, maxbits^0'=maxbits^post114, maxcode^0'=maxcode^post114, maxmaxcode^0'=maxmaxcode^post114, n40^0'=n40^post114, n44^0'=n44^post114, n_bits^0'=n_bits^post114, offset^0'=offset^post114, out_count^0'=out_count^post114, r_off32^0'=r_off32^post114, rat26^0'=rat26^post114, ratio^0'=ratio^post114, ret_getbyte18^0'=ret_getbyte18^post114, ret_getbyte25^0'=ret_getbyte25^post114, seed2^0'=seed2^post114, tabort4^0'=tabort4^post114, tmp12^0'=tmp12^post114, tmp___014^0'=tmp___014^post114, tmp___017^0'=tmp___017^post114, tmp___024^0'=tmp___024^post114, tmp___115^0'=tmp___115^post114, (-c7^post114+c7^0 == 0 /\ __const_8^0-__const_8^post114 == 0 /\ -__const_65536^post114+__const_65536^0 == 0 /\ -__const_9^post114+__const_9^0 == 0 /\ -clear_flg^post114+clear_flg^0 == 0 /\ -bytes_out^post114+bytes_out^0 == 0 /\ -block_compress^post114+block_compress^0 == 0 /\ -__const_429496^post114+__const_429496^0 == 0 /\ -maxcode^post114+maxcode^0 == 0 /\ -hsize^post114+hsize^0 == 0 /\ hshift11^0-hshift11^post114 == 0 /\ -m122^post114+m122^0 == 0 /\ __const_50^0-__const_50^post114 == 0 /\ n44^0-n44^post114 == 0 /\ -apsim_bound11113^post114+apsim_bound11113^0 == 0 /\ __const_10000^0-__const_10000^post114 == 0 /\ -__const_8388607^post114+__const_8388607^0 == 0 /\ free_ent^0-free_ent^post114 == 0 /\ -code31^post114+code31^0 == 0 /\ -i45^post114+i45^0 == 0 /\ __const_16^0-__const_16^post114 == 0 /\ tmp___017^0-tmp___017^post114 == 0 /\ maxmaxcode^0-maxmaxcode^post114 == 0 /\ i21^0-i21^post114 == 0 /\ ret_getbyte25^0-ret_getbyte25^post114 == 0 /\ n40^0-n40^post114 == 0 /\ incnt^0-incnt^post114 == 0 /\ -in_count^post114+in_count^0 == 0 /\ -disp9^post114+disp9^0 == 0 /\ -rat26^post114+rat26^0 == 0 /\ c37^0-c37^post114 == 0 /\ -offset^post114+offset^0 == 0 /\ maxbits^0-maxbits^post114 == 0 /\ -__const_2147483647^post114+__const_2147483647^0 == 0 /\ bits33^0-bits33^post114 == 0 /\ i6^0-i6^post114 == 0 /\ -tmp___014^post114+tmp___014^0 == 0 /\ -fcode5^post114+fcode5^0 == 0 /\ ent8^0-ent8^post114 == 0 /\ __const_257^0-__const_257^post114 == 0 /\ -hsize_reg10^post114+hsize_reg10^0 == 0 /\ r_off32^0-r_off32^post114 == 0 /\ tabort4^0-tabort4^post114 == 0 /\ -seed2^post114+seed2^0 == 0 /\ out_count^0-out_count^post114 == 0 /\ hsize___019^0-hsize___019^post114 == 0 /\ apsim_incnt^0-apsim_incnt^post114 == 0 /\ __const_256^0-__const_256^post114 == 0 /\ -tmp___024^post114+tmp___024^0 == 0 /\ exit_stat^0-exit_stat^post114 == 0 /\ -tmp___115^post114+tmp___115^0 == 0 /\ __const_53^0-__const_53^post114 == 0 /\ -i29^post114+i29^0 == 0 /\ -i41^post114+i41^0 == 0 /\ hsize___027^0-hsize___027^post114 == 0 /\ ret_getbyte18^0-ret_getbyte18^post114 == 0 /\ n_bits^0-n_bits^post114 == 0 /\ m130^0-m130^post114 == 0 /\ tmp12^0-tmp12^post114 == 0 /\ checkpoint^0-checkpoint^post114 == 0 /\ i3^0-i3^post114 == 0 /\ -ratio^post114+ratio^0 == 0 /\ count^0-count^post114 == 0), cost: 1
	New rule:
	l56 -> l55 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality c7^post114 = c7^0
		
		propagated equality __const_8^post114 = __const_8^0
		
		propagated equality __const_65536^post114 = __const_65536^0
		
		propagated equality __const_9^post114 = __const_9^0
		
		propagated equality clear_flg^post114 = clear_flg^0
		
		propagated equality bytes_out^post114 = bytes_out^0
		
		propagated equality block_compress^post114 = block_compress^0
		
		propagated equality __const_429496^post114 = __const_429496^0
		
		propagated equality maxcode^post114 = maxcode^0
		
		propagated equality hsize^post114 = hsize^0
		
		propagated equality hshift11^post114 = hshift11^0
		
		propagated equality m122^post114 = m122^0
		
		propagated equality __const_50^post114 = __const_50^0
		
		propagated equality n44^post114 = n44^0
		
		propagated equality apsim_bound11113^post114 = apsim_bound11113^0
		
		propagated equality __const_10000^post114 = __const_10000^0
		
		propagated equality __const_8388607^post114 = __const_8388607^0
		
		propagated equality free_ent^post114 = free_ent^0
		
		propagated equality code31^post114 = code31^0
		
		propagated equality i45^post114 = i45^0
		
		propagated equality __const_16^post114 = __const_16^0
		
		propagated equality tmp___017^post114 = tmp___017^0
		
		propagated equality maxmaxcode^post114 = maxmaxcode^0
		
		propagated equality i21^post114 = i21^0
		
		propagated equality ret_getbyte25^post114 = ret_getbyte25^0
		
		propagated equality n40^post114 = n40^0
		
		propagated equality incnt^post114 = incnt^0
		
		propagated equality in_count^post114 = in_count^0
		
		propagated equality disp9^post114 = disp9^0
		
		propagated equality rat26^post114 = rat26^0
		
		propagated equality c37^post114 = c37^0
		
		propagated equality offset^post114 = offset^0
		
		propagated equality maxbits^post114 = maxbits^0
		
		propagated equality __const_2147483647^post114 = __const_2147483647^0
		
		propagated equality bits33^post114 = bits33^0
		
		propagated equality i6^post114 = i6^0
		
		propagated equality tmp___014^post114 = tmp___014^0
		
		propagated equality fcode5^post114 = fcode5^0
		
		propagated equality ent8^post114 = ent8^0
		
		propagated equality __const_257^post114 = __const_257^0
		
		propagated equality hsize_reg10^post114 = hsize_reg10^0
		
		propagated equality r_off32^post114 = r_off32^0
		
		propagated equality tabort4^post114 = tabort4^0
		
		propagated equality seed2^post114 = seed2^0
		
		propagated equality out_count^post114 = out_count^0
		
		propagated equality hsize___019^post114 = hsize___019^0
		
		propagated equality apsim_incnt^post114 = apsim_incnt^0
		
		propagated equality __const_256^post114 = __const_256^0
		
		propagated equality tmp___024^post114 = tmp___024^0
		
		propagated equality exit_stat^post114 = exit_stat^0
		
		propagated equality tmp___115^post114 = tmp___115^0
		
		propagated equality __const_53^post114 = __const_53^0
		
		propagated equality i29^post114 = i29^0
		
		propagated equality i41^post114 = i41^0
		
		propagated equality hsize___027^post114 = hsize___027^0
		
		propagated equality ret_getbyte18^post114 = ret_getbyte18^0
		
		propagated equality n_bits^post114 = n_bits^0
		
		propagated equality m130^post114 = m130^0
		
		propagated equality tmp12^post114 = tmp12^0
		
		propagated equality checkpoint^post114 = checkpoint^0
		
		propagated equality i3^post114 = i3^0
		
		propagated equality ratio^post114 = ratio^0
		
		propagated equality count^post114 = count^0
		
	Simplified Guard

	Original rule:
	l56 -> l55 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l56 -> l55 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l56 -> l55 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l56 -> l55 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l69 -> l68 : __const_10000^0'=__const_10000^post115, __const_16^0'=__const_16^post115, __const_2147483647^0'=__const_2147483647^post115, __const_256^0'=__const_256^post115, __const_257^0'=__const_257^post115, __const_429496^0'=__const_429496^post115, __const_50^0'=__const_50^post115, __const_53^0'=__const_53^post115, __const_65536^0'=__const_65536^post115, __const_8388607^0'=__const_8388607^post115, __const_8^0'=__const_8^post115, __const_9^0'=__const_9^post115, apsim_bound11113^0'=apsim_bound11113^post115, apsim_incnt^0'=apsim_incnt^post115, bits33^0'=bits33^post115, block_compress^0'=block_compress^post115, bytes_out^0'=bytes_out^post115, c37^0'=c37^post115, c7^0'=c7^post115, checkpoint^0'=checkpoint^post115, clear_flg^0'=clear_flg^post115, code31^0'=code31^post115, count^0'=count^post115, disp9^0'=disp9^post115, ent8^0'=ent8^post115, exit_stat^0'=exit_stat^post115, fcode5^0'=fcode5^post115, free_ent^0'=free_ent^post115, hshift11^0'=hshift11^post115, hsize^0'=hsize^post115, hsize___019^0'=hsize___019^post115, hsize___027^0'=hsize___027^post115, hsize_reg10^0'=hsize_reg10^post115, i21^0'=i21^post115, i29^0'=i29^post115, i3^0'=i3^post115, i41^0'=i41^post115, i45^0'=i45^post115, i6^0'=i6^post115, in_count^0'=in_count^post115, incnt^0'=incnt^post115, m122^0'=m122^post115, m130^0'=m130^post115, maxbits^0'=maxbits^post115, maxcode^0'=maxcode^post115, maxmaxcode^0'=maxmaxcode^post115, n40^0'=n40^post115, n44^0'=n44^post115, n_bits^0'=n_bits^post115, offset^0'=offset^post115, out_count^0'=out_count^post115, r_off32^0'=r_off32^post115, rat26^0'=rat26^post115, ratio^0'=ratio^post115, ret_getbyte18^0'=ret_getbyte18^post115, ret_getbyte25^0'=ret_getbyte25^post115, seed2^0'=seed2^post115, tabort4^0'=tabort4^post115, tmp12^0'=tmp12^post115, tmp___014^0'=tmp___014^post115, tmp___017^0'=tmp___017^post115, tmp___024^0'=tmp___024^post115, tmp___115^0'=tmp___115^post115, (0 == 0 /\ __const_16^0-__const_16^post115 == 0 /\ -tmp___024^post115+tmp___024^0 == 0 /\ -tmp___115^post115+tmp___115^0 == 0 /\ -block_compress^post115+block_compress^0 == 0 /\ -__const_2147483647^post115+__const_2147483647^0 == 0 /\ __const_53^0-__const_53^post115 == 0 /\ -1+in_count^post115-in_count^0 == 0 /\ __const_8^0-__const_8^post115 == 0 /\ -n44^post115+n44^0 == 0 /\ -seed2^post115+seed2^0 == 0 /\ -__const_10000^post115+__const_10000^0 == 0 /\ -hsize_reg10^post115+hsize_reg10^0 == 0 /\ -hsize___027^post115+hsize___027^0 == 0 /\ n40^0-n40^post115 == 0 /\ hshift11^0-hshift11^post115 == 0 /\ ret_getbyte25^0-ret_getbyte25^post115 == 0 /\ tabort4^0-tabort4^post115 == 0 /\ -count^post115+count^0 == 0 /\ hsize___019^0-hsize___019^post115 == 0 /\ -bytes_out^post115+bytes_out^0 == 0 /\ __const_256^0-__const_256^post115 == 0 /\ -hsize^post115+hsize^0 == 0 /\ tmp___014^post115-ret_getbyte25^0 == 0 /\ -apsim_bound11113^post115+apsim_bound11113^0 == 0 /\ -__const_50^post115+__const_50^0 == 0 /\ -maxcode^post115+maxcode^0 == 0 /\ -n_bits^post115+n_bits^0 == 0 /\ c37^0-c37^post115 == 0 /\ -i29^post115+i29^0 == 0 /\ -i41^post115+i41^0 == 0 /\ -incnt^post115+incnt^0 == 0 /\ -__const_65536^post115+__const_65536^0 == 0 /\ code31^0-code31^post115 == 0 /\ free_ent^0-free_ent^post115 == 0 /\ rat26^0-rat26^post115 == 0 /\ __const_9^0-__const_9^post115 == 0 /\ tmp___017^0-tmp___017^post115 == 0 /\ -ratio^post115+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post115 == 0 /\ -tmp___014^post115+c7^post115 == 0 /\ r_off32^0-r_off32^post115 == 0 /\ -__const_8388607^post115+__const_8388607^0 == 0 /\ -checkpoint^post115+checkpoint^0 == 0 /\ tmp12^0-tmp12^post115 == 0 /\ ret_getbyte18^0-ret_getbyte18^post115 == 0 /\ i21^0-i21^post115 == 0 /\ -clear_flg^post115+clear_flg^0 == 0 /\ __const_257^0-__const_257^post115 == 0 /\ apsim_incnt^0-apsim_incnt^post115 == 0 /\ -exit_stat^post115+exit_stat^0 == 0 /\ -disp9^post115+disp9^0 == 0 /\ m130^0-m130^post115 == 0 /\ -m122^post115+m122^0 == 0 /\ bits33^0-bits33^post115 == 0 /\ out_count^0-out_count^post115 == 0 /\ -__const_429496^post115+__const_429496^0 == 0 /\ -i3^post115+i3^0 == 0 /\ i45^0-i45^post115 == 0 /\ maxbits^0-maxbits^post115 == 0 /\ -offset^post115+offset^0 == 0 /\ ent8^0-ent8^post115 == 0), cost: 1
	New rule:
	l69 -> l68 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=ret_getbyte25^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^post115, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^post115, in_count^0'=1+in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=ret_getbyte25^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality __const_16^post115 = __const_16^0
		
		propagated equality tmp___024^post115 = tmp___024^0
		
		propagated equality tmp___115^post115 = tmp___115^0
		
		propagated equality block_compress^post115 = block_compress^0
		
		propagated equality __const_2147483647^post115 = __const_2147483647^0
		
		propagated equality __const_53^post115 = __const_53^0
		
		propagated equality in_count^post115 = 1+in_count^0
		
		propagated equality __const_8^post115 = __const_8^0
		
		propagated equality n44^post115 = n44^0
		
		propagated equality seed2^post115 = seed2^0
		
		propagated equality __const_10000^post115 = __const_10000^0
		
		propagated equality hsize_reg10^post115 = hsize_reg10^0
		
		propagated equality hsize___027^post115 = hsize___027^0
		
		propagated equality n40^post115 = n40^0
		
		propagated equality hshift11^post115 = hshift11^0
		
		propagated equality ret_getbyte25^post115 = ret_getbyte25^0
		
		propagated equality tabort4^post115 = tabort4^0
		
		propagated equality count^post115 = count^0
		
		propagated equality hsize___019^post115 = hsize___019^0
		
		propagated equality bytes_out^post115 = bytes_out^0
		
		propagated equality __const_256^post115 = __const_256^0
		
		propagated equality hsize^post115 = hsize^0
		
		propagated equality tmp___014^post115 = ret_getbyte25^0
		
		propagated equality apsim_bound11113^post115 = apsim_bound11113^0
		
		propagated equality __const_50^post115 = __const_50^0
		
		propagated equality maxcode^post115 = maxcode^0
		
		propagated equality n_bits^post115 = n_bits^0
		
		propagated equality c37^post115 = c37^0
		
		propagated equality i29^post115 = i29^0
		
		propagated equality i41^post115 = i41^0
		
		propagated equality incnt^post115 = incnt^0
		
		propagated equality __const_65536^post115 = __const_65536^0
		
		propagated equality code31^post115 = code31^0
		
		propagated equality free_ent^post115 = free_ent^0
		
		propagated equality rat26^post115 = rat26^0
		
		propagated equality __const_9^post115 = __const_9^0
		
		propagated equality tmp___017^post115 = tmp___017^0
		
		propagated equality ratio^post115 = ratio^0
		
		propagated equality maxmaxcode^post115 = maxmaxcode^0
		
		propagated equality c7^post115 = ret_getbyte25^0
		
		propagated equality r_off32^post115 = r_off32^0
		
		propagated equality __const_8388607^post115 = __const_8388607^0
		
		propagated equality checkpoint^post115 = checkpoint^0
		
		propagated equality tmp12^post115 = tmp12^0
		
		propagated equality ret_getbyte18^post115 = ret_getbyte18^0
		
		propagated equality i21^post115 = i21^0
		
		propagated equality clear_flg^post115 = clear_flg^0
		
		propagated equality __const_257^post115 = __const_257^0
		
		propagated equality apsim_incnt^post115 = apsim_incnt^0
		
		propagated equality exit_stat^post115 = exit_stat^0
		
		propagated equality disp9^post115 = disp9^0
		
		propagated equality m130^post115 = m130^0
		
		propagated equality m122^post115 = m122^0
		
		propagated equality bits33^post115 = bits33^0
		
		propagated equality out_count^post115 = out_count^0
		
		propagated equality __const_429496^post115 = __const_429496^0
		
		propagated equality i3^post115 = i3^0
		
		propagated equality i45^post115 = i45^0
		
		propagated equality maxbits^post115 = maxbits^0
		
		propagated equality offset^post115 = offset^0
		
		propagated equality ent8^post115 = ent8^0
		
	Simplified Guard

	Original rule:
	l69 -> l68 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=ret_getbyte25^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^post115, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^post115, in_count^0'=1+in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=ret_getbyte25^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l69 -> l68 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=ret_getbyte25^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^post115, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^post115, in_count^0'=1+in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=ret_getbyte25^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l69 -> l68 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=ret_getbyte25^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^post115, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^post115, in_count^0'=1+in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=ret_getbyte25^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l69 -> l68 : c7^0'=ret_getbyte25^0, fcode5^0'=fcode5^post115, i6^0'=i6^post115, in_count^0'=1+in_count^0, tmp___014^0'=ret_getbyte25^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l9 -> l8 : __const_10000^0'=__const_10000^post116, __const_16^0'=__const_16^post116, __const_2147483647^0'=__const_2147483647^post116, __const_256^0'=__const_256^post116, __const_257^0'=__const_257^post116, __const_429496^0'=__const_429496^post116, __const_50^0'=__const_50^post116, __const_53^0'=__const_53^post116, __const_65536^0'=__const_65536^post116, __const_8388607^0'=__const_8388607^post116, __const_8^0'=__const_8^post116, __const_9^0'=__const_9^post116, apsim_bound11113^0'=apsim_bound11113^post116, apsim_incnt^0'=apsim_incnt^post116, bits33^0'=bits33^post116, block_compress^0'=block_compress^post116, bytes_out^0'=bytes_out^post116, c37^0'=c37^post116, c7^0'=c7^post116, checkpoint^0'=checkpoint^post116, clear_flg^0'=clear_flg^post116, code31^0'=code31^post116, count^0'=count^post116, disp9^0'=disp9^post116, ent8^0'=ent8^post116, exit_stat^0'=exit_stat^post116, fcode5^0'=fcode5^post116, free_ent^0'=free_ent^post116, hshift11^0'=hshift11^post116, hsize^0'=hsize^post116, hsize___019^0'=hsize___019^post116, hsize___027^0'=hsize___027^post116, hsize_reg10^0'=hsize_reg10^post116, i21^0'=i21^post116, i29^0'=i29^post116, i3^0'=i3^post116, i41^0'=i41^post116, i45^0'=i45^post116, i6^0'=i6^post116, in_count^0'=in_count^post116, incnt^0'=incnt^post116, m122^0'=m122^post116, m130^0'=m130^post116, maxbits^0'=maxbits^post116, maxcode^0'=maxcode^post116, maxmaxcode^0'=maxmaxcode^post116, n40^0'=n40^post116, n44^0'=n44^post116, n_bits^0'=n_bits^post116, offset^0'=offset^post116, out_count^0'=out_count^post116, r_off32^0'=r_off32^post116, rat26^0'=rat26^post116, ratio^0'=ratio^post116, ret_getbyte18^0'=ret_getbyte18^post116, ret_getbyte25^0'=ret_getbyte25^post116, seed2^0'=seed2^post116, tabort4^0'=tabort4^post116, tmp12^0'=tmp12^post116, tmp___014^0'=tmp___014^post116, tmp___017^0'=tmp___017^post116, tmp___024^0'=tmp___024^post116, tmp___115^0'=tmp___115^post116, (code31^0-code31^post116 == 0 /\ hsize___019^0-hsize___019^post116 == 0 /\ apsim_incnt^0-apsim_incnt^post116 == 0 /\ -__const_8388607^post116+__const_8388607^0 == 0 /\ -ratio^post116+ratio^0 == 0 /\ -fcode5^post116+fcode5^0 == 0 /\ -hshift11^post116+hshift11^0 == 0 /\ __const_65536^0-__const_65536^post116 == 0 /\ -disp9^post116+disp9^0 == 0 /\ -count^post116+count^0 == 0 /\ __const_16^0-__const_16^post116 == 0 /\ m130^0-m130^post116 == 0 /\ n44^0-n44^post116 == 0 /\ c37^0-c37^post116 == 0 /\ -exit_stat^post116+exit_stat^0 == 0 /\ -maxbits^post116+maxbits^0 == 0 /\ -bytes_out^post116+bytes_out^0 == 0 /\ tmp___017^0-tmp___017^post116 == 0 /\ -i6^post116+i6^0 == 0 /\ __const_257^0-__const_257^post116 == 0 /\ -__const_256^post116+__const_256^0 == 0 /\ c7^0-c7^post116 == 0 /\ -ret_getbyte25^post116+ret_getbyte25^0 == 0 /\ r_off32^0-r_off32^post116 == 0 /\ __const_8^0-__const_8^post116 == 0 /\ -checkpoint^post116+checkpoint^0 == 0 /\ hsize___027^0-hsize___027^post116 == 0 /\ -hsize_reg10^post116+hsize_reg10^0 == 0 /\ -__const_10000^post116+__const_10000^0 == 0 /\ i29^0-i29^post116 == 0 /\ -offset^post116+offset^0 == 0 /\ __const_53^0-__const_53^post116 == 0 /\ -m122^post116+m122^0 == 0 /\ -i3^post116+i3^0 == 0 /\ -i41^post116+i41^0 == 0 /\ -tmp___024^post116+tmp___024^0 == 0 /\ -tmp___115^post116+tmp___115^0 == 0 /\ free_ent^0-free_ent^post116 == 0 /\ -incnt^post116+incnt^0 == 0 /\ out_count^0-out_count^post116 == 0 /\ -n_bits^post116+n_bits^0 == 0 /\ n40^0-n40^post116 == 0 /\ -__const_50^post116+__const_50^0 == 0 /\ -__const_429496^post116+__const_429496^0 == 0 /\ -tmp___014^post116+tmp___014^0 == 0 /\ -maxcode^post116+maxcode^0 == 0 /\ i45^0-i45^post116 == 0 /\ -seed2^post116+seed2^0 == 0 /\ ent8^0-ent8^post116 == 0 /\ -in_count^post116+in_count^0 == 0 /\ -apsim_bound11113^post116+apsim_bound11113^0 == 0 /\ -clear_flg^post116+clear_flg^0 == 0 /\ -i21^post116+i21^0 == 0 /\ __const_9^0-__const_9^post116 == 0 /\ -__const_2147483647^post116+__const_2147483647^0 == 0 /\ maxmaxcode^0-maxmaxcode^post116 == 0 /\ tmp12^0-tmp12^post116 == 0 /\ -hsize^post116+hsize^0 == 0 /\ -rat26^post116+rat26^0 == 0 /\ bits33^0-bits33^post116 == 0 /\ ret_getbyte18^0-ret_getbyte18^post116 == 0 /\ tabort4^0-tabort4^post116 == 0 /\ -block_compress^post116+block_compress^0 == 0), cost: 1
	New rule:
	l9 -> l8 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality code31^post116 = code31^0
		
		propagated equality hsize___019^post116 = hsize___019^0
		
		propagated equality apsim_incnt^post116 = apsim_incnt^0
		
		propagated equality __const_8388607^post116 = __const_8388607^0
		
		propagated equality ratio^post116 = ratio^0
		
		propagated equality fcode5^post116 = fcode5^0
		
		propagated equality hshift11^post116 = hshift11^0
		
		propagated equality __const_65536^post116 = __const_65536^0
		
		propagated equality disp9^post116 = disp9^0
		
		propagated equality count^post116 = count^0
		
		propagated equality __const_16^post116 = __const_16^0
		
		propagated equality m130^post116 = m130^0
		
		propagated equality n44^post116 = n44^0
		
		propagated equality c37^post116 = c37^0
		
		propagated equality exit_stat^post116 = exit_stat^0
		
		propagated equality maxbits^post116 = maxbits^0
		
		propagated equality bytes_out^post116 = bytes_out^0
		
		propagated equality tmp___017^post116 = tmp___017^0
		
		propagated equality i6^post116 = i6^0
		
		propagated equality __const_257^post116 = __const_257^0
		
		propagated equality __const_256^post116 = __const_256^0
		
		propagated equality c7^post116 = c7^0
		
		propagated equality ret_getbyte25^post116 = ret_getbyte25^0
		
		propagated equality r_off32^post116 = r_off32^0
		
		propagated equality __const_8^post116 = __const_8^0
		
		propagated equality checkpoint^post116 = checkpoint^0
		
		propagated equality hsize___027^post116 = hsize___027^0
		
		propagated equality hsize_reg10^post116 = hsize_reg10^0
		
		propagated equality __const_10000^post116 = __const_10000^0
		
		propagated equality i29^post116 = i29^0
		
		propagated equality offset^post116 = offset^0
		
		propagated equality __const_53^post116 = __const_53^0
		
		propagated equality m122^post116 = m122^0
		
		propagated equality i3^post116 = i3^0
		
		propagated equality i41^post116 = i41^0
		
		propagated equality tmp___024^post116 = tmp___024^0
		
		propagated equality tmp___115^post116 = tmp___115^0
		
		propagated equality free_ent^post116 = free_ent^0
		
		propagated equality incnt^post116 = incnt^0
		
		propagated equality out_count^post116 = out_count^0
		
		propagated equality n_bits^post116 = n_bits^0
		
		propagated equality n40^post116 = n40^0
		
		propagated equality __const_50^post116 = __const_50^0
		
		propagated equality __const_429496^post116 = __const_429496^0
		
		propagated equality tmp___014^post116 = tmp___014^0
		
		propagated equality maxcode^post116 = maxcode^0
		
		propagated equality i45^post116 = i45^0
		
		propagated equality seed2^post116 = seed2^0
		
		propagated equality ent8^post116 = ent8^0
		
		propagated equality in_count^post116 = in_count^0
		
		propagated equality apsim_bound11113^post116 = apsim_bound11113^0
		
		propagated equality clear_flg^post116 = clear_flg^0
		
		propagated equality i21^post116 = i21^0
		
		propagated equality __const_9^post116 = __const_9^0
		
		propagated equality __const_2147483647^post116 = __const_2147483647^0
		
		propagated equality maxmaxcode^post116 = maxmaxcode^0
		
		propagated equality tmp12^post116 = tmp12^0
		
		propagated equality hsize^post116 = hsize^0
		
		propagated equality rat26^post116 = rat26^0
		
		propagated equality bits33^post116 = bits33^0
		
		propagated equality ret_getbyte18^post116 = ret_getbyte18^0
		
		propagated equality tabort4^post116 = tabort4^0
		
		propagated equality block_compress^post116 = block_compress^0
		
	Simplified Guard

	Original rule:
	l9 -> l8 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l9 -> l8 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l9 -> l8 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l9 -> l8 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l70 -> l69 : __const_10000^0'=__const_10000^post117, __const_16^0'=__const_16^post117, __const_2147483647^0'=__const_2147483647^post117, __const_256^0'=__const_256^post117, __const_257^0'=__const_257^post117, __const_429496^0'=__const_429496^post117, __const_50^0'=__const_50^post117, __const_53^0'=__const_53^post117, __const_65536^0'=__const_65536^post117, __const_8388607^0'=__const_8388607^post117, __const_8^0'=__const_8^post117, __const_9^0'=__const_9^post117, apsim_bound11113^0'=apsim_bound11113^post117, apsim_incnt^0'=apsim_incnt^post117, bits33^0'=bits33^post117, block_compress^0'=block_compress^post117, bytes_out^0'=bytes_out^post117, c37^0'=c37^post117, c7^0'=c7^post117, checkpoint^0'=checkpoint^post117, clear_flg^0'=clear_flg^post117, code31^0'=code31^post117, count^0'=count^post117, disp9^0'=disp9^post117, ent8^0'=ent8^post117, exit_stat^0'=exit_stat^post117, fcode5^0'=fcode5^post117, free_ent^0'=free_ent^post117, hshift11^0'=hshift11^post117, hsize^0'=hsize^post117, hsize___019^0'=hsize___019^post117, hsize___027^0'=hsize___027^post117, hsize_reg10^0'=hsize_reg10^post117, i21^0'=i21^post117, i29^0'=i29^post117, i3^0'=i3^post117, i41^0'=i41^post117, i45^0'=i45^post117, i6^0'=i6^post117, in_count^0'=in_count^post117, incnt^0'=incnt^post117, m122^0'=m122^post117, m130^0'=m130^post117, maxbits^0'=maxbits^post117, maxcode^0'=maxcode^post117, maxmaxcode^0'=maxmaxcode^post117, n40^0'=n40^post117, n44^0'=n44^post117, n_bits^0'=n_bits^post117, offset^0'=offset^post117, out_count^0'=out_count^post117, r_off32^0'=r_off32^post117, rat26^0'=rat26^post117, ratio^0'=ratio^post117, ret_getbyte18^0'=ret_getbyte18^post117, ret_getbyte25^0'=ret_getbyte25^post117, seed2^0'=seed2^post117, tabort4^0'=tabort4^post117, tmp12^0'=tmp12^post117, tmp___014^0'=tmp___014^post117, tmp___017^0'=tmp___017^post117, tmp___024^0'=tmp___024^post117, tmp___115^0'=tmp___115^post117, (-i41^post117+i41^0 == 0 /\ -n_bits^post117+n_bits^0 == 0 /\ -n44^post117+n44^0 == 0 /\ -i45^post117+i45^0 == 0 /\ -hsize^post117+hsize^0 == 0 /\ -m122^post117+m122^0 == 0 /\ -incnt^post117+incnt^0 == 0 /\ __const_16^0-__const_16^post117 == 0 /\ -__const_65536^post117+__const_65536^0 == 0 /\ __const_50^0-__const_50^post117 == 0 /\ hshift11^0-hshift11^post117 == 0 /\ __const_8^0-__const_8^post117 == 0 /\ -__const_429496^post117+__const_429496^0 == 0 /\ -i29^post117+i29^0 == 0 /\ -maxcode^post117+maxcode^0 == 0 /\ code31^0-code31^post117 == 0 /\ hsize___019^0-hsize___019^post117 == 0 /\ -apsim_bound11113^post117+apsim_bound11113^0 == 0 /\ -in_count^post117+in_count^0 == 0 /\ free_ent^0-free_ent^post117 == 0 /\ n40^0-n40^post117 == 0 /\ -__const_2147483647^post117+__const_2147483647^0 == 0 /\ -seed2^post117+seed2^0 == 0 /\ -tmp___115^post117+tmp___115^0 == 0 /\ -clear_flg^post117+clear_flg^0 == 0 /\ -hsize___027^post117+hsize___027^0 == 0 /\ -block_compress^post117+block_compress^0 == 0 /\ -c7^post117+c7^0 == 0 /\ bytes_out^0-bytes_out^post117 == 0 /\ ent8^0-ent8^post117 == 0 /\ checkpoint^0-checkpoint^post117 == 0 /\ __const_257^0-__const_257^post117 == 0 /\ offset^0-offset^post117 == 0 /\ maxbits^0-maxbits^post117 == 0 /\ i21^0-i21^post117 == 0 /\ __const_9^0-__const_9^post117 == 0 /\ i6^0-i6^post117 == 0 /\ tmp12^0-tmp12^post117 == 0 /\ -__const_8388607^post117+__const_8388607^0 == 0 /\ rat26^0-rat26^post117 == 0 /\ __const_256^0-__const_256^post117 == 0 /\ tabort4^0-tabort4^post117 == 0 /\ -fcode5^post117+fcode5^0 == 0 /\ -count^post117+count^0 == 0 /\ -disp9^post117+disp9^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post117 == 0 /\ exit_stat^0-exit_stat^post117 == 0 /\ -ratio^post117+ratio^0 == 0 /\ maxmaxcode^0-maxmaxcode^post117 == 0 /\ bits33^0-bits33^post117 == 0 /\ r_off32^0-r_off32^post117 == 0 /\ out_count^0-out_count^post117 == 0 /\ tmp___017^0-tmp___017^post117 == 0 /\ c37^0-c37^post117 == 0 /\ i3^0-i3^post117 == 0 /\ __const_53^0-__const_53^post117 == 0 /\ -__const_429496^0+ret_getbyte25^post117 == 0 /\ apsim_incnt^0-apsim_incnt^post117 == 0 /\ -tmp___014^post117+tmp___014^0 == 0 /\ -tmp___024^post117+tmp___024^0 == 0 /\ tmp___024^0 <= 0 /\ -hsize_reg10^post117+hsize_reg10^0 == 0 /\ m130^0-m130^post117 == 0 /\ -__const_10000^post117+__const_10000^0 == 0), cost: 1
	New rule:
	l70 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=__const_429496^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ tmp___024^0 <= 0), cost: 1
	
		propagated equality i41^post117 = i41^0
		
		propagated equality n_bits^post117 = n_bits^0
		
		propagated equality n44^post117 = n44^0
		
		propagated equality i45^post117 = i45^0
		
		propagated equality hsize^post117 = hsize^0
		
		propagated equality m122^post117 = m122^0
		
		propagated equality incnt^post117 = incnt^0
		
		propagated equality __const_16^post117 = __const_16^0
		
		propagated equality __const_65536^post117 = __const_65536^0
		
		propagated equality __const_50^post117 = __const_50^0
		
		propagated equality hshift11^post117 = hshift11^0
		
		propagated equality __const_8^post117 = __const_8^0
		
		propagated equality __const_429496^post117 = __const_429496^0
		
		propagated equality i29^post117 = i29^0
		
		propagated equality maxcode^post117 = maxcode^0
		
		propagated equality code31^post117 = code31^0
		
		propagated equality hsize___019^post117 = hsize___019^0
		
		propagated equality apsim_bound11113^post117 = apsim_bound11113^0
		
		propagated equality in_count^post117 = in_count^0
		
		propagated equality free_ent^post117 = free_ent^0
		
		propagated equality n40^post117 = n40^0
		
		propagated equality __const_2147483647^post117 = __const_2147483647^0
		
		propagated equality seed2^post117 = seed2^0
		
		propagated equality tmp___115^post117 = tmp___115^0
		
		propagated equality clear_flg^post117 = clear_flg^0
		
		propagated equality hsize___027^post117 = hsize___027^0
		
		propagated equality block_compress^post117 = block_compress^0
		
		propagated equality c7^post117 = c7^0
		
		propagated equality bytes_out^post117 = bytes_out^0
		
		propagated equality ent8^post117 = ent8^0
		
		propagated equality checkpoint^post117 = checkpoint^0
		
		propagated equality __const_257^post117 = __const_257^0
		
		propagated equality offset^post117 = offset^0
		
		propagated equality maxbits^post117 = maxbits^0
		
		propagated equality i21^post117 = i21^0
		
		propagated equality __const_9^post117 = __const_9^0
		
		propagated equality i6^post117 = i6^0
		
		propagated equality tmp12^post117 = tmp12^0
		
		propagated equality __const_8388607^post117 = __const_8388607^0
		
		propagated equality rat26^post117 = rat26^0
		
		propagated equality __const_256^post117 = __const_256^0
		
		propagated equality tabort4^post117 = tabort4^0
		
		propagated equality fcode5^post117 = fcode5^0
		
		propagated equality count^post117 = count^0
		
		propagated equality disp9^post117 = disp9^0
		
		propagated equality ret_getbyte18^post117 = ret_getbyte18^0
		
		propagated equality exit_stat^post117 = exit_stat^0
		
		propagated equality ratio^post117 = ratio^0
		
		propagated equality maxmaxcode^post117 = maxmaxcode^0
		
		propagated equality bits33^post117 = bits33^0
		
		propagated equality r_off32^post117 = r_off32^0
		
		propagated equality out_count^post117 = out_count^0
		
		propagated equality tmp___017^post117 = tmp___017^0
		
		propagated equality c37^post117 = c37^0
		
		propagated equality i3^post117 = i3^0
		
		propagated equality __const_53^post117 = __const_53^0
		
		propagated equality ret_getbyte25^post117 = __const_429496^0
		
		propagated equality apsim_incnt^post117 = apsim_incnt^0
		
		propagated equality tmp___014^post117 = tmp___014^0
		
		propagated equality tmp___024^post117 = tmp___024^0
		
		propagated equality hsize_reg10^post117 = hsize_reg10^0
		
		propagated equality m130^post117 = m130^0
		
		propagated equality __const_10000^post117 = __const_10000^0
		
	Simplified Guard

	Original rule:
	l70 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=__const_429496^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ tmp___024^0 <= 0), cost: 1
	New rule:
	l70 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=__const_429496^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, tmp___024^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l70 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=__const_429496^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, tmp___024^0 <= 0, cost: 1
	New rule:
	l70 -> l69 : ret_getbyte25^0'=__const_429496^0, tmp___024^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l70 -> l69 : __const_10000^0'=__const_10000^post118, __const_16^0'=__const_16^post118, __const_2147483647^0'=__const_2147483647^post118, __const_256^0'=__const_256^post118, __const_257^0'=__const_257^post118, __const_429496^0'=__const_429496^post118, __const_50^0'=__const_50^post118, __const_53^0'=__const_53^post118, __const_65536^0'=__const_65536^post118, __const_8388607^0'=__const_8388607^post118, __const_8^0'=__const_8^post118, __const_9^0'=__const_9^post118, apsim_bound11113^0'=apsim_bound11113^post118, apsim_incnt^0'=apsim_incnt^post118, bits33^0'=bits33^post118, block_compress^0'=block_compress^post118, bytes_out^0'=bytes_out^post118, c37^0'=c37^post118, c7^0'=c7^post118, checkpoint^0'=checkpoint^post118, clear_flg^0'=clear_flg^post118, code31^0'=code31^post118, count^0'=count^post118, disp9^0'=disp9^post118, ent8^0'=ent8^post118, exit_stat^0'=exit_stat^post118, fcode5^0'=fcode5^post118, free_ent^0'=free_ent^post118, hshift11^0'=hshift11^post118, hsize^0'=hsize^post118, hsize___019^0'=hsize___019^post118, hsize___027^0'=hsize___027^post118, hsize_reg10^0'=hsize_reg10^post118, i21^0'=i21^post118, i29^0'=i29^post118, i3^0'=i3^post118, i41^0'=i41^post118, i45^0'=i45^post118, i6^0'=i6^post118, in_count^0'=in_count^post118, incnt^0'=incnt^post118, m122^0'=m122^post118, m130^0'=m130^post118, maxbits^0'=maxbits^post118, maxcode^0'=maxcode^post118, maxmaxcode^0'=maxmaxcode^post118, n40^0'=n40^post118, n44^0'=n44^post118, n_bits^0'=n_bits^post118, offset^0'=offset^post118, out_count^0'=out_count^post118, r_off32^0'=r_off32^post118, rat26^0'=rat26^post118, ratio^0'=ratio^post118, ret_getbyte18^0'=ret_getbyte18^post118, ret_getbyte25^0'=ret_getbyte25^post118, seed2^0'=seed2^post118, tabort4^0'=tabort4^post118, tmp12^0'=tmp12^post118, tmp___014^0'=tmp___014^post118, tmp___017^0'=tmp___017^post118, tmp___024^0'=tmp___024^post118, tmp___115^0'=tmp___115^post118, (0 == 0 /\ -tabort4^post118+tabort4^0 == 0 /\ -r_off32^post118+r_off32^0 == 0 /\ -tmp___014^post118+tmp___014^0 == 0 /\ -exit_stat^post118+exit_stat^0 == 0 /\ __const_65536^0-__const_65536^post118 == 0 /\ -c7^post118+c7^0 == 0 /\ -bytes_out^post118+bytes_out^0 == 0 /\ -block_compress^post118+block_compress^0 == 0 /\ __const_53^0-__const_53^post118 == 0 /\ -seed2^post118+seed2^0 == 0 /\ -fcode5^post118+fcode5^0 == 0 /\ -i21^post118+i21^0 == 0 /\ m130^0-m130^post118 == 0 /\ -tmp___024^post118+tmp___024^0 == 0 /\ __const_8^0-__const_8^post118 == 0 /\ hsize___027^0-hsize___027^post118 == 0 /\ -ratio^post118+ratio^0 == 0 /\ i29^0-i29^post118 == 0 /\ __const_257^0-__const_257^post118 == 0 /\ -i41^post118+i41^0 == 0 /\ hsize___019^0-hsize___019^post118 == 0 /\ code31^0-code31^post118 == 0 /\ -n44^post118+n44^0 == 0 /\ -i6^post118+i6^0 == 0 /\ -__const_256^post118+__const_256^0 == 0 /\ hshift11^0-hshift11^post118 == 0 /\ -count^post118+count^0 == 0 /\ -clear_flg^post118+clear_flg^0 == 0 /\ -checkpoint^post118+checkpoint^0 == 0 /\ -__const_2147483647^post118+__const_2147483647^0 == 0 /\ -__const_10000^post118+__const_10000^0 == 0 /\ free_ent^0-free_ent^post118 == 0 /\ c37^0-c37^post118 == 0 /\ -__const_429496^post118+__const_429496^0 == 0 /\ -maxbits^post118+maxbits^0 == 0 /\ -maxcode^post118+maxcode^0 == 0 /\ tmp___017^0-tmp___017^post118 == 0 /\ out_count^0-out_count^post118 == 0 /\ maxmaxcode^0-maxmaxcode^post118 == 0 /\ ret_getbyte18^0-ret_getbyte18^post118 == 0 /\ -__const_50^post118+__const_50^0 == 0 /\ __const_9^0-__const_9^post118 == 0 /\ -hsize^post118+hsize^0 == 0 /\ -hsize_reg10^post118+hsize_reg10^0 == 0 /\ tmp___115^0-tmp___115^post118 == 0 /\ tmp12^0-tmp12^post118 == 0 /\ rat26^0-rat26^post118 == 0 /\ n40^0-n40^post118 == 0 /\ offset^0-offset^post118 == 0 /\ -m122^post118+m122^0 == 0 /\ -apsim_bound11113^post118+apsim_bound11113^0 == 0 /\ -__const_8388607^post118+__const_8388607^0 == 0 /\ bits33^0-bits33^post118 == 0 /\ ent8^0-ent8^post118 == 0 /\ 1-tmp___024^0 <= 0 /\ -i3^post118+i3^0 == 0 /\ __const_16^0-__const_16^post118 == 0 /\ apsim_incnt^0-apsim_incnt^post118 == 0 /\ -n_bits^post118+n_bits^0 == 0 /\ i45^0-i45^post118 == 0 /\ 1+incnt^post118-incnt^0 == 0 /\ -in_count^post118+in_count^0 == 0 /\ -disp9^post118+disp9^0 == 0), cost: 1
	New rule:
	l70 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=-1+incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^post118, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-tmp___024^0 <= 0), cost: 1
	
		propagated equality tabort4^post118 = tabort4^0
		
		propagated equality r_off32^post118 = r_off32^0
		
		propagated equality tmp___014^post118 = tmp___014^0
		
		propagated equality exit_stat^post118 = exit_stat^0
		
		propagated equality __const_65536^post118 = __const_65536^0
		
		propagated equality c7^post118 = c7^0
		
		propagated equality bytes_out^post118 = bytes_out^0
		
		propagated equality block_compress^post118 = block_compress^0
		
		propagated equality __const_53^post118 = __const_53^0
		
		propagated equality seed2^post118 = seed2^0
		
		propagated equality fcode5^post118 = fcode5^0
		
		propagated equality i21^post118 = i21^0
		
		propagated equality m130^post118 = m130^0
		
		propagated equality tmp___024^post118 = tmp___024^0
		
		propagated equality __const_8^post118 = __const_8^0
		
		propagated equality hsize___027^post118 = hsize___027^0
		
		propagated equality ratio^post118 = ratio^0
		
		propagated equality i29^post118 = i29^0
		
		propagated equality __const_257^post118 = __const_257^0
		
		propagated equality i41^post118 = i41^0
		
		propagated equality hsize___019^post118 = hsize___019^0
		
		propagated equality code31^post118 = code31^0
		
		propagated equality n44^post118 = n44^0
		
		propagated equality i6^post118 = i6^0
		
		propagated equality __const_256^post118 = __const_256^0
		
		propagated equality hshift11^post118 = hshift11^0
		
		propagated equality count^post118 = count^0
		
		propagated equality clear_flg^post118 = clear_flg^0
		
		propagated equality checkpoint^post118 = checkpoint^0
		
		propagated equality __const_2147483647^post118 = __const_2147483647^0
		
		propagated equality __const_10000^post118 = __const_10000^0
		
		propagated equality free_ent^post118 = free_ent^0
		
		propagated equality c37^post118 = c37^0
		
		propagated equality __const_429496^post118 = __const_429496^0
		
		propagated equality maxbits^post118 = maxbits^0
		
		propagated equality maxcode^post118 = maxcode^0
		
		propagated equality tmp___017^post118 = tmp___017^0
		
		propagated equality out_count^post118 = out_count^0
		
		propagated equality maxmaxcode^post118 = maxmaxcode^0
		
		propagated equality ret_getbyte18^post118 = ret_getbyte18^0
		
		propagated equality __const_50^post118 = __const_50^0
		
		propagated equality __const_9^post118 = __const_9^0
		
		propagated equality hsize^post118 = hsize^0
		
		propagated equality hsize_reg10^post118 = hsize_reg10^0
		
		propagated equality tmp___115^post118 = tmp___115^0
		
		propagated equality tmp12^post118 = tmp12^0
		
		propagated equality rat26^post118 = rat26^0
		
		propagated equality n40^post118 = n40^0
		
		propagated equality offset^post118 = offset^0
		
		propagated equality m122^post118 = m122^0
		
		propagated equality apsim_bound11113^post118 = apsim_bound11113^0
		
		propagated equality __const_8388607^post118 = __const_8388607^0
		
		propagated equality bits33^post118 = bits33^0
		
		propagated equality ent8^post118 = ent8^0
		
		propagated equality i3^post118 = i3^0
		
		propagated equality __const_16^post118 = __const_16^0
		
		propagated equality apsim_incnt^post118 = apsim_incnt^0
		
		propagated equality n_bits^post118 = n_bits^0
		
		propagated equality i45^post118 = i45^0
		
		propagated equality incnt^post118 = -1+incnt^0
		
		propagated equality in_count^post118 = in_count^0
		
		propagated equality disp9^post118 = disp9^0
		
	Simplified Guard

	Original rule:
	l70 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=-1+incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^post118, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-tmp___024^0 <= 0), cost: 1
	New rule:
	l70 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=-1+incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^post118, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-tmp___024^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l70 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=-1+incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^post118, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-tmp___024^0 <= 0, cost: 1
	New rule:
	l70 -> l69 : incnt^0'=-1+incnt^0, ret_getbyte25^0'=ret_getbyte25^post118, 1-tmp___024^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l71 -> l69 : __const_10000^0'=__const_10000^post119, __const_16^0'=__const_16^post119, __const_2147483647^0'=__const_2147483647^post119, __const_256^0'=__const_256^post119, __const_257^0'=__const_257^post119, __const_429496^0'=__const_429496^post119, __const_50^0'=__const_50^post119, __const_53^0'=__const_53^post119, __const_65536^0'=__const_65536^post119, __const_8388607^0'=__const_8388607^post119, __const_8^0'=__const_8^post119, __const_9^0'=__const_9^post119, apsim_bound11113^0'=apsim_bound11113^post119, apsim_incnt^0'=apsim_incnt^post119, bits33^0'=bits33^post119, block_compress^0'=block_compress^post119, bytes_out^0'=bytes_out^post119, c37^0'=c37^post119, c7^0'=c7^post119, checkpoint^0'=checkpoint^post119, clear_flg^0'=clear_flg^post119, code31^0'=code31^post119, count^0'=count^post119, disp9^0'=disp9^post119, ent8^0'=ent8^post119, exit_stat^0'=exit_stat^post119, fcode5^0'=fcode5^post119, free_ent^0'=free_ent^post119, hshift11^0'=hshift11^post119, hsize^0'=hsize^post119, hsize___019^0'=hsize___019^post119, hsize___027^0'=hsize___027^post119, hsize_reg10^0'=hsize_reg10^post119, i21^0'=i21^post119, i29^0'=i29^post119, i3^0'=i3^post119, i41^0'=i41^post119, i45^0'=i45^post119, i6^0'=i6^post119, in_count^0'=in_count^post119, incnt^0'=incnt^post119, m122^0'=m122^post119, m130^0'=m130^post119, maxbits^0'=maxbits^post119, maxcode^0'=maxcode^post119, maxmaxcode^0'=maxmaxcode^post119, n40^0'=n40^post119, n44^0'=n44^post119, n_bits^0'=n_bits^post119, offset^0'=offset^post119, out_count^0'=out_count^post119, r_off32^0'=r_off32^post119, rat26^0'=rat26^post119, ratio^0'=ratio^post119, ret_getbyte18^0'=ret_getbyte18^post119, ret_getbyte25^0'=ret_getbyte25^post119, seed2^0'=seed2^post119, tabort4^0'=tabort4^post119, tmp12^0'=tmp12^post119, tmp___014^0'=tmp___014^post119, tmp___017^0'=tmp___017^post119, tmp___024^0'=tmp___024^post119, tmp___115^0'=tmp___115^post119, (ret_getbyte25^post119-__const_429496^0 == 0 /\ m130^0-m130^post119 == 0 /\ bits33^0-bits33^post119 == 0 /\ -ratio^post119+ratio^0 == 0 /\ -ret_getbyte18^post119+ret_getbyte18^0 == 0 /\ -in_count^post119+in_count^0 == 0 /\ -i6^post119+i6^0 == 0 /\ n44^0-n44^post119 == 0 /\ -__const_8388607^post119+__const_8388607^0 == 0 /\ -__const_256^post119+__const_256^0 == 0 /\ -__const_10000^post119+__const_10000^0 == 0 /\ code31^0-code31^post119 == 0 /\ __const_65536^0-__const_65536^post119 == 0 /\ apsim_incnt^0-apsim_incnt^post119 == 0 /\ i29^0-i29^post119 == 0 /\ -clear_flg^post119+clear_flg^0 == 0 /\ ent8^0-ent8^post119 == 0 /\ -hsize___019^post119+hsize___019^0 == 0 /\ -hsize_reg10^post119+hsize_reg10^0 == 0 /\ -exit_stat^post119+exit_stat^0 == 0 /\ -disp9^post119+disp9^0 == 0 /\ c37^0-c37^post119 == 0 /\ tmp___014^0-tmp___014^post119 == 0 /\ -m122^post119+m122^0 == 0 /\ __const_257^0-__const_257^post119 == 0 /\ __const_53^0-__const_53^post119 == 0 /\ -maxbits^post119+maxbits^0 == 0 /\ tmp12^0-tmp12^post119 == 0 /\ hsize___027^0-hsize___027^post119 == 0 /\ __const_8^0-__const_8^post119 == 0 /\ c7^0-c7^post119 == 0 /\ -i21^post119+i21^0 == 0 /\ __const_16^0-__const_16^post119 == 0 /\ hshift11^0-hshift11^post119 == 0 /\ tmp___115^0-tmp___115^post119 == 0 /\ -tmp___024^post119+tmp___024^0 == 0 /\ -tmp___017^post119+tmp___017^0 == 0 /\ -checkpoint^post119+checkpoint^0 == 0 /\ -bytes_out^post119+bytes_out^0 == 0 /\ -block_compress^post119+block_compress^0 == 0 /\ -seed2^post119+seed2^0 == 0 /\ -n_bits^post119+n_bits^0 == 0 /\ -tabort4^post119+tabort4^0 == 0 /\ __const_429496^0-__const_429496^post119 == 0 /\ i45^0-i45^post119 == 0 /\ free_ent^0-free_ent^post119 == 0 /\ rat26^0-rat26^post119 == 0 /\ out_count^0-out_count^post119 == 0 /\ __const_9^0-__const_9^post119 == 0 /\ -incnt^post119+incnt^0 == 0 /\ -count^post119+count^0 == 0 /\ -r_off32^post119+r_off32^0 == 0 /\ -hsize^post119+hsize^0 == 0 /\ -i3^post119+i3^0 == 0 /\ offset^0-offset^post119 == 0 /\ -apsim_bound11113^post119+apsim_bound11113^0 == 0 /\ -__const_50^post119+__const_50^0 == 0 /\ maxmaxcode^0-maxmaxcode^post119 == 0 /\ __const_2147483647^0-__const_2147483647^post119 == 0 /\ -maxcode^post119+maxcode^0 == 0 /\ -i41^post119+i41^0 == 0 /\ -fcode5^post119+fcode5^0 == 0 /\ incnt^0 <= 0 /\ -n40^post119+n40^0 == 0), cost: 1
	New rule:
	l71 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=__const_429496^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ incnt^0 <= 0), cost: 1
	
		propagated equality ret_getbyte25^post119 = __const_429496^0
		
		propagated equality m130^post119 = m130^0
		
		propagated equality bits33^post119 = bits33^0
		
		propagated equality ratio^post119 = ratio^0
		
		propagated equality ret_getbyte18^post119 = ret_getbyte18^0
		
		propagated equality in_count^post119 = in_count^0
		
		propagated equality i6^post119 = i6^0
		
		propagated equality n44^post119 = n44^0
		
		propagated equality __const_8388607^post119 = __const_8388607^0
		
		propagated equality __const_256^post119 = __const_256^0
		
		propagated equality __const_10000^post119 = __const_10000^0
		
		propagated equality code31^post119 = code31^0
		
		propagated equality __const_65536^post119 = __const_65536^0
		
		propagated equality apsim_incnt^post119 = apsim_incnt^0
		
		propagated equality i29^post119 = i29^0
		
		propagated equality clear_flg^post119 = clear_flg^0
		
		propagated equality ent8^post119 = ent8^0
		
		propagated equality hsize___019^post119 = hsize___019^0
		
		propagated equality hsize_reg10^post119 = hsize_reg10^0
		
		propagated equality exit_stat^post119 = exit_stat^0
		
		propagated equality disp9^post119 = disp9^0
		
		propagated equality c37^post119 = c37^0
		
		propagated equality tmp___014^post119 = tmp___014^0
		
		propagated equality m122^post119 = m122^0
		
		propagated equality __const_257^post119 = __const_257^0
		
		propagated equality __const_53^post119 = __const_53^0
		
		propagated equality maxbits^post119 = maxbits^0
		
		propagated equality tmp12^post119 = tmp12^0
		
		propagated equality hsize___027^post119 = hsize___027^0
		
		propagated equality __const_8^post119 = __const_8^0
		
		propagated equality c7^post119 = c7^0
		
		propagated equality i21^post119 = i21^0
		
		propagated equality __const_16^post119 = __const_16^0
		
		propagated equality hshift11^post119 = hshift11^0
		
		propagated equality tmp___115^post119 = tmp___115^0
		
		propagated equality tmp___024^post119 = tmp___024^0
		
		propagated equality tmp___017^post119 = tmp___017^0
		
		propagated equality checkpoint^post119 = checkpoint^0
		
		propagated equality bytes_out^post119 = bytes_out^0
		
		propagated equality block_compress^post119 = block_compress^0
		
		propagated equality seed2^post119 = seed2^0
		
		propagated equality n_bits^post119 = n_bits^0
		
		propagated equality tabort4^post119 = tabort4^0
		
		propagated equality __const_429496^post119 = __const_429496^0
		
		propagated equality i45^post119 = i45^0
		
		propagated equality free_ent^post119 = free_ent^0
		
		propagated equality rat26^post119 = rat26^0
		
		propagated equality out_count^post119 = out_count^0
		
		propagated equality __const_9^post119 = __const_9^0
		
		propagated equality incnt^post119 = incnt^0
		
		propagated equality count^post119 = count^0
		
		propagated equality r_off32^post119 = r_off32^0
		
		propagated equality hsize^post119 = hsize^0
		
		propagated equality i3^post119 = i3^0
		
		propagated equality offset^post119 = offset^0
		
		propagated equality apsim_bound11113^post119 = apsim_bound11113^0
		
		propagated equality __const_50^post119 = __const_50^0
		
		propagated equality maxmaxcode^post119 = maxmaxcode^0
		
		propagated equality __const_2147483647^post119 = __const_2147483647^0
		
		propagated equality maxcode^post119 = maxcode^0
		
		propagated equality i41^post119 = i41^0
		
		propagated equality fcode5^post119 = fcode5^0
		
		propagated equality n40^post119 = n40^0
		
	Simplified Guard

	Original rule:
	l71 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=__const_429496^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ incnt^0 <= 0), cost: 1
	New rule:
	l71 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=__const_429496^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, incnt^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l71 -> l69 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=__const_429496^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, incnt^0 <= 0, cost: 1
	New rule:
	l71 -> l69 : ret_getbyte25^0'=__const_429496^0, incnt^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l71 -> l70 : __const_10000^0'=__const_10000^post120, __const_16^0'=__const_16^post120, __const_2147483647^0'=__const_2147483647^post120, __const_256^0'=__const_256^post120, __const_257^0'=__const_257^post120, __const_429496^0'=__const_429496^post120, __const_50^0'=__const_50^post120, __const_53^0'=__const_53^post120, __const_65536^0'=__const_65536^post120, __const_8388607^0'=__const_8388607^post120, __const_8^0'=__const_8^post120, __const_9^0'=__const_9^post120, apsim_bound11113^0'=apsim_bound11113^post120, apsim_incnt^0'=apsim_incnt^post120, bits33^0'=bits33^post120, block_compress^0'=block_compress^post120, bytes_out^0'=bytes_out^post120, c37^0'=c37^post120, c7^0'=c7^post120, checkpoint^0'=checkpoint^post120, clear_flg^0'=clear_flg^post120, code31^0'=code31^post120, count^0'=count^post120, disp9^0'=disp9^post120, ent8^0'=ent8^post120, exit_stat^0'=exit_stat^post120, fcode5^0'=fcode5^post120, free_ent^0'=free_ent^post120, hshift11^0'=hshift11^post120, hsize^0'=hsize^post120, hsize___019^0'=hsize___019^post120, hsize___027^0'=hsize___027^post120, hsize_reg10^0'=hsize_reg10^post120, i21^0'=i21^post120, i29^0'=i29^post120, i3^0'=i3^post120, i41^0'=i41^post120, i45^0'=i45^post120, i6^0'=i6^post120, in_count^0'=in_count^post120, incnt^0'=incnt^post120, m122^0'=m122^post120, m130^0'=m130^post120, maxbits^0'=maxbits^post120, maxcode^0'=maxcode^post120, maxmaxcode^0'=maxmaxcode^post120, n40^0'=n40^post120, n44^0'=n44^post120, n_bits^0'=n_bits^post120, offset^0'=offset^post120, out_count^0'=out_count^post120, r_off32^0'=r_off32^post120, rat26^0'=rat26^post120, ratio^0'=ratio^post120, ret_getbyte18^0'=ret_getbyte18^post120, ret_getbyte25^0'=ret_getbyte25^post120, seed2^0'=seed2^post120, tabort4^0'=tabort4^post120, tmp12^0'=tmp12^post120, tmp___014^0'=tmp___014^post120, tmp___017^0'=tmp___017^post120, tmp___024^0'=tmp___024^post120, tmp___115^0'=tmp___115^post120, (1-apsim_incnt^0+apsim_incnt^post120 == 0 /\ -m122^post120+m122^0 == 0 /\ ent8^0-ent8^post120 == 0 /\ maxcode^0-maxcode^post120 == 0 /\ offset^0-offset^post120 == 0 /\ -incnt^post120+incnt^0 == 0 /\ __const_9^0-__const_9^post120 == 0 /\ -n_bits^post120+n_bits^0 == 0 /\ c37^0-c37^post120 == 0 /\ exit_stat^0-exit_stat^post120 == 0 /\ hsize___027^0-hsize___027^post120 == 0 /\ bits33^0-bits33^post120 == 0 /\ maxmaxcode^0-maxmaxcode^post120 == 0 /\ -r_off32^post120+r_off32^0 == 0 /\ -apsim_incnt^0+tmp___024^post120 == 0 /\ -n40^post120+n40^0 == 0 /\ m130^0-m130^post120 == 0 /\ c7^0-c7^post120 == 0 /\ -in_count^post120+in_count^0 == 0 /\ -apsim_bound11113^post120+apsim_bound11113^0 == 0 /\ -__const_50^post120+__const_50^0 == 0 /\ -ret_getbyte18^post120+ret_getbyte18^0 == 0 /\ -__const_256^post120+__const_256^0 == 0 /\ -checkpoint^post120+checkpoint^0 == 0 /\ __const_65536^0-__const_65536^post120 == 0 /\ tmp___115^0-tmp___115^post120 == 0 /\ ret_getbyte25^0-ret_getbyte25^post120 == 0 /\ -hsize^post120+hsize^0 == 0 /\ n44^0-n44^post120 == 0 /\ i45^0-i45^post120 == 0 /\ -seed2^post120+seed2^0 == 0 /\ -tabort4^post120+tabort4^0 == 0 /\ __const_429496^0-__const_429496^post120 == 0 /\ tmp12^0-tmp12^post120 == 0 /\ -__const_8388607^post120+__const_8388607^0 == 0 /\ __const_2147483647^0-__const_2147483647^post120 == 0 /\ tmp___017^0-tmp___017^post120 == 0 /\ -count^post120+count^0 == 0 /\ __const_8^0-__const_8^post120 == 0 /\ -fcode5^post120+fcode5^0 == 0 /\ rat26^0-rat26^post120 == 0 /\ -disp9^post120+disp9^0 == 0 /\ -i29^post120+i29^0 == 0 /\ __const_16^0-__const_16^post120 == 0 /\ -i3^post120+i3^0 == 0 /\ __const_53^0-__const_53^post120 == 0 /\ -i41^post120+i41^0 == 0 /\ -clear_flg^post120+clear_flg^0 == 0 /\ -i6^post120+i6^0 == 0 /\ -bytes_out^post120+bytes_out^0 == 0 /\ -maxbits^post120+maxbits^0 == 0 /\ __const_257^0-__const_257^post120 == 0 /\ code31^0-code31^post120 == 0 /\ free_ent^0-free_ent^post120 == 0 /\ hshift11^0-hshift11^post120 == 0 /\ -ratio^post120+ratio^0 == 0 /\ -i21^post120+i21^0 == 0 /\ out_count^0-out_count^post120 == 0 /\ block_compress^0-block_compress^post120 == 0 /\ -hsize_reg10^post120+hsize_reg10^0 == 0 /\ -__const_10000^post120+__const_10000^0 == 0 /\ 1-incnt^0 <= 0 /\ -hsize___019^post120+hsize___019^0 == 0 /\ -tmp___014^post120+tmp___014^0 == 0), cost: 1
	New rule:
	l71 -> l70 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=-1+apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=apsim_incnt^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-incnt^0 <= 0), cost: 1
	
		propagated equality apsim_incnt^post120 = -1+apsim_incnt^0
		
		propagated equality m122^post120 = m122^0
		
		propagated equality ent8^post120 = ent8^0
		
		propagated equality maxcode^post120 = maxcode^0
		
		propagated equality offset^post120 = offset^0
		
		propagated equality incnt^post120 = incnt^0
		
		propagated equality __const_9^post120 = __const_9^0
		
		propagated equality n_bits^post120 = n_bits^0
		
		propagated equality c37^post120 = c37^0
		
		propagated equality exit_stat^post120 = exit_stat^0
		
		propagated equality hsize___027^post120 = hsize___027^0
		
		propagated equality bits33^post120 = bits33^0
		
		propagated equality maxmaxcode^post120 = maxmaxcode^0
		
		propagated equality r_off32^post120 = r_off32^0
		
		propagated equality tmp___024^post120 = apsim_incnt^0
		
		propagated equality n40^post120 = n40^0
		
		propagated equality m130^post120 = m130^0
		
		propagated equality c7^post120 = c7^0
		
		propagated equality in_count^post120 = in_count^0
		
		propagated equality apsim_bound11113^post120 = apsim_bound11113^0
		
		propagated equality __const_50^post120 = __const_50^0
		
		propagated equality ret_getbyte18^post120 = ret_getbyte18^0
		
		propagated equality __const_256^post120 = __const_256^0
		
		propagated equality checkpoint^post120 = checkpoint^0
		
		propagated equality __const_65536^post120 = __const_65536^0
		
		propagated equality tmp___115^post120 = tmp___115^0
		
		propagated equality ret_getbyte25^post120 = ret_getbyte25^0
		
		propagated equality hsize^post120 = hsize^0
		
		propagated equality n44^post120 = n44^0
		
		propagated equality i45^post120 = i45^0
		
		propagated equality seed2^post120 = seed2^0
		
		propagated equality tabort4^post120 = tabort4^0
		
		propagated equality __const_429496^post120 = __const_429496^0
		
		propagated equality tmp12^post120 = tmp12^0
		
		propagated equality __const_8388607^post120 = __const_8388607^0
		
		propagated equality __const_2147483647^post120 = __const_2147483647^0
		
		propagated equality tmp___017^post120 = tmp___017^0
		
		propagated equality count^post120 = count^0
		
		propagated equality __const_8^post120 = __const_8^0
		
		propagated equality fcode5^post120 = fcode5^0
		
		propagated equality rat26^post120 = rat26^0
		
		propagated equality disp9^post120 = disp9^0
		
		propagated equality i29^post120 = i29^0
		
		propagated equality __const_16^post120 = __const_16^0
		
		propagated equality i3^post120 = i3^0
		
		propagated equality __const_53^post120 = __const_53^0
		
		propagated equality i41^post120 = i41^0
		
		propagated equality clear_flg^post120 = clear_flg^0
		
		propagated equality i6^post120 = i6^0
		
		propagated equality bytes_out^post120 = bytes_out^0
		
		propagated equality maxbits^post120 = maxbits^0
		
		propagated equality __const_257^post120 = __const_257^0
		
		propagated equality code31^post120 = code31^0
		
		propagated equality free_ent^post120 = free_ent^0
		
		propagated equality hshift11^post120 = hshift11^0
		
		propagated equality ratio^post120 = ratio^0
		
		propagated equality i21^post120 = i21^0
		
		propagated equality out_count^post120 = out_count^0
		
		propagated equality block_compress^post120 = block_compress^0
		
		propagated equality hsize_reg10^post120 = hsize_reg10^0
		
		propagated equality __const_10000^post120 = __const_10000^0
		
		propagated equality hsize___019^post120 = hsize___019^0
		
		propagated equality tmp___014^post120 = tmp___014^0
		
	Simplified Guard

	Original rule:
	l71 -> l70 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=-1+apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=apsim_incnt^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-incnt^0 <= 0), cost: 1
	New rule:
	l71 -> l70 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=-1+apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=apsim_incnt^0, tmp___115^0'=tmp___115^0, 1-incnt^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l71 -> l70 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=-1+apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=apsim_incnt^0, tmp___115^0'=tmp___115^0, 1-incnt^0 <= 0, cost: 1
	New rule:
	l71 -> l70 : apsim_incnt^0'=-1+apsim_incnt^0, tmp___024^0'=apsim_incnt^0, 1-incnt^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l25 : __const_10000^0'=__const_10000^post121, __const_16^0'=__const_16^post121, __const_2147483647^0'=__const_2147483647^post121, __const_256^0'=__const_256^post121, __const_257^0'=__const_257^post121, __const_429496^0'=__const_429496^post121, __const_50^0'=__const_50^post121, __const_53^0'=__const_53^post121, __const_65536^0'=__const_65536^post121, __const_8388607^0'=__const_8388607^post121, __const_8^0'=__const_8^post121, __const_9^0'=__const_9^post121, apsim_bound11113^0'=apsim_bound11113^post121, apsim_incnt^0'=apsim_incnt^post121, bits33^0'=bits33^post121, block_compress^0'=block_compress^post121, bytes_out^0'=bytes_out^post121, c37^0'=c37^post121, c7^0'=c7^post121, checkpoint^0'=checkpoint^post121, clear_flg^0'=clear_flg^post121, code31^0'=code31^post121, count^0'=count^post121, disp9^0'=disp9^post121, ent8^0'=ent8^post121, exit_stat^0'=exit_stat^post121, fcode5^0'=fcode5^post121, free_ent^0'=free_ent^post121, hshift11^0'=hshift11^post121, hsize^0'=hsize^post121, hsize___019^0'=hsize___019^post121, hsize___027^0'=hsize___027^post121, hsize_reg10^0'=hsize_reg10^post121, i21^0'=i21^post121, i29^0'=i29^post121, i3^0'=i3^post121, i41^0'=i41^post121, i45^0'=i45^post121, i6^0'=i6^post121, in_count^0'=in_count^post121, incnt^0'=incnt^post121, m122^0'=m122^post121, m130^0'=m130^post121, maxbits^0'=maxbits^post121, maxcode^0'=maxcode^post121, maxmaxcode^0'=maxmaxcode^post121, n40^0'=n40^post121, n44^0'=n44^post121, n_bits^0'=n_bits^post121, offset^0'=offset^post121, out_count^0'=out_count^post121, r_off32^0'=r_off32^post121, rat26^0'=rat26^post121, ratio^0'=ratio^post121, ret_getbyte18^0'=ret_getbyte18^post121, ret_getbyte25^0'=ret_getbyte25^post121, seed2^0'=seed2^post121, tabort4^0'=tabort4^post121, tmp12^0'=tmp12^post121, tmp___014^0'=tmp___014^post121, tmp___017^0'=tmp___017^post121, tmp___024^0'=tmp___024^post121, tmp___115^0'=tmp___115^post121, (-i21^post121+i21^0 == 0 /\ -c7^post121+c7^0 == 0 /\ __const_50^0-__const_50^post121 == 0 /\ __const_256^0-__const_256^post121 == 0 /\ -clear_flg^post121+clear_flg^0 == 0 /\ __const_53^0-__const_53^post121 == 0 /\ -tmp___014^post121+tmp___014^0 == 0 /\ -tmp___024^post121+tmp___024^0 == 0 /\ -seed2^post121+seed2^0 == 0 /\ -tmp___115^post121+tmp___115^0 == 0 /\ -block_compress^post121+block_compress^0 == 0 /\ count^0-count^post121 == 0 /\ -ratio^post121+ratio^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post121 == 0 /\ tabort4^0-tabort4^post121 == 0 /\ -offset^post121+offset^0 == 0 /\ m122^0-m122^post121 == 0 /\ hsize___027^0-hsize___027^post121 == 0 /\ -apsim_incnt^post121+apsim_incnt^0 == 0 /\ hshift11^0-hshift11^post121 == 0 /\ -hsize^post121+hsize^0 == 0 /\ -code31^post121+code31^0 == 0 /\ -incnt^post121+incnt^0 == 0 /\ __const_257^0-__const_257^post121 == 0 /\ -ent8^post121+ent8^0 == 0 /\ -__const_429496^post121+__const_429496^0 == 0 /\ bytes_out^0-bytes_out^post121 == 0 /\ i3^0-i3^post121 == 0 /\ -__const_65536^post121+__const_65536^0 == 0 /\ -m130^post121+m130^0 == 0 /\ -i45^post121+i45^0 == 0 /\ r_off32^0-r_off32^post121 == 0 /\ out_count^0-out_count^post121 == 0 /\ exit_stat^0-exit_stat^post121 == 0 /\ -n40^post121+n40^0 == 0 /\ maxmaxcode^0-maxmaxcode^post121 == 0 /\ -in_count^post121+in_count^0 == 0 /\ -__const_9^post121+__const_9^0 == 0 /\ maxcode^0-maxcode^post121 == 0 /\ tmp___017^0-tmp___017^post121 == 0 /\ apsim_bound11113^0-apsim_bound11113^post121 == 0 /\ fcode5^0-fcode5^post121 == 0 /\ c37^0-c37^post121 == 0 /\ -__const_2147483647^post121+__const_2147483647^0 == 0 /\ tmp12^0-tmp12^post121 == 0 /\ -hsize_reg10^post121+hsize_reg10^0 == 0 /\ i6^0-i6^post121 == 0 /\ -rat26^post121+rat26^0 == 0 /\ -hsize___019^post121+hsize___019^0 == 0 /\ __const_16^0-__const_16^post121 == 0 /\ bits33^0-bits33^post121 == 0 /\ __const_10000^0-__const_10000^post121 == 0 /\ n44^0-n44^post121 == 0 /\ -__const_8^post121+__const_8^0 == 0 /\ -__const_8388607^post121+__const_8388607^0 == 0 /\ -disp9^post121+disp9^0 == 0 /\ -free_ent^post121+free_ent^0 == 0 /\ -ret_getbyte18^post121+ret_getbyte18^0 == 0 /\ -i29^post121+i29^0 == 0 /\ -i41^post121+i41^0 == 0 /\ checkpoint^0-checkpoint^post121 == 0 /\ -maxbits^post121+maxbits^0 == 0 /\ incnt^0 <= 0 /\ n_bits^0-n_bits^post121 == 0), cost: 1
	New rule:
	l5 -> l25 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ incnt^0 <= 0), cost: 1
	
		propagated equality i21^post121 = i21^0
		
		propagated equality c7^post121 = c7^0
		
		propagated equality __const_50^post121 = __const_50^0
		
		propagated equality __const_256^post121 = __const_256^0
		
		propagated equality clear_flg^post121 = clear_flg^0
		
		propagated equality __const_53^post121 = __const_53^0
		
		propagated equality tmp___014^post121 = tmp___014^0
		
		propagated equality tmp___024^post121 = tmp___024^0
		
		propagated equality seed2^post121 = seed2^0
		
		propagated equality tmp___115^post121 = tmp___115^0
		
		propagated equality block_compress^post121 = block_compress^0
		
		propagated equality count^post121 = count^0
		
		propagated equality ratio^post121 = ratio^0
		
		propagated equality ret_getbyte25^post121 = ret_getbyte25^0
		
		propagated equality tabort4^post121 = tabort4^0
		
		propagated equality offset^post121 = offset^0
		
		propagated equality m122^post121 = m122^0
		
		propagated equality hsize___027^post121 = hsize___027^0
		
		propagated equality apsim_incnt^post121 = apsim_incnt^0
		
		propagated equality hshift11^post121 = hshift11^0
		
		propagated equality hsize^post121 = hsize^0
		
		propagated equality code31^post121 = code31^0
		
		propagated equality incnt^post121 = incnt^0
		
		propagated equality __const_257^post121 = __const_257^0
		
		propagated equality ent8^post121 = ent8^0
		
		propagated equality __const_429496^post121 = __const_429496^0
		
		propagated equality bytes_out^post121 = bytes_out^0
		
		propagated equality i3^post121 = i3^0
		
		propagated equality __const_65536^post121 = __const_65536^0
		
		propagated equality m130^post121 = m130^0
		
		propagated equality i45^post121 = i45^0
		
		propagated equality r_off32^post121 = r_off32^0
		
		propagated equality out_count^post121 = out_count^0
		
		propagated equality exit_stat^post121 = exit_stat^0
		
		propagated equality n40^post121 = n40^0
		
		propagated equality maxmaxcode^post121 = maxmaxcode^0
		
		propagated equality in_count^post121 = in_count^0
		
		propagated equality __const_9^post121 = __const_9^0
		
		propagated equality maxcode^post121 = maxcode^0
		
		propagated equality tmp___017^post121 = tmp___017^0
		
		propagated equality apsim_bound11113^post121 = apsim_bound11113^0
		
		propagated equality fcode5^post121 = fcode5^0
		
		propagated equality c37^post121 = c37^0
		
		propagated equality __const_2147483647^post121 = __const_2147483647^0
		
		propagated equality tmp12^post121 = tmp12^0
		
		propagated equality hsize_reg10^post121 = hsize_reg10^0
		
		propagated equality i6^post121 = i6^0
		
		propagated equality rat26^post121 = rat26^0
		
		propagated equality hsize___019^post121 = hsize___019^0
		
		propagated equality __const_16^post121 = __const_16^0
		
		propagated equality bits33^post121 = bits33^0
		
		propagated equality __const_10000^post121 = __const_10000^0
		
		propagated equality n44^post121 = n44^0
		
		propagated equality __const_8^post121 = __const_8^0
		
		propagated equality __const_8388607^post121 = __const_8388607^0
		
		propagated equality disp9^post121 = disp9^0
		
		propagated equality free_ent^post121 = free_ent^0
		
		propagated equality ret_getbyte18^post121 = ret_getbyte18^0
		
		propagated equality i29^post121 = i29^0
		
		propagated equality i41^post121 = i41^0
		
		propagated equality checkpoint^post121 = checkpoint^0
		
		propagated equality maxbits^post121 = maxbits^0
		
		propagated equality n_bits^post121 = n_bits^0
		
	Simplified Guard

	Original rule:
	l5 -> l25 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ incnt^0 <= 0), cost: 1
	New rule:
	l5 -> l25 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, incnt^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l25 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, incnt^0 <= 0, cost: 1
	New rule:
	l5 -> l25 : incnt^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l71 : __const_10000^0'=__const_10000^post122, __const_16^0'=__const_16^post122, __const_2147483647^0'=__const_2147483647^post122, __const_256^0'=__const_256^post122, __const_257^0'=__const_257^post122, __const_429496^0'=__const_429496^post122, __const_50^0'=__const_50^post122, __const_53^0'=__const_53^post122, __const_65536^0'=__const_65536^post122, __const_8388607^0'=__const_8388607^post122, __const_8^0'=__const_8^post122, __const_9^0'=__const_9^post122, apsim_bound11113^0'=apsim_bound11113^post122, apsim_incnt^0'=apsim_incnt^post122, bits33^0'=bits33^post122, block_compress^0'=block_compress^post122, bytes_out^0'=bytes_out^post122, c37^0'=c37^post122, c7^0'=c7^post122, checkpoint^0'=checkpoint^post122, clear_flg^0'=clear_flg^post122, code31^0'=code31^post122, count^0'=count^post122, disp9^0'=disp9^post122, ent8^0'=ent8^post122, exit_stat^0'=exit_stat^post122, fcode5^0'=fcode5^post122, free_ent^0'=free_ent^post122, hshift11^0'=hshift11^post122, hsize^0'=hsize^post122, hsize___019^0'=hsize___019^post122, hsize___027^0'=hsize___027^post122, hsize_reg10^0'=hsize_reg10^post122, i21^0'=i21^post122, i29^0'=i29^post122, i3^0'=i3^post122, i41^0'=i41^post122, i45^0'=i45^post122, i6^0'=i6^post122, in_count^0'=in_count^post122, incnt^0'=incnt^post122, m122^0'=m122^post122, m130^0'=m130^post122, maxbits^0'=maxbits^post122, maxcode^0'=maxcode^post122, maxmaxcode^0'=maxmaxcode^post122, n40^0'=n40^post122, n44^0'=n44^post122, n_bits^0'=n_bits^post122, offset^0'=offset^post122, out_count^0'=out_count^post122, r_off32^0'=r_off32^post122, rat26^0'=rat26^post122, ratio^0'=ratio^post122, ret_getbyte18^0'=ret_getbyte18^post122, ret_getbyte25^0'=ret_getbyte25^post122, seed2^0'=seed2^post122, tabort4^0'=tabort4^post122, tmp12^0'=tmp12^post122, tmp___014^0'=tmp___014^post122, tmp___017^0'=tmp___017^post122, tmp___024^0'=tmp___024^post122, tmp___115^0'=tmp___115^post122, (m130^0-m130^post122 == 0 /\ -i45^post122+i45^0 == 0 /\ -i29^post122+i29^0 == 0 /\ -__const_8388607^post122+__const_8388607^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post122 == 0 /\ apsim_incnt^0-apsim_incnt^post122 == 0 /\ -i41^post122+i41^0 == 0 /\ i6^0-i6^post122 == 0 /\ m122^0-m122^post122 == 0 /\ n44^0-n44^post122 == 0 /\ count^0-count^post122 == 0 /\ __const_256^0-__const_256^post122 == 0 /\ disp9^0-disp9^post122 == 0 /\ -__const_429496^post122+__const_429496^0 == 0 /\ -__const_2147483647^post122+__const_2147483647^0 == 0 /\ -__const_257^post122+__const_257^0 == 0 /\ tmp12^0-tmp12^post122 == 0 /\ -tmp___014^post122+tmp___014^0 == 0 /\ -maxbits^post122+maxbits^0 == 0 /\ -c7^post122+c7^0 == 0 /\ bytes_out^0-bytes_out^post122 == 0 /\ in_count^0-in_count^post122 == 0 /\ i3^0-i3^post122 == 0 /\ -free_ent^post122+free_ent^0 == 0 /\ -hsize_reg10^post122+hsize_reg10^0 == 0 /\ hsize___027^0-hsize___027^post122 == 0 /\ -hsize___019^post122+hsize___019^0 == 0 /\ c37^0-c37^post122 == 0 /\ -i21^post122+i21^0 == 0 /\ __const_53^0-__const_53^post122 == 0 /\ -__const_9^post122+__const_9^0 == 0 /\ tabort4^0-tabort4^post122 == 0 /\ -tmp___024^post122+tmp___024^0 == 0 /\ -tmp___115^post122+tmp___115^0 == 0 /\ r_off32^0-r_off32^post122 == 0 /\ -__const_8^post122+__const_8^0 == 0 /\ hshift11^0-hshift11^post122 == 0 /\ __const_50^0-__const_50^post122 == 0 /\ checkpoint^0-checkpoint^post122 == 0 /\ apsim_bound11113^post122 == 0 /\ -rat26^post122+rat26^0 == 0 /\ __const_10000^0-__const_10000^post122 == 0 /\ -n_bits^post122+n_bits^0 == 0 /\ -clear_flg^post122+clear_flg^0 == 0 /\ -offset^post122+offset^0 == 0 /\ out_count^0-out_count^post122 == 0 /\ fcode5^0-fcode5^post122 == 0 /\ -__const_65536^post122+__const_65536^0 == 0 /\ maxcode^0-maxcode^post122 == 0 /\ -block_compress^post122+block_compress^0 == 0 /\ -ent8^post122+ent8^0 == 0 /\ -ratio^post122+ratio^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post122 == 0 /\ -n40^post122+n40^0 == 0 /\ -__const_16^post122+__const_16^0 == 0 /\ exit_stat^0-exit_stat^post122 == 0 /\ -seed2^post122+seed2^0 == 0 /\ -hsize^post122+hsize^0 == 0 /\ -incnt^post122+incnt^0 == 0 /\ bits33^0-bits33^post122 == 0 /\ 1-incnt^0 <= 0 /\ tmp___017^0-tmp___017^post122 == 0 /\ -code31^post122+code31^0 == 0 /\ maxmaxcode^0-maxmaxcode^post122 == 0), cost: 1
	New rule:
	l5 -> l71 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-incnt^0 <= 0), cost: 1
	
		propagated equality m130^post122 = m130^0
		
		propagated equality i45^post122 = i45^0
		
		propagated equality i29^post122 = i29^0
		
		propagated equality __const_8388607^post122 = __const_8388607^0
		
		propagated equality ret_getbyte25^post122 = ret_getbyte25^0
		
		propagated equality apsim_incnt^post122 = apsim_incnt^0
		
		propagated equality i41^post122 = i41^0
		
		propagated equality i6^post122 = i6^0
		
		propagated equality m122^post122 = m122^0
		
		propagated equality n44^post122 = n44^0
		
		propagated equality count^post122 = count^0
		
		propagated equality __const_256^post122 = __const_256^0
		
		propagated equality disp9^post122 = disp9^0
		
		propagated equality __const_429496^post122 = __const_429496^0
		
		propagated equality __const_2147483647^post122 = __const_2147483647^0
		
		propagated equality __const_257^post122 = __const_257^0
		
		propagated equality tmp12^post122 = tmp12^0
		
		propagated equality tmp___014^post122 = tmp___014^0
		
		propagated equality maxbits^post122 = maxbits^0
		
		propagated equality c7^post122 = c7^0
		
		propagated equality bytes_out^post122 = bytes_out^0
		
		propagated equality in_count^post122 = in_count^0
		
		propagated equality i3^post122 = i3^0
		
		propagated equality free_ent^post122 = free_ent^0
		
		propagated equality hsize_reg10^post122 = hsize_reg10^0
		
		propagated equality hsize___027^post122 = hsize___027^0
		
		propagated equality hsize___019^post122 = hsize___019^0
		
		propagated equality c37^post122 = c37^0
		
		propagated equality i21^post122 = i21^0
		
		propagated equality __const_53^post122 = __const_53^0
		
		propagated equality __const_9^post122 = __const_9^0
		
		propagated equality tabort4^post122 = tabort4^0
		
		propagated equality tmp___024^post122 = tmp___024^0
		
		propagated equality tmp___115^post122 = tmp___115^0
		
		propagated equality r_off32^post122 = r_off32^0
		
		propagated equality __const_8^post122 = __const_8^0
		
		propagated equality hshift11^post122 = hshift11^0
		
		propagated equality __const_50^post122 = __const_50^0
		
		propagated equality checkpoint^post122 = checkpoint^0
		
		propagated equality apsim_bound11113^post122 = 0
		
		propagated equality rat26^post122 = rat26^0
		
		propagated equality __const_10000^post122 = __const_10000^0
		
		propagated equality n_bits^post122 = n_bits^0
		
		propagated equality clear_flg^post122 = clear_flg^0
		
		propagated equality offset^post122 = offset^0
		
		propagated equality out_count^post122 = out_count^0
		
		propagated equality fcode5^post122 = fcode5^0
		
		propagated equality __const_65536^post122 = __const_65536^0
		
		propagated equality maxcode^post122 = maxcode^0
		
		propagated equality block_compress^post122 = block_compress^0
		
		propagated equality ent8^post122 = ent8^0
		
		propagated equality ratio^post122 = ratio^0
		
		propagated equality ret_getbyte18^post122 = ret_getbyte18^0
		
		propagated equality n40^post122 = n40^0
		
		propagated equality __const_16^post122 = __const_16^0
		
		propagated equality exit_stat^post122 = exit_stat^0
		
		propagated equality seed2^post122 = seed2^0
		
		propagated equality hsize^post122 = hsize^0
		
		propagated equality incnt^post122 = incnt^0
		
		propagated equality bits33^post122 = bits33^0
		
		propagated equality tmp___017^post122 = tmp___017^0
		
		propagated equality code31^post122 = code31^0
		
		propagated equality maxmaxcode^post122 = maxmaxcode^0
		
	Simplified Guard

	Original rule:
	l5 -> l71 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, (0 == 0 /\ 1-incnt^0 <= 0), cost: 1
	New rule:
	l5 -> l71 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-incnt^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l71 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 1-incnt^0 <= 0, cost: 1
	New rule:
	l5 -> l71 : apsim_bound11113^0'=0, 1-incnt^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l3 : __const_10000^0'=__const_10000^post123, __const_16^0'=__const_16^post123, __const_2147483647^0'=__const_2147483647^post123, __const_256^0'=__const_256^post123, __const_257^0'=__const_257^post123, __const_429496^0'=__const_429496^post123, __const_50^0'=__const_50^post123, __const_53^0'=__const_53^post123, __const_65536^0'=__const_65536^post123, __const_8388607^0'=__const_8388607^post123, __const_8^0'=__const_8^post123, __const_9^0'=__const_9^post123, apsim_bound11113^0'=apsim_bound11113^post123, apsim_incnt^0'=apsim_incnt^post123, bits33^0'=bits33^post123, block_compress^0'=block_compress^post123, bytes_out^0'=bytes_out^post123, c37^0'=c37^post123, c7^0'=c7^post123, checkpoint^0'=checkpoint^post123, clear_flg^0'=clear_flg^post123, code31^0'=code31^post123, count^0'=count^post123, disp9^0'=disp9^post123, ent8^0'=ent8^post123, exit_stat^0'=exit_stat^post123, fcode5^0'=fcode5^post123, free_ent^0'=free_ent^post123, hshift11^0'=hshift11^post123, hsize^0'=hsize^post123, hsize___019^0'=hsize___019^post123, hsize___027^0'=hsize___027^post123, hsize_reg10^0'=hsize_reg10^post123, i21^0'=i21^post123, i29^0'=i29^post123, i3^0'=i3^post123, i41^0'=i41^post123, i45^0'=i45^post123, i6^0'=i6^post123, in_count^0'=in_count^post123, incnt^0'=incnt^post123, m122^0'=m122^post123, m130^0'=m130^post123, maxbits^0'=maxbits^post123, maxcode^0'=maxcode^post123, maxmaxcode^0'=maxmaxcode^post123, n40^0'=n40^post123, n44^0'=n44^post123, n_bits^0'=n_bits^post123, offset^0'=offset^post123, out_count^0'=out_count^post123, r_off32^0'=r_off32^post123, rat26^0'=rat26^post123, ratio^0'=ratio^post123, ret_getbyte18^0'=ret_getbyte18^post123, ret_getbyte25^0'=ret_getbyte25^post123, seed2^0'=seed2^post123, tabort4^0'=tabort4^post123, tmp12^0'=tmp12^post123, tmp___014^0'=tmp___014^post123, tmp___017^0'=tmp___017^post123, tmp___024^0'=tmp___024^post123, tmp___115^0'=tmp___115^post123, (offset^0-offset^post123 == 0 /\ -hsize_reg10^post123+hsize_reg10^0 == 0 /\ n44^0-n44^post123 == 0 /\ i3^0-i3^post123 == 0 /\ bytes_out^0-bytes_out^post123 == 0 /\ -incnt^post123+incnt^0 == 0 /\ tmp12^0-tmp12^post123 == 0 /\ hsize___027^0-hsize___027^post123 == 0 /\ count^0-count^post123 == 0 /\ -r_off32^post123+r_off32^0 == 0 /\ -bits33^post123+bits33^0 == 0 /\ -hsize___019^post123+hsize___019^0 == 0 /\ -hsize^post123+hsize^0 == 0 /\ -m122^post123+m122^0 == 0 /\ -apsim_bound11113^post123+apsim_bound11113^0 == 0 /\ -__const_9^post123+__const_9^0 == 0 /\ -code31^post123+code31^0 == 0 /\ -maxbits^post123+maxbits^0 == 0 /\ tabort4^0-tabort4^post123 == 0 /\ __const_16^0-i21^0+i21^post123 == 0 /\ tmp___017^0-tmp___017^post123 == 0 /\ ret_getbyte25^0-ret_getbyte25^post123 == 0 /\ exit_stat^0-exit_stat^post123 == 0 /\ c37^0-c37^post123 == 0 /\ disp9^0-disp9^post123 == 0 /\ -__const_65536^post123+__const_65536^0 == 0 /\ maxcode^0-maxcode^post123 == 0 /\ -n40^post123+n40^0 == 0 /\ checkpoint^0-checkpoint^post123 == 0 /\ apsim_incnt^0-apsim_incnt^post123 == 0 /\ -tmp___115^post123+tmp___115^0 == 0 /\ -i29^post123+i29^0 == 0 /\ -block_compress^post123+block_compress^0 == 0 /\ -ratio^post123+ratio^0 == 0 /\ -__const_8388607^post123+__const_8388607^0 == 0 /\ -__const_16^post123+__const_16^0 == 0 /\ -n_bits^post123+n_bits^0 == 0 /\ m130^0-m130^post123 == 0 /\ -seed2^post123+seed2^0 == 0 /\ __const_10000^0-__const_10000^post123 == 0 /\ ret_getbyte18^0-ret_getbyte18^post123 == 0 /\ __const_53^0-__const_53^post123 == 0 /\ -ent8^post123+ent8^0 == 0 /\ __const_8^0-__const_8^post123 == 0 /\ -__const_429496^post123+__const_429496^0 == 0 /\ hshift11^0-hshift11^post123 == 0 /\ -i45^post123+i45^0 == 0 /\ -i41^post123+i41^0 == 0 /\ -free_ent^post123+free_ent^0 == 0 /\ rat26^0-rat26^post123 == 0 /\ i6^0-i6^post123 == 0 /\ maxmaxcode^0-maxmaxcode^post123 == 0 /\ -tmp___024^post123+tmp___024^0 == 0 /\ __const_257^0-__const_257^post123 == 0 /\ out_count^0-out_count^post123 == 0 /\ -clear_flg^post123+clear_flg^0 == 0 /\ -in_count^post123+in_count^0 == 0 /\ __const_256^0-__const_256^post123 == 0 /\ fcode5^0-fcode5^post123 == 0 /\ -tmp___014^post123+tmp___014^0 == 0 /\ __const_50^0-__const_50^post123 == 0 /\ -__const_2147483647^post123+__const_2147483647^0 == 0 /\ -c7^post123+c7^0 == 0), cost: 1
	New rule:
	l4 -> l3 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=-__const_16^0+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality offset^post123 = offset^0
		
		propagated equality hsize_reg10^post123 = hsize_reg10^0
		
		propagated equality n44^post123 = n44^0
		
		propagated equality i3^post123 = i3^0
		
		propagated equality bytes_out^post123 = bytes_out^0
		
		propagated equality incnt^post123 = incnt^0
		
		propagated equality tmp12^post123 = tmp12^0
		
		propagated equality hsize___027^post123 = hsize___027^0
		
		propagated equality count^post123 = count^0
		
		propagated equality r_off32^post123 = r_off32^0
		
		propagated equality bits33^post123 = bits33^0
		
		propagated equality hsize___019^post123 = hsize___019^0
		
		propagated equality hsize^post123 = hsize^0
		
		propagated equality m122^post123 = m122^0
		
		propagated equality apsim_bound11113^post123 = apsim_bound11113^0
		
		propagated equality __const_9^post123 = __const_9^0
		
		propagated equality code31^post123 = code31^0
		
		propagated equality maxbits^post123 = maxbits^0
		
		propagated equality tabort4^post123 = tabort4^0
		
		propagated equality i21^post123 = -__const_16^0+i21^0
		
		propagated equality tmp___017^post123 = tmp___017^0
		
		propagated equality ret_getbyte25^post123 = ret_getbyte25^0
		
		propagated equality exit_stat^post123 = exit_stat^0
		
		propagated equality c37^post123 = c37^0
		
		propagated equality disp9^post123 = disp9^0
		
		propagated equality __const_65536^post123 = __const_65536^0
		
		propagated equality maxcode^post123 = maxcode^0
		
		propagated equality n40^post123 = n40^0
		
		propagated equality checkpoint^post123 = checkpoint^0
		
		propagated equality apsim_incnt^post123 = apsim_incnt^0
		
		propagated equality tmp___115^post123 = tmp___115^0
		
		propagated equality i29^post123 = i29^0
		
		propagated equality block_compress^post123 = block_compress^0
		
		propagated equality ratio^post123 = ratio^0
		
		propagated equality __const_8388607^post123 = __const_8388607^0
		
		propagated equality __const_16^post123 = __const_16^0
		
		propagated equality n_bits^post123 = n_bits^0
		
		propagated equality m130^post123 = m130^0
		
		propagated equality seed2^post123 = seed2^0
		
		propagated equality __const_10000^post123 = __const_10000^0
		
		propagated equality ret_getbyte18^post123 = ret_getbyte18^0
		
		propagated equality __const_53^post123 = __const_53^0
		
		propagated equality ent8^post123 = ent8^0
		
		propagated equality __const_8^post123 = __const_8^0
		
		propagated equality __const_429496^post123 = __const_429496^0
		
		propagated equality hshift11^post123 = hshift11^0
		
		propagated equality i45^post123 = i45^0
		
		propagated equality i41^post123 = i41^0
		
		propagated equality free_ent^post123 = free_ent^0
		
		propagated equality rat26^post123 = rat26^0
		
		propagated equality i6^post123 = i6^0
		
		propagated equality maxmaxcode^post123 = maxmaxcode^0
		
		propagated equality tmp___024^post123 = tmp___024^0
		
		propagated equality __const_257^post123 = __const_257^0
		
		propagated equality out_count^post123 = out_count^0
		
		propagated equality clear_flg^post123 = clear_flg^0
		
		propagated equality in_count^post123 = in_count^0
		
		propagated equality __const_256^post123 = __const_256^0
		
		propagated equality fcode5^post123 = fcode5^0
		
		propagated equality tmp___014^post123 = tmp___014^0
		
		propagated equality __const_50^post123 = __const_50^0
		
		propagated equality __const_2147483647^post123 = __const_2147483647^0
		
		propagated equality c7^post123 = c7^0
		
	Simplified Guard

	Original rule:
	l4 -> l3 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=-__const_16^0+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l4 -> l3 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=-__const_16^0+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l3 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=count^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=-__const_16^0+i21^0, i29^0'=i29^0, i3^0'=i3^0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=seed2^0, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l4 -> l3 : i21^0'=-__const_16^0+i21^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l73 -> l56 : __const_10000^0'=__const_10000^post124, __const_16^0'=__const_16^post124, __const_2147483647^0'=__const_2147483647^post124, __const_256^0'=__const_256^post124, __const_257^0'=__const_257^post124, __const_429496^0'=__const_429496^post124, __const_50^0'=__const_50^post124, __const_53^0'=__const_53^post124, __const_65536^0'=__const_65536^post124, __const_8388607^0'=__const_8388607^post124, __const_8^0'=__const_8^post124, __const_9^0'=__const_9^post124, apsim_bound11113^0'=apsim_bound11113^post124, apsim_incnt^0'=apsim_incnt^post124, bits33^0'=bits33^post124, block_compress^0'=block_compress^post124, bytes_out^0'=bytes_out^post124, c37^0'=c37^post124, c7^0'=c7^post124, checkpoint^0'=checkpoint^post124, clear_flg^0'=clear_flg^post124, code31^0'=code31^post124, count^0'=count^post124, disp9^0'=disp9^post124, ent8^0'=ent8^post124, exit_stat^0'=exit_stat^post124, fcode5^0'=fcode5^post124, free_ent^0'=free_ent^post124, hshift11^0'=hshift11^post124, hsize^0'=hsize^post124, hsize___019^0'=hsize___019^post124, hsize___027^0'=hsize___027^post124, hsize_reg10^0'=hsize_reg10^post124, i21^0'=i21^post124, i29^0'=i29^post124, i3^0'=i3^post124, i41^0'=i41^post124, i45^0'=i45^post124, i6^0'=i6^post124, in_count^0'=in_count^post124, incnt^0'=incnt^post124, m122^0'=m122^post124, m130^0'=m130^post124, maxbits^0'=maxbits^post124, maxcode^0'=maxcode^post124, maxmaxcode^0'=maxmaxcode^post124, n40^0'=n40^post124, n44^0'=n44^post124, n_bits^0'=n_bits^post124, offset^0'=offset^post124, out_count^0'=out_count^post124, r_off32^0'=r_off32^post124, rat26^0'=rat26^post124, ratio^0'=ratio^post124, ret_getbyte18^0'=ret_getbyte18^post124, ret_getbyte25^0'=ret_getbyte25^post124, seed2^0'=seed2^post124, tabort4^0'=tabort4^post124, tmp12^0'=tmp12^post124, tmp___014^0'=tmp___014^post124, tmp___017^0'=tmp___017^post124, tmp___024^0'=tmp___024^post124, tmp___115^0'=tmp___115^post124, (-n40^post125+n40^0 == 0 /\ tmp___115^post125-tmp___115^post124 == 0 /\ -i45^post124+i45^post125 == 0 /\ hsize___027^0-hsize___027^post125 == 0 /\ -m122^post124+m122^post125 == 0 /\ -maxmaxcode^post124+maxmaxcode^post125 == 0 /\ -__const_10000^post124+__const_10000^post125 == 0 /\ -__const_256^post124+__const_256^post125 == 0 /\ -apsim_bound11113^post125+apsim_bound11113^0 == 0 /\ -__const_9^post124+__const_9^post125 == 0 /\ -i29^post124+i29^post125 == 0 /\ -__const_9^post125+__const_9^0 == 0 /\ n44^0-n44^post125 == 0 /\ -__const_257^post125+__const_257^0 == 0 /\ m130^0-m130^post125 == 0 /\ -m130^post124+m130^post125 == 0 /\ i6^0-i6^post125 == 0 /\ bytes_out^0-bytes_out^post125 == 0 /\ -__const_65536^post124+__const_65536^post125 == 0 /\ i3^0-i3^post125 == 0 /\ -1+seed2^post124 == 0 /\ maxcode^0-maxcode^post125 == 0 /\ -__const_16^post125+__const_16^0 == 0 /\ -__const_2147483647^post125+__const_2147483647^0 == 0 /\ i21^0-i21^post125 == 0 /\ -bits33^post124+bits33^post125 == 0 /\ apsim_incnt^0-apsim_incnt^post125 == 0 /\ -ratio^post124+ratio^post125 == 0 /\ -hsize___019^post125+hsize___019^0 == 0 /\ -n_bits^post124+n_bits^post125 == 0 /\ -hsize_reg10^post125+hsize_reg10^0 == 0 /\ -__const_8388607^post124+__const_8388607^post125 == 0 /\ count^0-count^post125 == 0 /\ -checkpoint^post124+checkpoint^post125 == 0 /\ c37^0-c37^post125 == 0 /\ -ent8^post124+ent8^post125 == 0 /\ -n_bits^post125+n_bits^0 == 0 /\ -fcode5^post124+fcode5^post125 == 0 /\ -incnt^post125+incnt^0 == 0 /\ -bytes_out^post124+bytes_out^post125 == 0 /\ ret_getbyte25^0-ret_getbyte25^post125 == 0 /\ -hsize_reg10^post124+hsize_reg10^post125 == 0 /\ -bits33^post125+bits33^0 == 0 /\ -in_count^post124+in_count^post125 == 0 /\ -seed2^post125+seed2^0 == 0 /\ -__const_429496^post124+__const_429496^post125 == 0 /\ -free_ent^post124+free_ent^post125 == 0 /\ -__const_50^post124+__const_50^post125 == 0 /\ -__const_65536^post125+__const_65536^0 == 0 /\ -free_ent^post125+free_ent^0 == 0 /\ tmp___024^post125-tmp___024^post124 == 0 /\ count^post124-__const_50^post125 == 0 /\ -i29^post125+i29^0 == 0 /\ -r_off32^post124+r_off32^post125 == 0 /\ -hsize___027^post124+hsize___027^post125 == 0 /\ -c37^post124+c37^post125 == 0 /\ -out_count^post124+out_count^post125 == 0 /\ -ent8^post125+ent8^0 == 0 /\ -i41^post125+i41^0 == 0 /\ i3^post124 == 0 /\ -maxbits^post124+maxbits^post125 == 0 /\ tmp12^0-tmp12^post125 == 0 /\ -maxbits^post125+maxbits^0 == 0 /\ -incnt^post124+incnt^post125 == 0 /\ exit_stat^0-exit_stat^post125 == 0 /\ __const_50^0-__const_50^post125 == 0 /\ hsize___019^post125-hsize___019^post124 == 0 /\ -__const_53^post124+__const_53^post125 == 0 /\ -ratio^post125+ratio^0 == 0 /\ -rat26^post124+rat26^post125 == 0 /\ __const_8^0-__const_8^post125 == 0 /\ hshift11^0-hshift11^post125 == 0 /\ -c7^post125+c7^0 == 0 /\ rat26^0-rat26^post125 == 0 /\ -block_compress^post124+block_compress^post125 == 0 /\ __const_10000^0-__const_10000^post125 == 0 /\ offset^post125-offset^post124 == 0 /\ -clear_flg^post125+clear_flg^0 == 0 /\ -tmp___014^post125+tmp___014^0 == 0 /\ -in_count^post125+in_count^0 == 0 /\ -c7^post124+c7^post125 == 0 /\ -maxcode^post124+maxcode^post125 == 0 /\ tmp___014^post125-tmp___014^post124 == 0 /\ -tmp___024^post125+tmp___024^0 == 0 /\ -__const_8388607^post125+__const_8388607^0 == 0 /\ tabort4^post125-tabort4^post124 == 0 /\ -i6^post124+i6^post125 == 0 /\ -tmp___115^post125+tmp___115^0 == 0 /\ __const_53^0-__const_53^post125 == 0 /\ disp9^post125-disp9^post124 == 0 /\ -__const_8^post124+__const_8^post125 == 0 /\ checkpoint^0-checkpoint^post125 == 0 /\ -i21^post124+i21^post125 == 0 /\ __const_257^post125-__const_257^post124 == 0 /\ r_off32^0-r_off32^post125 == 0 /\ tmp12^post125-tmp12^post124 == 0 /\ -block_compress^post125+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post125 == 0 /\ tabort4^0-tabort4^post125 == 0 /\ out_count^0-out_count^post125 == 0 /\ __const_256^0-__const_256^post125 == 0 /\ tmp___017^post125-tmp___017^post124 == 0 /\ -offset^post125+offset^0 == 0 /\ -hsize^post125+hsize^0 == 0 /\ -i41^post124+i41^post125 == 0 /\ -n44^post124+n44^post125 == 0 /\ maxmaxcode^0-maxmaxcode^post125 == 0 /\ -m122^post125+m122^0 == 0 /\ clear_flg^post125-clear_flg^post124 == 0 /\ tmp___017^0-tmp___017^post125 == 0 /\ -code31^post125+code31^0 == 0 /\ -apsim_incnt^post124+apsim_incnt^post125 == 0 /\ -hsize^post124+hsize^post125 == 0 /\ fcode5^0-fcode5^post125 == 0 /\ -ret_getbyte18^post124+ret_getbyte18^post125 == 0 /\ -code31^post124+code31^post125 == 0 /\ -__const_429496^post125+__const_429496^0 == 0 /\ n40^post125-n40^post124 == 0 /\ -__const_2147483647^post124+__const_2147483647^post125 == 0 /\ -exit_stat^post124+exit_stat^post125 == 0 /\ __const_16^post125-__const_16^post124 == 0 /\ -apsim_bound11113^post124+apsim_bound11113^post125 == 0 /\ -disp9^post125+disp9^0 == 0 /\ -i45^post125+i45^0 == 0 /\ -hshift11^post124+hshift11^post125 == 0 /\ -ret_getbyte25^post124+ret_getbyte25^post125 == 0), cost: 1
	New rule:
	l73 -> l56 : __const_10000^0'=__const_10000^post125, __const_16^0'=__const_16^post125, __const_2147483647^0'=__const_2147483647^post125, __const_256^0'=__const_256^post125, __const_257^0'=__const_257^post125, __const_429496^0'=__const_429496^post125, __const_50^0'=__const_50^post125, __const_53^0'=__const_53^post125, __const_65536^0'=__const_65536^post125, __const_8388607^0'=__const_8388607^post125, __const_8^0'=__const_8^post125, __const_9^0'=__const_9^post125, apsim_bound11113^0'=apsim_bound11113^post125, apsim_incnt^0'=apsim_incnt^post125, bits33^0'=bits33^post125, block_compress^0'=block_compress^post125, bytes_out^0'=bytes_out^post125, c37^0'=c37^post125, c7^0'=c7^post125, checkpoint^0'=checkpoint^post125, clear_flg^0'=clear_flg^post125, code31^0'=code31^post125, count^0'=__const_50^post125, disp9^0'=disp9^post125, ent8^0'=ent8^post125, exit_stat^0'=exit_stat^post125, fcode5^0'=fcode5^post125, free_ent^0'=free_ent^post125, hshift11^0'=hshift11^post125, hsize^0'=hsize^post125, hsize___019^0'=hsize___019^post125, hsize___027^0'=hsize___027^post125, hsize_reg10^0'=hsize_reg10^post125, i21^0'=i21^post125, i29^0'=i29^post125, i3^0'=0, i41^0'=i41^post125, i45^0'=i45^post125, i6^0'=i6^post125, in_count^0'=in_count^post125, incnt^0'=incnt^post125, m122^0'=m122^post125, m130^0'=m130^post125, maxbits^0'=maxbits^post125, maxcode^0'=maxcode^post125, maxmaxcode^0'=maxmaxcode^post125, n40^0'=n40^post125, n44^0'=n44^post125, n_bits^0'=n_bits^post125, offset^0'=offset^post125, out_count^0'=out_count^post125, r_off32^0'=r_off32^post125, rat26^0'=rat26^post125, ratio^0'=ratio^post125, ret_getbyte18^0'=ret_getbyte18^post125, ret_getbyte25^0'=ret_getbyte25^post125, seed2^0'=1, tabort4^0'=tabort4^post125, tmp12^0'=tmp12^post125, tmp___014^0'=tmp___014^post125, tmp___017^0'=tmp___017^post125, tmp___024^0'=tmp___024^post125, tmp___115^0'=tmp___115^post125, (0 == 0 /\ -n40^post125+n40^0 == 0 /\ hsize___027^0-hsize___027^post125 == 0 /\ -apsim_bound11113^post125+apsim_bound11113^0 == 0 /\ -__const_9^post125+__const_9^0 == 0 /\ n44^0-n44^post125 == 0 /\ -__const_257^post125+__const_257^0 == 0 /\ m130^0-m130^post125 == 0 /\ i6^0-i6^post125 == 0 /\ bytes_out^0-bytes_out^post125 == 0 /\ i3^0-i3^post125 == 0 /\ maxcode^0-maxcode^post125 == 0 /\ -__const_16^post125+__const_16^0 == 0 /\ -__const_2147483647^post125+__const_2147483647^0 == 0 /\ i21^0-i21^post125 == 0 /\ apsim_incnt^0-apsim_incnt^post125 == 0 /\ -hsize___019^post125+hsize___019^0 == 0 /\ -hsize_reg10^post125+hsize_reg10^0 == 0 /\ count^0-count^post125 == 0 /\ c37^0-c37^post125 == 0 /\ -n_bits^post125+n_bits^0 == 0 /\ -incnt^post125+incnt^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post125 == 0 /\ -bits33^post125+bits33^0 == 0 /\ -seed2^post125+seed2^0 == 0 /\ -__const_65536^post125+__const_65536^0 == 0 /\ -free_ent^post125+free_ent^0 == 0 /\ -i29^post125+i29^0 == 0 /\ -ent8^post125+ent8^0 == 0 /\ -i41^post125+i41^0 == 0 /\ tmp12^0-tmp12^post125 == 0 /\ -maxbits^post125+maxbits^0 == 0 /\ exit_stat^0-exit_stat^post125 == 0 /\ __const_50^0-__const_50^post125 == 0 /\ -ratio^post125+ratio^0 == 0 /\ __const_8^0-__const_8^post125 == 0 /\ hshift11^0-hshift11^post125 == 0 /\ -c7^post125+c7^0 == 0 /\ rat26^0-rat26^post125 == 0 /\ __const_10000^0-__const_10000^post125 == 0 /\ -clear_flg^post125+clear_flg^0 == 0 /\ -tmp___014^post125+tmp___014^0 == 0 /\ -in_count^post125+in_count^0 == 0 /\ -tmp___024^post125+tmp___024^0 == 0 /\ -__const_8388607^post125+__const_8388607^0 == 0 /\ -tmp___115^post125+tmp___115^0 == 0 /\ __const_53^0-__const_53^post125 == 0 /\ checkpoint^0-checkpoint^post125 == 0 /\ r_off32^0-r_off32^post125 == 0 /\ -block_compress^post125+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post125 == 0 /\ tabort4^0-tabort4^post125 == 0 /\ out_count^0-out_count^post125 == 0 /\ __const_256^0-__const_256^post125 == 0 /\ -offset^post125+offset^0 == 0 /\ -hsize^post125+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post125 == 0 /\ -m122^post125+m122^0 == 0 /\ tmp___017^0-tmp___017^post125 == 0 /\ -code31^post125+code31^0 == 0 /\ fcode5^0-fcode5^post125 == 0 /\ -__const_429496^post125+__const_429496^0 == 0 /\ -disp9^post125+disp9^0 == 0 /\ -i45^post125+i45^0 == 0), cost: 1
	
		propagated equality tmp___115^post124 = tmp___115^post125
		
		propagated equality i45^post124 = i45^post125
		
		propagated equality m122^post124 = m122^post125
		
		propagated equality maxmaxcode^post124 = maxmaxcode^post125
		
		propagated equality __const_10000^post124 = __const_10000^post125
		
		propagated equality __const_256^post124 = __const_256^post125
		
		propagated equality __const_9^post124 = __const_9^post125
		
		propagated equality i29^post124 = i29^post125
		
		propagated equality m130^post124 = m130^post125
		
		propagated equality __const_65536^post124 = __const_65536^post125
		
		propagated equality seed2^post124 = 1
		
		propagated equality bits33^post124 = bits33^post125
		
		propagated equality ratio^post124 = ratio^post125
		
		propagated equality n_bits^post124 = n_bits^post125
		
		propagated equality __const_8388607^post124 = __const_8388607^post125
		
		propagated equality checkpoint^post124 = checkpoint^post125
		
		propagated equality ent8^post124 = ent8^post125
		
		propagated equality fcode5^post124 = fcode5^post125
		
		propagated equality bytes_out^post124 = bytes_out^post125
		
		propagated equality hsize_reg10^post124 = hsize_reg10^post125
		
		propagated equality in_count^post124 = in_count^post125
		
		propagated equality __const_429496^post124 = __const_429496^post125
		
		propagated equality free_ent^post124 = free_ent^post125
		
		propagated equality __const_50^post124 = __const_50^post125
		
		propagated equality tmp___024^post124 = tmp___024^post125
		
		propagated equality count^post124 = __const_50^post125
		
		propagated equality r_off32^post124 = r_off32^post125
		
		propagated equality hsize___027^post124 = hsize___027^post125
		
		propagated equality c37^post124 = c37^post125
		
		propagated equality out_count^post124 = out_count^post125
		
		propagated equality i3^post124 = 0
		
		propagated equality maxbits^post124 = maxbits^post125
		
		propagated equality incnt^post124 = incnt^post125
		
		propagated equality hsize___019^post124 = hsize___019^post125
		
		propagated equality __const_53^post124 = __const_53^post125
		
		propagated equality rat26^post124 = rat26^post125
		
		propagated equality block_compress^post124 = block_compress^post125
		
		propagated equality offset^post124 = offset^post125
		
		propagated equality c7^post124 = c7^post125
		
		propagated equality maxcode^post124 = maxcode^post125
		
		propagated equality tmp___014^post124 = tmp___014^post125
		
		propagated equality tabort4^post124 = tabort4^post125
		
		propagated equality i6^post124 = i6^post125
		
		propagated equality disp9^post124 = disp9^post125
		
		propagated equality __const_8^post124 = __const_8^post125
		
		propagated equality i21^post124 = i21^post125
		
		propagated equality __const_257^post124 = __const_257^post125
		
		propagated equality tmp12^post124 = tmp12^post125
		
		propagated equality tmp___017^post124 = tmp___017^post125
		
		propagated equality i41^post124 = i41^post125
		
		propagated equality n44^post124 = n44^post125
		
		propagated equality clear_flg^post124 = clear_flg^post125
		
		propagated equality apsim_incnt^post124 = apsim_incnt^post125
		
		propagated equality hsize^post124 = hsize^post125
		
		propagated equality ret_getbyte18^post124 = ret_getbyte18^post125
		
		propagated equality code31^post124 = code31^post125
		
		propagated equality n40^post124 = n40^post125
		
		propagated equality __const_2147483647^post124 = __const_2147483647^post125
		
		propagated equality exit_stat^post124 = exit_stat^post125
		
		propagated equality __const_16^post124 = __const_16^post125
		
		propagated equality apsim_bound11113^post124 = apsim_bound11113^post125
		
		propagated equality hshift11^post124 = hshift11^post125
		
		propagated equality ret_getbyte25^post124 = ret_getbyte25^post125
		
	Propagated Equalities

	Original rule:
	l73 -> l56 : __const_10000^0'=__const_10000^post125, __const_16^0'=__const_16^post125, __const_2147483647^0'=__const_2147483647^post125, __const_256^0'=__const_256^post125, __const_257^0'=__const_257^post125, __const_429496^0'=__const_429496^post125, __const_50^0'=__const_50^post125, __const_53^0'=__const_53^post125, __const_65536^0'=__const_65536^post125, __const_8388607^0'=__const_8388607^post125, __const_8^0'=__const_8^post125, __const_9^0'=__const_9^post125, apsim_bound11113^0'=apsim_bound11113^post125, apsim_incnt^0'=apsim_incnt^post125, bits33^0'=bits33^post125, block_compress^0'=block_compress^post125, bytes_out^0'=bytes_out^post125, c37^0'=c37^post125, c7^0'=c7^post125, checkpoint^0'=checkpoint^post125, clear_flg^0'=clear_flg^post125, code31^0'=code31^post125, count^0'=__const_50^post125, disp9^0'=disp9^post125, ent8^0'=ent8^post125, exit_stat^0'=exit_stat^post125, fcode5^0'=fcode5^post125, free_ent^0'=free_ent^post125, hshift11^0'=hshift11^post125, hsize^0'=hsize^post125, hsize___019^0'=hsize___019^post125, hsize___027^0'=hsize___027^post125, hsize_reg10^0'=hsize_reg10^post125, i21^0'=i21^post125, i29^0'=i29^post125, i3^0'=0, i41^0'=i41^post125, i45^0'=i45^post125, i6^0'=i6^post125, in_count^0'=in_count^post125, incnt^0'=incnt^post125, m122^0'=m122^post125, m130^0'=m130^post125, maxbits^0'=maxbits^post125, maxcode^0'=maxcode^post125, maxmaxcode^0'=maxmaxcode^post125, n40^0'=n40^post125, n44^0'=n44^post125, n_bits^0'=n_bits^post125, offset^0'=offset^post125, out_count^0'=out_count^post125, r_off32^0'=r_off32^post125, rat26^0'=rat26^post125, ratio^0'=ratio^post125, ret_getbyte18^0'=ret_getbyte18^post125, ret_getbyte25^0'=ret_getbyte25^post125, seed2^0'=1, tabort4^0'=tabort4^post125, tmp12^0'=tmp12^post125, tmp___014^0'=tmp___014^post125, tmp___017^0'=tmp___017^post125, tmp___024^0'=tmp___024^post125, tmp___115^0'=tmp___115^post125, (0 == 0 /\ -n40^post125+n40^0 == 0 /\ hsize___027^0-hsize___027^post125 == 0 /\ -apsim_bound11113^post125+apsim_bound11113^0 == 0 /\ -__const_9^post125+__const_9^0 == 0 /\ n44^0-n44^post125 == 0 /\ -__const_257^post125+__const_257^0 == 0 /\ m130^0-m130^post125 == 0 /\ i6^0-i6^post125 == 0 /\ bytes_out^0-bytes_out^post125 == 0 /\ i3^0-i3^post125 == 0 /\ maxcode^0-maxcode^post125 == 0 /\ -__const_16^post125+__const_16^0 == 0 /\ -__const_2147483647^post125+__const_2147483647^0 == 0 /\ i21^0-i21^post125 == 0 /\ apsim_incnt^0-apsim_incnt^post125 == 0 /\ -hsize___019^post125+hsize___019^0 == 0 /\ -hsize_reg10^post125+hsize_reg10^0 == 0 /\ count^0-count^post125 == 0 /\ c37^0-c37^post125 == 0 /\ -n_bits^post125+n_bits^0 == 0 /\ -incnt^post125+incnt^0 == 0 /\ ret_getbyte25^0-ret_getbyte25^post125 == 0 /\ -bits33^post125+bits33^0 == 0 /\ -seed2^post125+seed2^0 == 0 /\ -__const_65536^post125+__const_65536^0 == 0 /\ -free_ent^post125+free_ent^0 == 0 /\ -i29^post125+i29^0 == 0 /\ -ent8^post125+ent8^0 == 0 /\ -i41^post125+i41^0 == 0 /\ tmp12^0-tmp12^post125 == 0 /\ -maxbits^post125+maxbits^0 == 0 /\ exit_stat^0-exit_stat^post125 == 0 /\ __const_50^0-__const_50^post125 == 0 /\ -ratio^post125+ratio^0 == 0 /\ __const_8^0-__const_8^post125 == 0 /\ hshift11^0-hshift11^post125 == 0 /\ -c7^post125+c7^0 == 0 /\ rat26^0-rat26^post125 == 0 /\ __const_10000^0-__const_10000^post125 == 0 /\ -clear_flg^post125+clear_flg^0 == 0 /\ -tmp___014^post125+tmp___014^0 == 0 /\ -in_count^post125+in_count^0 == 0 /\ -tmp___024^post125+tmp___024^0 == 0 /\ -__const_8388607^post125+__const_8388607^0 == 0 /\ -tmp___115^post125+tmp___115^0 == 0 /\ __const_53^0-__const_53^post125 == 0 /\ checkpoint^0-checkpoint^post125 == 0 /\ r_off32^0-r_off32^post125 == 0 /\ -block_compress^post125+block_compress^0 == 0 /\ ret_getbyte18^0-ret_getbyte18^post125 == 0 /\ tabort4^0-tabort4^post125 == 0 /\ out_count^0-out_count^post125 == 0 /\ __const_256^0-__const_256^post125 == 0 /\ -offset^post125+offset^0 == 0 /\ -hsize^post125+hsize^0 == 0 /\ maxmaxcode^0-maxmaxcode^post125 == 0 /\ -m122^post125+m122^0 == 0 /\ tmp___017^0-tmp___017^post125 == 0 /\ -code31^post125+code31^0 == 0 /\ fcode5^0-fcode5^post125 == 0 /\ -__const_429496^post125+__const_429496^0 == 0 /\ -disp9^post125+disp9^0 == 0 /\ -i45^post125+i45^0 == 0), cost: 1
	New rule:
	l73 -> l56 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=__const_50^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=1, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	
		propagated equality n40^post125 = n40^0
		
		propagated equality hsize___027^post125 = hsize___027^0
		
		propagated equality apsim_bound11113^post125 = apsim_bound11113^0
		
		propagated equality __const_9^post125 = __const_9^0
		
		propagated equality n44^post125 = n44^0
		
		propagated equality __const_257^post125 = __const_257^0
		
		propagated equality m130^post125 = m130^0
		
		propagated equality i6^post125 = i6^0
		
		propagated equality bytes_out^post125 = bytes_out^0
		
		propagated equality i3^post125 = i3^0
		
		propagated equality maxcode^post125 = maxcode^0
		
		propagated equality __const_16^post125 = __const_16^0
		
		propagated equality __const_2147483647^post125 = __const_2147483647^0
		
		propagated equality i21^post125 = i21^0
		
		propagated equality apsim_incnt^post125 = apsim_incnt^0
		
		propagated equality hsize___019^post125 = hsize___019^0
		
		propagated equality hsize_reg10^post125 = hsize_reg10^0
		
		propagated equality count^post125 = count^0
		
		propagated equality c37^post125 = c37^0
		
		propagated equality n_bits^post125 = n_bits^0
		
		propagated equality incnt^post125 = incnt^0
		
		propagated equality ret_getbyte25^post125 = ret_getbyte25^0
		
		propagated equality bits33^post125 = bits33^0
		
		propagated equality seed2^post125 = seed2^0
		
		propagated equality __const_65536^post125 = __const_65536^0
		
		propagated equality free_ent^post125 = free_ent^0
		
		propagated equality i29^post125 = i29^0
		
		propagated equality ent8^post125 = ent8^0
		
		propagated equality i41^post125 = i41^0
		
		propagated equality tmp12^post125 = tmp12^0
		
		propagated equality maxbits^post125 = maxbits^0
		
		propagated equality exit_stat^post125 = exit_stat^0
		
		propagated equality __const_50^post125 = __const_50^0
		
		propagated equality ratio^post125 = ratio^0
		
		propagated equality __const_8^post125 = __const_8^0
		
		propagated equality hshift11^post125 = hshift11^0
		
		propagated equality c7^post125 = c7^0
		
		propagated equality rat26^post125 = rat26^0
		
		propagated equality __const_10000^post125 = __const_10000^0
		
		propagated equality clear_flg^post125 = clear_flg^0
		
		propagated equality tmp___014^post125 = tmp___014^0
		
		propagated equality in_count^post125 = in_count^0
		
		propagated equality tmp___024^post125 = tmp___024^0
		
		propagated equality __const_8388607^post125 = __const_8388607^0
		
		propagated equality tmp___115^post125 = tmp___115^0
		
		propagated equality __const_53^post125 = __const_53^0
		
		propagated equality checkpoint^post125 = checkpoint^0
		
		propagated equality r_off32^post125 = r_off32^0
		
		propagated equality block_compress^post125 = block_compress^0
		
		propagated equality ret_getbyte18^post125 = ret_getbyte18^0
		
		propagated equality tabort4^post125 = tabort4^0
		
		propagated equality out_count^post125 = out_count^0
		
		propagated equality __const_256^post125 = __const_256^0
		
		propagated equality offset^post125 = offset^0
		
		propagated equality hsize^post125 = hsize^0
		
		propagated equality maxmaxcode^post125 = maxmaxcode^0
		
		propagated equality m122^post125 = m122^0
		
		propagated equality tmp___017^post125 = tmp___017^0
		
		propagated equality code31^post125 = code31^0
		
		propagated equality fcode5^post125 = fcode5^0
		
		propagated equality __const_429496^post125 = __const_429496^0
		
		propagated equality disp9^post125 = disp9^0
		
		propagated equality i45^post125 = i45^0
		
	Simplified Guard

	Original rule:
	l73 -> l56 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=__const_50^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=1, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, 0 == 0, cost: 1
	New rule:
	l73 -> l56 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=__const_50^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=1, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l73 -> l56 : __const_10000^0'=__const_10000^0, __const_16^0'=__const_16^0, __const_2147483647^0'=__const_2147483647^0, __const_256^0'=__const_256^0, __const_257^0'=__const_257^0, __const_429496^0'=__const_429496^0, __const_50^0'=__const_50^0, __const_53^0'=__const_53^0, __const_65536^0'=__const_65536^0, __const_8388607^0'=__const_8388607^0, __const_8^0'=__const_8^0, __const_9^0'=__const_9^0, apsim_bound11113^0'=apsim_bound11113^0, apsim_incnt^0'=apsim_incnt^0, bits33^0'=bits33^0, block_compress^0'=block_compress^0, bytes_out^0'=bytes_out^0, c37^0'=c37^0, c7^0'=c7^0, checkpoint^0'=checkpoint^0, clear_flg^0'=clear_flg^0, code31^0'=code31^0, count^0'=__const_50^0, disp9^0'=disp9^0, ent8^0'=ent8^0, exit_stat^0'=exit_stat^0, fcode5^0'=fcode5^0, free_ent^0'=free_ent^0, hshift11^0'=hshift11^0, hsize^0'=hsize^0, hsize___019^0'=hsize___019^0, hsize___027^0'=hsize___027^0, hsize_reg10^0'=hsize_reg10^0, i21^0'=i21^0, i29^0'=i29^0, i3^0'=0, i41^0'=i41^0, i45^0'=i45^0, i6^0'=i6^0, in_count^0'=in_count^0, incnt^0'=incnt^0, m122^0'=m122^0, m130^0'=m130^0, maxbits^0'=maxbits^0, maxcode^0'=maxcode^0, maxmaxcode^0'=maxmaxcode^0, n40^0'=n40^0, n44^0'=n44^0, n_bits^0'=n_bits^0, offset^0'=offset^0, out_count^0'=out_count^0, r_off32^0'=r_off32^0, rat26^0'=rat26^0, ratio^0'=ratio^0, ret_getbyte18^0'=ret_getbyte18^0, ret_getbyte25^0'=ret_getbyte25^0, seed2^0'=1, tabort4^0'=tabort4^0, tmp12^0'=tmp12^0, tmp___014^0'=tmp___014^0, tmp___017^0'=tmp___017^0, tmp___024^0'=tmp___024^0, tmp___115^0'=tmp___115^0, T, cost: 1
	New rule:
	l73 -> l56 : count^0'=__const_50^0, i3^0'=0, seed2^0'=1, T, cost: 1

Step with 249

	Trace

	249[T]
	
	Blocked

	[{}, {}]

Step with 239

	Trace

	249[T], 239[T]
	
	Blocked

	[{}, {}, {}]

Step with 209

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 143

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Step with 140

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Step with 136

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}]

Step with 241

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}]

Step with 133

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 248

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 129

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 128

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 126

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 131

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 246

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 150

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)], 150[(1-bytes_out^0+in_count^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {149[T]}, {}]

Step with 148

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)], 150[(1-bytes_out^0+in_count^0 <= 0)], 148[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {149[T]}, {}, {}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)], 150[(1-bytes_out^0+in_count^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {149[T]}, {148[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {149[T], 150[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {246[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {131[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {126[T]}]

Step with 127

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 127[(1-i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {126[T]}, {}]

Accelerate

Start location: l73
Program variables: __const_10000^0 __const_16^0 __const_2147483647^0 __const_256^0 __const_257^0 __const_429496^0 __const_50^0 __const_53^0 __const_65536^0 __const_8388607^0 __const_8^0 __const_9^0 apsim_bound11113^0 apsim_incnt^0 bits33^0 block_compress^0 bytes_out^0 c37^0 c7^0 checkpoint^0 clear_flg^0 code31^0 count^0 disp9^0 ent8^0 exit_stat^0 fcode5^0 free_ent^0 hshift11^0 hsize^0 hsize___019^0 hsize___027^0 hsize_reg10^0 i21^0 i29^0 i3^0 i41^0 i45^0 i6^0 in_count^0 incnt^0 m122^0 m130^0 maxbits^0 maxcode^0 maxmaxcode^0 n40^0 n44^0 n_bits^0 offset^0 out_count^0 r_off32^0 rat26^0 ratio^0 ret_getbyte18^0 ret_getbyte25^0 seed2^0 tabort4^0 tmp12^0 tmp___014^0 tmp___017^0 tmp___024^0 tmp___115^0
 126: l0 -> l1 : i21^0 <= 0, cost: 1
 127: l0 -> l2 : i21^0'=-1+i21^0, 1-i21^0 <= 0, cost: 1
 131: l1 -> l5 : T, cost: 1
 128: l2 -> l0 : T, cost: 1
 250: l2 -> l2 : i21^0'=-n+i21^0, (-n+i21^0 >= 0 /\ -1+n >= 0), cost: 1
 129: l3 -> l2 : i21^0'=__const_16^0+i21^0, 1+i21^0 <= 0, cost: 1
 130: l3 -> l4 : -i21^0 <= 0, cost: 1
 248: l4 -> l3 : i21^0'=-__const_16^0+i21^0, T, cost: 1
 246: l5 -> l25 : incnt^0 <= 0, cost: 1
 247: l5 -> l71 : apsim_bound11113^0'=0, 1-incnt^0 <= 0, cost: 1
 132: l6 -> l7 : i6^0'=i6^0-disp9^0, T, cost: 1
 229: l7 -> l65 : -i6^0 <= 0, cost: 1
 230: l7 -> l65 : i6^0'=i6^0+hsize_reg10^0, 1+i6^0 <= 0, cost: 1
 133: l8 -> l4 : hshift11^0'=-hshift11^0+__const_8^0, hsize___019^0'=hsize^0, hsize_reg10^0'=hsize^0, i21^0'=-__const_16^0+hsize^0, m122^0'=-1, __const_65536^0-fcode5^0 <= 0, cost: 1
 134: l8 -> l9 : fcode5^0'=fcode5^post9, hshift11^0'=1+hshift11^0, 1-__const_65536^0+fcode5^0 <= 0, cost: 1
 241: l9 -> l8 : T, cost: 1
 135: l10 -> l11 : i29^0'=-__const_16^0+i29^0, T, cost: 1
 200: l11 -> l13 : i29^0'=__const_16^0+i29^0, 1+i29^0 <= 0, cost: 1
 201: l11 -> l10 : -i29^0 <= 0, cost: 1
 136: l12 -> l9 : ent8^0'=ret_getbyte18^0, fcode5^0'=hsize^0, hshift11^0'=0, tmp12^0'=ret_getbyte18^0, T, cost: 1
 137: l13 -> l14 : T, cost: 1
 198: l14 -> l51 : bits33^0'=n_bits^0, clear_flg^0'=1, code31^0'=__const_256^0, free_ent^0'=__const_257^0, r_off32^0'=offset^0, i29^0 <= 0, cost: 1
 199: l14 -> l13 : i29^0'=-1+i29^0, 1-i29^0 <= 0, cost: 1
 138: l15 -> l12 : ret_getbyte18^0'=__const_429496^0, tmp___017^0 <= 0, cost: 1
 139: l15 -> l12 : incnt^0'=-1+incnt^0, ret_getbyte18^0'=ret_getbyte18^post14, 1-tmp___017^0 <= 0, cost: 1
 140: l16 -> l12 : ret_getbyte18^0'=__const_429496^0, incnt^0 <= 0, cost: 1
 141: l16 -> l15 : apsim_incnt^0'=-1+apsim_incnt^0, tmp___017^0'=apsim_incnt^0, 1-incnt^0 <= 0, cost: 1
 142: l17 -> l16 : free_ent^0'=__const_257^0, T, cost: 1
 143: l18 -> l16 : free_ent^0'=__const_256^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
 144: l18 -> l17 : 1-block_compress^0 <= 0, cost: 1
 145: l18 -> l17 : 1+block_compress^0 <= 0, cost: 1
 146: l19 -> l20 : bits33^0'=-1+bits33^0, c37^0'=c37^post21, T, cost: 1
 183: l20 -> l44 : (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
 184: l20 -> l45 : 1-bits33^0 <= 0, cost: 1
 185: l20 -> l45 : 1+bits33^0 <= 0, cost: 1
 147: l21 -> l22 : T, cost: 1
 172: l22 -> l39 : n40^0-i41^0 <= 0, cost: 1
 173: l22 -> l40 : 1-n40^0+i41^0 <= 0, cost: 1
 148: l23 -> l24 : T, cost: 1
 149: l25 -> l23 : bytes_out^0-in_count^0 <= 0, cost: 1
 150: l25 -> l23 : exit_stat^0'=2, 1-bytes_out^0+in_count^0 <= 0, cost: 1
 151: l26 -> l27 : bytes_out^0'=bytes_out^post26, offset^0'=0, T, cost: 1
 163: l27 -> l35 : T, cost: 1
 152: l28 -> l26 : T, cost: 1
 153: l29 -> l28 : __const_16^0-i45^0 <= 0, cost: 1
 154: l29 -> l30 : i45^0'=1+i45^0, 1-__const_16^0+i45^0 <= 0, cost: 1
 195: l30 -> l31 : T, cost: 1
 155: l31 -> l28 : n44^0-i45^0 <= 0, cost: 1
 156: l31 -> l29 : 1-n44^0+i45^0 <= 0, cost: 1
 157: l32 -> l26 : offset^0 <= 0, cost: 1
 158: l32 -> l30 : i45^0'=0, n44^0'=n44^post33, 1-offset^0 <= 0, cost: 1
 159: l33 -> l27 : maxcode^0'=maxcode^post34, T, cost: 1
 160: l34 -> l33 : 1-n_bits^0+maxbits^0 <= 0, cost: 1
 161: l34 -> l33 : 1+n_bits^0-maxbits^0 <= 0, cost: 1
 162: l34 -> l27 : maxcode^0'=maxmaxcode^0, (-n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
 202: l35 -> l1 : T, cost: 1
 164: l36 -> l27 : clear_flg^0'=0, maxcode^0'=maxcode^post39, n_bits^0'=__const_9^0, T, cost: 1
 165: l37 -> l34 : n_bits^0'=1+n_bits^0, (-clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
 166: l37 -> l36 : 1-clear_flg^0 <= 0, cost: 1
 167: l37 -> l36 : 1+clear_flg^0 <= 0, cost: 1
 168: l38 -> l37 : offset^0'=0, T, cost: 1
 169: l39 -> l38 : bytes_out^0'=bytes_out^0+n_bits^0, T, cost: 1
 170: l40 -> l39 : __const_16^0-i41^0 <= 0, cost: 1
 171: l40 -> l21 : i41^0'=1+i41^0, 1-__const_16^0+i41^0 <= 0, cost: 1
 174: l41 -> l38 : offset^0 <= 0, cost: 1
 175: l41 -> l21 : i41^0'=0, n40^0'=n_bits^0, 1-offset^0 <= 0, cost: 1
 176: l42 -> l27 : clear_flg^0 <= 0, cost: 1
 177: l42 -> l41 : 1-clear_flg^0 <= 0, cost: 1
 178: l43 -> l42 : free_ent^0-maxcode^0 <= 0, cost: 1
 179: l43 -> l41 : 1-free_ent^0+maxcode^0 <= 0, cost: 1
 180: l44 -> l43 : offset^0'=0, T, cost: 1
 181: l45 -> l19 : T, cost: 1
 182: l45 -> l44 : T, cost: 1
 186: l46 -> l19 : bits33^0'=n_bits^0, bytes_out^0'=bytes_out^0+n_bits^0, T, cost: 1
 187: l46 -> l43 : T, cost: 1
 188: l47 -> l46 : offset^0'=offset^0+n_bits^0, T, cost: 1
 189: l48 -> l47 : T, cost: 1
 190: l49 -> l47 : (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
 191: l49 -> l48 : 1-bits33^0 <= 0, cost: 1
 192: l49 -> l48 : 1+bits33^0 <= 0, cost: 1
 193: l50 -> l49 : 1+bits33^0-__const_8^0 <= 0, cost: 1
 194: l50 -> l49 : bits33^0'=bits33^0-__const_8^0, code31^0'=code31^post69, -bits33^0+__const_8^0 <= 0, cost: 1
 196: l51 -> l32 : 1+code31^0 <= 0, cost: 1
 197: l51 -> l50 : bits33^0'=bits33^0-__const_8^0+r_off32^post72, code31^0'=code31^post72, r_off32^0'=r_off32^post72, -code31^0 <= 0, cost: 1
 203: l52 -> l53 : rat26^0'=rat26^post78, T, cost: 1
 204: l53 -> l10 : hsize___027^0'=hsize^0, i29^0'=-__const_16^0+hsize^0, m130^0'=-1, ratio^0'=0, rat26^0-ratio^0 <= 0, cost: 1
 205: l53 -> l35 : ratio^0'=rat26^0, 1-rat26^0+ratio^0 <= 0, cost: 1
 206: l54 -> l52 : 1-rat26^0 <= 0, cost: 1
 207: l54 -> l52 : 1+rat26^0 <= 0, cost: 1
 208: l54 -> l53 : rat26^0'=__const_2147483647^0, (rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
 209: l55 -> l18 : apsim_incnt^0'=__const_53^0, bytes_out^0'=3, checkpoint^0'=__const_10000^0, clear_flg^0'=0, i6^0'=0, in_count^0'=1, incnt^0'=count^0, maxbits^0'=__const_16^0, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n_bits^0'=__const_9^0, offset^0'=0, out_count^0'=0, ratio^0'=0, -i3^0+__const_50^0 <= 0, cost: 1
 210: l55 -> l56 : i3^0'=1+i3^0, seed2^0'=seed2^post85, tabort4^0'=i3^0, 1+i3^0-__const_50^0 <= 0, cost: 1
 239: l56 -> l55 : T, cost: 1
 211: l57 -> l53 : rat26^0'=rat26^post86, -__const_8388607^0+in_count^0 <= 0, cost: 1
 212: l57 -> l54 : rat26^0'=rat26^post87, 1+__const_8388607^0-in_count^0 <= 0, cost: 1
 213: l58 -> l57 : checkpoint^0'=__const_10000^0+in_count^0, T, cost: 1
 214: l59 -> l1 : (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
 215: l59 -> l58 : 1-block_compress^0 <= 0, cost: 1
 216: l59 -> l58 : 1+block_compress^0 <= 0, cost: 1
 217: l60 -> l1 : 1-checkpoint^0+in_count^0 <= 0, cost: 1
 218: l60 -> l59 : checkpoint^0-in_count^0 <= 0, cost: 1
 219: l61 -> l60 : maxmaxcode^0-free_ent^0 <= 0, cost: 1
 220: l61 -> l1 : free_ent^0'=1+free_ent^0, tmp___115^0'=free_ent^0, 1-maxmaxcode^0+free_ent^0 <= 0, cost: 1
 221: l62 -> l61 : ent8^0'=c7^0, out_count^0'=1+out_count^0, T, cost: 1
 222: l63 -> l62 : -apsim_bound11113^0+in_count^0 <= 0, cost: 1
 223: l63 -> l6 : 1+apsim_bound11113^0-in_count^0 <= 0, cost: 1
 224: l64 -> l63 : apsim_bound11113^0'=1+apsim_bound11113^0, T, cost: 1
 225: l64 -> l62 : T, cost: 1
 226: l65 -> l64 : T, cost: 1
 227: l65 -> l1 : ent8^0'=ent8^post102, T, cost: 1
 228: l65 -> l64 : T, cost: 1
 231: l66 -> l6 : 1-i6^0 <= 0, cost: 1
 232: l66 -> l6 : 1+i6^0 <= 0, cost: 1
 233: l66 -> l6 : disp9^0'=1, (i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
 234: l67 -> l62 : T, cost: 1
 235: l67 -> l66 : disp9^0'=-i6^0+hsize_reg10^0, T, cost: 1
 236: l68 -> l67 : T, cost: 1
 237: l68 -> l1 : ent8^0'=ent8^post112, T, cost: 1
 238: l68 -> l67 : T, cost: 1
 240: l69 -> l68 : c7^0'=ret_getbyte25^0, fcode5^0'=fcode5^post115, i6^0'=i6^post115, in_count^0'=1+in_count^0, tmp___014^0'=ret_getbyte25^0, T, cost: 1
 242: l70 -> l69 : ret_getbyte25^0'=__const_429496^0, tmp___024^0 <= 0, cost: 1
 243: l70 -> l69 : incnt^0'=-1+incnt^0, ret_getbyte25^0'=ret_getbyte25^post118, 1-tmp___024^0 <= 0, cost: 1
 244: l71 -> l69 : ret_getbyte25^0'=__const_429496^0, incnt^0 <= 0, cost: 1
 245: l71 -> l70 : apsim_incnt^0'=-1+apsim_incnt^0, tmp___024^0'=apsim_incnt^0, 1-incnt^0 <= 0, cost: 1
 249: l73 -> l56 : count^0'=__const_50^0, i3^0'=0, seed2^0'=1, T, cost: 1

	Loop Acceleration

	Original rule:
	l2 -> l2 : i21^0'=-1+i21^0, 1-i21^0 <= 0, cost: 1
	New rule:
	l2 -> l2 : i21^0'=-n+i21^0, (-n+i21^0 >= 0 /\ -1+n >= 0), cost: 1

		-1+i21^0 >= 0 [0]: montonic decrease yields -n+i21^0 >= 0
		
		-1+i21^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+i21^0 >= 0)
		
		Replacement map: {-1+i21^0 >= 0 -> -n+i21^0 >= 0}

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}]

Step with 128

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}]

Step with 127

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 127[(1-i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {}]

Covered

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}]

Step with 126

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 126[(i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}, {}]

Step with 131

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 126[(i21^0 <= 0)], 131[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}, {}, {}]

Step with 246

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}, {}, {}, {}]

Step with 150

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)], 150[(1-bytes_out^0+in_count^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}, {}, {}, {}, {}]

Step with 148

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)], 150[(1-bytes_out^0+in_count^0 <= 0)], 148[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}, {}, {}, {}, {}, {}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)], 150[(1-bytes_out^0+in_count^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}, {}, {}, {}, {148[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}, {}, {}, {150[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 126[(i21^0 <= 0)], 131[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}, {}, {246[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T], 126[(i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {127[T]}, {131[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)], 128[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {126[T], 127[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 250[(-n+i21^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {128[T], 250[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}]

Step with 128

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}]

Step with 126

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {}]

Step with 131

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {}, {}]

Step with 246

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {}, {}, {}]

Step with 150

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)], 150[(1-bytes_out^0+in_count^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {}, {}, {}, {}]

Step with 148

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)], 150[(1-bytes_out^0+in_count^0 <= 0)], 148[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {}, {}, {}, {}, {}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)], 150[(1-bytes_out^0+in_count^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {}, {}, {}, {148[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T], 246[(incnt^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {}, {}, {150[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)], 131[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {}, {246[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 126[(i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {}, {131[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {126[T]}]

Step with 127

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T], 127[(1-i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {126[T]}, {}]

Covered

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)], 128[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {250[T]}, {126[T], 127[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 129[(1+i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {128[T], 250[T]}]

Backtrack

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {129[T]}]

Step with 130

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 248[T], 130[(-i21^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {129[T]}, {}]

Nonterm

Start location: l73
Program variables: __const_10000^0 __const_16^0 __const_2147483647^0 __const_256^0 __const_257^0 __const_429496^0 __const_50^0 __const_53^0 __const_65536^0 __const_8388607^0 __const_8^0 __const_9^0 apsim_bound11113^0 apsim_incnt^0 bits33^0 block_compress^0 bytes_out^0 c37^0 c7^0 checkpoint^0 clear_flg^0 code31^0 count^0 disp9^0 ent8^0 exit_stat^0 fcode5^0 free_ent^0 hshift11^0 hsize^0 hsize___019^0 hsize___027^0 hsize_reg10^0 i21^0 i29^0 i3^0 i41^0 i45^0 i6^0 in_count^0 incnt^0 m122^0 m130^0 maxbits^0 maxcode^0 maxmaxcode^0 n40^0 n44^0 n_bits^0 offset^0 out_count^0 r_off32^0 rat26^0 ratio^0 ret_getbyte18^0 ret_getbyte25^0 seed2^0 tabort4^0 tmp12^0 tmp___014^0 tmp___017^0 tmp___024^0 tmp___115^0
 126: l0 -> l1 : i21^0 <= 0, cost: 1
 127: l0 -> l2 : i21^0'=-1+i21^0, 1-i21^0 <= 0, cost: 1
 131: l1 -> l5 : T, cost: 1
 128: l2 -> l0 : T, cost: 1
 250: l2 -> l2 : i21^0'=-n+i21^0, (-n+i21^0 >= 0 /\ -1+n >= 0), cost: 1
 129: l3 -> l2 : i21^0'=__const_16^0+i21^0, 1+i21^0 <= 0, cost: 1
 130: l3 -> l4 : -i21^0 <= 0, cost: 1
 248: l4 -> l3 : i21^0'=-__const_16^0+i21^0, T, cost: 1
 251: l4 -> LoAT_sink : (__const_16^0 <= 0 /\ -__const_16^0+i21^0 >= 0), cost: NONTERM
 252: l4 -> l4 : i21^0'=i21^0-__const_16^0*n2, (-__const_16^0-__const_16^0*(-1+n2)+i21^0 >= 0 /\ -1+n2 >= 0 /\ -__const_16^0+i21^0 >= 0), cost: 1
 246: l5 -> l25 : incnt^0 <= 0, cost: 1
 247: l5 -> l71 : apsim_bound11113^0'=0, 1-incnt^0 <= 0, cost: 1
 132: l6 -> l7 : i6^0'=i6^0-disp9^0, T, cost: 1
 229: l7 -> l65 : -i6^0 <= 0, cost: 1
 230: l7 -> l65 : i6^0'=i6^0+hsize_reg10^0, 1+i6^0 <= 0, cost: 1
 133: l8 -> l4 : hshift11^0'=-hshift11^0+__const_8^0, hsize___019^0'=hsize^0, hsize_reg10^0'=hsize^0, i21^0'=-__const_16^0+hsize^0, m122^0'=-1, __const_65536^0-fcode5^0 <= 0, cost: 1
 134: l8 -> l9 : fcode5^0'=fcode5^post9, hshift11^0'=1+hshift11^0, 1-__const_65536^0+fcode5^0 <= 0, cost: 1
 241: l9 -> l8 : T, cost: 1
 135: l10 -> l11 : i29^0'=-__const_16^0+i29^0, T, cost: 1
 200: l11 -> l13 : i29^0'=__const_16^0+i29^0, 1+i29^0 <= 0, cost: 1
 201: l11 -> l10 : -i29^0 <= 0, cost: 1
 136: l12 -> l9 : ent8^0'=ret_getbyte18^0, fcode5^0'=hsize^0, hshift11^0'=0, tmp12^0'=ret_getbyte18^0, T, cost: 1
 137: l13 -> l14 : T, cost: 1
 198: l14 -> l51 : bits33^0'=n_bits^0, clear_flg^0'=1, code31^0'=__const_256^0, free_ent^0'=__const_257^0, r_off32^0'=offset^0, i29^0 <= 0, cost: 1
 199: l14 -> l13 : i29^0'=-1+i29^0, 1-i29^0 <= 0, cost: 1
 138: l15 -> l12 : ret_getbyte18^0'=__const_429496^0, tmp___017^0 <= 0, cost: 1
 139: l15 -> l12 : incnt^0'=-1+incnt^0, ret_getbyte18^0'=ret_getbyte18^post14, 1-tmp___017^0 <= 0, cost: 1
 140: l16 -> l12 : ret_getbyte18^0'=__const_429496^0, incnt^0 <= 0, cost: 1
 141: l16 -> l15 : apsim_incnt^0'=-1+apsim_incnt^0, tmp___017^0'=apsim_incnt^0, 1-incnt^0 <= 0, cost: 1
 142: l17 -> l16 : free_ent^0'=__const_257^0, T, cost: 1
 143: l18 -> l16 : free_ent^0'=__const_256^0, (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
 144: l18 -> l17 : 1-block_compress^0 <= 0, cost: 1
 145: l18 -> l17 : 1+block_compress^0 <= 0, cost: 1
 146: l19 -> l20 : bits33^0'=-1+bits33^0, c37^0'=c37^post21, T, cost: 1
 183: l20 -> l44 : (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
 184: l20 -> l45 : 1-bits33^0 <= 0, cost: 1
 185: l20 -> l45 : 1+bits33^0 <= 0, cost: 1
 147: l21 -> l22 : T, cost: 1
 172: l22 -> l39 : n40^0-i41^0 <= 0, cost: 1
 173: l22 -> l40 : 1-n40^0+i41^0 <= 0, cost: 1
 148: l23 -> l24 : T, cost: 1
 149: l25 -> l23 : bytes_out^0-in_count^0 <= 0, cost: 1
 150: l25 -> l23 : exit_stat^0'=2, 1-bytes_out^0+in_count^0 <= 0, cost: 1
 151: l26 -> l27 : bytes_out^0'=bytes_out^post26, offset^0'=0, T, cost: 1
 163: l27 -> l35 : T, cost: 1
 152: l28 -> l26 : T, cost: 1
 153: l29 -> l28 : __const_16^0-i45^0 <= 0, cost: 1
 154: l29 -> l30 : i45^0'=1+i45^0, 1-__const_16^0+i45^0 <= 0, cost: 1
 195: l30 -> l31 : T, cost: 1
 155: l31 -> l28 : n44^0-i45^0 <= 0, cost: 1
 156: l31 -> l29 : 1-n44^0+i45^0 <= 0, cost: 1
 157: l32 -> l26 : offset^0 <= 0, cost: 1
 158: l32 -> l30 : i45^0'=0, n44^0'=n44^post33, 1-offset^0 <= 0, cost: 1
 159: l33 -> l27 : maxcode^0'=maxcode^post34, T, cost: 1
 160: l34 -> l33 : 1-n_bits^0+maxbits^0 <= 0, cost: 1
 161: l34 -> l33 : 1+n_bits^0-maxbits^0 <= 0, cost: 1
 162: l34 -> l27 : maxcode^0'=maxmaxcode^0, (-n_bits^0+maxbits^0 <= 0 /\ -n_bits^0+maxbits^0 == 0 /\ n_bits^0-maxbits^0 <= 0), cost: 1
 202: l35 -> l1 : T, cost: 1
 164: l36 -> l27 : clear_flg^0'=0, maxcode^0'=maxcode^post39, n_bits^0'=__const_9^0, T, cost: 1
 165: l37 -> l34 : n_bits^0'=1+n_bits^0, (-clear_flg^0 <= 0 /\ -clear_flg^0 == 0 /\ clear_flg^0 <= 0), cost: 1
 166: l37 -> l36 : 1-clear_flg^0 <= 0, cost: 1
 167: l37 -> l36 : 1+clear_flg^0 <= 0, cost: 1
 168: l38 -> l37 : offset^0'=0, T, cost: 1
 169: l39 -> l38 : bytes_out^0'=bytes_out^0+n_bits^0, T, cost: 1
 170: l40 -> l39 : __const_16^0-i41^0 <= 0, cost: 1
 171: l40 -> l21 : i41^0'=1+i41^0, 1-__const_16^0+i41^0 <= 0, cost: 1
 174: l41 -> l38 : offset^0 <= 0, cost: 1
 175: l41 -> l21 : i41^0'=0, n40^0'=n_bits^0, 1-offset^0 <= 0, cost: 1
 176: l42 -> l27 : clear_flg^0 <= 0, cost: 1
 177: l42 -> l41 : 1-clear_flg^0 <= 0, cost: 1
 178: l43 -> l42 : free_ent^0-maxcode^0 <= 0, cost: 1
 179: l43 -> l41 : 1-free_ent^0+maxcode^0 <= 0, cost: 1
 180: l44 -> l43 : offset^0'=0, T, cost: 1
 181: l45 -> l19 : T, cost: 1
 182: l45 -> l44 : T, cost: 1
 186: l46 -> l19 : bits33^0'=n_bits^0, bytes_out^0'=bytes_out^0+n_bits^0, T, cost: 1
 187: l46 -> l43 : T, cost: 1
 188: l47 -> l46 : offset^0'=offset^0+n_bits^0, T, cost: 1
 189: l48 -> l47 : T, cost: 1
 190: l49 -> l47 : (bits33^0 <= 0 /\ bits33^0 == 0 /\ -bits33^0 <= 0), cost: 1
 191: l49 -> l48 : 1-bits33^0 <= 0, cost: 1
 192: l49 -> l48 : 1+bits33^0 <= 0, cost: 1
 193: l50 -> l49 : 1+bits33^0-__const_8^0 <= 0, cost: 1
 194: l50 -> l49 : bits33^0'=bits33^0-__const_8^0, code31^0'=code31^post69, -bits33^0+__const_8^0 <= 0, cost: 1
 196: l51 -> l32 : 1+code31^0 <= 0, cost: 1
 197: l51 -> l50 : bits33^0'=bits33^0-__const_8^0+r_off32^post72, code31^0'=code31^post72, r_off32^0'=r_off32^post72, -code31^0 <= 0, cost: 1
 203: l52 -> l53 : rat26^0'=rat26^post78, T, cost: 1
 204: l53 -> l10 : hsize___027^0'=hsize^0, i29^0'=-__const_16^0+hsize^0, m130^0'=-1, ratio^0'=0, rat26^0-ratio^0 <= 0, cost: 1
 205: l53 -> l35 : ratio^0'=rat26^0, 1-rat26^0+ratio^0 <= 0, cost: 1
 206: l54 -> l52 : 1-rat26^0 <= 0, cost: 1
 207: l54 -> l52 : 1+rat26^0 <= 0, cost: 1
 208: l54 -> l53 : rat26^0'=__const_2147483647^0, (rat26^0 <= 0 /\ rat26^0 == 0 /\ -rat26^0 <= 0), cost: 1
 209: l55 -> l18 : apsim_incnt^0'=__const_53^0, bytes_out^0'=3, checkpoint^0'=__const_10000^0, clear_flg^0'=0, i6^0'=0, in_count^0'=1, incnt^0'=count^0, maxbits^0'=__const_16^0, maxcode^0'=maxcode^post84, maxmaxcode^0'=maxmaxcode^post84, n_bits^0'=__const_9^0, offset^0'=0, out_count^0'=0, ratio^0'=0, -i3^0+__const_50^0 <= 0, cost: 1
 210: l55 -> l56 : i3^0'=1+i3^0, seed2^0'=seed2^post85, tabort4^0'=i3^0, 1+i3^0-__const_50^0 <= 0, cost: 1
 239: l56 -> l55 : T, cost: 1
 211: l57 -> l53 : rat26^0'=rat26^post86, -__const_8388607^0+in_count^0 <= 0, cost: 1
 212: l57 -> l54 : rat26^0'=rat26^post87, 1+__const_8388607^0-in_count^0 <= 0, cost: 1
 213: l58 -> l57 : checkpoint^0'=__const_10000^0+in_count^0, T, cost: 1
 214: l59 -> l1 : (-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0), cost: 1
 215: l59 -> l58 : 1-block_compress^0 <= 0, cost: 1
 216: l59 -> l58 : 1+block_compress^0 <= 0, cost: 1
 217: l60 -> l1 : 1-checkpoint^0+in_count^0 <= 0, cost: 1
 218: l60 -> l59 : checkpoint^0-in_count^0 <= 0, cost: 1
 219: l61 -> l60 : maxmaxcode^0-free_ent^0 <= 0, cost: 1
 220: l61 -> l1 : free_ent^0'=1+free_ent^0, tmp___115^0'=free_ent^0, 1-maxmaxcode^0+free_ent^0 <= 0, cost: 1
 221: l62 -> l61 : ent8^0'=c7^0, out_count^0'=1+out_count^0, T, cost: 1
 222: l63 -> l62 : -apsim_bound11113^0+in_count^0 <= 0, cost: 1
 223: l63 -> l6 : 1+apsim_bound11113^0-in_count^0 <= 0, cost: 1
 224: l64 -> l63 : apsim_bound11113^0'=1+apsim_bound11113^0, T, cost: 1
 225: l64 -> l62 : T, cost: 1
 226: l65 -> l64 : T, cost: 1
 227: l65 -> l1 : ent8^0'=ent8^post102, T, cost: 1
 228: l65 -> l64 : T, cost: 1
 231: l66 -> l6 : 1-i6^0 <= 0, cost: 1
 232: l66 -> l6 : 1+i6^0 <= 0, cost: 1
 233: l66 -> l6 : disp9^0'=1, (i6^0 <= 0 /\ i6^0 == 0 /\ -i6^0 <= 0), cost: 1
 234: l67 -> l62 : T, cost: 1
 235: l67 -> l66 : disp9^0'=-i6^0+hsize_reg10^0, T, cost: 1
 236: l68 -> l67 : T, cost: 1
 237: l68 -> l1 : ent8^0'=ent8^post112, T, cost: 1
 238: l68 -> l67 : T, cost: 1
 240: l69 -> l68 : c7^0'=ret_getbyte25^0, fcode5^0'=fcode5^post115, i6^0'=i6^post115, in_count^0'=1+in_count^0, tmp___014^0'=ret_getbyte25^0, T, cost: 1
 242: l70 -> l69 : ret_getbyte25^0'=__const_429496^0, tmp___024^0 <= 0, cost: 1
 243: l70 -> l69 : incnt^0'=-1+incnt^0, ret_getbyte25^0'=ret_getbyte25^post118, 1-tmp___024^0 <= 0, cost: 1
 244: l71 -> l69 : ret_getbyte25^0'=__const_429496^0, incnt^0 <= 0, cost: 1
 245: l71 -> l70 : apsim_incnt^0'=-1+apsim_incnt^0, tmp___024^0'=apsim_incnt^0, 1-incnt^0 <= 0, cost: 1
 249: l73 -> l56 : count^0'=__const_50^0, i3^0'=0, seed2^0'=1, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l4 -> l4 : i21^0'=-__const_16^0+i21^0, __const_16^0-i21^0 <= 0, cost: 1
	New rule:
	l4 -> LoAT_sink : (__const_16^0 <= 0 /\ -__const_16^0+i21^0 >= 0), cost: NONTERM

		-__const_16^0+i21^0 >= 0 [0]: eventual decrease yields (-__const_16^0-__const_16^0*(-1+n2)+i21^0 >= 0 /\ -__const_16^0+i21^0 >= 0)
		
		-__const_16^0+i21^0 >= 0 [1]: eventual increase yields (__const_16^0 <= 0 /\ -__const_16^0+i21^0 >= 0)
		
		Replacement map: {-__const_16^0+i21^0 >= 0 -> (__const_16^0 <= 0 /\ -__const_16^0+i21^0 >= 0)}

	Loop Acceleration

	Original rule:
	l4 -> l4 : i21^0'=-__const_16^0+i21^0, __const_16^0-i21^0 <= 0, cost: 1
	New rule:
	l4 -> l4 : i21^0'=i21^0-__const_16^0*n2, (-__const_16^0-__const_16^0*(-1+n2)+i21^0 >= 0 /\ -1+n2 >= 0 /\ -__const_16^0+i21^0 >= 0), cost: 1

		-__const_16^0+i21^0 >= 0 [0]: eventual decrease yields (-__const_16^0-__const_16^0*(-1+n2)+i21^0 >= 0 /\ -__const_16^0+i21^0 >= 0)
		
		-__const_16^0+i21^0 >= 0 [1]: eventual increase yields (__const_16^0 <= 0 /\ -__const_16^0+i21^0 >= 0)
		
		Replacement map: {-__const_16^0+i21^0 >= 0 -> (-__const_16^0-__const_16^0*(-1+n2)+i21^0 >= 0 /\ -__const_16^0+i21^0 >= 0)}

Step with 251

	Trace

	249[T], 239[T], 209[(-i3^0+__const_50^0 <= 0)], 143[(-block_compress^0 <= 0 /\ -block_compress^0 == 0 /\ block_compress^0 <= 0)], 140[(incnt^0 <= 0)], 136[T], 241[T], 133[(__const_65536^0-fcode5^0 <= 0)], 251[(__const_16^0 <= 0 /\ -__const_16^0+i21^0 >= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {251[T]}]

Refute

	Counterexample

	[ __const_10000^0=0 __const_16^0=0 __const_2147483647^0=0 __const_256^0=0 __const_257^0=0 __const_429496^0=0 __const_50^0=0 __const_53^0=0 __const_65536^0=0 __const_8388607^0=0 __const_8^0=0 __const_9^0=0 apsim_bound11113^0=0 apsim_incnt^0=0 bits33^0=0 block_compress^0=0 bytes_out^0=0 c37^0=0 c7^0=0 checkpoint^0=0 clear_flg^0=0 code31^0=0 count^0=0 disp9^0=0 ent8^0=0 exit_stat^0=0 fcode5^0=0 free_ent^0=0 hshift11^0=0 hsize^0=0 hsize___019^0=0 hsize___027^0=0 hsize_reg10^0=0 i21^0=0 i29^0=0 i3^0=0 i41^0=0 i45^0=0 i6^0=0 in_count^0=0 incnt^0=0 m122^0=0 m130^0=0 maxbits^0=0 maxcode^0=0 maxmaxcode^0=0 n40^0=0 n44^0=0 n_bits^0=0 offset^0=0 out_count^0=0 r_off32^0=0 rat26^0=0 ratio^0=0 ret_getbyte18^0=0 ret_getbyte25^0=0 seed2^0=1 tabort4^0=0 tmp12^0=0 tmp___014^0=0 tmp___017^0=0 tmp___024^0=0 tmp___115^0=0 ] 249 [ __const_10000^0=0 __const_16^0=0 __const_2147483647^0=0 __const_256^0=0 __const_257^0=0 __const_429496^0=0 __const_50^0=0 __const_53^0=0 __const_65536^0=0 __const_8388607^0=0 __const_8^0=0 __const_9^0=0 apsim_bound11113^0=0 apsim_incnt^0=0 bits33^0=0 block_compress^0=0 bytes_out^0=0 c37^0=0 c7^0=0 checkpoint^0=0 clear_flg^0=0 code31^0=0 count^0=0 disp9^0=0 ent8^0=0 exit_stat^0=0 fcode5^0=0 free_ent^0=0 hshift11^0=0 hsize^0=0 hsize___019^0=0 hsize___027^0=0 hsize_reg10^0=0 i21^0=0 i29^0=0 i3^0=0 i41^0=0 i45^0=0 i6^0=0 in_count^0=0 incnt^0=0 m122^0=0 m130^0=0 maxbits^0=0 maxcode^0=0 maxmaxcode^0=0 n40^0=0 n44^0=0 n_bits^0=0 offset^0=0 out_count^0=0 r_off32^0=0 rat26^0=0 ratio^0=0 ret_getbyte18^0=0 ret_getbyte25^0=0 seed2^0=1 tabort4^0=0 tmp12^0=0 tmp___014^0=0 tmp___017^0=0 tmp___024^0=0 tmp___115^0=0 ] 239 [ __const_10000^0=0 __const_16^0=0 __const_2147483647^0=0 __const_256^0=0 __const_257^0=0 __const_429496^0=0 __const_50^0=0 __const_53^0=0 __const_65536^0=0 __const_8388607^0=0 __const_8^0=0 __const_9^0=0 apsim_bound11113^0=0 apsim_incnt^0=0 bits33^0=0 block_compress^0=0 bytes_out^0=3 c37^0=0 c7^0=0 checkpoint^0=0 clear_flg^0=0 code31^0=0 count^0=0 disp9^0=0 ent8^0=0 exit_stat^0=0 fcode5^0=0 free_ent^0=0 hshift11^0=0 hsize^0=0 hsize___019^0=0 hsize___027^0=0 hsize_reg10^0=0 i21^0=0 i29^0=0 i3^0=0 i41^0=0 i45^0=0 i6^0=0 in_count^0=1 incnt^0=0 m122^0=0 m130^0=0 maxbits^0=0 maxcode^0=0 maxmaxcode^0=0 n40^0=0 n44^0=0 n_bits^0=0 offset^0=0 out_count^0=0 r_off32^0=0 rat26^0=0 ratio^0=0 ret_getbyte18^0=0 ret_getbyte25^0=0 seed2^0=1 tabort4^0=0 tmp12^0=0 tmp___014^0=0 tmp___017^0=0 tmp___024^0=0 tmp___115^0=0 ] 209 [ __const_10000^0=0 __const_16^0=0 __const_2147483647^0=0 __const_256^0=0 __const_257^0=0 __const_429496^0=0 __const_50^0=0 __const_53^0=0 __const_65536^0=0 __const_8388607^0=0 __const_8^0=0 __const_9^0=0 apsim_bound11113^0=0 apsim_incnt^0=0 bits33^0=0 block_compress^0=0 bytes_out^0=3 c37^0=0 c7^0=0 checkpoint^0=0 clear_flg^0=0 code31^0=0 count^0=0 disp9^0=0 ent8^0=0 exit_stat^0=0 fcode5^0=0 free_ent^0=0 hshift11^0=0 hsize^0=0 hsize___019^0=0 hsize___027^0=0 hsize_reg10^0=0 i21^0=0 i29^0=0 i3^0=0 i41^0=0 i45^0=0 i6^0=0 in_count^0=1 incnt^0=0 m122^0=0 m130^0=0 maxbits^0=0 maxcode^0=0 maxmaxcode^0=0 n40^0=0 n44^0=0 n_bits^0=0 offset^0=0 out_count^0=0 r_off32^0=0 rat26^0=0 ratio^0=0 ret_getbyte18^0=0 ret_getbyte25^0=0 seed2^0=1 tabort4^0=0 tmp12^0=0 tmp___014^0=0 tmp___017^0=0 tmp___024^0=0 tmp___115^0=0 ] 143 [ __const_10000^0=0 __const_16^0=0 __const_2147483647^0=0 __const_256^0=0 __const_257^0=0 __const_429496^0=0 __const_50^0=0 __const_53^0=0 __const_65536^0=0 __const_8388607^0=0 __const_8^0=0 __const_9^0=0 apsim_bound11113^0=0 apsim_incnt^0=0 bits33^0=0 block_compress^0=0 bytes_out^0=3 c37^0=0 c7^0=0 checkpoint^0=0 clear_flg^0=0 code31^0=0 count^0=0 disp9^0=0 ent8^0=0 exit_stat^0=0 fcode5^0=0 free_ent^0=0 hshift11^0=0 hsize^0=0 hsize___019^0=0 hsize___027^0=0 hsize_reg10^0=0 i21^0=0 i29^0=0 i3^0=0 i41^0=0 i45^0=0 i6^0=0 in_count^0=1 incnt^0=0 m122^0=0 m130^0=0 maxbits^0=0 maxcode^0=0 maxmaxcode^0=0 n40^0=0 n44^0=0 n_bits^0=0 offset^0=0 out_count^0=0 r_off32^0=0 rat26^0=0 ratio^0=0 ret_getbyte18^0=0 ret_getbyte25^0=0 seed2^0=1 tabort4^0=0 tmp12^0=0 tmp___014^0=0 tmp___017^0=0 tmp___024^0=0 tmp___115^0=0 ] 140 [ __const_10000^0=0 __const_16^0=0 __const_2147483647^0=0 __const_256^0=0 __const_257^0=0 __const_429496^0=0 __const_50^0=0 __const_53^0=0 __const_65536^0=0 __const_8388607^0=0 __const_8^0=0 __const_9^0=0 apsim_bound11113^0=0 apsim_incnt^0=0 bits33^0=0 block_compress^0=0 bytes_out^0=3 c37^0=0 c7^0=0 checkpoint^0=0 clear_flg^0=0 code31^0=0 count^0=0 disp9^0=0 ent8^0=0 exit_stat^0=0 fcode5^0=0 free_ent^0=0 hshift11^0=0 hsize^0=0 hsize___019^0=0 hsize___027^0=0 hsize_reg10^0=0 i21^0=0 i29^0=0 i3^0=0 i41^0=0 i45^0=0 i6^0=0 in_count^0=1 incnt^0=0 m122^0=0 m130^0=0 maxbits^0=0 maxcode^0=0 maxmaxcode^0=0 n40^0=0 n44^0=0 n_bits^0=0 offset^0=0 out_count^0=0 r_off32^0=0 rat26^0=0 ratio^0=0 ret_getbyte18^0=0 ret_getbyte25^0=0 seed2^0=1 tabort4^0=0 tmp12^0=0 tmp___014^0=0 tmp___017^0=0 tmp___024^0=0 tmp___115^0=0 ] 136 [ __const_10000^0=0 __const_16^0=0 __const_2147483647^0=0 __const_256^0=0 __const_257^0=0 __const_429496^0=0 __const_50^0=0 __const_53^0=0 __const_65536^0=0 __const_8388607^0=0 __const_8^0=0 __const_9^0=0 apsim_bound11113^0=0 apsim_incnt^0=0 bits33^0=0 block_compress^0=0 bytes_out^0=3 c37^0=0 c7^0=0 checkpoint^0=0 clear_flg^0=0 code31^0=0 count^0=0 disp9^0=0 ent8^0=0 exit_stat^0=0 fcode5^0=0 free_ent^0=0 hshift11^0=0 hsize^0=0 hsize___019^0=0 hsize___027^0=0 hsize_reg10^0=0 i21^0=0 i29^0=0 i3^0=0 i41^0=0 i45^0=0 i6^0=0 in_count^0=1 incnt^0=0 m122^0=0 m130^0=0 maxbits^0=0 maxcode^0=0 maxmaxcode^0=0 n40^0=0 n44^0=0 n_bits^0=0 offset^0=0 out_count^0=0 r_off32^0=0 rat26^0=0 ratio^0=0 ret_getbyte18^0=0 ret_getbyte25^0=0 seed2^0=1 tabort4^0=0 tmp12^0=0 tmp___014^0=0 tmp___017^0=0 tmp___024^0=0 tmp___115^0=0 ] 241 [ __const_10000^0=0 __const_16^0=0 __const_2147483647^0=0 __const_256^0=0 __const_257^0=0 __const_429496^0=0 __const_50^0=0 __const_53^0=0 __const_65536^0=0 __const_8388607^0=0 __const_8^0=0 __const_9^0=0 apsim_bound11113^0=0 apsim_incnt^0=0 bits33^0=0 block_compress^0=0 bytes_out^0=3 c37^0=0 c7^0=0 checkpoint^0=0 clear_flg^0=0 code31^0=0 count^0=0 disp9^0=0 ent8^0=0 exit_stat^0=0 fcode5^0=0 free_ent^0=0 hshift11^0=0 hsize^0=0 hsize___019^0=0 hsize___027^0=0 hsize_reg10^0=0 i21^0=0 i29^0=0 i3^0=0 i41^0=0 i45^0=0 i6^0=0 in_count^0=1 incnt^0=0 m122^0=-1 m130^0=0 maxbits^0=0 maxcode^0=0 maxmaxcode^0=0 n40^0=0 n44^0=0 n_bits^0=0 offset^0=0 out_count^0=0 r_off32^0=0 rat26^0=0 ratio^0=0 ret_getbyte18^0=0 ret_getbyte25^0=0 seed2^0=1 tabort4^0=0 tmp12^0=0 tmp___014^0=0 tmp___017^0=0 tmp___024^0=0 tmp___115^0=0 ] 133 [ __const_10000^0=0 __const_16^0=0 __const_2147483647^0=0 __const_256^0=0 __const_257^0=0 __const_429496^0=0 __const_50^0=0 __const_53^0=0 __const_65536^0=0 __const_8388607^0=0 __const_8^0=0 __const_9^0=0 apsim_bound11113^0=0 apsim_incnt^0=0 bits33^0=0 block_compress^0=0 bytes_out^0=0 c37^0=0 c7^0=0 checkpoint^0=0 clear_flg^0=0 code31^0=0 count^0=count^0 disp9^0=0 ent8^0=0 exit_stat^0=0 fcode5^0=0 free_ent^0=0 hshift11^0=0 hsize^0=0 hsize___019^0=0 hsize___027^0=0 hsize_reg10^0=0 i21^0=0 i29^0=0 i3^0=i3^0 i41^0=0 i45^0=0 i6^0=0 in_count^0=0 incnt^0=0 m122^0=0 m130^0=0 maxbits^0=0 maxcode^0=0 maxmaxcode^0=0 n40^0=0 n44^0=0 n_bits^0=0 offset^0=0 out_count^0=0 r_off32^0=0 rat26^0=0 ratio^0=0 ret_getbyte18^0=0 ret_getbyte25^0=0 seed2^0=seed2^0 tabort4^0=0 tmp12^0=0 tmp___014^0=0 tmp___017^0=0 tmp___024^0=0 tmp___115^0=0 ] 251
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
