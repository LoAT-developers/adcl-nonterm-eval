WORST_CASE(Omega(0),?)

Initial ITS
Start location: l6
   0: l0 -> l1 : i^0'=i^post0, __const_20^0'=__const_20^post0, (-__const_20^post0+__const_20^0 == 0 /\ -i^post0+i^0 == 0), cost: 1
   1: l2 -> l0 : i^0'=i^post1, __const_20^0'=__const_20^post1, (__const_20^0-__const_20^post1 == 0 /\ -i^0+__const_20^0 <= 0 /\ i^0-i^post1 == 0), cost: 1
   2: l2 -> l3 : i^0'=i^post2, __const_20^0'=__const_20^post2, (1+i^0-__const_20^0 <= 0 /\ -1-i^0+i^post2 == 0 /\ __const_20^0-__const_20^post2 == 0), cost: 1
   5: l3 -> l2 : i^0'=i^post5, __const_20^0'=__const_20^post5, (i^0-i^post5 == 0 /\ -__const_20^post5+__const_20^0 == 0), cost: 1
   3: l4 -> l0 : i^0'=i^post3, __const_20^0'=__const_20^post3, (i^0 <= 0 /\ i^0-i^post3 == 0 /\ -__const_20^post3+__const_20^0 == 0), cost: 1
   4: l4 -> l3 : i^0'=i^post4, __const_20^0'=__const_20^post4, (i^0-i^post4 == 0 /\ __const_20^0-__const_20^post4 == 0 /\ 1-i^0 <= 0), cost: 1
   6: l5 -> l4 : i^0'=i^post6, __const_20^0'=__const_20^post6, (0 == 0 /\ i^10 == 0 /\ __const_20^0-__const_20^post6 == 0), cost: 1
   7: l6 -> l5 : i^0'=i^post7, __const_20^0'=__const_20^post7, (__const_20^0-__const_20^post7 == 0 /\ i^0-i^post7 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l6
   2: l2 -> l3 : i^0'=i^post2, __const_20^0'=__const_20^post2, (1+i^0-__const_20^0 <= 0 /\ -1-i^0+i^post2 == 0 /\ __const_20^0-__const_20^post2 == 0), cost: 1
   5: l3 -> l2 : i^0'=i^post5, __const_20^0'=__const_20^post5, (i^0-i^post5 == 0 /\ -__const_20^post5+__const_20^0 == 0), cost: 1
   4: l4 -> l3 : i^0'=i^post4, __const_20^0'=__const_20^post4, (i^0-i^post4 == 0 /\ __const_20^0-__const_20^post4 == 0 /\ 1-i^0 <= 0), cost: 1
   6: l5 -> l4 : i^0'=i^post6, __const_20^0'=__const_20^post6, (0 == 0 /\ i^10 == 0 /\ __const_20^0-__const_20^post6 == 0), cost: 1
   7: l6 -> l5 : i^0'=i^post7, __const_20^0'=__const_20^post7, (__const_20^0-__const_20^post7 == 0 /\ i^0-i^post7 == 0), cost: 1


Applied preprocessing
Original rule:
l2 -> l3 : i^0'=i^post2, __const_20^0'=__const_20^post2, (1+i^0-__const_20^0 <= 0 /\ -1-i^0+i^post2 == 0 /\ __const_20^0-__const_20^post2 == 0), cost: 1
New rule:
l2 -> l3 : i^0'=1+i^0, 1+i^0-__const_20^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : i^0'=i^post4, __const_20^0'=__const_20^post4, (i^0-i^post4 == 0 /\ __const_20^0-__const_20^post4 == 0 /\ 1-i^0 <= 0), cost: 1
New rule:
l4 -> l3 : -1+i^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : i^0'=i^post5, __const_20^0'=__const_20^post5, (i^0-i^post5 == 0 /\ -__const_20^post5+__const_20^0 == 0), cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : i^0'=i^post6, __const_20^0'=__const_20^post6, (0 == 0 /\ i^10 == 0 /\ __const_20^0-__const_20^post6 == 0), cost: 1
New rule:
l5 -> l4 : i^0'=i^post6, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : i^0'=i^post7, __const_20^0'=__const_20^post7, (__const_20^0-__const_20^post7 == 0 /\ i^0-i^post7 == 0), cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
   8: l2 -> l3 : i^0'=1+i^0, 1+i^0-__const_20^0 <= 0, cost: 1
  10: l3 -> l2 : TRUE, cost: 1
   9: l4 -> l3 : -1+i^0 >= 0, cost: 1
  11: l5 -> l4 : i^0'=i^post6, 0 == 0, cost: 1
  12: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l4 : i^0'=i^post6, 0 == 0, cost: 1
New rule:
l6 -> l4 : i^0'=i^post6, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 11 12

Eliminating location l4 by chaining:

Applied chaining
First rule:
l6 -> l4 : i^0'=i^post6, 0 == 0, cost: 2
Second rule:
l4 -> l3 : -1+i^0 >= 0, cost: 1
New rule:
l6 -> l3 : i^0'=i^post6, (0 == 0 /\ -1+i^post6 >= 0), cost: 3

Applied simplification
Original rule:
l6 -> l3 : i^0'=i^post6, (0 == 0 /\ -1+i^post6 >= 0), cost: 3
New rule:
l6 -> l3 : i^0'=i^post6, -1+i^post6 >= 0, cost: 3

Applied deletion
Removed the following rules: 9 13

Eliminating location l2 by chaining:

Applied chaining
First rule:
l3 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l3 : i^0'=1+i^0, 1+i^0-__const_20^0 <= 0, cost: 1
New rule:
l3 -> l3 : i^0'=1+i^0, 1+i^0-__const_20^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 8 10

Eliminated locations on linear paths
Start location: l6
  15: l3 -> l3 : i^0'=1+i^0, 1+i^0-__const_20^0 <= 0, cost: 2
  14: l6 -> l3 : i^0'=i^post6, -1+i^post6 >= 0, cost: 3


Applied acceleration
Original rule:
l3 -> l3 : i^0'=1+i^0, 1+i^0-__const_20^0 <= 0, cost: 2
New rule:
l3 -> l3 : i^0'=n+i^0, (n >= 0 /\ -n-i^0+__const_20^0 >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_liIFib.txt

Applied instantiation
Original rule:
l3 -> l3 : i^0'=n+i^0, (n >= 0 /\ -n-i^0+__const_20^0 >= 0), cost: 2*n
New rule:
l3 -> l3 : i^0'=__const_20^0, (0 >= 0 /\ -i^0+__const_20^0 >= 0), cost: -2*i^0+2*__const_20^0

Applied simplification
Original rule:
l3 -> l3 : i^0'=__const_20^0, (0 >= 0 /\ -i^0+__const_20^0 >= 0), cost: -2*i^0+2*__const_20^0
New rule:
l3 -> l3 : i^0'=__const_20^0, -i^0+__const_20^0 >= 0, cost: -2*i^0+2*__const_20^0

Applied deletion
Removed the following rules: 15

Accelerated simple loops
Start location: l6
  17: l3 -> l3 : i^0'=__const_20^0, -i^0+__const_20^0 >= 0, cost: -2*i^0+2*__const_20^0
  14: l6 -> l3 : i^0'=i^post6, -1+i^post6 >= 0, cost: 3


Applied chaining
First rule:
l6 -> l3 : i^0'=i^post6, -1+i^post6 >= 0, cost: 3
Second rule:
l3 -> l3 : i^0'=__const_20^0, -i^0+__const_20^0 >= 0, cost: -2*i^0+2*__const_20^0
New rule:
l6 -> l3 : i^0'=__const_20^0, (-1+i^post6 >= 0 /\ -i^post6+__const_20^0 >= 0), cost: 3-2*i^post6+2*__const_20^0

Applied deletion
Removed the following rules: 17

Chained accelerated rules with incoming rules
Start location: l6
  14: l6 -> l3 : i^0'=i^post6, -1+i^post6 >= 0, cost: 3
  18: l6 -> l3 : i^0'=__const_20^0, (-1+i^post6 >= 0 /\ -i^post6+__const_20^0 >= 0), cost: 3-2*i^post6+2*__const_20^0


Removed unreachable locations and irrelevant leafs
Start location: l6
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

