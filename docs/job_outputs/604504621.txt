WORST_CASE(Omega(0),?)

Initial ITS
Start location: l4
   0: l0 -> l1 : x^0'=x^post0, z^0'=z^post0, a^0'=a^post0, y^0'=y^post0, (1-x^0+x^post0 == 0 /\ z^0-z^post0 == 0 /\ y^0-y^post0 == 0 /\ a^0-a^post0 == 0 /\ 1-x^0 <= 0), cost: 1
   2: l0 -> l2 : x^0'=x^post2, z^0'=z^post2, a^0'=a^post2, y^0'=y^post2, (-x^0+x^post2-y^0 == 0 /\ z^post2-z^0-a^0 == 0 /\ 1-x^0 <= 0 /\ y^post2-z^0-y^0 == 0 /\ 1+a^post2-a^0 == 0), cost: 1
   1: l1 -> l0 : x^0'=x^post1, z^0'=z^post1, a^0'=a^post1, y^0'=y^post1, (a^0-a^post1 == 0 /\ z^0-z^post1 == 0 /\ x^0-x^post1 == 0 /\ -y^post1+y^0 == 0), cost: 1
   3: l2 -> l0 : x^0'=x^post3, z^0'=z^post3, a^0'=a^post3, y^0'=y^post3, (-a^post3+a^0 == 0 /\ -y^post3+y^0 == 0 /\ -z^post3+z^0 == 0 /\ x^0-x^post3 == 0), cost: 1
   4: l3 -> l0 : x^0'=x^post4, z^0'=z^post4, a^0'=a^post4, y^0'=y^post4, (-a^post4+a^0 == 0 /\ -y^post4+y^0 == 0 /\ -z^post4+z^0 == 0 /\ -x^post4+x^0 == 0), cost: 1
   5: l4 -> l3 : x^0'=x^post5, z^0'=z^post5, a^0'=a^post5, y^0'=y^post5, (z^0-z^post5 == 0 /\ y^0-y^post5 == 0 /\ x^0-x^post5 == 0 /\ a^0-a^post5 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post0, z^0'=z^post0, a^0'=a^post0, y^0'=y^post0, (1-x^0+x^post0 == 0 /\ z^0-z^post0 == 0 /\ y^0-y^post0 == 0 /\ a^0-a^post0 == 0 /\ 1-x^0 <= 0), cost: 1
New rule:
l0 -> l1 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : x^0'=x^post1, z^0'=z^post1, a^0'=a^post1, y^0'=y^post1, (a^0-a^post1 == 0 /\ z^0-z^post1 == 0 /\ x^0-x^post1 == 0 /\ -y^post1+y^0 == 0), cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : x^0'=x^post2, z^0'=z^post2, a^0'=a^post2, y^0'=y^post2, (-x^0+x^post2-y^0 == 0 /\ z^post2-z^0-a^0 == 0 /\ 1-x^0 <= 0 /\ y^post2-z^0-y^0 == 0 /\ 1+a^post2-a^0 == 0), cost: 1
New rule:
l0 -> l2 : x^0'=x^0+y^0, z^0'=z^0+a^0, a^0'=-1+a^0, y^0'=z^0+y^0, -1+x^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : x^0'=x^post3, z^0'=z^post3, a^0'=a^post3, y^0'=y^post3, (-a^post3+a^0 == 0 /\ -y^post3+y^0 == 0 /\ -z^post3+z^0 == 0 /\ x^0-x^post3 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : x^0'=x^post4, z^0'=z^post4, a^0'=a^post4, y^0'=y^post4, (-a^post4+a^0 == 0 /\ -y^post4+y^0 == 0 /\ -z^post4+z^0 == 0 /\ -x^post4+x^0 == 0), cost: 1
New rule:
l3 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : x^0'=x^post5, z^0'=z^post5, a^0'=a^post5, y^0'=y^post5, (z^0-z^post5 == 0 /\ y^0-y^post5 == 0 /\ x^0-x^post5 == 0 /\ a^0-a^post5 == 0), cost: 1
New rule:
l4 -> l3 : TRUE, cost: 1

Simplified rules
Start location: l4
   6: l0 -> l1 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 1
   8: l0 -> l2 : x^0'=x^0+y^0, z^0'=z^0+a^0, a^0'=-1+a^0, y^0'=z^0+y^0, -1+x^0 >= 0, cost: 1
   7: l1 -> l0 : TRUE, cost: 1
   9: l2 -> l0 : TRUE, cost: 1
  10: l3 -> l0 : TRUE, cost: 1
  11: l4 -> l3 : TRUE, cost: 1


Eliminating location l3 by chaining:

Applied chaining
First rule:
l4 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l0 : TRUE, cost: 1
New rule:
l4 -> l0 : TRUE, cost: 2

Applied deletion
Removed the following rules: 10 11

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminating location l2 by chaining:

Applied chaining
First rule:
l0 -> l2 : x^0'=x^0+y^0, z^0'=z^0+a^0, a^0'=-1+a^0, y^0'=z^0+y^0, -1+x^0 >= 0, cost: 1
Second rule:
l2 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : x^0'=x^0+y^0, z^0'=z^0+a^0, a^0'=-1+a^0, y^0'=z^0+y^0, -1+x^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 8 9

Eliminated locations on linear paths
Start location: l4
  13: l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
  14: l0 -> l0 : x^0'=x^0+y^0, z^0'=z^0+a^0, a^0'=-1+a^0, y^0'=z^0+y^0, -1+x^0 >= 0, cost: 2
  12: l4 -> l0 : TRUE, cost: 2


Applied acceleration
Original rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
New rule:
l0 -> l0 : x^0'=x^0-n, (x^0-n >= 0 /\ n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fBMjaf.txt

Applied instantiation
Original rule:
l0 -> l0 : x^0'=x^0-n, (x^0-n >= 0 /\ n >= 0), cost: 2*n
New rule:
l0 -> l0 : x^0'=0, (0 >= 0 /\ x^0 >= 0), cost: 2*x^0

Applied simplification
Original rule:
l0 -> l0 : x^0'=0, (0 >= 0 /\ x^0 >= 0), cost: 2*x^0
New rule:
l0 -> l0 : x^0'=0, x^0 >= 0, cost: 2*x^0

Applied deletion
Removed the following rules: 13

Accelerated simple loops
Start location: l4
  14: l0 -> l0 : x^0'=x^0+y^0, z^0'=z^0+a^0, a^0'=-1+a^0, y^0'=z^0+y^0, -1+x^0 >= 0, cost: 2
  16: l0 -> l0 : x^0'=0, x^0 >= 0, cost: 2*x^0
  12: l4 -> l0 : TRUE, cost: 2


Applied chaining
First rule:
l4 -> l0 : TRUE, cost: 2
Second rule:
l0 -> l0 : x^0'=x^0+y^0, z^0'=z^0+a^0, a^0'=-1+a^0, y^0'=z^0+y^0, -1+x^0 >= 0, cost: 2
New rule:
l4 -> l0 : x^0'=x^0+y^0, z^0'=z^0+a^0, a^0'=-1+a^0, y^0'=z^0+y^0, -1+x^0 >= 0, cost: 4

Applied chaining
First rule:
l4 -> l0 : TRUE, cost: 2
Second rule:
l0 -> l0 : x^0'=0, x^0 >= 0, cost: 2*x^0
New rule:
l4 -> l0 : x^0'=0, x^0 >= 0, cost: 2+2*x^0

Applied deletion
Removed the following rules: 14 16

Chained accelerated rules with incoming rules
Start location: l4
  12: l4 -> l0 : TRUE, cost: 2
  17: l4 -> l0 : x^0'=x^0+y^0, z^0'=z^0+a^0, a^0'=-1+a^0, y^0'=z^0+y^0, -1+x^0 >= 0, cost: 4
  18: l4 -> l0 : x^0'=0, x^0 >= 0, cost: 2+2*x^0


Removed unreachable locations and irrelevant leafs
Start location: l4
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

