NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f142_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ -arg2P0+arg2 == 0 /\ 5-arg1P0 == 0), cost: 1
   1: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, (arg2 < 0 /\ 1+arg1-arg1P1 == 0 /\ 1-arg2-arg2P1 == 0 /\ arg2+arg1 < 0), cost: 1
   2: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P2, arg1'=arg1P2, (arg2 > 0 /\ 1-arg2-arg2P2 == 0 /\ 1+arg1-arg1P2 == 0 /\ arg2+arg1 < 0), cost: 1
   3: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, (-arg2P3 == 0 /\ arg2 < 0 /\ arg2-arg1 <= 0 /\ arg2+arg1 >= 0 /\ 1-arg1P3+arg1 == 0), cost: 1
   4: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P4, arg1'=arg1P4, (arg2 > 0 /\ arg2-arg1 <= 0 /\ 1+arg1-arg1P4 == 0 /\ -arg2P4 == 0 /\ arg2+arg1 >= 0), cost: 1
   5: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P5, arg1'=arg1P5, (-1-arg2-arg2P5 == 0 /\ arg2 < 0 /\ arg2-arg1 > 0 /\ 1-arg1P5+arg1 == 0 /\ arg2+arg1 >= 0), cost: 1
   6: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P6, arg1'=arg1P6, (arg2 > 0 /\ arg2-arg1 > 0 /\ 1-arg1P6+arg1 == 0 /\ -1-arg2-arg2P6 == 0 /\ arg2+arg1 >= 0), cost: 1
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Removed rules with unsatisfiable guard
Start location: __init
   0: f1_0_main_Load -> f142_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ -arg2P0+arg2 == 0 /\ 5-arg1P0 == 0), cost: 1
   1: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, (arg2 < 0 /\ 1+arg1-arg1P1 == 0 /\ 1-arg2-arg2P1 == 0 /\ arg2+arg1 < 0), cost: 1
   2: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P2, arg1'=arg1P2, (arg2 > 0 /\ 1-arg2-arg2P2 == 0 /\ 1+arg1-arg1P2 == 0 /\ arg2+arg1 < 0), cost: 1
   3: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, (-arg2P3 == 0 /\ arg2 < 0 /\ arg2-arg1 <= 0 /\ arg2+arg1 >= 0 /\ 1-arg1P3+arg1 == 0), cost: 1
   4: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P4, arg1'=arg1P4, (arg2 > 0 /\ arg2-arg1 <= 0 /\ 1+arg1-arg1P4 == 0 /\ -arg2P4 == 0 /\ arg2+arg1 >= 0), cost: 1
   6: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P6, arg1'=arg1P6, (arg2 > 0 /\ arg2-arg1 > 0 /\ 1-arg1P6+arg1 == 0 /\ -1-arg2-arg2P6 == 0 /\ arg2+arg1 >= 0), cost: 1
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f142_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ -arg2P0+arg2 == 0 /\ 5-arg1P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f142_0_loop_EQ : arg1'=5, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, (arg2 < 0 /\ 1+arg1-arg1P1 == 0 /\ 1-arg2-arg2P1 == 0 /\ arg2+arg1 < 0), cost: 1
New rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=1-arg2, arg1'=1+arg1, (-arg2 > 0 /\ -arg2-arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P2, arg1'=arg1P2, (arg2 > 0 /\ 1-arg2-arg2P2 == 0 /\ 1+arg1-arg1P2 == 0 /\ arg2+arg1 < 0), cost: 1
New rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=1-arg2, arg1'=1+arg1, (arg2 > 0 /\ -arg2-arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, (-arg2P3 == 0 /\ arg2 < 0 /\ arg2-arg1 <= 0 /\ arg2+arg1 >= 0 /\ 1-arg1P3+arg1 == 0), cost: 1
New rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=0, arg1'=1+arg1, (-arg2 > 0 /\ arg2+arg1 >= 0), cost: 1

Applied preprocessing
Original rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P4, arg1'=arg1P4, (arg2 > 0 /\ arg2-arg1 <= 0 /\ 1+arg1-arg1P4 == 0 /\ -arg2P4 == 0 /\ arg2+arg1 >= 0), cost: 1
New rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=0, arg1'=1+arg1, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=arg2P6, arg1'=arg1P6, (arg2 > 0 /\ arg2-arg1 > 0 /\ 1-arg1P6+arg1 == 0 /\ -1-arg2-arg2P6 == 0 /\ arg2+arg1 >= 0), cost: 1
New rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=-1-arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ arg2+arg1 >= 0), cost: 1

Simplified rules
Start location: __init
   8: f1_0_main_Load -> f142_0_loop_EQ : arg1'=5, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   9: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=1-arg2, arg1'=1+arg1, (-arg2 > 0 /\ -arg2-arg1 > 0), cost: 1
  10: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=1-arg2, arg1'=1+arg1, (arg2 > 0 /\ -arg2-arg1 > 0), cost: 1
  11: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=0, arg1'=1+arg1, (-arg2 > 0 /\ arg2+arg1 >= 0), cost: 1
  12: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=0, arg1'=1+arg1, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1
  13: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=-1-arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ arg2+arg1 >= 0), cost: 1
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Applied chaining
First rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=-1-arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ arg2+arg1 >= 0), cost: 1
Second rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=1-arg2, arg1'=1+arg1, (-arg2 > 0 /\ -arg2-arg1 > 0), cost: 1
New rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=2+arg2, arg1'=2+arg1, (arg2-arg1 > 0 /\ arg2+arg1 >= 0), cost: 2

Applied nonterm
Original rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=2+arg2, arg1'=2+arg1, (arg2-arg1 > 0 /\ arg2+arg1 >= 0), cost: 2
New rule:
f142_0_loop_EQ -> [3] : (arg2-arg1 > 0 /\ n1 >= 0 /\ arg2+arg1 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oLoJlj.txt

Applied chaining
First rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=1-arg2, arg1'=1+arg1, (-arg2 > 0 /\ -arg2-arg1 > 0), cost: 1
Second rule:
f142_0_loop_EQ -> [3] : (arg2-arg1 > 0 /\ n1 >= 0 /\ arg2+arg1 >= 0), cost: NONTERM
New rule:
f142_0_loop_EQ -> [3] : (2-arg2+arg1 >= 0 /\ -arg2 > 0 /\ n1 >= 0 /\ -arg2-arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=1-arg2, arg1'=1+arg1, (-arg2 > 0 /\ -arg2-arg1 > 0), cost: 1
Second rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=-1-arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ arg2+arg1 >= 0), cost: 1
New rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=-2+arg2, arg1'=2+arg1, (2-arg2+arg1 >= 0 /\ -arg2 > 0 /\ -arg2-arg1 > 0), cost: 2

Applied nonterm
Original rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=-2+arg2, arg1'=2+arg1, (2-arg2+arg1 >= 0 /\ -arg2 > 0 /\ -arg2-arg1 > 0), cost: 2
New rule:
f142_0_loop_EQ -> [3] : (2-arg2+arg1 >= 0 /\ -arg2 > 0 /\ -arg2-arg1 > 0 /\ n3 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_dkefKN.txt

Applied chaining
First rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=-1-arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ arg2+arg1 >= 0), cost: 1
Second rule:
f142_0_loop_EQ -> [3] : (2-arg2+arg1 >= 0 /\ -arg2 > 0 /\ -arg2-arg1 > 0 /\ n3 >= 0), cost: NONTERM
New rule:
f142_0_loop_EQ -> [3] : (arg2-arg1 > 0 /\ 4+arg2+arg1 >= 0 /\ 1+arg2 > 0 /\ n3 >= 0 /\ arg2+arg1 >= 0), cost: NONTERM

Applied simplification
Original rule:
f142_0_loop_EQ -> [3] : (arg2-arg1 > 0 /\ 4+arg2+arg1 >= 0 /\ 1+arg2 > 0 /\ n3 >= 0 /\ arg2+arg1 >= 0), cost: NONTERM
New rule:
f142_0_loop_EQ -> [3] : (arg2-arg1 > 0 /\ n3 >= 0 /\ arg2+arg1 >= 0), cost: NONTERM

Accelerated simple loops
Start location: __init
   8: f1_0_main_Load -> f142_0_loop_EQ : arg1'=5, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   9: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=1-arg2, arg1'=1+arg1, (-arg2 > 0 /\ -arg2-arg1 > 0), cost: 1
  10: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=1-arg2, arg1'=1+arg1, (arg2 > 0 /\ -arg2-arg1 > 0), cost: 1
  11: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=0, arg1'=1+arg1, (-arg2 > 0 /\ arg2+arg1 >= 0), cost: 1
  12: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=0, arg1'=1+arg1, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1
  13: f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=-1-arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ arg2+arg1 >= 0), cost: 1
  14: f142_0_loop_EQ -> [3] : (arg2-arg1 > 0 /\ n1 >= 0 /\ arg2+arg1 >= 0), cost: NONTERM
  15: f142_0_loop_EQ -> [3] : (2-arg2+arg1 >= 0 /\ -arg2 > 0 /\ n1 >= 0 /\ -arg2-arg1 > 0), cost: NONTERM
  16: f142_0_loop_EQ -> [3] : (2-arg2+arg1 >= 0 /\ -arg2 > 0 /\ -arg2-arg1 > 0 /\ n3 >= 0), cost: NONTERM
  18: f142_0_loop_EQ -> [3] : (arg2-arg1 > 0 /\ n3 >= 0 /\ arg2+arg1 >= 0), cost: NONTERM
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f142_0_loop_EQ : arg1'=5, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=0, arg1'=1+arg1, (arg2 > 0 /\ arg2-arg1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f142_0_loop_EQ : arg2'=0, arg1'=6, (-5+arg2 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f142_0_loop_EQ : arg1'=5, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f142_0_loop_EQ -> f142_0_loop_EQ : arg2'=-1-arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ arg2+arg1 >= 0), cost: 1
New rule:
f1_0_main_Load -> f142_0_loop_EQ : arg2'=-1-arg2, arg1'=6, (-5+arg2 > 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f142_0_loop_EQ : arg1'=5, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f142_0_loop_EQ -> [3] : (arg2-arg1 > 0 /\ n1 >= 0 /\ arg2+arg1 >= 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f1_0_main_Load -> f142_0_loop_EQ : arg1'=5, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f142_0_loop_EQ -> [3] : (arg2-arg1 > 0 /\ n3 >= 0 /\ arg2+arg1 >= 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 9 10 11 12 13 14 15 16 18

Chained accelerated rules with incoming rules
Start location: __init
   8: f1_0_main_Load -> f142_0_loop_EQ : arg1'=5, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  19: f1_0_main_Load -> f142_0_loop_EQ : arg2'=0, arg1'=6, (-5+arg2 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 2
  20: f1_0_main_Load -> f142_0_loop_EQ : arg2'=-1-arg2, arg1'=6, (-5+arg2 > 0 /\ arg1 > 0), cost: 2
  21: f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  21: f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM
New rule:
__init -> [3] : (-5+arg2P7 > 0 /\ arg1P7 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 7 21

Eliminated locations on linear paths
Start location: __init
  22: __init -> [3] : (-5+arg2P7 > 0 /\ arg1P7 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 22 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-5+arg2P7 > 0 /\ arg1P7 > 0)
