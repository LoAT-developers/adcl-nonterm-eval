YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l4, true>
<l1, l2, true, par{arg1 -> 1, arg2 -> undef2, arg3 -> undef3}>
<l2, l3, (arg1 > 0) /\ (arg1 < 100), par{arg2 -> 0, arg3 -> (100 - arg1)}>
<l3, l2, (arg3 <= arg2), par{arg1 -> (arg1 + 1), arg2 -> undef8, arg3 -> undef9}>
<l3, l3, (arg2 < 100) /\ (arg3 > arg2) /\ (arg2 > ~(1)) /\ (arg2 < 99) /\ (undef13 <= undef14) /\ (arg1 > 0), par{arg2 -> (arg2 + 1), arg3 -> (100 - arg1)}>
<l3, l3, (arg2 < 100) /\ (arg3 > arg2) /\ (arg2 > ~(1)) /\ (arg2 < 99) /\ (arg1 > 0) /\ (undef18 > undef19), par{arg2 -> (arg2 + 1), arg3 -> (100 - arg1)}>
<l4, l1, true, par{arg1 -> undef20, arg2 -> undef21, arg3 -> undef22}>

Fresh variables:
undef2, undef3, undef8, undef9, undef13, undef14, undef18, undef19, undef20, undef21, undef22, 

Undef variables:
undef2, undef3, undef8, undef9, undef13, undef14, undef18, undef19, undef20, undef21, undef22, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = 1) /\ (arg2 = 0) /\ (arg3 = (100 - 1)) /\ (1 > 0) /\ (1 < 100)>
<l3, l3, (arg3 <= arg2) /\ ((arg1 + 1) > 0) /\ ((arg1 + 1) < 100), par{arg1 -> (arg1 + 1), arg2 -> 0, arg3 -> (100 - (arg1 + 1))}>
<l3, l3, (arg2 < 100) /\ (arg3 > arg2) /\ (arg2 > ~(1)) /\ (arg2 < 99) /\ (undef13 <= undef14) /\ (arg1 > 0), par{arg2 -> (arg2 + 1), arg3 -> (100 - arg1)}>
<l3, l3, (arg2 < 100) /\ (arg3 > arg2) /\ (arg2 > ~(1)) /\ (arg2 < 99) /\ (arg1 > 0) /\ (undef18 > undef19), par{arg2 -> (arg2 + 1), arg3 -> (100 - arg1)}>

Fresh variables:
undef2, undef3, undef8, undef9, undef13, undef14, undef18, undef19, undef20, undef21, undef22, 

Undef variables:
undef2, undef3, undef8, undef9, undef13, undef14, undef18, undef19, undef20, undef21, undef22, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 0 <= arg1 /\ arg3 <= arg2 /\ arg1 <= 98, {arg1 -> 1 + arg1, arg2 -> 0, arg3 -> 99 - arg1, rest remain the same}>
<l3, l3, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 0 <= arg2 /\ undef13 <= undef14 /\ arg2 <= 98, {arg2 -> 1 + arg2, arg3 -> 100 - arg1, rest remain the same}>
<l3, l3, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 + undef19 <= undef18 /\ 0 <= arg2 /\ arg2 <= 98, {arg2 -> 1 + arg2, arg3 -> 100 - arg1, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l3, arg2 = 0 /\ arg1 = 1 /\ arg3 = 99, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 4.0004

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006508s
[33mRanking function: [36m196 - 2*arg1[0m
New Graphs: 
Transitions:
<l3, l3, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 0 <= arg2 /\ undef13 <= undef14 /\ arg2 <= 98, {arg2 -> 1 + arg2, arg3 -> 100 - arg1, rest remain the same}>
<l3, l3, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 + undef19 <= undef18 /\ 0 <= arg2 /\ arg2 <= 98, {arg2 -> 1 + arg2, arg3 -> 100 - arg1, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000892s
[33mRanking function: [36m98 - arg2[0m
New Graphs: 
[32mProgram Terminates[0m
