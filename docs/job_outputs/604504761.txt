WORST_CASE(Omega(0),?)

Initial ITS
Start location: l6
   0: l0 -> l2 : y_6^0'=y_6^post0, __disjvr_0^0'=__disjvr_0^post0, x_5^0'=x_5^post0, Result_4^0'=Result_4^post0, b_7^0'=b_7^post0, (-b_7^post0+b_7^0 == 0 /\ y_6^0-y_6^post0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ Result_4^0-Result_4^post0 == 0 /\ -__disjvr_0^post0+__disjvr_0^0 == 0 /\ x_5^0-x_5^post0 == 0), cost: 1
   3: l0 -> l4 : y_6^0'=y_6^post3, __disjvr_0^0'=__disjvr_0^post3, x_5^0'=x_5^post3, Result_4^0'=Result_4^post3, b_7^0'=b_7^post3, (0 == 0 /\ y_6^0-y_6^post3 == 0 /\ -b_7^post3+b_7^0 == 0 /\ __disjvr_0^0-__disjvr_0^post3 == 0 /\ y_6^0-x_5^0 <= 0 /\ x_5^0-x_5^post3 == 0), cost: 1
   1: l2 -> l3 : y_6^0'=y_6^post1, __disjvr_0^0'=__disjvr_0^post1, x_5^0'=x_5^post1, Result_4^0'=Result_4^post1, b_7^0'=b_7^post1, (-Result_4^post1+Result_4^0 == 0 /\ -__disjvr_0^0+__disjvr_0^post1 == 0 /\ -x_5^post1+x_5^0 == 0 /\ -b_7^post1+b_7^0 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ y_6^0-y_6^post1 == 0), cost: 1
   2: l3 -> l1 : y_6^0'=y_6^post2, __disjvr_0^0'=__disjvr_0^post2, x_5^0'=x_5^post2, Result_4^0'=Result_4^post2, b_7^0'=b_7^post2, (-__disjvr_0^post2+__disjvr_0^0 == 0 /\ b_7^post2 == 0 /\ Result_4^0-Result_4^post2 == 0 /\ 1-y_6^0+y_6^post2 == 0 /\ x_5^0-x_5^post2 == 0), cost: 1
   5: l1 -> l0 : y_6^0'=y_6^post5, __disjvr_0^0'=__disjvr_0^post5, x_5^0'=x_5^post5, Result_4^0'=Result_4^post5, b_7^0'=b_7^post5, (1-y_6^0+x_5^0 <= 0 /\ -1+x_5^post5-x_5^0 == 0 /\ -b_7^0 <= 0 /\ -1+b_7^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ b_7^0 <= 0 /\ -Result_4^post5+Result_4^0 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0), cost: 1
   6: l1 -> l4 : y_6^0'=y_6^post6, __disjvr_0^0'=__disjvr_0^post6, x_5^0'=x_5^post6, Result_4^0'=Result_4^post6, b_7^0'=b_7^post6, (0 == 0 /\ -b_7^post6+b_7^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ y_6^0-x_5^0 <= 0 /\ y_6^0-y_6^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post6 == 0), cost: 1
   4: l5 -> l1 : y_6^0'=y_6^post4, __disjvr_0^0'=__disjvr_0^post4, x_5^0'=x_5^post4, Result_4^0'=Result_4^post4, b_7^0'=b_7^post4, (Result_4^0-Result_4^post4 == 0 /\ x_5^0-x_5^post4 == 0 /\ b_7^post4 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ y_6^0-y_6^post4 == 0), cost: 1
   7: l6 -> l5 : y_6^0'=y_6^post7, __disjvr_0^0'=__disjvr_0^post7, x_5^0'=x_5^post7, Result_4^0'=Result_4^post7, b_7^0'=b_7^post7, (-x_5^post7+x_5^0 == 0 /\ b_7^0-b_7^post7 == 0 /\ Result_4^0-Result_4^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ y_6^0-y_6^post7 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l6
   0: l0 -> l2 : y_6^0'=y_6^post0, __disjvr_0^0'=__disjvr_0^post0, x_5^0'=x_5^post0, Result_4^0'=Result_4^post0, b_7^0'=b_7^post0, (-b_7^post0+b_7^0 == 0 /\ y_6^0-y_6^post0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ Result_4^0-Result_4^post0 == 0 /\ -__disjvr_0^post0+__disjvr_0^0 == 0 /\ x_5^0-x_5^post0 == 0), cost: 1
   1: l2 -> l3 : y_6^0'=y_6^post1, __disjvr_0^0'=__disjvr_0^post1, x_5^0'=x_5^post1, Result_4^0'=Result_4^post1, b_7^0'=b_7^post1, (-Result_4^post1+Result_4^0 == 0 /\ -__disjvr_0^0+__disjvr_0^post1 == 0 /\ -x_5^post1+x_5^0 == 0 /\ -b_7^post1+b_7^0 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ y_6^0-y_6^post1 == 0), cost: 1
   2: l3 -> l1 : y_6^0'=y_6^post2, __disjvr_0^0'=__disjvr_0^post2, x_5^0'=x_5^post2, Result_4^0'=Result_4^post2, b_7^0'=b_7^post2, (-__disjvr_0^post2+__disjvr_0^0 == 0 /\ b_7^post2 == 0 /\ Result_4^0-Result_4^post2 == 0 /\ 1-y_6^0+y_6^post2 == 0 /\ x_5^0-x_5^post2 == 0), cost: 1
   5: l1 -> l0 : y_6^0'=y_6^post5, __disjvr_0^0'=__disjvr_0^post5, x_5^0'=x_5^post5, Result_4^0'=Result_4^post5, b_7^0'=b_7^post5, (1-y_6^0+x_5^0 <= 0 /\ -1+x_5^post5-x_5^0 == 0 /\ -b_7^0 <= 0 /\ -1+b_7^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ b_7^0 <= 0 /\ -Result_4^post5+Result_4^0 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0), cost: 1
   4: l5 -> l1 : y_6^0'=y_6^post4, __disjvr_0^0'=__disjvr_0^post4, x_5^0'=x_5^post4, Result_4^0'=Result_4^post4, b_7^0'=b_7^post4, (Result_4^0-Result_4^post4 == 0 /\ x_5^0-x_5^post4 == 0 /\ b_7^post4 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ y_6^0-y_6^post4 == 0), cost: 1
   7: l6 -> l5 : y_6^0'=y_6^post7, __disjvr_0^0'=__disjvr_0^post7, x_5^0'=x_5^post7, Result_4^0'=Result_4^post7, b_7^0'=b_7^post7, (-x_5^post7+x_5^0 == 0 /\ b_7^0-b_7^post7 == 0 /\ Result_4^0-Result_4^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ y_6^0-y_6^post7 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : y_6^0'=y_6^post0, __disjvr_0^0'=__disjvr_0^post0, x_5^0'=x_5^post0, Result_4^0'=Result_4^post0, b_7^0'=b_7^post0, (-b_7^post0+b_7^0 == 0 /\ y_6^0-y_6^post0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ Result_4^0-Result_4^post0 == 0 /\ -__disjvr_0^post0+__disjvr_0^0 == 0 /\ x_5^0-x_5^post0 == 0), cost: 1
New rule:
l0 -> l2 : 1-y_6^0+x_5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l3 : y_6^0'=y_6^post1, __disjvr_0^0'=__disjvr_0^post1, x_5^0'=x_5^post1, Result_4^0'=Result_4^post1, b_7^0'=b_7^post1, (-Result_4^post1+Result_4^0 == 0 /\ -__disjvr_0^0+__disjvr_0^post1 == 0 /\ -x_5^post1+x_5^0 == 0 /\ -b_7^post1+b_7^0 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ y_6^0-y_6^post1 == 0), cost: 1
New rule:
l2 -> l3 : 0 == 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : y_6^0'=y_6^post2, __disjvr_0^0'=__disjvr_0^post2, x_5^0'=x_5^post2, Result_4^0'=Result_4^post2, b_7^0'=b_7^post2, (-__disjvr_0^post2+__disjvr_0^0 == 0 /\ b_7^post2 == 0 /\ Result_4^0-Result_4^post2 == 0 /\ 1-y_6^0+y_6^post2 == 0 /\ x_5^0-x_5^post2 == 0), cost: 1
New rule:
l3 -> l1 : y_6^0'=-1+y_6^0, b_7^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l1 : y_6^0'=y_6^post4, __disjvr_0^0'=__disjvr_0^post4, x_5^0'=x_5^post4, Result_4^0'=Result_4^post4, b_7^0'=b_7^post4, (Result_4^0-Result_4^post4 == 0 /\ x_5^0-x_5^post4 == 0 /\ b_7^post4 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ y_6^0-y_6^post4 == 0), cost: 1
New rule:
l5 -> l1 : b_7^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : y_6^0'=y_6^post5, __disjvr_0^0'=__disjvr_0^post5, x_5^0'=x_5^post5, Result_4^0'=Result_4^post5, b_7^0'=b_7^post5, (1-y_6^0+x_5^0 <= 0 /\ -1+x_5^post5-x_5^0 == 0 /\ -b_7^0 <= 0 /\ -1+b_7^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ b_7^0 <= 0 /\ -Result_4^post5+Result_4^0 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0), cost: 1
New rule:
l1 -> l0 : x_5^0'=1+x_5^0, b_7^0'=1, (1-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : y_6^0'=y_6^post7, __disjvr_0^0'=__disjvr_0^post7, x_5^0'=x_5^post7, Result_4^0'=Result_4^post7, b_7^0'=b_7^post7, (-x_5^post7+x_5^0 == 0 /\ b_7^0-b_7^post7 == 0 /\ Result_4^0-Result_4^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ y_6^0-y_6^post7 == 0), cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
   8: l0 -> l2 : 1-y_6^0+x_5^0 <= 0, cost: 1
   9: l2 -> l3 : 0 == 0, cost: 1
  10: l3 -> l1 : y_6^0'=-1+y_6^0, b_7^0'=0, TRUE, cost: 1
  12: l1 -> l0 : x_5^0'=1+x_5^0, b_7^0'=1, (1-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 1
  11: l5 -> l1 : b_7^0'=0, TRUE, cost: 1
  13: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l1 : b_7^0'=0, TRUE, cost: 1
New rule:
l6 -> l1 : b_7^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 11 13

Eliminating location l0 by chaining:

Applied chaining
First rule:
l1 -> l0 : x_5^0'=1+x_5^0, b_7^0'=1, (1-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 1
Second rule:
l0 -> l2 : 1-y_6^0+x_5^0 <= 0, cost: 1
New rule:
l1 -> l2 : x_5^0'=1+x_5^0, b_7^0'=1, (1-y_6^0+x_5^0 <= 0 /\ 2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 2

Applied simplification
Original rule:
l1 -> l2 : x_5^0'=1+x_5^0, b_7^0'=1, (1-y_6^0+x_5^0 <= 0 /\ 2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 2
New rule:
l1 -> l2 : x_5^0'=1+x_5^0, b_7^0'=1, (2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 2

Applied deletion
Removed the following rules: 8 12

Eliminating location l2 by chaining:

Applied chaining
First rule:
l1 -> l2 : x_5^0'=1+x_5^0, b_7^0'=1, (2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 2
Second rule:
l2 -> l3 : 0 == 0, cost: 1
New rule:
l1 -> l3 : x_5^0'=1+x_5^0, b_7^0'=1, (0 == 0 /\ 2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 3

Applied simplification
Original rule:
l1 -> l3 : x_5^0'=1+x_5^0, b_7^0'=1, (0 == 0 /\ 2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 3
New rule:
l1 -> l3 : x_5^0'=1+x_5^0, b_7^0'=1, (2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 3

Applied deletion
Removed the following rules: 9 15

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : x_5^0'=1+x_5^0, b_7^0'=1, (2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 3
Second rule:
l3 -> l1 : y_6^0'=-1+y_6^0, b_7^0'=0, TRUE, cost: 1
New rule:
l1 -> l1 : y_6^0'=-1+y_6^0, x_5^0'=1+x_5^0, b_7^0'=0, (2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 4

Applied deletion
Removed the following rules: 10 16

Eliminated locations on linear paths
Start location: l6
  17: l1 -> l1 : y_6^0'=-1+y_6^0, x_5^0'=1+x_5^0, b_7^0'=0, (2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 4
  14: l6 -> l1 : b_7^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : y_6^0'=-1+y_6^0, x_5^0'=1+x_5^0, b_7^0'=0, (2-y_6^0+x_5^0 <= 0 /\ b_7^0 == 0), cost: 4
New rule:
l1 -> l1 : y_6^0'=y_6^0-n, x_5^0'=n+x_5^0, b_7^0'=0, (-b_7^0 >= 0 /\ b_7^0 >= 0 /\ -1+n >= 0 /\ y_6^0-2*n-x_5^0 >= 0), cost: 4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_djaHCH.txt

Applied simplification
Original rule:
l1 -> l1 : y_6^0'=y_6^0-n, x_5^0'=n+x_5^0, b_7^0'=0, (-b_7^0 >= 0 /\ b_7^0 >= 0 /\ -1+n >= 0 /\ y_6^0-2*n-x_5^0 >= 0), cost: 4*n
New rule:
l1 -> l1 : y_6^0'=y_6^0-n, x_5^0'=n+x_5^0, b_7^0'=0, (b_7^0 <= 0 /\ b_7^0 >= 0 /\ -1+n >= 0 /\ y_6^0-2*n-x_5^0 >= 0), cost: 4*n

Applied deletion
Removed the following rules: 17

Accelerated simple loops
Start location: l6
  19: l1 -> l1 : y_6^0'=y_6^0-n, x_5^0'=n+x_5^0, b_7^0'=0, (b_7^0 <= 0 /\ b_7^0 >= 0 /\ -1+n >= 0 /\ y_6^0-2*n-x_5^0 >= 0), cost: 4*n
  14: l6 -> l1 : b_7^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l6 -> l1 : b_7^0'=0, TRUE, cost: 2
Second rule:
l1 -> l1 : y_6^0'=y_6^0-n, x_5^0'=n+x_5^0, b_7^0'=0, (b_7^0 <= 0 /\ b_7^0 >= 0 /\ -1+n >= 0 /\ y_6^0-2*n-x_5^0 >= 0), cost: 4*n
New rule:
l6 -> l1 : y_6^0'=y_6^0-n, x_5^0'=n+x_5^0, b_7^0'=0, (-1+n >= 0 /\ y_6^0-2*n-x_5^0 >= 0), cost: 2+4*n

Applied deletion
Removed the following rules: 19

Chained accelerated rules with incoming rules
Start location: l6
  14: l6 -> l1 : b_7^0'=0, TRUE, cost: 2
  20: l6 -> l1 : y_6^0'=y_6^0-n, x_5^0'=n+x_5^0, b_7^0'=0, (-1+n >= 0 /\ y_6^0-2*n-x_5^0 >= 0), cost: 2+4*n


Removed unreachable locations and irrelevant leafs
Start location: l6
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

