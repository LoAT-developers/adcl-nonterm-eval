unknown

Initial ITS

Start location: [1]
Program variables: res x y ytmp
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : res'=0, T, cost: 1
   3: [4] -> [5] : (-y+x >= 0 /\ y > 0), cost: 1
  18: [4] -> [17] : (-y+x < 0 \/ y <= 0), cost: 1
   4: [5] -> [6] : ytmp'=y, T, cost: 1
   5: [6] -> [7] : (ytmp < 0 \/ ytmp > 0), cost: 1
  15: [6] -> [15] : (ytmp <= 0 /\ ytmp >= 0), cost: 1
   6: [7] -> [9] : ytmp > 0, cost: 1
  10: [7] -> [12] : ytmp <= 0, cost: 1
  14: [8] -> [6] : T, cost: 1
   7: [9] -> [10] : ytmp'=-1+ytmp, T, cost: 1
   8: [10] -> [11] : x'=-1+x, T, cost: 1
   9: [11] -> [8] : T, cost: 1
  11: [12] -> [13] : ytmp'=1+ytmp, T, cost: 1
  12: [13] -> [14] : x'=1+x, T, cost: 1
  13: [14] -> [8] : T, cost: 1
  16: [15] -> [16] : res'=1+res, T, cost: 1
  17: [16] -> [4] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: res x y ytmp
  20: [1] -> [4] : res'=0, x'=nondet, y'=nondet1, T, cost: 1
  18: [4] -> [17] : (-y+x < 0 \/ y <= 0), cost: 1
  21: [4] -> [6] : ytmp'=y, (-y+x >= 0 /\ y > 0), cost: 1
   5: [6] -> [7] : (ytmp < 0 \/ ytmp > 0), cost: 1
  23: [6] -> [4] : res'=1+res, (ytmp <= 0 /\ ytmp >= 0), cost: 1
  28: [7] -> [8] : x'=-1+x, ytmp'=-1+ytmp, ytmp > 0, cost: 1
  29: [7] -> [8] : x'=1+x, ytmp'=1+ytmp, ytmp <= 0, cost: 1
  14: [8] -> [6] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	Second rule:
	[3] -> [4] : res'=0, T, cost: 1
	New rule:
	[1] -> [4] : res'=0, x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 2 19
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[4] -> [5] : (-y+x >= 0 /\ y > 0), cost: 1
	Second rule:
	[5] -> [6] : ytmp'=y, T, cost: 1
	New rule:
	[4] -> [6] : ytmp'=y, (-y+x >= 0 /\ y > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location [15] by chaining:

	Applied chaining

	First rule:
	[6] -> [15] : (ytmp <= 0 /\ ytmp >= 0), cost: 1
	Second rule:
	[15] -> [16] : res'=1+res, T, cost: 1
	New rule:
	[6] -> [16] : res'=1+res, (ytmp <= 0 /\ ytmp >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 15 16
	
	Eliminating location [16] by chaining:

	Applied chaining

	First rule:
	[6] -> [16] : res'=1+res, (ytmp <= 0 /\ ytmp >= 0), cost: 1
	Second rule:
	[16] -> [4] : T, cost: 1
	New rule:
	[6] -> [4] : res'=1+res, (ytmp <= 0 /\ ytmp >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 17 22
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[7] -> [9] : ytmp > 0, cost: 1
	Second rule:
	[9] -> [10] : ytmp'=-1+ytmp, T, cost: 1
	New rule:
	[7] -> [10] : ytmp'=-1+ytmp, ytmp > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [12] by chaining:

	Applied chaining

	First rule:
	[7] -> [12] : ytmp <= 0, cost: 1
	Second rule:
	[12] -> [13] : ytmp'=1+ytmp, T, cost: 1
	New rule:
	[7] -> [13] : ytmp'=1+ytmp, ytmp <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 10 11
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[7] -> [10] : ytmp'=-1+ytmp, ytmp > 0, cost: 1
	Second rule:
	[10] -> [11] : x'=-1+x, T, cost: 1
	New rule:
	[7] -> [11] : x'=-1+x, ytmp'=-1+ytmp, ytmp > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 24
	
	Eliminating location [13] by chaining:

	Applied chaining

	First rule:
	[7] -> [13] : ytmp'=1+ytmp, ytmp <= 0, cost: 1
	Second rule:
	[13] -> [14] : x'=1+x, T, cost: 1
	New rule:
	[7] -> [14] : x'=1+x, ytmp'=1+ytmp, ytmp <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 12 25
	
	Eliminating location [11] by chaining:

	Applied chaining

	First rule:
	[7] -> [11] : x'=-1+x, ytmp'=-1+ytmp, ytmp > 0, cost: 1
	Second rule:
	[11] -> [8] : T, cost: 1
	New rule:
	[7] -> [8] : x'=-1+x, ytmp'=-1+ytmp, ytmp > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 26
	
	Eliminating location [14] by chaining:

	Applied chaining

	First rule:
	[7] -> [14] : x'=1+x, ytmp'=1+ytmp, ytmp <= 0, cost: 1
	Second rule:
	[14] -> [8] : T, cost: 1
	New rule:
	[7] -> [8] : x'=1+x, ytmp'=1+ytmp, ytmp <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 13 27

Step with 20

	Trace

	20[T]
	
	Blocked

	[{}, {}]

Step with 18

	Trace

	20[T], 18[(-y+x < 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	20[T]
	
	Blocked

	[{}, {18[-y+x < 0]}]

Step with 18

	Trace

	20[T], 18[(y <= 0)]
	
	Blocked

	[{}, {18[-y+x < 0]}, {}]

Backtrack

	Trace

	20[T]
	
	Blocked

	[{}, {18[(-y+x < 0 /\ y <= 0)]}]

Step with 21

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T]}, {}]

Step with 5

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {}, {}]

Step with 28

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {}, {}, {}]

Step with 14

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)], 28[(ytmp > 0)], 14[T]
	
	Blocked

	[{}, {18[T]}, {}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: res x y ytmp
  20: [1] -> [4] : res'=0, x'=nondet, y'=nondet1, T, cost: 1
  18: [4] -> [17] : (-y+x < 0 \/ y <= 0), cost: 1
  21: [4] -> [6] : ytmp'=y, (-y+x >= 0 /\ y > 0), cost: 1
   5: [6] -> [7] : (ytmp < 0 \/ ytmp > 0), cost: 1
  23: [6] -> [4] : res'=1+res, (ytmp <= 0 /\ ytmp >= 0), cost: 1
  30: [6] -> [6] : x'=-n+x, ytmp'=-n+ytmp, (1-n+ytmp > 0 /\ -1+n >= 0), cost: 1
  28: [7] -> [8] : x'=-1+x, ytmp'=-1+ytmp, ytmp > 0, cost: 1
  29: [7] -> [8] : x'=1+x, ytmp'=1+ytmp, ytmp <= 0, cost: 1
  14: [8] -> [6] : T, cost: 1

	Loop Acceleration

	Original rule:
	[6] -> [6] : x'=-1+x, ytmp'=-1+ytmp, ytmp > 0, cost: 1
	New rule:
	[6] -> [6] : x'=-n+x, ytmp'=-n+ytmp, (1-n+ytmp > 0 /\ -1+n >= 0), cost: 1

		ytmp > 0 [0]: montonic decrease yields 1-n+ytmp > 0
		
		ytmp > 0 [1]: eventual increase yields (1 <= 0 /\ ytmp > 0)
		
		Replacement map: {ytmp > 0 -> 1-n+ytmp > 0}

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {18[T]}, {}, {30[T]}]

Step with 5

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {}, {30[T]}, {}]

Step with 28

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {}, {30[T]}, {}, {}]

Step with 14

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)], 28[(ytmp > 0)], 14[T]
	
	Blocked

	[{}, {18[T]}, {}, {30[T]}, {}, {}, {}]

Covered

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {}, {30[T]}, {}, {14[T]}]

Backtrack

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {}, {30[T]}, {28[T]}]

Backtrack

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {18[T]}, {}, {5[ytmp > 0], 30[T]}]

Step with 23

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 23[(ytmp <= 0 /\ ytmp >= 0)]
	
	Blocked

	[{}, {18[T]}, {}, {5[T], 30[T]}, {}]

Accelerate

Start location: [1]
Program variables: res x y ytmp
  20: [1] -> [4] : res'=0, x'=nondet, y'=nondet1, T, cost: 1
  18: [4] -> [17] : (-y+x < 0 \/ y <= 0), cost: 1
  21: [4] -> [6] : ytmp'=y, (-y+x >= 0 /\ y > 0), cost: 1
  31: [4] -> [4] : res'=res+n2, x'=-n2*y+x, ytmp'=0, (-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0), cost: 1
   5: [6] -> [7] : (ytmp < 0 \/ ytmp > 0), cost: 1
  23: [6] -> [4] : res'=1+res, (ytmp <= 0 /\ ytmp >= 0), cost: 1
  30: [6] -> [6] : x'=-n+x, ytmp'=-n+ytmp, (1-n+ytmp > 0 /\ -1+n >= 0), cost: 1
  28: [7] -> [8] : x'=-1+x, ytmp'=-1+ytmp, ytmp > 0, cost: 1
  29: [7] -> [8] : x'=1+x, ytmp'=1+ytmp, ytmp <= 0, cost: 1
  14: [8] -> [6] : T, cost: 1

	Loop Acceleration

	Original rule:
	[4] -> [4] : res'=1+res, x'=-y+x, ytmp'=0, (-y+x >= 0 /\ -1+y >= 0 /\ y > 0), cost: 1
	New rule:
	[4] -> [4] : res'=res+n2, x'=-n2*y+x, ytmp'=0, (-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0), cost: 1

		-y+x >= 0 [0]: montonic decrease yields -(-1+n2)*y-y+x >= 0, dependencies: -1+y >= 0
		
		-y+x >= 0 [1]: eventual decrease yields (-(-1+n2)*y-y+x >= 0 /\ -y+x >= 0), dependencies: -1+y >= 0
		
		-y+x >= 0 [2]: eventual increase yields (-y+x >= 0 /\ y <= 0), dependencies: -1+y >= 0
		
		-1+y >= 0 [0]: monotonic increase yields -1+y >= 0
		
		y > 0 [0]: monotonic increase yields y > 0, dependencies: -1+y >= 0
		
		Replacement map: {-y+x >= 0 -> -(-1+n2)*y-y+x >= 0, -1+y >= 0 -> -1+y >= 0, y > 0 -> y > 0}

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T]}, {31[T]}]

Step with 18

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 18[(-y+x < 0)]
	
	Blocked

	[{}, {18[T]}, {31[T]}, {}]

Backtrack

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T]}, {18[-y+x < 0], 31[T]}]

Step with 21

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {}]

Step with 30

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T]}, {30[T]}]

Step with 5

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T]}, {30[T]}, {}]

Step with 28

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T]}, {30[T]}, {}, {}]

Step with 14

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)], 28[(ytmp > 0)], 14[T]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T]}, {30[T]}, {}, {}, {}]

Covered

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T]}, {30[T]}, {}, {14[T]}]

Backtrack

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T]}, {30[T]}, {28[T]}]

Backtrack

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T]}, {5[ytmp > 0], 30[T]}]

Step with 23

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 23[(ytmp <= 0 /\ ytmp >= 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T]}, {5[T], 30[T]}, {}]

Covered

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T]}, {5[T], 23[T], 30[T]}]

Backtrack

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T], 30[T]}]

Step with 5

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T], 30[T]}, {}]

Step with 28

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T], 30[T]}, {}, {}]

Step with 14

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)], 28[(ytmp > 0)], 14[T]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T], 30[T]}, {}, {}, {}]

Covered

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T], 30[T]}, {}, {14[T]}]

Backtrack

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {23[T], 30[T]}, {28[T]}]

Backtrack

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)], 21[(-y+x >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 31[T]}, {5[ytmp > 0], 23[T], 30[T]}]

Backtrack

	Trace

	20[T], 31[(-(-1+n2)*y-y+x >= 0 /\ -1+n2 >= 0 /\ -1+y >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T]}, {18[T], 21[T], 31[T]}]

Backtrack

	Trace

	20[T]
	
	Blocked

	[{}, {18[T], 31[T]}]

Step with 21

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {}]

Step with 5

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {}, {}]

Step with 28

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {}, {}, {}]

Step with 14

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)], 28[(ytmp > 0)], 14[T]
	
	Blocked

	[{}, {18[T], 31[T]}, {}, {}, {}, {}]

Covered

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {}, {}, {14[T]}]

Backtrack

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {}, {28[T]}]

Backtrack

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[ytmp > 0]}]

Step with 30

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T]}, {30[T]}]

Step with 5

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T]}, {30[T]}, {}]

Step with 28

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T]}, {30[T]}, {}, {}]

Step with 14

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)], 28[(ytmp > 0)], 14[T]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T]}, {30[T]}, {}, {}, {}]

Covered

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)], 28[(ytmp > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T]}, {30[T]}, {}, {14[T]}]

Backtrack

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 5[(ytmp > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T]}, {30[T]}, {28[T]}]

Backtrack

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T]}, {5[ytmp > 0], 30[T]}]

Step with 23

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)], 23[(ytmp <= 0 /\ ytmp >= 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T]}, {5[T], 30[T]}, {}]

Covered

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)], 30[(1-n+ytmp > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T]}, {5[T], 23[T], 30[T]}]

Backtrack

	Trace

	20[T], 21[(-y+x >= 0 /\ y > 0)]
	
	Blocked

	[{}, {18[T], 31[T]}, {5[T], 23[T], 30[T]}]

Backtrack

	Trace

	20[T]
	
	Blocked

	[{}, {18[T], 21[T], 31[T]}]

Backtrack

	Trace

	Blocked

	[{20[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
