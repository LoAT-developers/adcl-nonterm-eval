unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ -arg4p1 == 0 /\ arg1 > 0 /\ 1+x5 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0), cost: 1
   1: f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ 1+x12 > 0 /\ arg2 > 0), cost: 1
   4: f1_0_main_Load -> f415_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (1+x34 > 0 /\ 1+x33 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0), cost: 1
   8: f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ 1+x66 > 0 /\ 1+x67 > 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  10: f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ 1+x84 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0 /\ 1+x83 > 0), cost: 1
  11: f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (arg1 > 0 /\ 1-arg2p12 == 0 /\ 1+arg1p12 > 0 /\ arg2 > 0), cost: 1
  14: f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, (arg1 > 0 /\ 1+x106 > 0 /\ 1+arg1p15 > 0 /\ 2-arg2p15 == 0 /\ -1+arg2 > 0), cost: 1
   2: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ 1+x19 > 0 /\ arg1 > 0 /\ -1+x13 > 0), cost: 1
   3: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-4+arg3 > 0 /\ -arg4+x27 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ 1+x29 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ x28-arg4 > 0 /\ -arg4+x26 > 0 /\ 6+arg1p4-arg2 <= 0 /\ -1+x20 > 0 /\ arg1p4 > 0), cost: 1
   5: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (-4+arg3 > 0 /\ x42-arg4 > 0 /\ -arg4+x43 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ 1+x45 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0 /\ -1+x35 > 0 /\ -arg4+x44 > 0), cost: 1
   6: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 1+x53 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ -1+x46 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0), cost: 1
   7: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (-5+arg3 > 0 /\ -1+x54 > 0 /\ 1+x61 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0), cost: 1
   9: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ -arg4+x75 > 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ -arg4+x77 > 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -1+x68 > 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ x76-arg4 > 0 /\ 1+x78 > 0 /\ -5+arg2p10 > 0), cost: 1
  12: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-4+arg3 > 0 /\ arg4 > 0 /\ -arg4+x94 > 0 /\ x95-arg4 > 0 /\ -arg4+x96 > 0 /\ -1+x88 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 2-arg2p13 == 0 /\ 1+arg1p13 > 0), cost: 1
  13: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, (-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -1+x97 > 0 /\ -7+arg2 > 0 /\ arg1 > 0 /\ 2-arg2p14 == 0), cost: 1
  16: f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0 /\ -1+x110 > 0), cost: 1
  17: f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, (arg1p18-arg2 <= 0 /\ -1+x114 > 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0), cost: 1
  15: f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, (-1+arg1 > 0 /\ -arg2p16+arg2 == 0 /\ -1-arg1p16+arg1 == 0 /\ -1 < 0 /\ arg2 > 0), cost: 1
  18: f519_0_length_NONNULL -> f519_0_length_NONNULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, (3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: 1
  19: __init -> f1_0_main_Load : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4
  20: f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=0, (-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0), cost: 1
  21: f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
  24: f1_0_main_Load -> f415_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0), cost: 1
  28: f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  30: f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0), cost: 1
  31: f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p12, arg2'=1, arg3'=arg3p12, arg4'=arg4p12, (arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0), cost: 1
  34: f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p15, arg2'=2, arg3'=arg3p15, arg4'=arg4p15, (arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0), cost: 1
  22: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0), cost: 1
  23: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0), cost: 1
  25: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0), cost: 1
  26: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0), cost: 1
  27: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0), cost: 1
  29: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0), cost: 1
  32: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p13, arg2'=2, arg3'=arg3p13, arg4'=arg4p13, (-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0), cost: 1
  33: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p14, arg2'=2, arg3'=arg3p14, arg4'=arg4p14, (-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0), cost: 1
  36: f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0), cost: 1
  37: f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, (arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0), cost: 1
  35: f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-1+arg1, arg3'=arg3p16, arg4'=arg4p16, (-1+arg1 > 0 /\ arg2 > 0), cost: 1
  18: f519_0_length_NONNULL -> f519_0_length_NONNULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, (3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: 1
  19: __init -> f1_0_main_Load : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ -arg4p1 == 0 /\ arg1 > 0 /\ 1+x5 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=0, (0 == 0 /\ -7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ 1+x5 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg4p1 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=0, (0 == 0 /\ -7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ 1+x5 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=0, (-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ 1+x5 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=0, (-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ 1+x5 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=0, (-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ 1+x12 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ 1+x19 > 0 /\ arg1 > 0 /\ -1+x13 > 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-4+arg3 > 0 /\ -arg4+x27 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ 1+x29 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ x28-arg4 > 0 /\ -arg4+x26 > 0 /\ 6+arg1p4-arg2 <= 0 /\ -1+x20 > 0 /\ arg1p4 > 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f415_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (1+x34 > 0 /\ 1+x33 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f415_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (-4+arg3 > 0 /\ x42-arg4 > 0 /\ -arg4+x43 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ 1+x45 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0 /\ -1+x35 > 0 /\ -arg4+x44 > 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 1+x53 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ -1+x46 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (-5+arg3 > 0 /\ -1+x54 > 0 /\ 1+x61 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ 1+x66 > 0 /\ 1+x67 > 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ -arg4+x75 > 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ -arg4+x77 > 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -1+x68 > 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ x76-arg4 > 0 /\ 1+x78 > 0 /\ -5+arg2p10 > 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ 1+x84 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0 /\ 1+x83 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (arg1 > 0 /\ 1-arg2p12 == 0 /\ 1+arg1p12 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p12, arg2'=1, arg3'=arg3p12, arg4'=arg4p12, (0 == 0 /\ arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg2p12 = 1
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p12, arg2'=1, arg3'=arg3p12, arg4'=arg4p12, (0 == 0 /\ arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p12, arg2'=1, arg3'=arg3p12, arg4'=arg4p12, (arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-4+arg3 > 0 /\ arg4 > 0 /\ -arg4+x94 > 0 /\ x95-arg4 > 0 /\ -arg4+x96 > 0 /\ -1+x88 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 2-arg2p13 == 0 /\ 1+arg1p13 > 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p13, arg2'=2, arg3'=arg3p13, arg4'=arg4p13, (0 == 0 /\ -4+arg3 > 0 /\ arg4 > 0 /\ -arg4+x94 > 0 /\ x95-arg4 > 0 /\ -arg4+x96 > 0 /\ -1+x88 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0), cost: 1
	
		propagated equality arg2p13 = 2
		
	Simplified Guard

	Original rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p13, arg2'=2, arg3'=arg3p13, arg4'=arg4p13, (0 == 0 /\ -4+arg3 > 0 /\ arg4 > 0 /\ -arg4+x94 > 0 /\ x95-arg4 > 0 /\ -arg4+x96 > 0 /\ -1+x88 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p13, arg2'=2, arg3'=arg3p13, arg4'=arg4p13, (-4+arg3 > 0 /\ arg4 > 0 /\ -arg4+x94 > 0 /\ x95-arg4 > 0 /\ -arg4+x96 > 0 /\ -1+x88 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p13, arg2'=2, arg3'=arg3p13, arg4'=arg4p13, (-4+arg3 > 0 /\ arg4 > 0 /\ -arg4+x94 > 0 /\ x95-arg4 > 0 /\ -arg4+x96 > 0 /\ -1+x88 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p13, arg2'=2, arg3'=arg3p13, arg4'=arg4p13, (-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, (-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -1+x97 > 0 /\ -7+arg2 > 0 /\ arg1 > 0 /\ 2-arg2p14 == 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p14, arg2'=2, arg3'=arg3p14, arg4'=arg4p14, (0 == 0 /\ -5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -1+x97 > 0 /\ -7+arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p14 = 2
		
	Simplified Guard

	Original rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p14, arg2'=2, arg3'=arg3p14, arg4'=arg4p14, (0 == 0 /\ -5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -1+x97 > 0 /\ -7+arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p14, arg2'=2, arg3'=arg3p14, arg4'=arg4p14, (-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -1+x97 > 0 /\ -7+arg2 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p14, arg2'=2, arg3'=arg3p14, arg4'=arg4p14, (-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -1+x97 > 0 /\ -7+arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p14, arg2'=2, arg3'=arg3p14, arg4'=arg4p14, (-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, (arg1 > 0 /\ 1+x106 > 0 /\ 1+arg1p15 > 0 /\ 2-arg2p15 == 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p15, arg2'=2, arg3'=arg3p15, arg4'=arg4p15, (0 == 0 /\ arg1 > 0 /\ 1+x106 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg2p15 = 2
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p15, arg2'=2, arg3'=arg3p15, arg4'=arg4p15, (0 == 0 /\ arg1 > 0 /\ 1+x106 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p15, arg2'=2, arg3'=arg3p15, arg4'=arg4p15, (arg1 > 0 /\ 1+x106 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p15, arg2'=2, arg3'=arg3p15, arg4'=arg4p15, (arg1 > 0 /\ 1+x106 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p15, arg2'=2, arg3'=arg3p15, arg4'=arg4p15, (arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, (-1+arg1 > 0 /\ -arg2p16+arg2 == 0 /\ -1-arg1p16+arg1 == 0 /\ -1 < 0 /\ arg2 > 0), cost: 1
	New rule:
	f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-1+arg1, arg2'=arg2, arg3'=arg3p16, arg4'=arg4p16, (0 == 0 /\ -1+arg1 > 0 /\ -1 < 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg2p16 = arg2
		
		propagated equality arg1p16 = -1+arg1
		
	Simplified Guard

	Original rule:
	f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-1+arg1, arg2'=arg2, arg3'=arg3p16, arg4'=arg4p16, (0 == 0 /\ -1+arg1 > 0 /\ -1 < 0 /\ arg2 > 0), cost: 1
	New rule:
	f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-1+arg1, arg2'=arg2, arg3'=arg3p16, arg4'=arg4p16, (-1+arg1 > 0 /\ arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-1+arg1, arg2'=arg2, arg3'=arg3p16, arg4'=arg4p16, (-1+arg1 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-1+arg1, arg3'=arg3p16, arg4'=arg4p16, (-1+arg1 > 0 /\ arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0 /\ -1+x110 > 0), cost: 1
	New rule:
	f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, (arg1p18-arg2 <= 0 /\ -1+x114 > 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0), cost: 1
	New rule:
	f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, (arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0), cost: 1

Step with 19

	Trace

	19[T]
	
	Blocked

	[{}, {}]

Step with 20

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 22

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 36

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Step with 18

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 18

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {36[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T]}]

Step with 26

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T]}, {}]

Step with 37

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T]}, {}, {}]

Step with 18

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T]}, {37[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T]}]

Step with 27

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T]}, {}]

Step with 37

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T]}, {}, {}]

Step with 18

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T]}, {37[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T], 27[T]}]

Step with 33

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 32[T]}, {}]

Step with 35

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 32[T]}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3 arg4
  20: f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=0, (-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0), cost: 1
  21: f1_0_main_Load -> f177_0_appendNewList_Return : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
  24: f1_0_main_Load -> f415_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0), cost: 1
  28: f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  30: f1_0_main_Load -> f480_0_main_InvokeMethod : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0), cost: 1
  31: f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p12, arg2'=1, arg3'=arg3p12, arg4'=arg4p12, (arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0), cost: 1
  34: f1_0_main_Load -> f343_0_appendNewList_GT : arg1'=arg1p15, arg2'=2, arg3'=arg3p15, arg4'=arg4p15, (arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0), cost: 1
  22: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0), cost: 1
  23: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0), cost: 1
  25: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0), cost: 1
  26: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0), cost: 1
  27: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0), cost: 1
  29: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0), cost: 1
  32: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p13, arg2'=2, arg3'=arg3p13, arg4'=arg4p13, (-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0), cost: 1
  33: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg1'=arg1p14, arg2'=2, arg3'=arg3p14, arg4'=arg4p14, (-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0), cost: 1
  36: f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0), cost: 1
  37: f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, (arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0), cost: 1
  35: f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-1+arg1, arg3'=arg3p16, arg4'=arg4p16, (-1+arg1 > 0 /\ arg2 > 0), cost: 1
  38: f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-n+arg1, arg3'=arg3p16, arg4'=arg4p16, (-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0), cost: 1
  18: f519_0_length_NONNULL -> f519_0_length_NONNULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, (3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: 1
  19: __init -> f1_0_main_Load : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, T, cost: 1

	Loop Acceleration

	Original rule:
	f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-1+arg1, arg3'=arg3p16, arg4'=arg4p16, (-1+arg1 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg1'=-n+arg1, arg3'=arg3p16, arg4'=arg4p16, (-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0), cost: 1

		-1+arg1 > 0 [0]: montonic decrease yields -n+arg1 > 0
		
		-1+arg1 > 0 [1]: eventual increase yields (1 <= 0 /\ -1+arg1 > 0)
		
		arg2 > 0 [0]: monotonic increase yields arg2 > 0
		
		Replacement map: {-1+arg1 > 0 -> -n+arg1 > 0, arg2 > 0 -> arg2 > 0}

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 32[T]}, {}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 32[T]}, {38[T]}]

Step with 35

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 32[T]}, {38[T]}, {}]

Covered

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 32[T]}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T], 20[(-7+arg2p1-arg1 <= 0 /\ -5+arg3p1 > 0 /\ arg1 > 0 /\ -5+arg3p1-arg1 <= 0 /\ -7+arg2p1 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 32[T], 33[T]}]

Backtrack

	Trace

	19[T]
	
	Blocked

	[{}, {20[T]}]

Step with 21

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {}]

Step with 33

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T]}, {}, {}]

Step with 35

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {}, {}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T]}, {}, {35[T]}]

Step with 38

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {}, {35[T]}, {38[T]}]

Step with 35

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {}, {35[T]}, {38[T]}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {}, {35[T]}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 33[(-5+arg3 > 0 /\ 1+arg1p14 > 0 /\ -7+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T]}, {}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {33[T]}]

Step with 22

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T]}, {33[T]}, {}]

Step with 36

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T]}, {33[T]}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {33[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {33[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {33[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T]}, {33[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 22[(7+arg1p3-arg2 <= 0 /\ -5+arg3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ -7+arg2 > 0 /\ 5+arg1p3-arg3 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T]}, {33[T]}, {36[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 33[T]}]

Step with 23

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 23[(-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 33[T]}, {}]

Step with 36

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 23[(-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 33[T]}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 23[(-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 33[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 23[(-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 33[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 23[(-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 33[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 23[(-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 33[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 23[(-4+arg3 > 0 /\ arg4 > 0 /\ 4-arg3+arg1p4 <= 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1p4 <= 0 /\ 6+arg1p4-arg2 <= 0 /\ arg1p4 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 33[T]}, {36[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 33[T]}]

Step with 25

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 25[(-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 33[T]}, {}]

Step with 37

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 25[(-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 33[T]}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 25[(-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 33[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 25[(-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 33[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 25[(-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 33[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 25[(-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 33[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 25[(-4+arg3 > 0 /\ -arg1+arg1p6 <= 0 /\ arg4 > 0 /\ -6+arg2p6 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ arg1p6 > 0 /\ 4+arg1p6-arg3 <= 0 /\ 6+arg1p6-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 33[T]}, {37[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 33[T]}]

Step with 26

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 33[T]}, {}]

Step with 37

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 33[T]}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 33[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 33[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 33[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 33[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 26[(-5+arg2p7 > 0 /\ -5+arg3 > 0 /\ 7+arg1p7-arg2 <= 0 /\ 5+arg1p7-arg3 <= 0 /\ -7+arg2 > 0 /\ arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ -5-arg1+arg2p7 <= 0 /\ arg1 > 0 /\ 2+arg2p7-arg2 <= 0 /\ -arg3+arg2p7 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 33[T]}, {37[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 33[T]}]

Step with 27

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 33[T]}, {}]

Step with 37

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 33[T]}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 33[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 33[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 33[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 33[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 27[(-5+arg3 > 0 /\ arg1p8 > 0 /\ -7+arg2 > 0 /\ 7+arg1p8-arg2 <= 0 /\ arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -6+arg2p8 > 0 /\ 5+arg1p8-arg3 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 33[T]}, {37[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 33[T]}]

Step with 29

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 29[(-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 33[T]}, {}]

Step with 37

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 29[(-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 33[T]}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 29[(-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 33[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 29[(-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 33[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 29[(-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 33[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 29[(-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 33[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 29[(-4+arg3 > 0 /\ 4+arg1p10-arg3 <= 0 /\ arg1p10-arg1 <= 0 /\ arg4 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ 6+arg1p10-arg2 <= 0 /\ -6+arg2 > 0 /\ -5-arg1+arg2p10 <= 0 /\ arg1 > 0 /\ -1+arg2p10-arg3 <= 0 /\ -5+arg2p10 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 33[T]}, {37[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 33[T]}]

Step with 32

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 32[(-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 33[T]}, {}]

Step with 35

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 32[(-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 33[T]}, {}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 32[(-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 33[T]}, {35[T]}]

Step with 38

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 32[(-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 33[T]}, {35[T]}, {38[T]}]

Step with 35

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 32[(-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 33[T]}, {35[T]}, {38[T]}, {}]

Covered

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 32[(-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 33[T]}, {35[T]}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 32[(-4+arg3 > 0 /\ arg4 > 0 /\ -6+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p13 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 33[T]}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T], 21[(arg1p2 > 0 /\ -8+arg2p2 > 0 /\ arg1 > 0 /\ -6+arg3p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T]}, {22[T], 23[T], 25[T], 26[T], 27[T], 29[T], 32[T], 33[T]}]

Backtrack

	Trace

	19[T]
	
	Blocked

	[{}, {20[T], 21[T]}]

Step with 24

	Trace

	19[T], 24[(arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T]}, {}]

Step with 36

	Trace

	19[T], 24[(arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T], 21[T]}, {}, {}]

Step with 18

	Trace

	19[T], 24[(arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 24[(arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 24[(arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 24[(arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0)], 36[(-3+arg1p17 > 0 /\ -1+arg2p17-arg1 <= 0 /\ -1+arg2p17 > 0 /\ -3-arg1+arg1p17 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {20[T], 21[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 24[(arg1 > 0 /\ arg1p5 > 0 /\ -arg1+arg1p5 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T]}, {36[T]}]

Backtrack

	Trace

	19[T]
	
	Blocked

	[{}, {20[T], 21[T], 24[T]}]

Step with 28

	Trace

	19[T], 28[(arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T]}, {}]

Step with 37

	Trace

	19[T], 28[(arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T]}, {}, {}]

Step with 18

	Trace

	19[T], 28[(arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 28[(arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 28[(arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 28[(arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 28[(arg1p9-arg1 <= 0 /\ -6+arg2p9 > 0 /\ arg1p9 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T]}, {37[T]}]

Backtrack

	Trace

	19[T]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T]}]

Step with 30

	Trace

	19[T], 30[(arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T]}, {}]

Step with 37

	Trace

	19[T], 30[(arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T]}, {}, {}]

Step with 18

	Trace

	19[T], 30[(arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T]}, {}, {}, {}]

Step with 18

	Trace

	19[T], 30[(arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T]}, {}, {}, {}, {}]

Covered

	Trace

	19[T], 30[(arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)], 18[(3+arg2p19-arg1 <= 0 /\ 2-arg1+arg1p19 <= 0 /\ arg1p19-arg2 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ arg1p19 > 0 /\ 1+arg2p19 > 0 /\ -2+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T]}, {}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 30[(arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0)], 37[(arg1p18-arg2 <= 0 /\ -4+arg1p18 > 0 /\ -4+arg2 > 0 /\ -2+arg2p18 > 0 /\ arg1 > 0 /\ 2+arg2p18-arg2 <= 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T]}, {}, {18[T]}]

Backtrack

	Trace

	19[T], 30[(arg1p11-arg1 <= 0 /\ arg1p11 > 0 /\ -5-arg1+arg2p11 <= 0 /\ arg1 > 0 /\ -5+arg2p11 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T]}, {37[T]}]

Backtrack

	Trace

	19[T]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T]}]

Step with 31

	Trace

	19[T], 31[(arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T]}, {}]

Step with 35

	Trace

	19[T], 31[(arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T]}, {}, {}]

Covered

	Trace

	19[T], 31[(arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T]}, {35[T]}]

Step with 38

	Trace

	19[T], 31[(arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T]}, {35[T]}, {38[T]}]

Step with 35

	Trace

	19[T], 31[(arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T]}, {35[T]}, {38[T]}, {}]

Covered

	Trace

	19[T], 31[(arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T]}, {35[T]}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T], 31[(arg1 > 0 /\ 1+arg1p12 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T]}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T], 31[T]}]

Step with 34

	Trace

	19[T], 34[(arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T], 31[T]}, {}]

Step with 35

	Trace

	19[T], 34[(arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T], 31[T]}, {}, {}]

Covered

	Trace

	19[T], 34[(arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T], 31[T]}, {35[T]}]

Step with 38

	Trace

	19[T], 34[(arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T], 31[T]}, {35[T]}, {38[T]}]

Step with 35

	Trace

	19[T], 34[(arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)], 35[(-1+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T], 31[T]}, {35[T]}, {38[T]}, {}]

Covered

	Trace

	19[T], 34[(arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0)], 38[(-n+arg1 > 0 /\ -1+n >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T], 31[T]}, {35[T]}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T], 34[(arg1 > 0 /\ 1+arg1p15 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T], 31[T]}, {35[T], 38[T]}]

Backtrack

	Trace

	19[T]
	
	Blocked

	[{}, {20[T], 21[T], 24[T], 28[T], 30[T], 31[T], 34[T]}]

Backtrack

	Trace

	Blocked

	[{19[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
