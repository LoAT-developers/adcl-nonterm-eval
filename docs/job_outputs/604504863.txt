NO

Initial ITS
Start location: l3
   0: l0 -> l1 : x^0'=x^post0, (x^0-x^post0 == 0 /\ 1-x^0 <= 0), cost: 1
   1: l1 -> l0 : x^0'=x^post1, 0 == 0, cost: 1
   2: l1 -> l0 : x^0'=x^post2, 1+x^post2-x^0 == 0, cost: 1
   3: l2 -> l0 : x^0'=x^post3, x^0-x^post3 == 0, cost: 1
   4: l3 -> l2 : x^0'=x^post4, -x^post4+x^0 == 0, cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post0, (x^0-x^post0 == 0 /\ 1-x^0 <= 0), cost: 1
New rule:
l0 -> l1 : -1+x^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : x^0'=x^post2, 1+x^post2-x^0 == 0, cost: 1
New rule:
l1 -> l0 : x^0'=-1+x^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : x^0'=x^post3, x^0-x^post3 == 0, cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : x^0'=x^post4, -x^post4+x^0 == 0, cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Simplified rules
Start location: l3
   5: l0 -> l1 : -1+x^0 >= 0, cost: 1
   1: l1 -> l0 : x^0'=x^post1, 0 == 0, cost: 1
   6: l1 -> l0 : x^0'=-1+x^0, TRUE, cost: 1
   7: l2 -> l0 : TRUE, cost: 1
   8: l3 -> l2 : TRUE, cost: 1


Eliminating location l2 by chaining:

Applied chaining
First rule:
l3 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : TRUE, cost: 1
New rule:
l3 -> l0 : TRUE, cost: 2

Applied deletion
Removed the following rules: 7 8

Eliminated locations on linear paths
Start location: l3
   5: l0 -> l1 : -1+x^0 >= 0, cost: 1
   1: l1 -> l0 : x^0'=x^post1, 0 == 0, cost: 1
   6: l1 -> l0 : x^0'=-1+x^0, TRUE, cost: 1
   9: l3 -> l0 : TRUE, cost: 2


Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : -1+x^0 >= 0, cost: 1
Second rule:
l1 -> l0 : x^0'=x^post1, 0 == 0, cost: 1
New rule:
l0 -> l0 : x^0'=x^post1, (0 == 0 /\ -1+x^0 >= 0), cost: 2

Applied simplification
Original rule:
l0 -> l0 : x^0'=x^post1, (0 == 0 /\ -1+x^0 >= 0), cost: 2
New rule:
l0 -> l0 : x^0'=x^post1, -1+x^0 >= 0, cost: 2

Applied chaining
First rule:
l0 -> l1 : -1+x^0 >= 0, cost: 1
Second rule:
l1 -> l0 : x^0'=-1+x^0, TRUE, cost: 1
New rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 1 5 6

Eliminated locations on tree-shaped paths
Start location: l3
  10: l0 -> l0 : x^0'=x^post1, -1+x^0 >= 0, cost: 2
  11: l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
   9: l3 -> l0 : TRUE, cost: 2


Applied acceleration
Original rule:
l0 -> l0 : x^0'=x^post1, -1+x^0 >= 0, cost: 2
New rule:
l0 -> l0 : x^0'=x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fdkNic.txt

Applied nonterm
Original rule:
l0 -> l0 : x^0'=x^post1, -1+x^0 >= 0, cost: 2
New rule:
l0 -> [4] : (-x^post1+x^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_EmdPBD.txt

Applied acceleration
Original rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
New rule:
l0 -> l0 : x^0'=-n0+x^0, (n0 >= 0 /\ -n0+x^0 >= 0), cost: 2*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lDlEGe.txt

Applied instantiation
Original rule:
l0 -> l0 : x^0'=-n0+x^0, (n0 >= 0 /\ -n0+x^0 >= 0), cost: 2*n0
New rule:
l0 -> l0 : x^0'=0, (0 >= 0 /\ x^0 >= 0), cost: 2*x^0

Applied chaining
First rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
Second rule:
l0 -> l0 : x^0'=x^post1, -1+x^0 >= 0, cost: 2
New rule:
l0 -> l0 : x^0'=x^post1, -2+x^0 >= 0, cost: 4

Applied acceleration
Original rule:
l0 -> l0 : x^0'=x^post1, -2+x^0 >= 0, cost: 4
New rule:
l0 -> l0 : x^0'=x^post1, (-2+x^0 >= 0 /\ -2+x^post1 >= 0 /\ -1+n1 >= 0), cost: 4*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_MFMGKF.txt

Applied nonterm
Original rule:
l0 -> l0 : x^0'=x^post1, -2+x^0 >= 0, cost: 4
New rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -x^post1+x^0 <= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gCHPfL.txt

Applied chaining
First rule:
l0 -> l0 : x^0'=x^post1, -1+x^0 >= 0, cost: 2
Second rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -x^post1+x^0 <= 0), cost: NONTERM
New rule:
l0 -> [4] : (0 <= 0 /\ -2+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l0 -> l0 : x^0'=x^post1, -1+x^0 >= 0, cost: 2
Second rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
New rule:
l0 -> l0 : x^0'=-1+x^post1, (-1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 4

Applied acceleration
Original rule:
l0 -> l0 : x^0'=-1+x^post1, (-1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 4
New rule:
l0 -> l0 : x^0'=-1+x^post1, (-2+x^post1 >= 0 /\ -1+x^post1 >= 0 /\ -1+n2 >= 0 /\ -1+x^0 >= 0), cost: 4*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FDBbdP.txt

Applied nonterm
Original rule:
l0 -> l0 : x^0'=-1+x^post1, (-1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 4
New rule:
l0 -> [4] : (1-x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GfKIgc.txt

Applied chaining
First rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
Second rule:
l0 -> [4] : (1-x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
Second rule:
l0 -> l0 : x^0'=x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2*n
New rule:
l0 -> l0 : x^0'=x^post1, (-2+x^0 >= 0 /\ -1+n >= 0 /\ -1+x^post1 >= 0), cost: 2+2*n

Applied acceleration
Original rule:
l0 -> l0 : x^0'=x^post1, (-2+x^0 >= 0 /\ -1+n >= 0 /\ -1+x^post1 >= 0), cost: 2+2*n
New rule:
l0 -> l0 : x^0'=x^post1, (-2+x^0 >= 0 /\ -1+n3 >= 0 /\ -2+x^post1 >= 0 /\ -1+n >= 0 /\ -1+x^post1 >= 0), cost: 2*n*n3+2*n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ijdHLE.txt

Applied nonterm
Original rule:
l0 -> l0 : x^0'=x^post1, (-2+x^0 >= 0 /\ -1+n >= 0 /\ -1+x^post1 >= 0), cost: 2+2*n
New rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -1+n >= 0 /\ -x^post1+x^0 <= 0 /\ -1+x^post1 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_KiomIk.txt

Applied chaining
First rule:
l0 -> l0 : x^0'=x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2*n
Second rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -1+n >= 0 /\ -x^post1+x^0 <= 0 /\ -1+x^post1 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (0 <= 0 /\ -2+x^post1 >= 0 /\ -1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l0 -> l0 : x^0'=x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2*n
Second rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
New rule:
l0 -> l0 : x^0'=-1+x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2+2*n

Applied acceleration
Original rule:
l0 -> l0 : x^0'=-1+x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2+2*n
New rule:
l0 -> l0 : x^0'=-1+x^post1, (-1+n4 >= 0 /\ -2+x^post1 >= 0 /\ -1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2*n4+2*n*n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gMiGOn.txt

Applied nonterm
Original rule:
l0 -> l0 : x^0'=-1+x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2+2*n
New rule:
l0 -> [4] : (-1+n >= 0 /\ 1-x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ieEPng.txt

Applied chaining
First rule:
l0 -> l0 : x^0'=-1+x^0, -1+x^0 >= 0, cost: 2
Second rule:
l0 -> [4] : (-1+n >= 0 /\ 1-x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -1+n >= 0 /\ -x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l0 -> l0 : x^0'=0, (0 >= 0 /\ x^0 >= 0), cost: 2*x^0
New rule:
l0 -> l0 : x^0'=0, x^0 >= 0, cost: 2*x^0

Applied simplification
Original rule:
l0 -> [4] : (0 <= 0 /\ -2+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (-2+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l0 -> [4] : (1-x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (1-x^post1+x^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -x^post1+x^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -1+n >= 0 /\ -x^post1+x^0 <= 0 /\ -1+x^post1 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -1+n >= 0 /\ -x^post1+x^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l0 -> [4] : (0 <= 0 /\ -2+x^post1 >= 0 /\ -1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (-2+x^post1 >= 0 /\ -1+n >= 0 /\ -1+x^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l0 -> [4] : (-1+n >= 0 /\ 1-x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (-1+n >= 0 /\ 1-x^post1+x^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -1+n >= 0 /\ -x^post1+x^0 <= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -1+n >= 0 /\ -x^post1+x^0 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 10 11

Accelerated simple loops
Start location: l3
  12: l0 -> l0 : x^0'=x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2*n
  13: l0 -> [4] : (-x^post1+x^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM
  15: l0 -> [4] : (-2+x^0 >= 0 /\ -x^post1+x^0 <= 0), cost: NONTERM
  23: l0 -> l0 : x^0'=0, x^0 >= 0, cost: 2*x^0
  24: l0 -> [4] : (-2+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
  25: l0 -> [4] : (1-x^post1+x^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM
  26: l0 -> [4] : (-2+x^0 >= 0 /\ -1+n >= 0 /\ -x^post1+x^0 <= 0), cost: NONTERM
  27: l0 -> [4] : (-2+x^post1 >= 0 /\ -1+n >= 0 /\ -1+x^0 >= 0), cost: NONTERM
  28: l0 -> [4] : (-1+n >= 0 /\ 1-x^post1+x^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM
   9: l3 -> l0 : TRUE, cost: 2


Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> l0 : x^0'=x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2*n
New rule:
l3 -> l0 : x^0'=x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2+2*n

Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> [4] : (-x^post1+x^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l3 -> [4] : -1+x^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -x^post1+x^0 <= 0), cost: NONTERM
New rule:
l3 -> [4] : -2+x^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> l0 : x^0'=0, x^0 >= 0, cost: 2*x^0
New rule:
l3 -> l0 : x^0'=0, x^0 >= 0, cost: 2+2*x^0

Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> [4] : (-2+x^post1 >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l3 -> [4] : -1+x^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> [4] : (1-x^post1+x^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l3 -> [4] : -1+x^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> [4] : (-2+x^0 >= 0 /\ -1+n >= 0 /\ -x^post1+x^0 <= 0), cost: NONTERM
New rule:
l3 -> [4] : -2+x^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> [4] : (-2+x^post1 >= 0 /\ -1+n >= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l3 -> [4] : -1+x^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> [4] : (-1+n >= 0 /\ 1-x^post1+x^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l3 -> [4] : -1+x^0 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 12 13 15 23 24 25 26 27 28

Chained accelerated rules with incoming rules
Start location: l3
   9: l3 -> l0 : TRUE, cost: 2
  29: l3 -> l0 : x^0'=x^post1, (-1+n >= 0 /\ -1+x^post1 >= 0 /\ -1+x^0 >= 0), cost: 2+2*n
  30: l3 -> [4] : -1+x^0 >= 0, cost: NONTERM
  31: l3 -> [4] : -2+x^0 >= 0, cost: NONTERM
  32: l3 -> l0 : x^0'=0, x^0 >= 0, cost: 2+2*x^0


Removed unreachable locations and irrelevant leafs
Start location: l3
  30: l3 -> [4] : -1+x^0 >= 0, cost: NONTERM
  31: l3 -> [4] : -2+x^0 >= 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 30 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  -1+x^0 >= 0
