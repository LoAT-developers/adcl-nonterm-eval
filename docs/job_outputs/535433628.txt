NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, (28 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 28+arg2-arg1P0 == 0), cost: 1
   1: f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, (-35+arg1 > 0 /\ -arg1P1 == 0), cost: 1
   2: f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=arg1P2, (-1+arg1-arg1P2 == 0 /\ arg1 > 0 /\ -31+arg1 < 0 /\ -36+arg1 < 0), cost: 1
   3: f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, (35-arg1P3 == 0 /\ -30+arg1 > 0 /\ -36+arg1 < 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, (28 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 28+arg2-arg1P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P0, arg1'=28+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, (-35+arg1 > 0 /\ -arg1P1 == 0), cost: 1
New rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P1, arg1'=0, -35+arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=arg1P2, (-1+arg1-arg1P2 == 0 /\ arg1 > 0 /\ -31+arg1 < 0 /\ -36+arg1 < 0), cost: 1
New rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=-1+arg1, (31-arg1 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, (35-arg1P3 == 0 /\ -30+arg1 > 0 /\ -36+arg1 < 0), cost: 1
New rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P3, arg1'=35, (-30+arg1 > 0 /\ 36-arg1 > 0), cost: 1

Simplified rules
Start location: __init
   5: f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P0, arg1'=28+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   6: f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P1, arg1'=0, -35+arg1 > 0, cost: 1
   7: f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=-1+arg1, (31-arg1 > 0 /\ arg1 > 0), cost: 1
   8: f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P3, arg1'=35, (-30+arg1 > 0 /\ 36-arg1 > 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied acceleration
Original rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=-1+arg1, (31-arg1 > 0 /\ arg1 > 0), cost: 1
New rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=-n0+arg1, (-1+n0 >= 0 /\ 31-arg1 > 0 /\ 1-n0+arg1 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_IALjAb.txt

Applied instantiation
Original rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=-n0+arg1, (-1+n0 >= 0 /\ 31-arg1 > 0 /\ 1-n0+arg1 > 0), cost: n0
New rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=0, (1 > 0 /\ 31-arg1 > 0 /\ -1+arg1 >= 0), cost: arg1

Applied nonterm
Original rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P3, arg1'=35, (-30+arg1 > 0 /\ 36-arg1 > 0), cost: 1
New rule:
f62_0_loop_EQ -> [3] : (-30+arg1 > 0 /\ -1+n1 >= 0 /\ 36-arg1 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BHmkEL.txt

Applied simplification
Original rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=0, (1 > 0 /\ 31-arg1 > 0 /\ -1+arg1 >= 0), cost: arg1
New rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=0, (31-arg1 > 0 /\ -1+arg1 >= 0), cost: arg1

Applied deletion
Removed the following rules: 7 8

Accelerated simple loops
Start location: __init
   5: f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P0, arg1'=28+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   6: f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P1, arg1'=0, -35+arg1 > 0, cost: 1
  10: f62_0_loop_EQ -> [3] : (-30+arg1 > 0 /\ -1+n1 >= 0 /\ 36-arg1 > 0), cost: NONTERM
  11: f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=0, (31-arg1 > 0 /\ -1+arg1 >= 0), cost: arg1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P0, arg1'=28+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P1, arg1'=0, -35+arg1 > 0, cost: 1
New rule:
f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P1, arg1'=0, (-7+arg2 > 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P0, arg1'=28+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f62_0_loop_EQ -> [3] : (-30+arg1 > 0 /\ -1+n1 >= 0 /\ 36-arg1 > 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (-2+arg2 > 0 /\ arg1 > 0 /\ 8-arg2 > 0), cost: NONTERM

Applied chaining
First rule:
f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P0, arg1'=28+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f62_0_loop_EQ -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=0, (31-arg1 > 0 /\ -1+arg1 >= 0), cost: arg1
New rule:
f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=0, (1+arg2 > 0 /\ arg1 > 0 /\ 3-arg2 > 0), cost: 29+arg2

Applied deletion
Removed the following rules: 6 10 11

Chained accelerated rules with incoming rules
Start location: __init
   5: f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P0, arg1'=28+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  12: f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P1, arg1'=0, (-7+arg2 > 0 /\ arg1 > 0), cost: 2
  13: f1_0_main_Load -> [3] : (-2+arg2 > 0 /\ arg1 > 0 /\ 8-arg2 > 0), cost: NONTERM
  14: f1_0_main_Load -> f62_0_loop_EQ : arg2'=arg2P2, arg1'=0, (1+arg2 > 0 /\ arg1 > 0 /\ 3-arg2 > 0), cost: 29+arg2
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  13: f1_0_main_Load -> [3] : (-2+arg2 > 0 /\ arg1 > 0 /\ 8-arg2 > 0), cost: NONTERM
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [3] : (-2+arg2 > 0 /\ arg1 > 0 /\ 8-arg2 > 0), cost: NONTERM
New rule:
__init -> [3] : (-2+arg2P4 > 0 /\ 8-arg2P4 > 0 /\ arg1P4 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 4 13

Eliminated locations on linear paths
Start location: __init
  15: __init -> [3] : (-2+arg2P4 > 0 /\ 8-arg2P4 > 0 /\ arg1P4 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 15 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-2+arg2P4 > 0 /\ 8-arg2P4 > 0 /\ arg1P4 > 0)
