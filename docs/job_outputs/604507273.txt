NO

Initial ITS

Start location: l6
Program variables: __disjvr_0^0 cnt_15^0 cnt_20^0 lt_7^0 lt_8^0 lt_9^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l1 : __disjvr_0^0'=__disjvr_0^post1, cnt_15^0'=cnt_15^post1, cnt_20^0'=cnt_20^post1, lt_7^0'=lt_7^post1, lt_8^0'=lt_8^post1, lt_9^0'=lt_9^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ lt_8^0-lt_8^post1 == 0 /\ result_4^0-result_4^post1 == 0 /\ -__disjvr_0^post1+__disjvr_0^0 == 0 /\ lt_9^0-lt_9^post1 == 0 /\ cnt_20^0-cnt_20^post1 == 0 /\ cnt_15^0-cnt_15^post1 == 0 /\ -lt_7^post1+lt_7^0 == 0), cost: 1
   1: l1 -> l2 : __disjvr_0^0'=__disjvr_0^post2, cnt_15^0'=cnt_15^post2, cnt_20^0'=cnt_20^post2, lt_7^0'=lt_7^post2, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -cnt_15^post2+cnt_15^0 == 0 /\ -x_5^post2+x_5^0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_8^1-lt_9^1 <= 0 /\ lt_7^0-lt_7^post2 == 0 /\ lt_8^1-cnt_15^0 == 0 /\ -lt_8^1+lt_9^1 <= 0 /\ cnt_20^0-cnt_20^post2 == 0 /\ -cnt_20^0+lt_9^1 == 0), cost: 1
   2: l1 -> l4 : __disjvr_0^0'=__disjvr_0^post3, cnt_15^0'=cnt_15^post3, cnt_20^0'=cnt_20^post3, lt_7^0'=lt_7^post3, lt_8^0'=lt_8^post3, lt_9^0'=lt_9^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-cnt_15^post3+cnt_15^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ result_4^0-result_4^post3 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0), cost: 1
   3: l4 -> l5 : __disjvr_0^0'=__disjvr_0^post4, cnt_15^0'=cnt_15^post4, cnt_20^0'=cnt_20^post4, lt_7^0'=lt_7^post4, lt_8^0'=lt_8^post4, lt_9^0'=lt_9^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (x_5^0-x_5^post4 == 0 /\ lt_8^0-lt_8^post4 == 0 /\ lt_9^0-lt_9^post4 == 0 /\ y_6^0-y_6^post4 == 0 /\ -__disjvr_0^post4+__disjvr_0^0 == 0 /\ cnt_20^0-cnt_20^post4 == 0 /\ -lt_7^post4+lt_7^0 == 0 /\ cnt_15^0-cnt_15^post4 == 0 /\ result_4^0-result_4^post4 == 0 /\ __disjvr_0^post4-__disjvr_0^0 == 0), cost: 1
   4: l5 -> l3 : __disjvr_0^0'=__disjvr_0^post5, cnt_15^0'=cnt_15^post5, cnt_20^0'=cnt_20^post5, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ -__disjvr_0^post5+__disjvr_0^0 == 0 /\ -cnt_15^post5+cnt_15^0 == 0 /\ y_6^0-y_6^post5 == 0 /\ cnt_20^0-cnt_20^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ lt_7^1-cnt_15^0 == 0), cost: 1
   5: l3 -> l1 : __disjvr_0^0'=__disjvr_0^post6, cnt_15^0'=cnt_15^post6, cnt_20^0'=cnt_20^post6, lt_7^0'=lt_7^post6, lt_8^0'=lt_8^post6, lt_9^0'=lt_9^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (cnt_20^0-cnt_20^post6 == 0 /\ result_4^0-result_4^post6 == 0 /\ -lt_7^post6+lt_7^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ -cnt_15^post6+cnt_15^0 == 0 /\ lt_9^0-lt_9^post6 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ y_6^0-y_6^post6 == 0 /\ -lt_8^post6+lt_8^0 == 0), cost: 1
   6: l6 -> l0 : __disjvr_0^0'=__disjvr_0^post7, cnt_15^0'=cnt_15^post7, cnt_20^0'=cnt_20^post7, lt_7^0'=lt_7^post7, lt_8^0'=lt_8^post7, lt_9^0'=lt_9^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (lt_8^0-lt_8^post7 == 0 /\ y_6^0-y_6^post7 == 0 /\ -lt_7^post7+lt_7^0 == 0 /\ -cnt_15^post7+cnt_15^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ lt_9^0-lt_9^post7 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0), cost: 1

Chained Linear Paths

Start location: l6
Program variables: __disjvr_0^0 cnt_15^0 cnt_20^0 lt_7^0 lt_8^0 lt_9^0 result_4^0 x_5^0 y_6^0
   1: l1 -> l2 : __disjvr_0^0'=__disjvr_0^post2, cnt_15^0'=cnt_15^post2, cnt_20^0'=cnt_20^post2, lt_7^0'=lt_7^post2, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -cnt_15^post2+cnt_15^0 == 0 /\ -x_5^post2+x_5^0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_8^1-lt_9^1 <= 0 /\ lt_7^0-lt_7^post2 == 0 /\ lt_8^1-cnt_15^0 == 0 /\ -lt_8^1+lt_9^1 <= 0 /\ cnt_20^0-cnt_20^post2 == 0 /\ -cnt_20^0+lt_9^1 == 0), cost: 1
  10: l1 -> l1 : __disjvr_0^0'=__disjvr_0^post6, cnt_15^0'=cnt_15^post6, cnt_20^0'=cnt_20^post6, lt_7^0'=lt_7^post6, lt_8^0'=lt_8^post6, lt_9^0'=lt_9^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ -lt_9^post4+lt_9^post3 == 0 /\ -cnt_15^post3+cnt_15^0 == 0 /\ -y_6^post6+y_6^post5 == 0 /\ __disjvr_0^post5-__disjvr_0^post6 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ lt_7^1-cnt_15^post4 == 0 /\ cnt_15^post5-cnt_15^post6 == 0 /\ cnt_20^post4-cnt_20^post5 == 0 /\ result_4^0-result_4^post3 == 0 /\ -lt_7^post6+lt_7^post5 == 0 /\ y_6^post4-y_6^post5 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ -lt_7^post4+lt_7^post3 == 0 /\ x_5^post5-x_5^post6 == 0 /\ result_4^post4-result_4^post5 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ __disjvr_0^post4-__disjvr_0^post3 == 0 /\ -cnt_20^post4+cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -x_5^post5+x_5^post4 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0 /\ -lt_9^post6+lt_9^post5 == 0 /\ -lt_8^post6+lt_8^post5 == 0 /\ cnt_15^post3-cnt_15^post4 == 0 /\ -lt_8^post4+lt_8^post3 == 0 /\ -result_4^post4+result_4^post3 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ cnt_20^post5-cnt_20^post6 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0 /\ -y_6^post4+y_6^post3 == 0 /\ -cnt_15^post5+cnt_15^post4 == 0), cost: 1
   7: l6 -> l1 : __disjvr_0^0'=__disjvr_0^post1, cnt_15^0'=cnt_15^post1, cnt_20^0'=cnt_20^post1, lt_7^0'=lt_7^post1, lt_8^0'=lt_8^post1, lt_9^0'=lt_9^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ lt_8^0-lt_8^post7 == 0 /\ -result_4^post1+result_4^post7 == 0 /\ y_6^0-y_6^post7 == 0 /\ -lt_7^post7+lt_7^0 == 0 /\ -cnt_15^post7+cnt_15^0 == 0 /\ -lt_7^post1+lt_7^post7 == 0 /\ __disjvr_0^post7-__disjvr_0^post1 == 0 /\ -lt_8^post1+lt_8^post7 == 0 /\ x_5^0-x_5^post7 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -lt_9^post1+lt_9^post7 == 0 /\ lt_9^0-lt_9^post7 == 0 /\ -cnt_20^post1+cnt_20^post7 == 0 /\ cnt_15^post7-cnt_15^post1 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0), cost: 1

	Eliminating location l0 by chaining:

	Applied chaining

	First rule:
	l6 -> l0 : __disjvr_0^0'=__disjvr_0^post7, cnt_15^0'=cnt_15^post7, cnt_20^0'=cnt_20^post7, lt_7^0'=lt_7^post7, lt_8^0'=lt_8^post7, lt_9^0'=lt_9^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (lt_8^0-lt_8^post7 == 0 /\ y_6^0-y_6^post7 == 0 /\ -lt_7^post7+lt_7^0 == 0 /\ -cnt_15^post7+cnt_15^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ lt_9^0-lt_9^post7 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0), cost: 1
	Second rule:
	l0 -> l1 : __disjvr_0^0'=__disjvr_0^post1, cnt_15^0'=cnt_15^post1, cnt_20^0'=cnt_20^post1, lt_7^0'=lt_7^post1, lt_8^0'=lt_8^post1, lt_9^0'=lt_9^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ lt_8^0-lt_8^post1 == 0 /\ result_4^0-result_4^post1 == 0 /\ -__disjvr_0^post1+__disjvr_0^0 == 0 /\ lt_9^0-lt_9^post1 == 0 /\ cnt_20^0-cnt_20^post1 == 0 /\ cnt_15^0-cnt_15^post1 == 0 /\ -lt_7^post1+lt_7^0 == 0), cost: 1
	New rule:
	l6 -> l1 : __disjvr_0^0'=__disjvr_0^post1, cnt_15^0'=cnt_15^post1, cnt_20^0'=cnt_20^post1, lt_7^0'=lt_7^post1, lt_8^0'=lt_8^post1, lt_9^0'=lt_9^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ lt_8^0-lt_8^post7 == 0 /\ -result_4^post1+result_4^post7 == 0 /\ y_6^0-y_6^post7 == 0 /\ -lt_7^post7+lt_7^0 == 0 /\ -cnt_15^post7+cnt_15^0 == 0 /\ -lt_7^post1+lt_7^post7 == 0 /\ __disjvr_0^post7-__disjvr_0^post1 == 0 /\ -lt_8^post1+lt_8^post7 == 0 /\ x_5^0-x_5^post7 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -lt_9^post1+lt_9^post7 == 0 /\ lt_9^0-lt_9^post7 == 0 /\ -cnt_20^post1+cnt_20^post7 == 0 /\ cnt_15^post7-cnt_15^post1 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 6
	
	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^post3, cnt_15^0'=cnt_15^post3, cnt_20^0'=cnt_20^post3, lt_7^0'=lt_7^post3, lt_8^0'=lt_8^post3, lt_9^0'=lt_9^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-cnt_15^post3+cnt_15^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ result_4^0-result_4^post3 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0), cost: 1
	Second rule:
	l4 -> l5 : __disjvr_0^0'=__disjvr_0^post4, cnt_15^0'=cnt_15^post4, cnt_20^0'=cnt_20^post4, lt_7^0'=lt_7^post4, lt_8^0'=lt_8^post4, lt_9^0'=lt_9^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (x_5^0-x_5^post4 == 0 /\ lt_8^0-lt_8^post4 == 0 /\ lt_9^0-lt_9^post4 == 0 /\ y_6^0-y_6^post4 == 0 /\ -__disjvr_0^post4+__disjvr_0^0 == 0 /\ cnt_20^0-cnt_20^post4 == 0 /\ -lt_7^post4+lt_7^0 == 0 /\ cnt_15^0-cnt_15^post4 == 0 /\ result_4^0-result_4^post4 == 0 /\ __disjvr_0^post4-__disjvr_0^0 == 0), cost: 1
	New rule:
	l1 -> l5 : __disjvr_0^0'=__disjvr_0^post4, cnt_15^0'=cnt_15^post4, cnt_20^0'=cnt_20^post4, lt_7^0'=lt_7^post4, lt_8^0'=lt_8^post4, lt_9^0'=lt_9^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (-lt_9^post4+lt_9^post3 == 0 /\ -cnt_15^post3+cnt_15^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ -lt_7^post4+lt_7^post3 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ __disjvr_0^post4-__disjvr_0^post3 == 0 /\ -cnt_20^post4+cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ cnt_15^post3-cnt_15^post4 == 0 /\ -lt_8^post4+lt_8^post3 == 0 /\ -result_4^post4+result_4^post3 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0 /\ -y_6^post4+y_6^post3 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l1 -> l5 : __disjvr_0^0'=__disjvr_0^post4, cnt_15^0'=cnt_15^post4, cnt_20^0'=cnt_20^post4, lt_7^0'=lt_7^post4, lt_8^0'=lt_8^post4, lt_9^0'=lt_9^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (-lt_9^post4+lt_9^post3 == 0 /\ -cnt_15^post3+cnt_15^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ -lt_7^post4+lt_7^post3 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ __disjvr_0^post4-__disjvr_0^post3 == 0 /\ -cnt_20^post4+cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ cnt_15^post3-cnt_15^post4 == 0 /\ -lt_8^post4+lt_8^post3 == 0 /\ -result_4^post4+result_4^post3 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0 /\ -y_6^post4+y_6^post3 == 0), cost: 1
	Second rule:
	l5 -> l3 : __disjvr_0^0'=__disjvr_0^post5, cnt_15^0'=cnt_15^post5, cnt_20^0'=cnt_20^post5, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ -__disjvr_0^post5+__disjvr_0^0 == 0 /\ -cnt_15^post5+cnt_15^0 == 0 /\ y_6^0-y_6^post5 == 0 /\ cnt_20^0-cnt_20^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ lt_7^1-cnt_15^0 == 0), cost: 1
	New rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^post5, cnt_15^0'=cnt_15^post5, cnt_20^0'=cnt_20^post5, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ -lt_9^post4+lt_9^post3 == 0 /\ -cnt_15^post3+cnt_15^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ lt_7^1-cnt_15^post4 == 0 /\ cnt_20^post4-cnt_20^post5 == 0 /\ result_4^0-result_4^post3 == 0 /\ y_6^post4-y_6^post5 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ -lt_7^post4+lt_7^post3 == 0 /\ result_4^post4-result_4^post5 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ __disjvr_0^post4-__disjvr_0^post3 == 0 /\ -cnt_20^post4+cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -x_5^post5+x_5^post4 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0 /\ cnt_15^post3-cnt_15^post4 == 0 /\ -lt_8^post4+lt_8^post3 == 0 /\ -result_4^post4+result_4^post3 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0 /\ -y_6^post4+y_6^post3 == 0 /\ -cnt_15^post5+cnt_15^post4 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 8
	
	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^post5, cnt_15^0'=cnt_15^post5, cnt_20^0'=cnt_20^post5, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ -lt_9^post4+lt_9^post3 == 0 /\ -cnt_15^post3+cnt_15^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ lt_7^1-cnt_15^post4 == 0 /\ cnt_20^post4-cnt_20^post5 == 0 /\ result_4^0-result_4^post3 == 0 /\ y_6^post4-y_6^post5 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ -lt_7^post4+lt_7^post3 == 0 /\ result_4^post4-result_4^post5 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ __disjvr_0^post4-__disjvr_0^post3 == 0 /\ -cnt_20^post4+cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -x_5^post5+x_5^post4 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0 /\ cnt_15^post3-cnt_15^post4 == 0 /\ -lt_8^post4+lt_8^post3 == 0 /\ -result_4^post4+result_4^post3 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0 /\ -y_6^post4+y_6^post3 == 0 /\ -cnt_15^post5+cnt_15^post4 == 0), cost: 1
	Second rule:
	l3 -> l1 : __disjvr_0^0'=__disjvr_0^post6, cnt_15^0'=cnt_15^post6, cnt_20^0'=cnt_20^post6, lt_7^0'=lt_7^post6, lt_8^0'=lt_8^post6, lt_9^0'=lt_9^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (cnt_20^0-cnt_20^post6 == 0 /\ result_4^0-result_4^post6 == 0 /\ -lt_7^post6+lt_7^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ -cnt_15^post6+cnt_15^0 == 0 /\ lt_9^0-lt_9^post6 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ y_6^0-y_6^post6 == 0 /\ -lt_8^post6+lt_8^0 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post6, cnt_15^0'=cnt_15^post6, cnt_20^0'=cnt_20^post6, lt_7^0'=lt_7^post6, lt_8^0'=lt_8^post6, lt_9^0'=lt_9^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ -lt_9^post4+lt_9^post3 == 0 /\ -cnt_15^post3+cnt_15^0 == 0 /\ -y_6^post6+y_6^post5 == 0 /\ __disjvr_0^post5-__disjvr_0^post6 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ lt_7^1-cnt_15^post4 == 0 /\ cnt_15^post5-cnt_15^post6 == 0 /\ cnt_20^post4-cnt_20^post5 == 0 /\ result_4^0-result_4^post3 == 0 /\ -lt_7^post6+lt_7^post5 == 0 /\ y_6^post4-y_6^post5 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ -lt_7^post4+lt_7^post3 == 0 /\ x_5^post5-x_5^post6 == 0 /\ result_4^post4-result_4^post5 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ __disjvr_0^post4-__disjvr_0^post3 == 0 /\ -cnt_20^post4+cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -x_5^post5+x_5^post4 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0 /\ -lt_9^post6+lt_9^post5 == 0 /\ -lt_8^post6+lt_8^post5 == 0 /\ cnt_15^post3-cnt_15^post4 == 0 /\ -lt_8^post4+lt_8^post3 == 0 /\ -result_4^post4+result_4^post3 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ cnt_20^post5-cnt_20^post6 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0 /\ -y_6^post4+y_6^post3 == 0 /\ -cnt_15^post5+cnt_15^post4 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 9

Simplified Transitions

Start location: l6
Program variables: cnt_15^0 cnt_20^0 lt_7^0 lt_8^0 lt_9^0 result_4^0 x_5^0 y_6^0
  11: l1 -> l2 : lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, -cnt_20^0+cnt_15^0 == 0, cost: 1
  13: l1 -> l1 : lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, T, cost: 1
  12: l6 -> l1 : x_5^0'=x_5^post1, y_6^0'=y_6^post1, T, cost: 1

	made implied equalities explicit

	Original rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^post2, cnt_15^0'=cnt_15^post2, cnt_20^0'=cnt_20^post2, lt_7^0'=lt_7^post2, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -cnt_15^post2+cnt_15^0 == 0 /\ -x_5^post2+x_5^0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_8^1-lt_9^1 <= 0 /\ lt_7^0-lt_7^post2 == 0 /\ lt_8^1-cnt_15^0 == 0 /\ -lt_8^1+lt_9^1 <= 0 /\ cnt_20^0-cnt_20^post2 == 0 /\ -cnt_20^0+lt_9^1 == 0), cost: 1
	New rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^post2, cnt_15^0'=cnt_15^post2, cnt_20^0'=cnt_20^post2, lt_7^0'=lt_7^post2, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -cnt_15^post2+cnt_15^0 == 0 /\ -x_5^post2+x_5^0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_8^1-lt_9^1 <= 0 /\ lt_8^1-lt_9^1 == 0 /\ lt_7^0-lt_7^post2 == 0 /\ lt_8^1-cnt_15^0 == 0 /\ -lt_8^1+lt_9^1 <= 0 /\ cnt_20^0-cnt_20^post2 == 0 /\ -cnt_20^0+lt_9^1 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^post2, cnt_15^0'=cnt_15^post2, cnt_20^0'=cnt_20^post2, lt_7^0'=lt_7^post2, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -cnt_15^post2+cnt_15^0 == 0 /\ -x_5^post2+x_5^0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_8^1-lt_9^1 <= 0 /\ lt_8^1-lt_9^1 == 0 /\ lt_7^0-lt_7^post2 == 0 /\ lt_8^1-cnt_15^0 == 0 /\ -lt_8^1+lt_9^1 <= 0 /\ cnt_20^0-cnt_20^post2 == 0 /\ -cnt_20^0+lt_9^1 == 0), cost: 1
	New rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ lt_8^1-lt_9^1 <= 0 /\ lt_8^1-lt_9^1 == 0 /\ lt_8^1-cnt_15^0 == 0 /\ -lt_8^1+lt_9^1 <= 0 /\ -cnt_20^0+lt_9^1 == 0), cost: 1
	
		propagated equality __disjvr_0^post2 = __disjvr_0^0
		
		propagated equality cnt_15^post2 = cnt_15^0
		
		propagated equality x_5^post2 = x_5^0
		
		propagated equality y_6^post2 = y_6^0
		
		propagated equality lt_7^post2 = lt_7^0
		
		propagated equality cnt_20^post2 = cnt_20^0
		
	Propagated Equalities

	Original rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ lt_8^1-lt_9^1 <= 0 /\ lt_8^1-lt_9^1 == 0 /\ lt_8^1-cnt_15^0 == 0 /\ -lt_8^1+lt_9^1 <= 0 /\ -cnt_20^0+lt_9^1 == 0), cost: 1
	New rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 <= 0 /\ 0 == 0 /\ -cnt_20^0+cnt_15^0 == 0), cost: 1
	
		propagated equality lt_8^1 = lt_9^1
		
		propagated equality lt_9^1 = cnt_15^0
		
	Simplified Guard

	Original rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 <= 0 /\ 0 == 0 /\ -cnt_20^0+cnt_15^0 == 0), cost: 1
	New rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, -cnt_20^0+cnt_15^0 == 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, -cnt_20^0+cnt_15^0 == 0, cost: 1
	New rule:
	l1 -> l2 : lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, -cnt_20^0+cnt_15^0 == 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l1 : __disjvr_0^0'=__disjvr_0^post1, cnt_15^0'=cnt_15^post1, cnt_20^0'=cnt_20^post1, lt_7^0'=lt_7^post1, lt_8^0'=lt_8^post1, lt_9^0'=lt_9^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ lt_8^0-lt_8^post7 == 0 /\ -result_4^post1+result_4^post7 == 0 /\ y_6^0-y_6^post7 == 0 /\ -lt_7^post7+lt_7^0 == 0 /\ -cnt_15^post7+cnt_15^0 == 0 /\ -lt_7^post1+lt_7^post7 == 0 /\ __disjvr_0^post7-__disjvr_0^post1 == 0 /\ -lt_8^post1+lt_8^post7 == 0 /\ x_5^0-x_5^post7 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -lt_9^post1+lt_9^post7 == 0 /\ lt_9^0-lt_9^post7 == 0 /\ -cnt_20^post1+cnt_20^post7 == 0 /\ cnt_15^post7-cnt_15^post1 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0), cost: 1
	New rule:
	l6 -> l1 : __disjvr_0^0'=__disjvr_0^post7, cnt_15^0'=cnt_15^post7, cnt_20^0'=cnt_20^post7, lt_7^0'=lt_7^post7, lt_8^0'=lt_8^post7, lt_9^0'=lt_9^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ lt_8^0-lt_8^post7 == 0 /\ y_6^0-y_6^post7 == 0 /\ -lt_7^post7+lt_7^0 == 0 /\ -cnt_15^post7+cnt_15^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ lt_9^0-lt_9^post7 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0), cost: 1
	
		propagated equality result_4^post1 = result_4^post7
		
		propagated equality lt_7^post1 = lt_7^post7
		
		propagated equality __disjvr_0^post1 = __disjvr_0^post7
		
		propagated equality lt_8^post1 = lt_8^post7
		
		propagated equality lt_9^post1 = lt_9^post7
		
		propagated equality cnt_20^post1 = cnt_20^post7
		
		propagated equality cnt_15^post1 = cnt_15^post7
		
	Propagated Equalities

	Original rule:
	l6 -> l1 : __disjvr_0^0'=__disjvr_0^post7, cnt_15^0'=cnt_15^post7, cnt_20^0'=cnt_20^post7, lt_7^0'=lt_7^post7, lt_8^0'=lt_8^post7, lt_9^0'=lt_9^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ lt_8^0-lt_8^post7 == 0 /\ y_6^0-y_6^post7 == 0 /\ -lt_7^post7+lt_7^0 == 0 /\ -cnt_15^post7+cnt_15^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ lt_9^0-lt_9^post7 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0), cost: 1
	New rule:
	l6 -> l1 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^0, lt_9^0'=lt_9^0, result_4^0'=result_4^0, x_5^0'=x_5^post1, y_6^0'=y_6^post1, 0 == 0, cost: 1
	
		propagated equality lt_8^post7 = lt_8^0
		
		propagated equality y_6^post7 = y_6^0
		
		propagated equality lt_7^post7 = lt_7^0
		
		propagated equality cnt_15^post7 = cnt_15^0
		
		propagated equality x_5^post7 = x_5^0
		
		propagated equality cnt_20^post7 = cnt_20^0
		
		propagated equality result_4^post7 = result_4^0
		
		propagated equality lt_9^post7 = lt_9^0
		
		propagated equality __disjvr_0^post7 = __disjvr_0^0
		
	Simplified Guard

	Original rule:
	l6 -> l1 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^0, lt_9^0'=lt_9^0, result_4^0'=result_4^0, x_5^0'=x_5^post1, y_6^0'=y_6^post1, 0 == 0, cost: 1
	New rule:
	l6 -> l1 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^0, lt_9^0'=lt_9^0, result_4^0'=result_4^0, x_5^0'=x_5^post1, y_6^0'=y_6^post1, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l1 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^0, lt_8^0'=lt_8^0, lt_9^0'=lt_9^0, result_4^0'=result_4^0, x_5^0'=x_5^post1, y_6^0'=y_6^post1, T, cost: 1
	New rule:
	l6 -> l1 : x_5^0'=x_5^post1, y_6^0'=y_6^post1, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post6, cnt_15^0'=cnt_15^post6, cnt_20^0'=cnt_20^post6, lt_7^0'=lt_7^post6, lt_8^0'=lt_8^post6, lt_9^0'=lt_9^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ -lt_9^post4+lt_9^post3 == 0 /\ -cnt_15^post3+cnt_15^0 == 0 /\ -y_6^post6+y_6^post5 == 0 /\ __disjvr_0^post5-__disjvr_0^post6 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ lt_7^1-cnt_15^post4 == 0 /\ cnt_15^post5-cnt_15^post6 == 0 /\ cnt_20^post4-cnt_20^post5 == 0 /\ result_4^0-result_4^post3 == 0 /\ -lt_7^post6+lt_7^post5 == 0 /\ y_6^post4-y_6^post5 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ -lt_7^post4+lt_7^post3 == 0 /\ x_5^post5-x_5^post6 == 0 /\ result_4^post4-result_4^post5 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ __disjvr_0^post4-__disjvr_0^post3 == 0 /\ -cnt_20^post4+cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -x_5^post5+x_5^post4 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0 /\ -lt_9^post6+lt_9^post5 == 0 /\ -lt_8^post6+lt_8^post5 == 0 /\ cnt_15^post3-cnt_15^post4 == 0 /\ -lt_8^post4+lt_8^post3 == 0 /\ -result_4^post4+result_4^post3 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ cnt_20^post5-cnt_20^post6 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0 /\ -y_6^post4+y_6^post3 == 0 /\ -cnt_15^post5+cnt_15^post4 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post5, cnt_15^0'=cnt_15^post5, cnt_20^0'=cnt_20^post5, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ -lt_9^post4+lt_9^post3 == 0 /\ -cnt_15^post3+cnt_15^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ lt_7^1-cnt_15^post4 == 0 /\ cnt_20^post4-cnt_20^post5 == 0 /\ result_4^0-result_4^post3 == 0 /\ y_6^post4-y_6^post5 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ -lt_7^post4+lt_7^post3 == 0 /\ result_4^post4-result_4^post5 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ __disjvr_0^post4-__disjvr_0^post3 == 0 /\ -cnt_20^post4+cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -x_5^post5+x_5^post4 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0 /\ cnt_15^post3-cnt_15^post4 == 0 /\ -lt_8^post4+lt_8^post3 == 0 /\ -result_4^post4+result_4^post3 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0 /\ -y_6^post4+y_6^post3 == 0 /\ -cnt_15^post5+cnt_15^post4 == 0), cost: 1
	
		propagated equality y_6^post6 = y_6^post5
		
		propagated equality __disjvr_0^post6 = __disjvr_0^post5
		
		propagated equality cnt_15^post6 = cnt_15^post5
		
		propagated equality lt_7^post6 = lt_7^post5
		
		propagated equality x_5^post6 = x_5^post5
		
		propagated equality result_4^post6 = result_4^post5
		
		propagated equality lt_9^post6 = lt_9^post5
		
		propagated equality lt_8^post6 = lt_8^post5
		
		propagated equality cnt_20^post6 = cnt_20^post5
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post5, cnt_15^0'=cnt_15^post5, cnt_20^0'=cnt_20^post5, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ -lt_9^post4+lt_9^post3 == 0 /\ -cnt_15^post3+cnt_15^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ lt_7^1-cnt_15^post4 == 0 /\ cnt_20^post4-cnt_20^post5 == 0 /\ result_4^0-result_4^post3 == 0 /\ y_6^post4-y_6^post5 == 0 /\ -lt_7^post3+lt_7^0 == 0 /\ -cnt_20^0+lt_9^post3 == 0 /\ -lt_7^post4+lt_7^post3 == 0 /\ result_4^post4-result_4^post5 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ __disjvr_0^post4-__disjvr_0^post3 == 0 /\ -cnt_20^post4+cnt_20^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -x_5^post5+x_5^post4 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0 /\ cnt_15^post3-cnt_15^post4 == 0 /\ -lt_8^post4+lt_8^post3 == 0 /\ -result_4^post4+result_4^post3 == 0 /\ -x_5^post4+x_5^post3 == 0 /\ -cnt_15^0+lt_8^post3 == 0 /\ y_6^0-y_6^post3 == 0 /\ -y_6^post4+y_6^post3 == 0 /\ -cnt_15^post5+cnt_15^post4 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	
		propagated equality lt_9^post3 = lt_9^post4
		
		propagated equality cnt_15^post3 = cnt_15^0
		
		propagated equality __disjvr_0^post3 = __disjvr_0^0
		
		propagated equality __disjvr_0^post4 = __disjvr_0^0
		
		propagated equality cnt_15^post4 = lt_7^1
		
		propagated equality cnt_20^post4 = cnt_20^post5
		
		propagated equality result_4^post3 = result_4^0
		
		propagated equality y_6^post4 = y_6^post5
		
		propagated equality lt_7^post3 = lt_7^0
		
		propagated equality lt_9^post4 = cnt_20^0
		
		propagated equality lt_7^post4 = lt_7^0
		
		propagated equality result_4^post4 = result_4^post5
		
		propagated equality cnt_20^post3 = cnt_20^0
		
		propagated equality cnt_20^post5 = cnt_20^0
		
		propagated equality x_5^post3 = x_5^0
		
		propagated equality x_5^post4 = x_5^post5
		
		propagated equality __disjvr_0^post5 = __disjvr_0^0
		
		propagated equality lt_7^1 = cnt_15^0
		
		propagated equality lt_8^post3 = lt_8^post4
		
		propagated equality result_4^post5 = result_4^0
		
		propagated equality x_5^post5 = x_5^0
		
		propagated equality lt_8^post4 = cnt_15^0
		
		propagated equality y_6^post3 = y_6^0
		
		propagated equality y_6^post5 = y_6^0
		
		propagated equality cnt_15^post5 = cnt_15^0
		
	Simplified Guard

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, cnt_15^0'=cnt_15^0, cnt_20^0'=cnt_20^0, lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	New rule:
	l1 -> l1 : lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, T, cost: 1

Step with 12

	Trace

	12[T]
	
	Blocked

	[{}, {}]

Step with 11

	Trace

	12[T], 11[(-cnt_20^0+cnt_15^0 == 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {11[T]}]

Step with 13

	Trace

	12[T], 13[T]
	
	Blocked

	[{}, {11[T]}, {}]

Nonterm

Start location: l6
Program variables: cnt_15^0 cnt_20^0 lt_7^0 lt_8^0 lt_9^0 result_4^0 x_5^0 y_6^0
  11: l1 -> l2 : lt_8^0'=lt_8^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, -cnt_20^0+cnt_15^0 == 0, cost: 1
  13: l1 -> l1 : lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, T, cost: 1
  14: l1 -> LoAT_sink : -1+n >= 0, cost: NONTERM
  12: l6 -> l1 : x_5^0'=x_5^post1, y_6^0'=y_6^post1, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l1 -> l1 : lt_7^0'=lt_7^post5, lt_8^0'=lt_8^post5, lt_9^0'=lt_9^post5, T, cost: 1
	New rule:
	l1 -> LoAT_sink : -1+n >= 0, cost: NONTERM

		Replacement map: {}

Step with 14

	Trace

	12[T], 14[-1+n >= 0]
	
	Blocked

	[{}, {11[T]}, {14[T]}]

Refute

	Counterexample

	[ cnt_15^0=0 cnt_20^0=0 lt_7^0=0 lt_8^0=0 lt_9^0=0 result_4^0=0 x_5^0=0 y_6^0=0 ] 12 [ cnt_15^0=0 cnt_20^0=0 lt_7^0=0 lt_8^0=0 lt_9^0=0 result_4^0=0 x_5^0=x_5^0 y_6^0=y_6^0 ] 14
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
