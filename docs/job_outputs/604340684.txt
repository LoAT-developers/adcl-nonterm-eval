NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_i -> 0}>
<l1, l2, true>
<l2, l25, not((main_i < 100))>
<l2, l3, (main_i < 100)>
<l3, l4, true, seq{main_a -> (main_i + 2), main_j -> 0}>
<l4, l5, true>
<l5, l23, not((main_j < main_a))>
<l5, l6, (main_j < main_a)>
<l6, l7, true, seq{main_k -> ((main_i + main_j) + 3)}>
<l7, l8, true>
<l8, l21, not((main_k >= 0))>
<l8, l9, (main_k >= 0)>
<l9, l10, true, seq{main_b -> (((main_i + main_j) + main_k) + 4), main_l -> 0}>
<l10, l11, true>
<l11, l19, not((main_l < main_b))>
<l11, l12, (main_l < main_b)>
<l12, l13, true, seq{main_m -> ((((main_i + main_j) + main_k) + main_l) + 1000)}>
<l13, l14, true>
<l14, l17, not((main_m >= 0))>
<l14, l15, (main_m >= 0)>
<l15, l16, true, seq{main_m -> (main_m - 0)}>
<l16, l14, true>
<l17, l18, true, seq{main_l -> (main_l + 1)}>
<l18, l11, true>
<l19, l20, true, seq{main_k -> (main_k - 1)}>
<l20, l8, true>
<l21, l22, true, seq{main_j -> (main_j + 1)}>
<l22, l5, true>
<l23, l24, true, seq{main_i -> (main_i + 1)}>
<l24, l2, true>
<l25, l26, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_i -> 0}>
<l1, l2, true>
<l2, l3, (main_i < 100)>
<l2, l25, not((main_i < 100))>
<l3, l4, true, seq{main_a -> (main_i + 2), main_j -> 0}>
<l4, l5, true>
<l5, l6, (main_j < main_a)>
<l5, l23, not((main_j < main_a))>
<l6, l7, true, seq{main_k -> ((main_i + main_j) + 3)}>
<l7, l8, true>
<l8, l9, (main_k >= 0)>
<l8, l21, not((main_k >= 0))>
<l9, l10, true, seq{main_b -> (((main_i + main_j) + main_k) + 4), main_l -> 0}>
<l10, l11, true>
<l11, l12, (main_l < main_b)>
<l11, l19, not((main_l < main_b))>
<l12, l13, true, seq{main_m -> ((((main_i + main_j) + main_k) + main_l) + 1000)}>
<l13, l14, true>
<l14, l15, (main_m >= 0)>
<l14, l17, not((main_m >= 0))>
<l15, l16, true, seq{main_m -> (main_m - 0)}>
<l16, l14, true>
<l17, l18, true, seq{main_l -> (main_l + 1)}>
<l18, l11, true>
<l19, l20, true, seq{main_k -> (main_k - 1)}>
<l20, l8, true>
<l21, l22, true, seq{main_j -> (main_j + 1)}>
<l22, l5, true>
<l23, l24, true, seq{main_i -> (main_i + 1)}>
<l24, l2, true>
<l25, l26, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
26, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [1 functions]:
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [9 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1>
main | function | [integer, ()] | <line: 5, col: 1>
i | local variable | integer | <line: 6, col: 5> | <line: 13, col: 5> <line: 15, col: 12> <line: 16, col: 13> <line: 19, col: 17> <line: 21, col: 21> <line: 24, col: 25> <line: 34, col: 9> <line: 34, col: 13>
j | local variable | integer | <line: 7, col: 5> | <line: 17, col: 9> <line: 18, col: 16> <line: 19, col: 19> <line: 21, col: 23> <line: 24, col: 27> <line: 32, col: 13> <line: 32, col: 17>
k | local variable | integer | <line: 8, col: 5> | <line: 19, col: 13> <line: 20, col: 20> <line: 21, col: 25> <line: 24, col: 29> <line: 30, col: 17> <line: 30, col: 21>
l | local variable | integer | <line: 9, col: 5> | <line: 22, col: 17> <line: 23, col: 24> <line: 24, col: 31> <line: 28, col: 21> <line: 28, col: 25>
m | local variable | integer | <line: 10, col: 5> | <line: 24, col: 21> <line: 25, col: 28> <line: 26, col: 25> <line: 26, col: 29>
a | local variable | integer | <line: 11, col: 5> | <line: 16, col: 9> <line: 18, col: 20>
b | local variable | integer | <line: 12, col: 5> | <line: 21, col: 17> <line: 23, col: 28>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l5, (main_i = 0) /\ (0 < 100), par{main_j -> 0, main_a -> (0 + 2)}>
<l5, l11, (main_j < main_a) /\ (((main_i + main_j) + 3) >= 0), par{main_k -> ((main_i + main_j) + 3), main_l -> 0, main_b -> (((main_i + main_j) + ((main_i + main_j) + 3)) + 4)}>
<l5, l5, (main_j < main_a) /\ not((((main_i + main_j) + 3) >= 0)), par{main_j -> (main_j + 1), main_k -> ((main_i + main_j) + 3)}>
<l5, l5, not((main_j < main_a)) /\ ((main_i + 1) < 100), par{main_i -> (main_i + 1), main_j -> 0, main_a -> ((main_i + 1) + 2)}>
<l5, l26, not((main_j < main_a)) /\ not(((main_i + 1) < 100)), par{main_i -> (main_i + 1)}>
<l11, l14, (main_l < main_b), par{main_m -> ((((main_i + main_j) + main_k) + main_l) + 1000)}>
<l11, l11, not((main_l < main_b)) /\ ((main_k - 1) >= 0), par{main_k -> (main_k - 1), main_l -> 0, main_b -> (((main_i + main_j) + (main_k - 1)) + 4)}>
<l11, l5, not((main_l < main_b)) /\ not(((main_k - 1) >= 0)), par{main_j -> (main_j + 1), main_k -> (main_k - 1)}>
<l14, l14, (main_m >= 0), par{main_m -> (main_m - 0)}>
<l14, l11, not((main_m >= 0)), par{main_l -> (main_l + 1)}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
26, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l5, l11, 1 + main_j <= main_a /\ 0 <= 3 + main_i + main_j, {main_k -> 3 + main_i + main_j, main_l -> 0, main_b -> 7 + 2*main_i + 2*main_j, rest remain the same}>
<l5, l5, 4 + main_i + main_j <= 0 /\ 1 + main_j <= main_a, {main_j -> 1 + main_j, main_k -> 3 + main_i + main_j, rest remain the same}>
<l5, l5, main_a <= main_j /\ main_i <= 98, {main_i -> 1 + main_i, main_j -> 0, main_a -> 3 + main_i, rest remain the same}>
<l11, l14, 1 + main_l <= main_b, {main_m -> 1000 + main_i + main_j + main_k + main_l, rest remain the same}>
<l11, l11, main_b <= main_l /\ 1 <= main_k, {main_k -> -1 + main_k, main_l -> 0, main_b -> 3 + main_i + main_j + main_k, rest remain the same}>
<l11, l5, main_k <= 0 /\ main_b <= main_l, {main_j -> 1 + main_j, main_k -> -1 + main_k, rest remain the same}>
<l14, l14, 0 <= main_m, {all remain the same}>
<l14, l11, 1 + main_m <= 0, {main_l -> 1 + main_l, rest remain the same}>
Variables:
main_i, main_j, main_k, main_a, main_b, main_l, main_m

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l5, main_i = 0, {main_j -> 0, main_a -> 2, rest remain the same}>

Graph 2
<l5, l26, main_a <= main_j /\ 99 <= main_i, {main_i -> 1 + main_i, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 5 , 1 )
( 11 , 1 )
( 14 , 1 )
( 26 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.369715
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l11: main_b <= 4 + main_i + main_j + main_k + 2*main_l[0m
[36mInvariant at l14: 0 <= main_m[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l14, l11, 1 + main_m <= 0, {main_l -> 1 + main_l, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l14, 1 + main_l <= main_b /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_m -> 1000 + main_i + main_j + main_k + main_l, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, main_b <= main_l /\ 1 <= main_k /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_k -> -1 + main_k, main_l -> 0, main_b -> 3 + main_i + main_j + main_k, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l5, main_k <= 0 /\ main_b <= main_l /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_j -> 1 + main_j, main_k -> -1 + main_k, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 0 <= main_m, {all remain the same}>
Checking unfeasibility...
Time used: 0.04372
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l5: 1 + main_i <= main_j + main_a[0m
[36mInvariant at l11: 1 + main_l <= main_b[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l11, l11, main_b <= main_l /\ 1 <= main_k /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_k -> -1 + main_k, main_l -> 0, main_b -> 3 + main_i + main_j + main_k, rest remain the same}>
> It's unfeasible. Removing transition: 
<l11, l5, main_k <= 0 /\ main_b <= main_l /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_j -> 1 + main_j, main_k -> -1 + main_k, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l11, 1 + main_i <= main_j + main_a /\ 1 + main_j <= main_a /\ 0 <= 3 + main_i + main_j, {main_k -> 3 + main_i + main_j, main_l -> 0, main_b -> 7 + 2*main_i + 2*main_j, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, 4 + main_i + main_j <= 0 /\ 1 + main_i <= main_j + main_a /\ 1 + main_j <= main_a, {main_j -> 1 + main_j, main_k -> 3 + main_i + main_j, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, main_a <= main_j /\ 1 + main_i <= main_j + main_a /\ main_i <= 98, {main_i -> 1 + main_i, main_j -> 0, main_a -> 3 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l14, 1 + main_l <= main_b /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_m -> 1000 + main_i + main_j + main_k + main_l, rest remain the same}>
Checking unfeasibility...
Time used: 0.137675
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l5: main_a <= 2 + main_i[0m
[36mInvariant at l11: main_l <= 1 + main_a + main_b[0m
[36mInvariant at l14: main_l <= 1 + main_a + main_b[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l5, l5, 4 + main_i + main_j <= 0 /\ 1 + main_i <= main_j + main_a /\ 1 + main_j <= main_a, {main_j -> 1 + main_j, main_k -> 3 + main_i + main_j, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l11, 1 + main_i <= main_j + main_a /\ 1 + main_j <= main_a /\ 0 <= 3 + main_i + main_j /\ main_a <= 2 + main_i, {main_k -> 3 + main_i + main_j, main_l -> 0, main_b -> 7 + 2*main_i + 2*main_j, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, main_a <= main_j /\ 1 + main_i <= main_j + main_a /\ main_i <= 98 /\ main_a <= 2 + main_i, {main_i -> 1 + main_i, main_j -> 0, main_a -> 3 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l14, 1 + main_l <= main_b /\ main_l <= 1 + main_a + main_b /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_m -> 1000 + main_i + main_j + main_k + main_l, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 0 <= main_m /\ main_l <= 1 + main_a + main_b, {all remain the same}>
Checking unfeasibility...
Time used: 0.01886
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l5: 1 + main_j <= main_a[0m
[36mInvariant at l14: 1 <= main_m[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l5, l5, main_a <= main_j /\ 1 + main_i <= main_j + main_a /\ main_i <= 98 /\ main_a <= 2 + main_i, {main_i -> 1 + main_i, main_j -> 0, main_a -> 3 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l11, 1 + main_i <= main_j + main_a /\ 1 + main_j <= main_a /\ 0 <= 3 + main_i + main_j /\ main_a <= 2 + main_i, {main_k -> 3 + main_i + main_j, main_l -> 0, main_b -> 7 + 2*main_i + 2*main_j, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 <= main_m /\ main_l <= 1 + main_a + main_b, {all remain the same}>
Checking unfeasibility...
Time used: 4.10048

Analyzing SCC {l5}...
No cycles found.

Proving termination of subgraph 4
Analyzing SCC {l11}...
No cycles found.

Proving termination of subgraph 5
Checking unfeasibility...
Time used: 0.002251

> No variable changes in termination graph.
Checking conditional unfeasibility...
Calling Safety with literal 1 + main_m <= 0 and entry <l14, l14, true, {all remain the same}>

LOG: CALL check - Post:1 + main_m <= 0 - Process 1
* Exit transition: <l14, l14, true, {all remain the same}>
* Postcondition  : 1 + main_m <= 0
Postcodition moved up: 1 + main_m <= 0

LOG: Try proving POST

LOG: CALL check - Post:1 + main_m <= 0 - Process 2
* Exit transition: <l11, l14, 1 + main_l <= main_b /\ main_l <= 1 + main_a + main_b /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_m -> 1000 + main_i + main_j + main_k + main_l, rest remain the same}>
* Postcondition  : 1 + main_m <= 0
Postcodition moved up: 1001 + main_i + main_j + main_k + main_l <= 0

LOG: Try proving POST

LOG: CALL check - Post:1001 + main_i + main_j + main_k + main_l <= 0 - Process 3
* Exit transition: <l5, l11, 1 + main_i <= main_j + main_a /\ 1 + main_j <= main_a /\ 0 <= 3 + main_i + main_j /\ main_a <= 2 + main_i, {main_k -> 3 + main_i + main_j, main_l -> 0, main_b -> 7 + 2*main_i + 2*main_j, rest remain the same}>
* Postcondition  : 1001 + main_i + main_j + main_k + main_l <= 0
Postcodition moved up: 502 + main_i + main_j <= 0

LOG: Try proving POST

LOG: CALL check - Post:502 + main_i + main_j <= 0 - Process 4
* Exit transition: <l0, l5, main_i = 0, {main_j -> 0, main_a -> 2, rest remain the same}>
* Postcondition  : 502 + main_i + main_j <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000193s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000223s

LOG: NarrowEntry size 1
ENTRIES:
<l0, l5, main_i = 0, {main_j -> 0, main_a -> 2, rest remain the same}>
END ENTRIES:
GRAPH:
END GRAPH:
EXIT: <l5, l11, 1 + main_i <= main_j + main_a /\ 1 + main_j <= main_a /\ 0 <= 3 + main_i + main_j /\ main_a <= 2 + main_i, {main_k -> 3 + main_i + main_j, main_l -> 0, main_b -> 7 + 2*main_i + 2*main_j, rest remain the same}>
POST: 1001 + main_i + main_j + main_k + main_l <= 0


LOG: Try proving POST
[10755 : 10757]
[10755 : 10758]

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.045509s

LOG: NarrowEntry size 1
ENTRIES:
<l5, l11, 1 + main_i <= main_j + main_a /\ 1 + main_j <= main_a /\ 0 <= 3 + main_i + main_j /\ main_a <= 2 + main_i, {main_k -> 3 + main_i + main_j, main_l -> 0, main_b -> 7 + 2*main_i + 2*main_j, rest remain the same}>
END ENTRIES:
GRAPH:
END GRAPH:
EXIT: <l11, l14, 1 + main_l <= main_b /\ main_l <= 1 + main_a + main_b /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_m -> 1000 + main_i + main_j + main_k + main_l, rest remain the same}>
POST: 1 + main_m <= 0


LOG: Try proving POST
[10755 : 10759]
[10755 : 10760]
[10755 : 10761]

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 4.156772s

LOG: NarrowEntry size 1
Narrowing transition: 
<l14, l14, 1 <= main_m /\ main_l <= 1 + main_a + main_b, {all remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l11, l14, 1 + main_l <= main_b /\ main_l <= 1 + main_a + main_b /\ 0 <= 1000 + main_i + main_j + main_k + main_l /\ main_b <= 4 + main_i + main_j + main_k + 2*main_l, {main_m -> 1000 + main_i + main_j + main_k + main_l, rest remain the same}>
END ENTRIES:
GRAPH:
<l14, l14, 1 <= main_m /\ main_l <= 1 + main_a + main_b, {all remain the same}>
END GRAPH:
EXIT: <l14, l14, true, {all remain the same}>
POST: 1 + main_m <= 0


LOG: Try proving POST
[10755 : 10762]
[10755 : 10763]
[10755 : 10764]

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 8.273406s

[10755 : 10925]
[10755 : 10929]
Successful child: 10925

[32mProgram does NOT terminate[0m
