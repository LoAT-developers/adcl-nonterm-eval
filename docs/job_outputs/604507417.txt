NO

Initial ITS

Start location: l12
Program variables: __disjvr_0^0 __disjvr_1^0 __disjvr_2^0 nondet_7^0 nondet_8^0 result_6^0 temp5_9^0 temp6_11^0 x_10^0
   0: l0 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, nondet_7^0'=nondet_7^post1, nondet_8^0'=nondet_8^post1, result_6^0'=result_6^post1, temp5_9^0'=temp5_9^post1, temp6_11^0'=temp6_11^post1, x_10^0'=x_10^post1, (0 == 0 /\ x_10^post1-temp6_11^post1 == 0 /\ -temp5_9^post1+temp5_9^0 == 0 /\ -__disjvr_2^post1+__disjvr_2^0 == 0 /\ -nondet_7^post1+temp6_11^post1 == 0 /\ -result_6^post1+result_6^0 == 0 /\ __disjvr_1^0-__disjvr_1^post1 == 0 /\ nondet_8^0-nondet_8^post1 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0), cost: 1
  10: l1 -> l3 : __disjvr_0^0'=__disjvr_0^post11, __disjvr_1^0'=__disjvr_1^post11, __disjvr_2^0'=__disjvr_2^post11, nondet_7^0'=nondet_7^post11, nondet_8^0'=nondet_8^post11, result_6^0'=result_6^post11, temp5_9^0'=temp5_9^post11, temp6_11^0'=temp6_11^post11, x_10^0'=x_10^post11, (0 == 0 /\ -temp6_11^post11+temp6_11^0 == 0 /\ -nondet_8^post11+temp5_9^post11 == 0 /\ nondet_7^0-nondet_7^post11 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -temp5_9^post11 <= 0 /\ x_10^0-x_10^post11 == 0 /\ __disjvr_2^0-__disjvr_2^post11 == 0 /\ temp5_9^post11 <= 0), cost: 1
  11: l1 -> l10 : __disjvr_0^0'=__disjvr_0^post12, __disjvr_1^0'=__disjvr_1^post12, __disjvr_2^0'=__disjvr_2^post12, nondet_7^0'=nondet_7^post12, nondet_8^0'=nondet_8^post12, result_6^0'=result_6^post12, temp5_9^0'=temp5_9^post12, temp6_11^0'=temp6_11^post12, x_10^0'=x_10^post12, (0 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ temp5_9^post12-nondet_8^post12 == 0 /\ -temp6_11^post12+temp6_11^0 == 0 /\ x_10^0-x_10^post12 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ -result_6^post12+result_6^0 == 0 /\ nondet_7^0-nondet_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0), cost: 1
   1: l2 -> l3 : __disjvr_0^0'=__disjvr_0^post2, __disjvr_1^0'=__disjvr_1^post2, __disjvr_2^0'=__disjvr_2^post2, nondet_7^0'=nondet_7^post2, nondet_8^0'=nondet_8^post2, result_6^0'=result_6^post2, temp5_9^0'=temp5_9^post2, temp6_11^0'=temp6_11^post2, x_10^0'=x_10^post2, (0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ temp5_9^post2 <= 0 /\ __disjvr_2^0-__disjvr_2^post2 == 0 /\ -temp5_9^post2 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -temp6_11^post2+temp6_11^0 == 0 /\ temp5_9^post2-nondet_8^post2 == 0 /\ x_10^0-x_10^post2 == 0 /\ -nondet_7^post2+nondet_7^0 == 0), cost: 1
   2: l2 -> l5 : __disjvr_0^0'=__disjvr_0^post3, __disjvr_1^0'=__disjvr_1^post3, __disjvr_2^0'=__disjvr_2^post3, nondet_7^0'=nondet_7^post3, nondet_8^0'=nondet_8^post3, result_6^0'=result_6^post3, temp5_9^0'=temp5_9^post3, temp6_11^0'=temp6_11^post3, x_10^0'=x_10^post3, (0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ x_10^0-x_10^post3 == 0 /\ -__disjvr_1^post3+__disjvr_1^0 == 0 /\ -temp6_11^post3+temp6_11^0 == 0 /\ result_6^0-result_6^post3 == 0 /\ -nondet_8^post3+temp5_9^post3 == 0 /\ -nondet_7^post3+nondet_7^0 == 0 /\ __disjvr_2^0-__disjvr_2^post3 == 0), cost: 1
   3: l5 -> l6 : __disjvr_0^0'=__disjvr_0^post4, __disjvr_1^0'=__disjvr_1^post4, __disjvr_2^0'=__disjvr_2^post4, nondet_7^0'=nondet_7^post4, nondet_8^0'=nondet_8^post4, result_6^0'=result_6^post4, temp5_9^0'=temp5_9^post4, temp6_11^0'=temp6_11^post4, x_10^0'=x_10^post4, (-__disjvr_0^0+__disjvr_0^post4 == 0 /\ nondet_7^0-nondet_7^post4 == 0 /\ -result_6^post4+result_6^0 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ nondet_8^0-nondet_8^post4 == 0 /\ __disjvr_2^0-__disjvr_2^post4 == 0 /\ x_10^0-x_10^post4 == 0 /\ -__disjvr_1^post4+__disjvr_1^0 == 0 /\ temp5_9^0-temp5_9^post4 == 0 /\ -temp6_11^post4+temp6_11^0 == 0), cost: 1
   4: l6 -> l4 : __disjvr_0^0'=__disjvr_0^post5, __disjvr_1^0'=__disjvr_1^post5, __disjvr_2^0'=__disjvr_2^post5, nondet_7^0'=nondet_7^post5, nondet_8^0'=nondet_8^post5, result_6^0'=result_6^post5, temp5_9^0'=temp5_9^post5, temp6_11^0'=temp6_11^post5, x_10^0'=x_10^post5, (-nondet_8^post5+nondet_8^0 == 0 /\ 1-x_10^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -temp6_11^post5+temp6_11^0 == 0 /\ -__disjvr_2^post5+__disjvr_2^0 == 0 /\ -result_6^post5+result_6^0 == 0 /\ nondet_7^0-nondet_7^post5 == 0 /\ temp5_9^0-temp5_9^post5 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0 /\ -1-x_10^0+x_10^post5 == 0), cost: 1
   5: l4 -> l3 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, nondet_7^0'=nondet_7^post6, nondet_8^0'=nondet_8^post6, result_6^0'=result_6^post6, temp5_9^0'=temp5_9^post6, temp6_11^0'=temp6_11^post6, x_10^0'=x_10^post6, (0 == 0 /\ -__disjvr_1^post6+__disjvr_1^0 == 0 /\ -temp6_11^post6+temp6_11^0 == 0 /\ nondet_7^0-nondet_7^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post6 == 0 /\ -temp5_9^post6 <= 0 /\ __disjvr_2^0-__disjvr_2^post6 == 0 /\ temp5_9^post6 <= 0 /\ -nondet_8^post6+temp5_9^post6 == 0 /\ x_10^0-x_10^post6 == 0), cost: 1
   6: l4 -> l8 : __disjvr_0^0'=__disjvr_0^post7, __disjvr_1^0'=__disjvr_1^post7, __disjvr_2^0'=__disjvr_2^post7, nondet_7^0'=nondet_7^post7, nondet_8^0'=nondet_8^post7, result_6^0'=result_6^post7, temp5_9^0'=temp5_9^post7, temp6_11^0'=temp6_11^post7, x_10^0'=x_10^post7, (0 == 0 /\ -result_6^post7+result_6^0 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ nondet_7^0-nondet_7^post7 == 0), cost: 1
   7: l8 -> l9 : __disjvr_0^0'=__disjvr_0^post8, __disjvr_1^0'=__disjvr_1^post8, __disjvr_2^0'=__disjvr_2^post8, nondet_7^0'=nondet_7^post8, nondet_8^0'=nondet_8^post8, result_6^0'=result_6^post8, temp5_9^0'=temp5_9^post8, temp6_11^0'=temp6_11^post8, x_10^0'=x_10^post8, (-temp5_9^post8+temp5_9^0 == 0 /\ nondet_7^0-nondet_7^post8 == 0 /\ x_10^0-x_10^post8 == 0 /\ -result_6^post8+result_6^0 == 0 /\ -__disjvr_2^post8+__disjvr_2^0 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0 /\ -__disjvr_1^0+__disjvr_1^post8 == 0 /\ nondet_8^0-nondet_8^post8 == 0 /\ __disjvr_1^0-__disjvr_1^post8 == 0 /\ temp6_11^0-temp6_11^post8 == 0), cost: 1
   8: l9 -> l7 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, nondet_7^0'=nondet_7^post9, nondet_8^0'=nondet_8^post9, result_6^0'=result_6^post9, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^post9, x_10^0'=x_10^post9, (__disjvr_0^0-__disjvr_0^post9 == 0 /\ 1-x_10^0 <= 0 /\ __disjvr_2^0-__disjvr_2^post9 == 0 /\ -__disjvr_1^post9+__disjvr_1^0 == 0 /\ -nondet_7^post9+nondet_7^0 == 0 /\ result_6^0-result_6^post9 == 0 /\ -1-x_10^0+x_10^post9 == 0 /\ -temp6_11^post9+temp6_11^0 == 0 /\ nondet_8^0-nondet_8^post9 == 0 /\ -temp5_9^post9+temp5_9^0 == 0), cost: 1
   9: l7 -> l4 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, nondet_7^0'=nondet_7^post10, nondet_8^0'=nondet_8^post10, result_6^0'=result_6^post10, temp5_9^0'=temp5_9^post10, temp6_11^0'=temp6_11^post10, x_10^0'=x_10^post10, (nondet_7^0-nondet_7^post10 == 0 /\ -result_6^post10+result_6^0 == 0 /\ -__disjvr_0^post10+__disjvr_0^0 == 0 /\ nondet_8^0-nondet_8^post10 == 0 /\ x_10^0-x_10^post10 == 0 /\ -__disjvr_1^post10+__disjvr_1^0 == 0 /\ -temp6_11^post10+temp6_11^0 == 0 /\ temp5_9^0-temp5_9^post10 == 0 /\ __disjvr_2^0-__disjvr_2^post10 == 0), cost: 1
  12: l10 -> l11 : __disjvr_0^0'=__disjvr_0^post13, __disjvr_1^0'=__disjvr_1^post13, __disjvr_2^0'=__disjvr_2^post13, nondet_7^0'=nondet_7^post13, nondet_8^0'=nondet_8^post13, result_6^0'=result_6^post13, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^post13, x_10^0'=x_10^post13, (-temp5_9^post13+temp5_9^0 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ -nondet_8^post13+nondet_8^0 == 0 /\ __disjvr_2^post13-__disjvr_2^0 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ -result_6^post13+result_6^0 == 0 /\ temp6_11^0-temp6_11^post13 == 0 /\ nondet_7^0-nondet_7^post13 == 0 /\ x_10^0-x_10^post13 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0), cost: 1
  13: l11 -> l4 : __disjvr_0^0'=__disjvr_0^post14, __disjvr_1^0'=__disjvr_1^post14, __disjvr_2^0'=__disjvr_2^post14, nondet_7^0'=nondet_7^post14, nondet_8^0'=nondet_8^post14, result_6^0'=result_6^post14, temp5_9^0'=temp5_9^post14, temp6_11^0'=temp6_11^post14, x_10^0'=x_10^post14, (-__disjvr_2^post14+__disjvr_2^0 == 0 /\ 1-x_10^0 <= 0 /\ temp6_11^0-temp6_11^post14 == 0 /\ -temp5_9^post14+temp5_9^0 == 0 /\ nondet_8^0-nondet_8^post14 == 0 /\ -1-x_10^0+x_10^post14 == 0 /\ __disjvr_0^0-__disjvr_0^post14 == 0 /\ nondet_7^0-nondet_7^post14 == 0 /\ -result_6^post14+result_6^0 == 0 /\ __disjvr_1^0-__disjvr_1^post14 == 0), cost: 1
  14: l12 -> l0 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, nondet_7^0'=nondet_7^post15, nondet_8^0'=nondet_8^post15, result_6^0'=result_6^post15, temp5_9^0'=temp5_9^post15, temp6_11^0'=temp6_11^post15, x_10^0'=x_10^post15, (-result_6^post15+result_6^0 == 0 /\ nondet_8^0-nondet_8^post15 == 0 /\ __disjvr_0^0-__disjvr_0^post15 == 0 /\ -nondet_7^post15+nondet_7^0 == 0 /\ -__disjvr_2^post15+__disjvr_2^0 == 0 /\ -__disjvr_1^post15+__disjvr_1^0 == 0 /\ x_10^0-x_10^post15 == 0 /\ -temp6_11^post15+temp6_11^0 == 0 /\ -temp5_9^post15+temp5_9^0 == 0), cost: 1

Chained Linear Paths

Start location: l12
Program variables: __disjvr_0^0 __disjvr_1^0 __disjvr_2^0 nondet_7^0 nondet_8^0 result_6^0 temp5_9^0 temp6_11^0 x_10^0
  10: l1 -> l3 : __disjvr_0^0'=__disjvr_0^post11, __disjvr_1^0'=__disjvr_1^post11, __disjvr_2^0'=__disjvr_2^post11, nondet_7^0'=nondet_7^post11, nondet_8^0'=nondet_8^post11, result_6^0'=result_6^post11, temp5_9^0'=temp5_9^post11, temp6_11^0'=temp6_11^post11, x_10^0'=x_10^post11, (0 == 0 /\ -temp6_11^post11+temp6_11^0 == 0 /\ -nondet_8^post11+temp5_9^post11 == 0 /\ nondet_7^0-nondet_7^post11 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -temp5_9^post11 <= 0 /\ x_10^0-x_10^post11 == 0 /\ __disjvr_2^0-__disjvr_2^post11 == 0 /\ temp5_9^post11 <= 0), cost: 1
  17: l1 -> l4 : __disjvr_0^0'=__disjvr_0^post14, __disjvr_1^0'=__disjvr_1^post14, __disjvr_2^0'=__disjvr_2^post14, nondet_7^0'=nondet_7^post14, nondet_8^0'=nondet_8^post14, result_6^0'=result_6^post14, temp5_9^0'=temp5_9^post14, temp6_11^0'=temp6_11^post14, x_10^0'=x_10^post14, (0 == 0 /\ temp5_9^post12-temp5_9^post13 == 0 /\ result_6^post12-result_6^post13 == 0 /\ -__disjvr_2^post14+__disjvr_2^post13 == 0 /\ __disjvr_0^post12-__disjvr_0^post13 == 0 /\ -temp5_9^post14+temp5_9^post13 == 0 /\ -nondet_7^post14+nondet_7^post13 == 0 /\ temp6_11^post12-temp6_11^post13 == 0 /\ __disjvr_1^post12-__disjvr_1^post13 == 0 /\ nondet_7^post12-nondet_7^post13 == 0 /\ -result_6^post14+result_6^post13 == 0 /\ 1-x_10^post13 <= 0 /\ __disjvr_2^post12-__disjvr_2^post13 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ temp5_9^post12-nondet_8^post12 == 0 /\ -1+x_10^post14-x_10^post13 == 0 /\ -temp6_11^post12+temp6_11^0 == 0 /\ -temp6_11^post14+temp6_11^post13 == 0 /\ x_10^0-x_10^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^post13 == 0 /\ -x_10^post13+x_10^post12 == 0 /\ -nondet_8^post13+nondet_8^post12 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ -__disjvr_0^post14+__disjvr_0^post13 == 0 /\ -result_6^post12+result_6^0 == 0 /\ nondet_8^post13-nondet_8^post14 == 0 /\ nondet_7^0-nondet_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0), cost: 1
   1: l2 -> l3 : __disjvr_0^0'=__disjvr_0^post2, __disjvr_1^0'=__disjvr_1^post2, __disjvr_2^0'=__disjvr_2^post2, nondet_7^0'=nondet_7^post2, nondet_8^0'=nondet_8^post2, result_6^0'=result_6^post2, temp5_9^0'=temp5_9^post2, temp6_11^0'=temp6_11^post2, x_10^0'=x_10^post2, (0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ temp5_9^post2 <= 0 /\ __disjvr_2^0-__disjvr_2^post2 == 0 /\ -temp5_9^post2 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -temp6_11^post2+temp6_11^0 == 0 /\ temp5_9^post2-nondet_8^post2 == 0 /\ x_10^0-x_10^post2 == 0 /\ -nondet_7^post2+nondet_7^0 == 0), cost: 1
   2: l2 -> l5 : __disjvr_0^0'=__disjvr_0^post3, __disjvr_1^0'=__disjvr_1^post3, __disjvr_2^0'=__disjvr_2^post3, nondet_7^0'=nondet_7^post3, nondet_8^0'=nondet_8^post3, result_6^0'=result_6^post3, temp5_9^0'=temp5_9^post3, temp6_11^0'=temp6_11^post3, x_10^0'=x_10^post3, (0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ x_10^0-x_10^post3 == 0 /\ -__disjvr_1^post3+__disjvr_1^0 == 0 /\ -temp6_11^post3+temp6_11^0 == 0 /\ result_6^0-result_6^post3 == 0 /\ -nondet_8^post3+temp5_9^post3 == 0 /\ -nondet_7^post3+nondet_7^0 == 0 /\ __disjvr_2^0-__disjvr_2^post3 == 0), cost: 1
   3: l5 -> l6 : __disjvr_0^0'=__disjvr_0^post4, __disjvr_1^0'=__disjvr_1^post4, __disjvr_2^0'=__disjvr_2^post4, nondet_7^0'=nondet_7^post4, nondet_8^0'=nondet_8^post4, result_6^0'=result_6^post4, temp5_9^0'=temp5_9^post4, temp6_11^0'=temp6_11^post4, x_10^0'=x_10^post4, (-__disjvr_0^0+__disjvr_0^post4 == 0 /\ nondet_7^0-nondet_7^post4 == 0 /\ -result_6^post4+result_6^0 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ nondet_8^0-nondet_8^post4 == 0 /\ __disjvr_2^0-__disjvr_2^post4 == 0 /\ x_10^0-x_10^post4 == 0 /\ -__disjvr_1^post4+__disjvr_1^0 == 0 /\ temp5_9^0-temp5_9^post4 == 0 /\ -temp6_11^post4+temp6_11^0 == 0), cost: 1
   4: l6 -> l4 : __disjvr_0^0'=__disjvr_0^post5, __disjvr_1^0'=__disjvr_1^post5, __disjvr_2^0'=__disjvr_2^post5, nondet_7^0'=nondet_7^post5, nondet_8^0'=nondet_8^post5, result_6^0'=result_6^post5, temp5_9^0'=temp5_9^post5, temp6_11^0'=temp6_11^post5, x_10^0'=x_10^post5, (-nondet_8^post5+nondet_8^0 == 0 /\ 1-x_10^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -temp6_11^post5+temp6_11^0 == 0 /\ -__disjvr_2^post5+__disjvr_2^0 == 0 /\ -result_6^post5+result_6^0 == 0 /\ nondet_7^0-nondet_7^post5 == 0 /\ temp5_9^0-temp5_9^post5 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0 /\ -1-x_10^0+x_10^post5 == 0), cost: 1
   5: l4 -> l3 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, nondet_7^0'=nondet_7^post6, nondet_8^0'=nondet_8^post6, result_6^0'=result_6^post6, temp5_9^0'=temp5_9^post6, temp6_11^0'=temp6_11^post6, x_10^0'=x_10^post6, (0 == 0 /\ -__disjvr_1^post6+__disjvr_1^0 == 0 /\ -temp6_11^post6+temp6_11^0 == 0 /\ nondet_7^0-nondet_7^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post6 == 0 /\ -temp5_9^post6 <= 0 /\ __disjvr_2^0-__disjvr_2^post6 == 0 /\ temp5_9^post6 <= 0 /\ -nondet_8^post6+temp5_9^post6 == 0 /\ x_10^0-x_10^post6 == 0), cost: 1
  20: l4 -> l4 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, nondet_7^0'=nondet_7^post10, nondet_8^0'=nondet_8^post10, result_6^0'=result_6^post10, temp5_9^0'=temp5_9^post10, temp6_11^0'=temp6_11^post10, x_10^0'=x_10^post10, (0 == 0 /\ -__disjvr_2^post8+__disjvr_2^post7 == 0 /\ 1-x_10^post8 <= 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ -__disjvr_2^post10+__disjvr_2^post9 == 0 /\ nondet_7^post9-nondet_7^post10 == 0 /\ -temp6_11^post8+temp6_11^post7 == 0 /\ -__disjvr_1^post10+__disjvr_1^post9 == 0 /\ -__disjvr_0^post8+__disjvr_0^post7 == 0 /\ -result_6^post7+result_6^0 == 0 /\ -__disjvr_1^post9+__disjvr_1^post8 == 0 /\ -temp6_11^post10+temp6_11^post9 == 0 /\ -nondet_8^post9+nondet_8^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ -nondet_7^post9+nondet_7^post8 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ result_6^post8-result_6^post9 == 0 /\ temp5_9^post9-temp5_9^post10 == 0 /\ -__disjvr_0^post10+__disjvr_0^post9 == 0 /\ -x_10^post8+x_10^post7 == 0 /\ -temp5_9^post9+temp5_9^post8 == 0 /\ -1-x_10^post8+x_10^post9 == 0 /\ -x_10^post10+x_10^post9 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ -temp6_11^post9+temp6_11^post8 == 0 /\ -nondet_8^post10+nondet_8^post9 == 0 /\ -temp5_9^post8+temp5_9^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -nondet_7^post8+nondet_7^post7 == 0 /\ nondet_8^post7-nondet_8^post8 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -result_6^post10+result_6^post9 == 0 /\ nondet_7^0-nondet_7^post7 == 0 /\ -result_6^post8+result_6^post7 == 0), cost: 1
  15: l12 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, nondet_7^0'=nondet_7^post1, nondet_8^0'=nondet_8^post1, result_6^0'=result_6^post1, temp5_9^0'=temp5_9^post1, temp6_11^0'=temp6_11^post1, x_10^0'=x_10^post1, (0 == 0 /\ -result_6^post15+result_6^0 == 0 /\ result_6^post15-result_6^post1 == 0 /\ temp5_9^post15-temp5_9^post1 == 0 /\ nondet_8^0-nondet_8^post15 == 0 /\ x_10^post1-temp6_11^post1 == 0 /\ __disjvr_0^0-__disjvr_0^post15 == 0 /\ -nondet_7^post15+nondet_7^0 == 0 /\ nondet_8^post15-nondet_8^post1 == 0 /\ __disjvr_2^post15-__disjvr_2^post1 == 0 /\ __disjvr_1^post15-__disjvr_1^post1 == 0 /\ -__disjvr_2^post15+__disjvr_2^0 == 0 /\ -__disjvr_1^post15+__disjvr_1^0 == 0 /\ x_10^0-x_10^post15 == 0 /\ __disjvr_0^post15-__disjvr_0^post1 == 0 /\ -temp6_11^post15+temp6_11^0 == 0 /\ -nondet_7^post1+temp6_11^post1 == 0 /\ -temp5_9^post15+temp5_9^0 == 0), cost: 1

	Eliminating location l0 by chaining:

	Applied chaining

	First rule:
	l12 -> l0 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, nondet_7^0'=nondet_7^post15, nondet_8^0'=nondet_8^post15, result_6^0'=result_6^post15, temp5_9^0'=temp5_9^post15, temp6_11^0'=temp6_11^post15, x_10^0'=x_10^post15, (-result_6^post15+result_6^0 == 0 /\ nondet_8^0-nondet_8^post15 == 0 /\ __disjvr_0^0-__disjvr_0^post15 == 0 /\ -nondet_7^post15+nondet_7^0 == 0 /\ -__disjvr_2^post15+__disjvr_2^0 == 0 /\ -__disjvr_1^post15+__disjvr_1^0 == 0 /\ x_10^0-x_10^post15 == 0 /\ -temp6_11^post15+temp6_11^0 == 0 /\ -temp5_9^post15+temp5_9^0 == 0), cost: 1
	Second rule:
	l0 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, nondet_7^0'=nondet_7^post1, nondet_8^0'=nondet_8^post1, result_6^0'=result_6^post1, temp5_9^0'=temp5_9^post1, temp6_11^0'=temp6_11^post1, x_10^0'=x_10^post1, (0 == 0 /\ x_10^post1-temp6_11^post1 == 0 /\ -temp5_9^post1+temp5_9^0 == 0 /\ -__disjvr_2^post1+__disjvr_2^0 == 0 /\ -nondet_7^post1+temp6_11^post1 == 0 /\ -result_6^post1+result_6^0 == 0 /\ __disjvr_1^0-__disjvr_1^post1 == 0 /\ nondet_8^0-nondet_8^post1 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0), cost: 1
	New rule:
	l12 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, nondet_7^0'=nondet_7^post1, nondet_8^0'=nondet_8^post1, result_6^0'=result_6^post1, temp5_9^0'=temp5_9^post1, temp6_11^0'=temp6_11^post1, x_10^0'=x_10^post1, (0 == 0 /\ -result_6^post15+result_6^0 == 0 /\ result_6^post15-result_6^post1 == 0 /\ temp5_9^post15-temp5_9^post1 == 0 /\ nondet_8^0-nondet_8^post15 == 0 /\ x_10^post1-temp6_11^post1 == 0 /\ __disjvr_0^0-__disjvr_0^post15 == 0 /\ -nondet_7^post15+nondet_7^0 == 0 /\ nondet_8^post15-nondet_8^post1 == 0 /\ __disjvr_2^post15-__disjvr_2^post1 == 0 /\ __disjvr_1^post15-__disjvr_1^post1 == 0 /\ -__disjvr_2^post15+__disjvr_2^0 == 0 /\ -__disjvr_1^post15+__disjvr_1^0 == 0 /\ x_10^0-x_10^post15 == 0 /\ __disjvr_0^post15-__disjvr_0^post1 == 0 /\ -temp6_11^post15+temp6_11^0 == 0 /\ -nondet_7^post1+temp6_11^post1 == 0 /\ -temp5_9^post15+temp5_9^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 14
	
	Eliminating location l10 by chaining:

	Applied chaining

	First rule:
	l1 -> l10 : __disjvr_0^0'=__disjvr_0^post12, __disjvr_1^0'=__disjvr_1^post12, __disjvr_2^0'=__disjvr_2^post12, nondet_7^0'=nondet_7^post12, nondet_8^0'=nondet_8^post12, result_6^0'=result_6^post12, temp5_9^0'=temp5_9^post12, temp6_11^0'=temp6_11^post12, x_10^0'=x_10^post12, (0 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ temp5_9^post12-nondet_8^post12 == 0 /\ -temp6_11^post12+temp6_11^0 == 0 /\ x_10^0-x_10^post12 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ -result_6^post12+result_6^0 == 0 /\ nondet_7^0-nondet_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0), cost: 1
	Second rule:
	l10 -> l11 : __disjvr_0^0'=__disjvr_0^post13, __disjvr_1^0'=__disjvr_1^post13, __disjvr_2^0'=__disjvr_2^post13, nondet_7^0'=nondet_7^post13, nondet_8^0'=nondet_8^post13, result_6^0'=result_6^post13, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^post13, x_10^0'=x_10^post13, (-temp5_9^post13+temp5_9^0 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ -nondet_8^post13+nondet_8^0 == 0 /\ __disjvr_2^post13-__disjvr_2^0 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ -result_6^post13+result_6^0 == 0 /\ temp6_11^0-temp6_11^post13 == 0 /\ nondet_7^0-nondet_7^post13 == 0 /\ x_10^0-x_10^post13 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0), cost: 1
	New rule:
	l1 -> l11 : __disjvr_0^0'=__disjvr_0^post13, __disjvr_1^0'=__disjvr_1^post13, __disjvr_2^0'=__disjvr_2^post13, nondet_7^0'=nondet_7^post13, nondet_8^0'=nondet_8^post13, result_6^0'=result_6^post13, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^post13, x_10^0'=x_10^post13, (0 == 0 /\ temp5_9^post12-temp5_9^post13 == 0 /\ result_6^post12-result_6^post13 == 0 /\ __disjvr_0^post12-__disjvr_0^post13 == 0 /\ temp6_11^post12-temp6_11^post13 == 0 /\ __disjvr_1^post12-__disjvr_1^post13 == 0 /\ nondet_7^post12-nondet_7^post13 == 0 /\ __disjvr_2^post12-__disjvr_2^post13 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ temp5_9^post12-nondet_8^post12 == 0 /\ -temp6_11^post12+temp6_11^0 == 0 /\ x_10^0-x_10^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^post13 == 0 /\ -x_10^post13+x_10^post12 == 0 /\ -nondet_8^post13+nondet_8^post12 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ -result_6^post12+result_6^0 == 0 /\ nondet_7^0-nondet_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 11 12
	
	Eliminating location l11 by chaining:

	Applied chaining

	First rule:
	l1 -> l11 : __disjvr_0^0'=__disjvr_0^post13, __disjvr_1^0'=__disjvr_1^post13, __disjvr_2^0'=__disjvr_2^post13, nondet_7^0'=nondet_7^post13, nondet_8^0'=nondet_8^post13, result_6^0'=result_6^post13, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^post13, x_10^0'=x_10^post13, (0 == 0 /\ temp5_9^post12-temp5_9^post13 == 0 /\ result_6^post12-result_6^post13 == 0 /\ __disjvr_0^post12-__disjvr_0^post13 == 0 /\ temp6_11^post12-temp6_11^post13 == 0 /\ __disjvr_1^post12-__disjvr_1^post13 == 0 /\ nondet_7^post12-nondet_7^post13 == 0 /\ __disjvr_2^post12-__disjvr_2^post13 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ temp5_9^post12-nondet_8^post12 == 0 /\ -temp6_11^post12+temp6_11^0 == 0 /\ x_10^0-x_10^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^post13 == 0 /\ -x_10^post13+x_10^post12 == 0 /\ -nondet_8^post13+nondet_8^post12 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ -result_6^post12+result_6^0 == 0 /\ nondet_7^0-nondet_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0), cost: 1
	Second rule:
	l11 -> l4 : __disjvr_0^0'=__disjvr_0^post14, __disjvr_1^0'=__disjvr_1^post14, __disjvr_2^0'=__disjvr_2^post14, nondet_7^0'=nondet_7^post14, nondet_8^0'=nondet_8^post14, result_6^0'=result_6^post14, temp5_9^0'=temp5_9^post14, temp6_11^0'=temp6_11^post14, x_10^0'=x_10^post14, (-__disjvr_2^post14+__disjvr_2^0 == 0 /\ 1-x_10^0 <= 0 /\ temp6_11^0-temp6_11^post14 == 0 /\ -temp5_9^post14+temp5_9^0 == 0 /\ nondet_8^0-nondet_8^post14 == 0 /\ -1-x_10^0+x_10^post14 == 0 /\ __disjvr_0^0-__disjvr_0^post14 == 0 /\ nondet_7^0-nondet_7^post14 == 0 /\ -result_6^post14+result_6^0 == 0 /\ __disjvr_1^0-__disjvr_1^post14 == 0), cost: 1
	New rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^post14, __disjvr_1^0'=__disjvr_1^post14, __disjvr_2^0'=__disjvr_2^post14, nondet_7^0'=nondet_7^post14, nondet_8^0'=nondet_8^post14, result_6^0'=result_6^post14, temp5_9^0'=temp5_9^post14, temp6_11^0'=temp6_11^post14, x_10^0'=x_10^post14, (0 == 0 /\ temp5_9^post12-temp5_9^post13 == 0 /\ result_6^post12-result_6^post13 == 0 /\ -__disjvr_2^post14+__disjvr_2^post13 == 0 /\ __disjvr_0^post12-__disjvr_0^post13 == 0 /\ -temp5_9^post14+temp5_9^post13 == 0 /\ -nondet_7^post14+nondet_7^post13 == 0 /\ temp6_11^post12-temp6_11^post13 == 0 /\ __disjvr_1^post12-__disjvr_1^post13 == 0 /\ nondet_7^post12-nondet_7^post13 == 0 /\ -result_6^post14+result_6^post13 == 0 /\ 1-x_10^post13 <= 0 /\ __disjvr_2^post12-__disjvr_2^post13 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ temp5_9^post12-nondet_8^post12 == 0 /\ -1+x_10^post14-x_10^post13 == 0 /\ -temp6_11^post12+temp6_11^0 == 0 /\ -temp6_11^post14+temp6_11^post13 == 0 /\ x_10^0-x_10^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^post13 == 0 /\ -x_10^post13+x_10^post12 == 0 /\ -nondet_8^post13+nondet_8^post12 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ -__disjvr_0^post14+__disjvr_0^post13 == 0 /\ -result_6^post12+result_6^0 == 0 /\ nondet_8^post13-nondet_8^post14 == 0 /\ nondet_7^0-nondet_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 13 16
	
	Eliminating location l8 by chaining:

	Applied chaining

	First rule:
	l4 -> l8 : __disjvr_0^0'=__disjvr_0^post7, __disjvr_1^0'=__disjvr_1^post7, __disjvr_2^0'=__disjvr_2^post7, nondet_7^0'=nondet_7^post7, nondet_8^0'=nondet_8^post7, result_6^0'=result_6^post7, temp5_9^0'=temp5_9^post7, temp6_11^0'=temp6_11^post7, x_10^0'=x_10^post7, (0 == 0 /\ -result_6^post7+result_6^0 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ nondet_7^0-nondet_7^post7 == 0), cost: 1
	Second rule:
	l8 -> l9 : __disjvr_0^0'=__disjvr_0^post8, __disjvr_1^0'=__disjvr_1^post8, __disjvr_2^0'=__disjvr_2^post8, nondet_7^0'=nondet_7^post8, nondet_8^0'=nondet_8^post8, result_6^0'=result_6^post8, temp5_9^0'=temp5_9^post8, temp6_11^0'=temp6_11^post8, x_10^0'=x_10^post8, (-temp5_9^post8+temp5_9^0 == 0 /\ nondet_7^0-nondet_7^post8 == 0 /\ x_10^0-x_10^post8 == 0 /\ -result_6^post8+result_6^0 == 0 /\ -__disjvr_2^post8+__disjvr_2^0 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0 /\ -__disjvr_1^0+__disjvr_1^post8 == 0 /\ nondet_8^0-nondet_8^post8 == 0 /\ __disjvr_1^0-__disjvr_1^post8 == 0 /\ temp6_11^0-temp6_11^post8 == 0), cost: 1
	New rule:
	l4 -> l9 : __disjvr_0^0'=__disjvr_0^post8, __disjvr_1^0'=__disjvr_1^post8, __disjvr_2^0'=__disjvr_2^post8, nondet_7^0'=nondet_7^post8, nondet_8^0'=nondet_8^post8, result_6^0'=result_6^post8, temp5_9^0'=temp5_9^post8, temp6_11^0'=temp6_11^post8, x_10^0'=x_10^post8, (0 == 0 /\ -__disjvr_2^post8+__disjvr_2^post7 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ -temp6_11^post8+temp6_11^post7 == 0 /\ -__disjvr_0^post8+__disjvr_0^post7 == 0 /\ -result_6^post7+result_6^0 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ -x_10^post8+x_10^post7 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ -temp5_9^post8+temp5_9^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -nondet_7^post8+nondet_7^post7 == 0 /\ nondet_8^post7-nondet_8^post8 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ nondet_7^0-nondet_7^post7 == 0 /\ -result_6^post8+result_6^post7 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location l9 by chaining:

	Applied chaining

	First rule:
	l4 -> l9 : __disjvr_0^0'=__disjvr_0^post8, __disjvr_1^0'=__disjvr_1^post8, __disjvr_2^0'=__disjvr_2^post8, nondet_7^0'=nondet_7^post8, nondet_8^0'=nondet_8^post8, result_6^0'=result_6^post8, temp5_9^0'=temp5_9^post8, temp6_11^0'=temp6_11^post8, x_10^0'=x_10^post8, (0 == 0 /\ -__disjvr_2^post8+__disjvr_2^post7 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ -temp6_11^post8+temp6_11^post7 == 0 /\ -__disjvr_0^post8+__disjvr_0^post7 == 0 /\ -result_6^post7+result_6^0 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ -x_10^post8+x_10^post7 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ -temp5_9^post8+temp5_9^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -nondet_7^post8+nondet_7^post7 == 0 /\ nondet_8^post7-nondet_8^post8 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ nondet_7^0-nondet_7^post7 == 0 /\ -result_6^post8+result_6^post7 == 0), cost: 1
	Second rule:
	l9 -> l7 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, nondet_7^0'=nondet_7^post9, nondet_8^0'=nondet_8^post9, result_6^0'=result_6^post9, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^post9, x_10^0'=x_10^post9, (__disjvr_0^0-__disjvr_0^post9 == 0 /\ 1-x_10^0 <= 0 /\ __disjvr_2^0-__disjvr_2^post9 == 0 /\ -__disjvr_1^post9+__disjvr_1^0 == 0 /\ -nondet_7^post9+nondet_7^0 == 0 /\ result_6^0-result_6^post9 == 0 /\ -1-x_10^0+x_10^post9 == 0 /\ -temp6_11^post9+temp6_11^0 == 0 /\ nondet_8^0-nondet_8^post9 == 0 /\ -temp5_9^post9+temp5_9^0 == 0), cost: 1
	New rule:
	l4 -> l7 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, nondet_7^0'=nondet_7^post9, nondet_8^0'=nondet_8^post9, result_6^0'=result_6^post9, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^post9, x_10^0'=x_10^post9, (0 == 0 /\ -__disjvr_2^post8+__disjvr_2^post7 == 0 /\ 1-x_10^post8 <= 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ -temp6_11^post8+temp6_11^post7 == 0 /\ -__disjvr_0^post8+__disjvr_0^post7 == 0 /\ -result_6^post7+result_6^0 == 0 /\ -__disjvr_1^post9+__disjvr_1^post8 == 0 /\ -nondet_8^post9+nondet_8^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ -nondet_7^post9+nondet_7^post8 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ result_6^post8-result_6^post9 == 0 /\ -x_10^post8+x_10^post7 == 0 /\ -temp5_9^post9+temp5_9^post8 == 0 /\ -1-x_10^post8+x_10^post9 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ -temp6_11^post9+temp6_11^post8 == 0 /\ -temp5_9^post8+temp5_9^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -nondet_7^post8+nondet_7^post7 == 0 /\ nondet_8^post7-nondet_8^post8 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ nondet_7^0-nondet_7^post7 == 0 /\ -result_6^post8+result_6^post7 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 8 18
	
	Eliminating location l7 by chaining:

	Applied chaining

	First rule:
	l4 -> l7 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, nondet_7^0'=nondet_7^post9, nondet_8^0'=nondet_8^post9, result_6^0'=result_6^post9, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^post9, x_10^0'=x_10^post9, (0 == 0 /\ -__disjvr_2^post8+__disjvr_2^post7 == 0 /\ 1-x_10^post8 <= 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ -temp6_11^post8+temp6_11^post7 == 0 /\ -__disjvr_0^post8+__disjvr_0^post7 == 0 /\ -result_6^post7+result_6^0 == 0 /\ -__disjvr_1^post9+__disjvr_1^post8 == 0 /\ -nondet_8^post9+nondet_8^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ -nondet_7^post9+nondet_7^post8 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ result_6^post8-result_6^post9 == 0 /\ -x_10^post8+x_10^post7 == 0 /\ -temp5_9^post9+temp5_9^post8 == 0 /\ -1-x_10^post8+x_10^post9 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ -temp6_11^post9+temp6_11^post8 == 0 /\ -temp5_9^post8+temp5_9^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -nondet_7^post8+nondet_7^post7 == 0 /\ nondet_8^post7-nondet_8^post8 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ nondet_7^0-nondet_7^post7 == 0 /\ -result_6^post8+result_6^post7 == 0), cost: 1
	Second rule:
	l7 -> l4 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, nondet_7^0'=nondet_7^post10, nondet_8^0'=nondet_8^post10, result_6^0'=result_6^post10, temp5_9^0'=temp5_9^post10, temp6_11^0'=temp6_11^post10, x_10^0'=x_10^post10, (nondet_7^0-nondet_7^post10 == 0 /\ -result_6^post10+result_6^0 == 0 /\ -__disjvr_0^post10+__disjvr_0^0 == 0 /\ nondet_8^0-nondet_8^post10 == 0 /\ x_10^0-x_10^post10 == 0 /\ -__disjvr_1^post10+__disjvr_1^0 == 0 /\ -temp6_11^post10+temp6_11^0 == 0 /\ temp5_9^0-temp5_9^post10 == 0 /\ __disjvr_2^0-__disjvr_2^post10 == 0), cost: 1
	New rule:
	l4 -> l4 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, nondet_7^0'=nondet_7^post10, nondet_8^0'=nondet_8^post10, result_6^0'=result_6^post10, temp5_9^0'=temp5_9^post10, temp6_11^0'=temp6_11^post10, x_10^0'=x_10^post10, (0 == 0 /\ -__disjvr_2^post8+__disjvr_2^post7 == 0 /\ 1-x_10^post8 <= 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ -__disjvr_2^post10+__disjvr_2^post9 == 0 /\ nondet_7^post9-nondet_7^post10 == 0 /\ -temp6_11^post8+temp6_11^post7 == 0 /\ -__disjvr_1^post10+__disjvr_1^post9 == 0 /\ -__disjvr_0^post8+__disjvr_0^post7 == 0 /\ -result_6^post7+result_6^0 == 0 /\ -__disjvr_1^post9+__disjvr_1^post8 == 0 /\ -temp6_11^post10+temp6_11^post9 == 0 /\ -nondet_8^post9+nondet_8^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ -nondet_7^post9+nondet_7^post8 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ result_6^post8-result_6^post9 == 0 /\ temp5_9^post9-temp5_9^post10 == 0 /\ -__disjvr_0^post10+__disjvr_0^post9 == 0 /\ -x_10^post8+x_10^post7 == 0 /\ -temp5_9^post9+temp5_9^post8 == 0 /\ -1-x_10^post8+x_10^post9 == 0 /\ -x_10^post10+x_10^post9 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ -temp6_11^post9+temp6_11^post8 == 0 /\ -nondet_8^post10+nondet_8^post9 == 0 /\ -temp5_9^post8+temp5_9^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -nondet_7^post8+nondet_7^post7 == 0 /\ nondet_8^post7-nondet_8^post8 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -result_6^post10+result_6^post9 == 0 /\ nondet_7^0-nondet_7^post7 == 0 /\ -result_6^post8+result_6^post7 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 9 19

Simplified Transitions

Start location: l12
Program variables: nondet_7^0 nondet_8^0 result_6^0 temp5_9^0 temp6_11^0 x_10^0
  26: l1 -> l3 : nondet_8^0'=0, result_6^0'=result_6^post11, temp5_9^0'=0, T, cost: 1
  28: l1 -> l4 : nondet_8^0'=temp5_9^post13, temp5_9^0'=temp5_9^post13, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
  21: l2 -> l3 : nondet_8^0'=0, result_6^0'=result_6^post2, temp5_9^0'=0, T, cost: 1
  22: l2 -> l5 : nondet_8^0'=temp5_9^post3, temp5_9^0'=temp5_9^post3, T, cost: 1
  23: l5 -> l6 : T, cost: 1
  24: l6 -> l4 : x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
  25: l4 -> l3 : nondet_8^0'=0, result_6^0'=result_6^post6, temp5_9^0'=0, T, cost: 1
  29: l4 -> l4 : nondet_8^0'=temp5_9^post9, temp5_9^0'=temp5_9^post9, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
  27: l12 -> l1 : nondet_7^0'=x_10^post1, temp6_11^0'=x_10^post1, x_10^0'=x_10^post1, T, cost: 1

	made implied equalities explicit

	Original rule:
	l2 -> l3 : __disjvr_0^0'=__disjvr_0^post2, __disjvr_1^0'=__disjvr_1^post2, __disjvr_2^0'=__disjvr_2^post2, nondet_7^0'=nondet_7^post2, nondet_8^0'=nondet_8^post2, result_6^0'=result_6^post2, temp5_9^0'=temp5_9^post2, temp6_11^0'=temp6_11^post2, x_10^0'=x_10^post2, (0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ temp5_9^post2 <= 0 /\ __disjvr_2^0-__disjvr_2^post2 == 0 /\ -temp5_9^post2 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -temp6_11^post2+temp6_11^0 == 0 /\ temp5_9^post2-nondet_8^post2 == 0 /\ x_10^0-x_10^post2 == 0 /\ -nondet_7^post2+nondet_7^0 == 0), cost: 1
	New rule:
	l2 -> l3 : __disjvr_0^0'=__disjvr_0^post2, __disjvr_1^0'=__disjvr_1^post2, __disjvr_2^0'=__disjvr_2^post2, nondet_7^0'=nondet_7^post2, nondet_8^0'=nondet_8^post2, result_6^0'=result_6^post2, temp5_9^0'=temp5_9^post2, temp6_11^0'=temp6_11^post2, x_10^0'=x_10^post2, (0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ temp5_9^post2 <= 0 /\ temp5_9^post2 == 0 /\ __disjvr_2^0-__disjvr_2^post2 == 0 /\ -temp5_9^post2 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -temp6_11^post2+temp6_11^0 == 0 /\ temp5_9^post2-nondet_8^post2 == 0 /\ x_10^0-x_10^post2 == 0 /\ -nondet_7^post2+nondet_7^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : __disjvr_0^0'=__disjvr_0^post2, __disjvr_1^0'=__disjvr_1^post2, __disjvr_2^0'=__disjvr_2^post2, nondet_7^0'=nondet_7^post2, nondet_8^0'=nondet_8^post2, result_6^0'=result_6^post2, temp5_9^0'=temp5_9^post2, temp6_11^0'=temp6_11^post2, x_10^0'=x_10^post2, (0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ temp5_9^post2 <= 0 /\ temp5_9^post2 == 0 /\ __disjvr_2^0-__disjvr_2^post2 == 0 /\ -temp5_9^post2 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -temp6_11^post2+temp6_11^0 == 0 /\ temp5_9^post2-nondet_8^post2 == 0 /\ x_10^0-x_10^post2 == 0 /\ -nondet_7^post2+nondet_7^0 == 0), cost: 1
	New rule:
	l2 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post2, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, (0 <= 0 /\ 0 == 0), cost: 1
	
		propagated equality __disjvr_1^post2 = __disjvr_1^0
		
		propagated equality temp5_9^post2 = 0
		
		propagated equality __disjvr_2^post2 = __disjvr_2^0
		
		propagated equality __disjvr_0^post2 = __disjvr_0^0
		
		propagated equality temp6_11^post2 = temp6_11^0
		
		propagated equality nondet_8^post2 = 0
		
		propagated equality x_10^post2 = x_10^0
		
		propagated equality nondet_7^post2 = nondet_7^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post2, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, (0 <= 0 /\ 0 == 0), cost: 1
	New rule:
	l2 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post2, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post2, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	New rule:
	l2 -> l3 : nondet_8^0'=0, result_6^0'=result_6^post2, temp5_9^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l5 : __disjvr_0^0'=__disjvr_0^post3, __disjvr_1^0'=__disjvr_1^post3, __disjvr_2^0'=__disjvr_2^post3, nondet_7^0'=nondet_7^post3, nondet_8^0'=nondet_8^post3, result_6^0'=result_6^post3, temp5_9^0'=temp5_9^post3, temp6_11^0'=temp6_11^post3, x_10^0'=x_10^post3, (0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ x_10^0-x_10^post3 == 0 /\ -__disjvr_1^post3+__disjvr_1^0 == 0 /\ -temp6_11^post3+temp6_11^0 == 0 /\ result_6^0-result_6^post3 == 0 /\ -nondet_8^post3+temp5_9^post3 == 0 /\ -nondet_7^post3+nondet_7^0 == 0 /\ __disjvr_2^0-__disjvr_2^post3 == 0), cost: 1
	New rule:
	l2 -> l5 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post3, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post3, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, 0 == 0, cost: 1
	
		propagated equality __disjvr_0^post3 = __disjvr_0^0
		
		propagated equality x_10^post3 = x_10^0
		
		propagated equality __disjvr_1^post3 = __disjvr_1^0
		
		propagated equality temp6_11^post3 = temp6_11^0
		
		propagated equality result_6^post3 = result_6^0
		
		propagated equality nondet_8^post3 = temp5_9^post3
		
		propagated equality nondet_7^post3 = nondet_7^0
		
		propagated equality __disjvr_2^post3 = __disjvr_2^0
		
	Simplified Guard

	Original rule:
	l2 -> l5 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post3, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post3, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, 0 == 0, cost: 1
	New rule:
	l2 -> l5 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post3, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post3, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l5 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post3, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post3, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	New rule:
	l2 -> l5 : nondet_8^0'=temp5_9^post3, temp5_9^0'=temp5_9^post3, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l6 : __disjvr_0^0'=__disjvr_0^post4, __disjvr_1^0'=__disjvr_1^post4, __disjvr_2^0'=__disjvr_2^post4, nondet_7^0'=nondet_7^post4, nondet_8^0'=nondet_8^post4, result_6^0'=result_6^post4, temp5_9^0'=temp5_9^post4, temp6_11^0'=temp6_11^post4, x_10^0'=x_10^post4, (-__disjvr_0^0+__disjvr_0^post4 == 0 /\ nondet_7^0-nondet_7^post4 == 0 /\ -result_6^post4+result_6^0 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ nondet_8^0-nondet_8^post4 == 0 /\ __disjvr_2^0-__disjvr_2^post4 == 0 /\ x_10^0-x_10^post4 == 0 /\ -__disjvr_1^post4+__disjvr_1^0 == 0 /\ temp5_9^0-temp5_9^post4 == 0 /\ -temp6_11^post4+temp6_11^0 == 0), cost: 1
	New rule:
	l5 -> l6 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, 0 == 0, cost: 1
	
		propagated equality __disjvr_0^post4 = __disjvr_0^0
		
		propagated equality nondet_7^post4 = nondet_7^0
		
		propagated equality result_6^post4 = result_6^0
		
		propagated equality nondet_8^post4 = nondet_8^0
		
		propagated equality __disjvr_2^post4 = __disjvr_2^0
		
		propagated equality x_10^post4 = x_10^0
		
		propagated equality __disjvr_1^post4 = __disjvr_1^0
		
		propagated equality temp5_9^post4 = temp5_9^0
		
		propagated equality temp6_11^post4 = temp6_11^0
		
	Simplified Guard

	Original rule:
	l5 -> l6 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, 0 == 0, cost: 1
	New rule:
	l5 -> l6 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l6 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	New rule:
	l5 -> l6 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l4 : __disjvr_0^0'=__disjvr_0^post5, __disjvr_1^0'=__disjvr_1^post5, __disjvr_2^0'=__disjvr_2^post5, nondet_7^0'=nondet_7^post5, nondet_8^0'=nondet_8^post5, result_6^0'=result_6^post5, temp5_9^0'=temp5_9^post5, temp6_11^0'=temp6_11^post5, x_10^0'=x_10^post5, (-nondet_8^post5+nondet_8^0 == 0 /\ 1-x_10^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -temp6_11^post5+temp6_11^0 == 0 /\ -__disjvr_2^post5+__disjvr_2^0 == 0 /\ -result_6^post5+result_6^0 == 0 /\ nondet_7^0-nondet_7^post5 == 0 /\ temp5_9^0-temp5_9^post5 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0 /\ -1-x_10^0+x_10^post5 == 0), cost: 1
	New rule:
	l6 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, (0 == 0 /\ 1-x_10^0 <= 0), cost: 1
	
		propagated equality nondet_8^post5 = nondet_8^0
		
		propagated equality __disjvr_0^post5 = __disjvr_0^0
		
		propagated equality temp6_11^post5 = temp6_11^0
		
		propagated equality __disjvr_2^post5 = __disjvr_2^0
		
		propagated equality result_6^post5 = result_6^0
		
		propagated equality nondet_7^post5 = nondet_7^0
		
		propagated equality temp5_9^post5 = temp5_9^0
		
		propagated equality __disjvr_1^post5 = __disjvr_1^0
		
		propagated equality x_10^post5 = 1+x_10^0
		
	Simplified Guard

	Original rule:
	l6 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, (0 == 0 /\ 1-x_10^0 <= 0), cost: 1
	New rule:
	l6 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
	New rule:
	l6 -> l4 : x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l4 -> l3 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, nondet_7^0'=nondet_7^post6, nondet_8^0'=nondet_8^post6, result_6^0'=result_6^post6, temp5_9^0'=temp5_9^post6, temp6_11^0'=temp6_11^post6, x_10^0'=x_10^post6, (0 == 0 /\ -__disjvr_1^post6+__disjvr_1^0 == 0 /\ -temp6_11^post6+temp6_11^0 == 0 /\ nondet_7^0-nondet_7^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post6 == 0 /\ -temp5_9^post6 <= 0 /\ __disjvr_2^0-__disjvr_2^post6 == 0 /\ temp5_9^post6 <= 0 /\ -nondet_8^post6+temp5_9^post6 == 0 /\ x_10^0-x_10^post6 == 0), cost: 1
	New rule:
	l4 -> l3 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, nondet_7^0'=nondet_7^post6, nondet_8^0'=nondet_8^post6, result_6^0'=result_6^post6, temp5_9^0'=temp5_9^post6, temp6_11^0'=temp6_11^post6, x_10^0'=x_10^post6, (0 == 0 /\ -__disjvr_1^post6+__disjvr_1^0 == 0 /\ -temp6_11^post6+temp6_11^0 == 0 /\ nondet_7^0-nondet_7^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post6 == 0 /\ -temp5_9^post6 <= 0 /\ -temp5_9^post6 == 0 /\ __disjvr_2^0-__disjvr_2^post6 == 0 /\ temp5_9^post6 <= 0 /\ -nondet_8^post6+temp5_9^post6 == 0 /\ x_10^0-x_10^post6 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l3 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, nondet_7^0'=nondet_7^post6, nondet_8^0'=nondet_8^post6, result_6^0'=result_6^post6, temp5_9^0'=temp5_9^post6, temp6_11^0'=temp6_11^post6, x_10^0'=x_10^post6, (0 == 0 /\ -__disjvr_1^post6+__disjvr_1^0 == 0 /\ -temp6_11^post6+temp6_11^0 == 0 /\ nondet_7^0-nondet_7^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post6 == 0 /\ -temp5_9^post6 <= 0 /\ -temp5_9^post6 == 0 /\ __disjvr_2^0-__disjvr_2^post6 == 0 /\ temp5_9^post6 <= 0 /\ -nondet_8^post6+temp5_9^post6 == 0 /\ x_10^0-x_10^post6 == 0), cost: 1
	New rule:
	l4 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post6, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, (0 <= 0 /\ 0 == 0), cost: 1
	
		propagated equality __disjvr_1^post6 = __disjvr_1^0
		
		propagated equality temp6_11^post6 = temp6_11^0
		
		propagated equality nondet_7^post6 = nondet_7^0
		
		propagated equality __disjvr_0^post6 = __disjvr_0^0
		
		propagated equality temp5_9^post6 = 0
		
		propagated equality __disjvr_2^post6 = __disjvr_2^0
		
		propagated equality nondet_8^post6 = 0
		
		propagated equality x_10^post6 = x_10^0
		
	Simplified Guard

	Original rule:
	l4 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post6, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, (0 <= 0 /\ 0 == 0), cost: 1
	New rule:
	l4 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post6, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post6, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	New rule:
	l4 -> l3 : nondet_8^0'=0, result_6^0'=result_6^post6, temp5_9^0'=0, T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^post11, __disjvr_1^0'=__disjvr_1^post11, __disjvr_2^0'=__disjvr_2^post11, nondet_7^0'=nondet_7^post11, nondet_8^0'=nondet_8^post11, result_6^0'=result_6^post11, temp5_9^0'=temp5_9^post11, temp6_11^0'=temp6_11^post11, x_10^0'=x_10^post11, (0 == 0 /\ -temp6_11^post11+temp6_11^0 == 0 /\ -nondet_8^post11+temp5_9^post11 == 0 /\ nondet_7^0-nondet_7^post11 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -temp5_9^post11 <= 0 /\ x_10^0-x_10^post11 == 0 /\ __disjvr_2^0-__disjvr_2^post11 == 0 /\ temp5_9^post11 <= 0), cost: 1
	New rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^post11, __disjvr_1^0'=__disjvr_1^post11, __disjvr_2^0'=__disjvr_2^post11, nondet_7^0'=nondet_7^post11, nondet_8^0'=nondet_8^post11, result_6^0'=result_6^post11, temp5_9^0'=temp5_9^post11, temp6_11^0'=temp6_11^post11, x_10^0'=x_10^post11, (0 == 0 /\ -temp6_11^post11+temp6_11^0 == 0 /\ -nondet_8^post11+temp5_9^post11 == 0 /\ nondet_7^0-nondet_7^post11 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -temp5_9^post11 <= 0 /\ -temp5_9^post11 == 0 /\ x_10^0-x_10^post11 == 0 /\ __disjvr_2^0-__disjvr_2^post11 == 0 /\ temp5_9^post11 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^post11, __disjvr_1^0'=__disjvr_1^post11, __disjvr_2^0'=__disjvr_2^post11, nondet_7^0'=nondet_7^post11, nondet_8^0'=nondet_8^post11, result_6^0'=result_6^post11, temp5_9^0'=temp5_9^post11, temp6_11^0'=temp6_11^post11, x_10^0'=x_10^post11, (0 == 0 /\ -temp6_11^post11+temp6_11^0 == 0 /\ -nondet_8^post11+temp5_9^post11 == 0 /\ nondet_7^0-nondet_7^post11 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -temp5_9^post11 <= 0 /\ -temp5_9^post11 == 0 /\ x_10^0-x_10^post11 == 0 /\ __disjvr_2^0-__disjvr_2^post11 == 0 /\ temp5_9^post11 <= 0), cost: 1
	New rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post11, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, (0 <= 0 /\ 0 == 0), cost: 1
	
		propagated equality temp6_11^post11 = temp6_11^0
		
		propagated equality nondet_8^post11 = temp5_9^post11
		
		propagated equality nondet_7^post11 = nondet_7^0
		
		propagated equality __disjvr_0^post11 = __disjvr_0^0
		
		propagated equality __disjvr_1^post11 = __disjvr_1^0
		
		propagated equality temp5_9^post11 = 0
		
		propagated equality x_10^post11 = x_10^0
		
		propagated equality __disjvr_2^post11 = __disjvr_2^0
		
	Simplified Guard

	Original rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post11, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, (0 <= 0 /\ 0 == 0), cost: 1
	New rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post11, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=0, result_6^0'=result_6^post11, temp5_9^0'=0, temp6_11^0'=temp6_11^0, x_10^0'=x_10^0, T, cost: 1
	New rule:
	l1 -> l3 : nondet_8^0'=0, result_6^0'=result_6^post11, temp5_9^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l12 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, nondet_7^0'=nondet_7^post1, nondet_8^0'=nondet_8^post1, result_6^0'=result_6^post1, temp5_9^0'=temp5_9^post1, temp6_11^0'=temp6_11^post1, x_10^0'=x_10^post1, (0 == 0 /\ -result_6^post15+result_6^0 == 0 /\ result_6^post15-result_6^post1 == 0 /\ temp5_9^post15-temp5_9^post1 == 0 /\ nondet_8^0-nondet_8^post15 == 0 /\ x_10^post1-temp6_11^post1 == 0 /\ __disjvr_0^0-__disjvr_0^post15 == 0 /\ -nondet_7^post15+nondet_7^0 == 0 /\ nondet_8^post15-nondet_8^post1 == 0 /\ __disjvr_2^post15-__disjvr_2^post1 == 0 /\ __disjvr_1^post15-__disjvr_1^post1 == 0 /\ -__disjvr_2^post15+__disjvr_2^0 == 0 /\ -__disjvr_1^post15+__disjvr_1^0 == 0 /\ x_10^0-x_10^post15 == 0 /\ __disjvr_0^post15-__disjvr_0^post1 == 0 /\ -temp6_11^post15+temp6_11^0 == 0 /\ -nondet_7^post1+temp6_11^post1 == 0 /\ -temp5_9^post15+temp5_9^0 == 0), cost: 1
	New rule:
	l12 -> l1 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, nondet_7^0'=x_10^post1, nondet_8^0'=nondet_8^post15, result_6^0'=result_6^post15, temp5_9^0'=temp5_9^post15, temp6_11^0'=x_10^post1, x_10^0'=x_10^post1, (0 == 0 /\ -result_6^post15+result_6^0 == 0 /\ nondet_8^0-nondet_8^post15 == 0 /\ __disjvr_0^0-__disjvr_0^post15 == 0 /\ -nondet_7^post15+nondet_7^0 == 0 /\ -__disjvr_2^post15+__disjvr_2^0 == 0 /\ -__disjvr_1^post15+__disjvr_1^0 == 0 /\ x_10^0-x_10^post15 == 0 /\ -temp6_11^post15+temp6_11^0 == 0 /\ -temp5_9^post15+temp5_9^0 == 0), cost: 1
	
		propagated equality result_6^post1 = result_6^post15
		
		propagated equality temp5_9^post1 = temp5_9^post15
		
		propagated equality temp6_11^post1 = x_10^post1
		
		propagated equality nondet_8^post1 = nondet_8^post15
		
		propagated equality __disjvr_2^post1 = __disjvr_2^post15
		
		propagated equality __disjvr_1^post1 = __disjvr_1^post15
		
		propagated equality __disjvr_0^post1 = __disjvr_0^post15
		
		propagated equality nondet_7^post1 = x_10^post1
		
	Propagated Equalities

	Original rule:
	l12 -> l1 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, nondet_7^0'=x_10^post1, nondet_8^0'=nondet_8^post15, result_6^0'=result_6^post15, temp5_9^0'=temp5_9^post15, temp6_11^0'=x_10^post1, x_10^0'=x_10^post1, (0 == 0 /\ -result_6^post15+result_6^0 == 0 /\ nondet_8^0-nondet_8^post15 == 0 /\ __disjvr_0^0-__disjvr_0^post15 == 0 /\ -nondet_7^post15+nondet_7^0 == 0 /\ -__disjvr_2^post15+__disjvr_2^0 == 0 /\ -__disjvr_1^post15+__disjvr_1^0 == 0 /\ x_10^0-x_10^post15 == 0 /\ -temp6_11^post15+temp6_11^0 == 0 /\ -temp5_9^post15+temp5_9^0 == 0), cost: 1
	New rule:
	l12 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=x_10^post1, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=x_10^post1, x_10^0'=x_10^post1, 0 == 0, cost: 1
	
		propagated equality result_6^post15 = result_6^0
		
		propagated equality nondet_8^post15 = nondet_8^0
		
		propagated equality __disjvr_0^post15 = __disjvr_0^0
		
		propagated equality nondet_7^post15 = nondet_7^0
		
		propagated equality __disjvr_2^post15 = __disjvr_2^0
		
		propagated equality __disjvr_1^post15 = __disjvr_1^0
		
		propagated equality x_10^post15 = x_10^0
		
		propagated equality temp6_11^post15 = temp6_11^0
		
		propagated equality temp5_9^post15 = temp5_9^0
		
	Simplified Guard

	Original rule:
	l12 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=x_10^post1, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=x_10^post1, x_10^0'=x_10^post1, 0 == 0, cost: 1
	New rule:
	l12 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=x_10^post1, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=x_10^post1, x_10^0'=x_10^post1, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l12 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=x_10^post1, nondet_8^0'=nondet_8^0, result_6^0'=result_6^0, temp5_9^0'=temp5_9^0, temp6_11^0'=x_10^post1, x_10^0'=x_10^post1, T, cost: 1
	New rule:
	l12 -> l1 : nondet_7^0'=x_10^post1, temp6_11^0'=x_10^post1, x_10^0'=x_10^post1, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^post14, __disjvr_1^0'=__disjvr_1^post14, __disjvr_2^0'=__disjvr_2^post14, nondet_7^0'=nondet_7^post14, nondet_8^0'=nondet_8^post14, result_6^0'=result_6^post14, temp5_9^0'=temp5_9^post14, temp6_11^0'=temp6_11^post14, x_10^0'=x_10^post14, (0 == 0 /\ temp5_9^post12-temp5_9^post13 == 0 /\ result_6^post12-result_6^post13 == 0 /\ -__disjvr_2^post14+__disjvr_2^post13 == 0 /\ __disjvr_0^post12-__disjvr_0^post13 == 0 /\ -temp5_9^post14+temp5_9^post13 == 0 /\ -nondet_7^post14+nondet_7^post13 == 0 /\ temp6_11^post12-temp6_11^post13 == 0 /\ __disjvr_1^post12-__disjvr_1^post13 == 0 /\ nondet_7^post12-nondet_7^post13 == 0 /\ -result_6^post14+result_6^post13 == 0 /\ 1-x_10^post13 <= 0 /\ __disjvr_2^post12-__disjvr_2^post13 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ temp5_9^post12-nondet_8^post12 == 0 /\ -1+x_10^post14-x_10^post13 == 0 /\ -temp6_11^post12+temp6_11^0 == 0 /\ -temp6_11^post14+temp6_11^post13 == 0 /\ x_10^0-x_10^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^post13 == 0 /\ -x_10^post13+x_10^post12 == 0 /\ -nondet_8^post13+nondet_8^post12 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ -__disjvr_0^post14+__disjvr_0^post13 == 0 /\ -result_6^post12+result_6^0 == 0 /\ nondet_8^post13-nondet_8^post14 == 0 /\ nondet_7^0-nondet_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0), cost: 1
	New rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^post13, __disjvr_1^0'=__disjvr_1^post13, __disjvr_2^0'=__disjvr_2^post13, nondet_7^0'=nondet_7^post13, nondet_8^0'=nondet_8^post13, result_6^0'=result_6^post13, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^post13, x_10^0'=1+x_10^post13, (0 == 0 /\ temp5_9^post12-temp5_9^post13 == 0 /\ result_6^post12-result_6^post13 == 0 /\ __disjvr_0^post12-__disjvr_0^post13 == 0 /\ temp6_11^post12-temp6_11^post13 == 0 /\ __disjvr_1^post12-__disjvr_1^post13 == 0 /\ nondet_7^post12-nondet_7^post13 == 0 /\ 1-x_10^post13 <= 0 /\ __disjvr_2^post12-__disjvr_2^post13 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ temp5_9^post12-nondet_8^post12 == 0 /\ -temp6_11^post12+temp6_11^0 == 0 /\ x_10^0-x_10^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^post13 == 0 /\ -x_10^post13+x_10^post12 == 0 /\ -nondet_8^post13+nondet_8^post12 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ -result_6^post12+result_6^0 == 0 /\ nondet_7^0-nondet_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0), cost: 1
	
		propagated equality __disjvr_2^post14 = __disjvr_2^post13
		
		propagated equality temp5_9^post14 = temp5_9^post13
		
		propagated equality nondet_7^post14 = nondet_7^post13
		
		propagated equality result_6^post14 = result_6^post13
		
		propagated equality x_10^post14 = 1+x_10^post13
		
		propagated equality temp6_11^post14 = temp6_11^post13
		
		propagated equality __disjvr_1^post14 = __disjvr_1^post13
		
		propagated equality __disjvr_0^post14 = __disjvr_0^post13
		
		propagated equality nondet_8^post14 = nondet_8^post13
		
	Propagated Equalities

	Original rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^post13, __disjvr_1^0'=__disjvr_1^post13, __disjvr_2^0'=__disjvr_2^post13, nondet_7^0'=nondet_7^post13, nondet_8^0'=nondet_8^post13, result_6^0'=result_6^post13, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^post13, x_10^0'=1+x_10^post13, (0 == 0 /\ temp5_9^post12-temp5_9^post13 == 0 /\ result_6^post12-result_6^post13 == 0 /\ __disjvr_0^post12-__disjvr_0^post13 == 0 /\ temp6_11^post12-temp6_11^post13 == 0 /\ __disjvr_1^post12-__disjvr_1^post13 == 0 /\ nondet_7^post12-nondet_7^post13 == 0 /\ 1-x_10^post13 <= 0 /\ __disjvr_2^post12-__disjvr_2^post13 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ temp5_9^post12-nondet_8^post12 == 0 /\ -temp6_11^post12+temp6_11^0 == 0 /\ x_10^0-x_10^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^post13 == 0 /\ -x_10^post13+x_10^post12 == 0 /\ -nondet_8^post13+nondet_8^post12 == 0 /\ __disjvr_0^0-__disjvr_0^post12 == 0 /\ -result_6^post12+result_6^0 == 0 /\ nondet_7^0-nondet_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0), cost: 1
	New rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post13, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, (0 == 0 /\ 1-x_10^0 <= 0), cost: 1
	
		propagated equality temp5_9^post12 = temp5_9^post13
		
		propagated equality result_6^post12 = result_6^post13
		
		propagated equality __disjvr_0^post12 = __disjvr_0^post13
		
		propagated equality temp6_11^post12 = temp6_11^post13
		
		propagated equality __disjvr_1^post12 = __disjvr_1^post13
		
		propagated equality nondet_7^post12 = nondet_7^post13
		
		propagated equality __disjvr_2^post12 = __disjvr_2^post13
		
		propagated equality __disjvr_1^post13 = __disjvr_1^0
		
		propagated equality nondet_8^post12 = temp5_9^post13
		
		propagated equality temp6_11^post13 = temp6_11^0
		
		propagated equality x_10^post12 = x_10^0
		
		propagated equality x_10^post13 = x_10^0
		
		propagated equality nondet_8^post13 = temp5_9^post13
		
		propagated equality __disjvr_0^post13 = __disjvr_0^0
		
		propagated equality result_6^post13 = result_6^0
		
		propagated equality nondet_7^post13 = nondet_7^0
		
		propagated equality __disjvr_2^post13 = __disjvr_2^0
		
	Simplified Guard

	Original rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post13, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, (0 == 0 /\ 1-x_10^0 <= 0), cost: 1
	New rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post13, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post13, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post13, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
	New rule:
	l1 -> l4 : nondet_8^0'=temp5_9^post13, temp5_9^0'=temp5_9^post13, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l4 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, nondet_7^0'=nondet_7^post10, nondet_8^0'=nondet_8^post10, result_6^0'=result_6^post10, temp5_9^0'=temp5_9^post10, temp6_11^0'=temp6_11^post10, x_10^0'=x_10^post10, (0 == 0 /\ -__disjvr_2^post8+__disjvr_2^post7 == 0 /\ 1-x_10^post8 <= 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ -__disjvr_2^post10+__disjvr_2^post9 == 0 /\ nondet_7^post9-nondet_7^post10 == 0 /\ -temp6_11^post8+temp6_11^post7 == 0 /\ -__disjvr_1^post10+__disjvr_1^post9 == 0 /\ -__disjvr_0^post8+__disjvr_0^post7 == 0 /\ -result_6^post7+result_6^0 == 0 /\ -__disjvr_1^post9+__disjvr_1^post8 == 0 /\ -temp6_11^post10+temp6_11^post9 == 0 /\ -nondet_8^post9+nondet_8^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ -nondet_7^post9+nondet_7^post8 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ result_6^post8-result_6^post9 == 0 /\ temp5_9^post9-temp5_9^post10 == 0 /\ -__disjvr_0^post10+__disjvr_0^post9 == 0 /\ -x_10^post8+x_10^post7 == 0 /\ -temp5_9^post9+temp5_9^post8 == 0 /\ -1-x_10^post8+x_10^post9 == 0 /\ -x_10^post10+x_10^post9 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ -temp6_11^post9+temp6_11^post8 == 0 /\ -nondet_8^post10+nondet_8^post9 == 0 /\ -temp5_9^post8+temp5_9^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -nondet_7^post8+nondet_7^post7 == 0 /\ nondet_8^post7-nondet_8^post8 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -result_6^post10+result_6^post9 == 0 /\ nondet_7^0-nondet_7^post7 == 0 /\ -result_6^post8+result_6^post7 == 0), cost: 1
	New rule:
	l4 -> l4 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, nondet_7^0'=nondet_7^post9, nondet_8^0'=nondet_8^post9, result_6^0'=result_6^post9, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^post9, x_10^0'=x_10^post9, (0 == 0 /\ -__disjvr_2^post8+__disjvr_2^post7 == 0 /\ 1-x_10^post8 <= 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ -temp6_11^post8+temp6_11^post7 == 0 /\ -__disjvr_0^post8+__disjvr_0^post7 == 0 /\ -result_6^post7+result_6^0 == 0 /\ -__disjvr_1^post9+__disjvr_1^post8 == 0 /\ -nondet_8^post9+nondet_8^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ -nondet_7^post9+nondet_7^post8 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ result_6^post8-result_6^post9 == 0 /\ -x_10^post8+x_10^post7 == 0 /\ -temp5_9^post9+temp5_9^post8 == 0 /\ -1-x_10^post8+x_10^post9 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ -temp6_11^post9+temp6_11^post8 == 0 /\ -temp5_9^post8+temp5_9^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -nondet_7^post8+nondet_7^post7 == 0 /\ nondet_8^post7-nondet_8^post8 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ nondet_7^0-nondet_7^post7 == 0 /\ -result_6^post8+result_6^post7 == 0), cost: 1
	
		propagated equality __disjvr_2^post10 = __disjvr_2^post9
		
		propagated equality nondet_7^post10 = nondet_7^post9
		
		propagated equality __disjvr_1^post10 = __disjvr_1^post9
		
		propagated equality temp6_11^post10 = temp6_11^post9
		
		propagated equality temp5_9^post10 = temp5_9^post9
		
		propagated equality __disjvr_0^post10 = __disjvr_0^post9
		
		propagated equality x_10^post10 = x_10^post9
		
		propagated equality nondet_8^post10 = nondet_8^post9
		
		propagated equality result_6^post10 = result_6^post9
		
	Propagated Equalities

	Original rule:
	l4 -> l4 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, nondet_7^0'=nondet_7^post9, nondet_8^0'=nondet_8^post9, result_6^0'=result_6^post9, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^post9, x_10^0'=x_10^post9, (0 == 0 /\ -__disjvr_2^post8+__disjvr_2^post7 == 0 /\ 1-x_10^post8 <= 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ -temp6_11^post8+temp6_11^post7 == 0 /\ -__disjvr_0^post8+__disjvr_0^post7 == 0 /\ -result_6^post7+result_6^0 == 0 /\ -__disjvr_1^post9+__disjvr_1^post8 == 0 /\ -nondet_8^post9+nondet_8^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ temp6_11^0-temp6_11^post7 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ -nondet_7^post9+nondet_7^post8 == 0 /\ -nondet_8^post7+temp5_9^post7 == 0 /\ result_6^post8-result_6^post9 == 0 /\ -x_10^post8+x_10^post7 == 0 /\ -temp5_9^post9+temp5_9^post8 == 0 /\ -1-x_10^post8+x_10^post9 == 0 /\ x_10^0-x_10^post7 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ -temp6_11^post9+temp6_11^post8 == 0 /\ -temp5_9^post8+temp5_9^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -nondet_7^post8+nondet_7^post7 == 0 /\ nondet_8^post7-nondet_8^post8 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ nondet_7^0-nondet_7^post7 == 0 /\ -result_6^post8+result_6^post7 == 0), cost: 1
	New rule:
	l4 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post9, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, (0 == 0 /\ 1-x_10^0 <= 0), cost: 1
	
		propagated equality __disjvr_2^post7 = __disjvr_2^post8
		
		propagated equality __disjvr_1^post7 = __disjvr_1^post8
		
		propagated equality temp6_11^post7 = temp6_11^post8
		
		propagated equality __disjvr_0^post7 = __disjvr_0^post8
		
		propagated equality result_6^post7 = result_6^0
		
		propagated equality __disjvr_1^post8 = __disjvr_1^post9
		
		propagated equality nondet_8^post8 = nondet_8^post9
		
		propagated equality __disjvr_0^post8 = __disjvr_0^post9
		
		propagated equality temp6_11^post8 = temp6_11^0
		
		propagated equality __disjvr_2^post8 = __disjvr_2^post9
		
		propagated equality nondet_7^post8 = nondet_7^post9
		
		propagated equality nondet_8^post7 = temp5_9^post7
		
		propagated equality result_6^post8 = result_6^post9
		
		propagated equality x_10^post7 = x_10^post8
		
		propagated equality temp5_9^post8 = temp5_9^post9
		
		propagated equality x_10^post8 = -1+x_10^post9
		
		propagated equality x_10^post9 = 1+x_10^0
		
		propagated equality __disjvr_1^post9 = __disjvr_1^0
		
		propagated equality temp6_11^post9 = temp6_11^0
		
		propagated equality temp5_9^post7 = temp5_9^post9
		
		propagated equality __disjvr_0^post9 = __disjvr_0^0
		
		propagated equality nondet_7^post7 = nondet_7^post9
		
		propagated equality nondet_8^post9 = temp5_9^post9
		
		propagated equality __disjvr_2^post9 = __disjvr_2^0
		
		propagated equality nondet_7^post9 = nondet_7^0
		
		propagated equality result_6^post9 = result_6^0
		
	Simplified Guard

	Original rule:
	l4 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post9, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, (0 == 0 /\ 1-x_10^0 <= 0), cost: 1
	New rule:
	l4 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post9, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l4 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, nondet_7^0'=nondet_7^0, nondet_8^0'=temp5_9^post9, result_6^0'=result_6^0, temp5_9^0'=temp5_9^post9, temp6_11^0'=temp6_11^0, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
	New rule:
	l4 -> l4 : nondet_8^0'=temp5_9^post9, temp5_9^0'=temp5_9^post9, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1

Step with 27

	Trace

	27[T]
	
	Blocked

	[{}, {}]

Step with 26

	Trace

	27[T], 26[T]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	27[T]
	
	Blocked

	[{}, {26[T]}]

Step with 28

	Trace

	27[T], 28[(1-x_10^0 <= 0)]
	
	Blocked

	[{}, {26[T]}, {}]

Step with 25

	Trace

	27[T], 28[(1-x_10^0 <= 0)], 25[T]
	
	Blocked

	[{}, {26[T]}, {}, {}]

Backtrack

	Trace

	27[T], 28[(1-x_10^0 <= 0)]
	
	Blocked

	[{}, {26[T]}, {25[T]}]

Step with 29

	Trace

	27[T], 28[(1-x_10^0 <= 0)], 29[(1-x_10^0 <= 0)]
	
	Blocked

	[{}, {26[T]}, {25[T]}, {}]

Nonterm

Start location: l12
Program variables: nondet_7^0 nondet_8^0 result_6^0 temp5_9^0 temp6_11^0 x_10^0
  26: l1 -> l3 : nondet_8^0'=0, result_6^0'=result_6^post11, temp5_9^0'=0, T, cost: 1
  28: l1 -> l4 : nondet_8^0'=temp5_9^post13, temp5_9^0'=temp5_9^post13, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
  21: l2 -> l3 : nondet_8^0'=0, result_6^0'=result_6^post2, temp5_9^0'=0, T, cost: 1
  22: l2 -> l5 : nondet_8^0'=temp5_9^post3, temp5_9^0'=temp5_9^post3, T, cost: 1
  23: l5 -> l6 : T, cost: 1
  24: l6 -> l4 : x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
  25: l4 -> l3 : nondet_8^0'=0, result_6^0'=result_6^post6, temp5_9^0'=0, T, cost: 1
  29: l4 -> l4 : nondet_8^0'=temp5_9^post9, temp5_9^0'=temp5_9^post9, x_10^0'=1+x_10^0, 1-x_10^0 <= 0, cost: 1
  30: l4 -> LoAT_sink : (-1+x_10^0 >= 0 /\ -1+n >= 0), cost: NONTERM
  31: l4 -> l4 : nondet_8^0'=temp5_9^post9, temp5_9^0'=temp5_9^post9, x_10^0'=x_10^0+n, (-1+x_10^0 >= 0 /\ -1+n >= 0), cost: 1
  27: l12 -> l1 : nondet_7^0'=x_10^post1, temp6_11^0'=x_10^post1, x_10^0'=x_10^post1, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l4 -> l4 : nondet_8^0'=temp5_9^post9, temp5_9^0'=temp5_9^post9, x_10^0'=1+x_10^0, (1-x_10^0 <= 0), cost: 1
	New rule:
	l4 -> LoAT_sink : (-1+x_10^0 >= 0 /\ -1+n >= 0), cost: NONTERM

		-1+x_10^0 >= 0 [0]: monotonic increase yields -1+x_10^0 >= 0
		
		Replacement map: {-1+x_10^0 >= 0 -> -1+x_10^0 >= 0}

	Loop Acceleration

	Original rule:
	l4 -> l4 : nondet_8^0'=temp5_9^post9, temp5_9^0'=temp5_9^post9, x_10^0'=1+x_10^0, (1-x_10^0 <= 0), cost: 1
	New rule:
	l4 -> l4 : nondet_8^0'=temp5_9^post9, temp5_9^0'=temp5_9^post9, x_10^0'=x_10^0+n, (-1+x_10^0 >= 0 /\ -1+n >= 0), cost: 1

		-1+x_10^0 >= 0 [0]: monotonic increase yields -1+x_10^0 >= 0
		
		Replacement map: {-1+x_10^0 >= 0 -> -1+x_10^0 >= 0}

Step with 30

	Trace

	27[T], 28[(1-x_10^0 <= 0)], 30[(-1+x_10^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {26[T]}, {25[T]}, {30[T]}]

Refute

	Counterexample

	[ nondet_7^0=1 nondet_8^0=0 result_6^0=0 temp5_9^0=0 temp6_11^0=1 x_10^0=1 ] 27 [ nondet_7^0=1 nondet_8^0=0 result_6^0=0 temp5_9^0=0 temp6_11^0=1 x_10^0=2 ] 28 [ nondet_7^0=nondet_7^0 nondet_8^0=0 result_6^0=0 temp5_9^0=0 temp6_11^0=temp6_11^0 x_10^0=x_10^0 ] 30
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
