NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_i -> 3}>
<l1, l2, true>
<l2, l13, not((main_i >= 3))>
<l2, l3, (main_i >= 3)>
<l3, l4, (main_i > 5)>
<l3, l6, not((main_i > 5))>
<l4, l5, true, seq{main_i -> (main_i + 3)}>
<l5, l12, true>
<l6, l7, (main_i > 10)>
<l6, l9, not((main_i > 10))>
<l7, l8, true, seq{main_i -> (main_i - 2)}>
<l8, l11, true>
<l9, l10, true, seq{main_i -> (main_i + 1)}>
<l10, l11, true>
<l11, l12, true>
<l12, l2, true>
<l13, l14, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_i -> 3}>
<l1, l2, true>
<l2, l3, (main_i >= 3)>
<l2, l13, not((main_i >= 3))>
<l3, l4, (main_i > 5)>
<l3, l6, not((main_i > 5))>
<l4, l5, true, seq{main_i -> (main_i + 3)}>
<l5, l12, true>
<l6, l7, (main_i > 10)>
<l6, l9, not((main_i > 10))>
<l7, l8, true, seq{main_i -> (main_i - 2)}>
<l8, l11, true>
<l9, l10, true, seq{main_i -> (main_i + 1)}>
<l10, l11, true>
<l11, l12, true>
<l12, l2, true>
<l13, l14, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
14, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [1 functions]:
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [3 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1>
main | function | [integer, ()] | <line: 5, col: 1>
i | local variable | integer | <line: 6, col: 5> | <line: 7, col: 5> <line: 9, col: 12> <line: 10, col: 13> <line: 11, col: 13> <line: 11, col: 17> <line: 13, col: 17> <line: 14, col: 17> <line: 14, col: 21> <line: 16, col: 17> <line: 16, col: 21>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_i = 3)>
<l2, l2, (main_i >= 3) /\ (main_i > 5), par{main_i -> (main_i + 3)}>
<l2, l2, (main_i >= 3) /\ not((main_i > 5)) /\ not((main_i > 10)), par{main_i -> (main_i + 1)}>
<l2, l14, not((main_i >= 3))>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
14, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 6 <= main_i, {main_i -> 3 + main_i, rest remain the same}>
<l2, l2, 3 <= main_i /\ main_i <= 5, {main_i -> 1 + main_i, rest remain the same}>
Variables:
main_i

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_i = 3, {all remain the same}>

Graph 2
<l2, l14, main_i <= 2, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 14 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.128171

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000708s
[33mRanking function: [36m6 - main_i[0m
New Graphs: 
Transitions:
<l2, l2, 6 <= main_i, {main_i -> 3 + main_i, rest remain the same}>
Variables:
main_i
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000183s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000559s
[8007 : 8009]
[8007 : 8010]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003812s
Time used: 0.003607
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.010645s
Time used: 1.01059

LOG: SAT solveNonLinear - Elapsed time: 1.014457s
Cost: 1; Total time: 1.0142
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: 0 <= main_i[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 6 <= main_i, {main_i -> 3 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 3 <= main_i /\ main_i <= 5, {main_i -> 1 + main_i, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 6 <= main_i, {main_i -> 3 + main_i, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - main_i[0m
New Graphs: 
Transitions:
<l2, l2, 50001 <= main_i, {main_i -> 3 + main_i, rest remain the same}>
Variables:
main_i
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000208s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000591s
[8007 : 8014]
[8007 : 8015]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.101328s
Time used: 4.1004
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, main_i = 3, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, main_i = 3, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012610s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.012650s
Cannot prove unreachability

[8007 : 8215]
[8007 : 8216]
Successful child: 8215

[32mProgram does NOT terminate[0m
