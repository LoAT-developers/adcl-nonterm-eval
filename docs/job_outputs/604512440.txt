NO

Initial ITS

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : T, cost: 1
  11: [2] -> [10] : _|_, cost: 1
   2: [3] -> [5] : i > 0, cost: 1
   5: [3] -> [4] : i <= 0, cost: 1
   6: [4] -> [8] : i < 0, cost: 1
   9: [4] -> [7] : i >= 0, cost: 1
   3: [5] -> [6] : i'=-1+i, T, cost: 1
   4: [6] -> [4] : T, cost: 1
  10: [7] -> [2] : T, cost: 1
   7: [8] -> [9] : i'=1+i, T, cost: 1
   8: [9] -> [7] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : T, cost: 1
  11: [2] -> [10] : _|_, cost: 1
   5: [3] -> [4] : i <= 0, cost: 1
  13: [3] -> [4] : i'=-1+i, i > 0, cost: 1
   9: [4] -> [7] : i >= 0, cost: 1
  15: [4] -> [7] : i'=1+i, i < 0, cost: 1
  10: [7] -> [2] : T, cost: 1

	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : i > 0, cost: 1
	Second rule:
	[5] -> [6] : i'=-1+i, T, cost: 1
	New rule:
	[3] -> [6] : i'=-1+i, i > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[3] -> [6] : i'=-1+i, i > 0, cost: 1
	Second rule:
	[6] -> [4] : T, cost: 1
	New rule:
	[3] -> [4] : i'=-1+i, i > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 12
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[4] -> [8] : i < 0, cost: 1
	Second rule:
	[8] -> [9] : i'=1+i, T, cost: 1
	New rule:
	[4] -> [9] : i'=1+i, i < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[4] -> [9] : i'=1+i, i < 0, cost: 1
	Second rule:
	[9] -> [7] : T, cost: 1
	New rule:
	[4] -> [7] : i'=1+i, i < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 14

Step with 0

	Trace

	0[T]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	0[T], 1[T]
	
	Blocked

	[{}, {11[T]}, {}]

Step with 5

	Trace

	0[T], 1[T], 5[(i <= 0)]
	
	Blocked

	[{}, {11[T]}, {}, {}]

Step with 9

	Trace

	0[T], 1[T], 5[(i <= 0)], 9[(i >= 0)]
	
	Blocked

	[{}, {11[T]}, {}, {}, {}]

Step with 10

	Trace

	0[T], 1[T], 5[(i <= 0)], 9[(i >= 0)], 10[T]
	
	Blocked

	[{}, {11[T]}, {}, {}, {}, {}]

Nonterm

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : T, cost: 1
  11: [2] -> [10] : _|_, cost: 1
  16: [2] -> LoAT_sink : (-1+n >= 0 /\ i >= 0 /\ -i >= 0), cost: NONTERM
   5: [3] -> [4] : i <= 0, cost: 1
  13: [3] -> [4] : i'=-1+i, i > 0, cost: 1
   9: [4] -> [7] : i >= 0, cost: 1
  15: [4] -> [7] : i'=1+i, i < 0, cost: 1
  10: [7] -> [2] : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	[2] -> [2] : (i <= 0 /\ i >= 0), cost: 1
	New rule:
	[2] -> LoAT_sink : (-1+n >= 0 /\ i >= 0 /\ -i >= 0), cost: NONTERM

		i >= 0 [0]: monotonic increase yields i >= 0
		
		-i >= 0 [0]: monotonic increase yields -i >= 0
		
		Replacement map: {i >= 0 -> i >= 0, -i >= 0 -> -i >= 0}

Step with 16

	Trace

	0[T], 16[(-1+n >= 0 /\ i >= 0 /\ -i >= 0)]
	
	Blocked

	[{}, {11[T]}, {16[T]}]

Refute

	Counterexample

	[ i=0 ] 0 [ i=i ] 16
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
