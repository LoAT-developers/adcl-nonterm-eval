YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_max -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, (main_max > 0)>
<l1, l13, not((main_max > 0))>
<l2, l3, true, seq{main_a -> 0, main_x -> 1}>
<l3, l4, true>
<l4, l12, not((main_x <= main_max))>
<l4, l5, (main_x <= main_max)>
<l5, l6, not((Â¿functionCall(__VERIFIER_nondet_int) = 0))>
<l5, l8, (Â¿functionCall(__VERIFIER_nondet_int) = 0)>
<l6, l7, true, seq{main_a -> (main_a + 1)}>
<l7, l10, true>
<l8, l9, true, seq{main_a -> (main_a - 1)}>
<l9, l10, true>
<l10, l11, true, seq{main_x -> (main_x + 1)}>
<l11, l4, true>
<l12, l13, true>
<l13, l14, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l15, true, seq{main__func_return_ -> 0}>
<l15, l16, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l16, l1, true, seq{main_max -> varCall_1}>
<l1, l2, (main_max > 0)>
<l1, l13, not((main_max > 0))>
<l2, l3, true, seq{main_a -> 0, main_x -> 1}>
<l3, l4, true>
<l4, l5, (main_x <= main_max)>
<l4, l12, not((main_x <= main_max))>
<l5, l17, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l17, l8, (varCall_2 = 0)>
<l17, l6, (varCall_2 = 1)>
<l6, l7, true, seq{main_a -> (main_a + 1)}>
<l7, l10, true>
<l8, l9, true, seq{main_a -> (main_a - 1)}>
<l9, l10, true>
<l10, l11, true, seq{main_x -> (main_x + 1)}>
<l11, l4, true>
<l12, l13, true>
<l13, l14, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
14, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [5 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 15, col: 8> <line: 20, col: 8>
main | function | [integer, ()] | <line: 13, col: 1>
a | local variable | integer | <line: 14, col: 5> | <line: 17, col: 3> <line: 21, col: 5> <line: 21, col: 9> <line: 23, col: 5> <line: 23, col: 9>
x | local variable | integer | <line: 14, col: 5> | <line: 18, col: 3> <line: 19, col: 10> <line: 25, col: 4> <line: 25, col: 8>
max | local variable | integer | <line: 14, col: 5> | <line: 15, col: 2> <line: 16, col: 6> <line: 19, col: 15>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (main_max = undef3) /\ (undef3 > 0), par{main_a -> 0, main_x -> 1}>
<l0, l14, (main_max = undef3) /\ not((undef3 > 0))>
<l4, l4, (main_x <= main_max) /\ (undef4 = 0), par{main_a -> (main_a - 1), main_x -> (main_x + 1)}>
<l4, l4, (main_x <= main_max) /\ (undef4 = 1), par{main_a -> (main_a + 1), main_x -> (main_x + 1)}>
<l4, l14, not((main_x <= main_max))>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
14, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, main_x <= main_max /\ undef4 = 0, {main_a -> -1 + main_a, main_x -> 1 + main_x, rest remain the same}>
<l4, l4, main_x <= main_max /\ undef4 = 1, {main_a -> 1 + main_a, main_x -> 1 + main_x, rest remain the same}>
Variables:
main_a, main_x, main_max

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l4, 1 <= undef3 /\ main_max = undef3, {main_a -> 0, main_x -> 1, rest remain the same}>

Graph 2
<l0, l14, undef3 <= 0 /\ main_max = undef3, {all remain the same}>
<l4, l14, 1 + main_max <= main_x, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )
( 14 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003999

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001008s
[33mRanking function: [36m-main_x + main_max[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l14}...
No cycles found.

[32mProgram Terminates[0m
