unknown

Initial ITS

Start location: [1]
Program variables: c x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : c'=0, T, cost: 1
   3: [4] -> [5] : x >= 0, cost: 1
  13: [4] -> [13] : x < 0, cost: 1
   4: [5] -> [6] : x'=1+x, T, cost: 1
   5: [6] -> [7] : y'=1, T, cost: 1
   6: [7] -> [8] : -y+x > 0, cost: 1
  10: [7] -> [11] : -y+x <= 0, cost: 1
   7: [8] -> [9] : y'=1+y, T, cost: 1
   8: [9] -> [10] : c'=1+c, T, cost: 1
   9: [10] -> [7] : T, cost: 1
  11: [11] -> [12] : x'=-2+x, T, cost: 1
  12: [12] -> [4] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: c x y
  15: [1] -> [4] : c'=0, x'=nondet, y'=nondet1, T, cost: 1
  13: [4] -> [13] : x < 0, cost: 1
  17: [4] -> [7] : x'=1+x, y'=1, x >= 0, cost: 1
  21: [7] -> [4] : x'=-2+x, -y+x <= 0, cost: 1
  22: [7] -> [7] : c'=1+c, y'=1+y, -y+x > 0, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	Second rule:
	[3] -> [4] : c'=0, T, cost: 1
	New rule:
	[1] -> [4] : c'=0, x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 2 14
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[4] -> [5] : x >= 0, cost: 1
	Second rule:
	[5] -> [6] : x'=1+x, T, cost: 1
	New rule:
	[4] -> [6] : x'=1+x, x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[4] -> [6] : x'=1+x, x >= 0, cost: 1
	Second rule:
	[6] -> [7] : y'=1, T, cost: 1
	New rule:
	[4] -> [7] : x'=1+x, y'=1, x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 16
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[7] -> [8] : -y+x > 0, cost: 1
	Second rule:
	[8] -> [9] : y'=1+y, T, cost: 1
	New rule:
	[7] -> [9] : y'=1+y, -y+x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [11] by chaining:

	Applied chaining

	First rule:
	[7] -> [11] : -y+x <= 0, cost: 1
	Second rule:
	[11] -> [12] : x'=-2+x, T, cost: 1
	New rule:
	[7] -> [12] : x'=-2+x, -y+x <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 10 11
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[7] -> [9] : y'=1+y, -y+x > 0, cost: 1
	Second rule:
	[9] -> [10] : c'=1+c, T, cost: 1
	New rule:
	[7] -> [10] : c'=1+c, y'=1+y, -y+x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 18
	
	Eliminating location [12] by chaining:

	Applied chaining

	First rule:
	[7] -> [12] : x'=-2+x, -y+x <= 0, cost: 1
	Second rule:
	[12] -> [4] : T, cost: 1
	New rule:
	[7] -> [4] : x'=-2+x, -y+x <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 12 19
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[7] -> [10] : c'=1+c, y'=1+y, -y+x > 0, cost: 1
	Second rule:
	[10] -> [7] : T, cost: 1
	New rule:
	[7] -> [7] : c'=1+c, y'=1+y, -y+x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 20

Step with 15

	Trace

	15[T]
	
	Blocked

	[{}, {}]

Step with 13

	Trace

	15[T], 13[(x < 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	15[T]
	
	Blocked

	[{}, {13[T]}]

Step with 17

	Trace

	15[T], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T]}, {}]

Step with 21

	Trace

	15[T], 17[(x >= 0)], 21[(-y+x <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 13

	Trace

	15[T], 17[(x >= 0)], 21[(-y+x <= 0)], 13[(x < 0)]
	
	Blocked

	[{}, {13[T]}, {}, {17[T]}, {}]

Backtrack

	Trace

	15[T], 17[(x >= 0)], 21[(-y+x <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {13[T], 17[T]}]

Backtrack

	Trace

	15[T], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T]}, {21[T]}]

Step with 22

	Trace

	15[T], 17[(x >= 0)], 22[(-y+x > 0)]
	
	Blocked

	[{}, {13[T]}, {21[T]}, {}]

Accelerate

Start location: [1]
Program variables: c x y
  15: [1] -> [4] : c'=0, x'=nondet, y'=nondet1, T, cost: 1
  13: [4] -> [13] : x < 0, cost: 1
  17: [4] -> [7] : x'=1+x, y'=1, x >= 0, cost: 1
  21: [7] -> [4] : x'=-2+x, -y+x <= 0, cost: 1
  22: [7] -> [7] : c'=1+c, y'=1+y, -y+x > 0, cost: 1
  23: [7] -> [7] : c'=c+n, y'=n+y, (1-n-y+x > 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[7] -> [7] : c'=1+c, y'=1+y, (-y+x > 0), cost: 1
	New rule:
	[7] -> [7] : c'=c+n, y'=n+y, (1-n-y+x > 0 /\ -1+n >= 0), cost: 1

		-y+x > 0 [0]: montonic decrease yields 1-n-y+x > 0
		
		-y+x > 0 [1]: eventual increase yields (1 <= 0 /\ -y+x > 0)
		
		Replacement map: {-y+x > 0 -> 1-n-y+x > 0}

	Trace

	15[T], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {13[T]}, {21[T]}, {22[T], 23[T]}]

Step with 21

	Trace

	15[T], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)], 21[(-y+x <= 0)]
	
	Blocked

	[{}, {13[T]}, {21[T]}, {22[T], 23[T]}, {}]

Accelerate

Start location: [1]
Program variables: c x y
  15: [1] -> [4] : c'=0, x'=nondet, y'=nondet1, T, cost: 1
  13: [4] -> [13] : x < 0, cost: 1
  17: [4] -> [7] : x'=1+x, y'=1, x >= 0, cost: 1
  24: [4] -> [4] : c'=c+n2*x+1/2*n2-1/2*n2^2, x'=-n2+x, y'=2-n2+x, (-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0), cost: 1
  21: [7] -> [4] : x'=-2+x, -y+x <= 0, cost: 1
  22: [7] -> [7] : c'=1+c, y'=1+y, -y+x > 0, cost: 1
  23: [7] -> [7] : c'=c+n, y'=n+y, (1-n-y+x > 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[4] -> [4] : c'=c+x, x'=-1+x, y'=1+x, (-1+x >= 0 /\ x >= 0), cost: 1
	New rule:
	[4] -> [4] : c'=c+n2*x+1/2*n2-1/2*n2^2, x'=-n2+x, y'=2-n2+x, (-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0), cost: 1

		-1+x >= 0 [0]: montonic decrease yields -n2+x >= 0
		
		-1+x >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+x >= 0)
		
		x >= 0 [0]: montonic decrease yields 1-n2+x >= 0
		
		x >= 0 [1]: eventual increase yields (1 <= 0 /\ x >= 0)
		
		Replacement map: {-1+x >= 0 -> -n2+x >= 0, x >= 0 -> 1-n2+x >= 0}

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {13[T]}, {24[T]}]

Step with 17

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {}]

Step with 21

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)], 21[(-y+x <= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 13

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)], 21[(-y+x <= 0)], 13[(x < 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {}, {17[T], 24[T]}, {}]

Backtrack

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)], 21[(-y+x <= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {}, {13[T], 17[T], 24[T]}]

Backtrack

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {21[T]}]

Step with 22

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)], 22[(-y+x > 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {21[T]}, {}]

Covered

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {21[T], 22[T]}]

Step with 23

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {21[T], 22[T]}, {23[T]}]

Step with 21

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)], 21[(-y+x <= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {21[T], 22[T]}, {23[T]}, {}]

Covered

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {21[T], 22[T]}, {21[T], 23[T]}]

Step with 22

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)], 22[(-y+x > 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {21[T], 22[T]}, {21[T], 23[T]}, {}]

Covered

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {21[T], 22[T]}, {21[T], 22[T], 23[T]}]

Backtrack

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 24[T]}, {21[T], 22[T], 23[T]}]

Backtrack

	Trace

	15[T], 24[(-n2+x >= 0 /\ 1-n2+x >= 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 17[T], 24[T]}]

Backtrack

	Trace

	15[T]
	
	Blocked

	[{}, {13[T], 24[T]}]

Step with 17

	Trace

	15[T], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {}]

Step with 22

	Trace

	15[T], 17[(x >= 0)], 22[(-y+x > 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {}, {}]

Covered

	Trace

	15[T], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T]}]

Step with 23

	Trace

	15[T], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T]}, {23[T]}]

Step with 21

	Trace

	15[T], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)], 21[(-y+x <= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T]}, {23[T]}, {}]

Covered

	Trace

	15[T], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T]}, {21[T], 23[T]}]

Step with 22

	Trace

	15[T], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)], 22[(-y+x > 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T]}, {21[T], 23[T]}, {}]

Covered

	Trace

	15[T], 17[(x >= 0)], 23[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T]}, {21[T], 22[T], 23[T]}]

Backtrack

	Trace

	15[T], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T], 23[T]}]

Step with 21

	Trace

	15[T], 17[(x >= 0)], 21[(-y+x <= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T], 23[T]}, {}]

Step with 13

	Trace

	15[T], 17[(x >= 0)], 21[(-y+x <= 0)], 13[(x < 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T], 23[T]}, {17[T], 24[T]}, {}]

Backtrack

	Trace

	15[T], 17[(x >= 0)], 21[(-y+x <= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {22[T], 23[T]}, {13[T], 17[T], 24[T]}]

Backtrack

	Trace

	15[T], 17[(x >= 0)]
	
	Blocked

	[{}, {13[T], 24[T]}, {21[T], 22[T], 23[T]}]

Backtrack

	Trace

	15[T]
	
	Blocked

	[{}, {13[T], 17[T], 24[T]}]

Backtrack

	Trace

	Blocked

	[{15[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
