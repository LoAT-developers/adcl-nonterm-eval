unknown

Initial ITS

Start location: [1]
Program variables: b x
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : b'=nondet1, T, cost: 1
   2: [3] -> [4] : (b < 0 \/ b > 0), cost: 1
  12: [3] -> [12] : (b <= 0 /\ b >= 0), cost: 1
   3: [4] -> [5] : b'=nondet2, T, cost: 1
   4: [5] -> [6] : x'=-1+x, T, cost: 1
   5: [6] -> [8] : x >= 0, cost: 1
   8: [6] -> [10] : x < 0, cost: 1
  11: [7] -> [3] : T, cost: 1
   6: [8] -> [9] : b'=1, T, cost: 1
   7: [9] -> [7] : T, cost: 1
   9: [10] -> [11] : b'=0, T, cost: 1
  10: [11] -> [7] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: b x
  13: [1] -> [3] : b'=nondet1, x'=nondet, T, cost: 1
  12: [3] -> [12] : (b <= 0 /\ b >= 0), cost: 1
  15: [3] -> [6] : b'=nondet2, x'=-1+x, (b < 0 \/ b > 0), cost: 1
  18: [6] -> [7] : b'=1, x >= 0, cost: 1
  19: [6] -> [7] : b'=0, x < 0, cost: 1
  11: [7] -> [3] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : b'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : b'=nondet1, x'=nondet, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : (b < 0 \/ b > 0), cost: 1
	Second rule:
	[4] -> [5] : b'=nondet2, T, cost: 1
	New rule:
	[3] -> [5] : b'=nondet2, (b < 0 \/ b > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : b'=nondet2, (b < 0 \/ b > 0), cost: 1
	Second rule:
	[5] -> [6] : x'=-1+x, T, cost: 1
	New rule:
	[3] -> [6] : b'=nondet2, x'=-1+x, (b < 0 \/ b > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 14
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[6] -> [8] : x >= 0, cost: 1
	Second rule:
	[8] -> [9] : b'=1, T, cost: 1
	New rule:
	[6] -> [9] : b'=1, x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 6
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[6] -> [10] : x < 0, cost: 1
	Second rule:
	[10] -> [11] : b'=0, T, cost: 1
	New rule:
	[6] -> [11] : b'=0, x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 9
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[6] -> [9] : b'=1, x >= 0, cost: 1
	Second rule:
	[9] -> [7] : T, cost: 1
	New rule:
	[6] -> [7] : b'=1, x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 7 16
	
	Eliminating location [11] by chaining:

	Applied chaining

	First rule:
	[6] -> [11] : b'=0, x < 0, cost: 1
	Second rule:
	[11] -> [7] : T, cost: 1
	New rule:
	[6] -> [7] : b'=0, x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 10 17

Step with 13

	Trace

	13[T]
	
	Blocked

	[{}, {}]

Step with 12

	Trace

	13[T], 12[(b <= 0 /\ b >= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {12[T]}]

Step with 15

	Trace

	13[T], 15[(b > 0)]
	
	Blocked

	[{}, {12[T]}, {}]

Step with 18

	Trace

	13[T], 15[(b > 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T]}, {}, {}]

Step with 11

	Trace

	13[T], 15[(b > 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T]}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: b x
  13: [1] -> [3] : b'=nondet1, x'=nondet, T, cost: 1
  12: [3] -> [12] : (b <= 0 /\ b >= 0), cost: 1
  15: [3] -> [6] : b'=nondet2, x'=-1+x, (b < 0 \/ b > 0), cost: 1
  20: [3] -> [3] : b'=1, x'=-n+x, (-1+n >= 0 /\ -n+x >= 0 /\ b > 0), cost: 1
  18: [6] -> [7] : b'=1, x >= 0, cost: 1
  19: [6] -> [7] : b'=0, x < 0, cost: 1
  11: [7] -> [3] : T, cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : b'=1, x'=-1+x, (b > 0 /\ -1+x >= 0), cost: 1
	New rule:
	[3] -> [3] : b'=1, x'=-n+x, (-1+n >= 0 /\ -n+x >= 0 /\ b > 0), cost: 1

		b > 0 [0]: monotonic increase yields b > 0
		
		-1+x >= 0 [0]: montonic decrease yields -n+x >= 0
		
		-1+x >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+x >= 0)
		
		Replacement map: {b > 0 -> b > 0, -1+x >= 0 -> -n+x >= 0}

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)]
	
	Blocked

	[{}, {12[T]}, {20[T]}]

Step with 15

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}]

Step with 18

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}, {}]

Step with 11

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}, {}, {}]

Covered

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {}, {11[T]}]

Backtrack

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {18[T]}]

Step with 19

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)], 19[(x < 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {18[T]}, {}]

Step with 11

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)], 19[(x < 0)], 11[T]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {18[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 12

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)], 19[(x < 0)], 11[T], 12[(b <= 0 /\ b >= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {18[T]}, {}, {15[T], 20[T]}, {}]

Backtrack

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)], 19[(x < 0)], 11[T]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {18[T]}, {}, {12[T], 15[T], 20[T]}]

Backtrack

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)], 19[(x < 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {18[T]}, {11[T]}]

Backtrack

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)], 15[(b > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 20[T]}, {18[T], 19[T]}]

Backtrack

	Trace

	13[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 15[b > 0], 20[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {12[T], 20[T]}]

Step with 15

	Trace

	13[T], 15[(b > 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {}]

Step with 19

	Trace

	13[T], 15[(b > 0)], 19[(x < 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {}, {}]

Step with 11

	Trace

	13[T], 15[(b > 0)], 19[(x < 0)], 11[T]
	
	Blocked

	[{}, {12[T], 20[T]}, {}, {}, {}]

Covered

	Trace

	13[T], 15[(b > 0)], 19[(x < 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {}, {11[T]}]

Backtrack

	Trace

	13[T], 15[(b > 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {19[T]}]

Step with 18

	Trace

	13[T], 15[(b > 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {19[T]}, {}]

Step with 11

	Trace

	13[T], 15[(b > 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T], 20[T]}, {19[T]}, {}, {}]

Covered

	Trace

	13[T], 15[(b > 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {19[T]}, {11[T]}]

Backtrack

	Trace

	13[T], 15[(b > 0)]
	
	Blocked

	[{}, {12[T], 20[T]}, {18[T], 19[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}]

Step with 15

	Trace

	13[T], 15[(b < 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}]

Step with 18

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {}]

Step with 11

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 15

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)], 11[T], 15[(b > 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: b x
  13: [1] -> [3] : b'=nondet1, x'=nondet, T, cost: 1
  12: [3] -> [12] : (b <= 0 /\ b >= 0), cost: 1
  15: [3] -> [6] : b'=nondet2, x'=-1+x, (b < 0 \/ b > 0), cost: 1
  20: [3] -> [3] : b'=1, x'=-n+x, (-1+n >= 0 /\ -n+x >= 0 /\ b > 0), cost: 1
  18: [6] -> [7] : b'=1, x >= 0, cost: 1
  19: [6] -> [7] : b'=0, x < 0, cost: 1
  21: [6] -> [6] : b'=nondet2, x'=-n2+x, (-1+n2 >= 0 /\ 1-n2+x >= 0), cost: 1
  11: [7] -> [3] : T, cost: 1

	Loop Acceleration

	Original rule:
	[6] -> [6] : b'=nondet2, x'=-1+x, x >= 0, cost: 1
	New rule:
	[6] -> [6] : b'=nondet2, x'=-n2+x, (-1+n2 >= 0 /\ 1-n2+x >= 0), cost: 1

		x >= 0 [0]: montonic decrease yields 1-n2+x >= 0
		
		x >= 0 [1]: eventual increase yields (1 <= 0 /\ x >= 0)
		
		Replacement map: {x >= 0 -> 1-n2+x >= 0}

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {21[T]}]

Step with 18

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {21[T]}, {}]

Step with 11

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {21[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 15

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 18[(x >= 0)], 11[T], 15[(b > 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {21[T]}, {}, {}, {}]

Covered

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {21[T]}, {}, {15[b > 0]}]

Step with 20

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 18[(x >= 0)], 11[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {21[T]}, {}, {15[T]}, {20[T]}]

Covered

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {21[T]}, {}, {15[T], 20[T]}]

Backtrack

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {21[T]}, {11[T]}]

Backtrack

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {18[T], 21[T]}]

Step with 19

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 19[(x < 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {18[T], 21[T]}, {}]

Step with 11

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 19[(x < 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {18[T], 21[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 12

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 19[(x < 0)], 11[T], 12[(b <= 0 /\ b >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {18[T], 21[T]}, {}, {20[T]}, {}]

Backtrack

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 19[(x < 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {18[T], 21[T]}, {}, {12[T], 20[T]}]

Backtrack

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)], 19[(x < 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {18[T], 21[T]}, {11[T]}]

Backtrack

	Trace

	13[T], 15[(b < 0)], 21[(-1+n2 >= 0 /\ 1-n2+x >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {}, {18[T], 19[T], 21[T]}]

Backtrack

	Trace

	13[T], 15[(b < 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {21[T]}]

Step with 19

	Trace

	13[T], 15[(b < 0)], 19[(x < 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {21[T]}, {}]

Step with 11

	Trace

	13[T], 15[(b < 0)], 19[(x < 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {21[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 12

	Trace

	13[T], 15[(b < 0)], 19[(x < 0)], 11[T], 12[(b <= 0 /\ b >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {21[T]}, {}, {}, {}]

Backtrack

	Trace

	13[T], 15[(b < 0)], 19[(x < 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {21[T]}, {}, {12[T]}]

Backtrack

	Trace

	13[T], 15[(b < 0)], 19[(x < 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {21[T]}, {11[T]}]

Backtrack

	Trace

	13[T], 15[(b < 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {19[T], 21[T]}]

Step with 18

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {19[T], 21[T]}, {}]

Step with 11

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {19[T], 21[T]}, {}, {}]

Step with 15

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)], 11[T], 15[(b > 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {19[T], 21[T]}, {}, {12[T]}, {}]

Covered

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {19[T], 21[T]}, {}, {12[T], 15[b > 0]}]

Step with 20

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)], 11[T], 20[(-1+n >= 0 /\ -n+x >= 0 /\ b > 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {19[T], 21[T]}, {}, {12[T], 15[T]}, {20[T]}]

Covered

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)], 11[T]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {19[T], 21[T]}, {}, {12[T], 15[T], 20[T]}]

Backtrack

	Trace

	13[T], 15[(b < 0)], 18[(x >= 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {19[T], 21[T]}, {11[T]}]

Backtrack

	Trace

	13[T], 15[(b < 0)]
	
	Blocked

	[{}, {12[T], 15[b > 0], 20[T]}, {18[T], 19[T], 21[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {12[T], 15[(b < 0 /\ b > 0)], 20[T]}]

Backtrack

	Trace

	Blocked

	[{13[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
