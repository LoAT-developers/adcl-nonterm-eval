YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l7, true>
<l1, l2, (undef1 <= arg1) /\ (arg1 > ~(1)) /\ (undef1 > ~(1)), par{arg1 -> undef1, arg2 -> undef2}>
<l3, l2, (arg1 > 0) /\ (undef3 > ~(1)), par{arg1 -> undef3, arg2 -> undef4}>
<l2, l4, (undef6 > ~(1)) /\ (undef7 > 0) /\ (undef5 <= arg1) /\ (arg1 > 0) /\ (undef5 > 0), par{arg1 -> undef5, arg2 -> undef6}>
<l4, l5, (arg1 > 0) /\ (arg2 < 2) /\ ((undef8 + 2) <= arg1), par{arg1 -> undef8, arg2 -> undef9}>
<l4, l4, ((undef10 + 1) <= arg1) /\ (arg2 > 1) /\ (arg1 > 0) /\ (undef10 > ~(1)), par{arg1 -> undef10, arg2 -> (arg2 - 1)}>
<l5, l5, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef13}>
<l3, l6, (arg2 > ~(1)) /\ (undef14 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef14, arg2 -> 1}>
<l6, l6, (arg1 > 0) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l7, l3, true, par{arg1 -> undef18, arg2 -> undef19}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef13, undef14, undef18, undef19, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef13, undef14, undef18, undef19, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (undef18 > 0) /\ (undef3 > ~(1)) /\ (undef6 > ~(1)) /\ (undef7 > 0) /\ (undef5 <= undef3) /\ (undef3 > 0) /\ (undef5 > 0), par{arg1 -> undef5, arg2 -> undef6}>
<l0, l6, (undef19 > ~(1)) /\ (undef14 > ~(1)) /\ (undef18 > 0), par{arg1 -> undef14, arg2 -> 1}>
<l4, l5, (arg1 > 0) /\ (arg2 < 2) /\ ((undef8 + 2) <= arg1), par{arg1 -> undef8, arg2 -> undef9}>
<l4, l4, ((undef10 + 1) <= arg1) /\ (arg2 > 1) /\ (arg1 > 0) /\ (undef10 > ~(1)), par{arg1 -> undef10, arg2 -> (arg2 - 1)}>
<l5, l5, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef13}>
<l6, l6, (arg1 > 0) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef13, undef14, undef18, undef19, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef13, undef14, undef18, undef19, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l6, l6, 1 <= arg1 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Graph 2:
Transitions:
<l4, l4, 1 <= arg1 /\ 1 + undef10 <= arg1 /\ 0 <= undef10 /\ 2 <= arg2, {arg1 -> undef10, arg2 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Graph 3:
Transitions:
<l5, l5, 1 <= arg1, {arg1 -> -1 + arg1, arg2 -> undef13, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l6, 1 <= undef18 /\ 0 <= undef14 /\ 0 <= undef19, {arg1 -> undef14, arg2 -> 1, rest remain the same}>

Graph 2
<l0, l4, 1 <= undef3 /\ 1 <= undef5 /\ 1 <= undef7 /\ 1 <= undef18 /\ undef5 <= undef3 /\ 0 <= undef6, {arg1 -> undef5, arg2 -> undef6, rest remain the same}>

Graph 3
<l4, l5, 1 <= arg1 /\ arg2 <= 1 /\ 2 + undef8 <= arg1, {arg1 -> undef8, arg2 -> undef9, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 2 )
( 5 , 3 )
( 6 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002225

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000475s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001654

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000628s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.001199

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000440s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
[32mProgram Terminates[0m
