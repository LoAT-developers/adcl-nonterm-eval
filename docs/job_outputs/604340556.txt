YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_y1 -> Â¿functionCall(__VERIFIER_nondet_int), main_y2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l12, not((main_y1 > 0))>
<l1, l2, (main_y1 > 0)>
<l2, l3, (main_y2 > 0)>
<l2, l12, not((main_y2 > 0))>
<l3, l4, true>
<l4, l11, (main_y1 = main_y2)>
<l4, l5, not((main_y1 = main_y2))>
<l5, l6, (main_y1 > main_y2)>
<l5, l8, not((main_y1 > main_y2))>
<l6, l7, true, seq{main_y1 -> (main_y1 - main_y2)}>
<l7, l10, true>
<l8, l9, true, seq{main_y2 -> (main_y2 - main_y1)}>
<l9, l10, true>
<l10, l4, true>
<l11, l12, true>
<l12, l13, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l14, true, seq{main__func_return_ -> 0}>
<l14, l15, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l15, l16, true, seq{main_y1 -> varCall_1}>
<l16, l17, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l17, l1, true, seq{main_y2 -> varCall_2}>
<l1, l2, (main_y1 > 0)>
<l1, l12, not((main_y1 > 0))>
<l2, l3, (main_y2 > 0)>
<l2, l12, not((main_y2 > 0))>
<l3, l4, true>
<l4, l11, (main_y1 = main_y2)>
<l4, l5, not((main_y1 = main_y2))>
<l5, l6, (main_y1 > main_y2)>
<l5, l8, not((main_y1 > main_y2))>
<l6, l7, true, seq{main_y1 -> (main_y1 - main_y2)}>
<l7, l10, true>
<l8, l9, true, seq{main_y2 -> (main_y2 - main_y1)}>
<l9, l10, true>
<l10, l4, true>
<l11, l12, true>
<l12, l13, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
13, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [4 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 12, col: 1> | <line: 16, col: 7> <line: 17, col: 7>
main | function | [integer, ()] | <line: 14, col: 1>
y1 | local variable | integer | <line: 15, col: 5> | <line: 16, col: 2> <line: 18, col: 6> <line: 19, col: 13> <line: 20, col: 11> <line: 21, col: 8> <line: 21, col: 13> <line: 23, col: 18>
y2 | local variable | integer | <line: 15, col: 5> | <line: 17, col: 2> <line: 18, col: 16> <line: 19, col: 19> <line: 20, col: 16> <line: 21, col: 18> <line: 23, col: 8> <line: 23, col: 13>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (main_y1 = undef3) /\ (main_y2 = undef4) /\ (undef3 > 0) /\ (undef4 > 0)>
<l0, l13, (main_y1 = undef3) /\ (main_y2 = undef4) /\ (undef3 > 0) /\ not((undef4 > 0))>
<l0, l13, (main_y1 = undef3) /\ (main_y2 = undef4) /\ not((undef3 > 0))>
<l4, l13, (main_y1 = main_y2)>
<l4, l4, (main_y1 < main_y2) /\ not((main_y1 > main_y2)), par{main_y2 -> (main_y2 - main_y1)}>
<l4, l4, (main_y1 > main_y2) /\ (main_y1 > main_y2), par{main_y1 -> (main_y1 - main_y2)}>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
13, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, 1 + main_y1 <= main_y2, {main_y2 -> -main_y1 + main_y2, rest remain the same}>
<l4, l4, 1 + main_y2 <= main_y1, {main_y1 -> main_y1 - main_y2, rest remain the same}>
Variables:
main_y1, main_y2

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l4, 1 <= undef3 /\ 1 <= undef4 /\ main_y1 = undef3 /\ main_y2 = undef4, {all remain the same}>

Graph 2
<l0, l13, undef4 <= 0 /\ 1 <= undef3 /\ main_y1 = undef3 /\ main_y2 = undef4, {all remain the same}>
<l0, l13, undef3 <= 0 /\ main_y1 = undef3 /\ main_y2 = undef4, {all remain the same}>
<l4, l13, main_y1 = main_y2, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )
( 13 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002847

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000605s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002100s
[958 : 960]
[958 : 961]
Successful child: 960
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + main_y1 <= main_y2 /\ 1 <= main_y2 /\ 0 <= 1 + main_y1, {main_y2 -> -main_y1 + main_y2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + main_y2 <= main_y1 /\ 1 <= main_y2 /\ 0 <= 1 + main_y1, {main_y1 -> main_y1 - main_y2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + main_y1 <= main_y2 /\ 1 <= main_y2 /\ 0 <= 1 + main_y1, {main_y2 -> -main_y1 + main_y2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + main_y2 <= main_y1 /\ 1 <= main_y2 /\ 0 <= 1 + main_y1, {main_y1 -> main_y1 - main_y2, rest remain the same}>
[33mRanking function: [36m1 + main_y1[0m
New Graphs: 
Transitions:
<l4, l4, 1 + main_y1 <= main_y2 /\ 1 <= main_y2 /\ 0 <= 1 + main_y1, {main_y2 -> -main_y1 + main_y2, rest remain the same}>
Variables:
main_y1, main_y2
Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000526s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001716s
[958 : 966]
[958 : 968]
Successful child: 966
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + main_y1 <= main_y2 /\ 1 <= main_y1 /\ 1 <= main_y2, {main_y2 -> -main_y1 + main_y2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 <= main_y1 /\ 1 + main_y2 <= main_y1 /\ 1 <= main_y2, {main_y1 -> main_y1 - main_y2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 + main_y1 <= main_y2 /\ 1 <= main_y1 /\ 1 <= main_y2, {main_y2 -> -main_y1 + main_y2, rest remain the same}>
[33mRanking function: [36mmain_y2[0m
New Graphs: 
INVARIANTS: 
4: 1 <= main_y2 , 0 <= 1 + main_y1 , 
Quasi-INVARIANTS to narrow Graph: 
4: 
INVARIANTS: 
4: 1 <= main_y1 , 
Quasi-INVARIANTS to narrow Graph: 
4: 
Proving termination of subgraph 2
Analyzing SCC {l13}...
No cycles found.

[32mProgram Terminates[0m
