unknown

Initial ITS

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [5] : (y >= 0 /\ x >= 0), cost: 1
  13: [3] -> [4] : (y < 0 \/ x < 0), cost: 1
   3: [5] -> [6] : (-2+y-x > 0 \/ -2-y+x > 0), cost: 1
  11: [5] -> [12] : (-2+y-x <= 0 /\ -2-y+x <= 0), cost: 1
   4: [6] -> [8] : -y+x < 0, cost: 1
   7: [6] -> [10] : -y+x >= 0, cost: 1
  10: [7] -> [5] : T, cost: 1
   5: [8] -> [9] : x'=1+x, T, cost: 1
   6: [9] -> [7] : T, cost: 1
   8: [10] -> [11] : y'=1+y, T, cost: 1
   9: [11] -> [7] : T, cost: 1
  12: [12] -> [4] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x y
  14: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [5] : (y >= 0 /\ x >= 0), cost: 1
  13: [3] -> [4] : (y < 0 \/ x < 0), cost: 1
   3: [5] -> [6] : (-2+y-x > 0 \/ -2-y+x > 0), cost: 1
  15: [5] -> [4] : (-2+y-x <= 0 /\ -2-y+x <= 0), cost: 1
  18: [6] -> [7] : x'=1+x, -y+x < 0, cost: 1
  19: [6] -> [7] : y'=1+y, -y+x >= 0, cost: 1
  10: [7] -> [5] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [12] by chaining:

	Applied chaining

	First rule:
	[5] -> [12] : (-2+y-x <= 0 /\ -2-y+x <= 0), cost: 1
	Second rule:
	[12] -> [4] : T, cost: 1
	New rule:
	[5] -> [4] : (-2+y-x <= 0 /\ -2-y+x <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 11 12
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[6] -> [8] : -y+x < 0, cost: 1
	Second rule:
	[8] -> [9] : x'=1+x, T, cost: 1
	New rule:
	[6] -> [9] : x'=1+x, -y+x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[6] -> [10] : -y+x >= 0, cost: 1
	Second rule:
	[10] -> [11] : y'=1+y, T, cost: 1
	New rule:
	[6] -> [11] : y'=1+y, -y+x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 7 8
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[6] -> [9] : x'=1+x, -y+x < 0, cost: 1
	Second rule:
	[9] -> [7] : T, cost: 1
	New rule:
	[6] -> [7] : x'=1+x, -y+x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 16
	
	Eliminating location [11] by chaining:

	Applied chaining

	First rule:
	[6] -> [11] : y'=1+y, -y+x >= 0, cost: 1
	Second rule:
	[11] -> [7] : T, cost: 1
	New rule:
	[6] -> [7] : y'=1+y, -y+x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 17

Step with 14

	Trace

	14[T]
	
	Blocked

	[{}, {}]

Step with 2

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 15

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 15[(-2+y-x <= 0 /\ -2-y+x <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)]
	
	Blocked

	[{}, {}, {15[T]}]

Step with 3

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2-y+x > 0)]
	
	Blocked

	[{}, {}, {15[T]}, {}]

Step with 19

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2-y+x > 0)], 19[(-y+x >= 0)]
	
	Blocked

	[{}, {}, {15[T]}, {18[T]}, {}]

Step with 10

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2-y+x > 0)], 19[(-y+x >= 0)], 10[T]
	
	Blocked

	[{}, {}, {15[T]}, {18[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y
  14: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [5] : (y >= 0 /\ x >= 0), cost: 1
  13: [3] -> [4] : (y < 0 \/ x < 0), cost: 1
   3: [5] -> [6] : (-2+y-x > 0 \/ -2-y+x > 0), cost: 1
  15: [5] -> [4] : (-2+y-x <= 0 /\ -2-y+x <= 0), cost: 1
  20: [5] -> [5] : y'=n+y, (-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0), cost: 1
  18: [6] -> [7] : x'=1+x, -y+x < 0, cost: 1
  19: [6] -> [7] : y'=1+y, -y+x >= 0, cost: 1
  10: [7] -> [5] : T, cost: 1

	Loop Acceleration

	Original rule:
	[5] -> [5] : y'=1+y, (-2-y+x > 0 /\ -y+x >= 0), cost: 1
	New rule:
	[5] -> [5] : y'=n+y, (-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0), cost: 1

		-2-y+x > 0 [0]: montonic decrease yields -1-n-y+x > 0
		
		-2-y+x > 0 [1]: eventual increase yields (1 <= 0 /\ -2-y+x > 0)
		
		-y+x >= 0 [0]: monotonic increase yields -y+x >= 0, dependencies: -2-y+x > 0
		
		Replacement map: {-2-y+x > 0 -> -1-n-y+x > 0, -y+x >= 0 -> -y+x >= 0}

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 20[(-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0)]
	
	Blocked

	[{}, {}, {15[T]}, {20[T]}]

Step with 15

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 20[(-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0)], 15[(-2+y-x <= 0 /\ -2-y+x <= 0)]
	
	Blocked

	[{}, {}, {15[T]}, {20[T]}, {}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 20[(-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0)]
	
	Blocked

	[{}, {}, {15[T]}, {15[T], 20[T]}]

Step with 3

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 20[(-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0)], 3[(-2-y+x > 0)]
	
	Blocked

	[{}, {}, {15[T]}, {15[T], 20[T]}, {}]

Step with 19

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 20[(-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0)], 3[(-2-y+x > 0)], 19[(-y+x >= 0)]
	
	Blocked

	[{}, {}, {15[T]}, {15[T], 20[T]}, {}, {}]

Step with 10

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 20[(-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0)], 3[(-2-y+x > 0)], 19[(-y+x >= 0)], 10[T]
	
	Blocked

	[{}, {}, {15[T]}, {15[T], 20[T]}, {}, {}, {}]

Covered

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 20[(-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0)], 3[(-2-y+x > 0)], 19[(-y+x >= 0)]
	
	Blocked

	[{}, {}, {15[T]}, {15[T], 20[T]}, {}, {10[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 20[(-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0)], 3[(-2-y+x > 0)]
	
	Blocked

	[{}, {}, {15[T]}, {15[T], 20[T]}, {19[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 20[(-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0)]
	
	Blocked

	[{}, {}, {15[T]}, {3[-2-y+x > 0], 15[T], 20[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)]
	
	Blocked

	[{}, {}, {15[T], 20[T]}]

Step with 3

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2-y+x > 0)]
	
	Blocked

	[{}, {}, {15[T], 20[T]}, {}]

Step with 19

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2-y+x > 0)], 19[(-y+x >= 0)]
	
	Blocked

	[{}, {}, {15[T], 20[T]}, {}, {}]

Step with 10

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2-y+x > 0)], 19[(-y+x >= 0)], 10[T]
	
	Blocked

	[{}, {}, {15[T], 20[T]}, {}, {}, {}]

Covered

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2-y+x > 0)], 19[(-y+x >= 0)]
	
	Blocked

	[{}, {}, {15[T], 20[T]}, {}, {10[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2-y+x > 0)]
	
	Blocked

	[{}, {}, {15[T], 20[T]}, {19[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}]

Step with 3

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2+y-x > 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {}]

Step with 18

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2+y-x > 0)], 18[(-y+x < 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {19[T]}, {}]

Step with 10

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2+y-x > 0)], 18[(-y+x < 0)], 10[T]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {19[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y
  14: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [5] : (y >= 0 /\ x >= 0), cost: 1
  13: [3] -> [4] : (y < 0 \/ x < 0), cost: 1
   3: [5] -> [6] : (-2+y-x > 0 \/ -2-y+x > 0), cost: 1
  15: [5] -> [4] : (-2+y-x <= 0 /\ -2-y+x <= 0), cost: 1
  20: [5] -> [5] : y'=n+y, (-1+n >= 0 /\ -1-n-y+x > 0 /\ -y+x >= 0), cost: 1
  21: [5] -> [5] : x'=n2+x, (-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0), cost: 1
  18: [6] -> [7] : x'=1+x, -y+x < 0, cost: 1
  19: [6] -> [7] : y'=1+y, -y+x >= 0, cost: 1
  10: [7] -> [5] : T, cost: 1

	Loop Acceleration

	Original rule:
	[5] -> [5] : x'=1+x, (-2+y-x > 0 /\ -y+x < 0), cost: 1
	New rule:
	[5] -> [5] : x'=n2+x, (-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0), cost: 1

		-2+y-x > 0 [0]: montonic decrease yields -1-n2+y-x > 0
		
		-2+y-x > 0 [1]: eventual increase yields (-2+y-x > 0 /\ 1 <= 0)
		
		y-x > 0 [0]: monotonic increase yields y-x > 0, dependencies: -2+y-x > 0
		
		Replacement map: {-2+y-x > 0 -> -1-n2+y-x > 0, y-x > 0 -> y-x > 0}

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 21[(-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {21[T]}]

Step with 15

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 21[(-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0)], 15[(-2+y-x <= 0 /\ -2-y+x <= 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {21[T]}, {}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 21[(-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {15[T], 21[T]}]

Step with 3

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 21[(-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0)], 3[(-2+y-x > 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {15[T], 21[T]}, {}]

Step with 18

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 21[(-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0)], 3[(-2+y-x > 0)], 18[(-y+x < 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {15[T], 21[T]}, {}, {}]

Step with 10

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 21[(-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0)], 3[(-2+y-x > 0)], 18[(-y+x < 0)], 10[T]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {15[T], 21[T]}, {}, {}, {}]

Covered

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 21[(-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0)], 3[(-2+y-x > 0)], 18[(-y+x < 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {15[T], 21[T]}, {}, {10[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 21[(-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0)], 3[(-2+y-x > 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {15[T], 21[T]}, {18[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 21[(-1-n2+y-x > 0 /\ -1+n2 >= 0 /\ y-x > 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T]}, {3[-2+y-x > 0], 15[T], 21[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T], 21[T]}]

Step with 3

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2+y-x > 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T], 21[T]}, {}]

Step with 18

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2+y-x > 0)], 18[(-y+x < 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T], 21[T]}, {}, {}]

Step with 10

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2+y-x > 0)], 18[(-y+x < 0)], 10[T]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T], 21[T]}, {}, {}, {}]

Covered

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2+y-x > 0)], 18[(-y+x < 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T], 21[T]}, {}, {10[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)], 3[(-2+y-x > 0)]
	
	Blocked

	[{}, {}, {3[-2-y+x > 0], 15[T], 20[T], 21[T]}, {18[T]}]

Backtrack

	Trace

	14[T], 2[(y >= 0 /\ x >= 0)]
	
	Blocked

	[{}, {}, {3[(-2+y-x > 0 /\ -2-y+x > 0)], 15[T], 20[T], 21[T]}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {2[T]}]

Step with 13

	Trace

	14[T], 13[(x < 0)]
	
	Blocked

	[{}, {2[T]}, {}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {2[T], 13[x < 0]}]

Step with 13

	Trace

	14[T], 13[(y < 0)]
	
	Blocked

	[{}, {2[T], 13[x < 0]}, {}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {2[T], 13[(y < 0 /\ x < 0)]}]

Backtrack

	Trace

	Blocked

	[{14[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
