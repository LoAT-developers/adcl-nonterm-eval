unknown

Initial ITS

Start location: [1]
Program variables: c i j
   0: [1] -> [2] : c'=0, T, cost: 1
   1: [2] -> [3] : i'=0, T, cost: 1
   2: [3] -> [4] : -10+i < 0, cost: 1
  12: [3] -> [12] : -10+i >= 0, cost: 1
   3: [4] -> [5] : j'=3, T, cost: 1
   4: [5] -> [6] : -12+j < 0, cost: 1
   9: [5] -> [10] : -12+j >= 0, cost: 1
   5: [6] -> [7] : j'=-1+j, T, cost: 1
   6: [7] -> [8] : c'=1+c, T, cost: 1
   7: [8] -> [9] : j'=2+j, T, cost: 1
   8: [9] -> [5] : T, cost: 1
  10: [10] -> [11] : i'=1+i, T, cost: 1
  11: [11] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: c i j
  13: [1] -> [3] : c'=0, i'=0, T, cost: 1
  12: [3] -> [12] : -10+i >= 0, cost: 1
  14: [3] -> [5] : j'=3, -10+i < 0, cost: 1
  18: [5] -> [3] : i'=1+i, -12+j >= 0, cost: 1
  20: [5] -> [5] : c'=1+c, j'=1+j, -12+j < 0, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : c'=0, T, cost: 1
	Second rule:
	[2] -> [3] : i'=0, T, cost: 1
	New rule:
	[1] -> [3] : c'=0, i'=0, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : -10+i < 0, cost: 1
	Second rule:
	[4] -> [5] : j'=3, T, cost: 1
	New rule:
	[3] -> [5] : j'=3, -10+i < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[5] -> [6] : -12+j < 0, cost: 1
	Second rule:
	[6] -> [7] : j'=-1+j, T, cost: 1
	New rule:
	[5] -> [7] : j'=-1+j, -12+j < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[5] -> [10] : -12+j >= 0, cost: 1
	Second rule:
	[10] -> [11] : i'=1+i, T, cost: 1
	New rule:
	[5] -> [11] : i'=1+i, -12+j >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 10
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[5] -> [7] : j'=-1+j, -12+j < 0, cost: 1
	Second rule:
	[7] -> [8] : c'=1+c, T, cost: 1
	New rule:
	[5] -> [8] : c'=1+c, j'=-1+j, -12+j < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 15
	
	Eliminating location [11] by chaining:

	Applied chaining

	First rule:
	[5] -> [11] : i'=1+i, -12+j >= 0, cost: 1
	Second rule:
	[11] -> [3] : T, cost: 1
	New rule:
	[5] -> [3] : i'=1+i, -12+j >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 11 16
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[5] -> [8] : c'=1+c, j'=-1+j, -12+j < 0, cost: 1
	Second rule:
	[8] -> [9] : j'=2+j, T, cost: 1
	New rule:
	[5] -> [9] : c'=1+c, j'=1+j, -12+j < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 7 17
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[5] -> [9] : c'=1+c, j'=1+j, -12+j < 0, cost: 1
	Second rule:
	[9] -> [5] : T, cost: 1
	New rule:
	[5] -> [5] : c'=1+c, j'=1+j, -12+j < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 19

Step with 13

	Trace

	13[T]
	
	Blocked

	[{}, {}]

Step with 14

	Trace

	13[T], 14[(-10+i < 0)]
	
	Blocked

	[{}, {12[T]}, {}]

Step with 20

	Trace

	13[T], 14[(-10+i < 0)], 20[(-12+j < 0)]
	
	Blocked

	[{}, {12[T]}, {18[T]}, {}]

Accelerate

Start location: [1]
Program variables: c i j
  13: [1] -> [3] : c'=0, i'=0, T, cost: 1
  12: [3] -> [12] : -10+i >= 0, cost: 1
  14: [3] -> [5] : j'=3, -10+i < 0, cost: 1
  18: [5] -> [3] : i'=1+i, -12+j >= 0, cost: 1
  20: [5] -> [5] : c'=1+c, j'=1+j, -12+j < 0, cost: 1
  21: [5] -> [5] : c'=c+n, j'=j+n, (13-j-n > 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[5] -> [5] : c'=1+c, j'=1+j, (-12+j < 0), cost: 1
	New rule:
	[5] -> [5] : c'=c+n, j'=j+n, (13-j-n > 0 /\ -1+n >= 0), cost: 1

		12-j > 0 [0]: montonic decrease yields 13-j-n > 0
		
		12-j > 0 [1]: eventual increase yields (1 <= 0 /\ 12-j > 0)
		
		Replacement map: {12-j > 0 -> 13-j-n > 0}

	Trace

	13[T], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {12[T]}, {18[T]}, {20[T], 21[T]}]

Step with 18

	Trace

	13[T], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)], 18[(-12+j >= 0)]
	
	Blocked

	[{}, {12[T]}, {18[T]}, {20[T], 21[T]}, {}]

Accelerate

Start location: [1]
Program variables: c i j
  13: [1] -> [3] : c'=0, i'=0, T, cost: 1
  12: [3] -> [12] : -10+i >= 0, cost: 1
  14: [3] -> [5] : j'=3, -10+i < 0, cost: 1
  22: [3] -> [3] : c'=c+9*n2, i'=i+n2, j'=12, (11-i-n2 > 0 /\ -1+n2 >= 0), cost: 1
  18: [5] -> [3] : i'=1+i, -12+j >= 0, cost: 1
  20: [5] -> [5] : c'=1+c, j'=1+j, -12+j < 0, cost: 1
  21: [5] -> [5] : c'=c+n, j'=j+n, (13-j-n > 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : c'=9+c, i'=1+i, j'=12, -10+i < 0, cost: 1
	New rule:
	[3] -> [3] : c'=c+9*n2, i'=i+n2, j'=12, (11-i-n2 > 0 /\ -1+n2 >= 0), cost: 1

		10-i > 0 [0]: montonic decrease yields 11-i-n2 > 0
		
		10-i > 0 [1]: eventual increase yields (1 <= 0 /\ 10-i > 0)
		
		Replacement map: {10-i > 0 -> 11-i-n2 > 0}

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {12[T]}, {22[T]}]

Step with 12

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 12[(-10+i >= 0)]
	
	Blocked

	[{}, {12[T]}, {22[T]}, {}]

Backtrack

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}]

Step with 14

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 14[(-10+i < 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}, {}]

Step with 20

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 14[(-10+i < 0)], 20[(-12+j < 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}, {18[T]}, {}]

Covered

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 14[(-10+i < 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}, {18[T], 20[T]}]

Step with 21

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}, {18[T], 20[T]}, {21[T]}]

Step with 18

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)], 18[(-12+j >= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}, {18[T], 20[T]}, {21[T]}, {}]

Covered

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}, {18[T], 20[T]}, {18[T], 21[T]}]

Step with 20

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)], 20[(-12+j < 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}, {18[T], 20[T]}, {18[T], 21[T]}, {}]

Covered

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}, {18[T], 20[T]}, {18[T], 20[T], 21[T]}]

Backtrack

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)], 14[(-10+i < 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 22[T]}, {18[T], 20[T], 21[T]}]

Backtrack

	Trace

	13[T], 22[(11-i-n2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {12[T]}, {12[T], 14[T], 22[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {12[T], 22[T]}]

Step with 14

	Trace

	13[T], 14[(-10+i < 0)]
	
	Blocked

	[{}, {12[T], 22[T]}, {}]

Step with 20

	Trace

	13[T], 14[(-10+i < 0)], 20[(-12+j < 0)]
	
	Blocked

	[{}, {12[T], 22[T]}, {}, {}]

Covered

	Trace

	13[T], 14[(-10+i < 0)]
	
	Blocked

	[{}, {12[T], 22[T]}, {20[T]}]

Step with 21

	Trace

	13[T], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {12[T], 22[T]}, {20[T]}, {21[T]}]

Step with 18

	Trace

	13[T], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)], 18[(-12+j >= 0)]
	
	Blocked

	[{}, {12[T], 22[T]}, {20[T]}, {21[T]}, {}]

Covered

	Trace

	13[T], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {12[T], 22[T]}, {20[T]}, {18[T], 21[T]}]

Step with 20

	Trace

	13[T], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)], 20[(-12+j < 0)]
	
	Blocked

	[{}, {12[T], 22[T]}, {20[T]}, {18[T], 21[T]}, {}]

Covered

	Trace

	13[T], 14[(-10+i < 0)], 21[(13-j-n > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {12[T], 22[T]}, {20[T]}, {18[T], 20[T], 21[T]}]

Backtrack

	Trace

	13[T], 14[(-10+i < 0)]
	
	Blocked

	[{}, {12[T], 22[T]}, {20[T], 21[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {12[T], 14[T], 22[T]}]

Backtrack

	Trace

	Blocked

	[{13[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
