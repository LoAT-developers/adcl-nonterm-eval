NO

Initial ITS
Start location: l5
   0: l0 -> l1 : x^0'=x^post0, __disjvr_0^0'=__disjvr_0^post0, y^0'=y^post0, (y^0-y^post0 == 0 /\ __disjvr_0^0-__disjvr_0^post0 == 0 /\ x^0-x^post0 == 0), cost: 1
   1: l1 -> l3 : x^0'=x^post1, __disjvr_0^0'=__disjvr_0^post1, y^0'=y^post1, (y^0-y^post1 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ 1-x^0 <= 0 /\ x^0-x^post1 == 0), cost: 1
   2: l3 -> l4 : x^0'=x^post2, __disjvr_0^0'=__disjvr_0^post2, y^0'=y^post2, (y^0-y^post2 == 0 /\ x^0-x^post2 == 0 /\ __disjvr_0^post2-__disjvr_0^0 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0), cost: 1
   3: l4 -> l2 : x^0'=x^post3, __disjvr_0^0'=__disjvr_0^post3, y^0'=y^post3, (-__disjvr_0^post3+__disjvr_0^0 == 0 /\ -y^post3+y^0 == 0 /\ x^post3-x^0-y^0 == 0), cost: 1
   4: l2 -> l1 : x^0'=x^post4, __disjvr_0^0'=__disjvr_0^post4, y^0'=y^post4, (-__disjvr_0^post4+__disjvr_0^0 == 0 /\ -y^post4+y^0 == 0 /\ -x^post4+x^0 == 0), cost: 1
   5: l5 -> l0 : x^0'=x^post5, __disjvr_0^0'=__disjvr_0^post5, y^0'=y^post5, (-__disjvr_0^post5+__disjvr_0^0 == 0 /\ -y^post5+y^0 == 0 /\ -x^post5+x^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post0, __disjvr_0^0'=__disjvr_0^post0, y^0'=y^post0, (y^0-y^post0 == 0 /\ __disjvr_0^0-__disjvr_0^post0 == 0 /\ x^0-x^post0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : x^0'=x^post1, __disjvr_0^0'=__disjvr_0^post1, y^0'=y^post1, (y^0-y^post1 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ 1-x^0 <= 0 /\ x^0-x^post1 == 0), cost: 1
New rule:
l1 -> l3 : -1+x^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l4 : x^0'=x^post2, __disjvr_0^0'=__disjvr_0^post2, y^0'=y^post2, (y^0-y^post2 == 0 /\ x^0-x^post2 == 0 /\ __disjvr_0^post2-__disjvr_0^0 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0), cost: 1
New rule:
l3 -> l4 : 0 == 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l2 : x^0'=x^post3, __disjvr_0^0'=__disjvr_0^post3, y^0'=y^post3, (-__disjvr_0^post3+__disjvr_0^0 == 0 /\ -y^post3+y^0 == 0 /\ x^post3-x^0-y^0 == 0), cost: 1
New rule:
l4 -> l2 : x^0'=x^0+y^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l1 : x^0'=x^post4, __disjvr_0^0'=__disjvr_0^post4, y^0'=y^post4, (-__disjvr_0^post4+__disjvr_0^0 == 0 /\ -y^post4+y^0 == 0 /\ -x^post4+x^0 == 0), cost: 1
New rule:
l2 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l0 : x^0'=x^post5, __disjvr_0^0'=__disjvr_0^post5, y^0'=y^post5, (-__disjvr_0^post5+__disjvr_0^0 == 0 /\ -y^post5+y^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
New rule:
l5 -> l0 : TRUE, cost: 1

Simplified rules
Start location: l5
   6: l0 -> l1 : TRUE, cost: 1
   7: l1 -> l3 : -1+x^0 >= 0, cost: 1
   8: l3 -> l4 : 0 == 0, cost: 1
   9: l4 -> l2 : x^0'=x^0+y^0, TRUE, cost: 1
  10: l2 -> l1 : TRUE, cost: 1
  11: l5 -> l0 : TRUE, cost: 1


Eliminating location l0 by chaining:

Applied chaining
First rule:
l5 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l5 -> l1 : TRUE, cost: 2

Applied deletion
Removed the following rules: 6 11

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : -1+x^0 >= 0, cost: 1
Second rule:
l3 -> l4 : 0 == 0, cost: 1
New rule:
l1 -> l4 : (0 == 0 /\ -1+x^0 >= 0), cost: 2

Applied simplification
Original rule:
l1 -> l4 : (0 == 0 /\ -1+x^0 >= 0), cost: 2
New rule:
l1 -> l4 : -1+x^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 7 8

Eliminating location l4 by chaining:

Applied chaining
First rule:
l1 -> l4 : -1+x^0 >= 0, cost: 2
Second rule:
l4 -> l2 : x^0'=x^0+y^0, TRUE, cost: 1
New rule:
l1 -> l2 : x^0'=x^0+y^0, -1+x^0 >= 0, cost: 3

Applied deletion
Removed the following rules: 9 13

Eliminating location l2 by chaining:

Applied chaining
First rule:
l1 -> l2 : x^0'=x^0+y^0, -1+x^0 >= 0, cost: 3
Second rule:
l2 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : x^0'=x^0+y^0, -1+x^0 >= 0, cost: 4

Applied deletion
Removed the following rules: 10 14

Eliminated locations on linear paths
Start location: l5
  15: l1 -> l1 : x^0'=x^0+y^0, -1+x^0 >= 0, cost: 4
  12: l5 -> l1 : TRUE, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : x^0'=x^0+y^0, -1+x^0 >= 0, cost: 4
New rule:
l1 -> l1 : x^0'=x^0+y^0*n, (-1+x^0+(-1+n)*y^0 >= 0 /\ -1+x^0 >= 0 /\ n >= 0), cost: 4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_mmnLhA.txt

Applied nonterm
Original rule:
l1 -> l1 : x^0'=x^0+y^0, -1+x^0 >= 0, cost: 4
New rule:
l1 -> [6] : (-y^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_AMfHeb.txt

Applied simplification
Original rule:
l1 -> [6] : (-y^0 <= 0 /\ -1+x^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (-1+x^0 >= 0 /\ y^0 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 15

Accelerated simple loops
Start location: l5
  16: l1 -> l1 : x^0'=x^0+y^0*n, (-1+x^0+(-1+n)*y^0 >= 0 /\ -1+x^0 >= 0 /\ n >= 0), cost: 4*n
  18: l1 -> [6] : (-1+x^0 >= 0 /\ y^0 >= 0), cost: NONTERM
  12: l5 -> l1 : TRUE, cost: 2


Applied chaining
First rule:
l5 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : x^0'=x^0+y^0*n, (-1+x^0+(-1+n)*y^0 >= 0 /\ -1+x^0 >= 0 /\ n >= 0), cost: 4*n
New rule:
l5 -> l1 : x^0'=x^0+y^0*n, (-1+x^0+(-1+n)*y^0 >= 0 /\ -1+x^0 >= 0 /\ n >= 0), cost: 2+4*n

Applied chaining
First rule:
l5 -> l1 : TRUE, cost: 2
Second rule:
l1 -> [6] : (-1+x^0 >= 0 /\ y^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : (-1+x^0 >= 0 /\ y^0 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 16 18

Chained accelerated rules with incoming rules
Start location: l5
  12: l5 -> l1 : TRUE, cost: 2
  19: l5 -> l1 : x^0'=x^0+y^0*n, (-1+x^0+(-1+n)*y^0 >= 0 /\ -1+x^0 >= 0 /\ n >= 0), cost: 2+4*n
  20: l5 -> [6] : (-1+x^0 >= 0 /\ y^0 >= 0), cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: l5
  20: l5 -> [6] : (-1+x^0 >= 0 /\ y^0 >= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 20 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-1+x^0 >= 0 /\ y^0 >= 0)
