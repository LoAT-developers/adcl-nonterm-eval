WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -2-arg3P0+x40 == 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ arg1 > 0 /\ -1+arg1P0-arg1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
   1: f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ arg1 > 0 /\ -2-arg2+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ arg3 > 0 /\ -1-arg3P1+arg3 == 0), cost: 1
   2: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-1+arg3 < 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2-arg1 <= 0 /\ arg1P2-arg1 <= 0 /\ -1+arg2 > 0 /\ arg1P2-arg2 <= 0 /\ -1+arg1 > 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1
   3: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3-arg1 <= 0 /\ arg2 > 0 /\ -1+arg3 < 0 /\ -1+arg1P3-arg2 <= 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0 /\ -1+arg1 > 0), cost: 1
   4: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2+arg1P4 <= 0 /\ arg2 > 0 /\ -1+arg1P4 > 0 /\ -1+arg3 < 0 /\ -1+arg1 > 0 /\ arg1P4-arg1 <= 0 /\ arg2P4 > 0), cost: 1
   5: f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg2 > 0 /\ arg2P5 > 0 /\ -1+arg3 < 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg1 > 0), cost: 1
   6: f355_0_reverse_NULL -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg2 > 0 /\ arg3P6 > 0 /\ -arg2+arg2P6 <= 0 /\ arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg1 > 0 /\ arg2P6 > 0 /\ 1-arg2+arg4P6 <= 0 /\ 1-arg2+arg1P6 <= 0 /\ 1+arg4P6 > 0), cost: 1
   9: f370_0_reverse_FieldAccess -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg2P9 > 0 /\ -arg4+arg4P9 < 0 /\ -2+arg2 > 0 /\ -2+arg1P9 > 0 /\ arg3-arg3P9 == 0 /\ arg4 > 0 /\ -2-arg1+arg1P9 <= 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
  10: f370_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -2+arg2 > 0 /\ -x650+x660 < 0 /\ arg1 > 0 /\ -2+arg3P10 > 0 /\ x660 > 0 /\ 1+x650 > 0 /\ -2+arg3P10-arg1 <= 0 /\ arg2P10 > 0), cost: 1
  11: f370_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1 <= 0 /\ x740-x730 < 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ 1+x730 > 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ arg1P11-arg2 <= 0 /\ -2+arg1P11-arg1 <= 0), cost: 1
   7: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1 > 0 /\ arg2 > 0 /\ -arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ 1+arg2P7 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ 1-arg2+arg2P7 <= 0 /\ -arg4+arg2P7 <= 0), cost: 1
   8: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+arg1 > 0 /\ 1+arg2P8 > 0 /\ -3+arg1P8-arg1 <= 0 /\ arg2 > 0 /\ 1+arg2P8-arg3 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ arg3 > 0 /\ -2+arg1P8 > 0 /\ 1+arg4 > 0 /\ 1+arg2P8-arg2 <= 0), cost: 1
  12: __init -> f1_0_main_Load : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -2-arg3P0+x40 == 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ arg1 > 0 /\ -1+arg1P0-arg1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (arg2 > 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg1P0-arg1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ arg1 > 0 /\ -2-arg2+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ arg3 > 0 /\ -1-arg3P1+arg3 == 0), cost: 1
New rule:
f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=-1+arg3, (-arg1+arg1P1 <= 0 /\ -2-arg2+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-1+arg3 < 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2-arg1 <= 0 /\ arg1P2-arg1 <= 0 /\ -1+arg2 > 0 /\ arg1P2-arg2 <= 0 /\ -1+arg1 > 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1
New rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2-arg1 <= 0 /\ arg1P2-arg1 <= 0 /\ arg1P2-arg2 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1

Applied preprocessing
Original rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3-arg1 <= 0 /\ arg2 > 0 /\ -1+arg3 < 0 /\ -1+arg1P3-arg2 <= 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0 /\ -1+arg1 > 0), cost: 1
New rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3-arg1 <= 0 /\ 1-arg3 > 0 /\ -1+arg1P3-arg2 <= 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 1

Applied preprocessing
Original rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2+arg1P4 <= 0 /\ arg2 > 0 /\ -1+arg1P4 > 0 /\ -1+arg3 < 0 /\ -1+arg1 > 0 /\ arg1P4-arg1 <= 0 /\ arg2P4 > 0), cost: 1
New rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2+arg1P4 <= 0 /\ -1+arg1P4 > 0 /\ 1-arg3 > 0 /\ arg1P4-arg1 <= 0 /\ arg2P4 > 0), cost: 1

Applied preprocessing
Original rule:
f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg2 > 0 /\ arg2P5 > 0 /\ -1+arg3 < 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg1 > 0), cost: 1
New rule:
f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg2P5 > 0 /\ 1-arg3 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0), cost: 1

Applied preprocessing
Original rule:
f355_0_reverse_NULL -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg2 > 0 /\ arg3P6 > 0 /\ -arg2+arg2P6 <= 0 /\ arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg1 > 0 /\ arg2P6 > 0 /\ 1-arg2+arg4P6 <= 0 /\ 1-arg2+arg1P6 <= 0 /\ 1+arg4P6 > 0), cost: 1
New rule:
f355_0_reverse_NULL -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ -arg2+arg2P6 <= 0 /\ arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1-arg2+arg4P6 <= 0 /\ 1-arg2+arg1P6 <= 0 /\ 1+arg4P6 > 0), cost: 1

Applied preprocessing
Original rule:
f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1 > 0 /\ arg2 > 0 /\ -arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ 1+arg2P7 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ 1-arg2+arg2P7 <= 0 /\ -arg4+arg2P7 <= 0), cost: 1
New rule:
f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ 1+arg2P7 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ -arg4+arg2P7 <= 0), cost: 1

Applied preprocessing
Original rule:
f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+arg1 > 0 /\ 1+arg2P8 > 0 /\ -3+arg1P8-arg1 <= 0 /\ arg2 > 0 /\ 1+arg2P8-arg3 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ arg3 > 0 /\ -2+arg1P8 > 0 /\ 1+arg4 > 0 /\ 1+arg2P8-arg2 <= 0), cost: 1
New rule:
f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+arg2P8 > 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ 1+arg2P8-arg2 <= 0), cost: 1

Applied preprocessing
Original rule:
f370_0_reverse_FieldAccess -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg2P9 > 0 /\ -arg4+arg4P9 < 0 /\ -2+arg2 > 0 /\ -2+arg1P9 > 0 /\ arg3-arg3P9 == 0 /\ arg4 > 0 /\ -2-arg1+arg1P9 <= 0 /\ arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f370_0_reverse_FieldAccess -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, (arg4-arg4P9 > 0 /\ arg2P9 > 0 /\ -2+arg2 > 0 /\ -2+arg1P9 > 0 /\ arg4 > 0 /\ -2-arg1+arg1P9 <= 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f370_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -2+arg2 > 0 /\ -x650+x660 < 0 /\ arg1 > 0 /\ -2+arg3P10 > 0 /\ x660 > 0 /\ 1+x650 > 0 /\ -2+arg3P10-arg1 <= 0 /\ arg2P10 > 0), cost: 1
New rule:
f370_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -2+arg2 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1 <= 0 /\ arg2P10 > 0), cost: 1

Applied preprocessing
Original rule:
f370_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1 <= 0 /\ x740-x730 < 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ 1+x730 > 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ arg1P11-arg2 <= 0 /\ -2+arg1P11-arg1 <= 0), cost: 1
New rule:
f370_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg1P11-arg2 <= 0 /\ -2+arg1P11-arg1 <= 0), cost: 1

Simplified rules
Start location: __init
  13: f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (arg2 > 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg1P0-arg1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
  14: f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=-1+arg3, (-arg1+arg1P1 <= 0 /\ -2-arg2+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
  15: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2-arg1 <= 0 /\ arg1P2-arg1 <= 0 /\ arg1P2-arg2 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1
  16: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3-arg1 <= 0 /\ 1-arg3 > 0 /\ -1+arg1P3-arg2 <= 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 1
  17: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2+arg1P4 <= 0 /\ -1+arg1P4 > 0 /\ 1-arg3 > 0 /\ arg1P4-arg1 <= 0 /\ arg2P4 > 0), cost: 1
  18: f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg2P5 > 0 /\ 1-arg3 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0), cost: 1
  19: f355_0_reverse_NULL -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ -arg2+arg2P6 <= 0 /\ arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1-arg2+arg4P6 <= 0 /\ 1-arg2+arg1P6 <= 0 /\ 1+arg4P6 > 0), cost: 1
  22: f370_0_reverse_FieldAccess -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, (arg4-arg4P9 > 0 /\ arg2P9 > 0 /\ -2+arg2 > 0 /\ -2+arg1P9 > 0 /\ arg4 > 0 /\ -2-arg1+arg1P9 <= 0 /\ arg3 > 0), cost: 1
  23: f370_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -2+arg2 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1 <= 0 /\ arg2P10 > 0), cost: 1
  24: f370_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg1P11-arg2 <= 0 /\ -2+arg1P11-arg1 <= 0), cost: 1
  20: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ 1+arg2P7 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ -arg4+arg2P7 <= 0), cost: 1
  21: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+arg2P8 > 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ 1+arg2P8-arg2 <= 0), cost: 1
  12: __init -> f1_0_main_Load : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1


Applied acceleration
Original rule:
f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=-1+arg3, (-arg1+arg1P1 <= 0 /\ -2-arg2+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
New rule:
f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=-n+arg3, (1-n+arg3 > 0 /\ arg1-arg1P1 >= 0 /\ -1+n >= 0 /\ 2+arg2-arg2P1 >= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oGeCMk.txt

Applied instantiation
Original rule:
f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=-n+arg3, (1-n+arg3 > 0 /\ arg1-arg1P1 >= 0 /\ -1+n >= 0 /\ 2+arg2-arg2P1 >= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0), cost: n
New rule:
f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (1 > 0 /\ arg1-arg1P1 >= 0 /\ -1+arg3 >= 0 /\ 2+arg2-arg2P1 >= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0), cost: arg3

Applied simplification
Original rule:
f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (1 > 0 /\ arg1-arg1P1 >= 0 /\ -1+arg3 >= 0 /\ 2+arg2-arg2P1 >= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0), cost: arg3
New rule:
f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (arg1-arg1P1 >= 0 /\ -1+arg3 >= 0 /\ 2+arg2-arg2P1 >= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0), cost: arg3

Applied deletion
Removed the following rules: 14

Accelerated simple loops
Start location: __init
  13: f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (arg2 > 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg1P0-arg1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
  15: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2-arg1 <= 0 /\ arg1P2-arg1 <= 0 /\ arg1P2-arg2 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1
  16: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3-arg1 <= 0 /\ 1-arg3 > 0 /\ -1+arg1P3-arg2 <= 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 1
  17: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2+arg1P4 <= 0 /\ -1+arg1P4 > 0 /\ 1-arg3 > 0 /\ arg1P4-arg1 <= 0 /\ arg2P4 > 0), cost: 1
  18: f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg2P5 > 0 /\ 1-arg3 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0), cost: 1
  26: f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (arg1-arg1P1 >= 0 /\ -1+arg3 >= 0 /\ 2+arg2-arg2P1 >= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0), cost: arg3
  19: f355_0_reverse_NULL -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ -arg2+arg2P6 <= 0 /\ arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1-arg2+arg4P6 <= 0 /\ 1-arg2+arg1P6 <= 0 /\ 1+arg4P6 > 0), cost: 1
  22: f370_0_reverse_FieldAccess -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, (arg4-arg4P9 > 0 /\ arg2P9 > 0 /\ -2+arg2 > 0 /\ -2+arg1P9 > 0 /\ arg4 > 0 /\ -2-arg1+arg1P9 <= 0 /\ arg3 > 0), cost: 1
  23: f370_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -2+arg2 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1 <= 0 /\ arg2P10 > 0), cost: 1
  24: f370_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg1P11-arg2 <= 0 /\ -2+arg1P11-arg1 <= 0), cost: 1
  20: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ 1+arg2P7 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ -arg4+arg2P7 <= 0), cost: 1
  21: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+arg2P8 > 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ 1+arg2P8-arg2 <= 0), cost: 1
  12: __init -> f1_0_main_Load : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (arg2 > 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg1P0-arg1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
Second rule:
f172_0_createList_LE -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (arg1-arg1P1 >= 0 /\ -1+arg3 >= 0 /\ 2+arg2-arg2P1 >= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0), cost: arg3
New rule:
f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3+arg2P1-arg1 <= 0 /\ arg2 > 0 /\ -3+x40 >= 0 /\ -1-arg1+arg1P1 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ 1-arg1 <= 0), cost: -1+x40

Applied deletion
Removed the following rules: 26

Applied chaining
First rule:
f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg2P5 > 0 /\ 1-arg3 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0), cost: 1
Second rule:
f370_0_reverse_FieldAccess -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, (arg4-arg4P9 > 0 /\ arg2P9 > 0 /\ -2+arg2 > 0 /\ -2+arg1P9 > 0 /\ arg4 > 0 /\ -2-arg1+arg1P9 <= 0 /\ arg3 > 0), cost: 1
New rule:
f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P5, (-3-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 2

Applied deletion
Removed the following rules: 22

Chained accelerated rules with incoming rules
Start location: __init
  13: f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (arg2 > 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg1P0-arg1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
  27: f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3+arg2P1-arg1 <= 0 /\ arg2 > 0 /\ -3+x40 >= 0 /\ -1-arg1+arg1P1 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ 1-arg1 <= 0), cost: -1+x40
  15: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2-arg1 <= 0 /\ arg1P2-arg1 <= 0 /\ arg1P2-arg2 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1
  16: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3-arg1 <= 0 /\ 1-arg3 > 0 /\ -1+arg1P3-arg2 <= 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 1
  17: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2+arg1P4 <= 0 /\ -1+arg1P4 > 0 /\ 1-arg3 > 0 /\ arg1P4-arg1 <= 0 /\ arg2P4 > 0), cost: 1
  18: f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg2P5 > 0 /\ 1-arg3 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0), cost: 1
  28: f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P5, (-3-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 2
  19: f355_0_reverse_NULL -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ -arg2+arg2P6 <= 0 /\ arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1-arg2+arg4P6 <= 0 /\ 1-arg2+arg1P6 <= 0 /\ 1+arg4P6 > 0), cost: 1
  23: f370_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -2+arg2 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1 <= 0 /\ arg2P10 > 0), cost: 1
  24: f370_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg1P11-arg2 <= 0 /\ -2+arg1P11-arg1 <= 0), cost: 1
  20: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ 1+arg2P7 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ -arg4+arg2P7 <= 0), cost: 1
  21: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+arg2P8 > 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ 1+arg2P8-arg2 <= 0), cost: 1
  12: __init -> f1_0_main_Load : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (arg2 > 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg1P0-arg1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
New rule:
__init -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (-1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3+arg2P1-arg1 <= 0 /\ arg2 > 0 /\ -3+x40 >= 0 /\ -1-arg1+arg1P1 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ 1-arg1 <= 0), cost: -1+x40
New rule:
__init -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3-arg1P12+arg2P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: x40

Applied deletion
Removed the following rules: 12 13 27

Eliminating location f370_0_reverse_FieldAccess by chaining:

Applied chaining
First rule:
f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg2P5 > 0 /\ 1-arg3 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0), cost: 1
Second rule:
f370_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -2+arg2 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1 <= 0 /\ arg2P10 > 0), cost: 1
New rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ arg2P5 > 0 /\ 1-arg3 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -2+arg3P10 > 0 /\ -arg1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 2

Applied simplification
Original rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ arg2P5 > 0 /\ 1-arg3 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -2+arg3P10 > 0 /\ -arg1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 2
New rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ 1-arg3 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -2+arg3P10 > 0 /\ -arg1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 2

Applied chaining
First rule:
f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg2P5 > 0 /\ 1-arg3 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0), cost: 1
Second rule:
f370_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg1P11-arg2 <= 0 /\ -2+arg1P11-arg1 <= 0), cost: 1
New rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg2P5 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2

Applied simplification
Original rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg2P5 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2
New rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2

Applied chaining
First rule:
f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P5, (-3-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 2
Second rule:
f370_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -2+arg2 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1 <= 0 /\ arg2P10 > 0), cost: 1
New rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ -3-arg2+arg1P9 <= 0 /\ 1+arg1P10 > 0 /\ arg2P9 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ 1-arg2 <= 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3

Applied simplification
Original rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ -3-arg2+arg1P9 <= 0 /\ 1+arg1P10 > 0 /\ arg2P9 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ 1-arg2 <= 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3
New rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ -3-arg2+arg1P9 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ 1-arg2 <= 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3

Applied chaining
First rule:
f172_0_createList_LE -> f370_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P5, (-3-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 2
Second rule:
f370_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg1P11-arg2 <= 0 /\ -2+arg1P11-arg1 <= 0), cost: 1
New rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11 > 0 /\ -3-arg2+arg1P9 <= 0 /\ -2+arg1P11 > 0 /\ arg2P9 > 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2-arg1+arg1P9 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 3

Applied simplification
Original rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11 > 0 /\ -3-arg2+arg1P9 <= 0 /\ -2+arg1P11 > 0 /\ arg2P9 > 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2-arg1+arg1P9 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 3
New rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11 > 0 /\ -3-arg2+arg1P9 <= 0 /\ -2+arg1P11 > 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2-arg1+arg1P9 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 3

Applied deletion
Removed the following rules: 18 23 24 28

Eliminated locations on tree-shaped paths
Start location: __init
  15: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2-arg1 <= 0 /\ arg1P2-arg1 <= 0 /\ arg1P2-arg2 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1
  16: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3-arg1 <= 0 /\ 1-arg3 > 0 /\ -1+arg1P3-arg2 <= 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 1
  17: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2+arg1P4 <= 0 /\ -1+arg1P4 > 0 /\ 1-arg3 > 0 /\ arg1P4-arg1 <= 0 /\ arg2P4 > 0), cost: 1
  31: f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ 1-arg3 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -2+arg3P10 > 0 /\ -arg1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 2
  32: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2
  33: f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ -3-arg2+arg1P9 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ 1-arg2 <= 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3
  34: f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11 > 0 /\ -3-arg2+arg1P9 <= 0 /\ -2+arg1P11 > 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2-arg1+arg1P9 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 3
  19: f355_0_reverse_NULL -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ -arg2+arg2P6 <= 0 /\ arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1-arg2+arg4P6 <= 0 /\ 1-arg2+arg1P6 <= 0 /\ 1+arg4P6 > 0), cost: 1
  20: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ 1+arg2P7 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ -arg4+arg2P7 <= 0), cost: 1
  21: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+arg2P8 > 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ 1+arg2P8-arg2 <= 0), cost: 1
  29: __init -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (-1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0), cost: 2
  30: __init -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3-arg1P12+arg2P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: x40


Eliminating location f172_0_createList_LE by chaining:

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (-1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0), cost: 2
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2-arg1 <= 0 /\ arg1P2-arg1 <= 0 /\ arg1P2-arg2 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg2P0+arg2P2 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0 /\ arg1P2-arg1P0 <= 0), cost: 3

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg2P0+arg2P2 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0 /\ arg1P2-arg1P0 <= 0), cost: 3
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg2P0+arg2P2 <= 0 /\ 1+x40 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0 /\ arg1P2-arg1P0 <= 0), cost: 3

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (-1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0), cost: 2
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3-arg1 <= 0 /\ 1-arg3 > 0 /\ -1+arg1P3-arg2 <= 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 1
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ arg1P3-arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg1P3-arg2P0 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 3

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ arg1P3-arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg1P3-arg2P0 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 3
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ arg1P3-arg1P0 <= 0 /\ 1+x40 > 0 /\ -1+arg1P3-arg2P0 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 3

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (-1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0), cost: 2
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2+arg1P4 <= 0 /\ -1+arg1P4 > 0 /\ 1-arg3 > 0 /\ arg1P4-arg1 <= 0 /\ arg2P4 > 0), cost: 1
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2P0+arg1P4 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P4 > 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -arg1P0+arg1P4 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg2P4 > 0), cost: 3

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2P0+arg1P4 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P4 > 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -arg1P0+arg1P4 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg2P4 > 0), cost: 3
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2P0+arg1P4 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P4 > 0 /\ 1+x40 > 0 /\ -arg1P0+arg1P4 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg2P4 > 0), cost: 3

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (-1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0), cost: 2
Second rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ 1-arg3 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -2+arg3P10 > 0 /\ -arg1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 2
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1+arg1P0 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4

Applied simplification
Original rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1+arg1P0 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (-1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0), cost: 2
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 4

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 4
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 4

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (-1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0), cost: 2
Second rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ -3-arg2+arg1P9 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ 1-arg2 <= 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ 1-arg2P0 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5

Applied simplification
Original rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ 1-arg2P0 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=-2+x40, (-1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P0 > 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0), cost: 2
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11 > 0 /\ -3-arg2+arg1P9 <= 0 /\ -2+arg1P11 > 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2-arg1+arg1P9 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 3
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -3-arg2P0+arg1P9 <= 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ arg1P11-arg2P9 <= 0 /\ -1+arg1P0 > 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 1+x40 > 0 /\ 1-arg2P0 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ 2-arg1P0 <= 0), cost: 5

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -3-arg2P0+arg1P9 <= 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ arg1P11-arg2P9 <= 0 /\ -1+arg1P0 > 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 1+x40 > 0 /\ 1-arg2P0 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ 2-arg1P0 <= 0), cost: 5
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -3-arg2P0+arg1P9 <= 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ arg1P11-arg2P9 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ 2-arg1P0 <= 0), cost: 5

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3-arg1P12+arg2P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: x40
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2-arg1 <= 0 /\ arg1P2-arg1 <= 0 /\ arg1P2-arg2 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2-arg1P1 <= 0 /\ 1 > 0 /\ arg2P2-arg1P1 <= 0 /\ arg1P2-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -arg2P1+arg2P2 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1+x40

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2-arg1P1 <= 0 /\ 1 > 0 /\ arg2P2-arg1P1 <= 0 /\ arg1P2-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -arg2P1+arg2P2 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1+x40
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2-arg1P1 <= 0 /\ arg2P2-arg1P1 <= 0 /\ arg1P2-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -arg2P1+arg2P2 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1+x40

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3-arg1P12+arg2P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: x40
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3-arg1 <= 0 /\ 1-arg3 > 0 /\ -1+arg1P3-arg2 <= 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 1
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1 > 0 /\ -1+arg1P3-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P3-arg1P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: 1+x40

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1 > 0 /\ -1+arg1P3-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P3-arg1P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: 1+x40
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-1+arg1P3-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P3-arg1P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0), cost: 1+x40

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3-arg1P12+arg2P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: x40
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2+arg1P4 <= 0 /\ -1+arg1P4 > 0 /\ 1-arg3 > 0 /\ arg1P4-arg1 <= 0 /\ arg2P4 > 0), cost: 1
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1 > 0 /\ -1+arg1P4 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P4-arg1P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ -1+arg1P4-arg2P1 <= 0 /\ arg2P4 > 0), cost: 1+x40

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1 > 0 /\ -1+arg1P4 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P4-arg1P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ -1+arg1P4-arg2P1 <= 0 /\ arg2P4 > 0), cost: 1+x40
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1+arg1P4 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P4-arg1P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ -1+arg1P4-arg2P1 <= 0 /\ arg2P4 > 0), cost: 1+x40

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3-arg1P12+arg2P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: x40
Second rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ 1-arg3 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2+arg1P5 <= 0 /\ -2+arg3P10 > 0 /\ -arg1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 2
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1 > 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg2P5 > 0 /\ arg1P5-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg3P10 > 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ arg2P10 > 0), cost: 2+x40

Applied simplification
Original rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1 > 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg2P5 > 0 /\ arg1P5-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg3P10 > 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ arg2P10 > 0), cost: 2+x40
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg2P5 > 0 /\ arg1P5-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg3P10 > 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg2P10 > 0), cost: 2+x40

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3-arg1P12+arg2P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: x40
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2+arg1P5 <= 0 /\ -arg1+arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (1 > 0 /\ arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P5-arg1P1 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2+x40

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (1 > 0 /\ arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P5-arg1P1 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2+x40
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P5-arg1P1 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2+x40

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3-arg1P12+arg2P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: x40
Second rule:
f172_0_createList_LE -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ -3-arg2+arg1P9 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ -2-arg1+arg1P9 <= 0 /\ 2-arg1 <= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ 1-arg2 <= 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (2-arg1P1 <= 0 /\ -3-arg2P1+arg1P9 <= 0 /\ 1 > 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ 1-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40

Applied simplification
Original rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (2-arg1P1 <= 0 /\ -3-arg2P1+arg1P9 <= 0 /\ 1 > 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ 1-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40

Applied chaining
First rule:
__init -> f172_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=0, (-3-arg1P12+arg2P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0), cost: x40
Second rule:
f172_0_createList_LE -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11 > 0 /\ -3-arg2+arg1P9 <= 0 /\ -2+arg1P11 > 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ 1-arg3 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2-arg1+arg1P9 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 2-arg1 <= 0 /\ 1-arg2 <= 0 /\ arg3P5 > 0), cost: 3
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (2-arg1P1 <= 0 /\ -3-arg2P1+arg1P9 <= 0 /\ 1 > 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ 1-arg2P1 <= 0 /\ arg2P11-arg1P9 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ arg3P5 > 0), cost: 3+x40

Applied simplification
Original rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (2-arg1P1 <= 0 /\ -3-arg2P1+arg1P9 <= 0 /\ 1 > 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ 1-arg2P1 <= 0 /\ arg2P11-arg1P9 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ arg1P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ 1-arg1P12 <= 0 /\ arg3P5 > 0), cost: 3+x40
New rule:
__init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-3-arg2P1+arg1P9 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg2P11-arg1P9 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0), cost: 3+x40

Applied deletion
Removed the following rules: 15 16 17 29 30 31 32 33 34

Eliminated locations on tree-shaped paths
Start location: __init
  19: f355_0_reverse_NULL -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ -arg2+arg2P6 <= 0 /\ arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1-arg2+arg4P6 <= 0 /\ 1-arg2+arg1P6 <= 0 /\ 1+arg4P6 > 0), cost: 1
  20: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ 1+arg2P7 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ -arg4+arg2P7 <= 0), cost: 1
  21: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+arg2P8 > 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ 1+arg2P8-arg2 <= 0), cost: 1
  35: __init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg2P0+arg2P2 <= 0 /\ 1+x40 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0 /\ arg1P2-arg1P0 <= 0), cost: 3
  36: __init -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ arg1P3-arg1P0 <= 0 /\ 1+x40 > 0 /\ -1+arg1P3-arg2P0 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 3
  37: __init -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1-arg2P0+arg1P4 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -1+arg1P4 > 0 /\ 1+x40 > 0 /\ -arg1P0+arg1P4 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg2P4 > 0), cost: 3
  38: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
  39: __init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 4
  40: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
  41: __init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -3-arg2P0+arg1P9 <= 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ arg1P11-arg2P9 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ 2-arg1P0 <= 0), cost: 5
  42: __init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2-arg1P1 <= 0 /\ arg2P2-arg1P1 <= 0 /\ arg1P2-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -arg2P1+arg2P2 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1+x40
  43: __init -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-1+arg1P3-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P3-arg1P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0), cost: 1+x40
  44: __init -> f355_0_reverse_NULL : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1+arg1P4 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P4-arg1P1 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ -1+arg1P4-arg2P1 <= 0 /\ arg2P4 > 0), cost: 1+x40
  45: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg2P5 > 0 /\ arg1P5-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg3P10 > 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg2P10 > 0), cost: 2+x40
  46: __init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ arg1P5-arg1P1 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 2+x40
  47: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40
  48: __init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-3-arg2P1+arg1P9 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ arg2P11-arg1P9 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ arg1P11-arg2P9 <= 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0), cost: 3+x40


Applied pruning (of leafs and parallel rules):
Start location: __init
  19: f355_0_reverse_NULL -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ -arg2+arg2P6 <= 0 /\ arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1-arg2+arg4P6 <= 0 /\ 1-arg2+arg1P6 <= 0 /\ 1+arg4P6 > 0), cost: 1
  20: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ 1+arg2P7 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ -arg4+arg2P7 <= 0), cost: 1
  21: f385_0_reverse_FieldAccess -> f355_0_reverse_NULL : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+arg2P8 > 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ 1+arg2P8-arg2 <= 0), cost: 1
  35: __init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg2P0+arg2P2 <= 0 /\ 1+x40 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0 /\ arg1P2-arg1P0 <= 0), cost: 3
  36: __init -> f355_0_reverse_NULL : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ arg1P3-arg1P0 <= 0 /\ 1+x40 > 0 /\ -1+arg1P3-arg2P0 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ 1+arg2P3 > 0), cost: 3
  38: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
  39: __init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0), cost: 4
  40: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
  41: __init -> f355_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11 > 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -3-arg2P0+arg1P9 <= 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ arg1P11-arg2P9 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 1+x40 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ 2-arg1P0 <= 0), cost: 5
  42: __init -> f355_0_reverse_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2-arg1P1 <= 0 /\ arg2P2-arg1P1 <= 0 /\ arg1P2-arg2P1 <= 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -arg2P1+arg2P2 <= 0 /\ -3+x40 >= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ -1+arg2P2 > 0 /\ -1+arg1P2 > 0), cost: 1+x40
  45: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg2P5 > 0 /\ arg1P5-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg3P10 > 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg2P10 > 0), cost: 2+x40
  47: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40


Eliminated location f355_0_reverse_NULL
Start location: __init
  49: f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P7+arg4P6 <= 0 /\ arg3P6 > 0 /\ arg2P6-arg2P7 <= 0 /\ 1-arg2P7+arg1P6 <= 0 /\ -arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ -arg1P7+arg3P6 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ 1+arg4P6 > 0 /\ -arg4+arg2P7 <= 0), cost: 2
  50: f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P8+arg4P6 <= 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg3P6 > 0 /\ arg3P6-arg1P8 <= 0 /\ 1-arg2P8+arg1P6 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ -arg2P8+arg2P6 <= 0 /\ 1+arg2P8-arg2 <= 0 /\ 1+arg4P6 > 0), cost: 2
  38: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
  40: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
  45: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg2P5 > 0 /\ arg1P5-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg3P10 > 0 /\ arg2P12 > 0 /\ -1-arg2P1+arg1P5 <= 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -2+arg2P1 > 0 /\ -1+arg1P5 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg2P10 > 0), cost: 2+x40
  47: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40
  51: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P2+arg4P6 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P2+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P0+arg2P2 <= 0 /\ 1-arg2P2+arg1P6 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -arg2P2+arg2P6 <= 0 /\ -1+arg1P2 > 0 /\ 1+arg4P6 > 0 /\ arg1P2-arg1P0 <= 0), cost: 4
  52: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P3+arg4P6 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ arg3P6 > 0 /\ arg2P6-arg2P3 <= 0 /\ 1-arg2P3+arg1P6 <= 0 /\ arg1P3-arg1P0 <= 0 /\ 1+x40 > 0 /\ -1+arg1P3-arg2P0 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P3 > 0 /\ -arg1P3+arg3P6 <= 0 /\ 1+arg4P6 > 0), cost: 4
  53: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P11+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P11+arg2P6 <= 0 /\ 1-arg2P11+arg4P6 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0 /\ 1+arg4P6 > 0 /\ 1-arg2P11+arg1P6 <= 0), cost: 5
  54: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P11+arg3P6 <= 0 /\ -3-arg2P0+arg1P9 <= 0 /\ arg3P6 > 0 /\ arg2P11-arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ arg1P11-arg2P9 <= 0 /\ -arg2P11+arg2P6 <= 0 /\ 1-arg2P11+arg4P6 <= 0 /\ -2+arg1P11-arg1P9 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ 1+arg4P6 > 0 /\ 2-arg1P0 <= 0 /\ 1-arg2P11+arg1P6 <= 0), cost: 6
  55: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P2+arg4P6 <= 0 /\ arg1P2-arg1P1 <= 0 /\ arg2P2-arg1P1 <= 0 /\ arg1P2-arg2P1 <= 0 /\ -arg1P2+arg3P6 <= 0 /\ arg3P6 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -arg2P1+arg2P2 <= 0 /\ 1-arg2P2+arg1P6 <= 0 /\ 1+arg1P6 > 0 /\ -3+x40 >= 0 /\ arg2P6 > 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ -1+arg2P2 > 0 /\ -arg2P2+arg2P6 <= 0 /\ -1+arg1P2 > 0 /\ 1+arg4P6 > 0), cost: 2+x40


Applied pruning (of leafs and parallel rules):
Start location: __init
  49: f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P7+arg4P6 <= 0 /\ arg3P6 > 0 /\ arg2P6-arg2P7 <= 0 /\ 1-arg2P7+arg1P6 <= 0 /\ -arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ -arg1P7+arg3P6 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ 1+arg4P6 > 0 /\ -arg4+arg2P7 <= 0), cost: 2
  50: f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P8+arg4P6 <= 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg3P6 > 0 /\ arg3P6-arg1P8 <= 0 /\ 1-arg2P8+arg1P6 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ -arg2P8+arg2P6 <= 0 /\ 1+arg2P8-arg2 <= 0 /\ 1+arg4P6 > 0), cost: 2
  38: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
  40: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
  47: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40
  51: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P2+arg4P6 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P2+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P0+arg2P2 <= 0 /\ 1-arg2P2+arg1P6 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -arg2P2+arg2P6 <= 0 /\ -1+arg1P2 > 0 /\ 1+arg4P6 > 0 /\ arg1P2-arg1P0 <= 0), cost: 4
  53: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P11+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P11+arg2P6 <= 0 /\ 1-arg2P11+arg4P6 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0 /\ 1+arg4P6 > 0 /\ 1-arg2P11+arg1P6 <= 0), cost: 5


Applied simplification
Original rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P7+arg4P6 <= 0 /\ arg3P6 > 0 /\ arg2P6-arg2P7 <= 0 /\ 1-arg2P7+arg1P6 <= 0 /\ -arg1+arg2P7 <= 0 /\ -2+arg1P7 > 0 /\ -arg1P7+arg3P6 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg3 > 0 /\ 1-arg2+arg2P7 <= 0 /\ 1+arg4P6 > 0 /\ -arg4+arg2P7 <= 0), cost: 2
New rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg1+arg4P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ arg3 > 0 /\ 2-arg2+arg4P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2

Applied simplification
Original rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P8+arg4P6 <= 0 /\ -3+arg1P8-arg1 <= 0 /\ 1+arg2P8-arg3 <= 0 /\ arg3P6 > 0 /\ arg3P6-arg1P8 <= 0 /\ 1-arg2P8+arg1P6 <= 0 /\ arg2P8-arg4 <= 0 /\ -2-arg2+arg1P8 <= 0 /\ -2+arg1P8-arg3 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg2P8-arg1 <= 0 /\ -3-arg4+arg1P8 <= 0 /\ -2+arg1P8 > 0 /\ -arg2P8+arg2P6 <= 0 /\ 1+arg2P8-arg2 <= 0 /\ 1+arg4P6 > 0), cost: 2
New rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg3P6-arg3 <= 0 /\ 1-arg1+arg4P6 <= 0 /\ 2-arg3+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 2-arg3+arg4P6 <= 0 /\ 1+arg2P6-arg3 <= 0 /\ -3+arg3P6-arg4 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ -3+arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ 2-arg2+arg4P6 <= 0 /\ -2-arg2+arg3P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2

Simplified simple loops
Start location: __init
  56: f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg1+arg4P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ arg3 > 0 /\ 2-arg2+arg4P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
  57: f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg3P6-arg3 <= 0 /\ 1-arg1+arg4P6 <= 0 /\ 2-arg3+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 2-arg3+arg4P6 <= 0 /\ 1+arg2P6-arg3 <= 0 /\ -3+arg3P6-arg4 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ -3+arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ 2-arg2+arg4P6 <= 0 /\ -2-arg2+arg3P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
  38: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
  40: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
  47: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40
  51: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P2+arg4P6 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P2+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P0+arg2P2 <= 0 /\ 1-arg2P2+arg1P6 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -arg2P2+arg2P6 <= 0 /\ -1+arg1P2 > 0 /\ 1+arg4P6 > 0 /\ arg1P2-arg1P0 <= 0), cost: 4
  53: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P11+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P11+arg2P6 <= 0 /\ 1-arg2P11+arg4P6 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0 /\ 1+arg4P6 > 0 /\ 1-arg2P11+arg1P6 <= 0), cost: 5


Accelerated simple loops
Start location: __init
  56: f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg1+arg4P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ arg3 > 0 /\ 2-arg2+arg4P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
  57: f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg3P6-arg3 <= 0 /\ 1-arg1+arg4P6 <= 0 /\ 2-arg3+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 2-arg3+arg4P6 <= 0 /\ 1+arg2P6-arg3 <= 0 /\ -3+arg3P6-arg4 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ -3+arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ 2-arg2+arg4P6 <= 0 /\ -2-arg2+arg3P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
  38: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
  40: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
  47: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40
  51: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P2+arg4P6 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P2+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P0+arg2P2 <= 0 /\ 1-arg2P2+arg1P6 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -arg2P2+arg2P6 <= 0 /\ -1+arg1P2 > 0 /\ 1+arg4P6 > 0 /\ arg1P2-arg1P0 <= 0), cost: 4
  53: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P11+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P11+arg2P6 <= 0 /\ 1-arg2P11+arg4P6 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0 /\ 1+arg4P6 > 0 /\ 1-arg2P11+arg1P6 <= 0), cost: 5


Applied chaining
First rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
Second rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg1+arg4P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ arg3 > 0 /\ 2-arg2+arg4P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1+arg4P6 > 0), cost: 6

Applied chaining
First rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
Second rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg1+arg4P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ arg3 > 0 /\ 2-arg2+arg4P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1+arg4P6 > 0), cost: 7

Applied chaining
First rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40
Second rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg1+arg4P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ arg3 > 0 /\ 2-arg2+arg4P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ 1+arg1P6 > 0 /\ -3+x40 >= 0 /\ arg2P6 > 0 /\ 1+arg4P6 > 0), cost: 5+x40

Applied chaining
First rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
Second rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg3P6-arg3 <= 0 /\ 1-arg1+arg4P6 <= 0 /\ 2-arg3+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 2-arg3+arg4P6 <= 0 /\ 1+arg2P6-arg3 <= 0 /\ -3+arg3P6-arg4 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ -3+arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ 2-arg2+arg4P6 <= 0 /\ -2-arg2+arg3P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1+arg4P6 > 0), cost: 6

Applied chaining
First rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
Second rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg3P6-arg3 <= 0 /\ 1-arg1+arg4P6 <= 0 /\ 2-arg3+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 2-arg3+arg4P6 <= 0 /\ 1+arg2P6-arg3 <= 0 /\ -3+arg3P6-arg4 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ -3+arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ 2-arg2+arg4P6 <= 0 /\ -2-arg2+arg3P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1+arg4P6 > 0), cost: 7

Applied chaining
First rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40
Second rule:
f385_0_reverse_FieldAccess -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg3P6-arg3 <= 0 /\ 1-arg1+arg4P6 <= 0 /\ 2-arg3+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ arg3P6 > 0 /\ -arg4+arg2P6 <= 0 /\ 2-arg3+arg4P6 <= 0 /\ 1+arg2P6-arg3 <= 0 /\ -3+arg3P6-arg4 <= 0 /\ 1-arg1+arg1P6 <= 0 /\ -3+arg3P6-arg1 <= 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 2-arg2+arg1P6 <= 0 /\ 1-arg4+arg4P6 <= 0 /\ 1-arg4+arg1P6 <= 0 /\ 2-arg2+arg4P6 <= 0 /\ -2-arg2+arg3P6 <= 0 /\ -arg1+arg2P6 <= 0 /\ 1+arg4P6 > 0), cost: 2
New rule:
__init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ 1+arg1P6 > 0 /\ -3+x40 >= 0 /\ arg2P6 > 0 /\ 1+arg4P6 > 0), cost: 5+x40

Applied deletion
Removed the following rules: 56 57

Chained accelerated rules with incoming rules
Start location: __init
  38: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -2+arg2P5 > 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ -2+arg3P10 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -2+arg3P10-arg1P5 <= 0 /\ -1+arg1P5 > 0 /\ arg2P10 > 0), cost: 4
  40: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ 1+arg4P10 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ 1+arg1P10 > 0 /\ -3-arg2P0+arg1P9 <= 0 /\ -2+arg1P9 > 0 /\ -2-arg1P0+arg1P9 <= 0 /\ 1+x40 > 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ arg3P5 > 0 /\ arg2P10 > 0 /\ 2-arg1P0 <= 0), cost: 5
  47: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-3-arg2P1+arg1P9 <= 0 /\ 1+arg4P10 > 0 /\ 1+arg1P10 > 0 /\ -3-arg1P12+arg2P1 <= 0 /\ -2+arg1P9 > 0 /\ -2+arg1P1 >= 0 /\ -2+arg1P9-arg1P1 <= 0 /\ -3+x40 >= 0 /\ -2+arg2P9 > 0 /\ -2+arg3P10 > 0 /\ -2+arg3P10-arg1P9 <= 0 /\ arg2P12 > 0 /\ -2+arg2P1 > 0 /\ -1-arg1P12+arg1P1 <= 0 /\ arg3P5 > 0 /\ arg2P10 > 0), cost: 3+x40
  51: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1-arg2P2+arg4P6 <= 0 /\ 3-x40 > 0 /\ -1-arg1P12+arg2P0 <= 0 /\ -arg1P0+arg2P2 <= 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P2+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P0+arg2P2 <= 0 /\ 1-arg2P2+arg1P6 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ arg2P12 > 0 /\ arg1P2-arg2P0 <= 0 /\ -1+arg2P2 > 0 /\ -arg2P2+arg2P6 <= 0 /\ -1+arg1P2 > 0 /\ 1+arg4P6 > 0 /\ arg1P2-arg1P0 <= 0), cost: 4
  53: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x40 > 0 /\ -arg1P0+arg1P5 <= 0 /\ -1-arg1P12+arg2P0 <= 0 /\ arg2P11-arg1P5 <= 0 /\ -2+arg1P11 > 0 /\ -1-arg1P12+arg1P0 <= 0 /\ -arg1P11+arg3P6 <= 0 /\ arg3P6 > 0 /\ -arg2P11+arg2P6 <= 0 /\ 1-arg2P11+arg4P6 <= 0 /\ arg1P11-arg2P5 <= 0 /\ -1-arg2P0+arg1P5 <= 0 /\ 1+x40 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ -1+arg2P0 > 0 /\ arg2P12 > 0 /\ -1+arg1P5 > 0 /\ -2+arg1P11-arg1P5 <= 0 /\ 1+arg4P6 > 0 /\ 1-arg2P11+arg1P6 <= 0), cost: 5
  58: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1+arg4P6 > 0), cost: 6
  59: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ 1+arg1P6 > 0 /\ arg2P6 > 0 /\ 1+arg4P6 > 0), cost: 7
  60: __init -> f385_0_reverse_FieldAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (arg3P6 > 0 /\ 1+arg1P6 > 0 /\ -3+x40 >= 0 /\ arg2P6 > 0 /\ 1+arg4P6 > 0), cost: 5+x40


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

