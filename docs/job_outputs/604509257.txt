NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2, arg2 -> undef2}>
<l2, l2, (arg1 > 4), par{arg2 -> undef4}>
<l2, l2, (arg1 > 0) /\ (arg1 < 5), par{arg1 -> (arg1 - 1), arg2 -> undef6}>
<l3, l1, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef2, undef4, undef6, undef7, undef8, 

Undef variables:
undef2, undef4, undef6, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef8) /\ (undef7 > 0) /\ (undef8 > ~(1))>
<l2, l2, (arg1 > 4)>
<l2, l2, (arg1 > 0) /\ (arg1 < 5), par{arg1 -> (arg1 - 1)}>

Fresh variables:
undef2, undef4, undef6, undef7, undef8, 

Undef variables:
undef2, undef4, undef6, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 5 <= arg1, {all remain the same}>
<l2, l2, 1 <= arg1 /\ arg1 <= 4, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.00269

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000524s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Transitions:
<l2, l2, 5 <= arg1, {all remain the same}>
Variables:
arg1
> No variable changes in termination graph.
Checking conditional unfeasibility...
Calling Safety with literal arg1 <= 4 and entry <l2, l2, true, {all remain the same}>

LOG: CALL check - Post:arg1 <= 4 - Process 1
* Exit transition: <l2, l2, true, {all remain the same}>
* Postcondition  : arg1 <= 4
Quasi-invariants: 
Location 2: arg1 <= 4 ; 
Postcondition: arg1 <= 4

LOG: CALL check - Post:arg1 <= 4 - Process 2
* Exit transition: <l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>
* Postcondition  : arg1 <= 4

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000307s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000366s

LOG: NarrowEntry size 1
Narrowing transition: 
<l2, l2, 5 <= arg1, {all remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ arg1 <= 4, {arg1 -> -1 + arg1, rest remain the same}>
ENTRIES:
<l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ 5 <= arg1 /\ arg1 = undef8, {all remain the same}>
END ENTRIES:
GRAPH:
<l2, l2, 5 <= arg1, {all remain the same}>
END GRAPH:
EXIT: <l2, l2, true, {all remain the same}>
POST: arg1 <= 4


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006198s
Time used: 0.006109
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001119s
Time used: 4.00099
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.011380s
Time used: 1.00029

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 5.022643s

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 5 <= arg1, {all remain the same}>
<l2, l2, 1 <= arg1 /\ arg1 <= 4, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg1 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009535s
Time used: 0.009427
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.002731s
Time used: 0.002729

LOG: SAT solveNonLinear - Elapsed time: 0.012266s
Cost: 1; Total time: 0.012156
[31mFailed at location 2: 5 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: 5 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000811s
Remaining time after improvement: 0.999618
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 5 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 5 <= arg1, {all remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ arg1 <= 4, {arg1 -> -1 + arg1, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 5 <= arg1, 
OPEN EXITS: 
<l2, end, 5 <= arg1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>
Conditions: 5 <= arg1, 
OPEN EXITS: 
<l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ 5 <= arg1 /\ arg1 = undef8, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
