WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   1: f152_0_gcd_EQ -> f198_0_mod_LE : arg2'=arg2P1, arg1'=arg1P1, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 > 0 /\ arg1-arg1P1 == 0 /\ arg2-arg2P1 == 0), cost: 1
   2: f152_0_gcd_EQ -> f198_0_mod_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 < 0 /\ arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0), cost: 1
   4: f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg2P4, arg1'=arg1P4, (arg1-arg1P4 == 0 /\ -arg2+arg1 == 0 /\ arg1 > 0 /\ -arg2P4 == 0), cost: 1
   3: f198_0_mod_LE -> f198_0_mod_LE : arg2'=arg2P3, arg1'=arg1P3, (arg2 > 0 /\ arg2-arg1 < 0 /\ -arg2-arg1P3+arg1 == 0 /\ arg1 > 0 /\ arg2-arg2P3 == 0), cost: 1
   5: f198_0_mod_LE -> f152_0_gcd_EQ : arg2'=arg2P5, arg1'=arg1P5, (arg2-arg1P5 == 0 /\ -arg2P5+arg1 == 0 /\ -arg2+arg1 < 0), cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied preprocessing
Original rule:
f152_0_gcd_EQ -> f198_0_mod_LE : arg2'=arg2P1, arg1'=arg1P1, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 > 0 /\ arg1-arg1P1 == 0 /\ arg2-arg2P1 == 0), cost: 1
New rule:
f152_0_gcd_EQ -> f198_0_mod_LE : (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f152_0_gcd_EQ -> f198_0_mod_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1 > 0 /\ arg2 > 0 /\ arg2-arg1 < 0 /\ arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0), cost: 1
New rule:
f152_0_gcd_EQ -> f198_0_mod_LE : (arg2 > 0 /\ -arg2+arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f198_0_mod_LE -> f198_0_mod_LE : arg2'=arg2P3, arg1'=arg1P3, (arg2 > 0 /\ arg2-arg1 < 0 /\ -arg2-arg1P3+arg1 == 0 /\ arg1 > 0 /\ arg2-arg2P3 == 0), cost: 1
New rule:
f198_0_mod_LE -> f198_0_mod_LE : arg1'=-arg2+arg1, (arg2 > 0 /\ -arg2+arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg2P4, arg1'=arg1P4, (arg1-arg1P4 == 0 /\ -arg2+arg1 == 0 /\ arg1 > 0 /\ -arg2P4 == 0), cost: 1
New rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=0, (-arg2+arg1 == 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f198_0_mod_LE -> f152_0_gcd_EQ : arg2'=arg2P5, arg1'=arg1P5, (arg2-arg1P5 == 0 /\ -arg2P5+arg1 == 0 /\ -arg2+arg1 < 0), cost: 1
New rule:
f198_0_mod_LE -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, arg2-arg1 > 0, cost: 1

Simplified rules
Start location: __init
   0: f1_0_main_Load -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   7: f152_0_gcd_EQ -> f198_0_mod_LE : (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 1
   8: f152_0_gcd_EQ -> f198_0_mod_LE : (arg2 > 0 /\ -arg2+arg1 > 0), cost: 1
  10: f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=0, (-arg2+arg1 == 0 /\ arg1 > 0), cost: 1
   9: f198_0_mod_LE -> f198_0_mod_LE : arg1'=-arg2+arg1, (arg2 > 0 /\ -arg2+arg1 > 0), cost: 1
  11: f198_0_mod_LE -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, arg2-arg1 > 0, cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied acceleration
Original rule:
f198_0_mod_LE -> f198_0_mod_LE : arg1'=-arg2+arg1, (arg2 > 0 /\ -arg2+arg1 > 0), cost: 1
New rule:
f198_0_mod_LE -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_EnpChA.txt

Applied deletion
Removed the following rules: 9

Accelerated simple loops
Start location: __init
   0: f1_0_main_Load -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   7: f152_0_gcd_EQ -> f198_0_mod_LE : (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 1
   8: f152_0_gcd_EQ -> f198_0_mod_LE : (arg2 > 0 /\ -arg2+arg1 > 0), cost: 1
  10: f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=0, (-arg2+arg1 == 0 /\ arg1 > 0), cost: 1
  11: f198_0_mod_LE -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, arg2-arg1 > 0, cost: 1
  12: f198_0_mod_LE -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0), cost: n0
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
Second rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=0, (-arg2+arg1 == 0 /\ arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f152_0_gcd_EQ : arg2'=0, arg1'=arg2P0, (arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 2

Applied deletion
Removed the following rules: 10

Applied chaining
First rule:
f152_0_gcd_EQ -> f198_0_mod_LE : (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 1
Second rule:
f198_0_mod_LE -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0), cost: n0
New rule:
f152_0_gcd_EQ -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ arg2-arg1 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0), cost: 1+n0

Applied chaining
First rule:
f152_0_gcd_EQ -> f198_0_mod_LE : (arg2 > 0 /\ -arg2+arg1 > 0), cost: 1
Second rule:
f198_0_mod_LE -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0), cost: n0
New rule:
f152_0_gcd_EQ -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ -arg2+arg1 > 0 /\ n0 >= 0), cost: 1+n0

Applied deletion
Removed the following rules: 12

Chained accelerated rules with incoming rules
Start location: __init
   0: f1_0_main_Load -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
  13: f1_0_main_Load -> f152_0_gcd_EQ : arg2'=0, arg1'=arg2P0, (arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 2
   7: f152_0_gcd_EQ -> f198_0_mod_LE : (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 1
   8: f152_0_gcd_EQ -> f198_0_mod_LE : (arg2 > 0 /\ -arg2+arg1 > 0), cost: 1
  14: f152_0_gcd_EQ -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ arg2-arg1 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0), cost: 1+n0
  15: f152_0_gcd_EQ -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ -arg2+arg1 > 0 /\ n0 >= 0), cost: 1+n0
  11: f198_0_mod_LE -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, arg2-arg1 > 0, cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
New rule:
__init -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (arg1P6 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f152_0_gcd_EQ : arg2'=0, arg1'=arg2P0, (arg2P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 2
New rule:
__init -> f152_0_gcd_EQ : arg2'=0, arg1'=arg2P0, (arg2P0 > 0 /\ arg1P6 > 0 /\ 1+arg2P6 > 0), cost: 3

Applied deletion
Removed the following rules: 0 6 13

Eliminating location f198_0_mod_LE by chaining:

Applied chaining
First rule:
f152_0_gcd_EQ -> f198_0_mod_LE : (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 1
Second rule:
f198_0_mod_LE -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, arg2-arg1 > 0, cost: 1
New rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 2

Applied chaining
First rule:
f152_0_gcd_EQ -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ arg2-arg1 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0), cost: 1+n0
Second rule:
f198_0_mod_LE -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, arg2-arg1 > 0, cost: 1
New rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0

Applied simplification
Original rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (arg2 > 0 /\ arg2-arg1 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0
New rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (arg2-arg1 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0

Applied chaining
First rule:
f152_0_gcd_EQ -> f198_0_mod_LE : arg1'=arg1-arg2*n0, (arg2 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ -arg2+arg1 > 0 /\ n0 >= 0), cost: 1+n0
Second rule:
f198_0_mod_LE -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, arg2-arg1 > 0, cost: 1
New rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (arg2 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ -arg2+arg1 > 0 /\ n0 >= 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0

Applied simplification
Original rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (arg2 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ -arg2+arg1 > 0 /\ n0 >= 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0
New rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (-arg2-arg2*(-1+n0)+arg1 > 0 /\ -arg2+arg1 > 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0

Applied deletion
Removed the following rules: 7 8 11 14 15

Eliminated locations on tree-shaped paths
Start location: __init
  18: f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 2
  19: f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (arg2-arg1 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0
  20: f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (-arg2-arg2*(-1+n0)+arg1 > 0 /\ -arg2+arg1 > 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0
  16: __init -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (arg1P6 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0), cost: 2
  17: __init -> f152_0_gcd_EQ : arg2'=0, arg1'=arg2P0, (arg2P0 > 0 /\ arg1P6 > 0 /\ 1+arg2P6 > 0), cost: 3


Accelerated simple loops
Start location: __init
  18: f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 2
  19: f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (arg2-arg1 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0
  20: f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (-arg2-arg2*(-1+n0)+arg1 > 0 /\ -arg2+arg1 > 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0
  16: __init -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (arg1P6 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0), cost: 2
  17: __init -> f152_0_gcd_EQ : arg2'=0, arg1'=arg2P0, (arg2P0 > 0 /\ arg1P6 > 0 /\ 1+arg2P6 > 0), cost: 3


Applied chaining
First rule:
__init -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (arg1P6 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0), cost: 2
Second rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1, arg1'=arg2, (1+arg1 > 0 /\ arg2-arg1 > 0), cost: 2
New rule:
__init -> f152_0_gcd_EQ : arg2'=arg1P0, arg1'=arg2P0, (arg2P0-arg1P0 > 0 /\ 1+arg1P0 > 0), cost: 4

Applied chaining
First rule:
__init -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (arg1P6 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0), cost: 2
Second rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (arg2-arg1 > 0 /\ -arg2-arg2*(-1+n0)+arg1 > 0 /\ n0 >= 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0
New rule:
__init -> f152_0_gcd_EQ : arg2'=arg1P0-arg2P0*n0, arg1'=arg2P0, (arg2P0-arg1P0 > 0 /\ -arg2P0-arg2P0*(-1+n0)+arg1P0 > 0 /\ arg2P0-arg1P0+arg2P0*n0 > 0 /\ n0 >= 0), cost: 4+n0

Applied chaining
First rule:
__init -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (arg1P6 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0), cost: 2
Second rule:
f152_0_gcd_EQ -> f152_0_gcd_EQ : arg2'=arg1-arg2*n0, arg1'=arg2, (-arg2-arg2*(-1+n0)+arg1 > 0 /\ -arg2+arg1 > 0 /\ arg2-arg1+arg2*n0 > 0), cost: 2+n0
New rule:
__init -> f152_0_gcd_EQ : arg2'=arg1P0-arg2P0*n0, arg1'=arg2P0, (-arg2P0+arg1P0 > 0 /\ -arg2P0-arg2P0*(-1+n0)+arg1P0 > 0 /\ arg2P0-arg1P0+arg2P0*n0 > 0), cost: 4+n0

Applied deletion
Removed the following rules: 18 19 20

Chained accelerated rules with incoming rules
Start location: __init
  16: __init -> f152_0_gcd_EQ : arg2'=arg2P0, arg1'=arg1P0, (arg1P6 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0), cost: 2
  17: __init -> f152_0_gcd_EQ : arg2'=0, arg1'=arg2P0, (arg2P0 > 0 /\ arg1P6 > 0 /\ 1+arg2P6 > 0), cost: 3
  21: __init -> f152_0_gcd_EQ : arg2'=arg1P0, arg1'=arg2P0, (arg2P0-arg1P0 > 0 /\ 1+arg1P0 > 0), cost: 4
  22: __init -> f152_0_gcd_EQ : arg2'=arg1P0-arg2P0*n0, arg1'=arg2P0, (arg2P0-arg1P0 > 0 /\ -arg2P0-arg2P0*(-1+n0)+arg1P0 > 0 /\ arg2P0-arg1P0+arg2P0*n0 > 0 /\ n0 >= 0), cost: 4+n0
  23: __init -> f152_0_gcd_EQ : arg2'=arg1P0-arg2P0*n0, arg1'=arg2P0, (-arg2P0+arg1P0 > 0 /\ -arg2P0-arg2P0*(-1+n0)+arg1P0 > 0 /\ arg2P0-arg1P0+arg2P0*n0 > 0), cost: 4+n0


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

