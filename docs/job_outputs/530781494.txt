NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l74, true>
<l1, l2, ((0 + i21^0) <= 0)>
<l1, l3, (1 <= (0 + i21^0)), par{i21^0 -> (~(1) + i21^0)}>
<l3, l1, true>
<l4, l3, ((1 + i21^0) <= 0), par{i21^0 -> ((0 + __const_16^0) + i21^0)}>
<l4, l5, (0 <= (0 + i21^0))>
<l2, l6, true>
<l7, l8, true, par{i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0)}>
<l9, l5, ((0 + __const_65536^0) <= (0 + fcode5^0)) /\ (undef475 = (0 + hsize^0)) /\ (undef473 = (0 + undef475)), par{hshift11^0 -> ((0 + __const_8^0) + (~(1) * hshift11^0)), hsize___019^0 -> undef473, hsize_reg10^0 -> undef475, i21^0 -> ((0 + (~(1) * __const_16^0)) + undef473), m122^0 -> ~(1)}>
<l9, l10, ((1 + fcode5^0) <= (0 + __const_65536^0)) /\ (undef532 = undef532), par{fcode5^0 -> undef532, hshift11^0 -> (1 + hshift11^0)}>
<l11, l12, true, par{i29^0 -> ((0 + (~(1) * __const_16^0)) + i29^0)}>
<l13, l10, (undef689 = (0 + ret_getbyte18^0)), par{ent8^0 -> (0 + undef689), fcode5^0 -> (0 + hsize^0), hshift11^0 -> 0, tmp12^0 -> undef689}>
<l14, l15, true>
<l16, l13, ((0 + tmp___017^0) <= 0), par{ret_getbyte18^0 -> (0 + __const_429496^0)}>
<l16, l13, (1 <= (0 + tmp___017^0)) /\ (undef874 = undef874), par{InCnt^0 -> (~(1) + InCnt^0), ret_getbyte18^0 -> undef874}>
<l17, l13, ((0 + InCnt^0) <= 0), par{ret_getbyte18^0 -> (0 + __const_429496^0)}>
<l17, l16, (1 <= (0 + InCnt^0)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), tmp___017^0 -> (0 + apsim_InCnt^0)}>
<l18, l17, true, par{free_ent^0 -> (0 + __const_257^0)}>
<l19, l17, ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0)), par{free_ent^0 -> (0 + __const_256^0)}>
<l19, l18, (1 <= (0 + block_compress^0))>
<l19, l18, ((1 + block_compress^0) <= 0)>
<l20, l21, (undef1279 = undef1279), par{bits33^0 -> (~(1) + bits33^0), c37^0 -> undef1279}>
<l22, l23, true>
<l24, l25, true>
<l26, l24, ((0 + bytes_out^0) <= (0 + in_count^0))>
<l26, l24, ((1 + in_count^0) <= (0 + bytes_out^0)), par{exit_stat^0 -> 2}>
<l27, l28, (undef1593 = undef1593), par{bytes_out^0 -> undef1593, offset^0 -> 0}>
<l29, l27, true>
<l30, l29, ((0 + __const_16^0) <= (0 + i45^0))>
<l30, l31, ((1 + i45^0) <= (0 + __const_16^0)), par{i45^0 -> (1 + i45^0)}>
<l32, l29, ((0 + n44^0) <= (0 + i45^0))>
<l32, l30, ((1 + i45^0) <= (0 + n44^0))>
<l33, l27, ((0 + offset^0) <= 0)>
<l33, l31, (1 <= (0 + offset^0)) /\ (undef2064 = undef2064), par{i45^0 -> 0, n44^0 -> undef2064}>
<l34, l28, (undef2124 = undef2124), par{maxcode^0 -> undef2124}>
<l35, l34, ((1 + maxbits^0) <= (0 + n_bits^0))>
<l35, l34, ((1 + n_bits^0) <= (0 + maxbits^0))>
<l35, l28, ((0 + n_bits^0) <= (0 + maxbits^0)) /\ ((0 + maxbits^0) <= (0 + n_bits^0)), par{maxcode^0 -> (0 + maxmaxcode^0)}>
<l28, l36, true>
<l37, l28, (undef2439 = undef2439), par{clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> (0 + __const_9^0)}>
<l38, l35, ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)), par{n_bits^0 -> (1 + n_bits^0)}>
<l38, l37, (1 <= (0 + clear_flg^0))>
<l38, l37, ((1 + clear_flg^0) <= 0)>
<l39, l38, true, par{offset^0 -> 0}>
<l40, l39, true, par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0)}>
<l41, l40, ((0 + __const_16^0) <= (0 + i41^0))>
<l41, l22, ((1 + i41^0) <= (0 + __const_16^0)), par{i41^0 -> (1 + i41^0)}>
<l23, l40, ((0 + n40^0) <= (0 + i41^0))>
<l23, l41, ((1 + i41^0) <= (0 + n40^0))>
<l42, l39, ((0 + offset^0) <= 0)>
<l42, l22, (1 <= (0 + offset^0)), par{i41^0 -> 0, n40^0 -> (0 + n_bits^0)}>
<l43, l28, ((0 + clear_flg^0) <= 0)>
<l43, l42, (1 <= (0 + clear_flg^0))>
<l44, l43, ((0 + free_ent^0) <= (0 + maxcode^0))>
<l44, l42, ((1 + maxcode^0) <= (0 + free_ent^0))>
<l45, l44, true, par{offset^0 -> 0}>
<l46, l20, true>
<l46, l45, true>
<l21, l45, ((0 + bits33^0) <= 0) /\ (0 <= (0 + bits33^0))>
<l21, l46, (1 <= (0 + bits33^0))>
<l21, l46, ((1 + bits33^0) <= 0)>
<l47, l20, (undef3796 = (0 + n_bits^0)), par{bits33^0 -> undef3796, bytes_out^0 -> ((0 + undef3796) + bytes_out^0)}>
<l47, l44, true>
<l48, l47, true, par{offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l49, l48, true>
<l50, l48, ((0 + bits33^0) <= 0) /\ (0 <= (0 + bits33^0))>
<l50, l49, (1 <= (0 + bits33^0))>
<l50, l49, ((1 + bits33^0) <= 0)>
<l51, l50, ((1 + bits33^0) <= (0 + __const_8^0))>
<l51, l50, ((0 + __const_8^0) <= (0 + bits33^0)) /\ (undef4307 = undef4307), par{bits33^0 -> ((0 + (~(1) * __const_8^0)) + bits33^0), code31^0 -> undef4307}>
<l31, l32, true>
<l52, l33, ((1 + code31^0) <= 0)>
<l52, l51, (0 <= (0 + code31^0)) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496), par{bits33^0 -> (((0 + (~(1) * __const_8^0)) + bits33^0) + undef4525), code31^0 -> undef4496, r_off32^0 -> undef4525}>
<l15, l52, ((0 + i29^0) <= 0), par{bits33^0 -> (0 + n_bits^0), clear_flg^0 -> 1, code31^0 -> (0 + __const_256^0), free_ent^0 -> (0 + __const_257^0), r_off32^0 -> (0 + offset^0)}>
<l15, l14, (1 <= (0 + i29^0)), par{i29^0 -> (~(1) + i29^0)}>
<l12, l14, ((1 + i29^0) <= 0), par{i29^0 -> ((0 + __const_16^0) + i29^0)}>
<l12, l11, (0 <= (0 + i29^0))>
<l36, l2, true>
<l53, l54, (undef4904 = undef4904), par{rat26^0 -> undef4904}>
<l54, l11, ((0 + rat26^0) <= (0 + ratio^0)) /\ (undef4947 = (0 + hsize^0)), par{hsize___027^0 -> undef4947, i29^0 -> ((0 + (~(1) * __const_16^0)) + undef4947), m130^0 -> ~(1), ratio^0 -> 0}>
<l54, l36, ((1 + ratio^0) <= (0 + rat26^0)), par{ratio^0 -> (0 + rat26^0)}>
<l55, l53, (1 <= (0 + rat26^0))>
<l55, l53, ((1 + rat26^0) <= 0)>
<l55, l54, ((0 + rat26^0) <= 0) /\ (0 <= (0 + rat26^0)), par{rat26^0 -> (0 + __const_2147483647^0)}>
<l56, l19, ((0 + __const_50^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274), par{InCnt^0 -> (0 + count^0), apsim_InCnt^0 -> (0 + __const_53^0), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l56, l57, ((1 + i3^0) <= (0 + __const_50^0)) /\ (undef5349 = undef5349), par{i3^0 -> (1 + i3^0), seed2^0 -> undef5349, tabort4^0 -> (0 + i3^0)}>
<l58, l54, ((0 + in_count^0) <= (0 + __const_8388607^0)) /\ (undef5408 = undef5408), par{rat26^0 -> undef5408}>
<l58, l55, ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471), par{rat26^0 -> undef5471}>
<l59, l58, true, par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0)}>
<l60, l2, ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0))>
<l60, l59, (1 <= (0 + block_compress^0))>
<l60, l59, ((1 + block_compress^0) <= 0)>
<l61, l2, ((1 + in_count^0) <= (0 + checkpoint^0))>
<l61, l60, ((0 + checkpoint^0) <= (0 + in_count^0))>
<l62, l61, ((0 + maxmaxcode^0) <= (0 + free_ent^0))>
<l62, l2, ((1 + free_ent^0) <= (0 + maxmaxcode^0)), par{free_ent^0 -> (1 + free_ent^0), tmp___115^0 -> (0 + free_ent^0)}>
<l63, l62, true, par{ent8^0 -> (0 + c7^0), out_count^0 -> (1 + out_count^0)}>
<l64, l63, ((0 + in_count^0) <= (0 + apsim_bound11113^0))>
<l64, l7, ((1 + apsim_bound11113^0) <= (0 + in_count^0))>
<l65, l64, true, par{apsim_bound11113^0 -> (1 + apsim_bound11113^0)}>
<l65, l63, true>
<l66, l65, true>
<l66, l2, (undef6389 = undef6389), par{ent8^0 -> undef6389}>
<l66, l65, true>
<l8, l66, (0 <= (0 + i6^0))>
<l8, l66, ((1 + i6^0) <= 0), par{i6^0 -> ((0 + hsize_reg10^0) + i6^0)}>
<l67, l7, (1 <= (0 + i6^0))>
<l67, l7, ((1 + i6^0) <= 0)>
<l67, l7, ((0 + i6^0) <= 0) /\ (0 <= (0 + i6^0)), par{disp9^0 -> 1}>
<l68, l63, true>
<l68, l67, true, par{disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * i6^0))}>
<l69, l68, true>
<l69, l2, (undef7019 = undef7019), par{ent8^0 -> undef7019}>
<l69, l68, true>
<l57, l56, true>
<l70, l69, (undef7242 = (0 + ret_getbyte25^0)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222), par{c7^0 -> (0 + undef7242), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0), tmp___014^0 -> undef7242}>
<l10, l9, true>
<l71, l70, ((0 + tmp___024^0) <= 0), par{ret_getbyte25^0 -> (0 + __const_429496^0)}>
<l71, l70, (1 <= (0 + tmp___024^0)) /\ (undef7427 = undef7427), par{InCnt^0 -> (~(1) + InCnt^0), ret_getbyte25^0 -> undef7427}>
<l72, l70, ((0 + InCnt^0) <= 0), par{ret_getbyte25^0 -> (0 + __const_429496^0)}>
<l72, l71, (1 <= (0 + InCnt^0)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), tmp___024^0 -> (0 + apsim_InCnt^0)}>
<l6, l26, ((0 + InCnt^0) <= 0)>
<l6, l72, (1 <= (0 + InCnt^0)), par{apsim_bound11113^0 -> 0}>
<l5, l4, true, par{i21^0 -> ((0 + (~(1) * __const_16^0)) + i21^0)}>
<l73, l57, true, par{count^0 -> (0 + __const_50^0), i3^0 -> 0, seed2^0 -> 1}>
<l74, l73, true>

Fresh variables:
undef473, undef475, undef532, undef689, undef874, undef1279, undef1593, undef2064, undef2124, undef2439, undef3796, undef4307, undef4496, undef4525, undef4904, undef4947, undef5274, undef5275, undef5349, undef5408, undef5471, undef6389, undef7019, undef7210, undef7222, undef7242, undef7427, 

Undef variables:
undef473, undef475, undef532, undef689, undef874, undef1279, undef1593, undef2064, undef2124, undef2439, undef3796, undef4307, undef4496, undef4525, undef4904, undef4947, undef5274, undef5275, undef5349, undef5408, undef5471, undef6389, undef7019, undef7210, undef7222, undef7242, undef7427, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l57, (count^0 = (0 + count^0)) /\ (i3^0 = 0)>
<l2, l25, ((0 + InCnt^0) <= 0) /\ ((0 + bytes_out^0) <= (0 + in_count^0))>
<l2, l25, ((0 + InCnt^0) <= 0) /\ ((1 + in_count^0) <= (0 + bytes_out^0))>
<l2, l62, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef7242 = (0 + (0 + __const_429496^0))) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0), out_count^0 -> (1 + out_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef7242 = (0 + (0 + __const_429496^0))) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ (1 <= (0 + undef7222)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef7222)), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef7242 = (0 + (0 + __const_429496^0))) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ ((1 + undef7222) <= 0), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef7222)), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef7242 = (0 + (0 + __const_429496^0))) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ ((0 + undef7222) <= 0) /\ (0 <= (0 + undef7222)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> 1, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l2, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef7242 = (0 + (0 + __const_429496^0))) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ (undef7019 = undef7019), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l62, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef7242 = (0 + (0 + __const_429496^0))) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0), out_count^0 -> (1 + out_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef7242 = (0 + (0 + __const_429496^0))) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ (1 <= (0 + undef7222)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef7222)), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef7242 = (0 + (0 + __const_429496^0))) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ ((1 + undef7222) <= 0), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef7222)), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ ((0 + (0 + apsim_InCnt^0)) <= 0) /\ (undef7242 = (0 + (0 + __const_429496^0))) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ ((0 + undef7222) <= 0) /\ (0 <= (0 + undef7222)), par{apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> 1, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l62, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef7427 = undef7427) /\ (undef7242 = (0 + undef7427)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0), out_count^0 -> (1 + out_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef7427 = undef7427) /\ (undef7242 = (0 + undef7427)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ (1 <= (0 + undef7222)), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef7222)), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef7427 = undef7427) /\ (undef7242 = (0 + undef7427)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ ((1 + undef7222) <= 0), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef7222)), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef7427 = undef7427) /\ (undef7242 = (0 + undef7427)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ ((0 + undef7222) <= 0) /\ (0 <= (0 + undef7222)), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> 1, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l2, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef7427 = undef7427) /\ (undef7242 = (0 + undef7427)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ (undef7019 = undef7019), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l62, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef7427 = undef7427) /\ (undef7242 = (0 + undef7427)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0), out_count^0 -> (1 + out_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef7427 = undef7427) /\ (undef7242 = (0 + undef7427)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ (1 <= (0 + undef7222)), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef7222)), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef7427 = undef7427) /\ (undef7242 = (0 + undef7427)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ ((1 + undef7222) <= 0), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> ((0 + hsize_reg10^0) + (~(1) * undef7222)), fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l2, l7, (1 <= (0 + InCnt^0)) /\ (1 <= (0 + InCnt^0)) /\ (1 <= (0 + (0 + apsim_InCnt^0))) /\ (undef7427 = undef7427) /\ (undef7242 = (0 + undef7427)) /\ (undef7210 = undef7210) /\ (undef7222 = undef7222) /\ ((0 + undef7222) <= 0) /\ (0 <= (0 + undef7222)), par{InCnt^0 -> (~(1) + InCnt^0), apsim_InCnt^0 -> (~(1) + apsim_InCnt^0), apsim_bound11113^0 -> 0, c7^0 -> (0 + undef7242), disp9^0 -> 1, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> (1 + in_count^0)}>
<l3, l2, ((0 + i21^0) <= 0)>
<l3, l3, (1 <= (0 + i21^0)), par{i21^0 -> (~(1) + i21^0)}>
<l5, l3, ((1 + ((0 + (~(1) * __const_16^0)) + i21^0)) <= 0), par{i21^0 -> ((0 + __const_16^0) + ((0 + (~(1) * __const_16^0)) + i21^0))}>
<l5, l5, (0 <= (0 + ((0 + (~(1) * __const_16^0)) + i21^0))), par{i21^0 -> ((0 + (~(1) * __const_16^0)) + i21^0)}>
<l7, l62, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ ((0 + in_count^0) <= (0 + (1 + apsim_bound11113^0))), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0), out_count^0 -> (1 + out_count^0)}>
<l7, l7, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ ((1 + (1 + apsim_bound11113^0)) <= (0 + in_count^0)), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0)}>
<l7, l62, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))), par{i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0), out_count^0 -> (1 + out_count^0)}>
<l7, l2, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ (undef6389 = undef6389), par{i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0)}>
<l7, l62, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ ((0 + in_count^0) <= (0 + (1 + apsim_bound11113^0))), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0), out_count^0 -> (1 + out_count^0)}>
<l7, l7, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))) /\ ((1 + (1 + apsim_bound11113^0)) <= (0 + in_count^0)), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0)}>
<l7, l62, (0 <= (0 + ((0 + (~(1) * disp9^0)) + i6^0))), par{i6^0 -> ((0 + (~(1) * disp9^0)) + i6^0), out_count^0 -> (1 + out_count^0)}>
<l7, l62, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ ((0 + in_count^0) <= (0 + (1 + apsim_bound11113^0))), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0)), out_count^0 -> (1 + out_count^0)}>
<l7, l7, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ ((1 + (1 + apsim_bound11113^0)) <= (0 + in_count^0)), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0))}>
<l7, l62, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0), par{i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0)), out_count^0 -> (1 + out_count^0)}>
<l7, l2, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ (undef6389 = undef6389), par{i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0))}>
<l7, l62, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ ((0 + in_count^0) <= (0 + (1 + apsim_bound11113^0))), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0)), out_count^0 -> (1 + out_count^0)}>
<l7, l7, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0) /\ ((1 + (1 + apsim_bound11113^0)) <= (0 + in_count^0)), par{apsim_bound11113^0 -> (1 + apsim_bound11113^0), i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0))}>
<l7, l62, ((1 + ((0 + (~(1) * disp9^0)) + i6^0)) <= 0), par{i6^0 -> ((0 + hsize_reg10^0) + ((0 + (~(1) * disp9^0)) + i6^0)), out_count^0 -> (1 + out_count^0)}>
<l10, l5, ((0 + __const_65536^0) <= (0 + fcode5^0)) /\ (undef475 = (0 + hsize^0)) /\ (undef473 = (0 + undef475)), par{hshift11^0 -> ((0 + __const_8^0) + (~(1) * hshift11^0)), hsize_reg10^0 -> undef475, i21^0 -> ((0 + (~(1) * __const_16^0)) + undef473)}>
<l10, l10, ((1 + fcode5^0) <= (0 + __const_65536^0)) /\ (undef532 = undef532), par{fcode5^0 -> undef532, hshift11^0 -> (1 + hshift11^0)}>
<l11, l14, ((1 + ((0 + (~(1) * __const_16^0)) + i29^0)) <= 0), par{i29^0 -> ((0 + __const_16^0) + ((0 + (~(1) * __const_16^0)) + i29^0))}>
<l11, l11, (0 <= (0 + ((0 + (~(1) * __const_16^0)) + i29^0))), par{i29^0 -> ((0 + (~(1) * __const_16^0)) + i29^0)}>
<l14, l2, ((0 + i29^0) <= 0) /\ ((1 + (0 + __const_256^0)) <= 0) /\ ((0 + offset^0) <= 0) /\ (undef1593 = undef1593), par{bits33^0 -> (0 + n_bits^0), bytes_out^0 -> undef1593, clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> 0}>
<l14, l31, ((0 + i29^0) <= 0) /\ ((1 + (0 + __const_256^0)) <= 0) /\ (1 <= (0 + offset^0)) /\ (undef2064 = undef2064), par{bits33^0 -> (0 + n_bits^0), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), i45^0 -> 0, n44^0 -> undef2064}>
<l14, l20, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= (0 + __const_8^0)) /\ ((0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= 0) /\ (0 <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ (undef3796 = (0 + n_bits^0)), par{bits33^0 -> undef3796, bytes_out^0 -> ((0 + undef3796) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= (0 + __const_8^0)) /\ ((0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= 0) /\ (0 <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ ((0 + (0 + __const_257^0)) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= (0 + __const_8^0)) /\ ((0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= 0) /\ (0 <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ ((1 + maxcode^0) <= (0 + (0 + __const_257^0))), par{bits33^0 -> (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l20, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= (0 + __const_8^0)) /\ (1 <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ (undef3796 = (0 + n_bits^0)), par{bits33^0 -> undef3796, bytes_out^0 -> ((0 + undef3796) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= (0 + __const_8^0)) /\ (1 <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ ((0 + (0 + __const_257^0)) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= (0 + __const_8^0)) /\ (1 <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ ((1 + maxcode^0) <= (0 + (0 + __const_257^0))), par{bits33^0 -> (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l20, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= (0 + __const_8^0)) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= 0) /\ (undef3796 = (0 + n_bits^0)), par{bits33^0 -> undef3796, bytes_out^0 -> ((0 + undef3796) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= (0 + __const_8^0)) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= 0) /\ ((0 + (0 + __const_257^0)) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= (0 + __const_8^0)) /\ ((1 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)) <= 0) /\ ((1 + maxcode^0) <= (0 + (0 + __const_257^0))), par{bits33^0 -> (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l20, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((0 + __const_8^0) <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ (undef4307 = undef4307) /\ ((0 + ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) <= 0) /\ (0 <= (0 + ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)))) /\ (undef3796 = (0 + n_bits^0)), par{bits33^0 -> undef3796, bytes_out^0 -> ((0 + undef3796) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((0 + __const_8^0) <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ (undef4307 = undef4307) /\ ((0 + ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) <= 0) /\ (0 <= (0 + ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)))) /\ ((0 + (0 + __const_257^0)) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((0 + __const_8^0) <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ (undef4307 = undef4307) /\ ((0 + ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) <= 0) /\ (0 <= (0 + ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)))) /\ ((1 + maxcode^0) <= (0 + (0 + __const_257^0))), par{bits33^0 -> ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l20, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((0 + __const_8^0) <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ (undef4307 = undef4307) /\ (1 <= (0 + ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)))) /\ (undef3796 = (0 + n_bits^0)), par{bits33^0 -> undef3796, bytes_out^0 -> ((0 + undef3796) + bytes_out^0), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((0 + __const_8^0) <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ (undef4307 = undef4307) /\ (1 <= (0 + ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)))) /\ ((0 + (0 + __const_257^0)) <= (0 + maxcode^0)) /\ (1 <= (0 + 1)), par{bits33^0 -> ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l42, ((0 + i29^0) <= 0) /\ (0 <= (0 + (0 + __const_256^0))) /\ (undef4525 = undef4525) /\ (undef4496 = undef4496) /\ ((0 + __const_8^0) <= (0 + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525))) /\ (undef4307 = undef4307) /\ (1 <= (0 + ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)))) /\ ((1 + maxcode^0) <= (0 + (0 + __const_257^0))), par{bits33^0 -> ((0 + (~(1) * __const_8^0)) + (((0 + (~(1) * __const_8^0)) + (0 + n_bits^0)) + undef4525)), clear_flg^0 -> 1, free_ent^0 -> (0 + __const_257^0), offset^0 -> ((0 + n_bits^0) + offset^0)}>
<l14, l14, (1 <= (0 + i29^0)), par{i29^0 -> (~(1) + i29^0)}>
<l20, l2, (undef1279 = undef1279) /\ ((0 + (~(1) + bits33^0)) <= 0) /\ (0 <= (0 + (~(1) + bits33^0))) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ ((0 + clear_flg^0) <= 0), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l20, l42, (undef1279 = undef1279) /\ ((0 + (~(1) + bits33^0)) <= 0) /\ (0 <= (0 + (~(1) + bits33^0))) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ (1 <= (0 + clear_flg^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l20, l42, (undef1279 = undef1279) /\ ((0 + (~(1) + bits33^0)) <= 0) /\ (0 <= (0 + (~(1) + bits33^0))) /\ ((1 + maxcode^0) <= (0 + free_ent^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l20, l20, (undef1279 = undef1279) /\ (1 <= (0 + (~(1) + bits33^0))), par{bits33^0 -> (~(1) + bits33^0)}>
<l20, l2, (undef1279 = undef1279) /\ (1 <= (0 + (~(1) + bits33^0))) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ ((0 + clear_flg^0) <= 0), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l20, l42, (undef1279 = undef1279) /\ (1 <= (0 + (~(1) + bits33^0))) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ (1 <= (0 + clear_flg^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l20, l42, (undef1279 = undef1279) /\ (1 <= (0 + (~(1) + bits33^0))) /\ ((1 + maxcode^0) <= (0 + free_ent^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l20, l20, (undef1279 = undef1279) /\ ((1 + (~(1) + bits33^0)) <= 0), par{bits33^0 -> (~(1) + bits33^0)}>
<l20, l2, (undef1279 = undef1279) /\ ((1 + (~(1) + bits33^0)) <= 0) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ ((0 + clear_flg^0) <= 0), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l20, l42, (undef1279 = undef1279) /\ ((1 + (~(1) + bits33^0)) <= 0) /\ ((0 + free_ent^0) <= (0 + maxcode^0)) /\ (1 <= (0 + clear_flg^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l20, l42, (undef1279 = undef1279) /\ ((1 + (~(1) + bits33^0)) <= 0) /\ ((1 + maxcode^0) <= (0 + free_ent^0)), par{bits33^0 -> (~(1) + bits33^0), offset^0 -> 0}>
<l22, l2, ((0 + n40^0) <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + maxbits^0) <= (0 + (1 + n_bits^0))) /\ (undef2124 = undef2124), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> undef2124, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l22, l2, ((0 + n40^0) <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ (undef2124 = undef2124), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> undef2124, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l22, l2, ((0 + n40^0) <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((0 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ ((0 + maxbits^0) <= (0 + (1 + n_bits^0))), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> (0 + maxmaxcode^0), n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l22, l2, ((0 + n40^0) <= (0 + i41^0)) /\ (1 <= (0 + clear_flg^0)) /\ (undef2439 = undef2439), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0}>
<l22, l2, ((0 + n40^0) <= (0 + i41^0)) /\ ((1 + clear_flg^0) <= 0) /\ (undef2439 = undef2439), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0}>
<l22, l2, ((1 + i41^0) <= (0 + n40^0)) /\ ((0 + __const_16^0) <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + maxbits^0) <= (0 + (1 + n_bits^0))) /\ (undef2124 = undef2124), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> undef2124, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l22, l2, ((1 + i41^0) <= (0 + n40^0)) /\ ((0 + __const_16^0) <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ (undef2124 = undef2124), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> undef2124, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l22, l2, ((1 + i41^0) <= (0 + n40^0)) /\ ((0 + __const_16^0) <= (0 + i41^0)) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((0 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ ((0 + maxbits^0) <= (0 + (1 + n_bits^0))), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), maxcode^0 -> (0 + maxmaxcode^0), n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l22, l2, ((1 + i41^0) <= (0 + n40^0)) /\ ((0 + __const_16^0) <= (0 + i41^0)) /\ (1 <= (0 + clear_flg^0)) /\ (undef2439 = undef2439), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0}>
<l22, l2, ((1 + i41^0) <= (0 + n40^0)) /\ ((0 + __const_16^0) <= (0 + i41^0)) /\ ((1 + clear_flg^0) <= 0) /\ (undef2439 = undef2439), par{bytes_out^0 -> ((0 + bytes_out^0) + n_bits^0), clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0}>
<l22, l22, ((1 + i41^0) <= (0 + n40^0)) /\ ((1 + i41^0) <= (0 + __const_16^0)), par{i41^0 -> (1 + i41^0)}>
<l31, l2, ((0 + n44^0) <= (0 + i45^0)) /\ (undef1593 = undef1593), par{bytes_out^0 -> undef1593, offset^0 -> 0}>
<l31, l2, ((1 + i45^0) <= (0 + n44^0)) /\ ((0 + __const_16^0) <= (0 + i45^0)) /\ (undef1593 = undef1593), par{bytes_out^0 -> undef1593, offset^0 -> 0}>
<l31, l31, ((1 + i45^0) <= (0 + n44^0)) /\ ((1 + i45^0) <= (0 + __const_16^0)), par{i45^0 -> (1 + i45^0)}>
<l42, l2, ((0 + offset^0) <= 0) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + maxbits^0) <= (0 + (1 + n_bits^0))) /\ (undef2124 = undef2124), par{maxcode^0 -> undef2124, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l42, l2, ((0 + offset^0) <= 0) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((1 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ (undef2124 = undef2124), par{maxcode^0 -> undef2124, n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l42, l2, ((0 + offset^0) <= 0) /\ ((0 + clear_flg^0) <= 0) /\ (0 <= (0 + clear_flg^0)) /\ ((0 + (1 + n_bits^0)) <= (0 + maxbits^0)) /\ ((0 + maxbits^0) <= (0 + (1 + n_bits^0))), par{maxcode^0 -> (0 + maxmaxcode^0), n_bits^0 -> (1 + n_bits^0), offset^0 -> 0}>
<l42, l2, ((0 + offset^0) <= 0) /\ (1 <= (0 + clear_flg^0)) /\ (undef2439 = undef2439), par{clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0}>
<l42, l2, ((0 + offset^0) <= 0) /\ ((1 + clear_flg^0) <= 0) /\ (undef2439 = undef2439), par{clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0}>
<l42, l22, (1 <= (0 + offset^0)), par{i41^0 -> 0, n40^0 -> (0 + n_bits^0)}>
<l57, l10, ((0 + count^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274) /\ ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0)) /\ ((0 + (0 + count^0)) <= 0) /\ (undef689 = (0 + (0 + __const_429496^0))), par{InCnt^0 -> (0 + count^0), apsim_InCnt^0 -> (0 + __const_53^0), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> (0 + __const_256^0), hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l57, l10, ((0 + count^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274) /\ ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0)) /\ (1 <= (0 + (0 + count^0))) /\ ((0 + (0 + (0 + __const_53^0))) <= 0) /\ (undef689 = (0 + (0 + __const_429496^0))), par{InCnt^0 -> (0 + count^0), apsim_InCnt^0 -> (~(1) + (0 + __const_53^0)), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> (0 + __const_256^0), hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l57, l10, ((0 + count^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274) /\ ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0)) /\ (1 <= (0 + (0 + count^0))) /\ (1 <= (0 + (0 + (0 + __const_53^0)))) /\ (undef874 = undef874) /\ (undef689 = (0 + undef874)), par{InCnt^0 -> (~(1) + (0 + count^0)), apsim_InCnt^0 -> (~(1) + (0 + __const_53^0)), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> (0 + __const_256^0), hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l57, l10, ((0 + count^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274) /\ (1 <= (0 + block_compress^0)) /\ ((0 + (0 + count^0)) <= 0) /\ (undef689 = (0 + (0 + __const_429496^0))), par{InCnt^0 -> (0 + count^0), apsim_InCnt^0 -> (0 + __const_53^0), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> (0 + __const_257^0), hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l57, l10, ((0 + count^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274) /\ (1 <= (0 + block_compress^0)) /\ (1 <= (0 + (0 + count^0))) /\ ((0 + (0 + (0 + __const_53^0))) <= 0) /\ (undef689 = (0 + (0 + __const_429496^0))), par{InCnt^0 -> (0 + count^0), apsim_InCnt^0 -> (~(1) + (0 + __const_53^0)), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> (0 + __const_257^0), hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l57, l10, ((0 + count^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274) /\ (1 <= (0 + block_compress^0)) /\ (1 <= (0 + (0 + count^0))) /\ (1 <= (0 + (0 + (0 + __const_53^0)))) /\ (undef874 = undef874) /\ (undef689 = (0 + undef874)), par{InCnt^0 -> (~(1) + (0 + count^0)), apsim_InCnt^0 -> (~(1) + (0 + __const_53^0)), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> (0 + __const_257^0), hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l57, l10, ((0 + count^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274) /\ ((1 + block_compress^0) <= 0) /\ ((0 + (0 + count^0)) <= 0) /\ (undef689 = (0 + (0 + __const_429496^0))), par{InCnt^0 -> (0 + count^0), apsim_InCnt^0 -> (0 + __const_53^0), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> (0 + __const_257^0), hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l57, l10, ((0 + count^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274) /\ ((1 + block_compress^0) <= 0) /\ (1 <= (0 + (0 + count^0))) /\ ((0 + (0 + (0 + __const_53^0))) <= 0) /\ (undef689 = (0 + (0 + __const_429496^0))), par{InCnt^0 -> (0 + count^0), apsim_InCnt^0 -> (~(1) + (0 + __const_53^0)), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> (0 + __const_257^0), hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l57, l10, ((0 + count^0) <= (0 + i3^0)) /\ (undef5275 = undef5275) /\ (undef5274 = undef5274) /\ ((1 + block_compress^0) <= 0) /\ (1 <= (0 + (0 + count^0))) /\ (1 <= (0 + (0 + (0 + __const_53^0)))) /\ (undef874 = undef874) /\ (undef689 = (0 + undef874)), par{InCnt^0 -> (~(1) + (0 + count^0)), apsim_InCnt^0 -> (~(1) + (0 + __const_53^0)), bytes_out^0 -> 3, checkpoint^0 -> (0 + __const_10000^0), clear_flg^0 -> 0, fcode5^0 -> (0 + hsize^0), free_ent^0 -> (0 + __const_257^0), hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> (0 + __const_16^0), maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> (0 + __const_9^0), offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0}>
<l57, l57, ((1 + i3^0) <= (0 + count^0)) /\ (undef5349 = undef5349), par{i3^0 -> (1 + i3^0)}>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((1 + in_count^0) <= (0 + checkpoint^0))>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((0 + block_compress^0) <= 0) /\ (0 <= (0 + block_compress^0))>
<l62, l11, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((0 + in_count^0) <= (0 + __const_8388607^0)) /\ (undef5408 = undef5408) /\ ((0 + undef5408) <= (0 + ratio^0)) /\ (undef4947 = (0 + hsize^0)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), i29^0 -> ((0 + (~(1) * __const_16^0)) + undef4947), rat26^0 -> undef5408, ratio^0 -> 0}>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((0 + in_count^0) <= (0 + __const_8388607^0)) /\ (undef5408 = undef5408) /\ ((1 + ratio^0) <= (0 + undef5408)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), rat26^0 -> undef5408, ratio^0 -> (0 + undef5408)}>
<l62, l11, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ (1 <= (0 + undef5471)) /\ (undef4904 = undef4904) /\ ((0 + undef4904) <= (0 + ratio^0)) /\ (undef4947 = (0 + hsize^0)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), i29^0 -> ((0 + (~(1) * __const_16^0)) + undef4947), rat26^0 -> undef4904, ratio^0 -> 0}>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ (1 <= (0 + undef5471)) /\ (undef4904 = undef4904) /\ ((1 + ratio^0) <= (0 + undef4904)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), rat26^0 -> undef4904, ratio^0 -> (0 + undef4904)}>
<l62, l11, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ ((1 + undef5471) <= 0) /\ (undef4904 = undef4904) /\ ((0 + undef4904) <= (0 + ratio^0)) /\ (undef4947 = (0 + hsize^0)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), i29^0 -> ((0 + (~(1) * __const_16^0)) + undef4947), rat26^0 -> undef4904, ratio^0 -> 0}>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ ((1 + undef5471) <= 0) /\ (undef4904 = undef4904) /\ ((1 + ratio^0) <= (0 + undef4904)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), rat26^0 -> undef4904, ratio^0 -> (0 + undef4904)}>
<l62, l11, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ ((0 + undef5471) <= 0) /\ (0 <= (0 + undef5471)) /\ ((0 + (0 + __const_2147483647^0)) <= (0 + ratio^0)) /\ (undef4947 = (0 + hsize^0)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), i29^0 -> ((0 + (~(1) * __const_16^0)) + undef4947), rat26^0 -> (0 + __const_2147483647^0), ratio^0 -> 0}>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ (1 <= (0 + block_compress^0)) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ ((0 + undef5471) <= 0) /\ (0 <= (0 + undef5471)) /\ ((1 + ratio^0) <= (0 + (0 + __const_2147483647^0))), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), rat26^0 -> (0 + __const_2147483647^0), ratio^0 -> (0 + (0 + __const_2147483647^0))}>
<l62, l11, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((0 + in_count^0) <= (0 + __const_8388607^0)) /\ (undef5408 = undef5408) /\ ((0 + undef5408) <= (0 + ratio^0)) /\ (undef4947 = (0 + hsize^0)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), i29^0 -> ((0 + (~(1) * __const_16^0)) + undef4947), rat26^0 -> undef5408, ratio^0 -> 0}>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((0 + in_count^0) <= (0 + __const_8388607^0)) /\ (undef5408 = undef5408) /\ ((1 + ratio^0) <= (0 + undef5408)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), rat26^0 -> undef5408, ratio^0 -> (0 + undef5408)}>
<l62, l11, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ (1 <= (0 + undef5471)) /\ (undef4904 = undef4904) /\ ((0 + undef4904) <= (0 + ratio^0)) /\ (undef4947 = (0 + hsize^0)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), i29^0 -> ((0 + (~(1) * __const_16^0)) + undef4947), rat26^0 -> undef4904, ratio^0 -> 0}>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ (1 <= (0 + undef5471)) /\ (undef4904 = undef4904) /\ ((1 + ratio^0) <= (0 + undef4904)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), rat26^0 -> undef4904, ratio^0 -> (0 + undef4904)}>
<l62, l11, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ ((1 + undef5471) <= 0) /\ (undef4904 = undef4904) /\ ((0 + undef4904) <= (0 + ratio^0)) /\ (undef4947 = (0 + hsize^0)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), i29^0 -> ((0 + (~(1) * __const_16^0)) + undef4947), rat26^0 -> undef4904, ratio^0 -> 0}>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ ((1 + undef5471) <= 0) /\ (undef4904 = undef4904) /\ ((1 + ratio^0) <= (0 + undef4904)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), rat26^0 -> undef4904, ratio^0 -> (0 + undef4904)}>
<l62, l11, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ ((0 + undef5471) <= 0) /\ (0 <= (0 + undef5471)) /\ ((0 + (0 + __const_2147483647^0)) <= (0 + ratio^0)) /\ (undef4947 = (0 + hsize^0)), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), i29^0 -> ((0 + (~(1) * __const_16^0)) + undef4947), rat26^0 -> (0 + __const_2147483647^0), ratio^0 -> 0}>
<l62, l2, ((0 + maxmaxcode^0) <= (0 + free_ent^0)) /\ ((0 + checkpoint^0) <= (0 + in_count^0)) /\ ((1 + block_compress^0) <= 0) /\ ((1 + __const_8388607^0) <= (0 + in_count^0)) /\ (undef5471 = undef5471) /\ ((0 + undef5471) <= 0) /\ (0 <= (0 + undef5471)) /\ ((1 + ratio^0) <= (0 + (0 + __const_2147483647^0))), par{checkpoint^0 -> ((0 + __const_10000^0) + in_count^0), rat26^0 -> (0 + __const_2147483647^0), ratio^0 -> (0 + (0 + __const_2147483647^0))}>
<l62, l2, ((1 + free_ent^0) <= (0 + maxmaxcode^0)), par{free_ent^0 -> (1 + free_ent^0)}>

Fresh variables:
undef473, undef475, undef532, undef689, undef874, undef1279, undef1593, undef2064, undef2124, undef2439, undef3796, undef4307, undef4496, undef4525, undef4904, undef4947, undef5274, undef5275, undef5349, undef5408, undef5471, undef6389, undef7019, undef7210, undef7222, undef7242, undef7427, 

Undef variables:
undef473, undef475, undef532, undef689, undef874, undef1279, undef1593, undef2064, undef2124, undef2439, undef3796, undef4307, undef4496, undef4525, undef4904, undef4947, undef5274, undef5275, undef5349, undef5408, undef5471, undef6389, undef7019, undef7210, undef7222, undef7242, undef7427, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>
Variables:
count^0, i3^0

Graph 2:
Transitions:
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
__const_65536^0, fcode5^0, hshift11^0

Graph 3:
Transitions:
<l5, l5, __const_16^0 <= i21^0, {i21^0 -> -__const_16^0 + i21^0, rest remain the same}>
Variables:
__const_16^0, i21^0

Graph 4:
Transitions:
<l3, l3, 1 <= i21^0, {i21^0 -> -1 + i21^0, rest remain the same}>
Variables:
i21^0

Graph 5:
Transitions:
<l2, l62, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ __const_429496^0 = undef7242, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l2, l7, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ 1 <= undef7222 /\ __const_429496^0 = undef7242, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> hsize_reg10^0 - undef7222, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l7, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ 1 + undef7222 <= 0 /\ __const_429496^0 = undef7242, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> hsize_reg10^0 - undef7222, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l7, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ __const_429496^0 = undef7242 /\ undef7222 = 0, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> 1, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l2, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ __const_429496^0 = undef7242, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l62, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ __const_429496^0 = undef7242, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l2, l7, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ 1 <= undef7222 /\ __const_429496^0 = undef7242, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> hsize_reg10^0 - undef7222, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l7, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ 1 + undef7222 <= 0 /\ __const_429496^0 = undef7242, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> hsize_reg10^0 - undef7222, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l7, apsim_InCnt^0 <= 0 /\ 1 <= InCnt^0 /\ __const_429496^0 = undef7242 /\ undef7222 = 0, {apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> 1, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l62, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef7242 = undef7427, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l2, l7, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ 1 <= undef7222 /\ undef7242 = undef7427, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> hsize_reg10^0 - undef7222, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l7, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ 1 + undef7222 <= 0 /\ undef7242 = undef7427, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> hsize_reg10^0 - undef7222, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l7, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef7222 = 0 /\ undef7242 = undef7427, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> 1, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l2, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef7242 = undef7427, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l62, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef7242 = undef7427, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l2, l7, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ 1 <= undef7222 /\ undef7242 = undef7427, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> hsize_reg10^0 - undef7222, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l7, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ 1 + undef7222 <= 0 /\ undef7242 = undef7427, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> hsize_reg10^0 - undef7222, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l2, l7, 1 <= InCnt^0 /\ 1 <= apsim_InCnt^0 /\ undef7222 = 0 /\ undef7242 = undef7427, {InCnt^0 -> -1 + InCnt^0, apsim_InCnt^0 -> -1 + apsim_InCnt^0, apsim_bound11113^0 -> 0, c7^0 -> undef7242, disp9^0 -> 1, fcode5^0 -> undef7210, i6^0 -> undef7222, in_count^0 -> 1 + in_count^0, rest remain the same}>
<l7, l62, disp9^0 <= i6^0 /\ in_count^0 <= 1 + apsim_bound11113^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l7, l7, disp9^0 <= i6^0 /\ 2 + apsim_bound11113^0 <= in_count^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + i6^0, rest remain the same}>
<l7, l62, disp9^0 <= i6^0, {i6^0 -> -disp9^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l7, l2, disp9^0 <= i6^0, {i6^0 -> -disp9^0 + i6^0, rest remain the same}>
<l7, l62, disp9^0 <= i6^0 /\ in_count^0 <= 1 + apsim_bound11113^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l7, l7, disp9^0 <= i6^0 /\ 2 + apsim_bound11113^0 <= in_count^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + i6^0, rest remain the same}>
<l7, l62, disp9^0 <= i6^0, {i6^0 -> -disp9^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l7, l62, 1 + i6^0 <= disp9^0 /\ in_count^0 <= 1 + apsim_bound11113^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l7, l7, 1 + i6^0 <= disp9^0 /\ 2 + apsim_bound11113^0 <= in_count^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, rest remain the same}>
<l7, l62, 1 + i6^0 <= disp9^0, {i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l7, l2, 1 + i6^0 <= disp9^0, {i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, rest remain the same}>
<l7, l62, 1 + i6^0 <= disp9^0 /\ in_count^0 <= 1 + apsim_bound11113^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l7, l7, 1 + i6^0 <= disp9^0 /\ 2 + apsim_bound11113^0 <= in_count^0, {apsim_bound11113^0 -> 1 + apsim_bound11113^0, i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, rest remain the same}>
<l7, l62, 1 + i6^0 <= disp9^0, {i6^0 -> -disp9^0 + hsize_reg10^0 + i6^0, out_count^0 -> 1 + out_count^0, rest remain the same}>
<l11, l14, 1 + i29^0 <= __const_16^0, {all remain the same}>
<l11, l11, __const_16^0 <= i29^0, {i29^0 -> -__const_16^0 + i29^0, rest remain the same}>
<l14, l2, i29^0 <= 0 /\ offset^0 <= 0 /\ 1 + __const_256^0 <= 0, {bits33^0 -> n_bits^0, bytes_out^0 -> undef1593, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> 0, rest remain the same}>
<l14, l31, i29^0 <= 0 /\ 1 + __const_256^0 <= 0 /\ 1 <= offset^0, {bits33^0 -> n_bits^0, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, i45^0 -> 0, n44^0 -> undef2064, rest remain the same}>
<l14, l20, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 1 + n_bits^0 + undef4525 <= 2*__const_8^0 /\ __const_8^0 = n_bits^0 + undef4525 /\ n_bits^0 = undef3796, {bits33^0 -> undef3796, bytes_out^0 -> bytes_out^0 + undef3796, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ __const_257^0 <= maxcode^0 /\ i29^0 <= 0 /\ 1 + n_bits^0 + undef4525 <= 2*__const_8^0 /\ __const_8^0 = n_bits^0 + undef4525, {bits33^0 -> -__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 1 + maxcode^0 <= __const_257^0 /\ 1 + n_bits^0 + undef4525 <= 2*__const_8^0 /\ __const_8^0 = n_bits^0 + undef4525, {bits33^0 -> -__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l20, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 1 + __const_8^0 <= n_bits^0 + undef4525 /\ 1 + n_bits^0 + undef4525 <= 2*__const_8^0 /\ n_bits^0 = undef3796, {bits33^0 -> undef3796, bytes_out^0 -> bytes_out^0 + undef3796, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ __const_257^0 <= maxcode^0 /\ i29^0 <= 0 /\ 1 + __const_8^0 <= n_bits^0 + undef4525 /\ 1 + n_bits^0 + undef4525 <= 2*__const_8^0, {bits33^0 -> -__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 1 + maxcode^0 <= __const_257^0 /\ 1 + __const_8^0 <= n_bits^0 + undef4525 /\ 1 + n_bits^0 + undef4525 <= 2*__const_8^0, {bits33^0 -> -__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l20, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 1 + n_bits^0 + undef4525 <= __const_8^0 /\ 1 + n_bits^0 + undef4525 <= 2*__const_8^0 /\ n_bits^0 = undef3796, {bits33^0 -> undef3796, bytes_out^0 -> bytes_out^0 + undef3796, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ __const_257^0 <= maxcode^0 /\ i29^0 <= 0 /\ 1 + n_bits^0 + undef4525 <= __const_8^0 /\ 1 + n_bits^0 + undef4525 <= 2*__const_8^0, {bits33^0 -> -__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 1 + maxcode^0 <= __const_257^0 /\ 1 + n_bits^0 + undef4525 <= __const_8^0 /\ 1 + n_bits^0 + undef4525 <= 2*__const_8^0, {bits33^0 -> -__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l20, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 2*__const_8^0 = n_bits^0 + undef4525 /\ n_bits^0 = undef3796, {bits33^0 -> undef3796, bytes_out^0 -> bytes_out^0 + undef3796, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ __const_257^0 <= maxcode^0 /\ i29^0 <= 0 /\ 2*__const_8^0 = n_bits^0 + undef4525, {bits33^0 -> -2*__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 1 + maxcode^0 <= __const_257^0 /\ 2*__const_8^0 = n_bits^0 + undef4525, {bits33^0 -> -2*__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l20, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 1 + 2*__const_8^0 <= n_bits^0 + undef4525 /\ n_bits^0 = undef3796, {bits33^0 -> undef3796, bytes_out^0 -> bytes_out^0 + undef3796, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ __const_257^0 <= maxcode^0 /\ i29^0 <= 0 /\ 1 + 2*__const_8^0 <= n_bits^0 + undef4525, {bits33^0 -> -2*__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l42, 0 <= __const_256^0 /\ i29^0 <= 0 /\ 1 + maxcode^0 <= __const_257^0 /\ 1 + 2*__const_8^0 <= n_bits^0 + undef4525, {bits33^0 -> -2*__const_8^0 + n_bits^0 + undef4525, clear_flg^0 -> 1, free_ent^0 -> __const_257^0, offset^0 -> n_bits^0 + offset^0, rest remain the same}>
<l14, l14, 1 <= i29^0, {i29^0 -> -1 + i29^0, rest remain the same}>
<l20, l2, clear_flg^0 <= 0 /\ free_ent^0 <= maxcode^0 /\ bits33^0 = 1, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l20, l42, free_ent^0 <= maxcode^0 /\ 1 <= clear_flg^0 /\ bits33^0 = 1, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l20, l42, 1 + maxcode^0 <= free_ent^0 /\ bits33^0 = 1, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l20, l20, 2 <= bits33^0, {bits33^0 -> -1 + bits33^0, rest remain the same}>
<l20, l2, clear_flg^0 <= 0 /\ free_ent^0 <= maxcode^0 /\ 2 <= bits33^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l20, l42, free_ent^0 <= maxcode^0 /\ 1 <= clear_flg^0 /\ 2 <= bits33^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l20, l42, 1 + maxcode^0 <= free_ent^0 /\ 2 <= bits33^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l20, l20, bits33^0 <= 0, {bits33^0 -> -1 + bits33^0, rest remain the same}>
<l20, l2, bits33^0 <= 0 /\ clear_flg^0 <= 0 /\ free_ent^0 <= maxcode^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l20, l42, bits33^0 <= 0 /\ free_ent^0 <= maxcode^0 /\ 1 <= clear_flg^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l20, l42, bits33^0 <= 0 /\ 1 + maxcode^0 <= free_ent^0, {bits33^0 -> -1 + bits33^0, offset^0 -> 0, rest remain the same}>
<l22, l2, n40^0 <= i41^0 /\ maxbits^0 <= n_bits^0 /\ clear_flg^0 = 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> undef2124, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l22, l2, n40^0 <= i41^0 /\ 2 + n_bits^0 <= maxbits^0 /\ clear_flg^0 = 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> undef2124, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l22, l2, n40^0 <= i41^0 /\ clear_flg^0 = 0 /\ maxbits^0 = 1 + n_bits^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> maxmaxcode^0, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l22, l2, n40^0 <= i41^0 /\ 1 <= clear_flg^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> __const_9^0, offset^0 -> 0, rest remain the same}>
<l22, l2, n40^0 <= i41^0 /\ 1 + clear_flg^0 <= 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> __const_9^0, offset^0 -> 0, rest remain the same}>
<l22, l2, __const_16^0 <= i41^0 /\ maxbits^0 <= n_bits^0 /\ 1 + i41^0 <= n40^0 /\ clear_flg^0 = 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> undef2124, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l22, l2, __const_16^0 <= i41^0 /\ 1 + i41^0 <= n40^0 /\ 2 + n_bits^0 <= maxbits^0 /\ clear_flg^0 = 0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> undef2124, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l22, l2, __const_16^0 <= i41^0 /\ 1 + i41^0 <= n40^0 /\ clear_flg^0 = 0 /\ maxbits^0 = 1 + n_bits^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, maxcode^0 -> maxmaxcode^0, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l22, l2, __const_16^0 <= i41^0 /\ 1 <= clear_flg^0 /\ 1 + i41^0 <= n40^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> __const_9^0, offset^0 -> 0, rest remain the same}>
<l22, l2, __const_16^0 <= i41^0 /\ 1 + clear_flg^0 <= 0 /\ 1 + i41^0 <= n40^0, {bytes_out^0 -> bytes_out^0 + n_bits^0, clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> __const_9^0, offset^0 -> 0, rest remain the same}>
<l22, l22, 1 + i41^0 <= __const_16^0 /\ 1 + i41^0 <= n40^0, {i41^0 -> 1 + i41^0, rest remain the same}>
<l31, l2, n44^0 <= i45^0, {bytes_out^0 -> undef1593, offset^0 -> 0, rest remain the same}>
<l31, l2, __const_16^0 <= i45^0 /\ 1 + i45^0 <= n44^0, {bytes_out^0 -> undef1593, offset^0 -> 0, rest remain the same}>
<l31, l31, 1 + i45^0 <= __const_16^0 /\ 1 + i45^0 <= n44^0, {i45^0 -> 1 + i45^0, rest remain the same}>
<l42, l2, maxbits^0 <= n_bits^0 /\ offset^0 <= 0 /\ clear_flg^0 = 0, {maxcode^0 -> undef2124, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l42, l2, offset^0 <= 0 /\ 2 + n_bits^0 <= maxbits^0 /\ clear_flg^0 = 0, {maxcode^0 -> undef2124, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l42, l2, offset^0 <= 0 /\ clear_flg^0 = 0 /\ maxbits^0 = 1 + n_bits^0, {maxcode^0 -> maxmaxcode^0, n_bits^0 -> 1 + n_bits^0, offset^0 -> 0, rest remain the same}>
<l42, l2, offset^0 <= 0 /\ 1 <= clear_flg^0, {clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> __const_9^0, offset^0 -> 0, rest remain the same}>
<l42, l2, offset^0 <= 0 /\ 1 + clear_flg^0 <= 0, {clear_flg^0 -> 0, maxcode^0 -> undef2439, n_bits^0 -> __const_9^0, offset^0 -> 0, rest remain the same}>
<l42, l22, 1 <= offset^0, {i41^0 -> 0, n40^0 -> n_bits^0, rest remain the same}>
<l62, l2, maxmaxcode^0 <= free_ent^0 /\ 1 + in_count^0 <= checkpoint^0, {all remain the same}>
<l62, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ block_compress^0 = 0, {all remain the same}>
<l62, l11, in_count^0 <= __const_8388607^0 /\ checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef5408 <= ratio^0 /\ 1 <= block_compress^0 /\ hsize^0 = undef4947, {checkpoint^0 -> __const_10000^0 + in_count^0, i29^0 -> -__const_16^0 + undef4947, rat26^0 -> undef5408, ratio^0 -> 0, rest remain the same}>
<l62, l2, in_count^0 <= __const_8388607^0 /\ checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 <= block_compress^0 /\ 1 + ratio^0 <= undef5408, {checkpoint^0 -> __const_10000^0 + in_count^0, rat26^0 -> undef5408, ratio^0 -> undef5408, rest remain the same}>
<l62, l11, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef4904 <= ratio^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 <= block_compress^0 /\ 1 <= undef5471 /\ hsize^0 = undef4947, {checkpoint^0 -> __const_10000^0 + in_count^0, i29^0 -> -__const_16^0 + undef4947, rat26^0 -> undef4904, ratio^0 -> 0, rest remain the same}>
<l62, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 <= block_compress^0 /\ 1 + ratio^0 <= undef4904 /\ 1 <= undef5471, {checkpoint^0 -> __const_10000^0 + in_count^0, rat26^0 -> undef4904, ratio^0 -> undef4904, rest remain the same}>
<l62, l11, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef4904 <= ratio^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 <= block_compress^0 /\ 1 + undef5471 <= 0 /\ hsize^0 = undef4947, {checkpoint^0 -> __const_10000^0 + in_count^0, i29^0 -> -__const_16^0 + undef4947, rat26^0 -> undef4904, ratio^0 -> 0, rest remain the same}>
<l62, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 <= block_compress^0 /\ 1 + ratio^0 <= undef4904 /\ 1 + undef5471 <= 0, {checkpoint^0 -> __const_10000^0 + in_count^0, rat26^0 -> undef4904, ratio^0 -> undef4904, rest remain the same}>
<l62, l11, __const_2147483647^0 <= ratio^0 /\ checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 <= block_compress^0 /\ hsize^0 = undef4947 /\ undef5471 = 0, {checkpoint^0 -> __const_10000^0 + in_count^0, i29^0 -> -__const_16^0 + undef4947, rat26^0 -> __const_2147483647^0, ratio^0 -> 0, rest remain the same}>
<l62, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + ratio^0 <= __const_2147483647^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 <= block_compress^0 /\ undef5471 = 0, {checkpoint^0 -> __const_10000^0 + in_count^0, rat26^0 -> __const_2147483647^0, ratio^0 -> __const_2147483647^0, rest remain the same}>
<l62, l11, in_count^0 <= __const_8388607^0 /\ checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef5408 <= ratio^0 /\ 1 + block_compress^0 <= 0 /\ hsize^0 = undef4947, {checkpoint^0 -> __const_10000^0 + in_count^0, i29^0 -> -__const_16^0 + undef4947, rat26^0 -> undef5408, ratio^0 -> 0, rest remain the same}>
<l62, l2, in_count^0 <= __const_8388607^0 /\ checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + block_compress^0 <= 0 /\ 1 + ratio^0 <= undef5408, {checkpoint^0 -> __const_10000^0 + in_count^0, rat26^0 -> undef5408, ratio^0 -> undef5408, rest remain the same}>
<l62, l11, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef4904 <= ratio^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= undef5471 /\ hsize^0 = undef4947, {checkpoint^0 -> __const_10000^0 + in_count^0, i29^0 -> -__const_16^0 + undef4947, rat26^0 -> undef4904, ratio^0 -> 0, rest remain the same}>
<l62, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 + block_compress^0 <= 0 /\ 1 + ratio^0 <= undef4904 /\ 1 <= undef5471, {checkpoint^0 -> __const_10000^0 + in_count^0, rat26^0 -> undef4904, ratio^0 -> undef4904, rest remain the same}>
<l62, l11, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ undef4904 <= ratio^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 + block_compress^0 <= 0 /\ 1 + undef5471 <= 0 /\ hsize^0 = undef4947, {checkpoint^0 -> __const_10000^0 + in_count^0, i29^0 -> -__const_16^0 + undef4947, rat26^0 -> undef4904, ratio^0 -> 0, rest remain the same}>
<l62, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 + block_compress^0 <= 0 /\ 1 + ratio^0 <= undef4904 /\ 1 + undef5471 <= 0, {checkpoint^0 -> __const_10000^0 + in_count^0, rat26^0 -> undef4904, ratio^0 -> undef4904, rest remain the same}>
<l62, l11, __const_2147483647^0 <= ratio^0 /\ checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 + block_compress^0 <= 0 /\ hsize^0 = undef4947 /\ undef5471 = 0, {checkpoint^0 -> __const_10000^0 + in_count^0, i29^0 -> -__const_16^0 + undef4947, rat26^0 -> __const_2147483647^0, ratio^0 -> 0, rest remain the same}>
<l62, l2, checkpoint^0 <= in_count^0 /\ maxmaxcode^0 <= free_ent^0 /\ 1 + ratio^0 <= __const_2147483647^0 /\ 1 + __const_8388607^0 <= in_count^0 /\ 1 + block_compress^0 <= 0 /\ undef5471 = 0, {checkpoint^0 -> __const_10000^0 + in_count^0, rat26^0 -> __const_2147483647^0, ratio^0 -> __const_2147483647^0, rest remain the same}>
<l62, l2, 1 + free_ent^0 <= maxmaxcode^0, {free_ent^0 -> 1 + free_ent^0, rest remain the same}>
Variables:
InCnt^0, __const_429496^0, apsim_InCnt^0, c7^0, fcode5^0, i6^0, in_count^0, out_count^0, disp9^0, hsize_reg10^0, apsim_bound11113^0, __const_16^0, i29^0, __const_256^0, __const_257^0, bits33^0, bytes_out^0, free_ent^0, n_bits^0, offset^0, n44^0, __const_8^0, maxcode^0, clear_flg^0, i41^0, maxbits^0, n40^0, maxmaxcode^0, __const_9^0, i45^0, checkpoint^0, block_compress^0, __const_10000^0, __const_8388607^0, hsize^0, rat26^0, ratio^0, __const_2147483647^0

Graph 6:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l57, i3^0 = 0, {all remain the same}>

Graph 2
<l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
<l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

Graph 3
<l10, l5, __const_65536^0 <= fcode5^0 /\ hsize^0 = undef475 /\ undef473 = undef475, {hshift11^0 -> __const_8^0 - hshift11^0, hsize_reg10^0 -> undef475, i21^0 -> -__const_16^0 + undef473, rest remain the same}>

Graph 4
<l5, l3, 1 + i21^0 <= __const_16^0, {all remain the same}>

Graph 5
<l3, l2, i21^0 <= 0, {all remain the same}>

Graph 6
<l2, l25, InCnt^0 <= 0 /\ bytes_out^0 <= in_count^0, {all remain the same}>
<l2, l25, InCnt^0 <= 0 /\ 1 + in_count^0 <= bytes_out^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 5 )
( 3 , 4 )
( 5 , 3 )
( 7 , 5 )
( 10 , 2 )
( 11 , 5 )
( 14 , 5 )
( 20 , 5 )
( 22 , 5 )
( 25 , 6 )
( 31 , 5 )
( 42 , 5 )
( 57 , 1 )
( 62 , 5 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002582

Checking conditional termination of SCC {l57}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005236s
[33mRanking function: [36m-1 + count^0 - i3^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.005736

Checking conditional termination of SCC {l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001047s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002334s
Trying to remove transition: <l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007482s
Time used: 0.007305
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020741s
Time used: 0.020142
Improving Solution with cost 9 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001964s
Time used: 1.00189

LOG: SAT solveNonLinear - Elapsed time: 1.022706s
Cost: 9; Total time: 1.02203
[31mFailed at location 10: 1 + __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: 1 + __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: 1 + __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: 1 + __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: 1 + __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: 1 + __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: 1 + __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: 1 + __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: 1 + __const_65536^0 <= fcode5^0[0m
Before Improving: 
[36mQuasi-invariant at l10: 1 + __const_65536^0 <= fcode5^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005994s
Remaining time after improvement: 0.998126
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l10: 1 + __const_65536^0 <= fcode5^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
New Graphs: 
Calling Safety with literal 1 + __const_65536^0 <= fcode5^0 and entry <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 + __const_65536^0 <= fcode5^0 - Process 1
* Exit transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 + __const_65536^0 <= fcode5^0
Postcodition moved up: 1 + __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: 1 + __const_65536^0 <= hsize^0

LOG: CALL check - Post:1 + __const_65536^0 <= hsize^0 - Process 2
* Exit transition: <l0, l57, count^0 <= 0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : 1 + __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003243s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.003351s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 + __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018607s
Time used: 0.018385
Improving Solution with cost 50 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.022593s
Time used: 0.022578

LOG: SAT solveNonLinear - Elapsed time: 0.041201s
Cost: 50; Total time: 0.040963
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l57: 0 <= i3^0[0m
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l57, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {i3^0 -> 1 + i3^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005968s
Time used: 0.001506
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008155s
Time used: 0.008041
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.002267s
Time used: 1.00171

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.088162s
Calling Safety with literal 1 + __const_65536^0 <= fcode5^0 and entry <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 + __const_65536^0 <= fcode5^0 - Process 3
* Exit transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 + __const_65536^0 <= fcode5^0
Postcodition moved up: 1 + __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: 1 + __const_65536^0 <= hsize^0

LOG: CALL check - Post:1 + __const_65536^0 <= hsize^0 - Process 4
* Exit transition: <l0, l57, __const_53^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : 1 + __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003359s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.003487s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 + __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002666s
Time used: 4.00229
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.044336s
Time used: 4.00226
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.004228s
Time used: 1.00012

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.089347s
Calling Safety with literal 1 + __const_65536^0 <= fcode5^0 and entry <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 + __const_65536^0 <= fcode5^0 - Process 5
* Exit transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 + __const_65536^0 <= fcode5^0
Postcodition moved up: 1 + __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: 1 + __const_65536^0 <= hsize^0

LOG: CALL check - Post:1 + __const_65536^0 <= hsize^0 - Process 6
* Exit transition: <l0, l57, 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
* Postcondition  : 1 + __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003537s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.003673s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, hsize^0 <= __const_65536^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, hsize^0 <= __const_65536^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 + __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003526s
Time used: 4.00314
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.043407s
Time used: 4.00491
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.006592s
Time used: 1.0003

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.100236s
Calling Safety with literal 1 + __const_65536^0 <= fcode5^0 and entry <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 + __const_65536^0 <= fcode5^0 - Process 7
* Exit transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 + __const_65536^0 <= fcode5^0
Postcodition moved up: 1 + __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: 1 + __const_65536^0 <= hsize^0

LOG: CALL check - Post:1 + __const_65536^0 <= hsize^0 - Process 8
* Exit transition: <l0, l57, count^0 <= 0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : 1 + __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003467s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.003586s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 <= block_compress^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 + __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.022858s
Time used: 0.022611
Improving Solution with cost 50 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.024905s
Time used: 0.02488

LOG: SAT solveNonLinear - Elapsed time: 0.047763s
Cost: 50; Total time: 0.047491
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l57: 0 <= i3^0[0m
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l57, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 <= block_compress^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003648s
Time used: 0.001461
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011200s
Time used: 0.011075
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.002456s
Time used: 1.00187

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.118446s
Calling Safety with literal 1 + __const_65536^0 <= fcode5^0 and entry <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 + __const_65536^0 <= fcode5^0 - Process 9
* Exit transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 + __const_65536^0 <= fcode5^0
Postcodition moved up: 1 + __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: 1 + __const_65536^0 <= hsize^0

LOG: CALL check - Post:1 + __const_65536^0 <= hsize^0 - Process 10
* Exit transition: <l0, l57, __const_53^0 <= 0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : 1 + __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003644s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.003778s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 + __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002948s
Time used: 4.00261
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.016899s
Time used: 4.00015
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.004277s
Time used: 1.00003

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.062866s
Calling Safety with literal 1 + __const_65536^0 <= fcode5^0 and entry <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 + __const_65536^0 <= fcode5^0 - Process 11
* Exit transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 + __const_65536^0 <= fcode5^0
Postcodition moved up: 1 + __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: 1 + __const_65536^0 <= hsize^0

LOG: CALL check - Post:1 + __const_65536^0 <= hsize^0 - Process 12
* Exit transition: <l0, l57, 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
* Postcondition  : 1 + __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003689s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.003821s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, hsize^0 <= __const_65536^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, hsize^0 <= __const_65536^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ undef689 = undef874, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 + __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.005202s
Time used: 4.00487
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.015700s
Time used: 4.00003
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.006463s
Time used: 1.00017

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.076459s
Calling Safety with literal 1 + __const_65536^0 <= fcode5^0 and entry <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 + __const_65536^0 <= fcode5^0 - Process 13
* Exit transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 + __const_65536^0 <= fcode5^0
Postcodition moved up: 1 + __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: 1 + __const_65536^0 <= hsize^0

LOG: CALL check - Post:1 + __const_65536^0 <= hsize^0 - Process 14
* Exit transition: <l0, l57, count^0 <= 0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : 1 + __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003676s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.003802s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 + block_compress^0 <= 0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 + __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.023792s
Time used: 0.023532
Improving Solution with cost 50 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.024513s
Time used: 0.024503

LOG: SAT solveNonLinear - Elapsed time: 0.048305s
Cost: 50; Total time: 0.048035
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l57: 0 <= i3^0[0m
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l57, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 + block_compress^0 <= 0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003620s
Time used: 0.001424
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011184s
Time used: 0.011069
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.002469s
Time used: 1.00188

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.104584s
Calling Safety with literal 1 + __const_65536^0 <= fcode5^0 and entry <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 + __const_65536^0 <= fcode5^0 - Process 15
* Exit transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 + __const_65536^0 <= fcode5^0
Postcodition moved up: 1 + __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: 1 + __const_65536^0 <= hsize^0

LOG: CALL check - Post:1 + __const_65536^0 <= hsize^0 - Process 16
* Exit transition: <l0, l57, __const_53^0 <= 0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : 1 + __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003844s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.003981s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 + __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.070065s
Time used: 4.06969
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.040379s
Time used: 4.00015
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.004126s
Time used: 1.00006

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.156002s
Calling Safety with literal 1 + __const_65536^0 <= fcode5^0 and entry <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 + __const_65536^0 <= fcode5^0 - Process 17
* Exit transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : 1 + __const_65536^0 <= fcode5^0
Postcodition moved up: 1 + __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: 1 + __const_65536^0 <= hsize^0

LOG: CALL check - Post:1 + __const_65536^0 <= hsize^0 - Process 18
* Exit transition: <l0, l57, 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
* Postcondition  : 1 + __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003867s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004013s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, hsize^0 <= __const_65536^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, hsize^0 <= __const_65536^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ undef689 = undef874, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: 1 + __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.004554s
Time used: 4.00417
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.016198s
Time used: 4.00006
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.004045s
Time used: 1.00053

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.071764s
INVARIANTS: 
10: 
Quasi-INVARIANTS to narrow Graph: 
10: 1 + __const_65536^0 <= fcode5^0 , 
Narrowing transition: 
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
__const_65536^0, fcode5^0, hshift11^0
Checking conditional termination of SCC {l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000997s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002640s
Trying to remove transition: <l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008428s
Time used: 0.008276
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.024851s
Time used: 0.024107
Improving Solution with cost 9 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.002263s
Time used: 1.0022

LOG: SAT solveNonLinear - Elapsed time: 1.027115s
Cost: 9; Total time: 1.0263
[31mFailed at location 10: __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: __const_65536^0 <= fcode5^0[0m
[31mFailed at location 10: __const_65536^0 <= fcode5^0[0m
Before Improving: 
[36mQuasi-invariant at l10: __const_65536^0 <= fcode5^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006317s
Remaining time after improvement: 0.997935
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l10: __const_65536^0 <= fcode5^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
New Graphs: 
Calling Safety with literal __const_65536^0 <= fcode5^0 and entry <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:__const_65536^0 <= fcode5^0 - Process 19
* Exit transition: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : __const_65536^0 <= fcode5^0
Postcodition moved up: __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: __const_65536^0 <= hsize^0

LOG: CALL check - Post:__const_65536^0 <= hsize^0 - Process 20
* Exit transition: <l0, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004073s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004214s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, count^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, count^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.023157s
Time used: 0.022872
Improving Solution with cost 50 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.024710s
Time used: 0.024681

LOG: SAT solveNonLinear - Elapsed time: 0.047867s
Cost: 50; Total time: 0.047553
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l57: 0 <= block_compress^0 + i3^0[0m
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l57, l57, count^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {i3^0 -> 1 + i3^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003958s
Time used: 0.001573
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009881s
Time used: 0.009763
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.002674s
Time used: 1.00211

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.100618s
Calling Safety with literal __const_65536^0 <= fcode5^0 and entry <l57, l10, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:__const_65536^0 <= fcode5^0 - Process 21
* Exit transition: <l57, l10, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : __const_65536^0 <= fcode5^0
Postcodition moved up: __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: __const_65536^0 <= hsize^0

LOG: CALL check - Post:__const_65536^0 <= hsize^0 - Process 22
* Exit transition: <l0, l57, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004207s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004359s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, __const_53^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, __const_53^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.007279s
Time used: 4.00691
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.044289s
Time used: 4.00232
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.004228s
Time used: 1.00005

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.113972s
Calling Safety with literal __const_65536^0 <= fcode5^0 and entry <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:__const_65536^0 <= fcode5^0 - Process 23
* Exit transition: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : __const_65536^0 <= fcode5^0
Postcodition moved up: __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: __const_65536^0 <= hsize^0

LOG: CALL check - Post:__const_65536^0 <= hsize^0 - Process 24
* Exit transition: <l0, l57, hsize^0 <= __const_65536^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
* Postcondition  : __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004206s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004359s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, 1 <= __const_53^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, 1 <= __const_53^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.004367s
Time used: 4.00304
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.018226s
Time used: 4.00258
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.003517s
Time used: 1.00008

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.077738s
Calling Safety with literal __const_65536^0 <= fcode5^0 and entry <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:__const_65536^0 <= fcode5^0 - Process 25
* Exit transition: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : __const_65536^0 <= fcode5^0
Postcodition moved up: __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: __const_65536^0 <= hsize^0

LOG: CALL check - Post:__const_65536^0 <= hsize^0 - Process 26
* Exit transition: <l0, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004217s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004360s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, count^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, count^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.026915s
Time used: 0.026625
Improving Solution with cost 50 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.029662s
Time used: 0.029652

LOG: SAT solveNonLinear - Elapsed time: 0.056578s
Cost: 50; Total time: 0.056277
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l57: 0 <= i3^0[0m
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l57, l57, count^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003958s
Time used: 0.001628
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011560s
Time used: 0.011443
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.002750s
Time used: 1.00206

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.117899s
Calling Safety with literal __const_65536^0 <= fcode5^0 and entry <l57, l10, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:__const_65536^0 <= fcode5^0 - Process 27
* Exit transition: <l57, l10, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : __const_65536^0 <= fcode5^0
Postcodition moved up: __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: __const_65536^0 <= hsize^0

LOG: CALL check - Post:__const_65536^0 <= hsize^0 - Process 28
* Exit transition: <l0, l57, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004392s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004548s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, __const_53^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, __const_53^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003944s
Time used: 4.00353
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.017092s
Time used: 4.00019
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.003991s
Time used: 1.00006

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.078485s
Calling Safety with literal __const_65536^0 <= fcode5^0 and entry <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:__const_65536^0 <= fcode5^0 - Process 29
* Exit transition: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : __const_65536^0 <= fcode5^0
Postcodition moved up: __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: __const_65536^0 <= hsize^0

LOG: CALL check - Post:__const_65536^0 <= hsize^0 - Process 30
* Exit transition: <l0, l57, hsize^0 <= __const_65536^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
* Postcondition  : __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004415s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004567s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, 1 <= __const_53^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, 1 <= __const_53^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ undef689 = undef874, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003347s
Time used: 4.00299
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.007308s
Time used: 4.00037
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.003387s
Time used: 1.00004

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.086072s
Calling Safety with literal __const_65536^0 <= fcode5^0 and entry <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:__const_65536^0 <= fcode5^0 - Process 31
* Exit transition: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : __const_65536^0 <= fcode5^0
Postcodition moved up: __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: __const_65536^0 <= hsize^0

LOG: CALL check - Post:__const_65536^0 <= hsize^0 - Process 32
* Exit transition: <l0, l57, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004376s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004519s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, count^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, count^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.027470s
Time used: 0.02718
Improving Solution with cost 50 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.024901s
Time used: 0.024891

LOG: SAT solveNonLinear - Elapsed time: 0.052371s
Cost: 50; Total time: 0.052071
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l57: 0 <= i3^0[0m
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l57, l57, count^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004039s
Time used: 0.001657
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011964s
Time used: 0.011848
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.002692s
Time used: 1.00209

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.115699s
Calling Safety with literal __const_65536^0 <= fcode5^0 and entry <l57, l10, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:__const_65536^0 <= fcode5^0 - Process 33
* Exit transition: <l57, l10, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : __const_65536^0 <= fcode5^0
Postcodition moved up: __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: __const_65536^0 <= hsize^0

LOG: CALL check - Post:__const_65536^0 <= hsize^0 - Process 34
* Exit transition: <l0, l57, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
* Postcondition  : __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004645s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004800s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, __const_53^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, __const_53^0 <= 0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ __const_429496^0 = undef689, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, __const_53^0 <= 0 /\ hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003604s
Time used: 4.00325
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.016978s
Time used: 4.00006
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.004035s
Time used: 1.00004

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.071958s
Calling Safety with literal __const_65536^0 <= fcode5^0 and entry <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>

LOG: CALL check - Post:__const_65536^0 <= fcode5^0 - Process 35
* Exit transition: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
* Postcondition  : __const_65536^0 <= fcode5^0
Postcodition moved up: __const_65536^0 <= hsize^0

LOG: Try proving POST
Postcondition: __const_65536^0 <= hsize^0

LOG: CALL check - Post:__const_65536^0 <= hsize^0 - Process 36
* Exit transition: <l0, l57, hsize^0 <= __const_65536^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
* Postcondition  : __const_65536^0 <= hsize^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004623s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.004776s

LOG: NarrowEntry size 1
Narrowing transition: 
<l57, l57, 1 + i3^0 <= count^0, {i3^0 -> 1 + i3^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l57, 1 <= __const_53^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ i3^0 = 0 /\ undef689 = undef874, {all remain the same}>
END ENTRIES:
GRAPH:
<l57, l57, 1 <= __const_53^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ 1 + i3^0 <= count^0 /\ undef689 = undef874, {i3^0 -> 1 + i3^0, rest remain the same}>
END GRAPH:
EXIT: <l57, l10, hsize^0 <= __const_65536^0 /\ count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
POST: __const_65536^0 <= fcode5^0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.008064s
Time used: 4.00771
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.015172s
Time used: 4.00009
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.003869s
Time used: 1.0005

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 9.084231s
INVARIANTS: 
10: 
Quasi-INVARIANTS to narrow Graph: 
10: __const_65536^0 <= fcode5^0 , 
Narrowing transition: 
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
__const_65536^0, fcode5^0, hshift11^0
Checking conditional termination of SCC {l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001068s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002771s
Trying to remove transition: <l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009067s
Time used: 0.008916
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.004878s
Time used: 4.0041
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.007442s
Time used: 4.00308
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005764s
Time used: 1.00004
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.031897s
Time used: 0.025382
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.026160s
Time used: 1.02609

LOG: SAT solveNonLinear - Elapsed time: 1.058057s
Cost: 1; Total time: 1.05147
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l10: 0 <= 1 + hshift11^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l10, 1 + fcode5^0 <= __const_65536^0 /\ 0 <= 1 + hshift11^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l10, 1 + fcode5^0 <= __const_65536^0 /\ 0 <= 1 + hshift11^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - hshift11^0[0m
New Graphs: 
Transitions:
<l10, l10, 1 + fcode5^0 <= __const_65536^0 /\ 50001 <= hshift11^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
__const_65536^0, fcode5^0, hshift11^0
Checking conditional termination of SCC {l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001097s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003229s
Trying to remove transition: <l10, l10, 1 + fcode5^0 <= __const_65536^0 /\ 50001 <= hshift11^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.012416s
Time used: 0.012242
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.004673s
Time used: 4.00378
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.008388s
Time used: 4.0031
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005388s
Time used: 1.00004
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.034278s
Time used: 0.027848
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.022325s
Time used: 1.02225

LOG: SAT solveNonLinear - Elapsed time: 1.056603s
Cost: 1; Total time: 1.0501
[33mQuasi-ranking function: [36m50000 + __const_65536^0 - hshift11^0[0m
New Graphs: 
Transitions:
<l10, l10, 1 + fcode5^0 <= __const_65536^0 /\ 50001 + __const_65536^0 <= hshift11^0 /\ 50001 <= hshift11^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
__const_65536^0, fcode5^0, hshift11^0
Checking conditional termination of SCC {l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001223s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003739s
Trying to remove transition: <l10, l10, 1 + fcode5^0 <= __const_65536^0 /\ 50001 + __const_65536^0 <= hshift11^0 /\ 50001 <= hshift11^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011292s
Time used: 0.011095
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.004598s
Time used: 4.00365
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.050880s
Time used: 4.02182
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005668s
Time used: 1.00008
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.035446s
Time used: 0.028552
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.007397s
Time used: 1.0073

LOG: SAT solveNonLinear - Elapsed time: 1.042843s
Cost: 1; Total time: 1.03585
[33mQuasi-ranking function: [36m50000 - __const_65536^0 - hshift11^0[0m
New Graphs: 
Transitions:
<l10, l10, 1 + fcode5^0 <= __const_65536^0 /\ 50001 + __const_65536^0 <= hshift11^0 /\ 50001 <= __const_65536^0 + hshift11^0 /\ 50001 <= hshift11^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
__const_65536^0, fcode5^0, hshift11^0
Checking conditional termination of SCC {l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001363s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004300s
Trying to remove transition: <l10, l10, 1 + fcode5^0 <= __const_65536^0 /\ 50001 + __const_65536^0 <= hshift11^0 /\ 50001 <= __const_65536^0 + hshift11^0 /\ 50001 <= hshift11^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011236s
Time used: 0.01103
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.578488s
Time used: 1.57774
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.983366s
Time used: 0.979011
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.991562s
Time used: 0.987867
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.002213s
Time used: 0.995884

Proving non-termination of subgraph 2
Transitions:
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>
Variables:
__const_65536^0, fcode5^0, hshift11^0

Checking conditional non-termination of SCC {l10}...
EXIT TRANSITIONS:
<l10, end, __const_65536^0 <= fcode5^0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.030134s
Time used: 0.029758
Improving Solution with cost 9 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.022928s
Time used: 0.022916

LOG: SAT solveNonLinear - Elapsed time: 0.053061s
Cost: 9; Total time: 0.052674
[31mFailed at location 10: 1 + fcode5^0 <= __const_65536^0[0m
[31mFailed at location 10: 1 + fcode5^0 <= __const_65536^0[0m
[31mFailed at location 10: 1 + fcode5^0 <= __const_65536^0[0m
[31mFailed at location 10: 1 + fcode5^0 <= __const_65536^0[0m
[31mFailed at location 10: 1 + fcode5^0 <= __const_65536^0[0m
[31mFailed at location 10: 1 + fcode5^0 <= __const_65536^0[0m
[31mFailed at location 10: 1 + fcode5^0 <= __const_65536^0[0m
[31mFailed at location 10: 1 + fcode5^0 <= __const_65536^0[0m
[31mFailed at location 10: 1 + fcode5^0 <= __const_65536^0[0m
Before Improving: 
[36mQuasi-invariant at l10: 1 + fcode5^0 <= __const_65536^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005469s
Remaining time after improvement: 0.998005
Minimizing number of undef constraints...

LOG: CALL solveNonLinear

LOG: RETURN solveNonLinear - Elapsed time: 0.011591s
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l10: 1 + fcode5^0 <= __const_65536^0[0m
Constraint over undef '1 + undef532 <= __const_65536^0' in transition:
<l10, l10, 1 + fcode5^0 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l10: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l10, 1 + fcode5^0 <= __const_65536^0 /\ 1 + undef532 <= __const_65536^0, {fcode5^0 -> undef532, hshift11^0 -> 1 + hshift11^0, rest remain the same}>

Calling reachability with...
Transition: <l10, end, true, {all remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l10, end, true, {all remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l10, end, true, {all remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l10, end, true, {all remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l10, end, true, {all remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l10, end, true, {all remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l10, end, true, {all remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l10, end, true, {all remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l10, end, true, {all remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
OPEN EXITS: 
<l10, end, 1 + fcode5^0 <= __const_65536^0, {all remain the same}>
<l10, end, 1 + fcode5^0 <= __const_65536^0, {all remain the same}>
<l10, end, 1 + fcode5^0 <= __const_65536^0, {all remain the same}>
<l10, end, 1 + fcode5^0 <= __const_65536^0, {all remain the same}>
<l10, end, 1 + fcode5^0 <= __const_65536^0, {all remain the same}>
<l10, end, 1 + fcode5^0 <= __const_65536^0, {all remain the same}>
<l10, end, 1 + fcode5^0 <= __const_65536^0, {all remain the same}>
<l10, end, 1 + fcode5^0 <= __const_65536^0, {all remain the same}>
<l10, end, 1 + fcode5^0 <= __const_65536^0, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= count^0 /\ block_compress^0 = 0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 <= block_compress^0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, __const_53^0 <= 0 /\ count^0 <= i3^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ __const_429496^0 = undef689, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
Transition: <l57, l10, count^0 <= i3^0 /\ 1 <= __const_53^0 /\ 1 + block_compress^0 <= 0 /\ 1 <= count^0 /\ undef689 = undef874, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}>
Conditions: 1 + fcode5^0 <= __const_65536^0, 
OPEN EXITS: 
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_256^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0)
<l57, l10, count^0 <= i3^0, {InCnt^0 -> -1 + count^0, apsim_InCnt^0 -> -1 + __const_53^0, bytes_out^0 -> 3, checkpoint^0 -> __const_10000^0, clear_flg^0 -> 0, fcode5^0 -> hsize^0, free_ent^0 -> __const_257^0, hshift11^0 -> 0, i6^0 -> 0, in_count^0 -> 1, maxbits^0 -> __const_16^0, maxcode^0 -> undef5274, maxmaxcode^0 -> undef5275, n_bits^0 -> __const_9^0, offset^0 -> 0, out_count^0 -> 0, ratio^0 -> 0, rest remain the same}> (condsUp: 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0)

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, block_compress^0 = 0, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= count^0, block_compress^0 = 0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 <= block_compress^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 <= block_compress^0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 <= block_compress^0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, count^0 <= 0, 1 + block_compress^0 <= 0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, __const_53^0 <= 0, 1 + block_compress^0 <= 0, 1 <= count^0, __const_429496^0 = undef689, 1 + hsize^0 <= __const_65536^0, 
Transition: <l0, l57, i3^0 = 0, {all remain the same}>
Conditions: count^0 <= i3^0, 1 <= __const_53^0, 1 + block_compress^0 <= 0, 1 <= count^0, undef689 = undef874, 1 + hsize^0 <= __const_65536^0, 
OPEN EXITS: 
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ __const_429496^0 = undef689 /\ block_compress^0 = 0 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 <= block_compress^0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>
<l0, l57, count^0 <= 0 /\ count^0 <= i3^0 /\ 1 + hsize^0 <= __const_65536^0 /\ 1 + block_compress^0 <= 0 /\ __const_429496^0 = undef689 /\ i3^0 = 0, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
