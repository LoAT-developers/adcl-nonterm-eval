WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f96_0_random_GT : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-arg2P0 == 0 /\ arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
   1: f1_0_main_Load -> f96_0_random_GT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ arg1 > 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -arg1+arg1P1 <= 0), cost: 1
   4: f1_0_main_Load -> f167_0_log_LT : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-arg3P4 == 0 /\ -arg2P4 == 0 /\ -arg2 == 0 /\ arg1 > 0 /\ -arg1P4 == 0), cost: 1
   2: f96_0_random_GT -> f154_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (-arg1P2+arg1 >= 0 /\ -arg3P2 == 0 /\ arg1P2 > 0 /\ arg2-arg2P2 == 0 /\ arg1 > 0 /\ -1+x70 > 0), cost: 1
   3: f96_0_random_GT -> f154_0_main_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg3P3 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1 <= 0 /\ arg2-arg2P3 == 0 /\ arg1 > 0 /\ -1+x110 > 0), cost: 1
   5: f96_0_random_GT -> f167_0_log_LT : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (-arg3P5 == 0 /\ arg1 > 0 /\ arg2-arg2P5 == 0 /\ -arg1P5 == 0), cost: 1
   6: f154_0_main_InvokeMethod -> f167_0_log_LT : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1P6+arg3 == 0 /\ arg3-arg3P6 == 0 /\ -1+x190 > 0 /\ arg1 > 0 /\ arg2-arg2P6 == 0), cost: 1
   7: f167_0_log_LT -> f167_0_log_LT\' : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, (-arg3P7+arg1 == 0 /\ arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ arg1-arg1P7 == 0 /\ -1+arg2 > 0 /\ arg2-arg2P7 == 0 /\ -1+arg1 > 0 /\ arg2-x280 > 0), cost: 1
   8: f167_0_log_LT\' -> f167_0_log_LT : arg2'=arg2P8, arg1'=arg1P8, arg3'=arg3P8, (arg1-arg1P8 == 0 /\ arg1-arg3 == 0 /\ arg2-arg2P8 > 0 /\ -arg2+arg1 <= 0 /\ -1+arg2 > 0 /\ -arg3P8+arg1 == 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 1
   9: __init -> f1_0_main_Load : arg2'=arg2P9, arg1'=arg1P9, arg3'=arg3P9, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f96_0_random_GT : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-arg2P0 == 0 /\ arg2 > 0 /\ arg1 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
New rule:
f1_0_main_Load -> f96_0_random_GT : arg2'=0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f96_0_random_GT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ arg1 > 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -arg1+arg1P1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f96_0_random_GT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -arg1+arg1P1 <= 0), cost: 1

Applied preprocessing
Original rule:
f96_0_random_GT -> f154_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (-arg1P2+arg1 >= 0 /\ -arg3P2 == 0 /\ arg1P2 > 0 /\ arg2-arg2P2 == 0 /\ arg1 > 0 /\ -1+x70 > 0), cost: 1
New rule:
f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P2, arg3'=0, (-arg1P2+arg1 >= 0 /\ arg1P2 > 0), cost: 1

Applied preprocessing
Original rule:
f96_0_random_GT -> f154_0_main_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg3P3 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1 <= 0 /\ arg2-arg2P3 == 0 /\ arg1 > 0 /\ -1+x110 > 0), cost: 1
New rule:
f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P3, arg3'=arg3P3, (1+arg3P3 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f167_0_log_LT : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-arg3P4 == 0 /\ -arg2P4 == 0 /\ -arg2 == 0 /\ arg1 > 0 /\ -arg1P4 == 0), cost: 1
New rule:
f1_0_main_Load -> f167_0_log_LT : arg2'=0, arg1'=0, arg3'=0, (arg2 == 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f96_0_random_GT -> f167_0_log_LT : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (-arg3P5 == 0 /\ arg1 > 0 /\ arg2-arg2P5 == 0 /\ -arg1P5 == 0), cost: 1
New rule:
f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg3'=0, arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f154_0_main_InvokeMethod -> f167_0_log_LT : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1P6+arg3 == 0 /\ arg3-arg3P6 == 0 /\ -1+x190 > 0 /\ arg1 > 0 /\ arg2-arg2P6 == 0), cost: 1
New rule:
f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f167_0_log_LT -> f167_0_log_LT\' : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, (-arg3P7+arg1 == 0 /\ arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ arg1-arg1P7 == 0 /\ -1+arg2 > 0 /\ arg2-arg2P7 == 0 /\ -1+arg1 > 0 /\ arg2-x280 > 0), cost: 1
New rule:
f167_0_log_LT -> f167_0_log_LT\' : arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -1+arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f167_0_log_LT\' -> f167_0_log_LT : arg2'=arg2P8, arg1'=arg1P8, arg3'=arg3P8, (arg1-arg1P8 == 0 /\ arg1-arg3 == 0 /\ arg2-arg2P8 > 0 /\ -arg2+arg1 <= 0 /\ -1+arg2 > 0 /\ -arg3P8+arg1 == 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 1
New rule:
f167_0_log_LT\' -> f167_0_log_LT : arg2'=arg2P8, arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 1

Simplified rules
Start location: __init
  10: f1_0_main_Load -> f96_0_random_GT : arg2'=0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
  11: f1_0_main_Load -> f96_0_random_GT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -arg1+arg1P1 <= 0), cost: 1
  14: f1_0_main_Load -> f167_0_log_LT : arg2'=0, arg1'=0, arg3'=0, (arg2 == 0 /\ arg1 > 0), cost: 1
  12: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P2, arg3'=0, (-arg1P2+arg1 >= 0 /\ arg1P2 > 0), cost: 1
  13: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P3, arg3'=arg3P3, (1+arg3P3 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1 <= 0), cost: 1
  15: f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg3'=0, arg1 > 0, cost: 1
  16: f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg1 > 0, cost: 1
  17: f167_0_log_LT -> f167_0_log_LT\' : arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -1+arg1 > 0), cost: 1
  18: f167_0_log_LT\' -> f167_0_log_LT : arg2'=arg2P8, arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 1
   9: __init -> f1_0_main_Load : arg2'=arg2P9, arg1'=arg1P9, arg3'=arg3P9, TRUE, cost: 1


Eliminating location f167_0_log_LT\' by chaining:

Applied chaining
First rule:
f167_0_log_LT -> f167_0_log_LT\' : arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -1+arg1 > 0), cost: 1
Second rule:
f167_0_log_LT\' -> f167_0_log_LT : arg2'=arg2P8, arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 1
New rule:
f167_0_log_LT -> f167_0_log_LT : arg2'=arg2P8, arg3'=arg1, (0 == 0 /\ arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 2

Applied simplification
Original rule:
f167_0_log_LT -> f167_0_log_LT : arg2'=arg2P8, arg3'=arg1, (0 == 0 /\ arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 2
New rule:
f167_0_log_LT -> f167_0_log_LT : arg2'=arg2P8, arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 2

Applied deletion
Removed the following rules: 17 18

Eliminated locations on linear paths
Start location: __init
  10: f1_0_main_Load -> f96_0_random_GT : arg2'=0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
  11: f1_0_main_Load -> f96_0_random_GT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -arg1+arg1P1 <= 0), cost: 1
  14: f1_0_main_Load -> f167_0_log_LT : arg2'=0, arg1'=0, arg3'=0, (arg2 == 0 /\ arg1 > 0), cost: 1
  12: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P2, arg3'=0, (-arg1P2+arg1 >= 0 /\ arg1P2 > 0), cost: 1
  13: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P3, arg3'=arg3P3, (1+arg3P3 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1 <= 0), cost: 1
  15: f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg3'=0, arg1 > 0, cost: 1
  16: f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg1 > 0, cost: 1
  19: f167_0_log_LT -> f167_0_log_LT : arg2'=arg2P8, arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 2
   9: __init -> f1_0_main_Load : arg2'=arg2P9, arg1'=arg1P9, arg3'=arg3P9, TRUE, cost: 1


Accelerated simple loops
Start location: __init
  10: f1_0_main_Load -> f96_0_random_GT : arg2'=0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
  11: f1_0_main_Load -> f96_0_random_GT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -arg1+arg1P1 <= 0), cost: 1
  14: f1_0_main_Load -> f167_0_log_LT : arg2'=0, arg1'=0, arg3'=0, (arg2 == 0 /\ arg1 > 0), cost: 1
  12: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P2, arg3'=0, (-arg1P2+arg1 >= 0 /\ arg1P2 > 0), cost: 1
  13: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P3, arg3'=arg3P3, (1+arg3P3 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1 <= 0), cost: 1
  15: f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg3'=0, arg1 > 0, cost: 1
  16: f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg1 > 0, cost: 1
  19: f167_0_log_LT -> f167_0_log_LT : arg2'=arg2P8, arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 2
   9: __init -> f1_0_main_Load : arg2'=arg2P9, arg1'=arg1P9, arg3'=arg3P9, TRUE, cost: 1


Applied chaining
First rule:
f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg1 > 0, cost: 1
Second rule:
f167_0_log_LT -> f167_0_log_LT : arg2'=arg2P8, arg3'=arg1, (arg1-arg3 == 0 /\ -arg2+arg1 <= 0 /\ -arg2P8*arg1+arg2 >= 0 /\ arg2P8*arg1-arg2+arg1 > 0 /\ -1+arg1 > 0), cost: 2
New rule:
f154_0_main_InvokeMethod -> f167_0_log_LT : arg2'=arg2P8, arg1'=arg3, (arg2-arg2P8*arg3 >= 0 /\ -1+arg3 > 0 /\ -arg2+arg2P8*arg3+arg3 > 0 /\ arg1 > 0 /\ -arg2+arg3 <= 0), cost: 3

Applied deletion
Removed the following rules: 19

Chained accelerated rules with incoming rules
Start location: __init
  10: f1_0_main_Load -> f96_0_random_GT : arg2'=0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
  11: f1_0_main_Load -> f96_0_random_GT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -arg1+arg1P1 <= 0), cost: 1
  14: f1_0_main_Load -> f167_0_log_LT : arg2'=0, arg1'=0, arg3'=0, (arg2 == 0 /\ arg1 > 0), cost: 1
  12: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P2, arg3'=0, (-arg1P2+arg1 >= 0 /\ arg1P2 > 0), cost: 1
  13: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1P3, arg3'=arg3P3, (1+arg3P3 > 0 /\ arg1P3 > 0 /\ arg1P3-arg1 <= 0), cost: 1
  15: f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg3'=0, arg1 > 0, cost: 1
  16: f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg1 > 0, cost: 1
  20: f154_0_main_InvokeMethod -> f167_0_log_LT : arg2'=arg2P8, arg1'=arg3, (arg2-arg2P8*arg3 >= 0 /\ -1+arg3 > 0 /\ -arg2+arg2P8*arg3+arg3 > 0 /\ arg1 > 0 /\ -arg2+arg3 <= 0), cost: 3
   9: __init -> f1_0_main_Load : arg2'=arg2P9, arg1'=arg1P9, arg3'=arg3P9, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

