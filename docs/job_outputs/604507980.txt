NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f193_0_createTree_Return -> f295_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2-arg2p1 == 0 /\ arg1 > 0), cost: 1
   4: f295_0_main_InvokeMethod -> f2302_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0), cost: 1
   7: f295_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (arg2 > 0 /\ arg1 > 0 /\ 1+x35 > 0), cost: 1
  16: f295_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (1+arg1p17 > 0 /\ arg2 > 0 /\ 1+arg2p17 > 0 /\ 1+arg1p17-arg1 <= 0 /\ 1+arg2p17-arg1 <= 0 /\ x92 > 0 /\ 1+arg3p17-arg1 <= 0 /\ 1+arg3p17 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f295_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
   2: f1_0_main_Load -> f2292_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (arg1p3 > 0 /\ arg2p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
   6: f1_0_main_Load -> f548_0_random_ArrayAccess : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f2292_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg2 > 0 /\ 1+x38 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1 > 0), cost: 1
  18: f2292_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, (arg2 > 0 /\ arg3p19 > 0 /\ x108 > 0 /\ -arg2+arg1p19 <= 0 /\ 1+arg2p19-arg1 <= 0 /\ arg1p19 > 0 /\ -arg2+arg3p19 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ 1+arg2p19 > 0 /\ arg1 > 0), cost: 1
  19: f2292_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, (arg2p20 > 0 /\ arg2 > 0 /\ arg3p20 > 0 /\ -arg2+arg1p20 <= 0 /\ 2-arg2+arg4 <= 0 /\ arg1p20 > 0 /\ arg1 > 0 /\ -arg2+arg3p20 <= 0), cost: 1
   3: f508_0_createTree_Return -> f2292_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ -arg4p4+arg4 == 0 /\ arg1p4 > 0 /\ arg3-arg3p4 == 0 /\ arg1p4-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg1p4-arg2 <= 0 /\ arg1 > 0), cost: 1
  17: f2302_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, (1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0), cost: 1
   5: f509_0_createTree_Return -> f2302_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg3-arg3p6 == 0 /\ 2+arg3-arg2 <= 0 /\ 1-arg2+arg1p6 <= 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ -arg2+arg2p6 <= 0 /\ -1+arg2p6 > 0 /\ arg1 > 0), cost: 1
   9: f548_0_random_ArrayAccess -> f2274_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (-1+arg1p10 > 0 /\ arg3p10 > 0 /\ 1+x43 > 0 /\ 1+x43-arg4p10 == 0 /\ -1+arg2p10 > 0), cost: 1
  10: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg2p11 > 0 /\ 2+arg2p11-arg2 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2 > 0 /\ 1-arg4p11+arg4 == 0 /\ -1+arg3-arg3p11 == 0 /\ arg1p11 > 0 /\ arg1p11-arg1 <= 0 /\ arg1 > 0), cost: 1
  11: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (2-arg2+arg2p12 <= 0 /\ arg1p12-arg1 <= 0 /\ x59 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ -2+arg2 > 0 /\ -1-arg3p12+arg3 == 0 /\ arg2p12 > 0 /\ 1-arg4p12+arg4 == 0 /\ arg1 > 0), cost: 1
  12: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (arg3 > 0 /\ arg1p13 > 0 /\ 1-arg4p13+arg4 == 0 /\ 1+arg4 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0 /\ -1+arg3-arg3p13 == 0 /\ x66 > 0 /\ arg1 > 0), cost: 1
  13: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, (-1-arg3p14+arg3 == 0 /\ arg3 > 0 /\ 1-arg4p14+arg4 == 0 /\ 1+arg4 > 0 /\ arg1p14 > 0 /\ -1+arg2 > 0 /\ arg2p14 > 0 /\ arg1 > 0), cost: 1
  14: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, (1-arg4p15+arg4 == 0 /\ arg3 > 0 /\ -2+arg1p15-arg1 <= 0 /\ -2-arg2+arg1p15 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p15-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg1p15 > 0 /\ -3+arg2p15 > 0 /\ -1+arg3-arg3p15 == 0 /\ -2+arg2p15-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
  15: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, (-2-arg2+arg2p16 <= 0 /\ arg3 > 0 /\ -3+arg1p16 > 0 /\ 1+arg4 > 0 /\ -1-arg3p16+arg3 == 0 /\ -2+arg1p16-arg1 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p16 <= 0 /\ 1-arg4p16+arg4 == 0 /\ -2+arg2p16-arg1 <= 0 /\ -3+arg2p16 > 0 /\ -1+arg1 > 0 /\ x85 > 0), cost: 1
  20: f1394_0_less_leaves_NULL -> f1268_0_append_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, (arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0), cost: 1
  21: f1394_0_less_leaves_NULL -> f1554_0_less_leaves_InvokeMethod : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, (arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0), cost: 1
  22: f1394_0_less_leaves_NULL -> f1554_0_less_leaves_InvokeMethod : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, (arg3 > 0 /\ arg2 > 0 /\ 1+arg2p23 > 0 /\ arg1p23 > 0 /\ 1-arg2+arg2p23 <= 0 /\ arg1 > 0), cost: 1
  26: f1268_0_append_NONNULL -> f1410_0_append_NULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, (2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0), cost: 1
  23: f1554_0_less_leaves_InvokeMethod -> f1268_0_append_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, (1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0), cost: 1
  24: f1554_0_less_leaves_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, (arg1p25-arg1 <= 0 /\ 1+arg2p25 > 0 /\ 1+arg1 > 0 /\ 1+arg3p25 > 0 /\ 1+arg2 > 0 /\ arg3p25-arg1 <= 0 /\ 1+arg1p25 > 0), cost: 1
  25: f1554_0_less_leaves_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, (1+arg1p26 > 0 /\ arg1p26-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ arg3p26-arg1 <= 0 /\ arg2p26 > 0 /\ 1+arg3p26 > 0), cost: 1
  27: f1410_0_append_NULL -> f1410_0_append_NULL : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, (-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0), cost: 1
  28: __init -> f1_0_main_Load : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4
  29: f193_0_createTree_Return -> f295_0_main_InvokeMethod : arg1'=arg1p1, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
   4: f295_0_main_InvokeMethod -> f2302_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0), cost: 1
  32: f295_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (arg2 > 0 /\ arg1 > 0), cost: 1
  41: f295_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (1+arg1p17 > 0 /\ arg2 > 0 /\ 1+arg2p17 > 0 /\ 1+arg1p17-arg1 <= 0 /\ 1+arg2p17-arg1 <= 0 /\ 1+arg3p17-arg1 <= 0 /\ 1+arg3p17 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f295_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
   2: f1_0_main_Load -> f2292_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (arg1p3 > 0 /\ arg2p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
   6: f1_0_main_Load -> f548_0_random_ArrayAccess : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  19: f2292_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, (arg2p20 > 0 /\ arg2 > 0 /\ arg3p20 > 0 /\ -arg2+arg1p20 <= 0 /\ 2-arg2+arg4 <= 0 /\ arg1p20 > 0 /\ arg1 > 0 /\ -arg2+arg3p20 <= 0), cost: 1
  33: f2292_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1 > 0), cost: 1
  42: f2292_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, (arg2 > 0 /\ arg3p19 > 0 /\ -arg2+arg1p19 <= 0 /\ 1+arg2p19-arg1 <= 0 /\ arg1p19 > 0 /\ -arg2+arg3p19 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ 1+arg2p19 > 0 /\ arg1 > 0), cost: 1
  30: f508_0_createTree_Return -> f2292_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, (-1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg1p4-arg2 <= 0 /\ arg1 > 0), cost: 1
  17: f2302_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, (1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0), cost: 1
  31: f509_0_createTree_Return -> f2302_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ 2+arg3-arg2 <= 0 /\ 1-arg2+arg1p6 <= 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ -arg2+arg2p6 <= 0 /\ -1+arg2p6 > 0 /\ arg1 > 0), cost: 1
  34: f548_0_random_ArrayAccess -> f2274_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=1+x43, (-1+arg1p10 > 0 /\ arg3p10 > 0 /\ 1+x43 > 0 /\ -1+arg2p10 > 0), cost: 1
  35: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=1+arg4, (arg2p11 > 0 /\ 2+arg2p11-arg2 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2 > 0 /\ arg1p11 > 0 /\ arg1p11-arg1 <= 0 /\ arg1 > 0), cost: 1
  36: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=1+arg4, (2-arg2+arg2p12 <= 0 /\ arg1p12-arg1 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ -2+arg2 > 0 /\ arg2p12 > 0 /\ arg1 > 0), cost: 1
  37: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ arg1p13 > 0 /\ 1+arg4 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0 /\ arg1 > 0), cost: 1
  38: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ 1+arg4 > 0 /\ arg1p14 > 0 /\ -1+arg2 > 0 /\ arg2p14 > 0 /\ arg1 > 0), cost: 1
  39: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p15, arg2'=arg2p15, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -2+arg1p15-arg1 <= 0 /\ -2-arg2+arg1p15 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p15-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg1p15 > 0 /\ -3+arg2p15 > 0 /\ -2+arg2p15-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
  40: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p16 <= 0 /\ arg3 > 0 /\ -3+arg1p16 > 0 /\ 1+arg4 > 0 /\ -2+arg1p16-arg1 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p16 <= 0 /\ -2+arg2p16-arg1 <= 0 /\ -3+arg2p16 > 0 /\ -1+arg1 > 0), cost: 1
  20: f1394_0_less_leaves_NULL -> f1268_0_append_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, (arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0), cost: 1
  21: f1394_0_less_leaves_NULL -> f1554_0_less_leaves_InvokeMethod : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, (arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0), cost: 1
  22: f1394_0_less_leaves_NULL -> f1554_0_less_leaves_InvokeMethod : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, (arg3 > 0 /\ arg2 > 0 /\ 1+arg2p23 > 0 /\ arg1p23 > 0 /\ 1-arg2+arg2p23 <= 0 /\ arg1 > 0), cost: 1
  26: f1268_0_append_NONNULL -> f1410_0_append_NULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, (2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0), cost: 1
  23: f1554_0_less_leaves_InvokeMethod -> f1268_0_append_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, (1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0), cost: 1
  24: f1554_0_less_leaves_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, (arg1p25-arg1 <= 0 /\ 1+arg2p25 > 0 /\ 1+arg1 > 0 /\ 1+arg3p25 > 0 /\ 1+arg2 > 0 /\ arg3p25-arg1 <= 0 /\ 1+arg1p25 > 0), cost: 1
  25: f1554_0_less_leaves_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, (1+arg1p26 > 0 /\ arg1p26-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ arg3p26-arg1 <= 0 /\ arg2p26 > 0 /\ 1+arg3p26 > 0), cost: 1
  27: f1410_0_append_NULL -> f1410_0_append_NULL : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, (-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0), cost: 1
  28: __init -> f1_0_main_Load : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, T, cost: 1

	Propagated Equalities

	Original rule:
	f193_0_createTree_Return -> f295_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2-arg2p1 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f193_0_createTree_Return -> f295_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2, arg3'=arg3p1, arg4'=arg4p1, (0 == 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p1 = arg2
		
	Simplified Guard

	Original rule:
	f193_0_createTree_Return -> f295_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2, arg3'=arg3p1, arg4'=arg4p1, (0 == 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f193_0_createTree_Return -> f295_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f193_0_createTree_Return -> f295_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f193_0_createTree_Return -> f295_0_main_InvokeMethod : arg1'=arg1p1, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f508_0_createTree_Return -> f2292_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ -arg4p4+arg4 == 0 /\ arg1p4 > 0 /\ arg3-arg3p4 == 0 /\ arg1p4-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg1p4-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f508_0_createTree_Return -> f2292_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3, arg4'=arg4, (0 == 0 /\ -1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg1p4-arg2 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p4 = arg4
		
		propagated equality arg3p4 = arg3
		
	Simplified Guard

	Original rule:
	f508_0_createTree_Return -> f2292_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3, arg4'=arg4, (0 == 0 /\ -1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg1p4-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f508_0_createTree_Return -> f2292_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3, arg4'=arg4, (-1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg1p4-arg2 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f508_0_createTree_Return -> f2292_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3, arg4'=arg4, (-1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg1p4-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f508_0_createTree_Return -> f2292_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, (-1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg1p4-arg2 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f509_0_createTree_Return -> f2302_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg3-arg3p6 == 0 /\ 2+arg3-arg2 <= 0 /\ 1-arg2+arg1p6 <= 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ -arg2+arg2p6 <= 0 /\ -1+arg2p6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f509_0_createTree_Return -> f2302_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3, arg4'=arg4p6, (0 == 0 /\ arg1p6-arg1 <= 0 /\ 2+arg3-arg2 <= 0 /\ 1-arg2+arg1p6 <= 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ -arg2+arg2p6 <= 0 /\ -1+arg2p6 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p6 = arg3
		
	Simplified Guard

	Original rule:
	f509_0_createTree_Return -> f2302_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3, arg4'=arg4p6, (0 == 0 /\ arg1p6-arg1 <= 0 /\ 2+arg3-arg2 <= 0 /\ 1-arg2+arg1p6 <= 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ -arg2+arg2p6 <= 0 /\ -1+arg2p6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f509_0_createTree_Return -> f2302_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ 2+arg3-arg2 <= 0 /\ 1-arg2+arg1p6 <= 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ -arg2+arg2p6 <= 0 /\ -1+arg2p6 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f509_0_createTree_Return -> f2302_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ 2+arg3-arg2 <= 0 /\ 1-arg2+arg1p6 <= 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ -arg2+arg2p6 <= 0 /\ -1+arg2p6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f509_0_createTree_Return -> f2302_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ 2+arg3-arg2 <= 0 /\ 1-arg2+arg1p6 <= 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ -arg2+arg2p6 <= 0 /\ -1+arg2p6 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f295_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (arg2 > 0 /\ arg1 > 0 /\ 1+x35 > 0), cost: 1
	New rule:
	f295_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (arg2 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2292_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg2 > 0 /\ 1+x38 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2292_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f548_0_random_ArrayAccess -> f2274_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (-1+arg1p10 > 0 /\ arg3p10 > 0 /\ 1+x43 > 0 /\ 1+x43-arg4p10 == 0 /\ -1+arg2p10 > 0), cost: 1
	New rule:
	f548_0_random_ArrayAccess -> f2274_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=1+x43, (0 == 0 /\ -1+arg1p10 > 0 /\ arg3p10 > 0 /\ 1+x43 > 0 /\ -1+arg2p10 > 0), cost: 1
	
		propagated equality arg4p10 = 1+x43
		
	Simplified Guard

	Original rule:
	f548_0_random_ArrayAccess -> f2274_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=1+x43, (0 == 0 /\ -1+arg1p10 > 0 /\ arg3p10 > 0 /\ 1+x43 > 0 /\ -1+arg2p10 > 0), cost: 1
	New rule:
	f548_0_random_ArrayAccess -> f2274_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=1+x43, (-1+arg1p10 > 0 /\ arg3p10 > 0 /\ 1+x43 > 0 /\ -1+arg2p10 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg2p11 > 0 /\ 2+arg2p11-arg2 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2 > 0 /\ 1-arg4p11+arg4 == 0 /\ -1+arg3-arg3p11 == 0 /\ arg1p11 > 0 /\ arg1p11-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg2p11 > 0 /\ 2+arg2p11-arg2 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2 > 0 /\ arg1p11 > 0 /\ arg1p11-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p11 = 1+arg4
		
		propagated equality arg3p11 = -1+arg3
		
	Simplified Guard

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg2p11 > 0 /\ 2+arg2p11-arg2 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2 > 0 /\ arg1p11 > 0 /\ arg1p11-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=1+arg4, (arg2p11 > 0 /\ 2+arg2p11-arg2 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2 > 0 /\ arg1p11 > 0 /\ arg1p11-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (2-arg2+arg2p12 <= 0 /\ arg1p12-arg1 <= 0 /\ x59 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ -2+arg2 > 0 /\ -1-arg3p12+arg3 == 0 /\ arg2p12 > 0 /\ 1-arg4p12+arg4 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ 2-arg2+arg2p12 <= 0 /\ arg1p12-arg1 <= 0 /\ x59 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ -2+arg2 > 0 /\ arg2p12 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p12 = -1+arg3
		
		propagated equality arg4p12 = 1+arg4
		
	Simplified Guard

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ 2-arg2+arg2p12 <= 0 /\ arg1p12-arg1 <= 0 /\ x59 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ -2+arg2 > 0 /\ arg2p12 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=1+arg4, (2-arg2+arg2p12 <= 0 /\ arg1p12-arg1 <= 0 /\ x59 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ -2+arg2 > 0 /\ arg2p12 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=1+arg4, (2-arg2+arg2p12 <= 0 /\ arg1p12-arg1 <= 0 /\ x59 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ -2+arg2 > 0 /\ arg2p12 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=1+arg4, (2-arg2+arg2p12 <= 0 /\ arg1p12-arg1 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ -2+arg2 > 0 /\ arg2p12 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (arg3 > 0 /\ arg1p13 > 0 /\ 1-arg4p13+arg4 == 0 /\ 1+arg4 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0 /\ -1+arg3-arg3p13 == 0 /\ x66 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ arg1p13 > 0 /\ 1+arg4 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0 /\ x66 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p13 = 1+arg4
		
		propagated equality arg3p13 = -1+arg3
		
	Simplified Guard

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ arg1p13 > 0 /\ 1+arg4 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0 /\ x66 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ arg1p13 > 0 /\ 1+arg4 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0 /\ x66 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ arg1p13 > 0 /\ 1+arg4 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0 /\ x66 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ arg1p13 > 0 /\ 1+arg4 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, (-1-arg3p14+arg3 == 0 /\ arg3 > 0 /\ 1-arg4p14+arg4 == 0 /\ 1+arg4 > 0 /\ arg1p14 > 0 /\ -1+arg2 > 0 /\ arg2p14 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p14 > 0 /\ -1+arg2 > 0 /\ arg2p14 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p14 = -1+arg3
		
		propagated equality arg4p14 = 1+arg4
		
	Simplified Guard

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p14 > 0 /\ -1+arg2 > 0 /\ arg2p14 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ 1+arg4 > 0 /\ arg1p14 > 0 /\ -1+arg2 > 0 /\ arg2p14 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, (1-arg4p15+arg4 == 0 /\ arg3 > 0 /\ -2+arg1p15-arg1 <= 0 /\ -2-arg2+arg1p15 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p15-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg1p15 > 0 /\ -3+arg2p15 > 0 /\ -1+arg3-arg3p15 == 0 /\ -2+arg2p15-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p15, arg2'=arg2p15, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ -2+arg1p15-arg1 <= 0 /\ -2-arg2+arg1p15 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p15-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg1p15 > 0 /\ -3+arg2p15 > 0 /\ -2+arg2p15-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
	
		propagated equality arg4p15 = 1+arg4
		
		propagated equality arg3p15 = -1+arg3
		
	Simplified Guard

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p15, arg2'=arg2p15, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ -2+arg1p15-arg1 <= 0 /\ -2-arg2+arg1p15 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p15-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg1p15 > 0 /\ -3+arg2p15 > 0 /\ -2+arg2p15-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p15, arg2'=arg2p15, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -2+arg1p15-arg1 <= 0 /\ -2-arg2+arg1p15 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p15-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg1p15 > 0 /\ -3+arg2p15 > 0 /\ -2+arg2p15-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, (-2-arg2+arg2p16 <= 0 /\ arg3 > 0 /\ -3+arg1p16 > 0 /\ 1+arg4 > 0 /\ -1-arg3p16+arg3 == 0 /\ -2+arg1p16-arg1 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p16 <= 0 /\ 1-arg4p16+arg4 == 0 /\ -2+arg2p16-arg1 <= 0 /\ -3+arg2p16 > 0 /\ -1+arg1 > 0 /\ x85 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ -2-arg2+arg2p16 <= 0 /\ arg3 > 0 /\ -3+arg1p16 > 0 /\ 1+arg4 > 0 /\ -2+arg1p16-arg1 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p16 <= 0 /\ -2+arg2p16-arg1 <= 0 /\ -3+arg2p16 > 0 /\ -1+arg1 > 0 /\ x85 > 0), cost: 1
	
		propagated equality arg3p16 = -1+arg3
		
		propagated equality arg4p16 = 1+arg4
		
	Simplified Guard

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ -2-arg2+arg2p16 <= 0 /\ arg3 > 0 /\ -3+arg1p16 > 0 /\ 1+arg4 > 0 /\ -2+arg1p16-arg1 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p16 <= 0 /\ -2+arg2p16-arg1 <= 0 /\ -3+arg2p16 > 0 /\ -1+arg1 > 0 /\ x85 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p16 <= 0 /\ arg3 > 0 /\ -3+arg1p16 > 0 /\ 1+arg4 > 0 /\ -2+arg1p16-arg1 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p16 <= 0 /\ -2+arg2p16-arg1 <= 0 /\ -3+arg2p16 > 0 /\ -1+arg1 > 0 /\ x85 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p16 <= 0 /\ arg3 > 0 /\ -3+arg1p16 > 0 /\ 1+arg4 > 0 /\ -2+arg1p16-arg1 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p16 <= 0 /\ -2+arg2p16-arg1 <= 0 /\ -3+arg2p16 > 0 /\ -1+arg1 > 0 /\ x85 > 0), cost: 1
	New rule:
	f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p16 <= 0 /\ arg3 > 0 /\ -3+arg1p16 > 0 /\ 1+arg4 > 0 /\ -2+arg1p16-arg1 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p16 <= 0 /\ -2+arg2p16-arg1 <= 0 /\ -3+arg2p16 > 0 /\ -1+arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f295_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (1+arg1p17 > 0 /\ arg2 > 0 /\ 1+arg2p17 > 0 /\ 1+arg1p17-arg1 <= 0 /\ 1+arg2p17-arg1 <= 0 /\ x92 > 0 /\ 1+arg3p17-arg1 <= 0 /\ 1+arg3p17 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f295_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (1+arg1p17 > 0 /\ arg2 > 0 /\ 1+arg2p17 > 0 /\ 1+arg1p17-arg1 <= 0 /\ 1+arg2p17-arg1 <= 0 /\ 1+arg3p17-arg1 <= 0 /\ 1+arg3p17 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2292_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, (arg2 > 0 /\ arg3p19 > 0 /\ x108 > 0 /\ -arg2+arg1p19 <= 0 /\ 1+arg2p19-arg1 <= 0 /\ arg1p19 > 0 /\ -arg2+arg3p19 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ 1+arg2p19 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2292_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, (arg2 > 0 /\ arg3p19 > 0 /\ -arg2+arg1p19 <= 0 /\ 1+arg2p19-arg1 <= 0 /\ arg1p19 > 0 /\ -arg2+arg3p19 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ 1+arg2p19 > 0 /\ arg1 > 0), cost: 1

Step with 28

	Trace

	28[T]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 4

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 17

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Step with 20

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 20[(arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Step with 26

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 20[(arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}]

Step with 27

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 20[(arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)], 27[(-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 27

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 20[(arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)], 27[(-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0)], 27[(-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}]

Covered

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 20[(arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)], 27[(-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {27[T]}]

Backtrack

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 20[(arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {27[T]}]

Backtrack

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 20[(arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {26[T]}]

Backtrack

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}]

Step with 21

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {}]

Step with 23

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)], 23[(1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {}, {}]

Step with 26

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)], 23[(1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {}, {}, {}]

Step with 27

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)], 23[(1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)], 27[(-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {}, {}, {}, {}]

Step with 27

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)], 23[(1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)], 27[(-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0)], 27[(-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {}, {}, {}, {}, {}]

Covered

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)], 23[(1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)], 27[(-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {}, {}, {}, {27[T]}]

Backtrack

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)], 23[(1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0)], 26[(2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {}, {}, {27[T]}]

Backtrack

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)], 23[(1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {}, {26[T]}]

Backtrack

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {23[T]}]

Step with 24

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 21[(arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0)], 24[(arg1p25-arg1 <= 0 /\ 1+arg2p25 > 0 /\ 1+arg1 > 0 /\ 1+arg3p25 > 0 /\ 1+arg2 > 0 /\ arg3p25-arg1 <= 0 /\ 1+arg1p25 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {23[T]}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4
  29: f193_0_createTree_Return -> f295_0_main_InvokeMethod : arg1'=arg1p1, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
   4: f295_0_main_InvokeMethod -> f2302_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0), cost: 1
  32: f295_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (arg2 > 0 /\ arg1 > 0), cost: 1
  41: f295_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, (1+arg1p17 > 0 /\ arg2 > 0 /\ 1+arg2p17 > 0 /\ 1+arg1p17-arg1 <= 0 /\ 1+arg2p17-arg1 <= 0 /\ 1+arg3p17-arg1 <= 0 /\ 1+arg3p17 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f295_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
   2: f1_0_main_Load -> f2292_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (arg1p3 > 0 /\ arg2p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
   6: f1_0_main_Load -> f548_0_random_ArrayAccess : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  19: f2292_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, (arg2p20 > 0 /\ arg2 > 0 /\ arg3p20 > 0 /\ -arg2+arg1p20 <= 0 /\ 2-arg2+arg4 <= 0 /\ arg1p20 > 0 /\ arg1 > 0 /\ -arg2+arg3p20 <= 0), cost: 1
  33: f2292_0_main_InvokeMethod -> f548_0_random_ArrayAccess : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1 > 0), cost: 1
  42: f2292_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, (arg2 > 0 /\ arg3p19 > 0 /\ -arg2+arg1p19 <= 0 /\ 1+arg2p19-arg1 <= 0 /\ arg1p19 > 0 /\ -arg2+arg3p19 <= 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg2p19-arg2 <= 0 /\ 1+arg2p19 > 0 /\ arg1 > 0), cost: 1
  30: f508_0_createTree_Return -> f2292_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, (-1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg1p4-arg2 <= 0 /\ arg1 > 0), cost: 1
  17: f2302_0_main_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, (1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0), cost: 1
  31: f509_0_createTree_Return -> f2302_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ 2+arg3-arg2 <= 0 /\ 1-arg2+arg1p6 <= 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ -arg2+arg2p6 <= 0 /\ -1+arg2p6 > 0 /\ arg1 > 0), cost: 1
  34: f548_0_random_ArrayAccess -> f2274_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=1+x43, (-1+arg1p10 > 0 /\ arg3p10 > 0 /\ 1+x43 > 0 /\ -1+arg2p10 > 0), cost: 1
  35: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=1+arg4, (arg2p11 > 0 /\ 2+arg2p11-arg2 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2 > 0 /\ arg1p11 > 0 /\ arg1p11-arg1 <= 0 /\ arg1 > 0), cost: 1
  36: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=1+arg4, (2-arg2+arg2p12 <= 0 /\ arg1p12-arg1 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ -2+arg2 > 0 /\ arg2p12 > 0 /\ arg1 > 0), cost: 1
  37: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ arg1p13 > 0 /\ 1+arg4 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0 /\ arg1 > 0), cost: 1
  38: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ 1+arg4 > 0 /\ arg1p14 > 0 /\ -1+arg2 > 0 /\ arg2p14 > 0 /\ arg1 > 0), cost: 1
  39: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p15, arg2'=arg2p15, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -2+arg1p15-arg1 <= 0 /\ -2-arg2+arg1p15 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p15-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg1p15 > 0 /\ -3+arg2p15 > 0 /\ -2+arg2p15-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
  40: f2274_0_createTree_LE -> f2274_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p16 <= 0 /\ arg3 > 0 /\ -3+arg1p16 > 0 /\ 1+arg4 > 0 /\ -2+arg1p16-arg1 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p16 <= 0 /\ -2+arg2p16-arg1 <= 0 /\ -3+arg2p16 > 0 /\ -1+arg1 > 0), cost: 1
  20: f1394_0_less_leaves_NULL -> f1268_0_append_NONNULL : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, (arg3 > 0 /\ 1+arg1p21-arg3 <= 0 /\ arg2 > 0 /\ 1+arg1p21-arg1 <= 0 /\ 1+arg1p21 > 0 /\ arg1 > 0), cost: 1
  21: f1394_0_less_leaves_NULL -> f1554_0_less_leaves_InvokeMethod : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, (arg3 > 0 /\ arg2 > 0 /\ 1-arg2+arg2p22 <= 0 /\ 1+arg1p22 > 0 /\ 1+arg2p22 > 0 /\ arg1 > 0), cost: 1
  22: f1394_0_less_leaves_NULL -> f1554_0_less_leaves_InvokeMethod : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, (arg3 > 0 /\ arg2 > 0 /\ 1+arg2p23 > 0 /\ arg1p23 > 0 /\ 1-arg2+arg2p23 <= 0 /\ arg1 > 0), cost: 1
  43: f1394_0_less_leaves_NULL -> LoAT_sink : (1+arg2p25 > 0 /\ arg3-arg3p25 <= 0 /\ arg3 > 0 /\ 1+arg3p25 > 0 /\ -arg1p25+arg1 <= 0 /\ arg2 > 0 /\ 1+arg1p25 > 0 /\ -1+arg2 >= 0 /\ arg2-arg2p25 <= 0 /\ arg1 > 0), cost: NONTERM
  26: f1268_0_append_NONNULL -> f1410_0_append_NULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, (2+arg3p27-arg1 <= 0 /\ 1+arg2p27 > 0 /\ 1+arg2p27-arg1 <= 0 /\ arg1p27 > 0 /\ arg1p27-arg1 <= 0 /\ arg1 > 0), cost: 1
  23: f1554_0_less_leaves_InvokeMethod -> f1268_0_append_NONNULL : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, (1+arg1p24 > 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ -arg2+arg1p24 <= 0), cost: 1
  24: f1554_0_less_leaves_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, (arg1p25-arg1 <= 0 /\ 1+arg2p25 > 0 /\ 1+arg1 > 0 /\ 1+arg3p25 > 0 /\ 1+arg2 > 0 /\ arg3p25-arg1 <= 0 /\ 1+arg1p25 > 0), cost: 1
  25: f1554_0_less_leaves_InvokeMethod -> f1394_0_less_leaves_NULL : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, (1+arg1p26 > 0 /\ arg1p26-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg2 > 0 /\ arg3p26-arg1 <= 0 /\ arg2p26 > 0 /\ 1+arg3p26 > 0), cost: 1
  27: f1410_0_append_NULL -> f1410_0_append_NULL : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, (-2+arg1 > 0 /\ 4+arg3p28-arg1 <= 0 /\ 3+arg2p28-arg1 <= 0 /\ 2+arg3-arg1 <= 0 /\ arg1p28-arg2 <= 0 /\ arg1p28 > 0 /\ 1+arg2p28 > 0 /\ 2+arg1p28-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2p28 <= 0 /\ 2-arg2+arg3p28 <= 0), cost: 1
  28: __init -> f1_0_main_Load : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	f1394_0_less_leaves_NULL -> f1394_0_less_leaves_NULL : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, (1+arg2p25 > 0 /\ arg3 > 0 /\ 1+arg3p25 > 0 /\ arg2 > 0 /\ 1+arg1p25 > 0 /\ 1-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1394_0_less_leaves_NULL -> LoAT_sink : (1+arg2p25 > 0 /\ arg3-arg3p25 <= 0 /\ arg3 > 0 /\ 1+arg3p25 > 0 /\ -arg1p25+arg1 <= 0 /\ arg2 > 0 /\ 1+arg1p25 > 0 /\ -1+arg2 >= 0 /\ arg2-arg2p25 <= 0 /\ arg1 > 0), cost: NONTERM

		1+arg2p25 > 0 [0]: monotonic increase yields 1+arg2p25 > 0
		
		arg3 > 0 [0]: eventual decrease yields (arg3 > 0 /\ arg3p25 > 0)
		
		arg3 > 0 [1]: eventual increase yields (arg3-arg3p25 <= 0 /\ arg3 > 0)
		
		1+arg3p25 > 0 [0]: monotonic increase yields 1+arg3p25 > 0
		
		arg2 > 0 [0]: montonic decrease yields arg2p25 > 0, dependencies: -1+arg2 >= 0
		
		arg2 > 0 [1]: eventual decrease yields (arg2 > 0 /\ arg2p25 > 0)
		
		arg2 > 0 [2]: eventual increase yields (arg2 > 0 /\ arg2-arg2p25 <= 0)
		
		1+arg1p25 > 0 [0]: monotonic increase yields 1+arg1p25 > 0
		
		-1+arg2 >= 0 [0]: montonic decrease yields -1+arg2p25 >= 0, dependencies: arg2 > 0
		
		-1+arg2 >= 0 [1]: eventual increase yields (-1+arg2 >= 0 /\ arg2-arg2p25 <= 0)
		
		arg1 > 0 [0]: eventual decrease yields (arg1p25 > 0 /\ arg1 > 0)
		
		arg1 > 0 [1]: eventual increase yields (-arg1p25+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {1+arg2p25 > 0 -> 1+arg2p25 > 0, arg3 > 0 -> (arg3-arg3p25 <= 0 /\ arg3 > 0), 1+arg3p25 > 0 -> 1+arg3p25 > 0, arg2 > 0 -> (arg2 > 0 /\ arg2-arg2p25 <= 0), 1+arg1p25 > 0 -> 1+arg1p25 > 0, -1+arg2 >= 0 -> (-1+arg2 >= 0 /\ arg2-arg2p25 <= 0), arg1 > 0 -> (-arg1p25+arg1 <= 0 /\ arg1 > 0)}

Step with 43

	Trace

	28[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 4[(arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg2p5 > 0 /\ arg1 > 0)], 17[(1+arg1p18-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3-arg2 <= 0 /\ 1+arg3p18 > 0 /\ 1+arg1p18-arg2 <= 0 /\ arg2p18 > 0 /\ 1-arg2+arg3p18 <= 0 /\ 1+arg1p18 > 0 /\ 1+arg3p18-arg1 <= 0 /\ -arg2+arg2p18 <= 0 /\ arg1 > 0)], 43[(1+arg2p25 > 0 /\ arg3-arg3p25 <= 0 /\ arg3 > 0 /\ 1+arg3p25 > 0 /\ -arg1p25+arg1 <= 0 /\ arg2 > 0 /\ 1+arg1p25 > 0 /\ -1+arg2 >= 0 /\ arg2-arg2p25 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {20[T]}, {43[T]}]

Refute

	Counterexample

	[ arg1=7 arg2=0 arg3=0 arg4=0 ] 28 [ arg1=7 arg2=1 arg3=0 arg4=0 ] 1 [ arg1=7 arg2=7 arg3=-1 arg4=0 ] 4 [ arg1=6 arg2=6 arg3=6 arg4=0 ] 17 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 ] 43
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
