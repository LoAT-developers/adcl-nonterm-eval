NO

Initial ITS
Start location: __init
   0: f238_0_createIntList_Return -> f376_0_main_FieldAccess : arg2'=arg2P0, arg1'=arg1P0, (1+arg1 > 0 /\ 1+arg1P0 > 0 /\ arg1P0-arg1 <= 0), cost: 1
   2: f376_0_main_FieldAccess -> f376_0_main_FieldAccess : arg2'=arg2P2, arg1'=arg1P2, (arg1 > 0 /\ arg1P2 > 0 /\ -arg1+arg1P2 <= 0 /\ x70 > 0), cost: 1
   1: f1_0_main_Load -> f376_0_main_FieldAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
   3: f1_0_main_Load -> f491_0_createIntList_LE : arg2'=arg2P3, arg1'=arg1P3, (1-arg2P3 == 0 /\ 1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   4: f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=arg2P4, arg1'=arg1P4, (arg2 > 0 /\ 1+arg2-arg2P4 == 0 /\ arg1 > 0 /\ -1+arg1-arg1P4 == 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Removed unreachable rules and leafs
Start location: __init
   2: f376_0_main_FieldAccess -> f376_0_main_FieldAccess : arg2'=arg2P2, arg1'=arg1P2, (arg1 > 0 /\ arg1P2 > 0 /\ -arg1+arg1P2 <= 0 /\ x70 > 0), cost: 1
   1: f1_0_main_Load -> f376_0_main_FieldAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
   3: f1_0_main_Load -> f491_0_createIntList_LE : arg2'=arg2P3, arg1'=arg1P3, (1-arg2P3 == 0 /\ 1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   4: f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=arg2P4, arg1'=arg1P4, (arg2 > 0 /\ 1+arg2-arg2P4 == 0 /\ arg1 > 0 /\ -1+arg1-arg1P4 == 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Applied preprocessing
Original rule:
f376_0_main_FieldAccess -> f376_0_main_FieldAccess : arg2'=arg2P2, arg1'=arg1P2, (arg1 > 0 /\ arg1P2 > 0 /\ -arg1+arg1P2 <= 0 /\ x70 > 0), cost: 1
New rule:
f376_0_main_FieldAccess -> f376_0_main_FieldAccess : arg2'=arg2P2, arg1'=arg1P2, (arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f491_0_createIntList_LE : arg2'=arg2P3, arg1'=arg1P3, (1-arg2P3 == 0 /\ 1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f491_0_createIntList_LE : arg2'=1, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=arg2P4, arg1'=arg1P4, (arg2 > 0 /\ 1+arg2-arg2P4 == 0 /\ arg1 > 0 /\ -1+arg1-arg1P4 == 0), cost: 1
New rule:
f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=1+arg2, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0), cost: 1

Simplified rules
Start location: __init
   6: f376_0_main_FieldAccess -> f376_0_main_FieldAccess : arg2'=arg2P2, arg1'=arg1P2, (arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1
   1: f1_0_main_Load -> f376_0_main_FieldAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
   7: f1_0_main_Load -> f491_0_createIntList_LE : arg2'=1, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=1+arg2, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Applied nonterm
Original rule:
f376_0_main_FieldAccess -> f376_0_main_FieldAccess : arg2'=arg2P2, arg1'=arg1P2, (arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1
New rule:
f376_0_main_FieldAccess -> [5] : (-1+n >= 0 /\ arg1-arg1P2 >= 0 /\ arg1P2 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ecGpPN.txt

Applied deletion
Removed the following rules: 6

Applied acceleration
Original rule:
f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=1+arg2, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0), cost: 1
New rule:
f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=n0+arg2, arg1'=-n0+arg1, (n0 >= 0 /\ arg2 > 0 /\ 1-n0+arg1 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_OGmFPC.txt

Applied instantiation
Original rule:
f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=n0+arg2, arg1'=-n0+arg1, (n0 >= 0 /\ arg2 > 0 /\ 1-n0+arg1 > 0), cost: n0
New rule:
f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (1 > 0 /\ arg2 > 0 /\ arg1 >= 0), cost: arg1

Applied simplification
Original rule:
f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (1 > 0 /\ arg2 > 0 /\ arg1 >= 0), cost: arg1
New rule:
f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (arg2 > 0 /\ arg1 >= 0), cost: arg1

Applied deletion
Removed the following rules: 8

Accelerated simple loops
Start location: __init
   9: f376_0_main_FieldAccess -> [5] : (-1+n >= 0 /\ arg1-arg1P2 >= 0 /\ arg1P2 > 0), cost: NONTERM
   1: f1_0_main_Load -> f376_0_main_FieldAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
   7: f1_0_main_Load -> f491_0_createIntList_LE : arg2'=1, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
  11: f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (arg2 > 0 /\ arg1 >= 0), cost: arg1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f376_0_main_FieldAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
Second rule:
f376_0_main_FieldAccess -> [5] : (-1+n >= 0 /\ arg1-arg1P2 >= 0 /\ arg1P2 > 0), cost: NONTERM
New rule:
f1_0_main_Load -> [5] : arg1 > 0, cost: NONTERM

Applied deletion
Removed the following rules: 9

Applied chaining
First rule:
f1_0_main_Load -> f491_0_createIntList_LE : arg2'=1, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f491_0_createIntList_LE -> f491_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (arg2 > 0 /\ arg1 >= 0), cost: arg1
New rule:
f1_0_main_Load -> f491_0_createIntList_LE : arg2'=1+arg1P3, arg1'=0, (1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1+arg1P3

Applied deletion
Removed the following rules: 11

Chained accelerated rules with incoming rules
Start location: __init
   1: f1_0_main_Load -> f376_0_main_FieldAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
   7: f1_0_main_Load -> f491_0_createIntList_LE : arg2'=1, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
  12: f1_0_main_Load -> [5] : arg1 > 0, cost: NONTERM
  13: f1_0_main_Load -> f491_0_createIntList_LE : arg2'=1+arg1P3, arg1'=0, (1+arg1P3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1+arg1P3
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  12: f1_0_main_Load -> [5] : arg1 > 0, cost: NONTERM
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [5] : arg1 > 0, cost: NONTERM
New rule:
__init -> [5] : arg1P5 > 0, cost: NONTERM

Applied deletion
Removed the following rules: 5 12

Eliminated locations on linear paths
Start location: __init
  14: __init -> [5] : arg1P5 > 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 14 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  arg1P5 > 0
