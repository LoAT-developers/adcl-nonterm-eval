NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l6, true>
<l1, l2, ((arg2 + 15) > arg2) /\ (arg2 > ~(1)) /\ (arg1 > 0), par{arg1 -> 20, arg2 -> 0, arg3 -> (arg2 + 15), arg4 -> undef4, arg5 -> undef5}>
<l2, l3, (arg3 > 0) /\ (arg3 < arg1) /\ (arg1 > ~(1)) /\ (arg2 < 0), par{arg1 -> arg3, arg2 -> arg1, arg3 -> arg2, arg4 -> (arg3 + 1), arg5 -> (arg1 - 2)}>
<l2, l3, (arg3 > 0) /\ (arg3 < arg1) /\ (arg1 > ~(1)) /\ (arg2 > 0), par{arg1 -> arg3, arg2 -> arg1, arg3 -> arg2, arg4 -> (arg3 + 1), arg5 -> (arg1 - 2)}>
<l2, l4, (arg1 > ~(1)) /\ (arg3 > 0) /\ (arg3 < arg1) /\ (0 = arg2), par{arg1 -> arg3, arg2 -> arg1, arg3 -> (arg3 - 1), arg4 -> (arg1 - 2), arg5 -> undef20}>
<l2, l5, (arg1 > 0) /\ (arg1 = arg3), par{arg2 -> (arg1 - 1), arg3 -> (arg1 - 2), arg4 -> undef24, arg5 -> undef25}>
<l3, l2, (arg1 > 0) /\ (arg4 > 1) /\ (arg1 < arg2) /\ (arg5 > arg4), par{arg1 -> arg2, arg2 -> arg3, arg3 -> arg4, arg4 -> undef29, arg5 -> undef30}>
<l3, l2, (arg1 > 0) /\ (arg4 > 1) /\ (arg1 > arg2) /\ (arg5 > arg4), par{arg1 -> arg2, arg2 -> arg3, arg3 -> arg4, arg4 -> undef34, arg5 -> undef35}>
<l3, l2, (arg1 > 0) /\ (arg4 > 1) /\ (arg1 < arg2) /\ (arg5 < arg4), par{arg1 -> arg2, arg2 -> arg3, arg3 -> arg4, arg4 -> undef39, arg5 -> undef40}>
<l3, l2, (arg1 > 0) /\ (arg4 > 1) /\ (arg1 > arg2) /\ (arg5 < arg4), par{arg1 -> arg2, arg2 -> arg3, arg3 -> arg4, arg4 -> undef44, arg5 -> undef45}>
<l4, l2, (arg1 > 0) /\ (arg2 > arg1) /\ (arg4 > arg3), par{arg1 -> arg2, arg2 -> 0, arg4 -> undef49, arg5 -> undef50}>
<l4, l2, (arg1 > 0) /\ (arg2 < arg1) /\ (arg4 > arg3), par{arg1 -> arg2, arg2 -> 0, arg4 -> undef54, arg5 -> undef55}>
<l4, l2, (arg1 > 0) /\ (arg2 > arg1) /\ (arg4 < arg3), par{arg1 -> arg2, arg2 -> 0, arg4 -> undef59, arg5 -> undef60}>
<l4, l2, (arg1 > 0) /\ (arg2 < arg1) /\ (arg4 < arg3), par{arg1 -> arg2, arg2 -> 0, arg4 -> undef64, arg5 -> undef65}>
<l3, l2, (arg1 > 0) /\ (arg4 <= (arg2 - 1)) /\ (arg4 = arg5), par{arg1 -> (arg2 - 1), arg2 -> arg3, arg3 -> arg4, arg4 -> undef69, arg5 -> undef70}>
<l4, l2, (arg1 > 0) /\ (arg3 <= (arg2 - 1)) /\ (arg3 = arg4), par{arg1 -> (arg2 - 1), arg2 -> 0, arg4 -> undef74, arg5 -> undef75}>
<l5, l2, (arg3 > arg2), par{arg2 -> 0, arg3 -> arg2, arg4 -> undef79, arg5 -> undef80}>
<l5, l2, (arg3 < arg2), par{arg2 -> 0, arg3 -> arg2, arg4 -> undef84, arg5 -> undef85}>
<l2, l2, (arg1 > 0) /\ (arg1 < 3) /\ (0 = arg3), par{arg2 -> 1, arg3 -> 1, arg4 -> undef89, arg5 -> undef90}>
<l2, l2, (arg1 > 3) /\ (0 = arg3), par{arg2 -> 1, arg3 -> 1, arg4 -> undef94, arg5 -> undef95}>
<l5, l2, (arg2 < arg1) /\ (arg2 <= (arg1 - 1)) /\ (arg2 = arg3), par{arg1 -> (arg1 - 1), arg2 -> 0, arg3 -> arg2, arg4 -> undef99, arg5 -> undef100}>
<l2, l2, (3 = arg1) /\ (0 = arg3), par{arg1 -> 2, arg2 -> 1, arg3 -> 1, arg4 -> undef104, arg5 -> undef105}>
<l2, l2, (0 = arg1) /\ (0 = arg3), par{arg1 -> 0, arg2 -> 0, arg3 -> ~(1), arg4 -> undef109, arg5 -> undef110}>
<l6, l1, true, par{arg1 -> undef111, arg2 -> undef112, arg3 -> undef113, arg4 -> undef114, arg5 -> undef115}>

Fresh variables:
undef4, undef5, undef20, undef24, undef25, undef29, undef30, undef34, undef35, undef39, undef40, undef44, undef45, undef49, undef50, undef54, undef55, undef59, undef60, undef64, undef65, undef69, undef70, undef74, undef75, undef79, undef80, undef84, undef85, undef89, undef90, undef94, undef95, undef99, undef100, undef104, undef105, undef109, undef110, undef111, undef112, undef113, undef114, undef115, 

Undef variables:
undef4, undef5, undef20, undef24, undef25, undef29, undef30, undef34, undef35, undef39, undef40, undef44, undef45, undef49, undef50, undef54, undef55, undef59, undef60, undef64, undef65, undef69, undef70, undef74, undef75, undef79, undef80, undef84, undef85, undef89, undef90, undef94, undef95, undef99, undef100, undef104, undef105, undef109, undef110, undef111, undef112, undef113, undef114, undef115, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = 20) /\ (arg2 = 0) /\ (arg3 = (undef112 + 15)) /\ ((undef112 + 15) > undef112) /\ (undef112 > ~(1)) /\ (undef111 > 0)>
<l2, l2, (arg3 > 0) /\ (arg3 < arg1) /\ (arg1 > ~(1)) /\ (arg2 < 0) /\ (arg3 > 0) /\ ((arg3 + 1) > 1) /\ (arg3 < arg1) /\ ((arg1 - 2) > (arg3 + 1)), par{arg1 -> arg1, arg2 -> arg2, arg3 -> (arg3 + 1)}>
<l2, l2, (arg3 > 0) /\ (arg3 < arg1) /\ (arg1 > ~(1)) /\ (arg2 < 0) /\ (arg3 > 0) /\ ((arg3 + 1) > 1) /\ (arg3 < arg1) /\ ((arg1 - 2) < (arg3 + 1)), par{arg1 -> arg1, arg2 -> arg2, arg3 -> (arg3 + 1)}>
<l2, l2, (arg3 > 0) /\ (arg3 < arg1) /\ (arg1 > ~(1)) /\ (arg2 < 0) /\ (arg3 > 0) /\ ((arg3 + 1) <= (arg1 - 1)) /\ ((arg3 + 1) = (arg1 - 2)), par{arg1 -> (arg1 - 1), arg2 -> arg2, arg3 -> (arg3 + 1)}>
<l2, l2, (arg3 > 0) /\ (arg3 < arg1) /\ (arg1 > ~(1)) /\ (arg2 > 0) /\ (arg3 > 0) /\ ((arg3 + 1) > 1) /\ (arg3 < arg1) /\ ((arg1 - 2) > (arg3 + 1)), par{arg1 -> arg1, arg2 -> arg2, arg3 -> (arg3 + 1)}>
<l2, l2, (arg3 > 0) /\ (arg3 < arg1) /\ (arg1 > ~(1)) /\ (arg2 > 0) /\ (arg3 > 0) /\ ((arg3 + 1) > 1) /\ (arg3 < arg1) /\ ((arg1 - 2) < (arg3 + 1)), par{arg1 -> arg1, arg2 -> arg2, arg3 -> (arg3 + 1)}>
<l2, l2, (arg3 > 0) /\ (arg3 < arg1) /\ (arg1 > ~(1)) /\ (arg2 > 0) /\ (arg3 > 0) /\ ((arg3 + 1) <= (arg1 - 1)) /\ ((arg3 + 1) = (arg1 - 2)), par{arg1 -> (arg1 - 1), arg2 -> arg2, arg3 -> (arg3 + 1)}>
<l2, l2, (arg1 > ~(1)) /\ (arg3 > 0) /\ (arg3 < arg1) /\ (0 = arg2) /\ (arg3 > 0) /\ (arg1 > arg3) /\ ((arg1 - 2) > (arg3 - 1)), par{arg1 -> arg1, arg2 -> 0, arg3 -> (arg3 - 1)}>
<l2, l2, (arg1 > ~(1)) /\ (arg3 > 0) /\ (arg3 < arg1) /\ (0 = arg2) /\ (arg3 > 0) /\ ((arg3 - 1) <= (arg1 - 1)) /\ ((arg3 - 1) = (arg1 - 2)), par{arg1 -> (arg1 - 1), arg2 -> 0, arg3 -> (arg3 - 1)}>
<l2, l2, (arg1 > 0) /\ (arg1 = arg3) /\ ((arg1 - 2) < (arg1 - 1)), par{arg2 -> 0, arg3 -> (arg1 - 1)}>
<l2, l2, (arg1 > 0) /\ (arg1 < 3) /\ (0 = arg3), par{arg2 -> 1, arg3 -> 1}>
<l2, l2, (arg1 > 3) /\ (0 = arg3), par{arg2 -> 1, arg3 -> 1}>
<l2, l2, (3 = arg1) /\ (0 = arg3), par{arg1 -> 2, arg2 -> 1, arg3 -> 1}>
<l2, l2, (0 = arg1) /\ (0 = arg3), par{arg1 -> 0, arg2 -> 0, arg3 -> ~(1)}>

Fresh variables:
undef4, undef5, undef20, undef24, undef25, undef29, undef30, undef34, undef35, undef39, undef40, undef44, undef45, undef49, undef50, undef54, undef55, undef59, undef60, undef64, undef65, undef69, undef70, undef74, undef75, undef79, undef80, undef84, undef85, undef89, undef90, undef94, undef95, undef99, undef100, undef104, undef105, undef109, undef110, undef111, undef112, undef113, undef114, undef115, 

Undef variables:
undef4, undef5, undef20, undef24, undef25, undef29, undef30, undef34, undef35, undef39, undef40, undef44, undef45, undef49, undef50, undef54, undef55, undef59, undef60, undef64, undef65, undef69, undef70, undef74, undef75, undef79, undef80, undef84, undef85, undef89, undef90, undef94, undef95, undef99, undef100, undef104, undef105, undef109, undef110, undef111, undef112, undef113, undef114, undef115, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + arg2 <= 0 /\ 1 <= arg3 /\ 0 <= arg1 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 + arg3 <= arg1 /\ 1 + arg2 <= 0 /\ 1 <= arg3 /\ 0 <= arg1 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 + arg2 <= 0 /\ 1 <= arg3 /\ 0 <= arg1 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 <= arg3 /\ 0 <= arg1 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ 0 <= arg1 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg2 /\ 1 <= arg3 /\ 0 <= arg1 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg3 /\ 0 <= arg1 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg3 /\ 0 <= arg1 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, arg1 = 0 /\ arg3 = 0, {arg1 -> 0, arg2 -> 0, arg3 -> -1, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef111 /\ 0 <= undef112 /\ arg2 = 0 /\ arg1 = 20 /\ arg3 = 15 + undef112, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.11044
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l2: 1 <= arg1[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, arg1 = 0 /\ arg3 = 0, {arg1 -> 0, arg2 -> 0, arg3 -> -1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 + arg2 <= 0 /\ 1 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 <= arg3 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>
Checking unfeasibility...
Time used: 0.090056
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l2: 0 <= arg2[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 + arg2 <= 0 /\ 1 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 <= arg3 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg2 /\ arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>
Checking unfeasibility...
Time used: 4.00084

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.019262s
[33mRanking function: [36m-16 + 4*arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, 0 <= arg2 /\ arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005314s
[33mRanking function: [36m-6 + 3*arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003122s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.206008s
Trying to remove transition: <l2, l2, 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.035211s
Time used: 0.033237
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.038077s
Time used: 0.034841
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.042398s
Time used: 0.039118
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.036654s
Time used: 0.033425
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.050633s
Time used: 0.045479
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.044751s
Time used: 0.04144
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.279879s
Time used: 0.276075
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001500s
Time used: 1.00141

LOG: SAT solveNonLinear - Elapsed time: 1.281379s
Cost: 1; Total time: 1.27749
[31mFailed at location 2: arg1 <= 1 + arg3[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 <= 1 + arg3[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011096s
Remaining time after improvement: 0.992857
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 <= 1 + arg3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 = 1 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg1 <= 1 + arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg2 /\ arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 = 1 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg1 <= 1 + arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
New Graphs: 
Transitions:
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 = 1 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg1 <= 1 + arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001771s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.022058s
Trying to remove transition: <l2, l2, 1 <= arg1 /\ arg1 <= 1 + arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001076s
Time used: 4.00008
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.043280s
Time used: 0.023354
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 = 1 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.023451s
Time used: 0.022328

LOG: SAT solveNonLinear - Elapsed time: 0.023451s
Cost: 0; Total time: 0.022328
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 + arg3 <= arg1 + arg2[0m
[33mRanking function: [36m2*arg1 + 2*arg2 - 2*arg3
[33mRanking function and negation of Quasi-Invariant applied[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg1 <= 1 + arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001382s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011761s
Trying to remove transition: <l2, l2, 1 <= arg1 /\ arg1 <= 1 + arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.000879s
Time used: 4.00026
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.050953s
Time used: 0.036289
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.090384s
Time used: 0.089276
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000926s
Time used: 1.00084

LOG: SAT solveNonLinear - Elapsed time: 1.091310s
Cost: 1; Total time: 1.09011
[31mFailed at location 2: 1 + arg1 + arg2 <= arg3[0m
Before Improving: 
[36mQuasi-invariant at l2: 1 + arg1 + arg2 <= arg3[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011427s
Remaining time after improvement: 0.996715
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 + arg1 + arg2 <= arg3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 = 1 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ arg1 <= 1 + arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ arg1 <= 1 + arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 1 + arg3 and entry <l0, l2, 1 <= undef111 /\ 0 <= undef112 /\ arg2 = 0 /\ arg1 = 20 /\ arg3 = 15 + undef112, {all remain the same}>

LOG: CALL check - Post:arg1 <= 1 + arg3 - Process 1
* Exit transition: <l0, l2, 1 <= undef111 /\ 0 <= undef112 /\ arg2 = 0 /\ arg1 = 20 /\ arg3 = 15 + undef112, {all remain the same}>
* Postcondition  : arg1 <= 1 + arg3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001661s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001787s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 <= 1 + arg3 , 
Calling Safety with literal 1 + arg1 + arg2 <= arg3 and entry <l0, l2, 1 <= undef111 /\ 0 <= undef112 /\ arg2 = 0 /\ arg1 = 20 /\ arg3 = 15 + undef112, {all remain the same}>

LOG: CALL check - Post:1 + arg1 + arg2 <= arg3 - Process 2
* Exit transition: <l0, l2, 1 <= undef111 /\ 0 <= undef112 /\ arg2 = 0 /\ arg1 = 20 /\ arg3 = 15 + undef112, {all remain the same}>
* Postcondition  : 1 + arg1 + arg2 <= arg3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001485s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001617s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: 1 + arg1 + arg2 <= arg3 , 
Narrowing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 1 <= arg1 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 0 <= arg2 /\ arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009444s
[33mRanking function: [36m-6 + 3*arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004055s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.233535s
Trying to remove transition: <l2, l2, arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.043448s
Time used: 0.041213
Trying to remove transition: <l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.039007s
Time used: 0.035794
Trying to remove transition: <l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.046943s
Time used: 0.043641
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.043217s
Time used: 0.039884
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.049195s
Time used: 0.045754
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.046547s
Time used: 0.04311
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003947s
Time used: 4.00018
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.425051s
Time used: 1.384
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001894s
Time used: 1.00181

LOG: SAT solveNonLinear - Elapsed time: 2.426945s
Cost: 1; Total time: 2.3858
[31mFailed at location 2: arg1 + arg2 <= 1 + arg3[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 + arg2 <= 1 + arg3[0m
[36mQuasi-invariant at l2: 0 <= 1 + arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.022743s
Remaining time after improvement: 0.986824
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 + arg2 <= 1 + arg3[0m
[36mQuasi-invariant at l2: 0 <= 1 + arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg1 + arg2 <= 1 + arg3 /\ arg3 <= arg1 + arg2 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg1 + arg2 <= 1 + arg3 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg1 + arg2 <= 1 + arg3 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg1 + arg2 <= 1 + arg3 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg1 + arg2 <= 1 + arg3 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
New Graphs: 
Transitions:
<l2, l2, 1 <= arg1 /\ arg1 + arg2 <= 1 + arg3 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg1 + arg2 <= 1 + arg3 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001900s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011228s
Trying to remove transition: <l2, l2, 1 <= arg1 /\ arg1 + arg2 <= 1 + arg3 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001031s
Time used: 4.00023
Trying to remove transition: <l2, l2, 1 <= arg1 /\ arg1 + arg2 <= 1 + arg3 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.017873s
Time used: 4.00005
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.023038s
Time used: 4.00027
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.018951s
Time used: 4.00018
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.021245s
Time used: 1.00007
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.017507s
Time used: 4.00015

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>
<l2, l2, arg3 <= arg1 + arg2 /\ 0 <= arg2 /\ arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>
Variables:
arg1, arg2, arg3

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 1 + arg1 <= arg3 /\ 1 <= arg2 /\ 1 <= arg3 /\ 3 <= arg1, {all remain the same}>
<l2, end, 1 + arg1 <= arg3 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 <= 2, {all remain the same}>
<l2, end, 1 <= arg1 /\ 1 <= arg2 /\ 1 + arg3 <= 0 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 /\ arg1 = 2 + arg3, {all remain the same}>
<l2, end, 1 <= arg1 /\ 1 <= arg2 /\ 1 + arg3 <= 0 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 /\ arg1 = 3 + arg3, {all remain the same}>
<l2, end, 1 <= arg2 /\ 1 + arg3 <= 0 /\ arg3 <= arg1 + arg2 /\ 3 <= arg1 /\ 4 + arg3 <= arg1, {all remain the same}>
<l2, end, 1 <= arg1 /\ 1 <= arg2 /\ 1 + arg3 <= 0 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 /\ 4 + arg3 <= arg1, {all remain the same}>
<l2, end, 1 + arg1 + arg2 <= arg3 /\ 1 + arg1 <= arg3 /\ 1 <= arg3 /\ 3 <= arg1 /\ arg2 = 0, {all remain the same}>
<l2, end, 1 + arg1 + arg2 <= arg3 /\ 1 + arg1 <= arg3 /\ 1 <= arg1 /\ 1 <= arg3 /\ arg1 <= 2 /\ arg2 = 0, {all remain the same}>
<l2, end, 1 <= arg1 /\ 1 + arg3 <= 0 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 /\ arg2 = 0 /\ arg1 = 2 + arg3, {all remain the same}>
<l2, end, 1 <= arg1 /\ 1 + arg3 <= 0 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 /\ arg2 = 0 /\ arg1 = 3 + arg3, {all remain the same}>
<l2, end, 1 + arg3 <= 0 /\ arg3 <= arg1 + arg2 /\ 3 <= arg1 /\ 4 + arg3 <= arg1 /\ arg2 = 0, {all remain the same}>
<l2, end, 1 <= arg1 /\ 1 + arg3 <= 0 /\ arg3 <= arg1 + arg2 /\ arg1 <= 2 /\ 4 + arg3 <= arg1 /\ arg2 = 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.269976s
Time used: 0.269246
Improving Solution with cost 8 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.503138s
Time used: 0.503054

LOG: SAT solveNonLinear - Elapsed time: 0.773114s
Cost: 8; Total time: 0.7723
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg2 <= arg3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 8
Strengthening exit transition (result): 
<l2, end, 1 + arg1 <= arg3 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg2 <= arg3 /\ 3 <= arg1, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, 1 + arg1 <= arg3 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg2 <= arg3 /\ arg1 <= 2, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, 1 + arg1 + arg2 <= arg3 /\ 1 + arg1 <= arg3 /\ 1 <= arg3 /\ arg2 <= arg3 /\ 3 <= arg1 /\ arg2 = 0, {all remain the same}>
Strengthening exit transition (result): 
<l2, end, 1 + arg1 + arg2 <= arg3 /\ 1 + arg1 <= arg3 /\ 1 <= arg1 /\ 1 <= arg3 /\ arg2 <= arg3 /\ arg1 <= 2 /\ arg2 = 0, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ 0 <= arg2 /\ arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 1 + arg1 <= arg3 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg2 <= arg3 /\ 3 <= arg1, {all remain the same}>
<l2, end, 1 + arg1 <= arg3 /\ 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg2 <= arg3 /\ arg1 <= 2, {all remain the same}>
<l2, end, 1 + arg1 + arg2 <= arg3 /\ 1 + arg1 <= arg3 /\ 1 <= arg3 /\ arg2 <= arg3 /\ 3 <= arg1 /\ arg2 = 0, {all remain the same}>
<l2, end, 1 + arg1 + arg2 <= arg3 /\ 1 + arg1 <= arg3 /\ 1 <= arg1 /\ 1 <= arg3 /\ arg2 <= arg3 /\ arg1 <= 2 /\ arg2 = 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.090284s
Time used: 0.089684
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.063113s
Time used: 0.063101

LOG: SAT solveNonLinear - Elapsed time: 0.153398s
Cost: 1; Total time: 0.152785
[31mFailed at location 2: arg3 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: arg3 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.020460s
Remaining time after improvement: 0.993279
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg3 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 4

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ 4 + arg3 <= arg1, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 + arg3 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ arg1 <= 2 + arg3, {arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ arg1 = 3 + arg3, {arg1 -> -1 + arg1, arg3 -> 1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ 2 + arg3 <= arg1 /\ arg2 = 0, {arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ arg1 = 1 + arg3 /\ arg2 = 0, {arg1 -> -1 + arg1, arg2 -> 0, arg3 -> -1 + arg3, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ arg2 <= arg3 /\ 0 <= arg2 /\ arg1 = arg3, {arg2 -> 0, arg3 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg3 <= arg1 + arg2 /\ arg3 <= arg1 /\ arg2 <= arg3 /\ 0 <= arg2 /\ arg1 <= 2 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg3 <= arg1 + arg2 /\ arg3 <= arg1 /\ arg2 <= arg3 /\ 0 <= arg2 /\ 4 <= arg1 /\ arg3 = 0, {arg2 -> 1, arg3 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg3 <= arg1 + arg2 /\ arg3 <= arg1 /\ arg2 <= arg3 /\ 0 <= arg2 /\ arg3 = 0 /\ arg1 = 3, {arg1 -> 2, arg2 -> 1, arg3 -> 1, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: arg2 <= arg3, arg3 <= arg1, 
OPEN EXITS: 
<l2, end, arg3 <= arg1 /\ arg2 <= arg3, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 1 <= undef111 /\ 0 <= undef112 /\ arg2 = 0 /\ arg1 = 20 /\ arg3 = 15 + undef112, {all remain the same}>
Conditions: arg3 <= arg1, arg2 <= arg3, 
OPEN EXITS: 
<l0, l2, 1 <= undef111 /\ arg3 <= arg1 /\ arg2 <= arg3 /\ 0 <= undef112 /\ arg2 = 0 /\ arg1 = 20 /\ arg3 = 15 + undef112, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
