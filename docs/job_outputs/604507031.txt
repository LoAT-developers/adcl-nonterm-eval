unknown

Initial ITS

Start location: l3
Program variables: x^0 y^0
   0: l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (1-x^0 <= 0 /\ -x^post1+x^0 == 0 /\ -y^post1+y^0 == 0 /\ 1-y^0 <= 0), cost: 1
   1: l1 -> l0 : x^0'=x^post2, y^0'=y^post2, (1-x^0+x^post2 == 0 /\ -y^post2+y^0 == 0), cost: 1
   2: l2 -> l1 : x^0'=x^post3, y^0'=y^post3, (1+y^post3-y^0 == 0 /\ -x^post3+x^0 == 0), cost: 1
   3: l2 -> l0 : x^0'=x^post4, y^0'=y^post4, (-x^post4+x^0 == 0 /\ -y^post4+y^0 == 0), cost: 1
   4: l3 -> l2 : x^0'=x^post5, y^0'=y^post5, (x^0-x^post5 == 0 /\ -y^post5+y^0 == 0), cost: 1

Simplified Transitions

Start location: l3
Program variables: x^0 y^0
   5: l0 -> l1 : (1-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
   6: l1 -> l0 : x^0'=-1+x^0, T, cost: 1
   7: l2 -> l1 : y^0'=-1+y^0, T, cost: 1
   8: l2 -> l0 : T, cost: 1
   9: l3 -> l2 : T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (1-x^0 <= 0 /\ -x^post1+x^0 == 0 /\ -y^post1+y^0 == 0 /\ 1-y^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ 1-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
	
		propagated equality x^post1 = x^0
		
		propagated equality y^post1 = y^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ 1-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : x^0'=x^0, y^0'=y^0, (1-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : x^0'=x^0, y^0'=y^0, (1-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : (1-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l0 : x^0'=x^post2, y^0'=y^post2, (1-x^0+x^post2 == 0 /\ -y^post2+y^0 == 0), cost: 1
	New rule:
	l1 -> l0 : x^0'=-1+x^0, y^0'=y^0, 0 == 0, cost: 1
	
		propagated equality x^post2 = -1+x^0
		
		propagated equality y^post2 = y^0
		
	Simplified Guard

	Original rule:
	l1 -> l0 : x^0'=-1+x^0, y^0'=y^0, 0 == 0, cost: 1
	New rule:
	l1 -> l0 : x^0'=-1+x^0, y^0'=y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l0 : x^0'=-1+x^0, y^0'=y^0, T, cost: 1
	New rule:
	l1 -> l0 : x^0'=-1+x^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l1 : x^0'=x^post3, y^0'=y^post3, (1+y^post3-y^0 == 0 /\ -x^post3+x^0 == 0), cost: 1
	New rule:
	l2 -> l1 : x^0'=x^0, y^0'=-1+y^0, 0 == 0, cost: 1
	
		propagated equality y^post3 = -1+y^0
		
		propagated equality x^post3 = x^0
		
	Simplified Guard

	Original rule:
	l2 -> l1 : x^0'=x^0, y^0'=-1+y^0, 0 == 0, cost: 1
	New rule:
	l2 -> l1 : x^0'=x^0, y^0'=-1+y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l1 : x^0'=x^0, y^0'=-1+y^0, T, cost: 1
	New rule:
	l2 -> l1 : y^0'=-1+y^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : x^0'=x^post4, y^0'=y^post4, (-x^post4+x^0 == 0 /\ -y^post4+y^0 == 0), cost: 1
	New rule:
	l2 -> l0 : x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	
		propagated equality x^post4 = x^0
		
		propagated equality y^post4 = y^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	New rule:
	l2 -> l0 : x^0'=x^0, y^0'=y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : x^0'=x^0, y^0'=y^0, T, cost: 1
	New rule:
	l2 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l2 : x^0'=x^post5, y^0'=y^post5, (x^0-x^post5 == 0 /\ -y^post5+y^0 == 0), cost: 1
	New rule:
	l3 -> l2 : x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	
		propagated equality x^post5 = x^0
		
		propagated equality y^post5 = y^0
		
	Simplified Guard

	Original rule:
	l3 -> l2 : x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	New rule:
	l3 -> l2 : x^0'=x^0, y^0'=y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l2 : x^0'=x^0, y^0'=y^0, T, cost: 1
	New rule:
	l3 -> l2 : T, cost: 1

Step with 9

	Trace

	9[T]
	
	Blocked

	[{}, {}]

Step with 7

	Trace

	9[T], 7[T]
	
	Blocked

	[{}, {}, {}]

Step with 6

	Trace

	9[T], 7[T], 6[T]
	
	Blocked

	[{}, {}, {}, {}]

Step with 5

	Trace

	9[T], 7[T], 6[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Accelerate

Start location: l3
Program variables: x^0 y^0
   5: l0 -> l1 : (1-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
   6: l1 -> l0 : x^0'=-1+x^0, T, cost: 1
  10: l1 -> l1 : x^0'=x^0-n, (-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0), cost: 1
   7: l2 -> l1 : y^0'=-1+y^0, T, cost: 1
   8: l2 -> l0 : T, cost: 1
   9: l3 -> l2 : T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : x^0'=-1+x^0, (2-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x^0'=x^0-n, (-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0), cost: 1

		-2+x^0 >= 0 [0]: montonic decrease yields -1+x^0-n >= 0
		
		-2+x^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -2+x^0 >= 0)
		
		-1+y^0 >= 0 [0]: monotonic increase yields -1+y^0 >= 0
		
		Replacement map: {-2+x^0 >= 0 -> -1+x^0-n >= 0, -1+y^0 >= 0 -> -1+y^0 >= 0}

	Trace

	9[T], 7[T], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}]

Step with 6

	Trace

	9[T], 7[T], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)], 6[T]
	
	Blocked

	[{}, {}, {}, {10[T]}, {}]

Step with 5

	Trace

	9[T], 7[T], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)], 6[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}, {}, {}]

Covered

	Trace

	9[T], 7[T], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)], 6[T]
	
	Blocked

	[{}, {}, {}, {10[T]}, {5[T]}]

Backtrack

	Trace

	9[T], 7[T], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)]
	
	Blocked

	[{}, {}, {}, {6[T], 10[T]}]

Backtrack

	Trace

	9[T], 7[T]
	
	Blocked

	[{}, {}, {10[T]}]

Step with 6

	Trace

	9[T], 7[T], 6[T]
	
	Blocked

	[{}, {}, {10[T]}, {}]

Step with 5

	Trace

	9[T], 7[T], 6[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {}, {10[T]}, {}, {}]

Covered

	Trace

	9[T], 7[T], 6[T]
	
	Blocked

	[{}, {}, {10[T]}, {5[T]}]

Backtrack

	Trace

	9[T], 7[T]
	
	Blocked

	[{}, {}, {6[T], 10[T]}]

Backtrack

	Trace

	9[T]
	
	Blocked

	[{}, {7[T]}]

Step with 8

	Trace

	9[T], 8[T]
	
	Blocked

	[{}, {7[T]}, {}]

Step with 5

	Trace

	9[T], 8[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {7[T]}, {}, {}]

Step with 6

	Trace

	9[T], 8[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)], 6[T]
	
	Blocked

	[{}, {7[T]}, {}, {}, {}]

Accelerate

Start location: l3
Program variables: x^0 y^0
   5: l0 -> l1 : (1-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
  11: l0 -> l0 : x^0'=x^0-n2, (x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0), cost: 1
   6: l1 -> l0 : x^0'=-1+x^0, T, cost: 1
  10: l1 -> l1 : x^0'=x^0-n, (-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0), cost: 1
   7: l2 -> l1 : y^0'=-1+y^0, T, cost: 1
   8: l2 -> l0 : T, cost: 1
   9: l3 -> l2 : T, cost: 1

	Loop Acceleration

	Original rule:
	l0 -> l0 : x^0'=-1+x^0, (1-x^0 <= 0 /\ 1-y^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : x^0'=x^0-n2, (x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0), cost: 1

		-1+x^0 >= 0 [0]: montonic decrease yields x^0-n2 >= 0
		
		-1+x^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+x^0 >= 0)
		
		-1+y^0 >= 0 [0]: monotonic increase yields -1+y^0 >= 0
		
		Replacement map: {-1+x^0 >= 0 -> x^0-n2 >= 0, -1+y^0 >= 0 -> -1+y^0 >= 0}

	Trace

	9[T], 8[T], 11[(x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0)]
	
	Blocked

	[{}, {7[T]}, {}, {11[T]}]

Step with 5

	Trace

	9[T], 8[T], 11[(x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0)], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {7[T]}, {}, {11[T]}, {}]

Step with 6

	Trace

	9[T], 8[T], 11[(x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0)], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)], 6[T]
	
	Blocked

	[{}, {7[T]}, {}, {11[T]}, {}, {}]

Covered

	Trace

	9[T], 8[T], 11[(x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0)], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {7[T]}, {}, {11[T]}, {6[T]}]

Step with 10

	Trace

	9[T], 8[T], 11[(x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0)], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)]
	
	Blocked

	[{}, {7[T]}, {}, {11[T]}, {6[T]}, {10[T]}]

Step with 6

	Trace

	9[T], 8[T], 11[(x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0)], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)], 6[T]
	
	Blocked

	[{}, {7[T]}, {}, {11[T]}, {6[T]}, {10[T]}, {}]

Covered

	Trace

	9[T], 8[T], 11[(x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0)], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)]
	
	Blocked

	[{}, {7[T]}, {}, {11[T]}, {6[T]}, {6[T], 10[T]}]

Backtrack

	Trace

	9[T], 8[T], 11[(x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0)], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {7[T]}, {}, {11[T]}, {6[T], 10[T]}]

Backtrack

	Trace

	9[T], 8[T], 11[(x^0-n2 >= 0 /\ -1+n2 >= 0 /\ -1+y^0 >= 0)]
	
	Blocked

	[{}, {7[T]}, {}, {5[T], 11[T]}]

Backtrack

	Trace

	9[T], 8[T]
	
	Blocked

	[{}, {7[T]}, {11[T]}]

Step with 5

	Trace

	9[T], 8[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {7[T]}, {11[T]}, {}]

Step with 6

	Trace

	9[T], 8[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)], 6[T]
	
	Blocked

	[{}, {7[T]}, {11[T]}, {}, {}]

Covered

	Trace

	9[T], 8[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {7[T]}, {11[T]}, {6[T]}]

Step with 10

	Trace

	9[T], 8[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)]
	
	Blocked

	[{}, {7[T]}, {11[T]}, {6[T]}, {10[T]}]

Step with 6

	Trace

	9[T], 8[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)], 6[T]
	
	Blocked

	[{}, {7[T]}, {11[T]}, {6[T]}, {10[T]}, {}]

Covered

	Trace

	9[T], 8[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)], 10[(-1+x^0-n >= 0 /\ -1+n >= 0 /\ -1+y^0 >= 0)]
	
	Blocked

	[{}, {7[T]}, {11[T]}, {6[T]}, {6[T], 10[T]}]

Backtrack

	Trace

	9[T], 8[T], 5[(1-x^0 <= 0 /\ 1-y^0 <= 0)]
	
	Blocked

	[{}, {7[T]}, {11[T]}, {6[T], 10[T]}]

Backtrack

	Trace

	9[T], 8[T]
	
	Blocked

	[{}, {7[T]}, {5[T], 11[T]}]

Backtrack

	Trace

	9[T]
	
	Blocked

	[{}, {7[T], 8[T]}]

Backtrack

	Trace

	Blocked

	[{9[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
