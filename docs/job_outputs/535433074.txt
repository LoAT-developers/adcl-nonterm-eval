WORST_CASE(Omega(0),?)

Initial ITS
Start location: l12
   0: l0 -> l1 : y4^0'=y4^post0, __const_200^0'=__const_200^post0, y8^0'=y8^post0, j^0'=j^post0, __const_100^0'=__const_100^post0, y6^0'=y6^post0, i^0'=i^post0, (y4^0-y4^post0 == 0 /\ -__const_200^post0+__const_200^0 == 0 /\ -i^post0+i^0 == 0 /\ -y6^post0+y6^0 == 0 /\ -__const_100^post0+__const_100^0 == 0 /\ j^0-j^post0 == 0 /\ y8^0-y8^post0 == 0), cost: 1
  11: l1 -> l10 : y4^0'=y4^post11, __const_200^0'=__const_200^post11, y8^0'=y8^post11, j^0'=j^post11, __const_100^0'=__const_100^post11, y6^0'=y6^post11, i^0'=i^post11, (-i^post11+i^0 == 0 /\ y6^post11-i^0 == 0 /\ __const_100^0-__const_100^post11 == 0 /\ -y8^post11+y8^0 == 0 /\ j^0-j^post11 == 0 /\ y4^0-y4^post11 == 0 /\ -__const_200^post11+__const_200^0 == 0), cost: 1
   1: l2 -> l3 : y4^0'=y4^post1, __const_200^0'=__const_200^post1, y8^0'=y8^post1, j^0'=j^post1, __const_100^0'=__const_100^post1, y6^0'=y6^post1, i^0'=i^post1, (-__const_100^0+j^post1 == 0 /\ __const_100^0-i^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0 /\ y8^0-y8^post1 == 0 /\ y4^0-y4^post1 == 0 /\ __const_200^0-__const_200^post1 == 0 /\ -i^post1+i^0 == 0 /\ -y6^post1+y6^0 == 0), cost: 1
   2: l2 -> l0 : y4^0'=y4^post2, __const_200^0'=__const_200^post2, y8^0'=y8^post2, j^0'=j^post2, __const_100^0'=__const_100^post2, y6^0'=y6^post2, i^0'=i^post2, (y4^post2-i^0 == 0 /\ __const_200^0-__const_200^post2 == 0 /\ i^0-i^post2 == 0 /\ 1-__const_100^0+i^0 <= 0 /\ -y6^post2+y6^0 == 0 /\ y8^0-y8^post2 == 0 /\ -j^post2+j^0 == 0 /\ -__const_100^post2+__const_100^0 == 0), cost: 1
   8: l3 -> l7 : y4^0'=y4^post8, __const_200^0'=__const_200^post8, y8^0'=y8^post8, j^0'=j^post8, __const_100^0'=__const_100^post8, y6^0'=y6^post8, i^0'=i^post8, (-y6^post8+y6^0 == 0 /\ __const_200^0-__const_200^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ i^0-i^post8 == 0 /\ -j^post8+j^0 == 0 /\ y8^0-y8^post8 == 0 /\ y4^0-y4^post8 == 0), cost: 1
   3: l4 -> l3 : y4^0'=y4^post3, __const_200^0'=__const_200^post3, y8^0'=y8^post3, j^0'=j^post3, __const_100^0'=__const_100^post3, y6^0'=y6^post3, i^0'=i^post3, (-i^post3+i^0 == 0 /\ -y8^post3+y8^0 == 0 /\ __const_200^0-__const_200^post3 == 0 /\ y4^0-y4^post3 == 0 /\ y6^0-y6^post3 == 0 /\ __const_100^0-__const_100^post3 == 0 /\ -1+j^post3-j^0 == 0), cost: 1
   4: l5 -> l2 : y4^0'=y4^post4, __const_200^0'=__const_200^post4, y8^0'=y8^post4, j^0'=j^post4, __const_100^0'=__const_100^post4, y6^0'=y6^post4, i^0'=i^post4, (-y8^post4+y8^0 == 0 /\ -i^post4+i^0 == 0 /\ y4^0-y4^post4 == 0 /\ -j^post4+j^0 == 0 /\ __const_100^0-__const_100^post4 == 0 /\ y6^0-y6^post4 == 0 /\ __const_200^0-__const_200^post4 == 0), cost: 1
   5: l6 -> l4 : y4^0'=y4^post5, __const_200^0'=__const_200^post5, y8^0'=y8^post5, j^0'=j^post5, __const_100^0'=__const_100^post5, y6^0'=y6^post5, i^0'=i^post5, (j^0-j^post5 == 0 /\ -y8^post5+y8^0 == 0 /\ -i^post5+i^0 == 0 /\ __const_100^0-__const_100^post5 == 0 /\ -y6^post5+y6^0 == 0 /\ __const_200^0-__const_200^post5 == 0 /\ y4^0-y4^post5 == 0), cost: 1
   6: l7 -> l8 : y4^0'=y4^post6, __const_200^0'=__const_200^post6, y8^0'=y8^post6, j^0'=j^post6, __const_100^0'=__const_100^post6, y6^0'=y6^post6, i^0'=i^post6, (y4^0-y4^post6 == 0 /\ -__const_100^post6+__const_100^0 == 0 /\ -y6^post6+y6^0 == 0 /\ j^0-j^post6 == 0 /\ -i^post6+i^0 == 0 /\ y8^0-y8^post6 == 0 /\ __const_200^0-j^0 <= 0 /\ -__const_200^post6+__const_200^0 == 0), cost: 1
   7: l7 -> l6 : y4^0'=y4^post7, __const_200^0'=__const_200^post7, y8^0'=y8^post7, j^0'=j^post7, __const_100^0'=__const_100^post7, y6^0'=y6^post7, i^0'=i^post7, (-j^0+y8^post7 == 0 /\ -j^post7+j^0 == 0 /\ -i^post7+i^0 == 0 /\ -y6^post7+y6^0 == 0 /\ y4^0-y4^post7 == 0 /\ -__const_100^post7+__const_100^0 == 0 /\ 1-__const_200^0+j^0 <= 0 /\ __const_200^0-__const_200^post7 == 0), cost: 1
   9: l9 -> l5 : y4^0'=y4^post9, __const_200^0'=__const_200^post9, y8^0'=y8^post9, j^0'=j^post9, __const_100^0'=__const_100^post9, y6^0'=y6^post9, i^0'=i^post9, (__const_200^0-__const_200^post9 == 0 /\ y4^0-y4^post9 == 0 /\ y6^0-y6^post9 == 0 /\ -1-i^0+i^post9 == 0 /\ y8^0-y8^post9 == 0 /\ -j^post9+j^0 == 0 /\ -__const_100^post9+__const_100^0 == 0), cost: 1
  10: l10 -> l9 : y4^0'=y4^post10, __const_200^0'=__const_200^post10, y8^0'=y8^post10, j^0'=j^post10, __const_100^0'=__const_100^post10, y6^0'=y6^post10, i^0'=i^post10, (y4^0-y4^post10 == 0 /\ -y8^post10+y8^0 == 0 /\ -j^post10+j^0 == 0 /\ y6^0-y6^post10 == 0 /\ __const_200^0-__const_200^post10 == 0 /\ -i^post10+i^0 == 0 /\ __const_100^0-__const_100^post10 == 0), cost: 1
  12: l11 -> l5 : y4^0'=y4^post12, __const_200^0'=__const_200^post12, y8^0'=y8^post12, j^0'=j^post12, __const_100^0'=__const_100^post12, y6^0'=y6^post12, i^0'=i^post12, (y8^0-y8^post12 == 0 /\ -__const_100^post12+__const_100^0 == 0 /\ __const_200^0-__const_200^post12 == 0 /\ y4^0-y4^post12 == 0 /\ j^0-j^post12 == 0 /\ i^post12 == 0 /\ -y6^post12+y6^0 == 0), cost: 1
  13: l12 -> l11 : y4^0'=y4^post13, __const_200^0'=__const_200^post13, y8^0'=y8^post13, j^0'=j^post13, __const_100^0'=__const_100^post13, y6^0'=y6^post13, i^0'=i^post13, (-y6^post13+y6^0 == 0 /\ -i^post13+i^0 == 0 /\ y8^0-y8^post13 == 0 /\ __const_200^0-__const_200^post13 == 0 /\ -__const_100^post13+__const_100^0 == 0 /\ j^0-j^post13 == 0 /\ y4^0-y4^post13 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l12
   0: l0 -> l1 : y4^0'=y4^post0, __const_200^0'=__const_200^post0, y8^0'=y8^post0, j^0'=j^post0, __const_100^0'=__const_100^post0, y6^0'=y6^post0, i^0'=i^post0, (y4^0-y4^post0 == 0 /\ -__const_200^post0+__const_200^0 == 0 /\ -i^post0+i^0 == 0 /\ -y6^post0+y6^0 == 0 /\ -__const_100^post0+__const_100^0 == 0 /\ j^0-j^post0 == 0 /\ y8^0-y8^post0 == 0), cost: 1
  11: l1 -> l10 : y4^0'=y4^post11, __const_200^0'=__const_200^post11, y8^0'=y8^post11, j^0'=j^post11, __const_100^0'=__const_100^post11, y6^0'=y6^post11, i^0'=i^post11, (-i^post11+i^0 == 0 /\ y6^post11-i^0 == 0 /\ __const_100^0-__const_100^post11 == 0 /\ -y8^post11+y8^0 == 0 /\ j^0-j^post11 == 0 /\ y4^0-y4^post11 == 0 /\ -__const_200^post11+__const_200^0 == 0), cost: 1
   1: l2 -> l3 : y4^0'=y4^post1, __const_200^0'=__const_200^post1, y8^0'=y8^post1, j^0'=j^post1, __const_100^0'=__const_100^post1, y6^0'=y6^post1, i^0'=i^post1, (-__const_100^0+j^post1 == 0 /\ __const_100^0-i^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0 /\ y8^0-y8^post1 == 0 /\ y4^0-y4^post1 == 0 /\ __const_200^0-__const_200^post1 == 0 /\ -i^post1+i^0 == 0 /\ -y6^post1+y6^0 == 0), cost: 1
   2: l2 -> l0 : y4^0'=y4^post2, __const_200^0'=__const_200^post2, y8^0'=y8^post2, j^0'=j^post2, __const_100^0'=__const_100^post2, y6^0'=y6^post2, i^0'=i^post2, (y4^post2-i^0 == 0 /\ __const_200^0-__const_200^post2 == 0 /\ i^0-i^post2 == 0 /\ 1-__const_100^0+i^0 <= 0 /\ -y6^post2+y6^0 == 0 /\ y8^0-y8^post2 == 0 /\ -j^post2+j^0 == 0 /\ -__const_100^post2+__const_100^0 == 0), cost: 1
   8: l3 -> l7 : y4^0'=y4^post8, __const_200^0'=__const_200^post8, y8^0'=y8^post8, j^0'=j^post8, __const_100^0'=__const_100^post8, y6^0'=y6^post8, i^0'=i^post8, (-y6^post8+y6^0 == 0 /\ __const_200^0-__const_200^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ i^0-i^post8 == 0 /\ -j^post8+j^0 == 0 /\ y8^0-y8^post8 == 0 /\ y4^0-y4^post8 == 0), cost: 1
   3: l4 -> l3 : y4^0'=y4^post3, __const_200^0'=__const_200^post3, y8^0'=y8^post3, j^0'=j^post3, __const_100^0'=__const_100^post3, y6^0'=y6^post3, i^0'=i^post3, (-i^post3+i^0 == 0 /\ -y8^post3+y8^0 == 0 /\ __const_200^0-__const_200^post3 == 0 /\ y4^0-y4^post3 == 0 /\ y6^0-y6^post3 == 0 /\ __const_100^0-__const_100^post3 == 0 /\ -1+j^post3-j^0 == 0), cost: 1
   4: l5 -> l2 : y4^0'=y4^post4, __const_200^0'=__const_200^post4, y8^0'=y8^post4, j^0'=j^post4, __const_100^0'=__const_100^post4, y6^0'=y6^post4, i^0'=i^post4, (-y8^post4+y8^0 == 0 /\ -i^post4+i^0 == 0 /\ y4^0-y4^post4 == 0 /\ -j^post4+j^0 == 0 /\ __const_100^0-__const_100^post4 == 0 /\ y6^0-y6^post4 == 0 /\ __const_200^0-__const_200^post4 == 0), cost: 1
   5: l6 -> l4 : y4^0'=y4^post5, __const_200^0'=__const_200^post5, y8^0'=y8^post5, j^0'=j^post5, __const_100^0'=__const_100^post5, y6^0'=y6^post5, i^0'=i^post5, (j^0-j^post5 == 0 /\ -y8^post5+y8^0 == 0 /\ -i^post5+i^0 == 0 /\ __const_100^0-__const_100^post5 == 0 /\ -y6^post5+y6^0 == 0 /\ __const_200^0-__const_200^post5 == 0 /\ y4^0-y4^post5 == 0), cost: 1
   7: l7 -> l6 : y4^0'=y4^post7, __const_200^0'=__const_200^post7, y8^0'=y8^post7, j^0'=j^post7, __const_100^0'=__const_100^post7, y6^0'=y6^post7, i^0'=i^post7, (-j^0+y8^post7 == 0 /\ -j^post7+j^0 == 0 /\ -i^post7+i^0 == 0 /\ -y6^post7+y6^0 == 0 /\ y4^0-y4^post7 == 0 /\ -__const_100^post7+__const_100^0 == 0 /\ 1-__const_200^0+j^0 <= 0 /\ __const_200^0-__const_200^post7 == 0), cost: 1
   9: l9 -> l5 : y4^0'=y4^post9, __const_200^0'=__const_200^post9, y8^0'=y8^post9, j^0'=j^post9, __const_100^0'=__const_100^post9, y6^0'=y6^post9, i^0'=i^post9, (__const_200^0-__const_200^post9 == 0 /\ y4^0-y4^post9 == 0 /\ y6^0-y6^post9 == 0 /\ -1-i^0+i^post9 == 0 /\ y8^0-y8^post9 == 0 /\ -j^post9+j^0 == 0 /\ -__const_100^post9+__const_100^0 == 0), cost: 1
  10: l10 -> l9 : y4^0'=y4^post10, __const_200^0'=__const_200^post10, y8^0'=y8^post10, j^0'=j^post10, __const_100^0'=__const_100^post10, y6^0'=y6^post10, i^0'=i^post10, (y4^0-y4^post10 == 0 /\ -y8^post10+y8^0 == 0 /\ -j^post10+j^0 == 0 /\ y6^0-y6^post10 == 0 /\ __const_200^0-__const_200^post10 == 0 /\ -i^post10+i^0 == 0 /\ __const_100^0-__const_100^post10 == 0), cost: 1
  12: l11 -> l5 : y4^0'=y4^post12, __const_200^0'=__const_200^post12, y8^0'=y8^post12, j^0'=j^post12, __const_100^0'=__const_100^post12, y6^0'=y6^post12, i^0'=i^post12, (y8^0-y8^post12 == 0 /\ -__const_100^post12+__const_100^0 == 0 /\ __const_200^0-__const_200^post12 == 0 /\ y4^0-y4^post12 == 0 /\ j^0-j^post12 == 0 /\ i^post12 == 0 /\ -y6^post12+y6^0 == 0), cost: 1
  13: l12 -> l11 : y4^0'=y4^post13, __const_200^0'=__const_200^post13, y8^0'=y8^post13, j^0'=j^post13, __const_100^0'=__const_100^post13, y6^0'=y6^post13, i^0'=i^post13, (-y6^post13+y6^0 == 0 /\ -i^post13+i^0 == 0 /\ y8^0-y8^post13 == 0 /\ __const_200^0-__const_200^post13 == 0 /\ -__const_100^post13+__const_100^0 == 0 /\ j^0-j^post13 == 0 /\ y4^0-y4^post13 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : y4^0'=y4^post0, __const_200^0'=__const_200^post0, y8^0'=y8^post0, j^0'=j^post0, __const_100^0'=__const_100^post0, y6^0'=y6^post0, i^0'=i^post0, (y4^0-y4^post0 == 0 /\ -__const_200^post0+__const_200^0 == 0 /\ -i^post0+i^0 == 0 /\ -y6^post0+y6^0 == 0 /\ -__const_100^post0+__const_100^0 == 0 /\ j^0-j^post0 == 0 /\ y8^0-y8^post0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l3 : y4^0'=y4^post1, __const_200^0'=__const_200^post1, y8^0'=y8^post1, j^0'=j^post1, __const_100^0'=__const_100^post1, y6^0'=y6^post1, i^0'=i^post1, (-__const_100^0+j^post1 == 0 /\ __const_100^0-i^0 <= 0 /\ -__const_100^post1+__const_100^0 == 0 /\ y8^0-y8^post1 == 0 /\ y4^0-y4^post1 == 0 /\ __const_200^0-__const_200^post1 == 0 /\ -i^post1+i^0 == 0 /\ -y6^post1+y6^0 == 0), cost: 1
New rule:
l2 -> l3 : j^0'=__const_100^0, __const_100^0-i^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : y4^0'=y4^post2, __const_200^0'=__const_200^post2, y8^0'=y8^post2, j^0'=j^post2, __const_100^0'=__const_100^post2, y6^0'=y6^post2, i^0'=i^post2, (y4^post2-i^0 == 0 /\ __const_200^0-__const_200^post2 == 0 /\ i^0-i^post2 == 0 /\ 1-__const_100^0+i^0 <= 0 /\ -y6^post2+y6^0 == 0 /\ y8^0-y8^post2 == 0 /\ -j^post2+j^0 == 0 /\ -__const_100^post2+__const_100^0 == 0), cost: 1
New rule:
l2 -> l0 : y4^0'=i^0, 1-__const_100^0+i^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : y4^0'=y4^post3, __const_200^0'=__const_200^post3, y8^0'=y8^post3, j^0'=j^post3, __const_100^0'=__const_100^post3, y6^0'=y6^post3, i^0'=i^post3, (-i^post3+i^0 == 0 /\ -y8^post3+y8^0 == 0 /\ __const_200^0-__const_200^post3 == 0 /\ y4^0-y4^post3 == 0 /\ y6^0-y6^post3 == 0 /\ __const_100^0-__const_100^post3 == 0 /\ -1+j^post3-j^0 == 0), cost: 1
New rule:
l4 -> l3 : j^0'=1+j^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l2 : y4^0'=y4^post4, __const_200^0'=__const_200^post4, y8^0'=y8^post4, j^0'=j^post4, __const_100^0'=__const_100^post4, y6^0'=y6^post4, i^0'=i^post4, (-y8^post4+y8^0 == 0 /\ -i^post4+i^0 == 0 /\ y4^0-y4^post4 == 0 /\ -j^post4+j^0 == 0 /\ __const_100^0-__const_100^post4 == 0 /\ y6^0-y6^post4 == 0 /\ __const_200^0-__const_200^post4 == 0), cost: 1
New rule:
l5 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l4 : y4^0'=y4^post5, __const_200^0'=__const_200^post5, y8^0'=y8^post5, j^0'=j^post5, __const_100^0'=__const_100^post5, y6^0'=y6^post5, i^0'=i^post5, (j^0-j^post5 == 0 /\ -y8^post5+y8^0 == 0 /\ -i^post5+i^0 == 0 /\ __const_100^0-__const_100^post5 == 0 /\ -y6^post5+y6^0 == 0 /\ __const_200^0-__const_200^post5 == 0 /\ y4^0-y4^post5 == 0), cost: 1
New rule:
l6 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l6 : y4^0'=y4^post7, __const_200^0'=__const_200^post7, y8^0'=y8^post7, j^0'=j^post7, __const_100^0'=__const_100^post7, y6^0'=y6^post7, i^0'=i^post7, (-j^0+y8^post7 == 0 /\ -j^post7+j^0 == 0 /\ -i^post7+i^0 == 0 /\ -y6^post7+y6^0 == 0 /\ y4^0-y4^post7 == 0 /\ -__const_100^post7+__const_100^0 == 0 /\ 1-__const_200^0+j^0 <= 0 /\ __const_200^0-__const_200^post7 == 0), cost: 1
New rule:
l7 -> l6 : y8^0'=j^0, 1-__const_200^0+j^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l7 : y4^0'=y4^post8, __const_200^0'=__const_200^post8, y8^0'=y8^post8, j^0'=j^post8, __const_100^0'=__const_100^post8, y6^0'=y6^post8, i^0'=i^post8, (-y6^post8+y6^0 == 0 /\ __const_200^0-__const_200^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ i^0-i^post8 == 0 /\ -j^post8+j^0 == 0 /\ y8^0-y8^post8 == 0 /\ y4^0-y4^post8 == 0), cost: 1
New rule:
l3 -> l7 : TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l5 : y4^0'=y4^post9, __const_200^0'=__const_200^post9, y8^0'=y8^post9, j^0'=j^post9, __const_100^0'=__const_100^post9, y6^0'=y6^post9, i^0'=i^post9, (__const_200^0-__const_200^post9 == 0 /\ y4^0-y4^post9 == 0 /\ y6^0-y6^post9 == 0 /\ -1-i^0+i^post9 == 0 /\ y8^0-y8^post9 == 0 /\ -j^post9+j^0 == 0 /\ -__const_100^post9+__const_100^0 == 0), cost: 1
New rule:
l9 -> l5 : i^0'=1+i^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l10 -> l9 : y4^0'=y4^post10, __const_200^0'=__const_200^post10, y8^0'=y8^post10, j^0'=j^post10, __const_100^0'=__const_100^post10, y6^0'=y6^post10, i^0'=i^post10, (y4^0-y4^post10 == 0 /\ -y8^post10+y8^0 == 0 /\ -j^post10+j^0 == 0 /\ y6^0-y6^post10 == 0 /\ __const_200^0-__const_200^post10 == 0 /\ -i^post10+i^0 == 0 /\ __const_100^0-__const_100^post10 == 0), cost: 1
New rule:
l10 -> l9 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l10 : y4^0'=y4^post11, __const_200^0'=__const_200^post11, y8^0'=y8^post11, j^0'=j^post11, __const_100^0'=__const_100^post11, y6^0'=y6^post11, i^0'=i^post11, (-i^post11+i^0 == 0 /\ y6^post11-i^0 == 0 /\ __const_100^0-__const_100^post11 == 0 /\ -y8^post11+y8^0 == 0 /\ j^0-j^post11 == 0 /\ y4^0-y4^post11 == 0 /\ -__const_200^post11+__const_200^0 == 0), cost: 1
New rule:
l1 -> l10 : y6^0'=i^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l11 -> l5 : y4^0'=y4^post12, __const_200^0'=__const_200^post12, y8^0'=y8^post12, j^0'=j^post12, __const_100^0'=__const_100^post12, y6^0'=y6^post12, i^0'=i^post12, (y8^0-y8^post12 == 0 /\ -__const_100^post12+__const_100^0 == 0 /\ __const_200^0-__const_200^post12 == 0 /\ y4^0-y4^post12 == 0 /\ j^0-j^post12 == 0 /\ i^post12 == 0 /\ -y6^post12+y6^0 == 0), cost: 1
New rule:
l11 -> l5 : i^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l12 -> l11 : y4^0'=y4^post13, __const_200^0'=__const_200^post13, y8^0'=y8^post13, j^0'=j^post13, __const_100^0'=__const_100^post13, y6^0'=y6^post13, i^0'=i^post13, (-y6^post13+y6^0 == 0 /\ -i^post13+i^0 == 0 /\ y8^0-y8^post13 == 0 /\ __const_200^0-__const_200^post13 == 0 /\ -__const_100^post13+__const_100^0 == 0 /\ j^0-j^post13 == 0 /\ y4^0-y4^post13 == 0), cost: 1
New rule:
l12 -> l11 : TRUE, cost: 1

Simplified rules
Start location: l12
  14: l0 -> l1 : TRUE, cost: 1
  24: l1 -> l10 : y6^0'=i^0, TRUE, cost: 1
  15: l2 -> l3 : j^0'=__const_100^0, __const_100^0-i^0 <= 0, cost: 1
  16: l2 -> l0 : y4^0'=i^0, 1-__const_100^0+i^0 <= 0, cost: 1
  21: l3 -> l7 : TRUE, cost: 1
  17: l4 -> l3 : j^0'=1+j^0, TRUE, cost: 1
  18: l5 -> l2 : TRUE, cost: 1
  19: l6 -> l4 : TRUE, cost: 1
  20: l7 -> l6 : y8^0'=j^0, 1-__const_200^0+j^0 <= 0, cost: 1
  22: l9 -> l5 : i^0'=1+i^0, TRUE, cost: 1
  23: l10 -> l9 : TRUE, cost: 1
  25: l11 -> l5 : i^0'=0, TRUE, cost: 1
  26: l12 -> l11 : TRUE, cost: 1


Eliminating location l11 by chaining:

Applied chaining
First rule:
l12 -> l11 : TRUE, cost: 1
Second rule:
l11 -> l5 : i^0'=0, TRUE, cost: 1
New rule:
l12 -> l5 : i^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 25 26

Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : y4^0'=i^0, 1-__const_100^0+i^0 <= 0, cost: 1
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l2 -> l1 : y4^0'=i^0, 1-__const_100^0+i^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 14 16

Eliminating location l1 by chaining:

Applied chaining
First rule:
l2 -> l1 : y4^0'=i^0, 1-__const_100^0+i^0 <= 0, cost: 2
Second rule:
l1 -> l10 : y6^0'=i^0, TRUE, cost: 1
New rule:
l2 -> l10 : y4^0'=i^0, y6^0'=i^0, 1-__const_100^0+i^0 <= 0, cost: 3

Applied deletion
Removed the following rules: 24 28

Eliminating location l10 by chaining:

Applied chaining
First rule:
l2 -> l10 : y4^0'=i^0, y6^0'=i^0, 1-__const_100^0+i^0 <= 0, cost: 3
Second rule:
l10 -> l9 : TRUE, cost: 1
New rule:
l2 -> l9 : y4^0'=i^0, y6^0'=i^0, 1-__const_100^0+i^0 <= 0, cost: 4

Applied deletion
Removed the following rules: 23 29

Eliminating location l9 by chaining:

Applied chaining
First rule:
l2 -> l9 : y4^0'=i^0, y6^0'=i^0, 1-__const_100^0+i^0 <= 0, cost: 4
Second rule:
l9 -> l5 : i^0'=1+i^0, TRUE, cost: 1
New rule:
l2 -> l5 : y4^0'=i^0, y6^0'=i^0, i^0'=1+i^0, 1-__const_100^0+i^0 <= 0, cost: 5

Applied deletion
Removed the following rules: 22 30

Eliminating location l7 by chaining:

Applied chaining
First rule:
l3 -> l7 : TRUE, cost: 1
Second rule:
l7 -> l6 : y8^0'=j^0, 1-__const_200^0+j^0 <= 0, cost: 1
New rule:
l3 -> l6 : y8^0'=j^0, 1-__const_200^0+j^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 20 21

Eliminating location l6 by chaining:

Applied chaining
First rule:
l3 -> l6 : y8^0'=j^0, 1-__const_200^0+j^0 <= 0, cost: 2
Second rule:
l6 -> l4 : TRUE, cost: 1
New rule:
l3 -> l4 : y8^0'=j^0, 1-__const_200^0+j^0 <= 0, cost: 3

Applied deletion
Removed the following rules: 19 32

Eliminating location l4 by chaining:

Applied chaining
First rule:
l3 -> l4 : y8^0'=j^0, 1-__const_200^0+j^0 <= 0, cost: 3
Second rule:
l4 -> l3 : j^0'=1+j^0, TRUE, cost: 1
New rule:
l3 -> l3 : y8^0'=j^0, j^0'=1+j^0, 1-__const_200^0+j^0 <= 0, cost: 4

Applied deletion
Removed the following rules: 17 33

Eliminated locations on linear paths
Start location: l12
  15: l2 -> l3 : j^0'=__const_100^0, __const_100^0-i^0 <= 0, cost: 1
  31: l2 -> l5 : y4^0'=i^0, y6^0'=i^0, i^0'=1+i^0, 1-__const_100^0+i^0 <= 0, cost: 5
  34: l3 -> l3 : y8^0'=j^0, j^0'=1+j^0, 1-__const_200^0+j^0 <= 0, cost: 4
  18: l5 -> l2 : TRUE, cost: 1
  27: l12 -> l5 : i^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l3 -> l3 : y8^0'=j^0, j^0'=1+j^0, 1-__const_200^0+j^0 <= 0, cost: 4
New rule:
l3 -> l3 : y8^0'=-1+n+j^0, j^0'=n+j^0, (-1+n >= 0 /\ __const_200^0-n-j^0 >= 0), cost: 4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_dDMJda.txt

Applied instantiation
Original rule:
l3 -> l3 : y8^0'=-1+n+j^0, j^0'=n+j^0, (-1+n >= 0 /\ __const_200^0-n-j^0 >= 0), cost: 4*n
New rule:
l3 -> l3 : y8^0'=-1+__const_200^0, j^0'=__const_200^0, (0 >= 0 /\ -1+__const_200^0-j^0 >= 0), cost: 4*__const_200^0-4*j^0

Applied simplification
Original rule:
l3 -> l3 : y8^0'=-1+__const_200^0, j^0'=__const_200^0, (0 >= 0 /\ -1+__const_200^0-j^0 >= 0), cost: 4*__const_200^0-4*j^0
New rule:
l3 -> l3 : y8^0'=-1+__const_200^0, j^0'=__const_200^0, -1+__const_200^0-j^0 >= 0, cost: 4*__const_200^0-4*j^0

Applied deletion
Removed the following rules: 34

Accelerated simple loops
Start location: l12
  15: l2 -> l3 : j^0'=__const_100^0, __const_100^0-i^0 <= 0, cost: 1
  31: l2 -> l5 : y4^0'=i^0, y6^0'=i^0, i^0'=1+i^0, 1-__const_100^0+i^0 <= 0, cost: 5
  36: l3 -> l3 : y8^0'=-1+__const_200^0, j^0'=__const_200^0, -1+__const_200^0-j^0 >= 0, cost: 4*__const_200^0-4*j^0
  18: l5 -> l2 : TRUE, cost: 1
  27: l12 -> l5 : i^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l2 -> l3 : j^0'=__const_100^0, __const_100^0-i^0 <= 0, cost: 1
Second rule:
l3 -> l3 : y8^0'=-1+__const_200^0, j^0'=__const_200^0, -1+__const_200^0-j^0 >= 0, cost: 4*__const_200^0-4*j^0
New rule:
l2 -> l3 : y8^0'=-1+__const_200^0, j^0'=__const_200^0, (__const_100^0-i^0 <= 0 /\ -1+__const_200^0-__const_100^0 >= 0), cost: 1+4*__const_200^0-4*__const_100^0

Applied deletion
Removed the following rules: 36

Chained accelerated rules with incoming rules
Start location: l12
  15: l2 -> l3 : j^0'=__const_100^0, __const_100^0-i^0 <= 0, cost: 1
  31: l2 -> l5 : y4^0'=i^0, y6^0'=i^0, i^0'=1+i^0, 1-__const_100^0+i^0 <= 0, cost: 5
  37: l2 -> l3 : y8^0'=-1+__const_200^0, j^0'=__const_200^0, (__const_100^0-i^0 <= 0 /\ -1+__const_200^0-__const_100^0 >= 0), cost: 1+4*__const_200^0-4*__const_100^0
  18: l5 -> l2 : TRUE, cost: 1
  27: l12 -> l5 : i^0'=0, TRUE, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l12
  31: l2 -> l5 : y4^0'=i^0, y6^0'=i^0, i^0'=1+i^0, 1-__const_100^0+i^0 <= 0, cost: 5
  18: l5 -> l2 : TRUE, cost: 1
  27: l12 -> l5 : i^0'=0, TRUE, cost: 2


Eliminating location l2 by chaining:

Applied chaining
First rule:
l5 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l5 : y4^0'=i^0, y6^0'=i^0, i^0'=1+i^0, 1-__const_100^0+i^0 <= 0, cost: 5
New rule:
l5 -> l5 : y4^0'=i^0, y6^0'=i^0, i^0'=1+i^0, 1-__const_100^0+i^0 <= 0, cost: 6

Applied deletion
Removed the following rules: 18 31

Eliminated locations on linear paths
Start location: l12
  38: l5 -> l5 : y4^0'=i^0, y6^0'=i^0, i^0'=1+i^0, 1-__const_100^0+i^0 <= 0, cost: 6
  27: l12 -> l5 : i^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l5 -> l5 : y4^0'=i^0, y6^0'=i^0, i^0'=1+i^0, 1-__const_100^0+i^0 <= 0, cost: 6
New rule:
l5 -> l5 : y4^0'=-1+n0+i^0, y6^0'=-1+n0+i^0, i^0'=n0+i^0, (__const_100^0-n0-i^0 >= 0 /\ -1+n0 >= 0), cost: 6*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FeHbnp.txt

Applied instantiation
Original rule:
l5 -> l5 : y4^0'=-1+n0+i^0, y6^0'=-1+n0+i^0, i^0'=n0+i^0, (__const_100^0-n0-i^0 >= 0 /\ -1+n0 >= 0), cost: 6*n0
New rule:
l5 -> l5 : y4^0'=-1+__const_100^0, y6^0'=-1+__const_100^0, i^0'=__const_100^0, (0 >= 0 /\ -1+__const_100^0-i^0 >= 0), cost: 6*__const_100^0-6*i^0

Applied simplification
Original rule:
l5 -> l5 : y4^0'=-1+__const_100^0, y6^0'=-1+__const_100^0, i^0'=__const_100^0, (0 >= 0 /\ -1+__const_100^0-i^0 >= 0), cost: 6*__const_100^0-6*i^0
New rule:
l5 -> l5 : y4^0'=-1+__const_100^0, y6^0'=-1+__const_100^0, i^0'=__const_100^0, -1+__const_100^0-i^0 >= 0, cost: 6*__const_100^0-6*i^0

Applied deletion
Removed the following rules: 38

Accelerated simple loops
Start location: l12
  40: l5 -> l5 : y4^0'=-1+__const_100^0, y6^0'=-1+__const_100^0, i^0'=__const_100^0, -1+__const_100^0-i^0 >= 0, cost: 6*__const_100^0-6*i^0
  27: l12 -> l5 : i^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l12 -> l5 : i^0'=0, TRUE, cost: 2
Second rule:
l5 -> l5 : y4^0'=-1+__const_100^0, y6^0'=-1+__const_100^0, i^0'=__const_100^0, -1+__const_100^0-i^0 >= 0, cost: 6*__const_100^0-6*i^0
New rule:
l12 -> l5 : y4^0'=-1+__const_100^0, y6^0'=-1+__const_100^0, i^0'=__const_100^0, -1+__const_100^0 >= 0, cost: 2+6*__const_100^0

Applied deletion
Removed the following rules: 40

Chained accelerated rules with incoming rules
Start location: l12
  27: l12 -> l5 : i^0'=0, TRUE, cost: 2
  41: l12 -> l5 : y4^0'=-1+__const_100^0, y6^0'=-1+__const_100^0, i^0'=__const_100^0, -1+__const_100^0 >= 0, cost: 2+6*__const_100^0


Removed unreachable locations and irrelevant leafs
Start location: l12
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

