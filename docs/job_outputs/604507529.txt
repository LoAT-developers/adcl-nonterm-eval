unknown

Initial ITS

Start location: l7
Program variables: i^0 j^0 x^0
   0: l0 -> l1 : i^0'=i^post1, j^0'=j^post1, x^0'=x^post1, (x^0-i^0 <= 0 /\ -i^post1+i^0 == 0 /\ -j^post1+j^0 == 0 /\ -x^post1+x^0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post2, j^0'=j^post2, x^0'=x^post2, (-2+j^post2-j^0 == 0 /\ -1+i^post2-i^0 == 0 /\ 1-x^0+i^0 <= 0 /\ -x^post2+x^0 == 0), cost: 1
   6: l1 -> l5 : i^0'=i^post7, j^0'=j^post7, x^0'=x^post7, (j^0-j^post7 == 0 /\ 1+j^0-2*x^0 <= 0 /\ -i^post7+i^0 == 0 /\ -x^post7+x^0 == 0), cost: 1
   7: l1 -> l5 : i^0'=i^post8, j^0'=j^post8, x^0'=x^post8, (x^0-x^post8 == 0 /\ j^0-j^post8 == 0 /\ -j^0+2*x^0 <= 0 /\ -i^post8+i^0 == 0), cost: 1
   4: l2 -> l0 : i^0'=i^post5, j^0'=j^post5, x^0'=x^post5, (-i^post5+i^0 == 0 /\ -x^post5+x^0 == 0 /\ j^0-j^post5 == 0), cost: 1
   2: l3 -> l2 : i^0'=i^post3, j^0'=j^post3, x^0'=x^post3, (2-x^0 <= 0 /\ -j^post3+j^0 == 0 /\ i^post3 == 0 /\ -x^post3+x^0 == 0), cost: 1
   3: l3 -> l4 : i^0'=i^post4, j^0'=j^post4, x^0'=x^post4, (-x^post4+x^0 == 0 /\ -j^post4+j^0 == 0 /\ -i^post4+i^0 == 0 /\ -1+x^0 <= 0), cost: 1
   5: l5 -> l4 : i^0'=i^post6, j^0'=j^post6, x^0'=x^post6, (-i^post6+i^0 == 0 /\ -x^post6+x^0 == 0 /\ j^0-j^post6 == 0), cost: 1
   8: l6 -> l3 : i^0'=i^post9, j^0'=j^post9, x^0'=x^post9, (j^post9 == 0 /\ -i^post9+i^0 == 0 /\ -10+x^post9 == 0), cost: 1
   9: l7 -> l6 : i^0'=i^post10, j^0'=j^post10, x^0'=x^post10, (x^0-x^post10 == 0 /\ -i^post10+i^0 == 0 /\ -j^post10+j^0 == 0), cost: 1

Chained Linear Paths

Start location: l7
Program variables: i^0 j^0 x^0
   0: l0 -> l1 : i^0'=i^post1, j^0'=j^post1, x^0'=x^post1, (x^0-i^0 <= 0 /\ -i^post1+i^0 == 0 /\ -j^post1+j^0 == 0 /\ -x^post1+x^0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post2, j^0'=j^post2, x^0'=x^post2, (-2+j^post2-j^0 == 0 /\ -1+i^post2-i^0 == 0 /\ 1-x^0+i^0 <= 0 /\ -x^post2+x^0 == 0), cost: 1
   6: l1 -> l5 : i^0'=i^post7, j^0'=j^post7, x^0'=x^post7, (j^0-j^post7 == 0 /\ 1+j^0-2*x^0 <= 0 /\ -i^post7+i^0 == 0 /\ -x^post7+x^0 == 0), cost: 1
   7: l1 -> l5 : i^0'=i^post8, j^0'=j^post8, x^0'=x^post8, (x^0-x^post8 == 0 /\ j^0-j^post8 == 0 /\ -j^0+2*x^0 <= 0 /\ -i^post8+i^0 == 0), cost: 1
   4: l2 -> l0 : i^0'=i^post5, j^0'=j^post5, x^0'=x^post5, (-i^post5+i^0 == 0 /\ -x^post5+x^0 == 0 /\ j^0-j^post5 == 0), cost: 1
   2: l3 -> l2 : i^0'=i^post3, j^0'=j^post3, x^0'=x^post3, (2-x^0 <= 0 /\ -j^post3+j^0 == 0 /\ i^post3 == 0 /\ -x^post3+x^0 == 0), cost: 1
   3: l3 -> l4 : i^0'=i^post4, j^0'=j^post4, x^0'=x^post4, (-x^post4+x^0 == 0 /\ -j^post4+j^0 == 0 /\ -i^post4+i^0 == 0 /\ -1+x^0 <= 0), cost: 1
   5: l5 -> l4 : i^0'=i^post6, j^0'=j^post6, x^0'=x^post6, (-i^post6+i^0 == 0 /\ -x^post6+x^0 == 0 /\ j^0-j^post6 == 0), cost: 1
  10: l7 -> l3 : i^0'=i^post9, j^0'=j^post9, x^0'=x^post9, (i^post10-i^post9 == 0 /\ x^0-x^post10 == 0 /\ -i^post10+i^0 == 0 /\ j^post9 == 0 /\ -10+x^post9 == 0 /\ -j^post10+j^0 == 0), cost: 1

	Eliminating location l6 by chaining:

	Applied chaining

	First rule:
	l7 -> l6 : i^0'=i^post10, j^0'=j^post10, x^0'=x^post10, (x^0-x^post10 == 0 /\ -i^post10+i^0 == 0 /\ -j^post10+j^0 == 0), cost: 1
	Second rule:
	l6 -> l3 : i^0'=i^post9, j^0'=j^post9, x^0'=x^post9, (j^post9 == 0 /\ -i^post9+i^0 == 0 /\ -10+x^post9 == 0), cost: 1
	New rule:
	l7 -> l3 : i^0'=i^post9, j^0'=j^post9, x^0'=x^post9, (i^post10-i^post9 == 0 /\ x^0-x^post10 == 0 /\ -i^post10+i^0 == 0 /\ j^post9 == 0 /\ -10+x^post9 == 0 /\ -j^post10+j^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 8 9

Simplified Transitions

Start location: l7
Program variables: i^0 j^0 x^0
  11: l0 -> l1 : x^0-i^0 <= 0, cost: 1
  12: l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1-x^0+i^0 <= 0, cost: 1
  17: l1 -> l5 : 1+j^0-2*x^0 <= 0, cost: 1
  18: l1 -> l5 : -j^0+2*x^0 <= 0, cost: 1
  15: l2 -> l0 : T, cost: 1
  13: l3 -> l2 : i^0'=0, 2-x^0 <= 0, cost: 1
  14: l3 -> l4 : -1+x^0 <= 0, cost: 1
  16: l5 -> l4 : T, cost: 1
  19: l7 -> l3 : j^0'=0, x^0'=10, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : i^0'=i^post1, j^0'=j^post1, x^0'=x^post1, (x^0-i^0 <= 0 /\ -i^post1+i^0 == 0 /\ -j^post1+j^0 == 0 /\ -x^post1+x^0 == 0), cost: 1
	New rule:
	l0 -> l1 : i^0'=i^0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ x^0-i^0 <= 0), cost: 1
	
		propagated equality i^post1 = i^0
		
		propagated equality j^post1 = j^0
		
		propagated equality x^post1 = x^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : i^0'=i^0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ x^0-i^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : i^0'=i^0, j^0'=j^0, x^0'=x^0, x^0-i^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : i^0'=i^0, j^0'=j^0, x^0'=x^0, x^0-i^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : x^0-i^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l2 : i^0'=i^post2, j^0'=j^post2, x^0'=x^post2, (-2+j^post2-j^0 == 0 /\ -1+i^post2-i^0 == 0 /\ 1-x^0+i^0 <= 0 /\ -x^post2+x^0 == 0), cost: 1
	New rule:
	l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, x^0'=x^0, (0 == 0 /\ 1-x^0+i^0 <= 0), cost: 1
	
		propagated equality j^post2 = 2+j^0
		
		propagated equality i^post2 = 1+i^0
		
		propagated equality x^post2 = x^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, x^0'=x^0, (0 == 0 /\ 1-x^0+i^0 <= 0), cost: 1
	New rule:
	l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, x^0'=x^0, 1-x^0+i^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, x^0'=x^0, 1-x^0+i^0 <= 0, cost: 1
	New rule:
	l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1-x^0+i^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l2 : i^0'=i^post3, j^0'=j^post3, x^0'=x^post3, (2-x^0 <= 0 /\ -j^post3+j^0 == 0 /\ i^post3 == 0 /\ -x^post3+x^0 == 0), cost: 1
	New rule:
	l3 -> l2 : i^0'=0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ 2-x^0 <= 0), cost: 1
	
		propagated equality j^post3 = j^0
		
		propagated equality i^post3 = 0
		
		propagated equality x^post3 = x^0
		
	Simplified Guard

	Original rule:
	l3 -> l2 : i^0'=0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ 2-x^0 <= 0), cost: 1
	New rule:
	l3 -> l2 : i^0'=0, j^0'=j^0, x^0'=x^0, 2-x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l2 : i^0'=0, j^0'=j^0, x^0'=x^0, 2-x^0 <= 0, cost: 1
	New rule:
	l3 -> l2 : i^0'=0, 2-x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l4 : i^0'=i^post4, j^0'=j^post4, x^0'=x^post4, (-x^post4+x^0 == 0 /\ -j^post4+j^0 == 0 /\ -i^post4+i^0 == 0 /\ -1+x^0 <= 0), cost: 1
	New rule:
	l3 -> l4 : i^0'=i^0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ -1+x^0 <= 0), cost: 1
	
		propagated equality x^post4 = x^0
		
		propagated equality j^post4 = j^0
		
		propagated equality i^post4 = i^0
		
	Simplified Guard

	Original rule:
	l3 -> l4 : i^0'=i^0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ -1+x^0 <= 0), cost: 1
	New rule:
	l3 -> l4 : i^0'=i^0, j^0'=j^0, x^0'=x^0, -1+x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l4 : i^0'=i^0, j^0'=j^0, x^0'=x^0, -1+x^0 <= 0, cost: 1
	New rule:
	l3 -> l4 : -1+x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : i^0'=i^post5, j^0'=j^post5, x^0'=x^post5, (-i^post5+i^0 == 0 /\ -x^post5+x^0 == 0 /\ j^0-j^post5 == 0), cost: 1
	New rule:
	l2 -> l0 : i^0'=i^0, j^0'=j^0, x^0'=x^0, 0 == 0, cost: 1
	
		propagated equality i^post5 = i^0
		
		propagated equality x^post5 = x^0
		
		propagated equality j^post5 = j^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : i^0'=i^0, j^0'=j^0, x^0'=x^0, 0 == 0, cost: 1
	New rule:
	l2 -> l0 : i^0'=i^0, j^0'=j^0, x^0'=x^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : i^0'=i^0, j^0'=j^0, x^0'=x^0, T, cost: 1
	New rule:
	l2 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l4 : i^0'=i^post6, j^0'=j^post6, x^0'=x^post6, (-i^post6+i^0 == 0 /\ -x^post6+x^0 == 0 /\ j^0-j^post6 == 0), cost: 1
	New rule:
	l5 -> l4 : i^0'=i^0, j^0'=j^0, x^0'=x^0, 0 == 0, cost: 1
	
		propagated equality i^post6 = i^0
		
		propagated equality x^post6 = x^0
		
		propagated equality j^post6 = j^0
		
	Simplified Guard

	Original rule:
	l5 -> l4 : i^0'=i^0, j^0'=j^0, x^0'=x^0, 0 == 0, cost: 1
	New rule:
	l5 -> l4 : i^0'=i^0, j^0'=j^0, x^0'=x^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l4 : i^0'=i^0, j^0'=j^0, x^0'=x^0, T, cost: 1
	New rule:
	l5 -> l4 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l5 : i^0'=i^post7, j^0'=j^post7, x^0'=x^post7, (j^0-j^post7 == 0 /\ 1+j^0-2*x^0 <= 0 /\ -i^post7+i^0 == 0 /\ -x^post7+x^0 == 0), cost: 1
	New rule:
	l1 -> l5 : i^0'=i^0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ 1+j^0-2*x^0 <= 0), cost: 1
	
		propagated equality j^post7 = j^0
		
		propagated equality i^post7 = i^0
		
		propagated equality x^post7 = x^0
		
	Simplified Guard

	Original rule:
	l1 -> l5 : i^0'=i^0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ 1+j^0-2*x^0 <= 0), cost: 1
	New rule:
	l1 -> l5 : i^0'=i^0, j^0'=j^0, x^0'=x^0, 1+j^0-2*x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l5 : i^0'=i^0, j^0'=j^0, x^0'=x^0, 1+j^0-2*x^0 <= 0, cost: 1
	New rule:
	l1 -> l5 : 1+j^0-2*x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l5 : i^0'=i^post8, j^0'=j^post8, x^0'=x^post8, (x^0-x^post8 == 0 /\ j^0-j^post8 == 0 /\ -j^0+2*x^0 <= 0 /\ -i^post8+i^0 == 0), cost: 1
	New rule:
	l1 -> l5 : i^0'=i^0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ -j^0+2*x^0 <= 0), cost: 1
	
		propagated equality x^post8 = x^0
		
		propagated equality j^post8 = j^0
		
		propagated equality i^post8 = i^0
		
	Simplified Guard

	Original rule:
	l1 -> l5 : i^0'=i^0, j^0'=j^0, x^0'=x^0, (0 == 0 /\ -j^0+2*x^0 <= 0), cost: 1
	New rule:
	l1 -> l5 : i^0'=i^0, j^0'=j^0, x^0'=x^0, -j^0+2*x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l5 : i^0'=i^0, j^0'=j^0, x^0'=x^0, -j^0+2*x^0 <= 0, cost: 1
	New rule:
	l1 -> l5 : -j^0+2*x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l3 : i^0'=i^post9, j^0'=j^post9, x^0'=x^post9, (i^post10-i^post9 == 0 /\ x^0-x^post10 == 0 /\ -i^post10+i^0 == 0 /\ j^post9 == 0 /\ -10+x^post9 == 0 /\ -j^post10+j^0 == 0), cost: 1
	New rule:
	l7 -> l3 : i^0'=i^post10, j^0'=0, x^0'=10, (0 == 0 /\ x^0-x^post10 == 0 /\ -i^post10+i^0 == 0 /\ -j^post10+j^0 == 0), cost: 1
	
		propagated equality i^post9 = i^post10
		
		propagated equality j^post9 = 0
		
		propagated equality x^post9 = 10
		
	Propagated Equalities

	Original rule:
	l7 -> l3 : i^0'=i^post10, j^0'=0, x^0'=10, (0 == 0 /\ x^0-x^post10 == 0 /\ -i^post10+i^0 == 0 /\ -j^post10+j^0 == 0), cost: 1
	New rule:
	l7 -> l3 : i^0'=i^0, j^0'=0, x^0'=10, 0 == 0, cost: 1
	
		propagated equality x^post10 = x^0
		
		propagated equality i^post10 = i^0
		
		propagated equality j^post10 = j^0
		
	Simplified Guard

	Original rule:
	l7 -> l3 : i^0'=i^0, j^0'=0, x^0'=10, 0 == 0, cost: 1
	New rule:
	l7 -> l3 : i^0'=i^0, j^0'=0, x^0'=10, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l3 : i^0'=i^0, j^0'=0, x^0'=10, T, cost: 1
	New rule:
	l7 -> l3 : j^0'=0, x^0'=10, T, cost: 1

Step with 19

	Trace

	19[T]
	
	Blocked

	[{}, {}]

Step with 13

	Trace

	19[T], 13[(2-x^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 15

	Trace

	19[T], 13[(2-x^0 <= 0)], 15[T]
	
	Blocked

	[{}, {}, {}, {}]

Step with 12

	Trace

	19[T], 13[(2-x^0 <= 0)], 15[T], 12[(1-x^0+i^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {11[T]}, {}]

Accelerate

Start location: l7
Program variables: i^0 j^0 x^0
  11: l0 -> l1 : x^0-i^0 <= 0, cost: 1
  12: l0 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1-x^0+i^0 <= 0, cost: 1
  17: l1 -> l5 : 1+j^0-2*x^0 <= 0, cost: 1
  18: l1 -> l5 : -j^0+2*x^0 <= 0, cost: 1
  15: l2 -> l0 : T, cost: 1
  20: l2 -> l2 : i^0'=n+i^0, j^0'=j^0+2*n, (x^0-n-i^0 >= 0 /\ -1+n >= 0), cost: 1
  13: l3 -> l2 : i^0'=0, 2-x^0 <= 0, cost: 1
  14: l3 -> l4 : -1+x^0 <= 0, cost: 1
  16: l5 -> l4 : T, cost: 1
  19: l7 -> l3 : j^0'=0, x^0'=10, T, cost: 1

	Loop Acceleration

	Original rule:
	l2 -> l2 : i^0'=1+i^0, j^0'=2+j^0, 1-x^0+i^0 <= 0, cost: 1
	New rule:
	l2 -> l2 : i^0'=n+i^0, j^0'=j^0+2*n, (x^0-n-i^0 >= 0 /\ -1+n >= 0), cost: 1

		-1+x^0-i^0 >= 0 [0]: montonic decrease yields x^0-n-i^0 >= 0
		
		-1+x^0-i^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+x^0-i^0 >= 0)
		
		Replacement map: {-1+x^0-i^0 >= 0 -> x^0-n-i^0 >= 0}

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {}, {20[T]}]

Step with 15

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)], 15[T]
	
	Blocked

	[{}, {}, {}, {20[T]}, {}]

Step with 12

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)], 15[T], 12[(1-x^0+i^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {20[T]}, {}, {}]

Covered

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)], 15[T]
	
	Blocked

	[{}, {}, {}, {20[T]}, {12[T]}]

Step with 11

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)], 15[T], 11[(x^0-i^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {20[T]}, {12[T]}, {}]

Step with 18

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)], 15[T], 11[(x^0-i^0 <= 0)], 18[(-j^0+2*x^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {20[T]}, {12[T]}, {17[T]}, {}]

Step with 16

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)], 15[T], 11[(x^0-i^0 <= 0)], 18[(-j^0+2*x^0 <= 0)], 16[T]
	
	Blocked

	[{}, {}, {}, {20[T]}, {12[T]}, {17[T]}, {}, {}]

Backtrack

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)], 15[T], 11[(x^0-i^0 <= 0)], 18[(-j^0+2*x^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {20[T]}, {12[T]}, {17[T]}, {16[T]}]

Backtrack

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)], 15[T], 11[(x^0-i^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {20[T]}, {12[T]}, {17[T], 18[T]}]

Backtrack

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)], 15[T]
	
	Blocked

	[{}, {}, {}, {20[T]}, {11[T], 12[T]}]

Backtrack

	Trace

	19[T], 13[(2-x^0 <= 0)], 20[(x^0-n-i^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {}, {15[T], 20[T]}]

Backtrack

	Trace

	19[T], 13[(2-x^0 <= 0)]
	
	Blocked

	[{}, {}, {20[T]}]

Step with 15

	Trace

	19[T], 13[(2-x^0 <= 0)], 15[T]
	
	Blocked

	[{}, {}, {20[T]}, {}]

Step with 12

	Trace

	19[T], 13[(2-x^0 <= 0)], 15[T], 12[(1-x^0+i^0 <= 0)]
	
	Blocked

	[{}, {}, {20[T]}, {11[T]}, {}]

Covered

	Trace

	19[T], 13[(2-x^0 <= 0)], 15[T]
	
	Blocked

	[{}, {}, {20[T]}, {11[T], 12[T]}]

Backtrack

	Trace

	19[T], 13[(2-x^0 <= 0)]
	
	Blocked

	[{}, {}, {15[T], 20[T]}]

Backtrack

	Trace

	19[T]
	
	Blocked

	[{}, {13[T]}]

Backtrack

	Trace

	Blocked

	[{19[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
