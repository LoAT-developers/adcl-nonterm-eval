NO

Initial ITS

Start location: l7
Program variables: cnt_20^0 cnt_25^0 lt_10^0 lt_11^0 lt_12^0 p2_8^0 p_7^0 result_4^0 tmp_9^0 x_5^0 y_6^0
   0: l0 -> l1 : cnt_20^0'=cnt_20^post1, cnt_25^0'=cnt_25^post1, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, p2_8^0'=p2_8^post1, p_7^0'=p_7^post1, result_4^0'=result_4^post1, tmp_9^0'=tmp_9^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ x_5^0-x_5^post1 == 0 /\ lt_12^1-lt_11^1 <= 0 /\ lt_11^1-cnt_20^0 == 0 /\ -lt_10^post1+lt_10^0 == 0 /\ tmp_9^0-tmp_9^post1 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ cnt_25^0-cnt_25^post1 == 0 /\ -p_7^post1+p_7^0 == 0 /\ p2_8^0-p2_8^post1 == 0 /\ -cnt_20^post1+cnt_20^0 == 0), cost: 1
   1: l0 -> l2 : cnt_20^0'=cnt_20^post2, cnt_25^0'=cnt_25^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, p2_8^0'=p2_8^post2, p_7^0'=p_7^post2, result_4^0'=result_4^post2, tmp_9^0'=tmp_9^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ y_6^0-y_6^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -p_7^post2+p_7^0 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ tmp_9^post2 <= 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ -lt_10^post2+lt_10^0 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -tmp_9^post2 <= 0 /\ p2_8^0-p2_8^post2 == 0 /\ result_4^0-result_4^post2 == 0 /\ -cnt_20^post2+cnt_20^0 == 0), cost: 1
   3: l0 -> l4 : cnt_20^0'=cnt_20^post4, cnt_25^0'=cnt_25^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, p2_8^0'=p2_8^post4, p_7^0'=p_7^post4, result_4^0'=result_4^post4, tmp_9^0'=tmp_9^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ -cnt_20^post4+cnt_20^0 == 0 /\ p2_8^0-p2_8^post4 == 0 /\ -cnt_25^post4+cnt_25^0 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^1-cnt_25^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ p_7^0-p_7^post4 == 0 /\ x_5^0-x_5^post4 == 0 /\ -y_6^post4+y_6^0 == 0), cost: 1
   2: l2 -> l0 : cnt_20^0'=cnt_20^post3, cnt_25^0'=cnt_25^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, p2_8^0'=p2_8^post3, p_7^0'=p_7^post3, result_4^0'=result_4^post3, tmp_9^0'=tmp_9^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-p_7^post3+p_7^0 == 0 /\ cnt_25^0-cnt_25^post3 == 0 /\ tmp_9^0-tmp_9^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ lt_10^0-lt_10^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ p2_8^0-p2_8^post3 == 0 /\ -lt_12^post3+lt_12^0 == 0 /\ -lt_11^post3+lt_11^0 == 0 /\ -cnt_20^post3+cnt_20^0 == 0 /\ -y_6^post3+y_6^0 == 0), cost: 1
   4: l4 -> l5 : cnt_20^0'=cnt_20^post5, cnt_25^0'=cnt_25^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, p2_8^0'=p2_8^post5, p_7^0'=p_7^post5, result_4^0'=result_4^post5, tmp_9^0'=tmp_9^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (-cnt_20^post5+cnt_20^0 == 0 /\ 1+tmp_9^0 <= 0 /\ result_4^0-result_4^post5 == 0 /\ -lt_12^post5+lt_12^0 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ cnt_25^0-cnt_25^post5 == 0 /\ -p_7^post5+p_7^0 == 0 /\ p2_8^0-p2_8^post5 == 0 /\ -tmp_9^post5+tmp_9^0 == 0 /\ x_5^0-x_5^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -lt_10^post5+lt_10^0 == 0), cost: 1
   5: l4 -> l5 : cnt_20^0'=cnt_20^post6, cnt_25^0'=cnt_25^post6, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, p2_8^0'=p2_8^post6, p_7^0'=p_7^post6, result_4^0'=result_4^post6, tmp_9^0'=tmp_9^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (tmp_9^0-tmp_9^post6 == 0 /\ -cnt_20^post6+cnt_20^0 == 0 /\ -cnt_25^post6+cnt_25^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ -y_6^post6+y_6^0 == 0 /\ -lt_12^post6+lt_12^0 == 0 /\ lt_10^0-lt_10^post6 == 0 /\ p_7^0-p_7^post6 == 0 /\ p2_8^0-p2_8^post6 == 0 /\ 1-tmp_9^0 <= 0 /\ -result_4^post6+result_4^0 == 0 /\ lt_11^0-lt_11^post6 == 0), cost: 1
   6: l5 -> l3 : cnt_20^0'=cnt_20^post7, cnt_25^0'=cnt_25^post7, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post7, lt_12^0'=lt_12^post7, p2_8^0'=p2_8^post7, p_7^0'=p_7^post7, result_4^0'=result_4^post7, tmp_9^0'=tmp_9^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ p2_8^0-p2_8^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -p_7^post7+p_7^0 == 0 /\ -cnt_20^post7+cnt_20^0 == 0 /\ cnt_25^0-cnt_25^post7 == 0 /\ -lt_12^post7+lt_12^0 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -lt_11^post7+lt_11^0 == 0 /\ lt_10^1-cnt_20^0 == 0), cost: 1
   7: l3 -> l0 : cnt_20^0'=cnt_20^post8, cnt_25^0'=cnt_25^post8, lt_10^0'=lt_10^post8, lt_11^0'=lt_11^post8, lt_12^0'=lt_12^post8, p2_8^0'=p2_8^post8, p_7^0'=p_7^post8, result_4^0'=result_4^post8, tmp_9^0'=tmp_9^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (-cnt_25^post8+cnt_25^0 == 0 /\ -cnt_20^post8+cnt_20^0 == 0 /\ -result_4^post8+result_4^0 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ p_7^0-p_7^post8 == 0 /\ lt_10^0-lt_10^post8 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ tmp_9^0-tmp_9^post8 == 0 /\ p2_8^0-p2_8^post8 == 0 /\ x_5^0-x_5^post8 == 0 /\ -y_6^post8+y_6^0 == 0), cost: 1
   8: l6 -> l0 : cnt_20^0'=cnt_20^post9, cnt_25^0'=cnt_25^post9, lt_10^0'=lt_10^post9, lt_11^0'=lt_11^post9, lt_12^0'=lt_12^post9, p2_8^0'=p2_8^post9, p_7^0'=p_7^post9, result_4^0'=result_4^post9, tmp_9^0'=tmp_9^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ -cnt_20^post9+cnt_20^0 == 0 /\ tmp_9^0-tmp_9^post9 == 0 /\ -lt_12^post9+lt_12^0 == 0 /\ -x_5^post9+p_7^post9 == 0 /\ result_4^0-result_4^post9 == 0 /\ p2_8^post9-y_6^post9 == 0 /\ -lt_11^post9+lt_11^0 == 0 /\ cnt_25^0-cnt_25^post9 == 0 /\ -lt_10^post9+lt_10^0 == 0), cost: 1
   9: l7 -> l6 : cnt_20^0'=cnt_20^post10, cnt_25^0'=cnt_25^post10, lt_10^0'=lt_10^post10, lt_11^0'=lt_11^post10, lt_12^0'=lt_12^post10, p2_8^0'=p2_8^post10, p_7^0'=p_7^post10, result_4^0'=result_4^post10, tmp_9^0'=tmp_9^post10, x_5^0'=x_5^post10, y_6^0'=y_6^post10, (-cnt_20^post10+cnt_20^0 == 0 /\ lt_10^0-lt_10^post10 == 0 /\ -lt_12^post10+lt_12^0 == 0 /\ p2_8^0-p2_8^post10 == 0 /\ -y_6^post10+y_6^0 == 0 /\ -lt_11^post10+lt_11^0 == 0 /\ -p_7^post10+p_7^0 == 0 /\ tmp_9^0-tmp_9^post10 == 0 /\ x_5^0-x_5^post10 == 0 /\ result_4^0-result_4^post10 == 0 /\ -cnt_25^post10+cnt_25^0 == 0), cost: 1

Chained Linear Paths

Start location: l7
Program variables: cnt_20^0 cnt_25^0 lt_10^0 lt_11^0 lt_12^0 p2_8^0 p_7^0 result_4^0 tmp_9^0 x_5^0 y_6^0
   0: l0 -> l1 : cnt_20^0'=cnt_20^post1, cnt_25^0'=cnt_25^post1, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, p2_8^0'=p2_8^post1, p_7^0'=p_7^post1, result_4^0'=result_4^post1, tmp_9^0'=tmp_9^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ x_5^0-x_5^post1 == 0 /\ lt_12^1-lt_11^1 <= 0 /\ lt_11^1-cnt_20^0 == 0 /\ -lt_10^post1+lt_10^0 == 0 /\ tmp_9^0-tmp_9^post1 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ cnt_25^0-cnt_25^post1 == 0 /\ -p_7^post1+p_7^0 == 0 /\ p2_8^0-p2_8^post1 == 0 /\ -cnt_20^post1+cnt_20^0 == 0), cost: 1
   3: l0 -> l4 : cnt_20^0'=cnt_20^post4, cnt_25^0'=cnt_25^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, p2_8^0'=p2_8^post4, p_7^0'=p_7^post4, result_4^0'=result_4^post4, tmp_9^0'=tmp_9^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ -cnt_20^post4+cnt_20^0 == 0 /\ p2_8^0-p2_8^post4 == 0 /\ -cnt_25^post4+cnt_25^0 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^1-cnt_25^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ p_7^0-p_7^post4 == 0 /\ x_5^0-x_5^post4 == 0 /\ -y_6^post4+y_6^0 == 0), cost: 1
  11: l0 -> l0 : cnt_20^0'=cnt_20^post3, cnt_25^0'=cnt_25^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, p2_8^0'=p2_8^post3, p_7^0'=p_7^post3, result_4^0'=result_4^post3, tmp_9^0'=tmp_9^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_10^post2-lt_10^post3 == 0 /\ -x_5^post3+x_5^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -p_7^post2+p_7^0 == 0 /\ -result_4^post3+result_4^post2 == 0 /\ cnt_25^post2-cnt_25^post3 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ tmp_9^post2 <= 0 /\ -y_6^post3+y_6^post2 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^post2-lt_12^post3 == 0 /\ -lt_10^post2+lt_10^0 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -tmp_9^post2 <= 0 /\ p2_8^0-p2_8^post2 == 0 /\ -cnt_20^post3+cnt_20^post2 == 0 /\ p2_8^post2-p2_8^post3 == 0 /\ result_4^0-result_4^post2 == 0 /\ -lt_11^post3+lt_11^post2 == 0 /\ -p_7^post3+p_7^post2 == 0 /\ tmp_9^post2-tmp_9^post3 == 0 /\ -cnt_20^post2+cnt_20^0 == 0), cost: 1
   4: l4 -> l5 : cnt_20^0'=cnt_20^post5, cnt_25^0'=cnt_25^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, p2_8^0'=p2_8^post5, p_7^0'=p_7^post5, result_4^0'=result_4^post5, tmp_9^0'=tmp_9^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (-cnt_20^post5+cnt_20^0 == 0 /\ 1+tmp_9^0 <= 0 /\ result_4^0-result_4^post5 == 0 /\ -lt_12^post5+lt_12^0 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ cnt_25^0-cnt_25^post5 == 0 /\ -p_7^post5+p_7^0 == 0 /\ p2_8^0-p2_8^post5 == 0 /\ -tmp_9^post5+tmp_9^0 == 0 /\ x_5^0-x_5^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -lt_10^post5+lt_10^0 == 0), cost: 1
   5: l4 -> l5 : cnt_20^0'=cnt_20^post6, cnt_25^0'=cnt_25^post6, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, p2_8^0'=p2_8^post6, p_7^0'=p_7^post6, result_4^0'=result_4^post6, tmp_9^0'=tmp_9^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (tmp_9^0-tmp_9^post6 == 0 /\ -cnt_20^post6+cnt_20^0 == 0 /\ -cnt_25^post6+cnt_25^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ -y_6^post6+y_6^0 == 0 /\ -lt_12^post6+lt_12^0 == 0 /\ lt_10^0-lt_10^post6 == 0 /\ p_7^0-p_7^post6 == 0 /\ p2_8^0-p2_8^post6 == 0 /\ 1-tmp_9^0 <= 0 /\ -result_4^post6+result_4^0 == 0 /\ lt_11^0-lt_11^post6 == 0), cost: 1
  12: l5 -> l0 : cnt_20^0'=cnt_20^post8, cnt_25^0'=cnt_25^post8, lt_10^0'=lt_10^post8, lt_11^0'=lt_11^post8, lt_12^0'=lt_12^post8, p2_8^0'=p2_8^post8, p_7^0'=p_7^post8, result_4^0'=result_4^post8, tmp_9^0'=tmp_9^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (0 == 0 /\ p2_8^0-p2_8^post7 == 0 /\ -lt_12^post8+lt_12^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ cnt_20^post7-cnt_20^post8 == 0 /\ -p_7^post7+p_7^0 == 0 /\ p_7^post7-p_7^post8 == 0 /\ lt_11^post7-lt_11^post8 == 0 /\ -cnt_20^post7+cnt_20^0 == 0 /\ tmp_9^post7-tmp_9^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -cnt_25^post8+cnt_25^post7 == 0 /\ -result_4^post8+result_4^post7 == 0 /\ cnt_25^0-cnt_25^post7 == 0 /\ -lt_12^post7+lt_12^0 == 0 /\ p2_8^post7-p2_8^post8 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -lt_11^post7+lt_11^0 == 0 /\ lt_10^post7-lt_10^post8 == 0 /\ lt_10^1-cnt_20^0 == 0 /\ -y_6^post8+y_6^post7 == 0), cost: 1
  10: l7 -> l0 : cnt_20^0'=cnt_20^post9, cnt_25^0'=cnt_25^post9, lt_10^0'=lt_10^post9, lt_11^0'=lt_11^post9, lt_12^0'=lt_12^post9, p2_8^0'=p2_8^post9, p_7^0'=p_7^post9, result_4^0'=result_4^post9, tmp_9^0'=tmp_9^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ cnt_25^post10-cnt_25^post9 == 0 /\ -cnt_20^post10+cnt_20^0 == 0 /\ tmp_9^post10-tmp_9^post9 == 0 /\ result_4^post10-result_4^post9 == 0 /\ lt_10^0-lt_10^post10 == 0 /\ -x_5^post9+p_7^post9 == 0 /\ cnt_20^post10-cnt_20^post9 == 0 /\ -lt_12^post10+lt_12^0 == 0 /\ p2_8^0-p2_8^post10 == 0 /\ -y_6^post10+y_6^0 == 0 /\ -lt_11^post10+lt_11^0 == 0 /\ p2_8^post9-y_6^post9 == 0 /\ -p_7^post10+p_7^0 == 0 /\ tmp_9^0-tmp_9^post10 == 0 /\ lt_12^post10-lt_12^post9 == 0 /\ x_5^0-x_5^post10 == 0 /\ result_4^0-result_4^post10 == 0 /\ lt_11^post10-lt_11^post9 == 0 /\ -cnt_25^post10+cnt_25^0 == 0 /\ -lt_10^post9+lt_10^post10 == 0), cost: 1

	Eliminating location l6 by chaining:

	Applied chaining

	First rule:
	l7 -> l6 : cnt_20^0'=cnt_20^post10, cnt_25^0'=cnt_25^post10, lt_10^0'=lt_10^post10, lt_11^0'=lt_11^post10, lt_12^0'=lt_12^post10, p2_8^0'=p2_8^post10, p_7^0'=p_7^post10, result_4^0'=result_4^post10, tmp_9^0'=tmp_9^post10, x_5^0'=x_5^post10, y_6^0'=y_6^post10, (-cnt_20^post10+cnt_20^0 == 0 /\ lt_10^0-lt_10^post10 == 0 /\ -lt_12^post10+lt_12^0 == 0 /\ p2_8^0-p2_8^post10 == 0 /\ -y_6^post10+y_6^0 == 0 /\ -lt_11^post10+lt_11^0 == 0 /\ -p_7^post10+p_7^0 == 0 /\ tmp_9^0-tmp_9^post10 == 0 /\ x_5^0-x_5^post10 == 0 /\ result_4^0-result_4^post10 == 0 /\ -cnt_25^post10+cnt_25^0 == 0), cost: 1
	Second rule:
	l6 -> l0 : cnt_20^0'=cnt_20^post9, cnt_25^0'=cnt_25^post9, lt_10^0'=lt_10^post9, lt_11^0'=lt_11^post9, lt_12^0'=lt_12^post9, p2_8^0'=p2_8^post9, p_7^0'=p_7^post9, result_4^0'=result_4^post9, tmp_9^0'=tmp_9^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ -cnt_20^post9+cnt_20^0 == 0 /\ tmp_9^0-tmp_9^post9 == 0 /\ -lt_12^post9+lt_12^0 == 0 /\ -x_5^post9+p_7^post9 == 0 /\ result_4^0-result_4^post9 == 0 /\ p2_8^post9-y_6^post9 == 0 /\ -lt_11^post9+lt_11^0 == 0 /\ cnt_25^0-cnt_25^post9 == 0 /\ -lt_10^post9+lt_10^0 == 0), cost: 1
	New rule:
	l7 -> l0 : cnt_20^0'=cnt_20^post9, cnt_25^0'=cnt_25^post9, lt_10^0'=lt_10^post9, lt_11^0'=lt_11^post9, lt_12^0'=lt_12^post9, p2_8^0'=p2_8^post9, p_7^0'=p_7^post9, result_4^0'=result_4^post9, tmp_9^0'=tmp_9^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ cnt_25^post10-cnt_25^post9 == 0 /\ -cnt_20^post10+cnt_20^0 == 0 /\ tmp_9^post10-tmp_9^post9 == 0 /\ result_4^post10-result_4^post9 == 0 /\ lt_10^0-lt_10^post10 == 0 /\ -x_5^post9+p_7^post9 == 0 /\ cnt_20^post10-cnt_20^post9 == 0 /\ -lt_12^post10+lt_12^0 == 0 /\ p2_8^0-p2_8^post10 == 0 /\ -y_6^post10+y_6^0 == 0 /\ -lt_11^post10+lt_11^0 == 0 /\ p2_8^post9-y_6^post9 == 0 /\ -p_7^post10+p_7^0 == 0 /\ tmp_9^0-tmp_9^post10 == 0 /\ lt_12^post10-lt_12^post9 == 0 /\ x_5^0-x_5^post10 == 0 /\ result_4^0-result_4^post10 == 0 /\ lt_11^post10-lt_11^post9 == 0 /\ -cnt_25^post10+cnt_25^0 == 0 /\ -lt_10^post9+lt_10^post10 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 8 9
	
	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l0 -> l2 : cnt_20^0'=cnt_20^post2, cnt_25^0'=cnt_25^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, p2_8^0'=p2_8^post2, p_7^0'=p_7^post2, result_4^0'=result_4^post2, tmp_9^0'=tmp_9^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ y_6^0-y_6^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -p_7^post2+p_7^0 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ tmp_9^post2 <= 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ -lt_10^post2+lt_10^0 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -tmp_9^post2 <= 0 /\ p2_8^0-p2_8^post2 == 0 /\ result_4^0-result_4^post2 == 0 /\ -cnt_20^post2+cnt_20^0 == 0), cost: 1
	Second rule:
	l2 -> l0 : cnt_20^0'=cnt_20^post3, cnt_25^0'=cnt_25^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, p2_8^0'=p2_8^post3, p_7^0'=p_7^post3, result_4^0'=result_4^post3, tmp_9^0'=tmp_9^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-p_7^post3+p_7^0 == 0 /\ cnt_25^0-cnt_25^post3 == 0 /\ tmp_9^0-tmp_9^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ lt_10^0-lt_10^post3 == 0 /\ result_4^0-result_4^post3 == 0 /\ p2_8^0-p2_8^post3 == 0 /\ -lt_12^post3+lt_12^0 == 0 /\ -lt_11^post3+lt_11^0 == 0 /\ -cnt_20^post3+cnt_20^0 == 0 /\ -y_6^post3+y_6^0 == 0), cost: 1
	New rule:
	l0 -> l0 : cnt_20^0'=cnt_20^post3, cnt_25^0'=cnt_25^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, p2_8^0'=p2_8^post3, p_7^0'=p_7^post3, result_4^0'=result_4^post3, tmp_9^0'=tmp_9^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_10^post2-lt_10^post3 == 0 /\ -x_5^post3+x_5^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -p_7^post2+p_7^0 == 0 /\ -result_4^post3+result_4^post2 == 0 /\ cnt_25^post2-cnt_25^post3 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ tmp_9^post2 <= 0 /\ -y_6^post3+y_6^post2 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^post2-lt_12^post3 == 0 /\ -lt_10^post2+lt_10^0 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -tmp_9^post2 <= 0 /\ p2_8^0-p2_8^post2 == 0 /\ -cnt_20^post3+cnt_20^post2 == 0 /\ p2_8^post2-p2_8^post3 == 0 /\ result_4^0-result_4^post2 == 0 /\ -lt_11^post3+lt_11^post2 == 0 /\ -p_7^post3+p_7^post2 == 0 /\ tmp_9^post2-tmp_9^post3 == 0 /\ -cnt_20^post2+cnt_20^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 1 2
	
	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l5 -> l3 : cnt_20^0'=cnt_20^post7, cnt_25^0'=cnt_25^post7, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post7, lt_12^0'=lt_12^post7, p2_8^0'=p2_8^post7, p_7^0'=p_7^post7, result_4^0'=result_4^post7, tmp_9^0'=tmp_9^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ p2_8^0-p2_8^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -p_7^post7+p_7^0 == 0 /\ -cnt_20^post7+cnt_20^0 == 0 /\ cnt_25^0-cnt_25^post7 == 0 /\ -lt_12^post7+lt_12^0 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -lt_11^post7+lt_11^0 == 0 /\ lt_10^1-cnt_20^0 == 0), cost: 1
	Second rule:
	l3 -> l0 : cnt_20^0'=cnt_20^post8, cnt_25^0'=cnt_25^post8, lt_10^0'=lt_10^post8, lt_11^0'=lt_11^post8, lt_12^0'=lt_12^post8, p2_8^0'=p2_8^post8, p_7^0'=p_7^post8, result_4^0'=result_4^post8, tmp_9^0'=tmp_9^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (-cnt_25^post8+cnt_25^0 == 0 /\ -cnt_20^post8+cnt_20^0 == 0 /\ -result_4^post8+result_4^0 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ p_7^0-p_7^post8 == 0 /\ lt_10^0-lt_10^post8 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ tmp_9^0-tmp_9^post8 == 0 /\ p2_8^0-p2_8^post8 == 0 /\ x_5^0-x_5^post8 == 0 /\ -y_6^post8+y_6^0 == 0), cost: 1
	New rule:
	l5 -> l0 : cnt_20^0'=cnt_20^post8, cnt_25^0'=cnt_25^post8, lt_10^0'=lt_10^post8, lt_11^0'=lt_11^post8, lt_12^0'=lt_12^post8, p2_8^0'=p2_8^post8, p_7^0'=p_7^post8, result_4^0'=result_4^post8, tmp_9^0'=tmp_9^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (0 == 0 /\ p2_8^0-p2_8^post7 == 0 /\ -lt_12^post8+lt_12^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ cnt_20^post7-cnt_20^post8 == 0 /\ -p_7^post7+p_7^0 == 0 /\ p_7^post7-p_7^post8 == 0 /\ lt_11^post7-lt_11^post8 == 0 /\ -cnt_20^post7+cnt_20^0 == 0 /\ tmp_9^post7-tmp_9^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -cnt_25^post8+cnt_25^post7 == 0 /\ -result_4^post8+result_4^post7 == 0 /\ cnt_25^0-cnt_25^post7 == 0 /\ -lt_12^post7+lt_12^0 == 0 /\ p2_8^post7-p2_8^post8 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -lt_11^post7+lt_11^0 == 0 /\ lt_10^post7-lt_10^post8 == 0 /\ lt_10^1-cnt_20^0 == 0 /\ -y_6^post8+y_6^post7 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 7

Simplified Transitions

Start location: l7
Program variables: cnt_20^0 cnt_25^0 lt_10^0 lt_11^0 lt_12^0 p2_8^0 p_7^0 result_4^0 tmp_9^0 x_5^0 y_6^0
  13: l0 -> l1 : lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, result_4^0'=result_4^post1, cnt_25^0-cnt_20^0 <= 0, cost: 1
  14: l0 -> l4 : lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, tmp_9^0'=tmp_9^post4, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
  18: l0 -> l0 : lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, tmp_9^0'=0, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
  15: l4 -> l5 : 1+tmp_9^0 <= 0, cost: 1
  16: l4 -> l5 : 1-tmp_9^0 <= 0, cost: 1
  19: l5 -> l0 : lt_10^0'=lt_10^post7, T, cost: 1
  17: l7 -> l0 : p2_8^0'=y_6^post9, p_7^0'=x_5^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : cnt_20^0'=cnt_20^post1, cnt_25^0'=cnt_25^post1, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, p2_8^0'=p2_8^post1, p_7^0'=p_7^post1, result_4^0'=result_4^post1, tmp_9^0'=tmp_9^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ x_5^0-x_5^post1 == 0 /\ lt_12^1-lt_11^1 <= 0 /\ lt_11^1-cnt_20^0 == 0 /\ -lt_10^post1+lt_10^0 == 0 /\ tmp_9^0-tmp_9^post1 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ cnt_25^0-cnt_25^post1 == 0 /\ -p_7^post1+p_7^0 == 0 /\ p2_8^0-p2_8^post1 == 0 /\ -cnt_20^post1+cnt_20^0 == 0), cost: 1
	New rule:
	l0 -> l1 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^post1, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ lt_12^1-lt_11^1 <= 0 /\ lt_11^1-cnt_20^0 == 0 /\ lt_12^1-cnt_25^0 == 0), cost: 1
	
		propagated equality x_5^post1 = x_5^0
		
		propagated equality lt_10^post1 = lt_10^0
		
		propagated equality tmp_9^post1 = tmp_9^0
		
		propagated equality y_6^post1 = y_6^0
		
		propagated equality cnt_25^post1 = cnt_25^0
		
		propagated equality p_7^post1 = p_7^0
		
		propagated equality p2_8^post1 = p2_8^0
		
		propagated equality cnt_20^post1 = cnt_20^0
		
	Propagated Equalities

	Original rule:
	l0 -> l1 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^post1, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ lt_12^1-lt_11^1 <= 0 /\ lt_11^1-cnt_20^0 == 0 /\ lt_12^1-cnt_25^0 == 0), cost: 1
	New rule:
	l0 -> l1 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^post1, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ cnt_25^0-cnt_20^0 <= 0), cost: 1
	
		propagated equality lt_11^1 = cnt_20^0
		
		propagated equality lt_12^1 = cnt_25^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^post1, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ cnt_25^0-cnt_20^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^post1, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, cnt_25^0-cnt_20^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^post1, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, cnt_25^0-cnt_20^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, result_4^0'=result_4^post1, cnt_25^0-cnt_20^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l4 : cnt_20^0'=cnt_20^post4, cnt_25^0'=cnt_25^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, p2_8^0'=p2_8^post4, p_7^0'=p_7^post4, result_4^0'=result_4^post4, tmp_9^0'=tmp_9^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ -cnt_20^post4+cnt_20^0 == 0 /\ p2_8^0-p2_8^post4 == 0 /\ -cnt_25^post4+cnt_25^0 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^1-cnt_25^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ p_7^0-p_7^post4 == 0 /\ x_5^0-x_5^post4 == 0 /\ -y_6^post4+y_6^0 == 0), cost: 1
	New rule:
	l0 -> l4 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^1-cnt_25^0 == 0), cost: 1
	
		propagated equality cnt_20^post4 = cnt_20^0
		
		propagated equality p2_8^post4 = p2_8^0
		
		propagated equality cnt_25^post4 = cnt_25^0
		
		propagated equality result_4^post4 = result_4^0
		
		propagated equality lt_10^post4 = lt_10^0
		
		propagated equality p_7^post4 = p_7^0
		
		propagated equality x_5^post4 = x_5^0
		
		propagated equality y_6^post4 = y_6^0
		
	Propagated Equalities

	Original rule:
	l0 -> l4 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^1-cnt_25^0 == 0), cost: 1
	New rule:
	l0 -> l4 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-cnt_25^0+cnt_20^0 <= 0), cost: 1
	
		propagated equality lt_11^1 = cnt_20^0
		
		propagated equality lt_12^1 = cnt_25^0
		
	Simplified Guard

	Original rule:
	l0 -> l4 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-cnt_25^0+cnt_20^0 <= 0), cost: 1
	New rule:
	l0 -> l4 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l4 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^post4, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
	New rule:
	l0 -> l4 : lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, tmp_9^0'=tmp_9^post4, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l5 : cnt_20^0'=cnt_20^post5, cnt_25^0'=cnt_25^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, p2_8^0'=p2_8^post5, p_7^0'=p_7^post5, result_4^0'=result_4^post5, tmp_9^0'=tmp_9^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (-cnt_20^post5+cnt_20^0 == 0 /\ 1+tmp_9^0 <= 0 /\ result_4^0-result_4^post5 == 0 /\ -lt_12^post5+lt_12^0 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ cnt_25^0-cnt_25^post5 == 0 /\ -p_7^post5+p_7^0 == 0 /\ p2_8^0-p2_8^post5 == 0 /\ -tmp_9^post5+tmp_9^0 == 0 /\ x_5^0-x_5^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -lt_10^post5+lt_10^0 == 0), cost: 1
	New rule:
	l4 -> l5 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+tmp_9^0 <= 0), cost: 1
	
		propagated equality cnt_20^post5 = cnt_20^0
		
		propagated equality result_4^post5 = result_4^0
		
		propagated equality lt_12^post5 = lt_12^0
		
		propagated equality lt_11^post5 = lt_11^0
		
		propagated equality cnt_25^post5 = cnt_25^0
		
		propagated equality p_7^post5 = p_7^0
		
		propagated equality p2_8^post5 = p2_8^0
		
		propagated equality tmp_9^post5 = tmp_9^0
		
		propagated equality x_5^post5 = x_5^0
		
		propagated equality y_6^post5 = y_6^0
		
		propagated equality lt_10^post5 = lt_10^0
		
	Simplified Guard

	Original rule:
	l4 -> l5 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+tmp_9^0 <= 0), cost: 1
	New rule:
	l4 -> l5 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1+tmp_9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l5 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1+tmp_9^0 <= 0, cost: 1
	New rule:
	l4 -> l5 : 1+tmp_9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l5 : cnt_20^0'=cnt_20^post6, cnt_25^0'=cnt_25^post6, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, p2_8^0'=p2_8^post6, p_7^0'=p_7^post6, result_4^0'=result_4^post6, tmp_9^0'=tmp_9^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (tmp_9^0-tmp_9^post6 == 0 /\ -cnt_20^post6+cnt_20^0 == 0 /\ -cnt_25^post6+cnt_25^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ -y_6^post6+y_6^0 == 0 /\ -lt_12^post6+lt_12^0 == 0 /\ lt_10^0-lt_10^post6 == 0 /\ p_7^0-p_7^post6 == 0 /\ p2_8^0-p2_8^post6 == 0 /\ 1-tmp_9^0 <= 0 /\ -result_4^post6+result_4^0 == 0 /\ lt_11^0-lt_11^post6 == 0), cost: 1
	New rule:
	l4 -> l5 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-tmp_9^0 <= 0), cost: 1
	
		propagated equality tmp_9^post6 = tmp_9^0
		
		propagated equality cnt_20^post6 = cnt_20^0
		
		propagated equality cnt_25^post6 = cnt_25^0
		
		propagated equality x_5^post6 = x_5^0
		
		propagated equality y_6^post6 = y_6^0
		
		propagated equality lt_12^post6 = lt_12^0
		
		propagated equality lt_10^post6 = lt_10^0
		
		propagated equality p_7^post6 = p_7^0
		
		propagated equality p2_8^post6 = p2_8^0
		
		propagated equality result_4^post6 = result_4^0
		
		propagated equality lt_11^post6 = lt_11^0
		
	Simplified Guard

	Original rule:
	l4 -> l5 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-tmp_9^0 <= 0), cost: 1
	New rule:
	l4 -> l5 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-tmp_9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l5 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-tmp_9^0 <= 0, cost: 1
	New rule:
	l4 -> l5 : 1-tmp_9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l0 : cnt_20^0'=cnt_20^post9, cnt_25^0'=cnt_25^post9, lt_10^0'=lt_10^post9, lt_11^0'=lt_11^post9, lt_12^0'=lt_12^post9, p2_8^0'=p2_8^post9, p_7^0'=p_7^post9, result_4^0'=result_4^post9, tmp_9^0'=tmp_9^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ cnt_25^post10-cnt_25^post9 == 0 /\ -cnt_20^post10+cnt_20^0 == 0 /\ tmp_9^post10-tmp_9^post9 == 0 /\ result_4^post10-result_4^post9 == 0 /\ lt_10^0-lt_10^post10 == 0 /\ -x_5^post9+p_7^post9 == 0 /\ cnt_20^post10-cnt_20^post9 == 0 /\ -lt_12^post10+lt_12^0 == 0 /\ p2_8^0-p2_8^post10 == 0 /\ -y_6^post10+y_6^0 == 0 /\ -lt_11^post10+lt_11^0 == 0 /\ p2_8^post9-y_6^post9 == 0 /\ -p_7^post10+p_7^0 == 0 /\ tmp_9^0-tmp_9^post10 == 0 /\ lt_12^post10-lt_12^post9 == 0 /\ x_5^0-x_5^post10 == 0 /\ result_4^0-result_4^post10 == 0 /\ lt_11^post10-lt_11^post9 == 0 /\ -cnt_25^post10+cnt_25^0 == 0 /\ -lt_10^post9+lt_10^post10 == 0), cost: 1
	New rule:
	l7 -> l0 : cnt_20^0'=cnt_20^post10, cnt_25^0'=cnt_25^post10, lt_10^0'=lt_10^post10, lt_11^0'=lt_11^post10, lt_12^0'=lt_12^post10, p2_8^0'=y_6^post9, p_7^0'=x_5^post9, result_4^0'=result_4^post10, tmp_9^0'=tmp_9^post10, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ -cnt_20^post10+cnt_20^0 == 0 /\ lt_10^0-lt_10^post10 == 0 /\ -lt_12^post10+lt_12^0 == 0 /\ p2_8^0-p2_8^post10 == 0 /\ -y_6^post10+y_6^0 == 0 /\ -lt_11^post10+lt_11^0 == 0 /\ -p_7^post10+p_7^0 == 0 /\ tmp_9^0-tmp_9^post10 == 0 /\ x_5^0-x_5^post10 == 0 /\ result_4^0-result_4^post10 == 0 /\ -cnt_25^post10+cnt_25^0 == 0), cost: 1
	
		propagated equality cnt_25^post9 = cnt_25^post10
		
		propagated equality tmp_9^post9 = tmp_9^post10
		
		propagated equality result_4^post9 = result_4^post10
		
		propagated equality p_7^post9 = x_5^post9
		
		propagated equality cnt_20^post9 = cnt_20^post10
		
		propagated equality p2_8^post9 = y_6^post9
		
		propagated equality lt_12^post9 = lt_12^post10
		
		propagated equality lt_11^post9 = lt_11^post10
		
		propagated equality lt_10^post9 = lt_10^post10
		
	Propagated Equalities

	Original rule:
	l7 -> l0 : cnt_20^0'=cnt_20^post10, cnt_25^0'=cnt_25^post10, lt_10^0'=lt_10^post10, lt_11^0'=lt_11^post10, lt_12^0'=lt_12^post10, p2_8^0'=y_6^post9, p_7^0'=x_5^post9, result_4^0'=result_4^post10, tmp_9^0'=tmp_9^post10, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ -cnt_20^post10+cnt_20^0 == 0 /\ lt_10^0-lt_10^post10 == 0 /\ -lt_12^post10+lt_12^0 == 0 /\ p2_8^0-p2_8^post10 == 0 /\ -y_6^post10+y_6^0 == 0 /\ -lt_11^post10+lt_11^0 == 0 /\ -p_7^post10+p_7^0 == 0 /\ tmp_9^0-tmp_9^post10 == 0 /\ x_5^0-x_5^post10 == 0 /\ result_4^0-result_4^post10 == 0 /\ -cnt_25^post10+cnt_25^0 == 0), cost: 1
	New rule:
	l7 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=y_6^post9, p_7^0'=x_5^post9, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^post9, y_6^0'=y_6^post9, 0 == 0, cost: 1
	
		propagated equality cnt_20^post10 = cnt_20^0
		
		propagated equality lt_10^post10 = lt_10^0
		
		propagated equality lt_12^post10 = lt_12^0
		
		propagated equality p2_8^post10 = p2_8^0
		
		propagated equality y_6^post10 = y_6^0
		
		propagated equality lt_11^post10 = lt_11^0
		
		propagated equality p_7^post10 = p_7^0
		
		propagated equality tmp_9^post10 = tmp_9^0
		
		propagated equality x_5^post10 = x_5^0
		
		propagated equality result_4^post10 = result_4^0
		
		propagated equality cnt_25^post10 = cnt_25^0
		
	Simplified Guard

	Original rule:
	l7 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=y_6^post9, p_7^0'=x_5^post9, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^post9, y_6^0'=y_6^post9, 0 == 0, cost: 1
	New rule:
	l7 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=y_6^post9, p_7^0'=x_5^post9, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^post9, y_6^0'=y_6^post9, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=y_6^post9, p_7^0'=x_5^post9, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^post9, y_6^0'=y_6^post9, T, cost: 1
	New rule:
	l7 -> l0 : p2_8^0'=y_6^post9, p_7^0'=x_5^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l0 -> l0 : cnt_20^0'=cnt_20^post3, cnt_25^0'=cnt_25^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, p2_8^0'=p2_8^post3, p_7^0'=p_7^post3, result_4^0'=result_4^post3, tmp_9^0'=tmp_9^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_10^post2-lt_10^post3 == 0 /\ -x_5^post3+x_5^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -p_7^post2+p_7^0 == 0 /\ -result_4^post3+result_4^post2 == 0 /\ cnt_25^post2-cnt_25^post3 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ tmp_9^post2 <= 0 /\ -y_6^post3+y_6^post2 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^post2-lt_12^post3 == 0 /\ -lt_10^post2+lt_10^0 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -tmp_9^post2 <= 0 /\ p2_8^0-p2_8^post2 == 0 /\ -cnt_20^post3+cnt_20^post2 == 0 /\ p2_8^post2-p2_8^post3 == 0 /\ result_4^0-result_4^post2 == 0 /\ -lt_11^post3+lt_11^post2 == 0 /\ -p_7^post3+p_7^post2 == 0 /\ tmp_9^post2-tmp_9^post3 == 0 /\ -cnt_20^post2+cnt_20^0 == 0), cost: 1
	New rule:
	l0 -> l0 : cnt_20^0'=cnt_20^post3, cnt_25^0'=cnt_25^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, p2_8^0'=p2_8^post3, p_7^0'=p_7^post3, result_4^0'=result_4^post3, tmp_9^0'=tmp_9^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_10^post2-lt_10^post3 == 0 /\ -x_5^post3+x_5^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -p_7^post2+p_7^0 == 0 /\ -result_4^post3+result_4^post2 == 0 /\ cnt_25^post2-cnt_25^post3 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ tmp_9^post2 <= 0 /\ tmp_9^post2 == 0 /\ -y_6^post3+y_6^post2 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^post2-lt_12^post3 == 0 /\ -lt_10^post2+lt_10^0 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -tmp_9^post2 <= 0 /\ p2_8^0-p2_8^post2 == 0 /\ -cnt_20^post3+cnt_20^post2 == 0 /\ p2_8^post2-p2_8^post3 == 0 /\ result_4^0-result_4^post2 == 0 /\ -lt_11^post3+lt_11^post2 == 0 /\ -p_7^post3+p_7^post2 == 0 /\ tmp_9^post2-tmp_9^post3 == 0 /\ -cnt_20^post2+cnt_20^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : cnt_20^0'=cnt_20^post3, cnt_25^0'=cnt_25^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, p2_8^0'=p2_8^post3, p_7^0'=p_7^post3, result_4^0'=result_4^post3, tmp_9^0'=tmp_9^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_10^post2-lt_10^post3 == 0 /\ -x_5^post3+x_5^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -p_7^post2+p_7^0 == 0 /\ -result_4^post3+result_4^post2 == 0 /\ cnt_25^post2-cnt_25^post3 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ tmp_9^post2 <= 0 /\ tmp_9^post2 == 0 /\ -y_6^post3+y_6^post2 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ lt_12^post2-lt_12^post3 == 0 /\ -lt_10^post2+lt_10^0 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -tmp_9^post2 <= 0 /\ p2_8^0-p2_8^post2 == 0 /\ -cnt_20^post3+cnt_20^post2 == 0 /\ p2_8^post2-p2_8^post3 == 0 /\ result_4^0-result_4^post2 == 0 /\ -lt_11^post3+lt_11^post2 == 0 /\ -p_7^post3+p_7^post2 == 0 /\ tmp_9^post2-tmp_9^post3 == 0 /\ -cnt_20^post2+cnt_20^0 == 0), cost: 1
	New rule:
	l0 -> l0 : cnt_20^0'=cnt_20^post2, cnt_25^0'=cnt_25^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, p2_8^0'=p2_8^post2, p_7^0'=p_7^post2, result_4^0'=result_4^post2, tmp_9^0'=tmp_9^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ y_6^0-y_6^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -p_7^post2+p_7^0 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ tmp_9^post2 <= 0 /\ tmp_9^post2 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ -lt_10^post2+lt_10^0 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -tmp_9^post2 <= 0 /\ p2_8^0-p2_8^post2 == 0 /\ result_4^0-result_4^post2 == 0 /\ -cnt_20^post2+cnt_20^0 == 0), cost: 1
	
		propagated equality lt_10^post3 = lt_10^post2
		
		propagated equality x_5^post3 = x_5^post2
		
		propagated equality result_4^post3 = result_4^post2
		
		propagated equality cnt_25^post3 = cnt_25^post2
		
		propagated equality y_6^post3 = y_6^post2
		
		propagated equality lt_12^post3 = lt_12^post2
		
		propagated equality cnt_20^post3 = cnt_20^post2
		
		propagated equality p2_8^post3 = p2_8^post2
		
		propagated equality lt_11^post3 = lt_11^post2
		
		propagated equality p_7^post3 = p_7^post2
		
		propagated equality tmp_9^post3 = tmp_9^post2
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : cnt_20^0'=cnt_20^post2, cnt_25^0'=cnt_25^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, p2_8^0'=p2_8^post2, p_7^0'=p_7^post2, result_4^0'=result_4^post2, tmp_9^0'=tmp_9^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ y_6^0-y_6^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -p_7^post2+p_7^0 == 0 /\ lt_11^1-cnt_20^0 == 0 /\ tmp_9^post2 <= 0 /\ tmp_9^post2 == 0 /\ 1-lt_12^1+lt_11^1 <= 0 /\ -lt_10^post2+lt_10^0 == 0 /\ lt_12^1-cnt_25^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -tmp_9^post2 <= 0 /\ p2_8^0-p2_8^post2 == 0 /\ result_4^0-result_4^post2 == 0 /\ -cnt_20^post2+cnt_20^0 == 0), cost: 1
	New rule:
	l0 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 <= 0 /\ 0 == 0 /\ 1-cnt_25^0+cnt_20^0 <= 0), cost: 1
	
		propagated equality y_6^post2 = y_6^0
		
		propagated equality x_5^post2 = x_5^0
		
		propagated equality p_7^post2 = p_7^0
		
		propagated equality lt_11^1 = cnt_20^0
		
		propagated equality tmp_9^post2 = 0
		
		propagated equality lt_10^post2 = lt_10^0
		
		propagated equality lt_12^1 = cnt_25^0
		
		propagated equality cnt_25^post2 = cnt_25^0
		
		propagated equality p2_8^post2 = p2_8^0
		
		propagated equality result_4^post2 = result_4^0
		
		propagated equality cnt_20^post2 = cnt_20^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 <= 0 /\ 0 == 0 /\ 1-cnt_25^0+cnt_20^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
	New rule:
	l0 -> l0 : lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, tmp_9^0'=0, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l0 : cnt_20^0'=cnt_20^post8, cnt_25^0'=cnt_25^post8, lt_10^0'=lt_10^post8, lt_11^0'=lt_11^post8, lt_12^0'=lt_12^post8, p2_8^0'=p2_8^post8, p_7^0'=p_7^post8, result_4^0'=result_4^post8, tmp_9^0'=tmp_9^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (0 == 0 /\ p2_8^0-p2_8^post7 == 0 /\ -lt_12^post8+lt_12^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ cnt_20^post7-cnt_20^post8 == 0 /\ -p_7^post7+p_7^0 == 0 /\ p_7^post7-p_7^post8 == 0 /\ lt_11^post7-lt_11^post8 == 0 /\ -cnt_20^post7+cnt_20^0 == 0 /\ tmp_9^post7-tmp_9^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -cnt_25^post8+cnt_25^post7 == 0 /\ -result_4^post8+result_4^post7 == 0 /\ cnt_25^0-cnt_25^post7 == 0 /\ -lt_12^post7+lt_12^0 == 0 /\ p2_8^post7-p2_8^post8 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -lt_11^post7+lt_11^0 == 0 /\ lt_10^post7-lt_10^post8 == 0 /\ lt_10^1-cnt_20^0 == 0 /\ -y_6^post8+y_6^post7 == 0), cost: 1
	New rule:
	l5 -> l0 : cnt_20^0'=cnt_20^post7, cnt_25^0'=cnt_25^post7, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post7, lt_12^0'=lt_12^post7, p2_8^0'=p2_8^post7, p_7^0'=p_7^post7, result_4^0'=result_4^post7, tmp_9^0'=tmp_9^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ p2_8^0-p2_8^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -p_7^post7+p_7^0 == 0 /\ -cnt_20^post7+cnt_20^0 == 0 /\ cnt_25^0-cnt_25^post7 == 0 /\ -lt_12^post7+lt_12^0 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -lt_11^post7+lt_11^0 == 0 /\ lt_10^1-cnt_20^0 == 0), cost: 1
	
		propagated equality lt_12^post8 = lt_12^post7
		
		propagated equality cnt_20^post8 = cnt_20^post7
		
		propagated equality p_7^post8 = p_7^post7
		
		propagated equality lt_11^post8 = lt_11^post7
		
		propagated equality tmp_9^post8 = tmp_9^post7
		
		propagated equality x_5^post8 = x_5^post7
		
		propagated equality cnt_25^post8 = cnt_25^post7
		
		propagated equality result_4^post8 = result_4^post7
		
		propagated equality p2_8^post8 = p2_8^post7
		
		propagated equality lt_10^post8 = lt_10^post7
		
		propagated equality y_6^post8 = y_6^post7
		
	Propagated Equalities

	Original rule:
	l5 -> l0 : cnt_20^0'=cnt_20^post7, cnt_25^0'=cnt_25^post7, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post7, lt_12^0'=lt_12^post7, p2_8^0'=p2_8^post7, p_7^0'=p_7^post7, result_4^0'=result_4^post7, tmp_9^0'=tmp_9^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ p2_8^0-p2_8^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -p_7^post7+p_7^0 == 0 /\ -cnt_20^post7+cnt_20^0 == 0 /\ cnt_25^0-cnt_25^post7 == 0 /\ -lt_12^post7+lt_12^0 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ x_5^0-x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -lt_11^post7+lt_11^0 == 0 /\ lt_10^1-cnt_20^0 == 0), cost: 1
	New rule:
	l5 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	
		propagated equality p2_8^post7 = p2_8^0
		
		propagated equality result_4^post7 = result_4^0
		
		propagated equality p_7^post7 = p_7^0
		
		propagated equality cnt_20^post7 = cnt_20^0
		
		propagated equality cnt_25^post7 = cnt_25^0
		
		propagated equality lt_12^post7 = lt_12^0
		
		propagated equality tmp_9^post7 = tmp_9^0
		
		propagated equality x_5^post7 = x_5^0
		
		propagated equality y_6^post7 = y_6^0
		
		propagated equality lt_11^post7 = lt_11^0
		
		propagated equality lt_10^1 = cnt_20^0
		
	Simplified Guard

	Original rule:
	l5 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	New rule:
	l5 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l0 : cnt_20^0'=cnt_20^0, cnt_25^0'=cnt_25^0, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, p2_8^0'=p2_8^0, p_7^0'=p_7^0, result_4^0'=result_4^0, tmp_9^0'=tmp_9^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	New rule:
	l5 -> l0 : lt_10^0'=lt_10^post7, T, cost: 1

Step with 17

	Trace

	17[T]
	
	Blocked

	[{}, {}]

Step with 13

	Trace

	17[T], 13[(cnt_25^0-cnt_20^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	17[T]
	
	Blocked

	[{}, {13[T]}]

Step with 14

	Trace

	17[T], 14[(1-cnt_25^0+cnt_20^0 <= 0)]
	
	Blocked

	[{}, {13[T]}, {}]

Step with 15

	Trace

	17[T], 14[(1-cnt_25^0+cnt_20^0 <= 0)], 15[(1+tmp_9^0 <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {}]

Step with 19

	Trace

	17[T], 14[(1-cnt_25^0+cnt_20^0 <= 0)], 15[(1+tmp_9^0 <= 0)], 19[T]
	
	Blocked

	[{}, {13[T]}, {}, {}, {}]

Nonterm

Start location: l7
Program variables: cnt_20^0 cnt_25^0 lt_10^0 lt_11^0 lt_12^0 p2_8^0 p_7^0 result_4^0 tmp_9^0 x_5^0 y_6^0
  13: l0 -> l1 : lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, result_4^0'=result_4^post1, cnt_25^0-cnt_20^0 <= 0, cost: 1
  14: l0 -> l4 : lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, tmp_9^0'=tmp_9^post4, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
  18: l0 -> l0 : lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, tmp_9^0'=0, 1-cnt_25^0+cnt_20^0 <= 0, cost: 1
  20: l0 -> LoAT_sink : (-1+cnt_25^0-cnt_20^0 >= 0 /\ -1+n >= 0 /\ -1-tmp_9^post41 >= 0), cost: NONTERM
  15: l4 -> l5 : 1+tmp_9^0 <= 0, cost: 1
  16: l4 -> l5 : 1-tmp_9^0 <= 0, cost: 1
  19: l5 -> l0 : lt_10^0'=lt_10^post7, T, cost: 1
  17: l7 -> l0 : p2_8^0'=y_6^post9, p_7^0'=x_5^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l0 -> l0 : lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post41, lt_12^0'=lt_12^post41, tmp_9^0'=tmp_9^post41, (1-cnt_25^0+cnt_20^0 <= 0 /\ 1+tmp_9^post41 <= 0), cost: 1
	New rule:
	l0 -> LoAT_sink : (-1+cnt_25^0-cnt_20^0 >= 0 /\ -1+n >= 0 /\ -1-tmp_9^post41 >= 0), cost: NONTERM

		-1+cnt_25^0-cnt_20^0 >= 0 [0]: monotonic increase yields -1+cnt_25^0-cnt_20^0 >= 0
		
		-1-tmp_9^post41 >= 0 [0]: monotonic increase yields -1-tmp_9^post41 >= 0
		
		Replacement map: {-1+cnt_25^0-cnt_20^0 >= 0 -> -1+cnt_25^0-cnt_20^0 >= 0, -1-tmp_9^post41 >= 0 -> -1-tmp_9^post41 >= 0}

Step with 20

	Trace

	17[T], 20[(-1+cnt_25^0-cnt_20^0 >= 0 /\ -1+n >= 0 /\ -1-tmp_9^post41 >= 0)]
	
	Blocked

	[{}, {13[T]}, {20[T]}]

Refute

	Counterexample

	[ cnt_20^0=0 cnt_25^0=1 lt_10^0=0 lt_11^0=0 lt_12^0=0 p2_8^0=0 p_7^0=0 result_4^0=0 tmp_9^0=0 x_5^0=0 y_6^0=0 ] 17 [ cnt_20^0=0 cnt_25^0=1 lt_10^0=0 lt_11^0=0 lt_12^0=0 p2_8^0=p2_8^0 p_7^0=p_7^0 result_4^0=0 tmp_9^0=0 x_5^0=x_5^0 y_6^0=y_6^0 ] 20
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
