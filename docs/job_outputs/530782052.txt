NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (undef2 > ~(1)) /\ (arg2 > 1) /\ (undef1 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef1, arg2 -> undef2}>
<l2, l2, (arg2 > arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 < arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l3, l1, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef1, undef2, undef7, undef8, 

Undef variables:
undef1, undef2, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef1) /\ (arg2 = undef2) /\ (undef2 > ~(1)) /\ (undef8 > 1) /\ (undef1 > ~(1)) /\ (undef7 > 0)>
<l2, l2, (arg2 > arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 < arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>

Fresh variables:
undef1, undef2, undef7, undef8, 

Undef variables:
undef1, undef2, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003758

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000989s
[33mRanking function: [36m1 + arg1 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000461s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001575s
Trying to remove transition: <l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005707s
Time used: 0.005571
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001005s
Time used: 4.00071
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.122326s
Time used: 0.076267
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000557s
Time used: 1.00056

LOG: SAT solveNonLinear - Elapsed time: 1.122884s
Cost: 2; Total time: 1.07683
[31mFailed at location 2: arg1 <= arg2[0m
[31mFailed at location 2: arg2 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 <= arg2[0m
[36mQuasi-invariant at l2: arg2 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009963s
Remaining time after improvement: 0.997954
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 <= arg2[0m
[36mQuasi-invariant at l2: arg2 <= arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= arg2 and entry <l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>

LOG: CALL check - Post:arg1 <= arg2 - Process 1
* Exit transition: <l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>
* Postcondition  : arg1 <= arg2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000921s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001052s
Calling Safety with literal arg2 <= arg1 and entry <l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>

LOG: CALL check - Post:arg2 <= arg1 - Process 2
* Exit transition: <l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>
* Postcondition  : arg2 <= arg1

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000761s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000884s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 <= arg2 , arg2 <= arg1 , 
Narrowing transition: 
<l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 2
Narrowing transition: 
<l2, l2, 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 2
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000992s
[33mRanking function: [36m1 + arg1 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000466s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001612s
Trying to remove transition: <l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005550s
Time used: 0.005407
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001241s
Time used: 4.00098
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.015656s
Time used: 4.00069
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.006875s
Time used: 1.00106
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.016457s
Time used: 0.010315
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000797s
Time used: 1.0008

LOG: SAT solveNonLinear - Elapsed time: 1.017254s
Cost: 1; Total time: 1.01112
[33mQuasi-ranking function: [36m50000 + arg1 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 50001 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000512s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002043s
Trying to remove transition: <l2, l2, 50001 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006634s
Time used: 0.006495
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001561s
Time used: 4.00133
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.047508s
Time used: 4.00128
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.006215s
Time used: 1.00046
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018668s
Time used: 0.012273
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001819s
Time used: 1.00182

LOG: SAT solveNonLinear - Elapsed time: 1.020486s
Cost: 1; Total time: 1.01409
[33mQuasi-ranking function: [36m50000 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 50001 + arg1 <= arg2 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000622s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002324s
Trying to remove transition: <l2, l2, 50001 + arg1 <= arg2 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007219s
Time used: 0.007064
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001883s
Time used: 4.00164
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.048000s
Time used: 4.00122
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005813s
Time used: 1.00003
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.017602s
Time used: 0.011611
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001220s
Time used: 1.00122

LOG: SAT solveNonLinear - Elapsed time: 1.018822s
Cost: 1; Total time: 1.01283
[33mQuasi-ranking function: [36m50000 - arg1 - 2*arg2[0m
New Graphs: 
Transitions:
<l2, l2, 50001 + arg1 <= arg2 /\ 50001 <= arg1 + 2*arg2 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000742s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003450s
Trying to remove transition: <l2, l2, 50001 + arg1 <= arg2 /\ 50001 <= arg1 + 2*arg2 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007663s
Time used: 0.007495
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.005886s
Time used: 4.00566
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.049422s
Time used: 4.00132
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.006666s
Time used: 1.00006
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018401s
Time used: 0.013503
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001147s
Time used: 1.00113

LOG: SAT solveNonLinear - Elapsed time: 1.019548s
Cost: 1; Total time: 1.01463
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: 1 <= arg1 + arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ 1 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 + arg2 /\ 50001 + arg1 <= arg2 /\ 50001 <= arg1 + 2*arg2 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[33mQuasi-ranking function: [36m50000 + 2*arg1 + arg2[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg1 + arg2 /\ 50001 + arg1 <= arg2 /\ 50001 <= arg1 + 2*arg2 /\ 50001 + 2*arg1 + arg2 <= 0 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000917s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003923s
Trying to remove transition: <l2, l2, 1 <= arg1 + arg2 /\ 50001 + arg1 <= arg2 /\ 50001 <= arg1 + 2*arg2 /\ 50001 + 2*arg1 + arg2 <= 0 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.012884s
Time used: 0.01271
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001605s
Time used: 4.00132
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.018274s
Time used: 4.00134
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.006022s
Time used: 1.00012
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.021271s
Time used: 0.015161
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001106s
Time used: 1.00111

LOG: SAT solveNonLinear - Elapsed time: 1.022377s
Cost: 1; Total time: 1.01627
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: 1 <= arg1 + arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ 1 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 + arg2 /\ 50001 + arg1 <= arg2 /\ 50001 <= arg1 + 2*arg2 /\ 50001 + 2*arg1 + arg2 <= 0 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[33mQuasi-ranking function: [36m50000 + arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= arg1 + arg2 /\ 50001 + arg1 <= 0 /\ 50001 + arg1 <= arg2 /\ 50001 <= arg1 + 2*arg2 /\ 50001 + 2*arg1 + arg2 <= 0 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000988s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003990s
Trying to remove transition: <l2, l2, 1 <= arg1 + arg2 /\ 50001 + arg1 <= 0 /\ 50001 + arg1 <= arg2 /\ 50001 <= arg1 + 2*arg2 /\ 50001 + 2*arg1 + arg2 <= 0 /\ 50001 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009838s
Time used: 0.009654
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002570s
Time used: 4.00211
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.050506s
Time used: 4.00125
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005569s
Time used: 1.00003
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.034474s
Time used: 4.02812

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg1 = arg2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008897s
Time used: 0.008704
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.008694s
Time used: 0.008687

LOG: SAT solveNonLinear - Elapsed time: 0.017591s
Cost: 1; Total time: 0.017391
[31mFailed at location 2: 1 + arg1 <= arg2[0m
Before Improving: 
[36mQuasi-invariant at l2: 1 + arg1 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002353s
Remaining time after improvement: 0.998834
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 + arg1 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 1 + arg1 <= arg2, 
OPEN EXITS: 
<l2, end, 1 + arg1 <= arg2, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>
Conditions: 1 + arg1 <= arg2, 
OPEN EXITS: 
<l0, l2, 1 + arg1 <= arg2 /\ 1 <= undef7 /\ 0 <= undef1 /\ 0 <= undef2 /\ 2 <= undef8 /\ arg1 = undef1 /\ arg2 = undef2, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
