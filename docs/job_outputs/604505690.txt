WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f169_0_createList_Return -> f229_0_random_ArrayAccess : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-arg2+arg1P0 <= 0 /\ 1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   4: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+arg2P4 > 0 /\ 1+arg3P4 > 0 /\ arg1P4 > 0 /\ 1-arg1+arg3P4 <= 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   1: f1_0_main_Load -> f229_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1P1 > 0 /\ arg1 > 0 /\ arg2-arg2P1 == 0), cost: 1
   2: f1_0_main_Load -> f194_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   3: f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (arg1 > 0 /\ -1-arg1P3+arg1 == 0), cost: 1
   5: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (1+arg3P5-arg3 <= 0 /\ -2+arg1 > 0 /\ 2+arg1P5-arg1 <= 0 /\ 1+arg3P5 > 0 /\ arg1P5 > 0 /\ -arg2P5+arg2 == 0 /\ 3+arg3P5-arg1 <= 0 /\ arg1P5-arg3 <= 0 /\ arg3 > 0), cost: 1
   6: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (arg1P6-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3P6-arg1 <= 0 /\ -1+arg2-arg2P6 == 0 /\ 1+arg3 > 0 /\ -1+arg1P6 > 0 /\ -2+arg1P6-arg3 <= 0 /\ arg3P6-arg3 <= 0 /\ 1+arg3P6 > 0 /\ -1+arg1 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, TRUE, cost: 1


Removed unreachable rules and leafs
Start location: __init
   4: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+arg2P4 > 0 /\ 1+arg3P4 > 0 /\ arg1P4 > 0 /\ 1-arg1+arg3P4 <= 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   1: f1_0_main_Load -> f229_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1P1 > 0 /\ arg1 > 0 /\ arg2-arg2P1 == 0), cost: 1
   2: f1_0_main_Load -> f194_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   3: f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (arg1 > 0 /\ -1-arg1P3+arg1 == 0), cost: 1
   5: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (1+arg3P5-arg3 <= 0 /\ -2+arg1 > 0 /\ 2+arg1P5-arg1 <= 0 /\ 1+arg3P5 > 0 /\ arg1P5 > 0 /\ -arg2P5+arg2 == 0 /\ 3+arg3P5-arg1 <= 0 /\ arg1P5-arg3 <= 0 /\ arg3 > 0), cost: 1
   6: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (arg1P6-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3P6-arg1 <= 0 /\ -1+arg2-arg2P6 == 0 /\ 1+arg3 > 0 /\ -1+arg1P6 > 0 /\ -2+arg1P6-arg3 <= 0 /\ arg3P6-arg3 <= 0 /\ 1+arg3P6 > 0 /\ -1+arg1 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f229_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1P1 > 0 /\ arg1 > 0 /\ arg2-arg2P1 == 0), cost: 1
New rule:
f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1P1, arg3'=arg3P1, (1+arg1P1 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (arg1 > 0 /\ -1-arg1P3+arg1 == 0), cost: 1
New rule:
f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=-1+arg1, arg3'=arg3P3, arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+arg2P4 > 0 /\ 1+arg3P4 > 0 /\ arg1P4 > 0 /\ 1-arg1+arg3P4 <= 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
New rule:
f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+arg2P4 > 0 /\ 1+arg3P4 > 0 /\ arg1P4 > 0 /\ 1-arg1+arg3P4 <= 0 /\ -1+arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (1+arg3P5-arg3 <= 0 /\ -2+arg1 > 0 /\ 2+arg1P5-arg1 <= 0 /\ 1+arg3P5 > 0 /\ arg1P5 > 0 /\ -arg2P5+arg2 == 0 /\ 3+arg3P5-arg1 <= 0 /\ arg1P5-arg3 <= 0 /\ arg3 > 0), cost: 1
New rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1P5, arg3'=arg3P5, (1+arg3P5-arg3 <= 0 /\ 2+arg1P5-arg1 <= 0 /\ 1+arg3P5 > 0 /\ arg1P5 > 0 /\ 3+arg3P5-arg1 <= 0 /\ arg1P5-arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (arg1P6-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3P6-arg1 <= 0 /\ -1+arg2-arg2P6 == 0 /\ 1+arg3 > 0 /\ -1+arg1P6 > 0 /\ -2+arg1P6-arg3 <= 0 /\ arg3P6-arg3 <= 0 /\ 1+arg3P6 > 0 /\ -1+arg1 > 0), cost: 1
New rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=-1+arg2, arg1'=arg1P6, arg3'=arg3P6, (arg1P6-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3P6-arg1 <= 0 /\ -1+arg1P6 > 0 /\ -2+arg1P6-arg3 <= 0 /\ arg3P6-arg3 <= 0 /\ 1+arg3P6 > 0), cost: 1

Simplified rules
Start location: __init
  10: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+arg2P4 > 0 /\ 1+arg3P4 > 0 /\ arg1P4 > 0 /\ 1-arg1+arg3P4 <= 0 /\ -1+arg2 > 0), cost: 1
   2: f1_0_main_Load -> f194_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1P1, arg3'=arg3P1, (1+arg1P1 > 0 /\ arg1 > 0), cost: 1
   9: f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=-1+arg1, arg3'=arg3P3, arg1 > 0, cost: 1
  11: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1P5, arg3'=arg3P5, (1+arg3P5-arg3 <= 0 /\ 2+arg1P5-arg1 <= 0 /\ 1+arg3P5 > 0 /\ arg1P5 > 0 /\ 3+arg3P5-arg1 <= 0 /\ arg1P5-arg3 <= 0), cost: 1
  12: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=-1+arg2, arg1'=arg1P6, arg3'=arg3P6, (arg1P6-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3P6-arg1 <= 0 /\ -1+arg1P6 > 0 /\ -2+arg1P6-arg3 <= 0 /\ arg3P6-arg3 <= 0 /\ 1+arg3P6 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, TRUE, cost: 1


Applied acceleration
Original rule:
f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=-1+arg1, arg3'=arg3P3, arg1 > 0, cost: 1
New rule:
f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=arg1-n, arg3'=arg3P3, (-1+n >= 0 /\ 1+arg1-n > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gOkfFb.txt

Applied instantiation
Original rule:
f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=arg1-n, arg3'=arg3P3, (-1+n >= 0 /\ 1+arg1-n > 0), cost: n
New rule:
f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=0, arg3'=arg3P3, (1 > 0 /\ -1+arg1 >= 0), cost: arg1

Applied simplification
Original rule:
f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=0, arg3'=arg3P3, (1 > 0 /\ -1+arg1 >= 0), cost: arg1
New rule:
f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=0, arg3'=arg3P3, -1+arg1 >= 0, cost: arg1

Applied deletion
Removed the following rules: 9

Applied acceleration
Original rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=-1+arg2, arg1'=arg1P6, arg3'=arg3P6, (arg1P6-arg1 <= 0 /\ arg2 > 0 /\ 2+arg3P6-arg1 <= 0 /\ -1+arg1P6 > 0 /\ -2+arg1P6-arg3 <= 0 /\ arg3P6-arg3 <= 0 /\ 1+arg3P6 > 0), cost: 1
New rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=arg2-n1, arg1'=arg1P6, arg3'=arg3P6, (-1+n1 >= 0 /\ -arg1P6+arg1 >= 0 /\ -arg3P6+arg3 >= 0 /\ -1+arg1P6 > 0 /\ 2-arg1P6+arg3P6 >= 0 /\ -2+arg1P6-arg3P6 >= 0 /\ 1+arg3P6 > 0 /\ 1+arg2-n1 > 0), cost: n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cHJGjL.txt

Applied instantiation
Original rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=arg2-n1, arg1'=arg1P6, arg3'=arg3P6, (-1+n1 >= 0 /\ -arg1P6+arg1 >= 0 /\ -arg3P6+arg3 >= 0 /\ -1+arg1P6 > 0 /\ 2-arg1P6+arg3P6 >= 0 /\ -2+arg1P6-arg3P6 >= 0 /\ 1+arg3P6 > 0 /\ 1+arg2-n1 > 0), cost: n1
New rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=0, arg1'=arg1P6, arg3'=arg3P6, (1 > 0 /\ -arg1P6+arg1 >= 0 /\ -arg3P6+arg3 >= 0 /\ -1+arg2 >= 0 /\ -1+arg1P6 > 0 /\ 2-arg1P6+arg3P6 >= 0 /\ -2+arg1P6-arg3P6 >= 0 /\ 1+arg3P6 > 0), cost: arg2

Applied simplification
Original rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=0, arg1'=arg1P6, arg3'=arg3P6, (1 > 0 /\ -arg1P6+arg1 >= 0 /\ -arg3P6+arg3 >= 0 /\ -1+arg2 >= 0 /\ -1+arg1P6 > 0 /\ 2-arg1P6+arg3P6 >= 0 /\ -2+arg1P6-arg3P6 >= 0 /\ 1+arg3P6 > 0), cost: arg2
New rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=0, arg1'=arg1P6, arg3'=arg3P6, (-arg1P6+arg1 >= 0 /\ -arg3P6+arg3 >= 0 /\ -1+arg2 >= 0 /\ 2-arg1P6+arg3P6 >= 0 /\ -2+arg1P6-arg3P6 >= 0 /\ 1+arg3P6 > 0), cost: arg2

Applied deletion
Removed the following rules: 12

Accelerated simple loops
Start location: __init
  10: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+arg2P4 > 0 /\ 1+arg3P4 > 0 /\ arg1P4 > 0 /\ 1-arg1+arg3P4 <= 0 /\ -1+arg2 > 0), cost: 1
   2: f1_0_main_Load -> f194_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1P1, arg3'=arg3P1, (1+arg1P1 > 0 /\ arg1 > 0), cost: 1
  14: f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=0, arg3'=arg3P3, -1+arg1 >= 0, cost: arg1
  11: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1P5, arg3'=arg3P5, (1+arg3P5-arg3 <= 0 /\ 2+arg1P5-arg1 <= 0 /\ 1+arg3P5 > 0 /\ arg1P5 > 0 /\ 3+arg3P5-arg1 <= 0 /\ arg1P5-arg3 <= 0), cost: 1
  16: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=0, arg1'=arg1P6, arg3'=arg3P6, (-arg1P6+arg1 >= 0 /\ -arg3P6+arg3 >= 0 /\ -1+arg2 >= 0 /\ 2-arg1P6+arg3P6 >= 0 /\ -2+arg1P6-arg3P6 >= 0 /\ 1+arg3P6 > 0), cost: arg2
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f194_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f194_0_createList_LE -> f194_0_createList_LE : arg2'=arg2P3, arg1'=0, arg3'=arg3P3, -1+arg1 >= 0, cost: arg1
New rule:
f1_0_main_Load -> f194_0_createList_LE : arg2'=arg2P3, arg1'=0, arg3'=arg3P3, (1+arg2 > 0 /\ arg1 > 0 /\ -1+arg1P2 >= 0), cost: 1+arg1P2

Applied deletion
Removed the following rules: 14

Applied chaining
First rule:
f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+arg2P4 > 0 /\ 1+arg3P4 > 0 /\ arg1P4 > 0 /\ 1-arg1+arg3P4 <= 0 /\ -1+arg2 > 0), cost: 1
Second rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1P5, arg3'=arg3P5, (1+arg3P5-arg3 <= 0 /\ 2+arg1P5-arg1 <= 0 /\ 1+arg3P5 > 0 /\ arg1P5 > 0 /\ 3+arg3P5-arg1 <= 0 /\ arg1P5-arg3 <= 0), cost: 1
New rule:
f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P5, arg3'=arg3P5, (1+arg2P4 > 0 /\ 2+arg1P5-arg1 <= 0 /\ 1+arg3P5 > 0 /\ arg1P5 > 0 /\ -1+arg2 > 0 /\ 3+arg3P5-arg1 <= 0), cost: 2

Applied chaining
First rule:
f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+arg2P4 > 0 /\ 1+arg3P4 > 0 /\ arg1P4 > 0 /\ 1-arg1+arg3P4 <= 0 /\ -1+arg2 > 0), cost: 1
Second rule:
f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg2'=0, arg1'=arg1P6, arg3'=arg3P6, (-arg1P6+arg1 >= 0 /\ -arg3P6+arg3 >= 0 /\ -1+arg2 >= 0 /\ 2-arg1P6+arg3P6 >= 0 /\ -2+arg1P6-arg3P6 >= 0 /\ 1+arg3P6 > 0), cost: arg2
New rule:
f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=0, arg1'=2+arg3P6, arg3'=arg3P6, (2+arg3P6-arg1 <= 0 /\ -1+arg2 > 0 /\ -1+arg2P4 >= 0 /\ 1+arg3P6 > 0), cost: 1+arg2P4

Applied deletion
Removed the following rules: 11 16

Chained accelerated rules with incoming rules
Start location: __init
  10: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+arg2P4 > 0 /\ 1+arg3P4 > 0 /\ arg1P4 > 0 /\ 1-arg1+arg3P4 <= 0 /\ -1+arg2 > 0), cost: 1
  18: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=arg2P4, arg1'=arg1P5, arg3'=arg3P5, (1+arg2P4 > 0 /\ 2+arg1P5-arg1 <= 0 /\ 1+arg3P5 > 0 /\ arg1P5 > 0 /\ -1+arg2 > 0 /\ 3+arg3P5-arg1 <= 0), cost: 2
  19: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg2'=0, arg1'=2+arg3P6, arg3'=arg3P6, (2+arg3P6-arg1 <= 0 /\ -1+arg2 > 0 /\ -1+arg2P4 >= 0 /\ 1+arg3P6 > 0), cost: 1+arg2P4
   2: f1_0_main_Load -> f194_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1P1, arg3'=arg3P1, (1+arg1P1 > 0 /\ arg1 > 0), cost: 1
  17: f1_0_main_Load -> f194_0_createList_LE : arg2'=arg2P3, arg1'=0, arg3'=arg3P3, (1+arg2 > 0 /\ arg1 > 0 /\ -1+arg1P2 >= 0), cost: 1+arg1P2
   7: __init -> f1_0_main_Load : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

