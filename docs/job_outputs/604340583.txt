YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int), main_res -> 0}>
<l1, l2, true>
<l2, l15, not((main_x >= main_y))>
<l2, l3, (main_x >= main_y)>
<l3, l15, not((main_y > 0))>
<l3, l4, (main_y > 0)>
<l4, l5, true, seq{main_ytmp -> main_y}>
<l5, l6, true>
<l6, l13, (main_ytmp = 0)>
<l6, l7, not((main_ytmp = 0))>
<l7, l8, (main_ytmp > 0)>
<l7, l10, not((main_ytmp > 0))>
<l8, l9, true, seq{main_ytmp -> (main_ytmp - 1), main_x -> (main_x - 1)}>
<l9, l12, true>
<l10, l11, true, seq{main_ytmp -> (main_ytmp + 1), main_x -> (main_x + 1)}>
<l11, l12, true>
<l12, l6, true>
<l13, l14, true, seq{main_res -> (main_res + 1)}>
<l14, l2, true>
<l15, l16, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l17, true, seq{main__func_return_ -> 0}>
<l17, l18, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l18, l19, true, seq{main_x -> varCall_1}>
<l19, l20, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l20, l1, true, seq{main_y -> varCall_2, main_res -> 0}>
<l1, l2, true>
<l2, l3, (main_x >= main_y)>
<l2, l15, not((main_x >= main_y))>
<l3, l4, (main_y > 0)>
<l3, l15, not((main_y > 0))>
<l4, l5, true, seq{main_ytmp -> main_y}>
<l5, l6, true>
<l6, l13, (main_ytmp = 0)>
<l6, l7, not((main_ytmp = 0))>
<l7, l8, (main_ytmp > 0)>
<l7, l10, not((main_ytmp > 0))>
<l8, l9, true, seq{main_ytmp -> (main_ytmp - 1), main_x -> (main_x - 1)}>
<l9, l12, true>
<l10, l11, true, seq{main_ytmp -> (main_ytmp + 1), main_x -> (main_x + 1)}>
<l11, l12, true>
<l12, l6, true>
<l13, l14, true, seq{main_res -> (main_res + 1)}>
<l14, l2, true>
<l15, l16, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
16, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [6 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1> | <line: 10, col: 9> <line: 11, col: 9>
main | function | [integer, ()] | <line: 5, col: 1>
x | local variable | integer | <line: 6, col: 5> | <line: 10, col: 5> <line: 14, col: 12> <line: 19, col: 17> <line: 19, col: 21> <line: 22, col: 17> <line: 22, col: 21>
y | local variable | integer | <line: 7, col: 5> | <line: 11, col: 5> <line: 14, col: 17> <line: 14, col: 22> <line: 15, col: 16>
ytmp | local variable | integer | <line: 8, col: 5> | <line: 15, col: 9> <line: 16, col: 16> <line: 17, col: 17> <line: 18, col: 17> <line: 18, col: 24> <line: 21, col: 17> <line: 21, col: 24>
res | local variable | integer | <line: 9, col: 5> | <line: 12, col: 5> <line: 25, col: 9> <line: 25, col: 15>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l6, (main_x = undef3) /\ (main_y = undef4) /\ (main_res = 0) /\ (undef3 >= undef4) /\ (undef4 > 0), par{main_ytmp -> undef4}>
<l0, l16, (main_x = undef3) /\ (main_y = undef4) /\ (main_res = 0) /\ (undef3 >= undef4) /\ not((undef4 > 0))>
<l0, l16, (main_x = undef3) /\ (main_y = undef4) /\ (main_res = 0) /\ not((undef3 >= undef4))>
<l6, l6, (main_ytmp = 0) /\ (main_x >= main_y) /\ (main_y > 0), par{main_ytmp -> main_y, main_res -> (main_res + 1)}>
<l6, l16, (main_ytmp = 0) /\ (main_x >= main_y) /\ not((main_y > 0)), par{main_res -> (main_res + 1)}>
<l6, l16, (main_ytmp = 0) /\ not((main_x >= main_y)), par{main_res -> (main_res + 1)}>
<l6, l6, (main_ytmp < 0) /\ not((main_ytmp > 0)), par{main_x -> (main_x + 1), main_ytmp -> (main_ytmp + 1)}>
<l6, l6, (main_ytmp > 0) /\ (main_ytmp > 0), par{main_x -> (main_x - 1), main_ytmp -> (main_ytmp - 1)}>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
16, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l6, l6, main_y <= main_x /\ 1 <= main_y /\ main_ytmp = 0, {main_ytmp -> main_y, main_res -> 1 + main_res, rest remain the same}>
<l6, l6, 1 + main_ytmp <= 0, {main_x -> 1 + main_x, main_ytmp -> 1 + main_ytmp, rest remain the same}>
<l6, l6, 1 <= main_ytmp, {main_x -> -1 + main_x, main_ytmp -> -1 + main_ytmp, rest remain the same}>
Variables:
main_x, main_y, main_ytmp, main_res

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l6, undef4 <= undef3 /\ 1 <= undef4 /\ main_x = undef3 /\ main_y = undef4 /\ main_res = 0, {main_ytmp -> undef4, rest remain the same}>

Graph 2
<l0, l16, undef4 <= undef3 /\ undef4 <= 0 /\ main_x = undef3 /\ main_y = undef4 /\ main_res = 0, {all remain the same}>
<l0, l16, 1 + undef3 <= undef4 /\ main_x = undef3 /\ main_y = undef4 /\ main_res = 0, {all remain the same}>
<l6, l16, main_y <= main_x /\ main_y <= 0 /\ main_ytmp = 0, {main_res -> 1 + main_res, rest remain the same}>
<l6, l16, 1 + main_x <= main_y /\ main_ytmp = 0, {main_res -> 1 + main_res, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 6 , 1 )
( 16 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.008153
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l6: 0 <= main_ytmp[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l6, l6, 1 + main_ytmp <= 0, {main_x -> 1 + main_x, main_ytmp -> 1 + main_ytmp, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, main_y <= main_x /\ 1 <= main_y /\ main_ytmp = 0, {main_ytmp -> main_y, main_res -> 1 + main_res, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l6, 1 <= main_ytmp, {main_x -> -1 + main_x, main_ytmp -> -1 + main_ytmp, rest remain the same}>
Checking unfeasibility...
Time used: 0.003992

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000726s
[33mRanking function: [36m2*main_x - 2*main_y - 2*main_ytmp[0m
New Graphs: 
Transitions:
<l6, l6, 1 <= main_ytmp, {main_x -> -1 + main_x, main_ytmp -> -1 + main_ytmp, rest remain the same}>
Variables:
main_x, main_ytmp
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000258s
[33mRanking function: [36m-1 + main_ytmp[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l16}...
No cycles found.

[32mProgram Terminates[0m
