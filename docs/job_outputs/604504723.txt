NO

Initial ITS
Start location: l6
   0: l0 -> l1 : n^0'=n^post0, L^0'=L^post0, o^0'=o^post0, (o^0-o^post0 == 0 /\ L^0-L^post0 == 0 /\ n^0-n^post0 == 0 /\ 1-n^0+o^0 <= 0), cost: 1
   1: l0 -> l2 : n^0'=n^post1, L^0'=L^post1, o^0'=o^post1, (o^0-o^post1 == 0 /\ L^0-L^post1 == 0 /\ n^0-o^0 <= 0 /\ n^0-n^post1 == 0), cost: 1
   4: l1 -> l4 : n^0'=n^post4, L^0'=L^post4, o^0'=o^post4, (-L^post4+L^0 == 0 /\ -o^post4+o^0 == 0 /\ -n^post4+n^0 == 0 /\ 1-L^0 <= 0 /\ -1+L^0 <= 0), cost: 1
   5: l1 -> l3 : n^0'=n^post5, L^0'=L^post5, o^0'=o^post5, (-n^0+o^post5 == 0 /\ -n^post5+n^0 == 0 /\ -1+L^post5 == 0), cost: 1
   2: l3 -> l0 : n^0'=n^post2, L^0'=L^post2, o^0'=o^post2, (0 <= 0 /\ o^0-o^post2 == 0 /\ n^0-n^post2 == 0 /\ -L^post2+L^0 == 0), cost: 1
   3: l3 -> l0 : n^0'=n^post3, L^0'=L^post3, o^0'=o^post3, (-o^post3+o^0 == 0 /\ L^post3 == 0 /\ -1+n^post3-n^0 == 0), cost: 1
   6: l5 -> l1 : n^0'=n^post6, L^0'=L^post6, o^0'=o^post6, (L^post6 == 0 /\ n^0-n^post6 == 0 /\ -o^post6+o^0 == 0), cost: 1
   7: l6 -> l5 : n^0'=n^post7, L^0'=L^post7, o^0'=o^post7, (-o^post7+o^0 == 0 /\ -L^post7+L^0 == 0 /\ n^0-n^post7 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l6
   0: l0 -> l1 : n^0'=n^post0, L^0'=L^post0, o^0'=o^post0, (o^0-o^post0 == 0 /\ L^0-L^post0 == 0 /\ n^0-n^post0 == 0 /\ 1-n^0+o^0 <= 0), cost: 1
   5: l1 -> l3 : n^0'=n^post5, L^0'=L^post5, o^0'=o^post5, (-n^0+o^post5 == 0 /\ -n^post5+n^0 == 0 /\ -1+L^post5 == 0), cost: 1
   2: l3 -> l0 : n^0'=n^post2, L^0'=L^post2, o^0'=o^post2, (0 <= 0 /\ o^0-o^post2 == 0 /\ n^0-n^post2 == 0 /\ -L^post2+L^0 == 0), cost: 1
   3: l3 -> l0 : n^0'=n^post3, L^0'=L^post3, o^0'=o^post3, (-o^post3+o^0 == 0 /\ L^post3 == 0 /\ -1+n^post3-n^0 == 0), cost: 1
   6: l5 -> l1 : n^0'=n^post6, L^0'=L^post6, o^0'=o^post6, (L^post6 == 0 /\ n^0-n^post6 == 0 /\ -o^post6+o^0 == 0), cost: 1
   7: l6 -> l5 : n^0'=n^post7, L^0'=L^post7, o^0'=o^post7, (-o^post7+o^0 == 0 /\ -L^post7+L^0 == 0 /\ n^0-n^post7 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : n^0'=n^post0, L^0'=L^post0, o^0'=o^post0, (o^0-o^post0 == 0 /\ L^0-L^post0 == 0 /\ n^0-n^post0 == 0 /\ 1-n^0+o^0 <= 0), cost: 1
New rule:
l0 -> l1 : 1-n^0+o^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : n^0'=n^post2, L^0'=L^post2, o^0'=o^post2, (0 <= 0 /\ o^0-o^post2 == 0 /\ n^0-n^post2 == 0 /\ -L^post2+L^0 == 0), cost: 1
New rule:
l3 -> l0 : 0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : n^0'=n^post3, L^0'=L^post3, o^0'=o^post3, (-o^post3+o^0 == 0 /\ L^post3 == 0 /\ -1+n^post3-n^0 == 0), cost: 1
New rule:
l3 -> l0 : n^0'=1+n^0, L^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : n^0'=n^post5, L^0'=L^post5, o^0'=o^post5, (-n^0+o^post5 == 0 /\ -n^post5+n^0 == 0 /\ -1+L^post5 == 0), cost: 1
New rule:
l1 -> l3 : L^0'=1, o^0'=n^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l1 : n^0'=n^post6, L^0'=L^post6, o^0'=o^post6, (L^post6 == 0 /\ n^0-n^post6 == 0 /\ -o^post6+o^0 == 0), cost: 1
New rule:
l5 -> l1 : L^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : n^0'=n^post7, L^0'=L^post7, o^0'=o^post7, (-o^post7+o^0 == 0 /\ -L^post7+L^0 == 0 /\ n^0-n^post7 == 0), cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
   8: l0 -> l1 : 1-n^0+o^0 <= 0, cost: 1
  11: l1 -> l3 : L^0'=1, o^0'=n^0, TRUE, cost: 1
   9: l3 -> l0 : 0 <= 0, cost: 1
  10: l3 -> l0 : n^0'=1+n^0, L^0'=0, TRUE, cost: 1
  12: l5 -> l1 : L^0'=0, TRUE, cost: 1
  13: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l1 : L^0'=0, TRUE, cost: 1
New rule:
l6 -> l1 : L^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 12 13

Eliminated locations on linear paths
Start location: l6
   8: l0 -> l1 : 1-n^0+o^0 <= 0, cost: 1
  11: l1 -> l3 : L^0'=1, o^0'=n^0, TRUE, cost: 1
   9: l3 -> l0 : 0 <= 0, cost: 1
  10: l3 -> l0 : n^0'=1+n^0, L^0'=0, TRUE, cost: 1
  14: l6 -> l1 : L^0'=0, TRUE, cost: 2


Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : L^0'=1, o^0'=n^0, TRUE, cost: 1
Second rule:
l3 -> l0 : 0 <= 0, cost: 1
New rule:
l1 -> l0 : L^0'=1, o^0'=n^0, 0 <= 0, cost: 2

Applied chaining
First rule:
l1 -> l3 : L^0'=1, o^0'=n^0, TRUE, cost: 1
Second rule:
l3 -> l0 : n^0'=1+n^0, L^0'=0, TRUE, cost: 1
New rule:
l1 -> l0 : n^0'=1+n^0, L^0'=0, o^0'=n^0, TRUE, cost: 2

Applied deletion
Removed the following rules: 9 10 11

Eliminated locations on tree-shaped paths
Start location: l6
   8: l0 -> l1 : 1-n^0+o^0 <= 0, cost: 1
  15: l1 -> l0 : L^0'=1, o^0'=n^0, 0 <= 0, cost: 2
  16: l1 -> l0 : n^0'=1+n^0, L^0'=0, o^0'=n^0, TRUE, cost: 2
  14: l6 -> l1 : L^0'=0, TRUE, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l1 -> l0 : n^0'=1+n^0, L^0'=0, o^0'=n^0, TRUE, cost: 2
Second rule:
l0 -> l1 : 1-n^0+o^0 <= 0, cost: 1
New rule:
l1 -> l1 : n^0'=1+n^0, L^0'=0, o^0'=n^0, 0 <= 0, cost: 3

Applied deletion
Removed the following rules: 8 15 16

Eliminated locations on tree-shaped paths
Start location: l6
  17: l1 -> l1 : n^0'=1+n^0, L^0'=0, o^0'=n^0, 0 <= 0, cost: 3
  14: l6 -> l1 : L^0'=0, TRUE, cost: 2


Applied nonterm
Original rule:
l1 -> l1 : n^0'=1+n^0, L^0'=0, o^0'=n^0, 0 <= 0, cost: 3
New rule:
l1 -> [7] : (0 >= 0 /\ -1+n >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NMgEPc.txt

Applied simplification
Original rule:
l1 -> [7] : (0 >= 0 /\ -1+n >= 0), cost: NONTERM
New rule:
l1 -> [7] : -1+n >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 17

Accelerated simple loops
Start location: l6
  19: l1 -> [7] : -1+n >= 0, cost: NONTERM
  14: l6 -> l1 : L^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l6 -> l1 : L^0'=0, TRUE, cost: 2
Second rule:
l1 -> [7] : -1+n >= 0, cost: NONTERM
New rule:
l6 -> [7] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 19

Chained accelerated rules with incoming rules
Start location: l6
  14: l6 -> l1 : L^0'=0, TRUE, cost: 2
  20: l6 -> [7] : TRUE, cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: l6
  20: l6 -> [7] : TRUE, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 20 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  TRUE
