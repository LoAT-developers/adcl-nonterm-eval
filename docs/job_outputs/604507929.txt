unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2
   0: f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1p1, arg2'=arg2p1, (-arg2p1+arg2 == 0 /\ -1-2*x10+x9 == 0 /\ arg1 > 0 /\ 1+x9 > 0 /\ arg1-arg1p1 == 0 /\ arg2 > 0), cost: 1
   2: f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1p3, arg2'=arg2p3, (-2*x18+x17 == 0 /\ -arg2p3+arg2 == 0 /\ 1+x17 > 0 /\ arg1 > 0 /\ -arg1p3+arg1 == 0 /\ arg2 > 0), cost: 1
   1: f1_0_main_Load\' -> f174_0_test_EQ : arg1'=arg1p2, arg2'=arg2p2, (-1+x13-2*x14 == 0 /\ 1+x13 > 0 /\ 1-arg1p2 == 0 /\ arg1 > 0 /\ -arg2p2 == 0 /\ x13-2*x14 >= 0 /\ -2+x13-2*x14 < 0 /\ arg2 > 0), cost: 1
   3: f1_0_main_Load\' -> f174_0_test_EQ : arg1'=arg1p4, arg2'=arg2p4, (x21-2*x22 >= 0 /\ x21-2*x22 == 0 /\ -2+x21-2*x22 < 0 /\ -arg1p4 == 0 /\ arg1 > 0 /\ 1+x21 > 0 /\ 1-arg2p4 == 0 /\ arg2 > 0), cost: 1
   4: f174_0_test_EQ -> f174_0_test_EQ : arg1'=arg1p5, arg2'=arg2p5, (-1-arg2p5+arg1 == 0 /\ -1-arg1p5+arg1 == 0 /\ arg1-arg2 == 0), cost: 1
   5: __init -> f1_0_main_Load : arg1'=arg1p6, arg2'=arg2p6, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2
   6: f1_0_main_Load -> f1_0_main_Load\' : (2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
   8: f1_0_main_Load -> f1_0_main_Load\' : (1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
   7: f1_0_main_Load\' -> f174_0_test_EQ : arg1'=1, arg2'=0, (2+2*x14 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
   9: f1_0_main_Load\' -> f174_0_test_EQ : arg1'=0, arg2'=1, (1+2*x22 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
  10: f174_0_test_EQ -> f174_0_test_EQ : arg1'=-1+arg1, arg2'=-1+arg1, arg1-arg2 == 0, cost: 1
   5: __init -> f1_0_main_Load : arg1'=arg1p6, arg2'=arg2p6, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1p1, arg2'=arg2p1, (-arg2p1+arg2 == 0 /\ -1-2*x10+x9 == 0 /\ arg1 > 0 /\ 1+x9 > 0 /\ arg1-arg1p1 == 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ -1-2*x10+x9 == 0 /\ arg1 > 0 /\ 1+x9 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg2p1 = arg2
		
		propagated equality arg1p1 = arg1
		
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ -1-2*x10+x9 == 0 /\ arg1 > 0 /\ 1+x9 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ 2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality x9 = 1+2*x10
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ 2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : (2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=arg1p2, arg2'=arg2p2, (-1+x13-2*x14 == 0 /\ 1+x13 > 0 /\ 1-arg1p2 == 0 /\ arg1 > 0 /\ -arg2p2 == 0 /\ x13-2*x14 >= 0 /\ -2+x13-2*x14 < 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=1, arg2'=0, (0 == 0 /\ -1+x13-2*x14 == 0 /\ 1+x13 > 0 /\ arg1 > 0 /\ x13-2*x14 >= 0 /\ -2+x13-2*x14 < 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg1p2 = 1
		
		propagated equality arg2p2 = 0
		
	Propagated Equalities

	Original rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=1, arg2'=0, (0 == 0 /\ -1+x13-2*x14 == 0 /\ 1+x13 > 0 /\ arg1 > 0 /\ x13-2*x14 >= 0 /\ -2+x13-2*x14 < 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=1, arg2'=0, (0 == 0 /\ 1 >= 0 /\ 2+2*x14 > 0 /\ arg1 > 0 /\ -1 < 0 /\ arg2 > 0), cost: 1
	
		propagated equality x13 = 1+2*x14
		
	Simplified Guard

	Original rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=1, arg2'=0, (0 == 0 /\ 1 >= 0 /\ 2+2*x14 > 0 /\ arg1 > 0 /\ -1 < 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=1, arg2'=0, (2+2*x14 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1p3, arg2'=arg2p3, (-2*x18+x17 == 0 /\ -arg2p3+arg2 == 0 /\ 1+x17 > 0 /\ arg1 > 0 /\ -arg1p3+arg1 == 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ -2*x18+x17 == 0 /\ 1+x17 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg2p3 = arg2
		
		propagated equality arg1p3 = arg1
		
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ -2*x18+x17 == 0 /\ 1+x17 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ 1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality x17 = 2*x18
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ 1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : (1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=arg1p4, arg2'=arg2p4, (x21-2*x22 >= 0 /\ x21-2*x22 == 0 /\ -2+x21-2*x22 < 0 /\ -arg1p4 == 0 /\ arg1 > 0 /\ 1+x21 > 0 /\ 1-arg2p4 == 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=0, arg2'=1, (0 == 0 /\ x21-2*x22 >= 0 /\ x21-2*x22 == 0 /\ -2+x21-2*x22 < 0 /\ arg1 > 0 /\ 1+x21 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg1p4 = 0
		
		propagated equality arg2p4 = 1
		
	Propagated Equalities

	Original rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=0, arg2'=1, (0 == 0 /\ x21-2*x22 >= 0 /\ x21-2*x22 == 0 /\ -2+x21-2*x22 < 0 /\ arg1 > 0 /\ 1+x21 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=0, arg2'=1, (0 >= 0 /\ 0 == 0 /\ 1+2*x22 > 0 /\ -2 < 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality x21 = 2*x22
		
	Simplified Guard

	Original rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=0, arg2'=1, (0 >= 0 /\ 0 == 0 /\ 1+2*x22 > 0 /\ -2 < 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f174_0_test_EQ : arg1'=0, arg2'=1, (1+2*x22 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f174_0_test_EQ -> f174_0_test_EQ : arg1'=arg1p5, arg2'=arg2p5, (-1-arg2p5+arg1 == 0 /\ -1-arg1p5+arg1 == 0 /\ arg1-arg2 == 0), cost: 1
	New rule:
	f174_0_test_EQ -> f174_0_test_EQ : arg1'=-1+arg1, arg2'=-1+arg1, (0 == 0 /\ arg1-arg2 == 0), cost: 1
	
		propagated equality arg2p5 = -1+arg1
		
		propagated equality arg1p5 = -1+arg1
		
	Simplified Guard

	Original rule:
	f174_0_test_EQ -> f174_0_test_EQ : arg1'=-1+arg1, arg2'=-1+arg1, (0 == 0 /\ arg1-arg2 == 0), cost: 1
	New rule:
	f174_0_test_EQ -> f174_0_test_EQ : arg1'=-1+arg1, arg2'=-1+arg1, arg1-arg2 == 0, cost: 1

Step with 5

	Trace

	5[T]
	
	Blocked

	[{}, {}]

Step with 6

	Trace

	5[T], 6[(2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 7

	Trace

	5[T], 6[(2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0)], 7[(2+2*x14 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Backtrack

	Trace

	5[T], 6[(2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {7[T]}]

Step with 9

	Trace

	5[T], 6[(2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0)], 9[(1+2*x22 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {7[T]}, {}]

Backtrack

	Trace

	5[T], 6[(2+2*x10 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {7[T], 9[T]}]

Backtrack

	Trace

	5[T]
	
	Blocked

	[{}, {6[T]}]

Step with 8

	Trace

	5[T], 8[(1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {6[T]}, {}]

Step with 9

	Trace

	5[T], 8[(1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0)], 9[(1+2*x22 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {6[T]}, {}, {}]

Backtrack

	Trace

	5[T], 8[(1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {6[T]}, {9[T]}]

Step with 7

	Trace

	5[T], 8[(1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0)], 7[(2+2*x14 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {6[T]}, {9[T]}, {}]

Backtrack

	Trace

	5[T], 8[(1+2*x18 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {6[T]}, {7[T], 9[T]}]

Backtrack

	Trace

	5[T]
	
	Blocked

	[{}, {6[T], 8[T]}]

Backtrack

	Trace

	Blocked

	[{5[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
