NO

Initial ITS
Start location: l5
   0: l0 -> l1 : x^0'=x^post0, (0 <= 0 /\ x^0-x^post0 == 0), cost: 1
   1: l1 -> l0 : x^0'=x^post1, -x^post1+x^0 == 0, cost: 1
   2: l2 -> l3 : x^0'=x^post2, -x^post2+x^0 == 0, cost: 1
   3: l3 -> l2 : x^0'=x^post3, x^0-x^post3 == 0, cost: 1
   4: l4 -> l0 : x^0'=x^post4, -x^post4+x^0 == 0, cost: 1
   5: l5 -> l4 : x^0'=x^post5, -x^post5+x^0 == 0, cost: 1


Removed unreachable rules and leafs
Start location: l5
   0: l0 -> l1 : x^0'=x^post0, (0 <= 0 /\ x^0-x^post0 == 0), cost: 1
   1: l1 -> l0 : x^0'=x^post1, -x^post1+x^0 == 0, cost: 1
   4: l4 -> l0 : x^0'=x^post4, -x^post4+x^0 == 0, cost: 1
   5: l5 -> l4 : x^0'=x^post5, -x^post5+x^0 == 0, cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post0, (0 <= 0 /\ x^0-x^post0 == 0), cost: 1
New rule:
l0 -> l1 : 0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : x^0'=x^post1, -x^post1+x^0 == 0, cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l0 : x^0'=x^post4, -x^post4+x^0 == 0, cost: 1
New rule:
l4 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : x^0'=x^post5, -x^post5+x^0 == 0, cost: 1
New rule:
l5 -> l4 : TRUE, cost: 1

Simplified rules
Start location: l5
   6: l0 -> l1 : 0 <= 0, cost: 1
   7: l1 -> l0 : TRUE, cost: 1
   8: l4 -> l0 : TRUE, cost: 1
   9: l5 -> l4 : TRUE, cost: 1


Eliminating location l4 by chaining:

Applied chaining
First rule:
l5 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l0 : TRUE, cost: 1
New rule:
l5 -> l0 : TRUE, cost: 2

Applied deletion
Removed the following rules: 8 9

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : 0 <= 0, cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : 0 <= 0, cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminated locations on linear paths
Start location: l5
  11: l0 -> l0 : 0 <= 0, cost: 2
  10: l5 -> l0 : TRUE, cost: 2


Applied nonterm
Original rule:
l0 -> l0 : 0 <= 0, cost: 2
New rule:
l0 -> [6] : (0 >= 0 /\ n >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jclOfg.txt

Applied simplification
Original rule:
l0 -> [6] : (0 >= 0 /\ n >= 0), cost: NONTERM
New rule:
l0 -> [6] : n >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 11

Accelerated simple loops
Start location: l5
  13: l0 -> [6] : n >= 0, cost: NONTERM
  10: l5 -> l0 : TRUE, cost: 2


Applied chaining
First rule:
l5 -> l0 : TRUE, cost: 2
Second rule:
l0 -> [6] : n >= 0, cost: NONTERM
New rule:
l5 -> [6] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 13

Chained accelerated rules with incoming rules
Start location: l5
  10: l5 -> l0 : TRUE, cost: 2
  14: l5 -> [6] : TRUE, cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: l5
  14: l5 -> [6] : TRUE, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 14 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  TRUE
