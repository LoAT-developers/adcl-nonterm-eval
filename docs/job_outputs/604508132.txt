unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f303_0_createIntList_Return -> f517_0_random_ArrayAccess : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (1+arg1p1 > 0 /\ 1+arg1 > 0 /\ arg1p1-arg1 <= 0), cost: 1
   2: f517_0_random_ArrayAccess -> f704_0_nth_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ 1+x7-arg4p3 == 0 /\ arg1p3-arg1 <= 0), cost: 1
   1: f1_0_main_Load -> f517_0_random_ArrayAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (1+arg1p2 > 0 /\ arg1 > 0), cost: 1
  10: f1_0_main_Load -> f673_0_createIntList_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (1-arg2p11 == 0 /\ 1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
   3: f704_0_nth_LE -> f754_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (1+arg1 > 0 /\ -arg3p4+arg4 == 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0), cost: 1
   4: f704_0_nth_LE -> f704_0_nth_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (-arg4p5+arg4 == 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ -1+arg3-arg3p5 == 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0), cost: 1
   5: f754_0_main_LE -> f964_0_nth_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (1+arg3-arg4p6 == 0 /\ 1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
   6: f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ -arg3p7+arg4 == 0 /\ 2+arg2p7-arg2 <= 0), cost: 1
   7: f964_0_nth_LE -> f964_0_nth_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0 /\ -1-arg3p8+arg3 == 0 /\ -arg4p8+arg4 == 0), cost: 1
   8: f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ -arg3p9+arg4 == 0 /\ -arg2p9 == 0 /\ 1+arg2 > 0), cost: 1
   9: f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ -arg2p10 == 0 /\ -arg3p10+arg4 == 0 /\ 1+arg2 > 0), cost: 1
  11: f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (arg2 > 0 /\ 1+arg2-arg2p12 == 0 /\ -1-arg1p12+arg1 == 0 /\ arg1 > 0), cost: 1
  12: __init -> f1_0_main_Load : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f303_0_createIntList_Return -> f517_0_random_ArrayAccess : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (1+arg1p1 > 0 /\ 1+arg1 > 0 /\ arg1p1-arg1 <= 0), cost: 1
  13: f517_0_random_ArrayAccess -> f704_0_nth_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1+x7, (x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0), cost: 1
   1: f1_0_main_Load -> f517_0_random_ArrayAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (1+arg1p2 > 0 /\ arg1 > 0), cost: 1
  21: f1_0_main_Load -> f673_0_createIntList_LE : arg1'=arg1p11, arg2'=1, arg3'=arg3p11, arg4'=arg4p11, (1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
  14: f704_0_nth_LE -> f754_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg4, arg4'=arg4p4, (1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0), cost: 1
  15: f704_0_nth_LE -> f704_0_nth_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, (1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0), cost: 1
  16: f754_0_main_LE -> f964_0_nth_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=1+arg3, (1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
  17: f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg4, arg4'=arg4p7, (arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 2+arg2p7-arg2 <= 0), cost: 1
  18: f964_0_nth_LE -> f964_0_nth_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, (1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0), cost: 1
  19: f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p9, arg2'=0, arg3'=arg4, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ 1+arg2 > 0), cost: 1
  20: f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p10, arg2'=0, arg3'=arg4, arg4'=arg4p10, (1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg2 > 0), cost: 1
  22: f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, arg3'=arg3p12, arg4'=arg4p12, (arg2 > 0 /\ arg1 > 0), cost: 1
  12: __init -> f1_0_main_Load : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, T, cost: 1

	Propagated Equalities

	Original rule:
	f517_0_random_ArrayAccess -> f704_0_nth_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ 1+x7-arg4p3 == 0 /\ arg1p3-arg1 <= 0), cost: 1
	New rule:
	f517_0_random_ArrayAccess -> f704_0_nth_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1+x7, (0 == 0 /\ x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0), cost: 1
	
		propagated equality arg4p3 = 1+x7
		
	Simplified Guard

	Original rule:
	f517_0_random_ArrayAccess -> f704_0_nth_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1+x7, (0 == 0 /\ x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0), cost: 1
	New rule:
	f517_0_random_ArrayAccess -> f704_0_nth_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1+x7, (x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f704_0_nth_LE -> f754_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (1+arg1 > 0 /\ -arg3p4+arg4 == 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0), cost: 1
	New rule:
	f704_0_nth_LE -> f754_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg4, arg4'=arg4p4, (0 == 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0), cost: 1
	
		propagated equality arg3p4 = arg4
		
	Simplified Guard

	Original rule:
	f704_0_nth_LE -> f754_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg4, arg4'=arg4p4, (0 == 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0), cost: 1
	New rule:
	f704_0_nth_LE -> f754_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg4, arg4'=arg4p4, (1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f704_0_nth_LE -> f704_0_nth_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (-arg4p5+arg4 == 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ -1+arg3-arg3p5 == 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0), cost: 1
	New rule:
	f704_0_nth_LE -> f704_0_nth_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=arg4, (0 == 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0), cost: 1
	
		propagated equality arg4p5 = arg4
		
		propagated equality arg3p5 = -1+arg3
		
	Simplified Guard

	Original rule:
	f704_0_nth_LE -> f704_0_nth_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=arg4, (0 == 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0), cost: 1
	New rule:
	f704_0_nth_LE -> f704_0_nth_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=arg4, (1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f704_0_nth_LE -> f704_0_nth_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=arg4, (1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0), cost: 1
	New rule:
	f704_0_nth_LE -> f704_0_nth_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, (1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f754_0_main_LE -> f964_0_nth_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (1+arg3-arg4p6 == 0 /\ 1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f754_0_main_LE -> f964_0_nth_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=1+arg3, (0 == 0 /\ 1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p6 = 1+arg3
		
	Simplified Guard

	Original rule:
	f754_0_main_LE -> f964_0_nth_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=1+arg3, (0 == 0 /\ 1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f754_0_main_LE -> f964_0_nth_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=1+arg3, (1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ -arg3p7+arg4 == 0 /\ 2+arg2p7-arg2 <= 0), cost: 1
	New rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg4, arg4'=arg4p7, (0 == 0 /\ arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 2+arg2p7-arg2 <= 0), cost: 1
	
		propagated equality arg3p7 = arg4
		
	Simplified Guard

	Original rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg4, arg4'=arg4p7, (0 == 0 /\ arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 2+arg2p7-arg2 <= 0), cost: 1
	New rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg4, arg4'=arg4p7, (arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 2+arg2p7-arg2 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f964_0_nth_LE -> f964_0_nth_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0 /\ -1-arg3p8+arg3 == 0 /\ -arg4p8+arg4 == 0), cost: 1
	New rule:
	f964_0_nth_LE -> f964_0_nth_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=arg4, (0 == 0 /\ 1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0), cost: 1
	
		propagated equality arg3p8 = -1+arg3
		
		propagated equality arg4p8 = arg4
		
	Simplified Guard

	Original rule:
	f964_0_nth_LE -> f964_0_nth_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=arg4, (0 == 0 /\ 1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0), cost: 1
	New rule:
	f964_0_nth_LE -> f964_0_nth_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=arg4, (1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f964_0_nth_LE -> f964_0_nth_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=arg4, (1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0), cost: 1
	New rule:
	f964_0_nth_LE -> f964_0_nth_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, (1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ -arg3p9+arg4 == 0 /\ -arg2p9 == 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p9, arg2'=0, arg3'=arg4, arg4'=arg4p9, (0 == 0 /\ arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ 1+arg2 > 0), cost: 1
	
		propagated equality arg3p9 = arg4
		
		propagated equality arg2p9 = 0
		
	Simplified Guard

	Original rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p9, arg2'=0, arg3'=arg4, arg4'=arg4p9, (0 == 0 /\ arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p9, arg2'=0, arg3'=arg4, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ 1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ -arg2p10 == 0 /\ -arg3p10+arg4 == 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p10, arg2'=0, arg3'=arg4, arg4'=arg4p10, (0 == 0 /\ 1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg2 > 0), cost: 1
	
		propagated equality arg2p10 = 0
		
		propagated equality arg3p10 = arg4
		
	Simplified Guard

	Original rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p10, arg2'=0, arg3'=arg4, arg4'=arg4p10, (0 == 0 /\ 1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p10, arg2'=0, arg3'=arg4, arg4'=arg4p10, (1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f673_0_createIntList_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (1-arg2p11 == 0 /\ 1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f673_0_createIntList_LE : arg1'=arg1p11, arg2'=1, arg3'=arg3p11, arg4'=arg4p11, (0 == 0 /\ 1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	
		propagated equality arg2p11 = 1
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f673_0_createIntList_LE : arg1'=arg1p11, arg2'=1, arg3'=arg3p11, arg4'=arg4p11, (0 == 0 /\ 1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f673_0_createIntList_LE : arg1'=arg1p11, arg2'=1, arg3'=arg3p11, arg4'=arg4p11, (1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (arg2 > 0 /\ 1+arg2-arg2p12 == 0 /\ -1-arg1p12+arg1 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, arg3'=arg3p12, arg4'=arg4p12, (0 == 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p12 = 1+arg2
		
		propagated equality arg1p12 = -1+arg1
		
	Simplified Guard

	Original rule:
	f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, arg3'=arg3p12, arg4'=arg4p12, (0 == 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, arg3'=arg3p12, arg4'=arg4p12, (arg2 > 0 /\ arg1 > 0), cost: 1

Step with 12

	Trace

	12[T]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 13

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 14

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Step with 16

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Step with 17

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 17[(arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 2+arg2p7-arg2 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}]

Step with 18

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 18

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}, {}, {}]

Covered

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}, {18[T]}]

Step with 19

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)], 19[(arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}, {18[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}, {18[T], 19[T]}]

Step with 20

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)], 20[(1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}, {18[T], 19[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}, {18[T], 19[T], 20[T]}]

Step with 17

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)], 17[(arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 2+arg2p7-arg2 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}, {18[T], 19[T], 20[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T]}, {17[T], 18[T], 19[T], 20[T]}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T], 18[T]}]

Step with 19

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 19[(arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T], 18[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T], 18[T], 19[T]}]

Step with 20

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 20[(1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T], 18[T], 19[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {17[T], 18[T], 19[T], 20[T]}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {16[T]}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}]

Step with 15

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 15

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {}, {}]

Covered

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}]

Step with 14

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}]

Step with 16

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {}]

Step with 20

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 20[(1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {}, {}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {20[T]}]

Step with 17

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 17[(arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 2+arg2p7-arg2 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {20[T]}, {}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}]

Step with 18

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}, {}]

Step with 18

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}, {}, {}]

Covered

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}, {18[T]}]

Step with 19

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)], 19[(arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}, {18[T]}, {}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}, {18[T], 19[T]}]

Step with 20

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)], 20[(1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}, {18[T], 19[T]}, {}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}, {18[T], 19[T], 20[T]}]

Step with 17

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)], 17[(arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 2+arg2p7-arg2 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}, {18[T], 19[T], 20[T]}, {}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 18[(1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 20[T]}, {17[T], 18[T], 19[T], 20[T]}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 18[T], 20[T]}]

Step with 19

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 19[(arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 18[T], 20[T]}, {}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)], 16[(1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {}, {17[T], 18[T], 19[T], 20[T]}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)], 14[(1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {15[T]}, {16[T]}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)], 15[(1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T]}, {14[T], 15[T]}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)], 13[(x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {14[T], 15[T]}]

Backtrack

	Trace

	12[T], 1[(1+arg1p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {13[T]}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {1[T]}]

Step with 21

	Trace

	12[T], 21[(1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {1[T]}, {}]

Step with 22

	Trace

	12[T], 21[(1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0)], 22[(arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f303_0_createIntList_Return -> f517_0_random_ArrayAccess : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (1+arg1p1 > 0 /\ 1+arg1 > 0 /\ arg1p1-arg1 <= 0), cost: 1
  13: f517_0_random_ArrayAccess -> f704_0_nth_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1+x7, (x7 > 0 /\ 1+arg3p3 > 0 /\ 1+arg1 > 0 /\ -arg2p3+arg1 >= 0 /\ 1+arg1p3 > 0 /\ 1+arg2p3 > 0 /\ arg1p3-arg1 <= 0), cost: 1
   1: f1_0_main_Load -> f517_0_random_ArrayAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (1+arg1p2 > 0 /\ arg1 > 0), cost: 1
  21: f1_0_main_Load -> f673_0_createIntList_LE : arg1'=arg1p11, arg2'=1, arg3'=arg3p11, arg4'=arg4p11, (1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
  14: f704_0_nth_LE -> f754_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg4, arg4'=arg4p4, (1+arg1 > 0 /\ -2+arg3 < 0 /\ arg2 > 0 /\ arg1p4-arg1 <= 0 /\ 2-arg2+arg2p4 <= 0 /\ 1+arg1p4 > 0), cost: 1
  15: f704_0_nth_LE -> f704_0_nth_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, (1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg1p5 > 0 /\ 1+arg2p5 > 0 /\ arg2 > 0 /\ 1+arg2p5-arg2 <= 0 /\ arg1p5-arg1 <= 0), cost: 1
  16: f754_0_main_LE -> f964_0_nth_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=1+arg3, (1+arg1p6 > 0 /\ arg3 > 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg2p6 > 0 /\ 1+arg2p6-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
  17: f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg4, arg4'=arg4p7, (arg1p7-arg1 <= 0 /\ 1+arg1 > 0 /\ -2+arg3 < 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 2+arg2p7-arg2 <= 0), cost: 1
  18: f964_0_nth_LE -> f964_0_nth_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, (1+arg1p8 > 0 /\ 1-arg2+arg2p8 <= 0 /\ 1+arg1 > 0 /\ arg1p8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 1+arg2p8 > 0), cost: 1
  19: f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p9, arg2'=0, arg3'=arg4, arg4'=arg4p9, (arg1p9-arg1 <= 0 /\ 1+arg1 > 0 /\ 1+arg1p9 > 0 /\ -2+arg3 < 0 /\ 1+arg2 > 0), cost: 1
  20: f964_0_nth_LE -> f754_0_main_LE : arg1'=arg1p10, arg2'=0, arg3'=arg4, arg4'=arg4p10, (1+arg1p10 > 0 /\ -arg1+arg1p10 <= 0 /\ 1+arg1 > 0 /\ -1+arg3 > 0 /\ 1+arg2 > 0), cost: 1
  22: f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, arg3'=arg3p12, arg4'=arg4p12, (arg2 > 0 /\ arg1 > 0), cost: 1
  23: f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=-n+arg1, arg2'=n+arg2, arg3'=arg3p12, arg4'=arg4p12, (-1+n >= 0 /\ 1-n+arg1 > 0 /\ arg2 > 0), cost: 1
  12: __init -> f1_0_main_Load : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, T, cost: 1

	Loop Acceleration

	Original rule:
	f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, arg3'=arg3p12, arg4'=arg4p12, (arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f673_0_createIntList_LE -> f673_0_createIntList_LE : arg1'=-n+arg1, arg2'=n+arg2, arg3'=arg3p12, arg4'=arg4p12, (-1+n >= 0 /\ 1-n+arg1 > 0 /\ arg2 > 0), cost: 1

		arg2 > 0 [0]: monotonic increase yields arg2 > 0
		
		arg1 > 0 [0]: montonic decrease yields 1-n+arg1 > 0
		
		arg1 > 0 [1]: eventual increase yields (1 <= 0 /\ arg1 > 0)
		
		Replacement map: {arg2 > 0 -> arg2 > 0, arg1 > 0 -> 1-n+arg1 > 0}

	Trace

	12[T], 21[(1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0)], 23[(-1+n >= 0 /\ 1-n+arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {1[T]}, {}, {22[T], 23[T]}]

Backtrack

	Trace

	12[T], 21[(1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {1[T]}, {23[T]}]

Step with 22

	Trace

	12[T], 21[(1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0)], 22[(arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {23[T]}, {}]

Covered

	Trace

	12[T], 21[(1+arg1p11 > 0 /\ arg1 > 0 /\ 1+arg2 > 0)]
	
	Blocked

	[{}, {1[T]}, {22[T], 23[T]}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {1[T], 21[T]}]

Backtrack

	Trace

	Blocked

	[{12[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
