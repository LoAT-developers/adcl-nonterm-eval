WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-arg2P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ -arg1P0 == 0 /\ arg2-arg3P0 == 0), cost: 1
   1: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-10+arg3 < 0 /\ -2+arg1 < 0 /\ -arg2P1 == 0 /\ -arg2 == 0 /\ -11+arg3 < 0 /\ -1+arg3-arg3P1 == 0 /\ arg3 > 0 /\ -arg1P1 == 0), cost: 1
   2: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (-2+arg1 < 0 /\ 9-arg3P2 == 0 /\ 10-arg3 == 0 /\ -arg2P2 == 0 /\ -arg1P2 == 0), cost: 1
   3: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-10+arg3 < 0 /\ 1-arg1P3 == 0 /\ -2+arg1 < 0 /\ 1-arg3P3+arg3 == 0 /\ -11+arg3 < 0 /\ 1-arg2 == 0 /\ 1-arg2P3 == 0 /\ arg3 > 0), cost: 1
   4: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg1 < 0 /\ 1-arg1P4 == 0 /\ -arg3 == 0 /\ 1-arg3P4 == 0 /\ 1-arg2P4 == 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-arg2P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ -arg1P0 == 0 /\ arg2-arg3P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-10+arg3 < 0 /\ -2+arg1 < 0 /\ -arg2P1 == 0 /\ -arg2 == 0 /\ -11+arg3 < 0 /\ -1+arg3-arg3P1 == 0 /\ arg3 > 0 /\ -arg1P1 == 0), cost: 1
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=-1+arg3, (arg2 == 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (-2+arg1 < 0 /\ 9-arg3P2 == 0 /\ 10-arg3 == 0 /\ -arg2P2 == 0 /\ -arg1P2 == 0), cost: 1
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=9, (-10+arg3 == 0 /\ 2-arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-10+arg3 < 0 /\ 1-arg1P3 == 0 /\ -2+arg1 < 0 /\ 1-arg3P3+arg3 == 0 /\ -11+arg3 < 0 /\ 1-arg2 == 0 /\ 1-arg2P3 == 0 /\ arg3 > 0), cost: 1
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=1+arg3, (10-arg3 > 0 /\ 2-arg1 > 0 /\ -1+arg2 == 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg1 < 0 /\ 1-arg1P4 == 0 /\ -arg3 == 0 /\ 1-arg3P4 == 0 /\ 1-arg2P4 == 0), cost: 1
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=1, (2-arg1 > 0 /\ arg3 == 0), cost: 1

Simplified rules
Start location: __init
   6: f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=-1+arg3, (arg2 == 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0 /\ arg3 > 0), cost: 1
   8: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=9, (-10+arg3 == 0 /\ 2-arg1 > 0), cost: 1
   9: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=1+arg3, (10-arg3 > 0 /\ 2-arg1 > 0 /\ -1+arg2 == 0 /\ arg3 > 0), cost: 1
  10: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=1, (2-arg1 > 0 /\ arg3 == 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied acceleration
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=-1+arg3, (arg2 == 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0 /\ arg3 > 0), cost: 1
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=arg3-n, (1+arg3-n > 0 /\ arg2 >= 0 /\ -1+n >= 0 /\ -arg2 >= 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gdOogJ.txt

Applied instantiation
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=arg3-n, (1+arg3-n > 0 /\ arg2 >= 0 /\ -1+n >= 0 /\ -arg2 >= 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0), cost: n
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=0, (1 > 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ -arg2 >= 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0), cost: arg3

Applied acceleration
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=1+arg3, (10-arg3 > 0 /\ 2-arg1 > 0 /\ -1+arg2 == 0 /\ arg3 > 0), cost: 1
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=n1+arg3, (2-arg1 > 0 /\ 1-arg2 >= 0 /\ -1+arg2 >= 0 /\ 11-n1-arg3 > 0 /\ arg3 > 0 /\ -1+n1 >= 0), cost: n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jIeFHl.txt

Applied instantiation
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=n1+arg3, (2-arg1 > 0 /\ 1-arg2 >= 0 /\ -1+arg2 >= 0 /\ 11-n1-arg3 > 0 /\ arg3 > 0 /\ -1+n1 >= 0), cost: n1
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=10, (9-arg3 >= 0 /\ 1 > 0 /\ 2-arg1 > 0 /\ 1-arg2 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0), cost: 10-arg3

Applied simplification
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=0, (1 > 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ -arg2 >= 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0), cost: arg3
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=0, (arg2 <= 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0), cost: arg3

Applied simplification
Original rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=10, (9-arg3 >= 0 /\ 1 > 0 /\ 2-arg1 > 0 /\ 1-arg2 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0), cost: 10-arg3
New rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=10, (-9+arg3 <= 0 /\ 2-arg1 > 0 /\ -1+arg2 <= 0 /\ -1+arg2 >= 0 /\ arg3 > 0), cost: 10-arg3

Applied deletion
Removed the following rules: 7 9

Accelerated simple loops
Start location: __init
   6: f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=9, (-10+arg3 == 0 /\ 2-arg1 > 0), cost: 1
  10: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=1, (2-arg1 > 0 /\ arg3 == 0), cost: 1
  13: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=0, (arg2 <= 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0), cost: arg3
  14: f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=10, (-9+arg3 <= 0 /\ 2-arg1 > 0 /\ -1+arg2 <= 0 /\ -1+arg2 >= 0 /\ arg3 > 0), cost: 10-arg3
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=9, (-10+arg3 == 0 /\ 2-arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=9, (arg1 > 0 /\ -10+arg2 == 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=1, (2-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=1, (arg2 == 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f91_0_upAndDown_GT -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=0, (arg2 <= 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ 10-arg3 > 0 /\ 2-arg1 > 0), cost: arg3
New rule:
f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=0, (10-arg2 > 0 /\ arg1 > 0 /\ -1+arg2 >= 0), cost: 1+arg2

Applied deletion
Removed the following rules: 8 10 13 14

Chained accelerated rules with incoming rules
Start location: __init
   6: f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  15: f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=9, (arg1 > 0 /\ -10+arg2 == 0), cost: 2
  16: f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=1, arg1'=1, arg3'=1, (arg2 == 0 /\ arg1 > 0), cost: 2
  17: f1_0_main_Load -> f91_0_upAndDown_GT : arg2'=0, arg1'=0, arg3'=0, (10-arg2 > 0 /\ arg1 > 0 /\ -1+arg2 >= 0), cost: 1+arg2
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

