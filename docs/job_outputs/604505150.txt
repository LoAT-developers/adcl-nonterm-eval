NO

Initial ITS
Start location: l9
   0: l0 -> l1 : x_5^0'=x_5^post0, __disjvr_0^0'=__disjvr_0^post0, tmp_6^0'=tmp_6^post0, Result_4^0'=Result_4^post0, __disjvr_1^0'=__disjvr_1^post0, (-__disjvr_1^post0+__disjvr_1^0 == 0 /\ x_5^0-x_5^post0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ -__disjvr_0^post0+__disjvr_0^0 == 0 /\ tmp_6^0-tmp_6^post0 == 0), cost: 1
   1: l1 -> l2 : x_5^0'=x_5^post1, __disjvr_0^0'=__disjvr_0^post1, tmp_6^0'=tmp_6^post1, Result_4^0'=Result_4^post1, __disjvr_1^0'=__disjvr_1^post1, (0 == 0 /\ tmp_6^post1 <= 0 /\ x_5^0 <= 0 /\ -__disjvr_1^post1+__disjvr_1^0 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ x_5^0-x_5^post1 == 0 /\ -tmp_6^post1 <= 0), cost: 1
   2: l1 -> l3 : x_5^0'=x_5^post2, __disjvr_0^0'=__disjvr_0^post2, tmp_6^0'=tmp_6^post2, Result_4^0'=Result_4^post2, __disjvr_1^0'=__disjvr_1^post2, (0 == 0 /\ x_5^0-x_5^post2 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ -tmp_6^post2 <= 0 /\ Result_4^0-Result_4^post2 == 0 /\ tmp_6^post2 <= 0 /\ 1-x_5^0 <= 0), cost: 1
   4: l1 -> l4 : x_5^0'=x_5^post4, __disjvr_0^0'=__disjvr_0^post4, tmp_6^0'=tmp_6^post4, Result_4^0'=Result_4^post4, __disjvr_1^0'=__disjvr_1^post4, (0 == 0 /\ Result_4^0-Result_4^post4 == 0 /\ -__disjvr_1^post4+__disjvr_1^0 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ x_5^0-x_5^post4 == 0), cost: 1
   7: l1 -> l7 : x_5^0'=x_5^post7, __disjvr_0^0'=__disjvr_0^post7, tmp_6^0'=tmp_6^post7, Result_4^0'=Result_4^post7, __disjvr_1^0'=__disjvr_1^post7, (0 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ Result_4^0-Result_4^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ x_5^0-x_5^post7 == 0), cost: 1
   3: l3 -> l1 : x_5^0'=x_5^post3, __disjvr_0^0'=__disjvr_0^post3, tmp_6^0'=tmp_6^post3, Result_4^0'=Result_4^post3, __disjvr_1^0'=__disjvr_1^post3, (x_5^0-x_5^post3 == 0 /\ -__disjvr_1^post3+__disjvr_1^0 == 0 /\ __disjvr_0^0-__disjvr_0^post3 == 0 /\ tmp_6^0-tmp_6^post3 == 0 /\ -Result_4^post3+Result_4^0 == 0), cost: 1
   5: l4 -> l5 : x_5^0'=x_5^post5, __disjvr_0^0'=__disjvr_0^post5, tmp_6^0'=tmp_6^post5, Result_4^0'=Result_4^post5, __disjvr_1^0'=__disjvr_1^post5, (__disjvr_1^0-__disjvr_1^post5 == 0 /\ x_5^0-x_5^post5 == 0 /\ -__disjvr_0^0+__disjvr_0^post5 == 0 /\ -tmp_6^post5+tmp_6^0 == 0 /\ -Result_4^post5+Result_4^0 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0), cost: 1
   6: l5 -> l2 : x_5^0'=x_5^post6, __disjvr_0^0'=__disjvr_0^post6, tmp_6^0'=tmp_6^post6, Result_4^0'=Result_4^post6, __disjvr_1^0'=__disjvr_1^post6, (0 == 0 /\ x_5^post6 <= 0 /\ -__disjvr_1^post6+__disjvr_1^0 == 0 /\ tmp_6^0-tmp_6^post6 == 0 /\ 1-x_5^0+x_5^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post6 == 0), cost: 1
   8: l7 -> l8 : x_5^0'=x_5^post8, __disjvr_0^0'=__disjvr_0^post8, tmp_6^0'=tmp_6^post8, Result_4^0'=Result_4^post8, __disjvr_1^0'=__disjvr_1^post8, (-__disjvr_1^post8+__disjvr_1^0 == 0 /\ __disjvr_1^post8-__disjvr_1^0 == 0 /\ tmp_6^0-tmp_6^post8 == 0 /\ x_5^0-x_5^post8 == 0 /\ -Result_4^post8+Result_4^0 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0), cost: 1
   9: l8 -> l6 : x_5^0'=x_5^post9, __disjvr_0^0'=__disjvr_0^post9, tmp_6^0'=tmp_6^post9, Result_4^0'=Result_4^post9, __disjvr_1^0'=__disjvr_1^post9, (-tmp_6^post9+tmp_6^0 == 0 /\ __disjvr_1^0-__disjvr_1^post9 == 0 /\ Result_4^0-Result_4^post9 == 0 /\ 1-x_5^post9 <= 0 /\ 1-x_5^0+x_5^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0), cost: 1
  10: l6 -> l1 : x_5^0'=x_5^post10, __disjvr_0^0'=__disjvr_0^post10, tmp_6^0'=tmp_6^post10, Result_4^0'=Result_4^post10, __disjvr_1^0'=__disjvr_1^post10, (-Result_4^post10+Result_4^0 == 0 /\ tmp_6^0-tmp_6^post10 == 0 /\ x_5^0-x_5^post10 == 0 /\ __disjvr_0^0-__disjvr_0^post10 == 0 /\ -__disjvr_1^post10+__disjvr_1^0 == 0), cost: 1
  11: l9 -> l0 : x_5^0'=x_5^post11, __disjvr_0^0'=__disjvr_0^post11, tmp_6^0'=tmp_6^post11, Result_4^0'=Result_4^post11, __disjvr_1^0'=__disjvr_1^post11, (-__disjvr_0^post11+__disjvr_0^0 == 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ Result_4^0-Result_4^post11 == 0 /\ tmp_6^0-tmp_6^post11 == 0 /\ x_5^0-x_5^post11 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l9
   0: l0 -> l1 : x_5^0'=x_5^post0, __disjvr_0^0'=__disjvr_0^post0, tmp_6^0'=tmp_6^post0, Result_4^0'=Result_4^post0, __disjvr_1^0'=__disjvr_1^post0, (-__disjvr_1^post0+__disjvr_1^0 == 0 /\ x_5^0-x_5^post0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ -__disjvr_0^post0+__disjvr_0^0 == 0 /\ tmp_6^0-tmp_6^post0 == 0), cost: 1
   2: l1 -> l3 : x_5^0'=x_5^post2, __disjvr_0^0'=__disjvr_0^post2, tmp_6^0'=tmp_6^post2, Result_4^0'=Result_4^post2, __disjvr_1^0'=__disjvr_1^post2, (0 == 0 /\ x_5^0-x_5^post2 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ -tmp_6^post2 <= 0 /\ Result_4^0-Result_4^post2 == 0 /\ tmp_6^post2 <= 0 /\ 1-x_5^0 <= 0), cost: 1
   7: l1 -> l7 : x_5^0'=x_5^post7, __disjvr_0^0'=__disjvr_0^post7, tmp_6^0'=tmp_6^post7, Result_4^0'=Result_4^post7, __disjvr_1^0'=__disjvr_1^post7, (0 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ Result_4^0-Result_4^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ x_5^0-x_5^post7 == 0), cost: 1
   3: l3 -> l1 : x_5^0'=x_5^post3, __disjvr_0^0'=__disjvr_0^post3, tmp_6^0'=tmp_6^post3, Result_4^0'=Result_4^post3, __disjvr_1^0'=__disjvr_1^post3, (x_5^0-x_5^post3 == 0 /\ -__disjvr_1^post3+__disjvr_1^0 == 0 /\ __disjvr_0^0-__disjvr_0^post3 == 0 /\ tmp_6^0-tmp_6^post3 == 0 /\ -Result_4^post3+Result_4^0 == 0), cost: 1
   8: l7 -> l8 : x_5^0'=x_5^post8, __disjvr_0^0'=__disjvr_0^post8, tmp_6^0'=tmp_6^post8, Result_4^0'=Result_4^post8, __disjvr_1^0'=__disjvr_1^post8, (-__disjvr_1^post8+__disjvr_1^0 == 0 /\ __disjvr_1^post8-__disjvr_1^0 == 0 /\ tmp_6^0-tmp_6^post8 == 0 /\ x_5^0-x_5^post8 == 0 /\ -Result_4^post8+Result_4^0 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0), cost: 1
   9: l8 -> l6 : x_5^0'=x_5^post9, __disjvr_0^0'=__disjvr_0^post9, tmp_6^0'=tmp_6^post9, Result_4^0'=Result_4^post9, __disjvr_1^0'=__disjvr_1^post9, (-tmp_6^post9+tmp_6^0 == 0 /\ __disjvr_1^0-__disjvr_1^post9 == 0 /\ Result_4^0-Result_4^post9 == 0 /\ 1-x_5^post9 <= 0 /\ 1-x_5^0+x_5^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0), cost: 1
  10: l6 -> l1 : x_5^0'=x_5^post10, __disjvr_0^0'=__disjvr_0^post10, tmp_6^0'=tmp_6^post10, Result_4^0'=Result_4^post10, __disjvr_1^0'=__disjvr_1^post10, (-Result_4^post10+Result_4^0 == 0 /\ tmp_6^0-tmp_6^post10 == 0 /\ x_5^0-x_5^post10 == 0 /\ __disjvr_0^0-__disjvr_0^post10 == 0 /\ -__disjvr_1^post10+__disjvr_1^0 == 0), cost: 1
  11: l9 -> l0 : x_5^0'=x_5^post11, __disjvr_0^0'=__disjvr_0^post11, tmp_6^0'=tmp_6^post11, Result_4^0'=Result_4^post11, __disjvr_1^0'=__disjvr_1^post11, (-__disjvr_0^post11+__disjvr_0^0 == 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ Result_4^0-Result_4^post11 == 0 /\ tmp_6^0-tmp_6^post11 == 0 /\ x_5^0-x_5^post11 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x_5^0'=x_5^post0, __disjvr_0^0'=__disjvr_0^post0, tmp_6^0'=tmp_6^post0, Result_4^0'=Result_4^post0, __disjvr_1^0'=__disjvr_1^post0, (-__disjvr_1^post0+__disjvr_1^0 == 0 /\ x_5^0-x_5^post0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ -__disjvr_0^post0+__disjvr_0^0 == 0 /\ tmp_6^0-tmp_6^post0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : x_5^0'=x_5^post2, __disjvr_0^0'=__disjvr_0^post2, tmp_6^0'=tmp_6^post2, Result_4^0'=Result_4^post2, __disjvr_1^0'=__disjvr_1^post2, (0 == 0 /\ x_5^0-x_5^post2 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ -tmp_6^post2 <= 0 /\ Result_4^0-Result_4^post2 == 0 /\ tmp_6^post2 <= 0 /\ 1-x_5^0 <= 0), cost: 1
New rule:
l1 -> l3 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : x_5^0'=x_5^post3, __disjvr_0^0'=__disjvr_0^post3, tmp_6^0'=tmp_6^post3, Result_4^0'=Result_4^post3, __disjvr_1^0'=__disjvr_1^post3, (x_5^0-x_5^post3 == 0 /\ -__disjvr_1^post3+__disjvr_1^0 == 0 /\ __disjvr_0^0-__disjvr_0^post3 == 0 /\ tmp_6^0-tmp_6^post3 == 0 /\ -Result_4^post3+Result_4^0 == 0), cost: 1
New rule:
l3 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l7 : x_5^0'=x_5^post7, __disjvr_0^0'=__disjvr_0^post7, tmp_6^0'=tmp_6^post7, Result_4^0'=Result_4^post7, __disjvr_1^0'=__disjvr_1^post7, (0 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0 /\ Result_4^0-Result_4^post7 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ x_5^0-x_5^post7 == 0), cost: 1
New rule:
l1 -> l7 : tmp_6^0'=tmp_6^post7, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l8 : x_5^0'=x_5^post8, __disjvr_0^0'=__disjvr_0^post8, tmp_6^0'=tmp_6^post8, Result_4^0'=Result_4^post8, __disjvr_1^0'=__disjvr_1^post8, (-__disjvr_1^post8+__disjvr_1^0 == 0 /\ __disjvr_1^post8-__disjvr_1^0 == 0 /\ tmp_6^0-tmp_6^post8 == 0 /\ x_5^0-x_5^post8 == 0 /\ -Result_4^post8+Result_4^0 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0), cost: 1
New rule:
l7 -> l8 : 0 == 0, cost: 1

Applied preprocessing
Original rule:
l8 -> l6 : x_5^0'=x_5^post9, __disjvr_0^0'=__disjvr_0^post9, tmp_6^0'=tmp_6^post9, Result_4^0'=Result_4^post9, __disjvr_1^0'=__disjvr_1^post9, (-tmp_6^post9+tmp_6^0 == 0 /\ __disjvr_1^0-__disjvr_1^post9 == 0 /\ Result_4^0-Result_4^post9 == 0 /\ 1-x_5^post9 <= 0 /\ 1-x_5^0+x_5^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post9 == 0), cost: 1
New rule:
l8 -> l6 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l1 : x_5^0'=x_5^post10, __disjvr_0^0'=__disjvr_0^post10, tmp_6^0'=tmp_6^post10, Result_4^0'=Result_4^post10, __disjvr_1^0'=__disjvr_1^post10, (-Result_4^post10+Result_4^0 == 0 /\ tmp_6^0-tmp_6^post10 == 0 /\ x_5^0-x_5^post10 == 0 /\ __disjvr_0^0-__disjvr_0^post10 == 0 /\ -__disjvr_1^post10+__disjvr_1^0 == 0), cost: 1
New rule:
l6 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l0 : x_5^0'=x_5^post11, __disjvr_0^0'=__disjvr_0^post11, tmp_6^0'=tmp_6^post11, Result_4^0'=Result_4^post11, __disjvr_1^0'=__disjvr_1^post11, (-__disjvr_0^post11+__disjvr_0^0 == 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ Result_4^0-Result_4^post11 == 0 /\ tmp_6^0-tmp_6^post11 == 0 /\ x_5^0-x_5^post11 == 0), cost: 1
New rule:
l9 -> l0 : TRUE, cost: 1

Simplified rules
Start location: l9
  12: l0 -> l1 : TRUE, cost: 1
  13: l1 -> l3 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 1
  15: l1 -> l7 : tmp_6^0'=tmp_6^post7, 0 == 0, cost: 1
  14: l3 -> l1 : TRUE, cost: 1
  16: l7 -> l8 : 0 == 0, cost: 1
  17: l8 -> l6 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 1
  18: l6 -> l1 : TRUE, cost: 1
  19: l9 -> l0 : TRUE, cost: 1


Eliminating location l0 by chaining:

Applied chaining
First rule:
l9 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l9 -> l1 : TRUE, cost: 2

Applied deletion
Removed the following rules: 12 19

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 1
Second rule:
l3 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 13 14

Eliminating location l7 by chaining:

Applied chaining
First rule:
l1 -> l7 : tmp_6^0'=tmp_6^post7, 0 == 0, cost: 1
Second rule:
l7 -> l8 : 0 == 0, cost: 1
New rule:
l1 -> l8 : tmp_6^0'=tmp_6^post7, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 15 16

Eliminating location l8 by chaining:

Applied chaining
First rule:
l1 -> l8 : tmp_6^0'=tmp_6^post7, 0 == 0, cost: 2
Second rule:
l8 -> l6 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 1
New rule:
l1 -> l6 : x_5^0'=-1+x_5^0, tmp_6^0'=tmp_6^post7, (0 == 0 /\ -2+x_5^0 >= 0), cost: 3

Applied simplification
Original rule:
l1 -> l6 : x_5^0'=-1+x_5^0, tmp_6^0'=tmp_6^post7, (0 == 0 /\ -2+x_5^0 >= 0), cost: 3
New rule:
l1 -> l6 : x_5^0'=-1+x_5^0, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: 3

Applied deletion
Removed the following rules: 17 22

Eliminating location l6 by chaining:

Applied chaining
First rule:
l1 -> l6 : x_5^0'=-1+x_5^0, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: 3
Second rule:
l6 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : x_5^0'=-1+x_5^0, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: 4

Applied deletion
Removed the following rules: 18 23

Eliminated locations on linear paths
Start location: l9
  21: l1 -> l1 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 2
  24: l1 -> l1 : x_5^0'=-1+x_5^0, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: 4
  20: l9 -> l1 : TRUE, cost: 2


Applied nonterm
Original rule:
l1 -> l1 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 2
New rule:
l1 -> [10] : (-1+n >= 0 /\ -1+x_5^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_CPHDcH.txt

Applied acceleration
Original rule:
l1 -> l1 : x_5^0'=-1+x_5^0, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: 4
New rule:
l1 -> l1 : x_5^0'=x_5^0-n0, tmp_6^0'=tmp_6^post7, (-1+x_5^0-n0 >= 0 /\ -1+n0 >= 0), cost: 4*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_LDggjE.txt

Applied instantiation
Original rule:
l1 -> l1 : x_5^0'=x_5^0-n0, tmp_6^0'=tmp_6^post7, (-1+x_5^0-n0 >= 0 /\ -1+n0 >= 0), cost: 4*n0
New rule:
l1 -> l1 : x_5^0'=1, tmp_6^0'=tmp_6^post7, (0 >= 0 /\ -2+x_5^0 >= 0), cost: -4+4*x_5^0

Applied simplification
Original rule:
l1 -> l1 : x_5^0'=1, tmp_6^0'=tmp_6^post7, (0 >= 0 /\ -2+x_5^0 >= 0), cost: -4+4*x_5^0
New rule:
l1 -> l1 : x_5^0'=1, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: -4+4*x_5^0

Applied deletion
Removed the following rules: 21 24

Accelerated simple loops
Start location: l9
  25: l1 -> [10] : (-1+n >= 0 /\ -1+x_5^0 >= 0), cost: NONTERM
  27: l1 -> l1 : x_5^0'=1, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: -4+4*x_5^0
  20: l9 -> l1 : TRUE, cost: 2


Applied chaining
First rule:
l9 -> l1 : TRUE, cost: 2
Second rule:
l1 -> [10] : (-1+n >= 0 /\ -1+x_5^0 >= 0), cost: NONTERM
New rule:
l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l9 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : x_5^0'=1, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: -4+4*x_5^0
New rule:
l9 -> l1 : x_5^0'=1, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: -2+4*x_5^0

Applied deletion
Removed the following rules: 25 27

Chained accelerated rules with incoming rules
Start location: l9
  20: l9 -> l1 : TRUE, cost: 2
  28: l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM
  29: l9 -> l1 : x_5^0'=1, tmp_6^0'=tmp_6^post7, -2+x_5^0 >= 0, cost: -2+4*x_5^0


Removed unreachable locations and irrelevant leafs
Start location: l9
  28: l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 28 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  -1+x_5^0 >= 0
