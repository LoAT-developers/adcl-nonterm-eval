NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1-arg4P0 == 0 /\ 1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg2-arg5P0 == 0 /\ arg1 > 0 /\ 1-arg2P0 == 0 /\ arg1P0 > 0 /\ 1-arg3P0 == 0), cost: 1
   1: f104_0_factorial_EQ -> f104_0_factorial_EQ : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ arg5-arg3 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg2*arg3-arg3P1 == 0 /\ 1+arg2-arg2P1 == 0 /\ arg5-arg5P1 == 0 /\ arg1 > 0 /\ -arg4P1+arg2*arg3 == 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
   2: f104_0_factorial_EQ -> f104_0_factorial_EQ : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg2P2+arg2 == 0 /\ arg5-arg5P2 == 0 /\ arg2 > 0 /\ arg5-arg3 < 0 /\ -arg1+arg1P2 <= 0 /\ arg1 > 0 /\ arg2*arg3-arg4P2 == 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg3P2+arg2*arg3 == 0 /\ -arg4+arg3 == 0), cost: 1
   3: __init -> f1_0_main_Load : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1-arg4P0 == 0 /\ 1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg2-arg5P0 == 0 /\ arg1 > 0 /\ 1-arg2P0 == 0 /\ arg1P0 > 0 /\ 1-arg3P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg2, arg2'=1, arg4'=1, arg1'=arg1P0, arg3'=1, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1

Applied preprocessing
Original rule:
f104_0_factorial_EQ -> f104_0_factorial_EQ : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ arg5-arg3 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg2*arg3-arg3P1 == 0 /\ 1+arg2-arg2P1 == 0 /\ arg5-arg5P1 == 0 /\ arg1 > 0 /\ -arg4P1+arg2*arg3 == 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
New rule:
f104_0_factorial_EQ -> f104_0_factorial_EQ : arg2'=1+arg2, arg4'=arg2*arg3, arg1'=arg1P1, arg3'=arg2*arg3, (arg2 > 0 /\ arg5-arg3 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f104_0_factorial_EQ -> f104_0_factorial_EQ : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg2P2+arg2 == 0 /\ arg5-arg5P2 == 0 /\ arg2 > 0 /\ arg5-arg3 < 0 /\ -arg1+arg1P2 <= 0 /\ arg1 > 0 /\ arg2*arg3-arg4P2 == 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg3P2+arg2*arg3 == 0 /\ -arg4+arg3 == 0), cost: 1
New rule:
f104_0_factorial_EQ -> f104_0_factorial_EQ : arg2'=1+arg2, arg4'=arg2*arg3, arg1'=arg1P2, arg3'=arg2*arg3, (arg2 > 0 /\ -arg5+arg3 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg2, arg2'=1, arg4'=1, arg1'=arg1P0, arg3'=1, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
   5: f104_0_factorial_EQ -> f104_0_factorial_EQ : arg2'=1+arg2, arg4'=arg2*arg3, arg1'=arg1P1, arg3'=arg2*arg3, (arg2 > 0 /\ arg5-arg3 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
   6: f104_0_factorial_EQ -> f104_0_factorial_EQ : arg2'=1+arg2, arg4'=arg2*arg3, arg1'=arg1P2, arg3'=arg2*arg3, (arg2 > 0 /\ -arg5+arg3 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
   3: __init -> f1_0_main_Load : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied nonterm
Original rule:
f104_0_factorial_EQ -> f104_0_factorial_EQ : arg2'=1+arg2, arg4'=arg2*arg3, arg1'=arg1P2, arg3'=arg2*arg3, (arg2 > 0 /\ -arg5+arg3 > 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
New rule:
f104_0_factorial_EQ -> [3] : (arg2 > 0 /\ arg1-arg1P2 >= 0 /\ -arg5+arg3 > 0 /\ arg4-arg3 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ n0 >= 0 /\ -arg4+arg3 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_DejcDO.txt

Applied deletion
Removed the following rules: 6

Accelerated simple loops
Start location: __init
   4: f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg2, arg2'=1, arg4'=1, arg1'=arg1P0, arg3'=1, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
   5: f104_0_factorial_EQ -> f104_0_factorial_EQ : arg2'=1+arg2, arg4'=arg2*arg3, arg1'=arg1P1, arg3'=arg2*arg3, (arg2 > 0 /\ arg5-arg3 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
   7: f104_0_factorial_EQ -> [3] : (arg2 > 0 /\ arg1-arg1P2 >= 0 /\ -arg5+arg3 > 0 /\ arg4-arg3 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ n0 >= 0 /\ -arg4+arg3 >= 0), cost: NONTERM
   3: __init -> f1_0_main_Load : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg2, arg2'=1, arg4'=1, arg1'=arg1P0, arg3'=1, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
Second rule:
f104_0_factorial_EQ -> f104_0_factorial_EQ : arg2'=1+arg2, arg4'=arg2*arg3, arg1'=arg1P1, arg3'=arg2*arg3, (arg2 > 0 /\ arg5-arg3 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
New rule:
f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg2, arg2'=2, arg4'=1, arg1'=arg1P1, arg3'=1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg2, arg2'=1, arg4'=1, arg1'=arg1P0, arg3'=1, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
Second rule:
f104_0_factorial_EQ -> [3] : (arg2 > 0 /\ arg1-arg1P2 >= 0 /\ -arg5+arg3 > 0 /\ arg4-arg3 >= 0 /\ arg1P2 > 0 /\ arg3 > 0 /\ n0 >= 0 /\ -arg4+arg3 >= 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (arg2 == 0 /\ -1+arg1 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 5 7

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg2, arg2'=1, arg4'=1, arg1'=arg1P0, arg3'=1, (1+arg2 > 0 /\ -arg1+arg1P0 <= 0 /\ arg1P0 > 0), cost: 1
   8: f1_0_main_Load -> f104_0_factorial_EQ : arg5'=arg2, arg2'=2, arg4'=1, arg1'=arg1P1, arg3'=1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 > 0), cost: 2
   9: f1_0_main_Load -> [3] : (arg2 == 0 /\ -1+arg1 >= 0), cost: NONTERM
   3: __init -> f1_0_main_Load : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
   9: f1_0_main_Load -> [3] : (arg2 == 0 /\ -1+arg1 >= 0), cost: NONTERM
   3: __init -> f1_0_main_Load : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [3] : (arg2 == 0 /\ -1+arg1 >= 0), cost: NONTERM
New rule:
__init -> [3] : (-1+arg1P3 >= 0 /\ arg2P3 == 0), cost: NONTERM

Applied deletion
Removed the following rules: 3 9

Eliminated locations on linear paths
Start location: __init
  10: __init -> [3] : (-1+arg1P3 >= 0 /\ arg2P3 == 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 10 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-1+arg1P3 >= 0 /\ arg2P3 == 0)
