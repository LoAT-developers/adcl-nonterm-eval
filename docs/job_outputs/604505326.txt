NO

Initial ITS
Start location: __init
   0: f226_0_createIntList_Return -> f570_0_main_NULL : arg2'=arg2P0, arg1'=arg1P0, (-1-arg2+arg1P0 <= 0 /\ 1+arg2P0 > 0 /\ arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ arg1P0-arg1 <= 0 /\ arg2P0-arg2 <= 0), cost: 1
   2: f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1-arg2+arg1P2 <= 0 /\ 1+arg2P2-arg1 <= 0 /\ arg1 > 0 /\ -arg1+arg1P2 <= 0 /\ -1+arg2 > 0 /\ arg1P2 > 0 /\ 2-arg2+arg2P2 <= 0 /\ 1+arg2P2 > 0), cost: 1
   3: f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (x190 > 0 /\ 1+arg2P3 > 0 /\ -arg1+arg1P3 <= 0 /\ -2+arg2 > 0 /\ x140 > 0 /\ arg1 > 0 /\ 2-arg2+arg1P3 <= 0 /\ arg1P3 > 0), cost: 1
   6: f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P6, arg1'=arg1P6, (-2+arg2 > 0 /\ x290 > 0 /\ arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg1P6 > 0 /\ x250 > 0), cost: 1
   1: f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1 > 0 /\ arg1P1 > 0), cost: 1
   4: f1_0_main_Load -> f507_0_createIntList_LE : arg2'=arg2P4, arg1'=arg1P4, (1-arg2P4 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
   5: f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2P5, arg1'=arg1P5, (arg2 > 0 /\ arg1 > 0 /\ -1-arg1P5+arg1 == 0 /\ 1-arg2P5+arg2 == 0), cost: 1
   7: f726_0_reverse_NULL -> f726_0_reverse_NULL : arg2'=arg2P7, arg1'=arg1P7, (1+arg1P7 > 0 /\ arg1 > 0 /\ 1+arg1P7-arg1 <= 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Removed unreachable rules and leafs
Start location: __init
   2: f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1-arg2+arg1P2 <= 0 /\ 1+arg2P2-arg1 <= 0 /\ arg1 > 0 /\ -arg1+arg1P2 <= 0 /\ -1+arg2 > 0 /\ arg1P2 > 0 /\ 2-arg2+arg2P2 <= 0 /\ 1+arg2P2 > 0), cost: 1
   3: f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (x190 > 0 /\ 1+arg2P3 > 0 /\ -arg1+arg1P3 <= 0 /\ -2+arg2 > 0 /\ x140 > 0 /\ arg1 > 0 /\ 2-arg2+arg1P3 <= 0 /\ arg1P3 > 0), cost: 1
   6: f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P6, arg1'=arg1P6, (-2+arg2 > 0 /\ x290 > 0 /\ arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg1P6 > 0 /\ x250 > 0), cost: 1
   1: f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1 > 0 /\ arg1P1 > 0), cost: 1
   4: f1_0_main_Load -> f507_0_createIntList_LE : arg2'=arg2P4, arg1'=arg1P4, (1-arg2P4 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
   5: f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2P5, arg1'=arg1P5, (arg2 > 0 /\ arg1 > 0 /\ -1-arg1P5+arg1 == 0 /\ 1-arg2P5+arg2 == 0), cost: 1
   7: f726_0_reverse_NULL -> f726_0_reverse_NULL : arg2'=arg2P7, arg1'=arg1P7, (1+arg1P7 > 0 /\ arg1 > 0 /\ 1+arg1P7-arg1 <= 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1 > 0 /\ arg1P1 > 0), cost: 1
New rule:
f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1

Applied preprocessing
Original rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1-arg2+arg1P2 <= 0 /\ 1+arg2P2-arg1 <= 0 /\ arg1 > 0 /\ -arg1+arg1P2 <= 0 /\ -1+arg2 > 0 /\ arg1P2 > 0 /\ 2-arg2+arg2P2 <= 0 /\ 1+arg2P2 > 0), cost: 1
New rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1-arg2+arg1P2 <= 0 /\ 1+arg2P2-arg1 <= 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0 /\ 2-arg2+arg2P2 <= 0 /\ 1+arg2P2 > 0), cost: 1

Applied preprocessing
Original rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (x190 > 0 /\ 1+arg2P3 > 0 /\ -arg1+arg1P3 <= 0 /\ -2+arg2 > 0 /\ x140 > 0 /\ arg1 > 0 /\ 2-arg2+arg1P3 <= 0 /\ arg1P3 > 0), cost: 1
New rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg2P3 > 0 /\ -arg1+arg1P3 <= 0 /\ 2-arg2+arg1P3 <= 0 /\ arg1P3 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f507_0_createIntList_LE : arg2'=arg2P4, arg1'=arg1P4, (1-arg2P4 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
New rule:
f1_0_main_Load -> f507_0_createIntList_LE : arg2'=1, arg1'=arg1P4, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: 1

Applied preprocessing
Original rule:
f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2P5, arg1'=arg1P5, (arg2 > 0 /\ arg1 > 0 /\ -1-arg1P5+arg1 == 0 /\ 1-arg2P5+arg2 == 0), cost: 1
New rule:
f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=1+arg2, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P6, arg1'=arg1P6, (-2+arg2 > 0 /\ x290 > 0 /\ arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg1P6 > 0 /\ x250 > 0), cost: 1
New rule:
f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P6, arg1'=arg1P6, (arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg1P6 > 0), cost: 1

Applied preprocessing
Original rule:
f726_0_reverse_NULL -> f726_0_reverse_NULL : arg2'=arg2P7, arg1'=arg1P7, (1+arg1P7 > 0 /\ arg1 > 0 /\ 1+arg1P7-arg1 <= 0), cost: 1
New rule:
f726_0_reverse_NULL -> f726_0_reverse_NULL : arg2'=arg2P7, arg1'=arg1P7, (1+arg1P7 > 0 /\ 1+arg1P7-arg1 <= 0), cost: 1

Simplified rules
Start location: __init
  10: f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1-arg2+arg1P2 <= 0 /\ 1+arg2P2-arg1 <= 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0 /\ 2-arg2+arg2P2 <= 0 /\ 1+arg2P2 > 0), cost: 1
  11: f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg2P3 > 0 /\ -arg1+arg1P3 <= 0 /\ 2-arg2+arg1P3 <= 0 /\ arg1P3 > 0), cost: 1
  14: f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P6, arg1'=arg1P6, (arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg1P6 > 0), cost: 1
   9: f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
  12: f1_0_main_Load -> f507_0_createIntList_LE : arg2'=1, arg1'=arg1P4, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
  13: f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=1+arg2, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0), cost: 1
  15: f726_0_reverse_NULL -> f726_0_reverse_NULL : arg2'=arg2P7, arg1'=arg1P7, (1+arg1P7 > 0 /\ 1+arg1P7-arg1 <= 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Applied acceleration
Original rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg2P3 > 0 /\ -arg1+arg1P3 <= 0 /\ 2-arg2+arg1P3 <= 0 /\ arg1P3 > 0), cost: 1
New rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (arg1-arg1P3 >= 0 /\ 1+arg2P3 > 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0 /\ -1+n0 >= 0 /\ -2+arg2P3-arg1P3 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hNaFNh.txt

Applied nonterm
Original rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg2P3 > 0 /\ -arg1+arg1P3 <= 0 /\ 2-arg2+arg1P3 <= 0 /\ arg1P3 > 0), cost: 1
New rule:
f570_0_main_NULL -> [6] : (arg1-arg1P3 >= 0 /\ arg2-arg2P3 <= 0 /\ 1+arg2P3 > 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GgHIGD.txt

Applied simplification
Original rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (arg1-arg1P3 >= 0 /\ 1+arg2P3 > 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0 /\ -1+n0 >= 0 /\ -2+arg2P3-arg1P3 >= 0), cost: n0
New rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (arg1-arg1P3 >= 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0 /\ -1+n0 >= 0 /\ -2+arg2P3-arg1P3 >= 0), cost: n0

Applied simplification
Original rule:
f570_0_main_NULL -> [6] : (arg1-arg1P3 >= 0 /\ arg2-arg2P3 <= 0 /\ 1+arg2P3 > 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0), cost: NONTERM
New rule:
f570_0_main_NULL -> [6] : (arg1-arg1P3 >= 0 /\ arg2-arg2P3 <= 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 11

Applied acceleration
Original rule:
f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=1+arg2, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0), cost: 1
New rule:
f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2+n5, arg1'=-n5+arg1, (arg2 > 0 /\ n5 >= 0 /\ 1-n5+arg1 > 0), cost: n5
Sub-proof via acceration calculus written to file:///tmp/tmpnam_bPcChe.txt

Applied instantiation
Original rule:
f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2+n5, arg1'=-n5+arg1, (arg2 > 0 /\ n5 >= 0 /\ 1-n5+arg1 > 0), cost: n5
New rule:
f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (1 > 0 /\ arg2 > 0 /\ arg1 >= 0), cost: arg1

Applied simplification
Original rule:
f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (1 > 0 /\ arg2 > 0 /\ arg1 >= 0), cost: arg1
New rule:
f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (arg2 > 0 /\ arg1 >= 0), cost: arg1

Applied deletion
Removed the following rules: 13

Accelerated simple loops
Start location: __init
  10: f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1-arg2+arg1P2 <= 0 /\ 1+arg2P2-arg1 <= 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0 /\ 2-arg2+arg2P2 <= 0 /\ 1+arg2P2 > 0), cost: 1
  14: f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P6, arg1'=arg1P6, (arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg1P6 > 0), cost: 1
  18: f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (arg1-arg1P3 >= 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0 /\ -1+n0 >= 0 /\ -2+arg2P3-arg1P3 >= 0), cost: n0
  19: f570_0_main_NULL -> [6] : (arg1-arg1P3 >= 0 /\ arg2-arg2P3 <= 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0), cost: NONTERM
   9: f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
  12: f1_0_main_Load -> f507_0_createIntList_LE : arg2'=1, arg1'=arg1P4, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
  21: f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (arg2 > 0 /\ arg1 >= 0), cost: arg1
  15: f726_0_reverse_NULL -> f726_0_reverse_NULL : arg2'=arg2P7, arg1'=arg1P7, (1+arg1P7 > 0 /\ 1+arg1P7-arg1 <= 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
Second rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1-arg2+arg1P2 <= 0 /\ 1+arg2P2-arg1 <= 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0 /\ 2-arg2+arg2P2 <= 0 /\ 1+arg2P2 > 0), cost: 1
New rule:
f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg2P2-arg1 <= 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0 /\ 1+arg2P2 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
Second rule:
f570_0_main_NULL -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (arg1-arg1P3 >= 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0 /\ -1+n0 >= 0 /\ -2+arg2P3-arg1P3 >= 0), cost: n0
New rule:
f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (-arg1+arg1P3 <= 0 /\ arg1P3 > 0 /\ -1+n0 >= 0 /\ -2+arg2P3-arg1P3 >= 0), cost: 1+n0

Applied chaining
First rule:
f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
Second rule:
f570_0_main_NULL -> [6] : (arg1-arg1P3 >= 0 /\ arg2-arg2P3 <= 0 /\ -2+arg2-arg1P3 >= 0 /\ arg1P3 > 0), cost: NONTERM
New rule:
f1_0_main_Load -> [6] : -1+arg1 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 10 18 19

Applied chaining
First rule:
f1_0_main_Load -> f507_0_createIntList_LE : arg2'=1, arg1'=arg1P4, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
Second rule:
f507_0_createIntList_LE -> f507_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (arg2 > 0 /\ arg1 >= 0), cost: arg1
New rule:
f1_0_main_Load -> f507_0_createIntList_LE : arg2'=1+arg1P4, arg1'=0, (1+arg2 > 0 /\ arg1 > 0 /\ arg1P4 >= 0), cost: 1+arg1P4

Applied deletion
Removed the following rules: 21

Applied chaining
First rule:
f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P6, arg1'=arg1P6, (arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg1P6 > 0), cost: 1
Second rule:
f726_0_reverse_NULL -> f726_0_reverse_NULL : arg2'=arg2P7, arg1'=arg1P7, (1+arg1P7 > 0 /\ 1+arg1P7-arg1 <= 0), cost: 1
New rule:
f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P7, arg1'=arg1P7, (1+arg1P7 > 0 /\ 3-arg2+arg1P7 <= 0 /\ arg1 > 0), cost: 2

Applied deletion
Removed the following rules: 15

Chained accelerated rules with incoming rules
Start location: __init
  14: f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P6, arg1'=arg1P6, (arg1 > 0 /\ 2-arg2+arg1P6 <= 0 /\ arg1P6 > 0), cost: 1
  26: f570_0_main_NULL -> f726_0_reverse_NULL : arg2'=arg2P7, arg1'=arg1P7, (1+arg1P7 > 0 /\ 3-arg2+arg1P7 <= 0 /\ arg1 > 0), cost: 2
   9: f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
  12: f1_0_main_Load -> f507_0_createIntList_LE : arg2'=1, arg1'=arg1P4, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
  22: f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg2P2-arg1 <= 0 /\ -arg1+arg1P2 <= 0 /\ arg1P2 > 0 /\ 1+arg2P2 > 0), cost: 2
  23: f1_0_main_Load -> f570_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (-arg1+arg1P3 <= 0 /\ arg1P3 > 0 /\ -1+n0 >= 0 /\ -2+arg2P3-arg1P3 >= 0), cost: 1+n0
  24: f1_0_main_Load -> [6] : -1+arg1 >= 0, cost: NONTERM
  25: f1_0_main_Load -> f507_0_createIntList_LE : arg2'=1+arg1P4, arg1'=0, (1+arg2 > 0 /\ arg1 > 0 /\ arg1P4 >= 0), cost: 1+arg1P4
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  24: f1_0_main_Load -> [6] : -1+arg1 >= 0, cost: NONTERM
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [6] : -1+arg1 >= 0, cost: NONTERM
New rule:
__init -> [6] : -1+arg1P8 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 8 24

Eliminated locations on linear paths
Start location: __init
  27: __init -> [6] : -1+arg1P8 >= 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 27 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  -1+arg1P8 >= 0
