NO

Initial ITS

Start location: l15
Program variables: loop_count^0 loop_max^0 npackets^0 npacketsold^0 tmp^0 tmp___0^0
   0: l0 -> l1 : loop_count^0'=loop_count^post1, loop_max^0'=loop_max^post1, npackets^0'=npackets^post1, npacketsold^0'=npacketsold^post1, tmp^0'=tmp^post1, tmp___0^0'=tmp___0^post1, (npacketsold^0-npacketsold^post1 == 0 /\ -tmp^post1+tmp^0 == 0 /\ loop_count^0-loop_count^post1 == 0 /\ -npackets^post1+npackets^0 == 0 /\ -tmp___0^post1+tmp___0^0 == 0 /\ -loop_max^post1+loop_max^0 == 0), cost: 1
  23: l1 -> l14 : loop_count^0'=loop_count^post24, loop_max^0'=loop_max^post24, npackets^0'=npackets^post24, npacketsold^0'=npacketsold^post24, tmp^0'=tmp^post24, tmp___0^0'=tmp___0^post24, (loop_max^0-loop_max^post24 == 0 /\ -npacketsold^post24+npacketsold^0 == 0 /\ -loop_count^post24+loop_count^0 == 0 /\ npackets^0-npackets^post24 == 0 /\ tmp___0^0-tmp___0^post24 == 0 /\ tmp^0-tmp^post24 == 0), cost: 1
   1: l2 -> l0 : loop_count^0'=loop_count^post2, loop_max^0'=loop_max^post2, npackets^0'=npackets^post2, npacketsold^0'=npacketsold^post2, tmp^0'=tmp^post2, tmp___0^0'=tmp___0^post2, (tmp^0-tmp^post2 == 0 /\ npacketsold^0-npacketsold^post2 == 0 /\ -tmp___0^post2+tmp___0^0 == 0 /\ loop_max^0-loop_max^post2 == 0 /\ -npackets^post2+npackets^0 == 0 /\ -loop_count^post2+loop_count^0 == 0), cost: 1
   2: l2 -> l0 : loop_count^0'=loop_count^post3, loop_max^0'=loop_max^post3, npackets^0'=npackets^post3, npacketsold^0'=npacketsold^post3, tmp^0'=tmp^post3, tmp___0^0'=tmp___0^post3, (-npackets^post3+npackets^0 == 0 /\ -loop_count^post3+loop_count^0 == 0 /\ tmp___0^0-tmp___0^post3 == 0 /\ -npacketsold^post3+npacketsold^0 == 0 /\ tmp^0-tmp^post3 == 0 /\ loop_max^0-loop_max^post3 == 0), cost: 1
   3: l2 -> l3 : loop_count^0'=loop_count^post4, loop_max^0'=loop_max^post4, npackets^0'=npackets^post4, npacketsold^0'=npacketsold^post4, tmp^0'=tmp^post4, tmp___0^0'=tmp___0^post4, (tmp^0-tmp^post4 == 0 /\ loop_max^0-loop_max^post4 == 0 /\ -loop_count^post4+loop_count^0 == 0 /\ -npackets^post4+npackets^0 == 0 /\ -npacketsold^post4+npacketsold^0 == 0 /\ tmp___0^0-tmp___0^post4 == 0), cost: 1
  10: l3 -> l8 : loop_count^0'=loop_count^post11, loop_max^0'=loop_max^post11, npackets^0'=npackets^post11, npacketsold^0'=npacketsold^post11, tmp^0'=tmp^post11, tmp___0^0'=tmp___0^post11, (npacketsold^0-npacketsold^post11 == 0 /\ -tmp^post11+tmp^0 == 0 /\ loop_count^0-loop_count^post11 == 0 /\ loop_max^0-loop_max^post11 == 0 /\ 1+npacketsold^0-npackets^0 <= 0 /\ -npackets^post11+npackets^0 == 0 /\ -tmp___0^post11+tmp___0^0 == 0), cost: 1
  11: l3 -> l8 : loop_count^0'=loop_count^post12, loop_max^0'=loop_max^post12, npackets^0'=npackets^post12, npacketsold^0'=npacketsold^post12, tmp^0'=tmp^post12, tmp___0^0'=tmp___0^post12, (-tmp___0^post12+tmp___0^0 == 0 /\ tmp^0-tmp^post12 == 0 /\ npacketsold^0-npacketsold^post12 == 0 /\ loop_max^0-loop_max^post12 == 0 /\ -loop_count^post12+loop_count^0 == 0 /\ 1-npacketsold^0+npackets^0 <= 0 /\ -npackets^post12+npackets^0 == 0), cost: 1
  12: l3 -> l6 : loop_count^0'=loop_count^post13, loop_max^0'=loop_max^post13, npackets^0'=npackets^post13, npacketsold^0'=npacketsold^post13, tmp^0'=tmp^post13, tmp___0^0'=tmp___0^post13, (tmp^0-tmp^post13 == 0 /\ -npackets^post13+npackets^0 == 0 /\ -loop_count^post13+loop_count^0 == 0 /\ -tmp___0^post13+tmp___0^0 == 0 /\ -npacketsold^post13+npacketsold^0 == 0 /\ npacketsold^0-npackets^0 <= 0 /\ loop_max^0-loop_max^post13 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
   4: l4 -> l2 : loop_count^0'=loop_count^post5, loop_max^0'=loop_max^post5, npackets^0'=npackets^post5, npacketsold^0'=npacketsold^post5, tmp^0'=tmp^post5, tmp___0^0'=tmp___0^post5, (-npacketsold^post5+npacketsold^0 == 0 /\ -npackets^post5+npackets^0 == 0 /\ -loop_count^post5+loop_count^0 == 0 /\ -tmp___0^post5+tmp___0^0 == 0 /\ tmp^0-tmp^post5 == 0 /\ loop_max^0-loop_max^post5 == 0), cost: 1
   5: l4 -> l2 : loop_count^0'=loop_count^post6, loop_max^0'=loop_max^post6, npackets^0'=npackets^post6, npacketsold^0'=npacketsold^post6, tmp^0'=tmp^post6, tmp___0^0'=tmp___0^post6, (loop_count^0-loop_count^post6 == 0 /\ -npackets^post6+npackets^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ npacketsold^0-npacketsold^post6 == 0 /\ -loop_max^post6+loop_max^0 == 0 /\ -tmp___0^post6+tmp___0^0 == 0), cost: 1
   6: l4 -> l3 : loop_count^0'=loop_count^post7, loop_max^0'=loop_max^post7, npackets^0'=npackets^post7, npacketsold^0'=npacketsold^post7, tmp^0'=tmp^post7, tmp___0^0'=tmp___0^post7, (loop_count^0-loop_count^post7 == 0 /\ -tmp___0^post7+tmp___0^0 == 0 /\ -loop_max^post7+loop_max^0 == 0 /\ tmp^0-tmp^post7 == 0 /\ npacketsold^0-npacketsold^post7 == 0 /\ -npackets^post7+npackets^0 == 0), cost: 1
   7: l5 -> l4 : loop_count^0'=loop_count^post8, loop_max^0'=loop_max^post8, npackets^0'=npackets^post8, npacketsold^0'=npacketsold^post8, tmp^0'=tmp^post8, tmp___0^0'=tmp___0^post8, (npacketsold^0-npacketsold^post8 == 0 /\ loop_count^0-loop_count^post8 == 0 /\ 1-loop_max^0+loop_count^0 <= 0 /\ -npackets^post8+npackets^0 == 0 /\ -tmp^post8+tmp^0 == 0 /\ -loop_max^post8+loop_max^0 == 0 /\ -tmp___0^post8+tmp___0^0 == 0), cost: 1
   8: l5 -> l6 : loop_count^0'=loop_count^post9, loop_max^0'=loop_max^post9, npackets^0'=npackets^post9, npacketsold^0'=npacketsold^post9, tmp^0'=tmp^post9, tmp___0^0'=tmp___0^post9, (loop_max^0-loop_count^0 <= 0 /\ loop_count^0-loop_count^post9 == 0 /\ tmp^0-tmp^post9 == 0 /\ -npackets^post9+npackets^0 == 0 /\ -loop_max^post9+loop_max^0 == 0 /\ -tmp___0^post9+tmp___0^0 == 0 /\ npacketsold^0-npacketsold^post9 == 0), cost: 1
   9: l6 -> l7 : loop_count^0'=loop_count^post10, loop_max^0'=loop_max^post10, npackets^0'=npackets^post10, npacketsold^0'=npacketsold^post10, tmp^0'=tmp^post10, tmp___0^0'=tmp___0^post10, (npacketsold^0-npacketsold^post10 == 0 /\ -npackets^post10+npackets^0 == 0 /\ -loop_max^post10+loop_max^0 == 0 /\ -tmp^post10+tmp^0 == 0 /\ loop_count^0-loop_count^post10 == 0 /\ -tmp___0^post10+tmp___0^0 == 0), cost: 1
  24: l8 -> l5 : loop_count^0'=loop_count^post25, loop_max^0'=loop_max^post25, npackets^0'=npackets^post25, npacketsold^0'=npacketsold^post25, tmp^0'=tmp^post25, tmp___0^0'=tmp___0^post25, (-loop_count^post25+loop_count^0 == 0 /\ -npackets^post25+npackets^0 == 0 /\ tmp^0-tmp^post25 == 0 /\ loop_max^0-loop_max^post25 == 0 /\ npacketsold^post25-npackets^0 == 0 /\ -tmp___0^post25+tmp___0^0 == 0), cost: 1
  13: l9 -> l3 : loop_count^0'=loop_count^post14, loop_max^0'=loop_max^post14, npackets^0'=npackets^post14, npacketsold^0'=npacketsold^post14, tmp^0'=tmp^post14, tmp___0^0'=tmp___0^post14, (tmp^0-tmp^post14 == 0 /\ loop_max^0-loop_max^post14 == 0 /\ -1+loop_count^post14-loop_count^0 == 0 /\ -npacketsold^post14+npacketsold^0 == 0 /\ -npackets^post14+npackets^0 == 0 /\ tmp___0^0-tmp___0^post14 == 0), cost: 1
  14: l10 -> l3 : loop_count^0'=loop_count^post15, loop_max^0'=loop_max^post15, npackets^0'=npackets^post15, npacketsold^0'=npacketsold^post15, tmp^0'=tmp^post15, tmp___0^0'=tmp___0^post15, (-npackets^post15+npackets^0 == 0 /\ -loop_count^post15+loop_count^0 == 0 /\ -tmp___0^post15+tmp___0^0 == 0 /\ -npacketsold^post15+npacketsold^0 == 0 /\ tmp^0-tmp^post15 == 0 /\ loop_max^0-loop_max^post15 == 0 /\ -tmp___0^0 <= 0 /\ tmp___0^0 <= 0), cost: 1
  15: l10 -> l9 : loop_count^0'=loop_count^post16, loop_max^0'=loop_max^post16, npackets^0'=npackets^post16, npacketsold^0'=npacketsold^post16, tmp^0'=tmp^post16, tmp___0^0'=tmp___0^post16, (loop_count^0-loop_count^post16 == 0 /\ -tmp___0^post16+tmp___0^0 == 0 /\ 1-tmp___0^0 <= 0 /\ tmp^0-tmp^post16 == 0 /\ -npackets^post16+npackets^0 == 0 /\ -loop_max^post16+loop_max^0 == 0 /\ npacketsold^0-npacketsold^post16 == 0), cost: 1
  16: l10 -> l9 : loop_count^0'=loop_count^post17, loop_max^0'=loop_max^post17, npackets^0'=npackets^post17, npacketsold^0'=npacketsold^post17, tmp^0'=tmp^post17, tmp___0^0'=tmp___0^post17, (loop_count^0-loop_count^post17 == 0 /\ 1+tmp___0^0 <= 0 /\ -loop_max^post17+loop_max^0 == 0 /\ -tmp___0^post17+tmp___0^0 == 0 /\ tmp^0-tmp^post17 == 0 /\ npacketsold^0-npacketsold^post17 == 0 /\ -npackets^post17+npackets^0 == 0), cost: 1
  17: l11 -> l10 : loop_count^0'=loop_count^post18, loop_max^0'=loop_max^post18, npackets^0'=npackets^post18, npacketsold^0'=npacketsold^post18, tmp^0'=tmp^post18, tmp___0^0'=tmp___0^post18, (0 == 0 /\ npacketsold^0-npacketsold^post18 == 0 /\ loop_count^0-loop_count^post18 == 0 /\ -tmp^post18+tmp^0 == 0 /\ -npackets^post18+npackets^0 == 0 /\ -loop_max^post18+loop_max^0 == 0), cost: 1
  18: l12 -> l11 : loop_count^0'=loop_count^post19, loop_max^0'=loop_max^post19, npackets^0'=npackets^post19, npacketsold^0'=npacketsold^post19, tmp^0'=tmp^post19, tmp___0^0'=tmp___0^post19, (-loop_count^post19+loop_count^0 == 0 /\ -tmp___0^post19+tmp___0^0 == 0 /\ npacketsold^0-npacketsold^post19 == 0 /\ -1+npackets^post19-npackets^0 == 0 /\ tmp^0-tmp^post19 == 0 /\ loop_max^0-loop_max^post19 == 0), cost: 1
  19: l13 -> l11 : loop_count^0'=loop_count^post20, loop_max^0'=loop_max^post20, npackets^0'=npackets^post20, npacketsold^0'=npacketsold^post20, tmp^0'=tmp^post20, tmp___0^0'=tmp___0^post20, (npacketsold^0-npacketsold^post20 == 0 /\ tmp^0 <= 0 /\ -tmp^0 <= 0 /\ -npackets^post20+npackets^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ loop_count^0-loop_count^post20 == 0 /\ -tmp___0^post20+tmp___0^0 == 0 /\ -loop_max^post20+loop_max^0 == 0), cost: 1
  20: l13 -> l12 : loop_count^0'=loop_count^post21, loop_max^0'=loop_max^post21, npackets^0'=npackets^post21, npacketsold^0'=npacketsold^post21, tmp^0'=tmp^post21, tmp___0^0'=tmp___0^post21, (tmp^0-tmp^post21 == 0 /\ 1-tmp^0 <= 0 /\ npacketsold^0-npacketsold^post21 == 0 /\ -tmp___0^post21+tmp___0^0 == 0 /\ loop_max^0-loop_max^post21 == 0 /\ -loop_count^post21+loop_count^0 == 0 /\ -npackets^post21+npackets^0 == 0), cost: 1
  21: l13 -> l12 : loop_count^0'=loop_count^post22, loop_max^0'=loop_max^post22, npackets^0'=npackets^post22, npacketsold^0'=npacketsold^post22, tmp^0'=tmp^post22, tmp___0^0'=tmp___0^post22, (-npackets^post22+npackets^0 == 0 /\ -tmp___0^post22+tmp___0^0 == 0 /\ tmp^0-tmp^post22 == 0 /\ npacketsold^0-npacketsold^post22 == 0 /\ -loop_count^post22+loop_count^0 == 0 /\ 1+tmp^0 <= 0 /\ loop_max^0-loop_max^post22 == 0), cost: 1
  22: l14 -> l13 : loop_count^0'=loop_count^post23, loop_max^0'=loop_max^post23, npackets^0'=npackets^post23, npacketsold^0'=npacketsold^post23, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post23, (0 == 0 /\ -npacketsold^post23+npacketsold^0 == 0 /\ -npackets^post23+npackets^0 == 0 /\ -loop_count^post23+loop_count^0 == 0 /\ -tmp___0^post23+tmp___0^0 == 0 /\ loop_max^0-loop_max^post23 == 0), cost: 1
  25: l15 -> l8 : loop_count^0'=loop_count^post26, loop_max^0'=loop_max^post26, npackets^0'=npackets^post26, npacketsold^0'=npacketsold^post26, tmp^0'=tmp^post26, tmp___0^0'=tmp___0^post26, (loop_count^0-loop_count^post26 == 0 /\ -loop_max^post26+loop_max^0 == 0 /\ -tmp___0^post26+tmp___0^0 == 0 /\ tmp^0-tmp^post26 == 0 /\ -npackets^post26+npackets^0 == 0 /\ npacketsold^0-npacketsold^post26 == 0), cost: 1

Chained Linear Paths

Start location: l15
Program variables: loop_count^0 loop_max^0 npackets^0 npacketsold^0 tmp^0 tmp___0^0
  27: l0 -> l13 : loop_count^0'=loop_count^post23, loop_max^0'=loop_max^post23, npackets^0'=npackets^post23, npacketsold^0'=npacketsold^post23, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post23, (0 == 0 /\ npacketsold^0-npacketsold^post1 == 0 /\ npackets^post1-npackets^post24 == 0 /\ loop_max^post1-loop_max^post24 == 0 /\ -tmp^post1+tmp^0 == 0 /\ loop_count^0-loop_count^post1 == 0 /\ -npackets^post1+npackets^0 == 0 /\ -npacketsold^post24+npacketsold^post1 == 0 /\ tmp^post1-tmp^post24 == 0 /\ loop_max^post24-loop_max^post23 == 0 /\ -npackets^post23+npackets^post24 == 0 /\ npacketsold^post24-npacketsold^post23 == 0 /\ -tmp___0^post1+tmp___0^0 == 0 /\ tmp___0^post1-tmp___0^post24 == 0 /\ loop_count^post24-loop_count^post23 == 0 /\ -loop_max^post1+loop_max^0 == 0 /\ -loop_count^post24+loop_count^post1 == 0 /\ -tmp___0^post23+tmp___0^post24 == 0), cost: 1
   1: l2 -> l0 : loop_count^0'=loop_count^post2, loop_max^0'=loop_max^post2, npackets^0'=npackets^post2, npacketsold^0'=npacketsold^post2, tmp^0'=tmp^post2, tmp___0^0'=tmp___0^post2, (tmp^0-tmp^post2 == 0 /\ npacketsold^0-npacketsold^post2 == 0 /\ -tmp___0^post2+tmp___0^0 == 0 /\ loop_max^0-loop_max^post2 == 0 /\ -npackets^post2+npackets^0 == 0 /\ -loop_count^post2+loop_count^0 == 0), cost: 1
   2: l2 -> l0 : loop_count^0'=loop_count^post3, loop_max^0'=loop_max^post3, npackets^0'=npackets^post3, npacketsold^0'=npacketsold^post3, tmp^0'=tmp^post3, tmp___0^0'=tmp___0^post3, (-npackets^post3+npackets^0 == 0 /\ -loop_count^post3+loop_count^0 == 0 /\ tmp___0^0-tmp___0^post3 == 0 /\ -npacketsold^post3+npacketsold^0 == 0 /\ tmp^0-tmp^post3 == 0 /\ loop_max^0-loop_max^post3 == 0), cost: 1
   3: l2 -> l3 : loop_count^0'=loop_count^post4, loop_max^0'=loop_max^post4, npackets^0'=npackets^post4, npacketsold^0'=npacketsold^post4, tmp^0'=tmp^post4, tmp___0^0'=tmp___0^post4, (tmp^0-tmp^post4 == 0 /\ loop_max^0-loop_max^post4 == 0 /\ -loop_count^post4+loop_count^0 == 0 /\ -npackets^post4+npackets^0 == 0 /\ -npacketsold^post4+npacketsold^0 == 0 /\ tmp___0^0-tmp___0^post4 == 0), cost: 1
  10: l3 -> l8 : loop_count^0'=loop_count^post11, loop_max^0'=loop_max^post11, npackets^0'=npackets^post11, npacketsold^0'=npacketsold^post11, tmp^0'=tmp^post11, tmp___0^0'=tmp___0^post11, (npacketsold^0-npacketsold^post11 == 0 /\ -tmp^post11+tmp^0 == 0 /\ loop_count^0-loop_count^post11 == 0 /\ loop_max^0-loop_max^post11 == 0 /\ 1+npacketsold^0-npackets^0 <= 0 /\ -npackets^post11+npackets^0 == 0 /\ -tmp___0^post11+tmp___0^0 == 0), cost: 1
  11: l3 -> l8 : loop_count^0'=loop_count^post12, loop_max^0'=loop_max^post12, npackets^0'=npackets^post12, npacketsold^0'=npacketsold^post12, tmp^0'=tmp^post12, tmp___0^0'=tmp___0^post12, (-tmp___0^post12+tmp___0^0 == 0 /\ tmp^0-tmp^post12 == 0 /\ npacketsold^0-npacketsold^post12 == 0 /\ loop_max^0-loop_max^post12 == 0 /\ -loop_count^post12+loop_count^0 == 0 /\ 1-npacketsold^0+npackets^0 <= 0 /\ -npackets^post12+npackets^0 == 0), cost: 1
  12: l3 -> l6 : loop_count^0'=loop_count^post13, loop_max^0'=loop_max^post13, npackets^0'=npackets^post13, npacketsold^0'=npacketsold^post13, tmp^0'=tmp^post13, tmp___0^0'=tmp___0^post13, (tmp^0-tmp^post13 == 0 /\ -npackets^post13+npackets^0 == 0 /\ -loop_count^post13+loop_count^0 == 0 /\ -tmp___0^post13+tmp___0^0 == 0 /\ -npacketsold^post13+npacketsold^0 == 0 /\ npacketsold^0-npackets^0 <= 0 /\ loop_max^0-loop_max^post13 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
   4: l4 -> l2 : loop_count^0'=loop_count^post5, loop_max^0'=loop_max^post5, npackets^0'=npackets^post5, npacketsold^0'=npacketsold^post5, tmp^0'=tmp^post5, tmp___0^0'=tmp___0^post5, (-npacketsold^post5+npacketsold^0 == 0 /\ -npackets^post5+npackets^0 == 0 /\ -loop_count^post5+loop_count^0 == 0 /\ -tmp___0^post5+tmp___0^0 == 0 /\ tmp^0-tmp^post5 == 0 /\ loop_max^0-loop_max^post5 == 0), cost: 1
   5: l4 -> l2 : loop_count^0'=loop_count^post6, loop_max^0'=loop_max^post6, npackets^0'=npackets^post6, npacketsold^0'=npacketsold^post6, tmp^0'=tmp^post6, tmp___0^0'=tmp___0^post6, (loop_count^0-loop_count^post6 == 0 /\ -npackets^post6+npackets^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ npacketsold^0-npacketsold^post6 == 0 /\ -loop_max^post6+loop_max^0 == 0 /\ -tmp___0^post6+tmp___0^0 == 0), cost: 1
   6: l4 -> l3 : loop_count^0'=loop_count^post7, loop_max^0'=loop_max^post7, npackets^0'=npackets^post7, npacketsold^0'=npacketsold^post7, tmp^0'=tmp^post7, tmp___0^0'=tmp___0^post7, (loop_count^0-loop_count^post7 == 0 /\ -tmp___0^post7+tmp___0^0 == 0 /\ -loop_max^post7+loop_max^0 == 0 /\ tmp^0-tmp^post7 == 0 /\ npacketsold^0-npacketsold^post7 == 0 /\ -npackets^post7+npackets^0 == 0), cost: 1
   7: l5 -> l4 : loop_count^0'=loop_count^post8, loop_max^0'=loop_max^post8, npackets^0'=npackets^post8, npacketsold^0'=npacketsold^post8, tmp^0'=tmp^post8, tmp___0^0'=tmp___0^post8, (npacketsold^0-npacketsold^post8 == 0 /\ loop_count^0-loop_count^post8 == 0 /\ 1-loop_max^0+loop_count^0 <= 0 /\ -npackets^post8+npackets^0 == 0 /\ -tmp^post8+tmp^0 == 0 /\ -loop_max^post8+loop_max^0 == 0 /\ -tmp___0^post8+tmp___0^0 == 0), cost: 1
   8: l5 -> l6 : loop_count^0'=loop_count^post9, loop_max^0'=loop_max^post9, npackets^0'=npackets^post9, npacketsold^0'=npacketsold^post9, tmp^0'=tmp^post9, tmp___0^0'=tmp___0^post9, (loop_max^0-loop_count^0 <= 0 /\ loop_count^0-loop_count^post9 == 0 /\ tmp^0-tmp^post9 == 0 /\ -npackets^post9+npackets^0 == 0 /\ -loop_max^post9+loop_max^0 == 0 /\ -tmp___0^post9+tmp___0^0 == 0 /\ npacketsold^0-npacketsold^post9 == 0), cost: 1
   9: l6 -> l7 : loop_count^0'=loop_count^post10, loop_max^0'=loop_max^post10, npackets^0'=npackets^post10, npacketsold^0'=npacketsold^post10, tmp^0'=tmp^post10, tmp___0^0'=tmp___0^post10, (npacketsold^0-npacketsold^post10 == 0 /\ -npackets^post10+npackets^0 == 0 /\ -loop_max^post10+loop_max^0 == 0 /\ -tmp^post10+tmp^0 == 0 /\ loop_count^0-loop_count^post10 == 0 /\ -tmp___0^post10+tmp___0^0 == 0), cost: 1
  24: l8 -> l5 : loop_count^0'=loop_count^post25, loop_max^0'=loop_max^post25, npackets^0'=npackets^post25, npacketsold^0'=npacketsold^post25, tmp^0'=tmp^post25, tmp___0^0'=tmp___0^post25, (-loop_count^post25+loop_count^0 == 0 /\ -npackets^post25+npackets^0 == 0 /\ tmp^0-tmp^post25 == 0 /\ loop_max^0-loop_max^post25 == 0 /\ npacketsold^post25-npackets^0 == 0 /\ -tmp___0^post25+tmp___0^0 == 0), cost: 1
  13: l9 -> l3 : loop_count^0'=loop_count^post14, loop_max^0'=loop_max^post14, npackets^0'=npackets^post14, npacketsold^0'=npacketsold^post14, tmp^0'=tmp^post14, tmp___0^0'=tmp___0^post14, (tmp^0-tmp^post14 == 0 /\ loop_max^0-loop_max^post14 == 0 /\ -1+loop_count^post14-loop_count^0 == 0 /\ -npacketsold^post14+npacketsold^0 == 0 /\ -npackets^post14+npackets^0 == 0 /\ tmp___0^0-tmp___0^post14 == 0), cost: 1
  14: l10 -> l3 : loop_count^0'=loop_count^post15, loop_max^0'=loop_max^post15, npackets^0'=npackets^post15, npacketsold^0'=npacketsold^post15, tmp^0'=tmp^post15, tmp___0^0'=tmp___0^post15, (-npackets^post15+npackets^0 == 0 /\ -loop_count^post15+loop_count^0 == 0 /\ -tmp___0^post15+tmp___0^0 == 0 /\ -npacketsold^post15+npacketsold^0 == 0 /\ tmp^0-tmp^post15 == 0 /\ loop_max^0-loop_max^post15 == 0 /\ -tmp___0^0 <= 0 /\ tmp___0^0 <= 0), cost: 1
  15: l10 -> l9 : loop_count^0'=loop_count^post16, loop_max^0'=loop_max^post16, npackets^0'=npackets^post16, npacketsold^0'=npacketsold^post16, tmp^0'=tmp^post16, tmp___0^0'=tmp___0^post16, (loop_count^0-loop_count^post16 == 0 /\ -tmp___0^post16+tmp___0^0 == 0 /\ 1-tmp___0^0 <= 0 /\ tmp^0-tmp^post16 == 0 /\ -npackets^post16+npackets^0 == 0 /\ -loop_max^post16+loop_max^0 == 0 /\ npacketsold^0-npacketsold^post16 == 0), cost: 1
  16: l10 -> l9 : loop_count^0'=loop_count^post17, loop_max^0'=loop_max^post17, npackets^0'=npackets^post17, npacketsold^0'=npacketsold^post17, tmp^0'=tmp^post17, tmp___0^0'=tmp___0^post17, (loop_count^0-loop_count^post17 == 0 /\ 1+tmp___0^0 <= 0 /\ -loop_max^post17+loop_max^0 == 0 /\ -tmp___0^post17+tmp___0^0 == 0 /\ tmp^0-tmp^post17 == 0 /\ npacketsold^0-npacketsold^post17 == 0 /\ -npackets^post17+npackets^0 == 0), cost: 1
  17: l11 -> l10 : loop_count^0'=loop_count^post18, loop_max^0'=loop_max^post18, npackets^0'=npackets^post18, npacketsold^0'=npacketsold^post18, tmp^0'=tmp^post18, tmp___0^0'=tmp___0^post18, (0 == 0 /\ npacketsold^0-npacketsold^post18 == 0 /\ loop_count^0-loop_count^post18 == 0 /\ -tmp^post18+tmp^0 == 0 /\ -npackets^post18+npackets^0 == 0 /\ -loop_max^post18+loop_max^0 == 0), cost: 1
  18: l12 -> l11 : loop_count^0'=loop_count^post19, loop_max^0'=loop_max^post19, npackets^0'=npackets^post19, npacketsold^0'=npacketsold^post19, tmp^0'=tmp^post19, tmp___0^0'=tmp___0^post19, (-loop_count^post19+loop_count^0 == 0 /\ -tmp___0^post19+tmp___0^0 == 0 /\ npacketsold^0-npacketsold^post19 == 0 /\ -1+npackets^post19-npackets^0 == 0 /\ tmp^0-tmp^post19 == 0 /\ loop_max^0-loop_max^post19 == 0), cost: 1
  19: l13 -> l11 : loop_count^0'=loop_count^post20, loop_max^0'=loop_max^post20, npackets^0'=npackets^post20, npacketsold^0'=npacketsold^post20, tmp^0'=tmp^post20, tmp___0^0'=tmp___0^post20, (npacketsold^0-npacketsold^post20 == 0 /\ tmp^0 <= 0 /\ -tmp^0 <= 0 /\ -npackets^post20+npackets^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ loop_count^0-loop_count^post20 == 0 /\ -tmp___0^post20+tmp___0^0 == 0 /\ -loop_max^post20+loop_max^0 == 0), cost: 1
  20: l13 -> l12 : loop_count^0'=loop_count^post21, loop_max^0'=loop_max^post21, npackets^0'=npackets^post21, npacketsold^0'=npacketsold^post21, tmp^0'=tmp^post21, tmp___0^0'=tmp___0^post21, (tmp^0-tmp^post21 == 0 /\ 1-tmp^0 <= 0 /\ npacketsold^0-npacketsold^post21 == 0 /\ -tmp___0^post21+tmp___0^0 == 0 /\ loop_max^0-loop_max^post21 == 0 /\ -loop_count^post21+loop_count^0 == 0 /\ -npackets^post21+npackets^0 == 0), cost: 1
  21: l13 -> l12 : loop_count^0'=loop_count^post22, loop_max^0'=loop_max^post22, npackets^0'=npackets^post22, npacketsold^0'=npacketsold^post22, tmp^0'=tmp^post22, tmp___0^0'=tmp___0^post22, (-npackets^post22+npackets^0 == 0 /\ -tmp___0^post22+tmp___0^0 == 0 /\ tmp^0-tmp^post22 == 0 /\ npacketsold^0-npacketsold^post22 == 0 /\ -loop_count^post22+loop_count^0 == 0 /\ 1+tmp^0 <= 0 /\ loop_max^0-loop_max^post22 == 0), cost: 1
  25: l15 -> l8 : loop_count^0'=loop_count^post26, loop_max^0'=loop_max^post26, npackets^0'=npackets^post26, npacketsold^0'=npacketsold^post26, tmp^0'=tmp^post26, tmp___0^0'=tmp___0^post26, (loop_count^0-loop_count^post26 == 0 /\ -loop_max^post26+loop_max^0 == 0 /\ -tmp___0^post26+tmp___0^0 == 0 /\ tmp^0-tmp^post26 == 0 /\ -npackets^post26+npackets^0 == 0 /\ npacketsold^0-npacketsold^post26 == 0), cost: 1

	Eliminating location l1 by chaining:

	Applied chaining

	First rule:
	l0 -> l1 : loop_count^0'=loop_count^post1, loop_max^0'=loop_max^post1, npackets^0'=npackets^post1, npacketsold^0'=npacketsold^post1, tmp^0'=tmp^post1, tmp___0^0'=tmp___0^post1, (npacketsold^0-npacketsold^post1 == 0 /\ -tmp^post1+tmp^0 == 0 /\ loop_count^0-loop_count^post1 == 0 /\ -npackets^post1+npackets^0 == 0 /\ -tmp___0^post1+tmp___0^0 == 0 /\ -loop_max^post1+loop_max^0 == 0), cost: 1
	Second rule:
	l1 -> l14 : loop_count^0'=loop_count^post24, loop_max^0'=loop_max^post24, npackets^0'=npackets^post24, npacketsold^0'=npacketsold^post24, tmp^0'=tmp^post24, tmp___0^0'=tmp___0^post24, (loop_max^0-loop_max^post24 == 0 /\ -npacketsold^post24+npacketsold^0 == 0 /\ -loop_count^post24+loop_count^0 == 0 /\ npackets^0-npackets^post24 == 0 /\ tmp___0^0-tmp___0^post24 == 0 /\ tmp^0-tmp^post24 == 0), cost: 1
	New rule:
	l0 -> l14 : loop_count^0'=loop_count^post24, loop_max^0'=loop_max^post24, npackets^0'=npackets^post24, npacketsold^0'=npacketsold^post24, tmp^0'=tmp^post24, tmp___0^0'=tmp___0^post24, (npacketsold^0-npacketsold^post1 == 0 /\ npackets^post1-npackets^post24 == 0 /\ loop_max^post1-loop_max^post24 == 0 /\ -tmp^post1+tmp^0 == 0 /\ loop_count^0-loop_count^post1 == 0 /\ -npackets^post1+npackets^0 == 0 /\ -npacketsold^post24+npacketsold^post1 == 0 /\ tmp^post1-tmp^post24 == 0 /\ -tmp___0^post1+tmp___0^0 == 0 /\ tmp___0^post1-tmp___0^post24 == 0 /\ -loop_max^post1+loop_max^0 == 0 /\ -loop_count^post24+loop_count^post1 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 23
	
	Eliminating location l14 by chaining:

	Applied chaining

	First rule:
	l0 -> l14 : loop_count^0'=loop_count^post24, loop_max^0'=loop_max^post24, npackets^0'=npackets^post24, npacketsold^0'=npacketsold^post24, tmp^0'=tmp^post24, tmp___0^0'=tmp___0^post24, (npacketsold^0-npacketsold^post1 == 0 /\ npackets^post1-npackets^post24 == 0 /\ loop_max^post1-loop_max^post24 == 0 /\ -tmp^post1+tmp^0 == 0 /\ loop_count^0-loop_count^post1 == 0 /\ -npackets^post1+npackets^0 == 0 /\ -npacketsold^post24+npacketsold^post1 == 0 /\ tmp^post1-tmp^post24 == 0 /\ -tmp___0^post1+tmp___0^0 == 0 /\ tmp___0^post1-tmp___0^post24 == 0 /\ -loop_max^post1+loop_max^0 == 0 /\ -loop_count^post24+loop_count^post1 == 0), cost: 1
	Second rule:
	l14 -> l13 : loop_count^0'=loop_count^post23, loop_max^0'=loop_max^post23, npackets^0'=npackets^post23, npacketsold^0'=npacketsold^post23, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post23, (0 == 0 /\ -npacketsold^post23+npacketsold^0 == 0 /\ -npackets^post23+npackets^0 == 0 /\ -loop_count^post23+loop_count^0 == 0 /\ -tmp___0^post23+tmp___0^0 == 0 /\ loop_max^0-loop_max^post23 == 0), cost: 1
	New rule:
	l0 -> l13 : loop_count^0'=loop_count^post23, loop_max^0'=loop_max^post23, npackets^0'=npackets^post23, npacketsold^0'=npacketsold^post23, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post23, (0 == 0 /\ npacketsold^0-npacketsold^post1 == 0 /\ npackets^post1-npackets^post24 == 0 /\ loop_max^post1-loop_max^post24 == 0 /\ -tmp^post1+tmp^0 == 0 /\ loop_count^0-loop_count^post1 == 0 /\ -npackets^post1+npackets^0 == 0 /\ -npacketsold^post24+npacketsold^post1 == 0 /\ tmp^post1-tmp^post24 == 0 /\ loop_max^post24-loop_max^post23 == 0 /\ -npackets^post23+npackets^post24 == 0 /\ npacketsold^post24-npacketsold^post23 == 0 /\ -tmp___0^post1+tmp___0^0 == 0 /\ tmp___0^post1-tmp___0^post24 == 0 /\ loop_count^post24-loop_count^post23 == 0 /\ -loop_max^post1+loop_max^0 == 0 /\ -loop_count^post24+loop_count^post1 == 0 /\ -tmp___0^post23+tmp___0^post24 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 22 26

Simplified Transitions

Start location: l15
Program variables: loop_count^0 loop_max^0 npackets^0 npacketsold^0 tmp^0 tmp___0^0
  51: l0 -> l13 : tmp^0'=tmp^post23, T, cost: 1
  28: l2 -> l0 : T, cost: 1
  29: l2 -> l0 : T, cost: 1
  30: l2 -> l3 : T, cost: 1
  37: l3 -> l8 : 1+npacketsold^0-npackets^0 <= 0, cost: 1
  38: l3 -> l8 : 1-npacketsold^0+npackets^0 <= 0, cost: 1
  39: l3 -> l6 : (npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
  31: l4 -> l2 : T, cost: 1
  32: l4 -> l2 : T, cost: 1
  33: l4 -> l3 : T, cost: 1
  34: l5 -> l4 : 1-loop_max^0+loop_count^0 <= 0, cost: 1
  35: l5 -> l6 : loop_max^0-loop_count^0 <= 0, cost: 1
  36: l6 -> l7 : T, cost: 1
  49: l8 -> l5 : npacketsold^0'=npackets^0, T, cost: 1
  40: l9 -> l3 : loop_count^0'=1+loop_count^0, T, cost: 1
  41: l10 -> l3 : (-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
  42: l10 -> l9 : 1-tmp___0^0 <= 0, cost: 1
  43: l10 -> l9 : 1+tmp___0^0 <= 0, cost: 1
  44: l11 -> l10 : tmp___0^0'=tmp___0^post18, T, cost: 1
  45: l12 -> l11 : npackets^0'=1+npackets^0, T, cost: 1
  46: l13 -> l11 : (tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
  47: l13 -> l12 : 1-tmp^0 <= 0, cost: 1
  48: l13 -> l12 : 1+tmp^0 <= 0, cost: 1
  50: l15 -> l8 : T, cost: 1

	Propagated Equalities

	Original rule:
	l2 -> l0 : loop_count^0'=loop_count^post2, loop_max^0'=loop_max^post2, npackets^0'=npackets^post2, npacketsold^0'=npacketsold^post2, tmp^0'=tmp^post2, tmp___0^0'=tmp___0^post2, (tmp^0-tmp^post2 == 0 /\ npacketsold^0-npacketsold^post2 == 0 /\ -tmp___0^post2+tmp___0^0 == 0 /\ loop_max^0-loop_max^post2 == 0 /\ -npackets^post2+npackets^0 == 0 /\ -loop_count^post2+loop_count^0 == 0), cost: 1
	New rule:
	l2 -> l0 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality tmp^post2 = tmp^0
		
		propagated equality npacketsold^post2 = npacketsold^0
		
		propagated equality tmp___0^post2 = tmp___0^0
		
		propagated equality loop_max^post2 = loop_max^0
		
		propagated equality npackets^post2 = npackets^0
		
		propagated equality loop_count^post2 = loop_count^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l2 -> l0 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l2 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : loop_count^0'=loop_count^post3, loop_max^0'=loop_max^post3, npackets^0'=npackets^post3, npacketsold^0'=npacketsold^post3, tmp^0'=tmp^post3, tmp___0^0'=tmp___0^post3, (-npackets^post3+npackets^0 == 0 /\ -loop_count^post3+loop_count^0 == 0 /\ tmp___0^0-tmp___0^post3 == 0 /\ -npacketsold^post3+npacketsold^0 == 0 /\ tmp^0-tmp^post3 == 0 /\ loop_max^0-loop_max^post3 == 0), cost: 1
	New rule:
	l2 -> l0 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality npackets^post3 = npackets^0
		
		propagated equality loop_count^post3 = loop_count^0
		
		propagated equality tmp___0^post3 = tmp___0^0
		
		propagated equality npacketsold^post3 = npacketsold^0
		
		propagated equality tmp^post3 = tmp^0
		
		propagated equality loop_max^post3 = loop_max^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l2 -> l0 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l2 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : loop_count^0'=loop_count^post4, loop_max^0'=loop_max^post4, npackets^0'=npackets^post4, npacketsold^0'=npacketsold^post4, tmp^0'=tmp^post4, tmp___0^0'=tmp___0^post4, (tmp^0-tmp^post4 == 0 /\ loop_max^0-loop_max^post4 == 0 /\ -loop_count^post4+loop_count^0 == 0 /\ -npackets^post4+npackets^0 == 0 /\ -npacketsold^post4+npacketsold^0 == 0 /\ tmp___0^0-tmp___0^post4 == 0), cost: 1
	New rule:
	l2 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality tmp^post4 = tmp^0
		
		propagated equality loop_max^post4 = loop_max^0
		
		propagated equality loop_count^post4 = loop_count^0
		
		propagated equality npackets^post4 = npackets^0
		
		propagated equality npacketsold^post4 = npacketsold^0
		
		propagated equality tmp___0^post4 = tmp___0^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l2 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l2 -> l3 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l2 : loop_count^0'=loop_count^post5, loop_max^0'=loop_max^post5, npackets^0'=npackets^post5, npacketsold^0'=npacketsold^post5, tmp^0'=tmp^post5, tmp___0^0'=tmp___0^post5, (-npacketsold^post5+npacketsold^0 == 0 /\ -npackets^post5+npackets^0 == 0 /\ -loop_count^post5+loop_count^0 == 0 /\ -tmp___0^post5+tmp___0^0 == 0 /\ tmp^0-tmp^post5 == 0 /\ loop_max^0-loop_max^post5 == 0), cost: 1
	New rule:
	l4 -> l2 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality npacketsold^post5 = npacketsold^0
		
		propagated equality npackets^post5 = npackets^0
		
		propagated equality loop_count^post5 = loop_count^0
		
		propagated equality tmp___0^post5 = tmp___0^0
		
		propagated equality tmp^post5 = tmp^0
		
		propagated equality loop_max^post5 = loop_max^0
		
	Simplified Guard

	Original rule:
	l4 -> l2 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l4 -> l2 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l2 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l4 -> l2 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l2 : loop_count^0'=loop_count^post6, loop_max^0'=loop_max^post6, npackets^0'=npackets^post6, npacketsold^0'=npacketsold^post6, tmp^0'=tmp^post6, tmp___0^0'=tmp___0^post6, (loop_count^0-loop_count^post6 == 0 /\ -npackets^post6+npackets^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ npacketsold^0-npacketsold^post6 == 0 /\ -loop_max^post6+loop_max^0 == 0 /\ -tmp___0^post6+tmp___0^0 == 0), cost: 1
	New rule:
	l4 -> l2 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality loop_count^post6 = loop_count^0
		
		propagated equality npackets^post6 = npackets^0
		
		propagated equality tmp^post6 = tmp^0
		
		propagated equality npacketsold^post6 = npacketsold^0
		
		propagated equality loop_max^post6 = loop_max^0
		
		propagated equality tmp___0^post6 = tmp___0^0
		
	Simplified Guard

	Original rule:
	l4 -> l2 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l4 -> l2 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l2 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l4 -> l2 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l3 : loop_count^0'=loop_count^post7, loop_max^0'=loop_max^post7, npackets^0'=npackets^post7, npacketsold^0'=npacketsold^post7, tmp^0'=tmp^post7, tmp___0^0'=tmp___0^post7, (loop_count^0-loop_count^post7 == 0 /\ -tmp___0^post7+tmp___0^0 == 0 /\ -loop_max^post7+loop_max^0 == 0 /\ tmp^0-tmp^post7 == 0 /\ npacketsold^0-npacketsold^post7 == 0 /\ -npackets^post7+npackets^0 == 0), cost: 1
	New rule:
	l4 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality loop_count^post7 = loop_count^0
		
		propagated equality tmp___0^post7 = tmp___0^0
		
		propagated equality loop_max^post7 = loop_max^0
		
		propagated equality tmp^post7 = tmp^0
		
		propagated equality npacketsold^post7 = npacketsold^0
		
		propagated equality npackets^post7 = npackets^0
		
	Simplified Guard

	Original rule:
	l4 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l4 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l4 -> l3 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l4 : loop_count^0'=loop_count^post8, loop_max^0'=loop_max^post8, npackets^0'=npackets^post8, npacketsold^0'=npacketsold^post8, tmp^0'=tmp^post8, tmp___0^0'=tmp___0^post8, (npacketsold^0-npacketsold^post8 == 0 /\ loop_count^0-loop_count^post8 == 0 /\ 1-loop_max^0+loop_count^0 <= 0 /\ -npackets^post8+npackets^0 == 0 /\ -tmp^post8+tmp^0 == 0 /\ -loop_max^post8+loop_max^0 == 0 /\ -tmp___0^post8+tmp___0^0 == 0), cost: 1
	New rule:
	l5 -> l4 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1-loop_max^0+loop_count^0 <= 0), cost: 1
	
		propagated equality npacketsold^post8 = npacketsold^0
		
		propagated equality loop_count^post8 = loop_count^0
		
		propagated equality npackets^post8 = npackets^0
		
		propagated equality tmp^post8 = tmp^0
		
		propagated equality loop_max^post8 = loop_max^0
		
		propagated equality tmp___0^post8 = tmp___0^0
		
	Simplified Guard

	Original rule:
	l5 -> l4 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1-loop_max^0+loop_count^0 <= 0), cost: 1
	New rule:
	l5 -> l4 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1-loop_max^0+loop_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l4 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1-loop_max^0+loop_count^0 <= 0, cost: 1
	New rule:
	l5 -> l4 : 1-loop_max^0+loop_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l6 : loop_count^0'=loop_count^post9, loop_max^0'=loop_max^post9, npackets^0'=npackets^post9, npacketsold^0'=npacketsold^post9, tmp^0'=tmp^post9, tmp___0^0'=tmp___0^post9, (loop_max^0-loop_count^0 <= 0 /\ loop_count^0-loop_count^post9 == 0 /\ tmp^0-tmp^post9 == 0 /\ -npackets^post9+npackets^0 == 0 /\ -loop_max^post9+loop_max^0 == 0 /\ -tmp___0^post9+tmp___0^0 == 0 /\ npacketsold^0-npacketsold^post9 == 0), cost: 1
	New rule:
	l5 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ loop_max^0-loop_count^0 <= 0), cost: 1
	
		propagated equality loop_count^post9 = loop_count^0
		
		propagated equality tmp^post9 = tmp^0
		
		propagated equality npackets^post9 = npackets^0
		
		propagated equality loop_max^post9 = loop_max^0
		
		propagated equality tmp___0^post9 = tmp___0^0
		
		propagated equality npacketsold^post9 = npacketsold^0
		
	Simplified Guard

	Original rule:
	l5 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ loop_max^0-loop_count^0 <= 0), cost: 1
	New rule:
	l5 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, loop_max^0-loop_count^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, loop_max^0-loop_count^0 <= 0, cost: 1
	New rule:
	l5 -> l6 : loop_max^0-loop_count^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l7 : loop_count^0'=loop_count^post10, loop_max^0'=loop_max^post10, npackets^0'=npackets^post10, npacketsold^0'=npacketsold^post10, tmp^0'=tmp^post10, tmp___0^0'=tmp___0^post10, (npacketsold^0-npacketsold^post10 == 0 /\ -npackets^post10+npackets^0 == 0 /\ -loop_max^post10+loop_max^0 == 0 /\ -tmp^post10+tmp^0 == 0 /\ loop_count^0-loop_count^post10 == 0 /\ -tmp___0^post10+tmp___0^0 == 0), cost: 1
	New rule:
	l6 -> l7 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality npacketsold^post10 = npacketsold^0
		
		propagated equality npackets^post10 = npackets^0
		
		propagated equality loop_max^post10 = loop_max^0
		
		propagated equality tmp^post10 = tmp^0
		
		propagated equality loop_count^post10 = loop_count^0
		
		propagated equality tmp___0^post10 = tmp___0^0
		
	Simplified Guard

	Original rule:
	l6 -> l7 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l6 -> l7 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l7 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l6 -> l7 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l8 : loop_count^0'=loop_count^post11, loop_max^0'=loop_max^post11, npackets^0'=npackets^post11, npacketsold^0'=npacketsold^post11, tmp^0'=tmp^post11, tmp___0^0'=tmp___0^post11, (npacketsold^0-npacketsold^post11 == 0 /\ -tmp^post11+tmp^0 == 0 /\ loop_count^0-loop_count^post11 == 0 /\ loop_max^0-loop_max^post11 == 0 /\ 1+npacketsold^0-npackets^0 <= 0 /\ -npackets^post11+npackets^0 == 0 /\ -tmp___0^post11+tmp___0^0 == 0), cost: 1
	New rule:
	l3 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1+npacketsold^0-npackets^0 <= 0), cost: 1
	
		propagated equality npacketsold^post11 = npacketsold^0
		
		propagated equality tmp^post11 = tmp^0
		
		propagated equality loop_count^post11 = loop_count^0
		
		propagated equality loop_max^post11 = loop_max^0
		
		propagated equality npackets^post11 = npackets^0
		
		propagated equality tmp___0^post11 = tmp___0^0
		
	Simplified Guard

	Original rule:
	l3 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1+npacketsold^0-npackets^0 <= 0), cost: 1
	New rule:
	l3 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1+npacketsold^0-npackets^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1+npacketsold^0-npackets^0 <= 0, cost: 1
	New rule:
	l3 -> l8 : 1+npacketsold^0-npackets^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l8 : loop_count^0'=loop_count^post12, loop_max^0'=loop_max^post12, npackets^0'=npackets^post12, npacketsold^0'=npacketsold^post12, tmp^0'=tmp^post12, tmp___0^0'=tmp___0^post12, (-tmp___0^post12+tmp___0^0 == 0 /\ tmp^0-tmp^post12 == 0 /\ npacketsold^0-npacketsold^post12 == 0 /\ loop_max^0-loop_max^post12 == 0 /\ -loop_count^post12+loop_count^0 == 0 /\ 1-npacketsold^0+npackets^0 <= 0 /\ -npackets^post12+npackets^0 == 0), cost: 1
	New rule:
	l3 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1-npacketsold^0+npackets^0 <= 0), cost: 1
	
		propagated equality tmp___0^post12 = tmp___0^0
		
		propagated equality tmp^post12 = tmp^0
		
		propagated equality npacketsold^post12 = npacketsold^0
		
		propagated equality loop_max^post12 = loop_max^0
		
		propagated equality loop_count^post12 = loop_count^0
		
		propagated equality npackets^post12 = npackets^0
		
	Simplified Guard

	Original rule:
	l3 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1-npacketsold^0+npackets^0 <= 0), cost: 1
	New rule:
	l3 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1-npacketsold^0+npackets^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1-npacketsold^0+npackets^0 <= 0, cost: 1
	New rule:
	l3 -> l8 : 1-npacketsold^0+npackets^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l3 -> l6 : loop_count^0'=loop_count^post13, loop_max^0'=loop_max^post13, npackets^0'=npackets^post13, npacketsold^0'=npacketsold^post13, tmp^0'=tmp^post13, tmp___0^0'=tmp___0^post13, (tmp^0-tmp^post13 == 0 /\ -npackets^post13+npackets^0 == 0 /\ -loop_count^post13+loop_count^0 == 0 /\ -tmp___0^post13+tmp___0^0 == 0 /\ -npacketsold^post13+npacketsold^0 == 0 /\ npacketsold^0-npackets^0 <= 0 /\ loop_max^0-loop_max^post13 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : loop_count^0'=loop_count^post13, loop_max^0'=loop_max^post13, npackets^0'=npackets^post13, npacketsold^0'=npacketsold^post13, tmp^0'=tmp^post13, tmp___0^0'=tmp___0^post13, (tmp^0-tmp^post13 == 0 /\ -npackets^post13+npackets^0 == 0 /\ -loop_count^post13+loop_count^0 == 0 /\ -tmp___0^post13+tmp___0^0 == 0 /\ -npacketsold^post13+npacketsold^0 == 0 /\ npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ loop_max^0-loop_max^post13 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l6 : loop_count^0'=loop_count^post13, loop_max^0'=loop_max^post13, npackets^0'=npackets^post13, npacketsold^0'=npacketsold^post13, tmp^0'=tmp^post13, tmp___0^0'=tmp___0^post13, (tmp^0-tmp^post13 == 0 /\ -npackets^post13+npackets^0 == 0 /\ -loop_count^post13+loop_count^0 == 0 /\ -tmp___0^post13+tmp___0^0 == 0 /\ -npacketsold^post13+npacketsold^0 == 0 /\ npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ loop_max^0-loop_max^post13 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	
		propagated equality tmp^post13 = tmp^0
		
		propagated equality npackets^post13 = npackets^0
		
		propagated equality loop_count^post13 = loop_count^0
		
		propagated equality tmp___0^post13 = tmp___0^0
		
		propagated equality npacketsold^post13 = npacketsold^0
		
		propagated equality loop_max^post13 = loop_max^0
		
	Simplified Guard

	Original rule:
	l3 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l3 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l6 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : (npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l9 -> l3 : loop_count^0'=loop_count^post14, loop_max^0'=loop_max^post14, npackets^0'=npackets^post14, npacketsold^0'=npacketsold^post14, tmp^0'=tmp^post14, tmp___0^0'=tmp___0^post14, (tmp^0-tmp^post14 == 0 /\ loop_max^0-loop_max^post14 == 0 /\ -1+loop_count^post14-loop_count^0 == 0 /\ -npacketsold^post14+npacketsold^0 == 0 /\ -npackets^post14+npackets^0 == 0 /\ tmp___0^0-tmp___0^post14 == 0), cost: 1
	New rule:
	l9 -> l3 : loop_count^0'=1+loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality tmp^post14 = tmp^0
		
		propagated equality loop_max^post14 = loop_max^0
		
		propagated equality loop_count^post14 = 1+loop_count^0
		
		propagated equality npacketsold^post14 = npacketsold^0
		
		propagated equality npackets^post14 = npackets^0
		
		propagated equality tmp___0^post14 = tmp___0^0
		
	Simplified Guard

	Original rule:
	l9 -> l3 : loop_count^0'=1+loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l9 -> l3 : loop_count^0'=1+loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l9 -> l3 : loop_count^0'=1+loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l9 -> l3 : loop_count^0'=1+loop_count^0, T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l10 -> l3 : loop_count^0'=loop_count^post15, loop_max^0'=loop_max^post15, npackets^0'=npackets^post15, npacketsold^0'=npacketsold^post15, tmp^0'=tmp^post15, tmp___0^0'=tmp___0^post15, (-npackets^post15+npackets^0 == 0 /\ -loop_count^post15+loop_count^0 == 0 /\ -tmp___0^post15+tmp___0^0 == 0 /\ -npacketsold^post15+npacketsold^0 == 0 /\ tmp^0-tmp^post15 == 0 /\ loop_max^0-loop_max^post15 == 0 /\ -tmp___0^0 <= 0 /\ tmp___0^0 <= 0), cost: 1
	New rule:
	l10 -> l3 : loop_count^0'=loop_count^post15, loop_max^0'=loop_max^post15, npackets^0'=npackets^post15, npacketsold^0'=npacketsold^post15, tmp^0'=tmp^post15, tmp___0^0'=tmp___0^post15, (-npackets^post15+npackets^0 == 0 /\ -loop_count^post15+loop_count^0 == 0 /\ -tmp___0^post15+tmp___0^0 == 0 /\ -npacketsold^post15+npacketsold^0 == 0 /\ tmp^0-tmp^post15 == 0 /\ loop_max^0-loop_max^post15 == 0 /\ -tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l10 -> l3 : loop_count^0'=loop_count^post15, loop_max^0'=loop_max^post15, npackets^0'=npackets^post15, npacketsold^0'=npacketsold^post15, tmp^0'=tmp^post15, tmp___0^0'=tmp___0^post15, (-npackets^post15+npackets^0 == 0 /\ -loop_count^post15+loop_count^0 == 0 /\ -tmp___0^post15+tmp___0^0 == 0 /\ -npacketsold^post15+npacketsold^0 == 0 /\ tmp^0-tmp^post15 == 0 /\ loop_max^0-loop_max^post15 == 0 /\ -tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
	New rule:
	l10 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ -tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
	
		propagated equality npackets^post15 = npackets^0
		
		propagated equality loop_count^post15 = loop_count^0
		
		propagated equality tmp___0^post15 = tmp___0^0
		
		propagated equality npacketsold^post15 = npacketsold^0
		
		propagated equality tmp^post15 = tmp^0
		
		propagated equality loop_max^post15 = loop_max^0
		
	Simplified Guard

	Original rule:
	l10 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ -tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
	New rule:
	l10 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l10 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
	New rule:
	l10 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l10 -> l3 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
	New rule:
	l10 -> l3 : (-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l10 -> l9 : loop_count^0'=loop_count^post16, loop_max^0'=loop_max^post16, npackets^0'=npackets^post16, npacketsold^0'=npacketsold^post16, tmp^0'=tmp^post16, tmp___0^0'=tmp___0^post16, (loop_count^0-loop_count^post16 == 0 /\ -tmp___0^post16+tmp___0^0 == 0 /\ 1-tmp___0^0 <= 0 /\ tmp^0-tmp^post16 == 0 /\ -npackets^post16+npackets^0 == 0 /\ -loop_max^post16+loop_max^0 == 0 /\ npacketsold^0-npacketsold^post16 == 0), cost: 1
	New rule:
	l10 -> l9 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1-tmp___0^0 <= 0), cost: 1
	
		propagated equality loop_count^post16 = loop_count^0
		
		propagated equality tmp___0^post16 = tmp___0^0
		
		propagated equality tmp^post16 = tmp^0
		
		propagated equality npackets^post16 = npackets^0
		
		propagated equality loop_max^post16 = loop_max^0
		
		propagated equality npacketsold^post16 = npacketsold^0
		
	Simplified Guard

	Original rule:
	l10 -> l9 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1-tmp___0^0 <= 0), cost: 1
	New rule:
	l10 -> l9 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1-tmp___0^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l10 -> l9 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1-tmp___0^0 <= 0, cost: 1
	New rule:
	l10 -> l9 : 1-tmp___0^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l10 -> l9 : loop_count^0'=loop_count^post17, loop_max^0'=loop_max^post17, npackets^0'=npackets^post17, npacketsold^0'=npacketsold^post17, tmp^0'=tmp^post17, tmp___0^0'=tmp___0^post17, (loop_count^0-loop_count^post17 == 0 /\ 1+tmp___0^0 <= 0 /\ -loop_max^post17+loop_max^0 == 0 /\ -tmp___0^post17+tmp___0^0 == 0 /\ tmp^0-tmp^post17 == 0 /\ npacketsold^0-npacketsold^post17 == 0 /\ -npackets^post17+npackets^0 == 0), cost: 1
	New rule:
	l10 -> l9 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1+tmp___0^0 <= 0), cost: 1
	
		propagated equality loop_count^post17 = loop_count^0
		
		propagated equality loop_max^post17 = loop_max^0
		
		propagated equality tmp___0^post17 = tmp___0^0
		
		propagated equality tmp^post17 = tmp^0
		
		propagated equality npacketsold^post17 = npacketsold^0
		
		propagated equality npackets^post17 = npackets^0
		
	Simplified Guard

	Original rule:
	l10 -> l9 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1+tmp___0^0 <= 0), cost: 1
	New rule:
	l10 -> l9 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1+tmp___0^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l10 -> l9 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1+tmp___0^0 <= 0, cost: 1
	New rule:
	l10 -> l9 : 1+tmp___0^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l11 -> l10 : loop_count^0'=loop_count^post18, loop_max^0'=loop_max^post18, npackets^0'=npackets^post18, npacketsold^0'=npacketsold^post18, tmp^0'=tmp^post18, tmp___0^0'=tmp___0^post18, (0 == 0 /\ npacketsold^0-npacketsold^post18 == 0 /\ loop_count^0-loop_count^post18 == 0 /\ -tmp^post18+tmp^0 == 0 /\ -npackets^post18+npackets^0 == 0 /\ -loop_max^post18+loop_max^0 == 0), cost: 1
	New rule:
	l11 -> l10 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^post18, 0 == 0, cost: 1
	
		propagated equality npacketsold^post18 = npacketsold^0
		
		propagated equality loop_count^post18 = loop_count^0
		
		propagated equality tmp^post18 = tmp^0
		
		propagated equality npackets^post18 = npackets^0
		
		propagated equality loop_max^post18 = loop_max^0
		
	Simplified Guard

	Original rule:
	l11 -> l10 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^post18, 0 == 0, cost: 1
	New rule:
	l11 -> l10 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^post18, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l11 -> l10 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^post18, T, cost: 1
	New rule:
	l11 -> l10 : tmp___0^0'=tmp___0^post18, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l12 -> l11 : loop_count^0'=loop_count^post19, loop_max^0'=loop_max^post19, npackets^0'=npackets^post19, npacketsold^0'=npacketsold^post19, tmp^0'=tmp^post19, tmp___0^0'=tmp___0^post19, (-loop_count^post19+loop_count^0 == 0 /\ -tmp___0^post19+tmp___0^0 == 0 /\ npacketsold^0-npacketsold^post19 == 0 /\ -1+npackets^post19-npackets^0 == 0 /\ tmp^0-tmp^post19 == 0 /\ loop_max^0-loop_max^post19 == 0), cost: 1
	New rule:
	l12 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=1+npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality loop_count^post19 = loop_count^0
		
		propagated equality tmp___0^post19 = tmp___0^0
		
		propagated equality npacketsold^post19 = npacketsold^0
		
		propagated equality npackets^post19 = 1+npackets^0
		
		propagated equality tmp^post19 = tmp^0
		
		propagated equality loop_max^post19 = loop_max^0
		
	Simplified Guard

	Original rule:
	l12 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=1+npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l12 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=1+npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l12 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=1+npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l12 -> l11 : npackets^0'=1+npackets^0, T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l13 -> l11 : loop_count^0'=loop_count^post20, loop_max^0'=loop_max^post20, npackets^0'=npackets^post20, npacketsold^0'=npacketsold^post20, tmp^0'=tmp^post20, tmp___0^0'=tmp___0^post20, (npacketsold^0-npacketsold^post20 == 0 /\ tmp^0 <= 0 /\ -tmp^0 <= 0 /\ -npackets^post20+npackets^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ loop_count^0-loop_count^post20 == 0 /\ -tmp___0^post20+tmp___0^0 == 0 /\ -loop_max^post20+loop_max^0 == 0), cost: 1
	New rule:
	l13 -> l11 : loop_count^0'=loop_count^post20, loop_max^0'=loop_max^post20, npackets^0'=npackets^post20, npacketsold^0'=npacketsold^post20, tmp^0'=tmp^post20, tmp___0^0'=tmp___0^post20, (npacketsold^0-npacketsold^post20 == 0 /\ tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0 /\ -npackets^post20+npackets^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ loop_count^0-loop_count^post20 == 0 /\ -tmp___0^post20+tmp___0^0 == 0 /\ -loop_max^post20+loop_max^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l13 -> l11 : loop_count^0'=loop_count^post20, loop_max^0'=loop_max^post20, npackets^0'=npackets^post20, npacketsold^0'=npacketsold^post20, tmp^0'=tmp^post20, tmp___0^0'=tmp___0^post20, (npacketsold^0-npacketsold^post20 == 0 /\ tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0 /\ -npackets^post20+npackets^0 == 0 /\ -tmp^post20+tmp^0 == 0 /\ loop_count^0-loop_count^post20 == 0 /\ -tmp___0^post20+tmp___0^0 == 0 /\ -loop_max^post20+loop_max^0 == 0), cost: 1
	New rule:
	l13 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
	
		propagated equality npacketsold^post20 = npacketsold^0
		
		propagated equality npackets^post20 = npackets^0
		
		propagated equality tmp^post20 = tmp^0
		
		propagated equality loop_count^post20 = loop_count^0
		
		propagated equality tmp___0^post20 = tmp___0^0
		
		propagated equality loop_max^post20 = loop_max^0
		
	Simplified Guard

	Original rule:
	l13 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
	New rule:
	l13 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l13 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
	New rule:
	l13 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l11 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
	New rule:
	l13 -> l11 : (tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l13 -> l12 : loop_count^0'=loop_count^post21, loop_max^0'=loop_max^post21, npackets^0'=npackets^post21, npacketsold^0'=npacketsold^post21, tmp^0'=tmp^post21, tmp___0^0'=tmp___0^post21, (tmp^0-tmp^post21 == 0 /\ 1-tmp^0 <= 0 /\ npacketsold^0-npacketsold^post21 == 0 /\ -tmp___0^post21+tmp___0^0 == 0 /\ loop_max^0-loop_max^post21 == 0 /\ -loop_count^post21+loop_count^0 == 0 /\ -npackets^post21+npackets^0 == 0), cost: 1
	New rule:
	l13 -> l12 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1-tmp^0 <= 0), cost: 1
	
		propagated equality tmp^post21 = tmp^0
		
		propagated equality npacketsold^post21 = npacketsold^0
		
		propagated equality tmp___0^post21 = tmp___0^0
		
		propagated equality loop_max^post21 = loop_max^0
		
		propagated equality loop_count^post21 = loop_count^0
		
		propagated equality npackets^post21 = npackets^0
		
	Simplified Guard

	Original rule:
	l13 -> l12 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1-tmp^0 <= 0), cost: 1
	New rule:
	l13 -> l12 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1-tmp^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l12 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1-tmp^0 <= 0, cost: 1
	New rule:
	l13 -> l12 : 1-tmp^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l13 -> l12 : loop_count^0'=loop_count^post22, loop_max^0'=loop_max^post22, npackets^0'=npackets^post22, npacketsold^0'=npacketsold^post22, tmp^0'=tmp^post22, tmp___0^0'=tmp___0^post22, (-npackets^post22+npackets^0 == 0 /\ -tmp___0^post22+tmp___0^0 == 0 /\ tmp^0-tmp^post22 == 0 /\ npacketsold^0-npacketsold^post22 == 0 /\ -loop_count^post22+loop_count^0 == 0 /\ 1+tmp^0 <= 0 /\ loop_max^0-loop_max^post22 == 0), cost: 1
	New rule:
	l13 -> l12 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1+tmp^0 <= 0), cost: 1
	
		propagated equality npackets^post22 = npackets^0
		
		propagated equality tmp___0^post22 = tmp___0^0
		
		propagated equality tmp^post22 = tmp^0
		
		propagated equality npacketsold^post22 = npacketsold^0
		
		propagated equality loop_count^post22 = loop_count^0
		
		propagated equality loop_max^post22 = loop_max^0
		
	Simplified Guard

	Original rule:
	l13 -> l12 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, (0 == 0 /\ 1+tmp^0 <= 0), cost: 1
	New rule:
	l13 -> l12 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1+tmp^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l12 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 1+tmp^0 <= 0, cost: 1
	New rule:
	l13 -> l12 : 1+tmp^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l5 : loop_count^0'=loop_count^post25, loop_max^0'=loop_max^post25, npackets^0'=npackets^post25, npacketsold^0'=npacketsold^post25, tmp^0'=tmp^post25, tmp___0^0'=tmp___0^post25, (-loop_count^post25+loop_count^0 == 0 /\ -npackets^post25+npackets^0 == 0 /\ tmp^0-tmp^post25 == 0 /\ loop_max^0-loop_max^post25 == 0 /\ npacketsold^post25-npackets^0 == 0 /\ -tmp___0^post25+tmp___0^0 == 0), cost: 1
	New rule:
	l8 -> l5 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npackets^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality loop_count^post25 = loop_count^0
		
		propagated equality npackets^post25 = npackets^0
		
		propagated equality tmp^post25 = tmp^0
		
		propagated equality loop_max^post25 = loop_max^0
		
		propagated equality npacketsold^post25 = npackets^0
		
		propagated equality tmp___0^post25 = tmp___0^0
		
	Simplified Guard

	Original rule:
	l8 -> l5 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npackets^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l8 -> l5 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npackets^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l5 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npackets^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l8 -> l5 : npacketsold^0'=npackets^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l15 -> l8 : loop_count^0'=loop_count^post26, loop_max^0'=loop_max^post26, npackets^0'=npackets^post26, npacketsold^0'=npacketsold^post26, tmp^0'=tmp^post26, tmp___0^0'=tmp___0^post26, (loop_count^0-loop_count^post26 == 0 /\ -loop_max^post26+loop_max^0 == 0 /\ -tmp___0^post26+tmp___0^0 == 0 /\ tmp^0-tmp^post26 == 0 /\ -npackets^post26+npackets^0 == 0 /\ npacketsold^0-npacketsold^post26 == 0), cost: 1
	New rule:
	l15 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality loop_count^post26 = loop_count^0
		
		propagated equality loop_max^post26 = loop_max^0
		
		propagated equality tmp___0^post26 = tmp___0^0
		
		propagated equality tmp^post26 = tmp^0
		
		propagated equality npackets^post26 = npackets^0
		
		propagated equality npacketsold^post26 = npacketsold^0
		
	Simplified Guard

	Original rule:
	l15 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l15 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l15 -> l8 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^0, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l15 -> l8 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l13 : loop_count^0'=loop_count^post23, loop_max^0'=loop_max^post23, npackets^0'=npackets^post23, npacketsold^0'=npacketsold^post23, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post23, (0 == 0 /\ npacketsold^0-npacketsold^post1 == 0 /\ npackets^post1-npackets^post24 == 0 /\ loop_max^post1-loop_max^post24 == 0 /\ -tmp^post1+tmp^0 == 0 /\ loop_count^0-loop_count^post1 == 0 /\ -npackets^post1+npackets^0 == 0 /\ -npacketsold^post24+npacketsold^post1 == 0 /\ tmp^post1-tmp^post24 == 0 /\ loop_max^post24-loop_max^post23 == 0 /\ -npackets^post23+npackets^post24 == 0 /\ npacketsold^post24-npacketsold^post23 == 0 /\ -tmp___0^post1+tmp___0^0 == 0 /\ tmp___0^post1-tmp___0^post24 == 0 /\ loop_count^post24-loop_count^post23 == 0 /\ -loop_max^post1+loop_max^0 == 0 /\ -loop_count^post24+loop_count^post1 == 0 /\ -tmp___0^post23+tmp___0^post24 == 0), cost: 1
	New rule:
	l0 -> l13 : loop_count^0'=loop_count^post24, loop_max^0'=loop_max^post24, npackets^0'=npackets^post24, npacketsold^0'=npacketsold^post24, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post24, (0 == 0 /\ npacketsold^0-npacketsold^post1 == 0 /\ npackets^post1-npackets^post24 == 0 /\ loop_max^post1-loop_max^post24 == 0 /\ -tmp^post1+tmp^0 == 0 /\ loop_count^0-loop_count^post1 == 0 /\ -npackets^post1+npackets^0 == 0 /\ -npacketsold^post24+npacketsold^post1 == 0 /\ tmp^post1-tmp^post24 == 0 /\ -tmp___0^post1+tmp___0^0 == 0 /\ tmp___0^post1-tmp___0^post24 == 0 /\ -loop_max^post1+loop_max^0 == 0 /\ -loop_count^post24+loop_count^post1 == 0), cost: 1
	
		propagated equality loop_max^post23 = loop_max^post24
		
		propagated equality npackets^post23 = npackets^post24
		
		propagated equality npacketsold^post23 = npacketsold^post24
		
		propagated equality loop_count^post23 = loop_count^post24
		
		propagated equality tmp___0^post23 = tmp___0^post24
		
	Propagated Equalities

	Original rule:
	l0 -> l13 : loop_count^0'=loop_count^post24, loop_max^0'=loop_max^post24, npackets^0'=npackets^post24, npacketsold^0'=npacketsold^post24, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^post24, (0 == 0 /\ npacketsold^0-npacketsold^post1 == 0 /\ npackets^post1-npackets^post24 == 0 /\ loop_max^post1-loop_max^post24 == 0 /\ -tmp^post1+tmp^0 == 0 /\ loop_count^0-loop_count^post1 == 0 /\ -npackets^post1+npackets^0 == 0 /\ -npacketsold^post24+npacketsold^post1 == 0 /\ tmp^post1-tmp^post24 == 0 /\ -tmp___0^post1+tmp___0^0 == 0 /\ tmp___0^post1-tmp___0^post24 == 0 /\ -loop_max^post1+loop_max^0 == 0 /\ -loop_count^post24+loop_count^post1 == 0), cost: 1
	New rule:
	l0 -> l13 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	
		propagated equality npacketsold^post1 = npacketsold^0
		
		propagated equality npackets^post1 = npackets^post24
		
		propagated equality loop_max^post1 = loop_max^post24
		
		propagated equality tmp^post1 = tmp^0
		
		propagated equality loop_count^post1 = loop_count^0
		
		propagated equality npackets^post24 = npackets^0
		
		propagated equality npacketsold^post24 = npacketsold^0
		
		propagated equality tmp^post24 = tmp^0
		
		propagated equality tmp___0^post1 = tmp___0^0
		
		propagated equality tmp___0^post24 = tmp___0^0
		
		propagated equality loop_max^post24 = loop_max^0
		
		propagated equality loop_count^post24 = loop_count^0
		
	Simplified Guard

	Original rule:
	l0 -> l13 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^0, 0 == 0, cost: 1
	New rule:
	l0 -> l13 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l13 : loop_count^0'=loop_count^0, loop_max^0'=loop_max^0, npackets^0'=npackets^0, npacketsold^0'=npacketsold^0, tmp^0'=tmp^post23, tmp___0^0'=tmp___0^0, T, cost: 1
	New rule:
	l0 -> l13 : tmp^0'=tmp^post23, T, cost: 1

Step with 50

	Trace

	50[T]
	
	Blocked

	[{}, {}]

Step with 49

	Trace

	50[T], 49[T]
	
	Blocked

	[{}, {}, {}]

Step with 35

	Trace

	50[T], 49[T], 35[(loop_max^0-loop_count^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 36

	Trace

	50[T], 49[T], 35[(loop_max^0-loop_count^0 <= 0)], 36[T]
	
	Blocked

	[{}, {}, {}, {}, {}]

Backtrack

	Trace

	50[T], 49[T], 35[(loop_max^0-loop_count^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {36[T]}]

Backtrack

	Trace

	50[T], 49[T]
	
	Blocked

	[{}, {}, {35[T]}]

Step with 34

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}]

Step with 31

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}]

Step with 28

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}]

Step with 51

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}]

Step with 46

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}]

Step with 44

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {}]

Step with 41

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 41[(-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {}, {}]

Step with 39

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 41[(-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0)], 39[(npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 36

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 41[(-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0)], 39[(npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0)], 36[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 41[(-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0)], 39[(npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {}, {}, {36[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 41[(-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {}, {39[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T]}]

Step with 42

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 42[(1-tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T]}, {}]

Step with 40

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 42[(1-tmp___0^0 <= 0)], 40[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T]}, {}, {}]

Step with 39

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 42[(1-tmp___0^0 <= 0)], 40[T], 39[(npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T]}, {}, {}, {}]

Step with 36

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 42[(1-tmp___0^0 <= 0)], 40[T], 39[(npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0)], 36[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T]}, {}, {}, {}, {}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 42[(1-tmp___0^0 <= 0)], 40[T], 39[(npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T]}, {}, {}, {36[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 42[(1-tmp___0^0 <= 0)], 40[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T]}, {}, {39[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 42[(1-tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T]}, {40[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T], 42[T]}]

Step with 43

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 43[(1+tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T], 42[T]}, {}]

Step with 40

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T], 42[T]}, {}, {}]

Step with 39

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T], 39[(npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T], 42[T]}, {}, {}, {}]

Step with 36

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T], 39[(npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0)], 36[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T], 42[T]}, {}, {}, {}, {}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T], 39[(npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T], 42[T]}, {}, {}, {36[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T], 42[T]}, {}, {39[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T], 43[(1+tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T], 42[T]}, {40[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)], 44[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {}, {41[T], 42[T], 43[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 46[(tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {}, {44[T]}]

Backtrack

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {46[T]}]

Step with 47

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {46[T]}, {}]

Step with 45

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {46[T]}, {}, {}]

Step with 44

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {46[T]}, {}, {}, {}]

Step with 43

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 43[(1+tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {46[T]}, {}, {}, {}, {}]

Step with 40

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {46[T]}, {}, {}, {}, {}, {}]

Step with 37

	Trace

	50[T], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T], 37[(1+npacketsold^0-npackets^0 <= 0)]
	
	Blocked

	[{}, {}, {35[T]}, {}, {}, {}, {46[T]}, {}, {}, {}, {}, {39[T]}, {}]

Accelerate

Start location: l15
Program variables: loop_count^0 loop_max^0 npackets^0 npacketsold^0 tmp^0 tmp___0^0
  51: l0 -> l13 : tmp^0'=tmp^post23, T, cost: 1
  28: l2 -> l0 : T, cost: 1
  29: l2 -> l0 : T, cost: 1
  30: l2 -> l3 : T, cost: 1
  37: l3 -> l8 : 1+npacketsold^0-npackets^0 <= 0, cost: 1
  38: l3 -> l8 : 1-npacketsold^0+npackets^0 <= 0, cost: 1
  39: l3 -> l6 : (npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
  31: l4 -> l2 : T, cost: 1
  32: l4 -> l2 : T, cost: 1
  33: l4 -> l3 : T, cost: 1
  34: l5 -> l4 : 1-loop_max^0+loop_count^0 <= 0, cost: 1
  35: l5 -> l6 : loop_max^0-loop_count^0 <= 0, cost: 1
  36: l6 -> l7 : T, cost: 1
  49: l8 -> l5 : npacketsold^0'=npackets^0, T, cost: 1
  52: l8 -> l8 : loop_count^0'=n+loop_count^0, npackets^0'=n+npackets^0, npacketsold^0'=-1+n+npackets^0, tmp^0'=tmp^post231, tmp___0^0'=tmp___0^post182, (-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0), cost: 1
  40: l9 -> l3 : loop_count^0'=1+loop_count^0, T, cost: 1
  41: l10 -> l3 : (-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
  42: l10 -> l9 : 1-tmp___0^0 <= 0, cost: 1
  43: l10 -> l9 : 1+tmp___0^0 <= 0, cost: 1
  44: l11 -> l10 : tmp___0^0'=tmp___0^post18, T, cost: 1
  45: l12 -> l11 : npackets^0'=1+npackets^0, T, cost: 1
  46: l13 -> l11 : (tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
  47: l13 -> l12 : 1-tmp^0 <= 0, cost: 1
  48: l13 -> l12 : 1+tmp^0 <= 0, cost: 1
  50: l15 -> l8 : T, cost: 1

	Loop Acceleration

	Original rule:
	l8 -> l8 : loop_count^0'=1+loop_count^0, npackets^0'=1+npackets^0, npacketsold^0'=npackets^0, tmp^0'=tmp^post231, tmp___0^0'=tmp___0^post182, (1-loop_max^0+loop_count^0 <= 0 /\ 1-tmp^post231 <= 0 /\ 1+tmp___0^post182 <= 0), cost: 1
	New rule:
	l8 -> l8 : loop_count^0'=n+loop_count^0, npackets^0'=n+npackets^0, npacketsold^0'=-1+n+npackets^0, tmp^0'=tmp^post231, tmp___0^0'=tmp___0^post182, (-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0), cost: 1

		-1+tmp^post231 >= 0 [0]: monotonic increase yields -1+tmp^post231 >= 0
		
		-1+loop_max^0-loop_count^0 >= 0 [0]: montonic decrease yields loop_max^0-n-loop_count^0 >= 0
		
		-1+loop_max^0-loop_count^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+loop_max^0-loop_count^0 >= 0)
		
		-1-tmp___0^post182 >= 0 [0]: monotonic increase yields -1-tmp___0^post182 >= 0
		
		Replacement map: {-1+tmp^post231 >= 0 -> -1+tmp^post231 >= 0, -1+loop_max^0-loop_count^0 >= 0 -> loop_max^0-n-loop_count^0 >= 0, -1-tmp___0^post182 >= 0 -> -1-tmp___0^post182 >= 0}

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)]
	
	Blocked

	[{}, {}, {52[T]}]

Step with 49

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T]
	
	Blocked

	[{}, {}, {52[T]}, {}]

Step with 34

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}]

Step with 31

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}]

Step with 28

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}]

Step with 51

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}]

Step with 47

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}]

Step with 45

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}]

Step with 44

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 43

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 43[(1+tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 40

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 37

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T], 37[(1+npacketsold^0-npackets^0 <= 0)]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Covered

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 43[(1+tmp___0^0 <= 0)], 40[T]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {37[T]}]

Backtrack

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 43[(1+tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}, {}, {40[T]}]

Backtrack

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}, {43[T]}]

Step with 41

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 41[(-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0)]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}, {43[T]}, {}]

Step with 37

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 49[T], 34[(1-loop_max^0+loop_count^0 <= 0)], 31[T], 28[T], 51[T], 47[(1-tmp^0 <= 0)], 45[T], 44[T], 41[(-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0)], 37[(1+npacketsold^0-npackets^0 <= 0)]
	
	Blocked

	[{}, {}, {52[T]}, {}, {}, {}, {}, {}, {}, {}, {43[T]}, {}, {}]

Nonterm

Start location: l15
Program variables: loop_count^0 loop_max^0 npackets^0 npacketsold^0 tmp^0 tmp___0^0
  51: l0 -> l13 : tmp^0'=tmp^post23, T, cost: 1
  28: l2 -> l0 : T, cost: 1
  29: l2 -> l0 : T, cost: 1
  30: l2 -> l3 : T, cost: 1
  37: l3 -> l8 : 1+npacketsold^0-npackets^0 <= 0, cost: 1
  38: l3 -> l8 : 1-npacketsold^0+npackets^0 <= 0, cost: 1
  39: l3 -> l6 : (npacketsold^0-npackets^0 <= 0 /\ npacketsold^0-npackets^0 == 0 /\ -npacketsold^0+npackets^0 <= 0), cost: 1
  31: l4 -> l2 : T, cost: 1
  32: l4 -> l2 : T, cost: 1
  33: l4 -> l3 : T, cost: 1
  34: l5 -> l4 : 1-loop_max^0+loop_count^0 <= 0, cost: 1
  35: l5 -> l6 : loop_max^0-loop_count^0 <= 0, cost: 1
  36: l6 -> l7 : T, cost: 1
  49: l8 -> l5 : npacketsold^0'=npackets^0, T, cost: 1
  52: l8 -> l8 : loop_count^0'=n+loop_count^0, npackets^0'=n+npackets^0, npacketsold^0'=-1+n+npackets^0, tmp^0'=tmp^post231, tmp___0^0'=tmp___0^post182, (-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0), cost: 1
  53: l8 -> LoAT_sink : (-1+n2 >= 0 /\ -1+tmp^post232 >= 0 /\ -1+loop_max^0-loop_count^0 >= 0), cost: NONTERM
  54: l8 -> l8 : npackets^0'=n2+npackets^0, npacketsold^0'=-1+n2+npackets^0, tmp^0'=tmp^post232, tmp___0^0'=0, (-1+n2 >= 0 /\ -1+tmp^post232 >= 0 /\ -1+loop_max^0-loop_count^0 >= 0), cost: 1
  40: l9 -> l3 : loop_count^0'=1+loop_count^0, T, cost: 1
  41: l10 -> l3 : (-tmp___0^0 <= 0 /\ -tmp___0^0 == 0 /\ tmp___0^0 <= 0), cost: 1
  42: l10 -> l9 : 1-tmp___0^0 <= 0, cost: 1
  43: l10 -> l9 : 1+tmp___0^0 <= 0, cost: 1
  44: l11 -> l10 : tmp___0^0'=tmp___0^post18, T, cost: 1
  45: l12 -> l11 : npackets^0'=1+npackets^0, T, cost: 1
  46: l13 -> l11 : (tmp^0 <= 0 /\ tmp^0 == 0 /\ -tmp^0 <= 0), cost: 1
  47: l13 -> l12 : 1-tmp^0 <= 0, cost: 1
  48: l13 -> l12 : 1+tmp^0 <= 0, cost: 1
  50: l15 -> l8 : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l8 -> l8 : npackets^0'=1+npackets^0, npacketsold^0'=npackets^0, tmp^0'=tmp^post232, tmp___0^0'=0, (1-tmp^post232 <= 0 /\ 1-loop_max^0+loop_count^0 <= 0), cost: 1
	New rule:
	l8 -> LoAT_sink : (-1+n2 >= 0 /\ -1+tmp^post232 >= 0 /\ -1+loop_max^0-loop_count^0 >= 0), cost: NONTERM

		-1+tmp^post232 >= 0 [0]: monotonic increase yields -1+tmp^post232 >= 0
		
		-1+loop_max^0-loop_count^0 >= 0 [0]: monotonic increase yields -1+loop_max^0-loop_count^0 >= 0
		
		Replacement map: {-1+tmp^post232 >= 0 -> -1+tmp^post232 >= 0, -1+loop_max^0-loop_count^0 >= 0 -> -1+loop_max^0-loop_count^0 >= 0}

	Loop Acceleration

	Original rule:
	l8 -> l8 : npackets^0'=1+npackets^0, npacketsold^0'=npackets^0, tmp^0'=tmp^post232, tmp___0^0'=0, (1-tmp^post232 <= 0 /\ 1-loop_max^0+loop_count^0 <= 0), cost: 1
	New rule:
	l8 -> l8 : npackets^0'=n2+npackets^0, npacketsold^0'=-1+n2+npackets^0, tmp^0'=tmp^post232, tmp___0^0'=0, (-1+n2 >= 0 /\ -1+tmp^post232 >= 0 /\ -1+loop_max^0-loop_count^0 >= 0), cost: 1

		-1+tmp^post232 >= 0 [0]: monotonic increase yields -1+tmp^post232 >= 0
		
		-1+loop_max^0-loop_count^0 >= 0 [0]: monotonic increase yields -1+loop_max^0-loop_count^0 >= 0
		
		Replacement map: {-1+tmp^post232 >= 0 -> -1+tmp^post232 >= 0, -1+loop_max^0-loop_count^0 >= 0 -> -1+loop_max^0-loop_count^0 >= 0}

Step with 53

	Trace

	50[T], 52[(-1+tmp^post231 >= 0 /\ loop_max^0-n-loop_count^0 >= 0 /\ -1+n >= 0 /\ -1-tmp___0^post182 >= 0)], 53[(-1+n2 >= 0 /\ -1+tmp^post232 >= 0 /\ -1+loop_max^0-loop_count^0 >= 0)]
	
	Blocked

	[{}, {}, {52[T]}, {53[T]}]

Refute

	Counterexample

	[ loop_count^0=-2 loop_max^0=0 npackets^0=0 npacketsold^0=0 tmp^0=0 tmp___0^0=0 ] 50 [ loop_count^0=-1 loop_max^0=0 npackets^0=1 npacketsold^0=0 tmp^0=1 tmp___0^0=-1 ] 52 [ loop_count^0=-2 loop_max^0=0 npackets^0=0 npacketsold^0=0 tmp^0=0 tmp___0^0=0 ] 53
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
