unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8
   0: f1_0_main_Load -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, (arg2-arg3p1 == 0 /\ -1+arg1p1 > 0 /\ 1+arg2 > 0 /\ -1+arg1p1-arg1 <= 0 /\ 200-arg6p1 == 0 /\ -201+arg2p1-arg1 <= 0 /\ 200-arg7p1 == 0 /\ -arg5p1 == 0 /\ -arg4p1 == 0 /\ -201+arg2p1 > 0 /\ arg1 > 0), cost: 1
   1: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, (arg2 > 0 /\ -arg1p2+arg1 == 0 /\ arg3 > 0 /\ x11 > 0 /\ arg4-arg4p2 == 0 /\ arg2-arg2p2 == 0 /\ 2-arg2+arg6 <= 0 /\ arg5-arg5p2 == 0 /\ 2+arg5-arg1 <= 0 /\ x12 > 0 /\ -1 < 0 /\ -x11+arg1 >= 0 /\ arg7-arg7p2 == 0 /\ arg3-arg3p2 == 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ arg6-arg6p2 == 0 /\ 2+arg4-arg1 <= 0), cost: 1
   3: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, arg8'=arg8p4, (-arg6p4+arg6 == 0 /\ -arg1p4+arg1 == 0 /\ x21 > 0 /\ arg2 > 0 /\ 1-arg3p4 == 0 /\ -arg7p4+arg7 == 0 /\ 2-arg2+arg6 <= 0 /\ arg2-arg2p4 == 0 /\ 2+arg5-arg1 <= 0 /\ -arg4p4+arg4 == 0 /\ -arg2+x22 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ x22 > 0 /\ arg5-arg5p4 == 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   5: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, (-arg3p6+arg3 == 0 /\ x32 > 0 /\ arg2 > 0 /\ -arg6p6+arg6 == 0 /\ arg3 > 0 /\ -arg7p6+arg7 == 0 /\ -arg1p6+arg1 == 0 /\ arg2-arg2p6 == 0 /\ arg5-arg5p6 == 0 /\ 2-arg2+arg6 <= 0 /\ -arg4p6+arg4 == 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ -arg2+x33 <= 0 /\ 2-arg2+arg7 <= 0 /\ x33 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   2: f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-arg4p3+arg4 == 0 /\ -2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-arg5p3 == 0 /\ arg3 > 0 /\ -1-arg3p3+arg3 == 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ -1 < 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   4: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, (arg4p5 > 0 /\ arg2 > 0 /\ 1-arg1p5 == 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ -arg7p5+arg6 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg8p5+arg7 == 0 /\ -arg2p5 == 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   6: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, (arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ -1-arg2p7+arg3 == 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ -arg8p7+arg7 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg7p7+arg6 == 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ -arg1p7+arg3 == 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   7: f425_0_fractale_InvokeMethod -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, (-arg6p8+arg7 == 0 /\ arg5-arg4p8 == 0 /\ arg6-arg5p8 == 0 /\ 2+arg8-arg4 <= 0 /\ arg8-arg7p8 == 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ -arg3p8+arg2 == 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8
   1: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, (arg2 > 0 /\ -arg1p2+arg1 == 0 /\ arg3 > 0 /\ x11 > 0 /\ arg4-arg4p2 == 0 /\ arg2-arg2p2 == 0 /\ 2-arg2+arg6 <= 0 /\ arg5-arg5p2 == 0 /\ 2+arg5-arg1 <= 0 /\ x12 > 0 /\ -1 < 0 /\ -x11+arg1 >= 0 /\ arg7-arg7p2 == 0 /\ arg3-arg3p2 == 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ arg6-arg6p2 == 0 /\ 2+arg4-arg1 <= 0), cost: 1
   3: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, arg8'=arg8p4, (-arg6p4+arg6 == 0 /\ -arg1p4+arg1 == 0 /\ x21 > 0 /\ arg2 > 0 /\ 1-arg3p4 == 0 /\ -arg7p4+arg7 == 0 /\ 2-arg2+arg6 <= 0 /\ arg2-arg2p4 == 0 /\ 2+arg5-arg1 <= 0 /\ -arg4p4+arg4 == 0 /\ -arg2+x22 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ x22 > 0 /\ arg5-arg5p4 == 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   5: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, (-arg3p6+arg3 == 0 /\ x32 > 0 /\ arg2 > 0 /\ -arg6p6+arg6 == 0 /\ arg3 > 0 /\ -arg7p6+arg7 == 0 /\ -arg1p6+arg1 == 0 /\ arg2-arg2p6 == 0 /\ arg5-arg5p6 == 0 /\ 2-arg2+arg6 <= 0 /\ -arg4p6+arg4 == 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ -arg2+x33 <= 0 /\ 2-arg2+arg7 <= 0 /\ x33 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   2: f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-arg4p3+arg4 == 0 /\ -2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-arg5p3 == 0 /\ arg3 > 0 /\ -1-arg3p3+arg3 == 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ -1 < 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   4: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, (arg4p5 > 0 /\ arg2 > 0 /\ 1-arg1p5 == 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ -arg7p5+arg6 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg8p5+arg7 == 0 /\ -arg2p5 == 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   6: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, (arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ -1-arg2p7+arg3 == 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ -arg8p7+arg7 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg7p7+arg6 == 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ -arg1p7+arg3 == 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
   7: f425_0_fractale_InvokeMethod -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, (-arg6p8+arg7 == 0 /\ arg5-arg4p8 == 0 /\ arg6-arg5p8 == 0 /\ 2+arg8-arg4 <= 0 /\ arg8-arg7p8 == 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ -arg3p8+arg2 == 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
   9: __init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, (1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ arg1p9 > 0 /\ 200-arg6p1 == 0 /\ -201-arg1p9+arg2p1 <= 0 /\ 200-arg7p1 == 0 /\ -arg5p1 == 0 /\ arg2p9-arg3p1 == 0 /\ -1+arg1p1-arg1p9 <= 0 /\ -arg4p1 == 0 /\ -201+arg2p1 > 0), cost: 1

	Eliminating location f1_0_main_Load by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, T, cost: 1
	Second rule:
	f1_0_main_Load -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, (arg2-arg3p1 == 0 /\ -1+arg1p1 > 0 /\ 1+arg2 > 0 /\ -1+arg1p1-arg1 <= 0 /\ 200-arg6p1 == 0 /\ -201+arg2p1-arg1 <= 0 /\ 200-arg7p1 == 0 /\ -arg5p1 == 0 /\ -arg4p1 == 0 /\ -201+arg2p1 > 0 /\ arg1 > 0), cost: 1
	New rule:
	__init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, (1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ arg1p9 > 0 /\ 200-arg6p1 == 0 /\ -201-arg1p9+arg2p1 <= 0 /\ 200-arg7p1 == 0 /\ -arg5p1 == 0 /\ arg2p9-arg3p1 == 0 /\ -1+arg1p1-arg1p9 <= 0 /\ -arg4p1 == 0 /\ -201+arg2p1 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 8

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8
  10: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg8'=arg8p2, (arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg2-arg7 >= 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  12: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg3'=1, arg8'=arg8p4, (arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  14: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg8'=arg8p6, (arg2 > 0 /\ arg3 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  11: f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  13: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=1, arg2'=0, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg6, arg8'=arg7, (arg4p5 > 0 /\ arg2 > 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  15: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg3, arg2'=-1+arg3, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg6, arg8'=arg7, (arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  16: f425_0_fractale_InvokeMethod -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg2, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg8, arg8'=arg8p8, (2+arg8-arg4 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
  17: __init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg2p9, arg4'=0, arg5'=0, arg6'=200, arg7'=200, arg8'=arg8p1, (1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, (arg2 > 0 /\ -arg1p2+arg1 == 0 /\ arg3 > 0 /\ x11 > 0 /\ arg4-arg4p2 == 0 /\ arg2-arg2p2 == 0 /\ 2-arg2+arg6 <= 0 /\ arg5-arg5p2 == 0 /\ 2+arg5-arg1 <= 0 /\ x12 > 0 /\ -1 < 0 /\ -x11+arg1 >= 0 /\ arg7-arg7p2 == 0 /\ arg3-arg3p2 == 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ arg6-arg6p2 == 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p2, (0 == 0 /\ arg2 > 0 /\ arg3 > 0 /\ x11 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ x12 > 0 /\ -1 < 0 /\ -x11+arg1 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
		propagated equality arg1p2 = arg1
		
		propagated equality arg4p2 = arg4
		
		propagated equality arg2p2 = arg2
		
		propagated equality arg5p2 = arg5
		
		propagated equality arg7p2 = arg7
		
		propagated equality arg3p2 = arg3
		
		propagated equality arg6p2 = arg6
		
	Simplified Guard

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p2, (0 == 0 /\ arg2 > 0 /\ arg3 > 0 /\ x11 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ x12 > 0 /\ -1 < 0 /\ -x11+arg1 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p2, (arg2 > 0 /\ arg3 > 0 /\ x11 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ x12 > 0 /\ -x11+arg1 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p2, (arg2 > 0 /\ arg3 > 0 /\ x11 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ x12 > 0 /\ -x11+arg1 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p2, (arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg2-arg7 >= 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p2, (arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg2-arg7 >= 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg8'=arg8p2, (arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg2-arg7 >= 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-arg4p3+arg4 == 0 /\ -2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-arg5p3 == 0 /\ arg3 > 0 /\ -1-arg3p3+arg3 == 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ -1 < 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (0 == 0 /\ -2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ -1 < 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
		propagated equality arg4p3 = arg4
		
		propagated equality arg5p3 = arg5
		
		propagated equality arg3p3 = -1+arg3
		
	Simplified Guard

	Original rule:
	f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (0 == 0 /\ -2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ -1 < 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, arg8'=arg8p4, (-arg6p4+arg6 == 0 /\ -arg1p4+arg1 == 0 /\ x21 > 0 /\ arg2 > 0 /\ 1-arg3p4 == 0 /\ -arg7p4+arg7 == 0 /\ 2-arg2+arg6 <= 0 /\ arg2-arg2p4 == 0 /\ 2+arg5-arg1 <= 0 /\ -arg4p4+arg4 == 0 /\ -arg2+x22 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ x22 > 0 /\ arg5-arg5p4 == 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=1, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p4, (0 == 0 /\ x21 > 0 /\ arg2 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -arg2+x22 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ x22 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
		propagated equality arg6p4 = arg6
		
		propagated equality arg1p4 = arg1
		
		propagated equality arg3p4 = 1
		
		propagated equality arg7p4 = arg7
		
		propagated equality arg2p4 = arg2
		
		propagated equality arg4p4 = arg4
		
		propagated equality arg5p4 = arg5
		
	Simplified Guard

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=1, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p4, (0 == 0 /\ x21 > 0 /\ arg2 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -arg2+x22 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ x22 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=1, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p4, (x21 > 0 /\ arg2 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -arg2+x22 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ x22 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=1, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p4, (x21 > 0 /\ arg2 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -arg2+x22 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ x22 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=1, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p4, (arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=1, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p4, (arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg3'=1, arg8'=arg8p4, (arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, (arg4p5 > 0 /\ arg2 > 0 /\ 1-arg1p5 == 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ -arg7p5+arg6 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg8p5+arg7 == 0 /\ -arg2p5 == 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=1, arg2'=0, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg6, arg8'=arg7, (0 == 0 /\ arg4p5 > 0 /\ arg2 > 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
		propagated equality arg1p5 = 1
		
		propagated equality arg7p5 = arg6
		
		propagated equality arg8p5 = arg7
		
		propagated equality arg2p5 = 0
		
	Simplified Guard

	Original rule:
	f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=1, arg2'=0, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg6, arg8'=arg7, (0 == 0 /\ arg4p5 > 0 /\ arg2 > 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=1, arg2'=0, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg6, arg8'=arg7, (arg4p5 > 0 /\ arg2 > 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, (-arg3p6+arg3 == 0 /\ x32 > 0 /\ arg2 > 0 /\ -arg6p6+arg6 == 0 /\ arg3 > 0 /\ -arg7p6+arg7 == 0 /\ -arg1p6+arg1 == 0 /\ arg2-arg2p6 == 0 /\ arg5-arg5p6 == 0 /\ 2-arg2+arg6 <= 0 /\ -arg4p6+arg4 == 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ -arg2+x33 <= 0 /\ 2-arg2+arg7 <= 0 /\ x33 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p6, (0 == 0 /\ x32 > 0 /\ arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ -arg2+x33 <= 0 /\ 2-arg2+arg7 <= 0 /\ x33 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
		propagated equality arg3p6 = arg3
		
		propagated equality arg6p6 = arg6
		
		propagated equality arg7p6 = arg7
		
		propagated equality arg1p6 = arg1
		
		propagated equality arg2p6 = arg2
		
		propagated equality arg5p6 = arg5
		
		propagated equality arg4p6 = arg4
		
	Simplified Guard

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p6, (0 == 0 /\ x32 > 0 /\ arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ -arg2+x33 <= 0 /\ 2-arg2+arg7 <= 0 /\ x33 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p6, (x32 > 0 /\ arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -arg2+x33 <= 0 /\ 2-arg2+arg7 <= 0 /\ x33 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p6, (x32 > 0 /\ arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -arg2+x33 <= 0 /\ 2-arg2+arg7 <= 0 /\ x33 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p6, (arg2 > 0 /\ arg3 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg1'=arg1, arg2'=arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8p6, (arg2 > 0 /\ arg3 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE\' : arg8'=arg8p6, (arg2 > 0 /\ arg3 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, (arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ -1-arg2p7+arg3 == 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ -arg8p7+arg7 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg7p7+arg6 == 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ -arg1p7+arg3 == 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg3, arg2'=-1+arg3, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg6, arg8'=arg7, (0 == 0 /\ arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
		propagated equality arg2p7 = -1+arg3
		
		propagated equality arg8p7 = arg7
		
		propagated equality arg7p7 = arg6
		
		propagated equality arg1p7 = arg3
		
	Simplified Guard

	Original rule:
	f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg3, arg2'=-1+arg3, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg6, arg8'=arg7, (0 == 0 /\ arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ -1 < 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg3, arg2'=-1+arg3, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg6, arg8'=arg7, (arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f425_0_fractale_InvokeMethod -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, (-arg6p8+arg7 == 0 /\ arg5-arg4p8 == 0 /\ arg6-arg5p8 == 0 /\ 2+arg8-arg4 <= 0 /\ arg8-arg7p8 == 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ -arg3p8+arg2 == 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f425_0_fractale_InvokeMethod -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg2, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg8, arg8'=arg8p8, (0 == 0 /\ 2+arg8-arg4 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg6p8 = arg7
		
		propagated equality arg4p8 = arg5
		
		propagated equality arg5p8 = arg6
		
		propagated equality arg7p8 = arg8
		
		propagated equality arg3p8 = arg2
		
	Simplified Guard

	Original rule:
	f425_0_fractale_InvokeMethod -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg2, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg8, arg8'=arg8p8, (0 == 0 /\ 2+arg8-arg4 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f425_0_fractale_InvokeMethod -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg2, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg8, arg8'=arg8p8, (2+arg8-arg4 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	__init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, (1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ arg1p9 > 0 /\ 200-arg6p1 == 0 /\ -201-arg1p9+arg2p1 <= 0 /\ 200-arg7p1 == 0 /\ -arg5p1 == 0 /\ arg2p9-arg3p1 == 0 /\ -1+arg1p1-arg1p9 <= 0 /\ -arg4p1 == 0 /\ -201+arg2p1 > 0), cost: 1
	New rule:
	__init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg2p9, arg4'=0, arg5'=0, arg6'=200, arg7'=200, arg8'=arg8p1, (0 == 0 /\ 1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ arg1p9 > 0 /\ -201-arg1p9+arg2p1 <= 0 /\ -1+arg1p1-arg1p9 <= 0 /\ -201+arg2p1 > 0), cost: 1
	
		propagated equality arg6p1 = 200
		
		propagated equality arg7p1 = 200
		
		propagated equality arg5p1 = 0
		
		propagated equality arg3p1 = arg2p9
		
		propagated equality arg4p1 = 0
		
	Simplified Guard

	Original rule:
	__init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg2p9, arg4'=0, arg5'=0, arg6'=200, arg7'=200, arg8'=arg8p1, (0 == 0 /\ 1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ arg1p9 > 0 /\ -201-arg1p9+arg2p1 <= 0 /\ -1+arg1p1-arg1p9 <= 0 /\ -201+arg2p1 > 0), cost: 1
	New rule:
	__init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg2p9, arg4'=0, arg5'=0, arg6'=200, arg7'=200, arg8'=arg8p1, (1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ arg1p9 > 0 /\ -201-arg1p9+arg2p1 <= 0 /\ -1+arg1p1-arg1p9 <= 0 /\ -201+arg2p1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg2p9, arg4'=0, arg5'=0, arg6'=200, arg7'=200, arg8'=arg8p1, (1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ arg1p9 > 0 /\ -201-arg1p9+arg2p1 <= 0 /\ -1+arg1p1-arg1p9 <= 0 /\ -201+arg2p1 > 0), cost: 1
	New rule:
	__init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg2p9, arg4'=0, arg5'=0, arg6'=200, arg7'=200, arg8'=arg8p1, (1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0), cost: 1

Step with 17

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)]
	
	Blocked

	[{}, {}]

Step with 10

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 10[(arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg2-arg7 >= 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 11

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 10[(arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg2-arg7 >= 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 11[(-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Accelerate and Drop

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8
  10: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg8'=arg8p2, (arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg2-arg7 >= 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  12: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg3'=1, arg8'=arg8p4, (arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  14: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg8'=arg8p6, (arg2 > 0 /\ arg3 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  18: f361_0_fractale_LE -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3-n, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-1+n >= 0 /\ 2-arg6p3-arg5+arg7p3+arg4 > 0 /\ -2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ arg6p3+arg5-arg7p3-arg4 >= 0 /\ -2+arg1p3-arg4 >= 0 /\ 2+2*arg6p3-arg5-arg6-arg4+arg7 > 0 /\ arg2 > 0 /\ arg1p3 > 0 /\ -2+arg2-arg6 >= 0 /\ -2-arg5+arg1p3 >= 0 /\ -2-arg6p3+arg2p3 >= 0 /\ 1+arg3-n > 0 /\ 2-arg5+2*arg7p3-arg6+arg4-arg7 > 0 /\ -2-arg7p3+arg2p3 >= 0 /\ arg2p3 > 0 /\ 2+arg6p3-arg5+arg7p3-arg4 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -arg6p3+arg5-arg7p3+arg4 >= 0 /\ -2+arg2-arg7 >= 0 /\ -1+arg1 >= 0), cost: 1
  11: f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  13: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=1, arg2'=0, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg6, arg8'=arg7, (arg4p5 > 0 /\ arg2 > 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  15: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg3, arg2'=-1+arg3, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg6, arg8'=arg7, (arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  16: f425_0_fractale_InvokeMethod -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg2, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg8, arg8'=arg8p8, (2+arg8-arg4 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
  17: __init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg2p9, arg4'=0, arg5'=0, arg6'=200, arg7'=200, arg8'=arg8p1, (1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3-n, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-1+n >= 0 /\ 2-arg6p3-arg5+arg7p3+arg4 > 0 /\ -2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ arg6p3+arg5-arg7p3-arg4 >= 0 /\ -2+arg1p3-arg4 >= 0 /\ 2+2*arg6p3-arg5-arg6-arg4+arg7 > 0 /\ arg2 > 0 /\ arg1p3 > 0 /\ -2+arg2-arg6 >= 0 /\ -2-arg5+arg1p3 >= 0 /\ -2-arg6p3+arg2p3 >= 0 /\ 1+arg3-n > 0 /\ 2-arg5+2*arg7p3-arg6+arg4-arg7 > 0 /\ -2-arg7p3+arg2p3 >= 0 /\ arg2p3 > 0 /\ 2+arg6p3-arg5+arg7p3-arg4 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -arg6p3+arg5-arg7p3+arg4 >= 0 /\ -2+arg2-arg7 >= 0 /\ -1+arg1 >= 0), cost: 1

		-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 [0]: eventual decrease yields (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg6p3+arg5-arg7p3+arg4 >= 0)
		
		-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 [1]: eventual increase yields (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg6p3+arg7p3+arg6-arg7 <= 0)
		
		-arg1p3+arg1 >= 0 [0]: monotonic increase yields -arg1p3+arg1 >= 0
		
		2+2*arg6p3-arg5-arg6-arg4+arg7 > 0 [0]: eventual decrease yields (2+2*arg6p3-arg5-arg6-arg4+arg7 > 0 /\ 2+arg6p3-arg5+arg7p3-arg4 > 0)
		
		2+2*arg6p3-arg5-arg6-arg4+arg7 > 0 [1]: eventual increase yields (arg6p3-arg7p3-arg6+arg7 <= 0 /\ 2+2*arg6p3-arg5-arg6-arg4+arg7 > 0)
		
		arg2 > 0 [0]: eventual decrease yields (arg2 > 0 /\ arg2p3 > 0)
		
		arg2 > 0 [1]: eventual increase yields (arg2 > 0 /\ arg2-arg2p3 <= 0)
		
		arg3 > 0 [0]: montonic decrease yields 1+arg3-n > 0
		
		arg3 > 0 [1]: eventual increase yields (1 <= 0 /\ arg3 > 0)
		
		arg1p3 > 0 [0]: monotonic increase yields arg1p3 > 0
		
		-2+arg2-arg6 >= 0 [0]: eventual decrease yields (-2+arg2-arg6 >= 0 /\ -2-arg6p3+arg2p3 >= 0)
		
		-2+arg2-arg6 >= 0 [1]: eventual increase yields (arg6p3+arg2-arg6-arg2p3 <= 0 /\ -2+arg2-arg6 >= 0)
		
		-2-arg5+arg1 >= 0 [0]: montonic decrease yields -2-arg5+arg1p3 >= 0, dependencies: -arg1p3+arg1 >= 0
		
		-2-arg5+arg1 >= 0 [1]: eventual increase yields (-arg1p3+arg1 <= 0 /\ -2-arg5+arg1 >= 0)
		
		2-arg5+2*arg7p3-arg6+arg4-arg7 > 0 [0]: eventual decrease yields (2-arg6p3-arg5+arg7p3+arg4 > 0 /\ 2-arg5+2*arg7p3-arg6+arg4-arg7 > 0)
		
		2-arg5+2*arg7p3-arg6+arg4-arg7 > 0 [1]: eventual increase yields (2-arg5+2*arg7p3-arg6+arg4-arg7 > 0 /\ arg6p3+arg7p3-arg6-arg7 <= 0)
		
		arg2p3 > 0 [0]: monotonic increase yields arg2p3 > 0
		
		arg5-2*arg7p3+arg6-arg4+arg7 >= 0 [0]: eventual decrease yields (arg6p3+arg5-arg7p3-arg4 >= 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0)
		
		arg5-2*arg7p3+arg6-arg4+arg7 >= 0 [1]: eventual increase yields (-arg6p3-arg7p3+arg6+arg7 <= 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0)
		
		-2+arg2-arg7 >= 0 [0]: eventual decrease yields (-2-arg7p3+arg2p3 >= 0 /\ -2+arg2-arg7 >= 0)
		
		-2+arg2-arg7 >= 0 [1]: eventual increase yields (arg2+arg7p3-arg2p3-arg7 <= 0 /\ -2+arg2-arg7 >= 0)
		
		-1+arg1 >= 0 [0]: monotonic increase yields -1+arg1 >= 0, dependencies: arg1p3 > 0
		
		arg1 > 0 [0]: montonic decrease yields arg1p3 > 0, dependencies: -arg1p3+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p3+arg1 <= 0 /\ arg1 > 0)
		
		-2-arg4+arg1 >= 0 [0]: montonic decrease yields -2+arg1p3-arg4 >= 0, dependencies: -arg1p3+arg1 >= 0
		
		-2-arg4+arg1 >= 0 [1]: eventual increase yields (-arg1p3+arg1 <= 0 /\ -2-arg4+arg1 >= 0)
		
		Replacement map: {-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 -> (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg6p3+arg5-arg7p3+arg4 >= 0), -arg1p3+arg1 >= 0 -> -arg1p3+arg1 >= 0, 2+2*arg6p3-arg5-arg6-arg4+arg7 > 0 -> (2+2*arg6p3-arg5-arg6-arg4+arg7 > 0 /\ 2+arg6p3-arg5+arg7p3-arg4 > 0), arg2 > 0 -> (arg2 > 0 /\ arg2p3 > 0), arg3 > 0 -> 1+arg3-n > 0, arg1p3 > 0 -> arg1p3 > 0, -2+arg2-arg6 >= 0 -> (-2+arg2-arg6 >= 0 /\ -2-arg6p3+arg2p3 >= 0), -2-arg5+arg1 >= 0 -> -2-arg5+arg1p3 >= 0, 2-arg5+2*arg7p3-arg6+arg4-arg7 > 0 -> (2-arg6p3-arg5+arg7p3+arg4 > 0 /\ 2-arg5+2*arg7p3-arg6+arg4-arg7 > 0), arg2p3 > 0 -> arg2p3 > 0, arg5-2*arg7p3+arg6-arg4+arg7 >= 0 -> (arg6p3+arg5-arg7p3-arg4 >= 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0), -2+arg2-arg7 >= 0 -> (-2-arg7p3+arg2p3 >= 0 /\ -2+arg2-arg7 >= 0), -1+arg1 >= 0 -> -1+arg1 >= 0, arg1 > 0 -> arg1p3 > 0, -2-arg4+arg1 >= 0 -> -2+arg1p3-arg4 >= 0}

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)]
	
	Blocked

	[{}, {10[T]}]

Step with 12

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T]}, {}]

Step with 11

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 11[(-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T]}, {11[T]}]

Step with 13

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 13[(arg4p5 > 0 /\ arg2 > 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T]}, {11[T]}, {}]

Step with 16

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 13[(arg4p5 > 0 /\ arg2 > 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 16[(2+arg8-arg4 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {10[T]}, {11[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 13[(arg4p5 > 0 /\ arg2 > 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T]}, {11[T]}, {16[T]}]

Backtrack

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T]}, {11[T], 13[T]}]

Step with 15

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 15[(arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T]}, {11[T], 13[T]}, {}]

Step with 16

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 15[(arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0)], 16[(2+arg8-arg4 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {10[T]}, {11[T], 13[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 15[(arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T]}, {11[T], 13[T]}, {16[T]}]

Backtrack

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 12[(arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T]}, {11[T], 13[T], 15[T]}]

Backtrack

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)]
	
	Blocked

	[{}, {10[T], 12[T]}]

Step with 14

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 14[(arg2 > 0 /\ arg3 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T], 12[T]}, {}]

Step with 15

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 14[(arg2 > 0 /\ arg3 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 15[(arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {10[T], 12[T]}, {}, {}]

Step with 16

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)], 14[(arg2 > 0 /\ arg3 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0)], 15[(arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0)], 16[(2+arg8-arg4 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {10[T], 12[T]}, {}, {}, {}]

Accelerate and Drop

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8
  10: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg8'=arg8p2, (arg2 > 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg2-arg7 >= 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  12: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg3'=1, arg8'=arg8p4, (arg2 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  14: f361_0_fractale_LE -> f361_0_fractale_LE\' : arg8'=arg8p6, (arg2 > 0 /\ arg3 > 0 /\ 1-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  18: f361_0_fractale_LE -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3-n, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-1+n >= 0 /\ 2-arg6p3-arg5+arg7p3+arg4 > 0 /\ -2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ arg6p3+arg5-arg7p3-arg4 >= 0 /\ -2+arg1p3-arg4 >= 0 /\ 2+2*arg6p3-arg5-arg6-arg4+arg7 > 0 /\ arg2 > 0 /\ arg1p3 > 0 /\ -2+arg2-arg6 >= 0 /\ -2-arg5+arg1p3 >= 0 /\ -2-arg6p3+arg2p3 >= 0 /\ 1+arg3-n > 0 /\ 2-arg5+2*arg7p3-arg6+arg4-arg7 > 0 /\ -2-arg7p3+arg2p3 >= 0 /\ arg2p3 > 0 /\ 2+arg6p3-arg5+arg7p3-arg4 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -arg6p3+arg5-arg7p3+arg4 >= 0 /\ -2+arg2-arg7 >= 0 /\ -1+arg1 >= 0), cost: 1
  19: f361_0_fractale_LE -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-n1+arg3, arg4'=arg5p72, arg5'=arg6p72, arg8'=arg8p8, (-arg5p72+arg6-arg6p72+arg7 >= 0 /\ 2+arg5p72-arg6+arg6p72-arg7 > 0 /\ 2-arg5-arg6+2*arg6p72+arg4-arg7 > 0 /\ -arg5p72+arg6+arg6p72-arg7 >= 0 /\ -2-arg6+arg2p8 >= 0 /\ arg5+arg6-2*arg6p72-arg4+arg7 >= 0 /\ 2+arg5p72-arg6-arg6p72+arg7 > 0 /\ 2-arg5+2*arg5p72-arg6-arg4+arg7 > 0 /\ -2-arg6p72+arg1p8 >= 0 /\ -1+arg2 >= 0 /\ arg1p8 > 0 /\ 1-n1+arg3 > 0 /\ arg2-arg2p8 >= 0 /\ arg5-2*arg5p72+arg6+arg4-arg7 >= 0 /\ -1+n1 >= 0 /\ -2-arg5+arg1 >= 0 /\ -2-arg5p72+arg1p8 >= 0 /\ -2-arg7+arg2p8 >= 0 /\ arg2p8 > 0 /\ arg1 > 0 /\ -2-arg4+arg1 >= 0), cost: 1
  11: f361_0_fractale_LE\' -> f361_0_fractale_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, (-2*arg6p3+arg5+arg6+arg4-arg7 >= 0 /\ -arg1p3+arg1 >= 0 /\ -2-2*arg6p3+arg5+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg3 > 0 /\ arg1p3 > 0 /\ 2-arg2+arg6 <= 0 /\ 2+arg5-arg1 <= 0 /\ -2+arg5-2*arg7p3+arg6-arg4+arg7 < 0 /\ arg2p3 > 0 /\ arg5-2*arg7p3+arg6-arg4+arg7 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  13: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=1, arg2'=0, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg6, arg8'=arg7, (arg4p5 > 0 /\ arg2 > 0 /\ -2+arg5+arg6-2*arg6p5-arg4+arg7 < 0 /\ arg5+arg6-2*arg6p5-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg5p5+arg4-arg7 < 0 /\ arg4p5-arg2 <= 0 /\ 2-arg2+arg6 <= 0 /\ arg5+arg6-2*arg5p5+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ arg3p5 > 0 /\ 1-arg3 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  15: f361_0_fractale_LE\' -> f425_0_fractale_InvokeMethod : arg1'=arg3, arg2'=-1+arg3, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg6, arg8'=arg7, (arg5+arg6-2*arg6p7-arg4+arg7 >= 0 /\ -2+arg5+arg6-2*arg6p7-arg4+arg7 < 0 /\ -2+arg5-2*arg5p7+arg6+arg4-arg7 < 0 /\ arg2 > 0 /\ arg5-2*arg5p7+arg6+arg4-arg7 >= 0 /\ arg3 > 0 /\ 2-arg2+arg6 <= 0 /\ arg3p7 > 0 /\ 2+arg5-arg1 <= 0 /\ 2-arg2+arg7 <= 0 /\ -arg2+arg4p7 <= 0 /\ arg1 > 0 /\ arg4p7 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  16: f425_0_fractale_InvokeMethod -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg2, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg8, arg8'=arg8p8, (2+arg8-arg4 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ -arg3+arg1p8 <= 0 /\ arg1p8 > 0 /\ 2+arg5-arg3 <= 0 /\ arg2-arg1 < 0 /\ arg4 > 0 /\ -arg4+arg2p8 <= 0 /\ 2-arg4+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
  17: __init -> f361_0_fractale_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg2p9, arg4'=0, arg5'=0, arg6'=200, arg7'=200, arg8'=arg8p1, (1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f361_0_fractale_LE -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=arg5p72, arg5'=arg6p72, arg8'=arg8p8, (-2+arg5+arg6-2*arg6p72-arg4+arg7 < 0 /\ arg2 > 0 /\ arg5+arg6-2*arg6p72-arg4+arg7 >= 0 /\ arg3 > 0 /\ -2+arg5-2*arg5p72+arg6+arg4-arg7 < 0 /\ 1-arg2 <= 0 /\ arg1p8 > 0 /\ 2-arg2+arg6 <= 0 /\ arg5-2*arg5p72+arg6+arg4-arg7 >= 0 /\ 2+arg5-arg1 <= 0 /\ -arg2+arg2p8 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg2p8 > 0 /\ arg1 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f361_0_fractale_LE -> f361_0_fractale_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-n1+arg3, arg4'=arg5p72, arg5'=arg6p72, arg8'=arg8p8, (-arg5p72+arg6-arg6p72+arg7 >= 0 /\ 2+arg5p72-arg6+arg6p72-arg7 > 0 /\ 2-arg5-arg6+2*arg6p72+arg4-arg7 > 0 /\ -arg5p72+arg6+arg6p72-arg7 >= 0 /\ -2-arg6+arg2p8 >= 0 /\ arg5+arg6-2*arg6p72-arg4+arg7 >= 0 /\ 2+arg5p72-arg6-arg6p72+arg7 > 0 /\ 2-arg5+2*arg5p72-arg6-arg4+arg7 > 0 /\ -2-arg6p72+arg1p8 >= 0 /\ -1+arg2 >= 0 /\ arg1p8 > 0 /\ 1-n1+arg3 > 0 /\ arg2-arg2p8 >= 0 /\ arg5-2*arg5p72+arg6+arg4-arg7 >= 0 /\ -1+n1 >= 0 /\ -2-arg5+arg1 >= 0 /\ -2-arg5p72+arg1p8 >= 0 /\ -2-arg7+arg2p8 >= 0 /\ arg2p8 > 0 /\ arg1 > 0 /\ -2-arg4+arg1 >= 0), cost: 1

		2-arg5-arg6+2*arg6p72+arg4-arg7 > 0 [0]: eventual decrease yields (2+arg5p72-arg6+arg6p72-arg7 > 0 /\ 2-arg5-arg6+2*arg6p72+arg4-arg7 > 0)
		
		2-arg5-arg6+2*arg6p72+arg4-arg7 > 0 [1]: eventual increase yields (2-arg5-arg6+2*arg6p72+arg4-arg7 > 0 /\ -arg5-arg5p72+arg6p72+arg4 <= 0)
		
		arg2 > 0 [0]: montonic decrease yields arg2p8 > 0, dependencies: -1+arg2 >= 0
		
		arg2 > 0 [1]: eventual decrease yields (arg2 > 0 /\ arg2p8 > 0)
		
		arg2 > 0 [2]: eventual increase yields (arg2 > 0 /\ arg2-arg2p8 <= 0)
		
		arg5+arg6-2*arg6p72-arg4+arg7 >= 0 [0]: eventual decrease yields (-arg5p72+arg6-arg6p72+arg7 >= 0 /\ arg5+arg6-2*arg6p72-arg4+arg7 >= 0)
		
		arg5+arg6-2*arg6p72-arg4+arg7 >= 0 [1]: eventual increase yields (arg5+arg6-2*arg6p72-arg4+arg7 >= 0 /\ arg5+arg5p72-arg6p72-arg4 <= 0)
		
		arg3 > 0 [0]: montonic decrease yields 1-n1+arg3 > 0
		
		arg3 > 0 [1]: eventual increase yields (1 <= 0 /\ arg3 > 0)
		
		2-arg5+2*arg5p72-arg6-arg4+arg7 > 0 [0]: eventual decrease yields (2+arg5p72-arg6-arg6p72+arg7 > 0 /\ 2-arg5+2*arg5p72-arg6-arg4+arg7 > 0)
		
		2-arg5+2*arg5p72-arg6-arg4+arg7 > 0 [1]: eventual increase yields (-arg5+arg5p72+arg6p72-arg4 <= 0 /\ 2-arg5+2*arg5p72-arg6-arg4+arg7 > 0)
		
		-1+arg2 >= 0 [0]: monotonic increase yields -1+arg2 >= 0, dependencies: arg2p8 > 0
		
		-1+arg2 >= 0 [1]: montonic decrease yields -1+arg2p8 >= 0, dependencies: arg2 > 0
		
		-1+arg2 >= 0 [2]: eventual increase yields (-1+arg2 >= 0 /\ arg2-arg2p8 <= 0)
		
		arg1p8 > 0 [0]: monotonic increase yields arg1p8 > 0
		
		arg2-arg2p8 >= 0 [0]: monotonic increase yields arg2-arg2p8 >= 0
		
		-2+arg2-arg6 >= 0 [0]: montonic decrease yields -2-arg6+arg2p8 >= 0, dependencies: arg2-arg2p8 >= 0
		
		-2+arg2-arg6 >= 0 [1]: eventual increase yields (arg2-arg2p8 <= 0 /\ -2+arg2-arg6 >= 0)
		
		arg5-2*arg5p72+arg6+arg4-arg7 >= 0 [0]: eventual decrease yields (-arg5p72+arg6+arg6p72-arg7 >= 0 /\ arg5-2*arg5p72+arg6+arg4-arg7 >= 0)
		
		arg5-2*arg5p72+arg6+arg4-arg7 >= 0 [1]: eventual increase yields (arg5-arg5p72-arg6p72+arg4 <= 0 /\ arg5-2*arg5p72+arg6+arg4-arg7 >= 0)
		
		-2-arg5+arg1 >= 0 [0]: eventual decrease yields (-2-arg6p72+arg1p8 >= 0 /\ -2-arg5+arg1 >= 0)
		
		-2-arg5+arg1 >= 0 [1]: eventual increase yields (-2-arg5+arg1 >= 0 /\ -arg5+arg6p72-arg1p8+arg1 <= 0)
		
		-2+arg2-arg7 >= 0 [0]: montonic decrease yields -2-arg7+arg2p8 >= 0, dependencies: arg2-arg2p8 >= 0
		
		-2+arg2-arg7 >= 0 [1]: eventual increase yields (arg2-arg2p8 <= 0 /\ -2+arg2-arg7 >= 0)
		
		arg2p8 > 0 [0]: monotonic increase yields arg2p8 > 0
		
		arg1 > 0 [0]: eventual decrease yields (arg1p8 > 0 /\ arg1 > 0)
		
		arg1 > 0 [1]: eventual increase yields (-arg1p8+arg1 <= 0 /\ arg1 > 0)
		
		-2-arg4+arg1 >= 0 [0]: eventual decrease yields (-2-arg5p72+arg1p8 >= 0 /\ -2-arg4+arg1 >= 0)
		
		-2-arg4+arg1 >= 0 [1]: eventual increase yields (arg5p72-arg1p8-arg4+arg1 <= 0 /\ -2-arg4+arg1 >= 0)
		
		Replacement map: {2-arg5-arg6+2*arg6p72+arg4-arg7 > 0 -> (2+arg5p72-arg6+arg6p72-arg7 > 0 /\ 2-arg5-arg6+2*arg6p72+arg4-arg7 > 0), arg2 > 0 -> arg2p8 > 0, arg5+arg6-2*arg6p72-arg4+arg7 >= 0 -> (-arg5p72+arg6-arg6p72+arg7 >= 0 /\ arg5+arg6-2*arg6p72-arg4+arg7 >= 0), arg3 > 0 -> 1-n1+arg3 > 0, 2-arg5+2*arg5p72-arg6-arg4+arg7 > 0 -> (2+arg5p72-arg6-arg6p72+arg7 > 0 /\ 2-arg5+2*arg5p72-arg6-arg4+arg7 > 0), -1+arg2 >= 0 -> -1+arg2 >= 0, arg1p8 > 0 -> arg1p8 > 0, arg2-arg2p8 >= 0 -> arg2-arg2p8 >= 0, -2+arg2-arg6 >= 0 -> -2-arg6+arg2p8 >= 0, arg5-2*arg5p72+arg6+arg4-arg7 >= 0 -> (-arg5p72+arg6+arg6p72-arg7 >= 0 /\ arg5-2*arg5p72+arg6+arg4-arg7 >= 0), -2-arg5+arg1 >= 0 -> (-2-arg6p72+arg1p8 >= 0 /\ -2-arg5+arg1 >= 0), -2+arg2-arg7 >= 0 -> -2-arg7+arg2p8 >= 0, arg2p8 > 0 -> arg2p8 > 0, arg1 > 0 -> (arg1p8 > 0 /\ arg1 > 0), -2-arg4+arg1 >= 0 -> (-2-arg5p72+arg1p8 >= 0 /\ -2-arg4+arg1 >= 0)}

	Trace

	17[(1+arg2p9 > 0 /\ -1+arg1p1 > 0 /\ -201+arg2p1 > 0)]
	
	Blocked

	[{}, {10[T], 12[T], 14[T]}]

Backtrack

	Trace

	Blocked

	[{17[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
