NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_i -> Â¿functionCall(__VERIFIER_nondet_int), main_j -> Â¿functionCall(__VERIFIER_nondet_int), main_t -> 0}>
<l1, l2, true>
<l2, l14, not((main_i > 0))>
<l2, l3, (main_i > 0)>
<l3, l14, not((main_j > 0))>
<l3, l4, (main_j > 0)>
<l4, l5, (main_i < main_j)>
<l4, l7, not((main_i < main_j))>
<l5, l6, true, seq{main_t -> main_i, main_i -> main_j, main_j -> main_t}>
<l6, l13, true>
<l7, l8, (main_i > main_j)>
<l7, l10, not((main_i > main_j))>
<l8, l9, true, seq{main_j -> main_i}>
<l9, l12, true>
<l10, l11, true, seq{main_i -> (main_i - 1)}>
<l11, l12, true>
<l12, l13, true>
<l13, l2, true>
<l14, l15, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l16, true, seq{main__func_return_ -> 0}>
<l16, l17, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l17, l18, true, seq{main_i -> varCall_1}>
<l18, l19, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l19, l1, true, seq{main_j -> varCall_2, main_t -> 0}>
<l1, l2, true>
<l2, l3, (main_i > 0)>
<l2, l14, not((main_i > 0))>
<l3, l4, (main_j > 0)>
<l3, l14, not((main_j > 0))>
<l4, l5, (main_i < main_j)>
<l4, l7, not((main_i < main_j))>
<l5, l6, true, seq{main_t -> main_i, main_i -> main_j, main_j -> main_t}>
<l6, l13, true>
<l7, l8, (main_i > main_j)>
<l7, l10, not((main_i > main_j))>
<l8, l9, true, seq{main_j -> main_i}>
<l9, l12, true>
<l10, l11, true, seq{main_i -> (main_i - 1)}>
<l11, l12, true>
<l12, l13, true>
<l13, l2, true>
<l14, l15, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
15, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [5 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1> | <line: 9, col: 9> <line: 10, col: 9>
main | function | [integer, ()] | <line: 5, col: 1>
i | local variable | integer | <line: 6, col: 5> | <line: 9, col: 5> <line: 13, col: 12> <line: 14, col: 13> <line: 15, col: 17> <line: 16, col: 13> <line: 19, col: 17> <line: 20, col: 21> <line: 22, col: 17> <line: 22, col: 21>
j | local variable | integer | <line: 7, col: 5> | <line: 10, col: 5> <line: 13, col: 21> <line: 14, col: 17> <line: 16, col: 17> <line: 17, col: 13> <line: 19, col: 21> <line: 20, col: 17>
t | local variable | integer | <line: 8, col: 5> | <line: 11, col: 5> <line: 15, col: 13> <line: 17, col: 17>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_i = undef3) /\ (main_j = undef4)>
<l2, l2, (main_i > 0) /\ (main_j > 0) /\ (main_i < main_j), par{main_i -> main_j, main_j -> main_i}>
<l2, l2, (main_i > 0) /\ (main_j > 0) /\ not((main_i < main_j)) /\ (main_i > main_j), par{main_j -> main_i}>
<l2, l2, (main_i > 0) /\ (main_j > 0) /\ not((main_i < main_j)) /\ not((main_i > main_j)), par{main_i -> (main_i - 1)}>
<l2, l15, (main_i > 0) /\ not((main_j > 0))>
<l2, l15, not((main_i > 0))>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
15, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j, {main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
Variables:
main_i, main_j

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_i = undef3 /\ main_j = undef4, {all remain the same}>

Graph 2
<l2, l15, main_j <= 0 /\ 1 <= main_i, {all remain the same}>
<l2, l15, main_i <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 15 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003851

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001269s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.018551s
[25969 : 25971]
[25969 : 25972]
Successful child: 25971
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j, {main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ main_i + main_j <= 2 /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j, {main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ main_i + main_j <= 2 /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
New Graphs: 
Transitions:
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ main_i + main_j <= 2 /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
Variables:
main_i, main_j
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000488s
[33mRanking function: [36mmain_i - main_j[0m
New Graphs: 

LOG: CALL check - Post:main_i + main_j <= 2 - Process 1
* Exit transition: <l0, l2, main_i = undef3 /\ main_j = undef4, {all remain the same}>
* Postcondition  : main_i + main_j <= 2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000259s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000298s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: main_i + main_j <= 2 , 
Narrowing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j, {main_j -> main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
Variables:
main_i, main_j
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000909s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.025909s
[25969 : 25976]
[25969 : 25977]
Successful child: 25976
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:main_i <= 0 - Process 2
* Exit transition: <l0, l2, 3 <= main_i + main_j /\ main_i = undef3 /\ main_j = undef4, {all remain the same}>
* Postcondition  : main_i <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000330s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000369s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: main_i <= 0 , 
Narrowing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
Variables:
main_i, main_j
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001015s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.026439s
[25969 : 25981]
[25969 : 25982]
Successful child: 25981
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:1 + main_j <= 0 - Process 3
* Exit transition: <l0, l2, 1 <= main_i /\ 3 <= main_i + main_j /\ main_i = undef3 /\ main_j = undef4, {all remain the same}>
* Postcondition  : 1 + main_j <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000371s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000412s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: 1 + main_j <= 0 , 
Narrowing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
Variables:
main_i, main_j
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000843s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.025696s
[25969 : 25986]
[25969 : 25987]
Successful child: 25986
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:main_j <= 0 - Process 4
* Exit transition: <l0, l2, 0 <= main_j /\ 1 <= main_i /\ 3 <= main_i + main_j /\ main_i = undef3 /\ main_j = undef4, {all remain the same}>
* Postcondition  : main_j <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000386s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000433s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: main_j <= 0 , 
Narrowing transition: 
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + main_i <= main_j /\ 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_i -> main_j, main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 + main_j <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j, {main_j -> main_i, rest remain the same}>
<l2, l2, 1 <= main_i /\ 1 <= main_j /\ 3 <= main_i + main_j /\ main_i = main_j, {main_i -> -1 + main_i, rest remain the same}>
Variables:
main_i, main_j
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000857s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.025219s
[25969 : 25991]
[25969 : 25992]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020274s
Time used: 0.019628

[25969 : 25996]
[25969 : 26000]
Successful child: 26000

[32mProgram does NOT terminate[0m
