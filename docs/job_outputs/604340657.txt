YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_tx -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int), main_ty -> Â¿functionCall(__VERIFIER_nondet_int), main_n -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, ((main_x + main_y) >= 0)>
<l1, l14, not(((main_x + main_y) >= 0))>
<l2, l3, true>
<l3, l13, not((main_x <= main_n))>
<l3, l4, (main_x <= main_n)>
<l4, l13, not((main_x >= ((2 * main_tx) + main_y)))>
<l4, l5, (main_x >= ((2 * main_tx) + main_y))>
<l5, l13, not((main_y >= (main_ty + 1)))>
<l5, l6, (main_y >= (main_ty + 1))>
<l6, l7, (main_x >= (main_tx + 1))>
<l6, l13, not((main_x >= (main_tx + 1)))>
<l7, l8, not((Â¿functionCall(__VERIFIER_nondet_int) = 0))>
<l7, l10, (Â¿functionCall(__VERIFIER_nondet_int) = 0)>
<l8, l9, true, seq{main_tx -> main_x, main_ty -> main_y, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l9, l12, true>
<l10, l11, true, seq{main_tx -> main_x, main_x -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l11, l12, true>
<l12, l3, true>
<l13, l14, true>
<l14, l15, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l16, true, seq{main__func_return_ -> 0}>
<l16, l17, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l17, l18, true, seq{main_x -> varCall_1}>
<l18, l19, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l19, l20, true, seq{main_tx -> varCall_2}>
<l20, l21, true, seq{varCall_3 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l21, l22, true, seq{main_y -> varCall_3}>
<l22, l23, true, seq{varCall_4 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l23, l24, true, seq{main_ty -> varCall_4}>
<l24, l25, true, seq{varCall_5 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l25, l1, true, seq{main_n -> varCall_5}>
<l1, l2, ((main_x + main_y) >= 0)>
<l1, l14, not(((main_x + main_y) >= 0))>
<l2, l3, true>
<l3, l4, (main_x <= main_n)>
<l3, l13, not((main_x <= main_n))>
<l4, l5, (main_x >= ((2 * main_tx) + main_y))>
<l4, l13, not((main_x >= ((2 * main_tx) + main_y)))>
<l5, l6, (main_y >= (main_ty + 1))>
<l5, l13, not((main_y >= (main_ty + 1)))>
<l6, l7, (main_x >= (main_tx + 1))>
<l6, l13, not((main_x >= (main_tx + 1)))>
<l7, l26, true, seq{varCall_6 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l26, l10, (varCall_6 = 0)>
<l26, l8, (varCall_6 = 1)>
<l8, l27, true, seq{main_tx -> main_x, main_ty -> main_y}>
<l27, l28, true, seq{varCall_7 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l28, l29, true, seq{main_x -> varCall_7}>
<l29, l30, true, seq{varCall_8 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l30, l9, true, seq{main_y -> varCall_8}>
<l9, l12, true>
<l10, l31, true, seq{main_tx -> main_x}>
<l31, l32, true, seq{varCall_9 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l32, l11, true, seq{main_x -> varCall_9}>
<l11, l12, true>
<l12, l3, true>
<l13, l14, true>
<l14, l15, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
15, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [7 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 15, col: 6> <line: 16, col: 7> <line: 17, col: 6> <line: 18, col: 7> <line: 19, col: 6> <line: 22, col: 8> <line: 25, col: 9> <line: 26, col: 9> <line: 29, col: 9>
main | function | [integer, ()] | <line: 13, col: 1>
x | local variable | integer | <line: 14, col: 5> | <line: 15, col: 2> <line: 20, col: 6> <line: 21, col: 10> <line: 21, col: 20> <line: 21, col: 54> <line: 23, col: 10> <line: 25, col: 5> <line: 28, col: 10> <line: 29, col: 5>
tx | local variable | integer | <line: 14, col: 5> | <line: 16, col: 2> <line: 21, col: 29> <line: 21, col: 59> <line: 23, col: 5> <line: 28, col: 5>
y | local variable | integer | <line: 14, col: 5> | <line: 17, col: 2> <line: 20, col: 10> <line: 21, col: 34> <line: 21, col: 39> <line: 24, col: 10> <line: 26, col: 5>
ty | local variable | integer | <line: 14, col: 5> | <line: 18, col: 2> <line: 21, col: 44> <line: 24, col: 5>
n | local variable | integer | <line: 14, col: 5> | <line: 19, col: 2> <line: 21, col: 15>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (main_x = undef10) /\ (main_tx = undef11) /\ (main_y = undef12) /\ (main_ty = undef13) /\ (main_n = undef14) /\ ((undef10 + undef12) >= 0)>
<l0, l15, (main_x = undef10) /\ (main_tx = undef11) /\ (main_y = undef12) /\ (main_ty = undef13) /\ (main_n = undef14) /\ not(((undef10 + undef12) >= 0))>
<l3, l3, (main_x <= main_n) /\ (main_x >= ((2 * main_tx) + main_y)) /\ (main_y >= (main_ty + 1)) /\ (main_x >= (main_tx + 1)) /\ (undef15 = 0), par{main_x -> undef18, main_tx -> main_x}>
<l3, l3, (main_x <= main_n) /\ (main_x >= ((2 * main_tx) + main_y)) /\ (main_y >= (main_ty + 1)) /\ (main_x >= (main_tx + 1)) /\ (undef15 = 1), par{main_x -> undef16, main_tx -> main_x, main_y -> undef17, main_ty -> main_y}>
<l3, l15, (main_x <= main_n) /\ (main_x >= ((2 * main_tx) + main_y)) /\ (main_y >= (main_ty + 1)) /\ not((main_x >= (main_tx + 1)))>
<l3, l15, (main_x <= main_n) /\ (main_x >= ((2 * main_tx) + main_y)) /\ not((main_y >= (main_ty + 1)))>
<l3, l15, (main_x <= main_n) /\ not((main_x >= ((2 * main_tx) + main_y)))>
<l3, l15, not((main_x <= main_n))>

Fresh variables:
undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, 

Undef variables:
undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, 

Abstraction variables:

Exit nodes:
15, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, main_x <= main_n /\ 2*main_tx + main_y <= main_x /\ 1 + main_tx <= main_x /\ 1 + main_ty <= main_y /\ undef15 = 0, {main_x -> undef18, main_tx -> main_x, rest remain the same}>
<l3, l3, main_x <= main_n /\ 2*main_tx + main_y <= main_x /\ 1 + main_tx <= main_x /\ 1 + main_ty <= main_y /\ undef15 = 1, {main_x -> undef16, main_tx -> main_x, main_y -> undef17, main_ty -> main_y, rest remain the same}>
Variables:
main_x, main_tx, main_y, main_ty, main_n

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l3, 0 <= undef10 + undef12 /\ main_x = undef10 /\ main_tx = undef11 /\ main_y = undef12 /\ main_ty = undef13 /\ main_n = undef14, {all remain the same}>

Graph 2
<l0, l15, 1 + undef10 + undef12 <= 0 /\ main_x = undef10 /\ main_tx = undef11 /\ main_y = undef12 /\ main_ty = undef13 /\ main_n = undef14, {all remain the same}>
<l3, l15, main_x <= main_tx /\ main_x <= main_n /\ 2*main_tx + main_y <= main_x /\ 1 + main_ty <= main_y, {all remain the same}>
<l3, l15, main_x <= main_n /\ 2*main_tx + main_y <= main_x /\ main_y <= main_ty, {all remain the same}>
<l3, l15, main_x <= main_n /\ 1 + main_x <= 2*main_tx + main_y, {all remain the same}>
<l3, l15, 1 + main_n <= main_x, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )
( 15 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.004474

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001550s
[33mRanking function: [36m1 + (~(2) / 3)*main_tx + (~(1) / 3)*main_ty + (1 / 3)*main_n[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l15}...
No cycles found.

[32mProgram Terminates[0m
