NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, true, par{arg1 -> 0, arg2 -> 100}>
<l2, l2, (arg2 < 52) /\ (arg2 > arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 > 51) /\ (arg2 > arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 - 1)}>
<l3, l1, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = 0) /\ (arg2 = 100)>
<l2, l2, (arg2 < 52) /\ (arg2 > arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 > 51) /\ (arg2 > arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 - 1)}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + arg1 <= arg2 /\ arg2 <= 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 52 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, arg1 = 0 /\ arg2 = 100, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 2.33398

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012245s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.014527s
Trying to remove transition: <l2, l2, 52 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.073495s
Time used: 1.07336
Trying to remove transition: <l2, l2, 1 + arg1 <= arg2 /\ arg2 <= 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.006771s
Time used: 4.00027
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.015478s
Time used: 4.00225
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.014077s
Time used: 4.00023
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.012563s
Time used: 1.00011
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.007986s
Time used: 4.00003
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, arg1 = 0 /\ arg2 = 100, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, arg1 = 0 /\ arg2 = 100, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006769s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.006899s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 1 + arg1 <= arg2 /\ arg2 <= 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 52 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg2 <= arg1, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.001340s
Time used: 5.00132
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.039000s
Time used: 0.034281
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000595s
Time used: 1.00052

LOG: SAT solveNonLinear - Elapsed time: 1.039594s
Cost: 2; Total time: 1.0348
[31mFailed at location 2: 1 + arg1 + arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l2: 1 + arg1 + arg2 <= 0[0m
[36mQuasi-invariant at l2: 0 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008058s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002179s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001984s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001949s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001940s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001938s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001945s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001942s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001956s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001955s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001957s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001946s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001931s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001933s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001937s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001940s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001948s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001953s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001954s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001933s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001927s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001935s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001939s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001953s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001956s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001953s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002003s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001959s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001973s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001978s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001980s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001978s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001970s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001961s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001965s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001970s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001974s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001978s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001967s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001967s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001974s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001987s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001992s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001982s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001987s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001996s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001984s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001990s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001986s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001984s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002007s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001994s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001575s
Remaining time after improvement: 0.905071
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 + arg2 <= 101[0m
[36mQuasi-invariant at l2: 51 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ arg1 + arg2 <= 101 /\ arg2 = 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 52 <= arg2 /\ 1 + arg1 <= arg2 /\ arg1 + arg2 <= 101, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: arg1 + arg2 <= 101, 51 <= arg2, 
OPEN EXITS: 
<l2, end, 51 <= arg2 /\ arg1 + arg2 <= 101, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, arg1 = 0 /\ arg2 = 100, {all remain the same}>
Conditions: 51 <= arg2, arg1 + arg2 <= 101, 
OPEN EXITS: 
<l0, l2, arg1 + arg2 <= 101 /\ arg1 = 0 /\ arg2 = 100, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
