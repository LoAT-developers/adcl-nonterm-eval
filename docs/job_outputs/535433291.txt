NO

Initial ITS
Start location: l7
   0: l0 -> l1 : lt_11^0'=lt_11^post0, cnt_20^0'=cnt_20^post0, x_5^0'=x_5^post0, p2_8^0'=p2_8^post0, lt_10^0'=lt_10^post0, Result_4^0'=Result_4^post0, tmp_9^0'=tmp_9^post0, lt_12^0'=lt_12^post0, cnt_25^0'=cnt_25^post0, y_6^0'=y_6^post0, p_7^0'=p_7^post0, (0 == 0 /\ p2_8^0-p2_8^post0 == 0 /\ -lt_10^post0+lt_10^0 == 0 /\ -cnt_25^post0+cnt_25^0 == 0 /\ tmp_9^0-tmp_9^post0 == 0 /\ lt_12^10-cnt_25^0 == 0 /\ cnt_20^0-cnt_20^post0 == 0 /\ -cnt_20^0+lt_11^10 == 0 /\ -x_5^post0+x_5^0 == 0 /\ -y_6^post0+y_6^0 == 0 /\ -p_7^post0+p_7^0 == 0 /\ lt_12^10-lt_11^10 <= 0), cost: 1
   1: l0 -> l2 : lt_11^0'=lt_11^post1, cnt_20^0'=cnt_20^post1, x_5^0'=x_5^post1, p2_8^0'=p2_8^post1, lt_10^0'=lt_10^post1, Result_4^0'=Result_4^post1, tmp_9^0'=tmp_9^post1, lt_12^0'=lt_12^post1, cnt_25^0'=cnt_25^post1, y_6^0'=y_6^post1, p_7^0'=p_7^post1, (0 == 0 /\ 1+lt_11^11-lt_12^110 <= 0 /\ -cnt_25^0+lt_12^110 == 0 /\ y_6^0-y_6^post1 == 0 /\ -lt_10^post1+lt_10^0 == 0 /\ p2_8^0-p2_8^post1 == 0 /\ -cnt_20^post1+cnt_20^0 == 0 /\ -tmp_9^post1 <= 0 /\ Result_4^0-Result_4^post1 == 0 /\ tmp_9^post1 <= 0 /\ lt_11^11-cnt_20^0 == 0 /\ -cnt_25^post1+cnt_25^0 == 0 /\ x_5^0-x_5^post1 == 0 /\ -p_7^post1+p_7^0 == 0), cost: 1
   3: l0 -> l4 : lt_11^0'=lt_11^post3, cnt_20^0'=cnt_20^post3, x_5^0'=x_5^post3, p2_8^0'=p2_8^post3, lt_10^0'=lt_10^post3, Result_4^0'=Result_4^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, cnt_25^0'=cnt_25^post3, y_6^0'=y_6^post3, p_7^0'=p_7^post3, (0 == 0 /\ -y_6^post3+y_6^0 == 0 /\ p2_8^0-p2_8^post3 == 0 /\ -x_5^post3+x_5^0 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ 1-lt_12^120+lt_11^12 <= 0 /\ -p_7^post3+p_7^0 == 0 /\ -lt_10^post3+lt_10^0 == 0 /\ -cnt_25^post3+cnt_25^0 == 0 /\ -cnt_20^0+lt_11^12 == 0 /\ -Result_4^post3+Result_4^0 == 0 /\ lt_12^120-cnt_25^0 == 0), cost: 1
   2: l2 -> l0 : lt_11^0'=lt_11^post2, cnt_20^0'=cnt_20^post2, x_5^0'=x_5^post2, p2_8^0'=p2_8^post2, lt_10^0'=lt_10^post2, Result_4^0'=Result_4^post2, tmp_9^0'=tmp_9^post2, lt_12^0'=lt_12^post2, cnt_25^0'=cnt_25^post2, y_6^0'=y_6^post2, p_7^0'=p_7^post2, (-cnt_20^post2+cnt_20^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -p_7^post2+p_7^0 == 0 /\ -Result_4^post2+Result_4^0 == 0 /\ tmp_9^0-tmp_9^post2 == 0 /\ p2_8^0-p2_8^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -y_6^post2+y_6^0 == 0 /\ lt_10^0-lt_10^post2 == 0 /\ -lt_12^post2+lt_12^0 == 0 /\ lt_11^0-lt_11^post2 == 0), cost: 1
   4: l4 -> l5 : lt_11^0'=lt_11^post4, cnt_20^0'=cnt_20^post4, x_5^0'=x_5^post4, p2_8^0'=p2_8^post4, lt_10^0'=lt_10^post4, Result_4^0'=Result_4^post4, tmp_9^0'=tmp_9^post4, lt_12^0'=lt_12^post4, cnt_25^0'=cnt_25^post4, y_6^0'=y_6^post4, p_7^0'=p_7^post4, (1+tmp_9^0 <= 0 /\ lt_11^0-lt_11^post4 == 0 /\ -y_6^post4+y_6^0 == 0 /\ x_5^0-x_5^post4 == 0 /\ -p_7^post4+p_7^0 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ -tmp_9^post4+tmp_9^0 == 0 /\ lt_12^0-lt_12^post4 == 0 /\ -cnt_25^post4+cnt_25^0 == 0 /\ cnt_20^0-cnt_20^post4 == 0 /\ -Result_4^post4+Result_4^0 == 0 /\ p2_8^0-p2_8^post4 == 0), cost: 1
   5: l4 -> l5 : lt_11^0'=lt_11^post5, cnt_20^0'=cnt_20^post5, x_5^0'=x_5^post5, p2_8^0'=p2_8^post5, lt_10^0'=lt_10^post5, Result_4^0'=Result_4^post5, tmp_9^0'=tmp_9^post5, lt_12^0'=lt_12^post5, cnt_25^0'=cnt_25^post5, y_6^0'=y_6^post5, p_7^0'=p_7^post5, (lt_10^0-lt_10^post5 == 0 /\ lt_11^0-lt_11^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ tmp_9^0-tmp_9^post5 == 0 /\ -lt_12^post5+lt_12^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -cnt_25^post5+cnt_25^0 == 0 /\ -p_7^post5+p_7^0 == 0 /\ cnt_20^0-cnt_20^post5 == 0 /\ 1-tmp_9^0 <= 0 /\ -Result_4^post5+Result_4^0 == 0 /\ p2_8^0-p2_8^post5 == 0), cost: 1
   6: l5 -> l3 : lt_11^0'=lt_11^post6, cnt_20^0'=cnt_20^post6, x_5^0'=x_5^post6, p2_8^0'=p2_8^post6, lt_10^0'=lt_10^post6, Result_4^0'=Result_4^post6, tmp_9^0'=tmp_9^post6, lt_12^0'=lt_12^post6, cnt_25^0'=cnt_25^post6, y_6^0'=y_6^post6, p_7^0'=p_7^post6, (0 == 0 /\ lt_11^0-lt_11^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ y_6^0-y_6^post6 == 0 /\ -cnt_25^post6+cnt_25^0 == 0 /\ Result_4^0-Result_4^post6 == 0 /\ p2_8^0-p2_8^post6 == 0 /\ tmp_9^0-tmp_9^post6 == 0 /\ -lt_12^post6+lt_12^0 == 0 /\ -p_7^post6+p_7^0 == 0 /\ -cnt_20^post6+cnt_20^0 == 0 /\ lt_10^10-cnt_20^0 == 0), cost: 1
   7: l3 -> l0 : lt_11^0'=lt_11^post7, cnt_20^0'=cnt_20^post7, x_5^0'=x_5^post7, p2_8^0'=p2_8^post7, lt_10^0'=lt_10^post7, Result_4^0'=Result_4^post7, tmp_9^0'=tmp_9^post7, lt_12^0'=lt_12^post7, cnt_25^0'=cnt_25^post7, y_6^0'=y_6^post7, p_7^0'=p_7^post7, (lt_11^0-lt_11^post7 == 0 /\ x_5^0-x_5^post7 == 0 /\ -p_7^post7+p_7^0 == 0 /\ -Result_4^post7+Result_4^0 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ -cnt_25^post7+cnt_25^0 == 0 /\ -lt_10^post7+lt_10^0 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ lt_12^0-lt_12^post7 == 0 /\ p2_8^0-p2_8^post7 == 0), cost: 1
   8: l6 -> l0 : lt_11^0'=lt_11^post8, cnt_20^0'=cnt_20^post8, x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, lt_10^0'=lt_10^post8, Result_4^0'=Result_4^post8, tmp_9^0'=tmp_9^post8, lt_12^0'=lt_12^post8, cnt_25^0'=cnt_25^post8, y_6^0'=y_6^post8, p_7^0'=p_7^post8, (0 == 0 /\ lt_10^0-lt_10^post8 == 0 /\ tmp_9^0-tmp_9^post8 == 0 /\ -y_6^post8+p2_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -cnt_25^post8+cnt_25^0 == 0 /\ cnt_20^0-cnt_20^post8 == 0 /\ p_7^post8-x_5^post8 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ -Result_4^post8+Result_4^0 == 0), cost: 1
   9: l7 -> l6 : lt_11^0'=lt_11^post9, cnt_20^0'=cnt_20^post9, x_5^0'=x_5^post9, p2_8^0'=p2_8^post9, lt_10^0'=lt_10^post9, Result_4^0'=Result_4^post9, tmp_9^0'=tmp_9^post9, lt_12^0'=lt_12^post9, cnt_25^0'=cnt_25^post9, y_6^0'=y_6^post9, p_7^0'=p_7^post9, (cnt_20^0-cnt_20^post9 == 0 /\ Result_4^0-Result_4^post9 == 0 /\ -p2_8^post9+p2_8^0 == 0 /\ -tmp_9^post9+tmp_9^0 == 0 /\ -lt_12^post9+lt_12^0 == 0 /\ -cnt_25^post9+cnt_25^0 == 0 /\ lt_11^0-lt_11^post9 == 0 /\ x_5^0-x_5^post9 == 0 /\ lt_10^0-lt_10^post9 == 0 /\ -y_6^post9+y_6^0 == 0 /\ -p_7^post9+p_7^0 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l7
   1: l0 -> l2 : lt_11^0'=lt_11^post1, cnt_20^0'=cnt_20^post1, x_5^0'=x_5^post1, p2_8^0'=p2_8^post1, lt_10^0'=lt_10^post1, Result_4^0'=Result_4^post1, tmp_9^0'=tmp_9^post1, lt_12^0'=lt_12^post1, cnt_25^0'=cnt_25^post1, y_6^0'=y_6^post1, p_7^0'=p_7^post1, (0 == 0 /\ 1+lt_11^11-lt_12^110 <= 0 /\ -cnt_25^0+lt_12^110 == 0 /\ y_6^0-y_6^post1 == 0 /\ -lt_10^post1+lt_10^0 == 0 /\ p2_8^0-p2_8^post1 == 0 /\ -cnt_20^post1+cnt_20^0 == 0 /\ -tmp_9^post1 <= 0 /\ Result_4^0-Result_4^post1 == 0 /\ tmp_9^post1 <= 0 /\ lt_11^11-cnt_20^0 == 0 /\ -cnt_25^post1+cnt_25^0 == 0 /\ x_5^0-x_5^post1 == 0 /\ -p_7^post1+p_7^0 == 0), cost: 1
   3: l0 -> l4 : lt_11^0'=lt_11^post3, cnt_20^0'=cnt_20^post3, x_5^0'=x_5^post3, p2_8^0'=p2_8^post3, lt_10^0'=lt_10^post3, Result_4^0'=Result_4^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, cnt_25^0'=cnt_25^post3, y_6^0'=y_6^post3, p_7^0'=p_7^post3, (0 == 0 /\ -y_6^post3+y_6^0 == 0 /\ p2_8^0-p2_8^post3 == 0 /\ -x_5^post3+x_5^0 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ 1-lt_12^120+lt_11^12 <= 0 /\ -p_7^post3+p_7^0 == 0 /\ -lt_10^post3+lt_10^0 == 0 /\ -cnt_25^post3+cnt_25^0 == 0 /\ -cnt_20^0+lt_11^12 == 0 /\ -Result_4^post3+Result_4^0 == 0 /\ lt_12^120-cnt_25^0 == 0), cost: 1
   2: l2 -> l0 : lt_11^0'=lt_11^post2, cnt_20^0'=cnt_20^post2, x_5^0'=x_5^post2, p2_8^0'=p2_8^post2, lt_10^0'=lt_10^post2, Result_4^0'=Result_4^post2, tmp_9^0'=tmp_9^post2, lt_12^0'=lt_12^post2, cnt_25^0'=cnt_25^post2, y_6^0'=y_6^post2, p_7^0'=p_7^post2, (-cnt_20^post2+cnt_20^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -p_7^post2+p_7^0 == 0 /\ -Result_4^post2+Result_4^0 == 0 /\ tmp_9^0-tmp_9^post2 == 0 /\ p2_8^0-p2_8^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -y_6^post2+y_6^0 == 0 /\ lt_10^0-lt_10^post2 == 0 /\ -lt_12^post2+lt_12^0 == 0 /\ lt_11^0-lt_11^post2 == 0), cost: 1
   4: l4 -> l5 : lt_11^0'=lt_11^post4, cnt_20^0'=cnt_20^post4, x_5^0'=x_5^post4, p2_8^0'=p2_8^post4, lt_10^0'=lt_10^post4, Result_4^0'=Result_4^post4, tmp_9^0'=tmp_9^post4, lt_12^0'=lt_12^post4, cnt_25^0'=cnt_25^post4, y_6^0'=y_6^post4, p_7^0'=p_7^post4, (1+tmp_9^0 <= 0 /\ lt_11^0-lt_11^post4 == 0 /\ -y_6^post4+y_6^0 == 0 /\ x_5^0-x_5^post4 == 0 /\ -p_7^post4+p_7^0 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ -tmp_9^post4+tmp_9^0 == 0 /\ lt_12^0-lt_12^post4 == 0 /\ -cnt_25^post4+cnt_25^0 == 0 /\ cnt_20^0-cnt_20^post4 == 0 /\ -Result_4^post4+Result_4^0 == 0 /\ p2_8^0-p2_8^post4 == 0), cost: 1
   5: l4 -> l5 : lt_11^0'=lt_11^post5, cnt_20^0'=cnt_20^post5, x_5^0'=x_5^post5, p2_8^0'=p2_8^post5, lt_10^0'=lt_10^post5, Result_4^0'=Result_4^post5, tmp_9^0'=tmp_9^post5, lt_12^0'=lt_12^post5, cnt_25^0'=cnt_25^post5, y_6^0'=y_6^post5, p_7^0'=p_7^post5, (lt_10^0-lt_10^post5 == 0 /\ lt_11^0-lt_11^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ tmp_9^0-tmp_9^post5 == 0 /\ -lt_12^post5+lt_12^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -cnt_25^post5+cnt_25^0 == 0 /\ -p_7^post5+p_7^0 == 0 /\ cnt_20^0-cnt_20^post5 == 0 /\ 1-tmp_9^0 <= 0 /\ -Result_4^post5+Result_4^0 == 0 /\ p2_8^0-p2_8^post5 == 0), cost: 1
   6: l5 -> l3 : lt_11^0'=lt_11^post6, cnt_20^0'=cnt_20^post6, x_5^0'=x_5^post6, p2_8^0'=p2_8^post6, lt_10^0'=lt_10^post6, Result_4^0'=Result_4^post6, tmp_9^0'=tmp_9^post6, lt_12^0'=lt_12^post6, cnt_25^0'=cnt_25^post6, y_6^0'=y_6^post6, p_7^0'=p_7^post6, (0 == 0 /\ lt_11^0-lt_11^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ y_6^0-y_6^post6 == 0 /\ -cnt_25^post6+cnt_25^0 == 0 /\ Result_4^0-Result_4^post6 == 0 /\ p2_8^0-p2_8^post6 == 0 /\ tmp_9^0-tmp_9^post6 == 0 /\ -lt_12^post6+lt_12^0 == 0 /\ -p_7^post6+p_7^0 == 0 /\ -cnt_20^post6+cnt_20^0 == 0 /\ lt_10^10-cnt_20^0 == 0), cost: 1
   7: l3 -> l0 : lt_11^0'=lt_11^post7, cnt_20^0'=cnt_20^post7, x_5^0'=x_5^post7, p2_8^0'=p2_8^post7, lt_10^0'=lt_10^post7, Result_4^0'=Result_4^post7, tmp_9^0'=tmp_9^post7, lt_12^0'=lt_12^post7, cnt_25^0'=cnt_25^post7, y_6^0'=y_6^post7, p_7^0'=p_7^post7, (lt_11^0-lt_11^post7 == 0 /\ x_5^0-x_5^post7 == 0 /\ -p_7^post7+p_7^0 == 0 /\ -Result_4^post7+Result_4^0 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ -cnt_25^post7+cnt_25^0 == 0 /\ -lt_10^post7+lt_10^0 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ lt_12^0-lt_12^post7 == 0 /\ p2_8^0-p2_8^post7 == 0), cost: 1
   8: l6 -> l0 : lt_11^0'=lt_11^post8, cnt_20^0'=cnt_20^post8, x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, lt_10^0'=lt_10^post8, Result_4^0'=Result_4^post8, tmp_9^0'=tmp_9^post8, lt_12^0'=lt_12^post8, cnt_25^0'=cnt_25^post8, y_6^0'=y_6^post8, p_7^0'=p_7^post8, (0 == 0 /\ lt_10^0-lt_10^post8 == 0 /\ tmp_9^0-tmp_9^post8 == 0 /\ -y_6^post8+p2_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -cnt_25^post8+cnt_25^0 == 0 /\ cnt_20^0-cnt_20^post8 == 0 /\ p_7^post8-x_5^post8 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ -Result_4^post8+Result_4^0 == 0), cost: 1
   9: l7 -> l6 : lt_11^0'=lt_11^post9, cnt_20^0'=cnt_20^post9, x_5^0'=x_5^post9, p2_8^0'=p2_8^post9, lt_10^0'=lt_10^post9, Result_4^0'=Result_4^post9, tmp_9^0'=tmp_9^post9, lt_12^0'=lt_12^post9, cnt_25^0'=cnt_25^post9, y_6^0'=y_6^post9, p_7^0'=p_7^post9, (cnt_20^0-cnt_20^post9 == 0 /\ Result_4^0-Result_4^post9 == 0 /\ -p2_8^post9+p2_8^0 == 0 /\ -tmp_9^post9+tmp_9^0 == 0 /\ -lt_12^post9+lt_12^0 == 0 /\ -cnt_25^post9+cnt_25^0 == 0 /\ lt_11^0-lt_11^post9 == 0 /\ x_5^0-x_5^post9 == 0 /\ lt_10^0-lt_10^post9 == 0 /\ -y_6^post9+y_6^0 == 0 /\ -p_7^post9+p_7^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : lt_11^0'=lt_11^post1, cnt_20^0'=cnt_20^post1, x_5^0'=x_5^post1, p2_8^0'=p2_8^post1, lt_10^0'=lt_10^post1, Result_4^0'=Result_4^post1, tmp_9^0'=tmp_9^post1, lt_12^0'=lt_12^post1, cnt_25^0'=cnt_25^post1, y_6^0'=y_6^post1, p_7^0'=p_7^post1, (0 == 0 /\ 1+lt_11^11-lt_12^110 <= 0 /\ -cnt_25^0+lt_12^110 == 0 /\ y_6^0-y_6^post1 == 0 /\ -lt_10^post1+lt_10^0 == 0 /\ p2_8^0-p2_8^post1 == 0 /\ -cnt_20^post1+cnt_20^0 == 0 /\ -tmp_9^post1 <= 0 /\ Result_4^0-Result_4^post1 == 0 /\ tmp_9^post1 <= 0 /\ lt_11^11-cnt_20^0 == 0 /\ -cnt_25^post1+cnt_25^0 == 0 /\ x_5^0-x_5^post1 == 0 /\ -p_7^post1+p_7^0 == 0), cost: 1
New rule:
l0 -> l2 : lt_11^0'=lt_11^post1, tmp_9^0'=0, lt_12^0'=lt_12^post1, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : lt_11^0'=lt_11^post2, cnt_20^0'=cnt_20^post2, x_5^0'=x_5^post2, p2_8^0'=p2_8^post2, lt_10^0'=lt_10^post2, Result_4^0'=Result_4^post2, tmp_9^0'=tmp_9^post2, lt_12^0'=lt_12^post2, cnt_25^0'=cnt_25^post2, y_6^0'=y_6^post2, p_7^0'=p_7^post2, (-cnt_20^post2+cnt_20^0 == 0 /\ -cnt_25^post2+cnt_25^0 == 0 /\ -p_7^post2+p_7^0 == 0 /\ -Result_4^post2+Result_4^0 == 0 /\ tmp_9^0-tmp_9^post2 == 0 /\ p2_8^0-p2_8^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ -y_6^post2+y_6^0 == 0 /\ lt_10^0-lt_10^post2 == 0 /\ -lt_12^post2+lt_12^0 == 0 /\ lt_11^0-lt_11^post2 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l0 -> l4 : lt_11^0'=lt_11^post3, cnt_20^0'=cnt_20^post3, x_5^0'=x_5^post3, p2_8^0'=p2_8^post3, lt_10^0'=lt_10^post3, Result_4^0'=Result_4^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, cnt_25^0'=cnt_25^post3, y_6^0'=y_6^post3, p_7^0'=p_7^post3, (0 == 0 /\ -y_6^post3+y_6^0 == 0 /\ p2_8^0-p2_8^post3 == 0 /\ -x_5^post3+x_5^0 == 0 /\ cnt_20^0-cnt_20^post3 == 0 /\ 1-lt_12^120+lt_11^12 <= 0 /\ -p_7^post3+p_7^0 == 0 /\ -lt_10^post3+lt_10^0 == 0 /\ -cnt_25^post3+cnt_25^0 == 0 /\ -cnt_20^0+lt_11^12 == 0 /\ -Result_4^post3+Result_4^0 == 0 /\ lt_12^120-cnt_25^0 == 0), cost: 1
New rule:
l0 -> l4 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : lt_11^0'=lt_11^post4, cnt_20^0'=cnt_20^post4, x_5^0'=x_5^post4, p2_8^0'=p2_8^post4, lt_10^0'=lt_10^post4, Result_4^0'=Result_4^post4, tmp_9^0'=tmp_9^post4, lt_12^0'=lt_12^post4, cnt_25^0'=cnt_25^post4, y_6^0'=y_6^post4, p_7^0'=p_7^post4, (1+tmp_9^0 <= 0 /\ lt_11^0-lt_11^post4 == 0 /\ -y_6^post4+y_6^0 == 0 /\ x_5^0-x_5^post4 == 0 /\ -p_7^post4+p_7^0 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ -tmp_9^post4+tmp_9^0 == 0 /\ lt_12^0-lt_12^post4 == 0 /\ -cnt_25^post4+cnt_25^0 == 0 /\ cnt_20^0-cnt_20^post4 == 0 /\ -Result_4^post4+Result_4^0 == 0 /\ p2_8^0-p2_8^post4 == 0), cost: 1
New rule:
l4 -> l5 : 1+tmp_9^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : lt_11^0'=lt_11^post5, cnt_20^0'=cnt_20^post5, x_5^0'=x_5^post5, p2_8^0'=p2_8^post5, lt_10^0'=lt_10^post5, Result_4^0'=Result_4^post5, tmp_9^0'=tmp_9^post5, lt_12^0'=lt_12^post5, cnt_25^0'=cnt_25^post5, y_6^0'=y_6^post5, p_7^0'=p_7^post5, (lt_10^0-lt_10^post5 == 0 /\ lt_11^0-lt_11^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ tmp_9^0-tmp_9^post5 == 0 /\ -lt_12^post5+lt_12^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -cnt_25^post5+cnt_25^0 == 0 /\ -p_7^post5+p_7^0 == 0 /\ cnt_20^0-cnt_20^post5 == 0 /\ 1-tmp_9^0 <= 0 /\ -Result_4^post5+Result_4^0 == 0 /\ p2_8^0-p2_8^post5 == 0), cost: 1
New rule:
l4 -> l5 : -1+tmp_9^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l3 : lt_11^0'=lt_11^post6, cnt_20^0'=cnt_20^post6, x_5^0'=x_5^post6, p2_8^0'=p2_8^post6, lt_10^0'=lt_10^post6, Result_4^0'=Result_4^post6, tmp_9^0'=tmp_9^post6, lt_12^0'=lt_12^post6, cnt_25^0'=cnt_25^post6, y_6^0'=y_6^post6, p_7^0'=p_7^post6, (0 == 0 /\ lt_11^0-lt_11^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ y_6^0-y_6^post6 == 0 /\ -cnt_25^post6+cnt_25^0 == 0 /\ Result_4^0-Result_4^post6 == 0 /\ p2_8^0-p2_8^post6 == 0 /\ tmp_9^0-tmp_9^post6 == 0 /\ -lt_12^post6+lt_12^0 == 0 /\ -p_7^post6+p_7^0 == 0 /\ -cnt_20^post6+cnt_20^0 == 0 /\ lt_10^10-cnt_20^0 == 0), cost: 1
New rule:
l5 -> l3 : lt_10^0'=lt_10^post6, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : lt_11^0'=lt_11^post7, cnt_20^0'=cnt_20^post7, x_5^0'=x_5^post7, p2_8^0'=p2_8^post7, lt_10^0'=lt_10^post7, Result_4^0'=Result_4^post7, tmp_9^0'=tmp_9^post7, lt_12^0'=lt_12^post7, cnt_25^0'=cnt_25^post7, y_6^0'=y_6^post7, p_7^0'=p_7^post7, (lt_11^0-lt_11^post7 == 0 /\ x_5^0-x_5^post7 == 0 /\ -p_7^post7+p_7^0 == 0 /\ -Result_4^post7+Result_4^0 == 0 /\ -tmp_9^post7+tmp_9^0 == 0 /\ -cnt_25^post7+cnt_25^0 == 0 /\ -lt_10^post7+lt_10^0 == 0 /\ cnt_20^0-cnt_20^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ lt_12^0-lt_12^post7 == 0 /\ p2_8^0-p2_8^post7 == 0), cost: 1
New rule:
l3 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l0 : lt_11^0'=lt_11^post8, cnt_20^0'=cnt_20^post8, x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, lt_10^0'=lt_10^post8, Result_4^0'=Result_4^post8, tmp_9^0'=tmp_9^post8, lt_12^0'=lt_12^post8, cnt_25^0'=cnt_25^post8, y_6^0'=y_6^post8, p_7^0'=p_7^post8, (0 == 0 /\ lt_10^0-lt_10^post8 == 0 /\ tmp_9^0-tmp_9^post8 == 0 /\ -y_6^post8+p2_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -cnt_25^post8+cnt_25^0 == 0 /\ cnt_20^0-cnt_20^post8 == 0 /\ p_7^post8-x_5^post8 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ -Result_4^post8+Result_4^0 == 0), cost: 1
New rule:
l6 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l6 : lt_11^0'=lt_11^post9, cnt_20^0'=cnt_20^post9, x_5^0'=x_5^post9, p2_8^0'=p2_8^post9, lt_10^0'=lt_10^post9, Result_4^0'=Result_4^post9, tmp_9^0'=tmp_9^post9, lt_12^0'=lt_12^post9, cnt_25^0'=cnt_25^post9, y_6^0'=y_6^post9, p_7^0'=p_7^post9, (cnt_20^0-cnt_20^post9 == 0 /\ Result_4^0-Result_4^post9 == 0 /\ -p2_8^post9+p2_8^0 == 0 /\ -tmp_9^post9+tmp_9^0 == 0 /\ -lt_12^post9+lt_12^0 == 0 /\ -cnt_25^post9+cnt_25^0 == 0 /\ lt_11^0-lt_11^post9 == 0 /\ x_5^0-x_5^post9 == 0 /\ lt_10^0-lt_10^post9 == 0 /\ -y_6^post9+y_6^0 == 0 /\ -p_7^post9+p_7^0 == 0), cost: 1
New rule:
l7 -> l6 : TRUE, cost: 1

Simplified rules
Start location: l7
  10: l0 -> l2 : lt_11^0'=lt_11^post1, tmp_9^0'=0, lt_12^0'=lt_12^post1, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1
  12: l0 -> l4 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1
  11: l2 -> l0 : TRUE, cost: 1
  13: l4 -> l5 : 1+tmp_9^0 <= 0, cost: 1
  14: l4 -> l5 : -1+tmp_9^0 >= 0, cost: 1
  15: l5 -> l3 : lt_10^0'=lt_10^post6, 0 == 0, cost: 1
  16: l3 -> l0 : TRUE, cost: 1
  17: l6 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 1
  18: l7 -> l6 : TRUE, cost: 1


Eliminating location l6 by chaining:

Applied chaining
First rule:
l7 -> l6 : TRUE, cost: 1
Second rule:
l6 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 1
New rule:
l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 17 18

Eliminating location l2 by chaining:

Applied chaining
First rule:
l0 -> l2 : lt_11^0'=lt_11^post1, tmp_9^0'=0, lt_12^0'=lt_12^post1, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1
Second rule:
l2 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : lt_11^0'=lt_11^post1, tmp_9^0'=0, lt_12^0'=lt_12^post1, 1+cnt_20^0-cnt_25^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 10 11

Eliminating location l3 by chaining:

Applied chaining
First rule:
l5 -> l3 : lt_10^0'=lt_10^post6, 0 == 0, cost: 1
Second rule:
l3 -> l0 : TRUE, cost: 1
New rule:
l5 -> l0 : lt_10^0'=lt_10^post6, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 15 16

Eliminated locations on linear paths
Start location: l7
  12: l0 -> l4 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1
  20: l0 -> l0 : lt_11^0'=lt_11^post1, tmp_9^0'=0, lt_12^0'=lt_12^post1, 1+cnt_20^0-cnt_25^0 <= 0, cost: 2
  13: l4 -> l5 : 1+tmp_9^0 <= 0, cost: 1
  14: l4 -> l5 : -1+tmp_9^0 >= 0, cost: 1
  21: l5 -> l0 : lt_10^0'=lt_10^post6, 0 == 0, cost: 2
  19: l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2


Applied nonterm
Original rule:
l0 -> l0 : lt_11^0'=lt_11^post1, tmp_9^0'=0, lt_12^0'=lt_12^post1, 1+cnt_20^0-cnt_25^0 <= 0, cost: 2
New rule:
l0 -> [8] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ -1+n >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NKKGGK.txt

Applied deletion
Removed the following rules: 20

Accelerated simple loops
Start location: l7
  12: l0 -> l4 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1
  22: l0 -> [8] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ -1+n >= 0), cost: NONTERM
  13: l4 -> l5 : 1+tmp_9^0 <= 0, cost: 1
  14: l4 -> l5 : -1+tmp_9^0 >= 0, cost: 1
  21: l5 -> l0 : lt_10^0'=lt_10^post6, 0 == 0, cost: 2
  19: l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2


Applied chaining
First rule:
l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
Second rule:
l0 -> [8] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ -1+n >= 0), cost: NONTERM
New rule:
l7 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l0 : lt_10^0'=lt_10^post6, 0 == 0, cost: 2
Second rule:
l0 -> [8] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ -1+n >= 0), cost: NONTERM
New rule:
l5 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 22

Chained accelerated rules with incoming rules
Start location: l7
  12: l0 -> l4 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1
  13: l4 -> l5 : 1+tmp_9^0 <= 0, cost: 1
  14: l4 -> l5 : -1+tmp_9^0 >= 0, cost: 1
  21: l5 -> l0 : lt_10^0'=lt_10^post6, 0 == 0, cost: 2
  24: l5 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM
  19: l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
  23: l7 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM


Eliminating location l4 by chaining:

Applied chaining
First rule:
l0 -> l4 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1
Second rule:
l4 -> l5 : 1+tmp_9^0 <= 0, cost: 1
New rule:
l0 -> l5 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 2

Applied chaining
First rule:
l0 -> l4 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, 1+cnt_20^0-cnt_25^0 <= 0, cost: 1
Second rule:
l4 -> l5 : -1+tmp_9^0 >= 0, cost: 1
New rule:
l0 -> l5 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 2

Applied deletion
Removed the following rules: 12 13 14

Eliminated locations on tree-shaped paths
Start location: l7
  25: l0 -> l5 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 2
  26: l0 -> l5 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 2
  21: l5 -> l0 : lt_10^0'=lt_10^post6, 0 == 0, cost: 2
  24: l5 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM
  19: l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
  23: l7 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM


Eliminating location l5 by chaining:

Applied chaining
First rule:
l0 -> l5 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 2
Second rule:
l5 -> l0 : lt_10^0'=lt_10^post6, 0 == 0, cost: 2
New rule:
l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (0 == 0 /\ 1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4

Applied simplification
Original rule:
l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (0 == 0 /\ 1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4
New rule:
l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4

Applied chaining
First rule:
l0 -> l5 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 2
Second rule:
l5 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM
New rule:
l0 -> [8] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ 1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l0 -> [8] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ 1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
New rule:
l0 -> [8] : (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM

Applied chaining
First rule:
l0 -> l5 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 2
Second rule:
l5 -> l0 : lt_10^0'=lt_10^post6, 0 == 0, cost: 2
New rule:
l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (0 == 0 /\ -1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4

Applied simplification
Original rule:
l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (0 == 0 /\ -1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4
New rule:
l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4

Applied chaining
First rule:
l0 -> l5 : lt_11^0'=lt_11^post3, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 2
Second rule:
l5 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM
New rule:
l0 -> [8] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ -1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l0 -> [8] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ -1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
New rule:
l0 -> [8] : (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 21 24 25 26

Eliminated locations on tree-shaped paths
Start location: l7
  27: l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4
  28: l0 -> [8] : (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
  29: l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4
  30: l0 -> [8] : (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
  19: l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
  23: l7 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM


Applied nonterm
Original rule:
l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4
New rule:
l0 -> [9] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ -1-tmp_9^post3 >= 0 /\ -1+n0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_HcpEAO.txt

Applied nonterm
Original rule:
l0 -> l0 : lt_11^0'=lt_11^post3, lt_10^0'=lt_10^post6, tmp_9^0'=tmp_9^post3, lt_12^0'=lt_12^post3, (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: 4
New rule:
l0 -> [9] : (-1+n1 >= 0 /\ -1-cnt_20^0+cnt_25^0 >= 0 /\ -1+tmp_9^post3 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ecnoDK.txt

Applied simplification
Original rule:
l0 -> [9] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ -1-tmp_9^post3 >= 0 /\ -1+n0 >= 0), cost: NONTERM
New rule:
l0 -> [9] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ 1+tmp_9^post3 <= 0 /\ -1+n0 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 27 29

Accelerated simple loops
Start location: l7
  28: l0 -> [8] : (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
  30: l0 -> [8] : (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
  32: l0 -> [9] : (-1+n1 >= 0 /\ -1-cnt_20^0+cnt_25^0 >= 0 /\ -1+tmp_9^post3 >= 0), cost: NONTERM
  33: l0 -> [9] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ 1+tmp_9^post3 <= 0 /\ -1+n0 >= 0), cost: NONTERM
  19: l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
  23: l7 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM


Applied chaining
First rule:
l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
Second rule:
l0 -> [9] : (-1+n1 >= 0 /\ -1-cnt_20^0+cnt_25^0 >= 0 /\ -1+tmp_9^post3 >= 0), cost: NONTERM
New rule:
l7 -> [9] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
Second rule:
l0 -> [9] : (-1-cnt_20^0+cnt_25^0 >= 0 /\ 1+tmp_9^post3 <= 0 /\ -1+n0 >= 0), cost: NONTERM
New rule:
l7 -> [9] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 32 33

Chained accelerated rules with incoming rules
Start location: l7
  28: l0 -> [8] : (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
  30: l0 -> [8] : (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
  19: l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
  23: l7 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM
  34: l7 -> [9] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM


Eliminating location l0 by chaining:

Applied chaining
First rule:
l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
Second rule:
l0 -> [8] : (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
New rule:
l7 -> [8] : (0 == 0 /\ 1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l7 -> [8] : (0 == 0 /\ 1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
New rule:
l7 -> [8] : (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM

Applied chaining
First rule:
l7 -> l0 : x_5^0'=x_5^post8, p2_8^0'=p2_8^post8, y_6^0'=p2_8^post8, p_7^0'=x_5^post8, 0 == 0, cost: 2
Second rule:
l0 -> [8] : (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
New rule:
l7 -> [8] : (0 == 0 /\ -1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l7 -> [8] : (0 == 0 /\ -1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
New rule:
l7 -> [8] : (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 19 28 30

Eliminated locations on tree-shaped paths
Start location: l7
  23: l7 -> [8] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM
  34: l7 -> [9] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM
  35: l7 -> [8] : (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
  36: l7 -> [8] : (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM


Removed duplicate rules (ignoring updates)
Start location: l7
  34: l7 -> [9] : -1-cnt_20^0+cnt_25^0 >= 0, cost: NONTERM
  35: l7 -> [8] : (1+tmp_9^post3 <= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM
  36: l7 -> [8] : (-1+tmp_9^post3 >= 0 /\ 1+cnt_20^0-cnt_25^0 <= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 34 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  -1-cnt_20^0+cnt_25^0 >= 0
