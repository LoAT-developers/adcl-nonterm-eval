YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l14, true>
<l1, l2, true>
<l3, l4, (undef26 = (0 + a15^0)) /\ (undef36 = undef36), par{ret_max24^0 -> undef26, tmp___0^0 -> (0 + undef26), z^0 -> undef36}>
<l5, l6, ((1 + y_promoted_2^0) <= (0 + x_promoted_1^0))>
<l5, l4, ((0 + x_promoted_1^0) <= (0 + y_promoted_2^0)) /\ (undef66 = undef66), par{tmp9^0 -> undef66}>
<l7, l3, ((1 + c17^0) <= (0 + a15^0))>
<l7, l3, ((0 + a15^0) <= (0 + c17^0)) /\ (undef101 = undef101), par{tmp923^0 -> undef101}>
<l8, l7, ((1 + b16^0) <= (0 + a15^0))>
<l8, l7, ((0 + a15^0) <= (0 + b16^0)) /\ (undef136 = undef136), par{tmp620^0 -> undef136}>
<l9, l10, ((1 + c12^0) <= (0 + b11^0)), par{m13^0 -> (0 + c12^0)}>
<l9, l10, ((0 + b11^0) <= (0 + c12^0)), par{m13^0 -> (0 + b11^0)}>
<l10, l4, (undef189 = (0 + m13^0)) /\ (undef193 = (0 + undef189)), par{ret_min14^0 -> undef189, tmp^0 -> undef193, x_promoted_1^0 -> ((0 + undef193) + x_promoted_1^0)}>
<l11, l10, ((1 + c12^0) <= (0 + a10^0)), par{m13^0 -> (0 + c12^0)}>
<l11, l10, ((0 + a10^0) <= (0 + c12^0)), par{m13^0 -> (0 + a10^0)}>
<l12, l9, ((1 + b11^0) <= (0 + a10^0))>
<l12, l11, ((0 + a10^0) <= (0 + b11^0))>
<l6, l8, ((1 + z^0) <= (0 + x_promoted_1^0)), par{a15^0 -> (0 + z^0), b16^0 -> (0 + y_promoted_2^0), c17^0 -> (0 + x_promoted_1^0)}>
<l6, l12, ((0 + x_promoted_1^0) <= (0 + z^0)), par{a10^0 -> (0 + x_promoted_1^0), b11^0 -> (0 + y_promoted_2^0), c12^0 -> (0 + z^0)}>
<l4, l1, ((1 + z^0) <= (0 + y_promoted_2^0)), par{tmp___1^0 -> ((0 + y_promoted_2^0) + (~(1) * z^0))}>
<l4, l1, ((0 + y_promoted_2^0) <= (0 + z^0)), par{tmp___1^0 -> ((0 + y_promoted_2^0) + z^0)}>
<l13, l5, true, par{x_promoted_1^0 -> 10, y_promoted_2^0 -> 2, z^0 -> 1}>
<l14, l13, true>

Fresh variables:
undef26, undef36, undef66, undef101, undef136, undef189, undef193, 

Undef variables:
undef26, undef36, undef66, undef101, undef136, undef189, undef193, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, ((1 + 2) <= (0 + 10)) /\ ((1 + 1) <= (0 + 10)) /\ ((0 + (0 + 1)) <= (0 + (0 + 2))) /\ (undef136 = undef136) /\ ((0 + (0 + 1)) <= (0 + (0 + 10))) /\ (undef101 = undef101) /\ (undef26 = (0 + (0 + 1))) /\ (undef36 = undef36) /\ ((1 + undef36) <= (0 + 2))>
<l0, l2, ((1 + 2) <= (0 + 10)) /\ ((1 + 1) <= (0 + 10)) /\ ((0 + (0 + 1)) <= (0 + (0 + 2))) /\ (undef136 = undef136) /\ ((0 + (0 + 1)) <= (0 + (0 + 10))) /\ (undef101 = undef101) /\ (undef26 = (0 + (0 + 1))) /\ (undef36 = undef36) /\ ((0 + 2) <= (0 + undef36))>

Fresh variables:
undef26, undef36, undef66, undef101, undef136, undef189, undef193, 

Undef variables:
undef26, undef36, undef66, undef101, undef136, undef189, undef193, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, undef36 <= 1 /\ undef26 = 1, {all remain the same}>
<l0, l2, 2 <= undef36 /\ undef26 = 1, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Analyzing SCC {l2}...
No cycles found.

[32mProgram Terminates[0m
