WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f157_0_log_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   1: f157_0_log_LE -> f157_0_log_LE\' : arg2'=arg2P1, arg1'=arg1P1, (arg1-arg1P1 == 0 /\ arg1-x50 > 0 /\ -1+arg1 > 0), cost: 1
   2: f157_0_log_LE\' -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, (-2+arg1-2*arg1P2 < 0 /\ arg1-2*arg1P2 >= 0 /\ arg1-arg1P2 > 0 /\ -1+arg1 > 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f157_0_log_LE -> f157_0_log_LE\' : arg2'=arg2P1, arg1'=arg1P1, (arg1-arg1P1 == 0 /\ arg1-x50 > 0 /\ -1+arg1 > 0), cost: 1
New rule:
f157_0_log_LE -> f157_0_log_LE\' : arg2'=arg2P1, -1+arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f157_0_log_LE\' -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, (-2+arg1-2*arg1P2 < 0 /\ arg1-2*arg1P2 >= 0 /\ arg1-arg1P2 > 0 /\ -1+arg1 > 0), cost: 1
New rule:
f157_0_log_LE\' -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, (arg1-2*arg1P2 >= 0 /\ 2-arg1+2*arg1P2 > 0 /\ -1+arg1 > 0), cost: 1

Simplified rules
Start location: __init
   0: f1_0_main_Load -> f157_0_log_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   4: f157_0_log_LE -> f157_0_log_LE\' : arg2'=arg2P1, -1+arg1 > 0, cost: 1
   5: f157_0_log_LE\' -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, (arg1-2*arg1P2 >= 0 /\ 2-arg1+2*arg1P2 > 0 /\ -1+arg1 > 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f157_0_log_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
New rule:
__init -> f157_0_log_LE : arg2'=arg2P0, arg1'=arg1P0, (arg1P3 > 0 /\ 1+arg1P0 > 0 /\ 1+arg2P3 > 0), cost: 2

Applied deletion
Removed the following rules: 0 3

Eliminating location f157_0_log_LE\' by chaining:

Applied chaining
First rule:
f157_0_log_LE -> f157_0_log_LE\' : arg2'=arg2P1, -1+arg1 > 0, cost: 1
Second rule:
f157_0_log_LE\' -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, (arg1-2*arg1P2 >= 0 /\ 2-arg1+2*arg1P2 > 0 /\ -1+arg1 > 0), cost: 1
New rule:
f157_0_log_LE -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, (arg1-2*arg1P2 >= 0 /\ 2-arg1+2*arg1P2 > 0 /\ -1+arg1 > 0), cost: 2

Applied deletion
Removed the following rules: 4 5

Eliminated locations on linear paths
Start location: __init
   7: f157_0_log_LE -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, (arg1-2*arg1P2 >= 0 /\ 2-arg1+2*arg1P2 > 0 /\ -1+arg1 > 0), cost: 2
   6: __init -> f157_0_log_LE : arg2'=arg2P0, arg1'=arg1P0, (arg1P3 > 0 /\ 1+arg1P0 > 0 /\ 1+arg2P3 > 0), cost: 2


Accelerated simple loops
Start location: __init
   7: f157_0_log_LE -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, (arg1-2*arg1P2 >= 0 /\ 2-arg1+2*arg1P2 > 0 /\ -1+arg1 > 0), cost: 2
   6: __init -> f157_0_log_LE : arg2'=arg2P0, arg1'=arg1P0, (arg1P3 > 0 /\ 1+arg1P0 > 0 /\ 1+arg2P3 > 0), cost: 2


Applied chaining
First rule:
__init -> f157_0_log_LE : arg2'=arg2P0, arg1'=arg1P0, (arg1P3 > 0 /\ 1+arg1P0 > 0 /\ 1+arg2P3 > 0), cost: 2
Second rule:
f157_0_log_LE -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, (arg1-2*arg1P2 >= 0 /\ 2-arg1+2*arg1P2 > 0 /\ -1+arg1 > 0), cost: 2
New rule:
__init -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, -1+arg1P2 >= 0, cost: 4

Applied deletion
Removed the following rules: 7

Chained accelerated rules with incoming rules
Start location: __init
   6: __init -> f157_0_log_LE : arg2'=arg2P0, arg1'=arg1P0, (arg1P3 > 0 /\ 1+arg1P0 > 0 /\ 1+arg2P3 > 0), cost: 2
   8: __init -> f157_0_log_LE : arg2'=arg2P2, arg1'=arg1P2, -1+arg1P2 >= 0, cost: 4


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

