YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (arg1 > 0) /\ (0 = arg2), par{arg1 -> 0, arg2 -> 0, arg3 -> 0}>
<l1, l2, (arg1 > 0) /\ (undef7 > ~(1)) /\ (1 = arg2), par{arg1 -> 0, arg2 -> (0 - undef7), arg3 -> 0}>
<l1, l2, (undef11 > ~(1)) /\ (arg2 > 1) /\ (undef12 > ~(1)) /\ (arg1 > 0), par{arg1 -> (0 - undef12), arg2 -> (0 - undef11), arg3 -> (0 - undef12)}>
<l2, l2, (arg1 < arg2) /\ ((arg2 + 1) > arg2) /\ (arg1 < (arg2 + 1)) /\ (arg1 = arg3), par{arg1 -> (arg1 + arg2), arg2 -> (arg2 + 1), arg3 -> (arg1 + arg2)}>
<l3, l1, true, par{arg1 -> undef16, arg2 -> undef17, arg3 -> undef18}>

Fresh variables:
undef7, undef11, undef12, undef16, undef17, undef18, 

Undef variables:
undef7, undef11, undef12, undef16, undef17, undef18, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (undef16 > 0) /\ (0 = undef17), par{arg1 -> 0, arg2 -> 0, arg3 -> 0}>
<l0, l2, (undef16 > 0) /\ (undef7 > ~(1)) /\ (1 = undef17), par{arg1 -> 0, arg2 -> (0 - undef7), arg3 -> 0}>
<l0, l2, (undef11 > ~(1)) /\ (undef17 > 1) /\ (undef12 > ~(1)) /\ (undef16 > 0), par{arg1 -> (0 - undef12), arg2 -> (0 - undef11), arg3 -> (0 - undef12)}>
<l2, l2, (arg1 < arg2) /\ ((arg2 + 1) > arg2) /\ (arg1 < (arg2 + 1)) /\ (arg1 = arg3), par{arg1 -> (arg1 + arg2), arg2 -> (arg2 + 1), arg3 -> (arg1 + arg2)}>

Fresh variables:
undef7, undef11, undef12, undef16, undef17, undef18, 

Undef variables:
undef7, undef11, undef12, undef16, undef17, undef18, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + arg1 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef16 /\ undef17 = 0, {arg1 -> 0, arg2 -> 0, arg3 -> 0, rest remain the same}>
<l0, l2, 0 <= undef7 /\ 1 <= undef16 /\ undef17 = 1, {arg1 -> 0, arg2 -> -undef7, arg3 -> 0, rest remain the same}>
<l0, l2, 0 <= undef11 /\ 0 <= undef12 /\ 1 <= undef16 /\ 2 <= undef17, {arg1 -> -undef12, arg2 -> -undef11, arg3 -> -undef12, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003028

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000708s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001463s
Trying to remove transition: <l2, l2, 1 + arg1 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005822s
Time used: 0.005695
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005814s
Time used: 0.005483
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000155s
Time used: 1.00015

LOG: SAT solveNonLinear - Elapsed time: 1.005969s
Cost: 1; Total time: 1.00563
[31mFailed at location 2: arg2 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: arg2 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003435s
Remaining time after improvement: 0.999133
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg2 <= arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 + arg1 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>
New Graphs: 
Calling Safety with literal arg2 <= arg1 and entry <l0, l2, 0 <= undef11 /\ 0 <= undef12 /\ 1 <= undef16 /\ 2 <= undef17, {arg1 -> -undef12, arg2 -> -undef11, arg3 -> -undef12, rest remain the same}>

LOG: CALL check - Post:arg2 <= arg1 - Process 1
* Exit transition: <l0, l2, 0 <= undef11 /\ 0 <= undef12 /\ 1 <= undef16 /\ 2 <= undef17, {arg1 -> -undef12, arg2 -> -undef11, arg3 -> -undef12, rest remain the same}>
* Postcondition  : arg2 <= arg1

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000271s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000320s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg2 <= arg1 , 
Narrowing transition: 
<l2, l2, 1 + arg1 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 + arg1 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000328s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001082s
Trying to remove transition: <l2, l2, 1 + arg1 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004049s
Time used: 0.003965
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002217s
Time used: 4.00162
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.004341s
Time used: 4.00042
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.002416s
Time used: 1.00003
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009706s
Time used: 0.007085
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000447s
Time used: 1.00044

LOG: SAT solveNonLinear - Elapsed time: 1.010152s
Cost: 1; Total time: 1.00752
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: arg1 <= 1 + arg3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - arg2[0m
New Graphs: 
Transitions:
<l2, l2, 1 + arg1 <= arg2 /\ 50001 <= arg2 /\ arg1 = arg3, {arg1 -> arg1 + arg2, arg2 -> 1 + arg2, arg3 -> arg1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000517s
[33mRanking function: [36m(~(1) / 50000) + (~(1) / 50000)*arg1 + (1 / 50000)*arg2[0m
New Graphs: 
INVARIANTS: 
2: arg1 <= 1 + arg3 , 
Quasi-INVARIANTS to narrow Graph: 
2: 
[32mProgram Terminates[0m
