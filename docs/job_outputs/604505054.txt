WORST_CASE(Omega(0),?)

Initial ITS
Start location: l9
   0: l0 -> l1 : i^0'=i^post0, n^0'=n^post0, guard^0'=guard^post0, j^0'=j^post0, (n^0-n^post0 == 0 /\ j^0-j^post0 == 0 /\ guard^0-guard^post0 == 0 /\ n^0-j^0 <= 0 /\ -1-i^0+i^post0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post1, n^0'=n^post1, guard^0'=guard^post1, j^0'=j^post1, (0 == 0 /\ n^0-n^post1 == 0 /\ i^0-i^post1 == 0 /\ 1-n^0+j^0 <= 0 /\ -j^post1+j^0 == 0), cost: 1
   4: l1 -> l3 : i^0'=i^post4, n^0'=n^post4, guard^0'=guard^post4, j^0'=j^post4, (-guard^post4+guard^0 == 0 /\ -j^post4+j^0 == 0 /\ -n^post4+n^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
   8: l2 -> l6 : i^0'=i^post8, n^0'=n^post8, guard^0'=guard^post8, j^0'=j^post8, (j^0-j^post8 == 0 /\ guard^0 <= 0 /\ -guard^0 <= 0 /\ -guard^post8+guard^0 == 0 /\ -i^post8+i^0 == 0 /\ n^0-n^post8 == 0), cost: 1
   9: l2 -> l7 : i^0'=i^post9, n^0'=n^post9, guard^0'=guard^post9, j^0'=j^post9, (-j^post9+j^0 == 0 /\ n^0-n^post9 == 0 /\ i^0-i^post9 == 0 /\ guard^0-guard^post9 == 0 /\ 1-guard^0 <= 0), cost: 1
  10: l2 -> l7 : i^0'=i^post10, n^0'=n^post10, guard^0'=guard^post10, j^0'=j^post10, (i^0-i^post10 == 0 /\ 1+guard^0 <= 0 /\ guard^0-guard^post10 == 0 /\ -j^post10+j^0 == 0 /\ n^0-n^post10 == 0), cost: 1
   2: l3 -> l4 : i^0'=i^post2, n^0'=n^post2, guard^0'=guard^post2, j^0'=j^post2, (-n^post2+n^0 == 0 /\ i^0-i^post2 == 0 /\ -guard^post2+guard^0 == 0 /\ -i^0+n^0 <= 0 /\ -j^post2+j^0 == 0), cost: 1
   3: l3 -> l5 : i^0'=i^post3, n^0'=n^post3, guard^0'=guard^post3, j^0'=j^post3, (-guard^post3+guard^0 == 0 /\ -n^post3+n^0 == 0 /\ i^0-i^post3 == 0 /\ -1-i^0+j^post3 == 0 /\ 1+i^0-n^0 <= 0), cost: 1
   5: l5 -> l0 : i^0'=i^post5, n^0'=n^post5, guard^0'=guard^post5, j^0'=j^post5, (n^0-n^post5 == 0 /\ j^0-j^post5 == 0 /\ i^0-i^post5 == 0 /\ guard^0-guard^post5 == 0), cost: 1
   6: l6 -> l5 : i^0'=i^post6, n^0'=n^post6, guard^0'=guard^post6, j^0'=j^post6, (i^0-i^post6 == 0 /\ -1+j^post6-j^0 == 0 /\ guard^0-guard^post6 == 0 /\ n^0-n^post6 == 0), cost: 1
   7: l7 -> l6 : i^0'=i^post7, n^0'=n^post7, guard^0'=guard^post7, j^0'=j^post7, (1+j^post7-j^0 == 0 /\ 1+n^post7-n^0 == 0 /\ -guard^post7+guard^0 == 0 /\ i^0-i^post7 == 0), cost: 1
  11: l8 -> l1 : i^0'=i^post11, n^0'=n^post11, guard^0'=guard^post11, j^0'=j^post11, (-n^post11+n^0 == 0 /\ i^post11 == 0 /\ -guard^post11+guard^0 == 0 /\ -j^post11+j^0 == 0), cost: 1
  12: l9 -> l8 : i^0'=i^post12, n^0'=n^post12, guard^0'=guard^post12, j^0'=j^post12, (-n^post12+n^0 == 0 /\ -guard^post12+guard^0 == 0 /\ -j^post12+j^0 == 0 /\ i^0-i^post12 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l9
   0: l0 -> l1 : i^0'=i^post0, n^0'=n^post0, guard^0'=guard^post0, j^0'=j^post0, (n^0-n^post0 == 0 /\ j^0-j^post0 == 0 /\ guard^0-guard^post0 == 0 /\ n^0-j^0 <= 0 /\ -1-i^0+i^post0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post1, n^0'=n^post1, guard^0'=guard^post1, j^0'=j^post1, (0 == 0 /\ n^0-n^post1 == 0 /\ i^0-i^post1 == 0 /\ 1-n^0+j^0 <= 0 /\ -j^post1+j^0 == 0), cost: 1
   4: l1 -> l3 : i^0'=i^post4, n^0'=n^post4, guard^0'=guard^post4, j^0'=j^post4, (-guard^post4+guard^0 == 0 /\ -j^post4+j^0 == 0 /\ -n^post4+n^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
   8: l2 -> l6 : i^0'=i^post8, n^0'=n^post8, guard^0'=guard^post8, j^0'=j^post8, (j^0-j^post8 == 0 /\ guard^0 <= 0 /\ -guard^0 <= 0 /\ -guard^post8+guard^0 == 0 /\ -i^post8+i^0 == 0 /\ n^0-n^post8 == 0), cost: 1
   9: l2 -> l7 : i^0'=i^post9, n^0'=n^post9, guard^0'=guard^post9, j^0'=j^post9, (-j^post9+j^0 == 0 /\ n^0-n^post9 == 0 /\ i^0-i^post9 == 0 /\ guard^0-guard^post9 == 0 /\ 1-guard^0 <= 0), cost: 1
  10: l2 -> l7 : i^0'=i^post10, n^0'=n^post10, guard^0'=guard^post10, j^0'=j^post10, (i^0-i^post10 == 0 /\ 1+guard^0 <= 0 /\ guard^0-guard^post10 == 0 /\ -j^post10+j^0 == 0 /\ n^0-n^post10 == 0), cost: 1
   3: l3 -> l5 : i^0'=i^post3, n^0'=n^post3, guard^0'=guard^post3, j^0'=j^post3, (-guard^post3+guard^0 == 0 /\ -n^post3+n^0 == 0 /\ i^0-i^post3 == 0 /\ -1-i^0+j^post3 == 0 /\ 1+i^0-n^0 <= 0), cost: 1
   5: l5 -> l0 : i^0'=i^post5, n^0'=n^post5, guard^0'=guard^post5, j^0'=j^post5, (n^0-n^post5 == 0 /\ j^0-j^post5 == 0 /\ i^0-i^post5 == 0 /\ guard^0-guard^post5 == 0), cost: 1
   6: l6 -> l5 : i^0'=i^post6, n^0'=n^post6, guard^0'=guard^post6, j^0'=j^post6, (i^0-i^post6 == 0 /\ -1+j^post6-j^0 == 0 /\ guard^0-guard^post6 == 0 /\ n^0-n^post6 == 0), cost: 1
   7: l7 -> l6 : i^0'=i^post7, n^0'=n^post7, guard^0'=guard^post7, j^0'=j^post7, (1+j^post7-j^0 == 0 /\ 1+n^post7-n^0 == 0 /\ -guard^post7+guard^0 == 0 /\ i^0-i^post7 == 0), cost: 1
  11: l8 -> l1 : i^0'=i^post11, n^0'=n^post11, guard^0'=guard^post11, j^0'=j^post11, (-n^post11+n^0 == 0 /\ i^post11 == 0 /\ -guard^post11+guard^0 == 0 /\ -j^post11+j^0 == 0), cost: 1
  12: l9 -> l8 : i^0'=i^post12, n^0'=n^post12, guard^0'=guard^post12, j^0'=j^post12, (-n^post12+n^0 == 0 /\ -guard^post12+guard^0 == 0 /\ -j^post12+j^0 == 0 /\ i^0-i^post12 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : i^0'=i^post0, n^0'=n^post0, guard^0'=guard^post0, j^0'=j^post0, (n^0-n^post0 == 0 /\ j^0-j^post0 == 0 /\ guard^0-guard^post0 == 0 /\ n^0-j^0 <= 0 /\ -1-i^0+i^post0 == 0), cost: 1
New rule:
l0 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : i^0'=i^post1, n^0'=n^post1, guard^0'=guard^post1, j^0'=j^post1, (0 == 0 /\ n^0-n^post1 == 0 /\ i^0-i^post1 == 0 /\ 1-n^0+j^0 <= 0 /\ -j^post1+j^0 == 0), cost: 1
New rule:
l0 -> l2 : guard^0'=guard^post1, 1-n^0+j^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l5 : i^0'=i^post3, n^0'=n^post3, guard^0'=guard^post3, j^0'=j^post3, (-guard^post3+guard^0 == 0 /\ -n^post3+n^0 == 0 /\ i^0-i^post3 == 0 /\ -1-i^0+j^post3 == 0 /\ 1+i^0-n^0 <= 0), cost: 1
New rule:
l3 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : i^0'=i^post4, n^0'=n^post4, guard^0'=guard^post4, j^0'=j^post4, (-guard^post4+guard^0 == 0 /\ -j^post4+j^0 == 0 /\ -n^post4+n^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
New rule:
l1 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l0 : i^0'=i^post5, n^0'=n^post5, guard^0'=guard^post5, j^0'=j^post5, (n^0-n^post5 == 0 /\ j^0-j^post5 == 0 /\ i^0-i^post5 == 0 /\ guard^0-guard^post5 == 0), cost: 1
New rule:
l5 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : i^0'=i^post6, n^0'=n^post6, guard^0'=guard^post6, j^0'=j^post6, (i^0-i^post6 == 0 /\ -1+j^post6-j^0 == 0 /\ guard^0-guard^post6 == 0 /\ n^0-n^post6 == 0), cost: 1
New rule:
l6 -> l5 : j^0'=1+j^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l6 : i^0'=i^post7, n^0'=n^post7, guard^0'=guard^post7, j^0'=j^post7, (1+j^post7-j^0 == 0 /\ 1+n^post7-n^0 == 0 /\ -guard^post7+guard^0 == 0 /\ i^0-i^post7 == 0), cost: 1
New rule:
l7 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l6 : i^0'=i^post8, n^0'=n^post8, guard^0'=guard^post8, j^0'=j^post8, (j^0-j^post8 == 0 /\ guard^0 <= 0 /\ -guard^0 <= 0 /\ -guard^post8+guard^0 == 0 /\ -i^post8+i^0 == 0 /\ n^0-n^post8 == 0), cost: 1
New rule:
l2 -> l6 : guard^0 == 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l7 : i^0'=i^post9, n^0'=n^post9, guard^0'=guard^post9, j^0'=j^post9, (-j^post9+j^0 == 0 /\ n^0-n^post9 == 0 /\ i^0-i^post9 == 0 /\ guard^0-guard^post9 == 0 /\ 1-guard^0 <= 0), cost: 1
New rule:
l2 -> l7 : -1+guard^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l7 : i^0'=i^post10, n^0'=n^post10, guard^0'=guard^post10, j^0'=j^post10, (i^0-i^post10 == 0 /\ 1+guard^0 <= 0 /\ guard^0-guard^post10 == 0 /\ -j^post10+j^0 == 0 /\ n^0-n^post10 == 0), cost: 1
New rule:
l2 -> l7 : 1+guard^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l8 -> l1 : i^0'=i^post11, n^0'=n^post11, guard^0'=guard^post11, j^0'=j^post11, (-n^post11+n^0 == 0 /\ i^post11 == 0 /\ -guard^post11+guard^0 == 0 /\ -j^post11+j^0 == 0), cost: 1
New rule:
l8 -> l1 : i^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l8 : i^0'=i^post12, n^0'=n^post12, guard^0'=guard^post12, j^0'=j^post12, (-n^post12+n^0 == 0 /\ -guard^post12+guard^0 == 0 /\ -j^post12+j^0 == 0 /\ i^0-i^post12 == 0), cost: 1
New rule:
l9 -> l8 : TRUE, cost: 1

Simplified rules
Start location: l9
  13: l0 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 1
  14: l0 -> l2 : guard^0'=guard^post1, 1-n^0+j^0 <= 0, cost: 1
  16: l1 -> l3 : TRUE, cost: 1
  20: l2 -> l6 : guard^0 == 0, cost: 1
  21: l2 -> l7 : -1+guard^0 >= 0, cost: 1
  22: l2 -> l7 : 1+guard^0 <= 0, cost: 1
  15: l3 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 1
  17: l5 -> l0 : TRUE, cost: 1
  18: l6 -> l5 : j^0'=1+j^0, TRUE, cost: 1
  19: l7 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, TRUE, cost: 1
  23: l8 -> l1 : i^0'=0, TRUE, cost: 1
  24: l9 -> l8 : TRUE, cost: 1


Eliminating location l8 by chaining:

Applied chaining
First rule:
l9 -> l8 : TRUE, cost: 1
Second rule:
l8 -> l1 : i^0'=0, TRUE, cost: 1
New rule:
l9 -> l1 : i^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 23 24

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 1
New rule:
l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 15 16

Eliminated locations on linear paths
Start location: l9
  13: l0 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 1
  14: l0 -> l2 : guard^0'=guard^post1, 1-n^0+j^0 <= 0, cost: 1
  26: l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
  20: l2 -> l6 : guard^0 == 0, cost: 1
  21: l2 -> l7 : -1+guard^0 >= 0, cost: 1
  22: l2 -> l7 : 1+guard^0 <= 0, cost: 1
  17: l5 -> l0 : TRUE, cost: 1
  18: l6 -> l5 : j^0'=1+j^0, TRUE, cost: 1
  19: l7 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, TRUE, cost: 1
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l5 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 1
New rule:
l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2

Applied chaining
First rule:
l5 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : guard^0'=guard^post1, 1-n^0+j^0 <= 0, cost: 1
New rule:
l5 -> l2 : guard^0'=guard^post1, 1-n^0+j^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 13 14 17

Eliminating location l7 by chaining:

Applied chaining
First rule:
l2 -> l7 : -1+guard^0 >= 0, cost: 1
Second rule:
l7 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, TRUE, cost: 1
New rule:
l2 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, -1+guard^0 >= 0, cost: 2

Applied chaining
First rule:
l2 -> l7 : 1+guard^0 <= 0, cost: 1
Second rule:
l7 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, TRUE, cost: 1
New rule:
l2 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, 1+guard^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 19 21 22

Eliminated locations on tree-shaped paths
Start location: l9
  26: l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
  20: l2 -> l6 : guard^0 == 0, cost: 1
  29: l2 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, -1+guard^0 >= 0, cost: 2
  30: l2 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, 1+guard^0 <= 0, cost: 2
  27: l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
  28: l5 -> l2 : guard^0'=guard^post1, 1-n^0+j^0 <= 0, cost: 2
  18: l6 -> l5 : j^0'=1+j^0, TRUE, cost: 1
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Eliminating location l2 by chaining:

Applied chaining
First rule:
l5 -> l2 : guard^0'=guard^post1, 1-n^0+j^0 <= 0, cost: 2
Second rule:
l2 -> l6 : guard^0 == 0, cost: 1
New rule:
l5 -> l6 : guard^0'=guard^post1, (guard^post1 == 0 /\ 1-n^0+j^0 <= 0), cost: 3

Applied chaining
First rule:
l5 -> l2 : guard^0'=guard^post1, 1-n^0+j^0 <= 0, cost: 2
Second rule:
l2 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, -1+guard^0 >= 0, cost: 2
New rule:
l5 -> l6 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=-1+j^0, (-1+guard^post1 >= 0 /\ 1-n^0+j^0 <= 0), cost: 4

Applied chaining
First rule:
l5 -> l2 : guard^0'=guard^post1, 1-n^0+j^0 <= 0, cost: 2
Second rule:
l2 -> l6 : n^0'=-1+n^0, j^0'=-1+j^0, 1+guard^0 <= 0, cost: 2
New rule:
l5 -> l6 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=-1+j^0, (1+guard^post1 <= 0 /\ 1-n^0+j^0 <= 0), cost: 4

Applied deletion
Removed the following rules: 20 28 29 30

Eliminated locations on tree-shaped paths
Start location: l9
  26: l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
  27: l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
  31: l5 -> l6 : guard^0'=guard^post1, (guard^post1 == 0 /\ 1-n^0+j^0 <= 0), cost: 3
  32: l5 -> l6 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=-1+j^0, (-1+guard^post1 >= 0 /\ 1-n^0+j^0 <= 0), cost: 4
  33: l5 -> l6 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=-1+j^0, (1+guard^post1 <= 0 /\ 1-n^0+j^0 <= 0), cost: 4
  18: l6 -> l5 : j^0'=1+j^0, TRUE, cost: 1
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Eliminating location l6 by chaining:

Applied chaining
First rule:
l5 -> l6 : guard^0'=guard^post1, (guard^post1 == 0 /\ 1-n^0+j^0 <= 0), cost: 3
Second rule:
l6 -> l5 : j^0'=1+j^0, TRUE, cost: 1
New rule:
l5 -> l5 : guard^0'=guard^post1, j^0'=1+j^0, (guard^post1 == 0 /\ 1-n^0+j^0 <= 0), cost: 4

Applied chaining
First rule:
l5 -> l6 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=-1+j^0, (-1+guard^post1 >= 0 /\ 1-n^0+j^0 <= 0), cost: 4
Second rule:
l6 -> l5 : j^0'=1+j^0, TRUE, cost: 1
New rule:
l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=j^0, (-1+guard^post1 >= 0 /\ 1-n^0+j^0 <= 0), cost: 5

Applied chaining
First rule:
l5 -> l6 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=-1+j^0, (1+guard^post1 <= 0 /\ 1-n^0+j^0 <= 0), cost: 4
Second rule:
l6 -> l5 : j^0'=1+j^0, TRUE, cost: 1
New rule:
l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=j^0, (1+guard^post1 <= 0 /\ 1-n^0+j^0 <= 0), cost: 5

Applied deletion
Removed the following rules: 18 31 32 33

Eliminated locations on tree-shaped paths
Start location: l9
  26: l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
  27: l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
  34: l5 -> l5 : guard^0'=guard^post1, j^0'=1+j^0, (guard^post1 == 0 /\ 1-n^0+j^0 <= 0), cost: 4
  35: l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=j^0, (-1+guard^post1 >= 0 /\ 1-n^0+j^0 <= 0), cost: 5
  36: l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=j^0, (1+guard^post1 <= 0 /\ 1-n^0+j^0 <= 0), cost: 5
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Applied simplification
Original rule:
l5 -> l5 : guard^0'=guard^post1, j^0'=1+j^0, (guard^post1 == 0 /\ 1-n^0+j^0 <= 0), cost: 4
New rule:
l5 -> l5 : guard^0'=0, j^0'=1+j^0, 1-n^0+j^0 <= 0, cost: 4

Applied simplification
Original rule:
l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=j^0, (-1+guard^post1 >= 0 /\ 1-n^0+j^0 <= 0), cost: 5
New rule:
l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, (-1+guard^post1 >= 0 /\ 1-n^0+j^0 <= 0), cost: 5

Applied simplification
Original rule:
l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, j^0'=j^0, (1+guard^post1 <= 0 /\ 1-n^0+j^0 <= 0), cost: 5
New rule:
l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, (1+guard^post1 <= 0 /\ 1-n^0+j^0 <= 0), cost: 5

Simplified simple loops
Start location: l9
  26: l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
  27: l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
  37: l5 -> l5 : guard^0'=0, j^0'=1+j^0, 1-n^0+j^0 <= 0, cost: 4
  38: l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, (-1+guard^post1 >= 0 /\ 1-n^0+j^0 <= 0), cost: 5
  39: l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, (1+guard^post1 <= 0 /\ 1-n^0+j^0 <= 0), cost: 5
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l5 -> l5 : guard^0'=0, j^0'=1+j^0, 1-n^0+j^0 <= 0, cost: 4
New rule:
l5 -> l5 : guard^0'=0, j^0'=n+j^0, (n^0-n-j^0 >= 0 /\ -1+n >= 0), cost: 4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_KNIhBc.txt

Applied instantiation
Original rule:
l5 -> l5 : guard^0'=0, j^0'=n+j^0, (n^0-n-j^0 >= 0 /\ -1+n >= 0), cost: 4*n
New rule:
l5 -> l5 : guard^0'=0, j^0'=n^0, (0 >= 0 /\ -1+n^0-j^0 >= 0), cost: 4*n^0-4*j^0

Applied acceleration
Original rule:
l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, (-1+guard^post1 >= 0 /\ 1-n^0+j^0 <= 0), cost: 5
New rule:
l5 -> l5 : n^0'=-n0+n^0, guard^0'=guard^post1, (-1+guard^post1 >= 0 /\ -n0+n^0-j^0 >= 0 /\ -1+n0 >= 0), cost: 5*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hAlbph.txt

Applied instantiation
Original rule:
l5 -> l5 : n^0'=-n0+n^0, guard^0'=guard^post1, (-1+guard^post1 >= 0 /\ -n0+n^0-j^0 >= 0 /\ -1+n0 >= 0), cost: 5*n0
New rule:
l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (0 >= 0 /\ -1+guard^post1 >= 0 /\ -1+n^0-j^0 >= 0), cost: 5*n^0-5*j^0

Applied acceleration
Original rule:
l5 -> l5 : n^0'=-1+n^0, guard^0'=guard^post1, (1+guard^post1 <= 0 /\ 1-n^0+j^0 <= 0), cost: 5
New rule:
l5 -> l5 : n^0'=n^0-n1, guard^0'=guard^post1, (-1+n1 >= 0 /\ n^0-j^0-n1 >= 0 /\ -1-guard^post1 >= 0), cost: 5*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JMgcKo.txt

Applied instantiation
Original rule:
l5 -> l5 : n^0'=n^0-n1, guard^0'=guard^post1, (-1+n1 >= 0 /\ n^0-j^0-n1 >= 0 /\ -1-guard^post1 >= 0), cost: 5*n1
New rule:
l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (0 >= 0 /\ -1+n^0-j^0 >= 0 /\ -1-guard^post1 >= 0), cost: 5*n^0-5*j^0

Applied simplification
Original rule:
l5 -> l5 : guard^0'=0, j^0'=n^0, (0 >= 0 /\ -1+n^0-j^0 >= 0), cost: 4*n^0-4*j^0
New rule:
l5 -> l5 : guard^0'=0, j^0'=n^0, -1+n^0-j^0 >= 0, cost: 4*n^0-4*j^0

Applied simplification
Original rule:
l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (0 >= 0 /\ -1+guard^post1 >= 0 /\ -1+n^0-j^0 >= 0), cost: 5*n^0-5*j^0
New rule:
l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (-1+guard^post1 >= 0 /\ -1+n^0-j^0 >= 0), cost: 5*n^0-5*j^0

Applied simplification
Original rule:
l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (0 >= 0 /\ -1+n^0-j^0 >= 0 /\ -1-guard^post1 >= 0), cost: 5*n^0-5*j^0
New rule:
l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (-1+n^0-j^0 >= 0 /\ 1+guard^post1 <= 0), cost: 5*n^0-5*j^0

Applied deletion
Removed the following rules: 37 38 39

Accelerated simple loops
Start location: l9
  26: l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
  27: l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
  43: l5 -> l5 : guard^0'=0, j^0'=n^0, -1+n^0-j^0 >= 0, cost: 4*n^0-4*j^0
  44: l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (-1+guard^post1 >= 0 /\ -1+n^0-j^0 >= 0), cost: 5*n^0-5*j^0
  45: l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (-1+n^0-j^0 >= 0 /\ 1+guard^post1 <= 0), cost: 5*n^0-5*j^0
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
Second rule:
l5 -> l5 : guard^0'=0, j^0'=n^0, -1+n^0-j^0 >= 0, cost: 4*n^0-4*j^0
New rule:
l1 -> l5 : guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -2-4*i^0+4*n^0

Applied chaining
First rule:
l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
Second rule:
l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (-1+guard^post1 >= 0 /\ -1+n^0-j^0 >= 0), cost: 5*n^0-5*j^0
New rule:
l1 -> l5 : n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -3-5*i^0+5*n^0

Applied chaining
First rule:
l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
Second rule:
l5 -> l5 : n^0'=j^0, guard^0'=guard^post1, (-1+n^0-j^0 >= 0 /\ 1+guard^post1 <= 0), cost: 5*n^0-5*j^0
New rule:
l1 -> l5 : n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -3-5*i^0+5*n^0

Applied deletion
Removed the following rules: 43 44 45

Chained accelerated rules with incoming rules
Start location: l9
  26: l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
  46: l1 -> l5 : guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -2-4*i^0+4*n^0
  47: l1 -> l5 : n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -3-5*i^0+5*n^0
  48: l1 -> l5 : n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -3-5*i^0+5*n^0
  27: l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Eliminating location l5 by chaining:

Applied chaining
First rule:
l1 -> l5 : j^0'=1+i^0, 1+i^0-n^0 <= 0, cost: 2
Second rule:
l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
New rule:
l1 -> l1 : i^0'=1+i^0, j^0'=1+i^0, (-1-i^0+n^0 <= 0 /\ 1+i^0-n^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l5 : guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -2-4*i^0+4*n^0
Second rule:
l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
New rule:
l1 -> l1 : i^0'=1+i^0, guard^0'=0, j^0'=n^0, (0 <= 0 /\ -2-i^0+n^0 >= 0), cost: -4*i^0+4*n^0

Applied simplification
Original rule:
l1 -> l1 : i^0'=1+i^0, guard^0'=0, j^0'=n^0, (0 <= 0 /\ -2-i^0+n^0 >= 0), cost: -4*i^0+4*n^0
New rule:
l1 -> l1 : i^0'=1+i^0, guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -4*i^0+4*n^0

Applied chaining
First rule:
l1 -> l5 : n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -3-5*i^0+5*n^0
Second rule:
l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
New rule:
l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (0 <= 0 /\ -1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -1-5*i^0+5*n^0

Applied simplification
Original rule:
l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (0 <= 0 /\ -1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -1-5*i^0+5*n^0
New rule:
l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -1-5*i^0+5*n^0

Applied chaining
First rule:
l1 -> l5 : n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -3-5*i^0+5*n^0
Second rule:
l5 -> l1 : i^0'=1+i^0, n^0-j^0 <= 0, cost: 2
New rule:
l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (0 <= 0 /\ -2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -1-5*i^0+5*n^0

Applied simplification
Original rule:
l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (0 <= 0 /\ -2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -1-5*i^0+5*n^0
New rule:
l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -1-5*i^0+5*n^0

Applied deletion
Removed the following rules: 26 27 46 47 48

Eliminated locations on tree-shaped paths
Start location: l9
  49: l1 -> l1 : i^0'=1+i^0, j^0'=1+i^0, (-1-i^0+n^0 <= 0 /\ 1+i^0-n^0 <= 0), cost: 4
  50: l1 -> l1 : i^0'=1+i^0, guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -4*i^0+4*n^0
  51: l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -1-5*i^0+5*n^0
  52: l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -1-5*i^0+5*n^0
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Applied simplification
Original rule:
l1 -> l1 : i^0'=1+i^0, j^0'=1+i^0, (-1-i^0+n^0 <= 0 /\ 1+i^0-n^0 <= 0), cost: 4
New rule:
l1 -> l1 : i^0'=1+i^0, j^0'=1+i^0, -1-i^0+n^0 == 0, cost: 4

Simplified simple loops
Start location: l9
  50: l1 -> l1 : i^0'=1+i^0, guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -4*i^0+4*n^0
  51: l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -1-5*i^0+5*n^0
  52: l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -1-5*i^0+5*n^0
  53: l1 -> l1 : i^0'=1+i^0, j^0'=1+i^0, -1-i^0+n^0 == 0, cost: 4
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : i^0'=1+i^0, guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -4*i^0+4*n^0
New rule:
l1 -> l1 : i^0'=i^0+n10, guard^0'=0, j^0'=n^0, (-1-i^0+n^0-n10 >= 0 /\ -1+n10 >= 0), cost: -2*n10^2+2*n10+4*n^0*n10-4*i^0*n10
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hPaAdM.txt

Applied instantiation
Original rule:
l1 -> l1 : i^0'=i^0+n10, guard^0'=0, j^0'=n^0, (-1-i^0+n^0-n10 >= 0 /\ -1+n10 >= 0), cost: -2*n10^2+2*n10+4*n^0*n10-4*i^0*n10
New rule:
l1 -> l1 : i^0'=-1+n^0, guard^0'=0, j^0'=n^0, (0 >= 0 /\ -2-i^0+n^0 >= 0), cost: -2-2*i^0-2*(1+i^0-n^0)^2+4*i^0*(1+i^0-n^0)-4*n^0*(1+i^0-n^0)+2*n^0

Applied simplification
Original rule:
l1 -> l1 : i^0'=-1+n^0, guard^0'=0, j^0'=n^0, (0 >= 0 /\ -2-i^0+n^0 >= 0), cost: -2-2*i^0-2*(1+i^0-n^0)^2+4*i^0*(1+i^0-n^0)-4*n^0*(1+i^0-n^0)+2*n^0
New rule:
l1 -> l1 : i^0'=-1+n^0, guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -2-2*i^0-2*(1+i^0-n^0)^2+4*i^0*(1+i^0-n^0)-4*n^0*(1+i^0-n^0)+2*n^0

Applied deletion
Removed the following rules: 50

Accelerated simple loops
Start location: l9
  51: l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -1-5*i^0+5*n^0
  52: l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -1-5*i^0+5*n^0
  53: l1 -> l1 : i^0'=1+i^0, j^0'=1+i^0, -1-i^0+n^0 == 0, cost: 4
  55: l1 -> l1 : i^0'=-1+n^0, guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -2-2*i^0-2*(1+i^0-n^0)^2+4*i^0*(1+i^0-n^0)-4*n^0*(1+i^0-n^0)+2*n^0
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l9 -> l1 : i^0'=0, TRUE, cost: 2
Second rule:
l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-1+guard^post1 >= 0 /\ -2-i^0+n^0 >= 0), cost: -1-5*i^0+5*n^0
New rule:
l9 -> l1 : i^0'=1, n^0'=1, guard^0'=guard^post1, j^0'=1, (-1+guard^post1 >= 0 /\ -2+n^0 >= 0), cost: 1+5*n^0

Applied chaining
First rule:
l9 -> l1 : i^0'=0, TRUE, cost: 2
Second rule:
l1 -> l1 : i^0'=1+i^0, n^0'=1+i^0, guard^0'=guard^post1, j^0'=1+i^0, (-2-i^0+n^0 >= 0 /\ 1+guard^post1 <= 0), cost: -1-5*i^0+5*n^0
New rule:
l9 -> l1 : i^0'=1, n^0'=1, guard^0'=guard^post1, j^0'=1, (1+guard^post1 <= 0 /\ -2+n^0 >= 0), cost: 1+5*n^0

Applied chaining
First rule:
l9 -> l1 : i^0'=0, TRUE, cost: 2
Second rule:
l1 -> l1 : i^0'=1+i^0, j^0'=1+i^0, -1-i^0+n^0 == 0, cost: 4
New rule:
l9 -> l1 : i^0'=1, j^0'=1, -1+n^0 == 0, cost: 6

Applied chaining
First rule:
l9 -> l1 : i^0'=0, TRUE, cost: 2
Second rule:
l1 -> l1 : i^0'=-1+n^0, guard^0'=0, j^0'=n^0, -2-i^0+n^0 >= 0, cost: -2-2*i^0-2*(1+i^0-n^0)^2+4*i^0*(1+i^0-n^0)-4*n^0*(1+i^0-n^0)+2*n^0
New rule:
l9 -> l1 : i^0'=-1+n^0, guard^0'=0, j^0'=n^0, -2+n^0 >= 0, cost: 2*n^0+4*(-1+n^0)*n^0-2*(-1+n^0)^2

Applied deletion
Removed the following rules: 51 52 53 55

Chained accelerated rules with incoming rules
Start location: l9
  25: l9 -> l1 : i^0'=0, TRUE, cost: 2
  56: l9 -> l1 : i^0'=1, n^0'=1, guard^0'=guard^post1, j^0'=1, (-1+guard^post1 >= 0 /\ -2+n^0 >= 0), cost: 1+5*n^0
  57: l9 -> l1 : i^0'=1, n^0'=1, guard^0'=guard^post1, j^0'=1, (1+guard^post1 <= 0 /\ -2+n^0 >= 0), cost: 1+5*n^0
  58: l9 -> l1 : i^0'=1, j^0'=1, -1+n^0 == 0, cost: 6
  59: l9 -> l1 : i^0'=-1+n^0, guard^0'=0, j^0'=n^0, -2+n^0 >= 0, cost: 2*n^0+4*(-1+n^0)*n^0-2*(-1+n^0)^2


Removed unreachable locations and irrelevant leafs
Start location: l9
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

