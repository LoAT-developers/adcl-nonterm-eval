unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3
   0: f169_0_createList_Return -> f236_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ arg2p1-arg2 <= 0 /\ -1-arg2+arg1p1 <= 0 /\ 1+arg2p1 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
   4: f236_0_main_InvokeMethod -> f358_0_duplicate_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ 1-arg2p5 == 0 /\ x13 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f236_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0), cost: 1
   2: f1_0_main_Load -> f208_0_createList_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (1+arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   3: f208_0_createList_LE -> f208_0_createList_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (-1-arg1p4+arg1 == 0 /\ arg1 > 0), cost: 1
   5: f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (1+arg1p6-arg1 <= 0 /\ 1+arg1p6 > 0 /\ 1-arg3+arg1p6 <= 0 /\ arg3 > 0 /\ 1-arg2p6 == 0 /\ 1+arg3p6-arg1 <= 0 /\ -arg2 == 0 /\ 1+arg3p6 > 0 /\ 1-arg3+arg3p6 <= 0 /\ arg1 > 0), cost: 1
   6: f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (-arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg2p7 == 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3
   0: f169_0_createList_Return -> f236_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ arg2p1-arg2 <= 0 /\ -1-arg2+arg1p1 <= 0 /\ 1+arg2p1 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
   9: f236_0_main_InvokeMethod -> f358_0_duplicate_NULL : arg1'=arg1p5, arg2'=1, arg3'=arg3p5, (1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f236_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0), cost: 1
   2: f1_0_main_Load -> f208_0_createList_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (1+arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f208_0_createList_LE -> f208_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, arg1 > 0, cost: 1
  10: f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p6, arg2'=1, arg3'=arg3p6, (1+arg1p6-arg1 <= 0 /\ 1+arg1p6 > 0 /\ 1-arg3+arg1p6 <= 0 /\ arg3 > 0 /\ 1+arg3p6-arg1 <= 0 /\ -arg2 == 0 /\ 1+arg3p6 > 0 /\ 1-arg3+arg3p6 <= 0 /\ arg1 > 0), cost: 1
  11: f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, (-arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, T, cost: 1

	Propagated Equalities

	Original rule:
	f208_0_createList_LE -> f208_0_createList_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (-1-arg1p4+arg1 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f208_0_createList_LE -> f208_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, (0 == 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg1p4 = -1+arg1
		
	Simplified Guard

	Original rule:
	f208_0_createList_LE -> f208_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, (0 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f208_0_createList_LE -> f208_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, arg1 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	f236_0_main_InvokeMethod -> f358_0_duplicate_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ 1-arg2p5 == 0 /\ x13 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f236_0_main_InvokeMethod -> f358_0_duplicate_NULL : arg1'=arg1p5, arg2'=1, arg3'=arg3p5, (0 == 0 /\ 1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p5 = 1
		
	Simplified Guard

	Original rule:
	f236_0_main_InvokeMethod -> f358_0_duplicate_NULL : arg1'=arg1p5, arg2'=1, arg3'=arg3p5, (0 == 0 /\ 1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f236_0_main_InvokeMethod -> f358_0_duplicate_NULL : arg1'=arg1p5, arg2'=1, arg3'=arg3p5, (1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f236_0_main_InvokeMethod -> f358_0_duplicate_NULL : arg1'=arg1p5, arg2'=1, arg3'=arg3p5, (1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f236_0_main_InvokeMethod -> f358_0_duplicate_NULL : arg1'=arg1p5, arg2'=1, arg3'=arg3p5, (1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (1+arg1p6-arg1 <= 0 /\ 1+arg1p6 > 0 /\ 1-arg3+arg1p6 <= 0 /\ arg3 > 0 /\ 1-arg2p6 == 0 /\ 1+arg3p6-arg1 <= 0 /\ -arg2 == 0 /\ 1+arg3p6 > 0 /\ 1-arg3+arg3p6 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p6, arg2'=1, arg3'=arg3p6, (0 == 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg1p6 > 0 /\ 1-arg3+arg1p6 <= 0 /\ arg3 > 0 /\ 1+arg3p6-arg1 <= 0 /\ -arg2 == 0 /\ 1+arg3p6 > 0 /\ 1-arg3+arg3p6 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p6 = 1
		
	Simplified Guard

	Original rule:
	f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p6, arg2'=1, arg3'=arg3p6, (0 == 0 /\ 1+arg1p6-arg1 <= 0 /\ 1+arg1p6 > 0 /\ 1-arg3+arg1p6 <= 0 /\ arg3 > 0 /\ 1+arg3p6-arg1 <= 0 /\ -arg2 == 0 /\ 1+arg3p6 > 0 /\ 1-arg3+arg3p6 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p6, arg2'=1, arg3'=arg3p6, (1+arg1p6-arg1 <= 0 /\ 1+arg1p6 > 0 /\ 1-arg3+arg1p6 <= 0 /\ arg3 > 0 /\ 1+arg3p6-arg1 <= 0 /\ -arg2 == 0 /\ 1+arg3p6 > 0 /\ 1-arg3+arg3p6 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (-arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg2p7 == 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, (0 == 0 /\ -arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p7 = 0
		
	Simplified Guard

	Original rule:
	f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, (0 == 0 /\ -arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, (-arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1

Step with 7

	Trace

	7[T]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	7[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 9

	Trace

	7[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 9[(1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 11

	Trace

	7[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 9[(1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0)], 11[(-arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 10

	Trace

	7[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 9[(1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0)], 11[(-arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0)], 10[(1+arg1p6-arg1 <= 0 /\ 1+arg1p6 > 0 /\ 1-arg3+arg1p6 <= 0 /\ arg3 > 0 /\ 1+arg3p6-arg1 <= 0 /\ -arg2 == 0 /\ 1+arg3p6 > 0 /\ 1-arg3+arg3p6 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}, {11[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	7[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 9[(1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0)], 11[(-arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}, {10[T], 11[T]}]

Backtrack

	Trace

	7[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 9[(1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {10[T], 11[T]}]

Backtrack

	Trace

	7[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {9[T]}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {1[T]}]

Step with 2

	Trace

	7[T], 2[(1+arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {}]

Step with 8

	Trace

	7[T], 2[(1+arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0)], 8[(arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   0: f169_0_createList_Return -> f236_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ arg2p1-arg2 <= 0 /\ -1-arg2+arg1p1 <= 0 /\ 1+arg2p1 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
   9: f236_0_main_InvokeMethod -> f358_0_duplicate_NULL : arg1'=arg1p5, arg2'=1, arg3'=arg3p5, (1+arg1p5 > 0 /\ -arg2+arg3p5 <= 0 /\ 1+arg2 > 0 /\ -arg2+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f236_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0), cost: 1
   2: f1_0_main_Load -> f208_0_createList_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (1+arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f208_0_createList_LE -> f208_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, arg1 > 0, cost: 1
  12: f208_0_createList_LE -> f208_0_createList_LE : arg1'=-n+arg1, arg2'=arg2p4, arg3'=arg3p4, (1-n+arg1 > 0 /\ -1+n >= 0), cost: 1
  10: f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p6, arg2'=1, arg3'=arg3p6, (1+arg1p6-arg1 <= 0 /\ 1+arg1p6 > 0 /\ 1-arg3+arg1p6 <= 0 /\ arg3 > 0 /\ 1+arg3p6-arg1 <= 0 /\ -arg2 == 0 /\ 1+arg3p6 > 0 /\ 1-arg3+arg3p6 <= 0 /\ arg1 > 0), cost: 1
  11: f358_0_duplicate_NULL -> f358_0_duplicate_NULL : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, (-arg3+arg3p7 <= 0 /\ arg3p7-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg1p7 <= 0 /\ arg3p7 > 0 /\ 1-arg2 == 0 /\ arg1p7 > 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, T, cost: 1

	Loop Acceleration

	Original rule:
	f208_0_createList_LE -> f208_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, (arg1 > 0), cost: 1
	New rule:
	f208_0_createList_LE -> f208_0_createList_LE : arg1'=-n+arg1, arg2'=arg2p4, arg3'=arg3p4, (1-n+arg1 > 0 /\ -1+n >= 0), cost: 1

		arg1 > 0 [0]: montonic decrease yields 1-n+arg1 > 0
		
		arg1 > 0 [1]: eventual increase yields (1 <= 0 /\ arg1 > 0)
		
		Replacement map: {arg1 > 0 -> 1-n+arg1 > 0}

	Trace

	7[T], 2[(1+arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0)], 12[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {1[T]}, {}, {8[T], 12[T]}]

Backtrack

	Trace

	7[T], 2[(1+arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {12[T]}]

Step with 8

	Trace

	7[T], 2[(1+arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0)], 8[(arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {12[T]}, {}]

Covered

	Trace

	7[T], 2[(1+arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {8[T], 12[T]}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {1[T], 2[T]}]

Backtrack

	Trace

	Blocked

	[{7[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
