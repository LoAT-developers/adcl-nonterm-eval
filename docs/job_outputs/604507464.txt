unknown

Initial ITS

Start location: l4
Program variables: i^0 j^0 n^0
   0: l0 -> l1 : i^0'=i^post1, j^0'=j^post1, n^0'=n^post1, (-n^post1+n^0 == 0 /\ i^0-j^0 <= 0 /\ -j^post1+j^0 == 0 /\ -1-i^0+i^post1 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post2, j^0'=j^post2, n^0'=n^post2, (-1+j^post2-j^0 == 0 /\ i^0-i^post2 == 0 /\ 1-i^0+j^0 <= 0 /\ -n^post2+n^0 == 0), cost: 1
   3: l1 -> l0 : i^0'=i^post4, j^0'=j^post4, n^0'=n^post4, (j^post4 == 0 /\ 1+i^0-n^0 <= 0 /\ -n^post4+n^0 == 0 /\ i^0-i^post4 == 0), cost: 1
   2: l2 -> l0 : i^0'=i^post3, j^0'=j^post3, n^0'=n^post3, (i^0-i^post3 == 0 /\ -n^post3+n^0 == 0 /\ -j^post3+j^0 == 0), cost: 1
   4: l3 -> l1 : i^0'=i^post5, j^0'=j^post5, n^0'=n^post5, (-j^post5+j^0 == 0 /\ i^post5 == 0 /\ -n^post5+n^0 == 0), cost: 1
   5: l4 -> l3 : i^0'=i^post6, j^0'=j^post6, n^0'=n^post6, (-i^post6+i^0 == 0 /\ -n^post6+n^0 == 0 /\ -j^post6+j^0 == 0), cost: 1

Chained Linear Paths

Start location: l4
Program variables: i^0 j^0 n^0
   0: l0 -> l1 : i^0'=i^post1, j^0'=j^post1, n^0'=n^post1, (-n^post1+n^0 == 0 /\ i^0-j^0 <= 0 /\ -j^post1+j^0 == 0 /\ -1-i^0+i^post1 == 0), cost: 1
   7: l0 -> l0 : i^0'=i^post3, j^0'=j^post3, n^0'=n^post3, (-1+j^post2-j^0 == 0 /\ j^post2-j^post3 == 0 /\ n^post2-n^post3 == 0 /\ i^0-i^post2 == 0 /\ 1-i^0+j^0 <= 0 /\ -n^post2+n^0 == 0 /\ i^post2-i^post3 == 0), cost: 1
   3: l1 -> l0 : i^0'=i^post4, j^0'=j^post4, n^0'=n^post4, (j^post4 == 0 /\ 1+i^0-n^0 <= 0 /\ -n^post4+n^0 == 0 /\ i^0-i^post4 == 0), cost: 1
   6: l4 -> l1 : i^0'=i^post5, j^0'=j^post5, n^0'=n^post5, (j^post6-j^post5 == 0 /\ n^post6-n^post5 == 0 /\ -i^post6+i^0 == 0 /\ -n^post6+n^0 == 0 /\ -j^post6+j^0 == 0 /\ i^post5 == 0), cost: 1

	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l4 -> l3 : i^0'=i^post6, j^0'=j^post6, n^0'=n^post6, (-i^post6+i^0 == 0 /\ -n^post6+n^0 == 0 /\ -j^post6+j^0 == 0), cost: 1
	Second rule:
	l3 -> l1 : i^0'=i^post5, j^0'=j^post5, n^0'=n^post5, (-j^post5+j^0 == 0 /\ i^post5 == 0 /\ -n^post5+n^0 == 0), cost: 1
	New rule:
	l4 -> l1 : i^0'=i^post5, j^0'=j^post5, n^0'=n^post5, (j^post6-j^post5 == 0 /\ n^post6-n^post5 == 0 /\ -i^post6+i^0 == 0 /\ -n^post6+n^0 == 0 /\ -j^post6+j^0 == 0 /\ i^post5 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l0 -> l2 : i^0'=i^post2, j^0'=j^post2, n^0'=n^post2, (-1+j^post2-j^0 == 0 /\ i^0-i^post2 == 0 /\ 1-i^0+j^0 <= 0 /\ -n^post2+n^0 == 0), cost: 1
	Second rule:
	l2 -> l0 : i^0'=i^post3, j^0'=j^post3, n^0'=n^post3, (i^0-i^post3 == 0 /\ -n^post3+n^0 == 0 /\ -j^post3+j^0 == 0), cost: 1
	New rule:
	l0 -> l0 : i^0'=i^post3, j^0'=j^post3, n^0'=n^post3, (-1+j^post2-j^0 == 0 /\ j^post2-j^post3 == 0 /\ n^post2-n^post3 == 0 /\ i^0-i^post2 == 0 /\ 1-i^0+j^0 <= 0 /\ -n^post2+n^0 == 0 /\ i^post2-i^post3 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 1 2

Simplified Transitions

Start location: l4
Program variables: i^0 j^0 n^0
   8: l0 -> l1 : i^0'=1+i^0, i^0-j^0 <= 0, cost: 1
  11: l0 -> l0 : j^0'=1+j^0, 1-i^0+j^0 <= 0, cost: 1
   9: l1 -> l0 : j^0'=0, 1+i^0-n^0 <= 0, cost: 1
  10: l4 -> l1 : i^0'=0, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : i^0'=i^post1, j^0'=j^post1, n^0'=n^post1, (-n^post1+n^0 == 0 /\ i^0-j^0 <= 0 /\ -j^post1+j^0 == 0 /\ -1-i^0+i^post1 == 0), cost: 1
	New rule:
	l0 -> l1 : i^0'=1+i^0, j^0'=j^0, n^0'=n^0, (0 == 0 /\ i^0-j^0 <= 0), cost: 1
	
		propagated equality n^post1 = n^0
		
		propagated equality j^post1 = j^0
		
		propagated equality i^post1 = 1+i^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : i^0'=1+i^0, j^0'=j^0, n^0'=n^0, (0 == 0 /\ i^0-j^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : i^0'=1+i^0, j^0'=j^0, n^0'=n^0, i^0-j^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : i^0'=1+i^0, j^0'=j^0, n^0'=n^0, i^0-j^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : i^0'=1+i^0, i^0-j^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l0 : i^0'=i^post4, j^0'=j^post4, n^0'=n^post4, (j^post4 == 0 /\ 1+i^0-n^0 <= 0 /\ -n^post4+n^0 == 0 /\ i^0-i^post4 == 0), cost: 1
	New rule:
	l1 -> l0 : i^0'=i^0, j^0'=0, n^0'=n^0, (0 == 0 /\ 1+i^0-n^0 <= 0), cost: 1
	
		propagated equality j^post4 = 0
		
		propagated equality n^post4 = n^0
		
		propagated equality i^post4 = i^0
		
	Simplified Guard

	Original rule:
	l1 -> l0 : i^0'=i^0, j^0'=0, n^0'=n^0, (0 == 0 /\ 1+i^0-n^0 <= 0), cost: 1
	New rule:
	l1 -> l0 : i^0'=i^0, j^0'=0, n^0'=n^0, 1+i^0-n^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l0 : i^0'=i^0, j^0'=0, n^0'=n^0, 1+i^0-n^0 <= 0, cost: 1
	New rule:
	l1 -> l0 : j^0'=0, 1+i^0-n^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l1 : i^0'=i^post5, j^0'=j^post5, n^0'=n^post5, (j^post6-j^post5 == 0 /\ n^post6-n^post5 == 0 /\ -i^post6+i^0 == 0 /\ -n^post6+n^0 == 0 /\ -j^post6+j^0 == 0 /\ i^post5 == 0), cost: 1
	New rule:
	l4 -> l1 : i^0'=0, j^0'=j^post6, n^0'=n^post6, (0 == 0 /\ -i^post6+i^0 == 0 /\ -n^post6+n^0 == 0 /\ -j^post6+j^0 == 0), cost: 1
	
		propagated equality j^post5 = j^post6
		
		propagated equality n^post5 = n^post6
		
		propagated equality i^post5 = 0
		
	Propagated Equalities

	Original rule:
	l4 -> l1 : i^0'=0, j^0'=j^post6, n^0'=n^post6, (0 == 0 /\ -i^post6+i^0 == 0 /\ -n^post6+n^0 == 0 /\ -j^post6+j^0 == 0), cost: 1
	New rule:
	l4 -> l1 : i^0'=0, j^0'=j^0, n^0'=n^0, 0 == 0, cost: 1
	
		propagated equality i^post6 = i^0
		
		propagated equality n^post6 = n^0
		
		propagated equality j^post6 = j^0
		
	Simplified Guard

	Original rule:
	l4 -> l1 : i^0'=0, j^0'=j^0, n^0'=n^0, 0 == 0, cost: 1
	New rule:
	l4 -> l1 : i^0'=0, j^0'=j^0, n^0'=n^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l1 : i^0'=0, j^0'=j^0, n^0'=n^0, T, cost: 1
	New rule:
	l4 -> l1 : i^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : i^0'=i^post3, j^0'=j^post3, n^0'=n^post3, (-1+j^post2-j^0 == 0 /\ j^post2-j^post3 == 0 /\ n^post2-n^post3 == 0 /\ i^0-i^post2 == 0 /\ 1-i^0+j^0 <= 0 /\ -n^post2+n^0 == 0 /\ i^post2-i^post3 == 0), cost: 1
	New rule:
	l0 -> l0 : i^0'=i^post2, j^0'=j^post2, n^0'=n^post2, (0 == 0 /\ -1+j^post2-j^0 == 0 /\ i^0-i^post2 == 0 /\ 1-i^0+j^0 <= 0 /\ -n^post2+n^0 == 0), cost: 1
	
		propagated equality j^post3 = j^post2
		
		propagated equality n^post3 = n^post2
		
		propagated equality i^post3 = i^post2
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : i^0'=i^post2, j^0'=j^post2, n^0'=n^post2, (0 == 0 /\ -1+j^post2-j^0 == 0 /\ i^0-i^post2 == 0 /\ 1-i^0+j^0 <= 0 /\ -n^post2+n^0 == 0), cost: 1
	New rule:
	l0 -> l0 : i^0'=i^0, j^0'=1+j^0, n^0'=n^0, (0 == 0 /\ 1-i^0+j^0 <= 0), cost: 1
	
		propagated equality j^post2 = 1+j^0
		
		propagated equality i^post2 = i^0
		
		propagated equality n^post2 = n^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : i^0'=i^0, j^0'=1+j^0, n^0'=n^0, (0 == 0 /\ 1-i^0+j^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : i^0'=i^0, j^0'=1+j^0, n^0'=n^0, 1-i^0+j^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : i^0'=i^0, j^0'=1+j^0, n^0'=n^0, 1-i^0+j^0 <= 0, cost: 1
	New rule:
	l0 -> l0 : j^0'=1+j^0, 1-i^0+j^0 <= 0, cost: 1

Step with 10

	Trace

	10[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	10[T], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 8

	Trace

	10[T], 9[(1+i^0-n^0 <= 0)], 8[(i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Accelerate

Start location: l4
Program variables: i^0 j^0 n^0
   8: l0 -> l1 : i^0'=1+i^0, i^0-j^0 <= 0, cost: 1
  11: l0 -> l0 : j^0'=1+j^0, 1-i^0+j^0 <= 0, cost: 1
   9: l1 -> l0 : j^0'=0, 1+i^0-n^0 <= 0, cost: 1
  12: l1 -> l1 : i^0'=n+i^0, j^0'=0, (1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0), cost: 1
  10: l4 -> l1 : i^0'=0, T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : i^0'=1+i^0, j^0'=0, (1+i^0-n^0 <= 0 /\ i^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : i^0'=n+i^0, j^0'=0, (1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0), cost: 1

		-i^0 >= 0 [0]: montonic decrease yields 1-n-i^0 >= 0
		
		-i^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -i^0 >= 0)
		
		-1-i^0+n^0 >= 0 [0]: montonic decrease yields -n-i^0+n^0 >= 0
		
		-1-i^0+n^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1-i^0+n^0 >= 0)
		
		Replacement map: {-i^0 >= 0 -> 1-n-i^0 >= 0, -1-i^0+n^0 >= 0 -> -n-i^0+n^0 >= 0}

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)]
	
	Blocked

	[{}, {}, {12[T]}]

Step with 9

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}]

Step with 11

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 11[(1-i^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {8[T]}, {}]

Accelerate

Start location: l4
Program variables: i^0 j^0 n^0
   8: l0 -> l1 : i^0'=1+i^0, i^0-j^0 <= 0, cost: 1
  11: l0 -> l0 : j^0'=1+j^0, 1-i^0+j^0 <= 0, cost: 1
  13: l0 -> l0 : j^0'=n2+j^0, (i^0-n2-j^0 >= 0 /\ -1+n2 >= 0), cost: 1
   9: l1 -> l0 : j^0'=0, 1+i^0-n^0 <= 0, cost: 1
  12: l1 -> l1 : i^0'=n+i^0, j^0'=0, (1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0), cost: 1
  10: l4 -> l1 : i^0'=0, T, cost: 1

	Loop Acceleration

	Original rule:
	l0 -> l0 : j^0'=1+j^0, (1-i^0+j^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : j^0'=n2+j^0, (i^0-n2-j^0 >= 0 /\ -1+n2 >= 0), cost: 1

		-1+i^0-j^0 >= 0 [0]: montonic decrease yields i^0-n2-j^0 >= 0
		
		-1+i^0-j^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+i^0-j^0 >= 0)
		
		Replacement map: {-1+i^0-j^0 >= 0 -> i^0-n2-j^0 >= 0}

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {8[T]}, {11[T], 13[T]}]

Step with 8

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)], 8[(i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {8[T]}, {11[T], 13[T]}, {}]

Accelerate

Start location: l4
Program variables: i^0 j^0 n^0
   8: l0 -> l1 : i^0'=1+i^0, i^0-j^0 <= 0, cost: 1
  11: l0 -> l0 : j^0'=1+j^0, 1-i^0+j^0 <= 0, cost: 1
  13: l0 -> l0 : j^0'=n2+j^0, (i^0-n2-j^0 >= 0 /\ -1+n2 >= 0), cost: 1
   9: l1 -> l0 : j^0'=0, 1+i^0-n^0 <= 0, cost: 1
  12: l1 -> l1 : i^0'=n+i^0, j^0'=0, (1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0), cost: 1
  14: l1 -> l1 : i^0'=n3+i^0, j^0'=-1+n3+i^0, (-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0), cost: 1
  10: l4 -> l1 : i^0'=0, T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : i^0'=1+i^0, j^0'=i^0, (1+i^0-n^0 <= 0 /\ -1+i^0 >= 0), cost: 1
	New rule:
	l1 -> l1 : i^0'=n3+i^0, j^0'=-1+n3+i^0, (-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0), cost: 1

		-1+i^0 >= 0 [0]: monotonic increase yields -1+i^0 >= 0
		
		-1-i^0+n^0 >= 0 [0]: montonic decrease yields -n3-i^0+n^0 >= 0
		
		-1-i^0+n^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1-i^0+n^0 >= 0)
		
		Replacement map: {-1+i^0 >= 0 -> -1+i^0 >= 0, -1-i^0+n^0 >= 0 -> -n3-i^0+n^0 >= 0}

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 9

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}, {}]

Step with 11

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 11[(1-i^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}, {8[T]}, {}]

Covered

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}, {8[T], 11[T]}]

Step with 13

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}, {8[T], 11[T]}, {13[T]}]

Step with 8

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)], 8[(i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}, {8[T], 11[T]}, {13[T]}, {}]

Covered

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}, {8[T], 11[T]}, {8[T], 13[T]}]

Step with 11

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)], 11[(1-i^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}, {8[T], 11[T]}, {8[T], 13[T]}, {}]

Covered

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}, {8[T], 11[T]}, {8[T], 11[T], 13[T]}]

Backtrack

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {14[T]}, {8[T], 11[T], 13[T]}]

Backtrack

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 14[(-1+n3 >= 0 /\ -1+i^0 >= 0 /\ -n3-i^0+n^0 >= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {9[T], 14[T]}]

Backtrack

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)]
	
	Blocked

	[{}, {}, {12[T], 14[T]}]

Step with 9

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T], 14[T]}, {}]

Step with 11

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 11[(1-i^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T], 14[T]}, {}, {}]

Covered

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T], 14[T]}, {11[T]}]

Step with 13

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {}, {12[T], 14[T]}, {11[T]}, {13[T]}]

Step with 8

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)], 8[(i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T], 14[T]}, {11[T]}, {13[T]}, {}]

Covered

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)], 13[(i^0-n2-j^0 >= 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {}, {12[T], 14[T]}, {11[T]}, {8[T], 13[T]}]

Backtrack

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T], 14[T]}, {11[T], 13[T]}]

Backtrack

	Trace

	10[T], 12[(1-n-i^0 >= 0 /\ -1+n >= 0 /\ -n-i^0+n^0 >= 0)]
	
	Blocked

	[{}, {}, {9[T], 12[T], 14[T]}]

Backtrack

	Trace

	10[T]
	
	Blocked

	[{}, {12[T]}]

Step with 9

	Trace

	10[T], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {}]

Step with 8

	Trace

	10[T], 9[(1+i^0-n^0 <= 0)], 8[(i^0-j^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {}, {}]

Covered

	Trace

	10[T], 9[(1+i^0-n^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {8[T]}]

Backtrack

	Trace

	10[T]
	
	Blocked

	[{}, {9[T], 12[T]}]

Backtrack

	Trace

	Blocked

	[{10[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
