NO

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=arg1P0, -arg1P0 == 0, cost: 1
   1: f55_0_main_GE -> f55_0_main_GE : arg1'=arg1P1, (1-arg1P1+arg1 == 0 /\ -50+arg1 < 0 /\ -100+arg1 < 0), cost: 1
   2: f55_0_main_GE -> f55_0_main_GE : arg1'=arg1P2, (-1-arg1P2+arg1 == 0 /\ -49+arg1 > 0 /\ -100+arg1 < 0), cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg1'=arg1P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=arg1P0, -arg1P0 == 0, cost: 1
New rule:
f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=arg1P1, (1-arg1P1+arg1 == 0 /\ -50+arg1 < 0 /\ -100+arg1 < 0), cost: 1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=1+arg1, 50-arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=arg1P2, (-1-arg1P2+arg1 == 0 /\ -49+arg1 > 0 /\ -100+arg1 < 0), cost: 1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=-1+arg1, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=0, TRUE, cost: 1
   5: f55_0_main_GE -> f55_0_main_GE : arg1'=1+arg1, 50-arg1 > 0, cost: 1
   6: f55_0_main_GE -> f55_0_main_GE : arg1'=-1+arg1, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg1'=arg1P3, TRUE, cost: 1


Applied acceleration
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=1+arg1, 50-arg1 > 0, cost: 1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=n+arg1, (n >= 0 /\ 51-n-arg1 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cPPOAl.txt

Applied instantiation
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=n+arg1, (n >= 0 /\ 51-n-arg1 > 0), cost: n
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, (1 > 0 /\ 50-arg1 >= 0), cost: 50-arg1

Applied acceleration
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=-1+arg1, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=arg1-n0, (-48+arg1-n0 > 0 /\ 100-arg1 > 0 /\ n0 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NNInAj.txt

Applied instantiation
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=arg1-n0, (-48+arg1-n0 > 0 /\ 100-arg1 > 0 /\ n0 >= 0), cost: n0
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, (1 > 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: -49+arg1

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=-1+arg1, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
Second rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=1+arg1, 50-arg1 > 0, cost: 1
New rule:
f55_0_main_GE -> f55_0_main_GE : -50+arg1 == 0, cost: 2

Applied nonterm
Original rule:
f55_0_main_GE -> f55_0_main_GE : -50+arg1 == 0, cost: 2
New rule:
f55_0_main_GE -> [3] : (n1 >= 0 /\ 50-arg1 >= 0 /\ -50+arg1 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fGldMB.txt

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=1+arg1, 50-arg1 > 0, cost: 1
Second rule:
f55_0_main_GE -> [3] : (n1 >= 0 /\ 50-arg1 >= 0 /\ -50+arg1 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (n1 >= 0 /\ 50-arg1 > 0 /\ 49-arg1 >= 0 /\ -49+arg1 >= 0), cost: NONTERM

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=1+arg1, 50-arg1 > 0, cost: 1
Second rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=-1+arg1, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
New rule:
f55_0_main_GE -> f55_0_main_GE : -49+arg1 == 0, cost: 2

Applied nonterm
Original rule:
f55_0_main_GE -> f55_0_main_GE : -49+arg1 == 0, cost: 2
New rule:
f55_0_main_GE -> [3] : (n2 >= 0 /\ 49-arg1 >= 0 /\ -49+arg1 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oAbBpN.txt

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=-1+arg1, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
Second rule:
f55_0_main_GE -> [3] : (n2 >= 0 /\ 49-arg1 >= 0 /\ -49+arg1 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (n2 >= 0 /\ 50-arg1 >= 0 /\ -50+arg1 >= 0 /\ -49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=-1+arg1, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
Second rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, (1 > 0 /\ 50-arg1 >= 0), cost: 50-arg1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, (-51+arg1 <= 0 /\ -49+arg1 > 0), cost: 52-arg1

Applied nonterm
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, (-51+arg1 <= 0 /\ -49+arg1 > 0), cost: 52-arg1
New rule:
f55_0_main_GE -> [3] : (-1+n3 >= 0 /\ 51-arg1 >= 0 /\ -49+arg1 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_HAfjlF.txt

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, (1 > 0 /\ 50-arg1 >= 0), cost: 50-arg1
Second rule:
f55_0_main_GE -> [3] : (-1+n3 >= 0 /\ 51-arg1 >= 0 /\ -49+arg1 > 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (1 > 0 /\ 1 >= 0 /\ -1+n3 >= 0 /\ 50-arg1 >= 0), cost: NONTERM

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, (1 > 0 /\ 50-arg1 >= 0), cost: 50-arg1
Second rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=-1+arg1, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, -50+arg1 <= 0, cost: 51-arg1

Applied nonterm
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, -50+arg1 <= 0, cost: 51-arg1
New rule:
f55_0_main_GE -> [3] : (50-arg1 >= 0 /\ -1+n4 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JpIAEl.txt

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=-1+arg1, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
Second rule:
f55_0_main_GE -> [3] : (50-arg1 >= 0 /\ -1+n4 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (-1+n4 >= 0 /\ 51-arg1 >= 0 /\ -49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=1+arg1, 50-arg1 > 0, cost: 1
Second rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, (1 > 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: -49+arg1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, (50-arg1 > 0 /\ -48+arg1 >= 0), cost: -47+arg1

Applied nonterm
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, (50-arg1 > 0 /\ -48+arg1 >= 0), cost: -47+arg1
New rule:
f55_0_main_GE -> [3] : (50-arg1 > 0 /\ -48+arg1 >= 0 /\ -1+n5 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jdlPno.txt

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, (1 > 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: -49+arg1
Second rule:
f55_0_main_GE -> [3] : (50-arg1 > 0 /\ -48+arg1 >= 0 /\ -1+n5 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (1 > 0 /\ 1 >= 0 /\ -1+n5 >= 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, (1 > 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: -49+arg1
Second rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=1+arg1, 50-arg1 > 0, cost: 1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, (-49+arg1 >= 0 /\ 100-arg1 > 0), cost: -48+arg1

Applied nonterm
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, (-49+arg1 >= 0 /\ 100-arg1 > 0), cost: -48+arg1
New rule:
f55_0_main_GE -> [3] : (-1+n6 >= 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ggDAbO.txt

Applied chaining
First rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=1+arg1, 50-arg1 > 0, cost: 1
Second rule:
f55_0_main_GE -> [3] : (-1+n6 >= 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (50-arg1 > 0 /\ 99-arg1 > 0 /\ -48+arg1 >= 0 /\ -1+n6 >= 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, (1 > 0 /\ 50-arg1 >= 0), cost: 50-arg1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, -50+arg1 <= 0, cost: 50-arg1

Applied simplification
Original rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, (1 > 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: -49+arg1
New rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=49, (-49+arg1 >= 0 /\ 100-arg1 > 0), cost: -49+arg1

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (n1 >= 0 /\ 50-arg1 >= 0 /\ -50+arg1 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (n1 >= 0 /\ -50+arg1 <= 0 /\ -50+arg1 >= 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (n1 >= 0 /\ 50-arg1 > 0 /\ 49-arg1 >= 0 /\ -49+arg1 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (n1 >= 0 /\ -49+arg1 <= 0 /\ -49+arg1 >= 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (n2 >= 0 /\ 49-arg1 >= 0 /\ -49+arg1 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (n2 >= 0 /\ -49+arg1 <= 0 /\ -49+arg1 >= 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (n2 >= 0 /\ 50-arg1 >= 0 /\ -50+arg1 >= 0 /\ -49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (n2 >= 0 /\ -50+arg1 <= 0 /\ -49+arg1 > 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (-1+n3 >= 0 /\ 51-arg1 >= 0 /\ -49+arg1 > 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (-51+arg1 <= 0 /\ -1+n3 >= 0 /\ -49+arg1 > 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (1 > 0 /\ 1 >= 0 /\ -1+n3 >= 0 /\ 50-arg1 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (-1+n3 >= 0 /\ -50+arg1 <= 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (50-arg1 >= 0 /\ -1+n4 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (-1+n4 >= 0 /\ -50+arg1 <= 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (-1+n4 >= 0 /\ 51-arg1 >= 0 /\ -49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (-51+arg1 <= 0 /\ -1+n4 >= 0 /\ -49+arg1 > 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (1 > 0 /\ 1 >= 0 /\ -1+n5 >= 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (-1+n5 >= 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: NONTERM

Applied simplification
Original rule:
f55_0_main_GE -> [3] : (50-arg1 > 0 /\ 99-arg1 > 0 /\ -48+arg1 >= 0 /\ -1+n6 >= 0), cost: NONTERM
New rule:
f55_0_main_GE -> [3] : (50-arg1 > 0 /\ -48+arg1 >= 0 /\ -1+n6 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 5 6

Accelerated simple loops
Start location: __init
   4: f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=0, TRUE, cost: 1
  17: f55_0_main_GE -> [3] : (50-arg1 > 0 /\ -48+arg1 >= 0 /\ -1+n5 >= 0), cost: NONTERM
  19: f55_0_main_GE -> [3] : (-1+n6 >= 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: NONTERM
  21: f55_0_main_GE -> f55_0_main_GE : arg1'=50, -50+arg1 <= 0, cost: 50-arg1
  22: f55_0_main_GE -> f55_0_main_GE : arg1'=49, (-49+arg1 >= 0 /\ 100-arg1 > 0), cost: -49+arg1
  23: f55_0_main_GE -> [3] : (n1 >= 0 /\ -50+arg1 <= 0 /\ -50+arg1 >= 0), cost: NONTERM
  24: f55_0_main_GE -> [3] : (n1 >= 0 /\ -49+arg1 <= 0 /\ -49+arg1 >= 0), cost: NONTERM
  25: f55_0_main_GE -> [3] : (n2 >= 0 /\ -49+arg1 <= 0 /\ -49+arg1 >= 0), cost: NONTERM
  26: f55_0_main_GE -> [3] : (n2 >= 0 /\ -50+arg1 <= 0 /\ -49+arg1 > 0), cost: NONTERM
  27: f55_0_main_GE -> [3] : (-51+arg1 <= 0 /\ -1+n3 >= 0 /\ -49+arg1 > 0), cost: NONTERM
  28: f55_0_main_GE -> [3] : (-1+n3 >= 0 /\ -50+arg1 <= 0), cost: NONTERM
  29: f55_0_main_GE -> [3] : (-1+n4 >= 0 /\ -50+arg1 <= 0), cost: NONTERM
  30: f55_0_main_GE -> [3] : (-51+arg1 <= 0 /\ -1+n4 >= 0 /\ -49+arg1 > 0), cost: NONTERM
  31: f55_0_main_GE -> [3] : (-1+n5 >= 0 /\ -49+arg1 >= 0 /\ 100-arg1 > 0), cost: NONTERM
  32: f55_0_main_GE -> [3] : (50-arg1 > 0 /\ -48+arg1 >= 0 /\ -1+n6 >= 0), cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg1'=arg1P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=0, TRUE, cost: 1
Second rule:
f55_0_main_GE -> f55_0_main_GE : arg1'=50, -50+arg1 <= 0, cost: 50-arg1
New rule:
f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=50, -50 <= 0, cost: 51

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=0, TRUE, cost: 1
Second rule:
f55_0_main_GE -> [3] : (-1+n3 >= 0 /\ -50+arg1 <= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : -50 <= 0, cost: NONTERM

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=0, TRUE, cost: 1
Second rule:
f55_0_main_GE -> [3] : (-1+n4 >= 0 /\ -50+arg1 <= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : -50 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 17 19 21 22 23 24 25 26 27 28 29 30 31 32

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=0, TRUE, cost: 1
  33: f1_0_main_ConstantStackPush -> f55_0_main_GE : arg1'=50, -50 <= 0, cost: 51
  34: f1_0_main_ConstantStackPush -> [3] : -50 <= 0, cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg1'=arg1P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  34: f1_0_main_ConstantStackPush -> [3] : -50 <= 0, cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg1'=arg1P3, TRUE, cost: 1


Eliminating location f1_0_main_ConstantStackPush by chaining:

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg1'=arg1P3, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> [3] : -50 <= 0, cost: NONTERM
New rule:
__init -> [3] : -50 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 3 34

Eliminated locations on linear paths
Start location: __init
  35: __init -> [3] : -50 <= 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 35 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  -50 <= 0
