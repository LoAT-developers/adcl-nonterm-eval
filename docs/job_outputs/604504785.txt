WORST_CASE(Omega(0),?)

Initial ITS
Start location: l4
   0: l0 -> l1 : tmp___08^0'=tmp___08^post0, length4^0'=length4^post0, tmp^0'=tmp^post0, i5^0'=i5^post0, s^0'=s^post0, (-s^post0+s^0 == 0 /\ tmp___08^0-tmp___08^post0 == 0 /\ length4^0-i5^0 <= 0 /\ i5^0-i5^post0 == 0 /\ -length4^post0+length4^0 == 0 /\ tmp^0-tmp^post0 == 0), cost: 1
   1: l0 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=length4^post1, tmp^0'=tmp^post1, i5^0'=i5^post1, s^0'=s^post1, (0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ -s^post1+s^0 == 0 /\ length4^0-length4^post1 == 0 /\ 1-length4^0+i5^0 <= 0 /\ -1+i5^post1-i5^0 == 0), cost: 1
   2: l2 -> l0 : tmp___08^0'=tmp___08^post2, length4^0'=length4^post2, tmp^0'=tmp^post2, i5^0'=i5^post2, s^0'=s^post2, (tmp___08^0-tmp___08^post2 == 0 /\ -length4^post2+length4^0 == 0 /\ -s^post2+s^0 == 0 /\ i5^0-i5^post2 == 0 /\ tmp^0-tmp^post2 == 0), cost: 1
   3: l3 -> l2 : tmp___08^0'=tmp___08^post3, length4^0'=length4^post3, tmp^0'=tmp^post3, i5^0'=i5^post3, s^0'=s^post3, (0 == 0 /\ s^post3-tmp^post3 == 0 /\ tmp___08^0-tmp___08^post3 == 0 /\ i5^post3 == 0 /\ -10+length4^post3 == 0), cost: 1
   4: l4 -> l3 : tmp___08^0'=tmp___08^post4, length4^0'=length4^post4, tmp^0'=tmp^post4, i5^0'=i5^post4, s^0'=s^post4, (i5^0-i5^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -s^post4+s^0 == 0 /\ length4^0-length4^post4 == 0 /\ tmp___08^0-tmp___08^post4 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l4
   1: l0 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=length4^post1, tmp^0'=tmp^post1, i5^0'=i5^post1, s^0'=s^post1, (0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ -s^post1+s^0 == 0 /\ length4^0-length4^post1 == 0 /\ 1-length4^0+i5^0 <= 0 /\ -1+i5^post1-i5^0 == 0), cost: 1
   2: l2 -> l0 : tmp___08^0'=tmp___08^post2, length4^0'=length4^post2, tmp^0'=tmp^post2, i5^0'=i5^post2, s^0'=s^post2, (tmp___08^0-tmp___08^post2 == 0 /\ -length4^post2+length4^0 == 0 /\ -s^post2+s^0 == 0 /\ i5^0-i5^post2 == 0 /\ tmp^0-tmp^post2 == 0), cost: 1
   3: l3 -> l2 : tmp___08^0'=tmp___08^post3, length4^0'=length4^post3, tmp^0'=tmp^post3, i5^0'=i5^post3, s^0'=s^post3, (0 == 0 /\ s^post3-tmp^post3 == 0 /\ tmp___08^0-tmp___08^post3 == 0 /\ i5^post3 == 0 /\ -10+length4^post3 == 0), cost: 1
   4: l4 -> l3 : tmp___08^0'=tmp___08^post4, length4^0'=length4^post4, tmp^0'=tmp^post4, i5^0'=i5^post4, s^0'=s^post4, (i5^0-i5^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -s^post4+s^0 == 0 /\ length4^0-length4^post4 == 0 /\ tmp___08^0-tmp___08^post4 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=length4^post1, tmp^0'=tmp^post1, i5^0'=i5^post1, s^0'=s^post1, (0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ -s^post1+s^0 == 0 /\ length4^0-length4^post1 == 0 /\ 1-length4^0+i5^0 <= 0 /\ -1+i5^post1-i5^0 == 0), cost: 1
New rule:
l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : tmp___08^0'=tmp___08^post2, length4^0'=length4^post2, tmp^0'=tmp^post2, i5^0'=i5^post2, s^0'=s^post2, (tmp___08^0-tmp___08^post2 == 0 /\ -length4^post2+length4^0 == 0 /\ -s^post2+s^0 == 0 /\ i5^0-i5^post2 == 0 /\ tmp^0-tmp^post2 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : tmp___08^0'=tmp___08^post3, length4^0'=length4^post3, tmp^0'=tmp^post3, i5^0'=i5^post3, s^0'=s^post3, (0 == 0 /\ s^post3-tmp^post3 == 0 /\ tmp___08^0-tmp___08^post3 == 0 /\ i5^post3 == 0 /\ -10+length4^post3 == 0), cost: 1
New rule:
l3 -> l2 : length4^0'=10, tmp^0'=tmp^post3, i5^0'=0, s^0'=tmp^post3, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : tmp___08^0'=tmp___08^post4, length4^0'=length4^post4, tmp^0'=tmp^post4, i5^0'=i5^post4, s^0'=s^post4, (i5^0-i5^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -s^post4+s^0 == 0 /\ length4^0-length4^post4 == 0 /\ tmp___08^0-tmp___08^post4 == 0), cost: 1
New rule:
l4 -> l3 : TRUE, cost: 1

Simplified rules
Start location: l4
   5: l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1
   6: l2 -> l0 : TRUE, cost: 1
   7: l3 -> l2 : length4^0'=10, tmp^0'=tmp^post3, i5^0'=0, s^0'=tmp^post3, 0 == 0, cost: 1
   8: l4 -> l3 : TRUE, cost: 1


Eliminating location l3 by chaining:

Applied chaining
First rule:
l4 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l2 : length4^0'=10, tmp^0'=tmp^post3, i5^0'=0, s^0'=tmp^post3, 0 == 0, cost: 1
New rule:
l4 -> l2 : length4^0'=10, tmp^0'=tmp^post3, i5^0'=0, s^0'=tmp^post3, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 7 8

Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 1
New rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 5 6

Eliminated locations on linear paths
Start location: l4
  10: l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 2
   9: l4 -> l2 : length4^0'=10, tmp^0'=tmp^post3, i5^0'=0, s^0'=tmp^post3, 0 == 0, cost: 2


Applied acceleration
Original rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=1+i5^0, 1-length4^0+i5^0 <= 0, cost: 2
New rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=i5^0+n, (length4^0-i5^0-n >= 0 /\ -1+n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NjAAMj.txt

Applied instantiation
Original rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=i5^0+n, (length4^0-i5^0-n >= 0 /\ -1+n >= 0), cost: 2*n
New rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, (0 >= 0 /\ -1+length4^0-i5^0 >= 0), cost: 2*length4^0-2*i5^0

Applied simplification
Original rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, (0 >= 0 /\ -1+length4^0-i5^0 >= 0), cost: 2*length4^0-2*i5^0
New rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, -1+length4^0-i5^0 >= 0, cost: 2*length4^0-2*i5^0

Applied deletion
Removed the following rules: 10

Accelerated simple loops
Start location: l4
  12: l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, -1+length4^0-i5^0 >= 0, cost: 2*length4^0-2*i5^0
   9: l4 -> l2 : length4^0'=10, tmp^0'=tmp^post3, i5^0'=0, s^0'=tmp^post3, 0 == 0, cost: 2


Applied chaining
First rule:
l4 -> l2 : length4^0'=10, tmp^0'=tmp^post3, i5^0'=0, s^0'=tmp^post3, 0 == 0, cost: 2
Second rule:
l2 -> l2 : tmp___08^0'=tmp___08^post1, i5^0'=length4^0, -1+length4^0-i5^0 >= 0, cost: 2*length4^0-2*i5^0
New rule:
l4 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=10, tmp^0'=tmp^post3, i5^0'=10, s^0'=tmp^post3, (0 == 0 /\ 9 >= 0), cost: 22

Applied deletion
Removed the following rules: 12

Chained accelerated rules with incoming rules
Start location: l4
   9: l4 -> l2 : length4^0'=10, tmp^0'=tmp^post3, i5^0'=0, s^0'=tmp^post3, 0 == 0, cost: 2
  13: l4 -> l2 : tmp___08^0'=tmp___08^post1, length4^0'=10, tmp^0'=tmp^post3, i5^0'=10, s^0'=tmp^post3, (0 == 0 /\ 9 >= 0), cost: 22


Removed unreachable locations and irrelevant leafs
Start location: l4
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

