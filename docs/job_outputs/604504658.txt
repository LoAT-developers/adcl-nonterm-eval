WORST_CASE(Omega(0),?)

Initial ITS
Start location: l6
   0: l0 -> l1 : i^0'=i^post0, i^0-i^post0 == 0, cost: 1
   1: l0 -> l1 : i^0'=i^post1, -i^post1+i^0 == 0, cost: 1
   5: l1 -> l4 : i^0'=i^post5, -i^post5+i^0 == 0, cost: 1
   2: l2 -> l0 : i^0'=i^post2, (10-i^0 <= 0 /\ -i^post2+i^0 == 0), cost: 1
   3: l2 -> l3 : i^0'=i^post3, (-9+i^0 <= 0 /\ -1-i^0+i^post3 == 0), cost: 1
   4: l3 -> l2 : i^0'=i^post4, -i^post4+i^0 == 0, cost: 1
   6: l5 -> l3 : i^0'=i^post6, i^post6 == 0, cost: 1
   7: l6 -> l5 : i^0'=i^post7, i^0-i^post7 == 0, cost: 1


Removed unreachable rules and leafs
Start location: l6
   3: l2 -> l3 : i^0'=i^post3, (-9+i^0 <= 0 /\ -1-i^0+i^post3 == 0), cost: 1
   4: l3 -> l2 : i^0'=i^post4, -i^post4+i^0 == 0, cost: 1
   6: l5 -> l3 : i^0'=i^post6, i^post6 == 0, cost: 1
   7: l6 -> l5 : i^0'=i^post7, i^0-i^post7 == 0, cost: 1


Applied preprocessing
Original rule:
l2 -> l3 : i^0'=i^post3, (-9+i^0 <= 0 /\ -1-i^0+i^post3 == 0), cost: 1
New rule:
l2 -> l3 : i^0'=1+i^0, -9+i^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : i^0'=i^post4, -i^post4+i^0 == 0, cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l3 : i^0'=i^post6, i^post6 == 0, cost: 1
New rule:
l5 -> l3 : i^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : i^0'=i^post7, i^0-i^post7 == 0, cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
   8: l2 -> l3 : i^0'=1+i^0, -9+i^0 <= 0, cost: 1
   9: l3 -> l2 : TRUE, cost: 1
  10: l5 -> l3 : i^0'=0, TRUE, cost: 1
  11: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l3 : i^0'=0, TRUE, cost: 1
New rule:
l6 -> l3 : i^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 10 11

Eliminating location l2 by chaining:

Applied chaining
First rule:
l3 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l3 : i^0'=1+i^0, -9+i^0 <= 0, cost: 1
New rule:
l3 -> l3 : i^0'=1+i^0, -9+i^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 8 9

Eliminated locations on linear paths
Start location: l6
  13: l3 -> l3 : i^0'=1+i^0, -9+i^0 <= 0, cost: 2
  12: l6 -> l3 : i^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l3 -> l3 : i^0'=1+i^0, -9+i^0 <= 0, cost: 2
New rule:
l3 -> l3 : i^0'=n+i^0, (n >= 0 /\ 10-n-i^0 >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ikkDKg.txt

Applied instantiation
Original rule:
l3 -> l3 : i^0'=n+i^0, (n >= 0 /\ 10-n-i^0 >= 0), cost: 2*n
New rule:
l3 -> l3 : i^0'=10, (0 >= 0 /\ 10-i^0 >= 0), cost: 20-2*i^0

Applied simplification
Original rule:
l3 -> l3 : i^0'=10, (0 >= 0 /\ 10-i^0 >= 0), cost: 20-2*i^0
New rule:
l3 -> l3 : i^0'=10, -10+i^0 <= 0, cost: 20-2*i^0

Applied deletion
Removed the following rules: 13

Accelerated simple loops
Start location: l6
  15: l3 -> l3 : i^0'=10, -10+i^0 <= 0, cost: 20-2*i^0
  12: l6 -> l3 : i^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l6 -> l3 : i^0'=0, TRUE, cost: 2
Second rule:
l3 -> l3 : i^0'=10, -10+i^0 <= 0, cost: 20-2*i^0
New rule:
l6 -> l3 : i^0'=10, -10 <= 0, cost: 22

Applied deletion
Removed the following rules: 15

Chained accelerated rules with incoming rules
Start location: l6
  12: l6 -> l3 : i^0'=0, TRUE, cost: 2
  16: l6 -> l3 : i^0'=10, -10 <= 0, cost: 22


Removed unreachable locations and irrelevant leafs
Start location: l6
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

