unknown

Initial ITS

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : -5+i > 0, cost: 1
   4: [2] -> [5] : -5+i <= 0, cost: 1
   2: [3] -> [4] : i'=-1+i, T, cost: 1
   3: [4] -> [2] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=nondet, T, cost: 1
   4: [2] -> [5] : -5+i <= 0, cost: 1
   6: [2] -> [2] : i'=-1+i, -5+i > 0, cost: 1

	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[2] -> [3] : -5+i > 0, cost: 1
	Second rule:
	[3] -> [4] : i'=-1+i, T, cost: 1
	New rule:
	[2] -> [4] : i'=-1+i, -5+i > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 1 2
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[2] -> [4] : i'=-1+i, -5+i > 0, cost: 1
	Second rule:
	[4] -> [2] : T, cost: 1
	New rule:
	[2] -> [2] : i'=-1+i, -5+i > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 3 5

Step with 0

	Trace

	0[T]
	
	Blocked

	[{}, {}]

Step with 4

	Trace

	0[T], 4[(-5+i <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	0[T]
	
	Blocked

	[{}, {4[T]}]

Step with 6

	Trace

	0[T], 6[(-5+i > 0)]
	
	Blocked

	[{}, {4[T]}, {}]

Accelerate

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=nondet, T, cost: 1
   4: [2] -> [5] : -5+i <= 0, cost: 1
   6: [2] -> [2] : i'=-1+i, -5+i > 0, cost: 1
   7: [2] -> [2] : i'=-n+i, (-1+n >= 0 /\ -4-n+i > 0), cost: 1

	Loop Acceleration

	Original rule:
	[2] -> [2] : i'=-1+i, (-5+i > 0), cost: 1
	New rule:
	[2] -> [2] : i'=-n+i, (-1+n >= 0 /\ -4-n+i > 0), cost: 1

		-5+i > 0 [0]: montonic decrease yields -4-n+i > 0
		
		-5+i > 0 [1]: eventual increase yields (1 <= 0 /\ -5+i > 0)
		
		Replacement map: {-5+i > 0 -> -4-n+i > 0}

	Trace

	0[T], 7[(-1+n >= 0 /\ -4-n+i > 0)]
	
	Blocked

	[{}, {4[T]}, {6[T], 7[T]}]

Step with 4

	Trace

	0[T], 7[(-1+n >= 0 /\ -4-n+i > 0)], 4[(-5+i <= 0)]
	
	Blocked

	[{}, {4[T]}, {6[T], 7[T]}, {}]

Backtrack

	Trace

	0[T], 7[(-1+n >= 0 /\ -4-n+i > 0)]
	
	Blocked

	[{}, {4[T]}, {4[T], 6[T], 7[T]}]

Backtrack

	Trace

	0[T]
	
	Blocked

	[{}, {4[T], 7[T]}]

Step with 6

	Trace

	0[T], 6[(-5+i > 0)]
	
	Blocked

	[{}, {4[T], 7[T]}, {}]

Covered

	Trace

	0[T]
	
	Blocked

	[{}, {4[T], 6[T], 7[T]}]

Backtrack

	Trace

	Blocked

	[{0[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
