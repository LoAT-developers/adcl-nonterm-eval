NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9
   0: f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1-arg1 <= 0 /\ -arg3p1 == 0 /\ -arg2 == 0 /\ arg1p1 > 0 /\ -arg2p1 == 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (arg1p2-arg1 <= 0 /\ 1-arg2p2 == 0 /\ arg1p2 > 0 /\ arg2-arg3p2 == 0 /\ arg1 > 0), cost: 1
   3: f1_0_main_Load -> f1745_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, arg8'=arg8p4, arg9'=arg9p4, (arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0), cost: 1
  13: f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (-arg1p14 == 0 /\ arg2 > 0 /\ arg2-arg2p14 == 0 /\ arg1 > 0), cost: 1
  14: f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+arg1p15 > 0 /\ arg2 > 0 /\ arg2-arg2p15 == 0 /\ arg1 > 0), cost: 1
   2: f106_0_main_InvokeMethod -> f2232_0_flatten_NONNULL : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, (-2+arg2 < 0 /\ 1+arg1p3-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
  11: f106_0_main_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (1+arg1p12-arg1 <= 0 /\ -2+arg2 < 0 /\ 1+arg1p12 > 0 /\ arg1 > 0), cost: 1
  32: f2232_0_flatten_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg4p33, arg5'=arg5p33, arg6'=arg6p33, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (2+arg1p33-arg1 <= 0 /\ 1+arg1p33 > 0 /\ -1+arg1 > 0), cost: 1
  33: f2232_0_flatten_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p34, arg2'=arg2p34, arg3'=arg3p34, arg4'=arg4p34, arg5'=arg5p34, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (-2+arg1 > 0 /\ -2+arg1p34-arg1 <= 0 /\ -2+arg1p34 > 0), cost: 1
   5: f1745_0_main_InvokeMethod -> f2232_0_flatten_NONNULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, arg9'=arg9p6, (arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
   6: f1745_0_main_InvokeMethod -> f2190_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (arg1p7-arg1 <= 0 /\ 1-arg2+arg1p7 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1-arg1+arg2p7 <= 0 /\ -arg2+arg2p7 <= 0 /\ -1+arg2p7 > 0 /\ arg1 > 0), cost: 1
   7: f1745_0_main_InvokeMethod -> f2190_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, arg9'=arg9p8, (-4+arg2 > 0 /\ -4+arg2p8 > 0 /\ arg1p8 > 0 /\ 4-arg2+arg1p8 <= 0 /\ -arg2+arg2p8 <= 0 /\ arg1p8-arg1 <= 0 /\ arg1 > 0), cost: 1
   8: f1745_0_main_InvokeMethod -> f2190_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (-3+arg2 > 0 /\ arg1p9 > 0 /\ -arg2+arg2p9 <= 0 /\ -3+arg2p9 > 0 /\ 3-arg2+arg1p9 <= 0 /\ arg1p9-arg1 <= 0 /\ arg1 > 0), cost: 1
  12: f1745_0_main_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, arg8'=arg8p13, arg9'=arg9p13, (-2+arg1p13 > 0 /\ -2+arg2 > 0 /\ -arg2+arg1p13 <= 0 /\ arg1 > 0), cost: 1
   4: f692_0_createTree_Return -> f1745_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (-1+arg2p5 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1p5-arg1 <= 0 /\ 1-arg2+arg1p5 <= 0 /\ -1+arg2 > 0 /\ arg2p5-arg2 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
  10: f2190_0_main_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, arg7'=arg7p11, arg8'=arg8p11, arg9'=arg9p11, (-1+arg2 > 0 /\ -1+arg1p11 > 0 /\ -arg2+arg1p11 <= 0 /\ arg1 > 0), cost: 1
   9: f1829_0_flatten_Return -> f2190_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, arg8'=arg8p10, arg9'=arg9p10, (arg1p10 > 0 /\ -1+arg2p10-arg1 <= 0 /\ arg1p10-arg1 <= 0 /\ -1+arg2p10 > 0 /\ arg1 > 0), cost: 1
  37: f2161_0_count_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p38, arg2'=arg2p38, arg3'=arg3p38, arg4'=arg4p38, arg5'=arg5p38, arg6'=arg6p38, arg7'=arg7p38, arg8'=arg8p38, arg9'=arg9p38, (arg1p38-arg1 <= 0 /\ -2+arg1 > 0 /\ -2+arg1p38 > 0), cost: 1
  38: f2161_0_count_NONNULL -> f2161_0_count_NONNULL : arg1'=arg1p39, arg2'=arg2p39, arg3'=arg3p39, arg4'=arg4p39, arg5'=arg5p39, arg6'=arg6p39, arg7'=arg7p39, arg8'=arg8p39, arg9'=arg9p39, (2+arg1p39-arg1 <= 0 /\ 1+arg1p39 > 0 /\ -1+arg1 > 0), cost: 1
  39: f2161_0_count_NONNULL -> f2411_0_count_InvokeMethod : arg1'=arg1p40, arg2'=arg2p40, arg3'=arg3p40, arg4'=arg4p40, arg5'=arg5p40, arg6'=arg6p40, arg7'=arg7p40, arg8'=arg8p40, arg9'=arg9p40, (-2+arg1 > 0 /\ 3+arg1p40-arg1 <= 0 /\ 1+arg1p40 > 0), cost: 1
  40: f2161_0_count_NONNULL -> f2411_0_count_InvokeMethod : arg1'=arg1p41, arg2'=arg2p41, arg3'=arg3p41, arg4'=arg4p41, arg5'=arg5p41, arg6'=arg6p41, arg7'=arg7p41, arg8'=arg8p41, arg9'=arg9p41, (-2+arg1 > 0 /\ 1+arg1p41 > 0), cost: 1
  41: f2161_0_count_NONNULL -> f2411_0_count_InvokeMethod : arg1'=arg1p42, arg2'=arg2p42, arg3'=arg3p42, arg4'=arg4p42, arg5'=arg5p42, arg6'=arg6p42, arg7'=arg7p42, arg8'=arg8p42, arg9'=arg9p42, (-2+arg1 > 0 /\ -1+arg1p42 > 0), cost: 1
  15: f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (-1+arg2p16 > 0 /\ arg2 > 0 /\ -arg3p16+arg1 == 0 /\ -1+arg1p16 > 0 /\ 1-arg5p16 == 0 /\ -arg4p16+arg2 == 0 /\ arg1 > 0), cost: 1
  16: f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (arg2 > 0 /\ -1+arg2p17 > 0 /\ -1+arg1p17 > 0 /\ -arg3p17+arg1 == 0 /\ arg2-arg4p17 == 0 /\ arg1 > 0), cost: 1
  34: f99_0_createTree_NE -> f572_0_random_GT : arg1'=arg1p35, arg2'=arg2p35, arg3'=arg3p35, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (arg2 > 0 /\ 1-arg3p35 == 0 /\ arg2-arg2p35 == 0 /\ arg1 > 0), cost: 1
  18: f1706_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (arg5-arg4 >= 0 /\ 1-arg2+arg4p19 <= 0 /\ arg3p19-arg2 <= 0 /\ 2+arg7p19-arg1 <= 0 /\ arg3 > 0 /\ arg3p19 > 0 /\ arg2p19-arg1 <= 0 /\ arg2 > 0 /\ -arg6p19+arg5 == 0 /\ 1+arg4 > 0 /\ arg3-arg1p19 == 0 /\ arg4-arg5p19 == 0 /\ 2-arg2+arg9p19 <= 0 /\ 1+arg4p19 > 0 /\ 2+arg8p19-arg1 <= 0 /\ arg2p19 > 0 /\ arg1 > 0), cost: 1
  22: f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (arg5-arg4 < 0 /\ 2+arg8p23-arg1 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ -arg4p23 == 0 /\ arg2 > 0 /\ 2+arg7p23-arg1 <= 0 /\ arg2p23-arg1 <= 0 /\ 1+arg4 > 0 /\ arg2p23 > 0 /\ 1+arg5-arg6p23 == 0 /\ -arg2+arg3p23 <= 0 /\ -arg5p23+arg4 == 0 /\ arg3p23 > 0 /\ arg1 > 0 /\ -arg1p23+arg3 == 0), cost: 1
  23: f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (arg5-arg4 < 0 /\ arg3-arg1p24 == 0 /\ arg2p24-arg1 <= 0 /\ arg2p24 > 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ 2+arg7p24-arg1 <= 0 /\ 1+arg4p24 > 0 /\ 1-arg6p24+arg5 == 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ arg3p24 > 0 /\ -arg5p24+arg4 == 0 /\ -arg2+arg3p24 <= 0 /\ arg1 > 0 /\ 2+arg8p24-arg1 <= 0), cost: 1
  17: f197_0_createNode_Return -> f1706_0_createTree_LE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (-arg3p18+arg1 == 0 /\ -1+arg2p18 > 0 /\ -1+arg1p18 > 0 /\ -arg5p18+arg3 == 0 /\ arg2-arg4p18 == 0), cost: 1
  19: f1787_0_createTree_NONNULL -> f1706_0_createTree_LE : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg2p20 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1-arg3p20+arg1 == 0 /\ 2+arg2p20-arg3 <= 0 /\ -arg2+arg1p20 <= 0 /\ -2+arg3 > 0 /\ arg1p20 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5p20 == 0 /\ arg2p20-arg4 <= 0 /\ arg4 > 0 /\ arg5-arg4p20 == 0 /\ 2-arg2+arg7 <= 0), cost: 1
  20: f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (-1+arg3p21 > 0 /\ -arg3p21+arg3 >= 0 /\ -2-arg9+arg3 >= 0 /\ arg2 > 0 /\ arg6-arg5p21 == 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg4p21+arg5 == 0 /\ arg9-arg7p21 == 0 /\ -2+arg2-arg8 >= 0 /\ -arg6p21+arg8 == 0 /\ arg6-arg5 >= 0 /\ arg2p21 > 0 /\ arg2-arg2p21 >= 0 /\ -arg1p21+arg1 == 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0), cost: 1
  21: f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (arg3p22-arg3 <= 0 /\ -1+arg3p22 > 0 /\ arg8-arg6p22 == 0 /\ -arg1p22+arg1 == 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2+arg2p22 <= 0 /\ -arg4p22+arg5 == 0 /\ arg2p22 > 0 /\ 2-arg2+arg8 <= 0 /\ arg9-arg7p22 == 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  35: f1787_0_createTree_NONNULL -> f572_0_random_GT : arg1'=arg1p36, arg2'=arg2p36, arg3'=arg3p36, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (1+arg5 > 0 /\ -arg3p36+arg6 == 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ arg5-arg2p36 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  24: f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (2-arg3+arg7 <= 0 /\ -arg4p25+arg4 == 0 /\ arg2 > 0 /\ arg5-arg5p25 == 0 /\ -1+arg3 > 0 /\ -1-arg3p25+arg1 == 0 /\ arg1p25 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2p25 > 0), cost: 1
  25: f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (-2-arg2+arg1p26 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg5-arg5p26 == 0 /\ -arg4p26+arg4 == 0 /\ -1+arg3 > 0 /\ -2-arg3+arg2p26 <= 0 /\ -3+arg2p26 > 0 /\ -2-arg2+arg2p26 <= 0 /\ -1-arg3p26+arg1 == 0 /\ -1+arg2 > 0 /\ arg6-arg7 == 0 /\ -2-arg3+arg1p26 <= 0 /\ -3+arg1p26 > 0 /\ 2+arg6-arg2 <= 0), cost: 1
  26: f1910_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5p27, arg6'=arg6p27, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (-arg3+arg3p27 <= 0 /\ arg2p27 > 0 /\ arg3 > 0 /\ 2-arg3+arg9p27 <= 0 /\ 1+arg4p27 > 0 /\ arg2 > 0 /\ arg2p27-arg2 <= 0 /\ 1-arg3+arg4p27 <= 0 /\ -arg7p27+arg7 == 0 /\ arg3p27 > 0 /\ -arg5p27+arg5 == 0 /\ -arg4 == 0 /\ -arg1p27+arg1 == 0 /\ 2-arg2+arg8 <= 0 /\ -arg8p27+arg8 == 0 /\ arg6-arg6p27 == 0 /\ 2-arg2+arg7 <= 0), cost: 1
  27: f1910_0_createTree_LE -> f1706_0_createTree_LE : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg5p28, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (-1-arg3p28+arg1 == 0 /\ arg2 > 0 /\ -arg2+arg1p28 <= 0 /\ 2-arg3+arg2p28 <= 0 /\ arg6-arg5p28 == 0 /\ -2+arg3 > 0 /\ arg1p28 > 0 /\ arg5-arg4p28 == 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p28 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
  28: f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg5p29, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (arg6 > 0 /\ arg5-arg4p29 == 0 /\ -1+arg3p29 > 0 /\ arg2 > 0 /\ 2-arg3+arg7p29 <= 0 /\ -1+arg3 > 0 /\ arg3p29-arg3 <= 0 /\ -arg2+arg2p29 <= 0 /\ arg6-arg5p29 == 0 /\ 2-arg2+arg8 <= 0 /\ -arg1p29+arg1 == 0 /\ arg4 > 0 /\ arg2p29 > 0 /\ 2-arg2+arg7 <= 0 /\ -arg6p29+arg7 == 0 /\ arg1 > 0), cost: 1
  29: f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5p30, arg6'=arg6p30, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg6 > 0 /\ -arg3+arg3p30 <= 0 /\ -arg4p30+arg5 == 0 /\ -arg2+arg2p30 <= 0 /\ -arg6p30+arg7 == 0 /\ arg2 > 0 /\ 2+arg7p30-arg3 <= 0 /\ -1+arg3 > 0 /\ arg2p30 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ -1+arg3p30 > 0 /\ -arg1p30+arg1 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  36: f1910_0_createTree_LE -> f572_0_random_GT : arg1'=arg1p37, arg2'=arg2p37, arg3'=arg3p37, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (arg6 > 0 /\ 1+arg5 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ arg6-arg3p37 == 0 /\ arg5-arg2p37 == 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  30: f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p31, arg2'=arg2p31, arg3'=arg3p31, arg4'=arg4p31, arg5'=arg5p31, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (2-arg3+arg7 <= 0 /\ -arg5p31+arg5 == 0 /\ arg2p31 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ -1-arg3p31+arg1 == 0 /\ 2+arg6-arg2 <= 0 /\ arg1p31 > 0 /\ arg4-arg4p31 == 0), cost: 1
  31: f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg4p32, arg5'=arg5p32, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (2+arg6-arg3 <= 0 /\ -3+arg1p32 > 0 /\ -2-arg3+arg1p32 <= 0 /\ -1+arg3 > 0 /\ -2+arg2p32-arg3 <= 0 /\ -1-arg3p32+arg1 == 0 /\ -2+arg2p32-arg2 <= 0 /\ -1+arg2 > 0 /\ -arg5p32+arg5 == 0 /\ -2-arg2+arg1p32 <= 0 /\ arg6-arg7 == 0 /\ -arg4p32+arg4 == 0 /\ 2+arg6-arg2 <= 0 /\ -3+arg2p32 > 0), cost: 1
  42: f2411_0_count_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p43, arg2'=arg2p43, arg3'=arg3p43, arg4'=arg4p43, arg5'=arg5p43, arg6'=arg6p43, arg7'=arg7p43, arg8'=arg8p43, arg9'=arg9p43, (1+arg1 > 0 /\ 1+arg1p43 > 0 /\ arg1p43-arg1 <= 0), cost: 1
  43: __init -> f1_0_main_Load : arg1'=arg1p44, arg2'=arg2p44, arg3'=arg3p44, arg4'=arg4p44, arg5'=arg5p44, arg6'=arg6p44, arg7'=arg7p44, arg8'=arg8p44, arg9'=arg9p44, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9
   3: f1_0_main_Load -> f1745_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, arg8'=arg8p4, arg9'=arg9p4, (arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0), cost: 1
  44: f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p1, arg2'=0, arg3'=0, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1-arg1 <= 0 /\ -arg2 == 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
  45: f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p2, arg2'=1, arg3'=arg2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
  46: f1_0_main_Load -> f99_0_createTree_NE : arg1'=0, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (arg2 > 0 /\ arg1 > 0), cost: 1
  47: f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+arg1p15 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
   2: f106_0_main_InvokeMethod -> f2232_0_flatten_NONNULL : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, (-2+arg2 < 0 /\ 1+arg1p3-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
  11: f106_0_main_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (1+arg1p12-arg1 <= 0 /\ -2+arg2 < 0 /\ 1+arg1p12 > 0 /\ arg1 > 0), cost: 1
  32: f2232_0_flatten_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg4p33, arg5'=arg5p33, arg6'=arg6p33, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (2+arg1p33-arg1 <= 0 /\ 1+arg1p33 > 0 /\ -1+arg1 > 0), cost: 1
  33: f2232_0_flatten_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p34, arg2'=arg2p34, arg3'=arg3p34, arg4'=arg4p34, arg5'=arg5p34, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (-2+arg1 > 0 /\ -2+arg1p34-arg1 <= 0 /\ -2+arg1p34 > 0), cost: 1
   5: f1745_0_main_InvokeMethod -> f2232_0_flatten_NONNULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, arg9'=arg9p6, (arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
   6: f1745_0_main_InvokeMethod -> f2190_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (arg1p7-arg1 <= 0 /\ 1-arg2+arg1p7 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1-arg1+arg2p7 <= 0 /\ -arg2+arg2p7 <= 0 /\ -1+arg2p7 > 0 /\ arg1 > 0), cost: 1
   7: f1745_0_main_InvokeMethod -> f2190_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, arg9'=arg9p8, (-4+arg2 > 0 /\ -4+arg2p8 > 0 /\ arg1p8 > 0 /\ 4-arg2+arg1p8 <= 0 /\ -arg2+arg2p8 <= 0 /\ arg1p8-arg1 <= 0 /\ arg1 > 0), cost: 1
   8: f1745_0_main_InvokeMethod -> f2190_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (-3+arg2 > 0 /\ arg1p9 > 0 /\ -arg2+arg2p9 <= 0 /\ -3+arg2p9 > 0 /\ 3-arg2+arg1p9 <= 0 /\ arg1p9-arg1 <= 0 /\ arg1 > 0), cost: 1
  12: f1745_0_main_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, arg8'=arg8p13, arg9'=arg9p13, (-2+arg1p13 > 0 /\ -2+arg2 > 0 /\ -arg2+arg1p13 <= 0 /\ arg1 > 0), cost: 1
   4: f692_0_createTree_Return -> f1745_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (-1+arg2p5 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1p5-arg1 <= 0 /\ 1-arg2+arg1p5 <= 0 /\ -1+arg2 > 0 /\ arg2p5-arg2 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
  10: f2190_0_main_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, arg7'=arg7p11, arg8'=arg8p11, arg9'=arg9p11, (-1+arg2 > 0 /\ -1+arg1p11 > 0 /\ -arg2+arg1p11 <= 0 /\ arg1 > 0), cost: 1
   9: f1829_0_flatten_Return -> f2190_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, arg8'=arg8p10, arg9'=arg9p10, (arg1p10 > 0 /\ -1+arg2p10-arg1 <= 0 /\ arg1p10-arg1 <= 0 /\ -1+arg2p10 > 0 /\ arg1 > 0), cost: 1
  37: f2161_0_count_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p38, arg2'=arg2p38, arg3'=arg3p38, arg4'=arg4p38, arg5'=arg5p38, arg6'=arg6p38, arg7'=arg7p38, arg8'=arg8p38, arg9'=arg9p38, (arg1p38-arg1 <= 0 /\ -2+arg1 > 0 /\ -2+arg1p38 > 0), cost: 1
  38: f2161_0_count_NONNULL -> f2161_0_count_NONNULL : arg1'=arg1p39, arg2'=arg2p39, arg3'=arg3p39, arg4'=arg4p39, arg5'=arg5p39, arg6'=arg6p39, arg7'=arg7p39, arg8'=arg8p39, arg9'=arg9p39, (2+arg1p39-arg1 <= 0 /\ 1+arg1p39 > 0 /\ -1+arg1 > 0), cost: 1
  39: f2161_0_count_NONNULL -> f2411_0_count_InvokeMethod : arg1'=arg1p40, arg2'=arg2p40, arg3'=arg3p40, arg4'=arg4p40, arg5'=arg5p40, arg6'=arg6p40, arg7'=arg7p40, arg8'=arg8p40, arg9'=arg9p40, (-2+arg1 > 0 /\ 3+arg1p40-arg1 <= 0 /\ 1+arg1p40 > 0), cost: 1
  40: f2161_0_count_NONNULL -> f2411_0_count_InvokeMethod : arg1'=arg1p41, arg2'=arg2p41, arg3'=arg3p41, arg4'=arg4p41, arg5'=arg5p41, arg6'=arg6p41, arg7'=arg7p41, arg8'=arg8p41, arg9'=arg9p41, (-2+arg1 > 0 /\ 1+arg1p41 > 0), cost: 1
  41: f2161_0_count_NONNULL -> f2411_0_count_InvokeMethod : arg1'=arg1p42, arg2'=arg2p42, arg3'=arg3p42, arg4'=arg4p42, arg5'=arg5p42, arg6'=arg6p42, arg7'=arg7p42, arg8'=arg8p42, arg9'=arg9p42, (-2+arg1 > 0 /\ -1+arg1p42 > 0), cost: 1
  48: f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg1, arg4'=arg2, arg5'=1, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (-1+arg2p16 > 0 /\ arg2 > 0 /\ -1+arg1p16 > 0 /\ arg1 > 0), cost: 1
  49: f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg1, arg4'=arg2, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (arg2 > 0 /\ -1+arg2p17 > 0 /\ -1+arg1p17 > 0 /\ arg1 > 0), cost: 1
  65: f99_0_createTree_NE -> f572_0_random_GT : arg1'=arg1p35, arg3'=1, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (arg2 > 0 /\ arg1 > 0), cost: 1
  51: f1706_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg3, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg4, arg6'=arg5, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (arg5-arg4 >= 0 /\ 1-arg2+arg4p19 <= 0 /\ arg3p19-arg2 <= 0 /\ 2+arg7p19-arg1 <= 0 /\ arg3 > 0 /\ arg3p19 > 0 /\ arg2p19-arg1 <= 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg9p19 <= 0 /\ 1+arg4p19 > 0 /\ 2+arg8p19-arg1 <= 0 /\ arg2p19 > 0 /\ arg1 > 0), cost: 1
  55: f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p23, arg3'=arg3p23, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (arg5-arg4 < 0 /\ 2+arg8p23-arg1 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ 2+arg7p23-arg1 <= 0 /\ arg2p23-arg1 <= 0 /\ 1+arg4 > 0 /\ arg2p23 > 0 /\ -arg2+arg3p23 <= 0 /\ arg3p23 > 0 /\ arg1 > 0), cost: 1
  56: f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (arg5-arg4 < 0 /\ arg2p24-arg1 <= 0 /\ arg2p24 > 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ 2+arg7p24-arg1 <= 0 /\ 1+arg4p24 > 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ arg3p24 > 0 /\ -arg2+arg3p24 <= 0 /\ arg1 > 0 /\ 2+arg8p24-arg1 <= 0), cost: 1
  50: f197_0_createNode_Return -> f1706_0_createTree_LE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (-1+arg2p18 > 0 /\ -1+arg1p18 > 0), cost: 1
  52: f1787_0_createTree_NONNULL -> f1706_0_createTree_LE : arg1'=arg1p20, arg2'=arg2p20, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg2p20 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ 2+arg2p20-arg3 <= 0 /\ -arg2+arg1p20 <= 0 /\ -2+arg3 > 0 /\ arg1p20 > 0 /\ 2-arg2+arg8 <= 0 /\ arg2p20-arg4 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
  53: f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg2'=arg2p21, arg3'=arg3p21, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p21, arg9'=arg9p21, (-1+arg3p21 > 0 /\ -arg3p21+arg3 >= 0 /\ -2-arg9+arg3 >= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2-arg8 >= 0 /\ arg6-arg5 >= 0 /\ arg2p21 > 0 /\ arg2-arg2p21 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0), cost: 1
  54: f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg2'=arg2p22, arg3'=arg3p22, arg4'=arg5, arg5'=arg5p22, arg6'=arg8, arg7'=arg9, arg8'=arg8p22, arg9'=arg9p22, (arg3p22-arg3 <= 0 /\ -1+arg3p22 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2+arg2p22 <= 0 /\ arg2p22 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  66: f1787_0_createTree_NONNULL -> f572_0_random_GT : arg1'=arg1p36, arg2'=arg5, arg3'=arg6, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  57: f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p25, arg2'=arg2p25, arg3'=-1+arg1, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (2-arg3+arg7 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ arg1p25 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2p25 > 0), cost: 1
  58: f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p26, arg2'=arg2p26, arg3'=-1+arg1, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (-2-arg2+arg1p26 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg2p26 <= 0 /\ -3+arg2p26 > 0 /\ -2-arg2+arg2p26 <= 0 /\ -1+arg2 > 0 /\ arg6-arg7 == 0 /\ -2-arg3+arg1p26 <= 0 /\ -3+arg1p26 > 0 /\ 2+arg6-arg2 <= 0), cost: 1
  59: f1910_0_createTree_LE -> f1787_0_createTree_NONNULL : arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg9'=arg9p27, (-arg3+arg3p27 <= 0 /\ arg2p27 > 0 /\ arg3 > 0 /\ 2-arg3+arg9p27 <= 0 /\ 1+arg4p27 > 0 /\ arg2 > 0 /\ arg2p27-arg2 <= 0 /\ 1-arg3+arg4p27 <= 0 /\ arg3p27 > 0 /\ -arg4 == 0 /\ 2-arg2+arg8 <= 0 /\ 2-arg2+arg7 <= 0), cost: 1
  60: f1910_0_createTree_LE -> f1706_0_createTree_LE : arg1'=arg1p28, arg2'=arg2p28, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (arg2 > 0 /\ -arg2+arg1p28 <= 0 /\ 2-arg3+arg2p28 <= 0 /\ -2+arg3 > 0 /\ arg1p28 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p28 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
  61: f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg2'=arg2p29, arg3'=arg3p29, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (arg6 > 0 /\ -1+arg3p29 > 0 /\ arg2 > 0 /\ 2-arg3+arg7p29 <= 0 /\ -1+arg3 > 0 /\ arg3p29-arg3 <= 0 /\ -arg2+arg2p29 <= 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p29 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  62: f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg2'=arg2p30, arg3'=arg3p30, arg4'=arg5, arg5'=arg5p30, arg6'=arg7, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg6 > 0 /\ -arg3+arg3p30 <= 0 /\ -arg2+arg2p30 <= 0 /\ arg2 > 0 /\ 2+arg7p30-arg3 <= 0 /\ -1+arg3 > 0 /\ arg2p30 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ -1+arg3p30 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  67: f1910_0_createTree_LE -> f572_0_random_GT : arg1'=arg1p37, arg2'=arg5, arg3'=arg6, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (arg6 > 0 /\ 1+arg5 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  63: f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p31, arg2'=arg2p31, arg3'=-1+arg1, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (2-arg3+arg7 <= 0 /\ arg2p31 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg1p31 > 0), cost: 1
  64: f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p32, arg2'=arg2p32, arg3'=-1+arg1, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (2+arg6-arg3 <= 0 /\ -3+arg1p32 > 0 /\ -2-arg3+arg1p32 <= 0 /\ -1+arg3 > 0 /\ -2+arg2p32-arg3 <= 0 /\ -2+arg2p32-arg2 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p32 <= 0 /\ arg6-arg7 == 0 /\ 2+arg6-arg2 <= 0 /\ -3+arg2p32 > 0), cost: 1
  42: f2411_0_count_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p43, arg2'=arg2p43, arg3'=arg3p43, arg4'=arg4p43, arg5'=arg5p43, arg6'=arg6p43, arg7'=arg7p43, arg8'=arg8p43, arg9'=arg9p43, (1+arg1 > 0 /\ 1+arg1p43 > 0 /\ arg1p43-arg1 <= 0), cost: 1
  43: __init -> f1_0_main_Load : arg1'=arg1p44, arg2'=arg2p44, arg3'=arg3p44, arg4'=arg4p44, arg5'=arg5p44, arg6'=arg6p44, arg7'=arg7p44, arg8'=arg8p44, arg9'=arg9p44, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1-arg1 <= 0 /\ -arg3p1 == 0 /\ -arg2 == 0 /\ arg1p1 > 0 /\ -arg2p1 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p1, arg2'=0, arg3'=0, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (0 == 0 /\ arg1p1-arg1 <= 0 /\ -arg2 == 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p1 = 0
		
		propagated equality arg2p1 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p1, arg2'=0, arg3'=0, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (0 == 0 /\ arg1p1-arg1 <= 0 /\ -arg2 == 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p1, arg2'=0, arg3'=0, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1-arg1 <= 0 /\ -arg2 == 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (arg1p2-arg1 <= 0 /\ 1-arg2p2 == 0 /\ arg1p2 > 0 /\ arg2-arg3p2 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p2, arg2'=1, arg3'=arg2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (0 == 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p2 = 1
		
		propagated equality arg3p2 = arg2
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p2, arg2'=1, arg3'=arg2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (0 == 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p2, arg2'=1, arg3'=arg2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (-arg1p14 == 0 /\ arg2 > 0 /\ arg2-arg2p14 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=0, arg2'=arg2, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (0 == 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg1p14 = 0
		
		propagated equality arg2p14 = arg2
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=0, arg2'=arg2, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (0 == 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=0, arg2'=arg2, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (arg2 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=0, arg2'=arg2, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=0, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+arg1p15 > 0 /\ arg2 > 0 /\ arg2-arg2p15 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p15, arg2'=arg2, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (0 == 0 /\ 1+arg1p15 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p15 = arg2
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p15, arg2'=arg2, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (0 == 0 /\ 1+arg1p15 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p15, arg2'=arg2, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+arg1p15 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p15, arg2'=arg2, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+arg1p15 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+arg1p15 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (-1+arg2p16 > 0 /\ arg2 > 0 /\ -arg3p16+arg1 == 0 /\ -1+arg1p16 > 0 /\ 1-arg5p16 == 0 /\ -arg4p16+arg2 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg1, arg4'=arg2, arg5'=1, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (0 == 0 /\ -1+arg2p16 > 0 /\ arg2 > 0 /\ -1+arg1p16 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p16 = arg1
		
		propagated equality arg5p16 = 1
		
		propagated equality arg4p16 = arg2
		
	Simplified Guard

	Original rule:
	f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg1, arg4'=arg2, arg5'=1, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (0 == 0 /\ -1+arg2p16 > 0 /\ arg2 > 0 /\ -1+arg1p16 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg1, arg4'=arg2, arg5'=1, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (-1+arg2p16 > 0 /\ arg2 > 0 /\ -1+arg1p16 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (arg2 > 0 /\ -1+arg2p17 > 0 /\ -1+arg1p17 > 0 /\ -arg3p17+arg1 == 0 /\ arg2-arg4p17 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg1, arg4'=arg2, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (0 == 0 /\ arg2 > 0 /\ -1+arg2p17 > 0 /\ -1+arg1p17 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p17 = arg1
		
		propagated equality arg4p17 = arg2
		
	Simplified Guard

	Original rule:
	f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg1, arg4'=arg2, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (0 == 0 /\ arg2 > 0 /\ -1+arg2p17 > 0 /\ -1+arg1p17 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg1, arg4'=arg2, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (arg2 > 0 /\ -1+arg2p17 > 0 /\ -1+arg1p17 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f197_0_createNode_Return -> f1706_0_createTree_LE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (-arg3p18+arg1 == 0 /\ -1+arg2p18 > 0 /\ -1+arg1p18 > 0 /\ -arg5p18+arg3 == 0 /\ arg2-arg4p18 == 0), cost: 1
	New rule:
	f197_0_createNode_Return -> f1706_0_createTree_LE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (0 == 0 /\ -1+arg2p18 > 0 /\ -1+arg1p18 > 0), cost: 1
	
		propagated equality arg3p18 = arg1
		
		propagated equality arg5p18 = arg3
		
		propagated equality arg4p18 = arg2
		
	Simplified Guard

	Original rule:
	f197_0_createNode_Return -> f1706_0_createTree_LE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (0 == 0 /\ -1+arg2p18 > 0 /\ -1+arg1p18 > 0), cost: 1
	New rule:
	f197_0_createNode_Return -> f1706_0_createTree_LE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (-1+arg2p18 > 0 /\ -1+arg1p18 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1706_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (arg5-arg4 >= 0 /\ 1-arg2+arg4p19 <= 0 /\ arg3p19-arg2 <= 0 /\ 2+arg7p19-arg1 <= 0 /\ arg3 > 0 /\ arg3p19 > 0 /\ arg2p19-arg1 <= 0 /\ arg2 > 0 /\ -arg6p19+arg5 == 0 /\ 1+arg4 > 0 /\ arg3-arg1p19 == 0 /\ arg4-arg5p19 == 0 /\ 2-arg2+arg9p19 <= 0 /\ 1+arg4p19 > 0 /\ 2+arg8p19-arg1 <= 0 /\ arg2p19 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1706_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg3, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg4, arg6'=arg5, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (0 == 0 /\ arg5-arg4 >= 0 /\ 1-arg2+arg4p19 <= 0 /\ arg3p19-arg2 <= 0 /\ 2+arg7p19-arg1 <= 0 /\ arg3 > 0 /\ arg3p19 > 0 /\ arg2p19-arg1 <= 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg9p19 <= 0 /\ 1+arg4p19 > 0 /\ 2+arg8p19-arg1 <= 0 /\ arg2p19 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg6p19 = arg5
		
		propagated equality arg1p19 = arg3
		
		propagated equality arg5p19 = arg4
		
	Simplified Guard

	Original rule:
	f1706_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg3, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg4, arg6'=arg5, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (0 == 0 /\ arg5-arg4 >= 0 /\ 1-arg2+arg4p19 <= 0 /\ arg3p19-arg2 <= 0 /\ 2+arg7p19-arg1 <= 0 /\ arg3 > 0 /\ arg3p19 > 0 /\ arg2p19-arg1 <= 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg9p19 <= 0 /\ 1+arg4p19 > 0 /\ 2+arg8p19-arg1 <= 0 /\ arg2p19 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1706_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg3, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg4, arg6'=arg5, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (arg5-arg4 >= 0 /\ 1-arg2+arg4p19 <= 0 /\ arg3p19-arg2 <= 0 /\ 2+arg7p19-arg1 <= 0 /\ arg3 > 0 /\ arg3p19 > 0 /\ arg2p19-arg1 <= 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg9p19 <= 0 /\ 1+arg4p19 > 0 /\ 2+arg8p19-arg1 <= 0 /\ arg2p19 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1787_0_createTree_NONNULL -> f1706_0_createTree_LE : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg2p20 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1-arg3p20+arg1 == 0 /\ 2+arg2p20-arg3 <= 0 /\ -arg2+arg1p20 <= 0 /\ -2+arg3 > 0 /\ arg1p20 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5p20 == 0 /\ arg2p20-arg4 <= 0 /\ arg4 > 0 /\ arg5-arg4p20 == 0 /\ 2-arg2+arg7 <= 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f1706_0_createTree_LE : arg1'=arg1p20, arg2'=arg2p20, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (0 == 0 /\ arg2p20 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ 2+arg2p20-arg3 <= 0 /\ -arg2+arg1p20 <= 0 /\ -2+arg3 > 0 /\ arg1p20 > 0 /\ 2-arg2+arg8 <= 0 /\ arg2p20-arg4 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	
		propagated equality arg3p20 = -1+arg1
		
		propagated equality arg5p20 = arg6
		
		propagated equality arg4p20 = arg5
		
	Simplified Guard

	Original rule:
	f1787_0_createTree_NONNULL -> f1706_0_createTree_LE : arg1'=arg1p20, arg2'=arg2p20, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (0 == 0 /\ arg2p20 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ 2+arg2p20-arg3 <= 0 /\ -arg2+arg1p20 <= 0 /\ -2+arg3 > 0 /\ arg1p20 > 0 /\ 2-arg2+arg8 <= 0 /\ arg2p20-arg4 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f1706_0_createTree_LE : arg1'=arg1p20, arg2'=arg2p20, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg2p20 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ 2+arg2p20-arg3 <= 0 /\ -arg2+arg1p20 <= 0 /\ -2+arg3 > 0 /\ arg1p20 > 0 /\ 2-arg2+arg8 <= 0 /\ arg2p20-arg4 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (-1+arg3p21 > 0 /\ -arg3p21+arg3 >= 0 /\ -2-arg9+arg3 >= 0 /\ arg2 > 0 /\ arg6-arg5p21 == 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg4p21+arg5 == 0 /\ arg9-arg7p21 == 0 /\ -2+arg2-arg8 >= 0 /\ -arg6p21+arg8 == 0 /\ arg6-arg5 >= 0 /\ arg2p21 > 0 /\ arg2-arg2p21 >= 0 /\ -arg1p21+arg1 == 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p21, arg9'=arg9p21, (0 == 0 /\ -1+arg3p21 > 0 /\ -arg3p21+arg3 >= 0 /\ -2-arg9+arg3 >= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2-arg8 >= 0 /\ arg6-arg5 >= 0 /\ arg2p21 > 0 /\ arg2-arg2p21 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg5p21 = arg6
		
		propagated equality arg4p21 = arg5
		
		propagated equality arg7p21 = arg9
		
		propagated equality arg6p21 = arg8
		
		propagated equality arg1p21 = arg1
		
	Simplified Guard

	Original rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p21, arg9'=arg9p21, (0 == 0 /\ -1+arg3p21 > 0 /\ -arg3p21+arg3 >= 0 /\ -2-arg9+arg3 >= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2-arg8 >= 0 /\ arg6-arg5 >= 0 /\ arg2p21 > 0 /\ arg2-arg2p21 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p21, arg9'=arg9p21, (-1+arg3p21 > 0 /\ -arg3p21+arg3 >= 0 /\ -2-arg9+arg3 >= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2-arg8 >= 0 /\ arg6-arg5 >= 0 /\ arg2p21 > 0 /\ arg2-arg2p21 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p21, arg9'=arg9p21, (-1+arg3p21 > 0 /\ -arg3p21+arg3 >= 0 /\ -2-arg9+arg3 >= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2-arg8 >= 0 /\ arg6-arg5 >= 0 /\ arg2p21 > 0 /\ arg2-arg2p21 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg2'=arg2p21, arg3'=arg3p21, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p21, arg9'=arg9p21, (-1+arg3p21 > 0 /\ -arg3p21+arg3 >= 0 /\ -2-arg9+arg3 >= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2-arg8 >= 0 /\ arg6-arg5 >= 0 /\ arg2p21 > 0 /\ arg2-arg2p21 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (arg3p22-arg3 <= 0 /\ -1+arg3p22 > 0 /\ arg8-arg6p22 == 0 /\ -arg1p22+arg1 == 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2+arg2p22 <= 0 /\ -arg4p22+arg5 == 0 /\ arg2p22 > 0 /\ 2-arg2+arg8 <= 0 /\ arg9-arg7p22 == 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg5, arg5'=arg5p22, arg6'=arg8, arg7'=arg9, arg8'=arg8p22, arg9'=arg9p22, (0 == 0 /\ arg3p22-arg3 <= 0 /\ -1+arg3p22 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2+arg2p22 <= 0 /\ arg2p22 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg6p22 = arg8
		
		propagated equality arg1p22 = arg1
		
		propagated equality arg4p22 = arg5
		
		propagated equality arg7p22 = arg9
		
	Simplified Guard

	Original rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg5, arg5'=arg5p22, arg6'=arg8, arg7'=arg9, arg8'=arg8p22, arg9'=arg9p22, (0 == 0 /\ arg3p22-arg3 <= 0 /\ -1+arg3p22 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2+arg2p22 <= 0 /\ arg2p22 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg5, arg5'=arg5p22, arg6'=arg8, arg7'=arg9, arg8'=arg8p22, arg9'=arg9p22, (arg3p22-arg3 <= 0 /\ -1+arg3p22 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2+arg2p22 <= 0 /\ arg2p22 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg5, arg5'=arg5p22, arg6'=arg8, arg7'=arg9, arg8'=arg8p22, arg9'=arg9p22, (arg3p22-arg3 <= 0 /\ -1+arg3p22 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2+arg2p22 <= 0 /\ arg2p22 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg2'=arg2p22, arg3'=arg3p22, arg4'=arg5, arg5'=arg5p22, arg6'=arg8, arg7'=arg9, arg8'=arg8p22, arg9'=arg9p22, (arg3p22-arg3 <= 0 /\ -1+arg3p22 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2+arg2p22 <= 0 /\ arg2p22 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (arg5-arg4 < 0 /\ 2+arg8p23-arg1 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ -arg4p23 == 0 /\ arg2 > 0 /\ 2+arg7p23-arg1 <= 0 /\ arg2p23-arg1 <= 0 /\ 1+arg4 > 0 /\ arg2p23 > 0 /\ 1+arg5-arg6p23 == 0 /\ -arg2+arg3p23 <= 0 /\ -arg5p23+arg4 == 0 /\ arg3p23 > 0 /\ arg1 > 0 /\ -arg1p23+arg3 == 0), cost: 1
	New rule:
	f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p23, arg3'=arg3p23, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (0 == 0 /\ arg5-arg4 < 0 /\ 2+arg8p23-arg1 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ 2+arg7p23-arg1 <= 0 /\ arg2p23-arg1 <= 0 /\ 1+arg4 > 0 /\ arg2p23 > 0 /\ -arg2+arg3p23 <= 0 /\ arg3p23 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p23 = 0
		
		propagated equality arg6p23 = 1+arg5
		
		propagated equality arg5p23 = arg4
		
		propagated equality arg1p23 = arg3
		
	Simplified Guard

	Original rule:
	f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p23, arg3'=arg3p23, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (0 == 0 /\ arg5-arg4 < 0 /\ 2+arg8p23-arg1 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ 2+arg7p23-arg1 <= 0 /\ arg2p23-arg1 <= 0 /\ 1+arg4 > 0 /\ arg2p23 > 0 /\ -arg2+arg3p23 <= 0 /\ arg3p23 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p23, arg3'=arg3p23, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (arg5-arg4 < 0 /\ 2+arg8p23-arg1 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ 2+arg7p23-arg1 <= 0 /\ arg2p23-arg1 <= 0 /\ 1+arg4 > 0 /\ arg2p23 > 0 /\ -arg2+arg3p23 <= 0 /\ arg3p23 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (arg5-arg4 < 0 /\ arg3-arg1p24 == 0 /\ arg2p24-arg1 <= 0 /\ arg2p24 > 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ 2+arg7p24-arg1 <= 0 /\ 1+arg4p24 > 0 /\ 1-arg6p24+arg5 == 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ arg3p24 > 0 /\ -arg5p24+arg4 == 0 /\ -arg2+arg3p24 <= 0 /\ arg1 > 0 /\ 2+arg8p24-arg1 <= 0), cost: 1
	New rule:
	f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (0 == 0 /\ arg5-arg4 < 0 /\ arg2p24-arg1 <= 0 /\ arg2p24 > 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ 2+arg7p24-arg1 <= 0 /\ 1+arg4p24 > 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ arg3p24 > 0 /\ -arg2+arg3p24 <= 0 /\ arg1 > 0 /\ 2+arg8p24-arg1 <= 0), cost: 1
	
		propagated equality arg1p24 = arg3
		
		propagated equality arg6p24 = 1+arg5
		
		propagated equality arg5p24 = arg4
		
	Simplified Guard

	Original rule:
	f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (0 == 0 /\ arg5-arg4 < 0 /\ arg2p24-arg1 <= 0 /\ arg2p24 > 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ 2+arg7p24-arg1 <= 0 /\ 1+arg4p24 > 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ arg3p24 > 0 /\ -arg2+arg3p24 <= 0 /\ arg1 > 0 /\ 2+arg8p24-arg1 <= 0), cost: 1
	New rule:
	f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (arg5-arg4 < 0 /\ arg2p24-arg1 <= 0 /\ arg2p24 > 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ 2+arg7p24-arg1 <= 0 /\ 1+arg4p24 > 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ arg3p24 > 0 /\ -arg2+arg3p24 <= 0 /\ arg1 > 0 /\ 2+arg8p24-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (2-arg3+arg7 <= 0 /\ -arg4p25+arg4 == 0 /\ arg2 > 0 /\ arg5-arg5p25 == 0 /\ -1+arg3 > 0 /\ -1-arg3p25+arg1 == 0 /\ arg1p25 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2p25 > 0), cost: 1
	New rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p25, arg2'=arg2p25, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (0 == 0 /\ 2-arg3+arg7 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ arg1p25 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2p25 > 0), cost: 1
	
		propagated equality arg4p25 = arg4
		
		propagated equality arg5p25 = arg5
		
		propagated equality arg3p25 = -1+arg1
		
	Simplified Guard

	Original rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p25, arg2'=arg2p25, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (0 == 0 /\ 2-arg3+arg7 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ arg1p25 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2p25 > 0), cost: 1
	New rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p25, arg2'=arg2p25, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (2-arg3+arg7 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ arg1p25 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2p25 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p25, arg2'=arg2p25, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (2-arg3+arg7 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ arg1p25 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2p25 > 0), cost: 1
	New rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p25, arg2'=arg2p25, arg3'=-1+arg1, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (2-arg3+arg7 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ arg1p25 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2p25 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (-2-arg2+arg1p26 <= 0 /\ 2+arg6-arg3 <= 0 /\ arg5-arg5p26 == 0 /\ -arg4p26+arg4 == 0 /\ -1+arg3 > 0 /\ -2-arg3+arg2p26 <= 0 /\ -3+arg2p26 > 0 /\ -2-arg2+arg2p26 <= 0 /\ -1-arg3p26+arg1 == 0 /\ -1+arg2 > 0 /\ arg6-arg7 == 0 /\ -2-arg3+arg1p26 <= 0 /\ -3+arg1p26 > 0 /\ 2+arg6-arg2 <= 0), cost: 1
	New rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p26, arg2'=arg2p26, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (0 == 0 /\ -2-arg2+arg1p26 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg2p26 <= 0 /\ -3+arg2p26 > 0 /\ -2-arg2+arg2p26 <= 0 /\ -1+arg2 > 0 /\ arg6-arg7 == 0 /\ -2-arg3+arg1p26 <= 0 /\ -3+arg1p26 > 0 /\ 2+arg6-arg2 <= 0), cost: 1
	
		propagated equality arg5p26 = arg5
		
		propagated equality arg4p26 = arg4
		
		propagated equality arg3p26 = -1+arg1
		
	Simplified Guard

	Original rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p26, arg2'=arg2p26, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (0 == 0 /\ -2-arg2+arg1p26 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg2p26 <= 0 /\ -3+arg2p26 > 0 /\ -2-arg2+arg2p26 <= 0 /\ -1+arg2 > 0 /\ arg6-arg7 == 0 /\ -2-arg3+arg1p26 <= 0 /\ -3+arg1p26 > 0 /\ 2+arg6-arg2 <= 0), cost: 1
	New rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p26, arg2'=arg2p26, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (-2-arg2+arg1p26 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg2p26 <= 0 /\ -3+arg2p26 > 0 /\ -2-arg2+arg2p26 <= 0 /\ -1+arg2 > 0 /\ arg6-arg7 == 0 /\ -2-arg3+arg1p26 <= 0 /\ -3+arg1p26 > 0 /\ 2+arg6-arg2 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p26, arg2'=arg2p26, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (-2-arg2+arg1p26 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg2p26 <= 0 /\ -3+arg2p26 > 0 /\ -2-arg2+arg2p26 <= 0 /\ -1+arg2 > 0 /\ arg6-arg7 == 0 /\ -2-arg3+arg1p26 <= 0 /\ -3+arg1p26 > 0 /\ 2+arg6-arg2 <= 0), cost: 1
	New rule:
	f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p26, arg2'=arg2p26, arg3'=-1+arg1, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (-2-arg2+arg1p26 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg2p26 <= 0 /\ -3+arg2p26 > 0 /\ -2-arg2+arg2p26 <= 0 /\ -1+arg2 > 0 /\ arg6-arg7 == 0 /\ -2-arg3+arg1p26 <= 0 /\ -3+arg1p26 > 0 /\ 2+arg6-arg2 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1910_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg1p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5p27, arg6'=arg6p27, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (-arg3+arg3p27 <= 0 /\ arg2p27 > 0 /\ arg3 > 0 /\ 2-arg3+arg9p27 <= 0 /\ 1+arg4p27 > 0 /\ arg2 > 0 /\ arg2p27-arg2 <= 0 /\ 1-arg3+arg4p27 <= 0 /\ -arg7p27+arg7 == 0 /\ arg3p27 > 0 /\ -arg5p27+arg5 == 0 /\ -arg4 == 0 /\ -arg1p27+arg1 == 0 /\ 2-arg2+arg8 <= 0 /\ -arg8p27+arg8 == 0 /\ arg6-arg6p27 == 0 /\ 2-arg2+arg7 <= 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg1, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8, arg9'=arg9p27, (0 == 0 /\ -arg3+arg3p27 <= 0 /\ arg2p27 > 0 /\ arg3 > 0 /\ 2-arg3+arg9p27 <= 0 /\ 1+arg4p27 > 0 /\ arg2 > 0 /\ arg2p27-arg2 <= 0 /\ 1-arg3+arg4p27 <= 0 /\ arg3p27 > 0 /\ -arg4 == 0 /\ 2-arg2+arg8 <= 0 /\ 2-arg2+arg7 <= 0), cost: 1
	
		propagated equality arg7p27 = arg7
		
		propagated equality arg5p27 = arg5
		
		propagated equality arg1p27 = arg1
		
		propagated equality arg8p27 = arg8
		
		propagated equality arg6p27 = arg6
		
	Simplified Guard

	Original rule:
	f1910_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg1, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8, arg9'=arg9p27, (0 == 0 /\ -arg3+arg3p27 <= 0 /\ arg2p27 > 0 /\ arg3 > 0 /\ 2-arg3+arg9p27 <= 0 /\ 1+arg4p27 > 0 /\ arg2 > 0 /\ arg2p27-arg2 <= 0 /\ 1-arg3+arg4p27 <= 0 /\ arg3p27 > 0 /\ -arg4 == 0 /\ 2-arg2+arg8 <= 0 /\ 2-arg2+arg7 <= 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg1, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8, arg9'=arg9p27, (-arg3+arg3p27 <= 0 /\ arg2p27 > 0 /\ arg3 > 0 /\ 2-arg3+arg9p27 <= 0 /\ 1+arg4p27 > 0 /\ arg2 > 0 /\ arg2p27-arg2 <= 0 /\ 1-arg3+arg4p27 <= 0 /\ arg3p27 > 0 /\ -arg4 == 0 /\ 2-arg2+arg8 <= 0 /\ 2-arg2+arg7 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1910_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg1, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8, arg9'=arg9p27, (-arg3+arg3p27 <= 0 /\ arg2p27 > 0 /\ arg3 > 0 /\ 2-arg3+arg9p27 <= 0 /\ 1+arg4p27 > 0 /\ arg2 > 0 /\ arg2p27-arg2 <= 0 /\ 1-arg3+arg4p27 <= 0 /\ arg3p27 > 0 /\ -arg4 == 0 /\ 2-arg2+arg8 <= 0 /\ 2-arg2+arg7 <= 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1787_0_createTree_NONNULL : arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg9'=arg9p27, (-arg3+arg3p27 <= 0 /\ arg2p27 > 0 /\ arg3 > 0 /\ 2-arg3+arg9p27 <= 0 /\ 1+arg4p27 > 0 /\ arg2 > 0 /\ arg2p27-arg2 <= 0 /\ 1-arg3+arg4p27 <= 0 /\ arg3p27 > 0 /\ -arg4 == 0 /\ 2-arg2+arg8 <= 0 /\ 2-arg2+arg7 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1910_0_createTree_LE -> f1706_0_createTree_LE : arg1'=arg1p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg5p28, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (-1-arg3p28+arg1 == 0 /\ arg2 > 0 /\ -arg2+arg1p28 <= 0 /\ 2-arg3+arg2p28 <= 0 /\ arg6-arg5p28 == 0 /\ -2+arg3 > 0 /\ arg1p28 > 0 /\ arg5-arg4p28 == 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p28 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1706_0_createTree_LE : arg1'=arg1p28, arg2'=arg2p28, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (0 == 0 /\ arg2 > 0 /\ -arg2+arg1p28 <= 0 /\ 2-arg3+arg2p28 <= 0 /\ -2+arg3 > 0 /\ arg1p28 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p28 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	
		propagated equality arg3p28 = -1+arg1
		
		propagated equality arg5p28 = arg6
		
		propagated equality arg4p28 = arg5
		
	Simplified Guard

	Original rule:
	f1910_0_createTree_LE -> f1706_0_createTree_LE : arg1'=arg1p28, arg2'=arg2p28, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (0 == 0 /\ arg2 > 0 /\ -arg2+arg1p28 <= 0 /\ 2-arg3+arg2p28 <= 0 /\ -2+arg3 > 0 /\ arg1p28 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p28 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1706_0_createTree_LE : arg1'=arg1p28, arg2'=arg2p28, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (arg2 > 0 /\ -arg2+arg1p28 <= 0 /\ 2-arg3+arg2p28 <= 0 /\ -2+arg3 > 0 /\ arg1p28 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p28 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg5p29, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (arg6 > 0 /\ arg5-arg4p29 == 0 /\ -1+arg3p29 > 0 /\ arg2 > 0 /\ 2-arg3+arg7p29 <= 0 /\ -1+arg3 > 0 /\ arg3p29-arg3 <= 0 /\ -arg2+arg2p29 <= 0 /\ arg6-arg5p29 == 0 /\ 2-arg2+arg8 <= 0 /\ -arg1p29+arg1 == 0 /\ arg4 > 0 /\ arg2p29 > 0 /\ 2-arg2+arg7 <= 0 /\ -arg6p29+arg7 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (0 == 0 /\ arg6 > 0 /\ -1+arg3p29 > 0 /\ arg2 > 0 /\ 2-arg3+arg7p29 <= 0 /\ -1+arg3 > 0 /\ arg3p29-arg3 <= 0 /\ -arg2+arg2p29 <= 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p29 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p29 = arg5
		
		propagated equality arg5p29 = arg6
		
		propagated equality arg1p29 = arg1
		
		propagated equality arg6p29 = arg7
		
	Simplified Guard

	Original rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (0 == 0 /\ arg6 > 0 /\ -1+arg3p29 > 0 /\ arg2 > 0 /\ 2-arg3+arg7p29 <= 0 /\ -1+arg3 > 0 /\ arg3p29-arg3 <= 0 /\ -arg2+arg2p29 <= 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p29 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (arg6 > 0 /\ -1+arg3p29 > 0 /\ arg2 > 0 /\ 2-arg3+arg7p29 <= 0 /\ -1+arg3 > 0 /\ arg3p29-arg3 <= 0 /\ -arg2+arg2p29 <= 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p29 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (arg6 > 0 /\ -1+arg3p29 > 0 /\ arg2 > 0 /\ 2-arg3+arg7p29 <= 0 /\ -1+arg3 > 0 /\ arg3p29-arg3 <= 0 /\ -arg2+arg2p29 <= 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p29 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg2'=arg2p29, arg3'=arg3p29, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (arg6 > 0 /\ -1+arg3p29 > 0 /\ arg2 > 0 /\ 2-arg3+arg7p29 <= 0 /\ -1+arg3 > 0 /\ arg3p29-arg3 <= 0 /\ -arg2+arg2p29 <= 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p29 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5p30, arg6'=arg6p30, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg6 > 0 /\ -arg3+arg3p30 <= 0 /\ -arg4p30+arg5 == 0 /\ -arg2+arg2p30 <= 0 /\ -arg6p30+arg7 == 0 /\ arg2 > 0 /\ 2+arg7p30-arg3 <= 0 /\ -1+arg3 > 0 /\ arg2p30 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ -1+arg3p30 > 0 /\ -arg1p30+arg1 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg5, arg5'=arg5p30, arg6'=arg7, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (0 == 0 /\ arg6 > 0 /\ -arg3+arg3p30 <= 0 /\ -arg2+arg2p30 <= 0 /\ arg2 > 0 /\ 2+arg7p30-arg3 <= 0 /\ -1+arg3 > 0 /\ arg2p30 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ -1+arg3p30 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p30 = arg5
		
		propagated equality arg6p30 = arg7
		
		propagated equality arg1p30 = arg1
		
	Simplified Guard

	Original rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg5, arg5'=arg5p30, arg6'=arg7, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (0 == 0 /\ arg6 > 0 /\ -arg3+arg3p30 <= 0 /\ -arg2+arg2p30 <= 0 /\ arg2 > 0 /\ 2+arg7p30-arg3 <= 0 /\ -1+arg3 > 0 /\ arg2p30 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ -1+arg3p30 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg5, arg5'=arg5p30, arg6'=arg7, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg6 > 0 /\ -arg3+arg3p30 <= 0 /\ -arg2+arg2p30 <= 0 /\ arg2 > 0 /\ 2+arg7p30-arg3 <= 0 /\ -1+arg3 > 0 /\ arg2p30 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ -1+arg3p30 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg1'=arg1, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg5, arg5'=arg5p30, arg6'=arg7, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg6 > 0 /\ -arg3+arg3p30 <= 0 /\ -arg2+arg2p30 <= 0 /\ arg2 > 0 /\ 2+arg7p30-arg3 <= 0 /\ -1+arg3 > 0 /\ arg2p30 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ -1+arg3p30 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg2'=arg2p30, arg3'=arg3p30, arg4'=arg5, arg5'=arg5p30, arg6'=arg7, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg6 > 0 /\ -arg3+arg3p30 <= 0 /\ -arg2+arg2p30 <= 0 /\ arg2 > 0 /\ 2+arg7p30-arg3 <= 0 /\ -1+arg3 > 0 /\ arg2p30 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ -1+arg3p30 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p31, arg2'=arg2p31, arg3'=arg3p31, arg4'=arg4p31, arg5'=arg5p31, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (2-arg3+arg7 <= 0 /\ -arg5p31+arg5 == 0 /\ arg2p31 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ -1-arg3p31+arg1 == 0 /\ 2+arg6-arg2 <= 0 /\ arg1p31 > 0 /\ arg4-arg4p31 == 0), cost: 1
	New rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p31, arg2'=arg2p31, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (0 == 0 /\ 2-arg3+arg7 <= 0 /\ arg2p31 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg1p31 > 0), cost: 1
	
		propagated equality arg5p31 = arg5
		
		propagated equality arg3p31 = -1+arg1
		
		propagated equality arg4p31 = arg4
		
	Simplified Guard

	Original rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p31, arg2'=arg2p31, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (0 == 0 /\ 2-arg3+arg7 <= 0 /\ arg2p31 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg1p31 > 0), cost: 1
	New rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p31, arg2'=arg2p31, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (2-arg3+arg7 <= 0 /\ arg2p31 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg1p31 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p31, arg2'=arg2p31, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (2-arg3+arg7 <= 0 /\ arg2p31 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg1p31 > 0), cost: 1
	New rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p31, arg2'=arg2p31, arg3'=-1+arg1, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (2-arg3+arg7 <= 0 /\ arg2p31 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg1p31 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg4p32, arg5'=arg5p32, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (2+arg6-arg3 <= 0 /\ -3+arg1p32 > 0 /\ -2-arg3+arg1p32 <= 0 /\ -1+arg3 > 0 /\ -2+arg2p32-arg3 <= 0 /\ -1-arg3p32+arg1 == 0 /\ -2+arg2p32-arg2 <= 0 /\ -1+arg2 > 0 /\ -arg5p32+arg5 == 0 /\ -2-arg2+arg1p32 <= 0 /\ arg6-arg7 == 0 /\ -arg4p32+arg4 == 0 /\ 2+arg6-arg2 <= 0 /\ -3+arg2p32 > 0), cost: 1
	New rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p32, arg2'=arg2p32, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (0 == 0 /\ 2+arg6-arg3 <= 0 /\ -3+arg1p32 > 0 /\ -2-arg3+arg1p32 <= 0 /\ -1+arg3 > 0 /\ -2+arg2p32-arg3 <= 0 /\ -2+arg2p32-arg2 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p32 <= 0 /\ arg6-arg7 == 0 /\ 2+arg6-arg2 <= 0 /\ -3+arg2p32 > 0), cost: 1
	
		propagated equality arg3p32 = -1+arg1
		
		propagated equality arg5p32 = arg5
		
		propagated equality arg4p32 = arg4
		
	Simplified Guard

	Original rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p32, arg2'=arg2p32, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (0 == 0 /\ 2+arg6-arg3 <= 0 /\ -3+arg1p32 > 0 /\ -2-arg3+arg1p32 <= 0 /\ -1+arg3 > 0 /\ -2+arg2p32-arg3 <= 0 /\ -2+arg2p32-arg2 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p32 <= 0 /\ arg6-arg7 == 0 /\ 2+arg6-arg2 <= 0 /\ -3+arg2p32 > 0), cost: 1
	New rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p32, arg2'=arg2p32, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (2+arg6-arg3 <= 0 /\ -3+arg1p32 > 0 /\ -2-arg3+arg1p32 <= 0 /\ -1+arg3 > 0 /\ -2+arg2p32-arg3 <= 0 /\ -2+arg2p32-arg2 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p32 <= 0 /\ arg6-arg7 == 0 /\ 2+arg6-arg2 <= 0 /\ -3+arg2p32 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p32, arg2'=arg2p32, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (2+arg6-arg3 <= 0 /\ -3+arg1p32 > 0 /\ -2-arg3+arg1p32 <= 0 /\ -1+arg3 > 0 /\ -2+arg2p32-arg3 <= 0 /\ -2+arg2p32-arg2 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p32 <= 0 /\ arg6-arg7 == 0 /\ 2+arg6-arg2 <= 0 /\ -3+arg2p32 > 0), cost: 1
	New rule:
	f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p32, arg2'=arg2p32, arg3'=-1+arg1, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (2+arg6-arg3 <= 0 /\ -3+arg1p32 > 0 /\ -2-arg3+arg1p32 <= 0 /\ -1+arg3 > 0 /\ -2+arg2p32-arg3 <= 0 /\ -2+arg2p32-arg2 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p32 <= 0 /\ arg6-arg7 == 0 /\ 2+arg6-arg2 <= 0 /\ -3+arg2p32 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f99_0_createTree_NE -> f572_0_random_GT : arg1'=arg1p35, arg2'=arg2p35, arg3'=arg3p35, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (arg2 > 0 /\ 1-arg3p35 == 0 /\ arg2-arg2p35 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f99_0_createTree_NE -> f572_0_random_GT : arg1'=arg1p35, arg2'=arg2, arg3'=1, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (0 == 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p35 = 1
		
		propagated equality arg2p35 = arg2
		
	Simplified Guard

	Original rule:
	f99_0_createTree_NE -> f572_0_random_GT : arg1'=arg1p35, arg2'=arg2, arg3'=1, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (0 == 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f99_0_createTree_NE -> f572_0_random_GT : arg1'=arg1p35, arg2'=arg2, arg3'=1, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (arg2 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f99_0_createTree_NE -> f572_0_random_GT : arg1'=arg1p35, arg2'=arg2, arg3'=1, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f99_0_createTree_NE -> f572_0_random_GT : arg1'=arg1p35, arg3'=1, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1787_0_createTree_NONNULL -> f572_0_random_GT : arg1'=arg1p36, arg2'=arg2p36, arg3'=arg3p36, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (1+arg5 > 0 /\ -arg3p36+arg6 == 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ arg5-arg2p36 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f572_0_random_GT : arg1'=arg1p36, arg2'=arg5, arg3'=arg6, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (0 == 0 /\ 1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p36 = arg6
		
		propagated equality arg2p36 = arg5
		
	Simplified Guard

	Original rule:
	f1787_0_createTree_NONNULL -> f572_0_random_GT : arg1'=arg1p36, arg2'=arg5, arg3'=arg6, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (0 == 0 /\ 1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1787_0_createTree_NONNULL -> f572_0_random_GT : arg1'=arg1p36, arg2'=arg5, arg3'=arg6, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1910_0_createTree_LE -> f572_0_random_GT : arg1'=arg1p37, arg2'=arg2p37, arg3'=arg3p37, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (arg6 > 0 /\ 1+arg5 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ arg6-arg3p37 == 0 /\ arg5-arg2p37 == 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f572_0_random_GT : arg1'=arg1p37, arg2'=arg5, arg3'=arg6, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (0 == 0 /\ arg6 > 0 /\ 1+arg5 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p37 = arg6
		
		propagated equality arg2p37 = arg5
		
	Simplified Guard

	Original rule:
	f1910_0_createTree_LE -> f572_0_random_GT : arg1'=arg1p37, arg2'=arg5, arg3'=arg6, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (0 == 0 /\ arg6 > 0 /\ 1+arg5 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1910_0_createTree_LE -> f572_0_random_GT : arg1'=arg1p37, arg2'=arg5, arg3'=arg6, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (arg6 > 0 /\ 1+arg5 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1

Step with 43

	Trace

	43[T]
	
	Blocked

	[{}, {}]

Step with 3

	Trace

	43[T], 3[(arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 5

	Trace

	43[T], 3[(arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0)], 5[(arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ arg1p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 32

	Trace

	43[T], 3[(arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0)], 5[(arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ arg1p6 > 0 /\ arg1 > 0)], 32[(2+arg1p33-arg1 <= 0 /\ 1+arg1p33 > 0 /\ -1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 32

	Trace

	43[T], 3[(arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0)], 5[(arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ arg1p6 > 0 /\ arg1 > 0)], 32[(2+arg1p33-arg1 <= 0 /\ 1+arg1p33 > 0 /\ -1+arg1 > 0)], 32[(2+arg1p33-arg1 <= 0 /\ 1+arg1p33 > 0 /\ -1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Covered

	Trace

	43[T], 3[(arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0)], 5[(arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ arg1p6 > 0 /\ arg1 > 0)], 32[(2+arg1p33-arg1 <= 0 /\ 1+arg1p33 > 0 /\ -1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {32[T]}]

Step with 33

	Trace

	43[T], 3[(arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0)], 5[(arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ arg1p6 > 0 /\ arg1 > 0)], 32[(2+arg1p33-arg1 <= 0 /\ 1+arg1p33 > 0 /\ -1+arg1 > 0)], 33[(-2+arg1 > 0 /\ -2+arg1p34-arg1 <= 0 /\ -2+arg1p34 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {32[T]}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9
   3: f1_0_main_Load -> f1745_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, arg8'=arg8p4, arg9'=arg9p4, (arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0), cost: 1
  44: f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p1, arg2'=0, arg3'=0, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1-arg1 <= 0 /\ -arg2 == 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
  45: f1_0_main_Load -> f106_0_main_InvokeMethod : arg1'=arg1p2, arg2'=1, arg3'=arg2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
  46: f1_0_main_Load -> f99_0_createTree_NE : arg1'=0, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (arg2 > 0 /\ arg1 > 0), cost: 1
  47: f1_0_main_Load -> f99_0_createTree_NE : arg1'=arg1p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+arg1p15 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
   2: f106_0_main_InvokeMethod -> f2232_0_flatten_NONNULL : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, (-2+arg2 < 0 /\ 1+arg1p3-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
  11: f106_0_main_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (1+arg1p12-arg1 <= 0 /\ -2+arg2 < 0 /\ 1+arg1p12 > 0 /\ arg1 > 0), cost: 1
  32: f2232_0_flatten_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg4p33, arg5'=arg5p33, arg6'=arg6p33, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (2+arg1p33-arg1 <= 0 /\ 1+arg1p33 > 0 /\ -1+arg1 > 0), cost: 1
  33: f2232_0_flatten_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p34, arg2'=arg2p34, arg3'=arg3p34, arg4'=arg4p34, arg5'=arg5p34, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (-2+arg1 > 0 /\ -2+arg1p34-arg1 <= 0 /\ -2+arg1p34 > 0), cost: 1
  68: f2232_0_flatten_NONNULL -> LoAT_sink : (-2+arg1 > 0 /\ 2-arg1p34+arg1 >= 0 /\ -2+arg1p34 > 0 /\ -arg1p34+arg1 <= 0), cost: NONTERM
   5: f1745_0_main_InvokeMethod -> f2232_0_flatten_NONNULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, arg9'=arg9p6, (arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
   6: f1745_0_main_InvokeMethod -> f2190_0_main_InvokeMethod : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (arg1p7-arg1 <= 0 /\ 1-arg2+arg1p7 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1-arg1+arg2p7 <= 0 /\ -arg2+arg2p7 <= 0 /\ -1+arg2p7 > 0 /\ arg1 > 0), cost: 1
   7: f1745_0_main_InvokeMethod -> f2190_0_main_InvokeMethod : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, arg9'=arg9p8, (-4+arg2 > 0 /\ -4+arg2p8 > 0 /\ arg1p8 > 0 /\ 4-arg2+arg1p8 <= 0 /\ -arg2+arg2p8 <= 0 /\ arg1p8-arg1 <= 0 /\ arg1 > 0), cost: 1
   8: f1745_0_main_InvokeMethod -> f2190_0_main_InvokeMethod : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (-3+arg2 > 0 /\ arg1p9 > 0 /\ -arg2+arg2p9 <= 0 /\ -3+arg2p9 > 0 /\ 3-arg2+arg1p9 <= 0 /\ arg1p9-arg1 <= 0 /\ arg1 > 0), cost: 1
  12: f1745_0_main_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, arg8'=arg8p13, arg9'=arg9p13, (-2+arg1p13 > 0 /\ -2+arg2 > 0 /\ -arg2+arg1p13 <= 0 /\ arg1 > 0), cost: 1
   4: f692_0_createTree_Return -> f1745_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (-1+arg2p5 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1p5-arg1 <= 0 /\ 1-arg2+arg1p5 <= 0 /\ -1+arg2 > 0 /\ arg2p5-arg2 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
  10: f2190_0_main_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, arg7'=arg7p11, arg8'=arg8p11, arg9'=arg9p11, (-1+arg2 > 0 /\ -1+arg1p11 > 0 /\ -arg2+arg1p11 <= 0 /\ arg1 > 0), cost: 1
   9: f1829_0_flatten_Return -> f2190_0_main_InvokeMethod : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, arg8'=arg8p10, arg9'=arg9p10, (arg1p10 > 0 /\ -1+arg2p10-arg1 <= 0 /\ arg1p10-arg1 <= 0 /\ -1+arg2p10 > 0 /\ arg1 > 0), cost: 1
  37: f2161_0_count_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p38, arg2'=arg2p38, arg3'=arg3p38, arg4'=arg4p38, arg5'=arg5p38, arg6'=arg6p38, arg7'=arg7p38, arg8'=arg8p38, arg9'=arg9p38, (arg1p38-arg1 <= 0 /\ -2+arg1 > 0 /\ -2+arg1p38 > 0), cost: 1
  38: f2161_0_count_NONNULL -> f2161_0_count_NONNULL : arg1'=arg1p39, arg2'=arg2p39, arg3'=arg3p39, arg4'=arg4p39, arg5'=arg5p39, arg6'=arg6p39, arg7'=arg7p39, arg8'=arg8p39, arg9'=arg9p39, (2+arg1p39-arg1 <= 0 /\ 1+arg1p39 > 0 /\ -1+arg1 > 0), cost: 1
  39: f2161_0_count_NONNULL -> f2411_0_count_InvokeMethod : arg1'=arg1p40, arg2'=arg2p40, arg3'=arg3p40, arg4'=arg4p40, arg5'=arg5p40, arg6'=arg6p40, arg7'=arg7p40, arg8'=arg8p40, arg9'=arg9p40, (-2+arg1 > 0 /\ 3+arg1p40-arg1 <= 0 /\ 1+arg1p40 > 0), cost: 1
  40: f2161_0_count_NONNULL -> f2411_0_count_InvokeMethod : arg1'=arg1p41, arg2'=arg2p41, arg3'=arg3p41, arg4'=arg4p41, arg5'=arg5p41, arg6'=arg6p41, arg7'=arg7p41, arg8'=arg8p41, arg9'=arg9p41, (-2+arg1 > 0 /\ 1+arg1p41 > 0), cost: 1
  41: f2161_0_count_NONNULL -> f2411_0_count_InvokeMethod : arg1'=arg1p42, arg2'=arg2p42, arg3'=arg3p42, arg4'=arg4p42, arg5'=arg5p42, arg6'=arg6p42, arg7'=arg7p42, arg8'=arg8p42, arg9'=arg9p42, (-2+arg1 > 0 /\ -1+arg1p42 > 0), cost: 1
  48: f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg1, arg4'=arg2, arg5'=1, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (-1+arg2p16 > 0 /\ arg2 > 0 /\ -1+arg1p16 > 0 /\ arg1 > 0), cost: 1
  49: f99_0_createTree_NE -> f1706_0_createTree_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg1, arg4'=arg2, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (arg2 > 0 /\ -1+arg2p17 > 0 /\ -1+arg1p17 > 0 /\ arg1 > 0), cost: 1
  65: f99_0_createTree_NE -> f572_0_random_GT : arg1'=arg1p35, arg3'=1, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (arg2 > 0 /\ arg1 > 0), cost: 1
  51: f1706_0_createTree_LE -> f1787_0_createTree_NONNULL : arg1'=arg3, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg4, arg6'=arg5, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (arg5-arg4 >= 0 /\ 1-arg2+arg4p19 <= 0 /\ arg3p19-arg2 <= 0 /\ 2+arg7p19-arg1 <= 0 /\ arg3 > 0 /\ arg3p19 > 0 /\ arg2p19-arg1 <= 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg9p19 <= 0 /\ 1+arg4p19 > 0 /\ 2+arg8p19-arg1 <= 0 /\ arg2p19 > 0 /\ arg1 > 0), cost: 1
  55: f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p23, arg3'=arg3p23, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (arg5-arg4 < 0 /\ 2+arg8p23-arg1 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ 2+arg7p23-arg1 <= 0 /\ arg2p23-arg1 <= 0 /\ 1+arg4 > 0 /\ arg2p23 > 0 /\ -arg2+arg3p23 <= 0 /\ arg3p23 > 0 /\ arg1 > 0), cost: 1
  56: f1706_0_createTree_LE -> f1910_0_createTree_LE : arg1'=arg3, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (arg5-arg4 < 0 /\ arg2p24-arg1 <= 0 /\ arg2p24 > 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ 2+arg7p24-arg1 <= 0 /\ 1+arg4p24 > 0 /\ arg2 > 0 /\ 1+arg4 > 0 /\ arg3p24 > 0 /\ -arg2+arg3p24 <= 0 /\ arg1 > 0 /\ 2+arg8p24-arg1 <= 0), cost: 1
  50: f197_0_createNode_Return -> f1706_0_createTree_LE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (-1+arg2p18 > 0 /\ -1+arg1p18 > 0), cost: 1
  52: f1787_0_createTree_NONNULL -> f1706_0_createTree_LE : arg1'=arg1p20, arg2'=arg2p20, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg2p20 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ 2+arg2p20-arg3 <= 0 /\ -arg2+arg1p20 <= 0 /\ -2+arg3 > 0 /\ arg1p20 > 0 /\ 2-arg2+arg8 <= 0 /\ arg2p20-arg4 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
  53: f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg2'=arg2p21, arg3'=arg3p21, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p21, arg9'=arg9p21, (-1+arg3p21 > 0 /\ -arg3p21+arg3 >= 0 /\ -2-arg9+arg3 >= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -2+arg2-arg8 >= 0 /\ arg6-arg5 >= 0 /\ arg2p21 > 0 /\ arg2-arg2p21 >= 0 /\ -2+arg2-arg7 >= 0 /\ arg1 > 0), cost: 1
  54: f1787_0_createTree_NONNULL -> f1857_0_createTree_FieldAccess : arg2'=arg2p22, arg3'=arg3p22, arg4'=arg5, arg5'=arg5p22, arg6'=arg8, arg7'=arg9, arg8'=arg8p22, arg9'=arg9p22, (arg3p22-arg3 <= 0 /\ -1+arg3p22 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2+arg2p22 <= 0 /\ arg2p22 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  66: f1787_0_createTree_NONNULL -> f572_0_random_GT : arg1'=arg1p36, arg2'=arg5, arg3'=arg6, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ 2-arg2+arg8 <= 0 /\ arg6-arg5 >= 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  57: f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p25, arg2'=arg2p25, arg3'=-1+arg1, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (2-arg3+arg7 <= 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ arg1p25 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2p25 > 0), cost: 1
  58: f1857_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p26, arg2'=arg2p26, arg3'=-1+arg1, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (-2-arg2+arg1p26 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg2p26 <= 0 /\ -3+arg2p26 > 0 /\ -2-arg2+arg2p26 <= 0 /\ -1+arg2 > 0 /\ arg6-arg7 == 0 /\ -2-arg3+arg1p26 <= 0 /\ -3+arg1p26 > 0 /\ 2+arg6-arg2 <= 0), cost: 1
  59: f1910_0_createTree_LE -> f1787_0_createTree_NONNULL : arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg9'=arg9p27, (-arg3+arg3p27 <= 0 /\ arg2p27 > 0 /\ arg3 > 0 /\ 2-arg3+arg9p27 <= 0 /\ 1+arg4p27 > 0 /\ arg2 > 0 /\ arg2p27-arg2 <= 0 /\ 1-arg3+arg4p27 <= 0 /\ arg3p27 > 0 /\ -arg4 == 0 /\ 2-arg2+arg8 <= 0 /\ 2-arg2+arg7 <= 0), cost: 1
  60: f1910_0_createTree_LE -> f1706_0_createTree_LE : arg1'=arg1p28, arg2'=arg2p28, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (arg2 > 0 /\ -arg2+arg1p28 <= 0 /\ 2-arg3+arg2p28 <= 0 /\ -2+arg3 > 0 /\ arg1p28 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p28 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
  61: f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg2'=arg2p29, arg3'=arg3p29, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (arg6 > 0 /\ -1+arg3p29 > 0 /\ arg2 > 0 /\ 2-arg3+arg7p29 <= 0 /\ -1+arg3 > 0 /\ arg3p29-arg3 <= 0 /\ -arg2+arg2p29 <= 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ arg2p29 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  62: f1910_0_createTree_LE -> f1998_0_createTree_FieldAccess : arg2'=arg2p30, arg3'=arg3p30, arg4'=arg5, arg5'=arg5p30, arg6'=arg7, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg6 > 0 /\ -arg3+arg3p30 <= 0 /\ -arg2+arg2p30 <= 0 /\ arg2 > 0 /\ 2+arg7p30-arg3 <= 0 /\ -1+arg3 > 0 /\ arg2p30 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ -1+arg3p30 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  67: f1910_0_createTree_LE -> f572_0_random_GT : arg1'=arg1p37, arg2'=arg5, arg3'=arg6, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (arg6 > 0 /\ 1+arg5 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2-arg2+arg8 <= 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1 > 0), cost: 1
  63: f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p31, arg2'=arg2p31, arg3'=-1+arg1, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (2-arg3+arg7 <= 0 /\ arg2p31 > 0 /\ arg2 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg1p31 > 0), cost: 1
  64: f1998_0_createTree_FieldAccess -> f1706_0_createTree_LE : arg1'=arg1p32, arg2'=arg2p32, arg3'=-1+arg1, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (2+arg6-arg3 <= 0 /\ -3+arg1p32 > 0 /\ -2-arg3+arg1p32 <= 0 /\ -1+arg3 > 0 /\ -2+arg2p32-arg3 <= 0 /\ -2+arg2p32-arg2 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg1p32 <= 0 /\ arg6-arg7 == 0 /\ 2+arg6-arg2 <= 0 /\ -3+arg2p32 > 0), cost: 1
  42: f2411_0_count_InvokeMethod -> f2161_0_count_NONNULL : arg1'=arg1p43, arg2'=arg2p43, arg3'=arg3p43, arg4'=arg4p43, arg5'=arg5p43, arg6'=arg6p43, arg7'=arg7p43, arg8'=arg8p43, arg9'=arg9p43, (1+arg1 > 0 /\ 1+arg1p43 > 0 /\ arg1p43-arg1 <= 0), cost: 1
  43: __init -> f1_0_main_Load : arg1'=arg1p44, arg2'=arg2p44, arg3'=arg3p44, arg4'=arg4p44, arg5'=arg5p44, arg6'=arg6p44, arg7'=arg7p44, arg8'=arg8p44, arg9'=arg9p44, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	f2232_0_flatten_NONNULL -> f2232_0_flatten_NONNULL : arg1'=arg1p34, arg2'=arg2p34, arg3'=arg3p34, arg4'=arg4p34, arg5'=arg5p34, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (-2+arg1 > 0 /\ -2+arg1p34-arg1 <= 0 /\ -2+arg1p34 > 0), cost: 1
	New rule:
	f2232_0_flatten_NONNULL -> LoAT_sink : (-2+arg1 > 0 /\ 2-arg1p34+arg1 >= 0 /\ -2+arg1p34 > 0 /\ -arg1p34+arg1 <= 0), cost: NONTERM

		-2+arg1 > 0 [0]: eventual decrease yields (-2+arg1 > 0 /\ -2+arg1p34 > 0)
		
		-2+arg1 > 0 [1]: eventual increase yields (-2+arg1 > 0 /\ -arg1p34+arg1 <= 0)
		
		2-arg1p34+arg1 >= 0 [0]: monotonic increase yields 2-arg1p34+arg1 >= 0
		
		-2+arg1p34 > 0 [0]: monotonic increase yields -2+arg1p34 > 0
		
		Replacement map: {-2+arg1 > 0 -> (-2+arg1 > 0 /\ -arg1p34+arg1 <= 0), 2-arg1p34+arg1 >= 0 -> 2-arg1p34+arg1 >= 0, -2+arg1p34 > 0 -> -2+arg1p34 > 0}

Step with 68

	Trace

	43[T], 3[(arg2p4 > 0 /\ arg1-arg1p4 >= 0 /\ arg1 > 0 /\ arg1p4 > 0)], 5[(arg2 > 0 /\ -arg2+arg1p6 <= 0 /\ arg1p6 > 0 /\ arg1 > 0)], 32[(2+arg1p33-arg1 <= 0 /\ 1+arg1p33 > 0 /\ -1+arg1 > 0)], 68[(-2+arg1 > 0 /\ 2-arg1p34+arg1 >= 0 /\ -2+arg1p34 > 0 /\ -arg1p34+arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {32[T]}, {68[T]}]

Refute

	Counterexample

	[ arg1=1 arg2=0 arg3=0 arg4=0 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 43 [ arg1=1 arg2=5 arg3=0 arg4=0 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 3 [ arg1=5 arg2=0 arg3=0 arg4=0 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 5 [ arg1=3 arg2=0 arg3=0 arg4=0 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 32 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 arg5=arg5 arg6=arg6 arg7=arg7 arg8=arg8 arg9=arg9 ] 68
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
