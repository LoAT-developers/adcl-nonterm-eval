WORST_CASE(Omega(0),?)

Initial ITS
Start location: l5
   0: l0 -> l2 : y_6^0'=y_6^post0, k_7^0'=k_7^post0, x_5^0'=x_5^post0, Result_4^0'=Result_4^post0, w_8^0'=w_8^post0, (-w_8^post0+w_8^0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ -k_7^post0+k_7^0 == 0 /\ -1-x_5^0+x_5^post0 == 0 /\ -1-y_6^0+y_6^post0 == 0 /\ 2+x_5^0 <= 0), cost: 1
   4: l0 -> l3 : y_6^0'=y_6^post4, k_7^0'=k_7^post4, x_5^0'=x_5^post4, Result_4^0'=Result_4^post4, w_8^0'=w_8^post4, (0 == 0 /\ x_5^0-x_5^post4 == 0 /\ -w_8^post4+w_8^0 == 0 /\ k_7^0-k_7^post4 == 0 /\ y_6^0-y_6^post4 == 0 /\ -1-x_5^0 <= 0), cost: 1
   1: l2 -> l1 : y_6^0'=y_6^post1, k_7^0'=k_7^post1, x_5^0'=x_5^post1, Result_4^0'=Result_4^post1, w_8^0'=w_8^post1, (-Result_4^post1+Result_4^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ 1+y_6^0 <= 0 /\ -w_8^post1+w_8^0 == 0 /\ k_7^0-k_7^post1 == 0 /\ y_6^0-y_6^post1 == 0), cost: 1
   2: l2 -> l1 : y_6^0'=y_6^post2, k_7^0'=k_7^post2, x_5^0'=x_5^post2, Result_4^0'=Result_4^post2, w_8^0'=w_8^post2, (y_6^0-y_6^post2 == 0 /\ -k_7^post2+k_7^0 == 0 /\ -w_8^post2+w_8^0 == 0 /\ Result_4^0-Result_4^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ 1-y_6^0 <= 0), cost: 1
   3: l1 -> l0 : y_6^0'=y_6^post3, k_7^0'=k_7^post3, x_5^0'=x_5^post3, Result_4^0'=Result_4^post3, w_8^0'=w_8^post3, (y_6^0-y_6^post3 == 0 /\ -w_8^post3+w_8^0 == 0 /\ k_7^0-k_7^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -Result_4^post3+Result_4^0 == 0), cost: 1
   5: l4 -> l0 : y_6^0'=y_6^post5, k_7^0'=k_7^post5, x_5^0'=x_5^post5, Result_4^0'=Result_4^post5, w_8^0'=w_8^post5, (2-w_8^0 <= 0 /\ w_8^0-w_8^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ 2-k_7^0 <= 0 /\ -Result_4^post5+Result_4^0 == 0 /\ k_7^0-k_7^post5 == 0), cost: 1
   6: l4 -> l3 : y_6^0'=y_6^post6, k_7^0'=k_7^post6, x_5^0'=x_5^post6, Result_4^0'=Result_4^post6, w_8^0'=w_8^post6, (0 == 0 /\ -w_8^post6+w_8^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ y_6^0-y_6^post6 == 0 /\ -1+k_7^0 <= 0 /\ k_7^0-k_7^post6 == 0), cost: 1
   7: l5 -> l4 : y_6^0'=y_6^post7, k_7^0'=k_7^post7, x_5^0'=x_5^post7, Result_4^0'=Result_4^post7, w_8^0'=w_8^post7, (-x_5^post7+x_5^0 == 0 /\ w_8^0-w_8^post7 == 0 /\ Result_4^0-Result_4^post7 == 0 /\ k_7^0-k_7^post7 == 0 /\ y_6^0-y_6^post7 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l5
   0: l0 -> l2 : y_6^0'=y_6^post0, k_7^0'=k_7^post0, x_5^0'=x_5^post0, Result_4^0'=Result_4^post0, w_8^0'=w_8^post0, (-w_8^post0+w_8^0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ -k_7^post0+k_7^0 == 0 /\ -1-x_5^0+x_5^post0 == 0 /\ -1-y_6^0+y_6^post0 == 0 /\ 2+x_5^0 <= 0), cost: 1
   1: l2 -> l1 : y_6^0'=y_6^post1, k_7^0'=k_7^post1, x_5^0'=x_5^post1, Result_4^0'=Result_4^post1, w_8^0'=w_8^post1, (-Result_4^post1+Result_4^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ 1+y_6^0 <= 0 /\ -w_8^post1+w_8^0 == 0 /\ k_7^0-k_7^post1 == 0 /\ y_6^0-y_6^post1 == 0), cost: 1
   2: l2 -> l1 : y_6^0'=y_6^post2, k_7^0'=k_7^post2, x_5^0'=x_5^post2, Result_4^0'=Result_4^post2, w_8^0'=w_8^post2, (y_6^0-y_6^post2 == 0 /\ -k_7^post2+k_7^0 == 0 /\ -w_8^post2+w_8^0 == 0 /\ Result_4^0-Result_4^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ 1-y_6^0 <= 0), cost: 1
   3: l1 -> l0 : y_6^0'=y_6^post3, k_7^0'=k_7^post3, x_5^0'=x_5^post3, Result_4^0'=Result_4^post3, w_8^0'=w_8^post3, (y_6^0-y_6^post3 == 0 /\ -w_8^post3+w_8^0 == 0 /\ k_7^0-k_7^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -Result_4^post3+Result_4^0 == 0), cost: 1
   5: l4 -> l0 : y_6^0'=y_6^post5, k_7^0'=k_7^post5, x_5^0'=x_5^post5, Result_4^0'=Result_4^post5, w_8^0'=w_8^post5, (2-w_8^0 <= 0 /\ w_8^0-w_8^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ 2-k_7^0 <= 0 /\ -Result_4^post5+Result_4^0 == 0 /\ k_7^0-k_7^post5 == 0), cost: 1
   7: l5 -> l4 : y_6^0'=y_6^post7, k_7^0'=k_7^post7, x_5^0'=x_5^post7, Result_4^0'=Result_4^post7, w_8^0'=w_8^post7, (-x_5^post7+x_5^0 == 0 /\ w_8^0-w_8^post7 == 0 /\ Result_4^0-Result_4^post7 == 0 /\ k_7^0-k_7^post7 == 0 /\ y_6^0-y_6^post7 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : y_6^0'=y_6^post0, k_7^0'=k_7^post0, x_5^0'=x_5^post0, Result_4^0'=Result_4^post0, w_8^0'=w_8^post0, (-w_8^post0+w_8^0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ -k_7^post0+k_7^0 == 0 /\ -1-x_5^0+x_5^post0 == 0 /\ -1-y_6^0+y_6^post0 == 0 /\ 2+x_5^0 <= 0), cost: 1
New rule:
l0 -> l2 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, 2+x_5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l1 : y_6^0'=y_6^post1, k_7^0'=k_7^post1, x_5^0'=x_5^post1, Result_4^0'=Result_4^post1, w_8^0'=w_8^post1, (-Result_4^post1+Result_4^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ 1+y_6^0 <= 0 /\ -w_8^post1+w_8^0 == 0 /\ k_7^0-k_7^post1 == 0 /\ y_6^0-y_6^post1 == 0), cost: 1
New rule:
l2 -> l1 : 1+y_6^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l1 : y_6^0'=y_6^post2, k_7^0'=k_7^post2, x_5^0'=x_5^post2, Result_4^0'=Result_4^post2, w_8^0'=w_8^post2, (y_6^0-y_6^post2 == 0 /\ -k_7^post2+k_7^0 == 0 /\ -w_8^post2+w_8^0 == 0 /\ Result_4^0-Result_4^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ 1-y_6^0 <= 0), cost: 1
New rule:
l2 -> l1 : -1+y_6^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : y_6^0'=y_6^post3, k_7^0'=k_7^post3, x_5^0'=x_5^post3, Result_4^0'=Result_4^post3, w_8^0'=w_8^post3, (y_6^0-y_6^post3 == 0 /\ -w_8^post3+w_8^0 == 0 /\ k_7^0-k_7^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -Result_4^post3+Result_4^0 == 0), cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l0 : y_6^0'=y_6^post5, k_7^0'=k_7^post5, x_5^0'=x_5^post5, Result_4^0'=Result_4^post5, w_8^0'=w_8^post5, (2-w_8^0 <= 0 /\ w_8^0-w_8^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ 2-k_7^0 <= 0 /\ -Result_4^post5+Result_4^0 == 0 /\ k_7^0-k_7^post5 == 0), cost: 1
New rule:
l4 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : y_6^0'=y_6^post7, k_7^0'=k_7^post7, x_5^0'=x_5^post7, Result_4^0'=Result_4^post7, w_8^0'=w_8^post7, (-x_5^post7+x_5^0 == 0 /\ w_8^0-w_8^post7 == 0 /\ Result_4^0-Result_4^post7 == 0 /\ k_7^0-k_7^post7 == 0 /\ y_6^0-y_6^post7 == 0), cost: 1
New rule:
l5 -> l4 : TRUE, cost: 1

Simplified rules
Start location: l5
   8: l0 -> l2 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, 2+x_5^0 <= 0, cost: 1
   9: l2 -> l1 : 1+y_6^0 <= 0, cost: 1
  10: l2 -> l1 : -1+y_6^0 >= 0, cost: 1
  11: l1 -> l0 : TRUE, cost: 1
  12: l4 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 1
  13: l5 -> l4 : TRUE, cost: 1


Eliminating location l4 by chaining:

Applied chaining
First rule:
l5 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 1
New rule:
l5 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 2

Applied deletion
Removed the following rules: 12 13

Eliminated locations on linear paths
Start location: l5
   8: l0 -> l2 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, 2+x_5^0 <= 0, cost: 1
   9: l2 -> l1 : 1+y_6^0 <= 0, cost: 1
  10: l2 -> l1 : -1+y_6^0 >= 0, cost: 1
  11: l1 -> l0 : TRUE, cost: 1
  14: l5 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 2


Eliminating location l2 by chaining:

Applied chaining
First rule:
l0 -> l2 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, 2+x_5^0 <= 0, cost: 1
Second rule:
l2 -> l1 : 1+y_6^0 <= 0, cost: 1
New rule:
l0 -> l1 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (2+y_6^0 <= 0 /\ 2+x_5^0 <= 0), cost: 2

Applied chaining
First rule:
l0 -> l2 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, 2+x_5^0 <= 0, cost: 1
Second rule:
l2 -> l1 : -1+y_6^0 >= 0, cost: 1
New rule:
l0 -> l1 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (y_6^0 >= 0 /\ 2+x_5^0 <= 0), cost: 2

Applied deletion
Removed the following rules: 8 9 10

Eliminated locations on tree-shaped paths
Start location: l5
  15: l0 -> l1 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (2+y_6^0 <= 0 /\ 2+x_5^0 <= 0), cost: 2
  16: l0 -> l1 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (y_6^0 >= 0 /\ 2+x_5^0 <= 0), cost: 2
  11: l1 -> l0 : TRUE, cost: 1
  14: l5 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 2


Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (2+y_6^0 <= 0 /\ 2+x_5^0 <= 0), cost: 2
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (2+y_6^0 <= 0 /\ 2+x_5^0 <= 0), cost: 3

Applied chaining
First rule:
l0 -> l1 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (y_6^0 >= 0 /\ 2+x_5^0 <= 0), cost: 2
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (y_6^0 >= 0 /\ 2+x_5^0 <= 0), cost: 3

Applied deletion
Removed the following rules: 11 15 16

Eliminated locations on tree-shaped paths
Start location: l5
  17: l0 -> l0 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (2+y_6^0 <= 0 /\ 2+x_5^0 <= 0), cost: 3
  18: l0 -> l0 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (y_6^0 >= 0 /\ 2+x_5^0 <= 0), cost: 3
  14: l5 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 2


Applied acceleration
Original rule:
l0 -> l0 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (2+y_6^0 <= 0 /\ 2+x_5^0 <= 0), cost: 3
New rule:
l0 -> l0 : y_6^0'=y_6^0+n, x_5^0'=n+x_5^0, (n >= 0 /\ -1-n-x_5^0 >= 0 /\ -1-y_6^0-n >= 0), cost: 3*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_eoCbCl.txt

Applied instantiation
Original rule:
l0 -> l0 : y_6^0'=y_6^0+n, x_5^0'=n+x_5^0, (n >= 0 /\ -1-n-x_5^0 >= 0 /\ -1-y_6^0-n >= 0), cost: 3*n
New rule:
l0 -> l0 : y_6^0'=-1, x_5^0'=-1-y_6^0+x_5^0, (0 >= 0 /\ -1-y_6^0 >= 0 /\ y_6^0-x_5^0 >= 0), cost: -3-3*y_6^0

Applied instantiation
Original rule:
l0 -> l0 : y_6^0'=y_6^0+n, x_5^0'=n+x_5^0, (n >= 0 /\ -1-n-x_5^0 >= 0 /\ -1-y_6^0-n >= 0), cost: 3*n
New rule:
l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (0 >= 0 /\ -y_6^0+x_5^0 >= 0 /\ -1-x_5^0 >= 0), cost: -3-3*x_5^0

Applied acceleration
Original rule:
l0 -> l0 : y_6^0'=1+y_6^0, x_5^0'=1+x_5^0, (y_6^0 >= 0 /\ 2+x_5^0 <= 0), cost: 3
New rule:
l0 -> l0 : y_6^0'=y_6^0+n0, x_5^0'=n0+x_5^0, (y_6^0 >= 0 /\ n0 >= 0 /\ -1-n0-x_5^0 >= 0), cost: 3*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_KLGilA.txt

Applied instantiation
Original rule:
l0 -> l0 : y_6^0'=y_6^0+n0, x_5^0'=n0+x_5^0, (y_6^0 >= 0 /\ n0 >= 0 /\ -1-n0-x_5^0 >= 0), cost: 3*n0
New rule:
l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (0 >= 0 /\ y_6^0 >= 0 /\ -1-x_5^0 >= 0), cost: -3-3*x_5^0

Applied simplification
Original rule:
l0 -> l0 : y_6^0'=-1, x_5^0'=-1-y_6^0+x_5^0, (0 >= 0 /\ -1-y_6^0 >= 0 /\ y_6^0-x_5^0 >= 0), cost: -3-3*y_6^0
New rule:
l0 -> l0 : y_6^0'=-1, x_5^0'=-1-y_6^0+x_5^0, (1+y_6^0 <= 0 /\ y_6^0-x_5^0 >= 0), cost: -3-3*y_6^0

Applied simplification
Original rule:
l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (0 >= 0 /\ -y_6^0+x_5^0 >= 0 /\ -1-x_5^0 >= 0), cost: -3-3*x_5^0
New rule:
l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (-y_6^0+x_5^0 >= 0 /\ 1+x_5^0 <= 0), cost: -3-3*x_5^0

Applied simplification
Original rule:
l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (0 >= 0 /\ y_6^0 >= 0 /\ -1-x_5^0 >= 0), cost: -3-3*x_5^0
New rule:
l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (y_6^0 >= 0 /\ 1+x_5^0 <= 0), cost: -3-3*x_5^0

Applied deletion
Removed the following rules: 17 18

Accelerated simple loops
Start location: l5
  22: l0 -> l0 : y_6^0'=-1, x_5^0'=-1-y_6^0+x_5^0, (1+y_6^0 <= 0 /\ y_6^0-x_5^0 >= 0), cost: -3-3*y_6^0
  23: l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (-y_6^0+x_5^0 >= 0 /\ 1+x_5^0 <= 0), cost: -3-3*x_5^0
  24: l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (y_6^0 >= 0 /\ 1+x_5^0 <= 0), cost: -3-3*x_5^0
  14: l5 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 2


Applied chaining
First rule:
l5 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 2
Second rule:
l0 -> l0 : y_6^0'=-1, x_5^0'=-1-y_6^0+x_5^0, (1+y_6^0 <= 0 /\ y_6^0-x_5^0 >= 0), cost: -3-3*y_6^0
New rule:
l5 -> l0 : y_6^0'=-1, x_5^0'=-1-y_6^0+x_5^0, (1+y_6^0 <= 0 /\ -2+k_7^0 >= 0 /\ y_6^0-x_5^0 >= 0 /\ -2+w_8^0 >= 0), cost: -1-3*y_6^0

Applied chaining
First rule:
l5 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 2
Second rule:
l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (-y_6^0+x_5^0 >= 0 /\ 1+x_5^0 <= 0), cost: -3-3*x_5^0
New rule:
l5 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (-y_6^0+x_5^0 >= 0 /\ -2+k_7^0 >= 0 /\ -2+w_8^0 >= 0 /\ 1+x_5^0 <= 0), cost: -1-3*x_5^0

Applied chaining
First rule:
l5 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 2
Second rule:
l0 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (y_6^0 >= 0 /\ 1+x_5^0 <= 0), cost: -3-3*x_5^0
New rule:
l5 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (y_6^0 >= 0 /\ -2+k_7^0 >= 0 /\ -2+w_8^0 >= 0 /\ 1+x_5^0 <= 0), cost: -1-3*x_5^0

Applied deletion
Removed the following rules: 22 23 24

Chained accelerated rules with incoming rules
Start location: l5
  14: l5 -> l0 : (-2+k_7^0 >= 0 /\ -2+w_8^0 >= 0), cost: 2
  25: l5 -> l0 : y_6^0'=-1, x_5^0'=-1-y_6^0+x_5^0, (1+y_6^0 <= 0 /\ -2+k_7^0 >= 0 /\ y_6^0-x_5^0 >= 0 /\ -2+w_8^0 >= 0), cost: -1-3*y_6^0
  26: l5 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (-y_6^0+x_5^0 >= 0 /\ -2+k_7^0 >= 0 /\ -2+w_8^0 >= 0 /\ 1+x_5^0 <= 0), cost: -1-3*x_5^0
  27: l5 -> l0 : y_6^0'=-1+y_6^0-x_5^0, x_5^0'=-1, (y_6^0 >= 0 /\ -2+k_7^0 >= 0 /\ -2+w_8^0 >= 0 /\ 1+x_5^0 <= 0), cost: -1-3*x_5^0


Removed unreachable locations and irrelevant leafs
Start location: l5
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

