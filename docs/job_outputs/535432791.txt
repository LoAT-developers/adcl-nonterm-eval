NO

Initial ITS
Start location: l9
   0: l0 -> l1 : tmp_6^0'=tmp_6^post0, Result_4^0'=Result_4^post0, x_5^0'=x_5^post0, (x_5^0-x_5^post0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ tmp_6^0-tmp_6^post0 == 0), cost: 1
   1: l1 -> l2 : tmp_6^0'=tmp_6^post1, Result_4^0'=Result_4^post1, x_5^0'=x_5^post1, (0 == 0 /\ -tmp_6^post1 <= 0 /\ tmp_6^post1 <= 0 /\ x_5^0-x_5^post1 == 0 /\ x_5^0 <= 0), cost: 1
   2: l1 -> l3 : tmp_6^0'=tmp_6^post2, Result_4^0'=Result_4^post2, x_5^0'=x_5^post2, (0 == 0 /\ x_5^0-x_5^post2 == 0 /\ tmp_6^post2 <= 0 /\ 1-x_5^0 <= 0 /\ -tmp_6^post2 <= 0 /\ -Result_4^post2+Result_4^0 == 0), cost: 1
   4: l1 -> l4 : tmp_6^0'=tmp_6^post4, Result_4^0'=Result_4^post4, x_5^0'=x_5^post4, (0 == 0 /\ -Result_4^post4+Result_4^0 == 0 /\ -x_5^post4+x_5^0 == 0), cost: 1
   8: l1 -> l7 : tmp_6^0'=tmp_6^post8, Result_4^0'=Result_4^post8, x_5^0'=x_5^post8, (0 == 0 /\ Result_4^0-Result_4^post8 == 0 /\ -x_5^post8+x_5^0 == 0), cost: 1
   3: l3 -> l1 : tmp_6^0'=tmp_6^post3, Result_4^0'=Result_4^post3, x_5^0'=x_5^post3, (-Result_4^post3+Result_4^0 == 0 /\ -tmp_6^post3+tmp_6^0 == 0 /\ -x_5^post3+x_5^0 == 0), cost: 1
   5: l4 -> l5 : tmp_6^0'=tmp_6^post5, Result_4^0'=Result_4^post5, x_5^0'=x_5^post5, (-Result_4^post5+Result_4^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ 1+tmp_6^0 <= 0 /\ -tmp_6^post5+tmp_6^0 == 0), cost: 1
   6: l4 -> l5 : tmp_6^0'=tmp_6^post6, Result_4^0'=Result_4^post6, x_5^0'=x_5^post6, (-Result_4^post6+Result_4^0 == 0 /\ tmp_6^0-tmp_6^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ 1-tmp_6^0 <= 0), cost: 1
   7: l5 -> l2 : tmp_6^0'=tmp_6^post7, Result_4^0'=Result_4^post7, x_5^0'=x_5^post7, (0 == 0 /\ x_5^post7 <= 0 /\ 1+x_5^post7-x_5^0 == 0 /\ tmp_6^0-tmp_6^post7 == 0), cost: 1
   9: l7 -> l8 : tmp_6^0'=tmp_6^post9, Result_4^0'=Result_4^post9, x_5^0'=x_5^post9, (tmp_6^0-tmp_6^post9 == 0 /\ 1+tmp_6^0 <= 0 /\ Result_4^0-Result_4^post9 == 0 /\ -x_5^post9+x_5^0 == 0), cost: 1
  10: l7 -> l8 : tmp_6^0'=tmp_6^post10, Result_4^0'=Result_4^post10, x_5^0'=x_5^post10, (Result_4^0-Result_4^post10 == 0 /\ tmp_6^0-tmp_6^post10 == 0 /\ -x_5^post10+x_5^0 == 0 /\ 1-tmp_6^0 <= 0), cost: 1
  11: l8 -> l6 : tmp_6^0'=tmp_6^post11, Result_4^0'=Result_4^post11, x_5^0'=x_5^post11, (tmp_6^0-tmp_6^post11 == 0 /\ Result_4^0-Result_4^post11 == 0 /\ 1-x_5^post11 <= 0 /\ 1+x_5^post11-x_5^0 == 0), cost: 1
  12: l6 -> l1 : tmp_6^0'=tmp_6^post12, Result_4^0'=Result_4^post12, x_5^0'=x_5^post12, (Result_4^0-Result_4^post12 == 0 /\ -x_5^post12+x_5^0 == 0 /\ tmp_6^0-tmp_6^post12 == 0), cost: 1
  13: l9 -> l0 : tmp_6^0'=tmp_6^post13, Result_4^0'=Result_4^post13, x_5^0'=x_5^post13, (-x_5^post13+x_5^0 == 0 /\ Result_4^0-Result_4^post13 == 0 /\ tmp_6^0-tmp_6^post13 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l9
   0: l0 -> l1 : tmp_6^0'=tmp_6^post0, Result_4^0'=Result_4^post0, x_5^0'=x_5^post0, (x_5^0-x_5^post0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ tmp_6^0-tmp_6^post0 == 0), cost: 1
   2: l1 -> l3 : tmp_6^0'=tmp_6^post2, Result_4^0'=Result_4^post2, x_5^0'=x_5^post2, (0 == 0 /\ x_5^0-x_5^post2 == 0 /\ tmp_6^post2 <= 0 /\ 1-x_5^0 <= 0 /\ -tmp_6^post2 <= 0 /\ -Result_4^post2+Result_4^0 == 0), cost: 1
   8: l1 -> l7 : tmp_6^0'=tmp_6^post8, Result_4^0'=Result_4^post8, x_5^0'=x_5^post8, (0 == 0 /\ Result_4^0-Result_4^post8 == 0 /\ -x_5^post8+x_5^0 == 0), cost: 1
   3: l3 -> l1 : tmp_6^0'=tmp_6^post3, Result_4^0'=Result_4^post3, x_5^0'=x_5^post3, (-Result_4^post3+Result_4^0 == 0 /\ -tmp_6^post3+tmp_6^0 == 0 /\ -x_5^post3+x_5^0 == 0), cost: 1
   9: l7 -> l8 : tmp_6^0'=tmp_6^post9, Result_4^0'=Result_4^post9, x_5^0'=x_5^post9, (tmp_6^0-tmp_6^post9 == 0 /\ 1+tmp_6^0 <= 0 /\ Result_4^0-Result_4^post9 == 0 /\ -x_5^post9+x_5^0 == 0), cost: 1
  10: l7 -> l8 : tmp_6^0'=tmp_6^post10, Result_4^0'=Result_4^post10, x_5^0'=x_5^post10, (Result_4^0-Result_4^post10 == 0 /\ tmp_6^0-tmp_6^post10 == 0 /\ -x_5^post10+x_5^0 == 0 /\ 1-tmp_6^0 <= 0), cost: 1
  11: l8 -> l6 : tmp_6^0'=tmp_6^post11, Result_4^0'=Result_4^post11, x_5^0'=x_5^post11, (tmp_6^0-tmp_6^post11 == 0 /\ Result_4^0-Result_4^post11 == 0 /\ 1-x_5^post11 <= 0 /\ 1+x_5^post11-x_5^0 == 0), cost: 1
  12: l6 -> l1 : tmp_6^0'=tmp_6^post12, Result_4^0'=Result_4^post12, x_5^0'=x_5^post12, (Result_4^0-Result_4^post12 == 0 /\ -x_5^post12+x_5^0 == 0 /\ tmp_6^0-tmp_6^post12 == 0), cost: 1
  13: l9 -> l0 : tmp_6^0'=tmp_6^post13, Result_4^0'=Result_4^post13, x_5^0'=x_5^post13, (-x_5^post13+x_5^0 == 0 /\ Result_4^0-Result_4^post13 == 0 /\ tmp_6^0-tmp_6^post13 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : tmp_6^0'=tmp_6^post0, Result_4^0'=Result_4^post0, x_5^0'=x_5^post0, (x_5^0-x_5^post0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ tmp_6^0-tmp_6^post0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : tmp_6^0'=tmp_6^post2, Result_4^0'=Result_4^post2, x_5^0'=x_5^post2, (0 == 0 /\ x_5^0-x_5^post2 == 0 /\ tmp_6^post2 <= 0 /\ 1-x_5^0 <= 0 /\ -tmp_6^post2 <= 0 /\ -Result_4^post2+Result_4^0 == 0), cost: 1
New rule:
l1 -> l3 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : tmp_6^0'=tmp_6^post3, Result_4^0'=Result_4^post3, x_5^0'=x_5^post3, (-Result_4^post3+Result_4^0 == 0 /\ -tmp_6^post3+tmp_6^0 == 0 /\ -x_5^post3+x_5^0 == 0), cost: 1
New rule:
l3 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l7 : tmp_6^0'=tmp_6^post8, Result_4^0'=Result_4^post8, x_5^0'=x_5^post8, (0 == 0 /\ Result_4^0-Result_4^post8 == 0 /\ -x_5^post8+x_5^0 == 0), cost: 1
New rule:
l1 -> l7 : tmp_6^0'=tmp_6^post8, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l8 : tmp_6^0'=tmp_6^post9, Result_4^0'=Result_4^post9, x_5^0'=x_5^post9, (tmp_6^0-tmp_6^post9 == 0 /\ 1+tmp_6^0 <= 0 /\ Result_4^0-Result_4^post9 == 0 /\ -x_5^post9+x_5^0 == 0), cost: 1
New rule:
l7 -> l8 : 1+tmp_6^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l8 : tmp_6^0'=tmp_6^post10, Result_4^0'=Result_4^post10, x_5^0'=x_5^post10, (Result_4^0-Result_4^post10 == 0 /\ tmp_6^0-tmp_6^post10 == 0 /\ -x_5^post10+x_5^0 == 0 /\ 1-tmp_6^0 <= 0), cost: 1
New rule:
l7 -> l8 : -1+tmp_6^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l8 -> l6 : tmp_6^0'=tmp_6^post11, Result_4^0'=Result_4^post11, x_5^0'=x_5^post11, (tmp_6^0-tmp_6^post11 == 0 /\ Result_4^0-Result_4^post11 == 0 /\ 1-x_5^post11 <= 0 /\ 1+x_5^post11-x_5^0 == 0), cost: 1
New rule:
l8 -> l6 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l1 : tmp_6^0'=tmp_6^post12, Result_4^0'=Result_4^post12, x_5^0'=x_5^post12, (Result_4^0-Result_4^post12 == 0 /\ -x_5^post12+x_5^0 == 0 /\ tmp_6^0-tmp_6^post12 == 0), cost: 1
New rule:
l6 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l0 : tmp_6^0'=tmp_6^post13, Result_4^0'=Result_4^post13, x_5^0'=x_5^post13, (-x_5^post13+x_5^0 == 0 /\ Result_4^0-Result_4^post13 == 0 /\ tmp_6^0-tmp_6^post13 == 0), cost: 1
New rule:
l9 -> l0 : TRUE, cost: 1

Simplified rules
Start location: l9
  14: l0 -> l1 : TRUE, cost: 1
  15: l1 -> l3 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 1
  17: l1 -> l7 : tmp_6^0'=tmp_6^post8, 0 == 0, cost: 1
  16: l3 -> l1 : TRUE, cost: 1
  18: l7 -> l8 : 1+tmp_6^0 <= 0, cost: 1
  19: l7 -> l8 : -1+tmp_6^0 >= 0, cost: 1
  20: l8 -> l6 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 1
  21: l6 -> l1 : TRUE, cost: 1
  22: l9 -> l0 : TRUE, cost: 1


Eliminating location l0 by chaining:

Applied chaining
First rule:
l9 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l9 -> l1 : TRUE, cost: 2

Applied deletion
Removed the following rules: 14 22

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 1
Second rule:
l3 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 15 16

Eliminating location l6 by chaining:

Applied chaining
First rule:
l8 -> l6 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 1
Second rule:
l6 -> l1 : TRUE, cost: 1
New rule:
l8 -> l1 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 20 21

Eliminated locations on linear paths
Start location: l9
  17: l1 -> l7 : tmp_6^0'=tmp_6^post8, 0 == 0, cost: 1
  24: l1 -> l1 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 2
  18: l7 -> l8 : 1+tmp_6^0 <= 0, cost: 1
  19: l7 -> l8 : -1+tmp_6^0 >= 0, cost: 1
  25: l8 -> l1 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 2
  23: l9 -> l1 : TRUE, cost: 2


Applied nonterm
Original rule:
l1 -> l1 : tmp_6^0'=0, -1+x_5^0 >= 0, cost: 2
New rule:
l1 -> [10] : (-1+n >= 0 /\ -1+x_5^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_INkHab.txt

Applied deletion
Removed the following rules: 24

Accelerated simple loops
Start location: l9
  17: l1 -> l7 : tmp_6^0'=tmp_6^post8, 0 == 0, cost: 1
  26: l1 -> [10] : (-1+n >= 0 /\ -1+x_5^0 >= 0), cost: NONTERM
  18: l7 -> l8 : 1+tmp_6^0 <= 0, cost: 1
  19: l7 -> l8 : -1+tmp_6^0 >= 0, cost: 1
  25: l8 -> l1 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 2
  23: l9 -> l1 : TRUE, cost: 2


Applied chaining
First rule:
l9 -> l1 : TRUE, cost: 2
Second rule:
l1 -> [10] : (-1+n >= 0 /\ -1+x_5^0 >= 0), cost: NONTERM
New rule:
l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l8 -> l1 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 2
Second rule:
l1 -> [10] : (-1+n >= 0 /\ -1+x_5^0 >= 0), cost: NONTERM
New rule:
l8 -> [10] : -2+x_5^0 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 26

Chained accelerated rules with incoming rules
Start location: l9
  17: l1 -> l7 : tmp_6^0'=tmp_6^post8, 0 == 0, cost: 1
  18: l7 -> l8 : 1+tmp_6^0 <= 0, cost: 1
  19: l7 -> l8 : -1+tmp_6^0 >= 0, cost: 1
  25: l8 -> l1 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 2
  28: l8 -> [10] : -2+x_5^0 >= 0, cost: NONTERM
  23: l9 -> l1 : TRUE, cost: 2
  27: l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM


Eliminating location l7 by chaining:

Applied chaining
First rule:
l1 -> l7 : tmp_6^0'=tmp_6^post8, 0 == 0, cost: 1
Second rule:
l7 -> l8 : 1+tmp_6^0 <= 0, cost: 1
New rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, (0 == 0 /\ 1+tmp_6^post8 <= 0), cost: 2

Applied simplification
Original rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, (0 == 0 /\ 1+tmp_6^post8 <= 0), cost: 2
New rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, 1+tmp_6^post8 <= 0, cost: 2

Applied chaining
First rule:
l1 -> l7 : tmp_6^0'=tmp_6^post8, 0 == 0, cost: 1
Second rule:
l7 -> l8 : -1+tmp_6^0 >= 0, cost: 1
New rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, (0 == 0 /\ -1+tmp_6^post8 >= 0), cost: 2

Applied simplification
Original rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, (0 == 0 /\ -1+tmp_6^post8 >= 0), cost: 2
New rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, -1+tmp_6^post8 >= 0, cost: 2

Applied deletion
Removed the following rules: 17 18 19

Eliminated locations on tree-shaped paths
Start location: l9
  29: l1 -> l8 : tmp_6^0'=tmp_6^post8, 1+tmp_6^post8 <= 0, cost: 2
  30: l1 -> l8 : tmp_6^0'=tmp_6^post8, -1+tmp_6^post8 >= 0, cost: 2
  25: l8 -> l1 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 2
  28: l8 -> [10] : -2+x_5^0 >= 0, cost: NONTERM
  23: l9 -> l1 : TRUE, cost: 2
  27: l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM


Eliminating location l8 by chaining:

Applied chaining
First rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, 1+tmp_6^post8 <= 0, cost: 2
Second rule:
l8 -> l1 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 2
New rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-1+x_5^0, (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: 4

Applied chaining
First rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, 1+tmp_6^post8 <= 0, cost: 2
Second rule:
l8 -> [10] : -2+x_5^0 >= 0, cost: NONTERM
New rule:
l1 -> [10] : (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, -1+tmp_6^post8 >= 0, cost: 2
Second rule:
l8 -> l1 : x_5^0'=-1+x_5^0, -2+x_5^0 >= 0, cost: 2
New rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-1+x_5^0, (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: 4

Applied chaining
First rule:
l1 -> l8 : tmp_6^0'=tmp_6^post8, -1+tmp_6^post8 >= 0, cost: 2
Second rule:
l8 -> [10] : -2+x_5^0 >= 0, cost: NONTERM
New rule:
l1 -> [10] : (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 25 28 29 30

Eliminated locations on tree-shaped paths
Start location: l9
  31: l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-1+x_5^0, (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: 4
  32: l1 -> [10] : (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: NONTERM
  33: l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-1+x_5^0, (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: 4
  34: l1 -> [10] : (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: NONTERM
  23: l9 -> l1 : TRUE, cost: 2
  27: l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM


Applied acceleration
Original rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-1+x_5^0, (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: 4
New rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-n0+x_5^0, (-1-tmp_6^post8 >= 0 /\ -1+n0 >= 0 /\ -1-n0+x_5^0 >= 0), cost: 4*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cdeobp.txt

Applied instantiation
Original rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-n0+x_5^0, (-1-tmp_6^post8 >= 0 /\ -1+n0 >= 0 /\ -1-n0+x_5^0 >= 0), cost: 4*n0
New rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (0 >= 0 /\ -1-tmp_6^post8 >= 0 /\ -2+x_5^0 >= 0), cost: -4+4*x_5^0

Applied acceleration
Original rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-1+x_5^0, (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: 4
New rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-n1+x_5^0, (-1+tmp_6^post8 >= 0 /\ -1+n1 >= 0 /\ -1-n1+x_5^0 >= 0), cost: 4*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JoMEpP.txt

Applied instantiation
Original rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=-n1+x_5^0, (-1+tmp_6^post8 >= 0 /\ -1+n1 >= 0 /\ -1-n1+x_5^0 >= 0), cost: 4*n1
New rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (0 >= 0 /\ -2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -4+4*x_5^0

Applied simplification
Original rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (0 >= 0 /\ -1-tmp_6^post8 >= 0 /\ -2+x_5^0 >= 0), cost: -4+4*x_5^0
New rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: -4+4*x_5^0

Applied simplification
Original rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (0 >= 0 /\ -2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -4+4*x_5^0
New rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -4+4*x_5^0

Applied deletion
Removed the following rules: 31 33

Accelerated simple loops
Start location: l9
  32: l1 -> [10] : (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: NONTERM
  34: l1 -> [10] : (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: NONTERM
  37: l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: -4+4*x_5^0
  38: l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -4+4*x_5^0
  23: l9 -> l1 : TRUE, cost: 2
  27: l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM


Applied chaining
First rule:
l9 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: -4+4*x_5^0
New rule:
l9 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: -2+4*x_5^0

Applied chaining
First rule:
l9 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -4+4*x_5^0
New rule:
l9 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -2+4*x_5^0

Applied deletion
Removed the following rules: 37 38

Chained accelerated rules with incoming rules
Start location: l9
  32: l1 -> [10] : (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: NONTERM
  34: l1 -> [10] : (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: NONTERM
  23: l9 -> l1 : TRUE, cost: 2
  27: l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM
  39: l9 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: -2+4*x_5^0
  40: l9 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -2+4*x_5^0


Eliminating location l1 by chaining:

Applied chaining
First rule:
l9 -> l1 : TRUE, cost: 2
Second rule:
l1 -> [10] : (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: NONTERM
New rule:
l9 -> [10] : (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l9 -> l1 : TRUE, cost: 2
Second rule:
l1 -> [10] : (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: NONTERM
New rule:
l9 -> [10] : (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: NONTERM

Applied partial deletion
Original rule:
l9 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: -2+4*x_5^0
New rule:
l9 -> [12] : (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: -2+4*x_5^0

Applied partial deletion
Original rule:
l9 -> l1 : tmp_6^0'=tmp_6^post8, x_5^0'=1, (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -2+4*x_5^0
New rule:
l9 -> [12] : (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -2+4*x_5^0

Applied deletion
Removed the following rules: 23 32 34 39 40

Eliminated locations on tree-shaped paths
Start location: l9
  27: l9 -> [10] : -1+x_5^0 >= 0, cost: NONTERM
  41: l9 -> [10] : (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: NONTERM
  42: l9 -> [10] : (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: NONTERM
  43: l9 -> [12] : (1+tmp_6^post8 <= 0 /\ -2+x_5^0 >= 0), cost: -2+4*x_5^0
  44: l9 -> [12] : (-2+x_5^0 >= 0 /\ -1+tmp_6^post8 >= 0), cost: -2+4*x_5^0


Computing asymptotic complexity
Proved nontermination of rule 27 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  -1+x_5^0 >= 0
