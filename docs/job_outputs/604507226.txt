unknown

Initial ITS

Start location: l6
Program variables: b_7^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l2 : b_7^0'=b_7^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (1+x_5^0-y_6^0 <= 0 /\ -b_7^post1+b_7^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ result_4^0-result_4^post1 == 0), cost: 1
   4: l0 -> l4 : b_7^0'=b_7^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ -x_5^post5+x_5^0 == 0 /\ -b_7^post5+b_7^0 == 0), cost: 1
   1: l2 -> l3 : b_7^0'=b_7^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (1+b_7^0 <= 0 /\ -y_6^post2+y_6^0 == 0 /\ -b_7^post2+b_7^0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -x_5^post2+x_5^0 == 0), cost: 1
   2: l2 -> l3 : b_7^0'=b_7^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-y_6^post3+y_6^0 == 0 /\ -b_7^post3+b_7^0 == 0 /\ 1-b_7^0 <= 0 /\ -x_5^post3+x_5^0 == 0 /\ result_4^0-result_4^post3 == 0), cost: 1
   3: l3 -> l1 : b_7^0'=b_7^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (x_5^0-x_5^post4 == 0 /\ b_7^post4 == 0 /\ 1+y_6^post4-y_6^0 == 0 /\ result_4^0-result_4^post4 == 0), cost: 1
   6: l1 -> l0 : b_7^0'=b_7^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (-result_4^post7+result_4^0 == 0 /\ -1+x_5^post7-x_5^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -1+b_7^post7 == 0 /\ -b_7^0 <= 0 /\ b_7^0 <= 0 /\ -y_6^post7+y_6^0 == 0), cost: 1
   7: l1 -> l4 : b_7^0'=b_7^post8, result_4^0'=result_4^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ -b_7^post8+b_7^0 == 0 /\ x_5^0-x_5^post8 == 0 /\ -y_6^post8+y_6^0 == 0), cost: 1
   5: l5 -> l1 : b_7^0'=b_7^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (-x_5^post6+x_5^0 == 0 /\ b_7^post6 == 0 /\ result_4^0-result_4^post6 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
   8: l6 -> l5 : b_7^0'=b_7^post9, result_4^0'=result_4^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (result_4^0-result_4^post9 == 0 /\ x_5^0-x_5^post9 == 0 /\ -b_7^post9+b_7^0 == 0 /\ -y_6^post9+y_6^0 == 0), cost: 1

Chained Linear Paths

Start location: l6
Program variables: b_7^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l2 : b_7^0'=b_7^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (1+x_5^0-y_6^0 <= 0 /\ -b_7^post1+b_7^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ result_4^0-result_4^post1 == 0), cost: 1
   4: l0 -> l4 : b_7^0'=b_7^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ -x_5^post5+x_5^0 == 0 /\ -b_7^post5+b_7^0 == 0), cost: 1
   1: l2 -> l3 : b_7^0'=b_7^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (1+b_7^0 <= 0 /\ -y_6^post2+y_6^0 == 0 /\ -b_7^post2+b_7^0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -x_5^post2+x_5^0 == 0), cost: 1
   2: l2 -> l3 : b_7^0'=b_7^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-y_6^post3+y_6^0 == 0 /\ -b_7^post3+b_7^0 == 0 /\ 1-b_7^0 <= 0 /\ -x_5^post3+x_5^0 == 0 /\ result_4^0-result_4^post3 == 0), cost: 1
   3: l3 -> l1 : b_7^0'=b_7^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (x_5^0-x_5^post4 == 0 /\ b_7^post4 == 0 /\ 1+y_6^post4-y_6^0 == 0 /\ result_4^0-result_4^post4 == 0), cost: 1
   6: l1 -> l0 : b_7^0'=b_7^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (-result_4^post7+result_4^0 == 0 /\ -1+x_5^post7-x_5^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -1+b_7^post7 == 0 /\ -b_7^0 <= 0 /\ b_7^0 <= 0 /\ -y_6^post7+y_6^0 == 0), cost: 1
   7: l1 -> l4 : b_7^0'=b_7^post8, result_4^0'=result_4^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ -b_7^post8+b_7^0 == 0 /\ x_5^0-x_5^post8 == 0 /\ -y_6^post8+y_6^0 == 0), cost: 1
   9: l6 -> l1 : b_7^0'=b_7^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (result_4^0-result_4^post9 == 0 /\ result_4^post9-result_4^post6 == 0 /\ x_5^0-x_5^post9 == 0 /\ y_6^post9-y_6^post6 == 0 /\ b_7^post6 == 0 /\ -b_7^post9+b_7^0 == 0 /\ -y_6^post9+y_6^0 == 0 /\ -x_5^post6+x_5^post9 == 0), cost: 1

	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l6 -> l5 : b_7^0'=b_7^post9, result_4^0'=result_4^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (result_4^0-result_4^post9 == 0 /\ x_5^0-x_5^post9 == 0 /\ -b_7^post9+b_7^0 == 0 /\ -y_6^post9+y_6^0 == 0), cost: 1
	Second rule:
	l5 -> l1 : b_7^0'=b_7^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (-x_5^post6+x_5^0 == 0 /\ b_7^post6 == 0 /\ result_4^0-result_4^post6 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
	New rule:
	l6 -> l1 : b_7^0'=b_7^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (result_4^0-result_4^post9 == 0 /\ result_4^post9-result_4^post6 == 0 /\ x_5^0-x_5^post9 == 0 /\ y_6^post9-y_6^post6 == 0 /\ b_7^post6 == 0 /\ -b_7^post9+b_7^0 == 0 /\ -y_6^post9+y_6^0 == 0 /\ -x_5^post6+x_5^post9 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 8

Simplified Transitions

Start location: l6
Program variables: b_7^0 result_4^0 x_5^0 y_6^0
  10: l0 -> l2 : 1+x_5^0-y_6^0 <= 0, cost: 1
  14: l0 -> l4 : result_4^0'=result_4^post5, -x_5^0+y_6^0 <= 0, cost: 1
  11: l2 -> l3 : 1+b_7^0 <= 0, cost: 1
  12: l2 -> l3 : 1-b_7^0 <= 0, cost: 1
  13: l3 -> l1 : b_7^0'=0, y_6^0'=-1+y_6^0, T, cost: 1
  15: l1 -> l0 : b_7^0'=1, x_5^0'=1+x_5^0, (1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
  16: l1 -> l4 : result_4^0'=result_4^post8, -x_5^0+y_6^0 <= 0, cost: 1
  17: l6 -> l1 : b_7^0'=0, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l2 : b_7^0'=b_7^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (1+x_5^0-y_6^0 <= 0 /\ -b_7^post1+b_7^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ result_4^0-result_4^post1 == 0), cost: 1
	New rule:
	l0 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+x_5^0-y_6^0 <= 0), cost: 1
	
		propagated equality b_7^post1 = b_7^0
		
		propagated equality x_5^post1 = x_5^0
		
		propagated equality y_6^post1 = y_6^0
		
		propagated equality result_4^post1 = result_4^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+x_5^0-y_6^0 <= 0), cost: 1
	New rule:
	l0 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1+x_5^0-y_6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1+x_5^0-y_6^0 <= 0, cost: 1
	New rule:
	l0 -> l2 : 1+x_5^0-y_6^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : b_7^0'=b_7^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (1+b_7^0 <= 0 /\ -y_6^post2+y_6^0 == 0 /\ -b_7^post2+b_7^0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -x_5^post2+x_5^0 == 0), cost: 1
	New rule:
	l2 -> l3 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+b_7^0 <= 0), cost: 1
	
		propagated equality y_6^post2 = y_6^0
		
		propagated equality b_7^post2 = b_7^0
		
		propagated equality result_4^post2 = result_4^0
		
		propagated equality x_5^post2 = x_5^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+b_7^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1+b_7^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1+b_7^0 <= 0, cost: 1
	New rule:
	l2 -> l3 : 1+b_7^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : b_7^0'=b_7^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-y_6^post3+y_6^0 == 0 /\ -b_7^post3+b_7^0 == 0 /\ 1-b_7^0 <= 0 /\ -x_5^post3+x_5^0 == 0 /\ result_4^0-result_4^post3 == 0), cost: 1
	New rule:
	l2 -> l3 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-b_7^0 <= 0), cost: 1
	
		propagated equality y_6^post3 = y_6^0
		
		propagated equality b_7^post3 = b_7^0
		
		propagated equality x_5^post3 = x_5^0
		
		propagated equality result_4^post3 = result_4^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-b_7^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-b_7^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : b_7^0'=b_7^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-b_7^0 <= 0, cost: 1
	New rule:
	l2 -> l3 : 1-b_7^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l1 : b_7^0'=b_7^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (x_5^0-x_5^post4 == 0 /\ b_7^post4 == 0 /\ 1+y_6^post4-y_6^0 == 0 /\ result_4^0-result_4^post4 == 0), cost: 1
	New rule:
	l3 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, 0 == 0, cost: 1
	
		propagated equality x_5^post4 = x_5^0
		
		propagated equality b_7^post4 = 0
		
		propagated equality y_6^post4 = -1+y_6^0
		
		propagated equality result_4^post4 = result_4^0
		
	Simplified Guard

	Original rule:
	l3 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, 0 == 0, cost: 1
	New rule:
	l3 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, T, cost: 1
	New rule:
	l3 -> l1 : b_7^0'=0, y_6^0'=-1+y_6^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l4 : b_7^0'=b_7^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ -x_5^post5+x_5^0 == 0 /\ -b_7^post5+b_7^0 == 0), cost: 1
	New rule:
	l0 -> l4 : b_7^0'=b_7^0, result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
	
		propagated equality y_6^post5 = y_6^0
		
		propagated equality x_5^post5 = x_5^0
		
		propagated equality b_7^post5 = b_7^0
		
	Simplified Guard

	Original rule:
	l0 -> l4 : b_7^0'=b_7^0, result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
	New rule:
	l0 -> l4 : b_7^0'=b_7^0, result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, -x_5^0+y_6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l4 : b_7^0'=b_7^0, result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, -x_5^0+y_6^0 <= 0, cost: 1
	New rule:
	l0 -> l4 : result_4^0'=result_4^post5, -x_5^0+y_6^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l0 : b_7^0'=b_7^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (-result_4^post7+result_4^0 == 0 /\ -1+x_5^post7-x_5^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -1+b_7^post7 == 0 /\ -b_7^0 <= 0 /\ b_7^0 <= 0 /\ -y_6^post7+y_6^0 == 0), cost: 1
	New rule:
	l1 -> l0 : b_7^0'=b_7^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (-result_4^post7+result_4^0 == 0 /\ -1+x_5^post7-x_5^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -1+b_7^post7 == 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0 /\ -y_6^post7+y_6^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l0 : b_7^0'=b_7^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (-result_4^post7+result_4^0 == 0 /\ -1+x_5^post7-x_5^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -1+b_7^post7 == 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0 /\ -y_6^post7+y_6^0 == 0), cost: 1
	New rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
	
		propagated equality result_4^post7 = result_4^0
		
		propagated equality x_5^post7 = 1+x_5^0
		
		propagated equality b_7^post7 = 1
		
		propagated equality y_6^post7 = y_6^0
		
	Simplified Guard

	Original rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
	New rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
	New rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
	New rule:
	l1 -> l0 : b_7^0'=1, x_5^0'=1+x_5^0, (1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l4 : b_7^0'=b_7^post8, result_4^0'=result_4^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ -b_7^post8+b_7^0 == 0 /\ x_5^0-x_5^post8 == 0 /\ -y_6^post8+y_6^0 == 0), cost: 1
	New rule:
	l1 -> l4 : b_7^0'=b_7^0, result_4^0'=result_4^post8, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
	
		propagated equality b_7^post8 = b_7^0
		
		propagated equality x_5^post8 = x_5^0
		
		propagated equality y_6^post8 = y_6^0
		
	Simplified Guard

	Original rule:
	l1 -> l4 : b_7^0'=b_7^0, result_4^0'=result_4^post8, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
	New rule:
	l1 -> l4 : b_7^0'=b_7^0, result_4^0'=result_4^post8, x_5^0'=x_5^0, y_6^0'=y_6^0, -x_5^0+y_6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l4 : b_7^0'=b_7^0, result_4^0'=result_4^post8, x_5^0'=x_5^0, y_6^0'=y_6^0, -x_5^0+y_6^0 <= 0, cost: 1
	New rule:
	l1 -> l4 : result_4^0'=result_4^post8, -x_5^0+y_6^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l1 : b_7^0'=b_7^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (result_4^0-result_4^post9 == 0 /\ result_4^post9-result_4^post6 == 0 /\ x_5^0-x_5^post9 == 0 /\ y_6^post9-y_6^post6 == 0 /\ b_7^post6 == 0 /\ -b_7^post9+b_7^0 == 0 /\ -y_6^post9+y_6^0 == 0 /\ -x_5^post6+x_5^post9 == 0), cost: 1
	New rule:
	l6 -> l1 : b_7^0'=0, result_4^0'=result_4^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ result_4^0-result_4^post9 == 0 /\ x_5^0-x_5^post9 == 0 /\ -b_7^post9+b_7^0 == 0 /\ -y_6^post9+y_6^0 == 0), cost: 1
	
		propagated equality result_4^post6 = result_4^post9
		
		propagated equality y_6^post6 = y_6^post9
		
		propagated equality b_7^post6 = 0
		
		propagated equality x_5^post6 = x_5^post9
		
	Propagated Equalities

	Original rule:
	l6 -> l1 : b_7^0'=0, result_4^0'=result_4^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ result_4^0-result_4^post9 == 0 /\ x_5^0-x_5^post9 == 0 /\ -b_7^post9+b_7^0 == 0 /\ -y_6^post9+y_6^0 == 0), cost: 1
	New rule:
	l6 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	
		propagated equality result_4^post9 = result_4^0
		
		propagated equality x_5^post9 = x_5^0
		
		propagated equality b_7^post9 = b_7^0
		
		propagated equality y_6^post9 = y_6^0
		
	Simplified Guard

	Original rule:
	l6 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	New rule:
	l6 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	New rule:
	l6 -> l1 : b_7^0'=0, T, cost: 1

Step with 17

	Trace

	17[T]
	
	Blocked

	[{}, {}]

Step with 16

	Trace

	17[T], 16[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	17[T]
	
	Blocked

	[{}, {16[T]}]

Step with 15

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {}]

Step with 14

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 14[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}]

Backtrack

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {14[T]}]

Step with 10

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {14[T]}, {}]

Step with 12

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)], 12[(1-b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {14[T]}, {11[T]}, {}]

Step with 13

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)], 12[(1-b_7^0 <= 0)], 13[T]
	
	Blocked

	[{}, {16[T]}, {14[T]}, {11[T]}, {}, {}]

Accelerate

Start location: l6
Program variables: b_7^0 result_4^0 x_5^0 y_6^0
  10: l0 -> l2 : 1+x_5^0-y_6^0 <= 0, cost: 1
  14: l0 -> l4 : result_4^0'=result_4^post5, -x_5^0+y_6^0 <= 0, cost: 1
  11: l2 -> l3 : 1+b_7^0 <= 0, cost: 1
  12: l2 -> l3 : 1-b_7^0 <= 0, cost: 1
  13: l3 -> l1 : b_7^0'=0, y_6^0'=-1+y_6^0, T, cost: 1
  15: l1 -> l0 : b_7^0'=1, x_5^0'=1+x_5^0, (1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
  16: l1 -> l4 : result_4^0'=result_4^post8, -x_5^0+y_6^0 <= 0, cost: 1
  18: l1 -> l1 : b_7^0'=0, x_5^0'=n+x_5^0, y_6^0'=-n+y_6^0, (1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0), cost: 1
  17: l6 -> l1 : b_7^0'=0, T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : b_7^0'=0, x_5^0'=1+x_5^0, y_6^0'=-1+y_6^0, (1+x_5^0-y_6^0 <= 0 /\ 2+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : b_7^0'=0, x_5^0'=n+x_5^0, y_6^0'=-n+y_6^0, (1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0), cost: 1

		-2-x_5^0+y_6^0 >= 0 [0]: montonic decrease yields -2*n-x_5^0+y_6^0 >= 0
		
		-2-x_5^0+y_6^0 >= 0 [1]: eventual increase yields (-2-x_5^0+y_6^0 >= 0 /\ 2 <= 0)
		
		-1-x_5^0+y_6^0 >= 0 [0]: montonic decrease yields 1-2*n-x_5^0+y_6^0 >= 0, dependencies: -2-x_5^0+y_6^0 >= 0
		
		-1-x_5^0+y_6^0 >= 0 [1]: eventual increase yields (2 <= 0 /\ -1-x_5^0+y_6^0 >= 0)
		
		-b_7^0 >= 0 [0]: monotonic increase yields -b_7^0 >= 0
		
		b_7^0 >= 0 [0]: monotonic increase yields b_7^0 >= 0
		
		Replacement map: {-2-x_5^0+y_6^0 >= 0 -> -2*n-x_5^0+y_6^0 >= 0, -1-x_5^0+y_6^0 >= 0 -> 1-2*n-x_5^0+y_6^0 >= 0, -b_7^0 >= 0 -> -b_7^0 >= 0, b_7^0 >= 0 -> b_7^0 >= 0}

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)]
	
	Blocked

	[{}, {16[T]}, {18[T]}]

Step with 16

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 16[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {18[T]}, {}]

Backtrack

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}]

Step with 15

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}, {}]

Step with 10

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}, {}, {}]

Step with 12

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)], 12[(1-b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}, {}, {}, {}]

Step with 13

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)], 12[(1-b_7^0 <= 0)], 13[T]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}, {}, {}, {}, {}]

Covered

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)], 12[(1-b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}, {}, {}, {13[T]}]

Backtrack

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}, {}, {12[T]}]

Backtrack

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}, {10[T]}]

Step with 14

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 14[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}, {10[T]}, {}]

Backtrack

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {16[T], 18[T]}, {10[T], 14[T]}]

Backtrack

	Trace

	17[T], 18[(1-2*n-x_5^0+y_6^0 >= 0 /\ -1+n >= 0 /\ -2*n-x_5^0+y_6^0 >= 0 /\ -b_7^0 >= 0 /\ b_7^0 >= 0)]
	
	Blocked

	[{}, {16[T]}, {15[T], 16[T], 18[T]}]

Backtrack

	Trace

	17[T]
	
	Blocked

	[{}, {16[T], 18[T]}]

Step with 15

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T], 18[T]}, {}]

Step with 14

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 14[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {16[T], 18[T]}, {}, {}]

Backtrack

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T], 18[T]}, {14[T]}]

Step with 10

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)]
	
	Blocked

	[{}, {16[T], 18[T]}, {14[T]}, {}]

Step with 12

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)], 12[(1-b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T], 18[T]}, {14[T]}, {}, {}]

Step with 13

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)], 12[(1-b_7^0 <= 0)], 13[T]
	
	Blocked

	[{}, {16[T], 18[T]}, {14[T]}, {}, {}, {}]

Covered

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)], 12[(1-b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T], 18[T]}, {14[T]}, {}, {13[T]}]

Backtrack

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)], 10[(1+x_5^0-y_6^0 <= 0)]
	
	Blocked

	[{}, {16[T], 18[T]}, {14[T]}, {12[T]}]

Backtrack

	Trace

	17[T], 15[(1+x_5^0-y_6^0 <= 0 /\ -b_7^0 <= 0 /\ -b_7^0 == 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {16[T], 18[T]}, {10[T], 14[T]}]

Backtrack

	Trace

	17[T]
	
	Blocked

	[{}, {15[T], 16[T], 18[T]}]

Backtrack

	Trace

	Blocked

	[{17[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
