YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l20, true>
<l1, l2, true, par{ret_my_malloc10^0 -> 0}>
<l1, l2, true, par{ret_my_malloc10^0 -> 1}>
<l3, l4, true>
<l5, l3, (undef59 = undef59), par{tmp___0^0 -> undef59}>
<l6, l3, ((0 + tmp___1^0) <= ~(1)) /\ (~(1) <= (0 + tmp___1^0)) /\ (undef71 = undef71), par{__len21^0 -> (0 + __const_100^0), tmp22^0 -> undef71}>
<l6, l5, (0 <= (0 + tmp___1^0))>
<l6, l5, ((1 + tmp___1^0) <= ~(1))>
<l7, l4, true>
<l8, l7, true>
<l9, l8, true>
<l9, l7, true>
<l9, l8, true>
<l10, l9, true, par{size17^0 -> (0 + __const_100^0)}>
<l11, l4, true>
<l12, l11, true>
<l13, l12, true>
<l13, l11, true>
<l13, l12, true>
<l14, l13, true, par{size15^0 -> (0 + __const_100^0)}>
<l15, l16, true, par{retval^0 -> (0 + ret_my_malloc14^0)}>
<l16, l6, ((0 + retval^0) <= 1) /\ (1 <= (0 + retval^0)) /\ (undef315 = undef315), par{tmp___1^0 -> undef315}>
<l16, l14, (2 <= (0 + retval^0))>
<l16, l14, ((1 + retval^0) <= 1)>
<l17, l15, true, par{ret_my_malloc14^0 -> 0}>
<l17, l15, true, par{ret_my_malloc14^0 -> 1}>
<l18, l10, (2 <= (0 + retval^0))>
<l18, l10, ((1 + retval^0) <= 1)>
<l18, l17, ((0 + retval^0) <= 1) /\ (1 <= (0 + retval^0)) /\ (undef415 = undef415), par{size11^0 -> (0 + __const_100^0), tmp13^0 -> undef415}>
<l2, l18, (undef433 = (0 + ret_my_malloc10^0)), par{retval^0 -> (0 + undef433), tmp^0 -> undef433}>
<l19, l1, (undef447 = undef447), par{size7^0 -> (0 + __const_100^0), tmp9^0 -> undef447}>
<l20, l19, true>

Fresh variables:
undef59, undef71, undef315, undef415, undef433, undef447, 

Undef variables:
undef59, undef71, undef315, undef415, undef433, undef447, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (undef447 = undef447) /\ (undef433 = (0 + 0)) /\ ((1 + (0 + undef433)) <= 1)>
<l0, l4, (undef447 = undef447) /\ (undef433 = (0 + 0)) /\ ((1 + (0 + undef433)) <= 1)>
<l0, l4, (undef447 = undef447) /\ (undef433 = (0 + 0)) /\ ((1 + (0 + undef433)) <= 1)>
<l0, l4, (undef447 = undef447) /\ (undef433 = (0 + 1)) /\ ((0 + (0 + undef433)) <= 1) /\ (1 <= (0 + (0 + undef433))) /\ (undef415 = undef415) /\ ((1 + (0 + 0)) <= 1)>
<l0, l4, (undef447 = undef447) /\ (undef433 = (0 + 1)) /\ ((0 + (0 + undef433)) <= 1) /\ (1 <= (0 + (0 + undef433))) /\ (undef415 = undef415) /\ ((1 + (0 + 0)) <= 1)>
<l0, l4, (undef447 = undef447) /\ (undef433 = (0 + 1)) /\ ((0 + (0 + undef433)) <= 1) /\ (1 <= (0 + (0 + undef433))) /\ (undef415 = undef415) /\ ((1 + (0 + 0)) <= 1)>
<l0, l4, (undef447 = undef447) /\ (undef433 = (0 + 1)) /\ ((0 + (0 + undef433)) <= 1) /\ (1 <= (0 + (0 + undef433))) /\ (undef415 = undef415) /\ ((0 + (0 + 1)) <= 1) /\ (1 <= (0 + (0 + 1))) /\ (undef315 = undef315) /\ ((0 + undef315) <= ~(1)) /\ (~(1) <= (0 + undef315)) /\ (undef71 = undef71), par{tmp___1^0 -> undef315}>
<l0, l4, (undef447 = undef447) /\ (undef433 = (0 + 1)) /\ ((0 + (0 + undef433)) <= 1) /\ (1 <= (0 + (0 + undef433))) /\ (undef415 = undef415) /\ ((0 + (0 + 1)) <= 1) /\ (1 <= (0 + (0 + 1))) /\ (undef315 = undef315) /\ (0 <= (0 + undef315)) /\ (undef59 = undef59), par{tmp___1^0 -> undef315}>
<l0, l4, (undef447 = undef447) /\ (undef433 = (0 + 1)) /\ ((0 + (0 + undef433)) <= 1) /\ (1 <= (0 + (0 + undef433))) /\ (undef415 = undef415) /\ ((0 + (0 + 1)) <= 1) /\ (1 <= (0 + (0 + 1))) /\ (undef315 = undef315) /\ ((1 + undef315) <= ~(1)) /\ (undef59 = undef59), par{tmp___1^0 -> undef315}>

Fresh variables:
undef59, undef71, undef315, undef415, undef433, undef447, 

Undef variables:
undef59, undef71, undef315, undef415, undef433, undef447, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l4, undef433 = 0, {all remain the same}>
<l0, l4, undef433 = 0, {all remain the same}>
<l0, l4, undef433 = 0, {all remain the same}>
<l0, l4, undef433 = 1, {all remain the same}>
<l0, l4, undef433 = 1, {all remain the same}>
<l0, l4, undef433 = 1, {all remain the same}>
<l0, l4, 1 + undef315 = 0 /\ undef433 = 1, {tmp___1^0 -> undef315, rest remain the same}>
<l0, l4, 0 <= undef315 /\ undef433 = 1, {tmp___1^0 -> undef315, rest remain the same}>
<l0, l4, 2 + undef315 <= 0 /\ undef433 = 1, {tmp___1^0 -> undef315, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Analyzing SCC {l4}...
No cycles found.

[32mProgram Terminates[0m
