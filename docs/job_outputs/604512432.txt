NO

Initial ITS

Start location: [1]
Program variables: tmp x xtmp y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : (y < 0 \/ y > 0), cost: 1
  22: [3] -> [20] : (y <= 0 /\ y >= 0), cost: 1
   3: [4] -> [5] : tmp'=y, T, cost: 1
   4: [5] -> [6] : xtmp'=x, T, cost: 1
   5: [6] -> [8] : (y <= 0 \/ x <= 0), cost: 1
   8: [6] -> [10] : (y > 0 /\ x > 0), cost: 1
  19: [7] -> [18] : y'=xtmp, T, cost: 1
   6: [8] -> [9] : y'=0, T, cost: 1
   7: [9] -> [7] : T, cost: 1
   9: [10] -> [12] : -y+x == 0, cost: 1
  12: [10] -> [14] : (-y+x < 0 \/ -y+x > 0), cost: 1
  18: [11] -> [7] : T, cost: 1
  10: [12] -> [13] : y'=0, T, cost: 1
  11: [13] -> [11] : T, cost: 1
  13: [14] -> [15] : xtmp-y > 0, cost: 1
  16: [14] -> [17] : xtmp-y <= 0, cost: 1
  14: [15] -> [16] : xtmp'=xtmp-y, T, cost: 1
  15: [16] -> [14] : T, cost: 1
  17: [17] -> [11] : T, cost: 1
  20: [18] -> [19] : x'=tmp, T, cost: 1
  21: [19] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: tmp x xtmp y
  23: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
  22: [3] -> [20] : (y <= 0 /\ y >= 0), cost: 1
  25: [3] -> [6] : tmp'=y, xtmp'=x, (y < 0 \/ y > 0), cost: 1
   8: [6] -> [10] : (y > 0 /\ x > 0), cost: 1
  27: [6] -> [7] : y'=0, (y <= 0 \/ x <= 0), cost: 1
  29: [7] -> [3] : x'=tmp, y'=xtmp, T, cost: 1
  12: [10] -> [14] : (-y+x < 0 \/ -y+x > 0), cost: 1
  31: [10] -> [11] : y'=0, -y+x == 0, cost: 1
  18: [11] -> [7] : T, cost: 1
  33: [14] -> [11] : xtmp-y <= 0, cost: 1
  34: [14] -> [14] : xtmp'=xtmp-y, xtmp-y > 0, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : (y < 0 \/ y > 0), cost: 1
	Second rule:
	[4] -> [5] : tmp'=y, T, cost: 1
	New rule:
	[3] -> [5] : tmp'=y, (y < 0 \/ y > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : tmp'=y, (y < 0 \/ y > 0), cost: 1
	Second rule:
	[5] -> [6] : xtmp'=x, T, cost: 1
	New rule:
	[3] -> [6] : tmp'=y, xtmp'=x, (y < 0 \/ y > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 24
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[6] -> [8] : (y <= 0 \/ x <= 0), cost: 1
	Second rule:
	[8] -> [9] : y'=0, T, cost: 1
	New rule:
	[6] -> [9] : y'=0, (y <= 0 \/ x <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 6
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[6] -> [9] : y'=0, (y <= 0 \/ x <= 0), cost: 1
	Second rule:
	[9] -> [7] : T, cost: 1
	New rule:
	[6] -> [7] : y'=0, (y <= 0 \/ x <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 26
	
	Eliminating location [18] by chaining:

	Applied chaining

	First rule:
	[7] -> [18] : y'=xtmp, T, cost: 1
	Second rule:
	[18] -> [19] : x'=tmp, T, cost: 1
	New rule:
	[7] -> [19] : x'=tmp, y'=xtmp, T, cost: 1
	
	Applied deletion

	Removed the following rules: 19 20
	
	Eliminating location [19] by chaining:

	Applied chaining

	First rule:
	[7] -> [19] : x'=tmp, y'=xtmp, T, cost: 1
	Second rule:
	[19] -> [3] : T, cost: 1
	New rule:
	[7] -> [3] : x'=tmp, y'=xtmp, T, cost: 1
	
	Applied deletion

	Removed the following rules: 21 28
	
	Eliminating location [12] by chaining:

	Applied chaining

	First rule:
	[10] -> [12] : -y+x == 0, cost: 1
	Second rule:
	[12] -> [13] : y'=0, T, cost: 1
	New rule:
	[10] -> [13] : y'=0, -y+x == 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 10
	
	Eliminating location [13] by chaining:

	Applied chaining

	First rule:
	[10] -> [13] : y'=0, -y+x == 0, cost: 1
	Second rule:
	[13] -> [11] : T, cost: 1
	New rule:
	[10] -> [11] : y'=0, -y+x == 0, cost: 1
	
	Applied deletion

	Removed the following rules: 11 30
	
	Eliminating location [15] by chaining:

	Applied chaining

	First rule:
	[14] -> [15] : xtmp-y > 0, cost: 1
	Second rule:
	[15] -> [16] : xtmp'=xtmp-y, T, cost: 1
	New rule:
	[14] -> [16] : xtmp'=xtmp-y, xtmp-y > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 13 14
	
	Eliminating location [17] by chaining:

	Applied chaining

	First rule:
	[14] -> [17] : xtmp-y <= 0, cost: 1
	Second rule:
	[17] -> [11] : T, cost: 1
	New rule:
	[14] -> [11] : xtmp-y <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 16 17
	
	Eliminating location [16] by chaining:

	Applied chaining

	First rule:
	[14] -> [16] : xtmp'=xtmp-y, xtmp-y > 0, cost: 1
	Second rule:
	[16] -> [14] : T, cost: 1
	New rule:
	[14] -> [14] : xtmp'=xtmp-y, xtmp-y > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 15 32

Step with 23

	Trace

	23[T]
	
	Blocked

	[{}, {}]

Step with 22

	Trace

	23[T], 22[(y <= 0 /\ y >= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	23[T]
	
	Blocked

	[{}, {22[T]}]

Step with 25

	Trace

	23[T], 25[(y < 0)]
	
	Blocked

	[{}, {22[T]}, {}]

Step with 27

	Trace

	23[T], 25[(y < 0)], 27[(y <= 0)]
	
	Blocked

	[{}, {22[T]}, {8[T]}, {}]

Step with 29

	Trace

	23[T], 25[(y < 0)], 27[(y <= 0)], 29[T]
	
	Blocked

	[{}, {22[T]}, {8[T]}, {}, {}]

Nonterm

Start location: [1]
Program variables: tmp x xtmp y
  23: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
  22: [3] -> [20] : (y <= 0 /\ y >= 0), cost: 1
  25: [3] -> [6] : tmp'=y, xtmp'=x, (y < 0 \/ y > 0), cost: 1
  35: [3] -> LoAT_sink : (-y > 0 /\ -y >= 0 /\ -1+n >= 0 /\ -x > 0 /\ -x >= 0), cost: NONTERM
  36: [3] -> [3] : tmp'=x, xtmp'=y, (-y > 0 /\ -y >= 0 /\ -x > 0 /\ -x >= 0), cost: 1
   8: [6] -> [10] : (y > 0 /\ x > 0), cost: 1
  27: [6] -> [7] : y'=0, (y <= 0 \/ x <= 0), cost: 1
  29: [7] -> [3] : x'=tmp, y'=xtmp, T, cost: 1
  12: [10] -> [14] : (-y+x < 0 \/ -y+x > 0), cost: 1
  31: [10] -> [11] : y'=0, -y+x == 0, cost: 1
  18: [11] -> [7] : T, cost: 1
  33: [14] -> [11] : xtmp-y <= 0, cost: 1
  34: [14] -> [14] : xtmp'=xtmp-y, xtmp-y > 0, cost: 1

	unrolling

	Original rule:
	[3] -> [3] : tmp'=y, x'=y, xtmp'=x, y'=x, (y < 0 /\ y <= 0), cost: 1
	New rule:
	[3] -> [3] : tmp'=x, x'=x, xtmp'=y, y'=y, (y < 0 /\ y <= 0 /\ x < 0 /\ x <= 0), cost: 1
	
	Certificate of Non-Termination

	Original rule:
	[3] -> [3] : tmp'=x, x'=x, xtmp'=y, y'=y, (y < 0 /\ y <= 0 /\ x < 0 /\ x <= 0), cost: 1
	New rule:
	[3] -> LoAT_sink : (-y > 0 /\ -y >= 0 /\ -1+n >= 0 /\ -x > 0 /\ -x >= 0), cost: NONTERM

		-y > 0 [0]: monotonic increase yields -y > 0
		
		-y >= 0 [0]: monotonic increase yields -y >= 0, dependencies: -y > 0
		
		-x > 0 [0]: monotonic increase yields -x > 0
		
		-x >= 0 [0]: monotonic increase yields -x >= 0, dependencies: -x > 0
		
		Replacement map: {-y > 0 -> -y > 0, -y >= 0 -> -y >= 0, -x > 0 -> -x > 0, -x >= 0 -> -x >= 0}

	Loop Acceleration

	Original rule:
	[3] -> [3] : tmp'=x, x'=x, xtmp'=y, y'=y, (y < 0 /\ y <= 0 /\ x < 0 /\ x <= 0), cost: 1
	New rule:
	[3] -> [3] : tmp'=x, x'=x, xtmp'=y, y'=y, (-y > 0 /\ -y >= 0 /\ -1+n >= 0 /\ -x > 0 /\ -x >= 0), cost: 1

		-y > 0 [0]: monotonic increase yields -y > 0
		
		-y >= 0 [0]: monotonic increase yields -y >= 0, dependencies: -y > 0
		
		-x > 0 [0]: monotonic increase yields -x > 0
		
		-x >= 0 [0]: monotonic increase yields -x >= 0, dependencies: -x > 0
		
		Replacement map: {-y > 0 -> -y > 0, -y >= 0 -> -y >= 0, -x > 0 -> -x > 0, -x >= 0 -> -x >= 0}

	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	[3] -> [3] : tmp'=x, x'=x, xtmp'=y, y'=y, (-y > 0 /\ -y >= 0 /\ -1+n >= 0 /\ -x > 0 /\ -x >= 0), cost: 1
	New rule:
	[3] -> [3] : tmp'=x, x'=x, xtmp'=y, y'=y, (-y > 0 /\ -y >= 0 /\ -x > 0 /\ -x >= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	[3] -> [3] : tmp'=x, x'=x, xtmp'=y, y'=y, (-y > 0 /\ -y >= 0 /\ -x > 0 /\ -x >= 0), cost: 1
	New rule:
	[3] -> [3] : tmp'=x, xtmp'=y, (-y > 0 /\ -y >= 0 /\ -x > 0 /\ -x >= 0), cost: 1

Step with 35

	Trace

	23[T], 35[(-y > 0 /\ -y >= 0 /\ -1+n >= 0 /\ -x > 0 /\ -x >= 0)]
	
	Blocked

	[{}, {22[T]}, {35[T]}]

Refute

	Counterexample

	[ tmp=0 x=-1 xtmp=0 y=-1 ] 23 [ tmp=0 x=x xtmp=0 y=y ] 35
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
