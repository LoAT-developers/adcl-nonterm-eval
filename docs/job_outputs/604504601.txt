WORST_CASE(Omega(0),?)

Initial ITS
Start location: l6
   0: l0 -> l1 : i7^0'=i7^post0, i4^0'=i4^post0, tmp^0'=tmp^post0, (10-i4^0 <= 0 /\ tmp^0-tmp^post0 == 0 /\ i7^post0 == 0 /\ i4^0-i4^post0 == 0), cost: 1
   1: l0 -> l2 : i7^0'=i7^post1, i4^0'=i4^post1, tmp^0'=tmp^post1, (-9+i4^0 <= 0 /\ -1-i4^0+i4^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ i7^0-i7^post1 == 0), cost: 1
   3: l1 -> l3 : i7^0'=i7^post3, i4^0'=i4^post3, tmp^0'=tmp^post3, (-i4^post3+i4^0 == 0 /\ -i7^post3+i7^0 == 0 /\ -tmp^post3+tmp^0 == 0), cost: 1
   2: l2 -> l0 : i7^0'=i7^post2, i4^0'=i4^post2, tmp^0'=tmp^post2, (tmp^0-tmp^post2 == 0 /\ i7^0-i7^post2 == 0 /\ -i4^post2+i4^0 == 0), cost: 1
   4: l3 -> l4 : i7^0'=i7^post4, i4^0'=i4^post4, tmp^0'=tmp^post4, (10-i7^0 <= 0 /\ -i4^post4+i4^0 == 0 /\ -tmp^post4+tmp^0 == 0 /\ -i7^post4+i7^0 == 0), cost: 1
   5: l3 -> l1 : i7^0'=i7^post5, i4^0'=i4^post5, tmp^0'=tmp^post5, (-i4^post5+i4^0 == 0 /\ -1+i7^post5-i7^0 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -9+i7^0 <= 0), cost: 1
   6: l5 -> l2 : i7^0'=i7^post6, i4^0'=i4^post6, tmp^0'=tmp^post6, (0 == 0 /\ i4^post6 == 0 /\ i7^0-i7^post6 == 0), cost: 1
   7: l6 -> l5 : i7^0'=i7^post7, i4^0'=i4^post7, tmp^0'=tmp^post7, (-tmp^post7+tmp^0 == 0 /\ -i4^post7+i4^0 == 0 /\ i7^0-i7^post7 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l6
   0: l0 -> l1 : i7^0'=i7^post0, i4^0'=i4^post0, tmp^0'=tmp^post0, (10-i4^0 <= 0 /\ tmp^0-tmp^post0 == 0 /\ i7^post0 == 0 /\ i4^0-i4^post0 == 0), cost: 1
   1: l0 -> l2 : i7^0'=i7^post1, i4^0'=i4^post1, tmp^0'=tmp^post1, (-9+i4^0 <= 0 /\ -1-i4^0+i4^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ i7^0-i7^post1 == 0), cost: 1
   3: l1 -> l3 : i7^0'=i7^post3, i4^0'=i4^post3, tmp^0'=tmp^post3, (-i4^post3+i4^0 == 0 /\ -i7^post3+i7^0 == 0 /\ -tmp^post3+tmp^0 == 0), cost: 1
   2: l2 -> l0 : i7^0'=i7^post2, i4^0'=i4^post2, tmp^0'=tmp^post2, (tmp^0-tmp^post2 == 0 /\ i7^0-i7^post2 == 0 /\ -i4^post2+i4^0 == 0), cost: 1
   5: l3 -> l1 : i7^0'=i7^post5, i4^0'=i4^post5, tmp^0'=tmp^post5, (-i4^post5+i4^0 == 0 /\ -1+i7^post5-i7^0 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -9+i7^0 <= 0), cost: 1
   6: l5 -> l2 : i7^0'=i7^post6, i4^0'=i4^post6, tmp^0'=tmp^post6, (0 == 0 /\ i4^post6 == 0 /\ i7^0-i7^post6 == 0), cost: 1
   7: l6 -> l5 : i7^0'=i7^post7, i4^0'=i4^post7, tmp^0'=tmp^post7, (-tmp^post7+tmp^0 == 0 /\ -i4^post7+i4^0 == 0 /\ i7^0-i7^post7 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : i7^0'=i7^post0, i4^0'=i4^post0, tmp^0'=tmp^post0, (10-i4^0 <= 0 /\ tmp^0-tmp^post0 == 0 /\ i7^post0 == 0 /\ i4^0-i4^post0 == 0), cost: 1
New rule:
l0 -> l1 : i7^0'=0, -10+i4^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : i7^0'=i7^post1, i4^0'=i4^post1, tmp^0'=tmp^post1, (-9+i4^0 <= 0 /\ -1-i4^0+i4^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ i7^0-i7^post1 == 0), cost: 1
New rule:
l0 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : i7^0'=i7^post2, i4^0'=i4^post2, tmp^0'=tmp^post2, (tmp^0-tmp^post2 == 0 /\ i7^0-i7^post2 == 0 /\ -i4^post2+i4^0 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : i7^0'=i7^post3, i4^0'=i4^post3, tmp^0'=tmp^post3, (-i4^post3+i4^0 == 0 /\ -i7^post3+i7^0 == 0 /\ -tmp^post3+tmp^0 == 0), cost: 1
New rule:
l1 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : i7^0'=i7^post5, i4^0'=i4^post5, tmp^0'=tmp^post5, (-i4^post5+i4^0 == 0 /\ -1+i7^post5-i7^0 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -9+i7^0 <= 0), cost: 1
New rule:
l3 -> l1 : i7^0'=1+i7^0, -9+i7^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l2 : i7^0'=i7^post6, i4^0'=i4^post6, tmp^0'=tmp^post6, (0 == 0 /\ i4^post6 == 0 /\ i7^0-i7^post6 == 0), cost: 1
New rule:
l5 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : i7^0'=i7^post7, i4^0'=i4^post7, tmp^0'=tmp^post7, (-tmp^post7+tmp^0 == 0 /\ -i4^post7+i4^0 == 0 /\ i7^0-i7^post7 == 0), cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
   8: l0 -> l1 : i7^0'=0, -10+i4^0 >= 0, cost: 1
   9: l0 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 1
  11: l1 -> l3 : TRUE, cost: 1
  10: l2 -> l0 : TRUE, cost: 1
  12: l3 -> l1 : i7^0'=1+i7^0, -9+i7^0 <= 0, cost: 1
  13: l5 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 1
  14: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 1
New rule:
l6 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 13 14

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l1 : i7^0'=1+i7^0, -9+i7^0 <= 0, cost: 1
New rule:
l1 -> l1 : i7^0'=1+i7^0, -9+i7^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 11 12

Eliminated locations on linear paths
Start location: l6
   8: l0 -> l1 : i7^0'=0, -10+i4^0 >= 0, cost: 1
   9: l0 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 1
  16: l1 -> l1 : i7^0'=1+i7^0, -9+i7^0 <= 0, cost: 2
  10: l2 -> l0 : TRUE, cost: 1
  15: l6 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : i7^0'=1+i7^0, -9+i7^0 <= 0, cost: 2
New rule:
l1 -> l1 : i7^0'=i7^0+n, (10-i7^0-n >= 0 /\ n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fbFHaH.txt

Applied instantiation
Original rule:
l1 -> l1 : i7^0'=i7^0+n, (10-i7^0-n >= 0 /\ n >= 0), cost: 2*n
New rule:
l1 -> l1 : i7^0'=10, (0 >= 0 /\ 10-i7^0 >= 0), cost: 20-2*i7^0

Applied simplification
Original rule:
l1 -> l1 : i7^0'=10, (0 >= 0 /\ 10-i7^0 >= 0), cost: 20-2*i7^0
New rule:
l1 -> l1 : i7^0'=10, -10+i7^0 <= 0, cost: 20-2*i7^0

Applied deletion
Removed the following rules: 16

Accelerated simple loops
Start location: l6
   8: l0 -> l1 : i7^0'=0, -10+i4^0 >= 0, cost: 1
   9: l0 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 1
  18: l1 -> l1 : i7^0'=10, -10+i7^0 <= 0, cost: 20-2*i7^0
  10: l2 -> l0 : TRUE, cost: 1
  15: l6 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Applied chaining
First rule:
l0 -> l1 : i7^0'=0, -10+i4^0 >= 0, cost: 1
Second rule:
l1 -> l1 : i7^0'=10, -10+i7^0 <= 0, cost: 20-2*i7^0
New rule:
l0 -> l1 : i7^0'=10, -10+i4^0 >= 0, cost: 21

Applied deletion
Removed the following rules: 18

Chained accelerated rules with incoming rules
Start location: l6
   8: l0 -> l1 : i7^0'=0, -10+i4^0 >= 0, cost: 1
   9: l0 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 1
  19: l0 -> l1 : i7^0'=10, -10+i4^0 >= 0, cost: 21
  10: l2 -> l0 : TRUE, cost: 1
  15: l6 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l6
   9: l0 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 1
  10: l2 -> l0 : TRUE, cost: 1
  15: l6 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 1
New rule:
l2 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 9 10

Eliminated locations on linear paths
Start location: l6
  20: l2 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 2
  15: l6 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Applied acceleration
Original rule:
l2 -> l2 : i4^0'=1+i4^0, -9+i4^0 <= 0, cost: 2
New rule:
l2 -> l2 : i4^0'=n0+i4^0, (10-n0-i4^0 >= 0 /\ n0 >= 0), cost: 2*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_McOnAf.txt

Applied instantiation
Original rule:
l2 -> l2 : i4^0'=n0+i4^0, (10-n0-i4^0 >= 0 /\ n0 >= 0), cost: 2*n0
New rule:
l2 -> l2 : i4^0'=10, (0 >= 0 /\ 10-i4^0 >= 0), cost: 20-2*i4^0

Applied simplification
Original rule:
l2 -> l2 : i4^0'=10, (0 >= 0 /\ 10-i4^0 >= 0), cost: 20-2*i4^0
New rule:
l2 -> l2 : i4^0'=10, -10+i4^0 <= 0, cost: 20-2*i4^0

Applied deletion
Removed the following rules: 20

Accelerated simple loops
Start location: l6
  22: l2 -> l2 : i4^0'=10, -10+i4^0 <= 0, cost: 20-2*i4^0
  15: l6 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Applied chaining
First rule:
l6 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2
Second rule:
l2 -> l2 : i4^0'=10, -10+i4^0 <= 0, cost: 20-2*i4^0
New rule:
l6 -> l2 : i4^0'=10, tmp^0'=tmp^post6, (0 == 0 /\ -10 <= 0), cost: 22

Applied deletion
Removed the following rules: 22

Chained accelerated rules with incoming rules
Start location: l6
  15: l6 -> l2 : i4^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2
  23: l6 -> l2 : i4^0'=10, tmp^0'=tmp^post6, (0 == 0 /\ -10 <= 0), cost: 22


Removed unreachable locations and irrelevant leafs
Start location: l6
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

