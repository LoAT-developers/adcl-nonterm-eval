NO

Initial ITS

Start location: l5
Program variables: x^0 y^0
   0: l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (-x^post1+x^0 == 0 /\ 1+y^0-x^0 <= 0 /\ -y^post1+y^0 == 0), cost: 1
   1: l0 -> l2 : x^0'=x^post2, y^0'=y^post2, (-1+x^post2-x^0 == 0 /\ -1+y^post2-y^0 == 0), cost: 1
   3: l0 -> l3 : x^0'=x^post4, y^0'=y^post4, (-x^post4+x^0 == 0 /\ -y^post4+y^0 == 0), cost: 1
   2: l2 -> l0 : x^0'=x^post3, y^0'=y^post3, (-x^post3+x^0 == 0 /\ y^0-y^post3 == 0), cost: 1
   4: l4 -> l0 : x^0'=x^post5, y^0'=y^post5, (-y^post5+y^0 == 0 /\ y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -x^post5+x^0 == 0), cost: 1
   5: l5 -> l4 : x^0'=x^post6, y^0'=y^post6, (-x^post6+x^0 == 0 /\ y^0-y^post6 == 0), cost: 1

Chained Linear Paths

Start location: l5
Program variables: x^0 y^0
   0: l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (-x^post1+x^0 == 0 /\ 1+y^0-x^0 <= 0 /\ -y^post1+y^0 == 0), cost: 1
   3: l0 -> l3 : x^0'=x^post4, y^0'=y^post4, (-x^post4+x^0 == 0 /\ -y^post4+y^0 == 0), cost: 1
   7: l0 -> l0 : x^0'=x^post3, y^0'=y^post3, (-1+x^post2-x^0 == 0 /\ -x^post3+x^post2 == 0 /\ y^post2-y^post3 == 0 /\ -1+y^post2-y^0 == 0), cost: 1
   6: l5 -> l0 : x^0'=x^post5, y^0'=y^post5, (-y^post5+y^post6 == 0 /\ x^post6-x^post5 == 0 /\ -x^post6+x^0 == 0 /\ y^0-y^post6 == 0 /\ x^post6-y^post6 <= 0 /\ -x^post6+y^post6 <= 0), cost: 1

	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l5 -> l4 : x^0'=x^post6, y^0'=y^post6, (-x^post6+x^0 == 0 /\ y^0-y^post6 == 0), cost: 1
	Second rule:
	l4 -> l0 : x^0'=x^post5, y^0'=y^post5, (-y^post5+y^0 == 0 /\ y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -x^post5+x^0 == 0), cost: 1
	New rule:
	l5 -> l0 : x^0'=x^post5, y^0'=y^post5, (-y^post5+y^post6 == 0 /\ x^post6-x^post5 == 0 /\ -x^post6+x^0 == 0 /\ y^0-y^post6 == 0 /\ x^post6-y^post6 <= 0 /\ -x^post6+y^post6 <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l0 -> l2 : x^0'=x^post2, y^0'=y^post2, (-1+x^post2-x^0 == 0 /\ -1+y^post2-y^0 == 0), cost: 1
	Second rule:
	l2 -> l0 : x^0'=x^post3, y^0'=y^post3, (-x^post3+x^0 == 0 /\ y^0-y^post3 == 0), cost: 1
	New rule:
	l0 -> l0 : x^0'=x^post3, y^0'=y^post3, (-1+x^post2-x^0 == 0 /\ -x^post3+x^post2 == 0 /\ y^post2-y^post3 == 0 /\ -1+y^post2-y^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 1 2

Simplified Transitions

Start location: l5
Program variables: x^0 y^0
   8: l0 -> l1 : 1+y^0-x^0 <= 0, cost: 1
   9: l0 -> l3 : T, cost: 1
  11: l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1
  10: l5 -> l0 : (y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0), cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (-x^post1+x^0 == 0 /\ 1+y^0-x^0 <= 0 /\ -y^post1+y^0 == 0), cost: 1
	New rule:
	l0 -> l1 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ 1+y^0-x^0 <= 0), cost: 1
	
		propagated equality x^post1 = x^0
		
		propagated equality y^post1 = y^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ 1+y^0-x^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : x^0'=x^0, y^0'=y^0, 1+y^0-x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : x^0'=x^0, y^0'=y^0, 1+y^0-x^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : 1+y^0-x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l3 : x^0'=x^post4, y^0'=y^post4, (-x^post4+x^0 == 0 /\ -y^post4+y^0 == 0), cost: 1
	New rule:
	l0 -> l3 : x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	
		propagated equality x^post4 = x^0
		
		propagated equality y^post4 = y^0
		
	Simplified Guard

	Original rule:
	l0 -> l3 : x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	New rule:
	l0 -> l3 : x^0'=x^0, y^0'=y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l3 : x^0'=x^0, y^0'=y^0, T, cost: 1
	New rule:
	l0 -> l3 : T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l5 -> l0 : x^0'=x^post5, y^0'=y^post5, (-y^post5+y^post6 == 0 /\ x^post6-x^post5 == 0 /\ -x^post6+x^0 == 0 /\ y^0-y^post6 == 0 /\ x^post6-y^post6 <= 0 /\ -x^post6+y^post6 <= 0), cost: 1
	New rule:
	l5 -> l0 : x^0'=x^post5, y^0'=y^post5, (-y^post5+y^post6 == 0 /\ x^post6-x^post5 == 0 /\ -x^post6+x^0 == 0 /\ y^0-y^post6 == 0 /\ x^post6-y^post6 <= 0 /\ x^post6-y^post6 == 0 /\ -x^post6+y^post6 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l0 : x^0'=x^post5, y^0'=y^post5, (-y^post5+y^post6 == 0 /\ x^post6-x^post5 == 0 /\ -x^post6+x^0 == 0 /\ y^0-y^post6 == 0 /\ x^post6-y^post6 <= 0 /\ x^post6-y^post6 == 0 /\ -x^post6+y^post6 <= 0), cost: 1
	New rule:
	l5 -> l0 : x^0'=x^post6, y^0'=y^post6, (0 == 0 /\ -x^post6+x^0 == 0 /\ y^0-y^post6 == 0 /\ x^post6-y^post6 <= 0 /\ x^post6-y^post6 == 0 /\ -x^post6+y^post6 <= 0), cost: 1
	
		propagated equality y^post5 = y^post6
		
		propagated equality x^post5 = x^post6
		
	Propagated Equalities

	Original rule:
	l5 -> l0 : x^0'=x^post6, y^0'=y^post6, (0 == 0 /\ -x^post6+x^0 == 0 /\ y^0-y^post6 == 0 /\ x^post6-y^post6 <= 0 /\ x^post6-y^post6 == 0 /\ -x^post6+y^post6 <= 0), cost: 1
	New rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0), cost: 1
	
		propagated equality x^post6 = x^0
		
		propagated equality y^post6 = y^0
		
	Simplified Guard

	Original rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0), cost: 1
	New rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, (y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, (y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0), cost: 1
	New rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, (y^0-x^0 <= 0 /\ y^0-x^0 == 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l0 : x^0'=x^0, y^0'=y^0, (y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0), cost: 1
	New rule:
	l5 -> l0 : (y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : x^0'=x^post3, y^0'=y^post3, (-1+x^post2-x^0 == 0 /\ -x^post3+x^post2 == 0 /\ y^post2-y^post3 == 0 /\ -1+y^post2-y^0 == 0), cost: 1
	New rule:
	l0 -> l0 : x^0'=x^post2, y^0'=y^post2, (0 == 0 /\ -1+x^post2-x^0 == 0 /\ -1+y^post2-y^0 == 0), cost: 1
	
		propagated equality x^post3 = x^post2
		
		propagated equality y^post3 = y^post2
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : x^0'=x^post2, y^0'=y^post2, (0 == 0 /\ -1+x^post2-x^0 == 0 /\ -1+y^post2-y^0 == 0), cost: 1
	New rule:
	l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, 0 == 0, cost: 1
	
		propagated equality x^post2 = 1+x^0
		
		propagated equality y^post2 = 1+y^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, 0 == 0, cost: 1
	New rule:
	l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1

Step with 10

	Trace

	10[(y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0)]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	10[(y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0)], 9[T]
	
	Blocked

	[{}, {8[T]}, {}]

Backtrack

	Trace

	10[(y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0)]
	
	Blocked

	[{}, {8[T], 9[T]}]

Step with 11

	Trace

	10[(y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0)], 11[T]
	
	Blocked

	[{}, {8[T], 9[T]}, {}]

Nonterm

Start location: l5
Program variables: x^0 y^0
   8: l0 -> l1 : 1+y^0-x^0 <= 0, cost: 1
   9: l0 -> l3 : T, cost: 1
  11: l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1
  12: l0 -> LoAT_sink : -1+n >= 0, cost: NONTERM
  13: l0 -> l0 : x^0'=n+x^0, y^0'=y^0+n, -1+n >= 0, cost: 1
  10: l5 -> l0 : (y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0), cost: 1

	Certificate of Non-Termination

	Original rule:
	l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1
	New rule:
	l0 -> LoAT_sink : -1+n >= 0, cost: NONTERM

		Replacement map: {}

	Loop Acceleration

	Original rule:
	l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1
	New rule:
	l0 -> l0 : x^0'=n+x^0, y^0'=y^0+n, -1+n >= 0, cost: 1

		Replacement map: {}

Step with 12

	Trace

	10[(y^0-x^0 <= 0 /\ -y^0+x^0 <= 0 /\ -y^0+x^0 == 0)], 12[-1+n >= 0]
	
	Blocked

	[{}, {8[T], 9[T]}, {12[T]}]

Refute

	Counterexample

	[ x^0=1 y^0=1 ] 10 [ x^0=1 y^0=1 ] 12
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
