unknown

Initial ITS

Start location: l7
Program variables: __const_99^0 __disjvr_0^0 result^0 x^0 y^0
   0: l0 -> l1 : __const_99^0'=__const_99^post1, __disjvr_0^0'=__disjvr_0^post1, result^0'=result^post1, x^0'=x^post1, y^0'=y^post1, (0 == 0 /\ -x^post1+x^0 == 0 /\ -y^post1+y^0 == 0 /\ -x^0 <= 0 /\ -__disjvr_0^post1+__disjvr_0^0 == 0 /\ -__const_99^post1+__const_99^0 == 0), cost: 1
   1: l0 -> l3 : __const_99^0'=__const_99^post2, __disjvr_0^0'=__disjvr_0^post2, result^0'=result^post2, x^0'=x^post2, y^0'=y^post2, (__const_99^0-__const_99^post2 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0), cost: 1
   5: l0 -> l5 : __const_99^0'=__const_99^post6, __disjvr_0^0'=__disjvr_0^post6, result^0'=result^post6, x^0'=x^post6, y^0'=y^post6, (-1+y^post6-y^0 == 0 /\ __const_99^0-x^0+x^post6 == 0 /\ 1+y^0 <= 0 /\ -1-y^0 <= 0 /\ -result^post6+result^0 == 0 /\ 1+x^0 <= 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post6 == 0), cost: 1
   2: l3 -> l4 : __const_99^0'=__const_99^post3, __disjvr_0^0'=__disjvr_0^post3, result^0'=result^post3, x^0'=x^post3, y^0'=y^post3, (result^0-result^post3 == 0 /\ -y^post3+y^0 == 0 /\ -__const_99^post3+__const_99^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -x^post3+x^0 == 0 /\ __disjvr_0^post3-__disjvr_0^0 == 0), cost: 1
   3: l4 -> l2 : __const_99^0'=__const_99^post4, __disjvr_0^0'=__disjvr_0^post4, result^0'=result^post4, x^0'=x^post4, y^0'=y^post4, (-1-y^0+y^post4 == 0 /\ -1+x^post4-x^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^0 == 0 /\ -result^post4+result^0 == 0 /\ __const_99^0-__const_99^post4 == 0), cost: 1
   4: l2 -> l0 : __const_99^0'=__const_99^post5, __disjvr_0^0'=__disjvr_0^post5, result^0'=result^post5, x^0'=x^post5, y^0'=y^post5, (result^0-result^post5 == 0 /\ -y^post5+y^0 == 0 /\ -__const_99^post5+__const_99^0 == 0 /\ -x^post5+x^0 == 0 /\ -__disjvr_0^post5+__disjvr_0^0 == 0), cost: 1
   6: l5 -> l0 : __const_99^0'=__const_99^post7, __disjvr_0^0'=__disjvr_0^post7, result^0'=result^post7, x^0'=x^post7, y^0'=y^post7, (result^0-result^post7 == 0 /\ -y^post7+y^0 == 0 /\ -x^post7+x^0 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post7 == 0), cost: 1
   7: l6 -> l0 : __const_99^0'=__const_99^post8, __disjvr_0^0'=__disjvr_0^post8, result^0'=result^post8, x^0'=x^post8, y^0'=y^post8, (x^0-x^post8 == 0 /\ -y^post8+y^0 == 0 /\ result^0-result^post8 == 0 /\ __const_99^0-__const_99^post8 == 0 /\ -__disjvr_0^post8+__disjvr_0^0 == 0), cost: 1
   8: l7 -> l6 : __const_99^0'=__const_99^post9, __disjvr_0^0'=__disjvr_0^post9, result^0'=result^post9, x^0'=x^post9, y^0'=y^post9, (__const_99^0-__const_99^post9 == 0 /\ -result^post9+result^0 == 0 /\ -y^post9+y^0 == 0 /\ -x^post9+x^0 == 0 /\ -__disjvr_0^post9+__disjvr_0^0 == 0), cost: 1

Chained Linear Paths

Start location: l7
Program variables: __const_99^0 __disjvr_0^0 result^0 x^0 y^0
   0: l0 -> l1 : __const_99^0'=__const_99^post1, __disjvr_0^0'=__disjvr_0^post1, result^0'=result^post1, x^0'=x^post1, y^0'=y^post1, (0 == 0 /\ -x^post1+x^0 == 0 /\ -y^post1+y^0 == 0 /\ -x^0 <= 0 /\ -__disjvr_0^post1+__disjvr_0^0 == 0 /\ -__const_99^post1+__const_99^0 == 0), cost: 1
  11: l0 -> l0 : __const_99^0'=__const_99^post7, __disjvr_0^0'=__disjvr_0^post7, result^0'=result^post7, x^0'=x^post7, y^0'=y^post7, (result^post6-result^post7 == 0 /\ y^post6-y^post7 == 0 /\ -1+y^post6-y^0 == 0 /\ __disjvr_0^post6-__disjvr_0^post7 == 0 /\ -x^post7+x^post6 == 0 /\ __const_99^0-x^0+x^post6 == 0 /\ 1+y^0 <= 0 /\ -1-y^0 <= 0 /\ -result^post6+result^0 == 0 /\ 1+x^0 <= 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post6 == 0 /\ -__const_99^post7+__const_99^post6 == 0), cost: 1
  13: l0 -> l0 : __const_99^0'=__const_99^post5, __disjvr_0^0'=__disjvr_0^post5, result^0'=result^post5, x^0'=x^post5, y^0'=y^post5, (-1-y^post3+y^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ -y^post5+y^post4 == 0 /\ __const_99^0-__const_99^post2 == 0 /\ -__const_99^post3+__const_99^post2 == 0 /\ -result^post4+result^post3 == 0 /\ result^post4-result^post5 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -1-x^post3+x^post4 == 0 /\ -__const_99^post5+__const_99^post4 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -x^post3+x^post2 == 0 /\ result^post2-result^post3 == 0 /\ -y^post3+y^post2 == 0 /\ __const_99^post3-__const_99^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ -x^post5+x^post4 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0), cost: 1
   9: l7 -> l0 : __const_99^0'=__const_99^post8, __disjvr_0^0'=__disjvr_0^post8, result^0'=result^post8, x^0'=x^post8, y^0'=y^post8, (-y^post8+y^post9 == 0 /\ __const_99^0-__const_99^post9 == 0 /\ x^post9-x^post8 == 0 /\ -result^post9+result^0 == 0 /\ -y^post9+y^0 == 0 /\ -x^post9+x^0 == 0 /\ -__disjvr_0^post9+__disjvr_0^0 == 0 /\ -__disjvr_0^post8+__disjvr_0^post9 == 0 /\ __const_99^post9-__const_99^post8 == 0 /\ result^post9-result^post8 == 0), cost: 1

	Eliminating location l6 by chaining:

	Applied chaining

	First rule:
	l7 -> l6 : __const_99^0'=__const_99^post9, __disjvr_0^0'=__disjvr_0^post9, result^0'=result^post9, x^0'=x^post9, y^0'=y^post9, (__const_99^0-__const_99^post9 == 0 /\ -result^post9+result^0 == 0 /\ -y^post9+y^0 == 0 /\ -x^post9+x^0 == 0 /\ -__disjvr_0^post9+__disjvr_0^0 == 0), cost: 1
	Second rule:
	l6 -> l0 : __const_99^0'=__const_99^post8, __disjvr_0^0'=__disjvr_0^post8, result^0'=result^post8, x^0'=x^post8, y^0'=y^post8, (x^0-x^post8 == 0 /\ -y^post8+y^0 == 0 /\ result^0-result^post8 == 0 /\ __const_99^0-__const_99^post8 == 0 /\ -__disjvr_0^post8+__disjvr_0^0 == 0), cost: 1
	New rule:
	l7 -> l0 : __const_99^0'=__const_99^post8, __disjvr_0^0'=__disjvr_0^post8, result^0'=result^post8, x^0'=x^post8, y^0'=y^post8, (-y^post8+y^post9 == 0 /\ __const_99^0-__const_99^post9 == 0 /\ x^post9-x^post8 == 0 /\ -result^post9+result^0 == 0 /\ -y^post9+y^0 == 0 /\ -x^post9+x^0 == 0 /\ -__disjvr_0^post9+__disjvr_0^0 == 0 /\ -__disjvr_0^post8+__disjvr_0^post9 == 0 /\ __const_99^post9-__const_99^post8 == 0 /\ result^post9-result^post8 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 8
	
	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l0 -> l3 : __const_99^0'=__const_99^post2, __disjvr_0^0'=__disjvr_0^post2, result^0'=result^post2, x^0'=x^post2, y^0'=y^post2, (__const_99^0-__const_99^post2 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0), cost: 1
	Second rule:
	l3 -> l4 : __const_99^0'=__const_99^post3, __disjvr_0^0'=__disjvr_0^post3, result^0'=result^post3, x^0'=x^post3, y^0'=y^post3, (result^0-result^post3 == 0 /\ -y^post3+y^0 == 0 /\ -__const_99^post3+__const_99^0 == 0 /\ -__disjvr_0^post3+__disjvr_0^0 == 0 /\ -x^post3+x^0 == 0 /\ __disjvr_0^post3-__disjvr_0^0 == 0), cost: 1
	New rule:
	l0 -> l4 : __const_99^0'=__const_99^post3, __disjvr_0^0'=__disjvr_0^post3, result^0'=result^post3, x^0'=x^post3, y^0'=y^post3, (-__disjvr_0^post2+__disjvr_0^post3 == 0 /\ __const_99^0-__const_99^post2 == 0 /\ -__const_99^post3+__const_99^post2 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -x^post3+x^post2 == 0 /\ result^post2-result^post3 == 0 /\ -y^post3+y^post2 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 1 2
	
	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l0 -> l5 : __const_99^0'=__const_99^post6, __disjvr_0^0'=__disjvr_0^post6, result^0'=result^post6, x^0'=x^post6, y^0'=y^post6, (-1+y^post6-y^0 == 0 /\ __const_99^0-x^0+x^post6 == 0 /\ 1+y^0 <= 0 /\ -1-y^0 <= 0 /\ -result^post6+result^0 == 0 /\ 1+x^0 <= 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post6 == 0), cost: 1
	Second rule:
	l5 -> l0 : __const_99^0'=__const_99^post7, __disjvr_0^0'=__disjvr_0^post7, result^0'=result^post7, x^0'=x^post7, y^0'=y^post7, (result^0-result^post7 == 0 /\ -y^post7+y^0 == 0 /\ -x^post7+x^0 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post7 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^post7, __disjvr_0^0'=__disjvr_0^post7, result^0'=result^post7, x^0'=x^post7, y^0'=y^post7, (result^post6-result^post7 == 0 /\ y^post6-y^post7 == 0 /\ -1+y^post6-y^0 == 0 /\ __disjvr_0^post6-__disjvr_0^post7 == 0 /\ -x^post7+x^post6 == 0 /\ __const_99^0-x^0+x^post6 == 0 /\ 1+y^0 <= 0 /\ -1-y^0 <= 0 /\ -result^post6+result^0 == 0 /\ 1+x^0 <= 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post6 == 0 /\ -__const_99^post7+__const_99^post6 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 6
	
	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l0 -> l4 : __const_99^0'=__const_99^post3, __disjvr_0^0'=__disjvr_0^post3, result^0'=result^post3, x^0'=x^post3, y^0'=y^post3, (-__disjvr_0^post2+__disjvr_0^post3 == 0 /\ __const_99^0-__const_99^post2 == 0 /\ -__const_99^post3+__const_99^post2 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -x^post3+x^post2 == 0 /\ result^post2-result^post3 == 0 /\ -y^post3+y^post2 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0), cost: 1
	Second rule:
	l4 -> l2 : __const_99^0'=__const_99^post4, __disjvr_0^0'=__disjvr_0^post4, result^0'=result^post4, x^0'=x^post4, y^0'=y^post4, (-1-y^0+y^post4 == 0 /\ -1+x^post4-x^0 == 0 /\ -__disjvr_0^post4+__disjvr_0^0 == 0 /\ -result^post4+result^0 == 0 /\ __const_99^0-__const_99^post4 == 0), cost: 1
	New rule:
	l0 -> l2 : __const_99^0'=__const_99^post4, __disjvr_0^0'=__disjvr_0^post4, result^0'=result^post4, x^0'=x^post4, y^0'=y^post4, (-1-y^post3+y^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ __const_99^0-__const_99^post2 == 0 /\ -__const_99^post3+__const_99^post2 == 0 /\ -result^post4+result^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -1-x^post3+x^post4 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -x^post3+x^post2 == 0 /\ result^post2-result^post3 == 0 /\ -y^post3+y^post2 == 0 /\ __const_99^post3-__const_99^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 3 10
	
	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l0 -> l2 : __const_99^0'=__const_99^post4, __disjvr_0^0'=__disjvr_0^post4, result^0'=result^post4, x^0'=x^post4, y^0'=y^post4, (-1-y^post3+y^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ __const_99^0-__const_99^post2 == 0 /\ -__const_99^post3+__const_99^post2 == 0 /\ -result^post4+result^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -1-x^post3+x^post4 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -x^post3+x^post2 == 0 /\ result^post2-result^post3 == 0 /\ -y^post3+y^post2 == 0 /\ __const_99^post3-__const_99^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0), cost: 1
	Second rule:
	l2 -> l0 : __const_99^0'=__const_99^post5, __disjvr_0^0'=__disjvr_0^post5, result^0'=result^post5, x^0'=x^post5, y^0'=y^post5, (result^0-result^post5 == 0 /\ -y^post5+y^0 == 0 /\ -__const_99^post5+__const_99^0 == 0 /\ -x^post5+x^0 == 0 /\ -__disjvr_0^post5+__disjvr_0^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^post5, __disjvr_0^0'=__disjvr_0^post5, result^0'=result^post5, x^0'=x^post5, y^0'=y^post5, (-1-y^post3+y^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ -y^post5+y^post4 == 0 /\ __const_99^0-__const_99^post2 == 0 /\ -__const_99^post3+__const_99^post2 == 0 /\ -result^post4+result^post3 == 0 /\ result^post4-result^post5 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -1-x^post3+x^post4 == 0 /\ -__const_99^post5+__const_99^post4 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -x^post3+x^post2 == 0 /\ result^post2-result^post3 == 0 /\ -y^post3+y^post2 == 0 /\ __const_99^post3-__const_99^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ -x^post5+x^post4 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 12

Simplified Transitions

Start location: l7
Program variables: __const_99^0 result^0 x^0 y^0
  14: l0 -> l1 : result^0'=result^post1, -x^0 <= 0, cost: 1
  16: l0 -> l0 : x^0'=-__const_99^0+x^0, y^0'=1+y^0, (1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0), cost: 1
  17: l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, 1+x^0 <= 0, cost: 1
  15: l7 -> l0 : T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : __const_99^0'=__const_99^post1, __disjvr_0^0'=__disjvr_0^post1, result^0'=result^post1, x^0'=x^post1, y^0'=y^post1, (0 == 0 /\ -x^post1+x^0 == 0 /\ -y^post1+y^0 == 0 /\ -x^0 <= 0 /\ -__disjvr_0^post1+__disjvr_0^0 == 0 /\ -__const_99^post1+__const_99^0 == 0), cost: 1
	New rule:
	l0 -> l1 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^post1, x^0'=x^0, y^0'=y^0, (0 == 0 /\ -x^0 <= 0), cost: 1
	
		propagated equality x^post1 = x^0
		
		propagated equality y^post1 = y^0
		
		propagated equality __disjvr_0^post1 = __disjvr_0^0
		
		propagated equality __const_99^post1 = __const_99^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^post1, x^0'=x^0, y^0'=y^0, (0 == 0 /\ -x^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^post1, x^0'=x^0, y^0'=y^0, -x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^post1, x^0'=x^0, y^0'=y^0, -x^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : result^0'=result^post1, -x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l0 : __const_99^0'=__const_99^post8, __disjvr_0^0'=__disjvr_0^post8, result^0'=result^post8, x^0'=x^post8, y^0'=y^post8, (-y^post8+y^post9 == 0 /\ __const_99^0-__const_99^post9 == 0 /\ x^post9-x^post8 == 0 /\ -result^post9+result^0 == 0 /\ -y^post9+y^0 == 0 /\ -x^post9+x^0 == 0 /\ -__disjvr_0^post9+__disjvr_0^0 == 0 /\ -__disjvr_0^post8+__disjvr_0^post9 == 0 /\ __const_99^post9-__const_99^post8 == 0 /\ result^post9-result^post8 == 0), cost: 1
	New rule:
	l7 -> l0 : __const_99^0'=__const_99^post9, __disjvr_0^0'=__disjvr_0^post9, result^0'=result^post9, x^0'=x^post9, y^0'=y^post9, (0 == 0 /\ __const_99^0-__const_99^post9 == 0 /\ -result^post9+result^0 == 0 /\ -y^post9+y^0 == 0 /\ -x^post9+x^0 == 0 /\ -__disjvr_0^post9+__disjvr_0^0 == 0), cost: 1
	
		propagated equality y^post8 = y^post9
		
		propagated equality x^post8 = x^post9
		
		propagated equality __disjvr_0^post8 = __disjvr_0^post9
		
		propagated equality __const_99^post8 = __const_99^post9
		
		propagated equality result^post8 = result^post9
		
	Propagated Equalities

	Original rule:
	l7 -> l0 : __const_99^0'=__const_99^post9, __disjvr_0^0'=__disjvr_0^post9, result^0'=result^post9, x^0'=x^post9, y^0'=y^post9, (0 == 0 /\ __const_99^0-__const_99^post9 == 0 /\ -result^post9+result^0 == 0 /\ -y^post9+y^0 == 0 /\ -x^post9+x^0 == 0 /\ -__disjvr_0^post9+__disjvr_0^0 == 0), cost: 1
	New rule:
	l7 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	
		propagated equality __const_99^post9 = __const_99^0
		
		propagated equality result^post9 = result^0
		
		propagated equality y^post9 = y^0
		
		propagated equality x^post9 = x^0
		
		propagated equality __disjvr_0^post9 = __disjvr_0^0
		
	Simplified Guard

	Original rule:
	l7 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=x^0, y^0'=y^0, 0 == 0, cost: 1
	New rule:
	l7 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=x^0, y^0'=y^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=x^0, y^0'=y^0, T, cost: 1
	New rule:
	l7 -> l0 : T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^post7, __disjvr_0^0'=__disjvr_0^post7, result^0'=result^post7, x^0'=x^post7, y^0'=y^post7, (result^post6-result^post7 == 0 /\ y^post6-y^post7 == 0 /\ -1+y^post6-y^0 == 0 /\ __disjvr_0^post6-__disjvr_0^post7 == 0 /\ -x^post7+x^post6 == 0 /\ __const_99^0-x^0+x^post6 == 0 /\ 1+y^0 <= 0 /\ -1-y^0 <= 0 /\ -result^post6+result^0 == 0 /\ 1+x^0 <= 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post6 == 0 /\ -__const_99^post7+__const_99^post6 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^post7, __disjvr_0^0'=__disjvr_0^post7, result^0'=result^post7, x^0'=x^post7, y^0'=y^post7, (result^post6-result^post7 == 0 /\ y^post6-y^post7 == 0 /\ -1+y^post6-y^0 == 0 /\ __disjvr_0^post6-__disjvr_0^post7 == 0 /\ -x^post7+x^post6 == 0 /\ __const_99^0-x^0+x^post6 == 0 /\ 1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ -result^post6+result^0 == 0 /\ 1+x^0 <= 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post6 == 0 /\ -__const_99^post7+__const_99^post6 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^post7, __disjvr_0^0'=__disjvr_0^post7, result^0'=result^post7, x^0'=x^post7, y^0'=y^post7, (result^post6-result^post7 == 0 /\ y^post6-y^post7 == 0 /\ -1+y^post6-y^0 == 0 /\ __disjvr_0^post6-__disjvr_0^post7 == 0 /\ -x^post7+x^post6 == 0 /\ __const_99^0-x^0+x^post6 == 0 /\ 1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ -result^post6+result^0 == 0 /\ 1+x^0 <= 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post6 == 0 /\ -__const_99^post7+__const_99^post6 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^post6, __disjvr_0^0'=__disjvr_0^post6, result^0'=result^post6, x^0'=x^post6, y^0'=y^post6, (0 == 0 /\ -1+y^post6-y^0 == 0 /\ __const_99^0-x^0+x^post6 == 0 /\ 1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ -result^post6+result^0 == 0 /\ 1+x^0 <= 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post6 == 0), cost: 1
	
		propagated equality result^post7 = result^post6
		
		propagated equality y^post7 = y^post6
		
		propagated equality __disjvr_0^post7 = __disjvr_0^post6
		
		propagated equality x^post7 = x^post6
		
		propagated equality __const_99^post7 = __const_99^post6
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^post6, __disjvr_0^0'=__disjvr_0^post6, result^0'=result^post6, x^0'=x^post6, y^0'=y^post6, (0 == 0 /\ -1+y^post6-y^0 == 0 /\ __const_99^0-x^0+x^post6 == 0 /\ 1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ -result^post6+result^0 == 0 /\ 1+x^0 <= 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ __const_99^0-__const_99^post6 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=-__const_99^0+x^0, y^0'=1+y^0, (0 == 0 /\ 1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0), cost: 1
	
		propagated equality y^post6 = 1+y^0
		
		propagated equality x^post6 = -__const_99^0+x^0
		
		propagated equality result^post6 = result^0
		
		propagated equality __disjvr_0^post6 = __disjvr_0^0
		
		propagated equality __const_99^post6 = __const_99^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=-__const_99^0+x^0, y^0'=1+y^0, (0 == 0 /\ 1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=-__const_99^0+x^0, y^0'=1+y^0, (1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=-__const_99^0+x^0, y^0'=1+y^0, (1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=-__const_99^0+x^0, y^0'=1+y^0, (1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=-__const_99^0+x^0, y^0'=1+y^0, (1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : x^0'=-__const_99^0+x^0, y^0'=1+y^0, (1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^post5, __disjvr_0^0'=__disjvr_0^post5, result^0'=result^post5, x^0'=x^post5, y^0'=y^post5, (-1-y^post3+y^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ -y^post5+y^post4 == 0 /\ __const_99^0-__const_99^post2 == 0 /\ -__const_99^post3+__const_99^post2 == 0 /\ -result^post4+result^post3 == 0 /\ result^post4-result^post5 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -1-x^post3+x^post4 == 0 /\ -__const_99^post5+__const_99^post4 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -x^post3+x^post2 == 0 /\ result^post2-result^post3 == 0 /\ -y^post3+y^post2 == 0 /\ __const_99^post3-__const_99^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ -x^post5+x^post4 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ __disjvr_0^post4-__disjvr_0^post5 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^post4, __disjvr_0^0'=__disjvr_0^post4, result^0'=result^post4, x^0'=x^post4, y^0'=y^post4, (0 == 0 /\ -1-y^post3+y^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ __const_99^0-__const_99^post2 == 0 /\ -__const_99^post3+__const_99^post2 == 0 /\ -result^post4+result^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -1-x^post3+x^post4 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -x^post3+x^post2 == 0 /\ result^post2-result^post3 == 0 /\ -y^post3+y^post2 == 0 /\ __const_99^post3-__const_99^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0), cost: 1
	
		propagated equality y^post5 = y^post4
		
		propagated equality result^post5 = result^post4
		
		propagated equality __const_99^post5 = __const_99^post4
		
		propagated equality x^post5 = x^post4
		
		propagated equality __disjvr_0^post5 = __disjvr_0^post4
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^post4, __disjvr_0^0'=__disjvr_0^post4, result^0'=result^post4, x^0'=x^post4, y^0'=y^post4, (0 == 0 /\ -1-y^post3+y^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ __const_99^0-__const_99^post2 == 0 /\ -__const_99^post3+__const_99^post2 == 0 /\ -result^post4+result^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -1-x^post3+x^post4 == 0 /\ -__disjvr_0^post4+__disjvr_0^post3 == 0 /\ 1+x^0 <= 0 /\ -result^post2+result^0 == 0 /\ -x^post3+x^post2 == 0 /\ result^post2-result^post3 == 0 /\ -y^post3+y^post2 == 0 /\ __const_99^post3-__const_99^post4 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=1+x^0, y^0'=1+y^0, (0 == 0 /\ 1+x^0 <= 0), cost: 1
	
		propagated equality y^post3 = -1+y^post4
		
		propagated equality __disjvr_0^post2 = __disjvr_0^post3
		
		propagated equality __const_99^post2 = __const_99^0
		
		propagated equality __const_99^post3 = __const_99^0
		
		propagated equality result^post3 = result^post4
		
		propagated equality x^post3 = -1+x^post4
		
		propagated equality __disjvr_0^post3 = __disjvr_0^post4
		
		propagated equality result^post2 = result^0
		
		propagated equality x^post2 = -1+x^post4
		
		propagated equality result^post4 = result^0
		
		propagated equality y^post2 = -1+y^post4
		
		propagated equality __const_99^post4 = __const_99^0
		
		propagated equality __disjvr_0^post4 = __disjvr_0^0
		
		propagated equality y^post4 = 1+y^0
		
		propagated equality x^post4 = 1+x^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=1+x^0, y^0'=1+y^0, (0 == 0 /\ 1+x^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=1+x^0, y^0'=1+y^0, 1+x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : __const_99^0'=__const_99^0, __disjvr_0^0'=__disjvr_0^0, result^0'=result^0, x^0'=1+x^0, y^0'=1+y^0, 1+x^0 <= 0, cost: 1
	New rule:
	l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, 1+x^0 <= 0, cost: 1

Step with 15

	Trace

	15[T]
	
	Blocked

	[{}, {}]

Step with 14

	Trace

	15[T], 14[(-x^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	15[T]
	
	Blocked

	[{}, {14[T]}]

Step with 16

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 17

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 17[(1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T]}, {16[T]}, {}]

Accelerate

Start location: l7
Program variables: __const_99^0 result^0 x^0 y^0
  14: l0 -> l1 : result^0'=result^post1, -x^0 <= 0, cost: 1
  16: l0 -> l0 : x^0'=-__const_99^0+x^0, y^0'=1+y^0, (1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0), cost: 1
  17: l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, 1+x^0 <= 0, cost: 1
  18: l0 -> l0 : x^0'=x^0+n, y^0'=n+y^0, (-1+n >= 0 /\ -x^0-n >= 0), cost: 1
  15: l7 -> l0 : T, cost: 1

	Loop Acceleration

	Original rule:
	l0 -> l0 : x^0'=1+x^0, y^0'=1+y^0, (1+x^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : x^0'=x^0+n, y^0'=n+y^0, (-1+n >= 0 /\ -x^0-n >= 0), cost: 1

		-1-x^0 >= 0 [0]: montonic decrease yields -x^0-n >= 0
		
		-1-x^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1-x^0 >= 0)
		
		Replacement map: {-1-x^0 >= 0 -> -x^0-n >= 0}

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 18[(-1+n >= 0 /\ -x^0-n >= 0)]
	
	Blocked

	[{}, {14[T]}, {16[T]}, {17[T], 18[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 14

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 14[(-x^0 <= 0)]
	
	Blocked

	[{}, {14[T]}, {16[T]}, {17[T], 18[T]}, {}]

Backtrack

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 18[(-1+n >= 0 /\ -x^0-n >= 0)]
	
	Blocked

	[{}, {14[T]}, {16[T]}, {14[T], 17[T], 18[T]}]

Backtrack

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T]}, {16[T], 18[T]}]

Step with 14

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 14[(-x^0 <= 0)]
	
	Blocked

	[{}, {14[T]}, {16[T], 18[T]}, {}]

Backtrack

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T]}, {14[T], 16[T], 18[T]}]

Step with 17

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 17[(1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T]}, {14[T], 16[T], 18[T]}, {}]

Covered

	Trace

	15[T], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T]}, {14[T], 16[T], 17[T], 18[T]}]

Backtrack

	Trace

	15[T]
	
	Blocked

	[{}, {14[T], 16[T]}]

Step with 17

	Trace

	15[T], 17[(1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T]}, {}]

Covered

	Trace

	15[T]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}]

Step with 18

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {18[T]}]

Step with 14

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 14[(-x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {18[T]}, {}]

Backtrack

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}]

Step with 16

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 17

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 17[(1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {16[T]}, {}]

Covered

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {16[T], 17[T]}]

Step with 18

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 18[(-1+n >= 0 /\ -x^0-n >= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {16[T], 17[T]}, {18[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 14

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 14[(-x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {16[T], 17[T]}, {18[T]}, {}]

Backtrack

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 18[(-1+n >= 0 /\ -x^0-n >= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {16[T], 17[T]}, {14[T], 18[T]}]

Step with 17

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 17[(1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {16[T], 17[T]}, {14[T], 16[T], 18[T]}, {}]

Covered

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 18[(-1+n >= 0 /\ -x^0-n >= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {16[T], 17[T]}, {14[T], 16[T], 17[T], 18[T]}]

Backtrack

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {16[T], 17[T], 18[T]}]

Step with 14

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)], 14[(-x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {16[T], 17[T], 18[T]}, {}]

Backtrack

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 16[(1+y^0 <= 0 /\ 1+y^0 == 0 /\ -1-y^0 <= 0 /\ 1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 18[T]}, {14[T], 16[T], 17[T], 18[T]}]

Backtrack

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 16[T], 18[T]}]

Step with 17

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)], 17[(1+x^0 <= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 16[T], 18[T]}, {}]

Covered

	Trace

	15[T], 18[(-1+n >= 0 /\ -x^0-n >= 0)]
	
	Blocked

	[{}, {14[T], 16[T], 17[T]}, {14[T], 16[T], 17[T], 18[T]}]

Backtrack

	Trace

	15[T]
	
	Blocked

	[{}, {14[T], 16[T], 17[T], 18[T]}]

Backtrack

	Trace

	Blocked

	[{15[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
