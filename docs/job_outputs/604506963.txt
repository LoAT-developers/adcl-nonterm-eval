unknown

Initial ITS

Start location: l3
Program variables: i^0 x^0 y^0 z^0
   0: l0 -> l1 : i^0'=i^post1, x^0'=x^post1, y^0'=y^post1, z^0'=z^post1, (-1-i^0+i^post1 == 0 /\ 1-x^0 <= 0 /\ -y^post1+y^0 == 0 /\ -i^0+z^post1-y^0 == 0 /\ z^post1-x^0+x^post1 == 0), cost: 1
   1: l1 -> l0 : i^0'=i^post2, x^0'=x^post2, y^0'=y^post2, z^0'=z^post2, (-x^post2+x^0 == 0 /\ -z^post2+z^0 == 0 /\ -y^post2+y^0 == 0 /\ i^0-i^post2 == 0), cost: 1
   2: l2 -> l0 : i^0'=i^post3, x^0'=x^post3, y^0'=y^post3, z^0'=z^post3, (0 == 0 /\ i^post3 == 0 /\ -x^post3+x^0 == 0 /\ z^0-z^post3 == 0), cost: 1
   3: l3 -> l2 : i^0'=i^post4, x^0'=x^post4, y^0'=y^post4, z^0'=z^post4, (-x^post4+x^0 == 0 /\ -z^post4+z^0 == 0 /\ -i^post4+i^0 == 0 /\ y^0-y^post4 == 0), cost: 1

Chained Linear Paths

Start location: l3
Program variables: i^0 x^0 y^0 z^0
   5: l0 -> l0 : i^0'=i^post2, x^0'=x^post2, y^0'=y^post2, z^0'=z^post2, (i^post1-i^post2 == 0 /\ -1-i^0+i^post1 == 0 /\ 1-x^0 <= 0 /\ -y^post1+y^0 == 0 /\ -i^0+z^post1-y^0 == 0 /\ z^post1-z^post2 == 0 /\ -x^post2+x^post1 == 0 /\ y^post1-y^post2 == 0 /\ z^post1-x^0+x^post1 == 0), cost: 1
   4: l3 -> l0 : i^0'=i^post3, x^0'=x^post3, y^0'=y^post3, z^0'=z^post3, (0 == 0 /\ i^post3 == 0 /\ -x^post4+x^0 == 0 /\ -z^post4+z^0 == 0 /\ z^post4-z^post3 == 0 /\ -x^post3+x^post4 == 0 /\ -i^post4+i^0 == 0 /\ y^0-y^post4 == 0), cost: 1

	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l3 -> l2 : i^0'=i^post4, x^0'=x^post4, y^0'=y^post4, z^0'=z^post4, (-x^post4+x^0 == 0 /\ -z^post4+z^0 == 0 /\ -i^post4+i^0 == 0 /\ y^0-y^post4 == 0), cost: 1
	Second rule:
	l2 -> l0 : i^0'=i^post3, x^0'=x^post3, y^0'=y^post3, z^0'=z^post3, (0 == 0 /\ i^post3 == 0 /\ -x^post3+x^0 == 0 /\ z^0-z^post3 == 0), cost: 1
	New rule:
	l3 -> l0 : i^0'=i^post3, x^0'=x^post3, y^0'=y^post3, z^0'=z^post3, (0 == 0 /\ i^post3 == 0 /\ -x^post4+x^0 == 0 /\ -z^post4+z^0 == 0 /\ z^post4-z^post3 == 0 /\ -x^post3+x^post4 == 0 /\ -i^post4+i^0 == 0 /\ y^0-y^post4 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location l1 by chaining:

	Applied chaining

	First rule:
	l0 -> l1 : i^0'=i^post1, x^0'=x^post1, y^0'=y^post1, z^0'=z^post1, (-1-i^0+i^post1 == 0 /\ 1-x^0 <= 0 /\ -y^post1+y^0 == 0 /\ -i^0+z^post1-y^0 == 0 /\ z^post1-x^0+x^post1 == 0), cost: 1
	Second rule:
	l1 -> l0 : i^0'=i^post2, x^0'=x^post2, y^0'=y^post2, z^0'=z^post2, (-x^post2+x^0 == 0 /\ -z^post2+z^0 == 0 /\ -y^post2+y^0 == 0 /\ i^0-i^post2 == 0), cost: 1
	New rule:
	l0 -> l0 : i^0'=i^post2, x^0'=x^post2, y^0'=y^post2, z^0'=z^post2, (i^post1-i^post2 == 0 /\ -1-i^0+i^post1 == 0 /\ 1-x^0 <= 0 /\ -y^post1+y^0 == 0 /\ -i^0+z^post1-y^0 == 0 /\ z^post1-z^post2 == 0 /\ -x^post2+x^post1 == 0 /\ y^post1-y^post2 == 0 /\ z^post1-x^0+x^post1 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 1

Simplified Transitions

Start location: l3
Program variables: i^0 x^0 y^0 z^0
   7: l0 -> l0 : i^0'=1+i^0, x^0'=-i^0-y^0+x^0, z^0'=i^0+y^0, 1-x^0 <= 0, cost: 1
   6: l3 -> l0 : i^0'=0, y^0'=y^post3, T, cost: 1

	Propagated Equalities

	Original rule:
	l3 -> l0 : i^0'=i^post3, x^0'=x^post3, y^0'=y^post3, z^0'=z^post3, (0 == 0 /\ i^post3 == 0 /\ -x^post4+x^0 == 0 /\ -z^post4+z^0 == 0 /\ z^post4-z^post3 == 0 /\ -x^post3+x^post4 == 0 /\ -i^post4+i^0 == 0 /\ y^0-y^post4 == 0), cost: 1
	New rule:
	l3 -> l0 : i^0'=0, x^0'=x^post4, y^0'=y^post3, z^0'=z^post4, (0 == 0 /\ -x^post4+x^0 == 0 /\ -z^post4+z^0 == 0 /\ -i^post4+i^0 == 0 /\ y^0-y^post4 == 0), cost: 1
	
		propagated equality i^post3 = 0
		
		propagated equality z^post3 = z^post4
		
		propagated equality x^post3 = x^post4
		
	Propagated Equalities

	Original rule:
	l3 -> l0 : i^0'=0, x^0'=x^post4, y^0'=y^post3, z^0'=z^post4, (0 == 0 /\ -x^post4+x^0 == 0 /\ -z^post4+z^0 == 0 /\ -i^post4+i^0 == 0 /\ y^0-y^post4 == 0), cost: 1
	New rule:
	l3 -> l0 : i^0'=0, x^0'=x^0, y^0'=y^post3, z^0'=z^0, 0 == 0, cost: 1
	
		propagated equality x^post4 = x^0
		
		propagated equality z^post4 = z^0
		
		propagated equality i^post4 = i^0
		
		propagated equality y^post4 = y^0
		
	Simplified Guard

	Original rule:
	l3 -> l0 : i^0'=0, x^0'=x^0, y^0'=y^post3, z^0'=z^0, 0 == 0, cost: 1
	New rule:
	l3 -> l0 : i^0'=0, x^0'=x^0, y^0'=y^post3, z^0'=z^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l0 : i^0'=0, x^0'=x^0, y^0'=y^post3, z^0'=z^0, T, cost: 1
	New rule:
	l3 -> l0 : i^0'=0, y^0'=y^post3, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : i^0'=i^post2, x^0'=x^post2, y^0'=y^post2, z^0'=z^post2, (i^post1-i^post2 == 0 /\ -1-i^0+i^post1 == 0 /\ 1-x^0 <= 0 /\ -y^post1+y^0 == 0 /\ -i^0+z^post1-y^0 == 0 /\ z^post1-z^post2 == 0 /\ -x^post2+x^post1 == 0 /\ y^post1-y^post2 == 0 /\ z^post1-x^0+x^post1 == 0), cost: 1
	New rule:
	l0 -> l0 : i^0'=i^post1, x^0'=x^post1, y^0'=y^post1, z^0'=z^post1, (0 == 0 /\ -1-i^0+i^post1 == 0 /\ 1-x^0 <= 0 /\ -y^post1+y^0 == 0 /\ -i^0+z^post1-y^0 == 0 /\ z^post1-x^0+x^post1 == 0), cost: 1
	
		propagated equality i^post2 = i^post1
		
		propagated equality z^post2 = z^post1
		
		propagated equality x^post2 = x^post1
		
		propagated equality y^post2 = y^post1
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : i^0'=i^post1, x^0'=x^post1, y^0'=y^post1, z^0'=z^post1, (0 == 0 /\ -1-i^0+i^post1 == 0 /\ 1-x^0 <= 0 /\ -y^post1+y^0 == 0 /\ -i^0+z^post1-y^0 == 0 /\ z^post1-x^0+x^post1 == 0), cost: 1
	New rule:
	l0 -> l0 : i^0'=1+i^0, x^0'=-i^0-y^0+x^0, y^0'=y^0, z^0'=i^0+y^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	
		propagated equality i^post1 = 1+i^0
		
		propagated equality y^post1 = y^0
		
		propagated equality z^post1 = i^0+y^0
		
		propagated equality x^post1 = -i^0-y^0+x^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : i^0'=1+i^0, x^0'=-i^0-y^0+x^0, y^0'=y^0, z^0'=i^0+y^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : i^0'=1+i^0, x^0'=-i^0-y^0+x^0, y^0'=y^0, z^0'=i^0+y^0, 1-x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : i^0'=1+i^0, x^0'=-i^0-y^0+x^0, y^0'=y^0, z^0'=i^0+y^0, 1-x^0 <= 0, cost: 1
	New rule:
	l0 -> l0 : i^0'=1+i^0, x^0'=-i^0-y^0+x^0, z^0'=i^0+y^0, 1-x^0 <= 0, cost: 1

Step with 6

	Trace

	6[T]
	
	Blocked

	[{}, {}]

Step with 7

	Trace

	6[T], 7[(1-x^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Accelerate

Start location: l3
Program variables: i^0 x^0 y^0 z^0
   7: l0 -> l0 : i^0'=1+i^0, x^0'=-i^0-y^0+x^0, z^0'=i^0+y^0, 1-x^0 <= 0, cost: 1
   8: l0 -> l0 : i^0'=n+i^0, x^0'=-n*i^0+1/2*n-1/2*n^2-n*y^0+x^0, z^0'=-1+n+i^0+y^0, (-3/2+1/2*n-(-1+n)*y^0-i^0*(-1+n)+x^0-1/2*(-1+n)^2 >= 0 /\ -1+x^0 >= 0 /\ -1+n >= 0), cost: 1
   6: l3 -> l0 : i^0'=0, y^0'=y^post3, T, cost: 1

	Loop Acceleration

	Original rule:
	l0 -> l0 : i^0'=1+i^0, x^0'=-i^0-y^0+x^0, z^0'=i^0+y^0, (1-x^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : i^0'=n+i^0, x^0'=-n*i^0+1/2*n-1/2*n^2-n*y^0+x^0, z^0'=-1+n+i^0+y^0, (-3/2+1/2*n-(-1+n)*y^0-i^0*(-1+n)+x^0-1/2*(-1+n)^2 >= 0 /\ -1+x^0 >= 0 /\ -1+n >= 0), cost: 1

		-1+x^0 >= 0 [0]: eventual decrease yields (-3/2+1/2*n-(-1+n)*y^0-i^0*(-1+n)+x^0-1/2*(-1+n)^2 >= 0 /\ -1+x^0 >= 0)
		
		Replacement map: {-1+x^0 >= 0 -> (-3/2+1/2*n-(-1+n)*y^0-i^0*(-1+n)+x^0-1/2*(-1+n)^2 >= 0 /\ -1+x^0 >= 0)}

	Trace

	6[T], 8[(-3/2+1/2*n-(-1+n)*y^0-i^0*(-1+n)+x^0-1/2*(-1+n)^2 >= 0 /\ -1+x^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {7[T], 8[T]}]

Backtrack

	Trace

	6[T]
	
	Blocked

	[{}, {8[T]}]

Step with 7

	Trace

	6[T], 7[(1-x^0 <= 0)]
	
	Blocked

	[{}, {8[T]}, {}]

Covered

	Trace

	6[T]
	
	Blocked

	[{}, {7[T], 8[T]}]

Backtrack

	Trace

	Blocked

	[{6[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
