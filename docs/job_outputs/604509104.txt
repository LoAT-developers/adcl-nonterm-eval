YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (arg1 > 0) /\ (0 = arg2), par{arg1 -> ~(1), arg2 -> 0, arg3 -> 0, arg4 -> 0}>
<l1, l2, (undef9 > ~(1)) /\ (arg2 > 0) /\ (arg1 > 0), par{arg1 -> ((3 * undef9) - 1), arg2 -> (3 * undef9), arg3 -> arg2, arg4 -> 1}>
<l2, l2, (arg2 > 0) /\ (arg4 >= arg3) /\ (arg3 > ~(1)), par{arg1 -> (arg1 - 1), arg2 -> arg1}>
<l2, l2, (arg2 > 0) /\ (arg3 > ~(1)) /\ (arg4 > ~(1)) /\ (arg4 < arg3), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg4 -> (arg4 + 1)}>
<l3, l1, true, par{arg1 -> undef18, arg2 -> undef19, arg3 -> undef20, arg4 -> undef21}>

Fresh variables:
undef9, undef18, undef19, undef20, undef21, 

Undef variables:
undef9, undef18, undef19, undef20, undef21, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (undef18 > 0) /\ (0 = undef19), par{arg1 -> ~(1), arg2 -> 0, arg3 -> 0, arg4 -> 0}>
<l0, l2, (undef9 > ~(1)) /\ (undef19 > 0) /\ (undef18 > 0), par{arg1 -> ((3 * undef9) - 1), arg2 -> (3 * undef9), arg3 -> undef19, arg4 -> 1}>
<l2, l2, (arg2 > 0) /\ (arg4 >= arg3) /\ (arg3 > ~(1)), par{arg1 -> (arg1 - 1), arg2 -> arg1}>
<l2, l2, (arg2 > 0) /\ (arg3 > ~(1)) /\ (arg4 > ~(1)) /\ (arg4 < arg3), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg4 -> (arg4 + 1)}>

Fresh variables:
undef9, undef18, undef19, undef20, undef21, 

Undef variables:
undef9, undef18, undef19, undef20, undef21, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, rest remain the same}>
<l2, l2, 0 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 /\ 1 + arg4 <= arg3, {arg1 -> -1 + arg1, arg2 -> arg1, arg4 -> 1 + arg4, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef18 /\ undef19 = 0, {arg1 -> -1, arg2 -> 0, arg3 -> 0, arg4 -> 0, rest remain the same}>
<l0, l2, 0 <= undef9 /\ 1 <= undef18 /\ 1 <= undef19, {arg1 -> -1 + 3*undef9, arg2 -> 3*undef9, arg3 -> undef19, arg4 -> 1, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.005454

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001269s
[33mRanking function: [36marg3 - arg4[0m
New Graphs: 
Transitions:
<l2, l2, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000478s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001445s
Trying to remove transition: <l2, l2, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004814s
Time used: 0.004722
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007483s
Time used: 0.007189

LOG: SAT solveNonLinear - Elapsed time: 0.007483s
Cost: 0; Total time: 0.007189
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: arg2 <= 1 + arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2 /\ arg2 <= 1 + arg1, {arg1 -> -1 + arg1, arg2 -> arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= arg3 /\ 0 <= arg4 /\ 1 <= arg2 /\ 1 + arg4 <= arg3 /\ arg2 <= 1 + arg1, {arg1 -> -1 + arg1, arg2 -> arg1, arg4 -> 1 + arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg3 <= arg4 /\ 0 <= arg3 /\ 1 <= arg2 /\ arg2 <= 1 + arg1, {arg1 -> -1 + arg1, arg2 -> arg1, rest remain the same}>
[33mRanking function: [36marg1[0m
New Graphs: 
INVARIANTS: 
2: arg2 <= 1 + arg1 , 
Quasi-INVARIANTS to narrow Graph: 
2: 
[32mProgram Terminates[0m
