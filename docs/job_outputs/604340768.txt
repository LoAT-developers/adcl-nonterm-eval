YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l9, (main_x = 0)>
<l2, l3, not((main_x = 0))>
<l3, l4, (main_x > 0)>
<l3, l6, not((main_x > 0))>
<l4, l5, true, seq{main_x -> (main_x - 1)}>
<l5, l8, true>
<l6, l7, true, seq{main_x -> (main_x + 1)}>
<l7, l8, true>
<l8, l2, true>
<l9, l10, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l11, true, seq{main__func_return_ -> 0}>
<l11, l12, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l12, l1, true, seq{main_x -> varCall_1}>
<l1, l2, true>
<l2, l9, (main_x = 0)>
<l2, l3, not((main_x = 0))>
<l3, l4, (main_x > 0)>
<l3, l6, not((main_x > 0))>
<l4, l5, true, seq{main_x -> (main_x - 1)}>
<l5, l8, true>
<l6, l7, true, seq{main_x -> (main_x + 1)}>
<l7, l8, true>
<l8, l2, true>
<l9, l10, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
10, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [3 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 15, col: 6>
main | function | [integer, ()] | <line: 13, col: 1>
x | local variable | integer | <line: 14, col: 5> | <line: 15, col: 2> <line: 16, col: 9> <line: 17, col: 7> <line: 18, col: 4> <line: 18, col: 8> <line: 20, col: 4> <line: 20, col: 8>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef2)>
<l2, l10, (main_x = 0)>
<l2, l2, (main_x < 0) /\ not((main_x > 0)), par{main_x -> (main_x + 1)}>
<l2, l2, (main_x > 0) /\ (main_x > 0), par{main_x -> (main_x - 1)}>

Fresh variables:
undef2, 

Undef variables:
undef2, 

Abstraction variables:

Exit nodes:
10, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + main_x <= 0, {main_x -> 1 + main_x, rest remain the same}>
<l2, l2, 1 <= main_x, {main_x -> -1 + main_x, rest remain the same}>
Variables:
main_x

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef2, {all remain the same}>

Graph 2
<l2, l10, main_x = 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 10 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002101

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000740s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004658s
[4471 : 4473]
[4471 : 4474]
Successful child: 4474
[33mRanking function: [36mmain_x
[33mRanking function and negation of Quasi-Invariant applied[0m
New Graphs: 
Transitions:
<l2, l2, 1 + main_x <= 0, {main_x -> 1 + main_x, rest remain the same}>
Variables:
main_x
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000978s
[33mRanking function: [36m-1 - main_x[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l10}...
No cycles found.

[32mProgram Terminates[0m
