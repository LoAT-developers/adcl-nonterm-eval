NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
   0: f1_0_main_Load -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (-arg2p1 == 0 /\ 1+arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
   1: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (1+x7 > 0 /\ arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ 1+arg2-arg2p2 == 0 /\ arg1p2-arg1 <= 0 /\ x3 > 0 /\ -arg2+x7 > 0 /\ arg1 > 0), cost: 1
   2: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (1+x12 > 0 /\ x8 > 0 /\ -13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ 1+arg2-arg2p3 == 0 /\ -arg2+x12 > 0 /\ arg1 > 0), cost: 1
   3: f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 1-arg2p4 == 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
   4: f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ -arg3p5 == 0 /\ arg2-arg2p5 == 0 /\ arg1p5 > 0 /\ arg2-x17 < 0 /\ arg1 > 0), cost: 1
   6: f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-arg2p7 == 0 /\ arg1p7-arg1 <= 0 /\ arg2-x26 >= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
   5: f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (-12+arg3 > 0 /\ 1+arg2-arg2p6 == 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
   7: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg3-arg4p8 == 0 /\ arg2 > 0 /\ arg3-x36 < 0 /\ -arg2p8+arg2 == 0 /\ -1-x30+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ -x30+arg2 < 0 /\ 1+arg3p8 > 0 /\ -arg3+x37 > 0 /\ arg1p8 > 0 /\ 1+x37 > 0 /\ arg1 > 0), cost: 1
   8: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ -arg3+x45 > 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -1-x38+arg2 < 0 /\ 1+x45 > 0 /\ -x38+arg2 < 0 /\ arg3-arg4p9 == 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg2-arg2p9 == 0 /\ arg3p9-arg1 <= 0 /\ arg3-x44 < 0 /\ arg1 > 0), cost: 1
   9: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, (-1+arg2-arg5p10 == 0 /\ 1+arg2p10 > 0 /\ arg2 > 0 /\ 1+x53 > 0 /\ arg2-arg1p10 == 0 /\ -1+arg2-x46 < 0 /\ -arg3+x53 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2-x46 < 0 /\ -13+arg3 < 0 /\ arg3-x52 >= 0 /\ -arg3p10+arg3 == 0 /\ arg1 > 0), cost: 1
  10: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (arg3-arg3p11 == 0 /\ x61-arg3 > 0 /\ arg2p11-arg1 <= 0 /\ arg2-x54 < 0 /\ arg2 > 0 /\ arg3-x60 >= 0 /\ -1+arg2-arg5p11 == 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ 1+x61 > 0 /\ -1+arg2-x54 < 0 /\ arg1 > 0 /\ arg2-arg1p11 == 0), cost: 1
  11: f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (-arg3p12 == 0 /\ arg1p12-arg1 <= 0 /\ arg2-arg2p12 == 0 /\ arg1p12 > 0 /\ -x62+arg2 < 0 /\ arg1 > 0), cost: 1
  19: f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (1+x122 > 0 /\ arg1p20 > 0 /\ 12-arg2p20 == 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ -1-arg3p20+x122 == 0 /\ arg1 > 0), cost: 1
  20: f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (1+x132 > 0 /\ arg3 > 0 /\ arg1p21 > 0 /\ arg2-arg2p21 == 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ 1+arg4-arg3p21 == 0 /\ -arg4+x132 > 0 /\ arg1 > 0), cost: 1
  15: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (-arg3+x90+x91 > 0 /\ 1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ arg5-x80 < 0 /\ -arg5p16+arg4 == 0 /\ 1+arg3 > 0 /\ -arg2p16+arg1 == 0 /\ 1+x90 > 0 /\ arg3-arg4p16 == 0 /\ x88-arg6p16+x89 == 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
  16: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ 1+x102 > 0 /\ arg2 > 0 /\ arg3-x103-x102 < 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ -arg5p17+arg4 == 0 /\ -arg2p17+arg1 == 0 /\ arg3-arg4p17 == 0 /\ arg3p17 > 0 /\ x100-arg6p17+x101 == 0 /\ -8+arg1 < 0 /\ arg5-x92 < 0), cost: 1
  12: f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-12+arg3 > 0 /\ arg1p13 > 0 /\ 1+arg2-arg2p13 == 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
  13: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (1+arg3-arg3p14 == 0 /\ -12+arg3 < 0 /\ arg1p14 > 0 /\ arg2-arg2p14 == 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  14: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 13-arg3p15 == 0 /\ arg2-arg2p15 == 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
  17: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg2-arg2p18 == 0 /\ arg6-arg5 >= 0 /\ -arg4p18+arg4 == 0 /\ arg1 > 0), cost: 1
  18: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg4-arg4p19 == 0 /\ arg2-arg2p19 == 0 /\ arg1 > 0), cost: 1
  21: f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ 1-arg3p22+arg4 == 0 /\ arg2-arg2p22 == 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ x139-arg4 > 0 /\ arg1 > 0 /\ 1+x139 > 0), cost: 1
  22: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3-x140 < 0 /\ 1+x146 > 0 /\ arg3 > 0 /\ arg1p23 > 0 /\ -arg2+x145 > 0 /\ arg2-arg2p23 == 0 /\ 1+x145 > 0 /\ arg1p23-arg1 <= 0 /\ -1+arg3-arg3p23 == 0 /\ -1+arg3-x140 < 0 /\ -arg2+x146 > 0 /\ arg1 > 0), cost: 1
  23: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (-1-x147+arg3 < 0 /\ 1+x153 > 0 /\ arg3 > 0 /\ 1+x154 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -arg2+x154 > 0 /\ -1+arg3-arg3p24 == 0 /\ x156-x155 > 0 /\ -x152+arg2-arg2p24 == 0 /\ arg1p24-arg1 <= 0 /\ -x147+arg3 < 0 /\ -arg2+x153 > 0 /\ arg1 > 0), cost: 1
  24: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ -arg2+x113 > 0 /\ arg3 > 0 /\ 1+x126 > 0 /\ -1-x104+arg3 < 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -x104+arg3 < 0 /\ -arg2+x126 > 0 /\ arg1p25-arg1 <= 0 /\ x133-x157 < 0 /\ 1+x113 > 0 /\ arg2-arg2p25-x76 == 0 /\ -1+arg3-arg3p25 == 0 /\ arg1 > 0), cost: 1
  25: __init -> f1_0_main_Load : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, arg6'=arg6p26, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
   1: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (1+x7 > 0 /\ arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ 1+arg2-arg2p2 == 0 /\ arg1p2-arg1 <= 0 /\ x3 > 0 /\ -arg2+x7 > 0 /\ arg1 > 0), cost: 1
   2: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (1+x12 > 0 /\ x8 > 0 /\ -13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ 1+arg2-arg2p3 == 0 /\ -arg2+x12 > 0 /\ arg1 > 0), cost: 1
   3: f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 1-arg2p4 == 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
   4: f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ -arg3p5 == 0 /\ arg2-arg2p5 == 0 /\ arg1p5 > 0 /\ arg2-x17 < 0 /\ arg1 > 0), cost: 1
   6: f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-arg2p7 == 0 /\ arg1p7-arg1 <= 0 /\ arg2-x26 >= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
   5: f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (-12+arg3 > 0 /\ 1+arg2-arg2p6 == 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
   7: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg3-arg4p8 == 0 /\ arg2 > 0 /\ arg3-x36 < 0 /\ -arg2p8+arg2 == 0 /\ -1-x30+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ -x30+arg2 < 0 /\ 1+arg3p8 > 0 /\ -arg3+x37 > 0 /\ arg1p8 > 0 /\ 1+x37 > 0 /\ arg1 > 0), cost: 1
   8: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ -arg3+x45 > 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -1-x38+arg2 < 0 /\ 1+x45 > 0 /\ -x38+arg2 < 0 /\ arg3-arg4p9 == 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg2-arg2p9 == 0 /\ arg3p9-arg1 <= 0 /\ arg3-x44 < 0 /\ arg1 > 0), cost: 1
   9: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, (-1+arg2-arg5p10 == 0 /\ 1+arg2p10 > 0 /\ arg2 > 0 /\ 1+x53 > 0 /\ arg2-arg1p10 == 0 /\ -1+arg2-x46 < 0 /\ -arg3+x53 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2-x46 < 0 /\ -13+arg3 < 0 /\ arg3-x52 >= 0 /\ -arg3p10+arg3 == 0 /\ arg1 > 0), cost: 1
  10: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (arg3-arg3p11 == 0 /\ x61-arg3 > 0 /\ arg2p11-arg1 <= 0 /\ arg2-x54 < 0 /\ arg2 > 0 /\ arg3-x60 >= 0 /\ -1+arg2-arg5p11 == 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ 1+x61 > 0 /\ -1+arg2-x54 < 0 /\ arg1 > 0 /\ arg2-arg1p11 == 0), cost: 1
  11: f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (-arg3p12 == 0 /\ arg1p12-arg1 <= 0 /\ arg2-arg2p12 == 0 /\ arg1p12 > 0 /\ -x62+arg2 < 0 /\ arg1 > 0), cost: 1
  19: f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (1+x122 > 0 /\ arg1p20 > 0 /\ 12-arg2p20 == 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ -1-arg3p20+x122 == 0 /\ arg1 > 0), cost: 1
  20: f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (1+x132 > 0 /\ arg3 > 0 /\ arg1p21 > 0 /\ arg2-arg2p21 == 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ 1+arg4-arg3p21 == 0 /\ -arg4+x132 > 0 /\ arg1 > 0), cost: 1
  15: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (-arg3+x90+x91 > 0 /\ 1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ arg5-x80 < 0 /\ -arg5p16+arg4 == 0 /\ 1+arg3 > 0 /\ -arg2p16+arg1 == 0 /\ 1+x90 > 0 /\ arg3-arg4p16 == 0 /\ x88-arg6p16+x89 == 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
  16: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ 1+x102 > 0 /\ arg2 > 0 /\ arg3-x103-x102 < 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ -arg5p17+arg4 == 0 /\ -arg2p17+arg1 == 0 /\ arg3-arg4p17 == 0 /\ arg3p17 > 0 /\ x100-arg6p17+x101 == 0 /\ -8+arg1 < 0 /\ arg5-x92 < 0), cost: 1
  12: f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-12+arg3 > 0 /\ arg1p13 > 0 /\ 1+arg2-arg2p13 == 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
  13: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (1+arg3-arg3p14 == 0 /\ -12+arg3 < 0 /\ arg1p14 > 0 /\ arg2-arg2p14 == 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  14: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 13-arg3p15 == 0 /\ arg2-arg2p15 == 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
  17: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg2-arg2p18 == 0 /\ arg6-arg5 >= 0 /\ -arg4p18+arg4 == 0 /\ arg1 > 0), cost: 1
  18: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg4-arg4p19 == 0 /\ arg2-arg2p19 == 0 /\ arg1 > 0), cost: 1
  21: f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ 1-arg3p22+arg4 == 0 /\ arg2-arg2p22 == 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ x139-arg4 > 0 /\ arg1 > 0 /\ 1+x139 > 0), cost: 1
  22: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3-x140 < 0 /\ 1+x146 > 0 /\ arg3 > 0 /\ arg1p23 > 0 /\ -arg2+x145 > 0 /\ arg2-arg2p23 == 0 /\ 1+x145 > 0 /\ arg1p23-arg1 <= 0 /\ -1+arg3-arg3p23 == 0 /\ -1+arg3-x140 < 0 /\ -arg2+x146 > 0 /\ arg1 > 0), cost: 1
  23: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (-1-x147+arg3 < 0 /\ 1+x153 > 0 /\ arg3 > 0 /\ 1+x154 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -arg2+x154 > 0 /\ -1+arg3-arg3p24 == 0 /\ x156-x155 > 0 /\ -x152+arg2-arg2p24 == 0 /\ arg1p24-arg1 <= 0 /\ -x147+arg3 < 0 /\ -arg2+x153 > 0 /\ arg1 > 0), cost: 1
  24: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ -arg2+x113 > 0 /\ arg3 > 0 /\ 1+x126 > 0 /\ -1-x104+arg3 < 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -x104+arg3 < 0 /\ -arg2+x126 > 0 /\ arg1p25-arg1 <= 0 /\ x133-x157 < 0 /\ 1+x113 > 0 /\ arg2-arg2p25-x76 == 0 /\ -1+arg3-arg3p25 == 0 /\ arg1 > 0), cost: 1
  26: __init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p26 > 0 /\ -arg2p1 == 0 /\ 1+arg2p26 > 0 /\ -arg1p26+arg1p1 <= 0 /\ arg1p1 > 0), cost: 1

	Eliminating location f1_0_main_Load by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_Load : arg1'=arg1p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, arg6'=arg6p26, T, cost: 1
	Second rule:
	f1_0_main_Load -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (-arg2p1 == 0 /\ 1+arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	New rule:
	__init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p26 > 0 /\ -arg2p1 == 0 /\ 1+arg2p26 > 0 /\ -arg1p26+arg1p1 <= 0 /\ arg1p1 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 25

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  27: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ arg1 > 0), cost: 1
  28: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ arg1 > 0), cost: 1
  29: f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=1, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
  30: f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
  32: f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
  31: f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (-12+arg3 > 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
  33: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ 1+arg3p8 > 0 /\ arg1p8 > 0 /\ arg1 > 0), cost: 1
  34: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg1 > 0), cost: 1
  35: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  36: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (arg2p11-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  37: f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
  45: f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=12, arg3'=-1+x122, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (1+x122 > 0 /\ arg1p20 > 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ arg1 > 0), cost: 1
  46: f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ arg1 > 0), cost: 1
  41: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
  42: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0), cost: 1
  38: f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-12+arg3 > 0 /\ arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
  39: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  40: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
  43: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg3'=arg3p18, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  44: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg3'=arg3p19, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
  47: f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ arg1 > 0), cost: 1
  48: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3 > 0 /\ arg1p23 > 0 /\ arg1p23-arg1 <= 0 /\ arg1 > 0), cost: 1
  49: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (arg3 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p24-arg1 <= 0 /\ arg1 > 0), cost: 1
  50: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ arg3 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p25-arg1 <= 0 /\ arg1 > 0), cost: 1
  51: __init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p1 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (1+x7 > 0 /\ arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ 1+arg2-arg2p2 == 0 /\ arg1p2-arg1 <= 0 /\ x3 > 0 /\ -arg2+x7 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (0 == 0 /\ 1+x7 > 0 /\ arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ x3 > 0 /\ -arg2+x7 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p2 = 1+arg2
		
	Simplified Guard

	Original rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (0 == 0 /\ 1+x7 > 0 /\ arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ x3 > 0 /\ -arg2+x7 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (1+x7 > 0 /\ arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ x3 > 0 /\ -arg2+x7 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (1+x7 > 0 /\ arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ x3 > 0 /\ -arg2+x7 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (1+x12 > 0 /\ x8 > 0 /\ -13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ 1+arg2-arg2p3 == 0 /\ -arg2+x12 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (0 == 0 /\ 1+x12 > 0 /\ x8 > 0 /\ -13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ -arg2+x12 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p3 = 1+arg2
		
	Simplified Guard

	Original rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (0 == 0 /\ 1+x12 > 0 /\ x8 > 0 /\ -13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ -arg2+x12 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (1+x12 > 0 /\ x8 > 0 /\ -13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ -arg2+x12 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (1+x12 > 0 /\ x8 > 0 /\ -13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ -arg2+x12 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 1-arg2p4 == 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=1, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (0 == 0 /\ arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p4 = 1
		
	Simplified Guard

	Original rule:
	f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=1, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (0 == 0 /\ arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=1, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ -arg3p5 == 0 /\ arg2-arg2p5 == 0 /\ arg1p5 > 0 /\ arg2-x17 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (0 == 0 /\ arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg2-x17 < 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p5 = 0
		
		propagated equality arg2p5 = arg2
		
	Simplified Guard

	Original rule:
	f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (0 == 0 /\ arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg2-x17 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg2-x17 < 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg2-x17 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (-12+arg3 > 0 /\ 1+arg2-arg2p6 == 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (0 == 0 /\ -12+arg3 > 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p6 = 1+arg2
		
	Simplified Guard

	Original rule:
	f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (0 == 0 /\ -12+arg3 > 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (-12+arg3 > 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-arg2p7 == 0 /\ arg1p7-arg1 <= 0 /\ arg2-x26 >= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (0 == 0 /\ arg1p7-arg1 <= 0 /\ arg2-x26 >= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p7 = 0
		
	Simplified Guard

	Original rule:
	f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (0 == 0 /\ arg1p7-arg1 <= 0 /\ arg2-x26 >= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg1p7-arg1 <= 0 /\ arg2-x26 >= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg1p7-arg1 <= 0 /\ arg2-x26 >= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg3-arg4p8 == 0 /\ arg2 > 0 /\ arg3-x36 < 0 /\ -arg2p8+arg2 == 0 /\ -1-x30+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ -x30+arg2 < 0 /\ 1+arg3p8 > 0 /\ -arg3+x37 > 0 /\ arg1p8 > 0 /\ 1+x37 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg2'=arg2, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (0 == 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0 /\ arg3-x36 < 0 /\ -1-x30+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ -x30+arg2 < 0 /\ 1+arg3p8 > 0 /\ -arg3+x37 > 0 /\ arg1p8 > 0 /\ 1+x37 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p8 = arg3
		
		propagated equality arg2p8 = arg2
		
	Simplified Guard

	Original rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg2'=arg2, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (0 == 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0 /\ arg3-x36 < 0 /\ -1-x30+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ -x30+arg2 < 0 /\ 1+arg3p8 > 0 /\ -arg3+x37 > 0 /\ arg1p8 > 0 /\ 1+x37 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg2'=arg2, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ arg3-x36 < 0 /\ -1-x30+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ -x30+arg2 < 0 /\ 1+arg3p8 > 0 /\ -arg3+x37 > 0 /\ arg1p8 > 0 /\ 1+x37 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg2'=arg2, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ arg3-x36 < 0 /\ -1-x30+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ -x30+arg2 < 0 /\ 1+arg3p8 > 0 /\ -arg3+x37 > 0 /\ arg1p8 > 0 /\ 1+x37 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg2'=arg2, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ 1+arg3p8 > 0 /\ arg1p8 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg2'=arg2, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ 1+arg3p8 > 0 /\ arg1p8 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ 1+arg3p8 > 0 /\ arg1p8 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ -arg3+x45 > 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -1-x38+arg2 < 0 /\ 1+x45 > 0 /\ -x38+arg2 < 0 /\ arg3-arg4p9 == 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg2-arg2p9 == 0 /\ arg3p9-arg1 <= 0 /\ arg3-x44 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg2'=arg2, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (0 == 0 /\ arg1p9-arg1 <= 0 /\ -arg3+x45 > 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -1-x38+arg2 < 0 /\ 1+x45 > 0 /\ -x38+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg3-x44 < 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p9 = arg3
		
		propagated equality arg2p9 = arg2
		
	Simplified Guard

	Original rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg2'=arg2, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (0 == 0 /\ arg1p9-arg1 <= 0 /\ -arg3+x45 > 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -1-x38+arg2 < 0 /\ 1+x45 > 0 /\ -x38+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg3-x44 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg2'=arg2, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ -arg3+x45 > 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -1-x38+arg2 < 0 /\ 1+x45 > 0 /\ -x38+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg3-x44 < 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg2'=arg2, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ -arg3+x45 > 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -1-x38+arg2 < 0 /\ 1+x45 > 0 /\ -x38+arg2 < 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg3-x44 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg2'=arg2, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg2'=arg2, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, (-1+arg2-arg5p10 == 0 /\ 1+arg2p10 > 0 /\ arg2 > 0 /\ 1+x53 > 0 /\ arg2-arg1p10 == 0 /\ -1+arg2-x46 < 0 /\ -arg3+x53 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2-x46 < 0 /\ -13+arg3 < 0 /\ arg3-x52 >= 0 /\ -arg3p10+arg3 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg3'=arg3, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (0 == 0 /\ 1+arg2p10 > 0 /\ arg2 > 0 /\ 1+x53 > 0 /\ -1+arg2-x46 < 0 /\ -arg3+x53 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2-x46 < 0 /\ -13+arg3 < 0 /\ arg3-x52 >= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg5p10 = -1+arg2
		
		propagated equality arg1p10 = arg2
		
		propagated equality arg3p10 = arg3
		
	Simplified Guard

	Original rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg3'=arg3, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (0 == 0 /\ 1+arg2p10 > 0 /\ arg2 > 0 /\ 1+x53 > 0 /\ -1+arg2-x46 < 0 /\ -arg3+x53 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2-x46 < 0 /\ -13+arg3 < 0 /\ arg3-x52 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg3'=arg3, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ 1+x53 > 0 /\ -1+arg2-x46 < 0 /\ -arg3+x53 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2-x46 < 0 /\ -13+arg3 < 0 /\ arg3-x52 >= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg3'=arg3, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ 1+x53 > 0 /\ -1+arg2-x46 < 0 /\ -arg3+x53 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2-x46 < 0 /\ -13+arg3 < 0 /\ arg3-x52 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg3'=arg3, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg3'=arg3, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (arg3-arg3p11 == 0 /\ x61-arg3 > 0 /\ arg2p11-arg1 <= 0 /\ arg2-x54 < 0 /\ arg2 > 0 /\ arg3-x60 >= 0 /\ -1+arg2-arg5p11 == 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ 1+x61 > 0 /\ -1+arg2-x54 < 0 /\ arg1 > 0 /\ arg2-arg1p11 == 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg3'=arg3, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (0 == 0 /\ x61-arg3 > 0 /\ arg2p11-arg1 <= 0 /\ arg2-x54 < 0 /\ arg2 > 0 /\ arg3-x60 >= 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ 1+x61 > 0 /\ -1+arg2-x54 < 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p11 = arg3
		
		propagated equality arg5p11 = -1+arg2
		
		propagated equality arg1p11 = arg2
		
	Simplified Guard

	Original rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg3'=arg3, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (0 == 0 /\ x61-arg3 > 0 /\ arg2p11-arg1 <= 0 /\ arg2-x54 < 0 /\ arg2 > 0 /\ arg3-x60 >= 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ 1+x61 > 0 /\ -1+arg2-x54 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg3'=arg3, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (x61-arg3 > 0 /\ arg2p11-arg1 <= 0 /\ arg2-x54 < 0 /\ arg2 > 0 /\ arg3-x60 >= 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ 1+x61 > 0 /\ -1+arg2-x54 < 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg3'=arg3, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (x61-arg3 > 0 /\ arg2p11-arg1 <= 0 /\ arg2-x54 < 0 /\ arg2 > 0 /\ arg3-x60 >= 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ 1+x61 > 0 /\ -1+arg2-x54 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg3'=arg3, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (arg2p11-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg3'=arg3, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (arg2p11-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (arg2p11-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (-arg3p12 == 0 /\ arg1p12-arg1 <= 0 /\ arg2-arg2p12 == 0 /\ arg1p12 > 0 /\ -x62+arg2 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg2'=arg2, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (0 == 0 /\ arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ -x62+arg2 < 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p12 = 0
		
		propagated equality arg2p12 = arg2
		
	Simplified Guard

	Original rule:
	f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg2'=arg2, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (0 == 0 /\ arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ -x62+arg2 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg2'=arg2, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ -x62+arg2 < 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg2'=arg2, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ -x62+arg2 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg2'=arg2, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg2'=arg2, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-12+arg3 > 0 /\ arg1p13 > 0 /\ 1+arg2-arg2p13 == 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (0 == 0 /\ -12+arg3 > 0 /\ arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p13 = 1+arg2
		
	Simplified Guard

	Original rule:
	f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (0 == 0 /\ -12+arg3 > 0 /\ arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-12+arg3 > 0 /\ arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (1+arg3-arg3p14 == 0 /\ -12+arg3 < 0 /\ arg1p14 > 0 /\ arg2-arg2p14 == 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg2'=arg2, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (0 == 0 /\ -12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p14 = 1+arg3
		
		propagated equality arg2p14 = arg2
		
	Simplified Guard

	Original rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg2'=arg2, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (0 == 0 /\ -12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg2'=arg2, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg2'=arg2, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 13-arg3p15 == 0 /\ arg2-arg2p15 == 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg2'=arg2, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (0 == 0 /\ arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p15 = 13
		
		propagated equality arg2p15 = arg2
		
	Simplified Guard

	Original rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg2'=arg2, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (0 == 0 /\ arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg2'=arg2, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg2'=arg2, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (-arg3+x90+x91 > 0 /\ 1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ arg5-x80 < 0 /\ -arg5p16+arg4 == 0 /\ 1+arg3 > 0 /\ -arg2p16+arg1 == 0 /\ 1+x90 > 0 /\ arg3-arg4p16 == 0 /\ x88-arg6p16+x89 == 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
	New rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (0 == 0 /\ -arg3+x90+x91 > 0 /\ 1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ arg5-x80 < 0 /\ 1+arg3 > 0 /\ 1+x90 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
	
		propagated equality arg5p16 = arg4
		
		propagated equality arg2p16 = arg1
		
		propagated equality arg4p16 = arg3
		
		propagated equality arg6p16 = x88+x89
		
	Simplified Guard

	Original rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (0 == 0 /\ -arg3+x90+x91 > 0 /\ 1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ arg5-x80 < 0 /\ 1+arg3 > 0 /\ 1+x90 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
	New rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (-arg3+x90+x91 > 0 /\ 1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ arg5-x80 < 0 /\ 1+arg3 > 0 /\ 1+x90 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (-arg3+x90+x91 > 0 /\ 1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ arg5-x80 < 0 /\ 1+arg3 > 0 /\ 1+x90 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
	New rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ 1+x102 > 0 /\ arg2 > 0 /\ arg3-x103-x102 < 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ -arg5p17+arg4 == 0 /\ -arg2p17+arg1 == 0 /\ arg3-arg4p17 == 0 /\ arg3p17 > 0 /\ x100-arg6p17+x101 == 0 /\ -8+arg1 < 0 /\ arg5-x92 < 0), cost: 1
	New rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (0 == 0 /\ arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ 1+x102 > 0 /\ arg2 > 0 /\ arg3-x103-x102 < 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0 /\ arg5-x92 < 0), cost: 1
	
		propagated equality arg5p17 = arg4
		
		propagated equality arg2p17 = arg1
		
		propagated equality arg4p17 = arg3
		
		propagated equality arg6p17 = x100+x101
		
	Simplified Guard

	Original rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (0 == 0 /\ arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ 1+x102 > 0 /\ arg2 > 0 /\ arg3-x103-x102 < 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0 /\ arg5-x92 < 0), cost: 1
	New rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ 1+x102 > 0 /\ arg2 > 0 /\ arg3-x103-x102 < 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0 /\ arg5-x92 < 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ 1+x102 > 0 /\ arg2 > 0 /\ arg3-x103-x102 < 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0 /\ arg5-x92 < 0), cost: 1
	New rule:
	f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg2-arg2p18 == 0 /\ arg6-arg5 >= 0 /\ -arg4p18+arg4 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg2'=arg2, arg3'=arg3p18, arg4'=arg4, arg5'=arg5p18, arg6'=arg6p18, (0 == 0 /\ arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p18 = arg2
		
		propagated equality arg4p18 = arg4
		
	Simplified Guard

	Original rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg2'=arg2, arg3'=arg3p18, arg4'=arg4, arg5'=arg5p18, arg6'=arg6p18, (0 == 0 /\ arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg2'=arg2, arg3'=arg3p18, arg4'=arg4, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg2'=arg2, arg3'=arg3p18, arg4'=arg4, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg3'=arg3p18, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg4-arg4p19 == 0 /\ arg2-arg2p19 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg2'=arg2, arg3'=arg3p19, arg4'=arg4, arg5'=arg5p19, arg6'=arg6p19, (0 == 0 /\ arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p19 = arg4
		
		propagated equality arg2p19 = arg2
		
	Simplified Guard

	Original rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg2'=arg2, arg3'=arg3p19, arg4'=arg4, arg5'=arg5p19, arg6'=arg6p19, (0 == 0 /\ arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg2'=arg2, arg3'=arg3p19, arg4'=arg4, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg2'=arg2, arg3'=arg3p19, arg4'=arg4, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg3'=arg3p19, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (1+x122 > 0 /\ arg1p20 > 0 /\ 12-arg2p20 == 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ -1-arg3p20+x122 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=12, arg3'=-1+x122, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (0 == 0 /\ 1+x122 > 0 /\ arg1p20 > 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p20 = 12
		
		propagated equality arg3p20 = -1+x122
		
	Simplified Guard

	Original rule:
	f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=12, arg3'=-1+x122, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (0 == 0 /\ 1+x122 > 0 /\ arg1p20 > 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=12, arg3'=-1+x122, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (1+x122 > 0 /\ arg1p20 > 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (1+x132 > 0 /\ arg3 > 0 /\ arg1p21 > 0 /\ arg2-arg2p21 == 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ 1+arg4-arg3p21 == 0 /\ -arg4+x132 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (0 == 0 /\ 1+x132 > 0 /\ arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ -arg4+x132 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p21 = arg2
		
		propagated equality arg3p21 = 1+arg4
		
	Simplified Guard

	Original rule:
	f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (0 == 0 /\ 1+x132 > 0 /\ arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ -arg4+x132 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (1+x132 > 0 /\ arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ -arg4+x132 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (1+x132 > 0 /\ arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ -arg4+x132 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ 1-arg3p22+arg4 == 0 /\ arg2-arg2p22 == 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ x139-arg4 > 0 /\ arg1 > 0 /\ 1+x139 > 0), cost: 1
	New rule:
	f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (0 == 0 /\ arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ x139-arg4 > 0 /\ arg1 > 0 /\ 1+x139 > 0), cost: 1
	
		propagated equality arg3p22 = 1+arg4
		
		propagated equality arg2p22 = arg2
		
	Simplified Guard

	Original rule:
	f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (0 == 0 /\ arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ x139-arg4 > 0 /\ arg1 > 0 /\ 1+x139 > 0), cost: 1
	New rule:
	f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ x139-arg4 > 0 /\ arg1 > 0 /\ 1+x139 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ x139-arg4 > 0 /\ arg1 > 0 /\ 1+x139 > 0), cost: 1
	New rule:
	f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg2'=arg2, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3-x140 < 0 /\ 1+x146 > 0 /\ arg3 > 0 /\ arg1p23 > 0 /\ -arg2+x145 > 0 /\ arg2-arg2p23 == 0 /\ 1+x145 > 0 /\ arg1p23-arg1 <= 0 /\ -1+arg3-arg3p23 == 0 /\ -1+arg3-x140 < 0 /\ -arg2+x146 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg2'=arg2, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (0 == 0 /\ arg3-x140 < 0 /\ 1+x146 > 0 /\ arg3 > 0 /\ arg1p23 > 0 /\ -arg2+x145 > 0 /\ 1+x145 > 0 /\ arg1p23-arg1 <= 0 /\ -1+arg3-x140 < 0 /\ -arg2+x146 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p23 = arg2
		
		propagated equality arg3p23 = -1+arg3
		
	Simplified Guard

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg2'=arg2, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (0 == 0 /\ arg3-x140 < 0 /\ 1+x146 > 0 /\ arg3 > 0 /\ arg1p23 > 0 /\ -arg2+x145 > 0 /\ 1+x145 > 0 /\ arg1p23-arg1 <= 0 /\ -1+arg3-x140 < 0 /\ -arg2+x146 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg2'=arg2, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3-x140 < 0 /\ 1+x146 > 0 /\ arg3 > 0 /\ arg1p23 > 0 /\ -arg2+x145 > 0 /\ 1+x145 > 0 /\ arg1p23-arg1 <= 0 /\ -1+arg3-x140 < 0 /\ -arg2+x146 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg2'=arg2, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3-x140 < 0 /\ 1+x146 > 0 /\ arg3 > 0 /\ arg1p23 > 0 /\ -arg2+x145 > 0 /\ 1+x145 > 0 /\ arg1p23-arg1 <= 0 /\ -1+arg3-x140 < 0 /\ -arg2+x146 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg2'=arg2, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3 > 0 /\ arg1p23 > 0 /\ arg1p23-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg2'=arg2, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3 > 0 /\ arg1p23 > 0 /\ arg1p23-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3 > 0 /\ arg1p23 > 0 /\ arg1p23-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (-1-x147+arg3 < 0 /\ 1+x153 > 0 /\ arg3 > 0 /\ 1+x154 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -arg2+x154 > 0 /\ -1+arg3-arg3p24 == 0 /\ x156-x155 > 0 /\ -x152+arg2-arg2p24 == 0 /\ arg1p24-arg1 <= 0 /\ -x147+arg3 < 0 /\ -arg2+x153 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (0 == 0 /\ -1-x147+arg3 < 0 /\ 1+x153 > 0 /\ arg3 > 0 /\ 1+x154 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -arg2+x154 > 0 /\ x156-x155 > 0 /\ arg1p24-arg1 <= 0 /\ -x147+arg3 < 0 /\ -arg2+x153 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p24 = -1+arg3
		
		propagated equality arg2p24 = -x152+arg2
		
	Simplified Guard

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (0 == 0 /\ -1-x147+arg3 < 0 /\ 1+x153 > 0 /\ arg3 > 0 /\ 1+x154 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -arg2+x154 > 0 /\ x156-x155 > 0 /\ arg1p24-arg1 <= 0 /\ -x147+arg3 < 0 /\ -arg2+x153 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (-1-x147+arg3 < 0 /\ 1+x153 > 0 /\ arg3 > 0 /\ 1+x154 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -arg2+x154 > 0 /\ x156-x155 > 0 /\ arg1p24-arg1 <= 0 /\ -x147+arg3 < 0 /\ -arg2+x153 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (-1-x147+arg3 < 0 /\ 1+x153 > 0 /\ arg3 > 0 /\ 1+x154 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -arg2+x154 > 0 /\ x156-x155 > 0 /\ arg1p24-arg1 <= 0 /\ -x147+arg3 < 0 /\ -arg2+x153 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (arg3 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p24-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ -arg2+x113 > 0 /\ arg3 > 0 /\ 1+x126 > 0 /\ -1-x104+arg3 < 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -x104+arg3 < 0 /\ -arg2+x126 > 0 /\ arg1p25-arg1 <= 0 /\ x133-x157 < 0 /\ 1+x113 > 0 /\ arg2-arg2p25-x76 == 0 /\ -1+arg3-arg3p25 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (0 == 0 /\ arg1p25 > 0 /\ -arg2+x113 > 0 /\ arg3 > 0 /\ 1+x126 > 0 /\ -1-x104+arg3 < 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -x104+arg3 < 0 /\ -arg2+x126 > 0 /\ arg1p25-arg1 <= 0 /\ x133-x157 < 0 /\ 1+x113 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p25 = arg2-x76
		
		propagated equality arg3p25 = -1+arg3
		
	Simplified Guard

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (0 == 0 /\ arg1p25 > 0 /\ -arg2+x113 > 0 /\ arg3 > 0 /\ 1+x126 > 0 /\ -1-x104+arg3 < 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -x104+arg3 < 0 /\ -arg2+x126 > 0 /\ arg1p25-arg1 <= 0 /\ x133-x157 < 0 /\ 1+x113 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ -arg2+x113 > 0 /\ arg3 > 0 /\ 1+x126 > 0 /\ -1-x104+arg3 < 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -x104+arg3 < 0 /\ -arg2+x126 > 0 /\ arg1p25-arg1 <= 0 /\ x133-x157 < 0 /\ 1+x113 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ -arg2+x113 > 0 /\ arg3 > 0 /\ 1+x126 > 0 /\ -1-x104+arg3 < 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ -x104+arg3 < 0 /\ -arg2+x126 > 0 /\ arg1p25-arg1 <= 0 /\ x133-x157 < 0 /\ 1+x113 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ arg3 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p25-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	__init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p26 > 0 /\ -arg2p1 == 0 /\ 1+arg2p26 > 0 /\ -arg1p26+arg1p1 <= 0 /\ arg1p1 > 0), cost: 1
	New rule:
	__init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (0 == 0 /\ arg1p26 > 0 /\ 1+arg2p26 > 0 /\ -arg1p26+arg1p1 <= 0 /\ arg1p1 > 0), cost: 1
	
		propagated equality arg2p1 = 0
		
	Simplified Guard

	Original rule:
	__init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (0 == 0 /\ arg1p26 > 0 /\ 1+arg2p26 > 0 /\ -arg1p26+arg1p1 <= 0 /\ arg1p1 > 0), cost: 1
	New rule:
	__init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p26 > 0 /\ 1+arg2p26 > 0 /\ -arg1p26+arg1p1 <= 0 /\ arg1p1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p26 > 0 /\ 1+arg2p26 > 0 /\ -arg1p26+arg1p1 <= 0 /\ arg1p1 > 0), cost: 1
	New rule:
	__init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p1 > 0), cost: 1

Step with 51

	Trace

	51[(arg1p1 > 0)]
	
	Blocked

	[{}, {}]

Step with 27

	Trace

	51[(arg1p1 > 0)], 27[(arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  27: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ arg1 > 0), cost: 1
  28: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ arg1 > 0), cost: 1
  29: f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=1, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
  52: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=n+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0), cost: 1
  30: f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
  32: f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
  31: f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (-12+arg3 > 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
  33: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ 1+arg3p8 > 0 /\ arg1p8 > 0 /\ arg1 > 0), cost: 1
  34: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg1 > 0), cost: 1
  35: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  36: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (arg2p11-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  37: f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
  45: f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=12, arg3'=-1+x122, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (1+x122 > 0 /\ arg1p20 > 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ arg1 > 0), cost: 1
  46: f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ arg1 > 0), cost: 1
  41: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
  42: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0), cost: 1
  38: f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-12+arg3 > 0 /\ arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
  39: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  40: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
  43: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg3'=arg3p18, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  44: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg3'=arg3p19, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
  47: f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ arg1 > 0), cost: 1
  48: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3 > 0 /\ arg1p23 > 0 /\ arg1p23-arg1 <= 0 /\ arg1 > 0), cost: 1
  49: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (arg3 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p24-arg1 <= 0 /\ arg1 > 0), cost: 1
  50: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ arg3 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p25-arg1 <= 0 /\ arg1 > 0), cost: 1
  51: __init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=n+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0), cost: 1

		arg1p2 > 0 [0]: monotonic increase yields arg1p2 > 0
		
		-arg1p2+arg1 >= 0 [0]: monotonic increase yields -arg1p2+arg1 >= 0
		
		13-arg2 > 0 [0]: monotonic increase yields 13-arg2 > 0, dependencies: 2-arg2 > 0
		
		13-arg2 > 0 [1]: montonic decrease yields 14-n-arg2 > 0
		
		13-arg2 > 0 [2]: eventual increase yields (1 <= 0 /\ 13-arg2 > 0)
		
		2-arg2 > 0 [0]: montonic decrease yields 3-n-arg2 > 0
		
		2-arg2 > 0 [1]: eventual increase yields (1 <= 0 /\ 2-arg2 > 0)
		
		arg1 > 0 [0]: montonic decrease yields arg1p2 > 0, dependencies: -arg1p2+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p2+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {arg1p2 > 0 -> arg1p2 > 0, -arg1p2+arg1 >= 0 -> -arg1p2+arg1 >= 0, 13-arg2 > 0 -> 13-arg2 > 0, 2-arg2 > 0 -> 3-n-arg2 > 0, arg1 > 0 -> arg1p2 > 0}

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 52[T]}]

Step with 28

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 28[(-13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  27: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ arg1 > 0), cost: 1
  28: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ arg1 > 0), cost: 1
  29: f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=1, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
  52: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=n+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0), cost: 1
  53: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=arg2+n2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0), cost: 1
  30: f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
  32: f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
  31: f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (-12+arg3 > 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
  33: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ 1+arg3p8 > 0 /\ arg1p8 > 0 /\ arg1 > 0), cost: 1
  34: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg1 > 0), cost: 1
  35: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  36: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (arg2p11-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  37: f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
  45: f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=12, arg3'=-1+x122, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (1+x122 > 0 /\ arg1p20 > 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ arg1 > 0), cost: 1
  46: f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ arg1 > 0), cost: 1
  41: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
  42: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0), cost: 1
  38: f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-12+arg3 > 0 /\ arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
  39: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  40: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
  43: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg3'=arg3p18, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  44: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg3'=arg3p19, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
  47: f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ arg1 > 0), cost: 1
  48: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3 > 0 /\ arg1p23 > 0 /\ arg1p23-arg1 <= 0 /\ arg1 > 0), cost: 1
  49: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (arg3 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p24-arg1 <= 0 /\ arg1 > 0), cost: 1
  50: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ arg3 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p25-arg1 <= 0 /\ arg1 > 0), cost: 1
  51: __init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=arg2+n2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0), cost: 1

		-arg1p3+arg1 >= 0 [0]: monotonic increase yields -arg1p3+arg1 >= 0
		
		-1+arg2 > 0 [0]: monotonic increase yields -1+arg2 > 0
		
		arg1p3 > 0 [0]: monotonic increase yields arg1p3 > 0
		
		13-arg2 > 0 [0]: montonic decrease yields 14-arg2-n2 > 0
		
		13-arg2 > 0 [1]: eventual increase yields (1 <= 0 /\ 13-arg2 > 0)
		
		arg1 > 0 [0]: montonic decrease yields arg1p3 > 0, dependencies: -arg1p3+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p3+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {-arg1p3+arg1 >= 0 -> -arg1p3+arg1 >= 0, -1+arg2 > 0 -> -1+arg2 > 0, arg1p3 > 0 -> arg1p3 > 0, 13-arg2 > 0 -> 14-arg2-n2 > 0, arg1 > 0 -> arg1p3 > 0}

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 29

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}]

Step with 32

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)], 32[(arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}, {}]

Step with 45

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)], 32[(arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0)], 45[(1+x122 > 0 /\ arg1p20 > 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}, {}, {}]

Backtrack

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)], 32[(arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}, {45[T]}]

Step with 37

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)], 32[(arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0)], 37[(arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}, {45[T]}, {}]

Step with 39

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)], 32[(arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0)], 37[(arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0)], 39[(-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}, {45[T]}, {38[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  27: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ arg1 > 0), cost: 1
  28: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ arg1 > 0), cost: 1
  29: f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=1, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
  52: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=n+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0), cost: 1
  53: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=arg2+n2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0), cost: 1
  30: f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
  32: f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
  31: f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (-12+arg3 > 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
  33: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ 1+arg3p8 > 0 /\ arg1p8 > 0 /\ arg1 > 0), cost: 1
  34: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg1 > 0), cost: 1
  35: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  36: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (arg2p11-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  37: f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
  45: f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=12, arg3'=-1+x122, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (1+x122 > 0 /\ arg1p20 > 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ arg1 > 0), cost: 1
  46: f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ arg1 > 0), cost: 1
  41: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
  42: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0), cost: 1
  38: f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-12+arg3 > 0 /\ arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
  39: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  40: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
  54: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=arg3+n3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (14-arg3-n3 > 0 /\ -arg1p14+arg1 >= 0 /\ arg1p14 > 0 /\ 13-arg3-n3 > 0 /\ -1+n3 >= 0), cost: 1
  43: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg3'=arg3p18, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  44: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg3'=arg3p19, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
  47: f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ arg1 > 0), cost: 1
  48: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3 > 0 /\ arg1p23 > 0 /\ arg1p23-arg1 <= 0 /\ arg1 > 0), cost: 1
  49: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (arg3 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p24-arg1 <= 0 /\ arg1 > 0), cost: 1
  50: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ arg3 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p25-arg1 <= 0 /\ arg1 > 0), cost: 1
  51: __init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=arg3+n3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (14-arg3-n3 > 0 /\ -arg1p14+arg1 >= 0 /\ arg1p14 > 0 /\ 13-arg3-n3 > 0 /\ -1+n3 >= 0), cost: 1

		13-arg3 > 0 [0]: montonic decrease yields 14-arg3-n3 > 0
		
		13-arg3 > 0 [1]: eventual increase yields (1 <= 0 /\ 13-arg3 > 0)
		
		-arg1p14+arg1 >= 0 [0]: monotonic increase yields -arg1p14+arg1 >= 0
		
		arg1p14 > 0 [0]: monotonic increase yields arg1p14 > 0
		
		12-arg3 > 0 [0]: montonic decrease yields 13-arg3-n3 > 0
		
		12-arg3 > 0 [1]: eventual increase yields (1 <= 0 /\ 12-arg3 > 0)
		
		arg1 > 0 [0]: montonic decrease yields arg1p14 > 0, dependencies: -arg1p14+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p14+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {13-arg3 > 0 -> 14-arg3-n3 > 0, -arg1p14+arg1 >= 0 -> -arg1p14+arg1 >= 0, arg1p14 > 0 -> arg1p14 > 0, 12-arg3 > 0 -> 13-arg3-n3 > 0, arg1 > 0 -> arg1p14 > 0}

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)], 32[(arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0)], 37[(arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0)], 54[(14-arg3-n3 > 0 /\ -arg1p14+arg1 >= 0 /\ arg1p14 > 0 /\ 13-arg3-n3 > 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}, {45[T]}, {38[T]}, {39[T], 54[T]}]

Step with 40

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)], 32[(arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0)], 37[(arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0)], 54[(14-arg3-n3 > 0 /\ -arg1p14+arg1 >= 0 /\ arg1p14 > 0 /\ 13-arg3-n3 > 0 /\ -1+n3 >= 0)], 40[(arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}, {45[T]}, {38[T]}, {38[T], 39[T], 54[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 38

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)], 32[(arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0)], 37[(arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0)], 54[(14-arg3-n3 > 0 /\ -arg1p14+arg1 >= 0 /\ arg1p14 > 0 /\ 13-arg3-n3 > 0 /\ -1+n3 >= 0)], 40[(arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0)], 38[(-12+arg3 > 0 /\ arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}, {45[T]}, {38[T]}, {38[T], 39[T], 54[T]}, {40[T], 54[T]}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  27: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=1+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -13+arg2 < 0 /\ -2+arg2 < 0 /\ arg1p2-arg1 <= 0 /\ arg1 > 0), cost: 1
  28: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=1+arg2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-13+arg2 < 0 /\ -arg1p3+arg1 >= 0 /\ -1+arg2 > 0 /\ arg1p3 > 0 /\ arg1 > 0), cost: 1
  29: f261_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p4, arg2'=1, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0), cost: 1
  52: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p2, arg2'=n+arg2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0), cost: 1
  53: f261_0_SolveDP_GT -> f261_0_SolveDP_GT : arg1'=arg1p3, arg2'=arg2+n2, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0), cost: 1
  30: f2602_0_SolveDP_GE -> f3537_0_SolveDP_GT : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5-arg1 <= 0 /\ arg1p5 > 0 /\ arg1 > 0), cost: 1
  32: f2602_0_SolveDP_GE -> f3585_0_Display_GE : arg1'=arg1p7, arg2'=0, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0), cost: 1
  31: f3537_0_SolveDP_GT -> f2602_0_SolveDP_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (-12+arg3 > 0 /\ arg1p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1 > 0), cost: 1
  33: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p8, arg3'=arg3p8, arg4'=arg3, arg5'=arg5p8, arg6'=arg6p8, (arg1p8-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ 1+arg3p8 > 0 /\ arg1p8 > 0 /\ arg1 > 0), cost: 1
  34: f3537_0_SolveDP_GT -> f3740_0_SolveDP_ArrayAccess : arg1'=arg1p9, arg3'=arg3p9, arg4'=arg3, arg5'=arg5p9, arg6'=arg6p9, (arg1p9-arg1 <= 0 /\ arg2 > 0 /\ arg3p9 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1p9 > 0 /\ arg3p9-arg1 <= 0 /\ arg1 > 0), cost: 1
  35: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p10, arg4'=arg4p10, arg5'=-1+arg2, arg6'=arg6p10, (1+arg2p10 > 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  36: f3537_0_SolveDP_GT -> f3817_0_SolveDP_ArrayAccess : arg1'=arg2, arg2'=arg2p11, arg4'=arg4p11, arg5'=-1+arg2, arg6'=arg6p11, (arg2p11-arg1 <= 0 /\ arg2 > 0 /\ -8+arg2 < 0 /\ 1+arg3 > 0 /\ arg2p11 > 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  37: f3585_0_Display_GE -> f3902_0_Display_GT : arg1'=arg1p12, arg3'=0, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (arg1p12-arg1 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
  45: f3585_0_Display_GE -> f4377_0_InterpretArray_LT : arg1'=arg1p20, arg2'=12, arg3'=-1+x122, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, (1+x122 > 0 /\ arg1p20 > 0 /\ arg2-x122 >= 0 /\ arg1p20-arg1 <= 0 /\ arg1 > 0), cost: 1
  55: f3585_0_Display_GE -> LoAT_sink : (arg1p13 > 0 /\ -arg1p13+arg1 <= 0 /\ -arg1p13+arg1 >= 0 /\ -1+arg1 >= 0 /\ arg1 > 0), cost: NONTERM
  56: f3585_0_Display_GE -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=n4+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-1+n4 >= 0 /\ arg1p13 > 0 /\ -arg1p13+arg1 >= 0 /\ -1+arg1 >= 0), cost: 1
  46: f3740_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p21, arg3'=1+arg4, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, (arg3 > 0 /\ arg1p21 > 0 /\ arg1p21-arg1 <= 0 /\ -arg3+arg1p21 <= 0 /\ arg1 > 0), cost: 1
  41: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p16, arg2'=arg1, arg3'=arg3p16, arg4'=arg3, arg5'=arg4, arg6'=x88+x89, (1+arg3p16 > 0 /\ -1-arg2+arg1p16 <= 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ arg1p16 > 0 /\ -arg2+arg3p16 <= 0 /\ -8+arg1 < 0), cost: 1
  42: f3817_0_SolveDP_ArrayAccess -> f4251_0_max_LE : arg1'=arg1p17, arg2'=arg1, arg3'=arg3p17, arg4'=arg3, arg5'=arg4, arg6'=x100+x101, (arg1p17-arg2 <= 0 /\ arg1p17 > 0 /\ arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg3p17 <= 0 /\ arg3p17 > 0 /\ -8+arg1 < 0), cost: 1
  38: f3902_0_Display_GT -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-12+arg3 > 0 /\ arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ arg1 > 0), cost: 1
  39: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-12+arg3 < 0 /\ arg1p14 > 0 /\ arg1p14-arg1 <= 0 /\ -13+arg3 < 0 /\ arg1 > 0), cost: 1
  40: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p15, arg3'=13, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (arg1p15 > 0 /\ 12-arg3 == 0 /\ arg1p15-arg1 <= 0 /\ arg1 > 0), cost: 1
  54: f3902_0_Display_GT -> f3902_0_Display_GT : arg1'=arg1p14, arg3'=arg3+n3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (14-arg3-n3 > 0 /\ -arg1p14+arg1 >= 0 /\ arg1p14 > 0 /\ 13-arg3-n3 > 0 /\ -1+n3 >= 0), cost: 1
  43: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p18, arg3'=arg3p18, arg5'=arg5p18, arg6'=arg6p18, (arg1p18-arg1 <= 0 /\ arg1p18 > 0 /\ 1+arg3p18 > 0 /\ -arg3+arg3p18 <= 0 /\ -1+arg1p18-arg3 <= 0 /\ 1+arg3 > 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  44: f4251_0_max_LE -> f4331_0_SolveDP_ArrayAccess : arg1'=arg1p19, arg3'=arg3p19, arg5'=arg5p19, arg6'=arg6p19, (arg1p19 > 0 /\ 1+arg3p19 > 0 /\ arg1p19-arg1 <= 0 /\ 1+arg3 > 0 /\ -arg3+arg3p19 <= 0 /\ -1+arg1p19-arg3 <= 0 /\ arg6-arg5 < 0 /\ arg1 > 0), cost: 1
  47: f4331_0_SolveDP_ArrayAccess -> f3537_0_SolveDP_GT : arg1'=arg1p22, arg3'=1+arg4, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, (arg1p22-arg1 <= 0 /\ -arg3+arg1p22 <= 0 /\ arg3 > 0 /\ arg1p22 > 0 /\ arg1 > 0), cost: 1
  48: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p23, arg3'=-1+arg3, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, (arg3 > 0 /\ arg1p23 > 0 /\ arg1p23-arg1 <= 0 /\ arg1 > 0), cost: 1
  49: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p24, arg2'=-x152+arg2, arg3'=-1+arg3, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, (arg3 > 0 /\ arg1p24 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p24-arg1 <= 0 /\ arg1 > 0), cost: 1
  50: f4377_0_InterpretArray_LT -> f4377_0_InterpretArray_LT : arg1'=arg1p25, arg2'=arg2-x76, arg3'=-1+arg3, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, (arg1p25 > 0 /\ arg3 > 0 /\ 1+arg2 > 0 /\ -8+arg3 < 0 /\ arg1p25-arg1 <= 0 /\ arg1 > 0), cost: 1
  51: __init -> f261_0_SolveDP_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p1 > 0), cost: 1

	Certificate of Non-Termination

	Original rule:
	f3585_0_Display_GE -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3585_0_Display_GE -> LoAT_sink : (arg1p13 > 0 /\ -arg1p13+arg1 <= 0 /\ -arg1p13+arg1 >= 0 /\ -1+arg1 >= 0 /\ arg1 > 0), cost: NONTERM

		arg1p13 > 0 [0]: monotonic increase yields arg1p13 > 0
		
		-arg1p13+arg1 >= 0 [0]: monotonic increase yields -arg1p13+arg1 >= 0
		
		-1+arg1 >= 0 [0]: monotonic increase yields -1+arg1 >= 0, dependencies: arg1p13 > 0
		
		arg1 > 0 [0]: montonic decrease yields arg1p13 > 0, dependencies: -arg1p13+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p13+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {arg1p13 > 0 -> arg1p13 > 0, -arg1p13+arg1 >= 0 -> -arg1p13+arg1 >= 0, -1+arg1 >= 0 -> -1+arg1 >= 0, arg1 > 0 -> (-arg1p13+arg1 <= 0 /\ arg1 > 0)}

	Loop Acceleration

	Original rule:
	f3585_0_Display_GE -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=1+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (arg1p13 > 0 /\ arg1p13-arg1 <= 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f3585_0_Display_GE -> f3585_0_Display_GE : arg1'=arg1p13, arg2'=n4+arg2, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-1+n4 >= 0 /\ arg1p13 > 0 /\ -arg1p13+arg1 >= 0 /\ -1+arg1 >= 0), cost: 1

		arg1p13 > 0 [0]: monotonic increase yields arg1p13 > 0
		
		-arg1p13+arg1 >= 0 [0]: monotonic increase yields -arg1p13+arg1 >= 0
		
		-1+arg1 >= 0 [0]: monotonic increase yields -1+arg1 >= 0, dependencies: arg1p13 > 0
		
		arg1 > 0 [0]: montonic decrease yields arg1p13 > 0, dependencies: -arg1p13+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p13+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {arg1p13 > 0 -> arg1p13 > 0, -arg1p13+arg1 >= 0 -> -arg1p13+arg1 >= 0, -1+arg1 >= 0 -> -1+arg1 >= 0, arg1 > 0 -> arg1p13 > 0}

Step with 55

	Trace

	51[(arg1p1 > 0)], 52[(arg1p2 > 0 /\ -1+n >= 0 /\ 3-n-arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ 13-arg2 > 0)], 53[(-arg1p3+arg1 >= 0 /\ -1+n2 >= 0 /\ 14-arg2-n2 > 0 /\ -1+arg2 > 0 /\ arg1p3 > 0)], 29[(arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ -12+arg2 > 0 /\ arg1 > 0)], 32[(arg1p7-arg1 <= 0 /\ arg1p7 > 0 /\ arg1 > 0)], 55[(arg1p13 > 0 /\ -arg1p13+arg1 <= 0 /\ -arg1p13+arg1 >= 0 /\ -1+arg1 >= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {29[T]}, {27[T], 29[T], 52[T]}, {28[T], 53[T]}, {}, {45[T]}, {55[T]}]

Refute

	Counterexample

	[ arg1=1 arg2=0 arg3=0 arg4=0 arg5=0 arg6=0 ] 51 [ arg1=1 arg2=2 arg3=0 arg4=0 arg5=0 arg6=0 ] 52 [ arg1=1 arg2=13 arg3=0 arg4=0 arg5=0 arg6=0 ] 53 [ arg1=1 arg2=1 arg3=0 arg4=0 arg5=0 arg6=0 ] 29 [ arg1=1 arg2=0 arg3=0 arg4=0 arg5=0 arg6=0 ] 32 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 arg5=arg5 arg6=arg6 ] 55
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
