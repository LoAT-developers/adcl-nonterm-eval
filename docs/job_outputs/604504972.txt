NO

Initial ITS
Start location: l7
   0: l0 -> l1 : tmp___0^0'=tmp___0^post0, i5^0'=i5^post0, tmp^0'=tmp^post0, __const_1024^0'=__const_1024^post0, n_promoted_1^0'=n_promoted_1^post0, (0 == 0 /\ -n_promoted_1^post0+n_promoted_1^0 == 0 /\ __const_1024^0-__const_1024^post0 == 0 /\ -i5^post0+i5^0 == 0 /\ 1-__const_1024^0+n_promoted_1^0 <= 0 /\ tmp^0-tmp^post0 == 0), cost: 1
   1: l0 -> l1 : tmp___0^0'=tmp___0^post1, i5^0'=i5^post1, tmp^0'=tmp^post1, __const_1024^0'=__const_1024^post1, n_promoted_1^0'=n_promoted_1^post1, (-__const_1024^post1+__const_1024^0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ __const_1024^0-n_promoted_1^0 <= 0 /\ -n_promoted_1^post1+n_promoted_1^0 == 0 /\ i5^0-i5^post1 == 0 /\ tmp___0^0-tmp___0^post1 == 0), cost: 1
   2: l1 -> l2 : tmp___0^0'=tmp___0^post2, i5^0'=i5^post2, tmp^0'=tmp^post2, __const_1024^0'=__const_1024^post2, n_promoted_1^0'=n_promoted_1^post2, (tmp___0^0-tmp___0^post2 == 0 /\ -n_promoted_1^post2+n_promoted_1^0 == 0 /\ i5^post2 == 0 /\ __const_1024^0-__const_1024^post2 == 0 /\ tmp^0-tmp^post2 == 0), cost: 1
   5: l2 -> l4 : tmp___0^0'=tmp___0^post5, i5^0'=i5^post5, tmp^0'=tmp^post5, __const_1024^0'=__const_1024^post5, n_promoted_1^0'=n_promoted_1^post5, (n_promoted_1^0-n_promoted_1^post5 == 0 /\ tmp___0^0-tmp___0^post5 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -__const_1024^post5+__const_1024^0 == 0 /\ i5^0-i5^post5 == 0), cost: 1
   3: l3 -> l0 : tmp___0^0'=tmp___0^post3, i5^0'=i5^post3, tmp^0'=tmp^post3, __const_1024^0'=__const_1024^post3, n_promoted_1^0'=n_promoted_1^post3, (tmp___0^0-tmp___0^post3 == 0 /\ -n_promoted_1^post3+n_promoted_1^0 == 0 /\ 1-n_promoted_1^0 <= 0 /\ i5^0-i5^post3 == 0 /\ tmp^0-tmp^post3 == 0 /\ -__const_1024^post3+__const_1024^0 == 0), cost: 1
   4: l3 -> l1 : tmp___0^0'=tmp___0^post4, i5^0'=i5^post4, tmp^0'=tmp^post4, __const_1024^0'=__const_1024^post4, n_promoted_1^0'=n_promoted_1^post4, (__const_1024^0-__const_1024^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -n_promoted_1^post4+n_promoted_1^0 == 0 /\ i5^0-i5^post4 == 0 /\ tmp___0^0-tmp___0^post4 == 0 /\ n_promoted_1^0 <= 0), cost: 1
   6: l4 -> l5 : tmp___0^0'=tmp___0^post6, i5^0'=i5^post6, tmp^0'=tmp^post6, __const_1024^0'=__const_1024^post6, n_promoted_1^0'=n_promoted_1^post6, (-n_promoted_1^post6+n_promoted_1^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ tmp___0^0-tmp___0^post6 == 0 /\ -__const_1024^post6+__const_1024^0 == 0 /\ i5^0-i5^post6 == 0), cost: 1
   7: l4 -> l2 : tmp___0^0'=tmp___0^post7, i5^0'=i5^post7, tmp^0'=tmp^post7, __const_1024^0'=__const_1024^post7, n_promoted_1^0'=n_promoted_1^post7, (-tmp^post7+tmp^0 == 0 /\ -1-i5^0+i5^post7 == 0 /\ n_promoted_1^0-n_promoted_1^post7 == 0 /\ __const_1024^0-__const_1024^post7 == 0 /\ tmp___0^0-tmp___0^post7 == 0), cost: 1
   8: l6 -> l3 : tmp___0^0'=tmp___0^post8, i5^0'=i5^post8, tmp^0'=tmp^post8, __const_1024^0'=__const_1024^post8, n_promoted_1^0'=n_promoted_1^post8, (0 == 0 /\ tmp___0^0-tmp___0^post8 == 0 /\ n_promoted_1^post8-tmp^post8 == 0 /\ -__const_1024^post8+__const_1024^0 == 0 /\ i5^0-i5^post8 == 0), cost: 1
   9: l7 -> l6 : tmp___0^0'=tmp___0^post9, i5^0'=i5^post9, tmp^0'=tmp^post9, __const_1024^0'=__const_1024^post9, n_promoted_1^0'=n_promoted_1^post9, (-tmp^post9+tmp^0 == 0 /\ n_promoted_1^0-n_promoted_1^post9 == 0 /\ __const_1024^0-__const_1024^post9 == 0 /\ i5^0-i5^post9 == 0 /\ tmp___0^0-tmp___0^post9 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l7
   0: l0 -> l1 : tmp___0^0'=tmp___0^post0, i5^0'=i5^post0, tmp^0'=tmp^post0, __const_1024^0'=__const_1024^post0, n_promoted_1^0'=n_promoted_1^post0, (0 == 0 /\ -n_promoted_1^post0+n_promoted_1^0 == 0 /\ __const_1024^0-__const_1024^post0 == 0 /\ -i5^post0+i5^0 == 0 /\ 1-__const_1024^0+n_promoted_1^0 <= 0 /\ tmp^0-tmp^post0 == 0), cost: 1
   1: l0 -> l1 : tmp___0^0'=tmp___0^post1, i5^0'=i5^post1, tmp^0'=tmp^post1, __const_1024^0'=__const_1024^post1, n_promoted_1^0'=n_promoted_1^post1, (-__const_1024^post1+__const_1024^0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ __const_1024^0-n_promoted_1^0 <= 0 /\ -n_promoted_1^post1+n_promoted_1^0 == 0 /\ i5^0-i5^post1 == 0 /\ tmp___0^0-tmp___0^post1 == 0), cost: 1
   2: l1 -> l2 : tmp___0^0'=tmp___0^post2, i5^0'=i5^post2, tmp^0'=tmp^post2, __const_1024^0'=__const_1024^post2, n_promoted_1^0'=n_promoted_1^post2, (tmp___0^0-tmp___0^post2 == 0 /\ -n_promoted_1^post2+n_promoted_1^0 == 0 /\ i5^post2 == 0 /\ __const_1024^0-__const_1024^post2 == 0 /\ tmp^0-tmp^post2 == 0), cost: 1
   5: l2 -> l4 : tmp___0^0'=tmp___0^post5, i5^0'=i5^post5, tmp^0'=tmp^post5, __const_1024^0'=__const_1024^post5, n_promoted_1^0'=n_promoted_1^post5, (n_promoted_1^0-n_promoted_1^post5 == 0 /\ tmp___0^0-tmp___0^post5 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -__const_1024^post5+__const_1024^0 == 0 /\ i5^0-i5^post5 == 0), cost: 1
   3: l3 -> l0 : tmp___0^0'=tmp___0^post3, i5^0'=i5^post3, tmp^0'=tmp^post3, __const_1024^0'=__const_1024^post3, n_promoted_1^0'=n_promoted_1^post3, (tmp___0^0-tmp___0^post3 == 0 /\ -n_promoted_1^post3+n_promoted_1^0 == 0 /\ 1-n_promoted_1^0 <= 0 /\ i5^0-i5^post3 == 0 /\ tmp^0-tmp^post3 == 0 /\ -__const_1024^post3+__const_1024^0 == 0), cost: 1
   4: l3 -> l1 : tmp___0^0'=tmp___0^post4, i5^0'=i5^post4, tmp^0'=tmp^post4, __const_1024^0'=__const_1024^post4, n_promoted_1^0'=n_promoted_1^post4, (__const_1024^0-__const_1024^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -n_promoted_1^post4+n_promoted_1^0 == 0 /\ i5^0-i5^post4 == 0 /\ tmp___0^0-tmp___0^post4 == 0 /\ n_promoted_1^0 <= 0), cost: 1
   7: l4 -> l2 : tmp___0^0'=tmp___0^post7, i5^0'=i5^post7, tmp^0'=tmp^post7, __const_1024^0'=__const_1024^post7, n_promoted_1^0'=n_promoted_1^post7, (-tmp^post7+tmp^0 == 0 /\ -1-i5^0+i5^post7 == 0 /\ n_promoted_1^0-n_promoted_1^post7 == 0 /\ __const_1024^0-__const_1024^post7 == 0 /\ tmp___0^0-tmp___0^post7 == 0), cost: 1
   8: l6 -> l3 : tmp___0^0'=tmp___0^post8, i5^0'=i5^post8, tmp^0'=tmp^post8, __const_1024^0'=__const_1024^post8, n_promoted_1^0'=n_promoted_1^post8, (0 == 0 /\ tmp___0^0-tmp___0^post8 == 0 /\ n_promoted_1^post8-tmp^post8 == 0 /\ -__const_1024^post8+__const_1024^0 == 0 /\ i5^0-i5^post8 == 0), cost: 1
   9: l7 -> l6 : tmp___0^0'=tmp___0^post9, i5^0'=i5^post9, tmp^0'=tmp^post9, __const_1024^0'=__const_1024^post9, n_promoted_1^0'=n_promoted_1^post9, (-tmp^post9+tmp^0 == 0 /\ n_promoted_1^0-n_promoted_1^post9 == 0 /\ __const_1024^0-__const_1024^post9 == 0 /\ i5^0-i5^post9 == 0 /\ tmp___0^0-tmp___0^post9 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : tmp___0^0'=tmp___0^post0, i5^0'=i5^post0, tmp^0'=tmp^post0, __const_1024^0'=__const_1024^post0, n_promoted_1^0'=n_promoted_1^post0, (0 == 0 /\ -n_promoted_1^post0+n_promoted_1^0 == 0 /\ __const_1024^0-__const_1024^post0 == 0 /\ -i5^post0+i5^0 == 0 /\ 1-__const_1024^0+n_promoted_1^0 <= 0 /\ tmp^0-tmp^post0 == 0), cost: 1
New rule:
l0 -> l1 : tmp___0^0'=tmp___0^post0, 1-__const_1024^0+n_promoted_1^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l1 : tmp___0^0'=tmp___0^post1, i5^0'=i5^post1, tmp^0'=tmp^post1, __const_1024^0'=__const_1024^post1, n_promoted_1^0'=n_promoted_1^post1, (-__const_1024^post1+__const_1024^0 == 0 /\ -tmp^post1+tmp^0 == 0 /\ __const_1024^0-n_promoted_1^0 <= 0 /\ -n_promoted_1^post1+n_promoted_1^0 == 0 /\ i5^0-i5^post1 == 0 /\ tmp___0^0-tmp___0^post1 == 0), cost: 1
New rule:
l0 -> l1 : __const_1024^0-n_promoted_1^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l2 : tmp___0^0'=tmp___0^post2, i5^0'=i5^post2, tmp^0'=tmp^post2, __const_1024^0'=__const_1024^post2, n_promoted_1^0'=n_promoted_1^post2, (tmp___0^0-tmp___0^post2 == 0 /\ -n_promoted_1^post2+n_promoted_1^0 == 0 /\ i5^post2 == 0 /\ __const_1024^0-__const_1024^post2 == 0 /\ tmp^0-tmp^post2 == 0), cost: 1
New rule:
l1 -> l2 : i5^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : tmp___0^0'=tmp___0^post3, i5^0'=i5^post3, tmp^0'=tmp^post3, __const_1024^0'=__const_1024^post3, n_promoted_1^0'=n_promoted_1^post3, (tmp___0^0-tmp___0^post3 == 0 /\ -n_promoted_1^post3+n_promoted_1^0 == 0 /\ 1-n_promoted_1^0 <= 0 /\ i5^0-i5^post3 == 0 /\ tmp^0-tmp^post3 == 0 /\ -__const_1024^post3+__const_1024^0 == 0), cost: 1
New rule:
l3 -> l0 : -1+n_promoted_1^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : tmp___0^0'=tmp___0^post4, i5^0'=i5^post4, tmp^0'=tmp^post4, __const_1024^0'=__const_1024^post4, n_promoted_1^0'=n_promoted_1^post4, (__const_1024^0-__const_1024^post4 == 0 /\ tmp^0-tmp^post4 == 0 /\ -n_promoted_1^post4+n_promoted_1^0 == 0 /\ i5^0-i5^post4 == 0 /\ tmp___0^0-tmp___0^post4 == 0 /\ n_promoted_1^0 <= 0), cost: 1
New rule:
l3 -> l1 : n_promoted_1^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l4 : tmp___0^0'=tmp___0^post5, i5^0'=i5^post5, tmp^0'=tmp^post5, __const_1024^0'=__const_1024^post5, n_promoted_1^0'=n_promoted_1^post5, (n_promoted_1^0-n_promoted_1^post5 == 0 /\ tmp___0^0-tmp___0^post5 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -__const_1024^post5+__const_1024^0 == 0 /\ i5^0-i5^post5 == 0), cost: 1
New rule:
l2 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l2 : tmp___0^0'=tmp___0^post7, i5^0'=i5^post7, tmp^0'=tmp^post7, __const_1024^0'=__const_1024^post7, n_promoted_1^0'=n_promoted_1^post7, (-tmp^post7+tmp^0 == 0 /\ -1-i5^0+i5^post7 == 0 /\ n_promoted_1^0-n_promoted_1^post7 == 0 /\ __const_1024^0-__const_1024^post7 == 0 /\ tmp___0^0-tmp___0^post7 == 0), cost: 1
New rule:
l4 -> l2 : i5^0'=1+i5^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l3 : tmp___0^0'=tmp___0^post8, i5^0'=i5^post8, tmp^0'=tmp^post8, __const_1024^0'=__const_1024^post8, n_promoted_1^0'=n_promoted_1^post8, (0 == 0 /\ tmp___0^0-tmp___0^post8 == 0 /\ n_promoted_1^post8-tmp^post8 == 0 /\ -__const_1024^post8+__const_1024^0 == 0 /\ i5^0-i5^post8 == 0), cost: 1
New rule:
l6 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l6 : tmp___0^0'=tmp___0^post9, i5^0'=i5^post9, tmp^0'=tmp^post9, __const_1024^0'=__const_1024^post9, n_promoted_1^0'=n_promoted_1^post9, (-tmp^post9+tmp^0 == 0 /\ n_promoted_1^0-n_promoted_1^post9 == 0 /\ __const_1024^0-__const_1024^post9 == 0 /\ i5^0-i5^post9 == 0 /\ tmp___0^0-tmp___0^post9 == 0), cost: 1
New rule:
l7 -> l6 : TRUE, cost: 1

Simplified rules
Start location: l7
  10: l0 -> l1 : tmp___0^0'=tmp___0^post0, 1-__const_1024^0+n_promoted_1^0 <= 0, cost: 1
  11: l0 -> l1 : __const_1024^0-n_promoted_1^0 <= 0, cost: 1
  12: l1 -> l2 : i5^0'=0, TRUE, cost: 1
  15: l2 -> l4 : TRUE, cost: 1
  13: l3 -> l0 : -1+n_promoted_1^0 >= 0, cost: 1
  14: l3 -> l1 : n_promoted_1^0 <= 0, cost: 1
  16: l4 -> l2 : i5^0'=1+i5^0, TRUE, cost: 1
  17: l6 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 1
  18: l7 -> l6 : TRUE, cost: 1


Eliminating location l6 by chaining:

Applied chaining
First rule:
l7 -> l6 : TRUE, cost: 1
Second rule:
l6 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 1
New rule:
l7 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 17 18

Eliminating location l4 by chaining:

Applied chaining
First rule:
l2 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l2 : i5^0'=1+i5^0, TRUE, cost: 1
New rule:
l2 -> l2 : i5^0'=1+i5^0, TRUE, cost: 2

Applied deletion
Removed the following rules: 15 16

Eliminated locations on linear paths
Start location: l7
  10: l0 -> l1 : tmp___0^0'=tmp___0^post0, 1-__const_1024^0+n_promoted_1^0 <= 0, cost: 1
  11: l0 -> l1 : __const_1024^0-n_promoted_1^0 <= 0, cost: 1
  12: l1 -> l2 : i5^0'=0, TRUE, cost: 1
  20: l2 -> l2 : i5^0'=1+i5^0, TRUE, cost: 2
  13: l3 -> l0 : -1+n_promoted_1^0 >= 0, cost: 1
  14: l3 -> l1 : n_promoted_1^0 <= 0, cost: 1
  19: l7 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 2


Applied nonterm
Original rule:
l2 -> l2 : i5^0'=1+i5^0, TRUE, cost: 2
New rule:
l2 -> [8] : n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JlNkLc.txt

Applied deletion
Removed the following rules: 20

Accelerated simple loops
Start location: l7
  10: l0 -> l1 : tmp___0^0'=tmp___0^post0, 1-__const_1024^0+n_promoted_1^0 <= 0, cost: 1
  11: l0 -> l1 : __const_1024^0-n_promoted_1^0 <= 0, cost: 1
  12: l1 -> l2 : i5^0'=0, TRUE, cost: 1
  21: l2 -> [8] : n >= 0, cost: NONTERM
  13: l3 -> l0 : -1+n_promoted_1^0 >= 0, cost: 1
  14: l3 -> l1 : n_promoted_1^0 <= 0, cost: 1
  19: l7 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 2


Applied chaining
First rule:
l1 -> l2 : i5^0'=0, TRUE, cost: 1
Second rule:
l2 -> [8] : n >= 0, cost: NONTERM
New rule:
l1 -> [8] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 21

Chained accelerated rules with incoming rules
Start location: l7
  10: l0 -> l1 : tmp___0^0'=tmp___0^post0, 1-__const_1024^0+n_promoted_1^0 <= 0, cost: 1
  11: l0 -> l1 : __const_1024^0-n_promoted_1^0 <= 0, cost: 1
  12: l1 -> l2 : i5^0'=0, TRUE, cost: 1
  22: l1 -> [8] : TRUE, cost: NONTERM
  13: l3 -> l0 : -1+n_promoted_1^0 >= 0, cost: 1
  14: l3 -> l1 : n_promoted_1^0 <= 0, cost: 1
  19: l7 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l7
  10: l0 -> l1 : tmp___0^0'=tmp___0^post0, 1-__const_1024^0+n_promoted_1^0 <= 0, cost: 1
  11: l0 -> l1 : __const_1024^0-n_promoted_1^0 <= 0, cost: 1
  22: l1 -> [8] : TRUE, cost: NONTERM
  13: l3 -> l0 : -1+n_promoted_1^0 >= 0, cost: 1
  14: l3 -> l1 : n_promoted_1^0 <= 0, cost: 1
  19: l7 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 2


Eliminating location l3 by chaining:

Applied chaining
First rule:
l7 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 2
Second rule:
l3 -> l0 : -1+n_promoted_1^0 >= 0, cost: 1
New rule:
l7 -> l0 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, (0 == 0 /\ -1+tmp^post8 >= 0), cost: 3

Applied simplification
Original rule:
l7 -> l0 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, (0 == 0 /\ -1+tmp^post8 >= 0), cost: 3
New rule:
l7 -> l0 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, -1+tmp^post8 >= 0, cost: 3

Applied chaining
First rule:
l7 -> l3 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, 0 == 0, cost: 2
Second rule:
l3 -> l1 : n_promoted_1^0 <= 0, cost: 1
New rule:
l7 -> l1 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, (0 == 0 /\ tmp^post8 <= 0), cost: 3

Applied simplification
Original rule:
l7 -> l1 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, (0 == 0 /\ tmp^post8 <= 0), cost: 3
New rule:
l7 -> l1 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, tmp^post8 <= 0, cost: 3

Applied deletion
Removed the following rules: 13 14 19

Eliminated locations on tree-shaped paths
Start location: l7
  10: l0 -> l1 : tmp___0^0'=tmp___0^post0, 1-__const_1024^0+n_promoted_1^0 <= 0, cost: 1
  11: l0 -> l1 : __const_1024^0-n_promoted_1^0 <= 0, cost: 1
  22: l1 -> [8] : TRUE, cost: NONTERM
  23: l7 -> l0 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, -1+tmp^post8 >= 0, cost: 3
  24: l7 -> l1 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, tmp^post8 <= 0, cost: 3


Eliminating location l0 by chaining:

Applied chaining
First rule:
l7 -> l0 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, -1+tmp^post8 >= 0, cost: 3
Second rule:
l0 -> l1 : tmp___0^0'=tmp___0^post0, 1-__const_1024^0+n_promoted_1^0 <= 0, cost: 1
New rule:
l7 -> l1 : tmp___0^0'=tmp___0^post0, tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, (1-__const_1024^0+tmp^post8 <= 0 /\ -1+tmp^post8 >= 0), cost: 4

Applied chaining
First rule:
l7 -> l0 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, -1+tmp^post8 >= 0, cost: 3
Second rule:
l0 -> l1 : __const_1024^0-n_promoted_1^0 <= 0, cost: 1
New rule:
l7 -> l1 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, (-1+tmp^post8 >= 0 /\ __const_1024^0-tmp^post8 <= 0), cost: 4

Applied deletion
Removed the following rules: 10 11 23

Eliminating location l1 by chaining:

Applied chaining
First rule:
l7 -> l1 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, tmp^post8 <= 0, cost: 3
Second rule:
l1 -> [8] : TRUE, cost: NONTERM
New rule:
l7 -> [8] : tmp^post8 <= 0, cost: NONTERM

Applied chaining
First rule:
l7 -> l1 : tmp___0^0'=tmp___0^post0, tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, (1-__const_1024^0+tmp^post8 <= 0 /\ -1+tmp^post8 >= 0), cost: 4
Second rule:
l1 -> [8] : TRUE, cost: NONTERM
New rule:
l7 -> [8] : (1-__const_1024^0+tmp^post8 <= 0 /\ -1+tmp^post8 >= 0), cost: NONTERM

Applied chaining
First rule:
l7 -> l1 : tmp^0'=tmp^post8, n_promoted_1^0'=tmp^post8, (-1+tmp^post8 >= 0 /\ __const_1024^0-tmp^post8 <= 0), cost: 4
Second rule:
l1 -> [8] : TRUE, cost: NONTERM
New rule:
l7 -> [8] : (-1+tmp^post8 >= 0 /\ __const_1024^0-tmp^post8 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 22 24 25 26

Eliminated locations on tree-shaped paths
Start location: l7
  27: l7 -> [8] : tmp^post8 <= 0, cost: NONTERM
  28: l7 -> [8] : (1-__const_1024^0+tmp^post8 <= 0 /\ -1+tmp^post8 >= 0), cost: NONTERM
  29: l7 -> [8] : (-1+tmp^post8 >= 0 /\ __const_1024^0-tmp^post8 <= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 27 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  tmp^post8 <= 0
