NO

Initial ITS

Start location: l5
Program variables: __const_19^0 __const_29^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l1 : __const_19^0'=__const_19^post1, __const_29^0'=__const_29^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ 1+__const_19^0-x_5^0 <= 0 /\ -__const_19^post1+__const_19^0 == 0 /\ -__const_29^post1+__const_29^0 == 0 /\ -x_5^post1+x_5^0 == 0), cost: 1
   1: l0 -> l2 : __const_19^0'=__const_19^post2, __const_29^0'=__const_29^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (-x_5^post2+x_5^0 == 0 /\ -__const_19^0+x_5^0 <= 0 /\ -result_4^post2+result_4^0 == 0 /\ __const_19^0-__const_19^post2 == 0 /\ -__const_29^post2+__const_29^0 == 0 /\ y_6^0-y_6^post2 == 0), cost: 1
   3: l2 -> l0 : __const_19^0'=__const_19^post4, __const_29^0'=__const_29^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (1+x_5^post4-x_5^0 == 0 /\ __const_19^0-__const_19^post4 == 0 /\ -__const_29^post4+__const_29^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ 1-y_6^0+__const_29^0 <= 0 /\ y_6^0-y_6^post4 == 0), cost: 1
   4: l2 -> l4 : __const_19^0'=__const_19^post5, __const_29^0'=__const_29^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (result_4^0-result_4^post5 == 0 /\ 1+x_5^post5-x_5^0 == 0 /\ -__const_19^post5+__const_19^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -__const_29^post5+__const_29^0 == 0 /\ y_6^0-__const_29^0 <= 0), cost: 1
   2: l3 -> l0 : __const_19^0'=__const_19^post3, __const_29^0'=__const_29^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-x_5^post3+x_5^0 == 0 /\ -__const_19^post3+__const_19^0 == 0 /\ result_4^0-result_4^post3 == 0 /\ -y_6^post3+y_6^0 == 0 /\ -__const_29^post3+__const_29^0 == 0), cost: 1
   5: l4 -> l2 : __const_19^0'=__const_19^post6, __const_29^0'=__const_29^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (-x_5^post6+x_5^0 == 0 /\ __const_19^0-__const_19^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -__const_29^post6+__const_29^0 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
   6: l5 -> l3 : __const_19^0'=__const_19^post7, __const_29^0'=__const_29^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (-__const_19^post7+__const_19^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -__const_29^post7+__const_29^0 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1

Chained Linear Paths

Start location: l5
Program variables: __const_19^0 __const_29^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l1 : __const_19^0'=__const_19^post1, __const_29^0'=__const_29^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ 1+__const_19^0-x_5^0 <= 0 /\ -__const_19^post1+__const_19^0 == 0 /\ -__const_29^post1+__const_29^0 == 0 /\ -x_5^post1+x_5^0 == 0), cost: 1
   1: l0 -> l2 : __const_19^0'=__const_19^post2, __const_29^0'=__const_29^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (-x_5^post2+x_5^0 == 0 /\ -__const_19^0+x_5^0 <= 0 /\ -result_4^post2+result_4^0 == 0 /\ __const_19^0-__const_19^post2 == 0 /\ -__const_29^post2+__const_29^0 == 0 /\ y_6^0-y_6^post2 == 0), cost: 1
   3: l2 -> l0 : __const_19^0'=__const_19^post4, __const_29^0'=__const_29^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (1+x_5^post4-x_5^0 == 0 /\ __const_19^0-__const_19^post4 == 0 /\ -__const_29^post4+__const_29^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ 1-y_6^0+__const_29^0 <= 0 /\ y_6^0-y_6^post4 == 0), cost: 1
   8: l2 -> l2 : __const_19^0'=__const_19^post6, __const_29^0'=__const_29^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (result_4^0-result_4^post5 == 0 /\ 1+x_5^post5-x_5^0 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ -__const_29^post6+__const_29^post5 == 0 /\ -__const_19^post5+__const_19^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ x_5^post5-x_5^post6 == 0 /\ -__const_29^post5+__const_29^0 == 0 /\ y_6^0-__const_29^0 <= 0 /\ __const_19^post5-__const_19^post6 == 0 /\ -y_6^post6+y_6^post5 == 0), cost: 1
   7: l5 -> l0 : __const_19^0'=__const_19^post3, __const_29^0'=__const_29^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-__const_19^post7+__const_19^0 == 0 /\ -__const_29^post3+__const_29^post7 == 0 /\ -result_4^post3+result_4^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -y_6^post3+y_6^post7 == 0 /\ -x_5^post3+x_5^post7 == 0 /\ -__const_29^post7+__const_29^0 == 0 /\ -__const_19^post3+__const_19^post7 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1

	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l5 -> l3 : __const_19^0'=__const_19^post7, __const_29^0'=__const_29^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (-__const_19^post7+__const_19^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -__const_29^post7+__const_29^0 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	Second rule:
	l3 -> l0 : __const_19^0'=__const_19^post3, __const_29^0'=__const_29^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-x_5^post3+x_5^0 == 0 /\ -__const_19^post3+__const_19^0 == 0 /\ result_4^0-result_4^post3 == 0 /\ -y_6^post3+y_6^0 == 0 /\ -__const_29^post3+__const_29^0 == 0), cost: 1
	New rule:
	l5 -> l0 : __const_19^0'=__const_19^post3, __const_29^0'=__const_29^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-__const_19^post7+__const_19^0 == 0 /\ -__const_29^post3+__const_29^post7 == 0 /\ -result_4^post3+result_4^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -y_6^post3+y_6^post7 == 0 /\ -x_5^post3+x_5^post7 == 0 /\ -__const_29^post7+__const_29^0 == 0 /\ -__const_19^post3+__const_19^post7 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 6
	
	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l2 -> l4 : __const_19^0'=__const_19^post5, __const_29^0'=__const_29^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (result_4^0-result_4^post5 == 0 /\ 1+x_5^post5-x_5^0 == 0 /\ -__const_19^post5+__const_19^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -__const_29^post5+__const_29^0 == 0 /\ y_6^0-__const_29^0 <= 0), cost: 1
	Second rule:
	l4 -> l2 : __const_19^0'=__const_19^post6, __const_29^0'=__const_29^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (-x_5^post6+x_5^0 == 0 /\ __const_19^0-__const_19^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -__const_29^post6+__const_29^0 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
	New rule:
	l2 -> l2 : __const_19^0'=__const_19^post6, __const_29^0'=__const_29^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (result_4^0-result_4^post5 == 0 /\ 1+x_5^post5-x_5^0 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ -__const_29^post6+__const_29^post5 == 0 /\ -__const_19^post5+__const_19^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ x_5^post5-x_5^post6 == 0 /\ -__const_29^post5+__const_29^0 == 0 /\ y_6^0-__const_29^0 <= 0 /\ __const_19^post5-__const_19^post6 == 0 /\ -y_6^post6+y_6^post5 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5

Simplified Transitions

Start location: l5
Program variables: __const_19^0 __const_29^0 result_4^0 x_5^0 y_6^0
   9: l0 -> l1 : result_4^0'=result_4^post1, 1+__const_19^0-x_5^0 <= 0, cost: 1
  10: l0 -> l2 : -__const_19^0+x_5^0 <= 0, cost: 1
  11: l2 -> l0 : x_5^0'=-1+x_5^0, 1-y_6^0+__const_29^0 <= 0, cost: 1
  13: l2 -> l2 : x_5^0'=-1+x_5^0, y_6^0-__const_29^0 <= 0, cost: 1
  12: l5 -> l0 : T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : __const_19^0'=__const_19^post1, __const_29^0'=__const_29^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ 1+__const_19^0-x_5^0 <= 0 /\ -__const_19^post1+__const_19^0 == 0 /\ -__const_29^post1+__const_29^0 == 0 /\ -x_5^post1+x_5^0 == 0), cost: 1
	New rule:
	l0 -> l1 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+__const_19^0-x_5^0 <= 0), cost: 1
	
		propagated equality y_6^post1 = y_6^0
		
		propagated equality __const_19^post1 = __const_19^0
		
		propagated equality __const_29^post1 = __const_29^0
		
		propagated equality x_5^post1 = x_5^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+__const_19^0-x_5^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, 1+__const_19^0-x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, 1+__const_19^0-x_5^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : result_4^0'=result_4^post1, 1+__const_19^0-x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l2 : __const_19^0'=__const_19^post2, __const_29^0'=__const_29^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (-x_5^post2+x_5^0 == 0 /\ -__const_19^0+x_5^0 <= 0 /\ -result_4^post2+result_4^0 == 0 /\ __const_19^0-__const_19^post2 == 0 /\ -__const_29^post2+__const_29^0 == 0 /\ y_6^0-y_6^post2 == 0), cost: 1
	New rule:
	l0 -> l2 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -__const_19^0+x_5^0 <= 0), cost: 1
	
		propagated equality x_5^post2 = x_5^0
		
		propagated equality result_4^post2 = result_4^0
		
		propagated equality __const_19^post2 = __const_19^0
		
		propagated equality __const_29^post2 = __const_29^0
		
		propagated equality y_6^post2 = y_6^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -__const_19^0+x_5^0 <= 0), cost: 1
	New rule:
	l0 -> l2 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, -__const_19^0+x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, -__const_19^0+x_5^0 <= 0, cost: 1
	New rule:
	l0 -> l2 : -__const_19^0+x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : __const_19^0'=__const_19^post4, __const_29^0'=__const_29^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (1+x_5^post4-x_5^0 == 0 /\ __const_19^0-__const_19^post4 == 0 /\ -__const_29^post4+__const_29^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ 1-y_6^0+__const_29^0 <= 0 /\ y_6^0-y_6^post4 == 0), cost: 1
	New rule:
	l2 -> l0 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-y_6^0+__const_29^0 <= 0), cost: 1
	
		propagated equality x_5^post4 = -1+x_5^0
		
		propagated equality __const_19^post4 = __const_19^0
		
		propagated equality __const_29^post4 = __const_29^0
		
		propagated equality result_4^post4 = result_4^0
		
		propagated equality y_6^post4 = y_6^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-y_6^0+__const_29^0 <= 0), cost: 1
	New rule:
	l2 -> l0 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, 1-y_6^0+__const_29^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, 1-y_6^0+__const_29^0 <= 0, cost: 1
	New rule:
	l2 -> l0 : x_5^0'=-1+x_5^0, 1-y_6^0+__const_29^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l0 : __const_19^0'=__const_19^post3, __const_29^0'=__const_29^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-__const_19^post7+__const_19^0 == 0 /\ -__const_29^post3+__const_29^post7 == 0 /\ -result_4^post3+result_4^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -y_6^post3+y_6^post7 == 0 /\ -x_5^post3+x_5^post7 == 0 /\ -__const_29^post7+__const_29^0 == 0 /\ -__const_19^post3+__const_19^post7 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	New rule:
	l5 -> l0 : __const_19^0'=__const_19^post7, __const_29^0'=__const_29^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ -__const_19^post7+__const_19^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -__const_29^post7+__const_29^0 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	
		propagated equality __const_29^post3 = __const_29^post7
		
		propagated equality result_4^post3 = result_4^post7
		
		propagated equality y_6^post3 = y_6^post7
		
		propagated equality x_5^post3 = x_5^post7
		
		propagated equality __const_19^post3 = __const_19^post7
		
	Propagated Equalities

	Original rule:
	l5 -> l0 : __const_19^0'=__const_19^post7, __const_29^0'=__const_29^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ -__const_19^post7+__const_19^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -__const_29^post7+__const_29^0 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	New rule:
	l5 -> l0 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	
		propagated equality __const_19^post7 = __const_19^0
		
		propagated equality result_4^post7 = result_4^0
		
		propagated equality y_6^post7 = y_6^0
		
		propagated equality __const_29^post7 = __const_29^0
		
		propagated equality x_5^post7 = x_5^0
		
	Simplified Guard

	Original rule:
	l5 -> l0 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	New rule:
	l5 -> l0 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l0 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	New rule:
	l5 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l2 : __const_19^0'=__const_19^post6, __const_29^0'=__const_29^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (result_4^0-result_4^post5 == 0 /\ 1+x_5^post5-x_5^0 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ -__const_29^post6+__const_29^post5 == 0 /\ -__const_19^post5+__const_19^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ x_5^post5-x_5^post6 == 0 /\ -__const_29^post5+__const_29^0 == 0 /\ y_6^0-__const_29^0 <= 0 /\ __const_19^post5-__const_19^post6 == 0 /\ -y_6^post6+y_6^post5 == 0), cost: 1
	New rule:
	l2 -> l2 : __const_19^0'=__const_19^post5, __const_29^0'=__const_29^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ result_4^0-result_4^post5 == 0 /\ 1+x_5^post5-x_5^0 == 0 /\ -__const_19^post5+__const_19^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -__const_29^post5+__const_29^0 == 0 /\ y_6^0-__const_29^0 <= 0), cost: 1
	
		propagated equality result_4^post6 = result_4^post5
		
		propagated equality __const_29^post6 = __const_29^post5
		
		propagated equality x_5^post6 = x_5^post5
		
		propagated equality __const_19^post6 = __const_19^post5
		
		propagated equality y_6^post6 = y_6^post5
		
	Propagated Equalities

	Original rule:
	l2 -> l2 : __const_19^0'=__const_19^post5, __const_29^0'=__const_29^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ result_4^0-result_4^post5 == 0 /\ 1+x_5^post5-x_5^0 == 0 /\ -__const_19^post5+__const_19^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -__const_29^post5+__const_29^0 == 0 /\ y_6^0-__const_29^0 <= 0), cost: 1
	New rule:
	l2 -> l2 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ y_6^0-__const_29^0 <= 0), cost: 1
	
		propagated equality result_4^post5 = result_4^0
		
		propagated equality x_5^post5 = -1+x_5^0
		
		propagated equality __const_19^post5 = __const_19^0
		
		propagated equality y_6^post5 = y_6^0
		
		propagated equality __const_29^post5 = __const_29^0
		
	Simplified Guard

	Original rule:
	l2 -> l2 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ y_6^0-__const_29^0 <= 0), cost: 1
	New rule:
	l2 -> l2 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, y_6^0-__const_29^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l2 : __const_19^0'=__const_19^0, __const_29^0'=__const_29^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, y_6^0-__const_29^0 <= 0, cost: 1
	New rule:
	l2 -> l2 : x_5^0'=-1+x_5^0, y_6^0-__const_29^0 <= 0, cost: 1

Step with 12

	Trace

	12[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	12[T], 9[(1+__const_19^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {9[T]}]

Step with 10

	Trace

	12[T], 10[(-__const_19^0+x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T]}, {}]

Step with 11

	Trace

	12[T], 10[(-__const_19^0+x_5^0 <= 0)], 11[(1-y_6^0+__const_29^0 <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}]

Nonterm

Start location: l5
Program variables: __const_19^0 __const_29^0 result_4^0 x_5^0 y_6^0
   9: l0 -> l1 : result_4^0'=result_4^post1, 1+__const_19^0-x_5^0 <= 0, cost: 1
  10: l0 -> l2 : -__const_19^0+x_5^0 <= 0, cost: 1
  14: l0 -> LoAT_sink : (-1+n >= 0 /\ -1+y_6^0-__const_29^0 >= 0 /\ __const_19^0-x_5^0 >= 0), cost: NONTERM
  15: l0 -> l0 : x_5^0'=-n+x_5^0, (-1+n >= 0 /\ -1+y_6^0-__const_29^0 >= 0 /\ __const_19^0-x_5^0 >= 0), cost: 1
  11: l2 -> l0 : x_5^0'=-1+x_5^0, 1-y_6^0+__const_29^0 <= 0, cost: 1
  13: l2 -> l2 : x_5^0'=-1+x_5^0, y_6^0-__const_29^0 <= 0, cost: 1
  12: l5 -> l0 : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l0 -> l0 : x_5^0'=-1+x_5^0, (-__const_19^0+x_5^0 <= 0 /\ 1-y_6^0+__const_29^0 <= 0), cost: 1
	New rule:
	l0 -> LoAT_sink : (-1+n >= 0 /\ -1+y_6^0-__const_29^0 >= 0 /\ __const_19^0-x_5^0 >= 0), cost: NONTERM

		-1+y_6^0-__const_29^0 >= 0 [0]: monotonic increase yields -1+y_6^0-__const_29^0 >= 0
		
		__const_19^0-x_5^0 >= 0 [0]: monotonic increase yields __const_19^0-x_5^0 >= 0
		
		Replacement map: {-1+y_6^0-__const_29^0 >= 0 -> -1+y_6^0-__const_29^0 >= 0, __const_19^0-x_5^0 >= 0 -> __const_19^0-x_5^0 >= 0}

	Loop Acceleration

	Original rule:
	l0 -> l0 : x_5^0'=-1+x_5^0, (-__const_19^0+x_5^0 <= 0 /\ 1-y_6^0+__const_29^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : x_5^0'=-n+x_5^0, (-1+n >= 0 /\ -1+y_6^0-__const_29^0 >= 0 /\ __const_19^0-x_5^0 >= 0), cost: 1

		-1+y_6^0-__const_29^0 >= 0 [0]: monotonic increase yields -1+y_6^0-__const_29^0 >= 0
		
		__const_19^0-x_5^0 >= 0 [0]: monotonic increase yields __const_19^0-x_5^0 >= 0
		
		Replacement map: {-1+y_6^0-__const_29^0 >= 0 -> -1+y_6^0-__const_29^0 >= 0, __const_19^0-x_5^0 >= 0 -> __const_19^0-x_5^0 >= 0}

Step with 14

	Trace

	12[T], 14[(-1+n >= 0 /\ -1+y_6^0-__const_29^0 >= 0 /\ __const_19^0-x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T]}, {14[T]}]

Refute

	Counterexample

	[ __const_19^0=0 __const_29^0=0 result_4^0=0 x_5^0=0 y_6^0=1 ] 12 [ __const_19^0=0 __const_29^0=0 result_4^0=0 x_5^0=0 y_6^0=1 ] 14
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
