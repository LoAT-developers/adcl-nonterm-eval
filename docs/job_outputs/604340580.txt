YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_n -> Â¿functionCall(__VERIFIER_nondet_int), main_b -> Â¿functionCall(__VERIFIER_nondet_int), main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l17, not((main_x >= 0))>
<l2, l3, (main_x >= 0)>
<l3, l17, not((0 <= main_y))>
<l3, l4, (0 <= main_y)>
<l4, l17, not((main_y <= main_n))>
<l4, l5, (main_y <= main_n)>
<l5, l6, (main_b = 0)>
<l5, l11, not((main_b = 0))>
<l6, l7, true, seq{main_y -> (main_y + 1)}>
<l7, l8, not((Â¿functionCall(__VERIFIER_nondet_int) = 0))>
<l7, l10, (Â¿functionCall(__VERIFIER_nondet_int) = 0)>
<l8, l9, true, seq{main_b -> 1}>
<l9, l10, true>
<l10, l16, true>
<l11, l12, true, seq{main_y -> (main_y - 1)}>
<l12, l13, not((Â¿functionCall(__VERIFIER_nondet_int) = 0))>
<l12, l15, (Â¿functionCall(__VERIFIER_nondet_int) = 0)>
<l13, l14, true, seq{main_x -> (main_x - 1), main_b -> 0}>
<l14, l15, true>
<l15, l16, true>
<l16, l2, true>
<l17, l18, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l19, true, seq{main__func_return_ -> 0}>
<l19, l20, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l20, l21, true, seq{main_n -> varCall_1}>
<l21, l22, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l22, l23, true, seq{main_b -> varCall_2}>
<l23, l24, true, seq{varCall_3 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l24, l25, true, seq{main_x -> varCall_3}>
<l25, l26, true, seq{varCall_4 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l26, l1, true, seq{main_y -> varCall_4}>
<l1, l2, true>
<l2, l3, (main_x >= 0)>
<l2, l17, not((main_x >= 0))>
<l3, l4, (0 <= main_y)>
<l3, l17, not((0 <= main_y))>
<l4, l5, (main_y <= main_n)>
<l4, l17, not((main_y <= main_n))>
<l5, l6, (main_b = 0)>
<l5, l11, not((main_b = 0))>
<l6, l7, true, seq{main_y -> (main_y + 1)}>
<l7, l27, true, seq{varCall_5 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l27, l10, (varCall_5 = 0)>
<l27, l8, (varCall_5 = 1)>
<l8, l9, true, seq{main_b -> 1}>
<l9, l10, true>
<l10, l16, true>
<l11, l12, true, seq{main_y -> (main_y - 1)}>
<l12, l28, true, seq{varCall_6 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l28, l15, (varCall_6 = 0)>
<l28, l13, (varCall_6 = 1)>
<l13, l14, true, seq{main_x -> (main_x - 1), main_b -> 0}>
<l14, l15, true>
<l15, l16, true>
<l16, l2, true>
<l17, l18, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
18, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [6 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 15, col: 6> <line: 16, col: 6> <line: 17, col: 6> <line: 18, col: 6> <line: 22, col: 8> <line: 27, col: 8>
main | function | [integer, ()] | <line: 13, col: 1>
x | local variable | integer | <line: 14, col: 5> | <line: 17, col: 2> <line: 19, col: 9> <line: 28, col: 5> <line: 28, col: 9>
y | local variable | integer | <line: 14, col: 5> | <line: 18, col: 2> <line: 19, col: 24> <line: 19, col: 29> <line: 21, col: 4> <line: 21, col: 8> <line: 26, col: 4> <line: 26, col: 8>
n | local variable | integer | <line: 14, col: 5> | <line: 15, col: 2> <line: 19, col: 34>
b | local variable | integer | <line: 14, col: 5> | <line: 16, col: 2> <line: 20, col: 7> <line: 23, col: 5> <line: 29, col: 5>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef9) /\ (main_y = undef10) /\ (main_n = undef7) /\ (main_b = undef8)>
<l2, l2, (main_x >= 0) /\ (0 <= main_y) /\ (main_y <= main_n) /\ (main_b = 0) /\ (undef11 = 0), par{main_y -> (main_y + 1), varCall_5 -> undef11}>
<l2, l2, (main_x >= 0) /\ (0 <= main_y) /\ (main_y <= main_n) /\ (main_b = 0) /\ (undef11 = 1), par{main_y -> (main_y + 1), main_b -> 1, varCall_5 -> undef11}>
<l2, l2, (main_x >= 0) /\ (0 <= main_y) /\ (main_y <= main_n) /\ (main_b < 0) /\ (undef12 = 0), par{main_y -> (main_y - 1), varCall_6 -> undef12}>
<l2, l2, (main_x >= 0) /\ (0 <= main_y) /\ (main_y <= main_n) /\ (main_b < 0) /\ (undef12 = 1), par{main_x -> (main_x - 1), main_y -> (main_y - 1), main_b -> 0, varCall_6 -> undef12}>
<l2, l2, (main_x >= 0) /\ (0 <= main_y) /\ (main_y <= main_n) /\ (main_b > 0) /\ (undef12 = 0), par{main_y -> (main_y - 1), varCall_6 -> undef12}>
<l2, l2, (main_x >= 0) /\ (0 <= main_y) /\ (main_y <= main_n) /\ (main_b > 0) /\ (undef12 = 1), par{main_x -> (main_x - 1), main_y -> (main_y - 1), main_b -> 0, varCall_6 -> undef12}>
<l2, l18, (main_x >= 0) /\ (0 <= main_y) /\ not((main_y <= main_n))>
<l2, l18, (main_x >= 0) /\ not((0 <= main_y))>
<l2, l18, not((main_x >= 0))>

Fresh variables:
undef7, undef8, undef9, undef10, undef11, undef12, 

Undef variables:
undef7, undef8, undef9, undef10, undef11, undef12, 

Abstraction variables:

Exit nodes:
18, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ main_b = 0 /\ undef11 = 0, {main_y -> 1 + main_y, varCall_5 -> undef11, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ main_b = 0 /\ undef11 = 1, {main_y -> 1 + main_y, main_b -> 1, varCall_5 -> undef11, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ 1 + main_b <= 0 /\ undef12 = 0, {main_y -> -1 + main_y, varCall_6 -> undef12, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ 1 + main_b <= 0 /\ undef12 = 1, {main_x -> -1 + main_x, main_y -> -1 + main_y, main_b -> 0, varCall_6 -> undef12, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ 1 <= main_b /\ undef12 = 0, {main_y -> -1 + main_y, varCall_6 -> undef12, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ 1 <= main_b /\ undef12 = 1, {main_x -> -1 + main_x, main_y -> -1 + main_y, main_b -> 0, varCall_6 -> undef12, rest remain the same}>
Variables:
main_x, main_y, main_n, main_b, varCall_5, varCall_6

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef9 /\ main_y = undef10 /\ main_n = undef7 /\ main_b = undef8, {all remain the same}>

Graph 2
<l2, l18, 0 <= main_x /\ 0 <= main_y /\ 1 + main_n <= main_y, {all remain the same}>
<l2, l18, 0 <= main_x /\ 1 + main_y <= 0, {all remain the same}>
<l2, l18, 1 + main_x <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 18 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.015922

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003578s
[33mRanking function: [36mmain_x[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ main_b = 0 /\ undef11 = 0, {main_y -> 1 + main_y, varCall_5 -> undef11, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ main_b = 0 /\ undef11 = 1, {main_y -> 1 + main_y, main_b -> 1, varCall_5 -> undef11, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ 1 + main_b <= 0 /\ undef12 = 0, {main_y -> -1 + main_y, varCall_6 -> undef12, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ 1 <= main_b /\ undef12 = 0, {main_y -> -1 + main_y, varCall_6 -> undef12, rest remain the same}>
Variables:
main_x, main_y, main_n, main_b, varCall_5, varCall_6
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001660s
[33mRanking function: [36m-2*main_b[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ main_b = 0 /\ undef11 = 0, {main_y -> 1 + main_y, varCall_5 -> undef11, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ 1 + main_b <= 0 /\ undef12 = 0, {main_y -> -1 + main_y, varCall_6 -> undef12, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ 1 <= main_b /\ undef12 = 0, {main_y -> -1 + main_y, varCall_6 -> undef12, rest remain the same}>
Variables:
main_x, main_y, main_n, main_b, varCall_5, varCall_6
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001119s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006019s
[8183 : 8185]
[8183 : 8186]
Successful child: 8186
[33mRanking function: [36mmain_y
[33mRanking function and negation of Quasi-Invariant applied[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ main_b = 0 /\ undef11 = 0, {main_y -> 1 + main_y, varCall_5 -> undef11, rest remain the same}>
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ 1 + main_b <= 0 /\ undef12 = 0, {main_y -> -1 + main_y, varCall_6 -> undef12, rest remain the same}>
Variables:
main_x, main_y, main_n, main_b, varCall_5, varCall_6
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000979s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004678s
[8183 : 8190]
[8183 : 8191]
Successful child: 8191
[33mRanking function: [36mmain_y
[33mRanking function and negation of Quasi-Invariant applied[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= main_x /\ main_y <= main_n /\ 0 <= main_y /\ main_b = 0 /\ undef11 = 0, {main_y -> 1 + main_y, varCall_5 -> undef11, rest remain the same}>
Variables:
main_x, main_y, main_n, main_b, varCall_5
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000895s
[33mRanking function: [36m-main_y + main_n[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l18}...
No cycles found.

[32mProgram Terminates[0m
