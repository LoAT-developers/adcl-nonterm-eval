NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l6, true>
<l1, l2, (undef3 > ~(1)) /\ (arg2 > 1) /\ ((undef4 - (2 * undef5)) = 0) /\ (undef4 > ~(1)) /\ (arg1 > 0)>
<l2, l3, (undef8 > ~(1)) /\ (arg2 > 1) /\ ((undef9 - (2 * undef10)) = 0) /\ (undef9 > ~(1)) /\ (arg1 > 0) /\ ((undef9 - (2 * undef10)) < 2) /\ ((undef9 - (2 * undef10)) >= 0), par{arg1 -> (0 - undef8), arg2 -> undef7}>
<l1, l2, (undef13 > ~(1)) /\ (arg2 > 1) /\ ((undef14 - (2 * undef15)) = 1) /\ (undef14 > ~(1)) /\ (arg1 > 0)>
<l2, l4, (undef16 > ~(1)) /\ (arg2 > 1) /\ ((undef18 - (2 * undef19)) = 1) /\ (undef18 > ~(1)) /\ (arg1 > 0) /\ ((undef18 - (2 * undef19)) < 2) /\ ((undef18 - (2 * undef19)) >= 0), par{arg1 -> undef16, arg2 -> undef17}>
<l4, l5, (0 = arg1), par{arg1 -> 0, arg2 -> undef21}>
<l4, l5, (arg1 > 0) /\ (arg1 < 6), par{arg1 -> (arg1 - 1), arg2 -> undef23}>
<l3, l5, (arg1 < 1) /\ (arg1 < 6) /\ (arg1 > ~(6)), par{arg2 -> undef25}>
<l5, l4, (arg1 > ~(1)), par{arg2 -> undef27}>
<l5, l3, (arg1 < 0), par{arg1 -> (arg1 + 1), arg2 -> undef29}>
<l6, l1, true, par{arg1 -> undef30, arg2 -> undef31}>

Fresh variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef21, undef23, undef25, undef27, undef29, undef30, undef31, 

Undef variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef21, undef23, undef25, undef27, undef29, undef30, undef31, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l5, (undef3 > ~(1)) /\ (undef31 > 1) /\ ((undef4 - (2 * undef5)) = 0) /\ (undef4 > ~(1)) /\ (undef30 > 0) /\ (undef8 > ~(1)) /\ (undef31 > 1) /\ ((undef9 - (2 * undef10)) = 0) /\ (undef9 > ~(1)) /\ (undef30 > 0) /\ ((undef9 - (2 * undef10)) < 2) /\ ((undef9 - (2 * undef10)) >= 0) /\ ((0 - undef8) < 1) /\ ((0 - undef8) < 6) /\ ((0 - undef8) > ~(6)), par{arg1 -> (0 - undef8)}>
<l0, l5, (undef3 > ~(1)) /\ (undef31 > 1) /\ ((undef4 - (2 * undef5)) = 0) /\ (undef4 > ~(1)) /\ (undef30 > 0) /\ (undef16 > ~(1)) /\ (undef31 > 1) /\ ((undef18 - (2 * undef19)) = 1) /\ (undef18 > ~(1)) /\ (undef30 > 0) /\ ((undef18 - (2 * undef19)) < 2) /\ ((undef18 - (2 * undef19)) >= 0) /\ (0 = undef16), par{arg1 -> 0}>
<l0, l5, (undef3 > ~(1)) /\ (undef31 > 1) /\ ((undef4 - (2 * undef5)) = 0) /\ (undef4 > ~(1)) /\ (undef30 > 0) /\ (undef16 > ~(1)) /\ (undef31 > 1) /\ ((undef18 - (2 * undef19)) = 1) /\ (undef18 > ~(1)) /\ (undef30 > 0) /\ ((undef18 - (2 * undef19)) < 2) /\ ((undef18 - (2 * undef19)) >= 0) /\ (undef16 > 0) /\ (undef16 < 6), par{arg1 -> (undef16 - 1)}>
<l0, l5, (undef13 > ~(1)) /\ (undef31 > 1) /\ ((undef14 - (2 * undef15)) = 1) /\ (undef14 > ~(1)) /\ (undef30 > 0) /\ (undef8 > ~(1)) /\ (undef31 > 1) /\ ((undef9 - (2 * undef10)) = 0) /\ (undef9 > ~(1)) /\ (undef30 > 0) /\ ((undef9 - (2 * undef10)) < 2) /\ ((undef9 - (2 * undef10)) >= 0) /\ ((0 - undef8) < 1) /\ ((0 - undef8) < 6) /\ ((0 - undef8) > ~(6)), par{arg1 -> (0 - undef8)}>
<l0, l5, (undef13 > ~(1)) /\ (undef31 > 1) /\ ((undef14 - (2 * undef15)) = 1) /\ (undef14 > ~(1)) /\ (undef30 > 0) /\ (undef16 > ~(1)) /\ (undef31 > 1) /\ ((undef18 - (2 * undef19)) = 1) /\ (undef18 > ~(1)) /\ (undef30 > 0) /\ ((undef18 - (2 * undef19)) < 2) /\ ((undef18 - (2 * undef19)) >= 0) /\ (0 = undef16), par{arg1 -> 0}>
<l0, l5, (undef13 > ~(1)) /\ (undef31 > 1) /\ ((undef14 - (2 * undef15)) = 1) /\ (undef14 > ~(1)) /\ (undef30 > 0) /\ (undef16 > ~(1)) /\ (undef31 > 1) /\ ((undef18 - (2 * undef19)) = 1) /\ (undef18 > ~(1)) /\ (undef30 > 0) /\ ((undef18 - (2 * undef19)) < 2) /\ ((undef18 - (2 * undef19)) >= 0) /\ (undef16 > 0) /\ (undef16 < 6), par{arg1 -> (undef16 - 1)}>
<l5, l5, (arg1 > ~(1)) /\ (0 = arg1), par{arg1 -> 0}>
<l5, l5, (arg1 > ~(1)) /\ (arg1 > 0) /\ (arg1 < 6), par{arg1 -> (arg1 - 1)}>
<l5, l5, (arg1 < 0) /\ ((arg1 + 1) < 1) /\ ((arg1 + 1) < 6) /\ ((arg1 + 1) > ~(6)), par{arg1 -> (arg1 + 1)}>

Fresh variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef21, undef23, undef25, undef27, undef29, undef30, undef31, 

Undef variables:
undef3, undef4, undef5, undef7, undef8, undef9, undef10, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef21, undef23, undef25, undef27, undef29, undef30, undef31, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l5, l5, arg1 = 0, {arg1 -> 0, rest remain the same}>
<l5, l5, 1 <= arg1 /\ arg1 <= 5, {arg1 -> -1 + arg1, rest remain the same}>
<l5, l5, 1 + arg1 <= 0 /\ 0 <= 6 + arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 5 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.004693

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000769s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006862s
Trying to remove transition: <l5, l5, 1 + arg1 <= 0 /\ 0 <= 6 + arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003645s
Time used: 0.003519

LOG: SAT solveNonLinear - Elapsed time: 0.003645s
Cost: 0; Total time: 0.003519
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l5: arg1 <= 0[0m
[33mRanking function: [36m-arg1
[33mRanking function and negation of Quasi-Invariant applied[0m
New Graphs: 
Transitions:
<l5, l5, arg1 = 0, {arg1 -> 0, rest remain the same}>
<l5, l5, 1 <= arg1 /\ arg1 <= 5, {arg1 -> -1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000427s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Transitions:
<l5, l5, arg1 = 0, {arg1 -> 0, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000174s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000417s
Trying to remove transition: <l5, l5, arg1 = 0, {arg1 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.001179s
Time used: 0.001116
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.029484s
Time used: 0.029379
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.328750s
Time used: 0.328426
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.002264s
Time used: 1.00026
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008529s
Time used: 0.004021
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000665s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000729s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l5, l5, arg1 = 0, {arg1 -> 0, rest remain the same}>
<l5, l5, 1 <= arg1 /\ arg1 <= 5, {arg1 -> -1 + arg1, rest remain the same}>
<l5, l5, 1 + arg1 <= 0 /\ 0 <= 6 + arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Checking conditional non-termination of SCC {l5}...
EXIT TRANSITIONS:
<l5, end, 6 <= arg1, {all remain the same}>
<l5, end, 7 + arg1 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005239s
Time used: 0.005085
Improving Solution with cost 3 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.009716s
Time used: 0.009714
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.008147s
Time used: 0.008146

LOG: SAT solveNonLinear - Elapsed time: 0.023102s
Cost: 1; Total time: 0.022945
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l5: arg1 <= 5[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l5: 1
Strengthening exit transition (result): 
<l5, end, 7 + arg1 <= 0, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, arg1 = 0, {arg1 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, 1 <= arg1 /\ arg1 <= 5, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, 1 + arg1 <= 0 /\ 0 <= 6 + arg1, {arg1 -> 1 + arg1, rest remain the same}>

Checking conditional non-termination of SCC {l5}...
EXIT TRANSITIONS:
<l5, end, 7 + arg1 <= 0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004450s
Time used: 0.004302
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.006545s
Time used: 0.006543

LOG: SAT solveNonLinear - Elapsed time: 0.010995s
Cost: 0; Total time: 0.010845
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l5: 0 <= 5 + arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l5: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, arg1 = 0, {arg1 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, 1 <= arg1 /\ arg1 <= 5, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, 1 + arg1 <= 0 /\ 0 <= 5 + arg1, {arg1 -> 1 + arg1, rest remain the same}>

Calling reachability with...
Transition: <l5, end, true, {all remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l5, end, true, {all remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l5, end, true, {all remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l5, end, true, {all remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l5, end, true, {all remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l5, end, true, {all remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
OPEN EXITS: 
<l5, end, arg1 <= 5 /\ 0 <= 5 + arg1, {all remain the same}>
<l5, end, arg1 <= 5 /\ 0 <= 5 + arg1, {all remain the same}>
<l5, end, arg1 <= 5 /\ 0 <= 5 + arg1, {all remain the same}>
<l5, end, arg1 <= 5 /\ 0 <= 5 + arg1, {all remain the same}>
<l5, end, arg1 <= 5 /\ 0 <= 5 + arg1, {all remain the same}>
<l5, end, arg1 <= 5 /\ 0 <= 5 + arg1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
Transition: <l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
Conditions: arg1 <= 5, 0 <= 5 + arg1, 
OPEN EXITS: 
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef8 /\ 0 <= undef9 /\ undef8 <= 5 /\ undef4 = 2*undef5 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef3 /\ 0 <= undef4 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef18 = 1 + 2*undef19 /\ undef4 = 2*undef5, {arg1 -> -1 + undef16, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef8 /\ 0 <= undef9 /\ 0 <= undef13 /\ 0 <= undef14 /\ undef8 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef9 = 2*undef10, {arg1 -> -undef8, rest remain the same}>
<l0, l5, 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19 /\ undef16 = 0, {arg1 -> 0, rest remain the same}>
<l0, l5, 1 <= undef16 /\ 1 <= undef30 /\ 2 <= undef31 /\ 0 <= undef13 /\ 0 <= undef14 /\ 0 <= undef18 /\ undef16 <= 5 /\ undef14 = 1 + 2*undef15 /\ undef18 = 1 + 2*undef19, {arg1 -> -1 + undef16, rest remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
