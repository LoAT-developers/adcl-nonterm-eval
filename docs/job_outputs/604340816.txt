NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_i -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l15, not((main_i > 0))>
<l2, l3, (main_i > 0)>
<l3, l15, not((main_i < 50))>
<l3, l4, (main_i < 50)>
<l4, l5, (main_i < 20)>
<l4, l7, not((main_i < 20))>
<l5, l6, true, seq{main_i -> (main_i - 1)}>
<l6, l7, true>
<l7, l8, (main_i > 10)>
<l7, l10, not((main_i > 10))>
<l8, l9, true, seq{main_i -> (main_i + 1)}>
<l9, l10, true>
<l10, l14, not((30 <= main_i))>
<l10, l11, (30 <= main_i)>
<l11, l12, (main_i <= 40)>
<l11, l14, not((main_i <= 40))>
<l12, l13, true, seq{main_i -> (main_i - 1)}>
<l13, l14, true>
<l14, l2, true>
<l15, l16, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l17, true, seq{main__func_return_ -> 0}>
<l17, l18, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l18, l1, true, seq{main_i -> varCall_1}>
<l1, l2, true>
<l2, l3, (main_i > 0)>
<l2, l15, not((main_i > 0))>
<l3, l4, (main_i < 50)>
<l3, l15, not((main_i < 50))>
<l4, l5, (main_i < 20)>
<l4, l7, not((main_i < 20))>
<l5, l6, true, seq{main_i -> (main_i - 1)}>
<l6, l7, true>
<l7, l8, (main_i > 10)>
<l7, l10, not((main_i > 10))>
<l8, l9, true, seq{main_i -> (main_i + 1)}>
<l9, l10, true>
<l10, l11, (30 <= main_i)>
<l10, l14, not((30 <= main_i))>
<l11, l12, (main_i <= 40)>
<l11, l14, not((main_i <= 40))>
<l12, l13, true, seq{main_i -> (main_i - 1)}>
<l13, l14, true>
<l14, l2, true>
<l15, l16, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
16, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [3 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1> | <line: 7, col: 9>
main | function | [integer, ()] | <line: 5, col: 1>
i | local variable | integer | <line: 6, col: 5> | <line: 7, col: 5> <line: 9, col: 12> <line: 9, col: 21> <line: 10, col: 13> <line: 11, col: 13> <line: 11, col: 17> <line: 13, col: 13> <line: 14, col: 13> <line: 14, col: 17> <line: 16, col: 19> <line: 16, col: 24> <line: 17, col: 13> <line: 17, col: 17>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_i = undef2)>
<l2, l2, (main_i > 0) /\ (main_i < 50) /\ (main_i < 20) /\ ((main_i - 1) > 10) /\ not((30 <= ((main_i - 1) + 1))), par{main_i -> ((main_i - 1) + 1)}>
<l2, l2, (main_i > 0) /\ (main_i < 50) /\ (main_i < 20) /\ not(((main_i - 1) > 10)) /\ not((30 <= (main_i - 1))), par{main_i -> (main_i - 1)}>
<l2, l2, (main_i > 0) /\ (main_i < 50) /\ not((main_i < 20)) /\ (main_i > 10) /\ (30 <= (main_i + 1)) /\ ((main_i + 1) <= 40), par{main_i -> ((main_i + 1) - 1)}>
<l2, l2, (main_i > 0) /\ (main_i < 50) /\ not((main_i < 20)) /\ (main_i > 10) /\ (30 <= (main_i + 1)) /\ not(((main_i + 1) <= 40)), par{main_i -> (main_i + 1)}>
<l2, l2, (main_i > 0) /\ (main_i < 50) /\ not((main_i < 20)) /\ (main_i > 10) /\ not((30 <= (main_i + 1))), par{main_i -> (main_i + 1)}>
<l2, l16, (main_i > 0) /\ not((main_i < 50))>
<l2, l16, not((main_i > 0))>

Fresh variables:
undef2, 

Undef variables:
undef2, 

Abstraction variables:

Exit nodes:
16, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, main_i <= 19 /\ 12 <= main_i, {all remain the same}>
<l2, l2, 1 <= main_i /\ main_i <= 11, {main_i -> -1 + main_i, rest remain the same}>
<l2, l2, 29 <= main_i /\ main_i <= 39, {all remain the same}>
<l2, l2, 40 <= main_i /\ main_i <= 49, {main_i -> 1 + main_i, rest remain the same}>
<l2, l2, 20 <= main_i /\ main_i <= 28, {main_i -> 1 + main_i, rest remain the same}>
Variables:
main_i

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_i = undef2, {all remain the same}>

Graph 2
<l2, l16, 50 <= main_i, {all remain the same}>
<l2, l16, main_i <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 16 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003271

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000622s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012174s
[33mPiecewise ranking function: [36mmin(-12 + 12*main_i,131 - main_i)[0m
New Graphs: 
Transitions:
<l2, l2, main_i <= 19 /\ 12 <= main_i, {all remain the same}>
<l2, l2, 29 <= main_i /\ main_i <= 39, {all remain the same}>
Variables:
main_i
> No variable changes in termination graph.
Checking conditional unfeasibility...
Calling Safety with literal 20 <= main_i and entry <l2, l2, true, {all remain the same}>

LOG: CALL check - Post:20 <= main_i - Process 1
* Exit transition: <l2, l2, true, {all remain the same}>
* Postcondition  : 20 <= main_i
Quasi-invariants: 
Location 2: 20 <= main_i ; 

LOG: CALL check - Post:20 <= main_i - Process 2
* Exit transition: <l0, l2, main_i = undef2, {all remain the same}>
* Postcondition  : 20 <= main_i

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000193s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000222s

LOG: NarrowEntry size 1
Narrowing transition: 
<l2, l2, main_i <= 19 /\ 12 <= main_i, {all remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= main_i /\ main_i <= 11, {main_i -> -1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l2, l2, 29 <= main_i /\ main_i <= 39, {all remain the same}>
It's unfeasible. Removing transition: 
<l2, l2, 40 <= main_i /\ main_i <= 49, {main_i -> 1 + main_i, rest remain the same}>
It's unfeasible. Removing transition: 
<l2, l2, 20 <= main_i /\ main_i <= 28, {main_i -> 1 + main_i, rest remain the same}>
ENTRIES:
<l0, l2, main_i <= 19 /\ main_i = undef2, {all remain the same}>
END ENTRIES:
GRAPH:
<l2, l2, main_i <= 19 /\ 12 <= main_i, {all remain the same}>
<l2, l2, 1 <= main_i /\ main_i <= 11, {main_i -> -1 + main_i, rest remain the same}>
END GRAPH:
EXIT: <l2, l2, true, {all remain the same}>
POST: 20 <= main_i


LOG: Try proving POST
[25568 : 25570]
[25568 : 25571]
[25568 : 25572]

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.067903s
Calling Safety with literal main_i <= 11 and entry <l2, l2, true, {all remain the same}>

LOG: CALL check - Post:main_i <= 11 - Process 3
* Exit transition: <l2, l2, true, {all remain the same}>
* Postcondition  : main_i <= 11
Quasi-invariants: 
Location 2: main_i <= 11 ; 

LOG: CALL check - Post:main_i <= 11 - Process 4
* Exit transition: <l0, l2, main_i = undef2, {all remain the same}>
* Postcondition  : main_i <= 11

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000862s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000985s

LOG: NarrowEntry size 1
Narrowing transition: 
<l2, l2, main_i <= 19 /\ 12 <= main_i, {all remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l2, l2, 1 <= main_i /\ main_i <= 11, {main_i -> -1 + main_i, rest remain the same}>
Narrowing transition: 
<l2, l2, 29 <= main_i /\ main_i <= 39, {all remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 40 <= main_i /\ main_i <= 49, {main_i -> 1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 20 <= main_i /\ main_i <= 28, {main_i -> 1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l2, 12 <= main_i /\ main_i = undef2, {all remain the same}>
END ENTRIES:
GRAPH:
<l2, l2, main_i <= 19 /\ 12 <= main_i, {all remain the same}>
<l2, l2, 29 <= main_i /\ main_i <= 39, {all remain the same}>
<l2, l2, 40 <= main_i /\ main_i <= 49, {main_i -> 1 + main_i, rest remain the same}>
<l2, l2, 20 <= main_i /\ main_i <= 28, {main_i -> 1 + main_i, rest remain the same}>
END GRAPH:
EXIT: <l2, l2, true, {all remain the same}>
POST: main_i <= 11


LOG: Try proving POST
[25568 : 25573]
[25568 : 25574]
[25568 : 25575]

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.198779s

[25568 : 25576]
[25568 : 25580]
Successful child: 25576

[32mProgram does NOT terminate[0m
