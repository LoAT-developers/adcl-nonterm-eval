WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f339_0_main_LT : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ 2-arg3P0 == 0 /\ arg1 > 0 /\ 1+arg2P0 > 0), cost: 1
   1: f339_0_main_LT -> f339_0_main_LT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1 > 0 /\ -1+arg1-arg1P1 == 0 /\ -1-arg2 == 0 /\ arg3-arg3P1 == 0 /\ -1-arg2P1 == 0), cost: 1
   2: f339_0_main_LT -> f339_0_main_LT : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg3-arg3P2 == 0 /\ 1+arg1P2 > 0 /\ 1+arg2 > 0 /\ -1+arg2-arg2P2 == 0 /\ 1+arg3 > 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f339_0_main_LT : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ 2-arg3P0 == 0 /\ arg1 > 0 /\ 1+arg2P0 > 0), cost: 1
New rule:
f1_0_main_Load -> f339_0_main_LT : arg2'=arg2P0, arg1'=arg1P0, arg3'=2, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg2P0 > 0), cost: 1

Applied preprocessing
Original rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1 > 0 /\ -1+arg1-arg1P1 == 0 /\ -1-arg2 == 0 /\ arg3-arg3P1 == 0 /\ -1-arg2P1 == 0), cost: 1
New rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=-1+arg1, (1+arg1 > 0 /\ 1+arg2 == 0), cost: 1

Applied preprocessing
Original rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg3-arg3P2 == 0 /\ 1+arg1P2 > 0 /\ 1+arg2 > 0 /\ -1+arg2-arg2P2 == 0 /\ 1+arg3 > 0), cost: 1
New rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1+arg2, arg1'=arg1P2, arg3'=1+arg3, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0), cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_Load -> f339_0_main_LT : arg2'=arg2P0, arg1'=arg1P0, arg3'=2, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg2P0 > 0), cost: 1
   5: f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=-1+arg1, (1+arg1 > 0 /\ 1+arg2 == 0), cost: 1
   6: f339_0_main_LT -> f339_0_main_LT : arg2'=-1+arg2, arg1'=arg1P2, arg3'=1+arg3, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied acceleration
Original rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=-1+arg1, (1+arg1 > 0 /\ 1+arg2 == 0), cost: 1
New rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=-n+arg1, (1+arg2 >= 0 /\ -1-arg2 >= 0 /\ -1+n >= 0 /\ 2-n+arg1 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FOGiAN.txt

Applied instantiation
Original rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=-n+arg1, (1+arg2 >= 0 /\ -1-arg2 >= 0 /\ -1+n >= 0 /\ 2-n+arg1 > 0), cost: n
New rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=-1, (1 > 0 /\ 1+arg2 >= 0 /\ -1-arg2 >= 0 /\ arg1 >= 0), cost: 1+arg1

Applied acceleration
Original rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1+arg2, arg1'=arg1P2, arg3'=1+arg3, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0), cost: 1
New rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=arg2-n0, arg1'=arg1P2, arg3'=n0+arg3, (1+arg1P2 > 0 /\ -1+n0 >= 0 /\ 1+arg3 > 0 /\ 2+arg2-n0 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_IMEPAB.txt

Applied instantiation
Original rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=arg2-n0, arg1'=arg1P2, arg3'=n0+arg3, (1+arg1P2 > 0 /\ -1+n0 >= 0 /\ 1+arg3 > 0 /\ 2+arg2-n0 > 0), cost: n0
New rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=arg1P2, arg3'=1+arg2+arg3, (1 > 0 /\ 1+arg1P2 > 0 /\ arg2 >= 0 /\ 1+arg3 > 0), cost: 1+arg2

Applied simplification
Original rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=-1, (1 > 0 /\ 1+arg2 >= 0 /\ -1-arg2 >= 0 /\ arg1 >= 0), cost: 1+arg1
New rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=-1, (1+arg2 <= 0 /\ 1+arg2 >= 0 /\ arg1 >= 0), cost: 1+arg1

Applied simplification
Original rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=arg1P2, arg3'=1+arg2+arg3, (1 > 0 /\ 1+arg1P2 > 0 /\ arg2 >= 0 /\ 1+arg3 > 0), cost: 1+arg2
New rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=arg1P2, arg3'=1+arg2+arg3, (1+arg1P2 > 0 /\ arg2 >= 0 /\ 1+arg3 > 0), cost: 1+arg2

Applied deletion
Removed the following rules: 5 6

Accelerated simple loops
Start location: __init
   4: f1_0_main_Load -> f339_0_main_LT : arg2'=arg2P0, arg1'=arg1P0, arg3'=2, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg2P0 > 0), cost: 1
   9: f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=-1, (1+arg2 <= 0 /\ 1+arg2 >= 0 /\ arg1 >= 0), cost: 1+arg1
  10: f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=arg1P2, arg3'=1+arg2+arg3, (1+arg1P2 > 0 /\ arg2 >= 0 /\ 1+arg3 > 0), cost: 1+arg2
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f339_0_main_LT : arg2'=arg2P0, arg1'=arg1P0, arg3'=2, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg2P0 > 0), cost: 1
Second rule:
f339_0_main_LT -> f339_0_main_LT : arg2'=-1, arg1'=arg1P2, arg3'=1+arg2+arg3, (1+arg1P2 > 0 /\ arg2 >= 0 /\ 1+arg3 > 0), cost: 1+arg2
New rule:
f1_0_main_Load -> f339_0_main_LT : arg2'=-1, arg1'=arg1P2, arg3'=3+arg2P0, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg2P0 > 0), cost: 2+arg2P0

Applied deletion
Removed the following rules: 9 10

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_Load -> f339_0_main_LT : arg2'=arg2P0, arg1'=arg1P0, arg3'=2, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg2P0 > 0), cost: 1
  11: f1_0_main_Load -> f339_0_main_LT : arg2'=-1, arg1'=arg1P2, arg3'=3+arg2P0, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg2P0 > 0), cost: 2+arg2P0
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

