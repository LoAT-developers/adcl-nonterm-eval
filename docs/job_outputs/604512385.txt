unknown

Initial ITS

Start location: [1]
Program variables: c flag x y z
   0: [1] -> [2] : c'=0, T, cost: 1
   1: [2] -> [3] : flag'=1, T, cost: 1
   2: [3] -> [4] : x'=nondet, T, cost: 1
   3: [4] -> [5] : y'=nondet1, T, cost: 1
   4: [5] -> [6] : z'=nondet2, T, cost: 1
   5: [6] -> [7] : (flag > 0 /\ -z+y < 0), cost: 1
  19: [6] -> [18] : (flag <= 0 \/ -z+y >= 0), cost: 1
   6: [7] -> [9] : (y > 0 /\ -1+x > 0), cost: 1
   9: [7] -> [11] : (y <= 0 \/ -1+x <= 0), cost: 1
  17: [8] -> [17] : c'=1+c, T, cost: 1
   7: [9] -> [10] : y'=y*x, T, cost: 1
   8: [10] -> [8] : T, cost: 1
  10: [11] -> [13] : (1+x < 0 /\ y > 0), cost: 1
  13: [11] -> [15] : (1+x >= 0 \/ y <= 0), cost: 1
  16: [12] -> [8] : T, cost: 1
  11: [13] -> [14] : y'=-y*x, T, cost: 1
  12: [14] -> [12] : T, cost: 1
  14: [15] -> [16] : flag'=0, T, cost: 1
  15: [16] -> [12] : T, cost: 1
  18: [17] -> [6] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: c flag x y z
  23: [1] -> [6] : c'=0, flag'=1, x'=nondet, y'=nondet1, z'=nondet2, T, cost: 1
   5: [6] -> [7] : (flag > 0 /\ -z+y < 0), cost: 1
  19: [6] -> [18] : (flag <= 0 \/ -z+y >= 0), cost: 1
   9: [7] -> [11] : (y <= 0 \/ -1+x <= 0), cost: 1
  25: [7] -> [8] : y'=y*x, (y > 0 /\ -1+x > 0), cost: 1
  26: [8] -> [6] : c'=1+c, T, cost: 1
  29: [11] -> [12] : y'=-y*x, (1+x < 0 /\ y > 0), cost: 1
  30: [11] -> [12] : flag'=0, (1+x >= 0 \/ y <= 0), cost: 1
  16: [12] -> [8] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : c'=0, T, cost: 1
	Second rule:
	[2] -> [3] : flag'=1, T, cost: 1
	New rule:
	[1] -> [3] : c'=0, flag'=1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[1] -> [3] : c'=0, flag'=1, T, cost: 1
	Second rule:
	[3] -> [4] : x'=nondet, T, cost: 1
	New rule:
	[1] -> [4] : c'=0, flag'=1, x'=nondet, T, cost: 1
	
	Applied deletion

	Removed the following rules: 2 20
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[1] -> [4] : c'=0, flag'=1, x'=nondet, T, cost: 1
	Second rule:
	[4] -> [5] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [5] : c'=0, flag'=1, x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 3 21
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[1] -> [5] : c'=0, flag'=1, x'=nondet, y'=nondet1, T, cost: 1
	Second rule:
	[5] -> [6] : z'=nondet2, T, cost: 1
	New rule:
	[1] -> [6] : c'=0, flag'=1, x'=nondet, y'=nondet1, z'=nondet2, T, cost: 1
	
	Applied deletion

	Removed the following rules: 4 22
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[7] -> [9] : (y > 0 /\ -1+x > 0), cost: 1
	Second rule:
	[9] -> [10] : y'=y*x, T, cost: 1
	New rule:
	[7] -> [10] : y'=y*x, (y > 0 /\ -1+x > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[7] -> [10] : y'=y*x, (y > 0 /\ -1+x > 0), cost: 1
	Second rule:
	[10] -> [8] : T, cost: 1
	New rule:
	[7] -> [8] : y'=y*x, (y > 0 /\ -1+x > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 8 24
	
	Eliminating location [17] by chaining:

	Applied chaining

	First rule:
	[8] -> [17] : c'=1+c, T, cost: 1
	Second rule:
	[17] -> [6] : T, cost: 1
	New rule:
	[8] -> [6] : c'=1+c, T, cost: 1
	
	Applied deletion

	Removed the following rules: 17 18
	
	Eliminating location [13] by chaining:

	Applied chaining

	First rule:
	[11] -> [13] : (1+x < 0 /\ y > 0), cost: 1
	Second rule:
	[13] -> [14] : y'=-y*x, T, cost: 1
	New rule:
	[11] -> [14] : y'=-y*x, (1+x < 0 /\ y > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 10 11
	
	Eliminating location [15] by chaining:

	Applied chaining

	First rule:
	[11] -> [15] : (1+x >= 0 \/ y <= 0), cost: 1
	Second rule:
	[15] -> [16] : flag'=0, T, cost: 1
	New rule:
	[11] -> [16] : flag'=0, (1+x >= 0 \/ y <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 13 14
	
	Eliminating location [14] by chaining:

	Applied chaining

	First rule:
	[11] -> [14] : y'=-y*x, (1+x < 0 /\ y > 0), cost: 1
	Second rule:
	[14] -> [12] : T, cost: 1
	New rule:
	[11] -> [12] : y'=-y*x, (1+x < 0 /\ y > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 12 27
	
	Eliminating location [16] by chaining:

	Applied chaining

	First rule:
	[11] -> [16] : flag'=0, (1+x >= 0 \/ y <= 0), cost: 1
	Second rule:
	[16] -> [12] : T, cost: 1
	New rule:
	[11] -> [12] : flag'=0, (1+x >= 0 \/ y <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 15 28

Step with 23

	Trace

	23[T]
	
	Blocked

	[{}, {}]

Step with 19

	Trace

	23[T], 19[(-z+y >= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	23[T]
	
	Blocked

	[{}, {19[-z+y >= 0]}]

Step with 5

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {}]

Step with 9

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {}, {}]

Step with 30

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {}, {29[T]}, {}]

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {}, {29[T]}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {}, {29[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 19

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)], 16[T], 26[T], 19[(flag <= 0)]
	
	Blocked

	[{}, {19[T]}, {}, {29[T]}, {}, {}, {5[T]}, {}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {}, {29[T]}, {}, {}, {5[T], 19[flag <= 0]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {}, {29[T]}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {}, {29[T]}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {}, {29[T], 30[y <= 0]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}]

Step with 9

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {}]

Step with 30

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {}, {}]

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 19

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)], 16[T], 26[T], 19[(flag <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {}, {}, {}, {}, {}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {}, {}, {}, {19[flag <= 0]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[1+x >= 0]}]

Step with 30

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[1+x >= 0]}, {}]

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[1+x >= 0]}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[1+x >= 0]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 19

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)], 16[T], 26[T], 19[(flag <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[1+x >= 0]}, {}, {}, {}, {}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[1+x >= 0]}, {}, {}, {19[flag <= 0]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[1+x >= 0]}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[1+x >= 0]}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[(1+x >= 0 /\ y <= 0)]}]

Step with 29

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}]

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 19

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 19[(-z+y >= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {}, {}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[-z+y >= 0]}]

Step with 5

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 9

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 29

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[T]}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[T]}, {}, {}, {}, {}, {}]

Covered

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[T]}, {}, {}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[T]}, {}, {}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[T]}, {}, {29[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {19[T]}, {9[-1+x <= 0]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {}, {5[T], 19[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {30[T]}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0]}, {29[T], 30[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {9[(y <= 0 /\ -1+x <= 0)]}]

Step with 25

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)]
	
	Blocked

	[{}, {19[T]}, {9[T]}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 5

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {9[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Restart

Step with 23

	Trace

	23[T]
	
	Blocked

	[{}, {}]

Step with 19

	Trace

	23[T], 19[(-z+y >= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	23[T]
	
	Blocked

	[{}, {19[-z+y >= 0]}]

Step with 5

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {}]

Step with 25

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)]
	
	Blocked

	[{}, {19[T]}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T]
	
	Blocked

	[{}, {19[T]}, {}, {}, {}]

Step with 5

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {}, {}, {}, {}]

Step with 25

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)]
	
	Blocked

	[{}, {19[T]}, {}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T]
	
	Blocked

	[{}, {19[T]}, {}, {}, {}, {}, {}, {}]

Covered

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)]
	
	Blocked

	[{}, {19[T]}, {}, {}, {}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {}, {}, {}, {25[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T]
	
	Blocked

	[{}, {19[T]}, {}, {}, {5[T]}]

Step with 19

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T], 19[(-z+y >= 0)]
	
	Blocked

	[{}, {19[T]}, {}, {}, {5[T]}, {}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)], 26[T]
	
	Blocked

	[{}, {19[T]}, {}, {}, {5[T], 19[-z+y >= 0]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 25[(y > 0 /\ -1+x > 0)]
	
	Blocked

	[{}, {19[T]}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {25[T]}]

Step with 9

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {}]

Step with 30

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(1+x >= 0)]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {}, {}]

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(1+x >= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(1+x >= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 19

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(1+x >= 0)], 16[T], 26[T], 19[(flag <= 0)]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {}, {}, {}, {}, {}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(1+x >= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {}, {}, {}, {19[flag <= 0]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(1+x >= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(1+x >= 0)]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {30[1+x >= 0]}]

Step with 30

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {30[1+x >= 0]}, {}]

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {30[1+x >= 0]}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {30[1+x >= 0]}, {}, {}, {}]

Covered

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {30[1+x >= 0]}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)], 30[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {30[1+x >= 0]}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {25[T]}, {30[(1+x >= 0 /\ y <= 0)]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}]

Step with 9

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {}]

Step with 30

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {}, {}]

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {}, {}, {}, {}]

Covered

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(1+x >= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[1+x >= 0]}]

Step with 30

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[1+x >= 0]}, {}]

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[1+x >= 0]}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[1+x >= 0]}, {}, {}, {}]

Covered

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[1+x >= 0]}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 30[(y <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[1+x >= 0]}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[(1+x >= 0 /\ y <= 0)]}]

Step with 29

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[T]}, {}]

Step with 16

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[T]}, {}, {}]

Step with 26

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T], 26[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[T]}, {}, {}, {}]

Covered

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)], 16[T]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[T]}, {}, {26[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)], 29[(1+x < 0 /\ y > 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {30[T]}, {16[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)], 9[(-1+x <= 0)]
	
	Blocked

	[{}, {19[T]}, {9[y <= 0], 25[T]}, {29[T], 30[T]}]

Backtrack

	Trace

	23[T], 5[(flag > 0 /\ -z+y < 0)]
	
	Blocked

	[{}, {19[T]}, {9[(y <= 0 /\ -1+x <= 0)], 25[T]}]

Backtrack

	Trace

	23[T]
	
	Blocked

	[{}, {5[T], 19[T]}]

Backtrack

	Trace

	Blocked

	[{23[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
