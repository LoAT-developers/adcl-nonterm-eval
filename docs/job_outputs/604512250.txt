unknown

Initial ITS

Start location: [1]
Program variables: x y z
   0: [1] -> [2] : x'=0, T, cost: 1
   1: [2] -> [3] : y'=100, T, cost: 1
   2: [3] -> [4] : z'=nondet, T, cost: 1
   3: [4] -> [5] : -40+x < 0, cost: 1
  11: [4] -> [11] : -40+x >= 0, cost: 1
   4: [5] -> [7] : z == 0, cost: 1
   7: [5] -> [9] : (z < 0 \/ z > 0), cost: 1
  10: [6] -> [4] : T, cost: 1
   5: [7] -> [8] : x'=1+x, T, cost: 1
   6: [8] -> [6] : T, cost: 1
   8: [9] -> [10] : x'=2+x, T, cost: 1
   9: [10] -> [6] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x y z
  13: [1] -> [4] : x'=0, y'=100, z'=nondet, T, cost: 1
   3: [4] -> [5] : -40+x < 0, cost: 1
  11: [4] -> [11] : -40+x >= 0, cost: 1
  16: [5] -> [6] : x'=1+x, z == 0, cost: 1
  17: [5] -> [6] : x'=2+x, (z < 0 \/ z > 0), cost: 1
  10: [6] -> [4] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=0, T, cost: 1
	Second rule:
	[2] -> [3] : y'=100, T, cost: 1
	New rule:
	[1] -> [3] : x'=0, y'=100, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[1] -> [3] : x'=0, y'=100, T, cost: 1
	Second rule:
	[3] -> [4] : z'=nondet, T, cost: 1
	New rule:
	[1] -> [4] : x'=0, y'=100, z'=nondet, T, cost: 1
	
	Applied deletion

	Removed the following rules: 2 12
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[5] -> [7] : z == 0, cost: 1
	Second rule:
	[7] -> [8] : x'=1+x, T, cost: 1
	New rule:
	[5] -> [8] : x'=1+x, z == 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[5] -> [9] : (z < 0 \/ z > 0), cost: 1
	Second rule:
	[9] -> [10] : x'=2+x, T, cost: 1
	New rule:
	[5] -> [10] : x'=2+x, (z < 0 \/ z > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 8
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[5] -> [8] : x'=1+x, z == 0, cost: 1
	Second rule:
	[8] -> [6] : T, cost: 1
	New rule:
	[5] -> [6] : x'=1+x, z == 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 14
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[5] -> [10] : x'=2+x, (z < 0 \/ z > 0), cost: 1
	Second rule:
	[10] -> [6] : T, cost: 1
	New rule:
	[5] -> [6] : x'=2+x, (z < 0 \/ z > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 9 15

Step with 13

	Trace

	13[T]
	
	Blocked

	[{}, {}]

Step with 3

	Trace

	13[T], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T]}, {}]

Step with 16

	Trace

	13[T], 3[(-40+x < 0)], 16[(z == 0)]
	
	Blocked

	[{}, {11[T]}, {}, {}]

Step with 10

	Trace

	13[T], 3[(-40+x < 0)], 16[(z == 0)], 10[T]
	
	Blocked

	[{}, {11[T]}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y z
  13: [1] -> [4] : x'=0, y'=100, z'=nondet, T, cost: 1
   3: [4] -> [5] : -40+x < 0, cost: 1
  11: [4] -> [11] : -40+x >= 0, cost: 1
  18: [4] -> [4] : x'=x+n, (-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0), cost: 1
  16: [5] -> [6] : x'=1+x, z == 0, cost: 1
  17: [5] -> [6] : x'=2+x, (z < 0 \/ z > 0), cost: 1
  10: [6] -> [4] : T, cost: 1

	Loop Acceleration

	Original rule:
	[4] -> [4] : x'=1+x, (-40+x < 0 /\ z == 0), cost: 1
	New rule:
	[4] -> [4] : x'=x+n, (-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0), cost: 1

		-z >= 0 [0]: monotonic increase yields -z >= 0
		
		40-x > 0 [0]: montonic decrease yields 41-x-n > 0
		
		40-x > 0 [1]: eventual increase yields (1 <= 0 /\ 40-x > 0)
		
		z >= 0 [0]: monotonic increase yields z >= 0
		
		Replacement map: {-z >= 0 -> -z >= 0, 40-x > 0 -> 41-x-n > 0, z >= 0 -> z >= 0}

	Trace

	13[T], 18[(-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0)]
	
	Blocked

	[{}, {11[T]}, {18[T]}]

Step with 11

	Trace

	13[T], 18[(-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0)], 11[(-40+x >= 0)]
	
	Blocked

	[{}, {11[T]}, {18[T]}, {}]

Backtrack

	Trace

	13[T], 18[(-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}]

Step with 3

	Trace

	13[T], 18[(-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0)], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {}]

Step with 16

	Trace

	13[T], 18[(-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0)], 3[(-40+x < 0)], 16[(z == 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {}, {}]

Step with 10

	Trace

	13[T], 18[(-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0)], 3[(-40+x < 0)], 16[(z == 0)], 10[T]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {}, {}, {}]

Covered

	Trace

	13[T], 18[(-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0)], 3[(-40+x < 0)], 16[(z == 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {}, {10[T]}]

Backtrack

	Trace

	13[T], 18[(-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0)], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {16[T]}]

Backtrack

	Trace

	13[T], 18[(-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0)]
	
	Blocked

	[{}, {11[T]}, {3[T], 11[T], 18[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {11[T], 18[T]}]

Step with 3

	Trace

	13[T], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {}]

Step with 16

	Trace

	13[T], 3[(-40+x < 0)], 16[(z == 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {}, {}]

Step with 10

	Trace

	13[T], 3[(-40+x < 0)], 16[(z == 0)], 10[T]
	
	Blocked

	[{}, {11[T], 18[T]}, {}, {}, {}]

Covered

	Trace

	13[T], 3[(-40+x < 0)], 16[(z == 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {}, {10[T]}]

Backtrack

	Trace

	13[T], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {16[T]}]

Step with 17

	Trace

	13[T], 3[(-40+x < 0)], 17[(z > 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {16[T]}, {}]

Step with 10

	Trace

	13[T], 3[(-40+x < 0)], 17[(z > 0)], 10[T]
	
	Blocked

	[{}, {11[T], 18[T]}, {16[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y z
  13: [1] -> [4] : x'=0, y'=100, z'=nondet, T, cost: 1
   3: [4] -> [5] : -40+x < 0, cost: 1
  11: [4] -> [11] : -40+x >= 0, cost: 1
  18: [4] -> [4] : x'=x+n, (-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0), cost: 1
  19: [4] -> [4] : x'=2*n2+x, (42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0), cost: 1
  16: [5] -> [6] : x'=1+x, z == 0, cost: 1
  17: [5] -> [6] : x'=2+x, (z < 0 \/ z > 0), cost: 1
  10: [6] -> [4] : T, cost: 1

	Loop Acceleration

	Original rule:
	[4] -> [4] : x'=2+x, (-40+x < 0 /\ z > 0), cost: 1
	New rule:
	[4] -> [4] : x'=2*n2+x, (42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0), cost: 1

		40-x > 0 [0]: montonic decrease yields 42-2*n2-x > 0
		
		40-x > 0 [1]: eventual increase yields (2 <= 0 /\ 40-x > 0)
		
		z > 0 [0]: monotonic increase yields z > 0
		
		Replacement map: {40-x > 0 -> 42-2*n2-x > 0, z > 0 -> z > 0}

	Trace

	13[T], 19[(42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {19[T]}]

Step with 11

	Trace

	13[T], 19[(42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0)], 11[(-40+x >= 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {19[T]}, {}]

Backtrack

	Trace

	13[T], 19[(42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {11[T], 19[T]}]

Step with 3

	Trace

	13[T], 19[(42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0)], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {11[T], 19[T]}, {}]

Step with 17

	Trace

	13[T], 19[(42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0)], 3[(-40+x < 0)], 17[(z > 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {11[T], 19[T]}, {}, {}]

Step with 10

	Trace

	13[T], 19[(42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0)], 3[(-40+x < 0)], 17[(z > 0)], 10[T]
	
	Blocked

	[{}, {11[T], 18[T]}, {11[T], 19[T]}, {}, {}, {}]

Covered

	Trace

	13[T], 19[(42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0)], 3[(-40+x < 0)], 17[(z > 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {11[T], 19[T]}, {}, {10[T]}]

Backtrack

	Trace

	13[T], 19[(42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0)], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {11[T], 19[T]}, {17[z > 0]}]

Backtrack

	Trace

	13[T], 19[(42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {3[T], 11[T], 19[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}]

Step with 3

	Trace

	13[T], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {}]

Step with 17

	Trace

	13[T], 3[(-40+x < 0)], 17[(z > 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {}, {}]

Step with 10

	Trace

	13[T], 3[(-40+x < 0)], 17[(z > 0)], 10[T]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {}, {}, {}]

Covered

	Trace

	13[T], 3[(-40+x < 0)], 17[(z > 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {}, {10[T]}]

Backtrack

	Trace

	13[T], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {17[z > 0]}]

Step with 17

	Trace

	13[T], 3[(-40+x < 0)], 17[(z < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {17[z > 0]}, {}]

Step with 10

	Trace

	13[T], 3[(-40+x < 0)], 17[(z < 0)], 10[T]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {17[z > 0]}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y z
  13: [1] -> [4] : x'=0, y'=100, z'=nondet, T, cost: 1
   3: [4] -> [5] : -40+x < 0, cost: 1
  11: [4] -> [11] : -40+x >= 0, cost: 1
  18: [4] -> [4] : x'=x+n, (-1+n >= 0 /\ -z >= 0 /\ 41-x-n > 0 /\ z >= 0), cost: 1
  19: [4] -> [4] : x'=2*n2+x, (42-2*n2-x > 0 /\ -1+n2 >= 0 /\ z > 0), cost: 1
  20: [4] -> [4] : x'=2*n3+x, (42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0), cost: 1
  16: [5] -> [6] : x'=1+x, z == 0, cost: 1
  17: [5] -> [6] : x'=2+x, (z < 0 \/ z > 0), cost: 1
  10: [6] -> [4] : T, cost: 1

	Loop Acceleration

	Original rule:
	[4] -> [4] : x'=2+x, (-40+x < 0 /\ z < 0), cost: 1
	New rule:
	[4] -> [4] : x'=2*n3+x, (42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0), cost: 1

		-z > 0 [0]: monotonic increase yields -z > 0
		
		40-x > 0 [0]: montonic decrease yields 42-2*n3-x > 0
		
		40-x > 0 [1]: eventual increase yields (2 <= 0 /\ 40-x > 0)
		
		Replacement map: {-z > 0 -> -z > 0, 40-x > 0 -> 42-2*n3-x > 0}

	Trace

	13[T], 20[(42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {20[T]}]

Step with 11

	Trace

	13[T], 20[(42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0)], 11[(-40+x >= 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {20[T]}, {}]

Backtrack

	Trace

	13[T], 20[(42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {11[T], 20[T]}]

Step with 3

	Trace

	13[T], 20[(42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0)], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {11[T], 20[T]}, {}]

Step with 17

	Trace

	13[T], 20[(42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0)], 3[(-40+x < 0)], 17[(z < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {11[T], 20[T]}, {}, {}]

Step with 10

	Trace

	13[T], 20[(42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0)], 3[(-40+x < 0)], 17[(z < 0)], 10[T]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {11[T], 20[T]}, {}, {}, {}]

Covered

	Trace

	13[T], 20[(42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0)], 3[(-40+x < 0)], 17[(z < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {11[T], 20[T]}, {}, {10[T]}]

Backtrack

	Trace

	13[T], 20[(42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0)], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {11[T], 20[T]}, {17[z < 0]}]

Backtrack

	Trace

	13[T], 20[(42-2*n3-x > 0 /\ -1+n3 >= 0 /\ -z > 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T]}, {3[T], 11[T], 20[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}]

Step with 3

	Trace

	13[T], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {}]

Step with 17

	Trace

	13[T], 3[(-40+x < 0)], 17[(z > 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {}, {}]

Step with 10

	Trace

	13[T], 3[(-40+x < 0)], 17[(z > 0)], 10[T]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {}, {}, {}]

Covered

	Trace

	13[T], 3[(-40+x < 0)], 17[(z > 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {}, {10[T]}]

Backtrack

	Trace

	13[T], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {17[z > 0]}]

Step with 17

	Trace

	13[T], 3[(-40+x < 0)], 17[(z < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {17[z > 0]}, {}]

Step with 10

	Trace

	13[T], 3[(-40+x < 0)], 17[(z < 0)], 10[T]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {17[z > 0]}, {}, {}]

Covered

	Trace

	13[T], 3[(-40+x < 0)], 17[(z < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {17[z > 0]}, {10[T]}]

Backtrack

	Trace

	13[T], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {17[(z < 0 /\ z > 0)]}]

Step with 16

	Trace

	13[T], 3[(-40+x < 0)], 16[(z == 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {17[T]}, {}]

Step with 10

	Trace

	13[T], 3[(-40+x < 0)], 16[(z == 0)], 10[T]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {17[T]}, {}, {}]

Covered

	Trace

	13[T], 3[(-40+x < 0)], 16[(z == 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {17[T]}, {10[T]}]

Backtrack

	Trace

	13[T], 3[(-40+x < 0)]
	
	Blocked

	[{}, {11[T], 18[T], 19[T], 20[T]}, {16[T], 17[T]}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {3[T], 11[T], 18[T], 19[T], 20[T]}]

Backtrack

	Trace

	Blocked

	[{13[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
