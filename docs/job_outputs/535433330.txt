NO

Initial ITS
Start location: l10
   0: l0 -> l1 : tmp1^0'=tmp1^post0, Stored^0'=Stored^post0, tmp___02^0'=tmp___02^post0, (tmp1^0 <= 0 /\ tmp___02^0-tmp___02^post0 == 0 /\ -tmp1^0 <= 0 /\ -1+Stored^post0 == 0 /\ tmp1^0-tmp1^post0 == 0), cost: 1
   1: l0 -> l2 : tmp1^0'=tmp1^post1, Stored^0'=Stored^post1, tmp___02^0'=tmp___02^post1, (tmp___02^0-tmp___02^post1 == 0 /\ Stored^0-Stored^post1 == 0 /\ 1-tmp1^0 <= 0 /\ tmp1^0-tmp1^post1 == 0), cost: 1
   2: l0 -> l2 : tmp1^0'=tmp1^post2, Stored^0'=Stored^post2, tmp___02^0'=tmp___02^post2, (tmp___02^0-tmp___02^post2 == 0 /\ tmp1^0-tmp1^post2 == 0 /\ 1+tmp1^0 <= 0 /\ -Stored^post2+Stored^0 == 0), cost: 1
   9: l1 -> l8 : tmp1^0'=tmp1^post9, Stored^0'=Stored^post9, tmp___02^0'=tmp___02^post9, (tmp1^0-tmp1^post9 == 0 /\ Stored^0-Stored^post9 == 0 /\ -tmp___02^post9+tmp___02^0 == 0), cost: 1
  13: l2 -> l7 : tmp1^0'=tmp1^post13, Stored^0'=Stored^post13, tmp___02^0'=tmp___02^post13, (-tmp___02^post13+tmp___02^0 == 0 /\ Stored^0-Stored^post13 == 0 /\ tmp1^0-tmp1^post13 == 0), cost: 1
   3: l3 -> l0 : tmp1^0'=tmp1^post3, Stored^0'=Stored^post3, tmp___02^0'=tmp___02^post3, (0 == 0 /\ -Stored^post3+Stored^0 == 0 /\ -tmp___02^post3+tmp___02^0 == 0), cost: 1
   4: l4 -> l1 : tmp1^0'=tmp1^post4, Stored^0'=Stored^post4, tmp___02^0'=tmp___02^post4, (-tmp___02^0 <= 0 /\ -Stored^post4+Stored^0 == 0 /\ -tmp___02^post4+tmp___02^0 == 0 /\ -tmp1^post4+tmp1^0 == 0 /\ tmp___02^0 <= 0), cost: 1
   5: l4 -> l3 : tmp1^0'=tmp1^post5, Stored^0'=Stored^post5, tmp___02^0'=tmp___02^post5, (-Stored^post5+Stored^0 == 0 /\ -tmp___02^post5+tmp___02^0 == 0 /\ 1-tmp___02^0 <= 0 /\ -tmp1^post5+tmp1^0 == 0), cost: 1
   6: l4 -> l3 : tmp1^0'=tmp1^post6, Stored^0'=Stored^post6, tmp___02^0'=tmp___02^post6, (-Stored^post6+Stored^0 == 0 /\ tmp1^0-tmp1^post6 == 0 /\ -tmp___02^post6+tmp___02^0 == 0 /\ 1+tmp___02^0 <= 0), cost: 1
   7: l5 -> l6 : tmp1^0'=tmp1^post7, Stored^0'=Stored^post7, tmp___02^0'=tmp___02^post7, (-tmp___02^post7+tmp___02^0 == 0 /\ -Stored^post7+Stored^0 == 0 /\ tmp1^0-tmp1^post7 == 0), cost: 1
   8: l7 -> l4 : tmp1^0'=tmp1^post8, Stored^0'=Stored^post8, tmp___02^0'=tmp___02^post8, (0 == 0 /\ Stored^0-Stored^post8 == 0 /\ tmp1^0-tmp1^post8 == 0), cost: 1
  10: l8 -> l5 : tmp1^0'=tmp1^post10, Stored^0'=Stored^post10, tmp___02^0'=tmp___02^post10, (Stored^0-Stored^post10 == 0 /\ tmp1^0-tmp1^post10 == 0 /\ -tmp___02^post10+tmp___02^0 == 0 /\ 2-Stored^0 <= 0), cost: 1
  11: l8 -> l5 : tmp1^0'=tmp1^post11, Stored^0'=Stored^post11, tmp___02^0'=tmp___02^post11, (tmp1^0-tmp1^post11 == 0 /\ Stored^0-Stored^post11 == 0 /\ Stored^0 <= 0 /\ -tmp___02^post11+tmp___02^0 == 0), cost: 1
  12: l8 -> l5 : tmp1^0'=tmp1^post12, Stored^0'=Stored^post12, tmp___02^0'=tmp___02^post12, (-tmp___02^post12+tmp___02^0 == 0 /\ tmp1^0-tmp1^post12 == 0 /\ Stored^post12 == 0 /\ 1-Stored^0 <= 0 /\ -1+Stored^0 <= 0), cost: 1
  14: l9 -> l7 : tmp1^0'=tmp1^post14, Stored^0'=Stored^post14, tmp___02^0'=tmp___02^post14, (tmp___02^0-tmp___02^post14 == 0 /\ tmp1^0-tmp1^post14 == 0 /\ Stored^post14 == 0), cost: 1
  15: l10 -> l9 : tmp1^0'=tmp1^post15, Stored^0'=Stored^post15, tmp___02^0'=tmp___02^post15, (tmp___02^0-tmp___02^post15 == 0 /\ Stored^0-Stored^post15 == 0 /\ tmp1^0-tmp1^post15 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l10
   1: l0 -> l2 : tmp1^0'=tmp1^post1, Stored^0'=Stored^post1, tmp___02^0'=tmp___02^post1, (tmp___02^0-tmp___02^post1 == 0 /\ Stored^0-Stored^post1 == 0 /\ 1-tmp1^0 <= 0 /\ tmp1^0-tmp1^post1 == 0), cost: 1
   2: l0 -> l2 : tmp1^0'=tmp1^post2, Stored^0'=Stored^post2, tmp___02^0'=tmp___02^post2, (tmp___02^0-tmp___02^post2 == 0 /\ tmp1^0-tmp1^post2 == 0 /\ 1+tmp1^0 <= 0 /\ -Stored^post2+Stored^0 == 0), cost: 1
  13: l2 -> l7 : tmp1^0'=tmp1^post13, Stored^0'=Stored^post13, tmp___02^0'=tmp___02^post13, (-tmp___02^post13+tmp___02^0 == 0 /\ Stored^0-Stored^post13 == 0 /\ tmp1^0-tmp1^post13 == 0), cost: 1
   3: l3 -> l0 : tmp1^0'=tmp1^post3, Stored^0'=Stored^post3, tmp___02^0'=tmp___02^post3, (0 == 0 /\ -Stored^post3+Stored^0 == 0 /\ -tmp___02^post3+tmp___02^0 == 0), cost: 1
   5: l4 -> l3 : tmp1^0'=tmp1^post5, Stored^0'=Stored^post5, tmp___02^0'=tmp___02^post5, (-Stored^post5+Stored^0 == 0 /\ -tmp___02^post5+tmp___02^0 == 0 /\ 1-tmp___02^0 <= 0 /\ -tmp1^post5+tmp1^0 == 0), cost: 1
   6: l4 -> l3 : tmp1^0'=tmp1^post6, Stored^0'=Stored^post6, tmp___02^0'=tmp___02^post6, (-Stored^post6+Stored^0 == 0 /\ tmp1^0-tmp1^post6 == 0 /\ -tmp___02^post6+tmp___02^0 == 0 /\ 1+tmp___02^0 <= 0), cost: 1
   8: l7 -> l4 : tmp1^0'=tmp1^post8, Stored^0'=Stored^post8, tmp___02^0'=tmp___02^post8, (0 == 0 /\ Stored^0-Stored^post8 == 0 /\ tmp1^0-tmp1^post8 == 0), cost: 1
  14: l9 -> l7 : tmp1^0'=tmp1^post14, Stored^0'=Stored^post14, tmp___02^0'=tmp___02^post14, (tmp___02^0-tmp___02^post14 == 0 /\ tmp1^0-tmp1^post14 == 0 /\ Stored^post14 == 0), cost: 1
  15: l10 -> l9 : tmp1^0'=tmp1^post15, Stored^0'=Stored^post15, tmp___02^0'=tmp___02^post15, (tmp___02^0-tmp___02^post15 == 0 /\ Stored^0-Stored^post15 == 0 /\ tmp1^0-tmp1^post15 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : tmp1^0'=tmp1^post1, Stored^0'=Stored^post1, tmp___02^0'=tmp___02^post1, (tmp___02^0-tmp___02^post1 == 0 /\ Stored^0-Stored^post1 == 0 /\ 1-tmp1^0 <= 0 /\ tmp1^0-tmp1^post1 == 0), cost: 1
New rule:
l0 -> l2 : -1+tmp1^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : tmp1^0'=tmp1^post2, Stored^0'=Stored^post2, tmp___02^0'=tmp___02^post2, (tmp___02^0-tmp___02^post2 == 0 /\ tmp1^0-tmp1^post2 == 0 /\ 1+tmp1^0 <= 0 /\ -Stored^post2+Stored^0 == 0), cost: 1
New rule:
l0 -> l2 : 1+tmp1^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : tmp1^0'=tmp1^post3, Stored^0'=Stored^post3, tmp___02^0'=tmp___02^post3, (0 == 0 /\ -Stored^post3+Stored^0 == 0 /\ -tmp___02^post3+tmp___02^0 == 0), cost: 1
New rule:
l3 -> l0 : tmp1^0'=tmp1^post3, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : tmp1^0'=tmp1^post5, Stored^0'=Stored^post5, tmp___02^0'=tmp___02^post5, (-Stored^post5+Stored^0 == 0 /\ -tmp___02^post5+tmp___02^0 == 0 /\ 1-tmp___02^0 <= 0 /\ -tmp1^post5+tmp1^0 == 0), cost: 1
New rule:
l4 -> l3 : -1+tmp___02^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : tmp1^0'=tmp1^post6, Stored^0'=Stored^post6, tmp___02^0'=tmp___02^post6, (-Stored^post6+Stored^0 == 0 /\ tmp1^0-tmp1^post6 == 0 /\ -tmp___02^post6+tmp___02^0 == 0 /\ 1+tmp___02^0 <= 0), cost: 1
New rule:
l4 -> l3 : 1+tmp___02^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l4 : tmp1^0'=tmp1^post8, Stored^0'=Stored^post8, tmp___02^0'=tmp___02^post8, (0 == 0 /\ Stored^0-Stored^post8 == 0 /\ tmp1^0-tmp1^post8 == 0), cost: 1
New rule:
l7 -> l4 : tmp___02^0'=tmp___02^post8, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l7 : tmp1^0'=tmp1^post13, Stored^0'=Stored^post13, tmp___02^0'=tmp___02^post13, (-tmp___02^post13+tmp___02^0 == 0 /\ Stored^0-Stored^post13 == 0 /\ tmp1^0-tmp1^post13 == 0), cost: 1
New rule:
l2 -> l7 : TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l7 : tmp1^0'=tmp1^post14, Stored^0'=Stored^post14, tmp___02^0'=tmp___02^post14, (tmp___02^0-tmp___02^post14 == 0 /\ tmp1^0-tmp1^post14 == 0 /\ Stored^post14 == 0), cost: 1
New rule:
l9 -> l7 : Stored^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l10 -> l9 : tmp1^0'=tmp1^post15, Stored^0'=Stored^post15, tmp___02^0'=tmp___02^post15, (tmp___02^0-tmp___02^post15 == 0 /\ Stored^0-Stored^post15 == 0 /\ tmp1^0-tmp1^post15 == 0), cost: 1
New rule:
l10 -> l9 : TRUE, cost: 1

Simplified rules
Start location: l10
  16: l0 -> l2 : -1+tmp1^0 >= 0, cost: 1
  17: l0 -> l2 : 1+tmp1^0 <= 0, cost: 1
  22: l2 -> l7 : TRUE, cost: 1
  18: l3 -> l0 : tmp1^0'=tmp1^post3, 0 == 0, cost: 1
  19: l4 -> l3 : -1+tmp___02^0 >= 0, cost: 1
  20: l4 -> l3 : 1+tmp___02^0 <= 0, cost: 1
  21: l7 -> l4 : tmp___02^0'=tmp___02^post8, 0 == 0, cost: 1
  23: l9 -> l7 : Stored^0'=0, TRUE, cost: 1
  24: l10 -> l9 : TRUE, cost: 1


Eliminating location l9 by chaining:

Applied chaining
First rule:
l10 -> l9 : TRUE, cost: 1
Second rule:
l9 -> l7 : Stored^0'=0, TRUE, cost: 1
New rule:
l10 -> l7 : Stored^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 23 24

Eliminated locations on linear paths
Start location: l10
  16: l0 -> l2 : -1+tmp1^0 >= 0, cost: 1
  17: l0 -> l2 : 1+tmp1^0 <= 0, cost: 1
  22: l2 -> l7 : TRUE, cost: 1
  18: l3 -> l0 : tmp1^0'=tmp1^post3, 0 == 0, cost: 1
  19: l4 -> l3 : -1+tmp___02^0 >= 0, cost: 1
  20: l4 -> l3 : 1+tmp___02^0 <= 0, cost: 1
  21: l7 -> l4 : tmp___02^0'=tmp___02^post8, 0 == 0, cost: 1
  25: l10 -> l7 : Stored^0'=0, TRUE, cost: 2


Eliminating location l4 by chaining:

Applied chaining
First rule:
l7 -> l4 : tmp___02^0'=tmp___02^post8, 0 == 0, cost: 1
Second rule:
l4 -> l3 : -1+tmp___02^0 >= 0, cost: 1
New rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, (0 == 0 /\ -1+tmp___02^post8 >= 0), cost: 2

Applied simplification
Original rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, (0 == 0 /\ -1+tmp___02^post8 >= 0), cost: 2
New rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, -1+tmp___02^post8 >= 0, cost: 2

Applied chaining
First rule:
l7 -> l4 : tmp___02^0'=tmp___02^post8, 0 == 0, cost: 1
Second rule:
l4 -> l3 : 1+tmp___02^0 <= 0, cost: 1
New rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, (0 == 0 /\ 1+tmp___02^post8 <= 0), cost: 2

Applied simplification
Original rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, (0 == 0 /\ 1+tmp___02^post8 <= 0), cost: 2
New rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, 1+tmp___02^post8 <= 0, cost: 2

Applied deletion
Removed the following rules: 19 20 21

Eliminating location l0 by chaining:

Applied chaining
First rule:
l3 -> l0 : tmp1^0'=tmp1^post3, 0 == 0, cost: 1
Second rule:
l0 -> l2 : -1+tmp1^0 >= 0, cost: 1
New rule:
l3 -> l2 : tmp1^0'=tmp1^post3, (0 == 0 /\ -1+tmp1^post3 >= 0), cost: 2

Applied simplification
Original rule:
l3 -> l2 : tmp1^0'=tmp1^post3, (0 == 0 /\ -1+tmp1^post3 >= 0), cost: 2
New rule:
l3 -> l2 : tmp1^0'=tmp1^post3, -1+tmp1^post3 >= 0, cost: 2

Applied chaining
First rule:
l3 -> l0 : tmp1^0'=tmp1^post3, 0 == 0, cost: 1
Second rule:
l0 -> l2 : 1+tmp1^0 <= 0, cost: 1
New rule:
l3 -> l2 : tmp1^0'=tmp1^post3, (0 == 0 /\ 1+tmp1^post3 <= 0), cost: 2

Applied simplification
Original rule:
l3 -> l2 : tmp1^0'=tmp1^post3, (0 == 0 /\ 1+tmp1^post3 <= 0), cost: 2
New rule:
l3 -> l2 : tmp1^0'=tmp1^post3, 1+tmp1^post3 <= 0, cost: 2

Applied deletion
Removed the following rules: 16 17 18

Eliminated locations on tree-shaped paths
Start location: l10
  22: l2 -> l7 : TRUE, cost: 1
  28: l3 -> l2 : tmp1^0'=tmp1^post3, -1+tmp1^post3 >= 0, cost: 2
  29: l3 -> l2 : tmp1^0'=tmp1^post3, 1+tmp1^post3 <= 0, cost: 2
  26: l7 -> l3 : tmp___02^0'=tmp___02^post8, -1+tmp___02^post8 >= 0, cost: 2
  27: l7 -> l3 : tmp___02^0'=tmp___02^post8, 1+tmp___02^post8 <= 0, cost: 2
  25: l10 -> l7 : Stored^0'=0, TRUE, cost: 2


Eliminating location l3 by chaining:

Applied chaining
First rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, -1+tmp___02^post8 >= 0, cost: 2
Second rule:
l3 -> l2 : tmp1^0'=tmp1^post3, -1+tmp1^post3 >= 0, cost: 2
New rule:
l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0), cost: 4

Applied chaining
First rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, -1+tmp___02^post8 >= 0, cost: 2
Second rule:
l3 -> l2 : tmp1^0'=tmp1^post3, 1+tmp1^post3 <= 0, cost: 2
New rule:
l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ 1+tmp1^post3 <= 0), cost: 4

Applied chaining
First rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, 1+tmp___02^post8 <= 0, cost: 2
Second rule:
l3 -> l2 : tmp1^0'=tmp1^post3, -1+tmp1^post3 >= 0, cost: 2
New rule:
l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp___02^post8 <= 0 /\ -1+tmp1^post3 >= 0), cost: 4

Applied chaining
First rule:
l7 -> l3 : tmp___02^0'=tmp___02^post8, 1+tmp___02^post8 <= 0, cost: 2
Second rule:
l3 -> l2 : tmp1^0'=tmp1^post3, 1+tmp1^post3 <= 0, cost: 2
New rule:
l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp1^post3 <= 0 /\ 1+tmp___02^post8 <= 0), cost: 4

Applied deletion
Removed the following rules: 26 27 28 29

Eliminated locations on tree-shaped paths
Start location: l10
  22: l2 -> l7 : TRUE, cost: 1
  30: l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0), cost: 4
  31: l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ 1+tmp1^post3 <= 0), cost: 4
  32: l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp___02^post8 <= 0 /\ -1+tmp1^post3 >= 0), cost: 4
  33: l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp1^post3 <= 0 /\ 1+tmp___02^post8 <= 0), cost: 4
  25: l10 -> l7 : Stored^0'=0, TRUE, cost: 2


Eliminating location l2 by chaining:

Applied chaining
First rule:
l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0), cost: 4
Second rule:
l2 -> l7 : TRUE, cost: 1
New rule:
l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0), cost: 5

Applied chaining
First rule:
l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ 1+tmp1^post3 <= 0), cost: 4
Second rule:
l2 -> l7 : TRUE, cost: 1
New rule:
l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ 1+tmp1^post3 <= 0), cost: 5

Applied chaining
First rule:
l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp___02^post8 <= 0 /\ -1+tmp1^post3 >= 0), cost: 4
Second rule:
l2 -> l7 : TRUE, cost: 1
New rule:
l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp___02^post8 <= 0 /\ -1+tmp1^post3 >= 0), cost: 5

Applied chaining
First rule:
l7 -> l2 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp1^post3 <= 0 /\ 1+tmp___02^post8 <= 0), cost: 4
Second rule:
l2 -> l7 : TRUE, cost: 1
New rule:
l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp1^post3 <= 0 /\ 1+tmp___02^post8 <= 0), cost: 5

Applied deletion
Removed the following rules: 22 30 31 32 33

Eliminated locations on tree-shaped paths
Start location: l10
  34: l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0), cost: 5
  35: l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ 1+tmp1^post3 <= 0), cost: 5
  36: l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp___02^post8 <= 0 /\ -1+tmp1^post3 >= 0), cost: 5
  37: l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp1^post3 <= 0 /\ 1+tmp___02^post8 <= 0), cost: 5
  25: l10 -> l7 : Stored^0'=0, TRUE, cost: 2


Applied nonterm
Original rule:
l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0), cost: 5
New rule:
l7 -> [11] : (-1+tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0 /\ -1+n >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_mOPNjn.txt

Applied nonterm
Original rule:
l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (-1+tmp___02^post8 >= 0 /\ 1+tmp1^post3 <= 0), cost: 5
New rule:
l7 -> [11] : (-1+n0 >= 0 /\ -1+tmp___02^post8 >= 0 /\ -1-tmp1^post3 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_DgMKPc.txt

Applied nonterm
Original rule:
l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp___02^post8 <= 0 /\ -1+tmp1^post3 >= 0), cost: 5
New rule:
l7 -> [11] : (-1+n1 >= 0 /\ -1-tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_iNfkFC.txt

Applied nonterm
Original rule:
l7 -> l7 : tmp1^0'=tmp1^post3, tmp___02^0'=tmp___02^post8, (1+tmp1^post3 <= 0 /\ 1+tmp___02^post8 <= 0), cost: 5
New rule:
l7 -> [11] : (-1-tmp1^post3 >= 0 /\ -1+n2 >= 0 /\ -1-tmp___02^post8 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jEGNJP.txt

Applied simplification
Original rule:
l7 -> [11] : (-1+n0 >= 0 /\ -1+tmp___02^post8 >= 0 /\ -1-tmp1^post3 >= 0), cost: NONTERM
New rule:
l7 -> [11] : (-1+n0 >= 0 /\ -1+tmp___02^post8 >= 0 /\ 1+tmp1^post3 <= 0), cost: NONTERM

Applied simplification
Original rule:
l7 -> [11] : (-1+n1 >= 0 /\ -1-tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0), cost: NONTERM
New rule:
l7 -> [11] : (-1+n1 >= 0 /\ 1+tmp___02^post8 <= 0 /\ -1+tmp1^post3 >= 0), cost: NONTERM

Applied simplification
Original rule:
l7 -> [11] : (-1-tmp1^post3 >= 0 /\ -1+n2 >= 0 /\ -1-tmp___02^post8 >= 0), cost: NONTERM
New rule:
l7 -> [11] : (1+tmp1^post3 <= 0 /\ -1+n2 >= 0 /\ 1+tmp___02^post8 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 34 35 36 37

Accelerated simple loops
Start location: l10
  38: l7 -> [11] : (-1+tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0 /\ -1+n >= 0), cost: NONTERM
  42: l7 -> [11] : (-1+n0 >= 0 /\ -1+tmp___02^post8 >= 0 /\ 1+tmp1^post3 <= 0), cost: NONTERM
  43: l7 -> [11] : (-1+n1 >= 0 /\ 1+tmp___02^post8 <= 0 /\ -1+tmp1^post3 >= 0), cost: NONTERM
  44: l7 -> [11] : (1+tmp1^post3 <= 0 /\ -1+n2 >= 0 /\ 1+tmp___02^post8 <= 0), cost: NONTERM
  25: l10 -> l7 : Stored^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l10 -> l7 : Stored^0'=0, TRUE, cost: 2
Second rule:
l7 -> [11] : (-1+tmp___02^post8 >= 0 /\ -1+tmp1^post3 >= 0 /\ -1+n >= 0), cost: NONTERM
New rule:
l10 -> [11] : TRUE, cost: NONTERM

Applied chaining
First rule:
l10 -> l7 : Stored^0'=0, TRUE, cost: 2
Second rule:
l7 -> [11] : (-1+n0 >= 0 /\ -1+tmp___02^post8 >= 0 /\ 1+tmp1^post3 <= 0), cost: NONTERM
New rule:
l10 -> [11] : TRUE, cost: NONTERM

Applied chaining
First rule:
l10 -> l7 : Stored^0'=0, TRUE, cost: 2
Second rule:
l7 -> [11] : (-1+n1 >= 0 /\ 1+tmp___02^post8 <= 0 /\ -1+tmp1^post3 >= 0), cost: NONTERM
New rule:
l10 -> [11] : TRUE, cost: NONTERM

Applied chaining
First rule:
l10 -> l7 : Stored^0'=0, TRUE, cost: 2
Second rule:
l7 -> [11] : (1+tmp1^post3 <= 0 /\ -1+n2 >= 0 /\ 1+tmp___02^post8 <= 0), cost: NONTERM
New rule:
l10 -> [11] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 38 42 43 44

Chained accelerated rules with incoming rules
Start location: l10
  25: l10 -> l7 : Stored^0'=0, TRUE, cost: 2
  45: l10 -> [11] : TRUE, cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: l10
  45: l10 -> [11] : TRUE, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 45 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  TRUE
