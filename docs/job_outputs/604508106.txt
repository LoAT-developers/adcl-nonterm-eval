NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
   0: f1_0_main_New -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (-arg5p1 == 0 /\ -1+arg2p1-arg1 <= 0 /\ 1+arg2-arg4p1 == 0 /\ -1+arg2p1 > 0 /\ 1+arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ -arg3p1 == 0 /\ arg1 > 0 /\ arg2-arg6p1 == 0), cost: 1
   1: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg2-arg1p2 >= 0 /\ 1+arg6-arg4p2 == 0 /\ arg6-arg6p2 == 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ 1+arg3-arg3p2 == 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
   2: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (1-arg2+arg1p3 <= 0 /\ 1-arg5p3 == 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ arg6-arg6p3 == 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6-arg4p3 == 0 /\ 1+arg6 > 0 /\ 1-arg3p3+arg3 == 0 /\ arg1 > 0), cost: 1
   4: f216_0_main_GE -> f339_0_length_Load : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ arg6-arg3p5 == 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ 1-arg2p5 == 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0), cost: 1
   5: f216_0_main_GE -> f340_0_length_FieldAccess : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (arg2 > 0 /\ -arg3+arg4 <= 0 /\ -arg3p6 == 0 /\ -arg5p6 == 0 /\ -arg2p6+arg5 == 0 /\ arg5 > 0 /\ -arg6p6+arg5 == 0 /\ arg1p6 > 0 /\ -arg4p6 == 0 /\ arg1 > 0), cost: 1
   3: f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ 1+arg2-arg2p4 == 0 /\ arg3-arg3p4 == 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
   6: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg2p7+arg2 == 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg3-arg3p7 == 0 /\ arg1p7 > 0), cost: 1
   7: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (-2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ -arg3p8 == 0 /\ 1+arg3 > 0 /\ 1-arg5p8 == 0 /\ -3-x54+arg1 >= 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
   8: __init -> f1_0_main_New : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
   1: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg2-arg1p2 >= 0 /\ 1+arg6-arg4p2 == 0 /\ arg6-arg6p2 == 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ 1+arg3-arg3p2 == 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
   2: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (1-arg2+arg1p3 <= 0 /\ 1-arg5p3 == 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ arg6-arg6p3 == 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6-arg4p3 == 0 /\ 1+arg6 > 0 /\ 1-arg3p3+arg3 == 0 /\ arg1 > 0), cost: 1
   4: f216_0_main_GE -> f339_0_length_Load : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ arg6-arg3p5 == 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ 1-arg2p5 == 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0), cost: 1
   5: f216_0_main_GE -> f340_0_length_FieldAccess : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (arg2 > 0 /\ -arg3+arg4 <= 0 /\ -arg3p6 == 0 /\ -arg5p6 == 0 /\ -arg2p6+arg5 == 0 /\ arg5 > 0 /\ -arg6p6+arg5 == 0 /\ arg1p6 > 0 /\ -arg4p6 == 0 /\ arg1 > 0), cost: 1
   3: f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ 1+arg2-arg2p4 == 0 /\ arg3-arg3p4 == 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
   6: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg2p7+arg2 == 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg3-arg3p7 == 0 /\ arg1p7 > 0), cost: 1
   7: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (-2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ -arg3p8 == 0 /\ 1+arg3 > 0 /\ 1-arg5p8 == 0 /\ -3-x54+arg1 >= 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
   9: __init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (-arg5p1 == 0 /\ -1+arg2p1 > 0 /\ arg1p9 > 0 /\ -1+arg2p1-arg1p9 <= 0 /\ 1+arg2p9-arg4p1 == 0 /\ -arg6p1+arg2p9 == 0 /\ -arg1p9+arg1p1 <= 0 /\ arg1p1 > 0 /\ -arg3p1 == 0 /\ 1+arg2p9 > 0), cost: 1

	Eliminating location f1_0_main_New by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_New : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, T, cost: 1
	Second rule:
	f1_0_main_New -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (-arg5p1 == 0 /\ -1+arg2p1-arg1 <= 0 /\ 1+arg2-arg4p1 == 0 /\ -1+arg2p1 > 0 /\ 1+arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ -arg3p1 == 0 /\ arg1 > 0 /\ arg2-arg6p1 == 0), cost: 1
	New rule:
	__init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (-arg5p1 == 0 /\ -1+arg2p1 > 0 /\ arg1p9 > 0 /\ -1+arg2p1-arg1p9 <= 0 /\ 1+arg2p9-arg4p1 == 0 /\ -arg6p1+arg2p9 == 0 /\ -arg1p9+arg1p1 <= 0 /\ arg1p1 > 0 /\ -arg3p1 == 0 /\ 1+arg2p9 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 8

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  10: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=1+arg3, arg4'=1+arg6, arg5'=arg5p2, (arg2-arg1p2 >= 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
  11: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=1+arg3, arg4'=1+arg6, arg5'=1, (1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0), cost: 1
  13: f216_0_main_GE -> f339_0_length_Load : arg1'=arg1p5, arg2'=1, arg3'=arg6, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0), cost: 1
  14: f216_0_main_GE -> f340_0_length_FieldAccess : arg1'=arg1p6, arg2'=arg5, arg3'=0, arg4'=0, arg5'=0, arg6'=arg5, (arg2 > 0 /\ -arg3+arg4 <= 0 /\ arg5 > 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
  12: f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
  15: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg1p7 > 0), cost: 1
  16: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=0, arg4'=arg4p8, arg5'=1, arg6'=arg6p8, (-2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
  17: __init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=0, arg4'=1+arg2p9, arg5'=0, arg6'=arg2p9, (-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg2-arg1p2 >= 0 /\ 1+arg6-arg4p2 == 0 /\ arg6-arg6p2 == 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ 1+arg3-arg3p2 == 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=1+arg3, arg4'=1+arg6, arg5'=arg5p2, arg6'=arg6, (0 == 0 /\ arg2-arg1p2 >= 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p2 = 1+arg6
		
		propagated equality arg6p2 = arg6
		
		propagated equality arg3p2 = 1+arg3
		
	Simplified Guard

	Original rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=1+arg3, arg4'=1+arg6, arg5'=arg5p2, arg6'=arg6, (0 == 0 /\ arg2-arg1p2 >= 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=1+arg3, arg4'=1+arg6, arg5'=arg5p2, arg6'=arg6, (arg2-arg1p2 >= 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=1+arg3, arg4'=1+arg6, arg5'=arg5p2, arg6'=arg6, (arg2-arg1p2 >= 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=1+arg3, arg4'=1+arg6, arg5'=arg5p2, (arg2-arg1p2 >= 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (1-arg2+arg1p3 <= 0 /\ 1-arg5p3 == 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ arg6-arg6p3 == 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6-arg4p3 == 0 /\ 1+arg6 > 0 /\ 1-arg3p3+arg3 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=1+arg3, arg4'=1+arg6, arg5'=1, arg6'=arg6, (0 == 0 /\ 1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg5p3 = 1
		
		propagated equality arg6p3 = arg6
		
		propagated equality arg4p3 = 1+arg6
		
		propagated equality arg3p3 = 1+arg3
		
	Simplified Guard

	Original rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=1+arg3, arg4'=1+arg6, arg5'=1, arg6'=arg6, (0 == 0 /\ 1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=1+arg3, arg4'=1+arg6, arg5'=1, arg6'=arg6, (1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=1+arg3, arg4'=1+arg6, arg5'=1, arg6'=arg6, (1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=1+arg3, arg4'=1+arg6, arg5'=1, (1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ 1+arg2-arg2p4 == 0 /\ arg3-arg3p4 == 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg3'=arg3, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (0 == 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p4 = 1+arg2
		
		propagated equality arg3p4 = arg3
		
	Simplified Guard

	Original rule:
	f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg3'=arg3, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (0 == 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg3'=arg3, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg3'=arg3, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f216_0_main_GE -> f339_0_length_Load : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ arg6-arg3p5 == 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ 1-arg2p5 == 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0), cost: 1
	New rule:
	f216_0_main_GE -> f339_0_length_Load : arg1'=arg1p5, arg2'=1, arg3'=arg6, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (0 == 0 /\ arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0), cost: 1
	
		propagated equality arg3p5 = arg6
		
		propagated equality arg2p5 = 1
		
	Simplified Guard

	Original rule:
	f216_0_main_GE -> f339_0_length_Load : arg1'=arg1p5, arg2'=1, arg3'=arg6, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (0 == 0 /\ arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0), cost: 1
	New rule:
	f216_0_main_GE -> f339_0_length_Load : arg1'=arg1p5, arg2'=1, arg3'=arg6, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f216_0_main_GE -> f340_0_length_FieldAccess : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (arg2 > 0 /\ -arg3+arg4 <= 0 /\ -arg3p6 == 0 /\ -arg5p6 == 0 /\ -arg2p6+arg5 == 0 /\ arg5 > 0 /\ -arg6p6+arg5 == 0 /\ arg1p6 > 0 /\ -arg4p6 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f216_0_main_GE -> f340_0_length_FieldAccess : arg1'=arg1p6, arg2'=arg5, arg3'=0, arg4'=0, arg5'=0, arg6'=arg5, (0 == 0 /\ arg2 > 0 /\ -arg3+arg4 <= 0 /\ arg5 > 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p6 = 0
		
		propagated equality arg5p6 = 0
		
		propagated equality arg2p6 = arg5
		
		propagated equality arg6p6 = arg5
		
		propagated equality arg4p6 = 0
		
	Simplified Guard

	Original rule:
	f216_0_main_GE -> f340_0_length_FieldAccess : arg1'=arg1p6, arg2'=arg5, arg3'=0, arg4'=0, arg5'=0, arg6'=arg5, (0 == 0 /\ arg2 > 0 /\ -arg3+arg4 <= 0 /\ arg5 > 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f216_0_main_GE -> f340_0_length_FieldAccess : arg1'=arg1p6, arg2'=arg5, arg3'=0, arg4'=0, arg5'=0, arg6'=arg5, (arg2 > 0 /\ -arg3+arg4 <= 0 /\ arg5 > 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg2p7+arg2 == 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg3-arg3p7 == 0 /\ arg1p7 > 0), cost: 1
	New rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg2'=arg2, arg3'=arg3, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (0 == 0 /\ -2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg1p7 > 0), cost: 1
	
		propagated equality arg2p7 = arg2
		
		propagated equality arg3p7 = arg3
		
	Simplified Guard

	Original rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg2'=arg2, arg3'=arg3, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (0 == 0 /\ -2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg1p7 > 0), cost: 1
	New rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg2'=arg2, arg3'=arg3, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg1p7 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg2'=arg2, arg3'=arg3, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg1p7 > 0), cost: 1
	New rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg1p7 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (-2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ -arg3p8 == 0 /\ 1+arg3 > 0 /\ 1-arg5p8 == 0 /\ -3-x54+arg1 >= 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
	New rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=0, arg4'=arg4p8, arg5'=1, arg6'=arg6p8, (0 == 0 /\ -2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ -3-x54+arg1 >= 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
	
		propagated equality arg3p8 = 0
		
		propagated equality arg5p8 = 1
		
	Simplified Guard

	Original rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=0, arg4'=arg4p8, arg5'=1, arg6'=arg6p8, (0 == 0 /\ -2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ -3-x54+arg1 >= 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
	New rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=0, arg4'=arg4p8, arg5'=1, arg6'=arg6p8, (-2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ -3-x54+arg1 >= 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=0, arg4'=arg4p8, arg5'=1, arg6'=arg6p8, (-2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ -3-x54+arg1 >= 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
	New rule:
	f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=0, arg4'=arg4p8, arg5'=1, arg6'=arg6p8, (-2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	__init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (-arg5p1 == 0 /\ -1+arg2p1 > 0 /\ arg1p9 > 0 /\ -1+arg2p1-arg1p9 <= 0 /\ 1+arg2p9-arg4p1 == 0 /\ -arg6p1+arg2p9 == 0 /\ -arg1p9+arg1p1 <= 0 /\ arg1p1 > 0 /\ -arg3p1 == 0 /\ 1+arg2p9 > 0), cost: 1
	New rule:
	__init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=0, arg4'=1+arg2p9, arg5'=0, arg6'=arg2p9, (0 == 0 /\ -1+arg2p1 > 0 /\ arg1p9 > 0 /\ -1+arg2p1-arg1p9 <= 0 /\ -arg1p9+arg1p1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0), cost: 1
	
		propagated equality arg5p1 = 0
		
		propagated equality arg4p1 = 1+arg2p9
		
		propagated equality arg6p1 = arg2p9
		
		propagated equality arg3p1 = 0
		
	Simplified Guard

	Original rule:
	__init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=0, arg4'=1+arg2p9, arg5'=0, arg6'=arg2p9, (0 == 0 /\ -1+arg2p1 > 0 /\ arg1p9 > 0 /\ -1+arg2p1-arg1p9 <= 0 /\ -arg1p9+arg1p1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0), cost: 1
	New rule:
	__init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=0, arg4'=1+arg2p9, arg5'=0, arg6'=arg2p9, (-1+arg2p1 > 0 /\ arg1p9 > 0 /\ -1+arg2p1-arg1p9 <= 0 /\ -arg1p9+arg1p1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=0, arg4'=1+arg2p9, arg5'=0, arg6'=arg2p9, (-1+arg2p1 > 0 /\ arg1p9 > 0 /\ -1+arg2p1-arg1p9 <= 0 /\ -arg1p9+arg1p1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0), cost: 1
	New rule:
	__init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=0, arg4'=1+arg2p9, arg5'=0, arg6'=arg2p9, (-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0), cost: 1

Step with 17

	Trace

	17[(-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0)]
	
	Blocked

	[{}, {}]

Step with 11

	Trace

	17[(-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0)], 11[(1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {10[T], 13[T], 14[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  10: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=1+arg3, arg4'=1+arg6, arg5'=arg5p2, (arg2-arg1p2 >= 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
  11: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=1+arg3, arg4'=1+arg6, arg5'=1, (1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0), cost: 1
  13: f216_0_main_GE -> f339_0_length_Load : arg1'=arg1p5, arg2'=1, arg3'=arg6, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0), cost: 1
  14: f216_0_main_GE -> f340_0_length_FieldAccess : arg1'=arg1p6, arg2'=arg5, arg3'=0, arg4'=0, arg5'=0, arg6'=arg5, (arg2 > 0 /\ -arg3+arg4 <= 0 /\ arg5 > 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
  18: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3+n, arg4'=1+arg6, arg5'=1, (-arg3+arg4 > 0 /\ -1-arg1p3+arg2p3 >= 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ 3+arg1p3-arg2p3 >= 0 /\ 2+arg2-arg2p3 >= 0 /\ -1+arg2 > 0 /\ -1+arg2-arg1p3 >= 0 /\ -1+n >= 0 /\ 2+arg6-arg3-n > 0 /\ -arg1p3+arg1 >= 0 /\ 1+arg6 > 0), cost: 1
  12: f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
  15: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg1p7 > 0), cost: 1
  16: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=0, arg4'=arg4p8, arg5'=1, arg6'=arg6p8, (-2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
  17: __init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=0, arg4'=1+arg2p9, arg5'=0, arg6'=arg2p9, (-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=1+arg3, arg4'=1+arg6, arg5'=1, (1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3+n, arg4'=1+arg6, arg5'=1, (-arg3+arg4 > 0 /\ -1-arg1p3+arg2p3 >= 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ 3+arg1p3-arg2p3 >= 0 /\ 2+arg2-arg2p3 >= 0 /\ -1+arg2 > 0 /\ -1+arg2-arg1p3 >= 0 /\ -1+n >= 0 /\ 2+arg6-arg3-n > 0 /\ -arg1p3+arg1 >= 0 /\ 1+arg6 > 0), cost: 1

		-arg3+arg4 > 0 [0]: eventual decrease yields (-arg3+arg4 > 0 /\ 2+arg6-arg3-n > 0)
		
		-3+arg2p3 > 0 [0]: monotonic increase yields -3+arg2p3 > 0
		
		arg1p3 > 0 [0]: monotonic increase yields arg1p3 > 0
		
		2+arg2-arg2p3 >= 0 [0]: monotonic increase yields 2+arg2-arg2p3 >= 0
		
		-1+arg2 > 0 [0]: monotonic increase yields -1+arg2 > 0, dependencies: -3+arg2p3 > 0
		
		-1+arg2-arg1p3 >= 0 [0]: eventual decrease yields (-1-arg1p3+arg2p3 >= 0 /\ -1+arg2-arg1p3 >= 0)
		
		-1+arg2-arg1p3 >= 0 [1]: eventual increase yields (-1+arg2-arg1p3 >= 0 /\ arg2-arg2p3 <= 0)
		
		-arg1p3+arg1 >= 0 [0]: monotonic increase yields -arg1p3+arg1 >= 0
		
		3-arg2p3+arg1 >= 0 [0]: montonic decrease yields 3+arg1p3-arg2p3 >= 0, dependencies: -arg1p3+arg1 >= 0
		
		3-arg2p3+arg1 >= 0 [1]: eventual increase yields (-arg1p3+arg1 <= 0 /\ 3-arg2p3+arg1 >= 0)
		
		1+arg6 > 0 [0]: monotonic increase yields 1+arg6 > 0
		
		arg1 > 0 [0]: montonic decrease yields arg1p3 > 0, dependencies: -arg1p3+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p3+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {-arg3+arg4 > 0 -> (-arg3+arg4 > 0 /\ 2+arg6-arg3-n > 0), -3+arg2p3 > 0 -> -3+arg2p3 > 0, arg1p3 > 0 -> arg1p3 > 0, 2+arg2-arg2p3 >= 0 -> 2+arg2-arg2p3 >= 0, -1+arg2 > 0 -> -1+arg2 > 0, -1+arg2-arg1p3 >= 0 -> (-1-arg1p3+arg2p3 >= 0 /\ -1+arg2-arg1p3 >= 0), -arg1p3+arg1 >= 0 -> -arg1p3+arg1 >= 0, 3-arg2p3+arg1 >= 0 -> 3+arg1p3-arg2p3 >= 0, 1+arg6 > 0 -> 1+arg6 > 0, arg1 > 0 -> arg1p3 > 0}

	Trace

	17[(-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0)], 18[(-arg3+arg4 > 0 /\ -1-arg1p3+arg2p3 >= 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ 3+arg1p3-arg2p3 >= 0 /\ 2+arg2-arg2p3 >= 0 /\ -1+arg2 > 0 /\ -1+arg2-arg1p3 >= 0 /\ -1+n >= 0 /\ 2+arg6-arg3-n > 0 /\ -arg1p3+arg1 >= 0 /\ 1+arg6 > 0)]
	
	Blocked

	[{}, {10[T], 13[T], 14[T]}, {11[T], 18[T]}]

Step with 13

	Trace

	17[(-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0)], 18[(-arg3+arg4 > 0 /\ -1-arg1p3+arg2p3 >= 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ 3+arg1p3-arg2p3 >= 0 /\ 2+arg2-arg2p3 >= 0 /\ -1+arg2 > 0 /\ -1+arg2-arg1p3 >= 0 /\ -1+n >= 0 /\ 2+arg6-arg3-n > 0 /\ -arg1p3+arg1 >= 0 /\ 1+arg6 > 0)], 13[(arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0)]
	
	Blocked

	[{}, {10[T], 13[T], 14[T]}, {11[T], 18[T]}, {}]

Step with 12

	Trace

	17[(-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0)], 18[(-arg3+arg4 > 0 /\ -1-arg1p3+arg2p3 >= 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ 3+arg1p3-arg2p3 >= 0 /\ 2+arg2-arg2p3 >= 0 /\ -1+arg2 > 0 /\ -1+arg2-arg1p3 >= 0 /\ -1+n >= 0 /\ 2+arg6-arg3-n > 0 /\ -arg1p3+arg1 >= 0 /\ 1+arg6 > 0)], 13[(arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0)], 12[(arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {10[T], 13[T], 14[T]}, {11[T], 18[T]}, {}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  10: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=1+arg3, arg4'=1+arg6, arg5'=arg5p2, (arg2-arg1p2 >= 0 /\ arg2 > 0 /\ -arg1p2+arg1 >= 0 /\ -arg3+arg4 > 0 /\ arg1p2 > 0 /\ arg5-arg5p2 < 0 /\ arg5 > 0 /\ 1+arg6 > 0 /\ arg2p2 > 0 /\ arg1 > 0), cost: 1
  11: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=1+arg3, arg4'=1+arg6, arg5'=1, (1-arg2+arg1p3 <= 0 /\ -arg3+arg4 > 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ -2-arg2+arg2p3 <= 0 /\ arg1p3-arg1 <= 0 /\ -1+arg2 > 0 /\ -3+arg2p3-arg1 <= 0 /\ 1+arg6 > 0 /\ arg1 > 0), cost: 1
  13: f216_0_main_GE -> f339_0_length_Load : arg1'=arg1p5, arg2'=1, arg3'=arg6, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0), cost: 1
  14: f216_0_main_GE -> f340_0_length_FieldAccess : arg1'=arg1p6, arg2'=arg5, arg3'=0, arg4'=0, arg5'=0, arg6'=arg5, (arg2 > 0 /\ -arg3+arg4 <= 0 /\ arg5 > 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
  18: f216_0_main_GE -> f216_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3+n, arg4'=1+arg6, arg5'=1, (-arg3+arg4 > 0 /\ -1-arg1p3+arg2p3 >= 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ 3+arg1p3-arg2p3 >= 0 /\ 2+arg2-arg2p3 >= 0 /\ -1+arg2 > 0 /\ -1+arg2-arg1p3 >= 0 /\ -1+n >= 0 /\ 2+arg6-arg3-n > 0 /\ -arg1p3+arg1 >= 0 /\ 1+arg6 > 0), cost: 1
  12: f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
  19: f339_0_length_Load -> LoAT_sink : (arg1p4 > 0 /\ -arg1p4+arg1 <= 0 /\ -arg1p4+arg1 >= 0 /\ arg1 > 0), cost: NONTERM
  20: f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=n2+arg2, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (-1+n2 >= 0 /\ arg1p4 > 0 /\ -arg1p4+arg1 >= 0), cost: 1
  15: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2+arg1 > 0 /\ arg3 > 0 /\ -arg3+arg5 < 0 /\ arg5p7-arg5 > 0 /\ -arg4+arg4p7 < 0 /\ arg4 > 0 /\ -arg2+arg5 < 0 /\ arg5 > 0 /\ arg1p7 > 0), cost: 1
  16: f340_0_length_FieldAccess -> f340_0_length_FieldAccess : arg1'=arg1p8, arg2'=arg2p8, arg3'=0, arg4'=arg4p8, arg5'=1, arg6'=arg6p8, (-2+arg1 > 0 /\ arg1p8 > 0 /\ arg4p8-arg3 < 0 /\ 1+arg2 > 0 /\ 1+arg3 > 0 /\ -arg2+arg6p8 < 0 /\ -arg6+arg2 == 0), cost: 1
  17: __init -> f216_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=0, arg4'=1+arg2p9, arg5'=0, arg6'=arg2p9, (-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0), cost: 1

	Certificate of Non-Termination

	Original rule:
	f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f339_0_length_Load -> LoAT_sink : (arg1p4 > 0 /\ -arg1p4+arg1 <= 0 /\ -arg1p4+arg1 >= 0 /\ arg1 > 0), cost: NONTERM

		arg1p4 > 0 [0]: monotonic increase yields arg1p4 > 0
		
		-arg1p4+arg1 >= 0 [0]: monotonic increase yields -arg1p4+arg1 >= 0
		
		arg1 > 0 [0]: montonic decrease yields arg1p4 > 0, dependencies: -arg1p4+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p4+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {arg1p4 > 0 -> arg1p4 > 0, -arg1p4+arg1 >= 0 -> -arg1p4+arg1 >= 0, arg1 > 0 -> (-arg1p4+arg1 <= 0 /\ arg1 > 0)}

	Loop Acceleration

	Original rule:
	f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=1+arg2, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f339_0_length_Load -> f339_0_length_Load : arg1'=arg1p4, arg2'=n2+arg2, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (-1+n2 >= 0 /\ arg1p4 > 0 /\ -arg1p4+arg1 >= 0), cost: 1

		arg1p4 > 0 [0]: monotonic increase yields arg1p4 > 0
		
		-arg1p4+arg1 >= 0 [0]: monotonic increase yields -arg1p4+arg1 >= 0
		
		arg1 > 0 [0]: montonic decrease yields arg1p4 > 0, dependencies: -arg1p4+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p4+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {arg1p4 > 0 -> arg1p4 > 0, -arg1p4+arg1 >= 0 -> -arg1p4+arg1 >= 0, arg1 > 0 -> arg1p4 > 0}

Step with 19

	Trace

	17[(-1+arg2p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p9 > 0)], 18[(-arg3+arg4 > 0 /\ -1-arg1p3+arg2p3 >= 0 /\ -3+arg2p3 > 0 /\ arg1p3 > 0 /\ 3+arg1p3-arg2p3 >= 0 /\ 2+arg2-arg2p3 >= 0 /\ -1+arg2 > 0 /\ -1+arg2-arg1p3 >= 0 /\ -1+n >= 0 /\ 2+arg6-arg3-n > 0 /\ -arg1p3+arg1 >= 0 /\ 1+arg6 > 0)], 13[(arg1p5 > 0 /\ -arg3+arg4 <= 0 /\ 1+arg1p5-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1 > 0 /\ arg1p5-arg1 <= 0)], 19[(arg1p4 > 0 /\ -arg1p4+arg1 <= 0 /\ -arg1p4+arg1 >= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {10[T], 13[T], 14[T]}, {11[T], 18[T]}, {}, {19[T]}]

Refute

	Counterexample

	[ arg1=1 arg2=2 arg3=0 arg4=1 arg5=0 arg6=0 ] 17 [ arg1=1 arg2=4 arg3=1 arg4=1 arg5=1 arg6=0 ] 18 [ arg1=1 arg2=1 arg3=0 arg4=0 arg5=0 arg6=0 ] 13 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 arg5=arg5 arg6=arg6 ] 19
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
