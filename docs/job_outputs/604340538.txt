YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int), main_z -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, ((2 * main_y) >= main_z)>
<l1, l8, not(((2 * main_y) >= main_z))>
<l2, l3, true>
<l3, l7, not((main_x >= 0))>
<l3, l4, (main_x >= 0)>
<l4, l7, not((main_z = 1))>
<l4, l5, (main_z = 1)>
<l5, l6, true, seq{main_x -> ((main_x - (2 * main_y)) + 1)}>
<l6, l3, true>
<l7, l8, true>
<l8, l9, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l10, true, seq{main__func_return_ -> 0}>
<l10, l11, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l11, l12, true, seq{main_x -> varCall_1}>
<l12, l13, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l13, l14, true, seq{main_y -> varCall_2}>
<l14, l15, true, seq{varCall_3 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l15, l1, true, seq{main_z -> varCall_3}>
<l1, l2, ((2 * main_y) >= main_z)>
<l1, l8, not(((2 * main_y) >= main_z))>
<l2, l3, true>
<l3, l4, (main_x >= 0)>
<l3, l7, not((main_x >= 0))>
<l4, l5, (main_z = 1)>
<l4, l7, not((main_z = 1))>
<l5, l6, true, seq{main_x -> ((main_x - (2 * main_y)) + 1)}>
<l6, l3, true>
<l7, l8, true>
<l8, l9, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
9, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [5 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 15, col: 6> <line: 16, col: 6> <line: 17, col: 6>
main | function | [integer, ()] | <line: 13, col: 1>
x | local variable | integer | <line: 14, col: 5> | <line: 15, col: 2> <line: 19, col: 13> <line: 20, col: 7> <line: 20, col: 11>
y | local variable | integer | <line: 14, col: 5> | <line: 16, col: 2> <line: 18, col: 8> <line: 20, col: 17>
z | local variable | integer | <line: 14, col: 5> | <line: 17, col: 2> <line: 18, col: 13> <line: 19, col: 23>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (main_x = undef4) /\ (main_y = undef5) /\ (main_z = undef6) /\ ((2 * undef5) >= undef6)>
<l0, l9, (main_x = undef4) /\ (main_y = undef5) /\ (main_z = undef6) /\ not(((2 * undef5) >= undef6))>
<l3, l3, (main_x >= 0) /\ (main_z = 1), par{main_x -> ((main_x - (2 * main_y)) + 1)}>
<l3, l9, (main_x >= 0) /\ (main_z < 1)>
<l3, l9, (main_x >= 0) /\ (main_z > 1)>
<l3, l9, not((main_x >= 0))>

Fresh variables:
undef4, undef5, undef6, 

Undef variables:
undef4, undef5, undef6, 

Abstraction variables:

Exit nodes:
9, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 0 <= main_x /\ main_z = 1, {main_x -> 1 + main_x - 2*main_y, rest remain the same}>
Variables:
main_x, main_y, main_z

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l3, undef6 <= 2*undef5 /\ main_x = undef4 /\ main_y = undef5 /\ main_z = undef6, {all remain the same}>

Graph 2
<l0, l9, 1 + 2*undef5 <= undef6 /\ main_x = undef4 /\ main_y = undef5 /\ main_z = undef6, {all remain the same}>
<l3, l9, 0 <= main_x /\ main_z <= 0, {all remain the same}>
<l3, l9, 0 <= main_x /\ 2 <= main_z, {all remain the same}>
<l3, l9, 1 + main_x <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )
( 9 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001965

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000393s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001182s
[23226 : 23228]
[23226 : 23229]
Successful child: 23228
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 0 <= main_x /\ main_z = 1, {main_x -> 1 + main_x - 2*main_y, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l3, l3, 0 <= main_x /\ main_z = 1, {main_x -> 1 + main_x - 2*main_y, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:main_z <= 0 - Process 1
* Exit transition: <l0, l3, undef6 <= 2*undef5 /\ main_x = undef4 /\ main_y = undef5 /\ main_z = undef6, {all remain the same}>
* Postcondition  : main_z <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000235s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000279s
INVARIANTS: 
3: 
Quasi-INVARIANTS to narrow Graph: 
3: main_z <= 0 , 
Narrowing transition: 
<l3, l3, 0 <= main_x /\ main_z = 1, {main_x -> 1 + main_x - 2*main_y, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l3, l3, 0 <= main_x /\ main_z = 1, {main_x -> 1 + main_x - 2*main_y, rest remain the same}>
Variables:
main_x, main_y, main_z
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000262s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000911s
[23226 : 23233]
[23226 : 23234]
Successful child: 23233
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= main_x /\ 1 <= main_y /\ main_z = 1, {main_x -> 1 + main_x - 2*main_y, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= main_x /\ 1 <= main_y /\ main_z = 1, {main_x -> 1 + main_x - 2*main_y, rest remain the same}>
[33mRanking function: [36mmain_x[0m
New Graphs: 
INVARIANTS: 
3: 1 <= main_y , 
Quasi-INVARIANTS to narrow Graph: 
3: 
Proving termination of subgraph 2
Analyzing SCC {l9}...
No cycles found.

[32mProgram Terminates[0m
