WORST_CASE(Omega(0),?)

Initial ITS
Start location: l7
   0: l0 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=c^post0, (0 == 0 /\ -c^post0-d^post0-e^post0-a^post0-b^post0+sum^post0 == 0 /\ 1-c^post0-d^post0-e^post0-a^post0-b^post0 <= 0), cost: 1
   1: l1 -> l2 : e^0'=e^post1, b^0'=b^post1, d^0'=d^post1, a^0'=a^post1, sum^0'=sum^post1, c^0'=c^post1, (1+e^0 <= 0 /\ -sum^post1+sum^0 == 0 /\ e^0+e^post1 == 0 /\ e^post1+a^post1-a^0 == 0 /\ -c^post1+c^0 == 0 /\ b^0-b^post1 == 0 /\ e^post1-d^0+d^post1 == 0), cost: 1
   3: l1 -> l3 : e^0'=e^post3, b^0'=b^post3, d^0'=d^post3, a^0'=a^post3, sum^0'=sum^post3, c^0'=c^post3, (a^0-a^post3 == 0 /\ -e^0+d^post3+e^post3 == 0 /\ b^0-b^post3 == 0 /\ -sum^post3+sum^0 == 0 /\ d^post3+c^post3-c^0 == 0 /\ 1+d^0 <= 0 /\ d^0+d^post3 == 0), cost: 1
   5: l1 -> l4 : e^0'=e^post5, b^0'=b^post5, d^0'=d^post5, a^0'=a^post5, sum^0'=sum^post5, c^0'=c^post5, (-b^0+c^post5+b^post5 == 0 /\ e^0-e^post5 == 0 /\ c^post5+d^post5-d^0 == 0 /\ 1+c^0 <= 0 /\ a^0-a^post5 == 0 /\ sum^0-sum^post5 == 0 /\ c^post5+c^0 == 0), cost: 1
   7: l1 -> l5 : e^0'=e^post7, b^0'=b^post7, d^0'=d^post7, a^0'=a^post7, sum^0'=sum^post7, c^0'=c^post7, (b^post7-c^0+c^post7 == 0 /\ b^0+b^post7 == 0 /\ 1+b^0 <= 0 /\ a^post7+b^post7-a^0 == 0 /\ -sum^post7+sum^0 == 0 /\ e^0-e^post7 == 0 /\ d^0-d^post7 == 0), cost: 1
   9: l1 -> l6 : e^0'=e^post9, b^0'=b^post9, d^0'=d^post9, a^0'=a^post9, sum^0'=sum^post9, c^0'=c^post9, (e^post9-e^0+a^post9 == 0 /\ a^post9+a^0 == 0 /\ -sum^post9+sum^0 == 0 /\ 1+a^0 <= 0 /\ -c^post9+c^0 == 0 /\ a^post9-b^0+b^post9 == 0 /\ d^0-d^post9 == 0), cost: 1
   2: l2 -> l1 : e^0'=e^post2, b^0'=b^post2, d^0'=d^post2, a^0'=a^post2, sum^0'=sum^post2, c^0'=c^post2, (-c^post2+c^0 == 0 /\ a^0-a^post2 == 0 /\ b^0-b^post2 == 0 /\ e^0-e^post2 == 0 /\ d^0-d^post2 == 0 /\ -sum^post2+sum^0 == 0), cost: 1
   4: l3 -> l1 : e^0'=e^post4, b^0'=b^post4, d^0'=d^post4, a^0'=a^post4, sum^0'=sum^post4, c^0'=c^post4, (d^0-d^post4 == 0 /\ a^0-a^post4 == 0 /\ -b^post4+b^0 == 0 /\ e^0-e^post4 == 0 /\ -c^post4+c^0 == 0 /\ -sum^post4+sum^0 == 0), cost: 1
   6: l4 -> l1 : e^0'=e^post6, b^0'=b^post6, d^0'=d^post6, a^0'=a^post6, sum^0'=sum^post6, c^0'=c^post6, (e^0-e^post6 == 0 /\ -c^post6+c^0 == 0 /\ -d^post6+d^0 == 0 /\ sum^0-sum^post6 == 0 /\ -a^post6+a^0 == 0 /\ b^0-b^post6 == 0), cost: 1
   8: l5 -> l1 : e^0'=e^post8, b^0'=b^post8, d^0'=d^post8, a^0'=a^post8, sum^0'=sum^post8, c^0'=c^post8, (-sum^post8+sum^0 == 0 /\ -c^post8+c^0 == 0 /\ -a^post8+a^0 == 0 /\ d^0-d^post8 == 0 /\ b^0-b^post8 == 0 /\ e^0-e^post8 == 0), cost: 1
  10: l6 -> l1 : e^0'=e^post10, b^0'=b^post10, d^0'=d^post10, a^0'=a^post10, sum^0'=sum^post10, c^0'=c^post10, (e^0-e^post10 == 0 /\ -b^post10+b^0 == 0 /\ d^0-d^post10 == 0 /\ a^0-a^post10 == 0 /\ -c^post10+c^0 == 0 /\ -sum^post10+sum^0 == 0), cost: 1
  11: l7 -> l0 : e^0'=e^post11, b^0'=b^post11, d^0'=d^post11, a^0'=a^post11, sum^0'=sum^post11, c^0'=c^post11, (a^0-a^post11 == 0 /\ -c^post11+c^0 == 0 /\ e^0-e^post11 == 0 /\ d^0-d^post11 == 0 /\ b^0-b^post11 == 0 /\ sum^0-sum^post11 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=c^post0, (0 == 0 /\ -c^post0-d^post0-e^post0-a^post0-b^post0+sum^post0 == 0 /\ 1-c^post0-d^post0-e^post0-a^post0-b^post0 <= 0), cost: 1
New rule:
l0 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l2 : e^0'=e^post1, b^0'=b^post1, d^0'=d^post1, a^0'=a^post1, sum^0'=sum^post1, c^0'=c^post1, (1+e^0 <= 0 /\ -sum^post1+sum^0 == 0 /\ e^0+e^post1 == 0 /\ e^post1+a^post1-a^0 == 0 /\ -c^post1+c^0 == 0 /\ b^0-b^post1 == 0 /\ e^post1-d^0+d^post1 == 0), cost: 1
New rule:
l1 -> l2 : e^0'=-e^0, d^0'=e^0+d^0, a^0'=e^0+a^0, 1+e^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l1 : e^0'=e^post2, b^0'=b^post2, d^0'=d^post2, a^0'=a^post2, sum^0'=sum^post2, c^0'=c^post2, (-c^post2+c^0 == 0 /\ a^0-a^post2 == 0 /\ b^0-b^post2 == 0 /\ e^0-e^post2 == 0 /\ d^0-d^post2 == 0 /\ -sum^post2+sum^0 == 0), cost: 1
New rule:
l2 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : e^0'=e^post3, b^0'=b^post3, d^0'=d^post3, a^0'=a^post3, sum^0'=sum^post3, c^0'=c^post3, (a^0-a^post3 == 0 /\ -e^0+d^post3+e^post3 == 0 /\ b^0-b^post3 == 0 /\ -sum^post3+sum^0 == 0 /\ d^post3+c^post3-c^0 == 0 /\ 1+d^0 <= 0 /\ d^0+d^post3 == 0), cost: 1
New rule:
l1 -> l3 : e^0'=e^0+d^0, d^0'=-d^0, c^0'=d^0+c^0, 1+d^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : e^0'=e^post4, b^0'=b^post4, d^0'=d^post4, a^0'=a^post4, sum^0'=sum^post4, c^0'=c^post4, (d^0-d^post4 == 0 /\ a^0-a^post4 == 0 /\ -b^post4+b^0 == 0 /\ e^0-e^post4 == 0 /\ -c^post4+c^0 == 0 /\ -sum^post4+sum^0 == 0), cost: 1
New rule:
l3 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : e^0'=e^post5, b^0'=b^post5, d^0'=d^post5, a^0'=a^post5, sum^0'=sum^post5, c^0'=c^post5, (-b^0+c^post5+b^post5 == 0 /\ e^0-e^post5 == 0 /\ c^post5+d^post5-d^0 == 0 /\ 1+c^0 <= 0 /\ a^0-a^post5 == 0 /\ sum^0-sum^post5 == 0 /\ c^post5+c^0 == 0), cost: 1
New rule:
l1 -> l4 : b^0'=b^0+c^0, d^0'=d^0+c^0, c^0'=-c^0, 1+c^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l1 : e^0'=e^post6, b^0'=b^post6, d^0'=d^post6, a^0'=a^post6, sum^0'=sum^post6, c^0'=c^post6, (e^0-e^post6 == 0 /\ -c^post6+c^0 == 0 /\ -d^post6+d^0 == 0 /\ sum^0-sum^post6 == 0 /\ -a^post6+a^0 == 0 /\ b^0-b^post6 == 0), cost: 1
New rule:
l4 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l5 : e^0'=e^post7, b^0'=b^post7, d^0'=d^post7, a^0'=a^post7, sum^0'=sum^post7, c^0'=c^post7, (b^post7-c^0+c^post7 == 0 /\ b^0+b^post7 == 0 /\ 1+b^0 <= 0 /\ a^post7+b^post7-a^0 == 0 /\ -sum^post7+sum^0 == 0 /\ e^0-e^post7 == 0 /\ d^0-d^post7 == 0), cost: 1
New rule:
l1 -> l5 : b^0'=-b^0, a^0'=b^0+a^0, c^0'=b^0+c^0, 1+b^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l1 : e^0'=e^post8, b^0'=b^post8, d^0'=d^post8, a^0'=a^post8, sum^0'=sum^post8, c^0'=c^post8, (-sum^post8+sum^0 == 0 /\ -c^post8+c^0 == 0 /\ -a^post8+a^0 == 0 /\ d^0-d^post8 == 0 /\ b^0-b^post8 == 0 /\ e^0-e^post8 == 0), cost: 1
New rule:
l5 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l6 : e^0'=e^post9, b^0'=b^post9, d^0'=d^post9, a^0'=a^post9, sum^0'=sum^post9, c^0'=c^post9, (e^post9-e^0+a^post9 == 0 /\ a^post9+a^0 == 0 /\ -sum^post9+sum^0 == 0 /\ 1+a^0 <= 0 /\ -c^post9+c^0 == 0 /\ a^post9-b^0+b^post9 == 0 /\ d^0-d^post9 == 0), cost: 1
New rule:
l1 -> l6 : e^0'=e^0+a^0, b^0'=b^0+a^0, a^0'=-a^0, 1+a^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l1 : e^0'=e^post10, b^0'=b^post10, d^0'=d^post10, a^0'=a^post10, sum^0'=sum^post10, c^0'=c^post10, (e^0-e^post10 == 0 /\ -b^post10+b^0 == 0 /\ d^0-d^post10 == 0 /\ a^0-a^post10 == 0 /\ -c^post10+c^0 == 0 /\ -sum^post10+sum^0 == 0), cost: 1
New rule:
l6 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l0 : e^0'=e^post11, b^0'=b^post11, d^0'=d^post11, a^0'=a^post11, sum^0'=sum^post11, c^0'=c^post11, (a^0-a^post11 == 0 /\ -c^post11+c^0 == 0 /\ e^0-e^post11 == 0 /\ d^0-d^post11 == 0 /\ b^0-b^post11 == 0 /\ sum^0-sum^post11 == 0), cost: 1
New rule:
l7 -> l0 : TRUE, cost: 1

Simplified rules
Start location: l7
  12: l0 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 1
  13: l1 -> l2 : e^0'=-e^0, d^0'=e^0+d^0, a^0'=e^0+a^0, 1+e^0 <= 0, cost: 1
  15: l1 -> l3 : e^0'=e^0+d^0, d^0'=-d^0, c^0'=d^0+c^0, 1+d^0 <= 0, cost: 1
  17: l1 -> l4 : b^0'=b^0+c^0, d^0'=d^0+c^0, c^0'=-c^0, 1+c^0 <= 0, cost: 1
  19: l1 -> l5 : b^0'=-b^0, a^0'=b^0+a^0, c^0'=b^0+c^0, 1+b^0 <= 0, cost: 1
  21: l1 -> l6 : e^0'=e^0+a^0, b^0'=b^0+a^0, a^0'=-a^0, 1+a^0 <= 0, cost: 1
  14: l2 -> l1 : TRUE, cost: 1
  16: l3 -> l1 : TRUE, cost: 1
  18: l4 -> l1 : TRUE, cost: 1
  20: l5 -> l1 : TRUE, cost: 1
  22: l6 -> l1 : TRUE, cost: 1
  23: l7 -> l0 : TRUE, cost: 1


Eliminating location l0 by chaining:

Applied chaining
First rule:
l7 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 1
New rule:
l7 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 2

Applied deletion
Removed the following rules: 12 23

Eliminating location l2 by chaining:

Applied chaining
First rule:
l1 -> l2 : e^0'=-e^0, d^0'=e^0+d^0, a^0'=e^0+a^0, 1+e^0 <= 0, cost: 1
Second rule:
l2 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : e^0'=-e^0, d^0'=e^0+d^0, a^0'=e^0+a^0, 1+e^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 13 14

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : e^0'=e^0+d^0, d^0'=-d^0, c^0'=d^0+c^0, 1+d^0 <= 0, cost: 1
Second rule:
l3 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : e^0'=e^0+d^0, d^0'=-d^0, c^0'=d^0+c^0, 1+d^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 15 16

Eliminating location l4 by chaining:

Applied chaining
First rule:
l1 -> l4 : b^0'=b^0+c^0, d^0'=d^0+c^0, c^0'=-c^0, 1+c^0 <= 0, cost: 1
Second rule:
l4 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : b^0'=b^0+c^0, d^0'=d^0+c^0, c^0'=-c^0, 1+c^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 17 18

Eliminating location l5 by chaining:

Applied chaining
First rule:
l1 -> l5 : b^0'=-b^0, a^0'=b^0+a^0, c^0'=b^0+c^0, 1+b^0 <= 0, cost: 1
Second rule:
l5 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : b^0'=-b^0, a^0'=b^0+a^0, c^0'=b^0+c^0, 1+b^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 19 20

Eliminating location l6 by chaining:

Applied chaining
First rule:
l1 -> l6 : e^0'=e^0+a^0, b^0'=b^0+a^0, a^0'=-a^0, 1+a^0 <= 0, cost: 1
Second rule:
l6 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : e^0'=e^0+a^0, b^0'=b^0+a^0, a^0'=-a^0, 1+a^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 21 22

Eliminated locations on linear paths
Start location: l7
  25: l1 -> l1 : e^0'=-e^0, d^0'=e^0+d^0, a^0'=e^0+a^0, 1+e^0 <= 0, cost: 2
  26: l1 -> l1 : e^0'=e^0+d^0, d^0'=-d^0, c^0'=d^0+c^0, 1+d^0 <= 0, cost: 2
  27: l1 -> l1 : b^0'=b^0+c^0, d^0'=d^0+c^0, c^0'=-c^0, 1+c^0 <= 0, cost: 2
  28: l1 -> l1 : b^0'=-b^0, a^0'=b^0+a^0, c^0'=b^0+c^0, 1+b^0 <= 0, cost: 2
  29: l1 -> l1 : e^0'=e^0+a^0, b^0'=b^0+a^0, a^0'=-a^0, 1+a^0 <= 0, cost: 2
  24: l7 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 2


Accelerated simple loops
Start location: l7
  25: l1 -> l1 : e^0'=-e^0, d^0'=e^0+d^0, a^0'=e^0+a^0, 1+e^0 <= 0, cost: 2
  26: l1 -> l1 : e^0'=e^0+d^0, d^0'=-d^0, c^0'=d^0+c^0, 1+d^0 <= 0, cost: 2
  27: l1 -> l1 : b^0'=b^0+c^0, d^0'=d^0+c^0, c^0'=-c^0, 1+c^0 <= 0, cost: 2
  28: l1 -> l1 : b^0'=-b^0, a^0'=b^0+a^0, c^0'=b^0+c^0, 1+b^0 <= 0, cost: 2
  29: l1 -> l1 : e^0'=e^0+a^0, b^0'=b^0+a^0, a^0'=-a^0, 1+a^0 <= 0, cost: 2
  24: l7 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 2


Applied chaining
First rule:
l7 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 2
Second rule:
l1 -> l1 : e^0'=-e^0, d^0'=e^0+d^0, a^0'=e^0+a^0, 1+e^0 <= 0, cost: 2
New rule:
l7 -> l1 : e^0'=-e^post0, b^0'=b^post0, d^0'=d^post0+e^post0, a^0'=e^post0+a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, (1+e^post0 <= 0 /\ -1+sum^post0 >= 0), cost: 4

Applied chaining
First rule:
l7 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 2
Second rule:
l1 -> l1 : e^0'=e^0+d^0, d^0'=-d^0, c^0'=d^0+c^0, 1+d^0 <= 0, cost: 2
New rule:
l7 -> l1 : e^0'=d^post0+e^post0, b^0'=b^post0, d^0'=-d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-e^post0-a^post0-b^post0+sum^post0, (1+d^post0 <= 0 /\ -1+sum^post0 >= 0), cost: 4

Applied chaining
First rule:
l7 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 2
Second rule:
l1 -> l1 : b^0'=b^0+c^0, d^0'=d^0+c^0, c^0'=-c^0, 1+c^0 <= 0, cost: 2
New rule:
l7 -> l1 : e^0'=e^post0, b^0'=-d^post0-e^post0-a^post0+sum^post0, d^0'=-e^post0-a^post0-b^post0+sum^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=d^post0+e^post0+a^post0+b^post0-sum^post0, (1-d^post0-e^post0-a^post0-b^post0+sum^post0 <= 0 /\ -1+sum^post0 >= 0), cost: 4

Applied chaining
First rule:
l7 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 2
Second rule:
l1 -> l1 : b^0'=-b^0, a^0'=b^0+a^0, c^0'=b^0+c^0, 1+b^0 <= 0, cost: 2
New rule:
l7 -> l1 : e^0'=e^post0, b^0'=-b^post0, d^0'=d^post0, a^0'=a^post0+b^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0+sum^post0, (1+b^post0 <= 0 /\ -1+sum^post0 >= 0), cost: 4

Applied chaining
First rule:
l7 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 2
Second rule:
l1 -> l1 : e^0'=e^0+a^0, b^0'=b^0+a^0, a^0'=-a^0, 1+a^0 <= 0, cost: 2
New rule:
l7 -> l1 : e^0'=e^post0+a^post0, b^0'=a^post0+b^post0, d^0'=d^post0, a^0'=-a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, (-1+sum^post0 >= 0 /\ 1+a^post0 <= 0), cost: 4

Applied deletion
Removed the following rules: 25 26 27 28 29

Chained accelerated rules with incoming rules
Start location: l7
  24: l7 -> l1 : e^0'=e^post0, b^0'=b^post0, d^0'=d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, -1+sum^post0 >= 0, cost: 2
  30: l7 -> l1 : e^0'=-e^post0, b^0'=b^post0, d^0'=d^post0+e^post0, a^0'=e^post0+a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, (1+e^post0 <= 0 /\ -1+sum^post0 >= 0), cost: 4
  31: l7 -> l1 : e^0'=d^post0+e^post0, b^0'=b^post0, d^0'=-d^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=-e^post0-a^post0-b^post0+sum^post0, (1+d^post0 <= 0 /\ -1+sum^post0 >= 0), cost: 4
  32: l7 -> l1 : e^0'=e^post0, b^0'=-d^post0-e^post0-a^post0+sum^post0, d^0'=-e^post0-a^post0-b^post0+sum^post0, a^0'=a^post0, sum^0'=sum^post0, c^0'=d^post0+e^post0+a^post0+b^post0-sum^post0, (1-d^post0-e^post0-a^post0-b^post0+sum^post0 <= 0 /\ -1+sum^post0 >= 0), cost: 4
  33: l7 -> l1 : e^0'=e^post0, b^0'=-b^post0, d^0'=d^post0, a^0'=a^post0+b^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0+sum^post0, (1+b^post0 <= 0 /\ -1+sum^post0 >= 0), cost: 4
  34: l7 -> l1 : e^0'=e^post0+a^post0, b^0'=a^post0+b^post0, d^0'=d^post0, a^0'=-a^post0, sum^0'=sum^post0, c^0'=-d^post0-e^post0-a^post0-b^post0+sum^post0, (-1+sum^post0 >= 0 /\ 1+a^post0 <= 0), cost: 4


Removed unreachable locations and irrelevant leafs
Start location: l7
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

