unknown

Initial ITS

Start location: [1]
Program variables: x y
   0: [1] -> [2] : (x >= 0 /\ y >= 0), cost: 1
   8: [1] -> [8] : (x < 0 \/ y < 0), cost: 1
   1: [2] -> [3] : y'=-1+y, T, cost: 1
   2: [3] -> [5] : y < 0, cost: 1
   6: [3] -> [4] : y >= 0, cost: 1
   7: [4] -> [1] : T, cost: 1
   3: [5] -> [6] : x'=-1+x, T, cost: 1
   4: [6] -> [7] : y'=nondet, T, cost: 1
   5: [7] -> [4] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x y
   8: [1] -> [8] : (x < 0 \/ y < 0), cost: 1
   9: [1] -> [3] : y'=-1+y, (x >= 0 /\ y >= 0), cost: 1
   6: [3] -> [4] : y >= 0, cost: 1
  12: [3] -> [4] : x'=-1+x, y'=nondet, y < 0, cost: 1
   7: [4] -> [1] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : (x >= 0 /\ y >= 0), cost: 1
	Second rule:
	[2] -> [3] : y'=-1+y, T, cost: 1
	New rule:
	[1] -> [3] : y'=-1+y, (x >= 0 /\ y >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : y < 0, cost: 1
	Second rule:
	[5] -> [6] : x'=-1+x, T, cost: 1
	New rule:
	[3] -> [6] : x'=-1+x, y < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[3] -> [6] : x'=-1+x, y < 0, cost: 1
	Second rule:
	[6] -> [7] : y'=nondet, T, cost: 1
	New rule:
	[3] -> [7] : x'=-1+x, y'=nondet, y < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 10
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[3] -> [7] : x'=-1+x, y'=nondet, y < 0, cost: 1
	Second rule:
	[7] -> [4] : T, cost: 1
	New rule:
	[3] -> [4] : x'=-1+x, y'=nondet, y < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 11

Step with 8

	Trace

	8[(x < 0)]
	
	Blocked

	[{}, {}]

Backtrack

	Trace

	Blocked

	[{8[x < 0]}]

Step with 8

	Trace

	8[(y < 0)]
	
	Blocked

	[{8[x < 0]}, {}]

Backtrack

	Trace

	Blocked

	[{8[(x < 0 /\ y < 0)]}]

Step with 9

	Trace

	9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T]}, {}]

Step with 6

	Trace

	9[(x >= 0 /\ y >= 0)], 6[(y >= 0)]
	
	Blocked

	[{8[T]}, {}, {}]

Step with 7

	Trace

	9[(x >= 0 /\ y >= 0)], 6[(y >= 0)], 7[T]
	
	Blocked

	[{8[T]}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y
   8: [1] -> [8] : (x < 0 \/ y < 0), cost: 1
   9: [1] -> [3] : y'=-1+y, (x >= 0 /\ y >= 0), cost: 1
  13: [1] -> [1] : y'=-n+y, (1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0), cost: 1
   6: [3] -> [4] : y >= 0, cost: 1
  12: [3] -> [4] : x'=-1+x, y'=nondet, y < 0, cost: 1
   7: [4] -> [1] : T, cost: 1

	Loop Acceleration

	Original rule:
	[1] -> [1] : y'=-1+y, (x >= 0 /\ -1+y >= 0 /\ y >= 0), cost: 1
	New rule:
	[1] -> [1] : y'=-n+y, (1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0), cost: 1

		x >= 0 [0]: monotonic increase yields x >= 0
		
		-1+y >= 0 [0]: montonic decrease yields -n+y >= 0
		
		-1+y >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+y >= 0)
		
		y >= 0 [0]: montonic decrease yields 1-n+y >= 0
		
		y >= 0 [1]: eventual increase yields (1 <= 0 /\ y >= 0)
		
		Replacement map: {x >= 0 -> x >= 0, -1+y >= 0 -> -n+y >= 0, y >= 0 -> 1-n+y >= 0}

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)]
	
	Blocked

	[{8[T]}, {13[T]}]

Step with 9

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {}]

Step with 6

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 6[(y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {}, {}]

Step with 7

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 6[(y >= 0)], 7[T]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {}, {}, {}]

Covered

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 6[(y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {}, {7[T]}]

Backtrack

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {6[T]}]

Step with 12

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {6[T]}, {}]

Step with 7

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)], 7[T]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {6[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y
   8: [1] -> [8] : (x < 0 \/ y < 0), cost: 1
   9: [1] -> [3] : y'=-1+y, (x >= 0 /\ y >= 0), cost: 1
  13: [1] -> [1] : y'=-n+y, (1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0), cost: 1
  14: [1] -> [1] : x'=x-n2, y'=0, (1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0), cost: 1
   6: [3] -> [4] : y >= 0, cost: 1
  12: [3] -> [4] : x'=-1+x, y'=nondet, y < 0, cost: 1
   7: [4] -> [1] : T, cost: 1

	Loop Acceleration

	Original rule:
	[1] -> [1] : x'=-1+x, y'=nondet1, (x >= 0 /\ -1+y < 0 /\ y >= 0), cost: 1
	New rule:
	[1] -> [1] : x'=x-n2, y'=nondet1, (1+x-n2 >= 0 /\ 1-nondet1 > 0 /\ nondet1 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0), cost: 1

		x >= 0 [0]: montonic decrease yields 1+x-n2 >= 0
		
		x >= 0 [1]: eventual increase yields (1 <= 0 /\ x >= 0)
		
		1-y > 0 [0]: eventual decrease yields (1-nondet1 > 0 /\ 1-y > 0)
		
		1-y > 0 [1]: eventual increase yields (nondet1-y <= 0 /\ 1-y > 0)
		
		y >= 0 [0]: eventual decrease yields (nondet1 >= 0 /\ y >= 0)
		
		y >= 0 [1]: eventual increase yields (y >= 0 /\ -nondet1+y <= 0)
		
		Replacement map: {x >= 0 -> 1+x-n2 >= 0, 1-y > 0 -> (1-nondet1 > 0 /\ 1-y > 0), y >= 0 -> (nondet1 >= 0 /\ y >= 0)}

	made implied equalities explicit

	Original rule:
	[1] -> [1] : x'=x-n2, y'=nondet1, (1+x-n2 >= 0 /\ 1-nondet1 > 0 /\ nondet1 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0), cost: 1
	New rule:
	[1] -> [1] : x'=x-n2, y'=nondet1, (1+x-n2 >= 0 /\ 1-nondet1 > 0 /\ nondet1 >= 0 /\ nondet1 == 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	[1] -> [1] : x'=x-n2, y'=nondet1, (1+x-n2 >= 0 /\ 1-nondet1 > 0 /\ nondet1 >= 0 /\ nondet1 == 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0), cost: 1
	New rule:
	[1] -> [1] : x'=x-n2, y'=0, (0 >= 0 /\ 0 == 0 /\ 1+x-n2 >= 0 /\ 1 > 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0), cost: 1
	
		propagated equality nondet1 = 0
		
	Simplified Guard

	Original rule:
	[1] -> [1] : x'=x-n2, y'=0, (0 >= 0 /\ 0 == 0 /\ 1+x-n2 >= 0 /\ 1 > 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0), cost: 1
	New rule:
	[1] -> [1] : x'=x-n2, y'=0, (1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0), cost: 1

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {14[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 8

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 8[(x < 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {14[T]}, {}]

Backtrack

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {8[x < 0], 14[T]}]

Step with 9

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {8[T], 14[T]}, {}]

Step with 12

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {8[T], 14[T]}, {}, {}]

Step with 7

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)], 7[T]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {8[T], 14[T]}, {}, {}, {}]

Covered

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {8[T], 14[T]}, {}, {7[T]}]

Backtrack

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {8[T], 14[T]}, {12[T]}]

Backtrack

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T]}, {8[T], 9[T], 14[T]}]

Backtrack

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}]

Step with 9

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}, {}]

Step with 12

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}, {}, {}]

Step with 7

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)], 7[T]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}, {}, {}, {}]

Covered

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}, {}, {7[T]}]

Backtrack

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}, {12[T]}]

Step with 6

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 6[(y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}, {12[T]}, {}]

Step with 7

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 6[(y >= 0)], 7[T]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}, {12[T]}, {}, {}]

Covered

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)], 6[(y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}, {12[T]}, {7[T]}]

Backtrack

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)], 9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 13[T], 14[T]}, {6[T], 12[T]}]

Backtrack

	Trace

	13[(1-n+y >= 0 /\ -n+y >= 0 /\ -1+n >= 0 /\ x >= 0)]
	
	Blocked

	[{8[T]}, {8[T], 9[T], 13[T], 14[T]}]

Backtrack

	Trace

	Blocked

	[{8[T], 13[T]}]

Step with 9

	Trace

	9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T], 13[T]}, {}]

Step with 6

	Trace

	9[(x >= 0 /\ y >= 0)], 6[(y >= 0)]
	
	Blocked

	[{8[T], 13[T]}, {}, {}]

Step with 7

	Trace

	9[(x >= 0 /\ y >= 0)], 6[(y >= 0)], 7[T]
	
	Blocked

	[{8[T], 13[T]}, {}, {}, {}]

Covered

	Trace

	9[(x >= 0 /\ y >= 0)], 6[(y >= 0)]
	
	Blocked

	[{8[T], 13[T]}, {}, {7[T]}]

Backtrack

	Trace

	9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T], 13[T]}, {6[T]}]

Step with 12

	Trace

	9[(x >= 0 /\ y >= 0)], 12[(y < 0)]
	
	Blocked

	[{8[T], 13[T]}, {6[T]}, {}]

Step with 7

	Trace

	9[(x >= 0 /\ y >= 0)], 12[(y < 0)], 7[T]
	
	Blocked

	[{8[T], 13[T]}, {6[T]}, {}, {}]

Covered

	Trace

	9[(x >= 0 /\ y >= 0)], 12[(y < 0)]
	
	Blocked

	[{8[T], 13[T]}, {6[T]}, {7[T]}]

Backtrack

	Trace

	9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T], 13[T]}, {6[T], 12[T]}]

Backtrack

	Trace

	Blocked

	[{8[T], 9[T], 13[T]}]

Step with 14

	Trace

	14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)]
	
	Blocked

	[{8[T], 9[T], 13[T]}, {14[T]}]

Step with 8

	Trace

	14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 8[(x < 0)]
	
	Blocked

	[{8[T], 9[T], 13[T]}, {14[T]}, {}]

Backtrack

	Trace

	14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)]
	
	Blocked

	[{8[T], 9[T], 13[T]}, {8[x < 0], 14[T]}]

Step with 9

	Trace

	14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T], 9[T], 13[T]}, {8[T], 14[T]}, {}]

Step with 12

	Trace

	14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)]
	
	Blocked

	[{8[T], 9[T], 13[T]}, {8[T], 14[T]}, {}, {}]

Step with 7

	Trace

	14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)], 7[T]
	
	Blocked

	[{8[T], 9[T], 13[T]}, {8[T], 14[T]}, {}, {}, {}]

Covered

	Trace

	14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)], 12[(y < 0)]
	
	Blocked

	[{8[T], 9[T], 13[T]}, {8[T], 14[T]}, {}, {7[T]}]

Backtrack

	Trace

	14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)], 9[(x >= 0 /\ y >= 0)]
	
	Blocked

	[{8[T], 9[T], 13[T]}, {8[T], 14[T]}, {12[T]}]

Backtrack

	Trace

	14[(1+x-n2 >= 0 /\ -1+n2 >= 0 /\ 1-y > 0 /\ y >= 0 /\ y == 0)]
	
	Blocked

	[{8[T], 9[T], 13[T]}, {8[T], 9[T], 14[T]}]

Backtrack

	Trace

	Blocked

	[{8[T], 9[T], 13[T], 14[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
