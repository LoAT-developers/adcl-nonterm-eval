WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f171_0_createList_Return -> f231_0_random_ArrayAccess : arg2'=arg2P0, arg1'=arg1P0, arg1 > 0, cost: 1
   4: f231_0_random_ArrayAccess -> f352_0_appE_GT : arg2'=arg2P4, arg1'=arg1P4, (-1+arg1 > 0 /\ arg1P4 > 0), cost: 1
   1: f1_0_main_Load -> f231_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ arg2-arg1P1 == 0), cost: 1
   2: f1_0_main_Load -> f197_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   3: f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=arg1P3, (-1-arg1P3+arg1 == 0 /\ arg1 > 0), cost: 1
   5: f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=arg1P5, (-1-arg1P5+arg1 == 0 /\ arg1 > 0), cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Removed unreachable rules and leafs
Start location: __init
   4: f231_0_random_ArrayAccess -> f352_0_appE_GT : arg2'=arg2P4, arg1'=arg1P4, (-1+arg1 > 0 /\ arg1P4 > 0), cost: 1
   1: f1_0_main_Load -> f231_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ arg2-arg1P1 == 0), cost: 1
   2: f1_0_main_Load -> f197_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   3: f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=arg1P3, (-1-arg1P3+arg1 == 0 /\ arg1 > 0), cost: 1
   5: f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=arg1P5, (-1-arg1P5+arg1 == 0 /\ arg1 > 0), cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f231_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ arg2-arg1P1 == 0), cost: 1
New rule:
f1_0_main_Load -> f231_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg2, arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=arg1P3, (-1-arg1P3+arg1 == 0 /\ arg1 > 0), cost: 1
New rule:
f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=-1+arg1, arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=arg1P5, (-1-arg1P5+arg1 == 0 /\ arg1 > 0), cost: 1
New rule:
f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=-1+arg1, arg1 > 0, cost: 1

Simplified rules
Start location: __init
   4: f231_0_random_ArrayAccess -> f352_0_appE_GT : arg2'=arg2P4, arg1'=arg1P4, (-1+arg1 > 0 /\ arg1P4 > 0), cost: 1
   2: f1_0_main_Load -> f197_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load -> f231_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg2, arg1 > 0, cost: 1
   8: f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=-1+arg1, arg1 > 0, cost: 1
   9: f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=-1+arg1, arg1 > 0, cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied acceleration
Original rule:
f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=-1+arg1, arg1 > 0, cost: 1
New rule:
f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=-n+arg1, (-1+n >= 0 /\ 1-n+arg1 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_paGIHM.txt

Applied instantiation
Original rule:
f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=-n+arg1, (-1+n >= 0 /\ 1-n+arg1 > 0), cost: n
New rule:
f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=0, (1 > 0 /\ -1+arg1 >= 0), cost: arg1

Applied simplification
Original rule:
f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=0, (1 > 0 /\ -1+arg1 >= 0), cost: arg1
New rule:
f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=0, -1+arg1 >= 0, cost: arg1

Applied deletion
Removed the following rules: 8

Applied acceleration
Original rule:
f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=-1+arg1, arg1 > 0, cost: 1
New rule:
f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=arg1-n0, (1+arg1-n0 > 0 /\ -1+n0 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_imbBjk.txt

Applied instantiation
Original rule:
f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=arg1-n0, (1+arg1-n0 > 0 /\ -1+n0 >= 0), cost: n0
New rule:
f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=0, (1 > 0 /\ -1+arg1 >= 0), cost: arg1

Applied simplification
Original rule:
f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=0, (1 > 0 /\ -1+arg1 >= 0), cost: arg1
New rule:
f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=0, -1+arg1 >= 0, cost: arg1

Applied deletion
Removed the following rules: 9

Accelerated simple loops
Start location: __init
   4: f231_0_random_ArrayAccess -> f352_0_appE_GT : arg2'=arg2P4, arg1'=arg1P4, (-1+arg1 > 0 /\ arg1P4 > 0), cost: 1
   2: f1_0_main_Load -> f197_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load -> f231_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg2, arg1 > 0, cost: 1
  11: f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=0, -1+arg1 >= 0, cost: arg1
  13: f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=0, -1+arg1 >= 0, cost: arg1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f197_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f197_0_createList_LE -> f197_0_createList_LE : arg2'=arg2P3, arg1'=0, -1+arg1 >= 0, cost: arg1
New rule:
f1_0_main_Load -> f197_0_createList_LE : arg2'=arg2P3, arg1'=0, (1+arg2 > 0 /\ arg1 > 0 /\ -1+arg1P2 >= 0), cost: 1+arg1P2

Applied deletion
Removed the following rules: 11

Applied chaining
First rule:
f231_0_random_ArrayAccess -> f352_0_appE_GT : arg2'=arg2P4, arg1'=arg1P4, (-1+arg1 > 0 /\ arg1P4 > 0), cost: 1
Second rule:
f352_0_appE_GT -> f352_0_appE_GT : arg2'=arg2P5, arg1'=0, -1+arg1 >= 0, cost: arg1
New rule:
f231_0_random_ArrayAccess -> f352_0_appE_GT : arg2'=arg2P5, arg1'=0, (-1+arg1 > 0 /\ arg1P4 > 0), cost: 1+arg1P4

Applied deletion
Removed the following rules: 13

Chained accelerated rules with incoming rules
Start location: __init
   4: f231_0_random_ArrayAccess -> f352_0_appE_GT : arg2'=arg2P4, arg1'=arg1P4, (-1+arg1 > 0 /\ arg1P4 > 0), cost: 1
  15: f231_0_random_ArrayAccess -> f352_0_appE_GT : arg2'=arg2P5, arg1'=0, (-1+arg1 > 0 /\ arg1P4 > 0), cost: 1+arg1P4
   2: f1_0_main_Load -> f197_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load -> f231_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg2, arg1 > 0, cost: 1
  14: f1_0_main_Load -> f197_0_createList_LE : arg2'=arg2P3, arg1'=0, (1+arg2 > 0 /\ arg1 > 0 /\ -1+arg1P2 >= 0), cost: 1+arg1P2
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

