NO

Initial ITS

Start location: __init
Program variables: arg1 arg2
   0: f226_0_createIntList_Return -> f570_0_main_NULL : arg1'=arg1p1, arg2'=arg2p1, (-arg2+arg2p1 <= 0 /\ arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ 1+arg2p1 > 0 /\ -1+arg1p1-arg2 <= 0 /\ arg1 > 0), cost: 1
   2: f570_0_main_NULL -> f570_0_main_NULL : arg1'=arg1p3, arg2'=arg2p3, (1+arg2p3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ 1+arg2p3-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p3 <= 0 /\ arg1 > 0 /\ 1-arg2+arg1p3 <= 0), cost: 1
   3: f570_0_main_NULL -> f570_0_main_NULL : arg1'=arg1p4, arg2'=arg2p4, (x14 > 0 /\ x19 > 0 /\ -2+arg2 > 0 /\ arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 2-arg2+arg1p4 <= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0), cost: 1
   6: f570_0_main_NULL -> f726_0_reverse_NULL : arg1'=arg1p7, arg2'=arg2p7, (arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ x25 > 0 /\ x29 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f570_0_main_NULL : arg1'=arg1p2, arg2'=arg2p2, (1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
   4: f1_0_main_Load -> f507_0_createIntList_LE : arg1'=arg1p5, arg2'=arg2p5, (1+arg1p5 > 0 /\ 1+arg2 > 0 /\ 1-arg2p5 == 0 /\ arg1 > 0), cost: 1
   5: f507_0_createIntList_LE -> f507_0_createIntList_LE : arg1'=arg1p6, arg2'=arg2p6, (-1-arg1p6+arg1 == 0 /\ arg2 > 0 /\ 1+arg2-arg2p6 == 0 /\ arg1 > 0), cost: 1
   7: f726_0_reverse_NULL -> f726_0_reverse_NULL : arg1'=arg1p8, arg2'=arg2p8, (1+arg1p8-arg1 <= 0 /\ 1+arg1p8 > 0 /\ arg1 > 0), cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2
   0: f226_0_createIntList_Return -> f570_0_main_NULL : arg1'=arg1p1, arg2'=arg2p1, (-arg2+arg2p1 <= 0 /\ arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ 1+arg2p1 > 0 /\ -1+arg1p1-arg2 <= 0 /\ arg1 > 0), cost: 1
   2: f570_0_main_NULL -> f570_0_main_NULL : arg1'=arg1p3, arg2'=arg2p3, (1+arg2p3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ 1+arg2p3-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p3 <= 0 /\ arg1 > 0 /\ 1-arg2+arg1p3 <= 0), cost: 1
   9: f570_0_main_NULL -> f570_0_main_NULL : arg1'=arg1p4, arg2'=arg2p4, (-2+arg2 > 0 /\ arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 2-arg2+arg1p4 <= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0), cost: 1
  12: f570_0_main_NULL -> f726_0_reverse_NULL : arg1'=arg1p7, arg2'=arg2p7, (arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f570_0_main_NULL : arg1'=arg1p2, arg2'=arg2p2, (1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
  10: f1_0_main_Load -> f507_0_createIntList_LE : arg1'=arg1p5, arg2'=1, (1+arg1p5 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
  11: f507_0_createIntList_LE -> f507_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, (arg2 > 0 /\ arg1 > 0), cost: 1
   7: f726_0_reverse_NULL -> f726_0_reverse_NULL : arg1'=arg1p8, arg2'=arg2p8, (1+arg1p8-arg1 <= 0 /\ 1+arg1p8 > 0 /\ arg1 > 0), cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, T, cost: 1

	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f570_0_main_NULL -> f570_0_main_NULL : arg1'=arg1p4, arg2'=arg2p4, (x14 > 0 /\ x19 > 0 /\ -2+arg2 > 0 /\ arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 2-arg2+arg1p4 <= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f570_0_main_NULL -> f570_0_main_NULL : arg1'=arg1p4, arg2'=arg2p4, (-2+arg2 > 0 /\ arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 2-arg2+arg1p4 <= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f507_0_createIntList_LE : arg1'=arg1p5, arg2'=arg2p5, (1+arg1p5 > 0 /\ 1+arg2 > 0 /\ 1-arg2p5 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f507_0_createIntList_LE : arg1'=arg1p5, arg2'=1, (0 == 0 /\ 1+arg1p5 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p5 = 1
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f507_0_createIntList_LE : arg1'=arg1p5, arg2'=1, (0 == 0 /\ 1+arg1p5 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f507_0_createIntList_LE : arg1'=arg1p5, arg2'=1, (1+arg1p5 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f507_0_createIntList_LE -> f507_0_createIntList_LE : arg1'=arg1p6, arg2'=arg2p6, (-1-arg1p6+arg1 == 0 /\ arg2 > 0 /\ 1+arg2-arg2p6 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f507_0_createIntList_LE -> f507_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, (0 == 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg1p6 = -1+arg1
		
		propagated equality arg2p6 = 1+arg2
		
	Simplified Guard

	Original rule:
	f507_0_createIntList_LE -> f507_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, (0 == 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f507_0_createIntList_LE -> f507_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, (arg2 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f570_0_main_NULL -> f726_0_reverse_NULL : arg1'=arg1p7, arg2'=arg2p7, (arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ x25 > 0 /\ x29 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f570_0_main_NULL -> f726_0_reverse_NULL : arg1'=arg1p7, arg2'=arg2p7, (arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ arg1 > 0), cost: 1

Step with 8

	Trace

	8[T]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 12

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 12[(arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 7

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 12[(arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ arg1 > 0)], 7[(1+arg1p8-arg1 <= 0 /\ 1+arg1p8 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 7

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 12[(arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ arg1 > 0)], 7[(1+arg1p8-arg1 <= 0 /\ 1+arg1p8 > 0 /\ arg1 > 0)], 7[(1+arg1p8-arg1 <= 0 /\ 1+arg1p8 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Covered

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 12[(arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ arg1 > 0)], 7[(1+arg1p8-arg1 <= 0 /\ 1+arg1p8 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {7[T]}]

Backtrack

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 12[(arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {7[T]}]

Backtrack

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T]}]

Step with 2

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 2[(1+arg2p3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ 1+arg2p3-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p3 <= 0 /\ arg1 > 0 /\ 1-arg2+arg1p3 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 2

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 2[(1+arg2p3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ 1+arg2p3-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p3 <= 0 /\ arg1 > 0 /\ 1-arg2+arg1p3 <= 0)], 2[(1+arg2p3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ 1+arg2p3-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p3 <= 0 /\ arg1 > 0 /\ 1-arg2+arg1p3 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}, {}]

Covered

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 2[(1+arg2p3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ 1+arg2p3-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p3 <= 0 /\ arg1 > 0 /\ 1-arg2+arg1p3 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {2[T]}]

Step with 9

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 2[(1+arg2p3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ 1+arg2p3-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p3 <= 0 /\ arg1 > 0 /\ 1-arg2+arg1p3 <= 0)], 9[(-2+arg2 > 0 /\ arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 2-arg2+arg1p4 <= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T]}, {2[T]}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2
   0: f226_0_createIntList_Return -> f570_0_main_NULL : arg1'=arg1p1, arg2'=arg2p1, (-arg2+arg2p1 <= 0 /\ arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ 1+arg2p1 > 0 /\ -1+arg1p1-arg2 <= 0 /\ arg1 > 0), cost: 1
   2: f570_0_main_NULL -> f570_0_main_NULL : arg1'=arg1p3, arg2'=arg2p3, (1+arg2p3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ 1+arg2p3-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p3 <= 0 /\ arg1 > 0 /\ 1-arg2+arg1p3 <= 0), cost: 1
   9: f570_0_main_NULL -> f570_0_main_NULL : arg1'=arg1p4, arg2'=arg2p4, (-2+arg2 > 0 /\ arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 2-arg2+arg1p4 <= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0), cost: 1
  12: f570_0_main_NULL -> f726_0_reverse_NULL : arg1'=arg1p7, arg2'=arg2p7, (arg1p7 > 0 /\ -2+arg2 > 0 /\ 2+arg1p7-arg2 <= 0 /\ arg1 > 0), cost: 1
  13: f570_0_main_NULL -> LoAT_sink : (-2+arg2 > 0 /\ arg1p4 > 0 /\ -arg2p4+arg2 <= 0 /\ -arg1p4+arg1 <= 0 /\ -arg1p4+arg1 >= 0 /\ -2+arg2-arg1p4 >= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0), cost: NONTERM
   1: f1_0_main_Load -> f570_0_main_NULL : arg1'=arg1p2, arg2'=arg2p2, (1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
  10: f1_0_main_Load -> f507_0_createIntList_LE : arg1'=arg1p5, arg2'=1, (1+arg1p5 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: 1
  11: f507_0_createIntList_LE -> f507_0_createIntList_LE : arg1'=-1+arg1, arg2'=1+arg2, (arg2 > 0 /\ arg1 > 0), cost: 1
   7: f726_0_reverse_NULL -> f726_0_reverse_NULL : arg1'=arg1p8, arg2'=arg2p8, (1+arg1p8-arg1 <= 0 /\ 1+arg1p8 > 0 /\ arg1 > 0), cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	f570_0_main_NULL -> f570_0_main_NULL : arg1'=arg1p4, arg2'=arg2p4, (-2+arg2 > 0 /\ arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ 2-arg2+arg1p4 <= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f570_0_main_NULL -> LoAT_sink : (-2+arg2 > 0 /\ arg1p4 > 0 /\ -arg2p4+arg2 <= 0 /\ -arg1p4+arg1 <= 0 /\ -arg1p4+arg1 >= 0 /\ -2+arg2-arg1p4 >= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0), cost: NONTERM

		-2+arg2 > 0 [0]: montonic decrease yields -2+arg2p4 > 0, dependencies: arg1p4 > 0 -2+arg2-arg1p4 >= 0
		
		-2+arg2 > 0 [1]: eventual decrease yields (-2+arg2 > 0 /\ -2+arg2p4 > 0)
		
		-2+arg2 > 0 [2]: eventual increase yields (-2+arg2 > 0 /\ -arg2p4+arg2 <= 0)
		
		arg1p4 > 0 [0]: monotonic increase yields arg1p4 > 0
		
		-arg1p4+arg1 >= 0 [0]: monotonic increase yields -arg1p4+arg1 >= 0
		
		-2+arg2-arg1p4 >= 0 [0]: eventual decrease yields (-2+arg2p4-arg1p4 >= 0 /\ -2+arg2-arg1p4 >= 0)
		
		-2+arg2-arg1p4 >= 0 [1]: eventual increase yields (-arg2p4+arg2 <= 0 /\ -2+arg2-arg1p4 >= 0)
		
		1+arg2p4 > 0 [0]: monotonic increase yields 1+arg2p4 > 0
		
		arg1 > 0 [0]: montonic decrease yields arg1p4 > 0, dependencies: -arg1p4+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p4+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {-2+arg2 > 0 -> (-2+arg2 > 0 /\ -arg2p4+arg2 <= 0), arg1p4 > 0 -> arg1p4 > 0, -arg1p4+arg1 >= 0 -> -arg1p4+arg1 >= 0, -2+arg2-arg1p4 >= 0 -> (-arg2p4+arg2 <= 0 /\ -2+arg2-arg1p4 >= 0), 1+arg2p4 > 0 -> 1+arg2p4 > 0, arg1 > 0 -> (-arg1p4+arg1 <= 0 /\ arg1 > 0)}

Step with 13

	Trace

	8[T], 1[(1+arg2p2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 2[(1+arg2p3 > 0 /\ arg1p3-arg1 <= 0 /\ arg1p3 > 0 /\ 1+arg2p3-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p3 <= 0 /\ arg1 > 0 /\ 1-arg2+arg1p3 <= 0)], 13[(-2+arg2 > 0 /\ arg1p4 > 0 /\ -arg2p4+arg2 <= 0 /\ -arg1p4+arg1 <= 0 /\ -arg1p4+arg1 >= 0 /\ -2+arg2-arg1p4 >= 0 /\ 1+arg2p4 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T]}, {2[T]}, {13[T]}]

Refute

	Counterexample

	[ arg1=4 arg2=0 ] 8 [ arg1=4 arg2=5 ] 1 [ arg1=1 arg2=3 ] 2 [ arg1=arg1 arg2=arg2 ] 13
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
