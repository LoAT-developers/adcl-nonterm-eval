WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_New -> f169_0_exampleMethods_LE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-arg2P0 == 0 /\ -13+arg1P0 > 0 /\ 10-arg3P0 == 0), cost: 1
   1: f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-2+arg1 > 0 /\ -2+arg1P1 > 0 /\ 10+arg2-arg2P1 == 0 /\ 1+arg2 > 0 /\ -1+arg3-arg3P1 == 0 /\ -arg1+arg1P1 <= 0 /\ arg3 > 0 /\ 4-arg1+arg3 <= 0), cost: 1
   2: __init -> f1_0_main_New : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_New -> f169_0_exampleMethods_LE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-arg2P0 == 0 /\ -13+arg1P0 > 0 /\ 10-arg3P0 == 0), cost: 1
New rule:
f1_0_main_New -> f169_0_exampleMethods_LE : arg2'=0, arg1'=arg1P0, arg3'=10, -13+arg1P0 > 0, cost: 1

Applied preprocessing
Original rule:
f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-2+arg1 > 0 /\ -2+arg1P1 > 0 /\ 10+arg2-arg2P1 == 0 /\ 1+arg2 > 0 /\ -1+arg3-arg3P1 == 0 /\ -arg1+arg1P1 <= 0 /\ arg3 > 0 /\ 4-arg1+arg3 <= 0), cost: 1
New rule:
f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=10+arg2, arg1'=arg1P1, arg3'=-1+arg3, (-2+arg1P1 > 0 /\ 1+arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ arg3 > 0 /\ 4-arg1+arg3 <= 0), cost: 1

Simplified rules
Start location: __init
   3: f1_0_main_New -> f169_0_exampleMethods_LE : arg2'=0, arg1'=arg1P0, arg3'=10, -13+arg1P0 > 0, cost: 1
   4: f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=10+arg2, arg1'=arg1P1, arg3'=-1+arg3, (-2+arg1P1 > 0 /\ 1+arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ arg3 > 0 /\ 4-arg1+arg3 <= 0), cost: 1
   2: __init -> f1_0_main_New : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, TRUE, cost: 1


Applied acceleration
Original rule:
f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=10+arg2, arg1'=arg1P1, arg3'=-1+arg3, (-2+arg1P1 > 0 /\ 1+arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ arg3 > 0 /\ 4-arg1+arg3 <= 0), cost: 1
New rule:
f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=10*n+arg2, arg1'=arg1P1, arg3'=-n+arg3, (-2+arg1P1 > 0 /\ -1+arg1-arg1P1 <= 0 /\ -4+arg1-arg3 >= 0 /\ 1+arg2 > 0 /\ arg1-arg1P1 >= 0 /\ -1+n >= 0 /\ 1-n+arg3 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cONaCH.txt

Applied instantiation
Original rule:
f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=10*n+arg2, arg1'=arg1P1, arg3'=-n+arg3, (-2+arg1P1 > 0 /\ -1+arg1-arg1P1 <= 0 /\ -4+arg1-arg3 >= 0 /\ 1+arg2 > 0 /\ arg1-arg1P1 >= 0 /\ -1+n >= 0 /\ 1-n+arg3 > 0), cost: n
New rule:
f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=arg2+10*arg3, arg1'=arg1P1, arg3'=0, (1 > 0 /\ -2+arg1P1 > 0 /\ -1+arg1-arg1P1 <= 0 /\ -4+arg1-arg3 >= 0 /\ 1+arg2 > 0 /\ -1+arg3 >= 0 /\ arg1-arg1P1 >= 0), cost: arg3

Applied simplification
Original rule:
f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=arg2+10*arg3, arg1'=arg1P1, arg3'=0, (1 > 0 /\ -2+arg1P1 > 0 /\ -1+arg1-arg1P1 <= 0 /\ -4+arg1-arg3 >= 0 /\ 1+arg2 > 0 /\ -1+arg3 >= 0 /\ arg1-arg1P1 >= 0), cost: arg3
New rule:
f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=arg2+10*arg3, arg1'=arg1P1, arg3'=0, (-1+arg1-arg1P1 <= 0 /\ -4+arg1-arg3 >= 0 /\ 1+arg2 > 0 /\ -1+arg3 >= 0 /\ arg1-arg1P1 >= 0), cost: arg3

Applied deletion
Removed the following rules: 4

Accelerated simple loops
Start location: __init
   3: f1_0_main_New -> f169_0_exampleMethods_LE : arg2'=0, arg1'=arg1P0, arg3'=10, -13+arg1P0 > 0, cost: 1
   6: f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=arg2+10*arg3, arg1'=arg1P1, arg3'=0, (-1+arg1-arg1P1 <= 0 /\ -4+arg1-arg3 >= 0 /\ 1+arg2 > 0 /\ -1+arg3 >= 0 /\ arg1-arg1P1 >= 0), cost: arg3
   2: __init -> f1_0_main_New : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_New -> f169_0_exampleMethods_LE : arg2'=0, arg1'=arg1P0, arg3'=10, -13+arg1P0 > 0, cost: 1
Second rule:
f169_0_exampleMethods_LE -> f169_0_exampleMethods_LE : arg2'=arg2+10*arg3, arg1'=arg1P1, arg3'=0, (-1+arg1-arg1P1 <= 0 /\ -4+arg1-arg3 >= 0 /\ 1+arg2 > 0 /\ -1+arg3 >= 0 /\ arg1-arg1P1 >= 0), cost: arg3
New rule:
f1_0_main_New -> f169_0_exampleMethods_LE : arg2'=100, arg1'=arg1P1, arg3'=0, -13+arg1P1 >= 0, cost: 11

Applied deletion
Removed the following rules: 6

Chained accelerated rules with incoming rules
Start location: __init
   3: f1_0_main_New -> f169_0_exampleMethods_LE : arg2'=0, arg1'=arg1P0, arg3'=10, -13+arg1P0 > 0, cost: 1
   7: f1_0_main_New -> f169_0_exampleMethods_LE : arg2'=100, arg1'=arg1P1, arg3'=0, -13+arg1P1 >= 0, cost: 11
   2: __init -> f1_0_main_New : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

