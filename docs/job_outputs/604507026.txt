unknown

Initial ITS

Start location: l4
Program variables: x^0
   0: l0 -> l2 : x^0'=x^post1, 1+x^post1-x^0 == 0, cost: 1
   1: l2 -> l1 : x^0'=x^post2, (-x^post2+x^0 == 0 /\ 1-x^0 <= 0), cost: 1
   2: l2 -> l1 : x^0'=x^post3, (-x^post3+x^0 == 0 /\ 1+x^0 <= 0), cost: 1
   3: l1 -> l0 : x^0'=x^post4, -x^post4+x^0 == 0, cost: 1
   4: l3 -> l0 : x^0'=x^post5, (-x^post5+x^0 == 0 /\ 1-x^0 <= 0), cost: 1
   5: l4 -> l3 : x^0'=x^post6, -x^post6+x^0 == 0, cost: 1

Chained Linear Paths

Start location: l4
Program variables: x^0
   0: l0 -> l2 : x^0'=x^post1, 1+x^post1-x^0 == 0, cost: 1
   1: l2 -> l1 : x^0'=x^post2, (-x^post2+x^0 == 0 /\ 1-x^0 <= 0), cost: 1
   2: l2 -> l1 : x^0'=x^post3, (-x^post3+x^0 == 0 /\ 1+x^0 <= 0), cost: 1
   3: l1 -> l0 : x^0'=x^post4, -x^post4+x^0 == 0, cost: 1
   6: l4 -> l0 : x^0'=x^post5, (-x^post6+x^0 == 0 /\ 1-x^post6 <= 0 /\ x^post6-x^post5 == 0), cost: 1

	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l4 -> l3 : x^0'=x^post6, -x^post6+x^0 == 0, cost: 1
	Second rule:
	l3 -> l0 : x^0'=x^post5, (-x^post5+x^0 == 0 /\ 1-x^0 <= 0), cost: 1
	New rule:
	l4 -> l0 : x^0'=x^post5, (-x^post6+x^0 == 0 /\ 1-x^post6 <= 0 /\ x^post6-x^post5 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5

Simplified Transitions

Start location: l4
Program variables: x^0
   7: l0 -> l2 : x^0'=-1+x^0, T, cost: 1
   8: l2 -> l1 : 1-x^0 <= 0, cost: 1
   9: l2 -> l1 : 1+x^0 <= 0, cost: 1
  10: l1 -> l0 : T, cost: 1
  11: l4 -> l0 : 1-x^0 <= 0, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l2 : x^0'=x^post1, 1+x^post1-x^0 == 0, cost: 1
	New rule:
	l0 -> l2 : x^0'=-1+x^0, 0 == 0, cost: 1
	
		propagated equality x^post1 = -1+x^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : x^0'=-1+x^0, 0 == 0, cost: 1
	New rule:
	l0 -> l2 : x^0'=-1+x^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l1 : x^0'=x^post2, (-x^post2+x^0 == 0 /\ 1-x^0 <= 0), cost: 1
	New rule:
	l2 -> l1 : x^0'=x^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	
		propagated equality x^post2 = x^0
		
	Simplified Guard

	Original rule:
	l2 -> l1 : x^0'=x^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	New rule:
	l2 -> l1 : x^0'=x^0, 1-x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l1 : x^0'=x^0, 1-x^0 <= 0, cost: 1
	New rule:
	l2 -> l1 : 1-x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l1 : x^0'=x^post3, (-x^post3+x^0 == 0 /\ 1+x^0 <= 0), cost: 1
	New rule:
	l2 -> l1 : x^0'=x^0, (0 == 0 /\ 1+x^0 <= 0), cost: 1
	
		propagated equality x^post3 = x^0
		
	Simplified Guard

	Original rule:
	l2 -> l1 : x^0'=x^0, (0 == 0 /\ 1+x^0 <= 0), cost: 1
	New rule:
	l2 -> l1 : x^0'=x^0, 1+x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l1 : x^0'=x^0, 1+x^0 <= 0, cost: 1
	New rule:
	l2 -> l1 : 1+x^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l0 : x^0'=x^post4, -x^post4+x^0 == 0, cost: 1
	New rule:
	l1 -> l0 : x^0'=x^0, 0 == 0, cost: 1
	
		propagated equality x^post4 = x^0
		
	Simplified Guard

	Original rule:
	l1 -> l0 : x^0'=x^0, 0 == 0, cost: 1
	New rule:
	l1 -> l0 : x^0'=x^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l0 : x^0'=x^0, T, cost: 1
	New rule:
	l1 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l0 : x^0'=x^post5, (-x^post6+x^0 == 0 /\ 1-x^post6 <= 0 /\ x^post6-x^post5 == 0), cost: 1
	New rule:
	l4 -> l0 : x^0'=x^post6, (0 == 0 /\ -x^post6+x^0 == 0 /\ 1-x^post6 <= 0), cost: 1
	
		propagated equality x^post5 = x^post6
		
	Propagated Equalities

	Original rule:
	l4 -> l0 : x^0'=x^post6, (0 == 0 /\ -x^post6+x^0 == 0 /\ 1-x^post6 <= 0), cost: 1
	New rule:
	l4 -> l0 : x^0'=x^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	
		propagated equality x^post6 = x^0
		
	Simplified Guard

	Original rule:
	l4 -> l0 : x^0'=x^0, (0 == 0 /\ 1-x^0 <= 0), cost: 1
	New rule:
	l4 -> l0 : x^0'=x^0, 1-x^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l0 : x^0'=x^0, 1-x^0 <= 0, cost: 1
	New rule:
	l4 -> l0 : 1-x^0 <= 0, cost: 1

Step with 11

	Trace

	11[(1-x^0 <= 0)]
	
	Blocked

	[{}, {}]

Step with 7

	Trace

	11[(1-x^0 <= 0)], 7[T]
	
	Blocked

	[{}, {}, {}]

Step with 8

	Trace

	11[(1-x^0 <= 0)], 7[T], 8[(1-x^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 10

	Trace

	11[(1-x^0 <= 0)], 7[T], 8[(1-x^0 <= 0)], 10[T]
	
	Blocked

	[{}, {}, {}, {}, {}]

Accelerate

Start location: l4
Program variables: x^0
   7: l0 -> l2 : x^0'=-1+x^0, T, cost: 1
  12: l0 -> l0 : x^0'=-n+x^0, (-1-n+x^0 >= 0 /\ -1+n >= 0), cost: 1
   8: l2 -> l1 : 1-x^0 <= 0, cost: 1
   9: l2 -> l1 : 1+x^0 <= 0, cost: 1
  10: l1 -> l0 : T, cost: 1
  11: l4 -> l0 : 1-x^0 <= 0, cost: 1

	Loop Acceleration

	Original rule:
	l0 -> l0 : x^0'=-1+x^0, 2-x^0 <= 0, cost: 1
	New rule:
	l0 -> l0 : x^0'=-n+x^0, (-1-n+x^0 >= 0 /\ -1+n >= 0), cost: 1

		-2+x^0 >= 0 [0]: montonic decrease yields -1-n+x^0 >= 0
		
		-2+x^0 >= 0 [1]: eventual increase yields (-2+x^0 >= 0 /\ 1 <= 0)
		
		Replacement map: {-2+x^0 >= 0 -> -1-n+x^0 >= 0}

	Trace

	11[(1-x^0 <= 0)], 12[(-1-n+x^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {12[T]}]

Step with 7

	Trace

	11[(1-x^0 <= 0)], 12[(-1-n+x^0 >= 0 /\ -1+n >= 0)], 7[T]
	
	Blocked

	[{}, {}, {12[T]}, {}]

Step with 8

	Trace

	11[(1-x^0 <= 0)], 12[(-1-n+x^0 >= 0 /\ -1+n >= 0)], 7[T], 8[(1-x^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}, {}]

Step with 10

	Trace

	11[(1-x^0 <= 0)], 12[(-1-n+x^0 >= 0 /\ -1+n >= 0)], 7[T], 8[(1-x^0 <= 0)], 10[T]
	
	Blocked

	[{}, {}, {12[T]}, {}, {}, {}]

Covered

	Trace

	11[(1-x^0 <= 0)], 12[(-1-n+x^0 >= 0 /\ -1+n >= 0)], 7[T], 8[(1-x^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}, {10[T]}]

Backtrack

	Trace

	11[(1-x^0 <= 0)], 12[(-1-n+x^0 >= 0 /\ -1+n >= 0)], 7[T]
	
	Blocked

	[{}, {}, {12[T]}, {8[T]}]

Backtrack

	Trace

	11[(1-x^0 <= 0)], 12[(-1-n+x^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {7[T], 12[T]}]

Backtrack

	Trace

	11[(1-x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}]

Step with 7

	Trace

	11[(1-x^0 <= 0)], 7[T]
	
	Blocked

	[{}, {12[T]}, {}]

Step with 8

	Trace

	11[(1-x^0 <= 0)], 7[T], 8[(1-x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {}, {}]

Step with 10

	Trace

	11[(1-x^0 <= 0)], 7[T], 8[(1-x^0 <= 0)], 10[T]
	
	Blocked

	[{}, {12[T]}, {}, {}, {}]

Covered

	Trace

	11[(1-x^0 <= 0)], 7[T], 8[(1-x^0 <= 0)]
	
	Blocked

	[{}, {12[T]}, {}, {10[T]}]

Backtrack

	Trace

	11[(1-x^0 <= 0)], 7[T]
	
	Blocked

	[{}, {12[T]}, {8[T]}]

Backtrack

	Trace

	11[(1-x^0 <= 0)]
	
	Blocked

	[{}, {7[T], 12[T]}]

Backtrack

	Trace

	Blocked

	[{11[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
