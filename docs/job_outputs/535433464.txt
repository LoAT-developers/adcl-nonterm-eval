WORST_CASE(Omega(0),?)

Initial ITS
Start location: l18
   0: l0 -> l1 : i^0'=i^post0, i2^0'=i2^post0, r^0'=r^post0, (r^0-r^post0 == 0 /\ i^post0 == 0 /\ 1-i^0 <= 0 /\ i2^0-i2^post0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post1, i2^0'=i2^post1, r^0'=r^post1, (i^0 <= 0 /\ -i^0+i2^post1 == 0 /\ r^0-r^post1 == 0 /\ i^0-i^post1 == 0), cost: 1
  16: l1 -> l10 : i^0'=i^post16, i2^0'=i2^post16, r^0'=r^post16, (-i2^post16+i2^0 == 0 /\ -r^post16+r^0 == 0 /\ -i^post16+i^0 == 0), cost: 1
  23: l2 -> l16 : i^0'=i^post23, i2^0'=i2^post23, r^0'=r^post23, (-r^post23+r^0 == 0 /\ i^0-i^post23 == 0 /\ -i2^post23+i2^0 == 0), cost: 1
  24: l2 -> l12 : i^0'=i^post24, i2^0'=i2^post24, r^0'=r^post24, (i2^0-i2^post24 == 0 /\ i^0-i^post24 == 0 /\ -r^post24+r^0 == 0), cost: 1
  25: l2 -> l16 : i^0'=i^post25, i2^0'=i2^post25, r^0'=r^post25, (i2^0-i2^post25 == 0 /\ i^0-i^post25 == 0 /\ -r^post25+r^0 == 0), cost: 1
   2: l3 -> l1 : i^0'=i^post2, i2^0'=i2^post2, r^0'=r^post2, (r^0-r^post2 == 0 /\ -1-i^0+i^post2 == 0 /\ -i2^post2+i2^0 == 0), cost: 1
   3: l4 -> l5 : i^0'=i^post3, i2^0'=i2^post3, r^0'=r^post3, (-i2^post3+i2^0 == 0 /\ -i^post3+i^0 == 0 /\ -r^post3+r^0 == 0), cost: 1
   4: l5 -> l3 : i^0'=i^post4, i2^0'=i2^post4, r^0'=r^post4, (-i2^post4+i2^0 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
   5: l6 -> l0 : i^0'=i^post5, i2^0'=i2^post5, r^0'=r^post5, (-i2^post5+i2^0 == 0 /\ -r^post5+r^0 == 0 /\ -i^post5+i^0 == 0), cost: 1
   6: l7 -> l4 : i^0'=i^post6, i2^0'=i2^post6, r^0'=r^post6, (-i2^post6+i2^0 == 0 /\ i^0-i^post6 == 0 /\ -r^post6+r^0 == 0), cost: 1
   7: l7 -> l4 : i^0'=i^post7, i2^0'=i2^post7, r^0'=r^post7, (-r^post7+r^0 == 0 /\ -i2^post7+i2^0 == 0 /\ i^0-i^post7 == 0), cost: 1
   8: l7 -> l5 : i^0'=i^post8, i2^0'=i2^post8, r^0'=r^post8, (i2^0-i2^post8 == 0 /\ -r^post8+r^0 == 0 /\ i^0-i^post8 == 0), cost: 1
   9: l8 -> l7 : i^0'=i^post9, i2^0'=i2^post9, r^0'=r^post9, (0 == 0 /\ i^0-i^post9 == 0 /\ i2^0-i2^post9 == 0), cost: 1
  10: l9 -> l8 : i^0'=i^post10, i2^0'=i2^post10, r^0'=r^post10, (i2^0-i2^post10 == 0 /\ i^0-i^post10 == 0 /\ -r^post10+r^0 == 0), cost: 1
  11: l9 -> l3 : i^0'=i^post11, i2^0'=i2^post11, r^0'=r^post11, (i^0-i^post11 == 0 /\ i2^0-i2^post11 == 0 /\ -r^post11+r^0 == 0), cost: 1
  12: l9 -> l8 : i^0'=i^post12, i2^0'=i2^post12, r^0'=r^post12, (i2^0-i2^post12 == 0 /\ -r^post12+r^0 == 0 /\ i^0-i^post12 == 0), cost: 1
  13: l10 -> l11 : i^0'=i^post13, i2^0'=i2^post13, r^0'=r^post13, (-r^post13+r^0 == 0 /\ 1-i^0 <= 0 /\ i2^0-i2^post13 == 0 /\ i^0-i^post13 == 0), cost: 1
  14: l10 -> l9 : i^0'=i^post14, i2^0'=i2^post14, r^0'=r^post14, (i^0 <= 0 /\ r^0-r^post14 == 0 /\ i^0-i^post14 == 0 /\ i2^0-i2^post14 == 0), cost: 1
  15: l12 -> l6 : i^0'=i^post15, i2^0'=i2^post15, r^0'=r^post15, (-1-i^0+i^post15 == 0 /\ r^0-r^post15 == 0 /\ i2^0-i2^post15 == 0), cost: 1
  17: l13 -> l14 : i^0'=i^post17, i2^0'=i2^post17, r^0'=r^post17, (-i2^post17+i2^0 == 0 /\ -i^post17+i^0 == 0 /\ -r^post17+r^0 == 0), cost: 1
  18: l14 -> l12 : i^0'=i^post18, i2^0'=i2^post18, r^0'=r^post18, (-r^post18+r^0 == 0 /\ -i2^post18+i2^0 == 0 /\ i^0-i^post18 == 0), cost: 1
  19: l15 -> l13 : i^0'=i^post19, i2^0'=i2^post19, r^0'=r^post19, (-i2^post19+i2^0 == 0 /\ -r^post19+r^0 == 0 /\ i^0-i^post19 == 0), cost: 1
  20: l15 -> l13 : i^0'=i^post20, i2^0'=i2^post20, r^0'=r^post20, (-i2^post20+i2^0 == 0 /\ i^0-i^post20 == 0 /\ -r^post20+r^0 == 0), cost: 1
  21: l15 -> l14 : i^0'=i^post21, i2^0'=i2^post21, r^0'=r^post21, (-i2^post21+i2^0 == 0 /\ i^0-i^post21 == 0 /\ -r^post21+r^0 == 0), cost: 1
  22: l16 -> l15 : i^0'=i^post22, i2^0'=i2^post22, r^0'=r^post22, (-i2^post22+i2^0 == 0 /\ i^0-i^post22 == 0 /\ -r^post22+r^0 == 0), cost: 1
  26: l17 -> l6 : i^0'=i^post26, i2^0'=i2^post26, r^0'=r^post26, (r^0-r^post26 == 0 /\ i^10 == 0 /\ -i2^post26+i2^0 == 0 /\ i^post26 == 0), cost: 1
  27: l18 -> l17 : i^0'=i^post27, i2^0'=i2^post27, r^0'=r^post27, (r^0-r^post27 == 0 /\ i^0-i^post27 == 0 /\ -i2^post27+i2^0 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l18
   0: l0 -> l1 : i^0'=i^post0, i2^0'=i2^post0, r^0'=r^post0, (r^0-r^post0 == 0 /\ i^post0 == 0 /\ 1-i^0 <= 0 /\ i2^0-i2^post0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post1, i2^0'=i2^post1, r^0'=r^post1, (i^0 <= 0 /\ -i^0+i2^post1 == 0 /\ r^0-r^post1 == 0 /\ i^0-i^post1 == 0), cost: 1
  16: l1 -> l10 : i^0'=i^post16, i2^0'=i2^post16, r^0'=r^post16, (-i2^post16+i2^0 == 0 /\ -r^post16+r^0 == 0 /\ -i^post16+i^0 == 0), cost: 1
  23: l2 -> l16 : i^0'=i^post23, i2^0'=i2^post23, r^0'=r^post23, (-r^post23+r^0 == 0 /\ i^0-i^post23 == 0 /\ -i2^post23+i2^0 == 0), cost: 1
  24: l2 -> l12 : i^0'=i^post24, i2^0'=i2^post24, r^0'=r^post24, (i2^0-i2^post24 == 0 /\ i^0-i^post24 == 0 /\ -r^post24+r^0 == 0), cost: 1
  25: l2 -> l16 : i^0'=i^post25, i2^0'=i2^post25, r^0'=r^post25, (i2^0-i2^post25 == 0 /\ i^0-i^post25 == 0 /\ -r^post25+r^0 == 0), cost: 1
   2: l3 -> l1 : i^0'=i^post2, i2^0'=i2^post2, r^0'=r^post2, (r^0-r^post2 == 0 /\ -1-i^0+i^post2 == 0 /\ -i2^post2+i2^0 == 0), cost: 1
   3: l4 -> l5 : i^0'=i^post3, i2^0'=i2^post3, r^0'=r^post3, (-i2^post3+i2^0 == 0 /\ -i^post3+i^0 == 0 /\ -r^post3+r^0 == 0), cost: 1
   4: l5 -> l3 : i^0'=i^post4, i2^0'=i2^post4, r^0'=r^post4, (-i2^post4+i2^0 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
   5: l6 -> l0 : i^0'=i^post5, i2^0'=i2^post5, r^0'=r^post5, (-i2^post5+i2^0 == 0 /\ -r^post5+r^0 == 0 /\ -i^post5+i^0 == 0), cost: 1
   6: l7 -> l4 : i^0'=i^post6, i2^0'=i2^post6, r^0'=r^post6, (-i2^post6+i2^0 == 0 /\ i^0-i^post6 == 0 /\ -r^post6+r^0 == 0), cost: 1
   7: l7 -> l4 : i^0'=i^post7, i2^0'=i2^post7, r^0'=r^post7, (-r^post7+r^0 == 0 /\ -i2^post7+i2^0 == 0 /\ i^0-i^post7 == 0), cost: 1
   8: l7 -> l5 : i^0'=i^post8, i2^0'=i2^post8, r^0'=r^post8, (i2^0-i2^post8 == 0 /\ -r^post8+r^0 == 0 /\ i^0-i^post8 == 0), cost: 1
   9: l8 -> l7 : i^0'=i^post9, i2^0'=i2^post9, r^0'=r^post9, (0 == 0 /\ i^0-i^post9 == 0 /\ i2^0-i2^post9 == 0), cost: 1
  10: l9 -> l8 : i^0'=i^post10, i2^0'=i2^post10, r^0'=r^post10, (i2^0-i2^post10 == 0 /\ i^0-i^post10 == 0 /\ -r^post10+r^0 == 0), cost: 1
  11: l9 -> l3 : i^0'=i^post11, i2^0'=i2^post11, r^0'=r^post11, (i^0-i^post11 == 0 /\ i2^0-i2^post11 == 0 /\ -r^post11+r^0 == 0), cost: 1
  12: l9 -> l8 : i^0'=i^post12, i2^0'=i2^post12, r^0'=r^post12, (i2^0-i2^post12 == 0 /\ -r^post12+r^0 == 0 /\ i^0-i^post12 == 0), cost: 1
  14: l10 -> l9 : i^0'=i^post14, i2^0'=i2^post14, r^0'=r^post14, (i^0 <= 0 /\ r^0-r^post14 == 0 /\ i^0-i^post14 == 0 /\ i2^0-i2^post14 == 0), cost: 1
  15: l12 -> l6 : i^0'=i^post15, i2^0'=i2^post15, r^0'=r^post15, (-1-i^0+i^post15 == 0 /\ r^0-r^post15 == 0 /\ i2^0-i2^post15 == 0), cost: 1
  17: l13 -> l14 : i^0'=i^post17, i2^0'=i2^post17, r^0'=r^post17, (-i2^post17+i2^0 == 0 /\ -i^post17+i^0 == 0 /\ -r^post17+r^0 == 0), cost: 1
  18: l14 -> l12 : i^0'=i^post18, i2^0'=i2^post18, r^0'=r^post18, (-r^post18+r^0 == 0 /\ -i2^post18+i2^0 == 0 /\ i^0-i^post18 == 0), cost: 1
  19: l15 -> l13 : i^0'=i^post19, i2^0'=i2^post19, r^0'=r^post19, (-i2^post19+i2^0 == 0 /\ -r^post19+r^0 == 0 /\ i^0-i^post19 == 0), cost: 1
  20: l15 -> l13 : i^0'=i^post20, i2^0'=i2^post20, r^0'=r^post20, (-i2^post20+i2^0 == 0 /\ i^0-i^post20 == 0 /\ -r^post20+r^0 == 0), cost: 1
  21: l15 -> l14 : i^0'=i^post21, i2^0'=i2^post21, r^0'=r^post21, (-i2^post21+i2^0 == 0 /\ i^0-i^post21 == 0 /\ -r^post21+r^0 == 0), cost: 1
  22: l16 -> l15 : i^0'=i^post22, i2^0'=i2^post22, r^0'=r^post22, (-i2^post22+i2^0 == 0 /\ i^0-i^post22 == 0 /\ -r^post22+r^0 == 0), cost: 1
  26: l17 -> l6 : i^0'=i^post26, i2^0'=i2^post26, r^0'=r^post26, (r^0-r^post26 == 0 /\ i^10 == 0 /\ -i2^post26+i2^0 == 0 /\ i^post26 == 0), cost: 1
  27: l18 -> l17 : i^0'=i^post27, i2^0'=i2^post27, r^0'=r^post27, (r^0-r^post27 == 0 /\ i^0-i^post27 == 0 /\ -i2^post27+i2^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : i^0'=i^post0, i2^0'=i2^post0, r^0'=r^post0, (r^0-r^post0 == 0 /\ i^post0 == 0 /\ 1-i^0 <= 0 /\ i2^0-i2^post0 == 0), cost: 1
New rule:
l0 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : i^0'=i^post1, i2^0'=i2^post1, r^0'=r^post1, (i^0 <= 0 /\ -i^0+i2^post1 == 0 /\ r^0-r^post1 == 0 /\ i^0-i^post1 == 0), cost: 1
New rule:
l0 -> l2 : i2^0'=i^0, i^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : i^0'=i^post2, i2^0'=i2^post2, r^0'=r^post2, (r^0-r^post2 == 0 /\ -1-i^0+i^post2 == 0 /\ -i2^post2+i2^0 == 0), cost: 1
New rule:
l3 -> l1 : i^0'=1+i^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : i^0'=i^post3, i2^0'=i2^post3, r^0'=r^post3, (-i2^post3+i2^0 == 0 /\ -i^post3+i^0 == 0 /\ -r^post3+r^0 == 0), cost: 1
New rule:
l4 -> l5 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l3 : i^0'=i^post4, i2^0'=i2^post4, r^0'=r^post4, (-i2^post4+i2^0 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
New rule:
l5 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l0 : i^0'=i^post5, i2^0'=i2^post5, r^0'=r^post5, (-i2^post5+i2^0 == 0 /\ -r^post5+r^0 == 0 /\ -i^post5+i^0 == 0), cost: 1
New rule:
l6 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l4 : i^0'=i^post6, i2^0'=i2^post6, r^0'=r^post6, (-i2^post6+i2^0 == 0 /\ i^0-i^post6 == 0 /\ -r^post6+r^0 == 0), cost: 1
New rule:
l7 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l4 : i^0'=i^post7, i2^0'=i2^post7, r^0'=r^post7, (-r^post7+r^0 == 0 /\ -i2^post7+i2^0 == 0 /\ i^0-i^post7 == 0), cost: 1
New rule:
l7 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l5 : i^0'=i^post8, i2^0'=i2^post8, r^0'=r^post8, (i2^0-i2^post8 == 0 /\ -r^post8+r^0 == 0 /\ i^0-i^post8 == 0), cost: 1
New rule:
l7 -> l5 : TRUE, cost: 1

Applied preprocessing
Original rule:
l8 -> l7 : i^0'=i^post9, i2^0'=i2^post9, r^0'=r^post9, (0 == 0 /\ i^0-i^post9 == 0 /\ i2^0-i2^post9 == 0), cost: 1
New rule:
l8 -> l7 : r^0'=r^post9, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l9 -> l8 : i^0'=i^post10, i2^0'=i2^post10, r^0'=r^post10, (i2^0-i2^post10 == 0 /\ i^0-i^post10 == 0 /\ -r^post10+r^0 == 0), cost: 1
New rule:
l9 -> l8 : TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l3 : i^0'=i^post11, i2^0'=i2^post11, r^0'=r^post11, (i^0-i^post11 == 0 /\ i2^0-i2^post11 == 0 /\ -r^post11+r^0 == 0), cost: 1
New rule:
l9 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l8 : i^0'=i^post12, i2^0'=i2^post12, r^0'=r^post12, (i2^0-i2^post12 == 0 /\ -r^post12+r^0 == 0 /\ i^0-i^post12 == 0), cost: 1
New rule:
l9 -> l8 : TRUE, cost: 1

Applied preprocessing
Original rule:
l10 -> l9 : i^0'=i^post14, i2^0'=i2^post14, r^0'=r^post14, (i^0 <= 0 /\ r^0-r^post14 == 0 /\ i^0-i^post14 == 0 /\ i2^0-i2^post14 == 0), cost: 1
New rule:
l10 -> l9 : i^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l12 -> l6 : i^0'=i^post15, i2^0'=i2^post15, r^0'=r^post15, (-1-i^0+i^post15 == 0 /\ r^0-r^post15 == 0 /\ i2^0-i2^post15 == 0), cost: 1
New rule:
l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l10 : i^0'=i^post16, i2^0'=i2^post16, r^0'=r^post16, (-i2^post16+i2^0 == 0 /\ -r^post16+r^0 == 0 /\ -i^post16+i^0 == 0), cost: 1
New rule:
l1 -> l10 : TRUE, cost: 1

Applied preprocessing
Original rule:
l13 -> l14 : i^0'=i^post17, i2^0'=i2^post17, r^0'=r^post17, (-i2^post17+i2^0 == 0 /\ -i^post17+i^0 == 0 /\ -r^post17+r^0 == 0), cost: 1
New rule:
l13 -> l14 : TRUE, cost: 1

Applied preprocessing
Original rule:
l14 -> l12 : i^0'=i^post18, i2^0'=i2^post18, r^0'=r^post18, (-r^post18+r^0 == 0 /\ -i2^post18+i2^0 == 0 /\ i^0-i^post18 == 0), cost: 1
New rule:
l14 -> l12 : TRUE, cost: 1

Applied preprocessing
Original rule:
l15 -> l13 : i^0'=i^post19, i2^0'=i2^post19, r^0'=r^post19, (-i2^post19+i2^0 == 0 /\ -r^post19+r^0 == 0 /\ i^0-i^post19 == 0), cost: 1
New rule:
l15 -> l13 : TRUE, cost: 1

Applied preprocessing
Original rule:
l15 -> l13 : i^0'=i^post20, i2^0'=i2^post20, r^0'=r^post20, (-i2^post20+i2^0 == 0 /\ i^0-i^post20 == 0 /\ -r^post20+r^0 == 0), cost: 1
New rule:
l15 -> l13 : TRUE, cost: 1

Applied preprocessing
Original rule:
l15 -> l14 : i^0'=i^post21, i2^0'=i2^post21, r^0'=r^post21, (-i2^post21+i2^0 == 0 /\ i^0-i^post21 == 0 /\ -r^post21+r^0 == 0), cost: 1
New rule:
l15 -> l14 : TRUE, cost: 1

Applied preprocessing
Original rule:
l16 -> l15 : i^0'=i^post22, i2^0'=i2^post22, r^0'=r^post22, (-i2^post22+i2^0 == 0 /\ i^0-i^post22 == 0 /\ -r^post22+r^0 == 0), cost: 1
New rule:
l16 -> l15 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l16 : i^0'=i^post23, i2^0'=i2^post23, r^0'=r^post23, (-r^post23+r^0 == 0 /\ i^0-i^post23 == 0 /\ -i2^post23+i2^0 == 0), cost: 1
New rule:
l2 -> l16 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l12 : i^0'=i^post24, i2^0'=i2^post24, r^0'=r^post24, (i2^0-i2^post24 == 0 /\ i^0-i^post24 == 0 /\ -r^post24+r^0 == 0), cost: 1
New rule:
l2 -> l12 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l16 : i^0'=i^post25, i2^0'=i2^post25, r^0'=r^post25, (i2^0-i2^post25 == 0 /\ i^0-i^post25 == 0 /\ -r^post25+r^0 == 0), cost: 1
New rule:
l2 -> l16 : TRUE, cost: 1

Applied preprocessing
Original rule:
l17 -> l6 : i^0'=i^post26, i2^0'=i2^post26, r^0'=r^post26, (r^0-r^post26 == 0 /\ i^10 == 0 /\ -i2^post26+i2^0 == 0 /\ i^post26 == 0), cost: 1
New rule:
l17 -> l6 : i^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l18 -> l17 : i^0'=i^post27, i2^0'=i2^post27, r^0'=r^post27, (r^0-r^post27 == 0 /\ i^0-i^post27 == 0 /\ -i2^post27+i2^0 == 0), cost: 1
New rule:
l18 -> l17 : TRUE, cost: 1

Simplified rules
Start location: l18
  28: l0 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 1
  29: l0 -> l2 : i2^0'=i^0, i^0 <= 0, cost: 1
  41: l1 -> l10 : TRUE, cost: 1
  47: l2 -> l16 : TRUE, cost: 1
  48: l2 -> l12 : TRUE, cost: 1
  30: l3 -> l1 : i^0'=1+i^0, TRUE, cost: 1
  31: l4 -> l5 : TRUE, cost: 1
  32: l5 -> l3 : TRUE, cost: 1
  33: l6 -> l0 : TRUE, cost: 1
  34: l7 -> l4 : TRUE, cost: 1
  35: l7 -> l5 : TRUE, cost: 1
  36: l8 -> l7 : r^0'=r^post9, 0 == 0, cost: 1
  37: l9 -> l8 : TRUE, cost: 1
  38: l9 -> l3 : TRUE, cost: 1
  39: l10 -> l9 : i^0 <= 0, cost: 1
  40: l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
  42: l13 -> l14 : TRUE, cost: 1
  43: l14 -> l12 : TRUE, cost: 1
  44: l15 -> l13 : TRUE, cost: 1
  45: l15 -> l14 : TRUE, cost: 1
  46: l16 -> l15 : TRUE, cost: 1
  49: l17 -> l6 : i^0'=0, TRUE, cost: 1
  50: l18 -> l17 : TRUE, cost: 1


Eliminating location l17 by chaining:

Applied chaining
First rule:
l18 -> l17 : TRUE, cost: 1
Second rule:
l17 -> l6 : i^0'=0, TRUE, cost: 1
New rule:
l18 -> l6 : i^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 49 50

Eliminating location l10 by chaining:

Applied chaining
First rule:
l1 -> l10 : TRUE, cost: 1
Second rule:
l10 -> l9 : i^0 <= 0, cost: 1
New rule:
l1 -> l9 : i^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 39 41

Eliminating location l8 by chaining:

Applied chaining
First rule:
l9 -> l8 : TRUE, cost: 1
Second rule:
l8 -> l7 : r^0'=r^post9, 0 == 0, cost: 1
New rule:
l9 -> l7 : r^0'=r^post9, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 36 37

Eliminating location l4 by chaining:

Applied chaining
First rule:
l7 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l5 : TRUE, cost: 1
New rule:
l7 -> l5 : TRUE, cost: 2

Applied deletion
Removed the following rules: 31 34

Eliminating location l16 by chaining:

Applied chaining
First rule:
l2 -> l16 : TRUE, cost: 1
Second rule:
l16 -> l15 : TRUE, cost: 1
New rule:
l2 -> l15 : TRUE, cost: 2

Applied deletion
Removed the following rules: 46 47

Eliminating location l13 by chaining:

Applied chaining
First rule:
l15 -> l13 : TRUE, cost: 1
Second rule:
l13 -> l14 : TRUE, cost: 1
New rule:
l15 -> l14 : TRUE, cost: 2

Applied deletion
Removed the following rules: 42 44

Eliminated locations on linear paths
Start location: l18
  28: l0 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 1
  29: l0 -> l2 : i2^0'=i^0, i^0 <= 0, cost: 1
  52: l1 -> l9 : i^0 <= 0, cost: 2
  48: l2 -> l12 : TRUE, cost: 1
  55: l2 -> l15 : TRUE, cost: 2
  30: l3 -> l1 : i^0'=1+i^0, TRUE, cost: 1
  32: l5 -> l3 : TRUE, cost: 1
  33: l6 -> l0 : TRUE, cost: 1
  35: l7 -> l5 : TRUE, cost: 1
  54: l7 -> l5 : TRUE, cost: 2
  38: l9 -> l3 : TRUE, cost: 1
  53: l9 -> l7 : r^0'=r^post9, 0 == 0, cost: 2
  40: l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
  43: l14 -> l12 : TRUE, cost: 1
  45: l15 -> l14 : TRUE, cost: 1
  56: l15 -> l14 : TRUE, cost: 2
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l6 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 1
New rule:
l6 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 2

Applied chaining
First rule:
l6 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : i2^0'=i^0, i^0 <= 0, cost: 1
New rule:
l6 -> l2 : i2^0'=i^0, i^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 28 29 33

Eliminating location l9 by chaining:

Applied chaining
First rule:
l1 -> l9 : i^0 <= 0, cost: 2
Second rule:
l9 -> l3 : TRUE, cost: 1
New rule:
l1 -> l3 : i^0 <= 0, cost: 3

Applied chaining
First rule:
l1 -> l9 : i^0 <= 0, cost: 2
Second rule:
l9 -> l7 : r^0'=r^post9, 0 == 0, cost: 2
New rule:
l1 -> l7 : r^0'=r^post9, (0 == 0 /\ i^0 <= 0), cost: 4

Applied simplification
Original rule:
l1 -> l7 : r^0'=r^post9, (0 == 0 /\ i^0 <= 0), cost: 4
New rule:
l1 -> l7 : r^0'=r^post9, i^0 <= 0, cost: 4

Applied deletion
Removed the following rules: 38 52 53

Eliminating location l5 by chaining:

Applied chaining
First rule:
l7 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l3 : TRUE, cost: 1
New rule:
l7 -> l3 : TRUE, cost: 2

Applied chaining
First rule:
l7 -> l5 : TRUE, cost: 2
Second rule:
l5 -> l3 : TRUE, cost: 1
New rule:
l7 -> l3 : TRUE, cost: 3

Applied deletion
Removed the following rules: 32 35 54

Eliminating location l15 by chaining:

Applied chaining
First rule:
l2 -> l15 : TRUE, cost: 2
Second rule:
l15 -> l14 : TRUE, cost: 1
New rule:
l2 -> l14 : TRUE, cost: 3

Applied chaining
First rule:
l2 -> l15 : TRUE, cost: 2
Second rule:
l15 -> l14 : TRUE, cost: 2
New rule:
l2 -> l14 : TRUE, cost: 4

Applied deletion
Removed the following rules: 45 55 56

Eliminated locations on tree-shaped paths
Start location: l18
  59: l1 -> l3 : i^0 <= 0, cost: 3
  60: l1 -> l7 : r^0'=r^post9, i^0 <= 0, cost: 4
  48: l2 -> l12 : TRUE, cost: 1
  63: l2 -> l14 : TRUE, cost: 3
  64: l2 -> l14 : TRUE, cost: 4
  30: l3 -> l1 : i^0'=1+i^0, TRUE, cost: 1
  57: l6 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 2
  58: l6 -> l2 : i2^0'=i^0, i^0 <= 0, cost: 2
  61: l7 -> l3 : TRUE, cost: 2
  62: l7 -> l3 : TRUE, cost: 3
  40: l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
  43: l14 -> l12 : TRUE, cost: 1
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2


Eliminating location l2 by chaining:

Applied chaining
First rule:
l6 -> l2 : i2^0'=i^0, i^0 <= 0, cost: 2
Second rule:
l2 -> l12 : TRUE, cost: 1
New rule:
l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 3

Applied chaining
First rule:
l6 -> l2 : i2^0'=i^0, i^0 <= 0, cost: 2
Second rule:
l2 -> l14 : TRUE, cost: 3
New rule:
l6 -> l14 : i2^0'=i^0, i^0 <= 0, cost: 5

Applied chaining
First rule:
l6 -> l2 : i2^0'=i^0, i^0 <= 0, cost: 2
Second rule:
l2 -> l14 : TRUE, cost: 4
New rule:
l6 -> l14 : i2^0'=i^0, i^0 <= 0, cost: 6

Applied deletion
Removed the following rules: 48 58 63 64

Eliminating location l7 by chaining:

Applied chaining
First rule:
l1 -> l7 : r^0'=r^post9, i^0 <= 0, cost: 4
Second rule:
l7 -> l3 : TRUE, cost: 2
New rule:
l1 -> l3 : r^0'=r^post9, i^0 <= 0, cost: 6

Applied chaining
First rule:
l1 -> l7 : r^0'=r^post9, i^0 <= 0, cost: 4
Second rule:
l7 -> l3 : TRUE, cost: 3
New rule:
l1 -> l3 : r^0'=r^post9, i^0 <= 0, cost: 7

Applied deletion
Removed the following rules: 60 61 62

Eliminated locations on tree-shaped paths
Start location: l18
  59: l1 -> l3 : i^0 <= 0, cost: 3
  68: l1 -> l3 : r^0'=r^post9, i^0 <= 0, cost: 6
  69: l1 -> l3 : r^0'=r^post9, i^0 <= 0, cost: 7
  30: l3 -> l1 : i^0'=1+i^0, TRUE, cost: 1
  57: l6 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 2
  65: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 3
  66: l6 -> l14 : i2^0'=i^0, i^0 <= 0, cost: 5
  67: l6 -> l14 : i2^0'=i^0, i^0 <= 0, cost: 6
  40: l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
  43: l14 -> l12 : TRUE, cost: 1
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2


Eliminating location l14 by chaining:

Applied chaining
First rule:
l6 -> l14 : i2^0'=i^0, i^0 <= 0, cost: 5
Second rule:
l14 -> l12 : TRUE, cost: 1
New rule:
l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 6

Applied chaining
First rule:
l6 -> l14 : i2^0'=i^0, i^0 <= 0, cost: 6
Second rule:
l14 -> l12 : TRUE, cost: 1
New rule:
l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 7

Applied deletion
Removed the following rules: 43 66 67

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : i^0 <= 0, cost: 3
Second rule:
l3 -> l1 : i^0'=1+i^0, TRUE, cost: 1
New rule:
l1 -> l1 : i^0'=1+i^0, i^0 <= 0, cost: 4

Applied chaining
First rule:
l1 -> l3 : r^0'=r^post9, i^0 <= 0, cost: 6
Second rule:
l3 -> l1 : i^0'=1+i^0, TRUE, cost: 1
New rule:
l1 -> l1 : i^0'=1+i^0, r^0'=r^post9, i^0 <= 0, cost: 7

Applied chaining
First rule:
l1 -> l3 : r^0'=r^post9, i^0 <= 0, cost: 7
Second rule:
l3 -> l1 : i^0'=1+i^0, TRUE, cost: 1
New rule:
l1 -> l1 : i^0'=1+i^0, r^0'=r^post9, i^0 <= 0, cost: 8

Applied deletion
Removed the following rules: 30 59 68 69

Eliminated locations on tree-shaped paths
Start location: l18
  72: l1 -> l1 : i^0'=1+i^0, i^0 <= 0, cost: 4
  73: l1 -> l1 : i^0'=1+i^0, r^0'=r^post9, i^0 <= 0, cost: 7
  74: l1 -> l1 : i^0'=1+i^0, r^0'=r^post9, i^0 <= 0, cost: 8
  57: l6 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 2
  65: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 3
  70: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 6
  71: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 7
  40: l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : i^0'=1+i^0, i^0 <= 0, cost: 4
New rule:
l1 -> l1 : i^0'=n+i^0, (n >= 0 /\ 1-n-i^0 >= 0), cost: 4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ILHhGG.txt

Applied instantiation
Original rule:
l1 -> l1 : i^0'=n+i^0, (n >= 0 /\ 1-n-i^0 >= 0), cost: 4*n
New rule:
l1 -> l1 : i^0'=1, (0 >= 0 /\ 1-i^0 >= 0), cost: 4-4*i^0

Applied acceleration
Original rule:
l1 -> l1 : i^0'=1+i^0, r^0'=r^post9, i^0 <= 0, cost: 7
New rule:
l1 -> l1 : i^0'=i^0+n0, r^0'=r^post9, (-1+n0 >= 0 /\ 1-i^0-n0 >= 0), cost: 7*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PmOeOh.txt

Applied instantiation
Original rule:
l1 -> l1 : i^0'=i^0+n0, r^0'=r^post9, (-1+n0 >= 0 /\ 1-i^0-n0 >= 0), cost: 7*n0
New rule:
l1 -> l1 : i^0'=1, r^0'=r^post9, (0 >= 0 /\ -i^0 >= 0), cost: 7-7*i^0

Applied acceleration
Original rule:
l1 -> l1 : i^0'=1+i^0, r^0'=r^post9, i^0 <= 0, cost: 8
New rule:
l1 -> l1 : i^0'=n1+i^0, r^0'=r^post9, (1-n1-i^0 >= 0 /\ -1+n1 >= 0), cost: 8*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_dKiIne.txt

Applied instantiation
Original rule:
l1 -> l1 : i^0'=n1+i^0, r^0'=r^post9, (1-n1-i^0 >= 0 /\ -1+n1 >= 0), cost: 8*n1
New rule:
l1 -> l1 : i^0'=1, r^0'=r^post9, (0 >= 0 /\ -i^0 >= 0), cost: 8-8*i^0

Applied simplification
Original rule:
l1 -> l1 : i^0'=1, (0 >= 0 /\ 1-i^0 >= 0), cost: 4-4*i^0
New rule:
l1 -> l1 : i^0'=1, -1+i^0 <= 0, cost: 4-4*i^0

Applied simplification
Original rule:
l1 -> l1 : i^0'=1, r^0'=r^post9, (0 >= 0 /\ -i^0 >= 0), cost: 7-7*i^0
New rule:
l1 -> l1 : i^0'=1, r^0'=r^post9, i^0 <= 0, cost: 7-7*i^0

Applied simplification
Original rule:
l1 -> l1 : i^0'=1, r^0'=r^post9, (0 >= 0 /\ -i^0 >= 0), cost: 8-8*i^0
New rule:
l1 -> l1 : i^0'=1, r^0'=r^post9, i^0 <= 0, cost: 8-8*i^0

Applied deletion
Removed the following rules: 72 73 74

Accelerated simple loops
Start location: l18
  78: l1 -> l1 : i^0'=1, -1+i^0 <= 0, cost: 4-4*i^0
  79: l1 -> l1 : i^0'=1, r^0'=r^post9, i^0 <= 0, cost: 7-7*i^0
  80: l1 -> l1 : i^0'=1, r^0'=r^post9, i^0 <= 0, cost: 8-8*i^0
  57: l6 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 2
  65: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 3
  70: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 6
  71: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 7
  40: l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l6 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 2
Second rule:
l1 -> l1 : i^0'=1, -1+i^0 <= 0, cost: 4-4*i^0
New rule:
l6 -> l1 : i^0'=1, -1+i^0 >= 0, cost: 6

Applied chaining
First rule:
l6 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 2
Second rule:
l1 -> l1 : i^0'=1, r^0'=r^post9, i^0 <= 0, cost: 7-7*i^0
New rule:
l6 -> l1 : i^0'=1, r^0'=r^post9, -1+i^0 >= 0, cost: 9

Applied chaining
First rule:
l6 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 2
Second rule:
l1 -> l1 : i^0'=1, r^0'=r^post9, i^0 <= 0, cost: 8-8*i^0
New rule:
l6 -> l1 : i^0'=1, r^0'=r^post9, -1+i^0 >= 0, cost: 10

Applied deletion
Removed the following rules: 78 79 80

Chained accelerated rules with incoming rules
Start location: l18
  57: l6 -> l1 : i^0'=0, -1+i^0 >= 0, cost: 2
  65: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 3
  70: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 6
  71: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 7
  81: l6 -> l1 : i^0'=1, -1+i^0 >= 0, cost: 6
  82: l6 -> l1 : i^0'=1, r^0'=r^post9, -1+i^0 >= 0, cost: 9
  83: l6 -> l1 : i^0'=1, r^0'=r^post9, -1+i^0 >= 0, cost: 10
  40: l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l18
  65: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 3
  70: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 6
  71: l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 7
  40: l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2


Eliminating location l12 by chaining:

Applied chaining
First rule:
l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 3
Second rule:
l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
New rule:
l6 -> l6 : i^0'=1+i^0, i2^0'=i^0, i^0 <= 0, cost: 4

Applied chaining
First rule:
l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 6
Second rule:
l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
New rule:
l6 -> l6 : i^0'=1+i^0, i2^0'=i^0, i^0 <= 0, cost: 7

Applied chaining
First rule:
l6 -> l12 : i2^0'=i^0, i^0 <= 0, cost: 7
Second rule:
l12 -> l6 : i^0'=1+i^0, TRUE, cost: 1
New rule:
l6 -> l6 : i^0'=1+i^0, i2^0'=i^0, i^0 <= 0, cost: 8

Applied deletion
Removed the following rules: 40 65 70 71

Eliminated locations on tree-shaped paths
Start location: l18
  84: l6 -> l6 : i^0'=1+i^0, i2^0'=i^0, i^0 <= 0, cost: 4
  85: l6 -> l6 : i^0'=1+i^0, i2^0'=i^0, i^0 <= 0, cost: 7
  86: l6 -> l6 : i^0'=1+i^0, i2^0'=i^0, i^0 <= 0, cost: 8
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l6 -> l6 : i^0'=1+i^0, i2^0'=i^0, i^0 <= 0, cost: 8
New rule:
l6 -> l6 : i^0'=i^0+n14, i2^0'=-1+i^0+n14, (-1+n14 >= 0 /\ 1-i^0-n14 >= 0), cost: 8*n14
Sub-proof via acceration calculus written to file:///tmp/tmpnam_CaPipa.txt

Applied instantiation
Original rule:
l6 -> l6 : i^0'=i^0+n14, i2^0'=-1+i^0+n14, (-1+n14 >= 0 /\ 1-i^0-n14 >= 0), cost: 8*n14
New rule:
l6 -> l6 : i^0'=1, i2^0'=0, (0 >= 0 /\ -i^0 >= 0), cost: 8-8*i^0

Applied simplification
Original rule:
l6 -> l6 : i^0'=1, i2^0'=0, (0 >= 0 /\ -i^0 >= 0), cost: 8-8*i^0
New rule:
l6 -> l6 : i^0'=1, i2^0'=0, i^0 <= 0, cost: 8-8*i^0

Applied deletion
Removed the following rules: 86

Accelerated simple loops
Start location: l18
  88: l6 -> l6 : i^0'=1, i2^0'=0, i^0 <= 0, cost: 8-8*i^0
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l18 -> l6 : i^0'=0, TRUE, cost: 2
Second rule:
l6 -> l6 : i^0'=1, i2^0'=0, i^0 <= 0, cost: 8-8*i^0
New rule:
l18 -> l6 : i^0'=1, i2^0'=0, 0 <= 0, cost: 10

Applied deletion
Removed the following rules: 88

Chained accelerated rules with incoming rules
Start location: l18
  51: l18 -> l6 : i^0'=0, TRUE, cost: 2
  89: l18 -> l6 : i^0'=1, i2^0'=0, 0 <= 0, cost: 10


Removed unreachable locations and irrelevant leafs
Start location: l18
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

