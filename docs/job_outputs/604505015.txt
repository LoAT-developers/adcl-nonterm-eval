WORST_CASE(Omega(0),?)

Initial ITS
Start location: l5
   0: l0 -> l1 : x^0'=x^post0, __const_5^0'=__const_5^post0, (x^0 <= 0 /\ -__const_5^post0+__const_5^0 == 0 /\ -1+x^post0 == 0), cost: 1
   1: l0 -> l1 : x^0'=x^post1, __const_5^0'=__const_5^post1, (__const_5^0-__const_5^post1 == 0 /\ 1-x^0 <= 0 /\ -1-x^0+x^post1 == 0), cost: 1
   4: l1 -> l2 : x^0'=x^post4, __const_5^0'=__const_5^post4, (x^0-x^post4 == 0 /\ __const_5^0-__const_5^post4 == 0), cost: 1
   2: l2 -> l3 : x^0'=x^post2, __const_5^0'=__const_5^post2, (4-x^0 <= 0 /\ __const_5^0-__const_5^post2 == 0 /\ x^0-x^post2 == 0), cost: 1
   3: l2 -> l0 : x^0'=x^post3, __const_5^0'=__const_5^post3, (-3+x^0 <= 0 /\ x^0-x^post3 == 0 /\ -__const_5^post3+__const_5^0 == 0), cost: 1
   5: l4 -> l1 : x^0'=x^post5, __const_5^0'=__const_5^post5, (0 == 0 /\ -__const_5^post5+__const_5^0 == 0 /\ -__const_5^0+x^10 == 0), cost: 1
   6: l5 -> l4 : x^0'=x^post6, __const_5^0'=__const_5^post6, (-__const_5^post6+__const_5^0 == 0 /\ x^0-x^post6 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l5
   0: l0 -> l1 : x^0'=x^post0, __const_5^0'=__const_5^post0, (x^0 <= 0 /\ -__const_5^post0+__const_5^0 == 0 /\ -1+x^post0 == 0), cost: 1
   1: l0 -> l1 : x^0'=x^post1, __const_5^0'=__const_5^post1, (__const_5^0-__const_5^post1 == 0 /\ 1-x^0 <= 0 /\ -1-x^0+x^post1 == 0), cost: 1
   4: l1 -> l2 : x^0'=x^post4, __const_5^0'=__const_5^post4, (x^0-x^post4 == 0 /\ __const_5^0-__const_5^post4 == 0), cost: 1
   3: l2 -> l0 : x^0'=x^post3, __const_5^0'=__const_5^post3, (-3+x^0 <= 0 /\ x^0-x^post3 == 0 /\ -__const_5^post3+__const_5^0 == 0), cost: 1
   5: l4 -> l1 : x^0'=x^post5, __const_5^0'=__const_5^post5, (0 == 0 /\ -__const_5^post5+__const_5^0 == 0 /\ -__const_5^0+x^10 == 0), cost: 1
   6: l5 -> l4 : x^0'=x^post6, __const_5^0'=__const_5^post6, (-__const_5^post6+__const_5^0 == 0 /\ x^0-x^post6 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post0, __const_5^0'=__const_5^post0, (x^0 <= 0 /\ -__const_5^post0+__const_5^0 == 0 /\ -1+x^post0 == 0), cost: 1
New rule:
l0 -> l1 : x^0'=1, x^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post1, __const_5^0'=__const_5^post1, (__const_5^0-__const_5^post1 == 0 /\ 1-x^0 <= 0 /\ -1-x^0+x^post1 == 0), cost: 1
New rule:
l0 -> l1 : x^0'=1+x^0, -1+x^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : x^0'=x^post3, __const_5^0'=__const_5^post3, (-3+x^0 <= 0 /\ x^0-x^post3 == 0 /\ -__const_5^post3+__const_5^0 == 0), cost: 1
New rule:
l2 -> l0 : -3+x^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l2 : x^0'=x^post4, __const_5^0'=__const_5^post4, (x^0-x^post4 == 0 /\ __const_5^0-__const_5^post4 == 0), cost: 1
New rule:
l1 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l1 : x^0'=x^post5, __const_5^0'=__const_5^post5, (0 == 0 /\ -__const_5^post5+__const_5^0 == 0 /\ -__const_5^0+x^10 == 0), cost: 1
New rule:
l4 -> l1 : x^0'=x^post5, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : x^0'=x^post6, __const_5^0'=__const_5^post6, (-__const_5^post6+__const_5^0 == 0 /\ x^0-x^post6 == 0), cost: 1
New rule:
l5 -> l4 : TRUE, cost: 1

Simplified rules
Start location: l5
   7: l0 -> l1 : x^0'=1, x^0 <= 0, cost: 1
   8: l0 -> l1 : x^0'=1+x^0, -1+x^0 >= 0, cost: 1
  10: l1 -> l2 : TRUE, cost: 1
   9: l2 -> l0 : -3+x^0 <= 0, cost: 1
  11: l4 -> l1 : x^0'=x^post5, 0 == 0, cost: 1
  12: l5 -> l4 : TRUE, cost: 1


Eliminating location l4 by chaining:

Applied chaining
First rule:
l5 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l1 : x^0'=x^post5, 0 == 0, cost: 1
New rule:
l5 -> l1 : x^0'=x^post5, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 11 12

Eliminating location l2 by chaining:

Applied chaining
First rule:
l1 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : -3+x^0 <= 0, cost: 1
New rule:
l1 -> l0 : -3+x^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 9 10

Eliminated locations on linear paths
Start location: l5
   7: l0 -> l1 : x^0'=1, x^0 <= 0, cost: 1
   8: l0 -> l1 : x^0'=1+x^0, -1+x^0 >= 0, cost: 1
  14: l1 -> l0 : -3+x^0 <= 0, cost: 2
  13: l5 -> l1 : x^0'=x^post5, 0 == 0, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l1 -> l0 : -3+x^0 <= 0, cost: 2
Second rule:
l0 -> l1 : x^0'=1, x^0 <= 0, cost: 1
New rule:
l1 -> l1 : x^0'=1, (x^0 <= 0 /\ -3+x^0 <= 0), cost: 3

Applied simplification
Original rule:
l1 -> l1 : x^0'=1, (x^0 <= 0 /\ -3+x^0 <= 0), cost: 3
New rule:
l1 -> l1 : x^0'=1, x^0 <= 0, cost: 3

Applied chaining
First rule:
l1 -> l0 : -3+x^0 <= 0, cost: 2
Second rule:
l0 -> l1 : x^0'=1+x^0, -1+x^0 >= 0, cost: 1
New rule:
l1 -> l1 : x^0'=1+x^0, (-3+x^0 <= 0 /\ -1+x^0 >= 0), cost: 3

Applied deletion
Removed the following rules: 7 8 14

Eliminated locations on tree-shaped paths
Start location: l5
  15: l1 -> l1 : x^0'=1, x^0 <= 0, cost: 3
  16: l1 -> l1 : x^0'=1+x^0, (-3+x^0 <= 0 /\ -1+x^0 >= 0), cost: 3
  13: l5 -> l1 : x^0'=x^post5, 0 == 0, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : x^0'=1+x^0, (-3+x^0 <= 0 /\ -1+x^0 >= 0), cost: 3
New rule:
l1 -> l1 : x^0'=n0+x^0, (n0 >= 0 /\ 4-n0-x^0 >= 0 /\ -1+x^0 >= 0), cost: 3*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cBfEPb.txt

Applied instantiation
Original rule:
l1 -> l1 : x^0'=n0+x^0, (n0 >= 0 /\ 4-n0-x^0 >= 0 /\ -1+x^0 >= 0), cost: 3*n0
New rule:
l1 -> l1 : x^0'=4, (0 >= 0 /\ 4-x^0 >= 0 /\ -1+x^0 >= 0), cost: 12-3*x^0

Applied simplification
Original rule:
l1 -> l1 : x^0'=4, (0 >= 0 /\ 4-x^0 >= 0 /\ -1+x^0 >= 0), cost: 12-3*x^0
New rule:
l1 -> l1 : x^0'=4, (-4+x^0 <= 0 /\ -1+x^0 >= 0), cost: 12-3*x^0

Applied deletion
Removed the following rules: 16

Accelerated simple loops
Start location: l5
  15: l1 -> l1 : x^0'=1, x^0 <= 0, cost: 3
  18: l1 -> l1 : x^0'=4, (-4+x^0 <= 0 /\ -1+x^0 >= 0), cost: 12-3*x^0
  13: l5 -> l1 : x^0'=x^post5, 0 == 0, cost: 2


Applied chaining
First rule:
l5 -> l1 : x^0'=x^post5, 0 == 0, cost: 2
Second rule:
l1 -> l1 : x^0'=1, x^0 <= 0, cost: 3
New rule:
l5 -> l1 : x^0'=1, 0 == 0, cost: 5

Applied chaining
First rule:
l5 -> l1 : x^0'=x^post5, 0 == 0, cost: 2
Second rule:
l1 -> l1 : x^0'=4, (-4+x^0 <= 0 /\ -1+x^0 >= 0), cost: 12-3*x^0
New rule:
l5 -> l1 : x^0'=4, (-4+x^post5 <= 0 /\ -1+x^post5 >= 0), cost: 14-3*x^post5

Applied deletion
Removed the following rules: 15 18

Chained accelerated rules with incoming rules
Start location: l5
  13: l5 -> l1 : x^0'=x^post5, 0 == 0, cost: 2
  19: l5 -> l1 : x^0'=1, 0 == 0, cost: 5
  20: l5 -> l1 : x^0'=4, (-4+x^post5 <= 0 /\ -1+x^post5 >= 0), cost: 14-3*x^post5


Removed unreachable locations and irrelevant leafs
Start location: l5
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

