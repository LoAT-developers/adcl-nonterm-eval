YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l7, true>
<l1, l2, (undef1 <= arg1) /\ (arg2 > ~(1)) /\ (arg1 > 0) /\ (undef1 > 0), par{arg1 -> undef1, arg2 -> (arg2 - 1), arg3 -> arg2, arg4 -> arg2}>
<l2, l2, (undef5 <= arg1) /\ (arg3 > 0) /\ (arg1 > 0) /\ (undef5 > 0), par{arg1 -> undef5, arg2 -> (arg2 - 1), arg3 -> arg2}>
<l2, l3, (arg3 < 1) /\ (arg4 > ~(1)) /\ (arg1 >= undef9) /\ (arg1 > 0) /\ (undef9 > 0), par{arg1 -> undef9, arg2 -> (arg4 - 1), arg3 -> arg4}>
<l3, l3, (undef13 <= arg1) /\ (arg3 > 0) /\ (arg1 > 0) /\ (undef13 > 0), par{arg1 -> undef13, arg2 -> (arg2 - 1), arg3 -> arg2}>
<l3, l4, (arg3 < 1) /\ (arg4 > ~(1)) /\ (arg1 > 0), par{arg1 -> (arg4 - 1), arg2 -> arg4, arg3 -> undef19, arg4 -> undef20}>
<l4, l5, (arg2 < 1), par{arg1 -> 2, arg2 -> undef22, arg3 -> undef23, arg4 -> undef24}>
<l4, l4, (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> undef27, arg4 -> undef28}>
<l5, l6, (arg1 > ~(1)) /\ (undef29 > ~(1)) /\ (arg1 < 3), par{arg1 -> undef29, arg2 -> undef30, arg3 -> undef31, arg4 -> undef32}>
<l5, l5, (arg1 > ~(1)) /\ (arg1 < 3), par{arg1 -> (arg1 - 1), arg2 -> undef34, arg3 -> undef35, arg4 -> undef36}>
<l6, l6, ((undef37 + 1) <= arg1) /\ (arg1 > 0) /\ (undef37 > ~(1)), par{arg1 -> undef37, arg2 -> undef38, arg3 -> undef39, arg4 -> undef40}>
<l7, l1, true, par{arg1 -> undef41, arg2 -> undef42, arg3 -> undef43, arg4 -> undef44}>

Fresh variables:
undef1, undef5, undef9, undef13, undef19, undef20, undef22, undef23, undef24, undef27, undef28, undef29, undef30, undef31, undef32, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, 

Undef variables:
undef1, undef5, undef9, undef13, undef19, undef20, undef22, undef23, undef24, undef27, undef28, undef29, undef30, undef31, undef32, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef1) /\ (arg2 = (undef42 - 1)) /\ (arg3 = undef42) /\ (arg4 = undef42) /\ (undef1 <= undef41) /\ (undef42 > ~(1)) /\ (undef41 > 0) /\ (undef1 > 0)>
<l2, l2, (undef5 <= arg1) /\ (arg3 > 0) /\ (arg1 > 0) /\ (undef5 > 0), par{arg1 -> undef5, arg2 -> (arg2 - 1), arg3 -> arg2}>
<l2, l3, (arg3 < 1) /\ (arg4 > ~(1)) /\ (arg1 >= undef9) /\ (arg1 > 0) /\ (undef9 > 0), par{arg1 -> undef9, arg2 -> (arg4 - 1), arg3 -> arg4}>
<l3, l3, (undef13 <= arg1) /\ (arg3 > 0) /\ (arg1 > 0) /\ (undef13 > 0), par{arg1 -> undef13, arg2 -> (arg2 - 1), arg3 -> arg2}>
<l3, l4, (arg3 < 1) /\ (arg4 > ~(1)) /\ (arg1 > 0), par{arg1 -> (arg4 - 1), arg2 -> arg4, arg3 -> undef19, arg4 -> undef20}>
<l4, l5, (arg2 < 1), par{arg1 -> 2, arg2 -> undef22, arg3 -> undef23, arg4 -> undef24}>
<l4, l4, (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> arg1, arg3 -> undef27, arg4 -> undef28}>
<l5, l6, (arg1 > ~(1)) /\ (undef29 > ~(1)) /\ (arg1 < 3), par{arg1 -> undef29, arg2 -> undef30, arg3 -> undef31, arg4 -> undef32}>
<l5, l5, (arg1 > ~(1)) /\ (arg1 < 3), par{arg1 -> (arg1 - 1), arg2 -> undef34, arg3 -> undef35, arg4 -> undef36}>
<l6, l6, ((undef37 + 1) <= arg1) /\ (arg1 > 0) /\ (undef37 > ~(1)), par{arg1 -> undef37, arg2 -> undef38, arg3 -> undef39, arg4 -> undef40}>

Fresh variables:
undef1, undef5, undef9, undef13, undef19, undef20, undef22, undef23, undef24, undef27, undef28, undef29, undef30, undef31, undef32, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, 

Undef variables:
undef1, undef5, undef9, undef13, undef19, undef20, undef22, undef23, undef24, undef27, undef28, undef29, undef30, undef31, undef32, undef34, undef35, undef36, undef37, undef38, undef39, undef40, undef41, undef42, undef43, undef44, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 1 <= undef5 /\ undef5 <= arg1, {arg1 -> undef5, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Graph 2:
Transitions:
<l3, l3, 1 <= arg1 /\ 1 <= arg3 /\ 1 <= undef13 /\ undef13 <= arg1, {arg1 -> undef13, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Graph 3:
Transitions:
<l4, l4, 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef27, arg4 -> undef28, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 4:
Transitions:
<l5, l5, 0 <= arg1 /\ arg1 <= 2, {arg1 -> -1 + arg1, arg2 -> undef34, arg3 -> undef35, arg4 -> undef36, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 5:
Transitions:
<l6, l6, 1 <= arg1 /\ 1 + undef37 <= arg1 /\ 0 <= undef37, {arg1 -> undef37, arg2 -> undef38, arg3 -> undef39, arg4 -> undef40, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef1 /\ 1 <= undef41 /\ undef1 <= undef41 /\ 0 <= undef42 /\ 1 + arg2 = undef42 /\ arg1 = undef1 /\ arg3 = undef42 /\ arg4 = undef42, {all remain the same}>

Graph 2
<l2, l3, 1 <= arg1 /\ 1 <= undef9 /\ undef9 <= arg1 /\ arg3 <= 0 /\ 0 <= arg4, {arg1 -> undef9, arg2 -> -1 + arg4, arg3 -> arg4, rest remain the same}>

Graph 3
<l3, l4, 1 <= arg1 /\ arg3 <= 0 /\ 0 <= arg4, {arg1 -> -1 + arg4, arg2 -> arg4, arg3 -> undef19, arg4 -> undef20, rest remain the same}>

Graph 4
<l4, l5, arg2 <= 0, {arg1 -> 2, arg2 -> undef22, arg3 -> undef23, arg4 -> undef24, rest remain the same}>

Graph 5
<l5, l6, 0 <= arg1 /\ 0 <= undef29 /\ arg1 <= 2, {arg1 -> undef29, arg2 -> undef30, arg3 -> undef31, arg4 -> undef32, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 3 , 2 )
( 4 , 3 )
( 5 , 4 )
( 6 , 5 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003887

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000836s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003070s
Trying to remove transition: <l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 1 <= undef5 /\ undef5 <= arg1, {arg1 -> undef5, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011376s
Time used: 0.011154
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010732s
Time used: 0.010278

LOG: SAT solveNonLinear - Elapsed time: 0.010732s
Cost: 0; Total time: 0.010278
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: arg3 <= 1 + arg1 + arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 1 <= undef5 /\ arg3 <= 1 + arg1 + arg2 /\ undef5 <= arg1, {arg1 -> undef5, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ 1 <= arg3 /\ 1 <= undef5 /\ arg3 <= 1 + arg1 + arg2 /\ undef5 <= arg1, {arg1 -> undef5, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
[33mRanking function: [36marg1 + arg2[0m
New Graphs: 
INVARIANTS: 
2: arg3 <= 1 + arg1 + arg2 , 
Quasi-INVARIANTS to narrow Graph: 
2: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.003183

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000876s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002886s
Trying to remove transition: <l3, l3, 1 <= arg1 /\ 1 <= arg3 /\ 1 <= undef13 /\ undef13 <= arg1, {arg1 -> undef13, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010150s
Time used: 0.009926
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.012086s
Time used: 0.011649

LOG: SAT solveNonLinear - Elapsed time: 0.012086s
Cost: 0; Total time: 0.011649
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l3: arg3 <= 1 + arg1 + arg2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 1 <= arg3 /\ 1 <= undef13 /\ arg3 <= 1 + arg1 + arg2 /\ undef13 <= arg1, {arg1 -> undef13, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 1 <= arg3 /\ 1 <= undef13 /\ arg3 <= 1 + arg1 + arg2 /\ undef13 <= arg1, {arg1 -> undef13, arg2 -> -1 + arg2, arg3 -> arg2, rest remain the same}>
[33mRanking function: [36marg1 + arg2[0m
New Graphs: 
INVARIANTS: 
3: arg3 <= 1 + arg1 + arg2 , 
Quasi-INVARIANTS to narrow Graph: 
3: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.002598

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000665s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001933s
Trying to remove transition: <l4, l4, 1 <= arg2, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef27, arg4 -> undef28, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008823s
Time used: 0.008691
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009833s
Time used: 0.009379

LOG: SAT solveNonLinear - Elapsed time: 0.009833s
Cost: 0; Total time: 0.009379
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l4: arg2 <= 1 + arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 <= arg2 /\ arg2 <= 1 + arg1, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef27, arg4 -> undef28, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l4, 1 <= arg2 /\ arg2 <= 1 + arg1, {arg1 -> -1 + arg1, arg2 -> arg1, arg3 -> undef27, arg4 -> undef28, rest remain the same}>
[33mRanking function: [36marg1[0m
New Graphs: 
INVARIANTS: 
4: arg2 <= 1 + arg1 , 
Quasi-INVARIANTS to narrow Graph: 
4: 
Proving termination of subgraph 4
Checking unfeasibility...
Time used: 0.004743

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001009s
[33mRanking function: [36marg1[0m
New Graphs: 
Proving termination of subgraph 5
Checking unfeasibility...
Time used: 0.002615

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001161s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
[32mProgram Terminates[0m
