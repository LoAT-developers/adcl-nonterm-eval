WORST_CASE(Omega(0),?)

Initial ITS
Start location: l3
   0: l0 -> l1 : y^0'=y^post0, x^0'=x^post0, (-x^post0+x^0 == 0 /\ 1-y^0 <= 0 /\ -y^post0+y^0 == 0 /\ 1-x^0 <= 0), cost: 1
   1: l1 -> l0 : y^0'=y^post1, x^0'=x^post1, (1-x^0+x^post1 == 0 /\ y^0-y^post1 == 0), cost: 1
   2: l2 -> l1 : y^0'=y^post2, x^0'=x^post2, (1-y^0+y^post2 == 0 /\ x^0-x^post2 == 0), cost: 1
   3: l2 -> l0 : y^0'=y^post3, x^0'=x^post3, (y^0-y^post3 == 0 /\ -x^post3+x^0 == 0), cost: 1
   4: l3 -> l2 : y^0'=y^post4, x^0'=x^post4, (y^0-y^post4 == 0 /\ x^0-x^post4 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : y^0'=y^post0, x^0'=x^post0, (-x^post0+x^0 == 0 /\ 1-y^0 <= 0 /\ -y^post0+y^0 == 0 /\ 1-x^0 <= 0), cost: 1
New rule:
l0 -> l1 : (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : y^0'=y^post1, x^0'=x^post1, (1-x^0+x^post1 == 0 /\ y^0-y^post1 == 0), cost: 1
New rule:
l1 -> l0 : x^0'=-1+x^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l1 : y^0'=y^post2, x^0'=x^post2, (1-y^0+y^post2 == 0 /\ x^0-x^post2 == 0), cost: 1
New rule:
l2 -> l1 : y^0'=-1+y^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : y^0'=y^post3, x^0'=x^post3, (y^0-y^post3 == 0 /\ -x^post3+x^0 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : y^0'=y^post4, x^0'=x^post4, (y^0-y^post4 == 0 /\ x^0-x^post4 == 0), cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Simplified rules
Start location: l3
   5: l0 -> l1 : (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: 1
   6: l1 -> l0 : x^0'=-1+x^0, TRUE, cost: 1
   7: l2 -> l1 : y^0'=-1+y^0, TRUE, cost: 1
   8: l2 -> l0 : TRUE, cost: 1
   9: l3 -> l2 : TRUE, cost: 1


Eliminating location l2 by chaining:

Applied chaining
First rule:
l3 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l1 : y^0'=-1+y^0, TRUE, cost: 1
New rule:
l3 -> l1 : y^0'=-1+y^0, TRUE, cost: 2

Applied chaining
First rule:
l3 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : TRUE, cost: 1
New rule:
l3 -> l0 : TRUE, cost: 2

Applied deletion
Removed the following rules: 7 8 9

Eliminated locations on tree-shaped paths
Start location: l3
   5: l0 -> l1 : (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: 1
   6: l1 -> l0 : x^0'=-1+x^0, TRUE, cost: 1
  10: l3 -> l1 : y^0'=-1+y^0, TRUE, cost: 2
  11: l3 -> l0 : TRUE, cost: 2


Eliminated location l0
Start location: l3
  12: l1 -> l1 : x^0'=-1+x^0, (-2+x^0 >= 0 /\ -1+y^0 >= 0), cost: 2
  10: l3 -> l1 : y^0'=-1+y^0, TRUE, cost: 2
  13: l3 -> l1 : (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: 3


Applied acceleration
Original rule:
l1 -> l1 : x^0'=-1+x^0, (-2+x^0 >= 0 /\ -1+y^0 >= 0), cost: 2
New rule:
l1 -> l1 : x^0'=-n+x^0, (n >= 0 /\ -1+y^0 >= 0 /\ -1-n+x^0 >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_aoiFcG.txt

Applied instantiation
Original rule:
l1 -> l1 : x^0'=-n+x^0, (n >= 0 /\ -1+y^0 >= 0 /\ -1-n+x^0 >= 0), cost: 2*n
New rule:
l1 -> l1 : x^0'=1, (0 >= 0 /\ -1+y^0 >= 0 /\ -1+x^0 >= 0), cost: -2+2*x^0

Applied simplification
Original rule:
l1 -> l1 : x^0'=1, (0 >= 0 /\ -1+y^0 >= 0 /\ -1+x^0 >= 0), cost: -2+2*x^0
New rule:
l1 -> l1 : x^0'=1, (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: -2+2*x^0

Applied deletion
Removed the following rules: 12

Accelerated simple loops
Start location: l3
  15: l1 -> l1 : x^0'=1, (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: -2+2*x^0
  10: l3 -> l1 : y^0'=-1+y^0, TRUE, cost: 2
  13: l3 -> l1 : (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: 3


Applied chaining
First rule:
l3 -> l1 : y^0'=-1+y^0, TRUE, cost: 2
Second rule:
l1 -> l1 : x^0'=1, (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: -2+2*x^0
New rule:
l3 -> l1 : y^0'=-1+y^0, x^0'=1, (-2+y^0 >= 0 /\ -1+x^0 >= 0), cost: 2*x^0

Applied chaining
First rule:
l3 -> l1 : (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: 3
Second rule:
l1 -> l1 : x^0'=1, (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: -2+2*x^0
New rule:
l3 -> l1 : x^0'=1, (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: 1+2*x^0

Applied deletion
Removed the following rules: 15

Chained accelerated rules with incoming rules
Start location: l3
  10: l3 -> l1 : y^0'=-1+y^0, TRUE, cost: 2
  13: l3 -> l1 : (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: 3
  16: l3 -> l1 : y^0'=-1+y^0, x^0'=1, (-2+y^0 >= 0 /\ -1+x^0 >= 0), cost: 2*x^0
  17: l3 -> l1 : x^0'=1, (-1+y^0 >= 0 /\ -1+x^0 >= 0), cost: 1+2*x^0


Removed unreachable locations and irrelevant leafs
Start location: l3
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

