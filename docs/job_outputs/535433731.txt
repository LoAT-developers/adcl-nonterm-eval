NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-1+arg2P0 > 0 /\ 1+arg2 > 0 /\ -1+arg2-arg1P0 == 0 /\ arg1 > 0 /\ -1+arg2P0-arg1 <= 0 /\ arg2-arg3P0 == 0), cost: 1
   1: f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ -1+arg1-arg1P1 == 0 /\ arg1-arg3P1 == 0 /\ -2+arg2P1 > 0 /\ -2-arg2+arg2P1 <= 0 /\ arg3 > 0), cost: 1
   2: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ -1+arg3 < 0 /\ arg1P2 > 0), cost: 1
   3: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1-arg2+arg1P3 <= 0 /\ -1+arg3 < 0 /\ -1+arg2 > 0 /\ -2+arg1P3 > 0), cost: 1
   4: f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-1+arg2P0 > 0 /\ 1+arg2 > 0 /\ -1+arg2-arg1P0 == 0 /\ arg1 > 0 /\ -1+arg2P0-arg1 <= 0 /\ arg2-arg3P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2, arg3'=arg2, (-1+arg2P0 > 0 /\ 1+arg2 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ -1+arg1-arg1P1 == 0 /\ arg1-arg3P1 == 0 /\ -2+arg2P1 > 0 /\ -2-arg2+arg2P1 <= 0 /\ arg3 > 0), cost: 1
New rule:
f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1+arg1, arg3'=arg1, (-2+arg2P1 > 0 /\ -2-arg2+arg2P1 <= 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ -1+arg3 < 0 /\ arg1P2 > 0), cost: 1
New rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ 1-arg3 > 0 /\ arg1P2 > 0), cost: 1

Applied preprocessing
Original rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1-arg2+arg1P3 <= 0 /\ -1+arg3 < 0 /\ -1+arg2 > 0 /\ -2+arg1P3 > 0), cost: 1
New rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1-arg2+arg1P3 <= 0 /\ 1-arg3 > 0 /\ -2+arg1P3 > 0), cost: 1

Simplified rules
Start location: __init
   6: f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2, arg3'=arg2, (-1+arg2P0 > 0 /\ 1+arg2 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
   7: f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1+arg1, arg3'=arg1, (-2+arg2P1 > 0 /\ -2-arg2+arg2P1 <= 0 /\ arg3 > 0), cost: 1
   8: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ 1-arg3 > 0 /\ arg1P2 > 0), cost: 1
   9: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1-arg2+arg1P3 <= 0 /\ 1-arg3 > 0 /\ -2+arg1P3 > 0), cost: 1
   4: f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied acceleration
Original rule:
f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1+arg1, arg3'=arg1, (-2+arg2P1 > 0 /\ -2-arg2+arg2P1 <= 0 /\ arg3 > 0), cost: 1
New rule:
f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=arg1-n, arg3'=1+arg1-n, (-1+n >= 0 /\ 2+arg1-n > 0 /\ -2+arg2P1 > 0 /\ 2+arg2-arg2P1 >= 0 /\ arg3 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_OEJFLM.txt

Applied instantiation
Original rule:
f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=arg1-n, arg3'=1+arg1-n, (-1+n >= 0 /\ 2+arg1-n > 0 /\ -2+arg2P1 > 0 /\ 2+arg2-arg2P1 >= 0 /\ arg3 > 0), cost: n
New rule:
f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (1 > 0 /\ arg1 >= 0 /\ -2+arg2P1 > 0 /\ 2+arg2-arg2P1 >= 0 /\ arg3 > 0), cost: 1+arg1

Applied simplification
Original rule:
f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (1 > 0 /\ arg1 >= 0 /\ -2+arg2P1 > 0 /\ 2+arg2-arg2P1 >= 0 /\ arg3 > 0), cost: 1+arg1
New rule:
f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (arg1 >= 0 /\ -2+arg2P1 > 0 /\ 2+arg2-arg2P1 >= 0 /\ arg3 > 0), cost: 1+arg1

Applied deletion
Removed the following rules: 7

Applied acceleration
Original rule:
f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
New rule:
f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ -1+n0 >= 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ecKIoK.txt

Applied nonterm
Original rule:
f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1 > 0 /\ 1+arg1P4 > 0), cost: 1
New rule:
f168_0_visit_NULL -> [5] : (-arg1P4+arg1 <= 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_chjkhM.txt

Applied simplification
Original rule:
f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ -1+n0 >= 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: n0
New rule:
f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ -1+n0 >= 0 /\ arg1 > 0), cost: n0

Applied simplification
Original rule:
f168_0_visit_NULL -> [5] : (-arg1P4+arg1 <= 0 /\ arg1 > 0 /\ 1+arg1P4 > 0), cost: NONTERM
New rule:
f168_0_visit_NULL -> [5] : (-arg1P4+arg1 <= 0 /\ arg1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 4

Accelerated simple loops
Start location: __init
   6: f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2, arg3'=arg2, (-1+arg2P0 > 0 /\ 1+arg2 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
   8: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ 1-arg3 > 0 /\ arg1P2 > 0), cost: 1
   9: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1-arg2+arg1P3 <= 0 /\ 1-arg3 > 0 /\ -2+arg1P3 > 0), cost: 1
  11: f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (arg1 >= 0 /\ -2+arg2P1 > 0 /\ 2+arg2-arg2P1 >= 0 /\ arg3 > 0), cost: 1+arg1
  14: f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ -1+n0 >= 0 /\ arg1 > 0), cost: n0
  15: f168_0_visit_NULL -> [5] : (-arg1P4+arg1 <= 0 /\ arg1 > 0), cost: NONTERM
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2, arg3'=arg2, (-1+arg2P0 > 0 /\ 1+arg2 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
Second rule:
f181_0_main_LE -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (arg1 >= 0 /\ -2+arg2P1 > 0 /\ 2+arg2-arg2P1 >= 0 /\ arg3 > 0), cost: 1+arg1
New rule:
f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (-2+arg2P1 > 0 /\ -1+arg2 >= 0 /\ -3+arg2P1-arg1 <= 0 /\ 1-arg1 <= 0), cost: 1+arg2

Applied deletion
Removed the following rules: 11

Applied chaining
First rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ 1-arg3 > 0 /\ arg1P2 > 0), cost: 1
Second rule:
f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ -1+n0 >= 0 /\ arg1 > 0), cost: n0
New rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg2 > 0 /\ arg1P4 > 0 /\ 1-arg3 > 0 /\ -1+n0 >= 0), cost: 1+n0

Applied chaining
First rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1-arg2+arg1P3 <= 0 /\ 1-arg3 > 0 /\ -2+arg1P3 > 0), cost: 1
Second rule:
f168_0_visit_NULL -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ -1+n0 >= 0 /\ arg1 > 0), cost: n0
New rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg2 >= 0 /\ arg1P4 > 0 /\ 1-arg3 > 0 /\ -1+n0 >= 0), cost: 1+n0

Applied chaining
First rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ 1-arg3 > 0 /\ arg1P2 > 0), cost: 1
Second rule:
f168_0_visit_NULL -> [5] : (-arg1P4+arg1 <= 0 /\ arg1 > 0), cost: NONTERM
New rule:
f181_0_main_LE -> [5] : (arg2 > 0 /\ 1-arg3 > 0), cost: NONTERM

Applied chaining
First rule:
f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1-arg2+arg1P3 <= 0 /\ 1-arg3 > 0 /\ -2+arg1P3 > 0), cost: 1
Second rule:
f168_0_visit_NULL -> [5] : (-arg1P4+arg1 <= 0 /\ arg1 > 0), cost: NONTERM
New rule:
f181_0_main_LE -> [5] : (-2+arg2 >= 0 /\ 1-arg3 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 14 15

Chained accelerated rules with incoming rules
Start location: __init
   6: f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2, arg3'=arg2, (-1+arg2P0 > 0 /\ 1+arg2 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
  16: f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (-2+arg2P1 > 0 /\ -1+arg2 >= 0 /\ -3+arg2P1-arg1 <= 0 /\ 1-arg1 <= 0), cost: 1+arg2
   8: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ 1-arg3 > 0 /\ arg1P2 > 0), cost: 1
   9: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1-arg2+arg1P3 <= 0 /\ 1-arg3 > 0 /\ -2+arg1P3 > 0), cost: 1
  17: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg2 > 0 /\ arg1P4 > 0 /\ 1-arg3 > 0 /\ -1+n0 >= 0), cost: 1+n0
  18: f181_0_main_LE -> f168_0_visit_NULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg2 >= 0 /\ arg1P4 > 0 /\ 1-arg3 > 0 /\ -1+n0 >= 0), cost: 1+n0
  19: f181_0_main_LE -> [5] : (arg2 > 0 /\ 1-arg3 > 0), cost: NONTERM
  20: f181_0_main_LE -> [5] : (-2+arg2 >= 0 /\ 1-arg3 > 0), cost: NONTERM
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
   6: f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2, arg3'=arg2, (-1+arg2P0 > 0 /\ 1+arg2 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
  16: f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (-2+arg2P1 > 0 /\ -1+arg2 >= 0 /\ -3+arg2P1-arg1 <= 0 /\ 1-arg1 <= 0), cost: 1+arg2
  19: f181_0_main_LE -> [5] : (arg2 > 0 /\ 1-arg3 > 0), cost: NONTERM
  20: f181_0_main_LE -> [5] : (-2+arg2 >= 0 /\ 1-arg3 > 0), cost: NONTERM
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2, arg3'=arg2, (-1+arg2P0 > 0 /\ 1+arg2 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
New rule:
__init -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2P5, arg3'=arg2P5, (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (-2+arg2P1 > 0 /\ -1+arg2 >= 0 /\ -3+arg2P1-arg1 <= 0 /\ 1-arg1 <= 0), cost: 1+arg2
New rule:
__init -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (-3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: 2+arg2P5

Applied deletion
Removed the following rules: 5 6 16

Eliminated locations on tree-shaped paths
Start location: __init
  19: f181_0_main_LE -> [5] : (arg2 > 0 /\ 1-arg3 > 0), cost: NONTERM
  20: f181_0_main_LE -> [5] : (-2+arg2 >= 0 /\ 1-arg3 > 0), cost: NONTERM
  21: __init -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2P5, arg3'=arg2P5, (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0), cost: 2
  22: __init -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (-3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: 2+arg2P5


Eliminating location f181_0_main_LE by chaining:

Applied chaining
First rule:
__init -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2P5, arg3'=arg2P5, (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0), cost: 2
Second rule:
f181_0_main_LE -> [5] : (arg2 > 0 /\ 1-arg3 > 0), cost: NONTERM
New rule:
__init -> [5] : (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0 /\ arg2P0 > 0 /\ 1-arg2P5 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [5] : (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0 /\ arg2P0 > 0 /\ 1-arg2P5 > 0), cost: NONTERM
New rule:
__init -> [5] : (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0 /\ 1-arg2P5 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f181_0_main_LE : arg2'=arg2P0, arg1'=-1+arg2P5, arg3'=arg2P5, (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0), cost: 2
Second rule:
f181_0_main_LE -> [5] : (-2+arg2 >= 0 /\ 1-arg3 > 0), cost: NONTERM
New rule:
__init -> [5] : (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0 /\ -2+arg2P0 >= 0 /\ 1-arg2P5 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [5] : (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0 /\ -2+arg2P0 >= 0 /\ 1-arg2P5 > 0), cost: NONTERM
New rule:
__init -> [5] : (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -2+arg2P0 >= 0 /\ 1-arg2P5 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (-3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: 2+arg2P5
Second rule:
f181_0_main_LE -> [5] : (arg2 > 0 /\ 1-arg3 > 0), cost: NONTERM
New rule:
__init -> [5] : (1 > 0 /\ arg2P1 > 0 /\ -3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [5] : (1 > 0 /\ arg2P1 > 0 /\ -3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: NONTERM
New rule:
__init -> [5] : (-3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f181_0_main_LE : arg2'=arg2P1, arg1'=-1, arg3'=0, (-3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: 2+arg2P5
Second rule:
f181_0_main_LE -> [5] : (-2+arg2 >= 0 /\ 1-arg3 > 0), cost: NONTERM
New rule:
__init -> [5] : (1 > 0 /\ -3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ -2+arg2P1 >= 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [5] : (1 > 0 /\ -3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ -2+arg2P1 >= 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: NONTERM
New rule:
__init -> [5] : (-3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 19 20 21 22

Eliminated locations on tree-shaped paths
Start location: __init
  23: __init -> [5] : (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0 /\ 1-arg2P5 > 0), cost: NONTERM
  24: __init -> [5] : (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -2+arg2P0 >= 0 /\ 1-arg2P5 > 0), cost: NONTERM
  25: __init -> [5] : (-3-arg1P5+arg2P1 <= 0 /\ -2+arg2P1 > 0 /\ 1-arg1P5 <= 0 /\ -1+arg2P5 >= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 23 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-1-arg1P5+arg2P0 <= 0 /\ 1+arg2P5 > 0 /\ -1+arg2P0 > 0 /\ 1-arg2P5 > 0)
