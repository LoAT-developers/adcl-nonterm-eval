unknown

Initial ITS

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=0, T, cost: 1
   1: [2] -> [3] : y'=0, T, cost: 1
   2: [3] -> [4] : y >= 0, cost: 1
  11: [3] -> [11] : y < 0, cost: 1
   3: [4] -> [6] : -50+x <= 0, cost: 1
   6: [4] -> [8] : -50+x > 0, cost: 1
   9: [5] -> [10] : x'=1+x, T, cost: 1
   4: [6] -> [7] : y'=1+y, T, cost: 1
   5: [7] -> [5] : T, cost: 1
   7: [8] -> [9] : y'=-1+y, T, cost: 1
   8: [9] -> [5] : T, cost: 1
  10: [10] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x y
  12: [1] -> [3] : x'=0, y'=0, T, cost: 1
   2: [3] -> [4] : y >= 0, cost: 1
  11: [3] -> [11] : y < 0, cost: 1
  15: [4] -> [5] : y'=1+y, -50+x <= 0, cost: 1
  16: [4] -> [5] : y'=-1+y, -50+x > 0, cost: 1
  17: [5] -> [3] : x'=1+x, T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=0, T, cost: 1
	Second rule:
	[2] -> [3] : y'=0, T, cost: 1
	New rule:
	[1] -> [3] : x'=0, y'=0, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[4] -> [6] : -50+x <= 0, cost: 1
	Second rule:
	[6] -> [7] : y'=1+y, T, cost: 1
	New rule:
	[4] -> [7] : y'=1+y, -50+x <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[4] -> [8] : -50+x > 0, cost: 1
	Second rule:
	[8] -> [9] : y'=-1+y, T, cost: 1
	New rule:
	[4] -> [9] : y'=-1+y, -50+x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[4] -> [7] : y'=1+y, -50+x <= 0, cost: 1
	Second rule:
	[7] -> [5] : T, cost: 1
	New rule:
	[4] -> [5] : y'=1+y, -50+x <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 13
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[4] -> [9] : y'=-1+y, -50+x > 0, cost: 1
	Second rule:
	[9] -> [5] : T, cost: 1
	New rule:
	[4] -> [5] : y'=-1+y, -50+x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 14
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[5] -> [10] : x'=1+x, T, cost: 1
	Second rule:
	[10] -> [3] : T, cost: 1
	New rule:
	[5] -> [3] : x'=1+x, T, cost: 1
	
	Applied deletion

	Removed the following rules: 9 10

Step with 12

	Trace

	12[T]
	
	Blocked

	[{}, {}]

Step with 2

	Trace

	12[T], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T]}, {}]

Step with 15

	Trace

	12[T], 2[(y >= 0)], 15[(-50+x <= 0)]
	
	Blocked

	[{}, {11[T]}, {}, {}]

Step with 17

	Trace

	12[T], 2[(y >= 0)], 15[(-50+x <= 0)], 17[T]
	
	Blocked

	[{}, {11[T]}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y
  12: [1] -> [3] : x'=0, y'=0, T, cost: 1
   2: [3] -> [4] : y >= 0, cost: 1
  11: [3] -> [11] : y < 0, cost: 1
  18: [3] -> [3] : x'=n+x, y'=n+y, (51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0), cost: 1
  15: [4] -> [5] : y'=1+y, -50+x <= 0, cost: 1
  16: [4] -> [5] : y'=-1+y, -50+x > 0, cost: 1
  17: [5] -> [3] : x'=1+x, T, cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : x'=1+x, y'=1+y, (-50+x <= 0 /\ y >= 0), cost: 1
	New rule:
	[3] -> [3] : x'=n+x, y'=n+y, (51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0), cost: 1

		y >= 0 [0]: monotonic increase yields y >= 0
		
		50-x >= 0 [0]: montonic decrease yields 51-n-x >= 0
		
		50-x >= 0 [1]: eventual increase yields (1 <= 0 /\ 50-x >= 0)
		
		Replacement map: {y >= 0 -> y >= 0, 50-x >= 0 -> 51-n-x >= 0}

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {11[T]}, {18[T]}]

Step with 2

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {}]

Step with 15

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 15[(-50+x <= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {}, {}]

Step with 17

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 15[(-50+x <= 0)], 17[T]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {}, {}, {}]

Covered

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 15[(-50+x <= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {}, {17[T]}]

Backtrack

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {15[T]}]

Step with 16

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 16[(-50+x > 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {15[T]}, {}]

Step with 17

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 16[(-50+x > 0)], 17[T]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {15[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y
  12: [1] -> [3] : x'=0, y'=0, T, cost: 1
   2: [3] -> [4] : y >= 0, cost: 1
  11: [3] -> [11] : y < 0, cost: 1
  18: [3] -> [3] : x'=n+x, y'=n+y, (51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0), cost: 1
  19: [3] -> [3] : x'=n2+x, y'=-n2+y, (1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0), cost: 1
  15: [4] -> [5] : y'=1+y, -50+x <= 0, cost: 1
  16: [4] -> [5] : y'=-1+y, -50+x > 0, cost: 1
  17: [5] -> [3] : x'=1+x, T, cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : x'=1+x, y'=-1+y, (-50+x > 0 /\ y >= 0), cost: 1
	New rule:
	[3] -> [3] : x'=n2+x, y'=-n2+y, (1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0), cost: 1

		-50+x > 0 [0]: monotonic increase yields -50+x > 0
		
		y >= 0 [0]: montonic decrease yields 1-n2+y >= 0
		
		y >= 0 [1]: eventual increase yields (1 <= 0 /\ y >= 0)
		
		Replacement map: {-50+x > 0 -> -50+x > 0, y >= 0 -> 1-n2+y >= 0}

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 19[(1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {19[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 11

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 19[(1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0)], 11[(y < 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {19[T]}, {}]

Backtrack

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 19[(1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {11[T], 19[T]}]

Step with 2

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 19[(1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0)], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {11[T], 19[T]}, {}]

Step with 16

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 19[(1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0)], 2[(y >= 0)], 16[(-50+x > 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {11[T], 19[T]}, {}, {}]

Step with 17

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 19[(1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0)], 2[(y >= 0)], 16[(-50+x > 0)], 17[T]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {11[T], 19[T]}, {}, {}, {}]

Covered

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 19[(1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0)], 2[(y >= 0)], 16[(-50+x > 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {11[T], 19[T]}, {}, {17[T]}]

Backtrack

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 19[(1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0)], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {11[T], 19[T]}, {16[T]}]

Backtrack

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 19[(1-n2+y >= 0 /\ -50+x > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T]}, {2[T], 11[T], 19[T]}]

Backtrack

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}]

Step with 2

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}, {}]

Step with 16

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 16[(-50+x > 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}, {}, {}]

Step with 17

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 16[(-50+x > 0)], 17[T]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}, {}, {}, {}]

Covered

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 16[(-50+x > 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}, {}, {17[T]}]

Backtrack

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}, {16[T]}]

Step with 15

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 15[(-50+x <= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}, {16[T]}, {}]

Step with 17

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 15[(-50+x <= 0)], 17[T]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}, {16[T]}, {}, {}]

Covered

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)], 15[(-50+x <= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}, {16[T]}, {17[T]}]

Backtrack

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T]}, {11[T], 18[T], 19[T]}, {15[T], 16[T]}]

Backtrack

	Trace

	12[T], 18[(51-n-x >= 0 /\ y >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {11[T]}, {2[T], 11[T], 18[T], 19[T]}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {11[T], 18[T]}]

Step with 2

	Trace

	12[T], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {}]

Step with 15

	Trace

	12[T], 2[(y >= 0)], 15[(-50+x <= 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {}, {}]

Step with 17

	Trace

	12[T], 2[(y >= 0)], 15[(-50+x <= 0)], 17[T]
	
	Blocked

	[{}, {11[T], 18[T]}, {}, {}, {}]

Covered

	Trace

	12[T], 2[(y >= 0)], 15[(-50+x <= 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {}, {17[T]}]

Backtrack

	Trace

	12[T], 2[(y >= 0)]
	
	Blocked

	[{}, {11[T], 18[T]}, {15[T]}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {2[T], 11[T], 18[T]}]

Backtrack

	Trace

	Blocked

	[{12[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
