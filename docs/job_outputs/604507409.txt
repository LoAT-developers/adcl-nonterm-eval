unknown

Initial ITS

Start location: l6
Program variables: a^0 b^0
   0: l0 -> l1 : a^0'=a^post1, b^0'=b^post1, (1 <= 0 /\ b^0-b^post1 == 0 /\ -a^post1+a^0 == 0), cost: 1
   2: l0 -> l2 : a^0'=a^post3, b^0'=b^post3, (-a^post3+a^0 == 0 /\ b^post3 == 0), cost: 1
   1: l1 -> l0 : a^0'=a^post2, b^0'=b^post2, (-b^post2+b^0 == 0 /\ a^0-a^post2 == 0), cost: 1
   3: l2 -> l3 : a^0'=a^post4, b^0'=b^post4, (-a^post4+a^0 == 0 /\ b^0 <= 0 /\ b^0-b^post4 == 0), cost: 1
   4: l4 -> l0 : a^0'=a^post5, b^0'=b^post5, (a^0-a^post5 == 0 /\ a^0 <= 0 /\ -b^post5+b^0 == 0), cost: 1
   5: l4 -> l2 : a^0'=a^post6, b^0'=b^post6, (-1+b^post6 == 0 /\ -a^post6+a^0 == 0), cost: 1
   6: l5 -> l4 : a^0'=a^post7, b^0'=b^post7, (-1+a^post7 == 0 /\ b^0-b^post7 == 0), cost: 1
   7: l6 -> l5 : a^0'=a^post8, b^0'=b^post8, (b^0-b^post8 == 0 /\ -a^post8+a^0 == 0), cost: 1

Chained Linear Paths

Start location: l6
Program variables: a^0 b^0
   2: l0 -> l2 : a^0'=a^post3, b^0'=b^post3, (-a^post3+a^0 == 0 /\ b^post3 == 0), cost: 1
   3: l2 -> l3 : a^0'=a^post4, b^0'=b^post4, (-a^post4+a^0 == 0 /\ b^0 <= 0 /\ b^0-b^post4 == 0), cost: 1
   4: l4 -> l0 : a^0'=a^post5, b^0'=b^post5, (a^0-a^post5 == 0 /\ a^0 <= 0 /\ -b^post5+b^0 == 0), cost: 1
   5: l4 -> l2 : a^0'=a^post6, b^0'=b^post6, (-1+b^post6 == 0 /\ -a^post6+a^0 == 0), cost: 1
   8: l6 -> l4 : a^0'=a^post7, b^0'=b^post7, (-1+a^post7 == 0 /\ b^0-b^post8 == 0 /\ -b^post7+b^post8 == 0 /\ -a^post8+a^0 == 0), cost: 1

	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l6 -> l5 : a^0'=a^post8, b^0'=b^post8, (b^0-b^post8 == 0 /\ -a^post8+a^0 == 0), cost: 1
	Second rule:
	l5 -> l4 : a^0'=a^post7, b^0'=b^post7, (-1+a^post7 == 0 /\ b^0-b^post7 == 0), cost: 1
	New rule:
	l6 -> l4 : a^0'=a^post7, b^0'=b^post7, (-1+a^post7 == 0 /\ b^0-b^post8 == 0 /\ -b^post7+b^post8 == 0 /\ -a^post8+a^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location l1 by chaining:

	Applied deletion

	Removed the following rules: 0 1

Simplified Transitions

Start location: l6
Program variables: a^0 b^0
   9: l0 -> l2 : b^0'=0, T, cost: 1
  10: l2 -> l3 : b^0 <= 0, cost: 1
  11: l4 -> l0 : a^0 <= 0, cost: 1
  12: l4 -> l2 : b^0'=1, T, cost: 1
  13: l6 -> l4 : a^0'=1, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l2 : a^0'=a^post3, b^0'=b^post3, (-a^post3+a^0 == 0 /\ b^post3 == 0), cost: 1
	New rule:
	l0 -> l2 : a^0'=a^0, b^0'=0, 0 == 0, cost: 1
	
		propagated equality a^post3 = a^0
		
		propagated equality b^post3 = 0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : a^0'=a^0, b^0'=0, 0 == 0, cost: 1
	New rule:
	l0 -> l2 : a^0'=a^0, b^0'=0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : a^0'=a^0, b^0'=0, T, cost: 1
	New rule:
	l0 -> l2 : b^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : a^0'=a^post4, b^0'=b^post4, (-a^post4+a^0 == 0 /\ b^0 <= 0 /\ b^0-b^post4 == 0), cost: 1
	New rule:
	l2 -> l3 : a^0'=a^0, b^0'=b^0, (0 == 0 /\ b^0 <= 0), cost: 1
	
		propagated equality a^post4 = a^0
		
		propagated equality b^post4 = b^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : a^0'=a^0, b^0'=b^0, (0 == 0 /\ b^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : a^0'=a^0, b^0'=b^0, b^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : a^0'=a^0, b^0'=b^0, b^0 <= 0, cost: 1
	New rule:
	l2 -> l3 : b^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l0 : a^0'=a^post5, b^0'=b^post5, (a^0-a^post5 == 0 /\ a^0 <= 0 /\ -b^post5+b^0 == 0), cost: 1
	New rule:
	l4 -> l0 : a^0'=a^0, b^0'=b^0, (0 == 0 /\ a^0 <= 0), cost: 1
	
		propagated equality a^post5 = a^0
		
		propagated equality b^post5 = b^0
		
	Simplified Guard

	Original rule:
	l4 -> l0 : a^0'=a^0, b^0'=b^0, (0 == 0 /\ a^0 <= 0), cost: 1
	New rule:
	l4 -> l0 : a^0'=a^0, b^0'=b^0, a^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l0 : a^0'=a^0, b^0'=b^0, a^0 <= 0, cost: 1
	New rule:
	l4 -> l0 : a^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l2 : a^0'=a^post6, b^0'=b^post6, (-1+b^post6 == 0 /\ -a^post6+a^0 == 0), cost: 1
	New rule:
	l4 -> l2 : a^0'=a^0, b^0'=1, 0 == 0, cost: 1
	
		propagated equality b^post6 = 1
		
		propagated equality a^post6 = a^0
		
	Simplified Guard

	Original rule:
	l4 -> l2 : a^0'=a^0, b^0'=1, 0 == 0, cost: 1
	New rule:
	l4 -> l2 : a^0'=a^0, b^0'=1, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l2 : a^0'=a^0, b^0'=1, T, cost: 1
	New rule:
	l4 -> l2 : b^0'=1, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l4 : a^0'=a^post7, b^0'=b^post7, (-1+a^post7 == 0 /\ b^0-b^post8 == 0 /\ -b^post7+b^post8 == 0 /\ -a^post8+a^0 == 0), cost: 1
	New rule:
	l6 -> l4 : a^0'=1, b^0'=b^post8, (0 == 0 /\ b^0-b^post8 == 0 /\ -a^post8+a^0 == 0), cost: 1
	
		propagated equality a^post7 = 1
		
		propagated equality b^post7 = b^post8
		
	Propagated Equalities

	Original rule:
	l6 -> l4 : a^0'=1, b^0'=b^post8, (0 == 0 /\ b^0-b^post8 == 0 /\ -a^post8+a^0 == 0), cost: 1
	New rule:
	l6 -> l4 : a^0'=1, b^0'=b^0, 0 == 0, cost: 1
	
		propagated equality b^post8 = b^0
		
		propagated equality a^post8 = a^0
		
	Simplified Guard

	Original rule:
	l6 -> l4 : a^0'=1, b^0'=b^0, 0 == 0, cost: 1
	New rule:
	l6 -> l4 : a^0'=1, b^0'=b^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l4 : a^0'=1, b^0'=b^0, T, cost: 1
	New rule:
	l6 -> l4 : a^0'=1, T, cost: 1

Step with 13

	Trace

	13[T]
	
	Blocked

	[{}, {}]

Step with 12

	Trace

	13[T], 12[T]
	
	Blocked

	[{}, {11[T]}, {}]

Backtrack

	Trace

	13[T]
	
	Blocked

	[{}, {11[T], 12[T]}]

Backtrack

	Trace

	Blocked

	[{13[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
