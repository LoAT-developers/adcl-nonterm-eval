NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l9, true>
<l1, l2, true, par{x^0 -> 1}>
<l2, l1, true>
<l3, l1, ((0 + y^0) <= 0), par{p^0 -> 0}>
<l3, l4, (1 <= (0 + y^0)), par{y^0 -> (~(1) + y^0)}>
<l4, l3, true>
<l5, l1, (2 <= 0)>
<l5, l6, true, par{p^0 -> (1 + p^0)}>
<l6, l5, true>
<l7, l3, ((0 + x^0) <= 0)>
<l7, l5, (1 <= (0 + x^0))>
<l8, l7, true, par{p^0 -> 0}>
<l9, l8, true>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (p^0 = 0) /\ ((0 + x^0) <= 0)>
<l0, l5, (p^0 = 0) /\ (1 <= (0 + x^0))>
<l1, l1, true, par{x^0 -> 1}>
<l3, l1, ((0 + y^0) <= 0), par{p^0 -> 0}>
<l3, l3, (1 <= (0 + y^0)), par{y^0 -> (~(1) + y^0)}>
<l5, l5, true, par{p^0 -> (1 + p^0)}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l5, l5, true, {p^0 -> 1 + p^0, rest remain the same}>
Variables:
p^0

Graph 2:
Transitions:
<l3, l3, 1 <= y^0, {y^0 -> -1 + y^0, rest remain the same}>
Variables:
y^0

Graph 3:
Transitions:
<l1, l1, true, {x^0 -> 1, rest remain the same}>
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l5, 1 <= x^0 /\ p^0 = 0, {all remain the same}>

Graph 2
<l0, l3, x^0 <= 0 /\ p^0 = 0, {all remain the same}>

Graph 3
<l3, l1, y^0 <= 0, {p^0 -> 0, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 3 )
( 3 , 2 )
( 5 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001639

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000473s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000877s
Trying to remove transition: <l5, l5, true, {p^0 -> 1 + p^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003198s
Time used: 0.003087
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002158s
Time used: 4.00159
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.014218s
Time used: 4.00774
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005539s
Time used: 1.00082
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009393s
Time used: 0.005053
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000852s
Time used: 1.00074

LOG: SAT solveNonLinear - Elapsed time: 1.010245s
Cost: 1; Total time: 1.00579
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l5: 0 <= 1 + p^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, 0 <= 1 + p^0, {p^0 -> 1 + p^0, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l5, l5, 0 <= 1 + p^0, {p^0 -> 1 + p^0, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - p^0[0m
New Graphs: 
Transitions:
<l5, l5, 50001 <= p^0, {p^0 -> 1 + p^0, rest remain the same}>
Variables:
p^0
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000422s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001303s
Trying to remove transition: <l5, l5, 50001 <= p^0, {p^0 -> 1 + p^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004455s
Time used: 0.004323
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002199s
Time used: 4.00157
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.017470s
Time used: 4.01266
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005975s
Time used: 1.00088
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.005629s
Time used: 4.00161
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l5, 1 <= x^0 /\ p^0 = 0, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l5, 1 <= x^0 /\ p^0 = 0, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005599s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.005708s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l5, l5, true, {p^0 -> 1 + p^0, rest remain the same}>
Variables:
p^0

Checking conditional non-termination of SCC {l5}...
> No exit transition to close.
Calling reachability with...
Transition: <l5, end, true, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l5, end, true, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l5, 1 <= x^0 /\ p^0 = 0, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l0, l5, 1 <= x^0 /\ p^0 = 0, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
