WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg3P0-arg1 <= 0 /\ 1+x50 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0 /\ -2-arg4P0+x50 == 0 /\ -1+arg3P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
   1: f231_0_createList_LE -> f266_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (-1+arg4 < 0 /\ -1-arg2P1+arg1 == 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
   2: f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ -1+arg4-arg4P2 == 0 /\ -2+arg3P2 > 0 /\ arg4 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 == 0 /\ -2+arg3P2-arg3 <= 0), cost: 1
   4: f231_0_createList_LE -> f266_0_createList_LE : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1+arg4 < 0 /\ -2+arg1-arg2P4 == 0 /\ -3+arg1P4-arg3 <= 0 /\ -1+arg3 > 0 /\ -1+arg2 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
   5: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ -2+arg1 < 0 /\ -1+arg4 < 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg3 > 0 /\ -1+arg2P5 > 0 /\ -1+arg2 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1
   3: f266_0_createList_LE -> f266_0_createList_LE : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg2 > 0 /\ -2+arg1P3 > 0 /\ -1+arg2-arg2P3 == 0 /\ arg1 > 0), cost: 1
   6: f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ arg1 > 0 /\ -1-arg1+arg1P6 <= 0 /\ -1+arg2 < 0), cost: 1
   7: f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 > 0 /\ 1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ -1+arg2 < 0 /\ arg2P7 > 0), cost: 1
   8: f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -2+arg1 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ -1+arg2 < 0), cost: 1
   9: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ arg2 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ arg1 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  12: f473_0_reverse_FieldAccess -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (-arg3P12+arg3 == 0 /\ -2+arg2 > 0 /\ arg4 > 0 /\ -2+arg1P12 > 0 /\ arg1 > 0 /\ arg4P12-arg4 < 0 /\ -2+arg1P12-arg1 <= 0 /\ arg3 > 0 /\ arg2P12 > 0), cost: 1
  13: f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ x790 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ arg1 > 0 /\ x790-x780 < 0 /\ 1+x780 > 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
  14: f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ 1+x860 > 0 /\ -arg1+arg2P14 <= 0 /\ x870-x860 < 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
  10: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg1 > 0 /\ arg2 > 0 /\ arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  11: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ 1+arg1 > 0 /\ -arg4+arg2P11 <= 0 /\ arg2 > 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ arg3 > 0 /\ -2+arg1P11-arg2 <= 0 /\ 1+arg4 > 0), cost: 1
  15: __init -> f1_0_main_Load : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg3P0-arg1 <= 0 /\ 1+x50 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0 /\ -2-arg4P0+x50 == 0 /\ -1+arg3P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg3P0-arg1 <= 0 /\ 1+x50 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (-1+arg4 < 0 /\ -1-arg2P1+arg1 == 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
New rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ -1+arg4-arg4P2 == 0 /\ -2+arg3P2 > 0 /\ arg4 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2 > 0 /\ arg3 > 0 /\ -arg1P2+arg1 == 0 /\ -2+arg3P2-arg3 <= 0), cost: 1
New rule:
f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=-1+arg4, arg3'=arg3P2, (-2+arg3P2 > 0 /\ arg4 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2 > 0 /\ -2+arg3P2-arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg2 > 0 /\ -2+arg1P3 > 0 /\ -1+arg2-arg2P3 == 0 /\ arg1 > 0), cost: 1
New rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg2, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg2 > 0 /\ -2+arg1P3 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (-1+arg4 < 0 /\ -2+arg1-arg2P4 == 0 /\ -3+arg1P4-arg3 <= 0 /\ -1+arg3 > 0 /\ -1+arg2 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
New rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-2+arg1, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1

Applied preprocessing
Original rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ -2+arg1 < 0 /\ -1+arg4 < 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg3 > 0 /\ -1+arg2P5 > 0 /\ -1+arg2 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ 1-arg4 > 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg2P5 > 0 /\ 2-arg1 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ arg1 > 0 /\ -1-arg1+arg1P6 <= 0 /\ -1+arg2 < 0), cost: 1
New rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1-arg1+arg1P6 <= 0 /\ 1-arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 > 0 /\ 1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ -1+arg2 < 0 /\ arg2P7 > 0), cost: 1
New rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ 1-arg2 > 0 /\ arg2P7 > 0), cost: 1

Applied preprocessing
Original rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -2+arg1 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ -1+arg2 < 0), cost: 1
New rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ 1-arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ arg2 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ arg1 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
New rule:
f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1

Applied preprocessing
Original rule:
f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (1+arg1 > 0 /\ arg2 > 0 /\ arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
New rule:
f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1

Applied preprocessing
Original rule:
f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ 1+arg1 > 0 /\ -arg4+arg2P11 <= 0 /\ arg2 > 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ arg3 > 0 /\ -2+arg1P11-arg2 <= 0 /\ 1+arg4 > 0), cost: 1
New rule:
f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1

Applied preprocessing
Original rule:
f473_0_reverse_FieldAccess -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (-arg3P12+arg3 == 0 /\ -2+arg2 > 0 /\ arg4 > 0 /\ -2+arg1P12 > 0 /\ arg1 > 0 /\ arg4P12-arg4 < 0 /\ -2+arg1P12-arg1 <= 0 /\ arg3 > 0 /\ arg2P12 > 0), cost: 1
New rule:
f473_0_reverse_FieldAccess -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, (-2+arg2 > 0 /\ arg4 > 0 /\ -2+arg1P12 > 0 /\ -2+arg1P12-arg1 <= 0 /\ arg3 > 0 /\ -arg4P12+arg4 > 0 /\ arg2P12 > 0), cost: 1

Applied preprocessing
Original rule:
f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ x790 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ arg1 > 0 /\ x790-x780 < 0 /\ 1+x780 > 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
New rule:
f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1

Applied preprocessing
Original rule:
f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ 1+x860 > 0 /\ -arg1+arg2P14 <= 0 /\ x870-x860 < 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
New rule:
f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1

Simplified rules
Start location: __init
  16: f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg3P0-arg1 <= 0 /\ 1+x50 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
  17: f231_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
  18: f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=-1+arg4, arg3'=arg3P2, (-2+arg3P2 > 0 /\ arg4 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2 > 0 /\ -2+arg3P2-arg3 <= 0), cost: 1
  20: f231_0_createList_LE -> f266_0_createList_LE : arg2'=-2+arg1, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
  21: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ 1-arg4 > 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg2P5 > 0 /\ 2-arg1 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1
  19: f266_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg2, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg2 > 0 /\ -2+arg1P3 > 0 /\ arg1 > 0), cost: 1
  22: f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1-arg1+arg1P6 <= 0 /\ 1-arg2 > 0), cost: 1
  23: f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ 1-arg2 > 0 /\ arg2P7 > 0), cost: 1
  24: f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ 1-arg2 > 0), cost: 1
  25: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  28: f473_0_reverse_FieldAccess -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, (-2+arg2 > 0 /\ arg4 > 0 /\ -2+arg1P12 > 0 /\ -2+arg1P12-arg1 <= 0 /\ arg3 > 0 /\ -arg4P12+arg4 > 0 /\ arg2P12 > 0), cost: 1
  29: f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
  30: f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
  26: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  27: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1
  15: __init -> f1_0_main_Load : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, TRUE, cost: 1


Applied acceleration
Original rule:
f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=-1+arg4, arg3'=arg3P2, (-2+arg3P2 > 0 /\ arg4 > 0 /\ -arg2+arg2P2 <= 0 /\ arg2P2 > 0 /\ -2+arg3P2-arg3 <= 0), cost: 1
New rule:
f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=arg4-n, arg3'=arg3P2, (-1+n >= 0 /\ arg2-arg2P2 >= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ 1+arg4-n > 0 /\ 2-arg3P2+arg3 >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_CmEaNE.txt

Applied instantiation
Original rule:
f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=arg4-n, arg3'=arg3P2, (-1+n >= 0 /\ arg2-arg2P2 >= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ 1+arg4-n > 0 /\ 2-arg3P2+arg3 >= 0), cost: n
New rule:
f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg3'=arg3P2, (1 > 0 /\ -1+arg4 >= 0 /\ arg2-arg2P2 >= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ 2-arg3P2+arg3 >= 0), cost: arg4

Applied simplification
Original rule:
f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg3'=arg3P2, (1 > 0 /\ -1+arg4 >= 0 /\ arg2-arg2P2 >= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ 2-arg3P2+arg3 >= 0), cost: arg4
New rule:
f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg3'=arg3P2, (-1+arg4 >= 0 /\ arg2-arg2P2 >= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ 2-arg3P2+arg3 >= 0), cost: arg4

Applied deletion
Removed the following rules: 18

Applied acceleration
Original rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg2, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg2 > 0 /\ -2+arg1P3 > 0 /\ arg1 > 0), cost: 1
New rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=arg2-n0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1P3 > 0 /\ -1+n0 >= 0 /\ 1+arg2-n0 > 0 /\ arg1 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_AHfgPK.txt

Applied instantiation
Original rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=arg2-n0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1P3 > 0 /\ -1+n0 >= 0 /\ 1+arg2-n0 > 0 /\ arg1 > 0), cost: n0
New rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1 > 0 /\ -2+arg1P3 > 0 /\ arg1 > 0 /\ -1+arg2 >= 0), cost: arg2

Applied simplification
Original rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1 > 0 /\ -2+arg1P3 > 0 /\ arg1 > 0 /\ -1+arg2 >= 0), cost: arg2
New rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1P3 > 0 /\ arg1 > 0 /\ -1+arg2 >= 0), cost: arg2

Applied deletion
Removed the following rules: 19

Accelerated simple loops
Start location: __init
  16: f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg3P0-arg1 <= 0 /\ 1+x50 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
  17: f231_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
  20: f231_0_createList_LE -> f266_0_createList_LE : arg2'=-2+arg1, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
  21: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ 1-arg4 > 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg2P5 > 0 /\ 2-arg1 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1
  32: f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg3'=arg3P2, (-1+arg4 >= 0 /\ arg2-arg2P2 >= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ 2-arg3P2+arg3 >= 0), cost: arg4
  22: f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1-arg1+arg1P6 <= 0 /\ 1-arg2 > 0), cost: 1
  23: f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ 1-arg2 > 0 /\ arg2P7 > 0), cost: 1
  24: f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ 1-arg2 > 0), cost: 1
  34: f266_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1P3 > 0 /\ arg1 > 0 /\ -1+arg2 >= 0), cost: arg2
  25: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  28: f473_0_reverse_FieldAccess -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, (-2+arg2 > 0 /\ arg4 > 0 /\ -2+arg1P12 > 0 /\ -2+arg1P12-arg1 <= 0 /\ arg3 > 0 /\ -arg4P12+arg4 > 0 /\ arg2P12 > 0), cost: 1
  29: f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
  30: f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
  26: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  27: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1
  15: __init -> f1_0_main_Load : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg3P0-arg1 <= 0 /\ 1+x50 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
Second rule:
f231_0_createList_LE -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg3'=arg3P2, (-1+arg4 >= 0 /\ arg2-arg2P2 >= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ 2-arg3P2+arg3 >= 0), cost: arg4
New rule:
f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -3+arg3P2-arg1 <= 0 /\ -1+arg2P2-arg1 <= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -1+arg2 > 0 /\ 1-arg1 <= 0), cost: -1+x50

Applied deletion
Removed the following rules: 32

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1P3 > 0 /\ arg1 > 0 /\ -1+arg2 >= 0), cost: arg2
New rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: arg1

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-2+arg1, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1P3 > 0 /\ arg1 > 0 /\ -1+arg2 >= 0), cost: arg2
New rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: -1+arg1

Applied deletion
Removed the following rules: 34

Applied chaining
First rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ 1-arg2 > 0), cost: 1
Second rule:
f473_0_reverse_FieldAccess -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, (-2+arg2 > 0 /\ arg4 > 0 /\ -2+arg1P12 > 0 /\ -2+arg1P12-arg1 <= 0 /\ arg3 > 0 /\ -arg4P12+arg4 > 0 /\ arg2P12 > 0), cost: 1
New rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1+arg1P12-arg1 <= 0 /\ -2+arg1P12 > 0 /\ 1-arg2 > 0 /\ arg3P8 > 0 /\ 3-arg1 <= 0 /\ arg2P12 > 0), cost: 2

Applied deletion
Removed the following rules: 28

Chained accelerated rules with incoming rules
Start location: __init
  16: f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg3P0-arg1 <= 0 /\ 1+x50 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
  35: f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -3+arg3P2-arg1 <= 0 /\ -1+arg2P2-arg1 <= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -1+arg2 > 0 /\ 1-arg1 <= 0), cost: -1+x50
  17: f231_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
  20: f231_0_createList_LE -> f266_0_createList_LE : arg2'=-2+arg1, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
  21: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ 1-arg4 > 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg2P5 > 0 /\ 2-arg1 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1
  36: f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: arg1
  37: f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: -1+arg1
  22: f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1-arg1+arg1P6 <= 0 /\ 1-arg2 > 0), cost: 1
  23: f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ 1-arg2 > 0 /\ arg2P7 > 0), cost: 1
  24: f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ 1-arg2 > 0), cost: 1
  38: f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1+arg1P12-arg1 <= 0 /\ -2+arg1P12 > 0 /\ 1-arg2 > 0 /\ arg3P8 > 0 /\ 3-arg1 <= 0 /\ arg2P12 > 0), cost: 2
  25: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  29: f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
  30: f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
  26: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  27: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1
  15: __init -> f1_0_main_Load : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg3P0-arg1 <= 0 /\ 1+x50 > 0 /\ -1+arg2 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg2P0-arg1 <= 0), cost: 1
New rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -3+arg3P2-arg1 <= 0 /\ -1+arg2P2-arg1 <= 0 /\ -2+arg3P2 > 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -1+arg2 > 0 /\ 1-arg1 <= 0), cost: -1+x50
New rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ 1-arg1P15 <= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50

Applied simplification
Original rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ 1-arg1P15 <= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
New rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50

Applied deletion
Removed the following rules: 15 16 35

Eliminating location f266_0_createList_LE by chaining:

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1-arg1+arg1P6 <= 0 /\ 1-arg2 > 0), cost: 1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 2
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ arg3 > 0), cost: 2

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ 1-arg2 > 0 /\ arg2P7 > 0), cost: 1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ 2-arg1 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0 /\ arg2P7 > 0 /\ 1+arg1P7-arg1P1 <= 0), cost: 2

Applied simplification
Original rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ 2-arg1 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0 /\ arg2P7 > 0 /\ 1+arg1P7-arg1P1 <= 0), cost: 2
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ 2-arg1 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg3 > 0 /\ arg2P7 > 0 /\ 1+arg1P7-arg1P1 <= 0), cost: 2

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ 1-arg2 > 0), cost: 1
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 2-arg1 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 2-arg1 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 2
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 2-arg1 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 2

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-1+arg1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1-arg4 > 0 /\ -1+arg2 > 0 /\ arg1P1 > 0 /\ arg3 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1+arg1P12-arg1 <= 0 /\ -2+arg1P12 > 0 /\ 1-arg2 > 0 /\ arg3P8 > 0 /\ 3-arg1 <= 0 /\ arg2P12 > 0), cost: 2
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ 3-arg1P1 <= 0 /\ -2+arg1P12 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ arg3P8 > 0 /\ arg1P1 > 0 /\ arg3 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0), cost: 3

Applied simplification
Original rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ 3-arg1P1 <= 0 /\ -2+arg1P12 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ arg3P8 > 0 /\ arg1P1 > 0 /\ arg3 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0), cost: 3
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -2+arg1P12 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0), cost: 3

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-2+arg1, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1-arg1+arg1P6 <= 0 /\ 1-arg2 > 0), cost: 1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ -3+arg1P4-arg3 <= 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 2

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-2+arg1, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ 1-arg2 > 0 /\ arg2P7 > 0), cost: 1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -1+arg1P7 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ arg2P7 > 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0 /\ 1+arg1P7-arg1P4 <= 0), cost: 2

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-2+arg1, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ 1-arg2 > 0), cost: 1
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ 1-arg1P4+arg1P8 <= 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 2

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=-2+arg1, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 1
Second rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1+arg1P12-arg1 <= 0 /\ -2+arg1P12 > 0 /\ 1-arg2 > 0 /\ arg3P8 > 0 /\ 3-arg1 <= 0 /\ arg2P12 > 0), cost: 2
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-arg1P4 <= 0 /\ 1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -2+arg1P12 > 0 /\ arg3P8 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1P12-arg1P4 <= 0 /\ -1+arg1 > 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0), cost: 3

Applied simplification
Original rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-arg1P4 <= 0 /\ 1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -2+arg1P12 > 0 /\ arg3P8 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1P12-arg1P4 <= 0 /\ -1+arg1 > 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0), cost: 3
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -2+arg1P12 > 0 /\ arg3P8 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1P12-arg1P4 <= 0 /\ -1+arg1 > 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0), cost: 3

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: arg1
Second rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1-arg1+arg1P6 <= 0 /\ 1-arg2 > 0), cost: 1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg1 >= 0 /\ 1 > 0 /\ 1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1-arg1P3+arg1P6 <= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1

Applied simplification
Original rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg1 >= 0 /\ 1 > 0 /\ 1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1-arg1P3+arg1P6 <= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg1 >= 0 /\ 1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1-arg1P3+arg1P6 <= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: arg1
Second rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ 1-arg2 > 0 /\ arg2P7 > 0), cost: 1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 >= 0 /\ 1 > 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg3 > 0 /\ arg2P7 > 0), cost: 1+arg1

Applied simplification
Original rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 >= 0 /\ 1 > 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg3 > 0 /\ arg2P7 > 0), cost: 1+arg1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg3 > 0 /\ arg2P7 > 0), cost: 1+arg1

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: arg1
Second rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ 1-arg2 > 0), cost: 1
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -2+arg1 >= 0 /\ 1 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1

Applied simplification
Original rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -2+arg1 >= 0 /\ 1 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -2+arg1 >= 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: arg1
Second rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1+arg1P12-arg1 <= 0 /\ -2+arg1P12 > 0 /\ 1-arg2 > 0 /\ arg3P8 > 0 /\ 3-arg1 <= 0 /\ arg2P12 > 0), cost: 2
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-2+arg1 >= 0 /\ 1 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ -2+arg1P12 > 0 /\ -1+arg2 > 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 2+arg1

Applied simplification
Original rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-2+arg1 >= 0 /\ 1 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -2+arg1P3 > 0 /\ -2+arg1P12 > 0 /\ -1+arg2 > 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 2+arg1
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-2+arg1 >= 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -2+arg1P12 > 0 /\ -1+arg2 > 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 2+arg1

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: -1+arg1
Second rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1-arg1+arg1P6 <= 0 /\ 1-arg2 > 0), cost: 1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1 > 0 /\ 1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1-arg1P3+arg1P6 <= 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P6 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: arg1

Applied simplification
Original rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1 > 0 /\ 1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1-arg1P3+arg1P6 <= 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P6 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: arg1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1-arg1P3+arg1P6 <= 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P6 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: arg1

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: -1+arg1
Second rule:
f266_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1+arg1P7-arg1 <= 0 /\ -1+arg1P7 > 0 /\ 1-arg2 > 0 /\ arg2P7 > 0), cost: 1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1 > 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0 /\ -1+arg1P7 > 0 /\ arg2P7 > 0), cost: arg1

Applied simplification
Original rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1 > 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0 /\ -1+arg1P7 > 0 /\ arg2P7 > 0), cost: arg1
New rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -3+arg1 >= 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0 /\ -1+arg1P7 > 0 /\ arg2P7 > 0), cost: arg1

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: -1+arg1
Second rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P8-arg1 <= 0 /\ 1-arg2 > 0), cost: 1
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 1 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -2+arg3 >= 0), cost: arg1

Applied simplification
Original rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 1 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -2+arg3 >= 0), cost: arg1
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg2 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -2+arg3 >= 0), cost: arg1

Applied chaining
First rule:
f231_0_createList_LE -> f266_0_createList_LE : arg2'=0, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: -1+arg1
Second rule:
f266_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1+arg1P12-arg1 <= 0 /\ -2+arg1P12 > 0 /\ 1-arg2 > 0 /\ arg3P8 > 0 /\ 3-arg1 <= 0 /\ arg2P12 > 0), cost: 2
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg1P12 > 0 /\ -2+arg3 >= 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 1+arg1

Applied simplification
Original rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -2+arg2 >= 0 /\ -2+arg1P12 > 0 /\ -2+arg3 >= 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 1+arg1
New rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg2 >= 0 /\ -2+arg1P12 > 0 /\ -2+arg3 >= 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 1+arg1

Applied deletion
Removed the following rules: 17 20 22 23 24 36 37 38

Eliminated locations on tree-shaped paths
Start location: __init
  21: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ 1-arg4 > 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg2P5 > 0 /\ 2-arg1 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1
  41: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ arg3 > 0), cost: 2
  42: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ 2-arg1 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg3 > 0 /\ arg2P7 > 0 /\ 1+arg1P7-arg1P1 <= 0), cost: 2
  43: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 2-arg1 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 2
  44: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -2+arg1P12 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0), cost: 3
  45: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ -3+arg1P4-arg3 <= 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 2
  46: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -1+arg1P7 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ arg2P7 > 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0 /\ 1+arg1P7-arg1P4 <= 0), cost: 2
  47: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ 1-arg1P4+arg1P8 <= 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 2
  48: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -2+arg1P12 > 0 /\ arg3P8 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1P12-arg1P4 <= 0 /\ -1+arg1 > 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0), cost: 3
  49: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-2+arg1 >= 0 /\ 1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1-arg1P3+arg1P6 <= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1
  50: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg3 > 0 /\ arg2P7 > 0), cost: 1+arg1
  51: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -2+arg1 >= 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1
  52: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-2+arg1 >= 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -2+arg1P12 > 0 /\ -1+arg2 > 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 2+arg1
  53: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1-arg1P3+arg1P6 <= 0 /\ -3+arg1 >= 0 /\ -2+arg1P3 > 0 /\ -1+arg1P6 > 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0), cost: arg1
  54: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -3+arg1 >= 0 /\ -2+arg2 >= 0 /\ -2+arg3 >= 0 /\ -1+arg1P7 > 0 /\ arg2P7 > 0), cost: arg1
  55: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg2 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -2+arg3 >= 0), cost: arg1
  56: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -3+arg1 >= 0 /\ -2+arg2 >= 0 /\ -2+arg1P12 > 0 /\ -2+arg3 >= 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 1+arg1
  25: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  29: f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
  30: f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
  26: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  27: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1
  39: __init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
  40: __init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50


Applied pruning (of leafs and parallel rules):
Start location: __init
  21: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ 1-arg4 > 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg2P5 > 0 /\ 2-arg1 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1
  41: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ arg3 > 0), cost: 2
  43: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 2-arg1 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 2
  44: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -2+arg1P12 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0), cost: 3
  45: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ -3+arg1P4-arg3 <= 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 2
  46: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -1+arg1P7 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ arg2P7 > 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0 /\ 1+arg1P7-arg1P4 <= 0), cost: 2
  48: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -2+arg1P12 > 0 /\ arg3P8 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1P12-arg1P4 <= 0 /\ -1+arg1 > 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0), cost: 3
  50: f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg3 > 0 /\ arg2P7 > 0), cost: 1+arg1
  51: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -2+arg1 >= 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1
  52: f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-2+arg1 >= 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -2+arg1P12 > 0 /\ -1+arg2 > 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 2+arg1
  25: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  29: f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
  30: f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
  26: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  27: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1
  39: __init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
  40: __init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50


Eliminating location f231_0_createList_LE by chaining:

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ 1-arg4 > 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg2P5 > 0 /\ 2-arg1 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1+arg1P0 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 3

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1+arg1P0 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 3
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1+arg1P0 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 3

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ arg3 > 0), cost: 2
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 2-arg1 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -2+arg1P12 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0), cost: 3
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ -3+arg1P4-arg3 <= 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 2
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -1+arg1P7 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ arg2P7 > 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0 /\ 1+arg1P7-arg1P4 <= 0), cost: 2
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2P0 > 0 /\ arg2P7 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0 > 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2P0 > 0 /\ arg2P7 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0 > 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ arg2P7 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -2+arg1P12 > 0 /\ arg3P8 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1P12-arg1P4 <= 0 /\ -1+arg1 > 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0), cost: 3
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -1+arg1P12-arg1P4 <= 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 5

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -1+arg1P12-arg1P4 <= 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 5
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ arg3P8 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -1+arg1P12-arg1P4 <= 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 5

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg3 > 0 /\ arg2P7 > 0), cost: 1+arg1
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2P0 > 0 /\ arg2P7 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2P0 > 0 /\ arg2P7 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2P0 > 0 /\ arg2P7 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -2+arg1 >= 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P0, arg4'=-2+x50, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 2
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-2+arg1 >= 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -2+arg1P12 > 0 /\ -1+arg2 > 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 2+arg1
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ arg3P0 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg2+arg2P5 <= 0 /\ 1-arg4 > 0 /\ -arg2+arg1P5 <= 0 /\ arg1P5-arg3 <= 0 /\ -1+arg2P5 > 0 /\ 2-arg1 > 0 /\ -1+arg1P5 > 0 /\ arg2P5-arg3 <= 0), cost: 1
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (1 > 0 /\ -arg3P2+arg1P5 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ arg2P5-arg2P2 <= 0 /\ -1+arg2P15 > 0 /\ -arg3P2+arg2P5 <= 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -1+arg2P5 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -arg2P2+arg1P5 <= 0 /\ 2-arg1P0 > 0), cost: 1+x50

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (1 > 0 /\ -arg3P2+arg1P5 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ arg2P5-arg2P2 <= 0 /\ -1+arg2P15 > 0 /\ -arg3P2+arg2P5 <= 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -1+arg2P5 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -arg2P2+arg1P5 <= 0 /\ 2-arg1P0 > 0), cost: 1+x50
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg3P2+arg1P5 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ arg2P5-arg2P2 <= 0 /\ -1+arg2P15 > 0 /\ -arg3P2+arg2P5 <= 0 /\ -1+arg2P5 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -arg2P2+arg1P5 <= 0 /\ 2-arg1P0 > 0), cost: 1+x50

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ arg3 > 0), cost: 2
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1 > 0 /\ 1+arg2P6 > 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1 > 0 /\ 1+arg2P6 > 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 2-arg1 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 1 > 0 /\ -1+arg1P8 > 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 1 > 0 /\ -1+arg1P8 > 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -2+arg1P12 > 0 /\ 2-arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0), cost: 3
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1 > 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ arg2P12 > 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 3+x50

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1 > 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ arg2P12 > 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ arg2P12 > 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 3+x50

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1-arg4 > 0 /\ -1+arg1P6 > 0 /\ -3+arg1P4-arg3 <= 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0), cost: 2
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -1+arg1P0 > 0 /\ -3+x50 >= 0 /\ -3-arg3P2+arg1P4 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 2+x50

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -1+arg1P0 > 0 /\ -3+x50 >= 0 /\ -3-arg3P2+arg1P4 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 2+x50
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -3+x50 >= 0 /\ -3-arg3P2+arg1P4 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 2+x50

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -1+arg1P7 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ arg2P7 > 0 /\ -1+arg1 > 0 /\ -4+arg1P4 > 0 /\ 1+arg1P7-arg1P4 <= 0), cost: 2
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -1+arg1P0 > 0 /\ -3+x50 >= 0 /\ -1+arg1P7 > 0 /\ -3-arg3P2+arg1P4 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ arg2P7 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 2+x50

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -1+arg1P0 > 0 /\ -3+x50 >= 0 /\ -1+arg1P7 > 0 /\ -3-arg3P2+arg1P4 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ arg2P7 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 2+x50
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -3+x50 >= 0 /\ -1+arg1P7 > 0 /\ -3-arg3P2+arg1P4 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ arg2P7 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 2+x50

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1-arg4 > 0 /\ -3+arg1P4-arg3 <= 0 /\ -2+arg1P12 > 0 /\ arg3P8 > 0 /\ 3-arg1 > 0 /\ -3-arg2+arg1P4 <= 0 /\ -1+arg1P12-arg1P4 <= 0 /\ -1+arg1 > 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0), cost: 3
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -1+arg1P0 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ -3-arg3P2+arg1P4 <= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -1+arg1P12-arg1P4 <= 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 3+x50

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -1+arg1P0 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ -3-arg3P2+arg1P4 <= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -1+arg1P12-arg1P4 <= 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 3+x50
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ -3-arg3P2+arg1P4 <= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -1+arg1P12-arg1P4 <= 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 3+x50

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 >= 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg1P7 > 0 /\ -1+arg2 > 0 /\ arg3 > 0 /\ arg2P7 > 0), cost: 1+arg1
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1 > 0 /\ arg3P2 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ -2+arg1P0 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -1+arg1P7 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ arg2P7 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0), cost: 1+arg1P0+x50

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1 > 0 /\ arg3P2 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ -2+arg1P0 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -1+arg1P7 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ arg2P7 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0), cost: 1+arg1P0+x50
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg1P3+arg1P7 <= 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -3+x50 >= 0 /\ -1+arg1P7 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ arg2P7 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0), cost: 1+arg1P0+x50

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -2+arg1 >= 0 /\ -1+arg1P8 > 0 /\ 1-arg4 > 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -1+arg2 > 0 /\ arg3 > 0), cost: 1+arg1
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 1 > 0 /\ -1+arg1P8 > 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0), cost: 1+arg1P0+x50

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 1 > 0 /\ -1+arg1P8 > 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0), cost: 1+arg1P0+x50
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0), cost: 1+arg1P0+x50

Applied chaining
First rule:
__init -> f231_0_createList_LE : arg2'=arg2P2, arg4'=0, arg1'=arg1P0, arg3'=arg3P2, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ arg2P2 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0), cost: x50
Second rule:
f231_0_createList_LE -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-2+arg1 >= 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1-arg4 > 0 /\ -2+arg1P12 > 0 /\ -1+arg2 > 0 /\ arg3P8 > 0 /\ arg3 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0), cost: 2+arg1
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ -2+arg1P0 >= 0 /\ arg2P2 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg2P2 > 0), cost: 2+arg1P0+x50

Applied simplification
Original rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ arg3P2 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P15 >= 0 /\ -2+arg1P0 >= 0 /\ arg2P2 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg2P2 > 0), cost: 2+arg1P0+x50
New rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1-arg1P3+arg1P12 <= 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg2P2 > 0), cost: 2+arg1P0+x50

Applied deletion
Removed the following rules: 21 39 40 41 43 44 45 46 48 50 51 52

Eliminated locations on tree-shaped paths
Start location: __init
  25: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  29: f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
  30: f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
  26: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  27: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1
  57: __init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1+arg1P0 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 3
  58: __init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
  59: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
  60: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5
  61: __init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4
  62: __init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ arg2P7 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4
  63: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ arg3P8 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -1+arg1P12-arg1P4 <= 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 5
  64: __init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2P0 > 0 /\ arg2P7 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
  65: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
  66: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0
  67: __init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg3P2+arg1P5 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ arg2P5-arg2P2 <= 0 /\ -1+arg2P15 > 0 /\ -arg3P2+arg2P5 <= 0 /\ -1+arg2P5 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -arg2P2+arg1P5 <= 0 /\ 2-arg1P0 > 0), cost: 1+x50
  68: __init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50
  69: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50
  70: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ arg2P12 > 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
  71: __init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ -1+arg1P6 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -3+x50 >= 0 /\ -3-arg3P2+arg1P4 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -1-arg1P4+arg1P6 <= 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 2+x50
  72: __init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -3+x50 >= 0 /\ -1+arg1P7 > 0 /\ -3-arg3P2+arg1P4 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ arg2P7 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 2+x50
  73: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ -3-arg3P2+arg1P4 <= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ 3-arg1P0 > 0 /\ -1+arg1P12-arg1P4 <= 0 /\ arg2P12 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg2P2 <= 0), cost: 3+x50
  74: __init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg1P3+arg1P7 <= 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -3+x50 >= 0 /\ -1+arg1P7 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ arg2P7 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0), cost: 1+arg1P0+x50
  75: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0), cost: 1+arg1P0+x50
  76: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-1-arg1P3+arg1P12 <= 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ -3+x50 >= 0 /\ arg3P8 > 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg2P2 > 0), cost: 2+arg1P0+x50


Applied pruning (of leafs and parallel rules):
Start location: __init
  25: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  29: f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
  30: f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
  26: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  27: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1
  57: __init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1+arg1P0 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 3
  58: __init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
  59: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
  60: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5
  62: __init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ arg2P7 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4
  64: __init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2P0 > 0 /\ arg2P7 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
  65: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
  66: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0
  67: __init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg3P2+arg1P5 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ arg2P5-arg2P2 <= 0 /\ -1+arg2P15 > 0 /\ -arg3P2+arg2P5 <= 0 /\ -1+arg2P5 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -arg2P2+arg1P5 <= 0 /\ 2-arg1P0 > 0), cost: 1+x50
  69: __init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50


Eliminating location f473_0_reverse_FieldAccess by chaining:

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
Second rule:
f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P8 > 0 /\ 3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5

Applied simplification
Original rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P8 > 0 /\ 3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
Second rule:
f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2-arg1P8+arg1P14 <= 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2-arg1P8+arg1P14 <= 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2-arg1P8+arg1P14 <= 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5
Second rule:
f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6

Applied simplification
Original rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ arg2P12 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5
Second rule:
f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -2-arg1P12+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -arg1P12+arg2P14 <= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -arg2P12+arg1P14 <= 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ arg2P12 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 6

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -2-arg1P12+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -arg1P12+arg2P14 <= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -arg2P12+arg1P14 <= 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ arg2P12 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 6
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -2-arg1P12+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -arg1P12+arg2P14 <= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -arg2P12+arg1P14 <= 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 6

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
Second rule:
f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P8 > 0 /\ 3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 4+arg1P0

Applied simplification
Original rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P8 > 0 /\ 3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 4+arg1P0
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 4+arg1P0

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
Second rule:
f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -2-arg1P8+arg1P14 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg2P8 > 0 /\ 3-x50 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -2-arg1P8+arg1P14 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -2-arg1P8+arg1P14 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0
Second rule:
f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0

Applied simplification
Original rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0
Second rule:
f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ -2-arg1P12+arg1P14 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -arg1P12+arg2P14 <= 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -arg2P12+arg1P14 <= 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 5+arg1P0

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ -2-arg1P12+arg1P14 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -arg1P12+arg2P14 <= 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -arg2P12+arg1P14 <= 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ arg2P12 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 5+arg1P0
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ -2-arg1P12+arg1P14 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -arg1P12+arg2P14 <= 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -arg2P12+arg1P14 <= 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 5+arg1P0

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50
Second rule:
f473_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P13 > 0 /\ 1+arg1P13 > 0 /\ -2+arg2 > 0 /\ -2+arg3P13-arg1 <= 0 /\ -2+arg3P13 > 0 /\ 1+arg4P13 > 0), cost: 1
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P8 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50

Applied simplification
Original rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg2P8 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50

Applied chaining
First rule:
__init -> f473_0_reverse_FieldAccess : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 2+x50
Second rule:
f473_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-2-arg1+arg1P14 <= 0 /\ -arg1+arg2P14 <= 0 /\ -arg2+arg1P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0), cost: 1
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2-arg1P8+arg1P14 <= 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -arg1P8+arg2P14 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 3+x50

Applied simplification
Original rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg2P8 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2-arg1P8+arg1P14 <= 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -arg1P8+arg2P14 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
New rule:
__init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2-arg1P8+arg1P14 <= 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -arg1P8+arg2P14 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 3+x50

Applied deletion
Removed the following rules: 29 30 59 60 65 66 69

Eliminated locations on tree-shaped paths
Start location: __init
  25: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  26: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  27: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1
  57: __init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1+arg1P0 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 3
  58: __init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
  62: __init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -1+arg1P0 > 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ arg2P7 > 0 /\ -3-arg2P0+arg1P4 <= 0 /\ 3-arg1P0 > 0 /\ -4+arg1P4 > 0 /\ -3+arg1P4-arg3P0 <= 0 /\ 1+arg1P7-arg1P4 <= 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4
  64: __init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2P0 > 0 /\ arg2P7 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
  67: __init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg3P2+arg1P5 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ arg2P5-arg2P2 <= 0 /\ -1+arg2P15 > 0 /\ -arg3P2+arg2P5 <= 0 /\ -1+arg2P5 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -arg2P2+arg1P5 <= 0 /\ 2-arg1P0 > 0), cost: 1+x50
  77: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
  78: __init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2-arg1P8+arg1P14 <= 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5
  79: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
  80: __init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -2-arg1P12+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -arg1P12+arg2P14 <= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -arg2P12+arg1P14 <= 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 6
  81: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 4+arg1P0
  82: __init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ -2-arg1P8+arg1P14 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 4+arg1P0
  83: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
  84: __init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ -2-arg1P12+arg1P14 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -arg1P12+arg2P14 <= 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -arg2P12+arg1P14 <= 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 5+arg1P0
  85: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
  86: __init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -2-arg1P8+arg1P14 <= 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -arg1P8+arg2P14 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg2P2 > 0 /\ 2-arg1P0 > 0), cost: 3+x50


Applied pruning (of leafs and parallel rules):
Start location: __init
  25: f458_0_reverse_NULL -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg2+arg1P9 <= 0 /\ 1-arg2+arg4P9 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 1
  26: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg2P10-arg1 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ 1+arg2P10 > 0 /\ arg2P10-arg4 <= 0), cost: 1
  27: f488_0_reverse_FieldAccess -> f458_0_reverse_NULL : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1P11 > 0 /\ -arg4+arg2P11 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ 1+arg2P11 > 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0), cost: 1
  57: __init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1+arg1P0 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 3
  58: __init -> f458_0_reverse_NULL : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (3-x50 > 0 /\ 1+arg2P6 > 0 /\ 1+arg1P0 > 0 /\ -1+arg1P6 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -1-arg1P1+arg1P6 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 4
  64: __init -> f458_0_reverse_NULL : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (3-x50 > 0 /\ 1-arg1P3+arg1P7 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ -1+arg2P0 > 0 /\ arg2P7 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0), cost: 3+arg1P0
  67: __init -> f458_0_reverse_NULL : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg3P2+arg1P5 <= 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ arg2P5-arg2P2 <= 0 /\ -1+arg2P15 > 0 /\ -arg3P2+arg2P5 <= 0 /\ -1+arg2P5 > 0 /\ -3+x50 >= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -arg2P2+arg1P5 <= 0 /\ 2-arg1P0 > 0), cost: 1+x50
  77: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
  78: __init -> f458_0_reverse_NULL : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (3-x50 > 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2-arg1P8+arg1P14 <= 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ arg2P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 2-arg1P0 > 0), cost: 5
  79: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
  81: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 4+arg1P0
  83: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
  85: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50


Eliminated location f458_0_reverse_NULL
Start location: __init
  87: f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg2P10+arg1P9 <= 0 /\ arg2P10-arg1 <= 0 /\ arg2P9 > 0 /\ 1-arg2P10+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg2P10 <= 0 /\ -arg1P10+arg3P9 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ arg2P10-arg4 <= 0 /\ arg3P9 > 0), cost: 2
  88: f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-2+arg1P11 > 0 /\ 1+arg4P9 > 0 /\ 1-arg2P11+arg1P9 <= 0 /\ -arg4+arg2P11 <= 0 /\ -arg1P11+arg3P9 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ 1+arg4P9-arg2P11 <= 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0 /\ arg2P9-arg2P11 <= 0 /\ arg3P9 > 0), cost: 2
  77: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
  79: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
  81: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ 1-arg1P3+arg1P8 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 4+arg1P0
  83: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
  85: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
  89: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1-arg2P5+arg4P9 <= 0 /\ -arg1P5+arg3P9 <= 0 /\ 1+arg1P0 > 0 /\ arg2P9 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+arg1P9 > 0 /\ 1-arg2P5+arg1P9 <= 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -arg2P5+arg2P9 <= 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ arg3P9 > 0 /\ 2-arg1P0 > 0), cost: 4
  90: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 3-x50 > 0 /\ 1+arg1P0 > 0 /\ arg2P9 > 0 /\ -1+arg1P6 > 0 /\ -arg1P6+arg3P9 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg2P6 <= 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ 1-arg2P6+arg4P9 <= 0 /\ -1-arg1P1+arg1P6 <= 0 /\ 1-arg2P6+arg1P9 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ arg3P9 > 0 /\ 2-arg1P0 > 0), cost: 5
  91: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 3-x50 > 0 /\ arg2P9-arg2P7 <= 0 /\ 1-arg1P3+arg1P7 <= 0 /\ arg2P9 > 0 /\ 1+arg4P9-arg2P7 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+arg1P9 > 0 /\ -2+arg1P0 >= 0 /\ 1+x50 > 0 /\ -1+arg1P7 > 0 /\ 1+arg1P9-arg2P7 <= 0 /\ -1+arg2P0 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ -arg1P7+arg3P9 <= 0 /\ arg3P9 > 0), cost: 4+arg1P0
  92: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg2P5+arg4P9 <= 0 /\ -arg3P2+arg1P5 <= 0 /\ -arg1P5+arg3P9 <= 0 /\ 1+arg1P0 > 0 /\ arg2P9 > 0 /\ -2+arg3P2 > 0 /\ arg2P5-arg2P2 <= 0 /\ -1+arg2P15 > 0 /\ -arg3P2+arg2P5 <= 0 /\ 1+arg1P9 > 0 /\ 1-arg2P5+arg1P9 <= 0 /\ -1+arg2P5 > 0 /\ -3+x50 >= 0 /\ -arg2P5+arg2P9 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg1P5 > 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -arg2P2+arg1P5 <= 0 /\ arg3P9 > 0 /\ 2-arg1P0 > 0), cost: 2+x50
  93: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 3-x50 > 0 /\ arg2P9-arg2P14 <= 0 /\ -1+arg1P8 > 0 /\ -arg2P8+arg1P14 <= 0 /\ 1+arg1P0 > 0 /\ arg2P9 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+arg1P9 > 0 /\ 1+arg4P9-arg2P14 <= 0 /\ 1+arg1P9-arg2P14 <= 0 /\ -2-arg1P8+arg1P14 <= 0 /\ -arg1P14+arg3P9 <= 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -arg1P8+arg2P14 <= 0 /\ -2+arg1P14 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ arg3P9 > 0 /\ 2-arg1P0 > 0), cost: 6


Applied pruning (of leafs and parallel rules):
Start location: __init
  87: f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg2P10+arg1P9 <= 0 /\ arg2P10-arg1 <= 0 /\ arg2P9 > 0 /\ 1-arg2P10+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg2P10 <= 0 /\ -arg1P10+arg3P9 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ arg2P10-arg4 <= 0 /\ arg3P9 > 0), cost: 2
  88: f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-2+arg1P11 > 0 /\ 1+arg4P9 > 0 /\ 1-arg2P11+arg1P9 <= 0 /\ -arg4+arg2P11 <= 0 /\ -arg1P11+arg3P9 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ 1+arg4P9-arg2P11 <= 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0 /\ arg2P9-arg2P11 <= 0 /\ arg3P9 > 0), cost: 2
  77: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
  79: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
  83: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
  85: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
  89: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1-arg2P5+arg4P9 <= 0 /\ -arg1P5+arg3P9 <= 0 /\ 1+arg1P0 > 0 /\ arg2P9 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+arg1P9 > 0 /\ 1-arg2P5+arg1P9 <= 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -arg2P5+arg2P9 <= 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ arg3P9 > 0 /\ 2-arg1P0 > 0), cost: 4


Applied simplification
Original rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg2P10+arg1P9 <= 0 /\ arg2P10-arg1 <= 0 /\ arg2P9 > 0 /\ 1-arg2P10+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg2P10 <= 0 /\ -arg1P10+arg3P9 <= 0 /\ 1-arg2+arg2P10 <= 0 /\ -2+arg1P10 > 0 /\ arg3 > 0 /\ arg2P10-arg4 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ arg3 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2

Applied simplification
Original rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-2+arg1P11 > 0 /\ 1+arg4P9 > 0 /\ 1-arg2P11+arg1P9 <= 0 /\ -arg4+arg2P11 <= 0 /\ -arg1P11+arg3P9 <= 0 /\ -2+arg1P11-arg3 <= 0 /\ 1-arg2+arg2P11 <= 0 /\ -3+arg1P11-arg4 <= 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ 1+arg4P9-arg2P11 <= 0 /\ -3+arg1P11-arg1 <= 0 /\ 1+arg2P11-arg3 <= 0 /\ -arg1+arg2P11 <= 0 /\ -2+arg1P11-arg2 <= 0 /\ arg2P9-arg2P11 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-3-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 1+arg2P9-arg3 <= 0 /\ 2+arg4P9-arg3 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ -2-arg3+arg3P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ -3-arg4+arg3P9 <= 0 /\ -2-arg2+arg3P9 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ 2+arg1P9-arg3 <= 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2

Simplified simple loops
Start location: __init
  94: f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ arg3 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
  95: f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-3-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 1+arg2P9-arg3 <= 0 /\ 2+arg4P9-arg3 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ -2-arg3+arg3P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ -3-arg4+arg3P9 <= 0 /\ -2-arg2+arg3P9 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ 2+arg1P9-arg3 <= 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
  77: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
  79: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
  83: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
  85: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
  89: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1-arg2P5+arg4P9 <= 0 /\ -arg1P5+arg3P9 <= 0 /\ 1+arg1P0 > 0 /\ arg2P9 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+arg1P9 > 0 /\ 1-arg2P5+arg1P9 <= 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -arg2P5+arg2P9 <= 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ arg3P9 > 0 /\ 2-arg1P0 > 0), cost: 4


Accelerated simple loops
Start location: __init
  94: f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ arg3 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
  95: f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-3-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 1+arg2P9-arg3 <= 0 /\ 2+arg4P9-arg3 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ -2-arg3+arg3P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ -3-arg4+arg3P9 <= 0 /\ -2-arg2+arg3P9 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ 2+arg1P9-arg3 <= 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
  77: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
  79: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
  83: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
  85: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
  89: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1-arg2P5+arg4P9 <= 0 /\ -arg1P5+arg3P9 <= 0 /\ 1+arg1P0 > 0 /\ arg2P9 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+arg1P9 > 0 /\ 1-arg2P5+arg1P9 <= 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -arg2P5+arg2P9 <= 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ arg3P9 > 0 /\ 2-arg1P0 > 0), cost: 4


Applied chaining
First rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
Second rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ arg3 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ arg3P9 > 0), cost: 7

Applied chaining
First rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
Second rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ arg3 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ arg3P9 > 0), cost: 8

Applied chaining
First rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
Second rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ arg3 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -2+arg1P0 >= 0 /\ arg3P9 > 0), cost: 7+arg1P0

Applied chaining
First rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
Second rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ arg3 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -3+x50 >= 0 /\ arg3P9 > 0), cost: 5+x50

Applied chaining
First rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
Second rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-3-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 1+arg2P9-arg3 <= 0 /\ 2+arg4P9-arg3 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ -2-arg3+arg3P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ -3-arg4+arg3P9 <= 0 /\ -2-arg2+arg3P9 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ 2+arg1P9-arg3 <= 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ arg3P9 > 0), cost: 7

Applied chaining
First rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
Second rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-3-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 1+arg2P9-arg3 <= 0 /\ 2+arg4P9-arg3 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ -2-arg3+arg3P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ -3-arg4+arg3P9 <= 0 /\ -2-arg2+arg3P9 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ 2+arg1P9-arg3 <= 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ arg3P9 > 0), cost: 8

Applied chaining
First rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
Second rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-3-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 1+arg2P9-arg3 <= 0 /\ 2+arg4P9-arg3 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ -2-arg3+arg3P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ -3-arg4+arg3P9 <= 0 /\ -2-arg2+arg3P9 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ 2+arg1P9-arg3 <= 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -2+arg1P0 >= 0 /\ arg3P9 > 0), cost: 7+arg1P0

Applied chaining
First rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
Second rule:
f488_0_reverse_FieldAccess -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-3-arg1+arg3P9 <= 0 /\ 1+arg4P9 > 0 /\ 1-arg4+arg1P9 <= 0 /\ 1+arg2P9-arg3 <= 0 /\ 2+arg4P9-arg3 <= 0 /\ 2-arg2+arg4P9 <= 0 /\ -2-arg3+arg3P9 <= 0 /\ 2-arg2+arg1P9 <= 0 /\ arg2P9 > 0 /\ 1-arg4+arg4P9 <= 0 /\ 1+arg1P9 > 0 /\ arg2P9-arg4 <= 0 /\ -3-arg4+arg3P9 <= 0 /\ -2-arg2+arg3P9 <= 0 /\ arg2P9-arg1 <= 0 /\ 1-arg1+arg1P9 <= 0 /\ 1-arg1+arg4P9 <= 0 /\ 2+arg1P9-arg3 <= 0 /\ 1-arg2+arg2P9 <= 0 /\ arg3P9 > 0), cost: 2
New rule:
__init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -3+x50 >= 0 /\ arg3P9 > 0), cost: 5+x50

Applied deletion
Removed the following rules: 94 95

Chained accelerated rules with incoming rules
Start location: __init
  77: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (3-x50 > 0 /\ -2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+x50 > 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -1+arg2P0 > 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 5
  79: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ -3+arg1P1 >= 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -1+arg1P12-arg1P1 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 6
  83: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2-arg1P12+arg3P13 <= 0 /\ 3-x50 > 0 /\ arg2P13 > 0 /\ -1-arg1P3+arg1P12 <= 0 /\ 1+arg1P13 > 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ -2+arg1P0 >= 0 /\ -2+arg1P12 > 0 /\ 1+x50 > 0 /\ -1+arg2P0 > 0 /\ arg3P8 > 0 /\ -2+arg2P12 > 0 /\ -2+arg3P13 > 0 /\ 3-arg1P3 <= 0 /\ -1+arg3P0 > 0 /\ -1+arg3P0-arg1P15 <= 0 /\ 1+arg4P13 > 0), cost: 5+arg1P0
  85: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg2P8 > 0 /\ arg2P13 > 0 /\ -1+arg1P8 > 0 /\ 1+arg1P13 > 0 /\ 1+arg1P0 > 0 /\ -2+arg3P2 > 0 /\ -1+arg2P15 > 0 /\ -3+x50 >= 0 /\ 1+arg1P8-arg1P1 <= 0 /\ -2-arg1P8+arg3P13 <= 0 /\ -3+arg3P2-arg1P15 <= 0 /\ -1+arg2P2-arg1P15 <= 0 /\ -2+arg3P13 > 0 /\ -1+arg2P2 > 0 /\ 1+arg4P13 > 0 /\ 2-arg1P0 > 0), cost: 3+x50
  89: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ 3-x50 > 0 /\ -arg2P0+arg2P5 <= 0 /\ 1-arg2P5+arg4P9 <= 0 /\ -arg1P5+arg3P9 <= 0 /\ 1+arg1P0 > 0 /\ arg2P9 > 0 /\ -arg2P0+arg1P5 <= 0 /\ -1+arg2P0-arg1P15 <= 0 /\ -1+arg2P15 > 0 /\ 1+arg1P9 > 0 /\ 1-arg2P5+arg1P9 <= 0 /\ arg2P5-arg3P0 <= 0 /\ -1+arg2P5 > 0 /\ 1+x50 > 0 /\ -arg2P5+arg2P9 <= 0 /\ -1+arg1P5 > 0 /\ -arg3P0+arg1P5 <= 0 /\ -1+arg3P0-arg1P15 <= 0 /\ arg3P9 > 0 /\ 2-arg1P0 > 0), cost: 4
  96: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ arg3P9 > 0), cost: 7
  97: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ arg3P9 > 0), cost: 8
  98: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -2+arg1P0 >= 0 /\ arg3P9 > 0), cost: 7+arg1P0
  99: __init -> f488_0_reverse_FieldAccess : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg4P9 > 0 /\ arg2P9 > 0 /\ 1+arg1P9 > 0 /\ -3+x50 >= 0 /\ arg3P9 > 0), cost: 5+x50


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

