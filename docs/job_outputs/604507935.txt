NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
   0: f1_0_main_Load -> f686_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0), cost: 1
   2: f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-arg2 == 0 /\ -arg3p3 == 0 /\ -arg5p3 == 0 /\ 1+arg1p3-arg1 <= 0 /\ -arg2p3 == 0 /\ 1+arg1p3 > 0 /\ -arg4p3 == 0 /\ arg1 > 0), cost: 1
   3: f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (-arg2p4 == 0 /\ 1+arg1p4 > 0 /\ 1+arg1p4-arg1 <= 0 /\ arg2 > 0 /\ -arg4p4+arg2 == 0 /\ -arg3p4 == 0 /\ 1-arg5p4 == 0 /\ arg1 > 0), cost: 1
   4: f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (-arg4p5+arg2 == 0 /\ arg2 > 0 /\ 1-arg5p5 == 0 /\ 1+arg3p5 > 0 /\ -arg2p5 == 0 /\ 1+arg1p5-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p5 > 0), cost: 1
  11: f686_0_main_InvokeMethod -> f744_0_getFirst_NONNULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (1+arg2p12 > 0 /\ 2+arg3p12-arg2 <= 0 /\ arg2 > 0 /\ -arg2+arg1p12 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
  13: f686_0_main_InvokeMethod -> f1184_0_copyR_NULL : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (1+arg3p14-arg1 <= 0 /\ -1+arg1p14 > 0 /\ arg2 > 0 /\ 1+arg3p14 > 0 /\ -1+arg2p14 > 0 /\ 1+arg3p14-arg2 <= 0 /\ arg1 > 0), cost: 1
   1: f120_0_createList_Return -> f686_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2-arg1 <= 0 /\ 1+arg2p2 > 0 /\ 1+arg2p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
   5: f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (arg5-arg4 >= 0 /\ 1-arg2p6+arg2 == 0 /\ 1+arg1 > 0 /\ -2+arg1p6-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ arg4-arg4p6 == 0 /\ arg3-arg3p6 == 0 /\ -1+arg1p6 > 0 /\ -arg5p6+arg5 == 0), cost: 1
   6: f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg5-arg4 >= 0 /\ -arg5p7+arg5 == 0 /\ 1+arg4 > 0 /\ -4+arg1p7 > 0 /\ arg4-arg4p7 == 0 /\ arg3-arg2 > 0 /\ arg3-arg3p7 == 0 /\ 1-arg2p7+arg2 == 0 /\ arg1 > 0), cost: 1
   7: f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (arg5-arg4 < 0 /\ -1+arg2p8 > 0 /\ 1+arg5 > 0 /\ arg3-arg1p8 == 0 /\ 1+arg1 > 0 /\ arg4p8-arg1 <= 0 /\ 1+arg4 > 0 /\ -arg5p8+arg4 == 0 /\ -arg3p8+arg2 == 0 /\ arg3-arg2 > 0 /\ 1-arg6p8+arg5 == 0 /\ 1+arg4p8 > 0), cost: 1
   8: f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, (arg5-arg4 < 0 /\ 1+arg5-arg6p9 == 0 /\ 1+x43 > 0 /\ -1+arg2p9 > 0 /\ 1+arg5 > 0 /\ arg3-arg1p9 == 0 /\ 1+arg1 > 0 /\ arg4p9-arg1 <= 0 /\ 1+arg4 > 0 /\ -arg5p9+arg4 == 0 /\ arg3-arg2 > 0 /\ 1+arg4p9 > 0 /\ arg2-arg3p9 == 0), cost: 1
   9: f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, (-arg3p10+arg1 == 0 /\ -1+arg2 > 0 /\ 1+arg3-arg2p10 == 0 /\ -1+arg1p10 > 0 /\ 1+arg4 > 0 /\ -2+arg1p10-arg4 <= 0 /\ arg6-arg5p10 == 0 /\ arg1p10-arg2 <= 0 /\ -arg4p10+arg5 == 0), cost: 1
  10: f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (1+arg3-arg2p11 == 0 /\ -4+arg1p11 > 0 /\ arg6-arg5p11 == 0 /\ -arg3p11+arg1 == 0 /\ -2+arg2 > 0 /\ arg4 > 0 /\ -arg4p11+arg5 == 0), cost: 1
  12: f744_0_getFirst_NONNULL -> f744_0_getFirst_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p13 > 0 /\ 1+arg2p13 > 0), cost: 1
  14: f1184_0_copyR_NULL -> f1184_0_copyR_NULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (-1+arg3p15 > 0 /\ -2+arg1 > 0 /\ -1+arg2 > 0 /\ -2+arg3p15-arg3 <= 0 /\ arg3p15-arg2 <= 0 /\ -1+arg2p15 > 0 /\ arg1p15 > 0 /\ 1+arg3p15-arg1 <= 0 /\ 1+arg3 > 0), cost: 1
  15: f1184_0_copyR_NULL -> f1184_0_copyR_NULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (-2+arg1 > 0 /\ -4+arg3p16 > 0 /\ -1+arg2p16 > 0 /\ arg3 > 0 /\ arg1p16 > 0 /\ -2+arg2 > 0), cost: 1
  16: __init -> f1_0_main_Load : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
   0: f1_0_main_Load -> f686_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0), cost: 1
  17: f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p3, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p3, (-arg2 == 0 /\ 1+arg1p3-arg1 <= 0 /\ 1+arg1p3 > 0 /\ arg1 > 0), cost: 1
  18: f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p4, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p4, (1+arg1p4 > 0 /\ 1+arg1p4-arg1 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
  19: f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p5, arg2'=0, arg3'=arg3p5, arg4'=arg2, arg5'=1, arg6'=arg6p5, (arg2 > 0 /\ 1+arg3p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p5 > 0), cost: 1
  11: f686_0_main_InvokeMethod -> f744_0_getFirst_NONNULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (1+arg2p12 > 0 /\ 2+arg3p12-arg2 <= 0 /\ arg2 > 0 /\ -arg2+arg1p12 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
  13: f686_0_main_InvokeMethod -> f1184_0_copyR_NULL : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (1+arg3p14-arg1 <= 0 /\ -1+arg1p14 > 0 /\ arg2 > 0 /\ 1+arg3p14 > 0 /\ -1+arg2p14 > 0 /\ 1+arg3p14-arg2 <= 0 /\ arg1 > 0), cost: 1
   1: f120_0_createList_Return -> f686_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2-arg1 <= 0 /\ 1+arg2p2 > 0 /\ 1+arg2p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
  20: f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p6, arg2'=1+arg2, arg6'=arg6p6, (arg5-arg4 >= 0 /\ 1+arg1 > 0 /\ -2+arg1p6-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ -1+arg1p6 > 0), cost: 1
  21: f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p7, arg2'=1+arg2, arg6'=arg6p7, (arg5-arg4 >= 0 /\ 1+arg4 > 0 /\ -4+arg1p7 > 0 /\ arg3-arg2 > 0 /\ arg1 > 0), cost: 1
  22: f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p8, arg3'=arg2, arg4'=arg4p8, arg5'=arg4, arg6'=1+arg5, (arg5-arg4 < 0 /\ -1+arg2p8 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p8-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p8 > 0), cost: 1
  23: f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p9, arg3'=arg2, arg4'=arg4p9, arg5'=arg4, arg6'=1+arg5, (arg5-arg4 < 0 /\ -1+arg2p9 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p9-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p9 > 0), cost: 1
  24: f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p10, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p10, (-1+arg2 > 0 /\ -1+arg1p10 > 0 /\ 1+arg4 > 0 /\ -2+arg1p10-arg4 <= 0 /\ arg1p10-arg2 <= 0), cost: 1
  25: f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p11, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p11, (-4+arg1p11 > 0 /\ -2+arg2 > 0 /\ arg4 > 0), cost: 1
  12: f744_0_getFirst_NONNULL -> f744_0_getFirst_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p13 > 0 /\ 1+arg2p13 > 0), cost: 1
  14: f1184_0_copyR_NULL -> f1184_0_copyR_NULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (-1+arg3p15 > 0 /\ -2+arg1 > 0 /\ -1+arg2 > 0 /\ -2+arg3p15-arg3 <= 0 /\ arg3p15-arg2 <= 0 /\ -1+arg2p15 > 0 /\ arg1p15 > 0 /\ 1+arg3p15-arg1 <= 0 /\ 1+arg3 > 0), cost: 1
  15: f1184_0_copyR_NULL -> f1184_0_copyR_NULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (-2+arg1 > 0 /\ -4+arg3p16 > 0 /\ -1+arg2p16 > 0 /\ arg3 > 0 /\ arg1p16 > 0 /\ -2+arg2 > 0), cost: 1
  16: __init -> f1_0_main_Load : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (-arg2 == 0 /\ -arg3p3 == 0 /\ -arg5p3 == 0 /\ 1+arg1p3-arg1 <= 0 /\ -arg2p3 == 0 /\ 1+arg1p3 > 0 /\ -arg4p3 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p3, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p3, (0 == 0 /\ -arg2 == 0 /\ 1+arg1p3-arg1 <= 0 /\ 1+arg1p3 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p3 = 0
		
		propagated equality arg5p3 = 0
		
		propagated equality arg2p3 = 0
		
		propagated equality arg4p3 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p3, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p3, (0 == 0 /\ -arg2 == 0 /\ 1+arg1p3-arg1 <= 0 /\ 1+arg1p3 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p3, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p3, (-arg2 == 0 /\ 1+arg1p3-arg1 <= 0 /\ 1+arg1p3 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (-arg2p4 == 0 /\ 1+arg1p4 > 0 /\ 1+arg1p4-arg1 <= 0 /\ arg2 > 0 /\ -arg4p4+arg2 == 0 /\ -arg3p4 == 0 /\ 1-arg5p4 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p4, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p4, (0 == 0 /\ 1+arg1p4 > 0 /\ 1+arg1p4-arg1 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p4 = 0
		
		propagated equality arg4p4 = arg2
		
		propagated equality arg3p4 = 0
		
		propagated equality arg5p4 = 1
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p4, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p4, (0 == 0 /\ 1+arg1p4 > 0 /\ 1+arg1p4-arg1 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p4, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p4, (1+arg1p4 > 0 /\ 1+arg1p4-arg1 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (-arg4p5+arg2 == 0 /\ arg2 > 0 /\ 1-arg5p5 == 0 /\ 1+arg3p5 > 0 /\ -arg2p5 == 0 /\ 1+arg1p5-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p5 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p5, arg2'=0, arg3'=arg3p5, arg4'=arg2, arg5'=1, arg6'=arg6p5, (0 == 0 /\ arg2 > 0 /\ 1+arg3p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p5 > 0), cost: 1
	
		propagated equality arg4p5 = arg2
		
		propagated equality arg5p5 = 1
		
		propagated equality arg2p5 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p5, arg2'=0, arg3'=arg3p5, arg4'=arg2, arg5'=1, arg6'=arg6p5, (0 == 0 /\ arg2 > 0 /\ 1+arg3p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p5 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p5, arg2'=0, arg3'=arg3p5, arg4'=arg2, arg5'=1, arg6'=arg6p5, (arg2 > 0 /\ 1+arg3p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p5 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (arg5-arg4 >= 0 /\ 1-arg2p6+arg2 == 0 /\ 1+arg1 > 0 /\ -2+arg1p6-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ arg4-arg4p6 == 0 /\ arg3-arg3p6 == 0 /\ -1+arg1p6 > 0 /\ -arg5p6+arg5 == 0), cost: 1
	New rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p6, (0 == 0 /\ arg5-arg4 >= 0 /\ 1+arg1 > 0 /\ -2+arg1p6-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ -1+arg1p6 > 0), cost: 1
	
		propagated equality arg2p6 = 1+arg2
		
		propagated equality arg4p6 = arg4
		
		propagated equality arg3p6 = arg3
		
		propagated equality arg5p6 = arg5
		
	Simplified Guard

	Original rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p6, (0 == 0 /\ arg5-arg4 >= 0 /\ 1+arg1 > 0 /\ -2+arg1p6-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ -1+arg1p6 > 0), cost: 1
	New rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p6, (arg5-arg4 >= 0 /\ 1+arg1 > 0 /\ -2+arg1p6-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ -1+arg1p6 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p6, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p6, (arg5-arg4 >= 0 /\ 1+arg1 > 0 /\ -2+arg1p6-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ -1+arg1p6 > 0), cost: 1
	New rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p6, arg2'=1+arg2, arg6'=arg6p6, (arg5-arg4 >= 0 /\ 1+arg1 > 0 /\ -2+arg1p6-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ -1+arg1p6 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (arg5-arg4 >= 0 /\ -arg5p7+arg5 == 0 /\ 1+arg4 > 0 /\ -4+arg1p7 > 0 /\ arg4-arg4p7 == 0 /\ arg3-arg2 > 0 /\ arg3-arg3p7 == 0 /\ 1-arg2p7+arg2 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p7, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p7, (0 == 0 /\ arg5-arg4 >= 0 /\ 1+arg4 > 0 /\ -4+arg1p7 > 0 /\ arg3-arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg5p7 = arg5
		
		propagated equality arg4p7 = arg4
		
		propagated equality arg3p7 = arg3
		
		propagated equality arg2p7 = 1+arg2
		
	Simplified Guard

	Original rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p7, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p7, (0 == 0 /\ arg5-arg4 >= 0 /\ 1+arg4 > 0 /\ -4+arg1p7 > 0 /\ arg3-arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p7, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p7, (arg5-arg4 >= 0 /\ 1+arg4 > 0 /\ -4+arg1p7 > 0 /\ arg3-arg2 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p7, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p7, (arg5-arg4 >= 0 /\ 1+arg4 > 0 /\ -4+arg1p7 > 0 /\ arg3-arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p7, arg2'=1+arg2, arg6'=arg6p7, (arg5-arg4 >= 0 /\ 1+arg4 > 0 /\ -4+arg1p7 > 0 /\ arg3-arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (arg5-arg4 < 0 /\ -1+arg2p8 > 0 /\ 1+arg5 > 0 /\ arg3-arg1p8 == 0 /\ 1+arg1 > 0 /\ arg4p8-arg1 <= 0 /\ 1+arg4 > 0 /\ -arg5p8+arg4 == 0 /\ -arg3p8+arg2 == 0 /\ arg3-arg2 > 0 /\ 1-arg6p8+arg5 == 0 /\ 1+arg4p8 > 0), cost: 1
	New rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p8, arg3'=arg2, arg4'=arg4p8, arg5'=arg4, arg6'=1+arg5, (0 == 0 /\ arg5-arg4 < 0 /\ -1+arg2p8 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p8-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p8 > 0), cost: 1
	
		propagated equality arg1p8 = arg3
		
		propagated equality arg5p8 = arg4
		
		propagated equality arg3p8 = arg2
		
		propagated equality arg6p8 = 1+arg5
		
	Simplified Guard

	Original rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p8, arg3'=arg2, arg4'=arg4p8, arg5'=arg4, arg6'=1+arg5, (0 == 0 /\ arg5-arg4 < 0 /\ -1+arg2p8 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p8-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p8 > 0), cost: 1
	New rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p8, arg3'=arg2, arg4'=arg4p8, arg5'=arg4, arg6'=1+arg5, (arg5-arg4 < 0 /\ -1+arg2p8 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p8-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p8 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, (arg5-arg4 < 0 /\ 1+arg5-arg6p9 == 0 /\ 1+x43 > 0 /\ -1+arg2p9 > 0 /\ 1+arg5 > 0 /\ arg3-arg1p9 == 0 /\ 1+arg1 > 0 /\ arg4p9-arg1 <= 0 /\ 1+arg4 > 0 /\ -arg5p9+arg4 == 0 /\ arg3-arg2 > 0 /\ 1+arg4p9 > 0 /\ arg2-arg3p9 == 0), cost: 1
	New rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p9, arg3'=arg2, arg4'=arg4p9, arg5'=arg4, arg6'=1+arg5, (0 == 0 /\ arg5-arg4 < 0 /\ 1+x43 > 0 /\ -1+arg2p9 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p9-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p9 > 0), cost: 1
	
		propagated equality arg6p9 = 1+arg5
		
		propagated equality arg1p9 = arg3
		
		propagated equality arg5p9 = arg4
		
		propagated equality arg3p9 = arg2
		
	Simplified Guard

	Original rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p9, arg3'=arg2, arg4'=arg4p9, arg5'=arg4, arg6'=1+arg5, (0 == 0 /\ arg5-arg4 < 0 /\ 1+x43 > 0 /\ -1+arg2p9 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p9-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p9 > 0), cost: 1
	New rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p9, arg3'=arg2, arg4'=arg4p9, arg5'=arg4, arg6'=1+arg5, (arg5-arg4 < 0 /\ 1+x43 > 0 /\ -1+arg2p9 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p9-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p9 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p9, arg3'=arg2, arg4'=arg4p9, arg5'=arg4, arg6'=1+arg5, (arg5-arg4 < 0 /\ 1+x43 > 0 /\ -1+arg2p9 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p9-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p9 > 0), cost: 1
	New rule:
	f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p9, arg3'=arg2, arg4'=arg4p9, arg5'=arg4, arg6'=1+arg5, (arg5-arg4 < 0 /\ -1+arg2p9 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p9-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p9 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, (-arg3p10+arg1 == 0 /\ -1+arg2 > 0 /\ 1+arg3-arg2p10 == 0 /\ -1+arg1p10 > 0 /\ 1+arg4 > 0 /\ -2+arg1p10-arg4 <= 0 /\ arg6-arg5p10 == 0 /\ arg1p10-arg2 <= 0 /\ -arg4p10+arg5 == 0), cost: 1
	New rule:
	f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p10, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p10, (0 == 0 /\ -1+arg2 > 0 /\ -1+arg1p10 > 0 /\ 1+arg4 > 0 /\ -2+arg1p10-arg4 <= 0 /\ arg1p10-arg2 <= 0), cost: 1
	
		propagated equality arg3p10 = arg1
		
		propagated equality arg2p10 = 1+arg3
		
		propagated equality arg5p10 = arg6
		
		propagated equality arg4p10 = arg5
		
	Simplified Guard

	Original rule:
	f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p10, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p10, (0 == 0 /\ -1+arg2 > 0 /\ -1+arg1p10 > 0 /\ 1+arg4 > 0 /\ -2+arg1p10-arg4 <= 0 /\ arg1p10-arg2 <= 0), cost: 1
	New rule:
	f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p10, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p10, (-1+arg2 > 0 /\ -1+arg1p10 > 0 /\ 1+arg4 > 0 /\ -2+arg1p10-arg4 <= 0 /\ arg1p10-arg2 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (1+arg3-arg2p11 == 0 /\ -4+arg1p11 > 0 /\ arg6-arg5p11 == 0 /\ -arg3p11+arg1 == 0 /\ -2+arg2 > 0 /\ arg4 > 0 /\ -arg4p11+arg5 == 0), cost: 1
	New rule:
	f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p11, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p11, (0 == 0 /\ -4+arg1p11 > 0 /\ -2+arg2 > 0 /\ arg4 > 0), cost: 1
	
		propagated equality arg2p11 = 1+arg3
		
		propagated equality arg5p11 = arg6
		
		propagated equality arg3p11 = arg1
		
		propagated equality arg4p11 = arg5
		
	Simplified Guard

	Original rule:
	f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p11, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p11, (0 == 0 /\ -4+arg1p11 > 0 /\ -2+arg2 > 0 /\ arg4 > 0), cost: 1
	New rule:
	f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p11, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p11, (-4+arg1p11 > 0 /\ -2+arg2 > 0 /\ arg4 > 0), cost: 1

Step with 16

	Trace

	16[T]
	
	Blocked

	[{}, {}]

Step with 0

	Trace

	16[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 11

	Trace

	16[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0)], 11[(1+arg2p12 > 0 /\ 2+arg3p12-arg2 <= 0 /\ arg2 > 0 /\ -arg2+arg1p12 <= 0 /\ arg1p12 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 12

	Trace

	16[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0)], 11[(1+arg2p12 > 0 /\ 2+arg3p12-arg2 <= 0 /\ arg2 > 0 /\ -arg2+arg1p12 <= 0 /\ arg1p12 > 0 /\ arg1 > 0)], 12[(-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p13 > 0 /\ 1+arg2p13 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
   0: f1_0_main_Load -> f686_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0), cost: 1
  17: f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p3, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p3, (-arg2 == 0 /\ 1+arg1p3-arg1 <= 0 /\ 1+arg1p3 > 0 /\ arg1 > 0), cost: 1
  18: f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p4, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p4, (1+arg1p4 > 0 /\ 1+arg1p4-arg1 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
  19: f1_0_main_Load -> f922_0_createList_GE : arg1'=arg1p5, arg2'=0, arg3'=arg3p5, arg4'=arg2, arg5'=1, arg6'=arg6p5, (arg2 > 0 /\ 1+arg3p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ arg1 > 0 /\ 1+arg1p5 > 0), cost: 1
  11: f686_0_main_InvokeMethod -> f744_0_getFirst_NONNULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (1+arg2p12 > 0 /\ 2+arg3p12-arg2 <= 0 /\ arg2 > 0 /\ -arg2+arg1p12 <= 0 /\ arg1p12 > 0 /\ arg1 > 0), cost: 1
  13: f686_0_main_InvokeMethod -> f1184_0_copyR_NULL : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (1+arg3p14-arg1 <= 0 /\ -1+arg1p14 > 0 /\ arg2 > 0 /\ 1+arg3p14 > 0 /\ -1+arg2p14 > 0 /\ 1+arg3p14-arg2 <= 0 /\ arg1 > 0), cost: 1
   1: f120_0_createList_Return -> f686_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (arg1p2-arg1 <= 0 /\ 1+arg2p2 > 0 /\ 1+arg2p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
  20: f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p6, arg2'=1+arg2, arg6'=arg6p6, (arg5-arg4 >= 0 /\ 1+arg1 > 0 /\ -2+arg1p6-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ -1+arg1p6 > 0), cost: 1
  21: f922_0_createList_GE -> f922_0_createList_GE : arg1'=arg1p7, arg2'=1+arg2, arg6'=arg6p7, (arg5-arg4 >= 0 /\ 1+arg4 > 0 /\ -4+arg1p7 > 0 /\ arg3-arg2 > 0 /\ arg1 > 0), cost: 1
  22: f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p8, arg3'=arg2, arg4'=arg4p8, arg5'=arg4, arg6'=1+arg5, (arg5-arg4 < 0 /\ -1+arg2p8 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p8-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p8 > 0), cost: 1
  23: f922_0_createList_GE -> f1114_0_createList_NULL : arg1'=arg3, arg2'=arg2p9, arg3'=arg2, arg4'=arg4p9, arg5'=arg4, arg6'=1+arg5, (arg5-arg4 < 0 /\ -1+arg2p9 > 0 /\ 1+arg5 > 0 /\ 1+arg1 > 0 /\ arg4p9-arg1 <= 0 /\ 1+arg4 > 0 /\ arg3-arg2 > 0 /\ 1+arg4p9 > 0), cost: 1
  24: f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p10, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p10, (-1+arg2 > 0 /\ -1+arg1p10 > 0 /\ 1+arg4 > 0 /\ -2+arg1p10-arg4 <= 0 /\ arg1p10-arg2 <= 0), cost: 1
  25: f1114_0_createList_NULL -> f922_0_createList_GE : arg1'=arg1p11, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p11, (-4+arg1p11 > 0 /\ -2+arg2 > 0 /\ arg4 > 0), cost: 1
  12: f744_0_getFirst_NONNULL -> f744_0_getFirst_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p13 > 0 /\ 1+arg2p13 > 0), cost: 1
  26: f744_0_getFirst_NONNULL -> LoAT_sink : (-2+arg1 > 0 /\ -2-arg3+arg1 >= 0 /\ -arg2p13+arg2 <= 0 /\ arg2 > 0 /\ arg1p13 > 0 /\ -arg1p13+arg1 <= 0 /\ -arg3+arg3p13-arg1p13+arg1 <= 0 /\ 1+arg2p13 > 0), cost: NONTERM
  14: f1184_0_copyR_NULL -> f1184_0_copyR_NULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (-1+arg3p15 > 0 /\ -2+arg1 > 0 /\ -1+arg2 > 0 /\ -2+arg3p15-arg3 <= 0 /\ arg3p15-arg2 <= 0 /\ -1+arg2p15 > 0 /\ arg1p15 > 0 /\ 1+arg3p15-arg1 <= 0 /\ 1+arg3 > 0), cost: 1
  15: f1184_0_copyR_NULL -> f1184_0_copyR_NULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (-2+arg1 > 0 /\ -4+arg3p16 > 0 /\ -1+arg2p16 > 0 /\ arg3 > 0 /\ arg1p16 > 0 /\ -2+arg2 > 0), cost: 1
  16: __init -> f1_0_main_Load : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	f744_0_getFirst_NONNULL -> f744_0_getFirst_NONNULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p13 > 0 /\ 1+arg2p13 > 0), cost: 1
	New rule:
	f744_0_getFirst_NONNULL -> LoAT_sink : (-2+arg1 > 0 /\ -2-arg3+arg1 >= 0 /\ -arg2p13+arg2 <= 0 /\ arg2 > 0 /\ arg1p13 > 0 /\ -arg1p13+arg1 <= 0 /\ -arg3+arg3p13-arg1p13+arg1 <= 0 /\ 1+arg2p13 > 0), cost: NONTERM

		-2+arg1 > 0 [0]: eventual decrease yields (-2+arg1 > 0 /\ -2+arg1p13 > 0)
		
		-2+arg1 > 0 [1]: eventual increase yields (-2+arg1 > 0 /\ -arg1p13+arg1 <= 0)
		
		-2-arg3+arg1 >= 0 [0]: eventual decrease yields (-2-arg3+arg1 >= 0 /\ -2-arg3p13+arg1p13 >= 0)
		
		-2-arg3+arg1 >= 0 [1]: eventual increase yields (-2-arg3+arg1 >= 0 /\ -arg3+arg3p13-arg1p13+arg1 <= 0)
		
		arg2 > 0 [0]: eventual decrease yields (arg2p13 > 0 /\ arg2 > 0)
		
		arg2 > 0 [1]: eventual increase yields (-arg2p13+arg2 <= 0 /\ arg2 > 0)
		
		arg1p13 > 0 [0]: monotonic increase yields arg1p13 > 0
		
		1+arg2p13 > 0 [0]: monotonic increase yields 1+arg2p13 > 0
		
		Replacement map: {-2+arg1 > 0 -> (-2+arg1 > 0 /\ -arg1p13+arg1 <= 0), -2-arg3+arg1 >= 0 -> (-2-arg3+arg1 >= 0 /\ -arg3+arg3p13-arg1p13+arg1 <= 0), arg2 > 0 -> (-arg2p13+arg2 <= 0 /\ arg2 > 0), arg1p13 > 0 -> arg1p13 > 0, 1+arg2p13 > 0 -> 1+arg2p13 > 0}

Step with 26

	Trace

	16[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0)], 11[(1+arg2p12 > 0 /\ 2+arg3p12-arg2 <= 0 /\ arg2 > 0 /\ -arg2+arg1p12 <= 0 /\ arg1p12 > 0 /\ arg1 > 0)], 26[(-2+arg1 > 0 /\ -2-arg3+arg1 >= 0 /\ -arg2p13+arg2 <= 0 /\ arg2 > 0 /\ arg1p13 > 0 /\ -arg1p13+arg1 <= 0 /\ -arg3+arg3p13-arg1p13+arg1 <= 0 /\ 1+arg2p13 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {26[T]}]

Refute

	Counterexample

	[ arg1=1 arg2=0 arg3=0 arg4=0 arg5=0 arg6=0 ] 16 [ arg1=1 arg2=3 arg3=0 arg4=0 arg5=0 arg6=0 ] 0 [ arg1=3 arg2=1 arg3=1 arg4=0 arg5=0 arg6=0 ] 11 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 arg5=arg5 arg6=arg6 ] 26
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
