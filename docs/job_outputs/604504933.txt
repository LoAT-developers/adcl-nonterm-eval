WORST_CASE(Omega(0),?)

Initial ITS
Start location: l4
   0: l0 -> l1 : __disjvr_1^0'=__disjvr_1^post0, y^0'=y^post0, __disjvr_0^0'=__disjvr_0^post0, x^0'=x^post0, (-y^0-x^0 <= 0 /\ y^0-y^post0 == 0 /\ __disjvr_1^0-__disjvr_1^post0 == 0 /\ __disjvr_0^0-__disjvr_0^post0 == 0 /\ 1-y^0+x^0 <= 0 /\ -1-x^0+x^post0 == 0), cost: 1
   1: l0 -> l1 : __disjvr_1^0'=__disjvr_1^post1, y^0'=y^post1, __disjvr_0^0'=__disjvr_0^post1, x^0'=x^post1, (__disjvr_0^0-__disjvr_0^post1 == 0 /\ -1-y^0+y^post1 == 0 /\ 1+y^0+x^0 <= 0 /\ __disjvr_1^0-__disjvr_1^post1 == 0 /\ -x^post1+x^0 == 0 /\ -y^0+x^0 <= 0), cost: 1
   2: l0 -> l1 : __disjvr_1^0'=__disjvr_1^post2, y^0'=y^post2, __disjvr_0^0'=__disjvr_0^post2, x^0'=x^post2, (-y^post2+y^0 == 0 /\ __disjvr_1^0-__disjvr_1^post2 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ 1+x^post2-x^0 == 0 /\ 1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 1
   3: l0 -> l1 : __disjvr_1^0'=__disjvr_1^post3, y^0'=y^post3, __disjvr_0^0'=__disjvr_0^post3, x^0'=x^post3, (-__disjvr_0^post3+__disjvr_0^0 == 0 /\ -x^post3+x^0 == 0 /\ 2-y^0-x^0 <= 0 /\ __disjvr_1^0-__disjvr_1^post3 == 0 /\ y^0-x^0 <= 0 /\ 1+y^post3-y^0 == 0), cost: 1
   4: l1 -> l2 : __disjvr_1^0'=__disjvr_1^post4, y^0'=y^post4, __disjvr_0^0'=__disjvr_0^post4, x^0'=x^post4, (-__disjvr_0^post4+__disjvr_0^0 == 0 /\ __disjvr_0^post4-__disjvr_0^0 == 0 /\ -x^post4+x^0 == 0 /\ -y^post4+y^0 == 0 /\ -__disjvr_1^post4+__disjvr_1^0 == 0), cost: 1
   5: l2 -> l0 : __disjvr_1^0'=__disjvr_1^post5, y^0'=y^post5, __disjvr_0^0'=__disjvr_0^post5, x^0'=x^post5, (y^0-y^post5 == 0 /\ x^0-x^post5 == 0 /\ __disjvr_1^0-__disjvr_1^post5 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -__disjvr_1^0+__disjvr_1^post5 == 0), cost: 1
   6: l3 -> l1 : __disjvr_1^0'=__disjvr_1^post6, y^0'=y^post6, __disjvr_0^0'=__disjvr_0^post6, x^0'=x^post6, (__disjvr_1^0-__disjvr_1^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post6 == 0 /\ y^0-y^post6 == 0 /\ -x^post6+x^0 == 0), cost: 1
   7: l4 -> l3 : __disjvr_1^0'=__disjvr_1^post7, y^0'=y^post7, __disjvr_0^0'=__disjvr_0^post7, x^0'=x^post7, (-x^post7+x^0 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0 /\ -y^post7+y^0 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : __disjvr_1^0'=__disjvr_1^post0, y^0'=y^post0, __disjvr_0^0'=__disjvr_0^post0, x^0'=x^post0, (-y^0-x^0 <= 0 /\ y^0-y^post0 == 0 /\ __disjvr_1^0-__disjvr_1^post0 == 0 /\ __disjvr_0^0-__disjvr_0^post0 == 0 /\ 1-y^0+x^0 <= 0 /\ -1-x^0+x^post0 == 0), cost: 1
New rule:
l0 -> l1 : x^0'=1+x^0, (-y^0-x^0 <= 0 /\ 1-y^0+x^0 <= 0), cost: 1

Applied preprocessing
Original rule:
l0 -> l1 : __disjvr_1^0'=__disjvr_1^post1, y^0'=y^post1, __disjvr_0^0'=__disjvr_0^post1, x^0'=x^post1, (__disjvr_0^0-__disjvr_0^post1 == 0 /\ -1-y^0+y^post1 == 0 /\ 1+y^0+x^0 <= 0 /\ __disjvr_1^0-__disjvr_1^post1 == 0 /\ -x^post1+x^0 == 0 /\ -y^0+x^0 <= 0), cost: 1
New rule:
l0 -> l1 : y^0'=1+y^0, (1+y^0+x^0 <= 0 /\ -y^0+x^0 <= 0), cost: 1

Applied preprocessing
Original rule:
l0 -> l1 : __disjvr_1^0'=__disjvr_1^post2, y^0'=y^post2, __disjvr_0^0'=__disjvr_0^post2, x^0'=x^post2, (-y^post2+y^0 == 0 /\ __disjvr_1^0-__disjvr_1^post2 == 0 /\ -__disjvr_0^post2+__disjvr_0^0 == 0 /\ 1+x^post2-x^0 == 0 /\ 1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 1
New rule:
l0 -> l1 : x^0'=-1+x^0, (1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 1

Applied preprocessing
Original rule:
l0 -> l1 : __disjvr_1^0'=__disjvr_1^post3, y^0'=y^post3, __disjvr_0^0'=__disjvr_0^post3, x^0'=x^post3, (-__disjvr_0^post3+__disjvr_0^0 == 0 /\ -x^post3+x^0 == 0 /\ 2-y^0-x^0 <= 0 /\ __disjvr_1^0-__disjvr_1^post3 == 0 /\ y^0-x^0 <= 0 /\ 1+y^post3-y^0 == 0), cost: 1
New rule:
l0 -> l1 : y^0'=-1+y^0, (2-y^0-x^0 <= 0 /\ y^0-x^0 <= 0), cost: 1

Applied preprocessing
Original rule:
l1 -> l2 : __disjvr_1^0'=__disjvr_1^post4, y^0'=y^post4, __disjvr_0^0'=__disjvr_0^post4, x^0'=x^post4, (-__disjvr_0^post4+__disjvr_0^0 == 0 /\ __disjvr_0^post4-__disjvr_0^0 == 0 /\ -x^post4+x^0 == 0 /\ -y^post4+y^0 == 0 /\ -__disjvr_1^post4+__disjvr_1^0 == 0), cost: 1
New rule:
l1 -> l2 : 0 == 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : __disjvr_1^0'=__disjvr_1^post5, y^0'=y^post5, __disjvr_0^0'=__disjvr_0^post5, x^0'=x^post5, (y^0-y^post5 == 0 /\ x^0-x^post5 == 0 /\ __disjvr_1^0-__disjvr_1^post5 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -__disjvr_1^0+__disjvr_1^post5 == 0), cost: 1
New rule:
l2 -> l0 : 0 == 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : __disjvr_1^0'=__disjvr_1^post6, y^0'=y^post6, __disjvr_0^0'=__disjvr_0^post6, x^0'=x^post6, (__disjvr_1^0-__disjvr_1^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post6 == 0 /\ y^0-y^post6 == 0 /\ -x^post6+x^0 == 0), cost: 1
New rule:
l3 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : __disjvr_1^0'=__disjvr_1^post7, y^0'=y^post7, __disjvr_0^0'=__disjvr_0^post7, x^0'=x^post7, (-x^post7+x^0 == 0 /\ -__disjvr_0^post7+__disjvr_0^0 == 0 /\ -y^post7+y^0 == 0 /\ __disjvr_1^0-__disjvr_1^post7 == 0), cost: 1
New rule:
l4 -> l3 : TRUE, cost: 1

Simplified rules
Start location: l4
   8: l0 -> l1 : x^0'=1+x^0, (-y^0-x^0 <= 0 /\ 1-y^0+x^0 <= 0), cost: 1
   9: l0 -> l1 : y^0'=1+y^0, (1+y^0+x^0 <= 0 /\ -y^0+x^0 <= 0), cost: 1
  10: l0 -> l1 : x^0'=-1+x^0, (1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 1
  11: l0 -> l1 : y^0'=-1+y^0, (2-y^0-x^0 <= 0 /\ y^0-x^0 <= 0), cost: 1
  12: l1 -> l2 : 0 == 0, cost: 1
  13: l2 -> l0 : 0 == 0, cost: 1
  14: l3 -> l1 : TRUE, cost: 1
  15: l4 -> l3 : TRUE, cost: 1


Eliminating location l3 by chaining:

Applied chaining
First rule:
l4 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l1 : TRUE, cost: 1
New rule:
l4 -> l1 : TRUE, cost: 2

Applied deletion
Removed the following rules: 14 15

Eliminating location l2 by chaining:

Applied chaining
First rule:
l1 -> l2 : 0 == 0, cost: 1
Second rule:
l2 -> l0 : 0 == 0, cost: 1
New rule:
l1 -> l0 : 0 == 0, cost: 2

Applied deletion
Removed the following rules: 12 13

Eliminated locations on linear paths
Start location: l4
   8: l0 -> l1 : x^0'=1+x^0, (-y^0-x^0 <= 0 /\ 1-y^0+x^0 <= 0), cost: 1
   9: l0 -> l1 : y^0'=1+y^0, (1+y^0+x^0 <= 0 /\ -y^0+x^0 <= 0), cost: 1
  10: l0 -> l1 : x^0'=-1+x^0, (1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 1
  11: l0 -> l1 : y^0'=-1+y^0, (2-y^0-x^0 <= 0 /\ y^0-x^0 <= 0), cost: 1
  17: l1 -> l0 : 0 == 0, cost: 2
  16: l4 -> l1 : TRUE, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l1 -> l0 : 0 == 0, cost: 2
Second rule:
l0 -> l1 : x^0'=1+x^0, (-y^0-x^0 <= 0 /\ 1-y^0+x^0 <= 0), cost: 1
New rule:
l1 -> l1 : x^0'=1+x^0, (0 == 0 /\ -y^0-x^0 <= 0 /\ 1-y^0+x^0 <= 0), cost: 3

Applied simplification
Original rule:
l1 -> l1 : x^0'=1+x^0, (0 == 0 /\ -y^0-x^0 <= 0 /\ 1-y^0+x^0 <= 0), cost: 3
New rule:
l1 -> l1 : x^0'=1+x^0, (-y^0-x^0 <= 0 /\ 1-y^0+x^0 <= 0), cost: 3

Applied chaining
First rule:
l1 -> l0 : 0 == 0, cost: 2
Second rule:
l0 -> l1 : y^0'=1+y^0, (1+y^0+x^0 <= 0 /\ -y^0+x^0 <= 0), cost: 1
New rule:
l1 -> l1 : y^0'=1+y^0, (0 == 0 /\ 1+y^0+x^0 <= 0 /\ -y^0+x^0 <= 0), cost: 3

Applied simplification
Original rule:
l1 -> l1 : y^0'=1+y^0, (0 == 0 /\ 1+y^0+x^0 <= 0 /\ -y^0+x^0 <= 0), cost: 3
New rule:
l1 -> l1 : y^0'=1+y^0, (1+y^0+x^0 <= 0 /\ -y^0+x^0 <= 0), cost: 3

Applied chaining
First rule:
l1 -> l0 : 0 == 0, cost: 2
Second rule:
l0 -> l1 : x^0'=-1+x^0, (1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 1
New rule:
l1 -> l1 : x^0'=-1+x^0, (0 == 0 /\ 1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 3

Applied simplification
Original rule:
l1 -> l1 : x^0'=-1+x^0, (0 == 0 /\ 1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 3
New rule:
l1 -> l1 : x^0'=-1+x^0, (1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 3

Applied chaining
First rule:
l1 -> l0 : 0 == 0, cost: 2
Second rule:
l0 -> l1 : y^0'=-1+y^0, (2-y^0-x^0 <= 0 /\ y^0-x^0 <= 0), cost: 1
New rule:
l1 -> l1 : y^0'=-1+y^0, (0 == 0 /\ 2-y^0-x^0 <= 0 /\ y^0-x^0 <= 0), cost: 3

Applied simplification
Original rule:
l1 -> l1 : y^0'=-1+y^0, (0 == 0 /\ 2-y^0-x^0 <= 0 /\ y^0-x^0 <= 0), cost: 3
New rule:
l1 -> l1 : y^0'=-1+y^0, (2-y^0-x^0 <= 0 /\ y^0-x^0 <= 0), cost: 3

Applied deletion
Removed the following rules: 8 9 10 11 17

Eliminated locations on tree-shaped paths
Start location: l4
  18: l1 -> l1 : x^0'=1+x^0, (-y^0-x^0 <= 0 /\ 1-y^0+x^0 <= 0), cost: 3
  19: l1 -> l1 : y^0'=1+y^0, (1+y^0+x^0 <= 0 /\ -y^0+x^0 <= 0), cost: 3
  20: l1 -> l1 : x^0'=-1+x^0, (1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 3
  21: l1 -> l1 : y^0'=-1+y^0, (2-y^0-x^0 <= 0 /\ y^0-x^0 <= 0), cost: 3
  16: l4 -> l1 : TRUE, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : x^0'=1+x^0, (-y^0-x^0 <= 0 /\ 1-y^0+x^0 <= 0), cost: 3
New rule:
l1 -> l1 : x^0'=n+x^0, (y^0-n-x^0 >= 0 /\ y^0+x^0 >= 0 /\ n >= 0), cost: 3*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jlgLGp.txt

Applied instantiation
Original rule:
l1 -> l1 : x^0'=n+x^0, (y^0-n-x^0 >= 0 /\ y^0+x^0 >= 0 /\ n >= 0), cost: 3*n
New rule:
l1 -> l1 : x^0'=y^0, (0 >= 0 /\ y^0+x^0 >= 0 /\ y^0-x^0 >= 0), cost: 3*y^0-3*x^0

Applied acceleration
Original rule:
l1 -> l1 : y^0'=1+y^0, (1+y^0+x^0 <= 0 /\ -y^0+x^0 <= 0), cost: 3
New rule:
l1 -> l1 : y^0'=y^0+n0, (-y^0-x^0-n0 >= 0 /\ y^0-x^0 >= 0 /\ n0 >= 0), cost: 3*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oJieiK.txt

Applied instantiation
Original rule:
l1 -> l1 : y^0'=y^0+n0, (-y^0-x^0-n0 >= 0 /\ y^0-x^0 >= 0 /\ n0 >= 0), cost: 3*n0
New rule:
l1 -> l1 : y^0'=-x^0, (0 >= 0 /\ -y^0-x^0 >= 0 /\ y^0-x^0 >= 0), cost: -3*y^0-3*x^0

Applied acceleration
Original rule:
l1 -> l1 : x^0'=-1+x^0, (1+y^0-x^0 <= 0 /\ -1+y^0+x^0 <= 0), cost: 3
New rule:
l1 -> l1 : x^0'=-n1+x^0, (1-y^0-x^0 >= 0 /\ n1 >= 0 /\ -n1-y^0+x^0 >= 0), cost: 3*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_HBdfgh.txt

Applied instantiation
Original rule:
l1 -> l1 : x^0'=-n1+x^0, (1-y^0-x^0 >= 0 /\ n1 >= 0 /\ -n1-y^0+x^0 >= 0), cost: 3*n1
New rule:
l1 -> l1 : x^0'=y^0, (0 >= 0 /\ 1-y^0-x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3*y^0+3*x^0

Applied acceleration
Original rule:
l1 -> l1 : y^0'=-1+y^0, (2-y^0-x^0 <= 0 /\ y^0-x^0 <= 0), cost: 3
New rule:
l1 -> l1 : y^0'=-n2+y^0, (n2 >= 0 /\ -1-n2+y^0+x^0 >= 0 /\ -y^0+x^0 >= 0), cost: 3*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jMKglG.txt

Applied instantiation
Original rule:
l1 -> l1 : y^0'=-n2+y^0, (n2 >= 0 /\ -1-n2+y^0+x^0 >= 0 /\ -y^0+x^0 >= 0), cost: 3*n2
New rule:
l1 -> l1 : y^0'=1-x^0, (0 >= 0 /\ -1+y^0+x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3+3*y^0+3*x^0

Applied simplification
Original rule:
l1 -> l1 : x^0'=y^0, (0 >= 0 /\ y^0+x^0 >= 0 /\ y^0-x^0 >= 0), cost: 3*y^0-3*x^0
New rule:
l1 -> l1 : x^0'=y^0, (y^0+x^0 >= 0 /\ y^0-x^0 >= 0), cost: 3*y^0-3*x^0

Applied simplification
Original rule:
l1 -> l1 : y^0'=-x^0, (0 >= 0 /\ -y^0-x^0 >= 0 /\ y^0-x^0 >= 0), cost: -3*y^0-3*x^0
New rule:
l1 -> l1 : y^0'=-x^0, (-y^0-x^0 >= 0 /\ y^0-x^0 >= 0), cost: -3*y^0-3*x^0

Applied simplification
Original rule:
l1 -> l1 : x^0'=y^0, (0 >= 0 /\ 1-y^0-x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3*y^0+3*x^0
New rule:
l1 -> l1 : x^0'=y^0, (1-y^0-x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3*y^0+3*x^0

Applied simplification
Original rule:
l1 -> l1 : y^0'=1-x^0, (0 >= 0 /\ -1+y^0+x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3+3*y^0+3*x^0
New rule:
l1 -> l1 : y^0'=1-x^0, (-1+y^0+x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3+3*y^0+3*x^0

Applied deletion
Removed the following rules: 18 19 20 21

Accelerated simple loops
Start location: l4
  26: l1 -> l1 : x^0'=y^0, (y^0+x^0 >= 0 /\ y^0-x^0 >= 0), cost: 3*y^0-3*x^0
  27: l1 -> l1 : y^0'=-x^0, (-y^0-x^0 >= 0 /\ y^0-x^0 >= 0), cost: -3*y^0-3*x^0
  28: l1 -> l1 : x^0'=y^0, (1-y^0-x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3*y^0+3*x^0
  29: l1 -> l1 : y^0'=1-x^0, (-1+y^0+x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3+3*y^0+3*x^0
  16: l4 -> l1 : TRUE, cost: 2


Applied chaining
First rule:
l4 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : x^0'=y^0, (y^0+x^0 >= 0 /\ y^0-x^0 >= 0), cost: 3*y^0-3*x^0
New rule:
l4 -> l1 : x^0'=y^0, (y^0+x^0 >= 0 /\ y^0-x^0 >= 0), cost: 2+3*y^0-3*x^0

Applied chaining
First rule:
l4 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : y^0'=-x^0, (-y^0-x^0 >= 0 /\ y^0-x^0 >= 0), cost: -3*y^0-3*x^0
New rule:
l4 -> l1 : y^0'=-x^0, (-y^0-x^0 >= 0 /\ y^0-x^0 >= 0), cost: 2-3*y^0-3*x^0

Applied chaining
First rule:
l4 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : x^0'=y^0, (1-y^0-x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3*y^0+3*x^0
New rule:
l4 -> l1 : x^0'=y^0, (1-y^0-x^0 >= 0 /\ -y^0+x^0 >= 0), cost: 2-3*y^0+3*x^0

Applied chaining
First rule:
l4 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : y^0'=1-x^0, (-1+y^0+x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -3+3*y^0+3*x^0
New rule:
l4 -> l1 : y^0'=1-x^0, (-1+y^0+x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -1+3*y^0+3*x^0

Applied deletion
Removed the following rules: 26 27 28 29

Chained accelerated rules with incoming rules
Start location: l4
  16: l4 -> l1 : TRUE, cost: 2
  30: l4 -> l1 : x^0'=y^0, (y^0+x^0 >= 0 /\ y^0-x^0 >= 0), cost: 2+3*y^0-3*x^0
  31: l4 -> l1 : y^0'=-x^0, (-y^0-x^0 >= 0 /\ y^0-x^0 >= 0), cost: 2-3*y^0-3*x^0
  32: l4 -> l1 : x^0'=y^0, (1-y^0-x^0 >= 0 /\ -y^0+x^0 >= 0), cost: 2-3*y^0+3*x^0
  33: l4 -> l1 : y^0'=1-x^0, (-1+y^0+x^0 >= 0 /\ -y^0+x^0 >= 0), cost: -1+3*y^0+3*x^0


Removed unreachable locations and irrelevant leafs
Start location: l4
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

