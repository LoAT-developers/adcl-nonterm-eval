WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f375_0_dif_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-arg1P0 == 0 /\ -arg2P0 == 0 /\ -arg3P0 == 0), cost: 1
   1: f375_0_dif_GE -> f484_0_dif_GE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (-arg1P1+arg1 == 0 /\ -arg5P1 == 0 /\ arg2-arg2P1 == 0 /\ -20+arg2 < 0 /\ arg2-arg3 == 0 /\ -arg3P1 == 0 /\ -arg4P1 == 0), cost: 1
   2: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg2P2+arg2 == 0 /\ -arg5+arg4 == 0 /\ arg1-arg1P2 == 0 /\ -19+arg4 > 0 /\ 1-arg3 == 0 /\ 1-arg3P2+arg2 == 0), cost: 1
   3: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg2-arg3P3 == 0 /\ -arg5+arg4 == 0 /\ 1-arg3 == 0 /\ 1+arg2-arg2P3 == 0 /\ -arg1P3+arg1 == 0 /\ -20+arg4 < 0), cost: 1
   4: f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg5P4+arg4 == 0 /\ arg2-arg2P4 == 0 /\ -arg5+arg4 == 0 /\ -x300+x290 > 0 /\ -arg3 == 0 /\ -20+arg2 < 0 /\ 1-arg4P4+arg4 == 0 /\ -arg1P4+arg1 == 0 /\ -arg3P4 == 0 /\ -20+arg4 < 0), cost: 1
   5: f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg3P5 == 0 /\ -arg5+arg4 == 0 /\ -arg3 == 0 /\ -20+arg2 < 0 /\ arg2-arg2P5 == 0 /\ -arg1P5+arg1 == 0 /\ 1+arg4-arg5P5 == 0 /\ -x370+x360 < 0 /\ 1+arg4-arg4P5 == 0 /\ -20+arg4 < 0), cost: 1
   6: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-20+arg1 < 0 /\ -arg5+arg4 == 0 /\ -19+arg4 > 0 /\ -arg3 == 0 /\ -20+arg2 < 0 /\ 1-arg2P6+arg2 == 0 /\ 1+arg2-arg3P6 == 0 /\ 1+arg1-arg1P6 == 0), cost: 1
   7: f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg3P7 == 0 /\ arg2-arg2P7 == 0 /\ -arg1P7+arg1 == 0 /\ -arg5P7+arg4 == 0 /\ -arg5+arg4 == 0 /\ -arg3 == 0 /\ -20+arg2 < 0 /\ arg4-arg4P7 == 0 /\ -20+arg4 < 0), cost: 1
   8: __init -> f1_0_main_ConstantStackPush : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f375_0_dif_GE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-arg1P0 == 0 /\ -arg2P0 == 0 /\ -arg3P0 == 0), cost: 1
New rule:
f1_0_main_ConstantStackPush -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
f375_0_dif_GE -> f484_0_dif_GE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (-arg1P1+arg1 == 0 /\ -arg5P1 == 0 /\ arg2-arg2P1 == 0 /\ -20+arg2 < 0 /\ arg2-arg3 == 0 /\ -arg3P1 == 0 /\ -arg4P1 == 0), cost: 1
New rule:
f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg2P2+arg2 == 0 /\ -arg5+arg4 == 0 /\ arg1-arg1P2 == 0 /\ -19+arg4 > 0 /\ 1-arg3 == 0 /\ 1-arg3P2+arg2 == 0), cost: 1
New rule:
f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P2, arg2'=1+arg2, arg4'=arg4P2, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ -1+arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg2-arg3P3 == 0 /\ -arg5+arg4 == 0 /\ 1-arg3 == 0 /\ 1+arg2-arg2P3 == 0 /\ -arg1P3+arg1 == 0 /\ -20+arg4 < 0), cost: 1
New rule:
f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -1+arg3 == 0 /\ 20-arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1-arg5P4+arg4 == 0 /\ arg2-arg2P4 == 0 /\ -arg5+arg4 == 0 /\ -x300+x290 > 0 /\ -arg3 == 0 /\ -20+arg2 < 0 /\ 1-arg4P4+arg4 == 0 /\ -arg1P4+arg1 == 0 /\ -arg3P4 == 0 /\ -20+arg4 < 0), cost: 1
New rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=1+arg4, arg4'=1+arg4, arg3'=0, (-arg5+arg4 == 0 /\ 20-arg4 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg3P5 == 0 /\ -arg5+arg4 == 0 /\ -arg3 == 0 /\ -20+arg2 < 0 /\ arg2-arg2P5 == 0 /\ -arg1P5+arg1 == 0 /\ 1+arg4-arg5P5 == 0 /\ -x370+x360 < 0 /\ 1+arg4-arg4P5 == 0 /\ -20+arg4 < 0), cost: 1
New rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=1+arg4, arg4'=1+arg4, arg3'=0, (-arg5+arg4 == 0 /\ 20-arg4 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-20+arg1 < 0 /\ -arg5+arg4 == 0 /\ -19+arg4 > 0 /\ -arg3 == 0 /\ -20+arg2 < 0 /\ 1-arg2P6+arg2 == 0 /\ 1+arg2-arg3P6 == 0 /\ 1+arg1-arg1P6 == 0), cost: 1
New rule:
f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ 20-arg1 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (1-arg3P7 == 0 /\ arg2-arg2P7 == 0 /\ -arg1P7+arg1 == 0 /\ -arg5P7+arg4 == 0 /\ -arg5+arg4 == 0 /\ -arg3 == 0 /\ -20+arg2 < 0 /\ arg4-arg4P7 == 0 /\ -20+arg4 < 0), cost: 1
New rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg4, arg3'=1, (-arg5+arg4 == 0 /\ 20-arg4 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1

Simplified rules
Start location: __init
   9: f1_0_main_ConstantStackPush -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 1
  10: f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 1
  11: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P2, arg2'=1+arg2, arg4'=arg4P2, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ -1+arg3 == 0), cost: 1
  12: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -1+arg3 == 0 /\ 20-arg4 > 0), cost: 1
  13: f484_0_dif_GE -> f484_0_dif_GE : arg5'=1+arg4, arg4'=1+arg4, arg3'=0, (-arg5+arg4 == 0 /\ 20-arg4 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
  14: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ 20-arg1 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
  15: f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg4, arg3'=1, (-arg5+arg4 == 0 /\ 20-arg4 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
   8: __init -> f1_0_main_ConstantStackPush : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, TRUE, cost: 1


Applied acceleration
Original rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=1+arg4, arg4'=1+arg4, arg3'=0, (-arg5+arg4 == 0 /\ 20-arg4 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
New rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg4+n, arg4'=arg4+n, arg3'=0, (-1+n >= 0 /\ -arg5+arg4 >= 0 /\ -arg3 >= 0 /\ arg5-arg4 >= 0 /\ arg3 >= 0 /\ 21-arg4-n > 0 /\ 20-arg2 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_niCMIk.txt

Applied instantiation
Original rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg4+n, arg4'=arg4+n, arg3'=0, (-1+n >= 0 /\ -arg5+arg4 >= 0 /\ -arg3 >= 0 /\ arg5-arg4 >= 0 /\ arg3 >= 0 /\ 21-arg4-n > 0 /\ 20-arg2 > 0), cost: n
New rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=20, arg4'=20, arg3'=0, (1 > 0 /\ -arg5+arg4 >= 0 /\ 19-arg4 >= 0 /\ -arg3 >= 0 /\ arg5-arg4 >= 0 /\ arg3 >= 0 /\ 20-arg2 > 0), cost: 20-arg4

Applied simplification
Original rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=20, arg4'=20, arg3'=0, (1 > 0 /\ -arg5+arg4 >= 0 /\ 19-arg4 >= 0 /\ -arg3 >= 0 /\ arg5-arg4 >= 0 /\ arg3 >= 0 /\ 20-arg2 > 0), cost: 20-arg4
New rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=20, arg4'=20, arg3'=0, (-arg5+arg4 >= 0 /\ -19+arg4 <= 0 /\ arg5-arg4 >= 0 /\ arg3 <= 0 /\ arg3 >= 0 /\ 20-arg2 > 0), cost: 20-arg4

Applied deletion
Removed the following rules: 13

Accelerated simple loops
Start location: __init
   9: f1_0_main_ConstantStackPush -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 1
  10: f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 1
  11: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P2, arg2'=1+arg2, arg4'=arg4P2, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ -1+arg3 == 0), cost: 1
  12: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -1+arg3 == 0 /\ 20-arg4 > 0), cost: 1
  14: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ 20-arg1 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
  15: f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg4, arg3'=1, (-arg5+arg4 == 0 /\ 20-arg4 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
  17: f484_0_dif_GE -> f484_0_dif_GE : arg5'=20, arg4'=20, arg3'=0, (-arg5+arg4 >= 0 /\ -19+arg4 <= 0 /\ arg5-arg4 >= 0 /\ arg3 <= 0 /\ arg3 >= 0 /\ 20-arg2 > 0), cost: 20-arg4
   8: __init -> f1_0_main_ConstantStackPush : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, TRUE, cost: 1


Applied chaining
First rule:
f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 1
Second rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=arg4, arg3'=1, (-arg5+arg4 == 0 /\ 20-arg4 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
New rule:
f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=1, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 2

Applied chaining
First rule:
f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 1
Second rule:
f484_0_dif_GE -> f484_0_dif_GE : arg5'=20, arg4'=20, arg3'=0, (-arg5+arg4 >= 0 /\ -19+arg4 <= 0 /\ arg5-arg4 >= 0 /\ arg3 <= 0 /\ arg3 >= 0 /\ 20-arg2 > 0), cost: 20-arg4
New rule:
f375_0_dif_GE -> f484_0_dif_GE : arg5'=20, arg4'=20, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 21

Applied deletion
Removed the following rules: 15 17

Chained accelerated rules with incoming rules
Start location: __init
   9: f1_0_main_ConstantStackPush -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 1
  10: f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 1
  18: f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=1, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 2
  19: f375_0_dif_GE -> f484_0_dif_GE : arg5'=20, arg4'=20, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 21
  11: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P2, arg2'=1+arg2, arg4'=arg4P2, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ -1+arg3 == 0), cost: 1
  12: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -1+arg3 == 0 /\ 20-arg4 > 0), cost: 1
  14: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ 20-arg1 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
   8: __init -> f1_0_main_ConstantStackPush : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, TRUE, cost: 1


Eliminating location f1_0_main_ConstantStackPush by chaining:

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 1
New rule:
__init -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 8 9

Eliminated locations on linear paths
Start location: __init
  10: f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 1
  18: f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=1, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 2
  19: f375_0_dif_GE -> f484_0_dif_GE : arg5'=20, arg4'=20, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 21
  11: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P2, arg2'=1+arg2, arg4'=arg4P2, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ -1+arg3 == 0), cost: 1
  12: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -1+arg3 == 0 /\ 20-arg4 > 0), cost: 1
  14: f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ 20-arg1 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
  20: __init -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 2


Eliminating location f484_0_dif_GE by chaining:

Applied chaining
First rule:
f375_0_dif_GE -> f484_0_dif_GE : arg5'=0, arg4'=0, arg3'=1, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 2
Second rule:
f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -1+arg3 == 0 /\ 20-arg4 > 0), cost: 1
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (0 == 0 /\ 20 > 0 /\ arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 3

Applied simplification
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (0 == 0 /\ 20 > 0 /\ arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 3
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 3

Applied chaining
First rule:
f375_0_dif_GE -> f484_0_dif_GE : arg5'=20, arg4'=20, arg3'=0, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 21
Second rule:
f484_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (-arg5+arg4 == 0 /\ -19+arg4 > 0 /\ 20-arg1 > 0 /\ arg3 == 0 /\ 20-arg2 > 0), cost: 1
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (0 == 0 /\ 1 > 0 /\ arg2-arg3 == 0 /\ 20-arg1 > 0 /\ 20-arg2 > 0), cost: 22

Applied simplification
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (0 == 0 /\ 1 > 0 /\ arg2-arg3 == 0 /\ 20-arg1 > 0 /\ 20-arg2 > 0), cost: 22
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (arg2-arg3 == 0 /\ 20-arg1 > 0 /\ 20-arg2 > 0), cost: 22

Applied deletion
Removed the following rules: 10 11 12 14 18 19

Eliminated locations on tree-shaped paths
Start location: __init
  21: f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 3
  22: f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (arg2-arg3 == 0 /\ 20-arg1 > 0 /\ 20-arg2 > 0), cost: 22
  20: __init -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 2


Applied acceleration
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=1+arg2, arg4'=arg4P3, arg3'=1+arg2, (arg2-arg3 == 0 /\ 20-arg2 > 0), cost: 3
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=arg2+n2, arg4'=arg4P3, arg3'=arg2+n2, (-1+n2 >= 0 /\ arg2-arg3 >= 0 /\ 21-arg2-n2 > 0 /\ -arg2+arg3 >= 0), cost: 3*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_MAhbAa.txt

Applied instantiation
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=arg2+n2, arg4'=arg4P3, arg3'=arg2+n2, (-1+n2 >= 0 /\ arg2-arg3 >= 0 /\ 21-arg2-n2 > 0 /\ -arg2+arg3 >= 0), cost: 3*n2
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=20, arg4'=arg4P3, arg3'=20, (1 > 0 /\ arg2-arg3 >= 0 /\ 19-arg2 >= 0 /\ -arg2+arg3 >= 0), cost: 60-3*arg2

Applied acceleration
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=1+arg2, arg4'=arg4P6, arg1'=1+arg1, arg3'=1+arg2, (arg2-arg3 == 0 /\ 20-arg1 > 0 /\ 20-arg2 > 0), cost: 22
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=arg2+n3, arg4'=arg4P6, arg1'=n3+arg1, arg3'=arg2+n3, (-1+n3 >= 0 /\ 21-n3-arg1 > 0 /\ arg2-arg3 >= 0 /\ 21-arg2-n3 > 0 /\ -arg2+arg3 >= 0), cost: 22*n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FIiiMH.txt

Applied instantiation
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=arg2+n3, arg4'=arg4P6, arg1'=n3+arg1, arg3'=arg2+n3, (-1+n3 >= 0 /\ 21-n3-arg1 > 0 /\ arg2-arg3 >= 0 /\ 21-arg2-n3 > 0 /\ -arg2+arg3 >= 0), cost: 22*n3
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20+arg2-arg1, arg4'=arg4P6, arg1'=20, arg3'=20+arg2-arg1, (1 > 0 /\ 1-arg2+arg1 > 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0 /\ 19-arg1 >= 0), cost: 440-22*arg1

Applied instantiation
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=arg2+n3, arg4'=arg4P6, arg1'=n3+arg1, arg3'=arg2+n3, (-1+n3 >= 0 /\ 21-n3-arg1 > 0 /\ arg2-arg3 >= 0 /\ 21-arg2-n3 > 0 /\ -arg2+arg3 >= 0), cost: 22*n3
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20, arg4'=arg4P6, arg1'=20-arg2+arg1, arg3'=20, (1 > 0 /\ 1+arg2-arg1 > 0 /\ arg2-arg3 >= 0 /\ 19-arg2 >= 0 /\ -arg2+arg3 >= 0), cost: 440-22*arg2

Applied simplification
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=20, arg4'=arg4P3, arg3'=20, (1 > 0 /\ arg2-arg3 >= 0 /\ 19-arg2 >= 0 /\ -arg2+arg3 >= 0), cost: 60-3*arg2
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=20, arg4'=arg4P3, arg3'=20, (arg2-arg3 >= 0 /\ -19+arg2 <= 0 /\ -arg2+arg3 >= 0), cost: 60-3*arg2

Applied simplification
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20+arg2-arg1, arg4'=arg4P6, arg1'=20, arg3'=20+arg2-arg1, (1 > 0 /\ 1-arg2+arg1 > 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0 /\ 19-arg1 >= 0), cost: 440-22*arg1
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20+arg2-arg1, arg4'=arg4P6, arg1'=20, arg3'=20+arg2-arg1, (1-arg2+arg1 > 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0 /\ -19+arg1 <= 0), cost: 440-22*arg1

Applied simplification
Original rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20, arg4'=arg4P6, arg1'=20-arg2+arg1, arg3'=20, (1 > 0 /\ 1+arg2-arg1 > 0 /\ arg2-arg3 >= 0 /\ 19-arg2 >= 0 /\ -arg2+arg3 >= 0), cost: 440-22*arg2
New rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20, arg4'=arg4P6, arg1'=20-arg2+arg1, arg3'=20, (1+arg2-arg1 > 0 /\ arg2-arg3 >= 0 /\ -19+arg2 <= 0 /\ -arg2+arg3 >= 0), cost: 440-22*arg2

Applied deletion
Removed the following rules: 21 22

Accelerated simple loops
Start location: __init
  26: f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=20, arg4'=arg4P3, arg3'=20, (arg2-arg3 >= 0 /\ -19+arg2 <= 0 /\ -arg2+arg3 >= 0), cost: 60-3*arg2
  27: f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20+arg2-arg1, arg4'=arg4P6, arg1'=20, arg3'=20+arg2-arg1, (1-arg2+arg1 > 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0 /\ -19+arg1 <= 0), cost: 440-22*arg1
  28: f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20, arg4'=arg4P6, arg1'=20-arg2+arg1, arg3'=20, (1+arg2-arg1 > 0 /\ arg2-arg3 >= 0 /\ -19+arg2 <= 0 /\ -arg2+arg3 >= 0), cost: 440-22*arg2
  20: __init -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 2


Applied chaining
First rule:
__init -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 2
Second rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P3, arg2'=20, arg4'=arg4P3, arg3'=20, (arg2-arg3 >= 0 /\ -19+arg2 <= 0 /\ -arg2+arg3 >= 0), cost: 60-3*arg2
New rule:
__init -> f375_0_dif_GE : arg5'=arg5P3, arg2'=20, arg4'=arg4P3, arg1'=0, arg3'=20, (0 >= 0 /\ -19 <= 0), cost: 62

Applied chaining
First rule:
__init -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 2
Second rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20+arg2-arg1, arg4'=arg4P6, arg1'=20, arg3'=20+arg2-arg1, (1-arg2+arg1 > 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0 /\ -19+arg1 <= 0), cost: 440-22*arg1
New rule:
__init -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20, arg4'=arg4P6, arg1'=20, arg3'=20, (0 == 0 /\ -19 <= 0), cost: 442

Applied chaining
First rule:
__init -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 2
Second rule:
f375_0_dif_GE -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20, arg4'=arg4P6, arg1'=20-arg2+arg1, arg3'=20, (1+arg2-arg1 > 0 /\ arg2-arg3 >= 0 /\ -19+arg2 <= 0 /\ -arg2+arg3 >= 0), cost: 440-22*arg2
New rule:
__init -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20, arg4'=arg4P6, arg1'=20, arg3'=20, (0 == 0 /\ -19 <= 0), cost: 442

Applied deletion
Removed the following rules: 26 27 28

Chained accelerated rules with incoming rules
Start location: __init
  20: __init -> f375_0_dif_GE : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=0, arg3'=0, TRUE, cost: 2
  29: __init -> f375_0_dif_GE : arg5'=arg5P3, arg2'=20, arg4'=arg4P3, arg1'=0, arg3'=20, (0 >= 0 /\ -19 <= 0), cost: 62
  30: __init -> f375_0_dif_GE : arg5'=arg5P6, arg2'=20, arg4'=arg4P6, arg1'=20, arg3'=20, (0 == 0 /\ -19 <= 0), cost: 442


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

