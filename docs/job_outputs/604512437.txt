unknown

Initial ITS

Start location: [1]
Program variables: oldx x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : y+4*x > 0, cost: 1
   7: [3] -> [8] : y+4*x <= 0, cost: 1
   3: [4] -> [5] : oldx'=x, T, cost: 1
   4: [5] -> [6] : x'=-2*oldx+4*y, T, cost: 1
   5: [6] -> [7] : y'=4*oldx, T, cost: 1
   6: [7] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: oldx x y
   8: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   7: [3] -> [8] : y+4*x <= 0, cost: 1
  12: [3] -> [3] : oldx'=x, x'=4*y-2*x, y'=4*x, y+4*x > 0, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : y+4*x > 0, cost: 1
	Second rule:
	[4] -> [5] : oldx'=x, T, cost: 1
	New rule:
	[3] -> [5] : oldx'=x, y+4*x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : oldx'=x, y+4*x > 0, cost: 1
	Second rule:
	[5] -> [6] : x'=-2*oldx+4*y, T, cost: 1
	New rule:
	[3] -> [6] : oldx'=x, x'=4*y-2*x, y+4*x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 9
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[3] -> [6] : oldx'=x, x'=4*y-2*x, y+4*x > 0, cost: 1
	Second rule:
	[6] -> [7] : y'=4*oldx, T, cost: 1
	New rule:
	[3] -> [7] : oldx'=x, x'=4*y-2*x, y'=4*x, y+4*x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 10
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[3] -> [7] : oldx'=x, x'=4*y-2*x, y'=4*x, y+4*x > 0, cost: 1
	Second rule:
	[7] -> [3] : T, cost: 1
	New rule:
	[3] -> [3] : oldx'=x, x'=4*y-2*x, y'=4*x, y+4*x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 11

Unrolled Loops

Start location: [1]
Program variables: oldx x y
   8: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   7: [3] -> [8] : y+4*x <= 0, cost: 1
  12: [3] -> [3] : oldx'=x, x'=4*y-2*x, y'=4*x, y+4*x > 0, cost: 1
  13: [3] -> [3] : oldx'=4*y-2*x, x'=-8*y+20*x, y'=16*y-8*x, (16*y-4*x > 0 /\ y+4*x > 0), cost: 1

	Unrolling

	Original rule:
	[3] -> [3] : oldx'=x, x'=4*y-2*x, y'=4*x, y+4*x > 0, cost: 1
	New rule:
	[3] -> [3] : oldx'=4*y-2*x, x'=-8*y+20*x, y'=16*y-8*x, (16*y-4*x > 0 /\ y+4*x > 0), cost: 1

Step with 8

	Trace

	8[T]
	
	Blocked

	[{}, {}]

Step with 7

	Trace

	8[T], 7[(y+4*x <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {7[T]}]

Step with 12

	Trace

	8[T], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 12

	Trace

	8[T], 12[(y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {}, {}]

Covered

	Trace

	8[T], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}]

Step with 13

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 13

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {}, {}]

Covered

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {13[T]}]

Step with 7

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 7[(y+4*x <= 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {13[T]}, {}]

Backtrack

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {7[T], 13[T]}]

Step with 12

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {7[T], 13[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 12

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {7[T], 13[T]}, {}, {}]

Covered

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {7[T], 13[T]}, {12[T]}]

Step with 13

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {7[T], 13[T]}, {12[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Covered

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {7[T], 13[T]}, {12[T], 13[T]}]

Step with 7

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 7[(y+4*x <= 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {7[T], 13[T]}, {12[T], 13[T]}, {}]

Backtrack

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {7[T], 13[T]}, {7[T], 12[T], 13[T]}]

Backtrack

	Trace

	8[T], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T]}, {7[T], 12[T], 13[T]}]

Backtrack

	Trace

	8[T], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T], 13[T]}]

Step with 7

	Trace

	8[T], 12[(y+4*x > 0)], 7[(y+4*x <= 0)]
	
	Blocked

	[{}, {7[T]}, {12[T], 13[T]}, {}]

Backtrack

	Trace

	8[T], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T]}, {7[T], 12[T], 13[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {7[T], 12[T]}]

Step with 13

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {}]

Step with 13

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {}, {}]

Covered

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {13[T]}]

Step with 7

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 7[(y+4*x <= 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {13[T]}, {}]

Backtrack

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}]

Step with 12

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {}]

Step with 12

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {}, {}]

Covered

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T]}]

Step with 13

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T]}, {}]

Step with 13

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T]}, {}, {}]

Covered

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T]}, {13[T]}]

Step with 7

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 7[(y+4*x <= 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T]}, {13[T]}, {}]

Backtrack

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T]}, {7[T], 13[T]}]

Step with 12

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T]}, {7[T], 13[T]}, {}]

Covered

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T]}, {7[T], 12[T], 13[T]}]

Backtrack

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T], 13[T]}]

Step with 7

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)], 7[(y+4*x <= 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {12[T], 13[T]}, {}]

Backtrack

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)], 12[(y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 13[T]}, {7[T], 12[T], 13[T]}]

Backtrack

	Trace

	8[T], 13[(16*y-4*x > 0 /\ y+4*x > 0)]
	
	Blocked

	[{}, {7[T], 12[T]}, {7[T], 12[T], 13[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {7[T], 12[T], 13[T]}]

Backtrack

	Trace

	Blocked

	[{8[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
