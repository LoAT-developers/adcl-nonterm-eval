WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=arg2P0, arg1'=arg1P0, (10-arg2P0 == 0 /\ -arg1P0 == 0), cost: 1
   1: f137_0_test_GE -> f137_0_test_GE : arg2'=arg2P1, arg1'=arg1P1, (arg2 > 0 /\ -arg1P1 == 0 /\ -arg2+arg1 < 0 /\ arg1-arg2P1 == 0), cost: 1
   2: f137_0_test_GE -> f137_0_test_GE : arg2'=arg2P2, arg1'=arg1P2, (arg2 > 0 /\ -arg2+arg1 < 0 /\ 1+arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0), cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=arg2P0, arg1'=arg1P0, (10-arg2P0 == 0 /\ -arg1P0 == 0), cost: 1
New rule:
f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=10, arg1'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
f137_0_test_GE -> f137_0_test_GE : arg2'=arg2P1, arg1'=arg1P1, (arg2 > 0 /\ -arg1P1 == 0 /\ -arg2+arg1 < 0 /\ arg1-arg2P1 == 0), cost: 1
New rule:
f137_0_test_GE -> f137_0_test_GE : arg2'=arg1, arg1'=0, (arg2 > 0 /\ arg2-arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f137_0_test_GE -> f137_0_test_GE : arg2'=arg2P2, arg1'=arg1P2, (arg2 > 0 /\ -arg2+arg1 < 0 /\ 1+arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0), cost: 1
New rule:
f137_0_test_GE -> f137_0_test_GE : arg1'=1+arg1, (arg2 > 0 /\ arg2-arg1 > 0), cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=10, arg1'=0, TRUE, cost: 1
   5: f137_0_test_GE -> f137_0_test_GE : arg2'=arg1, arg1'=0, (arg2 > 0 /\ arg2-arg1 > 0), cost: 1
   6: f137_0_test_GE -> f137_0_test_GE : arg1'=1+arg1, (arg2 > 0 /\ arg2-arg1 > 0), cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied acceleration
Original rule:
f137_0_test_GE -> f137_0_test_GE : arg1'=1+arg1, (arg2 > 0 /\ arg2-arg1 > 0), cost: 1
New rule:
f137_0_test_GE -> f137_0_test_GE : arg1'=n0+arg1, (arg2 > 0 /\ 1+arg2-n0-arg1 > 0 /\ n0 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_mgljHO.txt

Applied instantiation
Original rule:
f137_0_test_GE -> f137_0_test_GE : arg1'=n0+arg1, (arg2 > 0 /\ 1+arg2-n0-arg1 > 0 /\ n0 >= 0), cost: n0
New rule:
f137_0_test_GE -> f137_0_test_GE : arg1'=arg2, (1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1

Applied simplification
Original rule:
f137_0_test_GE -> f137_0_test_GE : arg1'=arg2, (1 > 0 /\ arg2 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1
New rule:
f137_0_test_GE -> f137_0_test_GE : arg1'=arg2, (arg2 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1

Applied deletion
Removed the following rules: 6

Accelerated simple loops
Start location: __init
   4: f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=10, arg1'=0, TRUE, cost: 1
   5: f137_0_test_GE -> f137_0_test_GE : arg2'=arg1, arg1'=0, (arg2 > 0 /\ arg2-arg1 > 0), cost: 1
   8: f137_0_test_GE -> f137_0_test_GE : arg1'=arg2, (arg2 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=10, arg1'=0, TRUE, cost: 1
Second rule:
f137_0_test_GE -> f137_0_test_GE : arg2'=arg1, arg1'=0, (arg2 > 0 /\ arg2-arg1 > 0), cost: 1
New rule:
f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=0, arg1'=0, 10 > 0, cost: 2

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=10, arg1'=0, TRUE, cost: 1
Second rule:
f137_0_test_GE -> f137_0_test_GE : arg1'=arg2, (arg2 > 0 /\ arg2-arg1 >= 0), cost: arg2-arg1
New rule:
f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=10, arg1'=10, (10 > 0 /\ 10 >= 0), cost: 11

Applied deletion
Removed the following rules: 5 8

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=10, arg1'=0, TRUE, cost: 1
   9: f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=0, arg1'=0, 10 > 0, cost: 2
  10: f1_0_main_ConstantStackPush -> f137_0_test_GE : arg2'=10, arg1'=10, (10 > 0 /\ 10 >= 0), cost: 11
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

