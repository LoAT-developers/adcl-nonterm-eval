NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l29, true>
<l1, l2, true>
<l3, l4, true>
<l5, l6, true>
<l7, l8, true, par{k_1^0 -> (1 + k_1^0)}>
<l9, l7, (1 <= (0 + destflag^0))>
<l9, l7, ((1 + destflag^0) <= 0)>
<l9, l7, ((0 + destflag^0) <= 0) /\ (0 <= (0 + destflag^0))>
<l10, l7, (1 <= (0 + sourceflag^0))>
<l10, l7, ((1 + sourceflag^0) <= 0)>
<l10, l9, ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0))>
<l11, l12, true>
<l13, l14, true, par{j^0 -> (1 + j^0)}>
<l15, l13, true>
<l15, l13, true, par{destflag^0 -> 0}>
<l15, l13, true>
<l16, l10, ((0 + nodecount^0) <= (0 + j^0))>
<l16, l15, ((1 + j^0) <= (0 + nodecount^0))>
<l17, l18, true, par{j^0 -> (1 + j^0)}>
<l8, l19, true>
<l20, l17, true>
<l20, l17, true, par{sourceflag^0 -> 1}>
<l20, l17, true>
<l21, l14, ((0 + nodecount^0) <= (0 + j^0)), par{destflag^0 -> 1, j^0 -> 0}>
<l21, l20, ((1 + j^0) <= (0 + nodecount^0))>
<l22, l23, true, par{h^0 -> (1 + h^0)}>
<l24, l22, true, par{min^0 -> (0 + h^0)}>
<l24, l22, true>
<l23, l25, true>
<l25, l18, ((0 + edgecount^0) <= (0 + h^0)), par{j^0 -> 0, sourceflag^0 -> 0}>
<l25, l24, ((1 + h^0) <= (0 + edgecount^0))>
<l19, l5, ((0 + edgecount^0) <= (0 + k_1^0)), par{k^0 -> (1 + k^0)}>
<l19, l23, ((1 + k_1^0) <= (0 + edgecount^0)), par{h^0 -> 0}>
<l12, l8, ((0 + edgecount^0) <= (0 + i^0)), par{k_1^0 -> 0}>
<l12, l11, ((1 + i^0) <= (0 + edgecount^0)), par{i^0 -> (1 + i^0)}>
<l18, l21, true>
<l26, l11, true, par{i^0 -> 0, min^0 -> 0}>
<l6, l27, ((0 + k^0) <= (~(1) + nodecount^0)) /\ ((~(1) + nodecount^0) <= (0 + k^0))>
<l6, l26, ((0 + nodecount^0) <= (0 + k^0))>
<l6, l26, ((1 + k^0) <= (~(1) + nodecount^0))>
<l4, l5, ((~(1) + nodecount^0) <= (0 + i^0)), par{k^0 -> 0}>
<l4, l3, ((1 + i^0) <= (~(1) + nodecount^0)), par{i^0 -> (1 + i^0)}>
<l14, l16, true>
<l2, l3, ((0 + nodecount^0) <= (0 + i^0)), par{i^0 -> 0}>
<l2, l1, ((1 + i^0) <= (0 + nodecount^0)), par{i^0 -> (1 + i^0)}>
<l28, l1, true, par{___lengthofvisited^0 -> (0 + edgecount^0), i^0 -> 1}>
<l29, l28, true>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l1, (i^0 = 1)>
<l1, l3, ((0 + nodecount^0) <= (0 + i^0)), par{i^0 -> 0}>
<l1, l1, ((1 + i^0) <= (0 + nodecount^0)), par{i^0 -> (1 + i^0)}>
<l3, l27, ((~(1) + nodecount^0) <= (0 + i^0)) /\ ((0 + 0) <= (~(1) + nodecount^0)) /\ ((~(1) + nodecount^0) <= (0 + 0)), par{k^0 -> 0}>
<l3, l11, ((~(1) + nodecount^0) <= (0 + i^0)) /\ ((0 + nodecount^0) <= (0 + 0)), par{i^0 -> 0, k^0 -> 0}>
<l3, l11, ((~(1) + nodecount^0) <= (0 + i^0)) /\ ((1 + 0) <= (~(1) + nodecount^0)), par{i^0 -> 0, k^0 -> 0}>
<l3, l3, ((1 + i^0) <= (~(1) + nodecount^0)), par{i^0 -> (1 + i^0)}>
<l11, l27, ((0 + edgecount^0) <= (0 + i^0)) /\ ((0 + edgecount^0) <= (0 + 0)) /\ ((0 + (1 + k^0)) <= (~(1) + nodecount^0)) /\ ((~(1) + nodecount^0) <= (0 + (1 + k^0))), par{k^0 -> (1 + k^0), k_1^0 -> 0}>
<l11, l11, ((0 + edgecount^0) <= (0 + i^0)) /\ ((0 + edgecount^0) <= (0 + 0)) /\ ((0 + nodecount^0) <= (0 + (1 + k^0))), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> 0}>
<l11, l11, ((0 + edgecount^0) <= (0 + i^0)) /\ ((0 + edgecount^0) <= (0 + 0)) /\ ((1 + (1 + k^0)) <= (~(1) + nodecount^0)), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> 0}>
<l11, l23, ((0 + edgecount^0) <= (0 + i^0)) /\ ((1 + 0) <= (0 + edgecount^0)), par{h^0 -> 0, k_1^0 -> 0}>
<l11, l11, ((1 + i^0) <= (0 + edgecount^0)), par{i^0 -> (1 + i^0)}>
<l14, l27, ((0 + nodecount^0) <= (0 + j^0)) /\ (1 <= (0 + sourceflag^0)) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + (1 + k^0)) <= (~(1) + nodecount^0)) /\ ((~(1) + nodecount^0) <= (0 + (1 + k^0))), par{k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ (1 <= (0 + sourceflag^0)) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + nodecount^0) <= (0 + (1 + k^0))), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ (1 <= (0 + sourceflag^0)) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((1 + (1 + k^0)) <= (~(1) + nodecount^0)), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l23, ((0 + nodecount^0) <= (0 + j^0)) /\ (1 <= (0 + sourceflag^0)) /\ ((1 + (1 + k_1^0)) <= (0 + edgecount^0)), par{h^0 -> 0, k_1^0 -> (1 + k_1^0)}>
<l14, l27, ((0 + nodecount^0) <= (0 + j^0)) /\ ((1 + sourceflag^0) <= 0) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + (1 + k^0)) <= (~(1) + nodecount^0)) /\ ((~(1) + nodecount^0) <= (0 + (1 + k^0))), par{k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ ((1 + sourceflag^0) <= 0) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + nodecount^0) <= (0 + (1 + k^0))), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ ((1 + sourceflag^0) <= 0) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((1 + (1 + k^0)) <= (~(1) + nodecount^0)), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l23, ((0 + nodecount^0) <= (0 + j^0)) /\ ((1 + sourceflag^0) <= 0) /\ ((1 + (1 + k_1^0)) <= (0 + edgecount^0)), par{h^0 -> 0, k_1^0 -> (1 + k_1^0)}>
<l14, l27, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ (1 <= (0 + destflag^0)) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + (1 + k^0)) <= (~(1) + nodecount^0)) /\ ((~(1) + nodecount^0) <= (0 + (1 + k^0))), par{k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ (1 <= (0 + destflag^0)) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + nodecount^0) <= (0 + (1 + k^0))), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ (1 <= (0 + destflag^0)) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((1 + (1 + k^0)) <= (~(1) + nodecount^0)), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l23, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ (1 <= (0 + destflag^0)) /\ ((1 + (1 + k_1^0)) <= (0 + edgecount^0)), par{h^0 -> 0, k_1^0 -> (1 + k_1^0)}>
<l14, l27, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ ((1 + destflag^0) <= 0) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + (1 + k^0)) <= (~(1) + nodecount^0)) /\ ((~(1) + nodecount^0) <= (0 + (1 + k^0))), par{k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ ((1 + destflag^0) <= 0) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + nodecount^0) <= (0 + (1 + k^0))), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ ((1 + destflag^0) <= 0) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((1 + (1 + k^0)) <= (~(1) + nodecount^0)), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l23, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ ((1 + destflag^0) <= 0) /\ ((1 + (1 + k_1^0)) <= (0 + edgecount^0)), par{h^0 -> 0, k_1^0 -> (1 + k_1^0)}>
<l14, l27, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ ((0 + destflag^0) <= 0) /\ (0 <= (0 + destflag^0)) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + (1 + k^0)) <= (~(1) + nodecount^0)) /\ ((~(1) + nodecount^0) <= (0 + (1 + k^0))), par{k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ ((0 + destflag^0) <= 0) /\ (0 <= (0 + destflag^0)) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((0 + nodecount^0) <= (0 + (1 + k^0))), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l11, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ ((0 + destflag^0) <= 0) /\ (0 <= (0 + destflag^0)) /\ ((0 + edgecount^0) <= (0 + (1 + k_1^0))) /\ ((1 + (1 + k^0)) <= (~(1) + nodecount^0)), par{i^0 -> 0, k^0 -> (1 + k^0), k_1^0 -> (1 + k_1^0)}>
<l14, l23, ((0 + nodecount^0) <= (0 + j^0)) /\ ((0 + sourceflag^0) <= 0) /\ (0 <= (0 + sourceflag^0)) /\ ((0 + destflag^0) <= 0) /\ (0 <= (0 + destflag^0)) /\ ((1 + (1 + k_1^0)) <= (0 + edgecount^0)), par{h^0 -> 0, k_1^0 -> (1 + k_1^0)}>
<l14, l14, ((1 + j^0) <= (0 + nodecount^0)), par{j^0 -> (1 + j^0)}>
<l14, l14, ((1 + j^0) <= (0 + nodecount^0)), par{destflag^0 -> 0, j^0 -> (1 + j^0)}>
<l14, l14, ((1 + j^0) <= (0 + nodecount^0)), par{j^0 -> (1 + j^0)}>
<l18, l14, ((0 + nodecount^0) <= (0 + j^0)), par{destflag^0 -> 1, j^0 -> 0}>
<l18, l18, ((1 + j^0) <= (0 + nodecount^0)), par{j^0 -> (1 + j^0)}>
<l18, l18, ((1 + j^0) <= (0 + nodecount^0)), par{j^0 -> (1 + j^0), sourceflag^0 -> 1}>
<l18, l18, ((1 + j^0) <= (0 + nodecount^0)), par{j^0 -> (1 + j^0)}>
<l23, l18, ((0 + edgecount^0) <= (0 + h^0)), par{j^0 -> 0, sourceflag^0 -> 0}>
<l23, l23, ((1 + h^0) <= (0 + edgecount^0)), par{h^0 -> (1 + h^0)}>
<l23, l23, ((1 + h^0) <= (0 + edgecount^0)), par{h^0 -> (1 + h^0)}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l1, l1, 1 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0, nodecount^0

Graph 2:
Transitions:
<l3, l3, 2 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
i^0, nodecount^0

Graph 3:
Transitions:
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
<l11, l11, 1 + i^0 <= edgecount^0, {i^0 -> 1 + i^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 + sourceflag^0 <= 0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 + sourceflag^0 <= 0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 + sourceflag^0 <= 0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 + destflag^0 <= 0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 + destflag^0 <= 0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 + destflag^0 <= 0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0, {j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l14, nodecount^0 <= j^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
<l18, l18, 1 + j^0 <= nodecount^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l18, 1 + j^0 <= nodecount^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
<l18, l18, 1 + j^0 <= nodecount^0, {j^0 -> 1 + j^0, rest remain the same}>
<l23, l18, edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Variables:
edgecount^0, i^0, k^0, nodecount^0, j^0, k_1^0, sourceflag^0, destflag^0, h^0

Graph 4:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l1, i^0 = 1, {all remain the same}>

Graph 2
<l1, l3, nodecount^0 <= i^0, {i^0 -> 0, rest remain the same}>

Graph 3
<l3, l11, nodecount^0 <= 0 /\ nodecount^0 <= 1 + i^0, {i^0 -> 0, k^0 -> 0, rest remain the same}>
<l3, l11, nodecount^0 <= 1 + i^0 /\ 2 <= nodecount^0, {i^0 -> 0, k^0 -> 0, rest remain the same}>

Graph 4
<l3, l27, nodecount^0 <= 1 + i^0 /\ nodecount^0 = 1, {k^0 -> 0, rest remain the same}>
<l11, l27, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 2 + k^0 = nodecount^0, {k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l14, l27, 1 <= sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 2 + k^0 = nodecount^0, {k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l27, 1 + sourceflag^0 <= 0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 2 + k^0 = nodecount^0, {k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l27, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ sourceflag^0 = 0 /\ 2 + k^0 = nodecount^0, {k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l27, 1 + destflag^0 <= 0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ sourceflag^0 = 0 /\ 2 + k^0 = nodecount^0, {k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l27, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0 /\ 2 + k^0 = nodecount^0, {k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 1 )
( 3 , 2 )
( 11 , 3 )
( 14 , 3 )
( 18 , 3 )
( 23 , 3 )
( 27 , 4 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001947

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001032s
[33mRanking function: [36m-1 - i^0 + nodecount^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001734

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000905s
[33mRanking function: [36m-2 - i^0 + nodecount^0[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.533092
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l11: 0 <= i^0[0m
[36mInvariant at l14: 0 <= destflag^0[0m
[36mInvariant at l18: 1 + k_1^0 <= h^0[0m
[36mInvariant at l23: 1 + k_1^0 <= edgecount^0[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l14, l11, 1 + destflag^0 <= 0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 + sourceflag^0 <= 0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 + sourceflag^0 <= 0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 + sourceflag^0 <= 0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l14, l11, 1 + destflag^0 <= 0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l14, l23, 1 + destflag^0 <= 0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l14, 1 + k_1^0 <= h^0 /\ nodecount^0 <= j^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Checking unfeasibility...
Time used: 0.968093
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l14: 0 <= sourceflag^0[0m
[36mInvariant at l18: 0 <= sourceflag^0[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l14, l11, 1 + sourceflag^0 <= 0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l14, l11, 1 + sourceflag^0 <= 0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l14, l23, 1 + sourceflag^0 <= 0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l14, 1 + k_1^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Checking unfeasibility...
Time used: 2.50282

Checking conditional termination of SCC {l11, l14, l18, l23}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.027681s
[33mRanking function: [36m-5 - 10*edgecount^0 - 2*k^0 + 2*nodecount^0[0m
New Graphs: 
Transitions:
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l14, 1 + k_1^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Variables:
destflag^0, edgecount^0, h^0, i^0, j^0, k^0, k_1^0, nodecount^0, sourceflag^0
Checking conditional termination of SCC {l11, l14, l18, l23}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.019723s
[33mRanking function: [36m-5 - 2*k^0 + 2*nodecount^0[0m
New Graphs: 
Transitions:
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l14, 1 + k_1^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Variables:
destflag^0, edgecount^0, h^0, i^0, j^0, k^0, k_1^0, nodecount^0, sourceflag^0
Checking conditional termination of SCC {l11, l14, l18, l23}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012340s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.269216s
Trying to remove transition: <l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.229666s
Time used: 0.217014
Trying to remove transition: <l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.156900s
Time used: 0.141027
Trying to remove transition: <l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.080289s
Time used: 0.065654
Trying to remove transition: <l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.084394s
Time used: 0.08221
Trying to remove transition: <l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.102618s
Time used: 0.100296
Trying to remove transition: <l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.111675s
Time used: 0.109297
Trying to remove transition: <l18, l14, 1 + k_1^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.076841s
Time used: 0.074493
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.178451s
Time used: 0.175898
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.171358s
Time used: 0.150475
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.127755s
Time used: 0.10698
Trying to remove transition: <l14, l23, nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.613571s
Time used: 0.592656
Trying to remove transition: <l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.149473s
Time used: 0.145904
Trying to remove transition: <l14, l23, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.991327s
Time used: 0.987657
Trying to remove transition: <l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.159681s
Time used: 0.155782
Trying to remove transition: <l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.935206s
Time used: 0.931352
Trying to remove transition: <l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.189612s
Time used: 0.18549
Trying to remove transition: <l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.150878s
Time used: 0.146802
Trying to remove transition: <l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.292614s
Time used: 0.26866
Trying to remove transition: <l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.090680s
Time used: 0.070523
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003159s
Time used: 4.00006
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.009463s
Time used: 4.00004
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.103687s
Time used: 1.06061
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 3.281138s
Time used: 3.22514
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.780444s
Time used: 0.780309

LOG: SAT solveNonLinear - Elapsed time: 4.061582s
Cost: 1; Total time: 4.00545
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l14: k_1^0 <= h^0 + j^0 + sourceflag^0[0m
[36mInvariant at l18: k_1^0 + sourceflag^0 <= h^0[0m
[36mInvariant at l23: k_1^0 <= edgecount^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l14, 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l14, 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - k^0[0m
New Graphs: 
Transitions:
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l14, 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Variables:
destflag^0, edgecount^0, h^0, i^0, j^0, k^0, k_1^0, nodecount^0, sourceflag^0
Checking conditional termination of SCC {l11, l14, l18, l23}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.019760s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.302775s
Trying to remove transition: <l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.170076s
Time used: 0.148012
Trying to remove transition: <l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.176464s
Time used: 0.156592
Trying to remove transition: <l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.109134s
Time used: 0.089114
Trying to remove transition: <l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.122824s
Time used: 0.118776
Trying to remove transition: <l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.149646s
Time used: 0.145484
Trying to remove transition: <l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.129429s
Time used: 0.125226
Trying to remove transition: <l18, l14, 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.106755s
Time used: 0.102804
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.146061s
Time used: 0.141855
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.157065s
Time used: 0.152689
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.149466s
Time used: 0.145429
Trying to remove transition: <l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.994000s
Time used: 0.990036
Trying to remove transition: <l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.545787s
Time used: 0.541267
Trying to remove transition: <l14, l23, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.017185s
Time used: 1.01204
Trying to remove transition: <l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.603052s
Time used: 0.598258
Trying to remove transition: <l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.284620s
Time used: 1.27954
Trying to remove transition: <l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.465764s
Time used: 0.459784
Trying to remove transition: <l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.198217s
Time used: 0.19259
Trying to remove transition: <l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.308278s
Time used: 0.295973
Trying to remove transition: <l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.119642s
Time used: 0.096182
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003844s
Time used: 4.00012
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.009149s
Time used: 4.00003
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.108598s
Time used: 1.07786
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 3.017394s
Time used: 2.96231
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.006610s
Time used: 1.00647

LOG: SAT solveNonLinear - Elapsed time: 4.024004s
Cost: 1; Total time: 3.96878
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l11: 0 <= 1 + k^0[0m
[36mInvariant at l14: 0 <= 1 + k^0[0m
[36mInvariant at l18: 0 <= 1 + k^0[0m
[36mInvariant at l23: 0 <= 1 + k^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ 3 + k^0 <= nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l14, 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0 /\ 0 <= 1 + k^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ 50001 <= k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l14, 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0 /\ 0 <= 1 + k^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - k^0 + nodecount^0[0m
New Graphs: 
Transitions:
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0, {i^0 -> 1 + i^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l14, 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0 /\ 0 <= 1 + k^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
Variables:
destflag^0, edgecount^0, h^0, i^0, j^0, k^0, k_1^0, nodecount^0, sourceflag^0
Checking conditional termination of SCC {l11, l14, l18, l23}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.023119s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.327170s
Trying to remove transition: <l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.259260s
Time used: 0.254879
Trying to remove transition: <l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.236168s
Time used: 0.209757
Trying to remove transition: <l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0 /\ 0 <= 1 + k^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.141612s
Time used: 0.114979
Trying to remove transition: <l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.144442s
Time used: 0.14063
Trying to remove transition: <l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.157206s
Time used: 0.153162
Trying to remove transition: <l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.151301s
Time used: 0.147462
Trying to remove transition: <l18, l14, 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.134262s
Time used: 0.130613
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.181206s
Time used: 0.177419
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.162077s
Time used: 0.157834
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.219148s
Time used: 0.215251
Trying to remove transition: <l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.360674s
Time used: 1.35661
Trying to remove transition: <l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.506117s
Time used: 0.501318
Trying to remove transition: <l14, l23, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.416718s
Time used: 1.4117
Trying to remove transition: <l14, l11, 1 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.690555s
Time used: 0.685462
Trying to remove transition: <l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.421805s
Time used: 1.41654
Trying to remove transition: <l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.524440s
Time used: 0.519353
Trying to remove transition: <l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0, {i^0 -> 1 + i^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.278818s
Time used: 0.273752
Trying to remove transition: <l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= 1 + k^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.183898s
Time used: 0.165956
Trying to remove transition: <l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.211000s
Time used: 0.207375
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.003943s
Time used: 4.00005
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.009411s
Time used: 4.00002
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.174706s
Time used: 1.14286
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 3.349408s
Time used: 3.29079
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.717404s
Time used: 0.717301

LOG: SAT solveNonLinear - Elapsed time: 4.066812s
Cost: 1; Total time: 4.00809
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l11: 0 <= k^0[0m
[36mInvariant at l14: destflag^0 <= 1[0m
[36mInvariant at l18: 1 + k_1^0 <= edgecount^0[0m
[36mInvariant at l23: k_1^0 <= edgecount^0 + k^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= k^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= k^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= k^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0 /\ 0 <= k^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ destflag^0 <= 1 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ destflag^0 <= 1 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0 /\ destflag^0 = 1, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0 /\ destflag^0 = 1, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0 /\ destflag^0 = 1, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 0 <= 1 + k^0 /\ 3 + k^0 <= nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l14, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= k^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0 /\ 0 <= k^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ destflag^0 <= 1 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ sourceflag^0 = 0 /\ destflag^0 = 1, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0 /\ destflag^0 = 1, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l14, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - k^0 - nodecount^0[0m
New Graphs: 
Transitions:
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ 50001 <= k^0 + nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= k^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0 /\ 0 <= k^0, {i^0 -> 1 + i^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ destflag^0 <= 1 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ 50001 <= k^0 + nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ 50001 <= k^0 + nodecount^0 /\ sourceflag^0 = 0 /\ destflag^0 = 1, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0 /\ destflag^0 = 1, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ 50001 <= k^0 + nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l14, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
<l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
Variables:
destflag^0, edgecount^0, h^0, i^0, j^0, k^0, k_1^0, nodecount^0, sourceflag^0
Checking conditional termination of SCC {l11, l14, l18, l23}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.026782s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.487916s
Trying to remove transition: <l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.188893s
Time used: 0.18372
Trying to remove transition: <l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.171618s
Time used: 0.167664
Trying to remove transition: <l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0 /\ k_1^0 <= edgecount^0 + k^0 /\ 0 <= 1 + k^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.138591s
Time used: 0.134468
Trying to remove transition: <l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.177521s
Time used: 0.173327
Trying to remove transition: <l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.204628s
Time used: 0.199939
Trying to remove transition: <l18, l18, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.180059s
Time used: 0.175595
Trying to remove transition: <l18, l14, 1 + k_1^0 <= edgecount^0 /\ 1 + k_1^0 <= h^0 /\ k_1^0 + sourceflag^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0 /\ 0 <= 1 + k^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.168963s
Time used: 0.164625
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.194378s
Time used: 0.190268
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.224556s
Time used: 0.220603
Trying to remove transition: <l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ 0 <= sourceflag^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.201861s
Time used: 0.197915
Trying to remove transition: <l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.210501s
Time used: 1.20645
Trying to remove transition: <l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ 50001 <= k^0 + nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.747473s
Time used: 0.742588
Trying to remove transition: <l14, l23, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0 /\ destflag^0 = 1, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 2.339859s
Time used: 2.33441
Trying to remove transition: <l14, l11, k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ 50001 <= k^0 + nodecount^0 /\ sourceflag^0 = 0 /\ destflag^0 = 1, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.687300s
Time used: 0.681474
Trying to remove transition: <l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ destflag^0 <= 1 /\ 0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.663021s
Time used: 1.65623
Trying to remove transition: <l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ k_1^0 <= h^0 + j^0 + sourceflag^0 /\ nodecount^0 <= j^0 /\ destflag^0 <= 1 /\ edgecount^0 <= 1 + k_1^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ 50001 <= k^0 + nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.672724s
Time used: 0.667245
Trying to remove transition: <l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0 /\ 0 <= k^0, {i^0 -> 1 + i^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.350921s
Time used: 0.345454
Trying to remove transition: <l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 0 <= k^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.344477s
Time used: 0.322414
Trying to remove transition: <l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 50001 <= k^0 /\ 50001 + nodecount^0 <= k^0 /\ 50001 <= k^0 + nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.140569s
Time used: 0.136764
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.004378s
Time used: 4.00056
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.011345s
Time used: 4.00002
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.227734s
Time used: 1.19569
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.057631s
Time used: 4.00002
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l3, l11, nodecount^0 <= 0 /\ nodecount^0 <= 1 + i^0, {i^0 -> 0, k^0 -> 0, rest remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l3, l11, nodecount^0 <= 0 /\ nodecount^0 <= 1 + i^0, {i^0 -> 0, k^0 -> 0, rest remain the same}>
* Postcondition  : 1 <= 0
Postcodition moved up: 1 <= 0

LOG: Try proving POST
Postcondition: 1 <= 0

LOG: CALL check - Post:1 <= 0 - Process 2
* Exit transition: <l1, l3, nodecount^0 <= i^0 /\ nodecount^0 <= 0, {i^0 -> 0, rest remain the same}>
* Postcondition  : 1 <= 0
Postcodition moved up: 1 <= 0

LOG: Try proving POST
Postcondition: 1 <= 0

LOG: CALL check - Post:1 <= 0 - Process 3
* Exit transition: <l0, l1, i^0 = 1, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012864s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.013007s

LOG: NarrowEntry size 1
Narrowing transition: 
<l1, l1, 1 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l1, 0 <= 0 /\ i^0 = 1, {all remain the same}>
END ENTRIES:
GRAPH:
<l1, l1, 1 + i^0 <= nodecount^0 /\ 0 <= 0, {i^0 -> 1 + i^0, rest remain the same}>
END GRAPH:
EXIT: <l1, l3, nodecount^0 <= i^0 /\ nodecount^0 <= 0, {i^0 -> 0, rest remain the same}>
POST: 1 <= 0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.069061s
Time used: 0.06877
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.034103s
Time used: 0.034008

LOG: SAT solveNonLinear - Elapsed time: 0.103164s
Cost: 1; Total time: 0.102778
[31mFailed at location 1: 1 <= nodecount^0[0m
Before Improving: 
[36mQuasi-invariant at l1: 1 <= nodecount^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003905s
Remaining time after improvement: 0.997242
[33mPostcondition implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l1: 1 <= nodecount^0[0m
Postcondition: 1 <= nodecount^0

LOG: CALL check - Post:1 <= nodecount^0 - Process 4
* Exit transition: <l0, l1, 0 <= 0 /\ i^0 = 1, {all remain the same}>
* Postcondition  : 1 <= nodecount^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013940s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.014068s

LOG: NarrowEntry size 1
INVARIANTS: 
1: 
Quasi-INVARIANTS to narrow Graph: 
1: 1 <= nodecount^0 , 
Narrowing transition: 
<l1, l1, 1 + i^0 <= nodecount^0 /\ 0 <= 0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l0, l1, 0 <= 0 /\ nodecount^0 <= 0 /\ i^0 = 1, {all remain the same}>
END ENTRIES:
GRAPH:
<l1, l1, 1 + i^0 <= nodecount^0 /\ 0 <= 0 /\ nodecount^0 <= 0, {i^0 -> 1 + i^0, rest remain the same}>
END GRAPH:
EXIT: <l1, l3, nodecount^0 <= i^0 /\ nodecount^0 <= 0, {i^0 -> 0, rest remain the same}>
POST: 1 <= 0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.069554s
Time used: 0.06928
Improving Solution with cost 50 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.036382s
Time used: 0.036365

LOG: SAT solveNonLinear - Elapsed time: 0.105936s
Cost: 50; Total time: 0.105645
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l1: 1 + nodecount^0 <= i^0[0m
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l1, l1, 1 + i^0 <= nodecount^0 /\ 0 <= 0 /\ nodecount^0 <= 0, {i^0 -> 1 + i^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004844s
Time used: 0.00281
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.055299s
Time used: 0.055173
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.012347s
Time used: 1.01199

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 1.438205s

LOG: NarrowEntry size 1
Narrowing transition: 
<l3, l3, 2 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: Narrow transition size 1
ENTRIES:
<l1, l3, 0 <= 0 /\ nodecount^0 <= i^0 /\ nodecount^0 <= 0, {i^0 -> 0, rest remain the same}>
END ENTRIES:
GRAPH:
<l3, l3, 0 <= 0 /\ nodecount^0 <= 0 /\ 2 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, rest remain the same}>
END GRAPH:
EXIT: <l3, l11, nodecount^0 <= 0 /\ nodecount^0 <= 1 + i^0, {i^0 -> 0, k^0 -> 0, rest remain the same}>
POST: 1 <= 0


LOG: Try proving POST
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.069649s
Time used: 0.069373
Improving Solution with cost 50 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.033683s
Time used: 0.03367

LOG: SAT solveNonLinear - Elapsed time: 0.103332s
Cost: 50; Total time: 0.103043
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l3: nodecount^0 <= 1 + i^0[0m
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l3, l3, 0 <= 0 /\ nodecount^0 <= 0 /\ 2 + i^0 <= nodecount^0, {i^0 -> 1 + i^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004973s
Time used: 0.002871
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.054104s
Time used: 0.053986
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.012503s
Time used: 1.01217

LOG: Postcondition is not implied - no solution
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 2.727471s
Cannot prove unreachability

Proving non-termination of subgraph 3
Transitions:
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0, {i^0 -> 1 + i^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l23, nodecount^0 <= j^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l14, 1 + k_1^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0, {j^0 -> 1 + j^0, rest remain the same}>
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0, {h^0 -> 1 + h^0, rest remain the same}>
Variables:
edgecount^0, i^0, k^0, nodecount^0, j^0, k_1^0, sourceflag^0, destflag^0, h^0

Checking conditional non-termination of SCC {l11, l14, l18, l23}...
EXIT TRANSITIONS:
<l11, end, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 2 + k^0 = nodecount^0, {all remain the same}>
<l14, end, 1 <= destflag^0 /\ 1 <= sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 2 + k^0 = nodecount^0, {all remain the same}>
<l14, end, 1 <= sourceflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ destflag^0 = 0 /\ 2 + k^0 = nodecount^0, {all remain the same}>
<l14, end, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ sourceflag^0 = 0 /\ 2 + k^0 = nodecount^0, {all remain the same}>
<l14, end, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0 /\ 2 + k^0 = nodecount^0, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.534964s
Time used: 0.533064
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.110097s
Time used: 0.11007

LOG: SAT solveNonLinear - Elapsed time: 0.645061s
Cost: 1; Total time: 0.643134
[31mFailed at location 11: nodecount^0 <= k^0[0m
Before Improving: 
[36mQuasi-invariant at l11: nodecount^0 <= k^0[0m
[36mQuasi-invariant at l14: nodecount^0 <= 1 + k^0[0m
[36mQuasi-invariant at l18: nodecount^0 <= 1 + k^0[0m
[36mQuasi-invariant at l23: nodecount^0 <= 1 + k^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.020746s
Remaining time after improvement: 0.985438
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l11: nodecount^0 <= k^0[0m
[36mQuasi-invariant at l14: nodecount^0 <= 1 + k^0[0m
[36mQuasi-invariant at l18: nodecount^0 <= 1 + k^0[0m
[36mQuasi-invariant at l23: nodecount^0 <= 1 + k^0[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l11: 1
Closed exits from l14: 4

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l11, l11, edgecount^0 <= 0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l23, 1 <= edgecount^0 /\ edgecount^0 <= i^0 /\ 0 <= i^0 /\ nodecount^0 <= k^0, {h^0 -> 0, k_1^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, 1 + i^0 <= edgecount^0 /\ 0 <= i^0 /\ nodecount^0 <= k^0, {i^0 -> 1 + i^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l14, l11, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= sourceflag^0 /\ 0 <= destflag^0 /\ nodecount^0 <= j^0 /\ nodecount^0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l14, l11, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, 1 <= destflag^0 /\ nodecount^0 <= j^0 /\ nodecount^0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ nodecount^0 <= 1 + k^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l14, l11, nodecount^0 <= j^0 /\ edgecount^0 <= 1 + k_1^0 /\ 3 + k^0 <= nodecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {i^0 -> 0, k^0 -> 1 + k^0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l23, nodecount^0 <= j^0 /\ nodecount^0 <= 1 + k^0 /\ 2 + k_1^0 <= edgecount^0 /\ destflag^0 = 0 /\ sourceflag^0 = 0, {h^0 -> 0, k_1^0 -> 1 + k_1^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0 /\ nodecount^0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0 /\ nodecount^0 <= 1 + k^0, {destflag^0 -> 0, j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l14, l14, 1 + j^0 <= nodecount^0 /\ 0 <= destflag^0 /\ 0 <= sourceflag^0 /\ nodecount^0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l14, 1 + k_1^0 <= h^0 /\ nodecount^0 <= j^0 /\ 0 <= sourceflag^0 /\ nodecount^0 <= 1 + k^0, {destflag^0 -> 1, j^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0 /\ nodecount^0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0 /\ nodecount^0 <= 1 + k^0, {j^0 -> 1 + j^0, sourceflag^0 -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l18, l18, 1 + k_1^0 <= h^0 /\ 1 + j^0 <= nodecount^0 /\ 0 <= sourceflag^0 /\ nodecount^0 <= 1 + k^0, {j^0 -> 1 + j^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l18, 1 + k_1^0 <= edgecount^0 /\ edgecount^0 <= h^0 /\ nodecount^0 <= 1 + k^0, {j^0 -> 0, sourceflag^0 -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ nodecount^0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l23, l23, 1 + h^0 <= edgecount^0 /\ 1 + k_1^0 <= edgecount^0 /\ nodecount^0 <= 1 + k^0, {h^0 -> 1 + h^0, rest remain the same}>

Calling reachability with...
Transition: <l11, end, true, {all remain the same}>
Conditions: nodecount^0 <= k^0, 
Transition: <l11, end, true, {all remain the same}>
Conditions: nodecount^0 <= k^0, 
OPEN EXITS: 
<l11, end, nodecount^0 <= k^0, {all remain the same}>
<l11, end, nodecount^0 <= k^0, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l3, l11, nodecount^0 <= 0 /\ nodecount^0 <= 1 + i^0, {i^0 -> 0, k^0 -> 0, rest remain the same}>
Conditions: nodecount^0 <= k^0, 
Transition: <l3, l11, nodecount^0 <= 1 + i^0 /\ 2 <= nodecount^0, {i^0 -> 0, k^0 -> 0, rest remain the same}>
Conditions: nodecount^0 <= k^0, 
Transition: <l3, l11, nodecount^0 <= 0 /\ nodecount^0 <= 1 + i^0, {i^0 -> 0, k^0 -> 0, rest remain the same}>
Conditions: nodecount^0 <= k^0, 
Transition: <l3, l11, nodecount^0 <= 1 + i^0 /\ 2 <= nodecount^0, {i^0 -> 0, k^0 -> 0, rest remain the same}>
Conditions: nodecount^0 <= k^0, 
OPEN EXITS: 
<l3, l11, nodecount^0 <= 1 + i^0, {i^0 -> 0, k^0 -> 0, rest remain the same}> (condsUp: nodecount^0 <= 0, nodecount^0 <= 0)
<l3, l11, nodecount^0 <= 1 + i^0, {i^0 -> 0, k^0 -> 0, rest remain the same}> (condsUp: nodecount^0 <= 0, nodecount^0 <= 0)

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l1, l3, nodecount^0 <= i^0, {i^0 -> 0, rest remain the same}>
Conditions: nodecount^0 <= 1 + i^0, nodecount^0 <= 0, nodecount^0 <= 0, 
Transition: <l1, l3, nodecount^0 <= i^0, {i^0 -> 0, rest remain the same}>
Conditions: nodecount^0 <= 1 + i^0, nodecount^0 <= 0, nodecount^0 <= 0, 
OPEN EXITS: 
<l1, l3, nodecount^0 <= i^0, {i^0 -> 0, rest remain the same}> (condsUp: nodecount^0 <= 1, nodecount^0 <= 0, nodecount^0 <= 0)
<l1, l3, nodecount^0 <= i^0, {i^0 -> 0, rest remain the same}> (condsUp: nodecount^0 <= 1, nodecount^0 <= 0, nodecount^0 <= 0)

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l1, i^0 = 1, {all remain the same}>
Conditions: nodecount^0 <= i^0, nodecount^0 <= 1, nodecount^0 <= 0, nodecount^0 <= 0, 
Transition: <l0, l1, i^0 = 1, {all remain the same}>
Conditions: nodecount^0 <= i^0, nodecount^0 <= 1, nodecount^0 <= 0, nodecount^0 <= 0, 
OPEN EXITS: 
<l0, l1, nodecount^0 <= i^0 /\ nodecount^0 <= 0 /\ i^0 = 1, {all remain the same}>
<l0, l1, nodecount^0 <= i^0 /\ nodecount^0 <= 0 /\ i^0 = 1, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
