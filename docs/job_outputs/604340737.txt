YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, (main_x < 0)>
<l1, l4, not((main_x < 0))>
<l2, l3, true, seq{main_x -> ~(main_x)}>
<l3, l4, true>
<l4, l5, (main_y < 0)>
<l4, l7, not((main_y < 0))>
<l5, l6, true, seq{main_y -> ~(main_y)}>
<l6, l7, true>
<l7, l8, true>
<l8, l16, not((main_y > 0))>
<l8, l9, (main_y > 0)>
<l9, l10, true, seq{main_r -> main_x}>
<l10, l11, true>
<l11, l14, not((main_r >= main_y))>
<l11, l12, (main_r >= main_y)>
<l12, l13, true, seq{main_r -> (main_r - main_y)}>
<l13, l11, true>
<l14, l15, true, seq{main_x -> main_y, main_y -> main_r}>
<l15, l8, true>
<l16, l17, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l18, true, seq{main__func_return_ -> 0}>
<l18, l19, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l19, l20, true, seq{main_x -> varCall_1}>
<l20, l21, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l21, l1, true, seq{main_y -> varCall_2}>
<l1, l2, (main_x < 0)>
<l1, l4, not((main_x < 0))>
<l2, l3, true, seq{main_x -> ~(main_x)}>
<l3, l4, true>
<l4, l5, (main_y < 0)>
<l4, l7, not((main_y < 0))>
<l5, l6, true, seq{main_y -> ~(main_y)}>
<l6, l7, true>
<l7, l8, true>
<l8, l9, (main_y > 0)>
<l8, l16, not((main_y > 0))>
<l9, l10, true, seq{main_r -> main_x}>
<l10, l11, true>
<l11, l12, (main_r >= main_y)>
<l11, l14, not((main_r >= main_y))>
<l12, l13, true, seq{main_r -> (main_r - main_y)}>
<l13, l11, true>
<l14, l15, true, seq{main_x -> main_y, main_y -> main_r}>
<l15, l8, true>
<l16, l17, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
17, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [5 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 17, col: 6> <line: 18, col: 6>
main | function | [integer, ()] | <line: 13, col: 1>
r | local variable | integer | <line: 15, col: 2> | <line: 24, col: 3> <line: 25, col: 10> <line: 26, col: 4> <line: 26, col: 8> <line: 30, col: 7>
x | local variable | integer | <line: 15, col: 2> | <line: 17, col: 2> <line: 20, col: 6> <line: 20, col: 12> <line: 20, col: 17> <line: 24, col: 7> <line: 29, col: 3>
y | local variable | integer | <line: 15, col: 2> | <line: 18, col: 2> <line: 21, col: 6> <line: 21, col: 12> <line: 21, col: 17> <line: 22, col: 9> <line: 25, col: 13> <line: 26, col: 10> <line: 29, col: 7> <line: 30, col: 3>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l11, (undef3 < 0) /\ (undef4 < 0) /\ (~(undef4) > 0), par{main_r -> ~(undef3), main_y -> ~(undef4)}>
<l0, l11, (undef3 < 0) /\ not((undef4 < 0)) /\ (undef4 > 0), par{main_r -> ~(undef3), main_y -> undef4}>
<l0, l17, (undef3 < 0) /\ not((undef4 < 0)) /\ not((undef4 > 0)), par{main_y -> undef4}>
<l0, l11, not((undef3 < 0)) /\ (undef4 < 0) /\ (~(undef4) > 0), par{main_r -> undef3, main_y -> ~(undef4)}>
<l0, l11, not((undef3 < 0)) /\ not((undef4 < 0)) /\ (undef4 > 0), par{main_r -> undef3, main_y -> undef4}>
<l0, l17, not((undef3 < 0)) /\ not((undef4 < 0)) /\ not((undef4 > 0)), par{main_y -> undef4}>
<l11, l11, (main_r >= main_y), par{main_r -> (main_r - main_y)}>
<l11, l11, not((main_r >= main_y)) /\ (main_r > 0), par{main_r -> main_y, main_y -> main_r}>
<l11, l17, not((main_r >= main_y)) /\ not((main_r > 0)), par{main_y -> main_r}>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
17, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l11, l11, main_y <= main_r, {main_r -> main_r - main_y, rest remain the same}>
<l11, l11, 1 + main_r <= main_y /\ 1 <= main_r, {main_r -> main_y, main_y -> main_r, rest remain the same}>
Variables:
main_r, main_y

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l11, 1 + undef3 <= 0 /\ 1 + undef4 <= 0, {main_r -> -undef3, main_y -> -undef4, rest remain the same}>
<l0, l11, 1 + undef3 <= 0 /\ 1 <= undef4, {main_r -> -undef3, main_y -> undef4, rest remain the same}>
<l0, l11, 0 <= undef3 /\ 1 + undef4 <= 0, {main_r -> undef3, main_y -> -undef4, rest remain the same}>
<l0, l11, 0 <= undef3 /\ 1 <= undef4, {main_r -> undef3, main_y -> undef4, rest remain the same}>

Graph 2
<l0, l17, 1 + undef3 <= 0 /\ undef4 = 0, {main_y -> undef4, rest remain the same}>
<l0, l17, 0 <= undef3 /\ undef4 = 0, {main_y -> undef4, rest remain the same}>
<l11, l17, main_r <= 0 /\ 1 + main_r <= main_y, {main_y -> main_r, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 11 , 1 )
( 17 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002927

Checking conditional termination of SCC {l11}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000784s
[33mRanking function: [36m-1 + main_y[0m
New Graphs: 
Transitions:
<l11, l11, main_y <= main_r, {main_r -> main_r - main_y, rest remain the same}>
Variables:
main_r, main_y
Checking conditional termination of SCC {l11}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000324s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000885s
[605 : 607]
[605 : 608]
Successful child: 607
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, main_y <= main_r /\ 1 <= main_y, {main_r -> main_r - main_y, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, 1 + main_r <= main_y /\ 1 <= main_r /\ 1 <= main_y, {main_r -> main_y, main_y -> main_r, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l11, l11, main_y <= main_r /\ 1 <= main_y, {main_r -> main_r - main_y, rest remain the same}>
[33mRanking function: [36mmain_r - main_y[0m
New Graphs: 
INVARIANTS: 
11: 1 <= main_y , 
Quasi-INVARIANTS to narrow Graph: 
11: 
Proving termination of subgraph 2
Analyzing SCC {l17}...
No cycles found.

[32mProgram Terminates[0m
