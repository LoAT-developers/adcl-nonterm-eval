unknown

Initial ITS

Start location: l29
Program variables: __const_50^0 __const_5^0 chkerr^0 i9^0 i^0 j10^0 j^0 k11^0 n8^0 n^0 nmax7^0 nmax^0 ret_ludcmp14^0 w12^0 w^0
   0: l0 -> l1 : __const_50^0'=__const_50^post1, __const_5^0'=__const_5^post1, chkerr^0'=chkerr^post1, i9^0'=i9^post1, i^0'=i^post1, j10^0'=j10^post1, j^0'=j^post1, k11^0'=k11^post1, n8^0'=n8^post1, n^0'=n^post1, nmax7^0'=nmax7^post1, nmax^0'=nmax^post1, ret_ludcmp14^0'=ret_ludcmp14^post1, w12^0'=w12^post1, w^0'=w^post1, (ret_ludcmp14^0-ret_ludcmp14^post1 == 0 /\ -w^post1+w^0 == 0 /\ -__const_5^post1+__const_5^0 == 0 /\ -nmax7^post1+nmax7^0 == 0 /\ -nmax^post1+nmax^0 == 0 /\ -n^post1+n^0 == 0 /\ j10^0-j10^post1 == 0 /\ n8^0-n8^post1 == 0 /\ -chkerr^post1+chkerr^0 == 0 /\ i9^0-i9^post1 == 0 /\ -__const_50^post1+__const_50^0 == 0 /\ -j^post1+j^0 == 0 /\ -i^post1+i^0 == 0 /\ k11^0-k11^post1 == 0 /\ -w12^post1+w12^0 == 0), cost: 1
  25: l1 -> l12 : __const_50^0'=__const_50^post26, __const_5^0'=__const_5^post26, chkerr^0'=chkerr^post26, i9^0'=i9^post26, i^0'=i^post26, j10^0'=j10^post26, j^0'=j^post26, k11^0'=k11^post26, n8^0'=n8^post26, n^0'=n^post26, nmax7^0'=nmax7^post26, nmax^0'=nmax^post26, ret_ludcmp14^0'=ret_ludcmp14^post26, w12^0'=w12^post26, w^0'=w^post26, (n^0-n^post26 == 0 /\ -i9^post26+i9^0 == 0 /\ -__const_50^post26+__const_50^0 == 0 /\ -1-i9^0+j10^post26 == 0 /\ k11^0-k11^post26 == 0 /\ -i^post26+i^0 == 0 /\ -nmax^post26+nmax^0 == 0 /\ -nmax7^post26+nmax7^0 == 0 /\ j^0-j^post26 == 0 /\ -__const_5^post26+__const_5^0 == 0 /\ -w12^post26+w12^0 == 0 /\ 1+n8^0-j10^0 <= 0 /\ ret_ludcmp14^0-ret_ludcmp14^post26 == 0 /\ -w^post26+w^0 == 0 /\ -chkerr^post26+chkerr^0 == 0 /\ n8^0-n8^post26 == 0), cost: 1
  26: l1 -> l20 : __const_50^0'=__const_50^post27, __const_5^0'=__const_5^post27, chkerr^0'=chkerr^post27, i9^0'=i9^post27, i^0'=i^post27, j10^0'=j10^post27, j^0'=j^post27, k11^0'=k11^post27, n8^0'=n8^post27, n^0'=n^post27, nmax7^0'=nmax7^post27, nmax^0'=nmax^post27, ret_ludcmp14^0'=ret_ludcmp14^post27, w12^0'=w12^post27, w^0'=w^post27, (0 == 0 /\ __const_50^0-__const_50^post27 == 0 /\ __const_5^0-__const_5^post27 == 0 /\ -j10^post27+j10^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post27 == 0 /\ -nmax^post27+nmax^0 == 0 /\ -n^post27+n^0 == 0 /\ -n8^post27+n8^0 == 0 /\ -n8^0+j10^0 <= 0 /\ nmax7^0-nmax7^post27 == 0 /\ k11^0-k11^post27 == 0 /\ -j^post27+j^0 == 0 /\ i^0-i^post27 == 0 /\ i9^0-i9^post27 == 0 /\ -w^post27+w^0 == 0 /\ -chkerr^post27+chkerr^0 == 0), cost: 1
   1: l2 -> l3 : __const_50^0'=__const_50^post2, __const_5^0'=__const_5^post2, chkerr^0'=chkerr^post2, i9^0'=i9^post2, i^0'=i^post2, j10^0'=j10^post2, j^0'=j^post2, k11^0'=k11^post2, n8^0'=n8^post2, n^0'=n^post2, nmax7^0'=nmax7^post2, nmax^0'=nmax^post2, ret_ludcmp14^0'=ret_ludcmp14^post2, w12^0'=w12^post2, w^0'=w^post2, (n^0-n^post2 == 0 /\ -__const_5^post2+__const_5^0 == 0 /\ -nmax7^post2+nmax7^0 == 0 /\ k11^0-k11^post2 == 0 /\ -nmax^post2+nmax^0 == 0 /\ 1-i9^0+i9^post2 == 0 /\ -chkerr^post2+chkerr^0 == 0 /\ __const_50^0-__const_50^post2 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post2 == 0 /\ -i^post2+i^0 == 0 /\ -w^post2+w^0 == 0 /\ 1+n8^0-j10^0 <= 0 /\ j^0-j^post2 == 0 /\ n8^0-n8^post2 == 0 /\ j10^0-j10^post2 == 0 /\ -w12^post2+w12^0 == 0), cost: 1
   2: l2 -> l4 : __const_50^0'=__const_50^post3, __const_5^0'=__const_5^post3, chkerr^0'=chkerr^post3, i9^0'=i9^post3, i^0'=i^post3, j10^0'=j10^post3, j^0'=j^post3, k11^0'=k11^post3, n8^0'=n8^post3, n^0'=n^post3, nmax7^0'=nmax7^post3, nmax^0'=nmax^post3, ret_ludcmp14^0'=ret_ludcmp14^post3, w12^0'=w12^post3, w^0'=w^post3, (0 == 0 /\ -nmax7^post3+nmax7^0 == 0 /\ i9^0-i9^post3 == 0 /\ k11^0-k11^post3 == 0 /\ -__const_5^post3+__const_5^0 == 0 /\ -1-j10^0+j10^post3 == 0 /\ -n8^0+j10^0 <= 0 /\ __const_50^0-__const_50^post3 == 0 /\ -chkerr^post3+chkerr^0 == 0 /\ -w^post3+w^0 == 0 /\ -nmax^post3+nmax^0 == 0 /\ j^0-j^post3 == 0 /\ n8^0-n8^post3 == 0 /\ n^0-n^post3 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post3 == 0 /\ -i^post3+i^0 == 0), cost: 1
  29: l3 -> l5 : __const_50^0'=__const_50^post30, __const_5^0'=__const_5^post30, chkerr^0'=chkerr^post30, i9^0'=i9^post30, i^0'=i^post30, j10^0'=j10^post30, j^0'=j^post30, k11^0'=k11^post30, n8^0'=n8^post30, n^0'=n^post30, nmax7^0'=nmax7^post30, nmax^0'=nmax^post30, ret_ludcmp14^0'=ret_ludcmp14^post30, w12^0'=w12^post30, w^0'=w^post30, (-chkerr^post30+chkerr^0 == 0 /\ n8^0-n8^post30 == 0 /\ n^0-n^post30 == 0 /\ -i^post30+i^0 == 0 /\ -i9^post30+i9^0 == 0 /\ -nmax^post30+nmax^0 == 0 /\ k11^0-k11^post30 == 0 /\ j^0-j^post30 == 0 /\ j10^0-j10^post30 == 0 /\ -__const_5^post30+__const_5^0 == 0 /\ -__const_50^post30+__const_50^0 == 0 /\ -nmax7^post30+nmax7^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post30 == 0 /\ -w^post30+w^0 == 0 /\ -w12^post30+w12^0 == 0), cost: 1
  34: l4 -> l2 : __const_50^0'=__const_50^post35, __const_5^0'=__const_5^post35, chkerr^0'=chkerr^post35, i9^0'=i9^post35, i^0'=i^post35, j10^0'=j10^post35, j^0'=j^post35, k11^0'=k11^post35, n8^0'=n8^post35, n^0'=n^post35, nmax7^0'=nmax7^post35, nmax^0'=nmax^post35, ret_ludcmp14^0'=ret_ludcmp14^post35, w12^0'=w12^post35, w^0'=w^post35, (-nmax7^post35+nmax7^0 == 0 /\ j10^0-j10^post35 == 0 /\ k11^0-k11^post35 == 0 /\ i^0-i^post35 == 0 /\ -ret_ludcmp14^post35+ret_ludcmp14^0 == 0 /\ -w12^post35+w12^0 == 0 /\ i9^0-i9^post35 == 0 /\ -w^post35+w^0 == 0 /\ -nmax^post35+nmax^0 == 0 /\ -n^post35+n^0 == 0 /\ __const_50^0-__const_50^post35 == 0 /\ -j^post35+j^0 == 0 /\ __const_5^0-__const_5^post35 == 0 /\ n8^0-n8^post35 == 0 /\ -chkerr^post35+chkerr^0 == 0), cost: 1
   3: l5 -> l6 : __const_50^0'=__const_50^post4, __const_5^0'=__const_5^post4, chkerr^0'=chkerr^post4, i9^0'=i9^post4, i^0'=i^post4, j10^0'=j10^post4, j^0'=j^post4, k11^0'=k11^post4, n8^0'=n8^post4, n^0'=n^post4, nmax7^0'=nmax7^post4, nmax^0'=nmax^post4, ret_ludcmp14^0'=ret_ludcmp14^post4, w12^0'=w12^post4, w^0'=w^post4, (-n8^post4+n8^0 == 0 /\ -__const_5^post4+__const_5^0 == 0 /\ ret_ludcmp14^post4 == 0 /\ __const_50^0-__const_50^post4 == 0 /\ 1+i9^0 <= 0 /\ i^0-i^post4 == 0 /\ -n^post4+n^0 == 0 /\ -w^post4+w^0 == 0 /\ w12^0-w12^post4 == 0 /\ nmax7^0-nmax7^post4 == 0 /\ -nmax^post4+nmax^0 == 0 /\ i9^0-i9^post4 == 0 /\ k11^0-k11^post4 == 0 /\ -j^post4+j^0 == 0 /\ chkerr^post4-ret_ludcmp14^post4 == 0 /\ -j10^post4+j10^0 == 0), cost: 1
   4: l5 -> l4 : __const_50^0'=__const_50^post5, __const_5^0'=__const_5^post5, chkerr^0'=chkerr^post5, i9^0'=i9^post5, i^0'=i^post5, j10^0'=j10^post5, j^0'=j^post5, k11^0'=k11^post5, n8^0'=n8^post5, n^0'=n^post5, nmax7^0'=nmax7^post5, nmax^0'=nmax^post5, ret_ludcmp14^0'=ret_ludcmp14^post5, w12^0'=w12^post5, w^0'=w^post5, (0 == 0 /\ -nmax7^post5+nmax7^0 == 0 /\ -i9^0 <= 0 /\ -n^post5+n^0 == 0 /\ -nmax^post5+nmax^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post5 == 0 /\ n8^0-n8^post5 == 0 /\ -chkerr^post5+chkerr^0 == 0 /\ i9^0-i9^post5 == 0 /\ k11^0-k11^post5 == 0 /\ -w^post5+w^0 == 0 /\ -i^post5+i^0 == 0 /\ -__const_5^post5+__const_5^0 == 0 /\ -1-i9^0+j10^post5 == 0 /\ __const_50^0-__const_50^post5 == 0 /\ -j^post5+j^0 == 0), cost: 1
   5: l7 -> l8 : __const_50^0'=__const_50^post6, __const_5^0'=__const_5^post6, chkerr^0'=chkerr^post6, i9^0'=i9^post6, i^0'=i^post6, j10^0'=j10^post6, j^0'=j^post6, k11^0'=k11^post6, n8^0'=n8^post6, n^0'=n^post6, nmax7^0'=nmax7^post6, nmax^0'=nmax^post6, ret_ludcmp14^0'=ret_ludcmp14^post6, w12^0'=w12^post6, w^0'=w^post6, (-chkerr^post6+chkerr^0 == 0 /\ n^0-n^post6 == 0 /\ i9^0-i9^post6 == 0 /\ k11^0-k11^post6 == 0 /\ -nmax7^post6+nmax7^0 == 0 /\ -nmax^post6+nmax^0 == 0 /\ -w^post6+w^0 == 0 /\ j^0-j^post6 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post6 == 0 /\ -i^post6+i^0 == 0 /\ -__const_5^post6+__const_5^0 == 0 /\ j10^0-j10^post6 == 0 /\ n8^0-n8^post6 == 0 /\ __const_50^0-__const_50^post6 == 0 /\ -w12^post6+w12^0 == 0), cost: 1
  18: l8 -> l18 : __const_50^0'=__const_50^post19, __const_5^0'=__const_5^post19, chkerr^0'=chkerr^post19, i9^0'=i9^post19, i^0'=i^post19, j10^0'=j10^post19, j^0'=j^post19, k11^0'=k11^post19, n8^0'=n8^post19, n^0'=n^post19, nmax7^0'=nmax7^post19, nmax^0'=nmax^post19, ret_ludcmp14^0'=ret_ludcmp14^post19, w12^0'=w12^post19, w^0'=w^post19, (-k11^0+i9^0 <= 0 /\ -n^post19+n^0 == 0 /\ -nmax^post19+nmax^0 == 0 /\ -i^post19+i^0 == 0 /\ -__const_5^post19+__const_5^0 == 0 /\ -j^post19+j^0 == 0 /\ -chkerr^post19+chkerr^0 == 0 /\ w12^0-w12^post19 == 0 /\ -n8^post19+n8^0 == 0 /\ i9^0-i9^post19 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post19 == 0 /\ -j10^post19+j10^0 == 0 /\ __const_50^0-__const_50^post19 == 0 /\ k11^0-k11^post19 == 0 /\ nmax7^0-nmax7^post19 == 0 /\ -w^post19+w^0 == 0), cost: 1
  19: l8 -> l7 : __const_50^0'=__const_50^post20, __const_5^0'=__const_5^post20, chkerr^0'=chkerr^post20, i9^0'=i9^post20, i^0'=i^post20, j10^0'=j10^post20, j^0'=j^post20, k11^0'=k11^post20, n8^0'=n8^post20, n^0'=n^post20, nmax7^0'=nmax7^post20, nmax^0'=nmax^post20, ret_ludcmp14^0'=ret_ludcmp14^post20, w12^0'=w12^post20, w^0'=w^post20, (0 == 0 /\ -i^post20+i^0 == 0 /\ -__const_5^post20+__const_5^0 == 0 /\ -1-k11^0+k11^post20 == 0 /\ 1+k11^0-i9^0 <= 0 /\ ret_ludcmp14^0-ret_ludcmp14^post20 == 0 /\ -n8^post20+n8^0 == 0 /\ -nmax^post20+nmax^0 == 0 /\ -n^post20+n^0 == 0 /\ -chkerr^post20+chkerr^0 == 0 /\ nmax7^0-nmax7^post20 == 0 /\ __const_50^0-__const_50^post20 == 0 /\ i9^0-i9^post20 == 0 /\ -j^post20+j^0 == 0 /\ -j10^post20+j10^0 == 0 /\ -w^post20+w^0 == 0), cost: 1
   6: l9 -> l10 : __const_50^0'=__const_50^post7, __const_5^0'=__const_5^post7, chkerr^0'=chkerr^post7, i9^0'=i9^post7, i^0'=i^post7, j10^0'=j10^post7, j^0'=j^post7, k11^0'=k11^post7, n8^0'=n8^post7, n^0'=n^post7, nmax7^0'=nmax7^post7, nmax^0'=nmax^post7, ret_ludcmp14^0'=ret_ludcmp14^post7, w12^0'=w12^post7, w^0'=w^post7, (-chkerr^post7+chkerr^0 == 0 /\ __const_5^0-__const_5^post7 == 0 /\ j10^0-j10^post7 == 0 /\ -nmax7^post7+nmax7^0 == 0 /\ w12^0-w12^post7 == 0 /\ k11^0-k11^post7 == 0 /\ i9^0-j10^0 <= 0 /\ __const_50^0-__const_50^post7 == 0 /\ -1-i9^0+i9^post7 == 0 /\ -w^post7+w^0 == 0 /\ -nmax^post7+nmax^0 == 0 /\ n8^0-n8^post7 == 0 /\ -i^post7+i^0 == 0 /\ j^0-j^post7 == 0 /\ n^0-n^post7 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post7 == 0), cost: 1
   7: l9 -> l11 : __const_50^0'=__const_50^post8, __const_5^0'=__const_5^post8, chkerr^0'=chkerr^post8, i9^0'=i9^post8, i^0'=i^post8, j10^0'=j10^post8, j^0'=j^post8, k11^0'=k11^post8, n8^0'=n8^post8, n^0'=n^post8, nmax7^0'=nmax7^post8, nmax^0'=nmax^post8, ret_ludcmp14^0'=ret_ludcmp14^post8, w12^0'=w12^post8, w^0'=w^post8, (0 == 0 /\ __const_5^0-__const_5^post8 == 0 /\ -chkerr^post8+chkerr^0 == 0 /\ -n8^post8+n8^0 == 0 /\ 1-i9^0+j10^0 <= 0 /\ __const_50^0-__const_50^post8 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post8 == 0 /\ -1+j10^post8-j10^0 == 0 /\ -j^post8+j^0 == 0 /\ -w^post8+w^0 == 0 /\ nmax7^0-nmax7^post8 == 0 /\ -nmax^post8+nmax^0 == 0 /\ k11^0-k11^post8 == 0 /\ -n^post8+n^0 == 0 /\ i^0-i^post8 == 0 /\ i9^0-i9^post8 == 0), cost: 1
  16: l10 -> l14 : __const_50^0'=__const_50^post17, __const_5^0'=__const_5^post17, chkerr^0'=chkerr^post17, i9^0'=i9^post17, i^0'=i^post17, j10^0'=j10^post17, j^0'=j^post17, k11^0'=k11^post17, n8^0'=n8^post17, n^0'=n^post17, nmax7^0'=nmax7^post17, nmax^0'=nmax^post17, ret_ludcmp14^0'=ret_ludcmp14^post17, w12^0'=w12^post17, w^0'=w^post17, (nmax7^0-nmax7^post17 == 0 /\ i9^0-i9^post17 == 0 /\ -j^post17+j^0 == 0 /\ __const_50^0-__const_50^post17 == 0 /\ __const_5^0-__const_5^post17 == 0 /\ -chkerr^post17+chkerr^0 == 0 /\ k11^0-k11^post17 == 0 /\ -n^post17+n^0 == 0 /\ -w^post17+w^0 == 0 /\ -nmax^post17+nmax^0 == 0 /\ -j10^post17+j10^0 == 0 /\ w12^0-w12^post17 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post17 == 0 /\ n8^0-n8^post17 == 0 /\ i^0-i^post17 == 0), cost: 1
  21: l11 -> l9 : __const_50^0'=__const_50^post22, __const_5^0'=__const_5^post22, chkerr^0'=chkerr^post22, i9^0'=i9^post22, i^0'=i^post22, j10^0'=j10^post22, j^0'=j^post22, k11^0'=k11^post22, n8^0'=n8^post22, n^0'=n^post22, nmax7^0'=nmax7^post22, nmax^0'=nmax^post22, ret_ludcmp14^0'=ret_ludcmp14^post22, w12^0'=w12^post22, w^0'=w^post22, (n8^0-n8^post22 == 0 /\ i9^0-i9^post22 == 0 /\ -__const_50^post22+__const_50^0 == 0 /\ n^0-n^post22 == 0 /\ -i^post22+i^0 == 0 /\ k11^0-k11^post22 == 0 /\ -nmax^post22+nmax^0 == 0 /\ -nmax7^post22+nmax7^0 == 0 /\ -__const_5^post22+__const_5^0 == 0 /\ j^0-j^post22 == 0 /\ j10^0-j10^post22 == 0 /\ -w12^post22+w12^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post22 == 0 /\ -chkerr^post22+chkerr^0 == 0 /\ -w^post22+w^0 == 0), cost: 1
   8: l12 -> l13 : __const_50^0'=__const_50^post9, __const_5^0'=__const_5^post9, chkerr^0'=chkerr^post9, i9^0'=i9^post9, i^0'=i^post9, j10^0'=j10^post9, j^0'=j^post9, k11^0'=k11^post9, n8^0'=n8^post9, n^0'=n^post9, nmax7^0'=nmax7^post9, nmax^0'=nmax^post9, ret_ludcmp14^0'=ret_ludcmp14^post9, w12^0'=w12^post9, w^0'=w^post9, (-w12^post9+w12^0 == 0 /\ j10^0-j10^post9 == 0 /\ chkerr^0-chkerr^post9 == 0 /\ -nmax7^post9+nmax7^0 == 0 /\ -n^post9+n^0 == 0 /\ i^0-i^post9 == 0 /\ n8^0-n8^post9 == 0 /\ i9^0-i9^post9 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post9 == 0 /\ -w^post9+w^0 == 0 /\ -nmax^post9+nmax^0 == 0 /\ k11^0-k11^post9 == 0 /\ __const_50^0-__const_50^post9 == 0 /\ -__const_5^post9+__const_5^0 == 0 /\ -j^post9+j^0 == 0), cost: 1
  14: l13 -> l17 : __const_50^0'=__const_50^post15, __const_5^0'=__const_5^post15, chkerr^0'=chkerr^post15, i9^0'=i9^post15, i^0'=i^post15, j10^0'=j10^post15, j^0'=j^post15, k11^0'=k11^post15, n8^0'=n8^post15, n^0'=n^post15, nmax7^0'=nmax7^post15, nmax^0'=nmax^post15, ret_ludcmp14^0'=ret_ludcmp14^post15, w12^0'=w12^post15, w^0'=w^post15, (__const_5^0-__const_5^post15 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post15 == 0 /\ -n^post15+n^0 == 0 /\ -chkerr^post15+chkerr^0 == 0 /\ nmax^0-nmax^post15 == 0 /\ -w12^post15+w12^0 == 0 /\ __const_50^0-__const_50^post15 == 0 /\ -w^post15+w^0 == 0 /\ -j^post15+j^0 == 0 /\ -1-i9^0+i9^post15 == 0 /\ -j10^post15+j10^0 == 0 /\ nmax7^0-nmax7^post15 == 0 /\ k11^0-k11^post15 == 0 /\ 1+n8^0-j10^0 <= 0 /\ i^0-i^post15 == 0 /\ -n8^post15+n8^0 == 0), cost: 1
  15: l13 -> l15 : __const_50^0'=__const_50^post16, __const_5^0'=__const_5^post16, chkerr^0'=chkerr^post16, i9^0'=i9^post16, i^0'=i^post16, j10^0'=j10^post16, j^0'=j^post16, k11^0'=k11^post16, n8^0'=n8^post16, n^0'=n^post16, nmax7^0'=nmax7^post16, nmax^0'=nmax^post16, ret_ludcmp14^0'=ret_ludcmp14^post16, w12^0'=w12^post16, w^0'=w^post16, (0 == 0 /\ -j^post16+j^0 == 0 /\ -__const_5^post16+__const_5^0 == 0 /\ -i^post16+i^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post16 == 0 /\ -w^post16+w^0 == 0 /\ -chkerr^post16+chkerr^0 == 0 /\ -n^post16+n^0 == 0 /\ -nmax^post16+nmax^0 == 0 /\ -n8^0+j10^0 <= 0 /\ nmax7^0-nmax7^post16 == 0 /\ -n8^post16+n8^0 == 0 /\ i9^0-i9^post16 == 0 /\ -j10^post16+j10^0 == 0 /\ __const_50^0-__const_50^post16 == 0 /\ k11^post16 == 0), cost: 1
   9: l14 -> l3 : __const_50^0'=__const_50^post10, __const_5^0'=__const_5^post10, chkerr^0'=chkerr^post10, i9^0'=i9^post10, i^0'=i^post10, j10^0'=j10^post10, j^0'=j^post10, k11^0'=k11^post10, n8^0'=n8^post10, n^0'=n^post10, nmax7^0'=nmax7^post10, nmax^0'=nmax^post10, ret_ludcmp14^0'=ret_ludcmp14^post10, w12^0'=w12^post10, w^0'=w^post10, (n^0-n^post10 == 0 /\ 1-i9^0+n8^0 <= 0 /\ -chkerr^post10+chkerr^0 == 0 /\ w12^0-w12^post10 == 0 /\ j10^0-j10^post10 == 0 /\ -nmax7^post10+nmax7^0 == 0 /\ -i^post10+i^0 == 0 /\ k11^0-k11^post10 == 0 /\ -j^post10+j^0 == 0 /\ -nmax^post10+nmax^0 == 0 /\ -w^post10+w^0 == 0 /\ 1-n8^0+i9^post10 == 0 /\ -__const_5^post10+__const_5^0 == 0 /\ n8^0-n8^post10 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post10 == 0 /\ __const_50^0-__const_50^post10 == 0), cost: 1
  10: l14 -> l11 : __const_50^0'=__const_50^post11, __const_5^0'=__const_5^post11, chkerr^0'=chkerr^post11, i9^0'=i9^post11, i^0'=i^post11, j10^0'=j10^post11, j^0'=j^post11, k11^0'=k11^post11, n8^0'=n8^post11, n^0'=n^post11, nmax7^0'=nmax7^post11, nmax^0'=nmax^post11, ret_ludcmp14^0'=ret_ludcmp14^post11, w12^0'=w12^post11, w^0'=w^post11, (0 == 0 /\ -nmax7^post11+nmax7^0 == 0 /\ -chkerr^post11+chkerr^0 == 0 /\ __const_5^0-__const_5^post11 == 0 /\ j10^post11 == 0 /\ i9^0-n8^0 <= 0 /\ -j^post11+j^0 == 0 /\ __const_50^0-__const_50^post11 == 0 /\ k11^0-k11^post11 == 0 /\ -w^post11+w^0 == 0 /\ -nmax^post11+nmax^0 == 0 /\ -n^post11+n^0 == 0 /\ i^0-i^post11 == 0 /\ n8^0-n8^post11 == 0 /\ i9^0-i9^post11 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post11 == 0), cost: 1
  11: l15 -> l16 : __const_50^0'=__const_50^post12, __const_5^0'=__const_5^post12, chkerr^0'=chkerr^post12, i9^0'=i9^post12, i^0'=i^post12, j10^0'=j10^post12, j^0'=j^post12, k11^0'=k11^post12, n8^0'=n8^post12, n^0'=n^post12, nmax7^0'=nmax7^post12, nmax^0'=nmax^post12, ret_ludcmp14^0'=ret_ludcmp14^post12, w12^0'=w12^post12, w^0'=w^post12, (__const_5^0-__const_5^post12 == 0 /\ -j^post12+j^0 == 0 /\ -chkerr^post12+chkerr^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post12 == 0 /\ __const_50^0-__const_50^post12 == 0 /\ k11^0-k11^post12 == 0 /\ -w^post12+w^0 == 0 /\ -nmax^post12+nmax^0 == 0 /\ -j10^post12+j10^0 == 0 /\ -n8^post12+n8^0 == 0 /\ -n^post12+n^0 == 0 /\ w12^0-w12^post12 == 0 /\ nmax7^0-nmax7^post12 == 0 /\ i^0-i^post12 == 0 /\ i9^0-i9^post12 == 0), cost: 1
  12: l16 -> l12 : __const_50^0'=__const_50^post13, __const_5^0'=__const_5^post13, chkerr^0'=chkerr^post13, i9^0'=i9^post13, i^0'=i^post13, j10^0'=j10^post13, j^0'=j^post13, k11^0'=k11^post13, n8^0'=n8^post13, n^0'=n^post13, nmax7^0'=nmax7^post13, nmax^0'=nmax^post13, ret_ludcmp14^0'=ret_ludcmp14^post13, w12^0'=w12^post13, w^0'=w^post13, (-w12^post13+w12^0 == 0 /\ 1-k11^0+i9^0 <= 0 /\ -j^post13+j^0 == 0 /\ chkerr^0-chkerr^post13 == 0 /\ -n^post13+n^0 == 0 /\ -nmax7^post13+nmax7^0 == 0 /\ i^0-i^post13 == 0 /\ i9^0-i9^post13 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post13 == 0 /\ n8^0-n8^post13 == 0 /\ -w^post13+w^0 == 0 /\ -nmax^post13+nmax^0 == 0 /\ -1-j10^0+j10^post13 == 0 /\ __const_50^0-__const_50^post13 == 0 /\ k11^0-k11^post13 == 0 /\ -__const_5^post13+__const_5^0 == 0), cost: 1
  13: l16 -> l15 : __const_50^0'=__const_50^post14, __const_5^0'=__const_5^post14, chkerr^0'=chkerr^post14, i9^0'=i9^post14, i^0'=i^post14, j10^0'=j10^post14, j^0'=j^post14, k11^0'=k11^post14, n8^0'=n8^post14, n^0'=n^post14, nmax7^0'=nmax7^post14, nmax^0'=nmax^post14, ret_ludcmp14^0'=ret_ludcmp14^post14, w12^0'=w12^post14, w^0'=w^post14, (0 == 0 /\ j10^0-j10^post14 == 0 /\ -chkerr^post14+chkerr^0 == 0 /\ k11^0-i9^0 <= 0 /\ -j^post14+j^0 == 0 /\ i9^0-i9^post14 == 0 /\ -i^post14+i^0 == 0 /\ -1+k11^post14-k11^0 == 0 /\ -nmax^post14+nmax^0 == 0 /\ -w^post14+w^0 == 0 /\ -n8^post14+n8^0 == 0 /\ -n^post14+n^0 == 0 /\ nmax7^0-nmax7^post14 == 0 /\ -__const_5^post14+__const_5^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post14 == 0 /\ __const_50^0-__const_50^post14 == 0), cost: 1
  41: l17 -> l21 : __const_50^0'=__const_50^post42, __const_5^0'=__const_5^post42, chkerr^0'=chkerr^post42, i9^0'=i9^post42, i^0'=i^post42, j10^0'=j10^post42, j^0'=j^post42, k11^0'=k11^post42, n8^0'=n8^post42, n^0'=n^post42, nmax7^0'=nmax7^post42, nmax^0'=nmax^post42, ret_ludcmp14^0'=ret_ludcmp14^post42, w12^0'=w12^post42, w^0'=w^post42, (-k11^post42+k11^0 == 0 /\ w12^0-w12^post42 == 0 /\ -__const_5^post42+__const_5^0 == 0 /\ -w^post42+w^0 == 0 /\ i^0-i^post42 == 0 /\ -chkerr^post42+chkerr^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post42 == 0 /\ i9^0-i9^post42 == 0 /\ -nmax^post42+nmax^0 == 0 /\ -n^post42+n^0 == 0 /\ __const_50^0-__const_50^post42 == 0 /\ -j^post42+j^0 == 0 /\ -n8^post42+n8^0 == 0 /\ -j10^post42+j10^0 == 0 /\ nmax7^0-nmax7^post42 == 0), cost: 1
  17: l18 -> l0 : __const_50^0'=__const_50^post18, __const_5^0'=__const_5^post18, chkerr^0'=chkerr^post18, i9^0'=i9^post18, i^0'=i^post18, j10^0'=j10^post18, j^0'=j^post18, k11^0'=k11^post18, n8^0'=n8^post18, n^0'=n^post18, nmax7^0'=nmax7^post18, nmax^0'=nmax^post18, ret_ludcmp14^0'=ret_ludcmp14^post18, w12^0'=w12^post18, w^0'=w^post18, (i9^0-i9^post18 == 0 /\ -__const_5^post18+__const_5^0 == 0 /\ -w^post18+w^0 == 0 /\ -nmax^post18+nmax^0 == 0 /\ n8^0-n8^post18 == 0 /\ -i^post18+i^0 == 0 /\ n^0-n^post18 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post18 == 0 /\ -1-j10^0+j10^post18 == 0 /\ -chkerr^post18+chkerr^0 == 0 /\ k11^0-k11^post18 == 0 /\ -nmax7^post18+nmax7^0 == 0 /\ -__const_50^post18+__const_50^0 == 0 /\ j^0-j^post18 == 0 /\ -w12^post18+w12^0 == 0), cost: 1
  20: l19 -> l7 : __const_50^0'=__const_50^post21, __const_5^0'=__const_5^post21, chkerr^0'=chkerr^post21, i9^0'=i9^post21, i^0'=i^post21, j10^0'=j10^post21, j^0'=j^post21, k11^0'=k11^post21, n8^0'=n8^post21, n^0'=n^post21, nmax7^0'=nmax7^post21, nmax^0'=nmax^post21, ret_ludcmp14^0'=ret_ludcmp14^post21, w12^0'=w12^post21, w^0'=w^post21, (nmax7^0-nmax7^post21 == 0 /\ i^0-i^post21 == 0 /\ i9^0-i9^post21 == 0 /\ -nmax^post21+nmax^0 == 0 /\ -chkerr^post21+chkerr^0 == 0 /\ -n^post21+n^0 == 0 /\ __const_50^0-__const_50^post21 == 0 /\ w^0-w^post21 == 0 /\ __const_5^0-__const_5^post21 == 0 /\ k11^post21 == 0 /\ w12^0-w12^post21 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post21 == 0 /\ -j^post21+j^0 == 0 /\ -j10^post21+j10^0 == 0 /\ n8^0-n8^post21 == 0), cost: 1
  22: l20 -> l18 : __const_50^0'=__const_50^post23, __const_5^0'=__const_5^post23, chkerr^0'=chkerr^post23, i9^0'=i9^post23, i^0'=i^post23, j10^0'=j10^post23, j^0'=j^post23, k11^0'=k11^post23, n8^0'=n8^post23, n^0'=n^post23, nmax7^0'=nmax7^post23, nmax^0'=nmax^post23, ret_ludcmp14^0'=ret_ludcmp14^post23, w12^0'=w12^post23, w^0'=w^post23, (-n^post23+n^0 == 0 /\ __const_50^0-__const_50^post23 == 0 /\ i9^0 <= 0 /\ -j^post23+j^0 == 0 /\ -i^post23+i^0 == 0 /\ __const_5^0-__const_5^post23 == 0 /\ -i9^0 <= 0 /\ w12^0-w12^post23 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post23 == 0 /\ -nmax^post23+nmax^0 == 0 /\ nmax7^0-nmax7^post23 == 0 /\ -n8^post23+n8^0 == 0 /\ -j10^post23+j10^0 == 0 /\ i9^0-i9^post23 == 0 /\ -chkerr^post23+chkerr^0 == 0 /\ k11^0-k11^post23 == 0 /\ -w^post23+w^0 == 0), cost: 1
  23: l20 -> l19 : __const_50^0'=__const_50^post24, __const_5^0'=__const_5^post24, chkerr^0'=chkerr^post24, i9^0'=i9^post24, i^0'=i^post24, j10^0'=j10^post24, j^0'=j^post24, k11^0'=k11^post24, n8^0'=n8^post24, n^0'=n^post24, nmax7^0'=nmax7^post24, nmax^0'=nmax^post24, ret_ludcmp14^0'=ret_ludcmp14^post24, w12^0'=w12^post24, w^0'=w^post24, (i^0-i^post24 == 0 /\ i9^0-i9^post24 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post24 == 0 /\ 1-i9^0 <= 0 /\ w12^0-w12^post24 == 0 /\ -nmax^post24+nmax^0 == 0 /\ -n^post24+n^0 == 0 /\ -n8^post24+n8^0 == 0 /\ __const_50^0-__const_50^post24 == 0 /\ nmax7^0-nmax7^post24 == 0 /\ __const_5^0-__const_5^post24 == 0 /\ -j^post24+j^0 == 0 /\ -chkerr^post24+chkerr^0 == 0 /\ -w^post24+w^0 == 0 /\ -j10^post24+j10^0 == 0 /\ k11^0-k11^post24 == 0), cost: 1
  24: l20 -> l19 : __const_50^0'=__const_50^post25, __const_5^0'=__const_5^post25, chkerr^0'=chkerr^post25, i9^0'=i9^post25, i^0'=i^post25, j10^0'=j10^post25, j^0'=j^post25, k11^0'=k11^post25, n8^0'=n8^post25, n^0'=n^post25, nmax7^0'=nmax7^post25, nmax^0'=nmax^post25, ret_ludcmp14^0'=ret_ludcmp14^post25, w12^0'=w12^post25, w^0'=w^post25, (nmax7^0-nmax7^post25 == 0 /\ j10^0-j10^post25 == 0 /\ i^0-i^post25 == 0 /\ -nmax^post25+nmax^0 == 0 /\ i9^0-i9^post25 == 0 /\ k11^0-k11^post25 == 0 /\ -n^post25+n^0 == 0 /\ w^0-w^post25 == 0 /\ 1+i9^0 <= 0 /\ __const_50^0-__const_50^post25 == 0 /\ __const_5^0-__const_5^post25 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post25 == 0 /\ -j^post25+j^0 == 0 /\ w12^0-w12^post25 == 0 /\ -chkerr^post25+chkerr^0 == 0 /\ n8^0-n8^post25 == 0), cost: 1
  27: l21 -> l10 : __const_50^0'=__const_50^post28, __const_5^0'=__const_5^post28, chkerr^0'=chkerr^post28, i9^0'=i9^post28, i^0'=i^post28, j10^0'=j10^post28, j^0'=j^post28, k11^0'=k11^post28, n8^0'=n8^post28, n^0'=n^post28, nmax7^0'=nmax7^post28, nmax^0'=nmax^post28, ret_ludcmp14^0'=ret_ludcmp14^post28, w12^0'=w12^post28, w^0'=w^post28, (j10^0-j10^post28 == 0 /\ -i9^0+n8^0 <= 0 /\ k11^0-k11^post28 == 0 /\ i^0-i^post28 == 0 /\ -n^post28+n^0 == 0 /\ -nmax^post28+nmax^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post28 == 0 /\ w12^0-w12^post28 == 0 /\ __const_50^0-__const_50^post28 == 0 /\ nmax7^0-nmax7^post28 == 0 /\ -1+i9^post28 == 0 /\ __const_5^0-__const_5^post28 == 0 /\ -j^post28+j^0 == 0 /\ -w^post28+w^0 == 0 /\ n8^0-n8^post28 == 0 /\ -chkerr^post28+chkerr^0 == 0), cost: 1
  28: l21 -> l0 : __const_50^0'=__const_50^post29, __const_5^0'=__const_5^post29, chkerr^0'=chkerr^post29, i9^0'=i9^post29, i^0'=i^post29, j10^0'=j10^post29, j^0'=j^post29, k11^0'=k11^post29, n8^0'=n8^post29, n^0'=n^post29, nmax7^0'=nmax7^post29, nmax^0'=nmax^post29, ret_ludcmp14^0'=ret_ludcmp14^post29, w12^0'=w12^post29, w^0'=w^post29, (k11^0-k11^post29 == 0 /\ chkerr^0-chkerr^post29 == 0 /\ -nmax7^post29+nmax7^0 == 0 /\ -nmax^post29+nmax^0 == 0 /\ i^0-i^post29 == 0 /\ -j^post29+j^0 == 0 /\ 1+i9^0-n8^0 <= 0 /\ i9^0-i9^post29 == 0 /\ -ret_ludcmp14^post29+ret_ludcmp14^0 == 0 /\ __const_50^0-__const_50^post29 == 0 /\ __const_5^0-__const_5^post29 == 0 /\ -1-i9^0+j10^post29 == 0 /\ n8^0-n8^post29 == 0 /\ -w^post29+w^0 == 0 /\ w12^0-w12^post29 == 0 /\ -n^post29+n^0 == 0), cost: 1
  30: l22 -> l23 : __const_50^0'=__const_50^post31, __const_5^0'=__const_5^post31, chkerr^0'=chkerr^post31, i9^0'=i9^post31, i^0'=i^post31, j10^0'=j10^post31, j^0'=j^post31, k11^0'=k11^post31, n8^0'=n8^post31, n^0'=n^post31, nmax7^0'=nmax7^post31, nmax^0'=nmax^post31, ret_ludcmp14^0'=ret_ludcmp14^post31, w12^0'=w12^post31, w^0'=w^post31, (0 == 0 /\ __const_50^0-__const_50^post31 == 0 /\ __const_5^0-__const_5^post31 == 0 /\ -j10^post31+j10^0 == 0 /\ -1+j^post31-j^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post31 == 0 /\ nmax7^0-nmax7^post31 == 0 /\ w12^0-w12^post31 == 0 /\ k11^0-k11^post31 == 0 /\ i^0-i^post31 == 0 /\ i9^0-i9^post31 == 0 /\ -nmax^post31+nmax^0 == 0 /\ -n^post31+n^0 == 0 /\ -n8^post31+n8^0 == 0 /\ -chkerr^post31+chkerr^0 == 0), cost: 1
  40: l23 -> l25 : __const_50^0'=__const_50^post41, __const_5^0'=__const_5^post41, chkerr^0'=chkerr^post41, i9^0'=i9^post41, i^0'=i^post41, j10^0'=j10^post41, j^0'=j^post41, k11^0'=k11^post41, n8^0'=n8^post41, n^0'=n^post41, nmax7^0'=nmax7^post41, nmax^0'=nmax^post41, ret_ludcmp14^0'=ret_ludcmp14^post41, w12^0'=w12^post41, w^0'=w^post41, (ret_ludcmp14^0-ret_ludcmp14^post41 == 0 /\ -__const_5^post41+__const_5^0 == 0 /\ n8^0-n8^post41 == 0 /\ -i^post41+i^0 == 0 /\ n^0-n^post41 == 0 /\ -w^post41+w^0 == 0 /\ -chkerr^post41+chkerr^0 == 0 /\ -w12^post41+w12^0 == 0 /\ k11^0-k11^post41 == 0 /\ i9^0-i9^post41 == 0 /\ j^0-j^post41 == 0 /\ -j10^post41+j10^0 == 0 /\ -nmax^post41+nmax^0 == 0 /\ -nmax7^post41+nmax7^0 == 0 /\ __const_50^0-__const_50^post41 == 0), cost: 1
  31: l24 -> l22 : __const_50^0'=__const_50^post32, __const_5^0'=__const_5^post32, chkerr^0'=chkerr^post32, i9^0'=i9^post32, i^0'=i^post32, j10^0'=j10^post32, j^0'=j^post32, k11^0'=k11^post32, n8^0'=n8^post32, n^0'=n^post32, nmax7^0'=nmax7^post32, nmax^0'=nmax^post32, ret_ludcmp14^0'=ret_ludcmp14^post32, w12^0'=w12^post32, w^0'=w^post32, (j10^0-j10^post32 == 0 /\ k11^0-k11^post32 == 0 /\ -ret_ludcmp14^post32+ret_ludcmp14^0 == 0 /\ i^0-i^post32 == 0 /\ i9^0-i9^post32 == 0 /\ -j^post32+j^0 == 0 /\ __const_50^0-__const_50^post32 == 0 /\ w^0-w^post32 == 0 /\ __const_5^0-__const_5^post32 == 0 /\ 1-i^0+j^0 <= 0 /\ n8^0-n8^post32 == 0 /\ w12^0-w12^post32 == 0 /\ -n^post32+n^0 == 0 /\ -nmax^post32+nmax^0 == 0 /\ -nmax7^post32+nmax7^0 == 0 /\ -chkerr^post32+chkerr^0 == 0), cost: 1
  32: l24 -> l22 : __const_50^0'=__const_50^post33, __const_5^0'=__const_5^post33, chkerr^0'=chkerr^post33, i9^0'=i9^post33, i^0'=i^post33, j10^0'=j10^post33, j^0'=j^post33, k11^0'=k11^post33, n8^0'=n8^post33, n^0'=n^post33, nmax7^0'=nmax7^post33, nmax^0'=nmax^post33, ret_ludcmp14^0'=ret_ludcmp14^post33, w12^0'=w12^post33, w^0'=w^post33, (ret_ludcmp14^0-ret_ludcmp14^post33 == 0 /\ -i9^post33+i9^0 == 0 /\ -__const_50^post33+__const_50^0 == 0 /\ n8^0-n8^post33 == 0 /\ n^0-n^post33 == 0 /\ -w12^post33+w12^0 == 0 /\ j10^0-j10^post33 == 0 /\ j^0-j^post33 == 0 /\ k11^0-k11^post33 == 0 /\ -__const_5^post33+__const_5^0 == 0 /\ -i^post33+i^0 == 0 /\ -w^post33+w^0 == 0 /\ -nmax^post33+nmax^0 == 0 /\ 1+i^0-j^0 <= 0 /\ -chkerr^post33+chkerr^0 == 0 /\ -nmax7^post33+nmax7^0 == 0), cost: 1
  33: l24 -> l22 : __const_50^0'=__const_50^post34, __const_5^0'=__const_5^post34, chkerr^0'=chkerr^post34, i9^0'=i9^post34, i^0'=i^post34, j10^0'=j10^post34, j^0'=j^post34, k11^0'=k11^post34, n8^0'=n8^post34, n^0'=n^post34, nmax7^0'=nmax7^post34, nmax^0'=nmax^post34, ret_ludcmp14^0'=ret_ludcmp14^post34, w12^0'=w12^post34, w^0'=w^post34, (j10^0-j10^post34 == 0 /\ w12^0-w12^post34 == 0 /\ -k11^post34+k11^0 == 0 /\ i9^0-i9^post34 == 0 /\ -w^post34+w^0 == 0 /\ -j^post34+j^0 == 0 /\ __const_50^0-__const_50^post34 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post34 == 0 /\ -i^post34+i^0 == 0 /\ -i^0+j^0 <= 0 /\ n8^0-n8^post34 == 0 /\ -__const_5^post34+__const_5^0 == 0 /\ nmax7^0-nmax7^post34 == 0 /\ -nmax^post34+nmax^0 == 0 /\ -n^post34+n^0 == 0 /\ i^0-j^0 <= 0 /\ -chkerr^post34+chkerr^0 == 0), cost: 1
  35: l25 -> l26 : __const_50^0'=__const_50^post36, __const_5^0'=__const_5^post36, chkerr^0'=chkerr^post36, i9^0'=i9^post36, i^0'=i^post36, j10^0'=j10^post36, j^0'=j^post36, k11^0'=k11^post36, n8^0'=n8^post36, n^0'=n^post36, nmax7^0'=nmax7^post36, nmax^0'=nmax^post36, ret_ludcmp14^0'=ret_ludcmp14^post36, w12^0'=w12^post36, w^0'=w^post36, (-nmax7^post36+nmax7^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post36 == 0 /\ 1+n^0-j^0 <= 0 /\ -1+i^post36-i^0 == 0 /\ -i9^post36+i9^0 == 0 /\ -w12^post36+w12^0 == 0 /\ n8^0-n8^post36 == 0 /\ n^0-n^post36 == 0 /\ -w^post36+w^0 == 0 /\ -__const_50^post36+__const_50^0 == 0 /\ j10^0-j10^post36 == 0 /\ -__const_5^post36+__const_5^0 == 0 /\ k11^0-k11^post36 == 0 /\ -j^post36+j^0 == 0 /\ -chkerr^post36+chkerr^0 == 0 /\ -nmax^post36+nmax^0 == 0), cost: 1
  36: l25 -> l24 : __const_50^0'=__const_50^post37, __const_5^0'=__const_5^post37, chkerr^0'=chkerr^post37, i9^0'=i9^post37, i^0'=i^post37, j10^0'=j10^post37, j^0'=j^post37, k11^0'=k11^post37, n8^0'=n8^post37, n^0'=n^post37, nmax7^0'=nmax7^post37, nmax^0'=nmax^post37, ret_ludcmp14^0'=ret_ludcmp14^post37, w12^0'=w12^post37, w^0'=w^post37, (ret_ludcmp14^0-ret_ludcmp14^post37 == 0 /\ -__const_5^post37+__const_5^0 == 0 /\ n8^0-n8^post37 == 0 /\ -n^0+j^0 <= 0 /\ -w^post37+w^0 == 0 /\ -i9^post37+i9^0 == 0 /\ -i^post37+i^0 == 0 /\ n^0-n^post37 == 0 /\ -w12^post37+w12^0 == 0 /\ j^0-j^post37 == 0 /\ k11^0-k11^post37 == 0 /\ j10^0-j10^post37 == 0 /\ __const_50^0-__const_50^post37 == 0 /\ -nmax7^post37+nmax7^0 == 0 /\ -nmax^post37+nmax^0 == 0 /\ -chkerr^post37+chkerr^0 == 0), cost: 1
  39: l26 -> l27 : __const_50^0'=__const_50^post40, __const_5^0'=__const_5^post40, chkerr^0'=chkerr^post40, i9^0'=i9^post40, i^0'=i^post40, j10^0'=j10^post40, j^0'=j^post40, k11^0'=k11^post40, n8^0'=n8^post40, n^0'=n^post40, nmax7^0'=nmax7^post40, nmax^0'=nmax^post40, ret_ludcmp14^0'=ret_ludcmp14^post40, w12^0'=w12^post40, w^0'=w^post40, (-__const_5^post40+__const_5^0 == 0 /\ i9^0-i9^post40 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post40 == 0 /\ -i^post40+i^0 == 0 /\ n8^0-n8^post40 == 0 /\ n^0-n^post40 == 0 /\ -w12^post40+w12^0 == 0 /\ -chkerr^post40+chkerr^0 == 0 /\ -w^post40+w^0 == 0 /\ j10^0-j10^post40 == 0 /\ -__const_50^post40+__const_50^0 == 0 /\ -j^post40+j^0 == 0 /\ k11^0-k11^post40 == 0 /\ -nmax^post40+nmax^0 == 0 /\ -nmax7^post40+nmax7^0 == 0), cost: 1
  37: l27 -> l17 : __const_50^0'=__const_50^post38, __const_5^0'=__const_5^post38, chkerr^0'=chkerr^post38, i9^0'=i9^post38, i^0'=i^post38, j10^0'=j10^post38, j^0'=j^post38, k11^0'=k11^post38, n8^0'=n8^post38, n^0'=n^post38, nmax7^0'=nmax7^post38, nmax^0'=nmax^post38, ret_ludcmp14^0'=ret_ludcmp14^post38, w12^0'=w12^post38, w^0'=w^post38, (-nmax^0+nmax7^post38 == 0 /\ w12^0-w12^post38 == 0 /\ -k11^post38+k11^0 == 0 /\ j10^0-j10^post38 == 0 /\ -__const_5^post38+__const_5^0 == 0 /\ -j^post38+j^0 == 0 /\ -w^post38+w^0 == 0 /\ -i^post38+i^0 == 0 /\ 1-i^0+n^0 <= 0 /\ n8^post38-n^0 == 0 /\ -chkerr^post38+chkerr^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post38 == 0 /\ __const_50^0-__const_50^post38 == 0 /\ i9^post38 == 0 /\ -nmax^post38+nmax^0 == 0 /\ -n^post38+n^0 == 0), cost: 1
  38: l27 -> l23 : __const_50^0'=__const_50^post39, __const_5^0'=__const_5^post39, chkerr^0'=chkerr^post39, i9^0'=i9^post39, i^0'=i^post39, j10^0'=j10^post39, j^0'=j^post39, k11^0'=k11^post39, n8^0'=n8^post39, n^0'=n^post39, nmax7^0'=nmax7^post39, nmax^0'=nmax^post39, ret_ludcmp14^0'=ret_ludcmp14^post39, w12^0'=w12^post39, w^0'=w^post39, (j10^0-j10^post39 == 0 /\ i^0-n^0 <= 0 /\ i9^0-i9^post39 == 0 /\ k11^0-k11^post39 == 0 /\ -ret_ludcmp14^post39+ret_ludcmp14^0 == 0 /\ i^0-i^post39 == 0 /\ j^post39 == 0 /\ __const_50^0-__const_50^post39 == 0 /\ -w12^post39+w12^0 == 0 /\ __const_5^0-__const_5^post39 == 0 /\ -chkerr^post39+chkerr^0 == 0 /\ w^post39 == 0 /\ n8^0-n8^post39 == 0 /\ -n^post39+n^0 == 0 /\ -nmax7^post39+nmax7^0 == 0 /\ -nmax^post39+nmax^0 == 0), cost: 1
  42: l28 -> l26 : __const_50^0'=__const_50^post43, __const_5^0'=__const_5^post43, chkerr^0'=chkerr^post43, i9^0'=i9^post43, i^0'=i^post43, j10^0'=j10^post43, j^0'=j^post43, k11^0'=k11^post43, n8^0'=n8^post43, n^0'=n^post43, nmax7^0'=nmax7^post43, nmax^0'=nmax^post43, ret_ludcmp14^0'=ret_ludcmp14^post43, w12^0'=w12^post43, w^0'=w^post43, (-ret_ludcmp14^post43+ret_ludcmp14^0 == 0 /\ i9^0-i9^post43 == 0 /\ __const_50^0-__const_50^post43 == 0 /\ __const_5^0-__const_5^post43 == 0 /\ -w12^post43+w12^0 == 0 /\ -w^post43+w^0 == 0 /\ k11^0-k11^post43 == 0 /\ -chkerr^post43+chkerr^0 == 0 /\ -__const_50^0+nmax^post43 == 0 /\ n^post43-__const_5^0 == 0 /\ i^post43 == 0 /\ n8^0-n8^post43 == 0 /\ -j10^post43+j10^0 == 0 /\ -j^post43+j^0 == 0 /\ -nmax7^post43+nmax7^0 == 0), cost: 1
  43: l29 -> l28 : __const_50^0'=__const_50^post44, __const_5^0'=__const_5^post44, chkerr^0'=chkerr^post44, i9^0'=i9^post44, i^0'=i^post44, j10^0'=j10^post44, j^0'=j^post44, k11^0'=k11^post44, n8^0'=n8^post44, n^0'=n^post44, nmax7^0'=nmax7^post44, nmax^0'=nmax^post44, ret_ludcmp14^0'=ret_ludcmp14^post44, w12^0'=w12^post44, w^0'=w^post44, (i9^0-i9^post44 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post44 == 0 /\ -i^post44+i^0 == 0 /\ -__const_5^post44+__const_5^0 == 0 /\ n^0-n^post44 == 0 /\ -w^post44+w^0 == 0 /\ -chkerr^post44+chkerr^0 == 0 /\ -w12^post44+w12^0 == 0 /\ k11^0-k11^post44 == 0 /\ -__const_50^post44+__const_50^0 == 0 /\ j^0-j^post44 == 0 /\ j10^0-j10^post44 == 0 /\ -nmax7^post44+nmax7^0 == 0 /\ -nmax^post44+nmax^0 == 0 /\ n8^0-n8^post44 == 0), cost: 1

Chained Linear Paths

Start location: l29
Program variables: __const_50^0 __const_5^0 chkerr^0 i9^0 i^0 j10^0 j^0 k11^0 n8^0 n^0 nmax7^0 nmax^0 ret_ludcmp14^0 w12^0 w^0
   0: l0 -> l1 : __const_50^0'=__const_50^post1, __const_5^0'=__const_5^post1, chkerr^0'=chkerr^post1, i9^0'=i9^post1, i^0'=i^post1, j10^0'=j10^post1, j^0'=j^post1, k11^0'=k11^post1, n8^0'=n8^post1, n^0'=n^post1, nmax7^0'=nmax7^post1, nmax^0'=nmax^post1, ret_ludcmp14^0'=ret_ludcmp14^post1, w12^0'=w12^post1, w^0'=w^post1, (ret_ludcmp14^0-ret_ludcmp14^post1 == 0 /\ -w^post1+w^0 == 0 /\ -__const_5^post1+__const_5^0 == 0 /\ -nmax7^post1+nmax7^0 == 0 /\ -nmax^post1+nmax^0 == 0 /\ -n^post1+n^0 == 0 /\ j10^0-j10^post1 == 0 /\ n8^0-n8^post1 == 0 /\ -chkerr^post1+chkerr^0 == 0 /\ i9^0-i9^post1 == 0 /\ -__const_50^post1+__const_50^0 == 0 /\ -j^post1+j^0 == 0 /\ -i^post1+i^0 == 0 /\ k11^0-k11^post1 == 0 /\ -w12^post1+w12^0 == 0), cost: 1
  25: l1 -> l12 : __const_50^0'=__const_50^post26, __const_5^0'=__const_5^post26, chkerr^0'=chkerr^post26, i9^0'=i9^post26, i^0'=i^post26, j10^0'=j10^post26, j^0'=j^post26, k11^0'=k11^post26, n8^0'=n8^post26, n^0'=n^post26, nmax7^0'=nmax7^post26, nmax^0'=nmax^post26, ret_ludcmp14^0'=ret_ludcmp14^post26, w12^0'=w12^post26, w^0'=w^post26, (n^0-n^post26 == 0 /\ -i9^post26+i9^0 == 0 /\ -__const_50^post26+__const_50^0 == 0 /\ -1-i9^0+j10^post26 == 0 /\ k11^0-k11^post26 == 0 /\ -i^post26+i^0 == 0 /\ -nmax^post26+nmax^0 == 0 /\ -nmax7^post26+nmax7^0 == 0 /\ j^0-j^post26 == 0 /\ -__const_5^post26+__const_5^0 == 0 /\ -w12^post26+w12^0 == 0 /\ 1+n8^0-j10^0 <= 0 /\ ret_ludcmp14^0-ret_ludcmp14^post26 == 0 /\ -w^post26+w^0 == 0 /\ -chkerr^post26+chkerr^0 == 0 /\ n8^0-n8^post26 == 0), cost: 1
  26: l1 -> l20 : __const_50^0'=__const_50^post27, __const_5^0'=__const_5^post27, chkerr^0'=chkerr^post27, i9^0'=i9^post27, i^0'=i^post27, j10^0'=j10^post27, j^0'=j^post27, k11^0'=k11^post27, n8^0'=n8^post27, n^0'=n^post27, nmax7^0'=nmax7^post27, nmax^0'=nmax^post27, ret_ludcmp14^0'=ret_ludcmp14^post27, w12^0'=w12^post27, w^0'=w^post27, (0 == 0 /\ __const_50^0-__const_50^post27 == 0 /\ __const_5^0-__const_5^post27 == 0 /\ -j10^post27+j10^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post27 == 0 /\ -nmax^post27+nmax^0 == 0 /\ -n^post27+n^0 == 0 /\ -n8^post27+n8^0 == 0 /\ -n8^0+j10^0 <= 0 /\ nmax7^0-nmax7^post27 == 0 /\ k11^0-k11^post27 == 0 /\ -j^post27+j^0 == 0 /\ i^0-i^post27 == 0 /\ i9^0-i9^post27 == 0 /\ -w^post27+w^0 == 0 /\ -chkerr^post27+chkerr^0 == 0), cost: 1
   1: l2 -> l3 : __const_50^0'=__const_50^post2, __const_5^0'=__const_5^post2, chkerr^0'=chkerr^post2, i9^0'=i9^post2, i^0'=i^post2, j10^0'=j10^post2, j^0'=j^post2, k11^0'=k11^post2, n8^0'=n8^post2, n^0'=n^post2, nmax7^0'=nmax7^post2, nmax^0'=nmax^post2, ret_ludcmp14^0'=ret_ludcmp14^post2, w12^0'=w12^post2, w^0'=w^post2, (n^0-n^post2 == 0 /\ -__const_5^post2+__const_5^0 == 0 /\ -nmax7^post2+nmax7^0 == 0 /\ k11^0-k11^post2 == 0 /\ -nmax^post2+nmax^0 == 0 /\ 1-i9^0+i9^post2 == 0 /\ -chkerr^post2+chkerr^0 == 0 /\ __const_50^0-__const_50^post2 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post2 == 0 /\ -i^post2+i^0 == 0 /\ -w^post2+w^0 == 0 /\ 1+n8^0-j10^0 <= 0 /\ j^0-j^post2 == 0 /\ n8^0-n8^post2 == 0 /\ j10^0-j10^post2 == 0 /\ -w12^post2+w12^0 == 0), cost: 1
   2: l2 -> l4 : __const_50^0'=__const_50^post3, __const_5^0'=__const_5^post3, chkerr^0'=chkerr^post3, i9^0'=i9^post3, i^0'=i^post3, j10^0'=j10^post3, j^0'=j^post3, k11^0'=k11^post3, n8^0'=n8^post3, n^0'=n^post3, nmax7^0'=nmax7^post3, nmax^0'=nmax^post3, ret_ludcmp14^0'=ret_ludcmp14^post3, w12^0'=w12^post3, w^0'=w^post3, (0 == 0 /\ -nmax7^post3+nmax7^0 == 0 /\ i9^0-i9^post3 == 0 /\ k11^0-k11^post3 == 0 /\ -__const_5^post3+__const_5^0 == 0 /\ -1-j10^0+j10^post3 == 0 /\ -n8^0+j10^0 <= 0 /\ __const_50^0-__const_50^post3 == 0 /\ -chkerr^post3+chkerr^0 == 0 /\ -w^post3+w^0 == 0 /\ -nmax^post3+nmax^0 == 0 /\ j^0-j^post3 == 0 /\ n8^0-n8^post3 == 0 /\ n^0-n^post3 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post3 == 0 /\ -i^post3+i^0 == 0), cost: 1
  29: l3 -> l5 : __const_50^0'=__const_50^post30, __const_5^0'=__const_5^post30, chkerr^0'=chkerr^post30, i9^0'=i9^post30, i^0'=i^post30, j10^0'=j10^post30, j^0'=j^post30, k11^0'=k11^post30, n8^0'=n8^post30, n^0'=n^post30, nmax7^0'=nmax7^post30, nmax^0'=nmax^post30, ret_ludcmp14^0'=ret_ludcmp14^post30, w12^0'=w12^post30, w^0'=w^post30, (-chkerr^post30+chkerr^0 == 0 /\ n8^0-n8^post30 == 0 /\ n^0-n^post30 == 0 /\ -i^post30+i^0 == 0 /\ -i9^post30+i9^0 == 0 /\ -nmax^post30+nmax^0 == 0 /\ k11^0-k11^post30 == 0 /\ j^0-j^post30 == 0 /\ j10^0-j10^post30 == 0 /\ -__const_5^post30+__const_5^0 == 0 /\ -__const_50^post30+__const_50^0 == 0 /\ -nmax7^post30+nmax7^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post30 == 0 /\ -w^post30+w^0 == 0 /\ -w12^post30+w12^0 == 0), cost: 1
  34: l4 -> l2 : __const_50^0'=__const_50^post35, __const_5^0'=__const_5^post35, chkerr^0'=chkerr^post35, i9^0'=i9^post35, i^0'=i^post35, j10^0'=j10^post35, j^0'=j^post35, k11^0'=k11^post35, n8^0'=n8^post35, n^0'=n^post35, nmax7^0'=nmax7^post35, nmax^0'=nmax^post35, ret_ludcmp14^0'=ret_ludcmp14^post35, w12^0'=w12^post35, w^0'=w^post35, (-nmax7^post35+nmax7^0 == 0 /\ j10^0-j10^post35 == 0 /\ k11^0-k11^post35 == 0 /\ i^0-i^post35 == 0 /\ -ret_ludcmp14^post35+ret_ludcmp14^0 == 0 /\ -w12^post35+w12^0 == 0 /\ i9^0-i9^post35 == 0 /\ -w^post35+w^0 == 0 /\ -nmax^post35+nmax^0 == 0 /\ -n^post35+n^0 == 0 /\ __const_50^0-__const_50^post35 == 0 /\ -j^post35+j^0 == 0 /\ __const_5^0-__const_5^post35 == 0 /\ n8^0-n8^post35 == 0 /\ -chkerr^post35+chkerr^0 == 0), cost: 1
   3: l5 -> l6 : __const_50^0'=__const_50^post4, __const_5^0'=__const_5^post4, chkerr^0'=chkerr^post4, i9^0'=i9^post4, i^0'=i^post4, j10^0'=j10^post4, j^0'=j^post4, k11^0'=k11^post4, n8^0'=n8^post4, n^0'=n^post4, nmax7^0'=nmax7^post4, nmax^0'=nmax^post4, ret_ludcmp14^0'=ret_ludcmp14^post4, w12^0'=w12^post4, w^0'=w^post4, (-n8^post4+n8^0 == 0 /\ -__const_5^post4+__const_5^0 == 0 /\ ret_ludcmp14^post4 == 0 /\ __const_50^0-__const_50^post4 == 0 /\ 1+i9^0 <= 0 /\ i^0-i^post4 == 0 /\ -n^post4+n^0 == 0 /\ -w^post4+w^0 == 0 /\ w12^0-w12^post4 == 0 /\ nmax7^0-nmax7^post4 == 0 /\ -nmax^post4+nmax^0 == 0 /\ i9^0-i9^post4 == 0 /\ k11^0-k11^post4 == 0 /\ -j^post4+j^0 == 0 /\ chkerr^post4-ret_ludcmp14^post4 == 0 /\ -j10^post4+j10^0 == 0), cost: 1
   4: l5 -> l4 : __const_50^0'=__const_50^post5, __const_5^0'=__const_5^post5, chkerr^0'=chkerr^post5, i9^0'=i9^post5, i^0'=i^post5, j10^0'=j10^post5, j^0'=j^post5, k11^0'=k11^post5, n8^0'=n8^post5, n^0'=n^post5, nmax7^0'=nmax7^post5, nmax^0'=nmax^post5, ret_ludcmp14^0'=ret_ludcmp14^post5, w12^0'=w12^post5, w^0'=w^post5, (0 == 0 /\ -nmax7^post5+nmax7^0 == 0 /\ -i9^0 <= 0 /\ -n^post5+n^0 == 0 /\ -nmax^post5+nmax^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post5 == 0 /\ n8^0-n8^post5 == 0 /\ -chkerr^post5+chkerr^0 == 0 /\ i9^0-i9^post5 == 0 /\ k11^0-k11^post5 == 0 /\ -w^post5+w^0 == 0 /\ -i^post5+i^0 == 0 /\ -__const_5^post5+__const_5^0 == 0 /\ -1-i9^0+j10^post5 == 0 /\ __const_50^0-__const_50^post5 == 0 /\ -j^post5+j^0 == 0), cost: 1
   5: l7 -> l8 : __const_50^0'=__const_50^post6, __const_5^0'=__const_5^post6, chkerr^0'=chkerr^post6, i9^0'=i9^post6, i^0'=i^post6, j10^0'=j10^post6, j^0'=j^post6, k11^0'=k11^post6, n8^0'=n8^post6, n^0'=n^post6, nmax7^0'=nmax7^post6, nmax^0'=nmax^post6, ret_ludcmp14^0'=ret_ludcmp14^post6, w12^0'=w12^post6, w^0'=w^post6, (-chkerr^post6+chkerr^0 == 0 /\ n^0-n^post6 == 0 /\ i9^0-i9^post6 == 0 /\ k11^0-k11^post6 == 0 /\ -nmax7^post6+nmax7^0 == 0 /\ -nmax^post6+nmax^0 == 0 /\ -w^post6+w^0 == 0 /\ j^0-j^post6 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post6 == 0 /\ -i^post6+i^0 == 0 /\ -__const_5^post6+__const_5^0 == 0 /\ j10^0-j10^post6 == 0 /\ n8^0-n8^post6 == 0 /\ __const_50^0-__const_50^post6 == 0 /\ -w12^post6+w12^0 == 0), cost: 1
  18: l8 -> l18 : __const_50^0'=__const_50^post19, __const_5^0'=__const_5^post19, chkerr^0'=chkerr^post19, i9^0'=i9^post19, i^0'=i^post19, j10^0'=j10^post19, j^0'=j^post19, k11^0'=k11^post19, n8^0'=n8^post19, n^0'=n^post19, nmax7^0'=nmax7^post19, nmax^0'=nmax^post19, ret_ludcmp14^0'=ret_ludcmp14^post19, w12^0'=w12^post19, w^0'=w^post19, (-k11^0+i9^0 <= 0 /\ -n^post19+n^0 == 0 /\ -nmax^post19+nmax^0 == 0 /\ -i^post19+i^0 == 0 /\ -__const_5^post19+__const_5^0 == 0 /\ -j^post19+j^0 == 0 /\ -chkerr^post19+chkerr^0 == 0 /\ w12^0-w12^post19 == 0 /\ -n8^post19+n8^0 == 0 /\ i9^0-i9^post19 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post19 == 0 /\ -j10^post19+j10^0 == 0 /\ __const_50^0-__const_50^post19 == 0 /\ k11^0-k11^post19 == 0 /\ nmax7^0-nmax7^post19 == 0 /\ -w^post19+w^0 == 0), cost: 1
  19: l8 -> l7 : __const_50^0'=__const_50^post20, __const_5^0'=__const_5^post20, chkerr^0'=chkerr^post20, i9^0'=i9^post20, i^0'=i^post20, j10^0'=j10^post20, j^0'=j^post20, k11^0'=k11^post20, n8^0'=n8^post20, n^0'=n^post20, nmax7^0'=nmax7^post20, nmax^0'=nmax^post20, ret_ludcmp14^0'=ret_ludcmp14^post20, w12^0'=w12^post20, w^0'=w^post20, (0 == 0 /\ -i^post20+i^0 == 0 /\ -__const_5^post20+__const_5^0 == 0 /\ -1-k11^0+k11^post20 == 0 /\ 1+k11^0-i9^0 <= 0 /\ ret_ludcmp14^0-ret_ludcmp14^post20 == 0 /\ -n8^post20+n8^0 == 0 /\ -nmax^post20+nmax^0 == 0 /\ -n^post20+n^0 == 0 /\ -chkerr^post20+chkerr^0 == 0 /\ nmax7^0-nmax7^post20 == 0 /\ __const_50^0-__const_50^post20 == 0 /\ i9^0-i9^post20 == 0 /\ -j^post20+j^0 == 0 /\ -j10^post20+j10^0 == 0 /\ -w^post20+w^0 == 0), cost: 1
   6: l9 -> l10 : __const_50^0'=__const_50^post7, __const_5^0'=__const_5^post7, chkerr^0'=chkerr^post7, i9^0'=i9^post7, i^0'=i^post7, j10^0'=j10^post7, j^0'=j^post7, k11^0'=k11^post7, n8^0'=n8^post7, n^0'=n^post7, nmax7^0'=nmax7^post7, nmax^0'=nmax^post7, ret_ludcmp14^0'=ret_ludcmp14^post7, w12^0'=w12^post7, w^0'=w^post7, (-chkerr^post7+chkerr^0 == 0 /\ __const_5^0-__const_5^post7 == 0 /\ j10^0-j10^post7 == 0 /\ -nmax7^post7+nmax7^0 == 0 /\ w12^0-w12^post7 == 0 /\ k11^0-k11^post7 == 0 /\ i9^0-j10^0 <= 0 /\ __const_50^0-__const_50^post7 == 0 /\ -1-i9^0+i9^post7 == 0 /\ -w^post7+w^0 == 0 /\ -nmax^post7+nmax^0 == 0 /\ n8^0-n8^post7 == 0 /\ -i^post7+i^0 == 0 /\ j^0-j^post7 == 0 /\ n^0-n^post7 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post7 == 0), cost: 1
   7: l9 -> l11 : __const_50^0'=__const_50^post8, __const_5^0'=__const_5^post8, chkerr^0'=chkerr^post8, i9^0'=i9^post8, i^0'=i^post8, j10^0'=j10^post8, j^0'=j^post8, k11^0'=k11^post8, n8^0'=n8^post8, n^0'=n^post8, nmax7^0'=nmax7^post8, nmax^0'=nmax^post8, ret_ludcmp14^0'=ret_ludcmp14^post8, w12^0'=w12^post8, w^0'=w^post8, (0 == 0 /\ __const_5^0-__const_5^post8 == 0 /\ -chkerr^post8+chkerr^0 == 0 /\ -n8^post8+n8^0 == 0 /\ 1-i9^0+j10^0 <= 0 /\ __const_50^0-__const_50^post8 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post8 == 0 /\ -1+j10^post8-j10^0 == 0 /\ -j^post8+j^0 == 0 /\ -w^post8+w^0 == 0 /\ nmax7^0-nmax7^post8 == 0 /\ -nmax^post8+nmax^0 == 0 /\ k11^0-k11^post8 == 0 /\ -n^post8+n^0 == 0 /\ i^0-i^post8 == 0 /\ i9^0-i9^post8 == 0), cost: 1
  16: l10 -> l14 : __const_50^0'=__const_50^post17, __const_5^0'=__const_5^post17, chkerr^0'=chkerr^post17, i9^0'=i9^post17, i^0'=i^post17, j10^0'=j10^post17, j^0'=j^post17, k11^0'=k11^post17, n8^0'=n8^post17, n^0'=n^post17, nmax7^0'=nmax7^post17, nmax^0'=nmax^post17, ret_ludcmp14^0'=ret_ludcmp14^post17, w12^0'=w12^post17, w^0'=w^post17, (nmax7^0-nmax7^post17 == 0 /\ i9^0-i9^post17 == 0 /\ -j^post17+j^0 == 0 /\ __const_50^0-__const_50^post17 == 0 /\ __const_5^0-__const_5^post17 == 0 /\ -chkerr^post17+chkerr^0 == 0 /\ k11^0-k11^post17 == 0 /\ -n^post17+n^0 == 0 /\ -w^post17+w^0 == 0 /\ -nmax^post17+nmax^0 == 0 /\ -j10^post17+j10^0 == 0 /\ w12^0-w12^post17 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post17 == 0 /\ n8^0-n8^post17 == 0 /\ i^0-i^post17 == 0), cost: 1
  21: l11 -> l9 : __const_50^0'=__const_50^post22, __const_5^0'=__const_5^post22, chkerr^0'=chkerr^post22, i9^0'=i9^post22, i^0'=i^post22, j10^0'=j10^post22, j^0'=j^post22, k11^0'=k11^post22, n8^0'=n8^post22, n^0'=n^post22, nmax7^0'=nmax7^post22, nmax^0'=nmax^post22, ret_ludcmp14^0'=ret_ludcmp14^post22, w12^0'=w12^post22, w^0'=w^post22, (n8^0-n8^post22 == 0 /\ i9^0-i9^post22 == 0 /\ -__const_50^post22+__const_50^0 == 0 /\ n^0-n^post22 == 0 /\ -i^post22+i^0 == 0 /\ k11^0-k11^post22 == 0 /\ -nmax^post22+nmax^0 == 0 /\ -nmax7^post22+nmax7^0 == 0 /\ -__const_5^post22+__const_5^0 == 0 /\ j^0-j^post22 == 0 /\ j10^0-j10^post22 == 0 /\ -w12^post22+w12^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post22 == 0 /\ -chkerr^post22+chkerr^0 == 0 /\ -w^post22+w^0 == 0), cost: 1
   8: l12 -> l13 : __const_50^0'=__const_50^post9, __const_5^0'=__const_5^post9, chkerr^0'=chkerr^post9, i9^0'=i9^post9, i^0'=i^post9, j10^0'=j10^post9, j^0'=j^post9, k11^0'=k11^post9, n8^0'=n8^post9, n^0'=n^post9, nmax7^0'=nmax7^post9, nmax^0'=nmax^post9, ret_ludcmp14^0'=ret_ludcmp14^post9, w12^0'=w12^post9, w^0'=w^post9, (-w12^post9+w12^0 == 0 /\ j10^0-j10^post9 == 0 /\ chkerr^0-chkerr^post9 == 0 /\ -nmax7^post9+nmax7^0 == 0 /\ -n^post9+n^0 == 0 /\ i^0-i^post9 == 0 /\ n8^0-n8^post9 == 0 /\ i9^0-i9^post9 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post9 == 0 /\ -w^post9+w^0 == 0 /\ -nmax^post9+nmax^0 == 0 /\ k11^0-k11^post9 == 0 /\ __const_50^0-__const_50^post9 == 0 /\ -__const_5^post9+__const_5^0 == 0 /\ -j^post9+j^0 == 0), cost: 1
  14: l13 -> l17 : __const_50^0'=__const_50^post15, __const_5^0'=__const_5^post15, chkerr^0'=chkerr^post15, i9^0'=i9^post15, i^0'=i^post15, j10^0'=j10^post15, j^0'=j^post15, k11^0'=k11^post15, n8^0'=n8^post15, n^0'=n^post15, nmax7^0'=nmax7^post15, nmax^0'=nmax^post15, ret_ludcmp14^0'=ret_ludcmp14^post15, w12^0'=w12^post15, w^0'=w^post15, (__const_5^0-__const_5^post15 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post15 == 0 /\ -n^post15+n^0 == 0 /\ -chkerr^post15+chkerr^0 == 0 /\ nmax^0-nmax^post15 == 0 /\ -w12^post15+w12^0 == 0 /\ __const_50^0-__const_50^post15 == 0 /\ -w^post15+w^0 == 0 /\ -j^post15+j^0 == 0 /\ -1-i9^0+i9^post15 == 0 /\ -j10^post15+j10^0 == 0 /\ nmax7^0-nmax7^post15 == 0 /\ k11^0-k11^post15 == 0 /\ 1+n8^0-j10^0 <= 0 /\ i^0-i^post15 == 0 /\ -n8^post15+n8^0 == 0), cost: 1
  15: l13 -> l15 : __const_50^0'=__const_50^post16, __const_5^0'=__const_5^post16, chkerr^0'=chkerr^post16, i9^0'=i9^post16, i^0'=i^post16, j10^0'=j10^post16, j^0'=j^post16, k11^0'=k11^post16, n8^0'=n8^post16, n^0'=n^post16, nmax7^0'=nmax7^post16, nmax^0'=nmax^post16, ret_ludcmp14^0'=ret_ludcmp14^post16, w12^0'=w12^post16, w^0'=w^post16, (0 == 0 /\ -j^post16+j^0 == 0 /\ -__const_5^post16+__const_5^0 == 0 /\ -i^post16+i^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post16 == 0 /\ -w^post16+w^0 == 0 /\ -chkerr^post16+chkerr^0 == 0 /\ -n^post16+n^0 == 0 /\ -nmax^post16+nmax^0 == 0 /\ -n8^0+j10^0 <= 0 /\ nmax7^0-nmax7^post16 == 0 /\ -n8^post16+n8^0 == 0 /\ i9^0-i9^post16 == 0 /\ -j10^post16+j10^0 == 0 /\ __const_50^0-__const_50^post16 == 0 /\ k11^post16 == 0), cost: 1
   9: l14 -> l3 : __const_50^0'=__const_50^post10, __const_5^0'=__const_5^post10, chkerr^0'=chkerr^post10, i9^0'=i9^post10, i^0'=i^post10, j10^0'=j10^post10, j^0'=j^post10, k11^0'=k11^post10, n8^0'=n8^post10, n^0'=n^post10, nmax7^0'=nmax7^post10, nmax^0'=nmax^post10, ret_ludcmp14^0'=ret_ludcmp14^post10, w12^0'=w12^post10, w^0'=w^post10, (n^0-n^post10 == 0 /\ 1-i9^0+n8^0 <= 0 /\ -chkerr^post10+chkerr^0 == 0 /\ w12^0-w12^post10 == 0 /\ j10^0-j10^post10 == 0 /\ -nmax7^post10+nmax7^0 == 0 /\ -i^post10+i^0 == 0 /\ k11^0-k11^post10 == 0 /\ -j^post10+j^0 == 0 /\ -nmax^post10+nmax^0 == 0 /\ -w^post10+w^0 == 0 /\ 1-n8^0+i9^post10 == 0 /\ -__const_5^post10+__const_5^0 == 0 /\ n8^0-n8^post10 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post10 == 0 /\ __const_50^0-__const_50^post10 == 0), cost: 1
  10: l14 -> l11 : __const_50^0'=__const_50^post11, __const_5^0'=__const_5^post11, chkerr^0'=chkerr^post11, i9^0'=i9^post11, i^0'=i^post11, j10^0'=j10^post11, j^0'=j^post11, k11^0'=k11^post11, n8^0'=n8^post11, n^0'=n^post11, nmax7^0'=nmax7^post11, nmax^0'=nmax^post11, ret_ludcmp14^0'=ret_ludcmp14^post11, w12^0'=w12^post11, w^0'=w^post11, (0 == 0 /\ -nmax7^post11+nmax7^0 == 0 /\ -chkerr^post11+chkerr^0 == 0 /\ __const_5^0-__const_5^post11 == 0 /\ j10^post11 == 0 /\ i9^0-n8^0 <= 0 /\ -j^post11+j^0 == 0 /\ __const_50^0-__const_50^post11 == 0 /\ k11^0-k11^post11 == 0 /\ -w^post11+w^0 == 0 /\ -nmax^post11+nmax^0 == 0 /\ -n^post11+n^0 == 0 /\ i^0-i^post11 == 0 /\ n8^0-n8^post11 == 0 /\ i9^0-i9^post11 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post11 == 0), cost: 1
  11: l15 -> l16 : __const_50^0'=__const_50^post12, __const_5^0'=__const_5^post12, chkerr^0'=chkerr^post12, i9^0'=i9^post12, i^0'=i^post12, j10^0'=j10^post12, j^0'=j^post12, k11^0'=k11^post12, n8^0'=n8^post12, n^0'=n^post12, nmax7^0'=nmax7^post12, nmax^0'=nmax^post12, ret_ludcmp14^0'=ret_ludcmp14^post12, w12^0'=w12^post12, w^0'=w^post12, (__const_5^0-__const_5^post12 == 0 /\ -j^post12+j^0 == 0 /\ -chkerr^post12+chkerr^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post12 == 0 /\ __const_50^0-__const_50^post12 == 0 /\ k11^0-k11^post12 == 0 /\ -w^post12+w^0 == 0 /\ -nmax^post12+nmax^0 == 0 /\ -j10^post12+j10^0 == 0 /\ -n8^post12+n8^0 == 0 /\ -n^post12+n^0 == 0 /\ w12^0-w12^post12 == 0 /\ nmax7^0-nmax7^post12 == 0 /\ i^0-i^post12 == 0 /\ i9^0-i9^post12 == 0), cost: 1
  12: l16 -> l12 : __const_50^0'=__const_50^post13, __const_5^0'=__const_5^post13, chkerr^0'=chkerr^post13, i9^0'=i9^post13, i^0'=i^post13, j10^0'=j10^post13, j^0'=j^post13, k11^0'=k11^post13, n8^0'=n8^post13, n^0'=n^post13, nmax7^0'=nmax7^post13, nmax^0'=nmax^post13, ret_ludcmp14^0'=ret_ludcmp14^post13, w12^0'=w12^post13, w^0'=w^post13, (-w12^post13+w12^0 == 0 /\ 1-k11^0+i9^0 <= 0 /\ -j^post13+j^0 == 0 /\ chkerr^0-chkerr^post13 == 0 /\ -n^post13+n^0 == 0 /\ -nmax7^post13+nmax7^0 == 0 /\ i^0-i^post13 == 0 /\ i9^0-i9^post13 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post13 == 0 /\ n8^0-n8^post13 == 0 /\ -w^post13+w^0 == 0 /\ -nmax^post13+nmax^0 == 0 /\ -1-j10^0+j10^post13 == 0 /\ __const_50^0-__const_50^post13 == 0 /\ k11^0-k11^post13 == 0 /\ -__const_5^post13+__const_5^0 == 0), cost: 1
  13: l16 -> l15 : __const_50^0'=__const_50^post14, __const_5^0'=__const_5^post14, chkerr^0'=chkerr^post14, i9^0'=i9^post14, i^0'=i^post14, j10^0'=j10^post14, j^0'=j^post14, k11^0'=k11^post14, n8^0'=n8^post14, n^0'=n^post14, nmax7^0'=nmax7^post14, nmax^0'=nmax^post14, ret_ludcmp14^0'=ret_ludcmp14^post14, w12^0'=w12^post14, w^0'=w^post14, (0 == 0 /\ j10^0-j10^post14 == 0 /\ -chkerr^post14+chkerr^0 == 0 /\ k11^0-i9^0 <= 0 /\ -j^post14+j^0 == 0 /\ i9^0-i9^post14 == 0 /\ -i^post14+i^0 == 0 /\ -1+k11^post14-k11^0 == 0 /\ -nmax^post14+nmax^0 == 0 /\ -w^post14+w^0 == 0 /\ -n8^post14+n8^0 == 0 /\ -n^post14+n^0 == 0 /\ nmax7^0-nmax7^post14 == 0 /\ -__const_5^post14+__const_5^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post14 == 0 /\ __const_50^0-__const_50^post14 == 0), cost: 1
  41: l17 -> l21 : __const_50^0'=__const_50^post42, __const_5^0'=__const_5^post42, chkerr^0'=chkerr^post42, i9^0'=i9^post42, i^0'=i^post42, j10^0'=j10^post42, j^0'=j^post42, k11^0'=k11^post42, n8^0'=n8^post42, n^0'=n^post42, nmax7^0'=nmax7^post42, nmax^0'=nmax^post42, ret_ludcmp14^0'=ret_ludcmp14^post42, w12^0'=w12^post42, w^0'=w^post42, (-k11^post42+k11^0 == 0 /\ w12^0-w12^post42 == 0 /\ -__const_5^post42+__const_5^0 == 0 /\ -w^post42+w^0 == 0 /\ i^0-i^post42 == 0 /\ -chkerr^post42+chkerr^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post42 == 0 /\ i9^0-i9^post42 == 0 /\ -nmax^post42+nmax^0 == 0 /\ -n^post42+n^0 == 0 /\ __const_50^0-__const_50^post42 == 0 /\ -j^post42+j^0 == 0 /\ -n8^post42+n8^0 == 0 /\ -j10^post42+j10^0 == 0 /\ nmax7^0-nmax7^post42 == 0), cost: 1
  17: l18 -> l0 : __const_50^0'=__const_50^post18, __const_5^0'=__const_5^post18, chkerr^0'=chkerr^post18, i9^0'=i9^post18, i^0'=i^post18, j10^0'=j10^post18, j^0'=j^post18, k11^0'=k11^post18, n8^0'=n8^post18, n^0'=n^post18, nmax7^0'=nmax7^post18, nmax^0'=nmax^post18, ret_ludcmp14^0'=ret_ludcmp14^post18, w12^0'=w12^post18, w^0'=w^post18, (i9^0-i9^post18 == 0 /\ -__const_5^post18+__const_5^0 == 0 /\ -w^post18+w^0 == 0 /\ -nmax^post18+nmax^0 == 0 /\ n8^0-n8^post18 == 0 /\ -i^post18+i^0 == 0 /\ n^0-n^post18 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post18 == 0 /\ -1-j10^0+j10^post18 == 0 /\ -chkerr^post18+chkerr^0 == 0 /\ k11^0-k11^post18 == 0 /\ -nmax7^post18+nmax7^0 == 0 /\ -__const_50^post18+__const_50^0 == 0 /\ j^0-j^post18 == 0 /\ -w12^post18+w12^0 == 0), cost: 1
  20: l19 -> l7 : __const_50^0'=__const_50^post21, __const_5^0'=__const_5^post21, chkerr^0'=chkerr^post21, i9^0'=i9^post21, i^0'=i^post21, j10^0'=j10^post21, j^0'=j^post21, k11^0'=k11^post21, n8^0'=n8^post21, n^0'=n^post21, nmax7^0'=nmax7^post21, nmax^0'=nmax^post21, ret_ludcmp14^0'=ret_ludcmp14^post21, w12^0'=w12^post21, w^0'=w^post21, (nmax7^0-nmax7^post21 == 0 /\ i^0-i^post21 == 0 /\ i9^0-i9^post21 == 0 /\ -nmax^post21+nmax^0 == 0 /\ -chkerr^post21+chkerr^0 == 0 /\ -n^post21+n^0 == 0 /\ __const_50^0-__const_50^post21 == 0 /\ w^0-w^post21 == 0 /\ __const_5^0-__const_5^post21 == 0 /\ k11^post21 == 0 /\ w12^0-w12^post21 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post21 == 0 /\ -j^post21+j^0 == 0 /\ -j10^post21+j10^0 == 0 /\ n8^0-n8^post21 == 0), cost: 1
  22: l20 -> l18 : __const_50^0'=__const_50^post23, __const_5^0'=__const_5^post23, chkerr^0'=chkerr^post23, i9^0'=i9^post23, i^0'=i^post23, j10^0'=j10^post23, j^0'=j^post23, k11^0'=k11^post23, n8^0'=n8^post23, n^0'=n^post23, nmax7^0'=nmax7^post23, nmax^0'=nmax^post23, ret_ludcmp14^0'=ret_ludcmp14^post23, w12^0'=w12^post23, w^0'=w^post23, (-n^post23+n^0 == 0 /\ __const_50^0-__const_50^post23 == 0 /\ i9^0 <= 0 /\ -j^post23+j^0 == 0 /\ -i^post23+i^0 == 0 /\ __const_5^0-__const_5^post23 == 0 /\ -i9^0 <= 0 /\ w12^0-w12^post23 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post23 == 0 /\ -nmax^post23+nmax^0 == 0 /\ nmax7^0-nmax7^post23 == 0 /\ -n8^post23+n8^0 == 0 /\ -j10^post23+j10^0 == 0 /\ i9^0-i9^post23 == 0 /\ -chkerr^post23+chkerr^0 == 0 /\ k11^0-k11^post23 == 0 /\ -w^post23+w^0 == 0), cost: 1
  23: l20 -> l19 : __const_50^0'=__const_50^post24, __const_5^0'=__const_5^post24, chkerr^0'=chkerr^post24, i9^0'=i9^post24, i^0'=i^post24, j10^0'=j10^post24, j^0'=j^post24, k11^0'=k11^post24, n8^0'=n8^post24, n^0'=n^post24, nmax7^0'=nmax7^post24, nmax^0'=nmax^post24, ret_ludcmp14^0'=ret_ludcmp14^post24, w12^0'=w12^post24, w^0'=w^post24, (i^0-i^post24 == 0 /\ i9^0-i9^post24 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post24 == 0 /\ 1-i9^0 <= 0 /\ w12^0-w12^post24 == 0 /\ -nmax^post24+nmax^0 == 0 /\ -n^post24+n^0 == 0 /\ -n8^post24+n8^0 == 0 /\ __const_50^0-__const_50^post24 == 0 /\ nmax7^0-nmax7^post24 == 0 /\ __const_5^0-__const_5^post24 == 0 /\ -j^post24+j^0 == 0 /\ -chkerr^post24+chkerr^0 == 0 /\ -w^post24+w^0 == 0 /\ -j10^post24+j10^0 == 0 /\ k11^0-k11^post24 == 0), cost: 1
  24: l20 -> l19 : __const_50^0'=__const_50^post25, __const_5^0'=__const_5^post25, chkerr^0'=chkerr^post25, i9^0'=i9^post25, i^0'=i^post25, j10^0'=j10^post25, j^0'=j^post25, k11^0'=k11^post25, n8^0'=n8^post25, n^0'=n^post25, nmax7^0'=nmax7^post25, nmax^0'=nmax^post25, ret_ludcmp14^0'=ret_ludcmp14^post25, w12^0'=w12^post25, w^0'=w^post25, (nmax7^0-nmax7^post25 == 0 /\ j10^0-j10^post25 == 0 /\ i^0-i^post25 == 0 /\ -nmax^post25+nmax^0 == 0 /\ i9^0-i9^post25 == 0 /\ k11^0-k11^post25 == 0 /\ -n^post25+n^0 == 0 /\ w^0-w^post25 == 0 /\ 1+i9^0 <= 0 /\ __const_50^0-__const_50^post25 == 0 /\ __const_5^0-__const_5^post25 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post25 == 0 /\ -j^post25+j^0 == 0 /\ w12^0-w12^post25 == 0 /\ -chkerr^post25+chkerr^0 == 0 /\ n8^0-n8^post25 == 0), cost: 1
  27: l21 -> l10 : __const_50^0'=__const_50^post28, __const_5^0'=__const_5^post28, chkerr^0'=chkerr^post28, i9^0'=i9^post28, i^0'=i^post28, j10^0'=j10^post28, j^0'=j^post28, k11^0'=k11^post28, n8^0'=n8^post28, n^0'=n^post28, nmax7^0'=nmax7^post28, nmax^0'=nmax^post28, ret_ludcmp14^0'=ret_ludcmp14^post28, w12^0'=w12^post28, w^0'=w^post28, (j10^0-j10^post28 == 0 /\ -i9^0+n8^0 <= 0 /\ k11^0-k11^post28 == 0 /\ i^0-i^post28 == 0 /\ -n^post28+n^0 == 0 /\ -nmax^post28+nmax^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post28 == 0 /\ w12^0-w12^post28 == 0 /\ __const_50^0-__const_50^post28 == 0 /\ nmax7^0-nmax7^post28 == 0 /\ -1+i9^post28 == 0 /\ __const_5^0-__const_5^post28 == 0 /\ -j^post28+j^0 == 0 /\ -w^post28+w^0 == 0 /\ n8^0-n8^post28 == 0 /\ -chkerr^post28+chkerr^0 == 0), cost: 1
  28: l21 -> l0 : __const_50^0'=__const_50^post29, __const_5^0'=__const_5^post29, chkerr^0'=chkerr^post29, i9^0'=i9^post29, i^0'=i^post29, j10^0'=j10^post29, j^0'=j^post29, k11^0'=k11^post29, n8^0'=n8^post29, n^0'=n^post29, nmax7^0'=nmax7^post29, nmax^0'=nmax^post29, ret_ludcmp14^0'=ret_ludcmp14^post29, w12^0'=w12^post29, w^0'=w^post29, (k11^0-k11^post29 == 0 /\ chkerr^0-chkerr^post29 == 0 /\ -nmax7^post29+nmax7^0 == 0 /\ -nmax^post29+nmax^0 == 0 /\ i^0-i^post29 == 0 /\ -j^post29+j^0 == 0 /\ 1+i9^0-n8^0 <= 0 /\ i9^0-i9^post29 == 0 /\ -ret_ludcmp14^post29+ret_ludcmp14^0 == 0 /\ __const_50^0-__const_50^post29 == 0 /\ __const_5^0-__const_5^post29 == 0 /\ -1-i9^0+j10^post29 == 0 /\ n8^0-n8^post29 == 0 /\ -w^post29+w^0 == 0 /\ w12^0-w12^post29 == 0 /\ -n^post29+n^0 == 0), cost: 1
  30: l22 -> l23 : __const_50^0'=__const_50^post31, __const_5^0'=__const_5^post31, chkerr^0'=chkerr^post31, i9^0'=i9^post31, i^0'=i^post31, j10^0'=j10^post31, j^0'=j^post31, k11^0'=k11^post31, n8^0'=n8^post31, n^0'=n^post31, nmax7^0'=nmax7^post31, nmax^0'=nmax^post31, ret_ludcmp14^0'=ret_ludcmp14^post31, w12^0'=w12^post31, w^0'=w^post31, (0 == 0 /\ __const_50^0-__const_50^post31 == 0 /\ __const_5^0-__const_5^post31 == 0 /\ -j10^post31+j10^0 == 0 /\ -1+j^post31-j^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post31 == 0 /\ nmax7^0-nmax7^post31 == 0 /\ w12^0-w12^post31 == 0 /\ k11^0-k11^post31 == 0 /\ i^0-i^post31 == 0 /\ i9^0-i9^post31 == 0 /\ -nmax^post31+nmax^0 == 0 /\ -n^post31+n^0 == 0 /\ -n8^post31+n8^0 == 0 /\ -chkerr^post31+chkerr^0 == 0), cost: 1
  40: l23 -> l25 : __const_50^0'=__const_50^post41, __const_5^0'=__const_5^post41, chkerr^0'=chkerr^post41, i9^0'=i9^post41, i^0'=i^post41, j10^0'=j10^post41, j^0'=j^post41, k11^0'=k11^post41, n8^0'=n8^post41, n^0'=n^post41, nmax7^0'=nmax7^post41, nmax^0'=nmax^post41, ret_ludcmp14^0'=ret_ludcmp14^post41, w12^0'=w12^post41, w^0'=w^post41, (ret_ludcmp14^0-ret_ludcmp14^post41 == 0 /\ -__const_5^post41+__const_5^0 == 0 /\ n8^0-n8^post41 == 0 /\ -i^post41+i^0 == 0 /\ n^0-n^post41 == 0 /\ -w^post41+w^0 == 0 /\ -chkerr^post41+chkerr^0 == 0 /\ -w12^post41+w12^0 == 0 /\ k11^0-k11^post41 == 0 /\ i9^0-i9^post41 == 0 /\ j^0-j^post41 == 0 /\ -j10^post41+j10^0 == 0 /\ -nmax^post41+nmax^0 == 0 /\ -nmax7^post41+nmax7^0 == 0 /\ __const_50^0-__const_50^post41 == 0), cost: 1
  31: l24 -> l22 : __const_50^0'=__const_50^post32, __const_5^0'=__const_5^post32, chkerr^0'=chkerr^post32, i9^0'=i9^post32, i^0'=i^post32, j10^0'=j10^post32, j^0'=j^post32, k11^0'=k11^post32, n8^0'=n8^post32, n^0'=n^post32, nmax7^0'=nmax7^post32, nmax^0'=nmax^post32, ret_ludcmp14^0'=ret_ludcmp14^post32, w12^0'=w12^post32, w^0'=w^post32, (j10^0-j10^post32 == 0 /\ k11^0-k11^post32 == 0 /\ -ret_ludcmp14^post32+ret_ludcmp14^0 == 0 /\ i^0-i^post32 == 0 /\ i9^0-i9^post32 == 0 /\ -j^post32+j^0 == 0 /\ __const_50^0-__const_50^post32 == 0 /\ w^0-w^post32 == 0 /\ __const_5^0-__const_5^post32 == 0 /\ 1-i^0+j^0 <= 0 /\ n8^0-n8^post32 == 0 /\ w12^0-w12^post32 == 0 /\ -n^post32+n^0 == 0 /\ -nmax^post32+nmax^0 == 0 /\ -nmax7^post32+nmax7^0 == 0 /\ -chkerr^post32+chkerr^0 == 0), cost: 1
  32: l24 -> l22 : __const_50^0'=__const_50^post33, __const_5^0'=__const_5^post33, chkerr^0'=chkerr^post33, i9^0'=i9^post33, i^0'=i^post33, j10^0'=j10^post33, j^0'=j^post33, k11^0'=k11^post33, n8^0'=n8^post33, n^0'=n^post33, nmax7^0'=nmax7^post33, nmax^0'=nmax^post33, ret_ludcmp14^0'=ret_ludcmp14^post33, w12^0'=w12^post33, w^0'=w^post33, (ret_ludcmp14^0-ret_ludcmp14^post33 == 0 /\ -i9^post33+i9^0 == 0 /\ -__const_50^post33+__const_50^0 == 0 /\ n8^0-n8^post33 == 0 /\ n^0-n^post33 == 0 /\ -w12^post33+w12^0 == 0 /\ j10^0-j10^post33 == 0 /\ j^0-j^post33 == 0 /\ k11^0-k11^post33 == 0 /\ -__const_5^post33+__const_5^0 == 0 /\ -i^post33+i^0 == 0 /\ -w^post33+w^0 == 0 /\ -nmax^post33+nmax^0 == 0 /\ 1+i^0-j^0 <= 0 /\ -chkerr^post33+chkerr^0 == 0 /\ -nmax7^post33+nmax7^0 == 0), cost: 1
  33: l24 -> l22 : __const_50^0'=__const_50^post34, __const_5^0'=__const_5^post34, chkerr^0'=chkerr^post34, i9^0'=i9^post34, i^0'=i^post34, j10^0'=j10^post34, j^0'=j^post34, k11^0'=k11^post34, n8^0'=n8^post34, n^0'=n^post34, nmax7^0'=nmax7^post34, nmax^0'=nmax^post34, ret_ludcmp14^0'=ret_ludcmp14^post34, w12^0'=w12^post34, w^0'=w^post34, (j10^0-j10^post34 == 0 /\ w12^0-w12^post34 == 0 /\ -k11^post34+k11^0 == 0 /\ i9^0-i9^post34 == 0 /\ -w^post34+w^0 == 0 /\ -j^post34+j^0 == 0 /\ __const_50^0-__const_50^post34 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post34 == 0 /\ -i^post34+i^0 == 0 /\ -i^0+j^0 <= 0 /\ n8^0-n8^post34 == 0 /\ -__const_5^post34+__const_5^0 == 0 /\ nmax7^0-nmax7^post34 == 0 /\ -nmax^post34+nmax^0 == 0 /\ -n^post34+n^0 == 0 /\ i^0-j^0 <= 0 /\ -chkerr^post34+chkerr^0 == 0), cost: 1
  35: l25 -> l26 : __const_50^0'=__const_50^post36, __const_5^0'=__const_5^post36, chkerr^0'=chkerr^post36, i9^0'=i9^post36, i^0'=i^post36, j10^0'=j10^post36, j^0'=j^post36, k11^0'=k11^post36, n8^0'=n8^post36, n^0'=n^post36, nmax7^0'=nmax7^post36, nmax^0'=nmax^post36, ret_ludcmp14^0'=ret_ludcmp14^post36, w12^0'=w12^post36, w^0'=w^post36, (-nmax7^post36+nmax7^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post36 == 0 /\ 1+n^0-j^0 <= 0 /\ -1+i^post36-i^0 == 0 /\ -i9^post36+i9^0 == 0 /\ -w12^post36+w12^0 == 0 /\ n8^0-n8^post36 == 0 /\ n^0-n^post36 == 0 /\ -w^post36+w^0 == 0 /\ -__const_50^post36+__const_50^0 == 0 /\ j10^0-j10^post36 == 0 /\ -__const_5^post36+__const_5^0 == 0 /\ k11^0-k11^post36 == 0 /\ -j^post36+j^0 == 0 /\ -chkerr^post36+chkerr^0 == 0 /\ -nmax^post36+nmax^0 == 0), cost: 1
  36: l25 -> l24 : __const_50^0'=__const_50^post37, __const_5^0'=__const_5^post37, chkerr^0'=chkerr^post37, i9^0'=i9^post37, i^0'=i^post37, j10^0'=j10^post37, j^0'=j^post37, k11^0'=k11^post37, n8^0'=n8^post37, n^0'=n^post37, nmax7^0'=nmax7^post37, nmax^0'=nmax^post37, ret_ludcmp14^0'=ret_ludcmp14^post37, w12^0'=w12^post37, w^0'=w^post37, (ret_ludcmp14^0-ret_ludcmp14^post37 == 0 /\ -__const_5^post37+__const_5^0 == 0 /\ n8^0-n8^post37 == 0 /\ -n^0+j^0 <= 0 /\ -w^post37+w^0 == 0 /\ -i9^post37+i9^0 == 0 /\ -i^post37+i^0 == 0 /\ n^0-n^post37 == 0 /\ -w12^post37+w12^0 == 0 /\ j^0-j^post37 == 0 /\ k11^0-k11^post37 == 0 /\ j10^0-j10^post37 == 0 /\ __const_50^0-__const_50^post37 == 0 /\ -nmax7^post37+nmax7^0 == 0 /\ -nmax^post37+nmax^0 == 0 /\ -chkerr^post37+chkerr^0 == 0), cost: 1
  39: l26 -> l27 : __const_50^0'=__const_50^post40, __const_5^0'=__const_5^post40, chkerr^0'=chkerr^post40, i9^0'=i9^post40, i^0'=i^post40, j10^0'=j10^post40, j^0'=j^post40, k11^0'=k11^post40, n8^0'=n8^post40, n^0'=n^post40, nmax7^0'=nmax7^post40, nmax^0'=nmax^post40, ret_ludcmp14^0'=ret_ludcmp14^post40, w12^0'=w12^post40, w^0'=w^post40, (-__const_5^post40+__const_5^0 == 0 /\ i9^0-i9^post40 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post40 == 0 /\ -i^post40+i^0 == 0 /\ n8^0-n8^post40 == 0 /\ n^0-n^post40 == 0 /\ -w12^post40+w12^0 == 0 /\ -chkerr^post40+chkerr^0 == 0 /\ -w^post40+w^0 == 0 /\ j10^0-j10^post40 == 0 /\ -__const_50^post40+__const_50^0 == 0 /\ -j^post40+j^0 == 0 /\ k11^0-k11^post40 == 0 /\ -nmax^post40+nmax^0 == 0 /\ -nmax7^post40+nmax7^0 == 0), cost: 1
  37: l27 -> l17 : __const_50^0'=__const_50^post38, __const_5^0'=__const_5^post38, chkerr^0'=chkerr^post38, i9^0'=i9^post38, i^0'=i^post38, j10^0'=j10^post38, j^0'=j^post38, k11^0'=k11^post38, n8^0'=n8^post38, n^0'=n^post38, nmax7^0'=nmax7^post38, nmax^0'=nmax^post38, ret_ludcmp14^0'=ret_ludcmp14^post38, w12^0'=w12^post38, w^0'=w^post38, (-nmax^0+nmax7^post38 == 0 /\ w12^0-w12^post38 == 0 /\ -k11^post38+k11^0 == 0 /\ j10^0-j10^post38 == 0 /\ -__const_5^post38+__const_5^0 == 0 /\ -j^post38+j^0 == 0 /\ -w^post38+w^0 == 0 /\ -i^post38+i^0 == 0 /\ 1-i^0+n^0 <= 0 /\ n8^post38-n^0 == 0 /\ -chkerr^post38+chkerr^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post38 == 0 /\ __const_50^0-__const_50^post38 == 0 /\ i9^post38 == 0 /\ -nmax^post38+nmax^0 == 0 /\ -n^post38+n^0 == 0), cost: 1
  38: l27 -> l23 : __const_50^0'=__const_50^post39, __const_5^0'=__const_5^post39, chkerr^0'=chkerr^post39, i9^0'=i9^post39, i^0'=i^post39, j10^0'=j10^post39, j^0'=j^post39, k11^0'=k11^post39, n8^0'=n8^post39, n^0'=n^post39, nmax7^0'=nmax7^post39, nmax^0'=nmax^post39, ret_ludcmp14^0'=ret_ludcmp14^post39, w12^0'=w12^post39, w^0'=w^post39, (j10^0-j10^post39 == 0 /\ i^0-n^0 <= 0 /\ i9^0-i9^post39 == 0 /\ k11^0-k11^post39 == 0 /\ -ret_ludcmp14^post39+ret_ludcmp14^0 == 0 /\ i^0-i^post39 == 0 /\ j^post39 == 0 /\ __const_50^0-__const_50^post39 == 0 /\ -w12^post39+w12^0 == 0 /\ __const_5^0-__const_5^post39 == 0 /\ -chkerr^post39+chkerr^0 == 0 /\ w^post39 == 0 /\ n8^0-n8^post39 == 0 /\ -n^post39+n^0 == 0 /\ -nmax7^post39+nmax7^0 == 0 /\ -nmax^post39+nmax^0 == 0), cost: 1
  44: l29 -> l26 : __const_50^0'=__const_50^post43, __const_5^0'=__const_5^post43, chkerr^0'=chkerr^post43, i9^0'=i9^post43, i^0'=i^post43, j10^0'=j10^post43, j^0'=j^post43, k11^0'=k11^post43, n8^0'=n8^post43, n^0'=n^post43, nmax7^0'=nmax7^post43, nmax^0'=nmax^post43, ret_ludcmp14^0'=ret_ludcmp14^post43, w12^0'=w12^post43, w^0'=w^post43, (i9^0-i9^post44 == 0 /\ -chkerr^post43+chkerr^post44 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post44 == 0 /\ -i^post44+i^0 == 0 /\ n8^post44-n8^post43 == 0 /\ -__const_5^post44+__const_5^0 == 0 /\ w12^post44-w12^post43 == 0 /\ -j10^post43+j10^post44 == 0 /\ n^0-n^post44 == 0 /\ -w^post44+w^0 == 0 /\ n^post43-__const_5^post44 == 0 /\ -chkerr^post44+chkerr^0 == 0 /\ -w12^post44+w12^0 == 0 /\ k11^0-k11^post44 == 0 /\ -i9^post43+i9^post44 == 0 /\ nmax7^post44-nmax7^post43 == 0 /\ __const_50^post44-__const_50^post43 == 0 /\ -j^post43+j^post44 == 0 /\ -__const_50^post44+nmax^post43 == 0 /\ -__const_50^post44+__const_50^0 == 0 /\ __const_5^post44-__const_5^post43 == 0 /\ j^0-j^post44 == 0 /\ i^post43 == 0 /\ j10^0-j10^post44 == 0 /\ w^post44-w^post43 == 0 /\ -nmax7^post44+nmax7^0 == 0 /\ -nmax^post44+nmax^0 == 0 /\ -ret_ludcmp14^post43+ret_ludcmp14^post44 == 0 /\ k11^post44-k11^post43 == 0 /\ n8^0-n8^post44 == 0), cost: 1

	Eliminating location l28 by chaining:

	Applied chaining

	First rule:
	l29 -> l28 : __const_50^0'=__const_50^post44, __const_5^0'=__const_5^post44, chkerr^0'=chkerr^post44, i9^0'=i9^post44, i^0'=i^post44, j10^0'=j10^post44, j^0'=j^post44, k11^0'=k11^post44, n8^0'=n8^post44, n^0'=n^post44, nmax7^0'=nmax7^post44, nmax^0'=nmax^post44, ret_ludcmp14^0'=ret_ludcmp14^post44, w12^0'=w12^post44, w^0'=w^post44, (i9^0-i9^post44 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post44 == 0 /\ -i^post44+i^0 == 0 /\ -__const_5^post44+__const_5^0 == 0 /\ n^0-n^post44 == 0 /\ -w^post44+w^0 == 0 /\ -chkerr^post44+chkerr^0 == 0 /\ -w12^post44+w12^0 == 0 /\ k11^0-k11^post44 == 0 /\ -__const_50^post44+__const_50^0 == 0 /\ j^0-j^post44 == 0 /\ j10^0-j10^post44 == 0 /\ -nmax7^post44+nmax7^0 == 0 /\ -nmax^post44+nmax^0 == 0 /\ n8^0-n8^post44 == 0), cost: 1
	Second rule:
	l28 -> l26 : __const_50^0'=__const_50^post43, __const_5^0'=__const_5^post43, chkerr^0'=chkerr^post43, i9^0'=i9^post43, i^0'=i^post43, j10^0'=j10^post43, j^0'=j^post43, k11^0'=k11^post43, n8^0'=n8^post43, n^0'=n^post43, nmax7^0'=nmax7^post43, nmax^0'=nmax^post43, ret_ludcmp14^0'=ret_ludcmp14^post43, w12^0'=w12^post43, w^0'=w^post43, (-ret_ludcmp14^post43+ret_ludcmp14^0 == 0 /\ i9^0-i9^post43 == 0 /\ __const_50^0-__const_50^post43 == 0 /\ __const_5^0-__const_5^post43 == 0 /\ -w12^post43+w12^0 == 0 /\ -w^post43+w^0 == 0 /\ k11^0-k11^post43 == 0 /\ -chkerr^post43+chkerr^0 == 0 /\ -__const_50^0+nmax^post43 == 0 /\ n^post43-__const_5^0 == 0 /\ i^post43 == 0 /\ n8^0-n8^post43 == 0 /\ -j10^post43+j10^0 == 0 /\ -j^post43+j^0 == 0 /\ -nmax7^post43+nmax7^0 == 0), cost: 1
	New rule:
	l29 -> l26 : __const_50^0'=__const_50^post43, __const_5^0'=__const_5^post43, chkerr^0'=chkerr^post43, i9^0'=i9^post43, i^0'=i^post43, j10^0'=j10^post43, j^0'=j^post43, k11^0'=k11^post43, n8^0'=n8^post43, n^0'=n^post43, nmax7^0'=nmax7^post43, nmax^0'=nmax^post43, ret_ludcmp14^0'=ret_ludcmp14^post43, w12^0'=w12^post43, w^0'=w^post43, (i9^0-i9^post44 == 0 /\ -chkerr^post43+chkerr^post44 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post44 == 0 /\ -i^post44+i^0 == 0 /\ n8^post44-n8^post43 == 0 /\ -__const_5^post44+__const_5^0 == 0 /\ w12^post44-w12^post43 == 0 /\ -j10^post43+j10^post44 == 0 /\ n^0-n^post44 == 0 /\ -w^post44+w^0 == 0 /\ n^post43-__const_5^post44 == 0 /\ -chkerr^post44+chkerr^0 == 0 /\ -w12^post44+w12^0 == 0 /\ k11^0-k11^post44 == 0 /\ -i9^post43+i9^post44 == 0 /\ nmax7^post44-nmax7^post43 == 0 /\ __const_50^post44-__const_50^post43 == 0 /\ -j^post43+j^post44 == 0 /\ -__const_50^post44+nmax^post43 == 0 /\ -__const_50^post44+__const_50^0 == 0 /\ __const_5^post44-__const_5^post43 == 0 /\ j^0-j^post44 == 0 /\ i^post43 == 0 /\ j10^0-j10^post44 == 0 /\ w^post44-w^post43 == 0 /\ -nmax7^post44+nmax7^0 == 0 /\ -nmax^post44+nmax^0 == 0 /\ -ret_ludcmp14^post43+ret_ludcmp14^post44 == 0 /\ k11^post44-k11^post43 == 0 /\ n8^0-n8^post44 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 42 43

Simplified Transitions

Start location: l29
Program variables: __const_50^0 __const_5^0 chkerr^0 i9^0 i^0 j10^0 j^0 k11^0 n8^0 n^0 nmax7^0 nmax^0 ret_ludcmp14^0 w12^0 w^0
  45: l0 -> l1 : T, cost: 1
  70: l1 -> l12 : j10^0'=1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
  71: l1 -> l20 : w12^0'=w12^post27, -n8^0+j10^0 <= 0, cost: 1
  46: l2 -> l3 : i9^0'=-1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
  47: l2 -> l4 : j10^0'=1+j10^0, w12^0'=w12^post3, -n8^0+j10^0 <= 0, cost: 1
  74: l3 -> l5 : T, cost: 1
  79: l4 -> l2 : T, cost: 1
  48: l5 -> l6 : chkerr^0'=0, ret_ludcmp14^0'=0, 1+i9^0 <= 0, cost: 1
  49: l5 -> l4 : j10^0'=1+i9^0, w12^0'=w12^post5, -i9^0 <= 0, cost: 1
  50: l7 -> l8 : T, cost: 1
  63: l8 -> l18 : -k11^0+i9^0 <= 0, cost: 1
  64: l8 -> l7 : k11^0'=1+k11^0, w12^0'=w12^post20, 1+k11^0-i9^0 <= 0, cost: 1
  51: l9 -> l10 : i9^0'=1+i9^0, i9^0-j10^0 <= 0, cost: 1
  52: l9 -> l11 : j10^0'=1+j10^0, w12^0'=w12^post8, 1-i9^0+j10^0 <= 0, cost: 1
  61: l10 -> l14 : T, cost: 1
  66: l11 -> l9 : T, cost: 1
  53: l12 -> l13 : T, cost: 1
  59: l13 -> l17 : i9^0'=1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
  60: l13 -> l15 : k11^0'=0, w12^0'=w12^post16, -n8^0+j10^0 <= 0, cost: 1
  54: l14 -> l3 : i9^0'=-1+n8^0, 1-i9^0+n8^0 <= 0, cost: 1
  55: l14 -> l11 : j10^0'=0, w12^0'=w12^post11, i9^0-n8^0 <= 0, cost: 1
  56: l15 -> l16 : T, cost: 1
  57: l16 -> l12 : j10^0'=1+j10^0, 1-k11^0+i9^0 <= 0, cost: 1
  58: l16 -> l15 : k11^0'=1+k11^0, w12^0'=w12^post14, k11^0-i9^0 <= 0, cost: 1
  86: l17 -> l21 : T, cost: 1
  62: l18 -> l0 : j10^0'=1+j10^0, T, cost: 1
  65: l19 -> l7 : k11^0'=0, T, cost: 1
  67: l20 -> l18 : (i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
  68: l20 -> l19 : 1-i9^0 <= 0, cost: 1
  69: l20 -> l19 : 1+i9^0 <= 0, cost: 1
  72: l21 -> l10 : i9^0'=1, -i9^0+n8^0 <= 0, cost: 1
  73: l21 -> l0 : j10^0'=1+i9^0, 1+i9^0-n8^0 <= 0, cost: 1
  75: l22 -> l23 : j^0'=1+j^0, w^0'=w^post31, T, cost: 1
  85: l23 -> l25 : T, cost: 1
  76: l24 -> l22 : 1-i^0+j^0 <= 0, cost: 1
  77: l24 -> l22 : 1+i^0-j^0 <= 0, cost: 1
  78: l24 -> l22 : (-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
  80: l25 -> l26 : i^0'=1+i^0, 1+n^0-j^0 <= 0, cost: 1
  81: l25 -> l24 : -n^0+j^0 <= 0, cost: 1
  84: l26 -> l27 : T, cost: 1
  82: l27 -> l17 : i9^0'=0, n8^0'=n^0, nmax7^0'=nmax^0, 1-i^0+n^0 <= 0, cost: 1
  83: l27 -> l23 : j^0'=0, w^0'=0, i^0-n^0 <= 0, cost: 1
  87: l29 -> l26 : i^0'=0, n^0'=__const_5^0, nmax^0'=__const_50^0, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : __const_50^0'=__const_50^post1, __const_5^0'=__const_5^post1, chkerr^0'=chkerr^post1, i9^0'=i9^post1, i^0'=i^post1, j10^0'=j10^post1, j^0'=j^post1, k11^0'=k11^post1, n8^0'=n8^post1, n^0'=n^post1, nmax7^0'=nmax7^post1, nmax^0'=nmax^post1, ret_ludcmp14^0'=ret_ludcmp14^post1, w12^0'=w12^post1, w^0'=w^post1, (ret_ludcmp14^0-ret_ludcmp14^post1 == 0 /\ -w^post1+w^0 == 0 /\ -__const_5^post1+__const_5^0 == 0 /\ -nmax7^post1+nmax7^0 == 0 /\ -nmax^post1+nmax^0 == 0 /\ -n^post1+n^0 == 0 /\ j10^0-j10^post1 == 0 /\ n8^0-n8^post1 == 0 /\ -chkerr^post1+chkerr^0 == 0 /\ i9^0-i9^post1 == 0 /\ -__const_50^post1+__const_50^0 == 0 /\ -j^post1+j^0 == 0 /\ -i^post1+i^0 == 0 /\ k11^0-k11^post1 == 0 /\ -w12^post1+w12^0 == 0), cost: 1
	New rule:
	l0 -> l1 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality ret_ludcmp14^post1 = ret_ludcmp14^0
		
		propagated equality w^post1 = w^0
		
		propagated equality __const_5^post1 = __const_5^0
		
		propagated equality nmax7^post1 = nmax7^0
		
		propagated equality nmax^post1 = nmax^0
		
		propagated equality n^post1 = n^0
		
		propagated equality j10^post1 = j10^0
		
		propagated equality n8^post1 = n8^0
		
		propagated equality chkerr^post1 = chkerr^0
		
		propagated equality i9^post1 = i9^0
		
		propagated equality __const_50^post1 = __const_50^0
		
		propagated equality j^post1 = j^0
		
		propagated equality i^post1 = i^0
		
		propagated equality k11^post1 = k11^0
		
		propagated equality w12^post1 = w12^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l0 -> l1 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l0 -> l1 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : __const_50^0'=__const_50^post2, __const_5^0'=__const_5^post2, chkerr^0'=chkerr^post2, i9^0'=i9^post2, i^0'=i^post2, j10^0'=j10^post2, j^0'=j^post2, k11^0'=k11^post2, n8^0'=n8^post2, n^0'=n^post2, nmax7^0'=nmax7^post2, nmax^0'=nmax^post2, ret_ludcmp14^0'=ret_ludcmp14^post2, w12^0'=w12^post2, w^0'=w^post2, (n^0-n^post2 == 0 /\ -__const_5^post2+__const_5^0 == 0 /\ -nmax7^post2+nmax7^0 == 0 /\ k11^0-k11^post2 == 0 /\ -nmax^post2+nmax^0 == 0 /\ 1-i9^0+i9^post2 == 0 /\ -chkerr^post2+chkerr^0 == 0 /\ __const_50^0-__const_50^post2 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post2 == 0 /\ -i^post2+i^0 == 0 /\ -w^post2+w^0 == 0 /\ 1+n8^0-j10^0 <= 0 /\ j^0-j^post2 == 0 /\ n8^0-n8^post2 == 0 /\ j10^0-j10^post2 == 0 /\ -w12^post2+w12^0 == 0), cost: 1
	New rule:
	l2 -> l3 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=-1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+n8^0-j10^0 <= 0), cost: 1
	
		propagated equality n^post2 = n^0
		
		propagated equality __const_5^post2 = __const_5^0
		
		propagated equality nmax7^post2 = nmax7^0
		
		propagated equality k11^post2 = k11^0
		
		propagated equality nmax^post2 = nmax^0
		
		propagated equality i9^post2 = -1+i9^0
		
		propagated equality chkerr^post2 = chkerr^0
		
		propagated equality __const_50^post2 = __const_50^0
		
		propagated equality ret_ludcmp14^post2 = ret_ludcmp14^0
		
		propagated equality i^post2 = i^0
		
		propagated equality w^post2 = w^0
		
		propagated equality j^post2 = j^0
		
		propagated equality n8^post2 = n8^0
		
		propagated equality j10^post2 = j10^0
		
		propagated equality w12^post2 = w12^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=-1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+n8^0-j10^0 <= 0), cost: 1
	New rule:
	l2 -> l3 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=-1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+n8^0-j10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=-1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+n8^0-j10^0 <= 0, cost: 1
	New rule:
	l2 -> l3 : i9^0'=-1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l4 : __const_50^0'=__const_50^post3, __const_5^0'=__const_5^post3, chkerr^0'=chkerr^post3, i9^0'=i9^post3, i^0'=i^post3, j10^0'=j10^post3, j^0'=j^post3, k11^0'=k11^post3, n8^0'=n8^post3, n^0'=n^post3, nmax7^0'=nmax7^post3, nmax^0'=nmax^post3, ret_ludcmp14^0'=ret_ludcmp14^post3, w12^0'=w12^post3, w^0'=w^post3, (0 == 0 /\ -nmax7^post3+nmax7^0 == 0 /\ i9^0-i9^post3 == 0 /\ k11^0-k11^post3 == 0 /\ -__const_5^post3+__const_5^0 == 0 /\ -1-j10^0+j10^post3 == 0 /\ -n8^0+j10^0 <= 0 /\ __const_50^0-__const_50^post3 == 0 /\ -chkerr^post3+chkerr^0 == 0 /\ -w^post3+w^0 == 0 /\ -nmax^post3+nmax^0 == 0 /\ j^0-j^post3 == 0 /\ n8^0-n8^post3 == 0 /\ n^0-n^post3 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post3 == 0 /\ -i^post3+i^0 == 0), cost: 1
	New rule:
	l2 -> l4 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post3, w^0'=w^0, (0 == 0 /\ -n8^0+j10^0 <= 0), cost: 1
	
		propagated equality nmax7^post3 = nmax7^0
		
		propagated equality i9^post3 = i9^0
		
		propagated equality k11^post3 = k11^0
		
		propagated equality __const_5^post3 = __const_5^0
		
		propagated equality j10^post3 = 1+j10^0
		
		propagated equality __const_50^post3 = __const_50^0
		
		propagated equality chkerr^post3 = chkerr^0
		
		propagated equality w^post3 = w^0
		
		propagated equality nmax^post3 = nmax^0
		
		propagated equality j^post3 = j^0
		
		propagated equality n8^post3 = n8^0
		
		propagated equality n^post3 = n^0
		
		propagated equality ret_ludcmp14^post3 = ret_ludcmp14^0
		
		propagated equality i^post3 = i^0
		
	Simplified Guard

	Original rule:
	l2 -> l4 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post3, w^0'=w^0, (0 == 0 /\ -n8^0+j10^0 <= 0), cost: 1
	New rule:
	l2 -> l4 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post3, w^0'=w^0, -n8^0+j10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l4 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post3, w^0'=w^0, -n8^0+j10^0 <= 0, cost: 1
	New rule:
	l2 -> l4 : j10^0'=1+j10^0, w12^0'=w12^post3, -n8^0+j10^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l6 : __const_50^0'=__const_50^post4, __const_5^0'=__const_5^post4, chkerr^0'=chkerr^post4, i9^0'=i9^post4, i^0'=i^post4, j10^0'=j10^post4, j^0'=j^post4, k11^0'=k11^post4, n8^0'=n8^post4, n^0'=n^post4, nmax7^0'=nmax7^post4, nmax^0'=nmax^post4, ret_ludcmp14^0'=ret_ludcmp14^post4, w12^0'=w12^post4, w^0'=w^post4, (-n8^post4+n8^0 == 0 /\ -__const_5^post4+__const_5^0 == 0 /\ ret_ludcmp14^post4 == 0 /\ __const_50^0-__const_50^post4 == 0 /\ 1+i9^0 <= 0 /\ i^0-i^post4 == 0 /\ -n^post4+n^0 == 0 /\ -w^post4+w^0 == 0 /\ w12^0-w12^post4 == 0 /\ nmax7^0-nmax7^post4 == 0 /\ -nmax^post4+nmax^0 == 0 /\ i9^0-i9^post4 == 0 /\ k11^0-k11^post4 == 0 /\ -j^post4+j^0 == 0 /\ chkerr^post4-ret_ludcmp14^post4 == 0 /\ -j10^post4+j10^0 == 0), cost: 1
	New rule:
	l5 -> l6 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+i9^0 <= 0), cost: 1
	
		propagated equality n8^post4 = n8^0
		
		propagated equality __const_5^post4 = __const_5^0
		
		propagated equality ret_ludcmp14^post4 = 0
		
		propagated equality __const_50^post4 = __const_50^0
		
		propagated equality i^post4 = i^0
		
		propagated equality n^post4 = n^0
		
		propagated equality w^post4 = w^0
		
		propagated equality w12^post4 = w12^0
		
		propagated equality nmax7^post4 = nmax7^0
		
		propagated equality nmax^post4 = nmax^0
		
		propagated equality i9^post4 = i9^0
		
		propagated equality k11^post4 = k11^0
		
		propagated equality j^post4 = j^0
		
		propagated equality chkerr^post4 = 0
		
		propagated equality j10^post4 = j10^0
		
	Simplified Guard

	Original rule:
	l5 -> l6 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+i9^0 <= 0), cost: 1
	New rule:
	l5 -> l6 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=0, w12^0'=w12^0, w^0'=w^0, 1+i9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l6 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=0, w12^0'=w12^0, w^0'=w^0, 1+i9^0 <= 0, cost: 1
	New rule:
	l5 -> l6 : chkerr^0'=0, ret_ludcmp14^0'=0, 1+i9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l4 : __const_50^0'=__const_50^post5, __const_5^0'=__const_5^post5, chkerr^0'=chkerr^post5, i9^0'=i9^post5, i^0'=i^post5, j10^0'=j10^post5, j^0'=j^post5, k11^0'=k11^post5, n8^0'=n8^post5, n^0'=n^post5, nmax7^0'=nmax7^post5, nmax^0'=nmax^post5, ret_ludcmp14^0'=ret_ludcmp14^post5, w12^0'=w12^post5, w^0'=w^post5, (0 == 0 /\ -nmax7^post5+nmax7^0 == 0 /\ -i9^0 <= 0 /\ -n^post5+n^0 == 0 /\ -nmax^post5+nmax^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post5 == 0 /\ n8^0-n8^post5 == 0 /\ -chkerr^post5+chkerr^0 == 0 /\ i9^0-i9^post5 == 0 /\ k11^0-k11^post5 == 0 /\ -w^post5+w^0 == 0 /\ -i^post5+i^0 == 0 /\ -__const_5^post5+__const_5^0 == 0 /\ -1-i9^0+j10^post5 == 0 /\ __const_50^0-__const_50^post5 == 0 /\ -j^post5+j^0 == 0), cost: 1
	New rule:
	l5 -> l4 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post5, w^0'=w^0, (0 == 0 /\ -i9^0 <= 0), cost: 1
	
		propagated equality nmax7^post5 = nmax7^0
		
		propagated equality n^post5 = n^0
		
		propagated equality nmax^post5 = nmax^0
		
		propagated equality ret_ludcmp14^post5 = ret_ludcmp14^0
		
		propagated equality n8^post5 = n8^0
		
		propagated equality chkerr^post5 = chkerr^0
		
		propagated equality i9^post5 = i9^0
		
		propagated equality k11^post5 = k11^0
		
		propagated equality w^post5 = w^0
		
		propagated equality i^post5 = i^0
		
		propagated equality __const_5^post5 = __const_5^0
		
		propagated equality j10^post5 = 1+i9^0
		
		propagated equality __const_50^post5 = __const_50^0
		
		propagated equality j^post5 = j^0
		
	Simplified Guard

	Original rule:
	l5 -> l4 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post5, w^0'=w^0, (0 == 0 /\ -i9^0 <= 0), cost: 1
	New rule:
	l5 -> l4 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post5, w^0'=w^0, -i9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l4 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post5, w^0'=w^0, -i9^0 <= 0, cost: 1
	New rule:
	l5 -> l4 : j10^0'=1+i9^0, w12^0'=w12^post5, -i9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l8 : __const_50^0'=__const_50^post6, __const_5^0'=__const_5^post6, chkerr^0'=chkerr^post6, i9^0'=i9^post6, i^0'=i^post6, j10^0'=j10^post6, j^0'=j^post6, k11^0'=k11^post6, n8^0'=n8^post6, n^0'=n^post6, nmax7^0'=nmax7^post6, nmax^0'=nmax^post6, ret_ludcmp14^0'=ret_ludcmp14^post6, w12^0'=w12^post6, w^0'=w^post6, (-chkerr^post6+chkerr^0 == 0 /\ n^0-n^post6 == 0 /\ i9^0-i9^post6 == 0 /\ k11^0-k11^post6 == 0 /\ -nmax7^post6+nmax7^0 == 0 /\ -nmax^post6+nmax^0 == 0 /\ -w^post6+w^0 == 0 /\ j^0-j^post6 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post6 == 0 /\ -i^post6+i^0 == 0 /\ -__const_5^post6+__const_5^0 == 0 /\ j10^0-j10^post6 == 0 /\ n8^0-n8^post6 == 0 /\ __const_50^0-__const_50^post6 == 0 /\ -w12^post6+w12^0 == 0), cost: 1
	New rule:
	l7 -> l8 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality chkerr^post6 = chkerr^0
		
		propagated equality n^post6 = n^0
		
		propagated equality i9^post6 = i9^0
		
		propagated equality k11^post6 = k11^0
		
		propagated equality nmax7^post6 = nmax7^0
		
		propagated equality nmax^post6 = nmax^0
		
		propagated equality w^post6 = w^0
		
		propagated equality j^post6 = j^0
		
		propagated equality ret_ludcmp14^post6 = ret_ludcmp14^0
		
		propagated equality i^post6 = i^0
		
		propagated equality __const_5^post6 = __const_5^0
		
		propagated equality j10^post6 = j10^0
		
		propagated equality n8^post6 = n8^0
		
		propagated equality __const_50^post6 = __const_50^0
		
		propagated equality w12^post6 = w12^0
		
	Simplified Guard

	Original rule:
	l7 -> l8 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l7 -> l8 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l8 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l7 -> l8 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l9 -> l10 : __const_50^0'=__const_50^post7, __const_5^0'=__const_5^post7, chkerr^0'=chkerr^post7, i9^0'=i9^post7, i^0'=i^post7, j10^0'=j10^post7, j^0'=j^post7, k11^0'=k11^post7, n8^0'=n8^post7, n^0'=n^post7, nmax7^0'=nmax7^post7, nmax^0'=nmax^post7, ret_ludcmp14^0'=ret_ludcmp14^post7, w12^0'=w12^post7, w^0'=w^post7, (-chkerr^post7+chkerr^0 == 0 /\ __const_5^0-__const_5^post7 == 0 /\ j10^0-j10^post7 == 0 /\ -nmax7^post7+nmax7^0 == 0 /\ w12^0-w12^post7 == 0 /\ k11^0-k11^post7 == 0 /\ i9^0-j10^0 <= 0 /\ __const_50^0-__const_50^post7 == 0 /\ -1-i9^0+i9^post7 == 0 /\ -w^post7+w^0 == 0 /\ -nmax^post7+nmax^0 == 0 /\ n8^0-n8^post7 == 0 /\ -i^post7+i^0 == 0 /\ j^0-j^post7 == 0 /\ n^0-n^post7 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post7 == 0), cost: 1
	New rule:
	l9 -> l10 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ i9^0-j10^0 <= 0), cost: 1
	
		propagated equality chkerr^post7 = chkerr^0
		
		propagated equality __const_5^post7 = __const_5^0
		
		propagated equality j10^post7 = j10^0
		
		propagated equality nmax7^post7 = nmax7^0
		
		propagated equality w12^post7 = w12^0
		
		propagated equality k11^post7 = k11^0
		
		propagated equality __const_50^post7 = __const_50^0
		
		propagated equality i9^post7 = 1+i9^0
		
		propagated equality w^post7 = w^0
		
		propagated equality nmax^post7 = nmax^0
		
		propagated equality n8^post7 = n8^0
		
		propagated equality i^post7 = i^0
		
		propagated equality j^post7 = j^0
		
		propagated equality n^post7 = n^0
		
		propagated equality ret_ludcmp14^post7 = ret_ludcmp14^0
		
	Simplified Guard

	Original rule:
	l9 -> l10 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ i9^0-j10^0 <= 0), cost: 1
	New rule:
	l9 -> l10 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, i9^0-j10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l9 -> l10 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, i9^0-j10^0 <= 0, cost: 1
	New rule:
	l9 -> l10 : i9^0'=1+i9^0, i9^0-j10^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l9 -> l11 : __const_50^0'=__const_50^post8, __const_5^0'=__const_5^post8, chkerr^0'=chkerr^post8, i9^0'=i9^post8, i^0'=i^post8, j10^0'=j10^post8, j^0'=j^post8, k11^0'=k11^post8, n8^0'=n8^post8, n^0'=n^post8, nmax7^0'=nmax7^post8, nmax^0'=nmax^post8, ret_ludcmp14^0'=ret_ludcmp14^post8, w12^0'=w12^post8, w^0'=w^post8, (0 == 0 /\ __const_5^0-__const_5^post8 == 0 /\ -chkerr^post8+chkerr^0 == 0 /\ -n8^post8+n8^0 == 0 /\ 1-i9^0+j10^0 <= 0 /\ __const_50^0-__const_50^post8 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post8 == 0 /\ -1+j10^post8-j10^0 == 0 /\ -j^post8+j^0 == 0 /\ -w^post8+w^0 == 0 /\ nmax7^0-nmax7^post8 == 0 /\ -nmax^post8+nmax^0 == 0 /\ k11^0-k11^post8 == 0 /\ -n^post8+n^0 == 0 /\ i^0-i^post8 == 0 /\ i9^0-i9^post8 == 0), cost: 1
	New rule:
	l9 -> l11 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post8, w^0'=w^0, (0 == 0 /\ 1-i9^0+j10^0 <= 0), cost: 1
	
		propagated equality __const_5^post8 = __const_5^0
		
		propagated equality chkerr^post8 = chkerr^0
		
		propagated equality n8^post8 = n8^0
		
		propagated equality __const_50^post8 = __const_50^0
		
		propagated equality ret_ludcmp14^post8 = ret_ludcmp14^0
		
		propagated equality j10^post8 = 1+j10^0
		
		propagated equality j^post8 = j^0
		
		propagated equality w^post8 = w^0
		
		propagated equality nmax7^post8 = nmax7^0
		
		propagated equality nmax^post8 = nmax^0
		
		propagated equality k11^post8 = k11^0
		
		propagated equality n^post8 = n^0
		
		propagated equality i^post8 = i^0
		
		propagated equality i9^post8 = i9^0
		
	Simplified Guard

	Original rule:
	l9 -> l11 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post8, w^0'=w^0, (0 == 0 /\ 1-i9^0+j10^0 <= 0), cost: 1
	New rule:
	l9 -> l11 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post8, w^0'=w^0, 1-i9^0+j10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l9 -> l11 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post8, w^0'=w^0, 1-i9^0+j10^0 <= 0, cost: 1
	New rule:
	l9 -> l11 : j10^0'=1+j10^0, w12^0'=w12^post8, 1-i9^0+j10^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l12 -> l13 : __const_50^0'=__const_50^post9, __const_5^0'=__const_5^post9, chkerr^0'=chkerr^post9, i9^0'=i9^post9, i^0'=i^post9, j10^0'=j10^post9, j^0'=j^post9, k11^0'=k11^post9, n8^0'=n8^post9, n^0'=n^post9, nmax7^0'=nmax7^post9, nmax^0'=nmax^post9, ret_ludcmp14^0'=ret_ludcmp14^post9, w12^0'=w12^post9, w^0'=w^post9, (-w12^post9+w12^0 == 0 /\ j10^0-j10^post9 == 0 /\ chkerr^0-chkerr^post9 == 0 /\ -nmax7^post9+nmax7^0 == 0 /\ -n^post9+n^0 == 0 /\ i^0-i^post9 == 0 /\ n8^0-n8^post9 == 0 /\ i9^0-i9^post9 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post9 == 0 /\ -w^post9+w^0 == 0 /\ -nmax^post9+nmax^0 == 0 /\ k11^0-k11^post9 == 0 /\ __const_50^0-__const_50^post9 == 0 /\ -__const_5^post9+__const_5^0 == 0 /\ -j^post9+j^0 == 0), cost: 1
	New rule:
	l12 -> l13 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality w12^post9 = w12^0
		
		propagated equality j10^post9 = j10^0
		
		propagated equality chkerr^post9 = chkerr^0
		
		propagated equality nmax7^post9 = nmax7^0
		
		propagated equality n^post9 = n^0
		
		propagated equality i^post9 = i^0
		
		propagated equality n8^post9 = n8^0
		
		propagated equality i9^post9 = i9^0
		
		propagated equality ret_ludcmp14^post9 = ret_ludcmp14^0
		
		propagated equality w^post9 = w^0
		
		propagated equality nmax^post9 = nmax^0
		
		propagated equality k11^post9 = k11^0
		
		propagated equality __const_50^post9 = __const_50^0
		
		propagated equality __const_5^post9 = __const_5^0
		
		propagated equality j^post9 = j^0
		
	Simplified Guard

	Original rule:
	l12 -> l13 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l12 -> l13 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l12 -> l13 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l12 -> l13 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l14 -> l3 : __const_50^0'=__const_50^post10, __const_5^0'=__const_5^post10, chkerr^0'=chkerr^post10, i9^0'=i9^post10, i^0'=i^post10, j10^0'=j10^post10, j^0'=j^post10, k11^0'=k11^post10, n8^0'=n8^post10, n^0'=n^post10, nmax7^0'=nmax7^post10, nmax^0'=nmax^post10, ret_ludcmp14^0'=ret_ludcmp14^post10, w12^0'=w12^post10, w^0'=w^post10, (n^0-n^post10 == 0 /\ 1-i9^0+n8^0 <= 0 /\ -chkerr^post10+chkerr^0 == 0 /\ w12^0-w12^post10 == 0 /\ j10^0-j10^post10 == 0 /\ -nmax7^post10+nmax7^0 == 0 /\ -i^post10+i^0 == 0 /\ k11^0-k11^post10 == 0 /\ -j^post10+j^0 == 0 /\ -nmax^post10+nmax^0 == 0 /\ -w^post10+w^0 == 0 /\ 1-n8^0+i9^post10 == 0 /\ -__const_5^post10+__const_5^0 == 0 /\ n8^0-n8^post10 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post10 == 0 /\ __const_50^0-__const_50^post10 == 0), cost: 1
	New rule:
	l14 -> l3 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=-1+n8^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-i9^0+n8^0 <= 0), cost: 1
	
		propagated equality n^post10 = n^0
		
		propagated equality chkerr^post10 = chkerr^0
		
		propagated equality w12^post10 = w12^0
		
		propagated equality j10^post10 = j10^0
		
		propagated equality nmax7^post10 = nmax7^0
		
		propagated equality i^post10 = i^0
		
		propagated equality k11^post10 = k11^0
		
		propagated equality j^post10 = j^0
		
		propagated equality nmax^post10 = nmax^0
		
		propagated equality w^post10 = w^0
		
		propagated equality i9^post10 = -1+n8^0
		
		propagated equality __const_5^post10 = __const_5^0
		
		propagated equality n8^post10 = n8^0
		
		propagated equality ret_ludcmp14^post10 = ret_ludcmp14^0
		
		propagated equality __const_50^post10 = __const_50^0
		
	Simplified Guard

	Original rule:
	l14 -> l3 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=-1+n8^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-i9^0+n8^0 <= 0), cost: 1
	New rule:
	l14 -> l3 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=-1+n8^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-i9^0+n8^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l14 -> l3 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=-1+n8^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-i9^0+n8^0 <= 0, cost: 1
	New rule:
	l14 -> l3 : i9^0'=-1+n8^0, 1-i9^0+n8^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l14 -> l11 : __const_50^0'=__const_50^post11, __const_5^0'=__const_5^post11, chkerr^0'=chkerr^post11, i9^0'=i9^post11, i^0'=i^post11, j10^0'=j10^post11, j^0'=j^post11, k11^0'=k11^post11, n8^0'=n8^post11, n^0'=n^post11, nmax7^0'=nmax7^post11, nmax^0'=nmax^post11, ret_ludcmp14^0'=ret_ludcmp14^post11, w12^0'=w12^post11, w^0'=w^post11, (0 == 0 /\ -nmax7^post11+nmax7^0 == 0 /\ -chkerr^post11+chkerr^0 == 0 /\ __const_5^0-__const_5^post11 == 0 /\ j10^post11 == 0 /\ i9^0-n8^0 <= 0 /\ -j^post11+j^0 == 0 /\ __const_50^0-__const_50^post11 == 0 /\ k11^0-k11^post11 == 0 /\ -w^post11+w^0 == 0 /\ -nmax^post11+nmax^0 == 0 /\ -n^post11+n^0 == 0 /\ i^0-i^post11 == 0 /\ n8^0-n8^post11 == 0 /\ i9^0-i9^post11 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post11 == 0), cost: 1
	New rule:
	l14 -> l11 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post11, w^0'=w^0, (0 == 0 /\ i9^0-n8^0 <= 0), cost: 1
	
		propagated equality nmax7^post11 = nmax7^0
		
		propagated equality chkerr^post11 = chkerr^0
		
		propagated equality __const_5^post11 = __const_5^0
		
		propagated equality j10^post11 = 0
		
		propagated equality j^post11 = j^0
		
		propagated equality __const_50^post11 = __const_50^0
		
		propagated equality k11^post11 = k11^0
		
		propagated equality w^post11 = w^0
		
		propagated equality nmax^post11 = nmax^0
		
		propagated equality n^post11 = n^0
		
		propagated equality i^post11 = i^0
		
		propagated equality n8^post11 = n8^0
		
		propagated equality i9^post11 = i9^0
		
		propagated equality ret_ludcmp14^post11 = ret_ludcmp14^0
		
	Simplified Guard

	Original rule:
	l14 -> l11 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post11, w^0'=w^0, (0 == 0 /\ i9^0-n8^0 <= 0), cost: 1
	New rule:
	l14 -> l11 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post11, w^0'=w^0, i9^0-n8^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l14 -> l11 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post11, w^0'=w^0, i9^0-n8^0 <= 0, cost: 1
	New rule:
	l14 -> l11 : j10^0'=0, w12^0'=w12^post11, i9^0-n8^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l15 -> l16 : __const_50^0'=__const_50^post12, __const_5^0'=__const_5^post12, chkerr^0'=chkerr^post12, i9^0'=i9^post12, i^0'=i^post12, j10^0'=j10^post12, j^0'=j^post12, k11^0'=k11^post12, n8^0'=n8^post12, n^0'=n^post12, nmax7^0'=nmax7^post12, nmax^0'=nmax^post12, ret_ludcmp14^0'=ret_ludcmp14^post12, w12^0'=w12^post12, w^0'=w^post12, (__const_5^0-__const_5^post12 == 0 /\ -j^post12+j^0 == 0 /\ -chkerr^post12+chkerr^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post12 == 0 /\ __const_50^0-__const_50^post12 == 0 /\ k11^0-k11^post12 == 0 /\ -w^post12+w^0 == 0 /\ -nmax^post12+nmax^0 == 0 /\ -j10^post12+j10^0 == 0 /\ -n8^post12+n8^0 == 0 /\ -n^post12+n^0 == 0 /\ w12^0-w12^post12 == 0 /\ nmax7^0-nmax7^post12 == 0 /\ i^0-i^post12 == 0 /\ i9^0-i9^post12 == 0), cost: 1
	New rule:
	l15 -> l16 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality __const_5^post12 = __const_5^0
		
		propagated equality j^post12 = j^0
		
		propagated equality chkerr^post12 = chkerr^0
		
		propagated equality ret_ludcmp14^post12 = ret_ludcmp14^0
		
		propagated equality __const_50^post12 = __const_50^0
		
		propagated equality k11^post12 = k11^0
		
		propagated equality w^post12 = w^0
		
		propagated equality nmax^post12 = nmax^0
		
		propagated equality j10^post12 = j10^0
		
		propagated equality n8^post12 = n8^0
		
		propagated equality n^post12 = n^0
		
		propagated equality w12^post12 = w12^0
		
		propagated equality nmax7^post12 = nmax7^0
		
		propagated equality i^post12 = i^0
		
		propagated equality i9^post12 = i9^0
		
	Simplified Guard

	Original rule:
	l15 -> l16 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l15 -> l16 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l15 -> l16 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l15 -> l16 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l16 -> l12 : __const_50^0'=__const_50^post13, __const_5^0'=__const_5^post13, chkerr^0'=chkerr^post13, i9^0'=i9^post13, i^0'=i^post13, j10^0'=j10^post13, j^0'=j^post13, k11^0'=k11^post13, n8^0'=n8^post13, n^0'=n^post13, nmax7^0'=nmax7^post13, nmax^0'=nmax^post13, ret_ludcmp14^0'=ret_ludcmp14^post13, w12^0'=w12^post13, w^0'=w^post13, (-w12^post13+w12^0 == 0 /\ 1-k11^0+i9^0 <= 0 /\ -j^post13+j^0 == 0 /\ chkerr^0-chkerr^post13 == 0 /\ -n^post13+n^0 == 0 /\ -nmax7^post13+nmax7^0 == 0 /\ i^0-i^post13 == 0 /\ i9^0-i9^post13 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post13 == 0 /\ n8^0-n8^post13 == 0 /\ -w^post13+w^0 == 0 /\ -nmax^post13+nmax^0 == 0 /\ -1-j10^0+j10^post13 == 0 /\ __const_50^0-__const_50^post13 == 0 /\ k11^0-k11^post13 == 0 /\ -__const_5^post13+__const_5^0 == 0), cost: 1
	New rule:
	l16 -> l12 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-k11^0+i9^0 <= 0), cost: 1
	
		propagated equality w12^post13 = w12^0
		
		propagated equality j^post13 = j^0
		
		propagated equality chkerr^post13 = chkerr^0
		
		propagated equality n^post13 = n^0
		
		propagated equality nmax7^post13 = nmax7^0
		
		propagated equality i^post13 = i^0
		
		propagated equality i9^post13 = i9^0
		
		propagated equality ret_ludcmp14^post13 = ret_ludcmp14^0
		
		propagated equality n8^post13 = n8^0
		
		propagated equality w^post13 = w^0
		
		propagated equality nmax^post13 = nmax^0
		
		propagated equality j10^post13 = 1+j10^0
		
		propagated equality __const_50^post13 = __const_50^0
		
		propagated equality k11^post13 = k11^0
		
		propagated equality __const_5^post13 = __const_5^0
		
	Simplified Guard

	Original rule:
	l16 -> l12 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-k11^0+i9^0 <= 0), cost: 1
	New rule:
	l16 -> l12 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-k11^0+i9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l16 -> l12 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-k11^0+i9^0 <= 0, cost: 1
	New rule:
	l16 -> l12 : j10^0'=1+j10^0, 1-k11^0+i9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l16 -> l15 : __const_50^0'=__const_50^post14, __const_5^0'=__const_5^post14, chkerr^0'=chkerr^post14, i9^0'=i9^post14, i^0'=i^post14, j10^0'=j10^post14, j^0'=j^post14, k11^0'=k11^post14, n8^0'=n8^post14, n^0'=n^post14, nmax7^0'=nmax7^post14, nmax^0'=nmax^post14, ret_ludcmp14^0'=ret_ludcmp14^post14, w12^0'=w12^post14, w^0'=w^post14, (0 == 0 /\ j10^0-j10^post14 == 0 /\ -chkerr^post14+chkerr^0 == 0 /\ k11^0-i9^0 <= 0 /\ -j^post14+j^0 == 0 /\ i9^0-i9^post14 == 0 /\ -i^post14+i^0 == 0 /\ -1+k11^post14-k11^0 == 0 /\ -nmax^post14+nmax^0 == 0 /\ -w^post14+w^0 == 0 /\ -n8^post14+n8^0 == 0 /\ -n^post14+n^0 == 0 /\ nmax7^0-nmax7^post14 == 0 /\ -__const_5^post14+__const_5^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post14 == 0 /\ __const_50^0-__const_50^post14 == 0), cost: 1
	New rule:
	l16 -> l15 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=1+k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post14, w^0'=w^0, (0 == 0 /\ k11^0-i9^0 <= 0), cost: 1
	
		propagated equality j10^post14 = j10^0
		
		propagated equality chkerr^post14 = chkerr^0
		
		propagated equality j^post14 = j^0
		
		propagated equality i9^post14 = i9^0
		
		propagated equality i^post14 = i^0
		
		propagated equality k11^post14 = 1+k11^0
		
		propagated equality nmax^post14 = nmax^0
		
		propagated equality w^post14 = w^0
		
		propagated equality n8^post14 = n8^0
		
		propagated equality n^post14 = n^0
		
		propagated equality nmax7^post14 = nmax7^0
		
		propagated equality __const_5^post14 = __const_5^0
		
		propagated equality ret_ludcmp14^post14 = ret_ludcmp14^0
		
		propagated equality __const_50^post14 = __const_50^0
		
	Simplified Guard

	Original rule:
	l16 -> l15 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=1+k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post14, w^0'=w^0, (0 == 0 /\ k11^0-i9^0 <= 0), cost: 1
	New rule:
	l16 -> l15 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=1+k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post14, w^0'=w^0, k11^0-i9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l16 -> l15 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=1+k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post14, w^0'=w^0, k11^0-i9^0 <= 0, cost: 1
	New rule:
	l16 -> l15 : k11^0'=1+k11^0, w12^0'=w12^post14, k11^0-i9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l13 -> l17 : __const_50^0'=__const_50^post15, __const_5^0'=__const_5^post15, chkerr^0'=chkerr^post15, i9^0'=i9^post15, i^0'=i^post15, j10^0'=j10^post15, j^0'=j^post15, k11^0'=k11^post15, n8^0'=n8^post15, n^0'=n^post15, nmax7^0'=nmax7^post15, nmax^0'=nmax^post15, ret_ludcmp14^0'=ret_ludcmp14^post15, w12^0'=w12^post15, w^0'=w^post15, (__const_5^0-__const_5^post15 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post15 == 0 /\ -n^post15+n^0 == 0 /\ -chkerr^post15+chkerr^0 == 0 /\ nmax^0-nmax^post15 == 0 /\ -w12^post15+w12^0 == 0 /\ __const_50^0-__const_50^post15 == 0 /\ -w^post15+w^0 == 0 /\ -j^post15+j^0 == 0 /\ -1-i9^0+i9^post15 == 0 /\ -j10^post15+j10^0 == 0 /\ nmax7^0-nmax7^post15 == 0 /\ k11^0-k11^post15 == 0 /\ 1+n8^0-j10^0 <= 0 /\ i^0-i^post15 == 0 /\ -n8^post15+n8^0 == 0), cost: 1
	New rule:
	l13 -> l17 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+n8^0-j10^0 <= 0), cost: 1
	
		propagated equality __const_5^post15 = __const_5^0
		
		propagated equality ret_ludcmp14^post15 = ret_ludcmp14^0
		
		propagated equality n^post15 = n^0
		
		propagated equality chkerr^post15 = chkerr^0
		
		propagated equality nmax^post15 = nmax^0
		
		propagated equality w12^post15 = w12^0
		
		propagated equality __const_50^post15 = __const_50^0
		
		propagated equality w^post15 = w^0
		
		propagated equality j^post15 = j^0
		
		propagated equality i9^post15 = 1+i9^0
		
		propagated equality j10^post15 = j10^0
		
		propagated equality nmax7^post15 = nmax7^0
		
		propagated equality k11^post15 = k11^0
		
		propagated equality i^post15 = i^0
		
		propagated equality n8^post15 = n8^0
		
	Simplified Guard

	Original rule:
	l13 -> l17 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+n8^0-j10^0 <= 0), cost: 1
	New rule:
	l13 -> l17 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+n8^0-j10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l17 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1+i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+n8^0-j10^0 <= 0, cost: 1
	New rule:
	l13 -> l17 : i9^0'=1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l13 -> l15 : __const_50^0'=__const_50^post16, __const_5^0'=__const_5^post16, chkerr^0'=chkerr^post16, i9^0'=i9^post16, i^0'=i^post16, j10^0'=j10^post16, j^0'=j^post16, k11^0'=k11^post16, n8^0'=n8^post16, n^0'=n^post16, nmax7^0'=nmax7^post16, nmax^0'=nmax^post16, ret_ludcmp14^0'=ret_ludcmp14^post16, w12^0'=w12^post16, w^0'=w^post16, (0 == 0 /\ -j^post16+j^0 == 0 /\ -__const_5^post16+__const_5^0 == 0 /\ -i^post16+i^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post16 == 0 /\ -w^post16+w^0 == 0 /\ -chkerr^post16+chkerr^0 == 0 /\ -n^post16+n^0 == 0 /\ -nmax^post16+nmax^0 == 0 /\ -n8^0+j10^0 <= 0 /\ nmax7^0-nmax7^post16 == 0 /\ -n8^post16+n8^0 == 0 /\ i9^0-i9^post16 == 0 /\ -j10^post16+j10^0 == 0 /\ __const_50^0-__const_50^post16 == 0 /\ k11^post16 == 0), cost: 1
	New rule:
	l13 -> l15 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post16, w^0'=w^0, (0 == 0 /\ -n8^0+j10^0 <= 0), cost: 1
	
		propagated equality j^post16 = j^0
		
		propagated equality __const_5^post16 = __const_5^0
		
		propagated equality i^post16 = i^0
		
		propagated equality ret_ludcmp14^post16 = ret_ludcmp14^0
		
		propagated equality w^post16 = w^0
		
		propagated equality chkerr^post16 = chkerr^0
		
		propagated equality n^post16 = n^0
		
		propagated equality nmax^post16 = nmax^0
		
		propagated equality nmax7^post16 = nmax7^0
		
		propagated equality n8^post16 = n8^0
		
		propagated equality i9^post16 = i9^0
		
		propagated equality j10^post16 = j10^0
		
		propagated equality __const_50^post16 = __const_50^0
		
		propagated equality k11^post16 = 0
		
	Simplified Guard

	Original rule:
	l13 -> l15 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post16, w^0'=w^0, (0 == 0 /\ -n8^0+j10^0 <= 0), cost: 1
	New rule:
	l13 -> l15 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post16, w^0'=w^0, -n8^0+j10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l15 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post16, w^0'=w^0, -n8^0+j10^0 <= 0, cost: 1
	New rule:
	l13 -> l15 : k11^0'=0, w12^0'=w12^post16, -n8^0+j10^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l10 -> l14 : __const_50^0'=__const_50^post17, __const_5^0'=__const_5^post17, chkerr^0'=chkerr^post17, i9^0'=i9^post17, i^0'=i^post17, j10^0'=j10^post17, j^0'=j^post17, k11^0'=k11^post17, n8^0'=n8^post17, n^0'=n^post17, nmax7^0'=nmax7^post17, nmax^0'=nmax^post17, ret_ludcmp14^0'=ret_ludcmp14^post17, w12^0'=w12^post17, w^0'=w^post17, (nmax7^0-nmax7^post17 == 0 /\ i9^0-i9^post17 == 0 /\ -j^post17+j^0 == 0 /\ __const_50^0-__const_50^post17 == 0 /\ __const_5^0-__const_5^post17 == 0 /\ -chkerr^post17+chkerr^0 == 0 /\ k11^0-k11^post17 == 0 /\ -n^post17+n^0 == 0 /\ -w^post17+w^0 == 0 /\ -nmax^post17+nmax^0 == 0 /\ -j10^post17+j10^0 == 0 /\ w12^0-w12^post17 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post17 == 0 /\ n8^0-n8^post17 == 0 /\ i^0-i^post17 == 0), cost: 1
	New rule:
	l10 -> l14 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality nmax7^post17 = nmax7^0
		
		propagated equality i9^post17 = i9^0
		
		propagated equality j^post17 = j^0
		
		propagated equality __const_50^post17 = __const_50^0
		
		propagated equality __const_5^post17 = __const_5^0
		
		propagated equality chkerr^post17 = chkerr^0
		
		propagated equality k11^post17 = k11^0
		
		propagated equality n^post17 = n^0
		
		propagated equality w^post17 = w^0
		
		propagated equality nmax^post17 = nmax^0
		
		propagated equality j10^post17 = j10^0
		
		propagated equality w12^post17 = w12^0
		
		propagated equality ret_ludcmp14^post17 = ret_ludcmp14^0
		
		propagated equality n8^post17 = n8^0
		
		propagated equality i^post17 = i^0
		
	Simplified Guard

	Original rule:
	l10 -> l14 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l10 -> l14 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l10 -> l14 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l10 -> l14 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l18 -> l0 : __const_50^0'=__const_50^post18, __const_5^0'=__const_5^post18, chkerr^0'=chkerr^post18, i9^0'=i9^post18, i^0'=i^post18, j10^0'=j10^post18, j^0'=j^post18, k11^0'=k11^post18, n8^0'=n8^post18, n^0'=n^post18, nmax7^0'=nmax7^post18, nmax^0'=nmax^post18, ret_ludcmp14^0'=ret_ludcmp14^post18, w12^0'=w12^post18, w^0'=w^post18, (i9^0-i9^post18 == 0 /\ -__const_5^post18+__const_5^0 == 0 /\ -w^post18+w^0 == 0 /\ -nmax^post18+nmax^0 == 0 /\ n8^0-n8^post18 == 0 /\ -i^post18+i^0 == 0 /\ n^0-n^post18 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post18 == 0 /\ -1-j10^0+j10^post18 == 0 /\ -chkerr^post18+chkerr^0 == 0 /\ k11^0-k11^post18 == 0 /\ -nmax7^post18+nmax7^0 == 0 /\ -__const_50^post18+__const_50^0 == 0 /\ j^0-j^post18 == 0 /\ -w12^post18+w12^0 == 0), cost: 1
	New rule:
	l18 -> l0 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality i9^post18 = i9^0
		
		propagated equality __const_5^post18 = __const_5^0
		
		propagated equality w^post18 = w^0
		
		propagated equality nmax^post18 = nmax^0
		
		propagated equality n8^post18 = n8^0
		
		propagated equality i^post18 = i^0
		
		propagated equality n^post18 = n^0
		
		propagated equality ret_ludcmp14^post18 = ret_ludcmp14^0
		
		propagated equality j10^post18 = 1+j10^0
		
		propagated equality chkerr^post18 = chkerr^0
		
		propagated equality k11^post18 = k11^0
		
		propagated equality nmax7^post18 = nmax7^0
		
		propagated equality __const_50^post18 = __const_50^0
		
		propagated equality j^post18 = j^0
		
		propagated equality w12^post18 = w12^0
		
	Simplified Guard

	Original rule:
	l18 -> l0 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l18 -> l0 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l18 -> l0 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l18 -> l0 : j10^0'=1+j10^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l18 : __const_50^0'=__const_50^post19, __const_5^0'=__const_5^post19, chkerr^0'=chkerr^post19, i9^0'=i9^post19, i^0'=i^post19, j10^0'=j10^post19, j^0'=j^post19, k11^0'=k11^post19, n8^0'=n8^post19, n^0'=n^post19, nmax7^0'=nmax7^post19, nmax^0'=nmax^post19, ret_ludcmp14^0'=ret_ludcmp14^post19, w12^0'=w12^post19, w^0'=w^post19, (-k11^0+i9^0 <= 0 /\ -n^post19+n^0 == 0 /\ -nmax^post19+nmax^0 == 0 /\ -i^post19+i^0 == 0 /\ -__const_5^post19+__const_5^0 == 0 /\ -j^post19+j^0 == 0 /\ -chkerr^post19+chkerr^0 == 0 /\ w12^0-w12^post19 == 0 /\ -n8^post19+n8^0 == 0 /\ i9^0-i9^post19 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post19 == 0 /\ -j10^post19+j10^0 == 0 /\ __const_50^0-__const_50^post19 == 0 /\ k11^0-k11^post19 == 0 /\ nmax7^0-nmax7^post19 == 0 /\ -w^post19+w^0 == 0), cost: 1
	New rule:
	l8 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ -k11^0+i9^0 <= 0), cost: 1
	
		propagated equality n^post19 = n^0
		
		propagated equality nmax^post19 = nmax^0
		
		propagated equality i^post19 = i^0
		
		propagated equality __const_5^post19 = __const_5^0
		
		propagated equality j^post19 = j^0
		
		propagated equality chkerr^post19 = chkerr^0
		
		propagated equality w12^post19 = w12^0
		
		propagated equality n8^post19 = n8^0
		
		propagated equality i9^post19 = i9^0
		
		propagated equality ret_ludcmp14^post19 = ret_ludcmp14^0
		
		propagated equality j10^post19 = j10^0
		
		propagated equality __const_50^post19 = __const_50^0
		
		propagated equality k11^post19 = k11^0
		
		propagated equality nmax7^post19 = nmax7^0
		
		propagated equality w^post19 = w^0
		
	Simplified Guard

	Original rule:
	l8 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ -k11^0+i9^0 <= 0), cost: 1
	New rule:
	l8 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, -k11^0+i9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, -k11^0+i9^0 <= 0, cost: 1
	New rule:
	l8 -> l18 : -k11^0+i9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l7 : __const_50^0'=__const_50^post20, __const_5^0'=__const_5^post20, chkerr^0'=chkerr^post20, i9^0'=i9^post20, i^0'=i^post20, j10^0'=j10^post20, j^0'=j^post20, k11^0'=k11^post20, n8^0'=n8^post20, n^0'=n^post20, nmax7^0'=nmax7^post20, nmax^0'=nmax^post20, ret_ludcmp14^0'=ret_ludcmp14^post20, w12^0'=w12^post20, w^0'=w^post20, (0 == 0 /\ -i^post20+i^0 == 0 /\ -__const_5^post20+__const_5^0 == 0 /\ -1-k11^0+k11^post20 == 0 /\ 1+k11^0-i9^0 <= 0 /\ ret_ludcmp14^0-ret_ludcmp14^post20 == 0 /\ -n8^post20+n8^0 == 0 /\ -nmax^post20+nmax^0 == 0 /\ -n^post20+n^0 == 0 /\ -chkerr^post20+chkerr^0 == 0 /\ nmax7^0-nmax7^post20 == 0 /\ __const_50^0-__const_50^post20 == 0 /\ i9^0-i9^post20 == 0 /\ -j^post20+j^0 == 0 /\ -j10^post20+j10^0 == 0 /\ -w^post20+w^0 == 0), cost: 1
	New rule:
	l8 -> l7 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=1+k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post20, w^0'=w^0, (0 == 0 /\ 1+k11^0-i9^0 <= 0), cost: 1
	
		propagated equality i^post20 = i^0
		
		propagated equality __const_5^post20 = __const_5^0
		
		propagated equality k11^post20 = 1+k11^0
		
		propagated equality ret_ludcmp14^post20 = ret_ludcmp14^0
		
		propagated equality n8^post20 = n8^0
		
		propagated equality nmax^post20 = nmax^0
		
		propagated equality n^post20 = n^0
		
		propagated equality chkerr^post20 = chkerr^0
		
		propagated equality nmax7^post20 = nmax7^0
		
		propagated equality __const_50^post20 = __const_50^0
		
		propagated equality i9^post20 = i9^0
		
		propagated equality j^post20 = j^0
		
		propagated equality j10^post20 = j10^0
		
		propagated equality w^post20 = w^0
		
	Simplified Guard

	Original rule:
	l8 -> l7 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=1+k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post20, w^0'=w^0, (0 == 0 /\ 1+k11^0-i9^0 <= 0), cost: 1
	New rule:
	l8 -> l7 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=1+k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post20, w^0'=w^0, 1+k11^0-i9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l7 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=1+k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post20, w^0'=w^0, 1+k11^0-i9^0 <= 0, cost: 1
	New rule:
	l8 -> l7 : k11^0'=1+k11^0, w12^0'=w12^post20, 1+k11^0-i9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l19 -> l7 : __const_50^0'=__const_50^post21, __const_5^0'=__const_5^post21, chkerr^0'=chkerr^post21, i9^0'=i9^post21, i^0'=i^post21, j10^0'=j10^post21, j^0'=j^post21, k11^0'=k11^post21, n8^0'=n8^post21, n^0'=n^post21, nmax7^0'=nmax7^post21, nmax^0'=nmax^post21, ret_ludcmp14^0'=ret_ludcmp14^post21, w12^0'=w12^post21, w^0'=w^post21, (nmax7^0-nmax7^post21 == 0 /\ i^0-i^post21 == 0 /\ i9^0-i9^post21 == 0 /\ -nmax^post21+nmax^0 == 0 /\ -chkerr^post21+chkerr^0 == 0 /\ -n^post21+n^0 == 0 /\ __const_50^0-__const_50^post21 == 0 /\ w^0-w^post21 == 0 /\ __const_5^0-__const_5^post21 == 0 /\ k11^post21 == 0 /\ w12^0-w12^post21 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post21 == 0 /\ -j^post21+j^0 == 0 /\ -j10^post21+j10^0 == 0 /\ n8^0-n8^post21 == 0), cost: 1
	New rule:
	l19 -> l7 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality nmax7^post21 = nmax7^0
		
		propagated equality i^post21 = i^0
		
		propagated equality i9^post21 = i9^0
		
		propagated equality nmax^post21 = nmax^0
		
		propagated equality chkerr^post21 = chkerr^0
		
		propagated equality n^post21 = n^0
		
		propagated equality __const_50^post21 = __const_50^0
		
		propagated equality w^post21 = w^0
		
		propagated equality __const_5^post21 = __const_5^0
		
		propagated equality k11^post21 = 0
		
		propagated equality w12^post21 = w12^0
		
		propagated equality ret_ludcmp14^post21 = ret_ludcmp14^0
		
		propagated equality j^post21 = j^0
		
		propagated equality j10^post21 = j10^0
		
		propagated equality n8^post21 = n8^0
		
	Simplified Guard

	Original rule:
	l19 -> l7 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l19 -> l7 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l19 -> l7 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l19 -> l7 : k11^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l11 -> l9 : __const_50^0'=__const_50^post22, __const_5^0'=__const_5^post22, chkerr^0'=chkerr^post22, i9^0'=i9^post22, i^0'=i^post22, j10^0'=j10^post22, j^0'=j^post22, k11^0'=k11^post22, n8^0'=n8^post22, n^0'=n^post22, nmax7^0'=nmax7^post22, nmax^0'=nmax^post22, ret_ludcmp14^0'=ret_ludcmp14^post22, w12^0'=w12^post22, w^0'=w^post22, (n8^0-n8^post22 == 0 /\ i9^0-i9^post22 == 0 /\ -__const_50^post22+__const_50^0 == 0 /\ n^0-n^post22 == 0 /\ -i^post22+i^0 == 0 /\ k11^0-k11^post22 == 0 /\ -nmax^post22+nmax^0 == 0 /\ -nmax7^post22+nmax7^0 == 0 /\ -__const_5^post22+__const_5^0 == 0 /\ j^0-j^post22 == 0 /\ j10^0-j10^post22 == 0 /\ -w12^post22+w12^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post22 == 0 /\ -chkerr^post22+chkerr^0 == 0 /\ -w^post22+w^0 == 0), cost: 1
	New rule:
	l11 -> l9 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality n8^post22 = n8^0
		
		propagated equality i9^post22 = i9^0
		
		propagated equality __const_50^post22 = __const_50^0
		
		propagated equality n^post22 = n^0
		
		propagated equality i^post22 = i^0
		
		propagated equality k11^post22 = k11^0
		
		propagated equality nmax^post22 = nmax^0
		
		propagated equality nmax7^post22 = nmax7^0
		
		propagated equality __const_5^post22 = __const_5^0
		
		propagated equality j^post22 = j^0
		
		propagated equality j10^post22 = j10^0
		
		propagated equality w12^post22 = w12^0
		
		propagated equality ret_ludcmp14^post22 = ret_ludcmp14^0
		
		propagated equality chkerr^post22 = chkerr^0
		
		propagated equality w^post22 = w^0
		
	Simplified Guard

	Original rule:
	l11 -> l9 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l11 -> l9 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l11 -> l9 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l11 -> l9 : T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l20 -> l18 : __const_50^0'=__const_50^post23, __const_5^0'=__const_5^post23, chkerr^0'=chkerr^post23, i9^0'=i9^post23, i^0'=i^post23, j10^0'=j10^post23, j^0'=j^post23, k11^0'=k11^post23, n8^0'=n8^post23, n^0'=n^post23, nmax7^0'=nmax7^post23, nmax^0'=nmax^post23, ret_ludcmp14^0'=ret_ludcmp14^post23, w12^0'=w12^post23, w^0'=w^post23, (-n^post23+n^0 == 0 /\ __const_50^0-__const_50^post23 == 0 /\ i9^0 <= 0 /\ -j^post23+j^0 == 0 /\ -i^post23+i^0 == 0 /\ __const_5^0-__const_5^post23 == 0 /\ -i9^0 <= 0 /\ w12^0-w12^post23 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post23 == 0 /\ -nmax^post23+nmax^0 == 0 /\ nmax7^0-nmax7^post23 == 0 /\ -n8^post23+n8^0 == 0 /\ -j10^post23+j10^0 == 0 /\ i9^0-i9^post23 == 0 /\ -chkerr^post23+chkerr^0 == 0 /\ k11^0-k11^post23 == 0 /\ -w^post23+w^0 == 0), cost: 1
	New rule:
	l20 -> l18 : __const_50^0'=__const_50^post23, __const_5^0'=__const_5^post23, chkerr^0'=chkerr^post23, i9^0'=i9^post23, i^0'=i^post23, j10^0'=j10^post23, j^0'=j^post23, k11^0'=k11^post23, n8^0'=n8^post23, n^0'=n^post23, nmax7^0'=nmax7^post23, nmax^0'=nmax^post23, ret_ludcmp14^0'=ret_ludcmp14^post23, w12^0'=w12^post23, w^0'=w^post23, (-n^post23+n^0 == 0 /\ __const_50^0-__const_50^post23 == 0 /\ i9^0 <= 0 /\ i9^0 == 0 /\ -j^post23+j^0 == 0 /\ -i^post23+i^0 == 0 /\ __const_5^0-__const_5^post23 == 0 /\ -i9^0 <= 0 /\ w12^0-w12^post23 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post23 == 0 /\ -nmax^post23+nmax^0 == 0 /\ nmax7^0-nmax7^post23 == 0 /\ -n8^post23+n8^0 == 0 /\ -j10^post23+j10^0 == 0 /\ i9^0-i9^post23 == 0 /\ -chkerr^post23+chkerr^0 == 0 /\ k11^0-k11^post23 == 0 /\ -w^post23+w^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l18 : __const_50^0'=__const_50^post23, __const_5^0'=__const_5^post23, chkerr^0'=chkerr^post23, i9^0'=i9^post23, i^0'=i^post23, j10^0'=j10^post23, j^0'=j^post23, k11^0'=k11^post23, n8^0'=n8^post23, n^0'=n^post23, nmax7^0'=nmax7^post23, nmax^0'=nmax^post23, ret_ludcmp14^0'=ret_ludcmp14^post23, w12^0'=w12^post23, w^0'=w^post23, (-n^post23+n^0 == 0 /\ __const_50^0-__const_50^post23 == 0 /\ i9^0 <= 0 /\ i9^0 == 0 /\ -j^post23+j^0 == 0 /\ -i^post23+i^0 == 0 /\ __const_5^0-__const_5^post23 == 0 /\ -i9^0 <= 0 /\ w12^0-w12^post23 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post23 == 0 /\ -nmax^post23+nmax^0 == 0 /\ nmax7^0-nmax7^post23 == 0 /\ -n8^post23+n8^0 == 0 /\ -j10^post23+j10^0 == 0 /\ i9^0-i9^post23 == 0 /\ -chkerr^post23+chkerr^0 == 0 /\ k11^0-k11^post23 == 0 /\ -w^post23+w^0 == 0), cost: 1
	New rule:
	l20 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
	
		propagated equality n^post23 = n^0
		
		propagated equality __const_50^post23 = __const_50^0
		
		propagated equality j^post23 = j^0
		
		propagated equality i^post23 = i^0
		
		propagated equality __const_5^post23 = __const_5^0
		
		propagated equality w12^post23 = w12^0
		
		propagated equality ret_ludcmp14^post23 = ret_ludcmp14^0
		
		propagated equality nmax^post23 = nmax^0
		
		propagated equality nmax7^post23 = nmax7^0
		
		propagated equality n8^post23 = n8^0
		
		propagated equality j10^post23 = j10^0
		
		propagated equality i9^post23 = i9^0
		
		propagated equality chkerr^post23 = chkerr^0
		
		propagated equality k11^post23 = k11^0
		
		propagated equality w^post23 = w^0
		
	Simplified Guard

	Original rule:
	l20 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
	New rule:
	l20 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l20 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
	New rule:
	l20 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l18 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
	New rule:
	l20 -> l18 : (i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l19 : __const_50^0'=__const_50^post24, __const_5^0'=__const_5^post24, chkerr^0'=chkerr^post24, i9^0'=i9^post24, i^0'=i^post24, j10^0'=j10^post24, j^0'=j^post24, k11^0'=k11^post24, n8^0'=n8^post24, n^0'=n^post24, nmax7^0'=nmax7^post24, nmax^0'=nmax^post24, ret_ludcmp14^0'=ret_ludcmp14^post24, w12^0'=w12^post24, w^0'=w^post24, (i^0-i^post24 == 0 /\ i9^0-i9^post24 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post24 == 0 /\ 1-i9^0 <= 0 /\ w12^0-w12^post24 == 0 /\ -nmax^post24+nmax^0 == 0 /\ -n^post24+n^0 == 0 /\ -n8^post24+n8^0 == 0 /\ __const_50^0-__const_50^post24 == 0 /\ nmax7^0-nmax7^post24 == 0 /\ __const_5^0-__const_5^post24 == 0 /\ -j^post24+j^0 == 0 /\ -chkerr^post24+chkerr^0 == 0 /\ -w^post24+w^0 == 0 /\ -j10^post24+j10^0 == 0 /\ k11^0-k11^post24 == 0), cost: 1
	New rule:
	l20 -> l19 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-i9^0 <= 0), cost: 1
	
		propagated equality i^post24 = i^0
		
		propagated equality i9^post24 = i9^0
		
		propagated equality ret_ludcmp14^post24 = ret_ludcmp14^0
		
		propagated equality w12^post24 = w12^0
		
		propagated equality nmax^post24 = nmax^0
		
		propagated equality n^post24 = n^0
		
		propagated equality n8^post24 = n8^0
		
		propagated equality __const_50^post24 = __const_50^0
		
		propagated equality nmax7^post24 = nmax7^0
		
		propagated equality __const_5^post24 = __const_5^0
		
		propagated equality j^post24 = j^0
		
		propagated equality chkerr^post24 = chkerr^0
		
		propagated equality w^post24 = w^0
		
		propagated equality j10^post24 = j10^0
		
		propagated equality k11^post24 = k11^0
		
	Simplified Guard

	Original rule:
	l20 -> l19 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-i9^0 <= 0), cost: 1
	New rule:
	l20 -> l19 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-i9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l19 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-i9^0 <= 0, cost: 1
	New rule:
	l20 -> l19 : 1-i9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l19 : __const_50^0'=__const_50^post25, __const_5^0'=__const_5^post25, chkerr^0'=chkerr^post25, i9^0'=i9^post25, i^0'=i^post25, j10^0'=j10^post25, j^0'=j^post25, k11^0'=k11^post25, n8^0'=n8^post25, n^0'=n^post25, nmax7^0'=nmax7^post25, nmax^0'=nmax^post25, ret_ludcmp14^0'=ret_ludcmp14^post25, w12^0'=w12^post25, w^0'=w^post25, (nmax7^0-nmax7^post25 == 0 /\ j10^0-j10^post25 == 0 /\ i^0-i^post25 == 0 /\ -nmax^post25+nmax^0 == 0 /\ i9^0-i9^post25 == 0 /\ k11^0-k11^post25 == 0 /\ -n^post25+n^0 == 0 /\ w^0-w^post25 == 0 /\ 1+i9^0 <= 0 /\ __const_50^0-__const_50^post25 == 0 /\ __const_5^0-__const_5^post25 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post25 == 0 /\ -j^post25+j^0 == 0 /\ w12^0-w12^post25 == 0 /\ -chkerr^post25+chkerr^0 == 0 /\ n8^0-n8^post25 == 0), cost: 1
	New rule:
	l20 -> l19 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+i9^0 <= 0), cost: 1
	
		propagated equality nmax7^post25 = nmax7^0
		
		propagated equality j10^post25 = j10^0
		
		propagated equality i^post25 = i^0
		
		propagated equality nmax^post25 = nmax^0
		
		propagated equality i9^post25 = i9^0
		
		propagated equality k11^post25 = k11^0
		
		propagated equality n^post25 = n^0
		
		propagated equality w^post25 = w^0
		
		propagated equality __const_50^post25 = __const_50^0
		
		propagated equality __const_5^post25 = __const_5^0
		
		propagated equality ret_ludcmp14^post25 = ret_ludcmp14^0
		
		propagated equality j^post25 = j^0
		
		propagated equality w12^post25 = w12^0
		
		propagated equality chkerr^post25 = chkerr^0
		
		propagated equality n8^post25 = n8^0
		
	Simplified Guard

	Original rule:
	l20 -> l19 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+i9^0 <= 0), cost: 1
	New rule:
	l20 -> l19 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+i9^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l19 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+i9^0 <= 0, cost: 1
	New rule:
	l20 -> l19 : 1+i9^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l12 : __const_50^0'=__const_50^post26, __const_5^0'=__const_5^post26, chkerr^0'=chkerr^post26, i9^0'=i9^post26, i^0'=i^post26, j10^0'=j10^post26, j^0'=j^post26, k11^0'=k11^post26, n8^0'=n8^post26, n^0'=n^post26, nmax7^0'=nmax7^post26, nmax^0'=nmax^post26, ret_ludcmp14^0'=ret_ludcmp14^post26, w12^0'=w12^post26, w^0'=w^post26, (n^0-n^post26 == 0 /\ -i9^post26+i9^0 == 0 /\ -__const_50^post26+__const_50^0 == 0 /\ -1-i9^0+j10^post26 == 0 /\ k11^0-k11^post26 == 0 /\ -i^post26+i^0 == 0 /\ -nmax^post26+nmax^0 == 0 /\ -nmax7^post26+nmax7^0 == 0 /\ j^0-j^post26 == 0 /\ -__const_5^post26+__const_5^0 == 0 /\ -w12^post26+w12^0 == 0 /\ 1+n8^0-j10^0 <= 0 /\ ret_ludcmp14^0-ret_ludcmp14^post26 == 0 /\ -w^post26+w^0 == 0 /\ -chkerr^post26+chkerr^0 == 0 /\ n8^0-n8^post26 == 0), cost: 1
	New rule:
	l1 -> l12 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+n8^0-j10^0 <= 0), cost: 1
	
		propagated equality n^post26 = n^0
		
		propagated equality i9^post26 = i9^0
		
		propagated equality __const_50^post26 = __const_50^0
		
		propagated equality j10^post26 = 1+i9^0
		
		propagated equality k11^post26 = k11^0
		
		propagated equality i^post26 = i^0
		
		propagated equality nmax^post26 = nmax^0
		
		propagated equality nmax7^post26 = nmax7^0
		
		propagated equality j^post26 = j^0
		
		propagated equality __const_5^post26 = __const_5^0
		
		propagated equality w12^post26 = w12^0
		
		propagated equality ret_ludcmp14^post26 = ret_ludcmp14^0
		
		propagated equality w^post26 = w^0
		
		propagated equality chkerr^post26 = chkerr^0
		
		propagated equality n8^post26 = n8^0
		
	Simplified Guard

	Original rule:
	l1 -> l12 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+n8^0-j10^0 <= 0), cost: 1
	New rule:
	l1 -> l12 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+n8^0-j10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l12 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+n8^0-j10^0 <= 0, cost: 1
	New rule:
	l1 -> l12 : j10^0'=1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l20 : __const_50^0'=__const_50^post27, __const_5^0'=__const_5^post27, chkerr^0'=chkerr^post27, i9^0'=i9^post27, i^0'=i^post27, j10^0'=j10^post27, j^0'=j^post27, k11^0'=k11^post27, n8^0'=n8^post27, n^0'=n^post27, nmax7^0'=nmax7^post27, nmax^0'=nmax^post27, ret_ludcmp14^0'=ret_ludcmp14^post27, w12^0'=w12^post27, w^0'=w^post27, (0 == 0 /\ __const_50^0-__const_50^post27 == 0 /\ __const_5^0-__const_5^post27 == 0 /\ -j10^post27+j10^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post27 == 0 /\ -nmax^post27+nmax^0 == 0 /\ -n^post27+n^0 == 0 /\ -n8^post27+n8^0 == 0 /\ -n8^0+j10^0 <= 0 /\ nmax7^0-nmax7^post27 == 0 /\ k11^0-k11^post27 == 0 /\ -j^post27+j^0 == 0 /\ i^0-i^post27 == 0 /\ i9^0-i9^post27 == 0 /\ -w^post27+w^0 == 0 /\ -chkerr^post27+chkerr^0 == 0), cost: 1
	New rule:
	l1 -> l20 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post27, w^0'=w^0, (0 == 0 /\ -n8^0+j10^0 <= 0), cost: 1
	
		propagated equality __const_50^post27 = __const_50^0
		
		propagated equality __const_5^post27 = __const_5^0
		
		propagated equality j10^post27 = j10^0
		
		propagated equality ret_ludcmp14^post27 = ret_ludcmp14^0
		
		propagated equality nmax^post27 = nmax^0
		
		propagated equality n^post27 = n^0
		
		propagated equality n8^post27 = n8^0
		
		propagated equality nmax7^post27 = nmax7^0
		
		propagated equality k11^post27 = k11^0
		
		propagated equality j^post27 = j^0
		
		propagated equality i^post27 = i^0
		
		propagated equality i9^post27 = i9^0
		
		propagated equality w^post27 = w^0
		
		propagated equality chkerr^post27 = chkerr^0
		
	Simplified Guard

	Original rule:
	l1 -> l20 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post27, w^0'=w^0, (0 == 0 /\ -n8^0+j10^0 <= 0), cost: 1
	New rule:
	l1 -> l20 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post27, w^0'=w^0, -n8^0+j10^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l20 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^post27, w^0'=w^0, -n8^0+j10^0 <= 0, cost: 1
	New rule:
	l1 -> l20 : w12^0'=w12^post27, -n8^0+j10^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l21 -> l10 : __const_50^0'=__const_50^post28, __const_5^0'=__const_5^post28, chkerr^0'=chkerr^post28, i9^0'=i9^post28, i^0'=i^post28, j10^0'=j10^post28, j^0'=j^post28, k11^0'=k11^post28, n8^0'=n8^post28, n^0'=n^post28, nmax7^0'=nmax7^post28, nmax^0'=nmax^post28, ret_ludcmp14^0'=ret_ludcmp14^post28, w12^0'=w12^post28, w^0'=w^post28, (j10^0-j10^post28 == 0 /\ -i9^0+n8^0 <= 0 /\ k11^0-k11^post28 == 0 /\ i^0-i^post28 == 0 /\ -n^post28+n^0 == 0 /\ -nmax^post28+nmax^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post28 == 0 /\ w12^0-w12^post28 == 0 /\ __const_50^0-__const_50^post28 == 0 /\ nmax7^0-nmax7^post28 == 0 /\ -1+i9^post28 == 0 /\ __const_5^0-__const_5^post28 == 0 /\ -j^post28+j^0 == 0 /\ -w^post28+w^0 == 0 /\ n8^0-n8^post28 == 0 /\ -chkerr^post28+chkerr^0 == 0), cost: 1
	New rule:
	l21 -> l10 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ -i9^0+n8^0 <= 0), cost: 1
	
		propagated equality j10^post28 = j10^0
		
		propagated equality k11^post28 = k11^0
		
		propagated equality i^post28 = i^0
		
		propagated equality n^post28 = n^0
		
		propagated equality nmax^post28 = nmax^0
		
		propagated equality ret_ludcmp14^post28 = ret_ludcmp14^0
		
		propagated equality w12^post28 = w12^0
		
		propagated equality __const_50^post28 = __const_50^0
		
		propagated equality nmax7^post28 = nmax7^0
		
		propagated equality i9^post28 = 1
		
		propagated equality __const_5^post28 = __const_5^0
		
		propagated equality j^post28 = j^0
		
		propagated equality w^post28 = w^0
		
		propagated equality n8^post28 = n8^0
		
		propagated equality chkerr^post28 = chkerr^0
		
	Simplified Guard

	Original rule:
	l21 -> l10 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ -i9^0+n8^0 <= 0), cost: 1
	New rule:
	l21 -> l10 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, -i9^0+n8^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l21 -> l10 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=1, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, -i9^0+n8^0 <= 0, cost: 1
	New rule:
	l21 -> l10 : i9^0'=1, -i9^0+n8^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l21 -> l0 : __const_50^0'=__const_50^post29, __const_5^0'=__const_5^post29, chkerr^0'=chkerr^post29, i9^0'=i9^post29, i^0'=i^post29, j10^0'=j10^post29, j^0'=j^post29, k11^0'=k11^post29, n8^0'=n8^post29, n^0'=n^post29, nmax7^0'=nmax7^post29, nmax^0'=nmax^post29, ret_ludcmp14^0'=ret_ludcmp14^post29, w12^0'=w12^post29, w^0'=w^post29, (k11^0-k11^post29 == 0 /\ chkerr^0-chkerr^post29 == 0 /\ -nmax7^post29+nmax7^0 == 0 /\ -nmax^post29+nmax^0 == 0 /\ i^0-i^post29 == 0 /\ -j^post29+j^0 == 0 /\ 1+i9^0-n8^0 <= 0 /\ i9^0-i9^post29 == 0 /\ -ret_ludcmp14^post29+ret_ludcmp14^0 == 0 /\ __const_50^0-__const_50^post29 == 0 /\ __const_5^0-__const_5^post29 == 0 /\ -1-i9^0+j10^post29 == 0 /\ n8^0-n8^post29 == 0 /\ -w^post29+w^0 == 0 /\ w12^0-w12^post29 == 0 /\ -n^post29+n^0 == 0), cost: 1
	New rule:
	l21 -> l0 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+i9^0-n8^0 <= 0), cost: 1
	
		propagated equality k11^post29 = k11^0
		
		propagated equality chkerr^post29 = chkerr^0
		
		propagated equality nmax7^post29 = nmax7^0
		
		propagated equality nmax^post29 = nmax^0
		
		propagated equality i^post29 = i^0
		
		propagated equality j^post29 = j^0
		
		propagated equality i9^post29 = i9^0
		
		propagated equality ret_ludcmp14^post29 = ret_ludcmp14^0
		
		propagated equality __const_50^post29 = __const_50^0
		
		propagated equality __const_5^post29 = __const_5^0
		
		propagated equality j10^post29 = 1+i9^0
		
		propagated equality n8^post29 = n8^0
		
		propagated equality w^post29 = w^0
		
		propagated equality w12^post29 = w12^0
		
		propagated equality n^post29 = n^0
		
	Simplified Guard

	Original rule:
	l21 -> l0 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+i9^0-n8^0 <= 0), cost: 1
	New rule:
	l21 -> l0 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+i9^0-n8^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l21 -> l0 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=1+i9^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+i9^0-n8^0 <= 0, cost: 1
	New rule:
	l21 -> l0 : j10^0'=1+i9^0, 1+i9^0-n8^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l5 : __const_50^0'=__const_50^post30, __const_5^0'=__const_5^post30, chkerr^0'=chkerr^post30, i9^0'=i9^post30, i^0'=i^post30, j10^0'=j10^post30, j^0'=j^post30, k11^0'=k11^post30, n8^0'=n8^post30, n^0'=n^post30, nmax7^0'=nmax7^post30, nmax^0'=nmax^post30, ret_ludcmp14^0'=ret_ludcmp14^post30, w12^0'=w12^post30, w^0'=w^post30, (-chkerr^post30+chkerr^0 == 0 /\ n8^0-n8^post30 == 0 /\ n^0-n^post30 == 0 /\ -i^post30+i^0 == 0 /\ -i9^post30+i9^0 == 0 /\ -nmax^post30+nmax^0 == 0 /\ k11^0-k11^post30 == 0 /\ j^0-j^post30 == 0 /\ j10^0-j10^post30 == 0 /\ -__const_5^post30+__const_5^0 == 0 /\ -__const_50^post30+__const_50^0 == 0 /\ -nmax7^post30+nmax7^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post30 == 0 /\ -w^post30+w^0 == 0 /\ -w12^post30+w12^0 == 0), cost: 1
	New rule:
	l3 -> l5 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality chkerr^post30 = chkerr^0
		
		propagated equality n8^post30 = n8^0
		
		propagated equality n^post30 = n^0
		
		propagated equality i^post30 = i^0
		
		propagated equality i9^post30 = i9^0
		
		propagated equality nmax^post30 = nmax^0
		
		propagated equality k11^post30 = k11^0
		
		propagated equality j^post30 = j^0
		
		propagated equality j10^post30 = j10^0
		
		propagated equality __const_5^post30 = __const_5^0
		
		propagated equality __const_50^post30 = __const_50^0
		
		propagated equality nmax7^post30 = nmax7^0
		
		propagated equality ret_ludcmp14^post30 = ret_ludcmp14^0
		
		propagated equality w^post30 = w^0
		
		propagated equality w12^post30 = w12^0
		
	Simplified Guard

	Original rule:
	l3 -> l5 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l3 -> l5 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l5 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l3 -> l5 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l22 -> l23 : __const_50^0'=__const_50^post31, __const_5^0'=__const_5^post31, chkerr^0'=chkerr^post31, i9^0'=i9^post31, i^0'=i^post31, j10^0'=j10^post31, j^0'=j^post31, k11^0'=k11^post31, n8^0'=n8^post31, n^0'=n^post31, nmax7^0'=nmax7^post31, nmax^0'=nmax^post31, ret_ludcmp14^0'=ret_ludcmp14^post31, w12^0'=w12^post31, w^0'=w^post31, (0 == 0 /\ __const_50^0-__const_50^post31 == 0 /\ __const_5^0-__const_5^post31 == 0 /\ -j10^post31+j10^0 == 0 /\ -1+j^post31-j^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post31 == 0 /\ nmax7^0-nmax7^post31 == 0 /\ w12^0-w12^post31 == 0 /\ k11^0-k11^post31 == 0 /\ i^0-i^post31 == 0 /\ i9^0-i9^post31 == 0 /\ -nmax^post31+nmax^0 == 0 /\ -n^post31+n^0 == 0 /\ -n8^post31+n8^0 == 0 /\ -chkerr^post31+chkerr^0 == 0), cost: 1
	New rule:
	l22 -> l23 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=1+j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^post31, 0 == 0, cost: 1
	
		propagated equality __const_50^post31 = __const_50^0
		
		propagated equality __const_5^post31 = __const_5^0
		
		propagated equality j10^post31 = j10^0
		
		propagated equality j^post31 = 1+j^0
		
		propagated equality ret_ludcmp14^post31 = ret_ludcmp14^0
		
		propagated equality nmax7^post31 = nmax7^0
		
		propagated equality w12^post31 = w12^0
		
		propagated equality k11^post31 = k11^0
		
		propagated equality i^post31 = i^0
		
		propagated equality i9^post31 = i9^0
		
		propagated equality nmax^post31 = nmax^0
		
		propagated equality n^post31 = n^0
		
		propagated equality n8^post31 = n8^0
		
		propagated equality chkerr^post31 = chkerr^0
		
	Simplified Guard

	Original rule:
	l22 -> l23 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=1+j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^post31, 0 == 0, cost: 1
	New rule:
	l22 -> l23 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=1+j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^post31, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l22 -> l23 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=1+j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^post31, T, cost: 1
	New rule:
	l22 -> l23 : j^0'=1+j^0, w^0'=w^post31, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^post32, __const_5^0'=__const_5^post32, chkerr^0'=chkerr^post32, i9^0'=i9^post32, i^0'=i^post32, j10^0'=j10^post32, j^0'=j^post32, k11^0'=k11^post32, n8^0'=n8^post32, n^0'=n^post32, nmax7^0'=nmax7^post32, nmax^0'=nmax^post32, ret_ludcmp14^0'=ret_ludcmp14^post32, w12^0'=w12^post32, w^0'=w^post32, (j10^0-j10^post32 == 0 /\ k11^0-k11^post32 == 0 /\ -ret_ludcmp14^post32+ret_ludcmp14^0 == 0 /\ i^0-i^post32 == 0 /\ i9^0-i9^post32 == 0 /\ -j^post32+j^0 == 0 /\ __const_50^0-__const_50^post32 == 0 /\ w^0-w^post32 == 0 /\ __const_5^0-__const_5^post32 == 0 /\ 1-i^0+j^0 <= 0 /\ n8^0-n8^post32 == 0 /\ w12^0-w12^post32 == 0 /\ -n^post32+n^0 == 0 /\ -nmax^post32+nmax^0 == 0 /\ -nmax7^post32+nmax7^0 == 0 /\ -chkerr^post32+chkerr^0 == 0), cost: 1
	New rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-i^0+j^0 <= 0), cost: 1
	
		propagated equality j10^post32 = j10^0
		
		propagated equality k11^post32 = k11^0
		
		propagated equality ret_ludcmp14^post32 = ret_ludcmp14^0
		
		propagated equality i^post32 = i^0
		
		propagated equality i9^post32 = i9^0
		
		propagated equality j^post32 = j^0
		
		propagated equality __const_50^post32 = __const_50^0
		
		propagated equality w^post32 = w^0
		
		propagated equality __const_5^post32 = __const_5^0
		
		propagated equality n8^post32 = n8^0
		
		propagated equality w12^post32 = w12^0
		
		propagated equality n^post32 = n^0
		
		propagated equality nmax^post32 = nmax^0
		
		propagated equality nmax7^post32 = nmax7^0
		
		propagated equality chkerr^post32 = chkerr^0
		
	Simplified Guard

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-i^0+j^0 <= 0), cost: 1
	New rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-i^0+j^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-i^0+j^0 <= 0, cost: 1
	New rule:
	l24 -> l22 : 1-i^0+j^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^post33, __const_5^0'=__const_5^post33, chkerr^0'=chkerr^post33, i9^0'=i9^post33, i^0'=i^post33, j10^0'=j10^post33, j^0'=j^post33, k11^0'=k11^post33, n8^0'=n8^post33, n^0'=n^post33, nmax7^0'=nmax7^post33, nmax^0'=nmax^post33, ret_ludcmp14^0'=ret_ludcmp14^post33, w12^0'=w12^post33, w^0'=w^post33, (ret_ludcmp14^0-ret_ludcmp14^post33 == 0 /\ -i9^post33+i9^0 == 0 /\ -__const_50^post33+__const_50^0 == 0 /\ n8^0-n8^post33 == 0 /\ n^0-n^post33 == 0 /\ -w12^post33+w12^0 == 0 /\ j10^0-j10^post33 == 0 /\ j^0-j^post33 == 0 /\ k11^0-k11^post33 == 0 /\ -__const_5^post33+__const_5^0 == 0 /\ -i^post33+i^0 == 0 /\ -w^post33+w^0 == 0 /\ -nmax^post33+nmax^0 == 0 /\ 1+i^0-j^0 <= 0 /\ -chkerr^post33+chkerr^0 == 0 /\ -nmax7^post33+nmax7^0 == 0), cost: 1
	New rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+i^0-j^0 <= 0), cost: 1
	
		propagated equality ret_ludcmp14^post33 = ret_ludcmp14^0
		
		propagated equality i9^post33 = i9^0
		
		propagated equality __const_50^post33 = __const_50^0
		
		propagated equality n8^post33 = n8^0
		
		propagated equality n^post33 = n^0
		
		propagated equality w12^post33 = w12^0
		
		propagated equality j10^post33 = j10^0
		
		propagated equality j^post33 = j^0
		
		propagated equality k11^post33 = k11^0
		
		propagated equality __const_5^post33 = __const_5^0
		
		propagated equality i^post33 = i^0
		
		propagated equality w^post33 = w^0
		
		propagated equality nmax^post33 = nmax^0
		
		propagated equality chkerr^post33 = chkerr^0
		
		propagated equality nmax7^post33 = nmax7^0
		
	Simplified Guard

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+i^0-j^0 <= 0), cost: 1
	New rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+i^0-j^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+i^0-j^0 <= 0, cost: 1
	New rule:
	l24 -> l22 : 1+i^0-j^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^post34, __const_5^0'=__const_5^post34, chkerr^0'=chkerr^post34, i9^0'=i9^post34, i^0'=i^post34, j10^0'=j10^post34, j^0'=j^post34, k11^0'=k11^post34, n8^0'=n8^post34, n^0'=n^post34, nmax7^0'=nmax7^post34, nmax^0'=nmax^post34, ret_ludcmp14^0'=ret_ludcmp14^post34, w12^0'=w12^post34, w^0'=w^post34, (j10^0-j10^post34 == 0 /\ w12^0-w12^post34 == 0 /\ -k11^post34+k11^0 == 0 /\ i9^0-i9^post34 == 0 /\ -w^post34+w^0 == 0 /\ -j^post34+j^0 == 0 /\ __const_50^0-__const_50^post34 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post34 == 0 /\ -i^post34+i^0 == 0 /\ -i^0+j^0 <= 0 /\ n8^0-n8^post34 == 0 /\ -__const_5^post34+__const_5^0 == 0 /\ nmax7^0-nmax7^post34 == 0 /\ -nmax^post34+nmax^0 == 0 /\ -n^post34+n^0 == 0 /\ i^0-j^0 <= 0 /\ -chkerr^post34+chkerr^0 == 0), cost: 1
	New rule:
	l24 -> l22 : __const_50^0'=__const_50^post34, __const_5^0'=__const_5^post34, chkerr^0'=chkerr^post34, i9^0'=i9^post34, i^0'=i^post34, j10^0'=j10^post34, j^0'=j^post34, k11^0'=k11^post34, n8^0'=n8^post34, n^0'=n^post34, nmax7^0'=nmax7^post34, nmax^0'=nmax^post34, ret_ludcmp14^0'=ret_ludcmp14^post34, w12^0'=w12^post34, w^0'=w^post34, (j10^0-j10^post34 == 0 /\ w12^0-w12^post34 == 0 /\ -k11^post34+k11^0 == 0 /\ i9^0-i9^post34 == 0 /\ -w^post34+w^0 == 0 /\ -j^post34+j^0 == 0 /\ __const_50^0-__const_50^post34 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post34 == 0 /\ -i^post34+i^0 == 0 /\ -i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ n8^0-n8^post34 == 0 /\ -__const_5^post34+__const_5^0 == 0 /\ nmax7^0-nmax7^post34 == 0 /\ -nmax^post34+nmax^0 == 0 /\ -n^post34+n^0 == 0 /\ i^0-j^0 <= 0 /\ -chkerr^post34+chkerr^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^post34, __const_5^0'=__const_5^post34, chkerr^0'=chkerr^post34, i9^0'=i9^post34, i^0'=i^post34, j10^0'=j10^post34, j^0'=j^post34, k11^0'=k11^post34, n8^0'=n8^post34, n^0'=n^post34, nmax7^0'=nmax7^post34, nmax^0'=nmax^post34, ret_ludcmp14^0'=ret_ludcmp14^post34, w12^0'=w12^post34, w^0'=w^post34, (j10^0-j10^post34 == 0 /\ w12^0-w12^post34 == 0 /\ -k11^post34+k11^0 == 0 /\ i9^0-i9^post34 == 0 /\ -w^post34+w^0 == 0 /\ -j^post34+j^0 == 0 /\ __const_50^0-__const_50^post34 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post34 == 0 /\ -i^post34+i^0 == 0 /\ -i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ n8^0-n8^post34 == 0 /\ -__const_5^post34+__const_5^0 == 0 /\ nmax7^0-nmax7^post34 == 0 /\ -nmax^post34+nmax^0 == 0 /\ -n^post34+n^0 == 0 /\ i^0-j^0 <= 0 /\ -chkerr^post34+chkerr^0 == 0), cost: 1
	New rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ -i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
	
		propagated equality j10^post34 = j10^0
		
		propagated equality w12^post34 = w12^0
		
		propagated equality k11^post34 = k11^0
		
		propagated equality i9^post34 = i9^0
		
		propagated equality w^post34 = w^0
		
		propagated equality j^post34 = j^0
		
		propagated equality __const_50^post34 = __const_50^0
		
		propagated equality ret_ludcmp14^post34 = ret_ludcmp14^0
		
		propagated equality i^post34 = i^0
		
		propagated equality n8^post34 = n8^0
		
		propagated equality __const_5^post34 = __const_5^0
		
		propagated equality nmax7^post34 = nmax7^0
		
		propagated equality nmax^post34 = nmax^0
		
		propagated equality n^post34 = n^0
		
		propagated equality chkerr^post34 = chkerr^0
		
	Simplified Guard

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ -i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
	New rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
	New rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l24 -> l22 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
	New rule:
	l24 -> l22 : (-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l2 : __const_50^0'=__const_50^post35, __const_5^0'=__const_5^post35, chkerr^0'=chkerr^post35, i9^0'=i9^post35, i^0'=i^post35, j10^0'=j10^post35, j^0'=j^post35, k11^0'=k11^post35, n8^0'=n8^post35, n^0'=n^post35, nmax7^0'=nmax7^post35, nmax^0'=nmax^post35, ret_ludcmp14^0'=ret_ludcmp14^post35, w12^0'=w12^post35, w^0'=w^post35, (-nmax7^post35+nmax7^0 == 0 /\ j10^0-j10^post35 == 0 /\ k11^0-k11^post35 == 0 /\ i^0-i^post35 == 0 /\ -ret_ludcmp14^post35+ret_ludcmp14^0 == 0 /\ -w12^post35+w12^0 == 0 /\ i9^0-i9^post35 == 0 /\ -w^post35+w^0 == 0 /\ -nmax^post35+nmax^0 == 0 /\ -n^post35+n^0 == 0 /\ __const_50^0-__const_50^post35 == 0 /\ -j^post35+j^0 == 0 /\ __const_5^0-__const_5^post35 == 0 /\ n8^0-n8^post35 == 0 /\ -chkerr^post35+chkerr^0 == 0), cost: 1
	New rule:
	l4 -> l2 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality nmax7^post35 = nmax7^0
		
		propagated equality j10^post35 = j10^0
		
		propagated equality k11^post35 = k11^0
		
		propagated equality i^post35 = i^0
		
		propagated equality ret_ludcmp14^post35 = ret_ludcmp14^0
		
		propagated equality w12^post35 = w12^0
		
		propagated equality i9^post35 = i9^0
		
		propagated equality w^post35 = w^0
		
		propagated equality nmax^post35 = nmax^0
		
		propagated equality n^post35 = n^0
		
		propagated equality __const_50^post35 = __const_50^0
		
		propagated equality j^post35 = j^0
		
		propagated equality __const_5^post35 = __const_5^0
		
		propagated equality n8^post35 = n8^0
		
		propagated equality chkerr^post35 = chkerr^0
		
	Simplified Guard

	Original rule:
	l4 -> l2 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l4 -> l2 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l2 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l4 -> l2 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l25 -> l26 : __const_50^0'=__const_50^post36, __const_5^0'=__const_5^post36, chkerr^0'=chkerr^post36, i9^0'=i9^post36, i^0'=i^post36, j10^0'=j10^post36, j^0'=j^post36, k11^0'=k11^post36, n8^0'=n8^post36, n^0'=n^post36, nmax7^0'=nmax7^post36, nmax^0'=nmax^post36, ret_ludcmp14^0'=ret_ludcmp14^post36, w12^0'=w12^post36, w^0'=w^post36, (-nmax7^post36+nmax7^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post36 == 0 /\ 1+n^0-j^0 <= 0 /\ -1+i^post36-i^0 == 0 /\ -i9^post36+i9^0 == 0 /\ -w12^post36+w12^0 == 0 /\ n8^0-n8^post36 == 0 /\ n^0-n^post36 == 0 /\ -w^post36+w^0 == 0 /\ -__const_50^post36+__const_50^0 == 0 /\ j10^0-j10^post36 == 0 /\ -__const_5^post36+__const_5^0 == 0 /\ k11^0-k11^post36 == 0 /\ -j^post36+j^0 == 0 /\ -chkerr^post36+chkerr^0 == 0 /\ -nmax^post36+nmax^0 == 0), cost: 1
	New rule:
	l25 -> l26 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=1+i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+n^0-j^0 <= 0), cost: 1
	
		propagated equality nmax7^post36 = nmax7^0
		
		propagated equality ret_ludcmp14^post36 = ret_ludcmp14^0
		
		propagated equality i^post36 = 1+i^0
		
		propagated equality i9^post36 = i9^0
		
		propagated equality w12^post36 = w12^0
		
		propagated equality n8^post36 = n8^0
		
		propagated equality n^post36 = n^0
		
		propagated equality w^post36 = w^0
		
		propagated equality __const_50^post36 = __const_50^0
		
		propagated equality j10^post36 = j10^0
		
		propagated equality __const_5^post36 = __const_5^0
		
		propagated equality k11^post36 = k11^0
		
		propagated equality j^post36 = j^0
		
		propagated equality chkerr^post36 = chkerr^0
		
		propagated equality nmax^post36 = nmax^0
		
	Simplified Guard

	Original rule:
	l25 -> l26 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=1+i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1+n^0-j^0 <= 0), cost: 1
	New rule:
	l25 -> l26 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=1+i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+n^0-j^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l25 -> l26 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=1+i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1+n^0-j^0 <= 0, cost: 1
	New rule:
	l25 -> l26 : i^0'=1+i^0, 1+n^0-j^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l25 -> l24 : __const_50^0'=__const_50^post37, __const_5^0'=__const_5^post37, chkerr^0'=chkerr^post37, i9^0'=i9^post37, i^0'=i^post37, j10^0'=j10^post37, j^0'=j^post37, k11^0'=k11^post37, n8^0'=n8^post37, n^0'=n^post37, nmax7^0'=nmax7^post37, nmax^0'=nmax^post37, ret_ludcmp14^0'=ret_ludcmp14^post37, w12^0'=w12^post37, w^0'=w^post37, (ret_ludcmp14^0-ret_ludcmp14^post37 == 0 /\ -__const_5^post37+__const_5^0 == 0 /\ n8^0-n8^post37 == 0 /\ -n^0+j^0 <= 0 /\ -w^post37+w^0 == 0 /\ -i9^post37+i9^0 == 0 /\ -i^post37+i^0 == 0 /\ n^0-n^post37 == 0 /\ -w12^post37+w12^0 == 0 /\ j^0-j^post37 == 0 /\ k11^0-k11^post37 == 0 /\ j10^0-j10^post37 == 0 /\ __const_50^0-__const_50^post37 == 0 /\ -nmax7^post37+nmax7^0 == 0 /\ -nmax^post37+nmax^0 == 0 /\ -chkerr^post37+chkerr^0 == 0), cost: 1
	New rule:
	l25 -> l24 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ -n^0+j^0 <= 0), cost: 1
	
		propagated equality ret_ludcmp14^post37 = ret_ludcmp14^0
		
		propagated equality __const_5^post37 = __const_5^0
		
		propagated equality n8^post37 = n8^0
		
		propagated equality w^post37 = w^0
		
		propagated equality i9^post37 = i9^0
		
		propagated equality i^post37 = i^0
		
		propagated equality n^post37 = n^0
		
		propagated equality w12^post37 = w12^0
		
		propagated equality j^post37 = j^0
		
		propagated equality k11^post37 = k11^0
		
		propagated equality j10^post37 = j10^0
		
		propagated equality __const_50^post37 = __const_50^0
		
		propagated equality nmax7^post37 = nmax7^0
		
		propagated equality nmax^post37 = nmax^0
		
		propagated equality chkerr^post37 = chkerr^0
		
	Simplified Guard

	Original rule:
	l25 -> l24 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ -n^0+j^0 <= 0), cost: 1
	New rule:
	l25 -> l24 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, -n^0+j^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l25 -> l24 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, -n^0+j^0 <= 0, cost: 1
	New rule:
	l25 -> l24 : -n^0+j^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l27 -> l17 : __const_50^0'=__const_50^post38, __const_5^0'=__const_5^post38, chkerr^0'=chkerr^post38, i9^0'=i9^post38, i^0'=i^post38, j10^0'=j10^post38, j^0'=j^post38, k11^0'=k11^post38, n8^0'=n8^post38, n^0'=n^post38, nmax7^0'=nmax7^post38, nmax^0'=nmax^post38, ret_ludcmp14^0'=ret_ludcmp14^post38, w12^0'=w12^post38, w^0'=w^post38, (-nmax^0+nmax7^post38 == 0 /\ w12^0-w12^post38 == 0 /\ -k11^post38+k11^0 == 0 /\ j10^0-j10^post38 == 0 /\ -__const_5^post38+__const_5^0 == 0 /\ -j^post38+j^0 == 0 /\ -w^post38+w^0 == 0 /\ -i^post38+i^0 == 0 /\ 1-i^0+n^0 <= 0 /\ n8^post38-n^0 == 0 /\ -chkerr^post38+chkerr^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post38 == 0 /\ __const_50^0-__const_50^post38 == 0 /\ i9^post38 == 0 /\ -nmax^post38+nmax^0 == 0 /\ -n^post38+n^0 == 0), cost: 1
	New rule:
	l27 -> l17 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n^0, n^0'=n^0, nmax7^0'=nmax^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-i^0+n^0 <= 0), cost: 1
	
		propagated equality nmax7^post38 = nmax^0
		
		propagated equality w12^post38 = w12^0
		
		propagated equality k11^post38 = k11^0
		
		propagated equality j10^post38 = j10^0
		
		propagated equality __const_5^post38 = __const_5^0
		
		propagated equality j^post38 = j^0
		
		propagated equality w^post38 = w^0
		
		propagated equality i^post38 = i^0
		
		propagated equality n8^post38 = n^0
		
		propagated equality chkerr^post38 = chkerr^0
		
		propagated equality ret_ludcmp14^post38 = ret_ludcmp14^0
		
		propagated equality __const_50^post38 = __const_50^0
		
		propagated equality i9^post38 = 0
		
		propagated equality nmax^post38 = nmax^0
		
		propagated equality n^post38 = n^0
		
	Simplified Guard

	Original rule:
	l27 -> l17 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n^0, n^0'=n^0, nmax7^0'=nmax^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, (0 == 0 /\ 1-i^0+n^0 <= 0), cost: 1
	New rule:
	l27 -> l17 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n^0, n^0'=n^0, nmax7^0'=nmax^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-i^0+n^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l27 -> l17 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n^0, n^0'=n^0, nmax7^0'=nmax^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 1-i^0+n^0 <= 0, cost: 1
	New rule:
	l27 -> l17 : i9^0'=0, n8^0'=n^0, nmax7^0'=nmax^0, 1-i^0+n^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l27 -> l23 : __const_50^0'=__const_50^post39, __const_5^0'=__const_5^post39, chkerr^0'=chkerr^post39, i9^0'=i9^post39, i^0'=i^post39, j10^0'=j10^post39, j^0'=j^post39, k11^0'=k11^post39, n8^0'=n8^post39, n^0'=n^post39, nmax7^0'=nmax7^post39, nmax^0'=nmax^post39, ret_ludcmp14^0'=ret_ludcmp14^post39, w12^0'=w12^post39, w^0'=w^post39, (j10^0-j10^post39 == 0 /\ i^0-n^0 <= 0 /\ i9^0-i9^post39 == 0 /\ k11^0-k11^post39 == 0 /\ -ret_ludcmp14^post39+ret_ludcmp14^0 == 0 /\ i^0-i^post39 == 0 /\ j^post39 == 0 /\ __const_50^0-__const_50^post39 == 0 /\ -w12^post39+w12^0 == 0 /\ __const_5^0-__const_5^post39 == 0 /\ -chkerr^post39+chkerr^0 == 0 /\ w^post39 == 0 /\ n8^0-n8^post39 == 0 /\ -n^post39+n^0 == 0 /\ -nmax7^post39+nmax7^0 == 0 /\ -nmax^post39+nmax^0 == 0), cost: 1
	New rule:
	l27 -> l23 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=0, (0 == 0 /\ i^0-n^0 <= 0), cost: 1
	
		propagated equality j10^post39 = j10^0
		
		propagated equality i9^post39 = i9^0
		
		propagated equality k11^post39 = k11^0
		
		propagated equality ret_ludcmp14^post39 = ret_ludcmp14^0
		
		propagated equality i^post39 = i^0
		
		propagated equality j^post39 = 0
		
		propagated equality __const_50^post39 = __const_50^0
		
		propagated equality w12^post39 = w12^0
		
		propagated equality __const_5^post39 = __const_5^0
		
		propagated equality chkerr^post39 = chkerr^0
		
		propagated equality w^post39 = 0
		
		propagated equality n8^post39 = n8^0
		
		propagated equality n^post39 = n^0
		
		propagated equality nmax7^post39 = nmax7^0
		
		propagated equality nmax^post39 = nmax^0
		
	Simplified Guard

	Original rule:
	l27 -> l23 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=0, (0 == 0 /\ i^0-n^0 <= 0), cost: 1
	New rule:
	l27 -> l23 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=0, i^0-n^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l27 -> l23 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=0, i^0-n^0 <= 0, cost: 1
	New rule:
	l27 -> l23 : j^0'=0, w^0'=0, i^0-n^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l26 -> l27 : __const_50^0'=__const_50^post40, __const_5^0'=__const_5^post40, chkerr^0'=chkerr^post40, i9^0'=i9^post40, i^0'=i^post40, j10^0'=j10^post40, j^0'=j^post40, k11^0'=k11^post40, n8^0'=n8^post40, n^0'=n^post40, nmax7^0'=nmax7^post40, nmax^0'=nmax^post40, ret_ludcmp14^0'=ret_ludcmp14^post40, w12^0'=w12^post40, w^0'=w^post40, (-__const_5^post40+__const_5^0 == 0 /\ i9^0-i9^post40 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post40 == 0 /\ -i^post40+i^0 == 0 /\ n8^0-n8^post40 == 0 /\ n^0-n^post40 == 0 /\ -w12^post40+w12^0 == 0 /\ -chkerr^post40+chkerr^0 == 0 /\ -w^post40+w^0 == 0 /\ j10^0-j10^post40 == 0 /\ -__const_50^post40+__const_50^0 == 0 /\ -j^post40+j^0 == 0 /\ k11^0-k11^post40 == 0 /\ -nmax^post40+nmax^0 == 0 /\ -nmax7^post40+nmax7^0 == 0), cost: 1
	New rule:
	l26 -> l27 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality __const_5^post40 = __const_5^0
		
		propagated equality i9^post40 = i9^0
		
		propagated equality ret_ludcmp14^post40 = ret_ludcmp14^0
		
		propagated equality i^post40 = i^0
		
		propagated equality n8^post40 = n8^0
		
		propagated equality n^post40 = n^0
		
		propagated equality w12^post40 = w12^0
		
		propagated equality chkerr^post40 = chkerr^0
		
		propagated equality w^post40 = w^0
		
		propagated equality j10^post40 = j10^0
		
		propagated equality __const_50^post40 = __const_50^0
		
		propagated equality j^post40 = j^0
		
		propagated equality k11^post40 = k11^0
		
		propagated equality nmax^post40 = nmax^0
		
		propagated equality nmax7^post40 = nmax7^0
		
	Simplified Guard

	Original rule:
	l26 -> l27 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l26 -> l27 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l26 -> l27 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l26 -> l27 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l23 -> l25 : __const_50^0'=__const_50^post41, __const_5^0'=__const_5^post41, chkerr^0'=chkerr^post41, i9^0'=i9^post41, i^0'=i^post41, j10^0'=j10^post41, j^0'=j^post41, k11^0'=k11^post41, n8^0'=n8^post41, n^0'=n^post41, nmax7^0'=nmax7^post41, nmax^0'=nmax^post41, ret_ludcmp14^0'=ret_ludcmp14^post41, w12^0'=w12^post41, w^0'=w^post41, (ret_ludcmp14^0-ret_ludcmp14^post41 == 0 /\ -__const_5^post41+__const_5^0 == 0 /\ n8^0-n8^post41 == 0 /\ -i^post41+i^0 == 0 /\ n^0-n^post41 == 0 /\ -w^post41+w^0 == 0 /\ -chkerr^post41+chkerr^0 == 0 /\ -w12^post41+w12^0 == 0 /\ k11^0-k11^post41 == 0 /\ i9^0-i9^post41 == 0 /\ j^0-j^post41 == 0 /\ -j10^post41+j10^0 == 0 /\ -nmax^post41+nmax^0 == 0 /\ -nmax7^post41+nmax7^0 == 0 /\ __const_50^0-__const_50^post41 == 0), cost: 1
	New rule:
	l23 -> l25 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality ret_ludcmp14^post41 = ret_ludcmp14^0
		
		propagated equality __const_5^post41 = __const_5^0
		
		propagated equality n8^post41 = n8^0
		
		propagated equality i^post41 = i^0
		
		propagated equality n^post41 = n^0
		
		propagated equality w^post41 = w^0
		
		propagated equality chkerr^post41 = chkerr^0
		
		propagated equality w12^post41 = w12^0
		
		propagated equality k11^post41 = k11^0
		
		propagated equality i9^post41 = i9^0
		
		propagated equality j^post41 = j^0
		
		propagated equality j10^post41 = j10^0
		
		propagated equality nmax^post41 = nmax^0
		
		propagated equality nmax7^post41 = nmax7^0
		
		propagated equality __const_50^post41 = __const_50^0
		
	Simplified Guard

	Original rule:
	l23 -> l25 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l23 -> l25 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l23 -> l25 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l23 -> l25 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l17 -> l21 : __const_50^0'=__const_50^post42, __const_5^0'=__const_5^post42, chkerr^0'=chkerr^post42, i9^0'=i9^post42, i^0'=i^post42, j10^0'=j10^post42, j^0'=j^post42, k11^0'=k11^post42, n8^0'=n8^post42, n^0'=n^post42, nmax7^0'=nmax7^post42, nmax^0'=nmax^post42, ret_ludcmp14^0'=ret_ludcmp14^post42, w12^0'=w12^post42, w^0'=w^post42, (-k11^post42+k11^0 == 0 /\ w12^0-w12^post42 == 0 /\ -__const_5^post42+__const_5^0 == 0 /\ -w^post42+w^0 == 0 /\ i^0-i^post42 == 0 /\ -chkerr^post42+chkerr^0 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post42 == 0 /\ i9^0-i9^post42 == 0 /\ -nmax^post42+nmax^0 == 0 /\ -n^post42+n^0 == 0 /\ __const_50^0-__const_50^post42 == 0 /\ -j^post42+j^0 == 0 /\ -n8^post42+n8^0 == 0 /\ -j10^post42+j10^0 == 0 /\ nmax7^0-nmax7^post42 == 0), cost: 1
	New rule:
	l17 -> l21 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality k11^post42 = k11^0
		
		propagated equality w12^post42 = w12^0
		
		propagated equality __const_5^post42 = __const_5^0
		
		propagated equality w^post42 = w^0
		
		propagated equality i^post42 = i^0
		
		propagated equality chkerr^post42 = chkerr^0
		
		propagated equality ret_ludcmp14^post42 = ret_ludcmp14^0
		
		propagated equality i9^post42 = i9^0
		
		propagated equality nmax^post42 = nmax^0
		
		propagated equality n^post42 = n^0
		
		propagated equality __const_50^post42 = __const_50^0
		
		propagated equality j^post42 = j^0
		
		propagated equality n8^post42 = n8^0
		
		propagated equality j10^post42 = j10^0
		
		propagated equality nmax7^post42 = nmax7^0
		
	Simplified Guard

	Original rule:
	l17 -> l21 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l17 -> l21 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l17 -> l21 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=i^0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=n^0, nmax7^0'=nmax7^0, nmax^0'=nmax^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l17 -> l21 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l29 -> l26 : __const_50^0'=__const_50^post43, __const_5^0'=__const_5^post43, chkerr^0'=chkerr^post43, i9^0'=i9^post43, i^0'=i^post43, j10^0'=j10^post43, j^0'=j^post43, k11^0'=k11^post43, n8^0'=n8^post43, n^0'=n^post43, nmax7^0'=nmax7^post43, nmax^0'=nmax^post43, ret_ludcmp14^0'=ret_ludcmp14^post43, w12^0'=w12^post43, w^0'=w^post43, (i9^0-i9^post44 == 0 /\ -chkerr^post43+chkerr^post44 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post44 == 0 /\ -i^post44+i^0 == 0 /\ n8^post44-n8^post43 == 0 /\ -__const_5^post44+__const_5^0 == 0 /\ w12^post44-w12^post43 == 0 /\ -j10^post43+j10^post44 == 0 /\ n^0-n^post44 == 0 /\ -w^post44+w^0 == 0 /\ n^post43-__const_5^post44 == 0 /\ -chkerr^post44+chkerr^0 == 0 /\ -w12^post44+w12^0 == 0 /\ k11^0-k11^post44 == 0 /\ -i9^post43+i9^post44 == 0 /\ nmax7^post44-nmax7^post43 == 0 /\ __const_50^post44-__const_50^post43 == 0 /\ -j^post43+j^post44 == 0 /\ -__const_50^post44+nmax^post43 == 0 /\ -__const_50^post44+__const_50^0 == 0 /\ __const_5^post44-__const_5^post43 == 0 /\ j^0-j^post44 == 0 /\ i^post43 == 0 /\ j10^0-j10^post44 == 0 /\ w^post44-w^post43 == 0 /\ -nmax7^post44+nmax7^0 == 0 /\ -nmax^post44+nmax^0 == 0 /\ -ret_ludcmp14^post43+ret_ludcmp14^post44 == 0 /\ k11^post44-k11^post43 == 0 /\ n8^0-n8^post44 == 0), cost: 1
	New rule:
	l29 -> l26 : __const_50^0'=__const_50^post44, __const_5^0'=__const_5^post44, chkerr^0'=chkerr^post44, i9^0'=i9^post44, i^0'=0, j10^0'=j10^post44, j^0'=j^post44, k11^0'=k11^post44, n8^0'=n8^post44, n^0'=__const_5^post44, nmax7^0'=nmax7^post44, nmax^0'=__const_50^post44, ret_ludcmp14^0'=ret_ludcmp14^post44, w12^0'=w12^post44, w^0'=w^post44, (0 == 0 /\ i9^0-i9^post44 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post44 == 0 /\ -i^post44+i^0 == 0 /\ -__const_5^post44+__const_5^0 == 0 /\ n^0-n^post44 == 0 /\ -w^post44+w^0 == 0 /\ -chkerr^post44+chkerr^0 == 0 /\ -w12^post44+w12^0 == 0 /\ k11^0-k11^post44 == 0 /\ -__const_50^post44+__const_50^0 == 0 /\ j^0-j^post44 == 0 /\ j10^0-j10^post44 == 0 /\ -nmax7^post44+nmax7^0 == 0 /\ -nmax^post44+nmax^0 == 0 /\ n8^0-n8^post44 == 0), cost: 1
	
		propagated equality chkerr^post43 = chkerr^post44
		
		propagated equality n8^post43 = n8^post44
		
		propagated equality w12^post43 = w12^post44
		
		propagated equality j10^post43 = j10^post44
		
		propagated equality n^post43 = __const_5^post44
		
		propagated equality i9^post43 = i9^post44
		
		propagated equality nmax7^post43 = nmax7^post44
		
		propagated equality __const_50^post43 = __const_50^post44
		
		propagated equality j^post43 = j^post44
		
		propagated equality nmax^post43 = __const_50^post44
		
		propagated equality __const_5^post43 = __const_5^post44
		
		propagated equality i^post43 = 0
		
		propagated equality w^post43 = w^post44
		
		propagated equality ret_ludcmp14^post43 = ret_ludcmp14^post44
		
		propagated equality k11^post43 = k11^post44
		
	Propagated Equalities

	Original rule:
	l29 -> l26 : __const_50^0'=__const_50^post44, __const_5^0'=__const_5^post44, chkerr^0'=chkerr^post44, i9^0'=i9^post44, i^0'=0, j10^0'=j10^post44, j^0'=j^post44, k11^0'=k11^post44, n8^0'=n8^post44, n^0'=__const_5^post44, nmax7^0'=nmax7^post44, nmax^0'=__const_50^post44, ret_ludcmp14^0'=ret_ludcmp14^post44, w12^0'=w12^post44, w^0'=w^post44, (0 == 0 /\ i9^0-i9^post44 == 0 /\ ret_ludcmp14^0-ret_ludcmp14^post44 == 0 /\ -i^post44+i^0 == 0 /\ -__const_5^post44+__const_5^0 == 0 /\ n^0-n^post44 == 0 /\ -w^post44+w^0 == 0 /\ -chkerr^post44+chkerr^0 == 0 /\ -w12^post44+w12^0 == 0 /\ k11^0-k11^post44 == 0 /\ -__const_50^post44+__const_50^0 == 0 /\ j^0-j^post44 == 0 /\ j10^0-j10^post44 == 0 /\ -nmax7^post44+nmax7^0 == 0 /\ -nmax^post44+nmax^0 == 0 /\ n8^0-n8^post44 == 0), cost: 1
	New rule:
	l29 -> l26 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=__const_5^0, nmax7^0'=nmax7^0, nmax^0'=__const_50^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	
		propagated equality i9^post44 = i9^0
		
		propagated equality ret_ludcmp14^post44 = ret_ludcmp14^0
		
		propagated equality i^post44 = i^0
		
		propagated equality __const_5^post44 = __const_5^0
		
		propagated equality n^post44 = n^0
		
		propagated equality w^post44 = w^0
		
		propagated equality chkerr^post44 = chkerr^0
		
		propagated equality w12^post44 = w12^0
		
		propagated equality k11^post44 = k11^0
		
		propagated equality __const_50^post44 = __const_50^0
		
		propagated equality j^post44 = j^0
		
		propagated equality j10^post44 = j10^0
		
		propagated equality nmax7^post44 = nmax7^0
		
		propagated equality nmax^post44 = nmax^0
		
		propagated equality n8^post44 = n8^0
		
	Simplified Guard

	Original rule:
	l29 -> l26 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=__const_5^0, nmax7^0'=nmax7^0, nmax^0'=__const_50^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, 0 == 0, cost: 1
	New rule:
	l29 -> l26 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=__const_5^0, nmax7^0'=nmax7^0, nmax^0'=__const_50^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l29 -> l26 : __const_50^0'=__const_50^0, __const_5^0'=__const_5^0, chkerr^0'=chkerr^0, i9^0'=i9^0, i^0'=0, j10^0'=j10^0, j^0'=j^0, k11^0'=k11^0, n8^0'=n8^0, n^0'=__const_5^0, nmax7^0'=nmax7^0, nmax^0'=__const_50^0, ret_ludcmp14^0'=ret_ludcmp14^0, w12^0'=w12^0, w^0'=w^0, T, cost: 1
	New rule:
	l29 -> l26 : i^0'=0, n^0'=__const_5^0, nmax^0'=__const_50^0, T, cost: 1

Step with 87

	Trace

	87[T]
	
	Blocked

	[{}, {}]

Step with 84

	Trace

	87[T], 84[T]
	
	Blocked

	[{}, {}, {}]

Step with 82

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 86

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T]
	
	Blocked

	[{}, {}, {}, {}, {}]

Step with 72

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Step with 61

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}]

Step with 54

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}]

Step with 74

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)], 74[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 48

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)], 74[T], 48[(1+i9^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)], 74[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {48[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {74[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {54[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {61[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T]
	
	Blocked

	[{}, {}, {}, {}, {72[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {86[T]}]

Backtrack

	Trace

	87[T], 84[T]
	
	Blocked

	[{}, {}, {82[T]}]

Step with 83

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}]

Step with 85

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {}]

Step with 81

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {}]

Step with 78

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}]

Step with 75

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 85

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 81

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 77

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)], 77[(1+i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {}, {}, {76[T], 78[T]}, {}]

Accelerate

Start location: l29
Program variables: __const_50^0 __const_5^0 chkerr^0 i9^0 i^0 j10^0 j^0 k11^0 n8^0 n^0 nmax7^0 nmax^0 ret_ludcmp14^0 w12^0 w^0
  45: l0 -> l1 : T, cost: 1
  70: l1 -> l12 : j10^0'=1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
  71: l1 -> l20 : w12^0'=w12^post27, -n8^0+j10^0 <= 0, cost: 1
  46: l2 -> l3 : i9^0'=-1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
  47: l2 -> l4 : j10^0'=1+j10^0, w12^0'=w12^post3, -n8^0+j10^0 <= 0, cost: 1
  74: l3 -> l5 : T, cost: 1
  79: l4 -> l2 : T, cost: 1
  48: l5 -> l6 : chkerr^0'=0, ret_ludcmp14^0'=0, 1+i9^0 <= 0, cost: 1
  49: l5 -> l4 : j10^0'=1+i9^0, w12^0'=w12^post5, -i9^0 <= 0, cost: 1
  50: l7 -> l8 : T, cost: 1
  63: l8 -> l18 : -k11^0+i9^0 <= 0, cost: 1
  64: l8 -> l7 : k11^0'=1+k11^0, w12^0'=w12^post20, 1+k11^0-i9^0 <= 0, cost: 1
  51: l9 -> l10 : i9^0'=1+i9^0, i9^0-j10^0 <= 0, cost: 1
  52: l9 -> l11 : j10^0'=1+j10^0, w12^0'=w12^post8, 1-i9^0+j10^0 <= 0, cost: 1
  61: l10 -> l14 : T, cost: 1
  66: l11 -> l9 : T, cost: 1
  53: l12 -> l13 : T, cost: 1
  59: l13 -> l17 : i9^0'=1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
  60: l13 -> l15 : k11^0'=0, w12^0'=w12^post16, -n8^0+j10^0 <= 0, cost: 1
  54: l14 -> l3 : i9^0'=-1+n8^0, 1-i9^0+n8^0 <= 0, cost: 1
  55: l14 -> l11 : j10^0'=0, w12^0'=w12^post11, i9^0-n8^0 <= 0, cost: 1
  56: l15 -> l16 : T, cost: 1
  57: l16 -> l12 : j10^0'=1+j10^0, 1-k11^0+i9^0 <= 0, cost: 1
  58: l16 -> l15 : k11^0'=1+k11^0, w12^0'=w12^post14, k11^0-i9^0 <= 0, cost: 1
  86: l17 -> l21 : T, cost: 1
  62: l18 -> l0 : j10^0'=1+j10^0, T, cost: 1
  65: l19 -> l7 : k11^0'=0, T, cost: 1
  67: l20 -> l18 : (i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
  68: l20 -> l19 : 1-i9^0 <= 0, cost: 1
  69: l20 -> l19 : 1+i9^0 <= 0, cost: 1
  72: l21 -> l10 : i9^0'=1, -i9^0+n8^0 <= 0, cost: 1
  73: l21 -> l0 : j10^0'=1+i9^0, 1+i9^0-n8^0 <= 0, cost: 1
  75: l22 -> l23 : j^0'=1+j^0, w^0'=w^post31, T, cost: 1
  88: l22 -> l22 : j^0'=n+j^0, w^0'=w^post311, (-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0), cost: 1
  85: l23 -> l25 : T, cost: 1
  76: l24 -> l22 : 1-i^0+j^0 <= 0, cost: 1
  77: l24 -> l22 : 1+i^0-j^0 <= 0, cost: 1
  78: l24 -> l22 : (-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
  80: l25 -> l26 : i^0'=1+i^0, 1+n^0-j^0 <= 0, cost: 1
  81: l25 -> l24 : -n^0+j^0 <= 0, cost: 1
  84: l26 -> l27 : T, cost: 1
  82: l27 -> l17 : i9^0'=0, n8^0'=n^0, nmax7^0'=nmax^0, 1-i^0+n^0 <= 0, cost: 1
  83: l27 -> l23 : j^0'=0, w^0'=0, i^0-n^0 <= 0, cost: 1
  87: l29 -> l26 : i^0'=0, n^0'=__const_5^0, nmax^0'=__const_50^0, T, cost: 1

	Loop Acceleration

	Original rule:
	l22 -> l22 : j^0'=1+j^0, w^0'=w^post311, (1-n^0+j^0 <= 0 /\ i^0-j^0 <= 0), cost: 1
	New rule:
	l22 -> l22 : j^0'=n+j^0, w^0'=w^post311, (-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0), cost: 1

		-i^0+j^0 >= 0 [0]: monotonic increase yields -i^0+j^0 >= 0
		
		-1+n^0-j^0 >= 0 [0]: montonic decrease yields -n+n^0-j^0 >= 0
		
		-1+n^0-j^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+n^0-j^0 >= 0)
		
		Replacement map: {-i^0+j^0 >= 0 -> -i^0+j^0 >= 0, -1+n^0-j^0 >= 0 -> -n+n^0-j^0 >= 0}

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}]

Step with 75

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 85

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 81

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 77

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)], 77[(1+i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {}, {}, {}, {}]

Covered

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {}, {}, {77[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {}, {81[T]}]

Step with 80

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {}, {81[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 84

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {}, {81[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 83

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 83[(i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {}, {81[T]}, {}, {}, {}]

Accelerate and Drop

Start location: l29
Program variables: __const_50^0 __const_5^0 chkerr^0 i9^0 i^0 j10^0 j^0 k11^0 n8^0 n^0 nmax7^0 nmax^0 ret_ludcmp14^0 w12^0 w^0
  45: l0 -> l1 : T, cost: 1
  70: l1 -> l12 : j10^0'=1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
  71: l1 -> l20 : w12^0'=w12^post27, -n8^0+j10^0 <= 0, cost: 1
  46: l2 -> l3 : i9^0'=-1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
  47: l2 -> l4 : j10^0'=1+j10^0, w12^0'=w12^post3, -n8^0+j10^0 <= 0, cost: 1
  74: l3 -> l5 : T, cost: 1
  79: l4 -> l2 : T, cost: 1
  48: l5 -> l6 : chkerr^0'=0, ret_ludcmp14^0'=0, 1+i9^0 <= 0, cost: 1
  49: l5 -> l4 : j10^0'=1+i9^0, w12^0'=w12^post5, -i9^0 <= 0, cost: 1
  50: l7 -> l8 : T, cost: 1
  63: l8 -> l18 : -k11^0+i9^0 <= 0, cost: 1
  64: l8 -> l7 : k11^0'=1+k11^0, w12^0'=w12^post20, 1+k11^0-i9^0 <= 0, cost: 1
  51: l9 -> l10 : i9^0'=1+i9^0, i9^0-j10^0 <= 0, cost: 1
  52: l9 -> l11 : j10^0'=1+j10^0, w12^0'=w12^post8, 1-i9^0+j10^0 <= 0, cost: 1
  61: l10 -> l14 : T, cost: 1
  66: l11 -> l9 : T, cost: 1
  53: l12 -> l13 : T, cost: 1
  59: l13 -> l17 : i9^0'=1+i9^0, 1+n8^0-j10^0 <= 0, cost: 1
  60: l13 -> l15 : k11^0'=0, w12^0'=w12^post16, -n8^0+j10^0 <= 0, cost: 1
  54: l14 -> l3 : i9^0'=-1+n8^0, 1-i9^0+n8^0 <= 0, cost: 1
  55: l14 -> l11 : j10^0'=0, w12^0'=w12^post11, i9^0-n8^0 <= 0, cost: 1
  56: l15 -> l16 : T, cost: 1
  57: l16 -> l12 : j10^0'=1+j10^0, 1-k11^0+i9^0 <= 0, cost: 1
  58: l16 -> l15 : k11^0'=1+k11^0, w12^0'=w12^post14, k11^0-i9^0 <= 0, cost: 1
  86: l17 -> l21 : T, cost: 1
  62: l18 -> l0 : j10^0'=1+j10^0, T, cost: 1
  65: l19 -> l7 : k11^0'=0, T, cost: 1
  67: l20 -> l18 : (i9^0 <= 0 /\ i9^0 == 0 /\ -i9^0 <= 0), cost: 1
  68: l20 -> l19 : 1-i9^0 <= 0, cost: 1
  69: l20 -> l19 : 1+i9^0 <= 0, cost: 1
  72: l21 -> l10 : i9^0'=1, -i9^0+n8^0 <= 0, cost: 1
  73: l21 -> l0 : j10^0'=1+i9^0, 1+i9^0-n8^0 <= 0, cost: 1
  75: l22 -> l23 : j^0'=1+j^0, w^0'=w^post31, T, cost: 1
  88: l22 -> l22 : j^0'=n+j^0, w^0'=w^post311, (-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0), cost: 1
  85: l23 -> l25 : T, cost: 1
  89: l23 -> l23 : i^0'=n2+i^0, j^0'=0, w^0'=0, (-1+n2 >= 0 /\ -n2-i^0+n^0 >= 0 /\ -1-n^0+j^0 >= 0 /\ -1-n^0 >= 0), cost: 1
  76: l24 -> l22 : 1-i^0+j^0 <= 0, cost: 1
  77: l24 -> l22 : 1+i^0-j^0 <= 0, cost: 1
  78: l24 -> l22 : (-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0), cost: 1
  80: l25 -> l26 : i^0'=1+i^0, 1+n^0-j^0 <= 0, cost: 1
  81: l25 -> l24 : -n^0+j^0 <= 0, cost: 1
  84: l26 -> l27 : T, cost: 1
  82: l27 -> l17 : i9^0'=0, n8^0'=n^0, nmax7^0'=nmax^0, 1-i^0+n^0 <= 0, cost: 1
  83: l27 -> l23 : j^0'=0, w^0'=0, i^0-n^0 <= 0, cost: 1
  87: l29 -> l26 : i^0'=0, n^0'=__const_5^0, nmax^0'=__const_50^0, T, cost: 1

	Loop Acceleration

	Original rule:
	l23 -> l23 : i^0'=1+i^0, j^0'=0, w^0'=0, (1+n^0-j^0 <= 0 /\ 1+i^0-n^0 <= 0), cost: 1
	New rule:
	l23 -> l23 : i^0'=n2+i^0, j^0'=0, w^0'=0, (-1+n2 >= 0 /\ -n2-i^0+n^0 >= 0 /\ -1-n^0+j^0 >= 0 /\ -1-n^0 >= 0), cost: 1

		-1-n^0+j^0 >= 0 [0]: eventual decrease yields (-1-n^0+j^0 >= 0 /\ -1-n^0 >= 0)
		
		-1-n^0+j^0 >= 0 [1]: eventual increase yields (-1-n^0+j^0 >= 0 /\ j^0 <= 0)
		
		-1-i^0+n^0 >= 0 [0]: montonic decrease yields -n2-i^0+n^0 >= 0
		
		-1-i^0+n^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1-i^0+n^0 >= 0)
		
		Replacement map: {-1-n^0+j^0 >= 0 -> (-1-n^0+j^0 >= 0 /\ -1-n^0 >= 0), -1-i^0+n^0 >= 0 -> -n2-i^0+n^0 >= 0}

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 77[T]}, {}, {88[T]}, {85[T]}]

Restart

Step with 87

	Trace

	87[T]
	
	Blocked

	[{}, {}]

Step with 84

	Trace

	87[T], 84[T]
	
	Blocked

	[{}, {}, {}]

Step with 82

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 86

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T]
	
	Blocked

	[{}, {}, {}, {}, {}]

Step with 72

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Step with 61

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}]

Step with 54

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}]

Step with 74

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)], 74[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}]

Step with 48

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)], 74[T], 48[(1+i9^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {}, {}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)], 74[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}, {48[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {74[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {54[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {61[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T]
	
	Blocked

	[{}, {}, {}, {}, {72[T]}]

Backtrack

	Trace

	87[T], 84[T], 82[(1-i^0+n^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {86[T]}]

Backtrack

	Trace

	87[T], 84[T]
	
	Blocked

	[{}, {}, {82[T]}]

Step with 83

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}]

Step with 85

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {}]

Step with 81

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {}]

Step with 78

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}]

Step with 75

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}]

Step with 85

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {}]

Step with 81

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {}, {}]

Step with 77

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)], 77[(1+i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {}, {78[T]}, {}]

Covered

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {}, {77[T], 78[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}]

Step with 80

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 84

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 82

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}]

Step with 86

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}]

Step with 72

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}, {}]

Step with 61

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}, {}, {}]

Step with 54

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}, {}, {}, {}]

Step with 74

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)], 74[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}, {}, {}, {}, {}]

Step with 48

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)], 74[T], 48[(1+i9^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}, {}, {}, {}, {}, {}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)], 74[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}, {}, {}, {}, {48[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T], 54[(1-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}, {}, {}, {74[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)], 61[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}, {}, {54[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T], 72[(-i9^0+n8^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {}, {61[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)], 86[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {}, {72[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 82[(1-i^0+n^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {83[T]}, {86[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {}, {82[T], 83[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {81[T]}, {84[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {}, {80[T], 81[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 75[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {}, {85[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}]

Step with 88

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}]

Step with 75

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}]

Step with 85

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {}]

Step with 80

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {}, {}]

Step with 84

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {}, {}, {}]

Step with 83

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T], 83[(i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {}, {}, {82[T]}, {}]

Covered

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)], 84[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {}, {}, {82[T], 83[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 80[(1+n^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {}, {84[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {80[T]}]

Step with 81

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {80[T]}, {}]

Step with 77

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)], 77[(1+i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {80[T]}, {}, {}]

Covered

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {80[T]}, {77[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {}, {80[T], 81[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)], 75[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {88[T]}, {85[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)], 88[(-n+n^0-j^0 >= 0 /\ -i^0+j^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T]}, {75[T], 88[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)], 78[(-i^0+j^0 <= 0 /\ -i^0+j^0 == 0 /\ i^0-j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T]}, {75[T], 88[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T], 81[(-n^0+j^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T]}, {76[T], 78[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)], 85[T]
	
	Blocked

	[{}, {}, {82[T]}, {}, {80[T], 81[T]}]

Backtrack

	Trace

	87[T], 84[T], 83[(i^0-n^0 <= 0)]
	
	Blocked

	[{}, {}, {82[T]}, {85[T]}]

Backtrack

	Trace

	87[T], 84[T]
	
	Blocked

	[{}, {}, {82[T], 83[T]}]

Backtrack

	Trace

	87[T]
	
	Blocked

	[{}, {84[T]}]

Backtrack

	Trace

	Blocked

	[{87[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
