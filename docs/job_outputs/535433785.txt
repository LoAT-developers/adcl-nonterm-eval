WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_New -> f83_0_main_GE : arg1'=arg1P0, -arg1P0 == 0, cost: 1
   1: f83_0_main_GE -> f83_0_main_GE : arg1'=arg1P1, (-11+arg1 < 0 /\ -20+arg1 < 0 /\ 2-arg1P1+arg1 == 0), cost: 1
   2: f83_0_main_GE -> f83_0_main_GE : arg1'=arg1P2, (2-arg1P2+arg1 == 0 /\ -20+arg1 < 0 /\ -10+arg1 > 0), cost: 1
   3: __init -> f1_0_main_New : arg1'=arg1P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_New -> f83_0_main_GE : arg1'=arg1P0, -arg1P0 == 0, cost: 1
New rule:
f1_0_main_New -> f83_0_main_GE : arg1'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
f83_0_main_GE -> f83_0_main_GE : arg1'=arg1P1, (-11+arg1 < 0 /\ -20+arg1 < 0 /\ 2-arg1P1+arg1 == 0), cost: 1
New rule:
f83_0_main_GE -> f83_0_main_GE : arg1'=2+arg1, 11-arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f83_0_main_GE -> f83_0_main_GE : arg1'=arg1P2, (2-arg1P2+arg1 == 0 /\ -20+arg1 < 0 /\ -10+arg1 > 0), cost: 1
New rule:
f83_0_main_GE -> f83_0_main_GE : arg1'=2+arg1, (-10+arg1 > 0 /\ 20-arg1 > 0), cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_New -> f83_0_main_GE : arg1'=0, TRUE, cost: 1
   5: f83_0_main_GE -> f83_0_main_GE : arg1'=2+arg1, 11-arg1 > 0, cost: 1
   6: f83_0_main_GE -> f83_0_main_GE : arg1'=2+arg1, (-10+arg1 > 0 /\ 20-arg1 > 0), cost: 1
   3: __init -> f1_0_main_New : arg1'=arg1P3, TRUE, cost: 1


Applied acceleration
Original rule:
f83_0_main_GE -> f83_0_main_GE : arg1'=2+arg1, 11-arg1 > 0, cost: 1
New rule:
f83_0_main_GE -> f83_0_main_GE : arg1'=2*n+arg1, (n >= 0 /\ 13-2*n-arg1 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_bAhKHM.txt

Applied acceleration
Original rule:
f83_0_main_GE -> f83_0_main_GE : arg1'=2+arg1, (-10+arg1 > 0 /\ 20-arg1 > 0), cost: 1
New rule:
f83_0_main_GE -> f83_0_main_GE : arg1'=2*n0+arg1, (22-2*n0-arg1 > 0 /\ -10+arg1 > 0 /\ n0 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_pgDMEH.txt

Applied deletion
Removed the following rules: 5 6

Accelerated simple loops
Start location: __init
   4: f1_0_main_New -> f83_0_main_GE : arg1'=0, TRUE, cost: 1
   7: f83_0_main_GE -> f83_0_main_GE : arg1'=2*n+arg1, (n >= 0 /\ 13-2*n-arg1 > 0), cost: n
   8: f83_0_main_GE -> f83_0_main_GE : arg1'=2*n0+arg1, (22-2*n0-arg1 > 0 /\ -10+arg1 > 0 /\ n0 >= 0), cost: n0
   3: __init -> f1_0_main_New : arg1'=arg1P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_New -> f83_0_main_GE : arg1'=0, TRUE, cost: 1
Second rule:
f83_0_main_GE -> f83_0_main_GE : arg1'=2*n+arg1, (n >= 0 /\ 13-2*n-arg1 > 0), cost: n
New rule:
f1_0_main_New -> f83_0_main_GE : arg1'=2*n, (n >= 0 /\ 13-2*n > 0), cost: 1+n

Applied deletion
Removed the following rules: 7 8

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_New -> f83_0_main_GE : arg1'=0, TRUE, cost: 1
   9: f1_0_main_New -> f83_0_main_GE : arg1'=2*n, (n >= 0 /\ 13-2*n > 0), cost: 1+n
   3: __init -> f1_0_main_New : arg1'=arg1P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

