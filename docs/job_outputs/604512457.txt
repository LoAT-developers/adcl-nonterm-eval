unknown

Initial ITS

Start location: [1]
Program variables: x
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : -100+x <= 0, cost: 1
   9: [2] -> [9] : -100+x > 0, cost: 1
   2: [3] -> [5] : (nondet1 < 0 \/ nondet1 > 0), cost: 1
   5: [3] -> [7] : (nondet1 <= 0 /\ nondet1 >= 0), cost: 1
   8: [4] -> [2] : T, cost: 1
   3: [5] -> [6] : x'=2-2*x, T, cost: 1
   4: [6] -> [4] : T, cost: 1
   6: [7] -> [8] : x'=-2-3*x, T, cost: 1
   7: [8] -> [4] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : -100+x <= 0, cost: 1
   9: [2] -> [9] : -100+x > 0, cost: 1
  12: [3] -> [4] : x'=2-2*x, (nondet1 < 0 \/ nondet1 > 0), cost: 1
  13: [3] -> [4] : x'=-2-3*x, (nondet1 <= 0 /\ nondet1 >= 0), cost: 1
   8: [4] -> [2] : T, cost: 1

	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : (nondet1 < 0 \/ nondet1 > 0), cost: 1
	Second rule:
	[5] -> [6] : x'=2-2*x, T, cost: 1
	New rule:
	[3] -> [6] : x'=2-2*x, (nondet1 < 0 \/ nondet1 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[3] -> [7] : (nondet1 <= 0 /\ nondet1 >= 0), cost: 1
	Second rule:
	[7] -> [8] : x'=-2-3*x, T, cost: 1
	New rule:
	[3] -> [8] : x'=-2-3*x, (nondet1 <= 0 /\ nondet1 >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 6
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[3] -> [6] : x'=2-2*x, (nondet1 < 0 \/ nondet1 > 0), cost: 1
	Second rule:
	[6] -> [4] : T, cost: 1
	New rule:
	[3] -> [4] : x'=2-2*x, (nondet1 < 0 \/ nondet1 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 10
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[3] -> [8] : x'=-2-3*x, (nondet1 <= 0 /\ nondet1 >= 0), cost: 1
	Second rule:
	[8] -> [4] : T, cost: 1
	New rule:
	[3] -> [4] : x'=-2-3*x, (nondet1 <= 0 /\ nondet1 >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 11

Simplified Transitions

Start location: [1]
Program variables: x
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : -100+x <= 0, cost: 1
   9: [2] -> [9] : -100+x > 0, cost: 1
  12: [3] -> [4] : x'=2-2*x, (nondet1 < 0 \/ nondet1 > 0), cost: 1
  14: [3] -> [4] : x'=-2-3*x, T, cost: 1
   8: [4] -> [2] : T, cost: 1

	made implied equalities explicit

	Original rule:
	[3] -> [4] : x'=-2-3*x, (nondet1 <= 0 /\ nondet1 >= 0), cost: 1
	New rule:
	[3] -> [4] : x'=-2-3*x, (nondet1 <= 0 /\ nondet1 >= 0 /\ nondet1 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	[3] -> [4] : x'=-2-3*x, (nondet1 <= 0 /\ nondet1 >= 0 /\ nondet1 == 0), cost: 1
	New rule:
	[3] -> [4] : x'=-2-3*x, (0 <= 0 /\ 0 >= 0 /\ 0 == 0), cost: 1
	
		propagated equality nondet1 = 0
		
	Simplified Guard

	Original rule:
	[3] -> [4] : x'=-2-3*x, (0 <= 0 /\ 0 >= 0 /\ 0 == 0), cost: 1
	New rule:
	[3] -> [4] : x'=-2-3*x, T, cost: 1

Step with 0

	Trace

	0[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	0[T], 9[(-100+x > 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	0[T]
	
	Blocked

	[{}, {9[T]}]

Step with 1

	Trace

	0[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}]

Step with 12

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}]

Step with 8

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 1

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 12

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 8

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {}, {}, {}]

Covered

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {}, {8[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[nondet1 > 0]}]

Step with 14

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 8

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 1

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 14

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)], 14[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}, {}, {}, {}]

Covered

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}, {}, {14[T]}]

Step with 12

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}, {}, {14[T]}, {}]

Covered

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}, {}, {12[nondet1 > 0], 14[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}, {1[T]}]

Step with 9

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T], 8[T], 9[(-100+x > 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}, {1[T]}, {}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {}, {1[T], 9[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)], 14[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T]}, {8[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[T], 14[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {1[T]}]

Step with 9

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T], 9[(-100+x > 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {1[T]}, {}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {1[T], 9[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)]
	
	Blocked

	[{}, {9[T]}, {}, {8[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0]}]

Step with 12

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0]}, {}]

Step with 8

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 9

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)], 8[T], 9[(-100+x > 0)]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0]}, {}, {}, {}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0]}, {}, {9[T]}]

Step with 1

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0]}, {}, {9[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Restart

Step with 0

	Trace

	0[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	0[T], 9[(-100+x > 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	0[T]
	
	Blocked

	[{}, {9[T]}]

Step with 1

	Trace

	0[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}]

Step with 14

	Trace

	0[T], 1[(-100+x <= 0)], 14[T]
	
	Blocked

	[{}, {9[T]}, {}, {}]

Step with 8

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}]

Step with 1

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {}]

Step with 14

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)], 14[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {}, {}]

Step with 8

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)], 14[T], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {}, {}, {}]

Covered

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)], 14[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {}, {8[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {14[T]}]

Step with 12

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {14[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 8

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {14[T]}, {}, {}]

Covered

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {14[T]}, {8[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[nondet1 < 0], 14[T]}]

Step with 12

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[nondet1 < 0], 14[T]}, {}]

Covered

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}, {12[(nondet1 < 0 /\ nondet1 > 0)], 14[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {1[T]}]

Step with 9

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T], 9[(-100+x > 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}, {1[T]}, {}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 14[T], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {1[T], 9[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)], 14[T]
	
	Blocked

	[{}, {9[T]}, {}, {8[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {14[T]}]

Step with 12

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)]
	
	Blocked

	[{}, {9[T]}, {14[T]}, {}]

Step with 8

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {14[T]}, {}, {}]

Covered

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 > 0)]
	
	Blocked

	[{}, {9[T]}, {14[T]}, {8[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0], 14[T]}]

Step with 12

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0], 14[T]}, {}]

Step with 8

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0], 14[T]}, {}, {}]

Covered

	Trace

	0[T], 1[(-100+x <= 0)], 12[(nondet1 < 0)]
	
	Blocked

	[{}, {9[T]}, {12[nondet1 > 0], 14[T]}, {8[T]}]

Backtrack

	Trace

	0[T], 1[(-100+x <= 0)]
	
	Blocked

	[{}, {9[T]}, {12[(nondet1 < 0 /\ nondet1 > 0)], 14[T]}]

Backtrack

	Trace

	0[T]
	
	Blocked

	[{}, {1[T], 9[T]}]

Backtrack

	Trace

	Blocked

	[{0[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
