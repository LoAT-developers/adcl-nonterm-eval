NO

Initial ITS
Start location: l3
   0: l0 -> l1 : x^0'=x^post0, __const_110^0'=__const_110^post0, __const_4000^0'=__const_4000^post0, __const_1000^0'=__const_1000^post0, y^0'=y^post0, __const_3000^0'=__const_3000^post0, (1-__const_4000^0+y^0 <= 0 /\ __const_110^0-__const_110^post0 == 0 /\ 1+__const_110^0-x^post0 <= 0 /\ -__const_4000^post0+__const_4000^0 == 0 /\ -__const_1000^post0+__const_1000^0 == 0 /\ -__const_3000^post0+__const_3000^0 == 0 /\ y^0-y^post0 == 0 /\ -x^0+x^post0-__const_1000^0 == 0), cost: 1
   1: l1 -> l0 : x^0'=x^post1, __const_110^0'=__const_110^post1, __const_4000^0'=__const_4000^post1, __const_1000^0'=__const_1000^post1, y^0'=y^post1, __const_3000^0'=__const_3000^post1, (-y^post1+y^0 == 0 /\ -__const_1000^post1+__const_1000^0 == 0 /\ -__const_3000^post1+__const_3000^0 == 0 /\ x^0-x^post1 == 0 /\ __const_4000^0-__const_4000^post1 == 0 /\ __const_110^0-__const_110^post1 == 0), cost: 1
   2: l2 -> l0 : x^0'=x^post2, __const_110^0'=__const_110^post2, __const_4000^0'=__const_4000^post2, __const_1000^0'=__const_1000^post2, y^0'=y^post2, __const_3000^0'=__const_3000^post2, (-__const_3000^post2+__const_3000^0 == 0 /\ y^post2-__const_3000^0 == 0 /\ __const_1000^0-__const_1000^post2 == 0 /\ __const_110^0-__const_110^post2 == 0 /\ x^0-x^post2 == 0 /\ __const_4000^0-__const_4000^post2 == 0), cost: 1
   3: l3 -> l2 : x^0'=x^post3, __const_110^0'=__const_110^post3, __const_4000^0'=__const_4000^post3, __const_1000^0'=__const_1000^post3, y^0'=y^post3, __const_3000^0'=__const_3000^post3, (__const_1000^0-__const_1000^post3 == 0 /\ -__const_3000^post3+__const_3000^0 == 0 /\ __const_4000^0-__const_4000^post3 == 0 /\ __const_110^0-__const_110^post3 == 0 /\ x^0-x^post3 == 0 /\ -y^post3+y^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post0, __const_110^0'=__const_110^post0, __const_4000^0'=__const_4000^post0, __const_1000^0'=__const_1000^post0, y^0'=y^post0, __const_3000^0'=__const_3000^post0, (1-__const_4000^0+y^0 <= 0 /\ __const_110^0-__const_110^post0 == 0 /\ 1+__const_110^0-x^post0 <= 0 /\ -__const_4000^post0+__const_4000^0 == 0 /\ -__const_1000^post0+__const_1000^0 == 0 /\ -__const_3000^post0+__const_3000^0 == 0 /\ y^0-y^post0 == 0 /\ -x^0+x^post0-__const_1000^0 == 0), cost: 1
New rule:
l0 -> l1 : x^0'=x^0+__const_1000^0, (1-__const_4000^0+y^0 <= 0 /\ 1-x^0+__const_110^0-__const_1000^0 <= 0), cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : x^0'=x^post1, __const_110^0'=__const_110^post1, __const_4000^0'=__const_4000^post1, __const_1000^0'=__const_1000^post1, y^0'=y^post1, __const_3000^0'=__const_3000^post1, (-y^post1+y^0 == 0 /\ -__const_1000^post1+__const_1000^0 == 0 /\ -__const_3000^post1+__const_3000^0 == 0 /\ x^0-x^post1 == 0 /\ __const_4000^0-__const_4000^post1 == 0 /\ __const_110^0-__const_110^post1 == 0), cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : x^0'=x^post2, __const_110^0'=__const_110^post2, __const_4000^0'=__const_4000^post2, __const_1000^0'=__const_1000^post2, y^0'=y^post2, __const_3000^0'=__const_3000^post2, (-__const_3000^post2+__const_3000^0 == 0 /\ y^post2-__const_3000^0 == 0 /\ __const_1000^0-__const_1000^post2 == 0 /\ __const_110^0-__const_110^post2 == 0 /\ x^0-x^post2 == 0 /\ __const_4000^0-__const_4000^post2 == 0), cost: 1
New rule:
l2 -> l0 : y^0'=__const_3000^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : x^0'=x^post3, __const_110^0'=__const_110^post3, __const_4000^0'=__const_4000^post3, __const_1000^0'=__const_1000^post3, y^0'=y^post3, __const_3000^0'=__const_3000^post3, (__const_1000^0-__const_1000^post3 == 0 /\ -__const_3000^post3+__const_3000^0 == 0 /\ __const_4000^0-__const_4000^post3 == 0 /\ __const_110^0-__const_110^post3 == 0 /\ x^0-x^post3 == 0 /\ -y^post3+y^0 == 0), cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Simplified rules
Start location: l3
   4: l0 -> l1 : x^0'=x^0+__const_1000^0, (1-__const_4000^0+y^0 <= 0 /\ 1-x^0+__const_110^0-__const_1000^0 <= 0), cost: 1
   5: l1 -> l0 : TRUE, cost: 1
   6: l2 -> l0 : y^0'=__const_3000^0, TRUE, cost: 1
   7: l3 -> l2 : TRUE, cost: 1


Eliminating location l2 by chaining:

Applied chaining
First rule:
l3 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : y^0'=__const_3000^0, TRUE, cost: 1
New rule:
l3 -> l0 : y^0'=__const_3000^0, TRUE, cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : x^0'=x^0+__const_1000^0, (1-__const_4000^0+y^0 <= 0 /\ 1-x^0+__const_110^0-__const_1000^0 <= 0), cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : x^0'=x^0+__const_1000^0, (1-__const_4000^0+y^0 <= 0 /\ 1-x^0+__const_110^0-__const_1000^0 <= 0), cost: 2

Applied deletion
Removed the following rules: 4 5

Eliminated locations on linear paths
Start location: l3
   9: l0 -> l0 : x^0'=x^0+__const_1000^0, (1-__const_4000^0+y^0 <= 0 /\ 1-x^0+__const_110^0-__const_1000^0 <= 0), cost: 2
   8: l3 -> l0 : y^0'=__const_3000^0, TRUE, cost: 2


Applied acceleration
Original rule:
l0 -> l0 : x^0'=x^0+__const_1000^0, (1-__const_4000^0+y^0 <= 0 /\ 1-x^0+__const_110^0-__const_1000^0 <= 0), cost: 2
New rule:
l0 -> l0 : x^0'=x^0+n*__const_1000^0, (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ n >= 0 /\ -1+x^0-__const_110^0+__const_1000^0+__const_1000^0*(-1+n) >= 0 /\ -1+__const_4000^0-y^0 >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FAjgjL.txt

Applied nonterm
Original rule:
l0 -> l0 : x^0'=x^0+__const_1000^0, (1-__const_4000^0+y^0 <= 0 /\ 1-x^0+__const_110^0-__const_1000^0 <= 0), cost: 2
New rule:
l0 -> [4] : (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ -1+__const_4000^0-y^0 >= 0 /\ -__const_1000^0 <= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oNmpDc.txt

Applied simplification
Original rule:
l0 -> [4] : (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ -1+__const_4000^0-y^0 >= 0 /\ -__const_1000^0 <= 0), cost: NONTERM
New rule:
l0 -> [4] : (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ __const_1000^0 >= 0 /\ -1+__const_4000^0-y^0 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 9

Accelerated simple loops
Start location: l3
  10: l0 -> l0 : x^0'=x^0+n*__const_1000^0, (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ n >= 0 /\ -1+x^0-__const_110^0+__const_1000^0+__const_1000^0*(-1+n) >= 0 /\ -1+__const_4000^0-y^0 >= 0), cost: 2*n
  12: l0 -> [4] : (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ __const_1000^0 >= 0 /\ -1+__const_4000^0-y^0 >= 0), cost: NONTERM
   8: l3 -> l0 : y^0'=__const_3000^0, TRUE, cost: 2


Applied chaining
First rule:
l3 -> l0 : y^0'=__const_3000^0, TRUE, cost: 2
Second rule:
l0 -> l0 : x^0'=x^0+n*__const_1000^0, (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ n >= 0 /\ -1+x^0-__const_110^0+__const_1000^0+__const_1000^0*(-1+n) >= 0 /\ -1+__const_4000^0-y^0 >= 0), cost: 2*n
New rule:
l3 -> l0 : x^0'=x^0+n*__const_1000^0, y^0'=__const_3000^0, (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ -1+__const_4000^0-__const_3000^0 >= 0 /\ n >= 0 /\ -1+x^0-__const_110^0+__const_1000^0+__const_1000^0*(-1+n) >= 0), cost: 2+2*n

Applied chaining
First rule:
l3 -> l0 : y^0'=__const_3000^0, TRUE, cost: 2
Second rule:
l0 -> [4] : (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ __const_1000^0 >= 0 /\ -1+__const_4000^0-y^0 >= 0), cost: NONTERM
New rule:
l3 -> [4] : (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ -1+__const_4000^0-__const_3000^0 >= 0 /\ __const_1000^0 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 10 12

Chained accelerated rules with incoming rules
Start location: l3
   8: l3 -> l0 : y^0'=__const_3000^0, TRUE, cost: 2
  13: l3 -> l0 : x^0'=x^0+n*__const_1000^0, y^0'=__const_3000^0, (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ -1+__const_4000^0-__const_3000^0 >= 0 /\ n >= 0 /\ -1+x^0-__const_110^0+__const_1000^0+__const_1000^0*(-1+n) >= 0), cost: 2+2*n
  14: l3 -> [4] : (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ -1+__const_4000^0-__const_3000^0 >= 0 /\ __const_1000^0 >= 0), cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: l3
  14: l3 -> [4] : (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ -1+__const_4000^0-__const_3000^0 >= 0 /\ __const_1000^0 >= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 14 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-1+x^0-__const_110^0+__const_1000^0 >= 0 /\ -1+__const_4000^0-__const_3000^0 >= 0 /\ __const_1000^0 >= 0)
