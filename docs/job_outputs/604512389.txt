NO

Initial ITS

Start location: [1]
Program variables: a b
   0: [1] -> [2] : a'=nondet, T, cost: 1
   1: [2] -> [3] : b'=nondet1, T, cost: 1
   2: [3] -> [4] : (-1+b >= 0 /\ -1+a >= 0), cost: 1
   6: [3] -> [7] : (-1+b < 0 \/ -1+a < 0), cost: 1
   3: [4] -> [5] : a'=2*a, T, cost: 1
   4: [5] -> [6] : b'=3*b, T, cost: 1
   5: [6] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: a b
   7: [1] -> [3] : a'=nondet, b'=nondet1, T, cost: 1
   6: [3] -> [7] : (-1+b < 0 \/ -1+a < 0), cost: 1
  10: [3] -> [3] : a'=2*a, b'=3*b, (-1+b >= 0 /\ -1+a >= 0), cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : a'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : b'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : a'=nondet, b'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : (-1+b >= 0 /\ -1+a >= 0), cost: 1
	Second rule:
	[4] -> [5] : a'=2*a, T, cost: 1
	New rule:
	[3] -> [5] : a'=2*a, (-1+b >= 0 /\ -1+a >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : a'=2*a, (-1+b >= 0 /\ -1+a >= 0), cost: 1
	Second rule:
	[5] -> [6] : b'=3*b, T, cost: 1
	New rule:
	[3] -> [6] : a'=2*a, b'=3*b, (-1+b >= 0 /\ -1+a >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 8
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[3] -> [6] : a'=2*a, b'=3*b, (-1+b >= 0 /\ -1+a >= 0), cost: 1
	Second rule:
	[6] -> [3] : T, cost: 1
	New rule:
	[3] -> [3] : a'=2*a, b'=3*b, (-1+b >= 0 /\ -1+a >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 9

Step with 7

	Trace

	7[T]
	
	Blocked

	[{}, {}]

Step with 6

	Trace

	7[T], 6[(-1+b < 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {6[-1+b < 0]}]

Step with 6

	Trace

	7[T], 6[(-1+a < 0)]
	
	Blocked

	[{}, {6[-1+b < 0]}, {}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {6[(-1+b < 0 /\ -1+a < 0)]}]

Step with 10

	Trace

	7[T], 10[(-1+b >= 0 /\ -1+a >= 0)]
	
	Blocked

	[{}, {6[T]}, {}]

Nonterm

Start location: [1]
Program variables: a b
   7: [1] -> [3] : a'=nondet, b'=nondet1, T, cost: 1
   6: [3] -> [7] : (-1+b < 0 \/ -1+a < 0), cost: 1
  10: [3] -> [3] : a'=2*a, b'=3*b, (-1+b >= 0 /\ -1+a >= 0), cost: 1
  11: [3] -> LoAT_sink : (-1+n >= 0 /\ -1+b >= 0 /\ -1+a >= 0), cost: NONTERM
  12: [3] -> [3] : a'=2^n*a, b'=b*3^n, (-1+n >= 0 /\ -1+b >= 0 /\ -1+a >= 0), cost: 1

	Certificate of Non-Termination

	Original rule:
	[3] -> [3] : a'=2*a, b'=3*b, (-1+b >= 0 /\ -1+a >= 0), cost: 1
	New rule:
	[3] -> LoAT_sink : (-1+n >= 0 /\ -1+b >= 0 /\ -1+a >= 0), cost: NONTERM

		-1+b >= 0 [0]: monotonic increase yields -1+b >= 0
		
		-1+a >= 0 [0]: monotonic increase yields -1+a >= 0
		
		Replacement map: {-1+b >= 0 -> -1+b >= 0, -1+a >= 0 -> -1+a >= 0}

	Loop Acceleration

	Original rule:
	[3] -> [3] : a'=2*a, b'=3*b, (-1+b >= 0 /\ -1+a >= 0), cost: 1
	New rule:
	[3] -> [3] : a'=2^n*a, b'=b*3^n, (-1+n >= 0 /\ -1+b >= 0 /\ -1+a >= 0), cost: 1

		-1+b >= 0 [0]: monotonic increase yields -1+b >= 0
		
		-1+a >= 0 [0]: monotonic increase yields -1+a >= 0
		
		Replacement map: {-1+b >= 0 -> -1+b >= 0, -1+a >= 0 -> -1+a >= 0}

Step with 11

	Trace

	7[T], 11[(-1+n >= 0 /\ -1+b >= 0 /\ -1+a >= 0)]
	
	Blocked

	[{}, {6[T]}, {11[T]}]

Refute

	Counterexample

	[ a=1 b=1 ] 7 [ a=a b=b ] 11
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
