NO

Initial ITS
Start location: l5
   0: l0 -> l1 : lo^0'=lo^post0, hi^0'=hi^post0, (0 == 0 /\ -lo^post0+lo^0 == 0), cost: 1
   1: l0 -> l1 : lo^0'=lo^post1, hi^0'=hi^post1, (0 == 0 /\ hi^0-hi^post1 == 0), cost: 1
   4: l1 -> l2 : lo^0'=lo^post4, hi^0'=hi^post4, (lo^0-lo^post4 == 0 /\ hi^0-hi^post4 == 0), cost: 1
   2: l2 -> l3 : lo^0'=lo^post2, hi^0'=hi^post2, (lo^0-hi^0 <= 0 /\ hi^0-hi^post2 == 0 /\ lo^0-lo^post2 == 0), cost: 1
   3: l2 -> l0 : lo^0'=lo^post3, hi^0'=hi^post3, (1-lo^0+hi^0 <= 0 /\ lo^0-lo^post3 == 0 /\ -hi^post3+hi^0 == 0), cost: 1
   5: l4 -> l1 : lo^0'=lo^post5, hi^0'=hi^post5, (hi^post5 == 0 /\ -99+lo^post5 == 0), cost: 1
   6: l5 -> l4 : lo^0'=lo^post6, hi^0'=hi^post6, (-hi^post6+hi^0 == 0 /\ lo^0-lo^post6 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l5
   0: l0 -> l1 : lo^0'=lo^post0, hi^0'=hi^post0, (0 == 0 /\ -lo^post0+lo^0 == 0), cost: 1
   1: l0 -> l1 : lo^0'=lo^post1, hi^0'=hi^post1, (0 == 0 /\ hi^0-hi^post1 == 0), cost: 1
   4: l1 -> l2 : lo^0'=lo^post4, hi^0'=hi^post4, (lo^0-lo^post4 == 0 /\ hi^0-hi^post4 == 0), cost: 1
   3: l2 -> l0 : lo^0'=lo^post3, hi^0'=hi^post3, (1-lo^0+hi^0 <= 0 /\ lo^0-lo^post3 == 0 /\ -hi^post3+hi^0 == 0), cost: 1
   5: l4 -> l1 : lo^0'=lo^post5, hi^0'=hi^post5, (hi^post5 == 0 /\ -99+lo^post5 == 0), cost: 1
   6: l5 -> l4 : lo^0'=lo^post6, hi^0'=hi^post6, (-hi^post6+hi^0 == 0 /\ lo^0-lo^post6 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : lo^0'=lo^post0, hi^0'=hi^post0, (0 == 0 /\ -lo^post0+lo^0 == 0), cost: 1
New rule:
l0 -> l1 : hi^0'=hi^post0, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l1 : lo^0'=lo^post1, hi^0'=hi^post1, (0 == 0 /\ hi^0-hi^post1 == 0), cost: 1
New rule:
l0 -> l1 : lo^0'=lo^post1, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : lo^0'=lo^post3, hi^0'=hi^post3, (1-lo^0+hi^0 <= 0 /\ lo^0-lo^post3 == 0 /\ -hi^post3+hi^0 == 0), cost: 1
New rule:
l2 -> l0 : 1-lo^0+hi^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l2 : lo^0'=lo^post4, hi^0'=hi^post4, (lo^0-lo^post4 == 0 /\ hi^0-hi^post4 == 0), cost: 1
New rule:
l1 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l1 : lo^0'=lo^post5, hi^0'=hi^post5, (hi^post5 == 0 /\ -99+lo^post5 == 0), cost: 1
New rule:
l4 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : lo^0'=lo^post6, hi^0'=hi^post6, (-hi^post6+hi^0 == 0 /\ lo^0-lo^post6 == 0), cost: 1
New rule:
l5 -> l4 : TRUE, cost: 1

Simplified rules
Start location: l5
   7: l0 -> l1 : hi^0'=hi^post0, 0 == 0, cost: 1
   8: l0 -> l1 : lo^0'=lo^post1, 0 == 0, cost: 1
  10: l1 -> l2 : TRUE, cost: 1
   9: l2 -> l0 : 1-lo^0+hi^0 <= 0, cost: 1
  11: l4 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 1
  12: l5 -> l4 : TRUE, cost: 1


Eliminating location l4 by chaining:

Applied chaining
First rule:
l5 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 1
New rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 11 12

Eliminating location l2 by chaining:

Applied chaining
First rule:
l1 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : 1-lo^0+hi^0 <= 0, cost: 1
New rule:
l1 -> l0 : 1-lo^0+hi^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 9 10

Eliminated locations on linear paths
Start location: l5
   7: l0 -> l1 : hi^0'=hi^post0, 0 == 0, cost: 1
   8: l0 -> l1 : lo^0'=lo^post1, 0 == 0, cost: 1
  14: l1 -> l0 : 1-lo^0+hi^0 <= 0, cost: 2
  13: l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l1 -> l0 : 1-lo^0+hi^0 <= 0, cost: 2
Second rule:
l0 -> l1 : hi^0'=hi^post0, 0 == 0, cost: 1
New rule:
l1 -> l1 : hi^0'=hi^post0, (0 == 0 /\ 1-lo^0+hi^0 <= 0), cost: 3

Applied simplification
Original rule:
l1 -> l1 : hi^0'=hi^post0, (0 == 0 /\ 1-lo^0+hi^0 <= 0), cost: 3
New rule:
l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3

Applied chaining
First rule:
l1 -> l0 : 1-lo^0+hi^0 <= 0, cost: 2
Second rule:
l0 -> l1 : lo^0'=lo^post1, 0 == 0, cost: 1
New rule:
l1 -> l1 : lo^0'=lo^post1, (0 == 0 /\ 1-lo^0+hi^0 <= 0), cost: 3

Applied simplification
Original rule:
l1 -> l1 : lo^0'=lo^post1, (0 == 0 /\ 1-lo^0+hi^0 <= 0), cost: 3
New rule:
l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3

Applied deletion
Removed the following rules: 7 8 14

Eliminated locations on tree-shaped paths
Start location: l5
  15: l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3
  16: l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3
  13: l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3
New rule:
l1 -> l1 : hi^0'=hi^post0, (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_glbbiO.txt

Applied nonterm
Original rule:
l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3
New rule:
l1 -> [6] : (hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PaoiIi.txt

Applied acceleration
Original rule:
l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3
New rule:
l1 -> l1 : lo^0'=lo^post1, (-1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_LaMmOe.txt

Applied nonterm
Original rule:
l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3
New rule:
l1 -> [6] : (lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PMDHhd.txt

Applied chaining
First rule:
l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3
Second rule:
l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (1-lo^0+hi^0 <= 0 /\ 1+hi^0-lo^post1 <= 0), cost: 6

Applied acceleration
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (1-lo^0+hi^0 <= 0 /\ 1+hi^0-lo^post1 <= 0), cost: 6
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ -1+n1 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 6*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hmHbIJ.txt

Applied nonterm
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (1-lo^0+hi^0 <= 0 /\ 1+hi^0-lo^post1 <= 0), cost: 6
New rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hJMMcg.txt

Applied chaining
First rule:
l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3
Second rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3
Second rule:
l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (1-lo^0+hi^0 <= 0 /\ 1-lo^0+hi^post0 <= 0), cost: 6

Applied acceleration
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (1-lo^0+hi^0 <= 0 /\ 1-lo^0+hi^post0 <= 0), cost: 6
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+n2 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 6*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_MBHiEJ.txt

Applied nonterm
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (1-lo^0+hi^0 <= 0 /\ 1-lo^0+hi^post0 <= 0), cost: 6
New rule:
l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GaIHLi.txt

Applied chaining
First rule:
l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3
Second rule:
l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3
Second rule:
l1 -> l1 : hi^0'=hi^post0, (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0), cost: 3+3*n

Applied acceleration
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0), cost: 3+3*n
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1+n3 >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n*n3+3*n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cCcGKd.txt

Applied nonterm
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0), cost: 3+3*n
New rule:
l1 -> [6] : (-1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GfjJHo.txt

Applied chaining
First rule:
l1 -> l1 : hi^0'=hi^post0, (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n
Second rule:
l1 -> [6] : (-1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : hi^0'=hi^post0, (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n
Second rule:
l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1+n >= 0 /\ 1-lo^0+hi^post0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3+3*n

Applied acceleration
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1+n >= 0 /\ 1-lo^0+hi^post0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3+3*n
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ -1+n4 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n4+3*n4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_nJgiCL.txt

Applied nonterm
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1+n >= 0 /\ 1-lo^0+hi^post0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3+3*n
New rule:
l1 -> [6] : (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_IABNhN.txt

Applied chaining
First rule:
l1 -> l1 : lo^0'=lo^post1, 1-lo^0+hi^0 <= 0, cost: 3
Second rule:
l1 -> [6] : (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3
Second rule:
l1 -> l1 : lo^0'=lo^post1, (-1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n0
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ -1+n0 >= 0), cost: 3+3*n0

Applied acceleration
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ -1+n0 >= 0), cost: 3+3*n0
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ -1+n0 >= 0 /\ -1+n5 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n5+3*n0*n5
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lBkdeD.txt

Applied nonterm
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ -1+n0 >= 0), cost: 3+3*n0
New rule:
l1 -> [6] : (-1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GkFAGG.txt

Applied chaining
First rule:
l1 -> l1 : lo^0'=lo^post1, (-1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n0
Second rule:
l1 -> [6] : (-1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : lo^0'=lo^post1, (-1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n0
Second rule:
l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1+n0 >= 0 /\ 1+hi^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3+3*n0

Applied acceleration
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1+n0 >= 0 /\ 1+hi^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3+3*n0
New rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1-hi^post0+lo^post1 >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ -1+n6 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n6+3*n6*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_CnAlGI.txt

Applied nonterm
Original rule:
l1 -> l1 : lo^0'=lo^post1, hi^0'=hi^post0, (-1+n0 >= 0 /\ 1+hi^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3+3*n0
New rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_HkJmIo.txt

Applied chaining
First rule:
l1 -> l1 : hi^0'=hi^post0, 1-lo^0+hi^0 <= 0, cost: 3
Second rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0), cost: NONTERM
New rule:
l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM
New rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [6] : (-1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (-1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM
New rule:
l1 -> [6] : (-1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [6] : (-1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [6] : (0 <= 0 /\ -1-hi^post0+lo^post1 >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0), cost: NONTERM
New rule:
l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 15 16

Accelerated simple loops
Start location: l5
  17: l1 -> l1 : hi^0'=hi^post0, (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n
  18: l1 -> [6] : (hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  19: l1 -> l1 : lo^0'=lo^post1, (-1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n0
  20: l1 -> [6] : (lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  21: l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  23: l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  27: l1 -> [6] : (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  31: l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  33: l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0), cost: NONTERM
  34: l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM
  35: l1 -> [6] : (-1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  36: l1 -> [6] : (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  37: l1 -> [6] : (-1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM
  38: l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  39: l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
  40: l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0), cost: NONTERM
  13: l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> l1 : hi^0'=hi^post0, (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n
New rule:
l5 -> l1 : lo^0'=99, hi^0'=hi^post0, (-1+n >= 0 /\ -98+hi^post0 <= 0), cost: 2+3*n

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> l1 : lo^0'=lo^post1, (-1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: 3*n0
New rule:
l5 -> l1 : lo^0'=lo^post1, hi^0'=0, (-1+n0 >= 0 /\ -1+lo^post1 >= 0), cost: 2+3*n0

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0), cost: NONTERM
New rule:
l5 -> [6] : -98 <= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM
New rule:
l5 -> [6] : -98 <= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1+n >= 0 /\ -1+lo^0-hi^post0 >= 0 /\ lo^0-lo^post1 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1+n >= 0 /\ -1-hi^0+lo^post1 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ hi^post0-hi^0 <= 0), cost: NONTERM
New rule:
l5 -> [6] : -98 <= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ lo^0+hi^post0-hi^0-lo^post1 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1-hi^0+lo^post1 >= 0 /\ -1+n0 >= 0 /\ hi^post0-hi^0 <= 0 /\ -1+lo^0-hi^0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
Second rule:
l1 -> [6] : (-1+lo^0-hi^post0 >= 0 /\ 1-lo^0+hi^0 <= 0 /\ lo^0-lo^post1 <= 0 /\ -1+n0 >= 0), cost: NONTERM
New rule:
l5 -> [6] : -98 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 17 18 19 20 21 23 27 31 33 34 35 36 37 38 39 40

Chained accelerated rules with incoming rules
Start location: l5
  13: l5 -> l1 : lo^0'=99, hi^0'=0, TRUE, cost: 2
  41: l5 -> l1 : lo^0'=99, hi^0'=hi^post0, (-1+n >= 0 /\ -98+hi^post0 <= 0), cost: 2+3*n
  42: l5 -> [6] : 98 >= 0, cost: NONTERM
  43: l5 -> l1 : lo^0'=lo^post1, hi^0'=0, (-1+n0 >= 0 /\ -1+lo^post1 >= 0), cost: 2+3*n0
  44: l5 -> [6] : -98 <= 0, cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: l5
  42: l5 -> [6] : 98 >= 0, cost: NONTERM
  44: l5 -> [6] : -98 <= 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 42 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  98 >= 0
