NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P0 == 0), cost: 1
   1: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, (-2+arg1 < 0 /\ arg1 < 0 /\ 5+arg1 < 0 /\ 1-arg1-arg1P1 == 0), cost: 1
   2: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P2, arg1'=arg1P2, (-2+arg1 < 0 /\ 1-arg1-arg1P2 == 0 /\ arg1 > 0 /\ 5+arg1 < 0), cost: 1
   3: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, (-arg1P3 == 0 /\ -6+arg1 < 0 /\ arg1 < 0 /\ 6+arg1 > 0), cost: 1
   4: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P4, arg1'=arg1P4, (-arg1P4 == 0 /\ -6+arg1 < 0 /\ arg1 > 0), cost: 1
   5: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=arg1P5, (-5+arg1 > 0 /\ -1-arg1P5-arg1 == 0), cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Removed rules with unsatisfiable guard
Start location: __init
   0: f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P0 == 0), cost: 1
   1: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, (-2+arg1 < 0 /\ arg1 < 0 /\ 5+arg1 < 0 /\ 1-arg1-arg1P1 == 0), cost: 1
   3: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, (-arg1P3 == 0 /\ -6+arg1 < 0 /\ arg1 < 0 /\ 6+arg1 > 0), cost: 1
   4: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P4, arg1'=arg1P4, (-arg1P4 == 0 /\ -6+arg1 < 0 /\ arg1 > 0), cost: 1
   5: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=arg1P5, (-5+arg1 > 0 /\ -1-arg1P5-arg1 == 0), cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, (-2+arg1 < 0 /\ arg1 < 0 /\ 5+arg1 < 0 /\ 1-arg1-arg1P1 == 0), cost: 1
New rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=1-arg1, -5-arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, (-arg1P3 == 0 /\ -6+arg1 < 0 /\ arg1 < 0 /\ 6+arg1 > 0), cost: 1
New rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P3, arg1'=0, (6+arg1 > 0 /\ -arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P4, arg1'=arg1P4, (-arg1P4 == 0 /\ -6+arg1 < 0 /\ arg1 > 0), cost: 1
New rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P4, arg1'=0, (6-arg1 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=arg1P5, (-5+arg1 > 0 /\ -1-arg1P5-arg1 == 0), cost: 1
New rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-1-arg1, -5+arg1 > 0, cost: 1

Simplified rules
Start location: __init
   7: f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=1-arg1, -5-arg1 > 0, cost: 1
   9: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P3, arg1'=0, (6+arg1 > 0 /\ -arg1 > 0), cost: 1
  10: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P4, arg1'=0, (6-arg1 > 0 /\ arg1 > 0), cost: 1
  11: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-1-arg1, -5+arg1 > 0, cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied chaining
First rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-1-arg1, -5+arg1 > 0, cost: 1
Second rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=1-arg1, -5-arg1 > 0, cost: 1
New rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=2+arg1, -5+arg1 > 0, cost: 2

Applied nonterm
Original rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=2+arg1, -5+arg1 > 0, cost: 2
New rule:
f82_0_loop_EQ -> [3] : (-5+arg1 > 0 /\ -1+n1 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_pKAkEA.txt

Applied chaining
First rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=1-arg1, -5-arg1 > 0, cost: 1
Second rule:
f82_0_loop_EQ -> [3] : (-5+arg1 > 0 /\ -1+n1 >= 0), cost: NONTERM
New rule:
f82_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ -4-arg1 > 0 /\ -5-arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=1-arg1, -5-arg1 > 0, cost: 1
Second rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-1-arg1, -5+arg1 > 0, cost: 1
New rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-2+arg1, -5-arg1 > 0, cost: 2

Applied nonterm
Original rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-2+arg1, -5-arg1 > 0, cost: 2
New rule:
f82_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ -5-arg1 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_modKKN.txt

Applied chaining
First rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-1-arg1, -5+arg1 > 0, cost: 1
Second rule:
f82_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ -5-arg1 > 0), cost: NONTERM
New rule:
f82_0_loop_EQ -> [3] : (-4+arg1 > 0 /\ -1+n2 >= 0 /\ -5+arg1 > 0), cost: NONTERM

Applied simplification
Original rule:
f82_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ -4-arg1 > 0 /\ -5-arg1 > 0), cost: NONTERM
New rule:
f82_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ -5-arg1 > 0), cost: NONTERM

Applied simplification
Original rule:
f82_0_loop_EQ -> [3] : (-4+arg1 > 0 /\ -1+n2 >= 0 /\ -5+arg1 > 0), cost: NONTERM
New rule:
f82_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ -5+arg1 > 0), cost: NONTERM

Accelerated simple loops
Start location: __init
   7: f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P1, arg1'=1-arg1, -5-arg1 > 0, cost: 1
   9: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P3, arg1'=0, (6+arg1 > 0 /\ -arg1 > 0), cost: 1
  10: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P4, arg1'=0, (6-arg1 > 0 /\ arg1 > 0), cost: 1
  11: f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-1-arg1, -5+arg1 > 0, cost: 1
  12: f82_0_loop_EQ -> [3] : (-5+arg1 > 0 /\ -1+n1 >= 0), cost: NONTERM
  14: f82_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ -5-arg1 > 0), cost: NONTERM
  16: f82_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ -5-arg1 > 0), cost: NONTERM
  17: f82_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ -5+arg1 > 0), cost: NONTERM
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P4, arg1'=0, (6-arg1 > 0 /\ arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P4, arg1'=0, (6-arg2 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f82_0_loop_EQ -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-1-arg1, -5+arg1 > 0, cost: 1
New rule:
f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-1-arg2, (-5+arg2 > 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f82_0_loop_EQ -> [3] : (-5+arg1 > 0 /\ -1+n1 >= 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f82_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ -5+arg1 > 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 8 9 10 11 12 14 16 17

Chained accelerated rules with incoming rules
Start location: __init
   7: f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P0, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  18: f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P4, arg1'=0, (6-arg2 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 2
  19: f1_0_main_Load -> f82_0_loop_EQ : arg2'=arg2P5, arg1'=-1-arg2, (-5+arg2 > 0 /\ arg1 > 0), cost: 2
  20: f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  20: f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [3] : (-5+arg2 > 0 /\ arg1 > 0), cost: NONTERM
New rule:
__init -> [3] : (arg1P6 > 0 /\ -5+arg2P6 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 6 20

Eliminated locations on linear paths
Start location: __init
  21: __init -> [3] : (arg1P6 > 0 /\ -5+arg2P6 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 21 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (arg1P6 > 0 /\ -5+arg2P6 > 0)
