NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l4, true>
<l1, l2, (undef4 > ~(1)) /\ (arg2 > 1) /\ (undef5 > ~(1)) /\ (arg1 > 0), par{arg1 -> (undef4 - undef5), arg2 -> undef2, arg3 -> undef3}>
<l2, l3, (arg1 > 0), par{arg1 -> (arg1 + 1), arg2 -> (arg1 + 1), arg3 -> (arg1 + 1)}>
<l3, l2, (0 = arg2) /\ (0 = arg3), par{arg2 -> undef10, arg3 -> undef11}>
<l3, l3, (arg2 > 0) /\ (arg2 = arg3), par{arg2 -> (arg2 - 1), arg3 -> (arg2 - 1)}>
<l4, l1, true, par{arg1 -> undef15, arg2 -> undef16, arg3 -> undef17}>

Fresh variables:
undef2, undef3, undef4, undef5, undef10, undef11, undef15, undef16, undef17, 

Undef variables:
undef2, undef3, undef4, undef5, undef10, undef11, undef15, undef16, undef17, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (arg1 = ((undef4 - undef5) + 1)) /\ (arg2 = ((undef4 - undef5) + 1)) /\ (arg3 = ((undef4 - undef5) + 1)) /\ (undef4 > ~(1)) /\ (undef16 > 1) /\ (undef5 > ~(1)) /\ (undef15 > 0) /\ ((undef4 - undef5) > 0)>
<l3, l3, (0 = arg2) /\ (0 = arg3) /\ (arg1 > 0), par{arg1 -> (arg1 + 1), arg2 -> (arg1 + 1), arg3 -> (arg1 + 1)}>
<l3, l3, (arg2 > 0) /\ (arg2 = arg3), par{arg2 -> (arg2 - 1), arg3 -> (arg2 - 1)}>

Fresh variables:
undef2, undef3, undef4, undef5, undef10, undef11, undef15, undef16, undef17, 

Undef variables:
undef2, undef3, undef4, undef5, undef10, undef11, undef15, undef16, undef17, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 1 <= arg1 /\ arg2 = 0 /\ arg3 = 0, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>
<l3, l3, 1 <= arg2 /\ arg2 = arg3, {arg2 -> -1 + arg2, arg3 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l3, 1 + undef5 <= undef4 /\ 1 <= undef15 /\ 0 <= undef4 /\ 0 <= undef5 /\ 2 <= undef16 /\ arg1 + undef5 = 1 + undef4 /\ arg2 + undef5 = 1 + undef4 /\ arg3 + undef5 = 1 + undef4, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.033078

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001229s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009515s
Trying to remove transition: <l3, l3, 1 <= arg2 /\ arg2 = arg3, {arg2 -> -1 + arg2, arg3 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.021427s
Time used: 0.021219
Trying to remove transition: <l3, l3, 1 <= arg1 /\ arg2 = 0 /\ arg3 = 0, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001844s
Time used: 4.00027
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.013320s
Time used: 4.00016
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.015484s
Time used: 4.0001
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.020981s
Time used: 1.00013
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.010559s
Time used: 4.00012
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l3, 1 + undef5 <= undef4 /\ 1 <= undef15 /\ 0 <= undef4 /\ 0 <= undef5 /\ 2 <= undef16 /\ arg1 + undef5 = 1 + undef4 /\ arg2 + undef5 = 1 + undef4 /\ arg3 + undef5 = 1 + undef4, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l3, 1 + undef5 <= undef4 /\ 1 <= undef15 /\ 0 <= undef4 /\ 0 <= undef5 /\ 2 <= undef16 /\ arg1 + undef5 = 1 + undef4 /\ arg2 + undef5 = 1 + undef4 /\ arg3 + undef5 = 1 + undef4, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.019904s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.020092s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l3, l3, 1 <= arg1 /\ arg2 = 0 /\ arg3 = 0, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>
<l3, l3, 1 <= arg2 /\ arg2 = arg3, {arg2 -> -1 + arg2, arg3 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, 1 <= arg1 /\ 1 <= arg2 /\ 1 + arg3 <= arg2 /\ 1 <= arg3, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg2 /\ 1 <= arg3, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 <= arg2 /\ 1 + arg3 <= arg2 /\ arg3 <= 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ arg2 = 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg3 <= arg2 /\ 1 + arg3 <= 0 /\ arg2 = 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ 1 <= arg3, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ arg3 = 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= arg2 /\ 1 + arg3 <= 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= 0 /\ arg2 <= arg3, {all remain the same}>
<l3, end, 1 <= arg2 /\ 1 + arg3 <= arg2 /\ 1 <= arg3 /\ arg1 <= 0, {all remain the same}>
<l3, end, 1 + arg2 <= arg3 /\ 1 <= arg2 /\ 1 <= arg3 /\ arg1 <= 0, {all remain the same}>
<l3, end, 1 <= arg2 /\ 1 + arg3 <= arg2 /\ arg1 <= 0 /\ arg3 <= 0, {all remain the same}>
<l3, end, 1 + arg2 <= arg3 /\ 1 <= arg3 /\ arg1 <= 0 /\ arg2 = 0, {all remain the same}>
<l3, end, arg1 <= 0 /\ arg2 = 0 /\ arg2 = arg3 /\ arg3 = 0, {all remain the same}>
<l3, end, 1 + arg3 <= arg2 /\ 1 + arg3 <= 0 /\ arg1 <= 0 /\ arg2 = 0, {all remain the same}>
<l3, end, 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ arg1 <= 0, {all remain the same}>
<l3, end, 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ arg1 <= 0 /\ arg3 = 0, {all remain the same}>
<l3, end, 1 + arg2 <= 0 /\ 1 + arg3 <= arg2 /\ 1 + arg3 <= 0 /\ arg1 <= 0, {all remain the same}>
<l3, end, 1 + arg2 <= 0 /\ 1 + arg3 <= 0 /\ arg1 <= 0 /\ arg2 <= arg3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.138494s
Time used: 0.138001
Improving Solution with cost 9 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000588s
Time used: 1.00064

LOG: SAT solveNonLinear - Elapsed time: 1.139082s
Cost: 9; Total time: 1.13864
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: 1 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 10
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 <= arg2 /\ 1 + arg3 <= arg2 /\ 1 <= arg3, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg2 /\ 1 <= arg3, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 <= arg2 /\ 1 + arg3 <= arg2 /\ arg3 <= 0, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ arg2 = 0, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg3 <= arg2 /\ 1 + arg3 <= 0 /\ arg2 = 0, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ 1 <= arg3, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ arg3 = 0, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= arg2 /\ 1 + arg3 <= 0, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= 0 /\ arg2 <= arg3, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ arg2 = 0 /\ arg3 = 0, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ arg2 = arg3, {arg2 -> -1 + arg2, arg3 -> -1 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, 1 <= arg1 /\ 1 <= arg2 /\ 1 + arg3 <= arg2 /\ 1 <= arg3, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg2 /\ 1 <= arg3, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 <= arg2 /\ 1 + arg3 <= arg2 /\ arg3 <= 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ arg2 = 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg3 <= arg2 /\ 1 + arg3 <= 0 /\ arg2 = 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ 1 <= arg3, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ arg3 = 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= arg2 /\ 1 + arg3 <= 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= 0 /\ arg2 <= arg3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.096826s
Time used: 0.09646
Improving Solution with cost 5 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000500s
Time used: 1.00055

LOG: SAT solveNonLinear - Elapsed time: 1.097326s
Cost: 5; Total time: 1.09701
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg2 <= arg3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 4
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg2 /\ 1 <= arg3, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ arg2 = 0, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ 1 <= arg3, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ arg3 = 0, {all remain the same}>
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= 0 /\ arg2 <= arg3, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ arg2 <= arg3 /\ arg2 = 0 /\ arg3 = 0, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ arg2 = arg3, {arg2 -> -1 + arg2, arg3 -> -1 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg2 /\ 1 <= arg3, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ arg2 = 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ 1 <= arg3, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg2 <= arg3 /\ arg3 = 0, {all remain the same}>
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= 0 /\ arg2 <= arg3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.025860s
Time used: 0.025536
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.034261s
Time used: 0.034244

LOG: SAT solveNonLinear - Elapsed time: 0.060121s
Cost: 1; Total time: 0.05978
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: arg3 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 4
Strengthening exit transition (result): 
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= 0 /\ arg2 = arg3, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ arg2 = 0 /\ arg2 = arg3 /\ arg3 = 0, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ arg2 = arg3, {arg2 -> -1 + arg2, arg3 -> -1 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l3}...
EXIT TRANSITIONS:
<l3, end, 1 <= arg1 /\ 1 + arg2 <= 0 /\ 1 + arg3 <= 0 /\ arg2 = arg3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008950s
Time used: 0.008839

LOG: SAT solveNonLinear - Elapsed time: 0.008950s
Cost: 0; Total time: 0.008839
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: 0 <= arg2 + arg3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l3: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 0 <= arg2 + arg3 /\ arg2 = 0 /\ arg2 = arg3 /\ arg3 = 0, {arg1 -> 1 + arg1, arg2 -> 1 + arg1, arg3 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 1 <= arg1 /\ 1 <= arg2 /\ 0 <= arg2 + arg3 /\ arg2 = arg3, {arg2 -> -1 + arg2, arg3 -> -1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: 1 <= arg1, arg2 <= arg3, arg3 <= arg2, 0 <= arg2 + arg3, 
OPEN EXITS: 
<l3, end, 1 <= arg1 /\ 0 <= arg2 + arg3 /\ arg2 = arg3, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, 1 + undef5 <= undef4 /\ 1 <= undef15 /\ 0 <= undef4 /\ 0 <= undef5 /\ 2 <= undef16 /\ arg1 + undef5 = 1 + undef4 /\ arg2 + undef5 = 1 + undef4 /\ arg3 + undef5 = 1 + undef4, {all remain the same}>
Conditions: 1 <= arg1, 0 <= arg2 + arg3, arg2 = arg3, 
OPEN EXITS: 
<l0, l3, 1 <= arg1 /\ 1 + undef5 <= undef4 /\ 1 <= undef15 /\ 0 <= arg2 + arg3 /\ 0 <= undef4 /\ 0 <= undef5 /\ 2 <= undef16 /\ arg1 + undef5 = 1 + undef4 /\ arg2 + undef5 = 1 + undef4 /\ arg3 + undef5 = 1 + undef4 /\ arg2 = arg3, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
