unknown

Initial ITS

Start location: l4
Program variables: ___cil_tmp4_8^0 ___retres3_7^0 i_5^0 result_4^0 x_6^0
   0: l0 -> l1 : ___cil_tmp4_8^0'=___cil_tmp4_8^post1, ___retres3_7^0'=___retres3_7^post1, i_5^0'=i_5^post1, result_4^0'=result_4^post1, x_6^0'=x_6^post1, (-___cil_tmp4_8^post1+result_4^post1 == 0 /\ ___retres3_7^post1 == 0 /\ 10-x_6^0 <= 0 /\ -i_5^post1+i_5^0 == 0 /\ -x_6^post1+x_6^0 == 0 /\ ___cil_tmp4_8^post1-___retres3_7^post1 == 0), cost: 1
   1: l0 -> l1 : ___cil_tmp4_8^0'=___cil_tmp4_8^post2, ___retres3_7^0'=___retres3_7^post2, i_5^0'=i_5^post2, result_4^0'=result_4^post2, x_6^0'=x_6^post2, (___retres3_7^post2 == 0 /\ x_6^0-x_6^post2 == 0 /\ -___retres3_7^post2+___cil_tmp4_8^post2 == 0 /\ result_4^post2-___cil_tmp4_8^post2 == 0 /\ -i_5^post2+i_5^0 == 0 /\ -9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
   2: l0 -> l2 : ___cil_tmp4_8^0'=___cil_tmp4_8^post3, ___retres3_7^0'=___retres3_7^post3, i_5^0'=i_5^post3, result_4^0'=result_4^post3, x_6^0'=x_6^post3, (1+i_5^post3-i_5^0 == 0 /\ -result_4^post3+result_4^0 == 0 /\ -x_6^post3+x_6^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post3 == 0 /\ ___retres3_7^0-___retres3_7^post3 == 0 /\ 101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
   3: l2 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post4, ___retres3_7^0'=___retres3_7^post4, i_5^0'=i_5^post4, result_4^0'=result_4^post4, x_6^0'=x_6^post4, (-result_4^post4+result_4^0 == 0 /\ x_6^0-x_6^post4 == 0 /\ -___retres3_7^post4+___retres3_7^0 == 0 /\ -i_5^post4+i_5^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post4 == 0), cost: 1
   4: l3 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post5, ___retres3_7^0'=___retres3_7^post5, i_5^0'=i_5^post5, result_4^0'=result_4^post5, x_6^0'=x_6^post5, (-1000+i_5^post5 == 0 /\ -result_4^post5+result_4^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post5 == 0 /\ -x_6^post5+x_6^0 == 0 /\ ___retres3_7^0-___retres3_7^post5 == 0), cost: 1
   5: l4 -> l3 : ___cil_tmp4_8^0'=___cil_tmp4_8^post6, ___retres3_7^0'=___retres3_7^post6, i_5^0'=i_5^post6, result_4^0'=result_4^post6, x_6^0'=x_6^post6, (-x_6^post6+x_6^0 == 0 /\ -i_5^post6+i_5^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -___retres3_7^post6+___retres3_7^0 == 0), cost: 1

Chained Linear Paths

Start location: l4
Program variables: ___cil_tmp4_8^0 ___retres3_7^0 i_5^0 result_4^0 x_6^0
   0: l0 -> l1 : ___cil_tmp4_8^0'=___cil_tmp4_8^post1, ___retres3_7^0'=___retres3_7^post1, i_5^0'=i_5^post1, result_4^0'=result_4^post1, x_6^0'=x_6^post1, (-___cil_tmp4_8^post1+result_4^post1 == 0 /\ ___retres3_7^post1 == 0 /\ 10-x_6^0 <= 0 /\ -i_5^post1+i_5^0 == 0 /\ -x_6^post1+x_6^0 == 0 /\ ___cil_tmp4_8^post1-___retres3_7^post1 == 0), cost: 1
   1: l0 -> l1 : ___cil_tmp4_8^0'=___cil_tmp4_8^post2, ___retres3_7^0'=___retres3_7^post2, i_5^0'=i_5^post2, result_4^0'=result_4^post2, x_6^0'=x_6^post2, (___retres3_7^post2 == 0 /\ x_6^0-x_6^post2 == 0 /\ -___retres3_7^post2+___cil_tmp4_8^post2 == 0 /\ result_4^post2-___cil_tmp4_8^post2 == 0 /\ -i_5^post2+i_5^0 == 0 /\ -9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
   7: l0 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post4, ___retres3_7^0'=___retres3_7^post4, i_5^0'=i_5^post4, result_4^0'=result_4^post4, x_6^0'=x_6^post4, (1+i_5^post3-i_5^0 == 0 /\ -result_4^post3+result_4^0 == 0 /\ -i_5^post4+i_5^post3 == 0 /\ -x_6^post3+x_6^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post3 == 0 /\ ___retres3_7^0-___retres3_7^post3 == 0 /\ x_6^post3-x_6^post4 == 0 /\ -___retres3_7^post4+___retres3_7^post3 == 0 /\ 101-i_5^0 <= 0 /\ -9+x_6^0 <= 0 /\ ___cil_tmp4_8^post3-___cil_tmp4_8^post4 == 0 /\ result_4^post3-result_4^post4 == 0), cost: 1
   6: l4 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post5, ___retres3_7^0'=___retres3_7^post5, i_5^0'=i_5^post5, result_4^0'=result_4^post5, x_6^0'=x_6^post5, (___retres3_7^post6-___retres3_7^post5 == 0 /\ -1000+i_5^post5 == 0 /\ -x_6^post6+x_6^0 == 0 /\ -i_5^post6+i_5^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -___retres3_7^post6+___retres3_7^0 == 0 /\ -___cil_tmp4_8^post5+___cil_tmp4_8^post6 == 0 /\ x_6^post6-x_6^post5 == 0 /\ -result_4^post5+result_4^post6 == 0), cost: 1

	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l4 -> l3 : ___cil_tmp4_8^0'=___cil_tmp4_8^post6, ___retres3_7^0'=___retres3_7^post6, i_5^0'=i_5^post6, result_4^0'=result_4^post6, x_6^0'=x_6^post6, (-x_6^post6+x_6^0 == 0 /\ -i_5^post6+i_5^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -___retres3_7^post6+___retres3_7^0 == 0), cost: 1
	Second rule:
	l3 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post5, ___retres3_7^0'=___retres3_7^post5, i_5^0'=i_5^post5, result_4^0'=result_4^post5, x_6^0'=x_6^post5, (-1000+i_5^post5 == 0 /\ -result_4^post5+result_4^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post5 == 0 /\ -x_6^post5+x_6^0 == 0 /\ ___retres3_7^0-___retres3_7^post5 == 0), cost: 1
	New rule:
	l4 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post5, ___retres3_7^0'=___retres3_7^post5, i_5^0'=i_5^post5, result_4^0'=result_4^post5, x_6^0'=x_6^post5, (___retres3_7^post6-___retres3_7^post5 == 0 /\ -1000+i_5^post5 == 0 /\ -x_6^post6+x_6^0 == 0 /\ -i_5^post6+i_5^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -___retres3_7^post6+___retres3_7^0 == 0 /\ -___cil_tmp4_8^post5+___cil_tmp4_8^post6 == 0 /\ x_6^post6-x_6^post5 == 0 /\ -result_4^post5+result_4^post6 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l0 -> l2 : ___cil_tmp4_8^0'=___cil_tmp4_8^post3, ___retres3_7^0'=___retres3_7^post3, i_5^0'=i_5^post3, result_4^0'=result_4^post3, x_6^0'=x_6^post3, (1+i_5^post3-i_5^0 == 0 /\ -result_4^post3+result_4^0 == 0 /\ -x_6^post3+x_6^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post3 == 0 /\ ___retres3_7^0-___retres3_7^post3 == 0 /\ 101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
	Second rule:
	l2 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post4, ___retres3_7^0'=___retres3_7^post4, i_5^0'=i_5^post4, result_4^0'=result_4^post4, x_6^0'=x_6^post4, (-result_4^post4+result_4^0 == 0 /\ x_6^0-x_6^post4 == 0 /\ -___retres3_7^post4+___retres3_7^0 == 0 /\ -i_5^post4+i_5^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post4 == 0), cost: 1
	New rule:
	l0 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post4, ___retres3_7^0'=___retres3_7^post4, i_5^0'=i_5^post4, result_4^0'=result_4^post4, x_6^0'=x_6^post4, (1+i_5^post3-i_5^0 == 0 /\ -result_4^post3+result_4^0 == 0 /\ -i_5^post4+i_5^post3 == 0 /\ -x_6^post3+x_6^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post3 == 0 /\ ___retres3_7^0-___retres3_7^post3 == 0 /\ x_6^post3-x_6^post4 == 0 /\ -___retres3_7^post4+___retres3_7^post3 == 0 /\ 101-i_5^0 <= 0 /\ -9+x_6^0 <= 0 /\ ___cil_tmp4_8^post3-___cil_tmp4_8^post4 == 0 /\ result_4^post3-result_4^post4 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3

Simplified Transitions

Start location: l4
Program variables: ___cil_tmp4_8^0 ___retres3_7^0 i_5^0 result_4^0 x_6^0
   8: l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, result_4^0'=0, 10-x_6^0 <= 0, cost: 1
   9: l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, result_4^0'=0, (-9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
  11: l0 -> l0 : i_5^0'=-1+i_5^0, (101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
  10: l4 -> l0 : i_5^0'=1000, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : ___cil_tmp4_8^0'=___cil_tmp4_8^post1, ___retres3_7^0'=___retres3_7^post1, i_5^0'=i_5^post1, result_4^0'=result_4^post1, x_6^0'=x_6^post1, (-___cil_tmp4_8^post1+result_4^post1 == 0 /\ ___retres3_7^post1 == 0 /\ 10-x_6^0 <= 0 /\ -i_5^post1+i_5^0 == 0 /\ -x_6^post1+x_6^0 == 0 /\ ___cil_tmp4_8^post1-___retres3_7^post1 == 0), cost: 1
	New rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, i_5^0'=i_5^0, result_4^0'=0, x_6^0'=x_6^0, (0 == 0 /\ 10-x_6^0 <= 0), cost: 1
	
		propagated equality ___cil_tmp4_8^post1 = result_4^post1
		
		propagated equality ___retres3_7^post1 = 0
		
		propagated equality i_5^post1 = i_5^0
		
		propagated equality x_6^post1 = x_6^0
		
		propagated equality result_4^post1 = 0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, i_5^0'=i_5^0, result_4^0'=0, x_6^0'=x_6^0, (0 == 0 /\ 10-x_6^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, i_5^0'=i_5^0, result_4^0'=0, x_6^0'=x_6^0, 10-x_6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, i_5^0'=i_5^0, result_4^0'=0, x_6^0'=x_6^0, 10-x_6^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, result_4^0'=0, 10-x_6^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l1 : ___cil_tmp4_8^0'=___cil_tmp4_8^post2, ___retres3_7^0'=___retres3_7^post2, i_5^0'=i_5^post2, result_4^0'=result_4^post2, x_6^0'=x_6^post2, (___retres3_7^post2 == 0 /\ x_6^0-x_6^post2 == 0 /\ -___retres3_7^post2+___cil_tmp4_8^post2 == 0 /\ result_4^post2-___cil_tmp4_8^post2 == 0 /\ -i_5^post2+i_5^0 == 0 /\ -9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, i_5^0'=i_5^0, result_4^0'=0, x_6^0'=x_6^0, (0 == 0 /\ -9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
	
		propagated equality ___retres3_7^post2 = 0
		
		propagated equality x_6^post2 = x_6^0
		
		propagated equality ___cil_tmp4_8^post2 = 0
		
		propagated equality result_4^post2 = 0
		
		propagated equality i_5^post2 = i_5^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, i_5^0'=i_5^0, result_4^0'=0, x_6^0'=x_6^0, (0 == 0 /\ -9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, i_5^0'=i_5^0, result_4^0'=0, x_6^0'=x_6^0, (-9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, i_5^0'=i_5^0, result_4^0'=0, x_6^0'=x_6^0, (-9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, result_4^0'=0, (-9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post5, ___retres3_7^0'=___retres3_7^post5, i_5^0'=i_5^post5, result_4^0'=result_4^post5, x_6^0'=x_6^post5, (___retres3_7^post6-___retres3_7^post5 == 0 /\ -1000+i_5^post5 == 0 /\ -x_6^post6+x_6^0 == 0 /\ -i_5^post6+i_5^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -___retres3_7^post6+___retres3_7^0 == 0 /\ -___cil_tmp4_8^post5+___cil_tmp4_8^post6 == 0 /\ x_6^post6-x_6^post5 == 0 /\ -result_4^post5+result_4^post6 == 0), cost: 1
	New rule:
	l4 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post6, ___retres3_7^0'=___retres3_7^post6, i_5^0'=1000, result_4^0'=result_4^post6, x_6^0'=x_6^post6, (0 == 0 /\ -x_6^post6+x_6^0 == 0 /\ -i_5^post6+i_5^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -___retres3_7^post6+___retres3_7^0 == 0), cost: 1
	
		propagated equality ___retres3_7^post5 = ___retres3_7^post6
		
		propagated equality i_5^post5 = 1000
		
		propagated equality ___cil_tmp4_8^post5 = ___cil_tmp4_8^post6
		
		propagated equality x_6^post5 = x_6^post6
		
		propagated equality result_4^post5 = result_4^post6
		
	Propagated Equalities

	Original rule:
	l4 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post6, ___retres3_7^0'=___retres3_7^post6, i_5^0'=1000, result_4^0'=result_4^post6, x_6^0'=x_6^post6, (0 == 0 /\ -x_6^post6+x_6^0 == 0 /\ -i_5^post6+i_5^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -___retres3_7^post6+___retres3_7^0 == 0), cost: 1
	New rule:
	l4 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^0, ___retres3_7^0'=___retres3_7^0, i_5^0'=1000, result_4^0'=result_4^0, x_6^0'=x_6^0, 0 == 0, cost: 1
	
		propagated equality x_6^post6 = x_6^0
		
		propagated equality i_5^post6 = i_5^0
		
		propagated equality ___cil_tmp4_8^post6 = ___cil_tmp4_8^0
		
		propagated equality result_4^post6 = result_4^0
		
		propagated equality ___retres3_7^post6 = ___retres3_7^0
		
	Simplified Guard

	Original rule:
	l4 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^0, ___retres3_7^0'=___retres3_7^0, i_5^0'=1000, result_4^0'=result_4^0, x_6^0'=x_6^0, 0 == 0, cost: 1
	New rule:
	l4 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^0, ___retres3_7^0'=___retres3_7^0, i_5^0'=1000, result_4^0'=result_4^0, x_6^0'=x_6^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^0, ___retres3_7^0'=___retres3_7^0, i_5^0'=1000, result_4^0'=result_4^0, x_6^0'=x_6^0, T, cost: 1
	New rule:
	l4 -> l0 : i_5^0'=1000, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post4, ___retres3_7^0'=___retres3_7^post4, i_5^0'=i_5^post4, result_4^0'=result_4^post4, x_6^0'=x_6^post4, (1+i_5^post3-i_5^0 == 0 /\ -result_4^post3+result_4^0 == 0 /\ -i_5^post4+i_5^post3 == 0 /\ -x_6^post3+x_6^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post3 == 0 /\ ___retres3_7^0-___retres3_7^post3 == 0 /\ x_6^post3-x_6^post4 == 0 /\ -___retres3_7^post4+___retres3_7^post3 == 0 /\ 101-i_5^0 <= 0 /\ -9+x_6^0 <= 0 /\ ___cil_tmp4_8^post3-___cil_tmp4_8^post4 == 0 /\ result_4^post3-result_4^post4 == 0), cost: 1
	New rule:
	l0 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post3, ___retres3_7^0'=___retres3_7^post3, i_5^0'=i_5^post3, result_4^0'=result_4^post3, x_6^0'=x_6^post3, (0 == 0 /\ 1+i_5^post3-i_5^0 == 0 /\ -result_4^post3+result_4^0 == 0 /\ -x_6^post3+x_6^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post3 == 0 /\ ___retres3_7^0-___retres3_7^post3 == 0 /\ 101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
	
		propagated equality i_5^post4 = i_5^post3
		
		propagated equality x_6^post4 = x_6^post3
		
		propagated equality ___retres3_7^post4 = ___retres3_7^post3
		
		propagated equality ___cil_tmp4_8^post4 = ___cil_tmp4_8^post3
		
		propagated equality result_4^post4 = result_4^post3
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^post3, ___retres3_7^0'=___retres3_7^post3, i_5^0'=i_5^post3, result_4^0'=result_4^post3, x_6^0'=x_6^post3, (0 == 0 /\ 1+i_5^post3-i_5^0 == 0 /\ -result_4^post3+result_4^0 == 0 /\ -x_6^post3+x_6^0 == 0 /\ ___cil_tmp4_8^0-___cil_tmp4_8^post3 == 0 /\ ___retres3_7^0-___retres3_7^post3 == 0 /\ 101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^0, ___retres3_7^0'=___retres3_7^0, i_5^0'=-1+i_5^0, result_4^0'=result_4^0, x_6^0'=x_6^0, (0 == 0 /\ 101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
	
		propagated equality i_5^post3 = -1+i_5^0
		
		propagated equality result_4^post3 = result_4^0
		
		propagated equality x_6^post3 = x_6^0
		
		propagated equality ___cil_tmp4_8^post3 = ___cil_tmp4_8^0
		
		propagated equality ___retres3_7^post3 = ___retres3_7^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^0, ___retres3_7^0'=___retres3_7^0, i_5^0'=-1+i_5^0, result_4^0'=result_4^0, x_6^0'=x_6^0, (0 == 0 /\ 101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^0, ___retres3_7^0'=___retres3_7^0, i_5^0'=-1+i_5^0, result_4^0'=result_4^0, x_6^0'=x_6^0, (101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : ___cil_tmp4_8^0'=___cil_tmp4_8^0, ___retres3_7^0'=___retres3_7^0, i_5^0'=-1+i_5^0, result_4^0'=result_4^0, x_6^0'=x_6^0, (101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : i_5^0'=-1+i_5^0, (101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1

Step with 10

	Trace

	10[T]
	
	Blocked

	[{}, {}]

Step with 8

	Trace

	10[T], 8[(10-x_6^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	10[T]
	
	Blocked

	[{}, {8[T]}]

Step with 11

	Trace

	10[T], 11[(101-i_5^0 <= 0 /\ -9+x_6^0 <= 0)]
	
	Blocked

	[{}, {8[T], 9[T]}, {}]

Accelerate

Start location: l4
Program variables: ___cil_tmp4_8^0 ___retres3_7^0 i_5^0 result_4^0 x_6^0
   8: l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, result_4^0'=0, 10-x_6^0 <= 0, cost: 1
   9: l0 -> l1 : ___cil_tmp4_8^0'=0, ___retres3_7^0'=0, result_4^0'=0, (-9+x_6^0 <= 0 /\ -100+i_5^0 <= 0), cost: 1
  11: l0 -> l0 : i_5^0'=-1+i_5^0, (101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
  12: l0 -> l0 : i_5^0'=-n+i_5^0, (-1+n >= 0 /\ -100-n+i_5^0 >= 0 /\ 9-x_6^0 >= 0), cost: 1
  10: l4 -> l0 : i_5^0'=1000, T, cost: 1

	Loop Acceleration

	Original rule:
	l0 -> l0 : i_5^0'=-1+i_5^0, (101-i_5^0 <= 0 /\ -9+x_6^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : i_5^0'=-n+i_5^0, (-1+n >= 0 /\ -100-n+i_5^0 >= 0 /\ 9-x_6^0 >= 0), cost: 1

		-101+i_5^0 >= 0 [0]: montonic decrease yields -100-n+i_5^0 >= 0
		
		-101+i_5^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -101+i_5^0 >= 0)
		
		9-x_6^0 >= 0 [0]: monotonic increase yields 9-x_6^0 >= 0
		
		Replacement map: {-101+i_5^0 >= 0 -> -100-n+i_5^0 >= 0, 9-x_6^0 >= 0 -> 9-x_6^0 >= 0}

	Trace

	10[T], 12[(-1+n >= 0 /\ -100-n+i_5^0 >= 0 /\ 9-x_6^0 >= 0)]
	
	Blocked

	[{}, {8[T], 9[T]}, {11[T], 12[T]}]

Step with 9

	Trace

	10[T], 12[(-1+n >= 0 /\ -100-n+i_5^0 >= 0 /\ 9-x_6^0 >= 0)], 9[(-9+x_6^0 <= 0 /\ -100+i_5^0 <= 0)]
	
	Blocked

	[{}, {8[T], 9[T]}, {8[T], 11[T], 12[T]}, {}]

Backtrack

	Trace

	10[T], 12[(-1+n >= 0 /\ -100-n+i_5^0 >= 0 /\ 9-x_6^0 >= 0)]
	
	Blocked

	[{}, {8[T], 9[T]}, {8[T], 9[T], 11[T], 12[T]}]

Backtrack

	Trace

	10[T]
	
	Blocked

	[{}, {8[T], 9[T], 12[T]}]

Step with 11

	Trace

	10[T], 11[(101-i_5^0 <= 0 /\ -9+x_6^0 <= 0)]
	
	Blocked

	[{}, {8[T], 9[T], 12[T]}, {}]

Covered

	Trace

	10[T]
	
	Blocked

	[{}, {8[T], 9[T], 11[T], 12[T]}]

Backtrack

	Trace

	Blocked

	[{10[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
