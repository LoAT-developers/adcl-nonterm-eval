unknown

Initial ITS

Start location: [1]
Program variables: i j
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : j'=nondet1, T, cost: 1
   2: [3] -> [4] : -5+i < 0, cost: 1
  10: [3] -> [10] : -5+i >= 0, cost: 1
   3: [4] -> [5] : j'=0, T, cost: 1
   4: [5] -> [6] : (-2+i > 0 /\ -9+j <= 0), cost: 1
   7: [5] -> [8] : (-2+i <= 0 \/ -9+j > 0), cost: 1
   5: [6] -> [7] : j'=1+j, T, cost: 1
   6: [7] -> [5] : T, cost: 1
   8: [8] -> [9] : i'=1+i, T, cost: 1
   9: [9] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: i j
  11: [1] -> [3] : i'=nondet, j'=nondet1, T, cost: 1
  10: [3] -> [10] : -5+i >= 0, cost: 1
  12: [3] -> [5] : j'=0, -5+i < 0, cost: 1
  15: [5] -> [5] : j'=1+j, (-2+i > 0 /\ -9+j <= 0), cost: 1
  16: [5] -> [3] : i'=1+i, (-2+i <= 0 \/ -9+j > 0), cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : i'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : j'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : i'=nondet, j'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : -5+i < 0, cost: 1
	Second rule:
	[4] -> [5] : j'=0, T, cost: 1
	New rule:
	[3] -> [5] : j'=0, -5+i < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[5] -> [6] : (-2+i > 0 /\ -9+j <= 0), cost: 1
	Second rule:
	[6] -> [7] : j'=1+j, T, cost: 1
	New rule:
	[5] -> [7] : j'=1+j, (-2+i > 0 /\ -9+j <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[5] -> [8] : (-2+i <= 0 \/ -9+j > 0), cost: 1
	Second rule:
	[8] -> [9] : i'=1+i, T, cost: 1
	New rule:
	[5] -> [9] : i'=1+i, (-2+i <= 0 \/ -9+j > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 8
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[5] -> [7] : j'=1+j, (-2+i > 0 /\ -9+j <= 0), cost: 1
	Second rule:
	[7] -> [5] : T, cost: 1
	New rule:
	[5] -> [5] : j'=1+j, (-2+i > 0 /\ -9+j <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 13
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[5] -> [9] : i'=1+i, (-2+i <= 0 \/ -9+j > 0), cost: 1
	Second rule:
	[9] -> [3] : T, cost: 1
	New rule:
	[5] -> [3] : i'=1+i, (-2+i <= 0 \/ -9+j > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 9 14

Step with 11

	Trace

	11[T]
	
	Blocked

	[{}, {}]

Step with 10

	Trace

	11[T], 10[(-5+i >= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T]}]

Step with 12

	Trace

	11[T], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T]}, {}]

Step with 15

	Trace

	11[T], 12[(-5+i < 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: i j
  11: [1] -> [3] : i'=nondet, j'=nondet1, T, cost: 1
  10: [3] -> [10] : -5+i >= 0, cost: 1
  12: [3] -> [5] : j'=0, -5+i < 0, cost: 1
  15: [5] -> [5] : j'=1+j, (-2+i > 0 /\ -9+j <= 0), cost: 1
  16: [5] -> [3] : i'=1+i, (-2+i <= 0 \/ -9+j > 0), cost: 1
  17: [5] -> [5] : j'=n+j, (-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[5] -> [5] : j'=1+j, (-2+i > 0 /\ -9+j <= 0), cost: 1
	New rule:
	[5] -> [5] : j'=n+j, (-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0), cost: 1

		-2+i > 0 [0]: monotonic increase yields -2+i > 0
		
		9-j >= 0 [0]: montonic decrease yields 10-n-j >= 0
		
		9-j >= 0 [1]: eventual increase yields (1 <= 0 /\ 9-j >= 0)
		
		Replacement map: {-2+i > 0 -> -2+i > 0, 9-j >= 0 -> 10-n-j >= 0}

	Trace

	11[T], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T]}, {}, {15[T], 17[T]}]

Step with 16

	Trace

	11[T], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)], 16[(-9+j > 0)]
	
	Blocked

	[{}, {10[T]}, {}, {15[T], 17[T]}, {}]

Accelerate

Start location: [1]
Program variables: i j
  11: [1] -> [3] : i'=nondet, j'=nondet1, T, cost: 1
  10: [3] -> [10] : -5+i >= 0, cost: 1
  12: [3] -> [5] : j'=0, -5+i < 0, cost: 1
  18: [3] -> [3] : i'=n2+i, j'=10, (-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0), cost: 1
  15: [5] -> [5] : j'=1+j, (-2+i > 0 /\ -9+j <= 0), cost: 1
  16: [5] -> [3] : i'=1+i, (-2+i <= 0 \/ -9+j > 0), cost: 1
  17: [5] -> [5] : j'=n+j, (-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : i'=1+i, j'=10, (-2+i > 0 /\ -5+i < 0), cost: 1
	New rule:
	[3] -> [3] : i'=n2+i, j'=10, (-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0), cost: 1

		-2+i > 0 [0]: monotonic increase yields -2+i > 0
		
		5-i > 0 [0]: montonic decrease yields 6-n2-i > 0
		
		5-i > 0 [1]: eventual increase yields (1 <= 0 /\ 5-i > 0)
		
		Replacement map: {-2+i > 0 -> -2+i > 0, 5-i > 0 -> 6-n2-i > 0}

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)]
	
	Blocked

	[{}, {10[T]}, {18[T]}]

Step with 10

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 10[(-5+i >= 0)]
	
	Blocked

	[{}, {10[T]}, {18[T]}, {}]

Backtrack

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}]

Step with 12

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}, {}]

Step with 17

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}, {16[T]}, {17[T]}]

Step with 15

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}, {16[T]}, {17[T]}, {}]

Covered

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}, {16[T]}, {15[T], 17[T]}]

Step with 16

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)], 16[(-9+j > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}, {16[T]}, {15[T], 17[T]}, {}]

Covered

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}, {16[T]}, {15[T], 16[-9+j > 0], 17[T]}]

Backtrack

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}, {16[T], 17[T]}]

Step with 15

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}, {16[T], 17[T]}, {}]

Covered

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 18[T]}, {15[T], 16[T], 17[T]}]

Backtrack

	Trace

	11[T], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 12[T], 18[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T], 18[T]}]

Step with 12

	Trace

	11[T], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {}]

Step with 15

	Trace

	11[T], 12[(-5+i < 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {}, {}]

Covered

	Trace

	11[T], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {15[T]}]

Step with 16

	Trace

	11[T], 12[(-5+i < 0)], 16[(-2+i <= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {15[T]}, {}]

Accelerate

Start location: [1]
Program variables: i j
  11: [1] -> [3] : i'=nondet, j'=nondet1, T, cost: 1
  10: [3] -> [10] : -5+i >= 0, cost: 1
  12: [3] -> [5] : j'=0, -5+i < 0, cost: 1
  18: [3] -> [3] : i'=n2+i, j'=10, (-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0), cost: 1
  19: [3] -> [3] : i'=n4+i, j'=0, (5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0), cost: 1
  15: [5] -> [5] : j'=1+j, (-2+i > 0 /\ -9+j <= 0), cost: 1
  16: [5] -> [3] : i'=1+i, (-2+i <= 0 \/ -9+j > 0), cost: 1
  17: [5] -> [5] : j'=n+j, (-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : i'=1+i, j'=0, (-2+i <= 0 /\ -5+i < 0), cost: 1
	New rule:
	[3] -> [3] : i'=n4+i, j'=0, (5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0), cost: 1

		5-i > 0 [0]: monotonic increase yields 5-i > 0, dependencies: 2-i >= 0
		
		5-i > 0 [1]: montonic decrease yields 6-n4-i > 0
		
		5-i > 0 [2]: eventual increase yields (1 <= 0 /\ 5-i > 0)
		
		2-i >= 0 [0]: montonic decrease yields 3-n4-i >= 0
		
		2-i >= 0 [1]: eventual increase yields (1 <= 0 /\ 2-i >= 0)
		
		Replacement map: {5-i > 0 -> 5-i > 0, 2-i >= 0 -> 3-n4-i >= 0}

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {19[T]}]

Step with 12

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {}]

Step with 16

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)], 16[(-2+i <= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {}, {}]

Covered

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {16[-2+i <= 0]}]

Step with 17

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {16[T]}, {17[T]}]

Step with 15

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {16[T]}, {17[T]}, {}]

Covered

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {16[T]}, {15[T], 17[T]}]

Step with 16

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)], 16[(-9+j > 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {16[T]}, {15[T], 17[T]}, {}]

Covered

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {16[T]}, {15[T], 16[-9+j > 0], 17[T]}]

Backtrack

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {16[T], 17[T]}]

Step with 15

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {16[T], 17[T]}, {}]

Covered

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 19[T]}, {15[T], 16[T], 17[T]}]

Backtrack

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}]

Step with 18

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {18[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 10

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 10[(-5+i >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {18[T], 19[T]}, {}]

Backtrack

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}]

Step with 12

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}, {}]

Step with 15

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}, {}, {}]

Covered

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}, {15[T]}]

Step with 17

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}, {15[T], 16[T]}, {17[T]}]

Step with 15

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}, {15[T], 16[T]}, {17[T]}, {}]

Covered

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}, {15[T], 16[T]}, {15[T], 17[T]}]

Step with 16

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)], 16[(-9+j > 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}, {15[T], 16[T]}, {15[T], 17[T]}, {}]

Covered

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}, {15[T], 16[T]}, {15[T], 16[-9+j > 0], 17[T]}]

Backtrack

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 18[T], 19[T]}, {15[T], 16[T], 17[T]}]

Backtrack

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)], 18[(-2+i > 0 /\ -1+n2 >= 0 /\ 6-n2-i > 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 19[T]}, {10[T], 12[T], 18[T], 19[T]}]

Backtrack

	Trace

	11[T], 19[(5-i > 0 /\ -1+n4 >= 0 /\ 3-n4-i >= 0)]
	
	Blocked

	[{}, {10[T], 18[T]}, {10[T], 12[T], 18[T], 19[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}]

Step with 12

	Trace

	11[T], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {}]

Step with 16

	Trace

	11[T], 12[(-5+i < 0)], 16[(-2+i <= 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {}, {}]

Covered

	Trace

	11[T], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {16[-2+i <= 0]}]

Step with 17

	Trace

	11[T], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {16[T]}, {17[T]}]

Step with 15

	Trace

	11[T], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {16[T]}, {17[T]}, {}]

Covered

	Trace

	11[T], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {16[T]}, {15[T], 17[T]}]

Step with 16

	Trace

	11[T], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)], 16[(-9+j > 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {16[T]}, {15[T], 17[T]}, {}]

Covered

	Trace

	11[T], 12[(-5+i < 0)], 17[(-2+i > 0 /\ 10-n-j >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {16[T]}, {15[T], 16[-9+j > 0], 17[T]}]

Backtrack

	Trace

	11[T], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {16[T], 17[T]}]

Step with 15

	Trace

	11[T], 12[(-5+i < 0)], 15[(-2+i > 0 /\ -9+j <= 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {16[T], 17[T]}, {}]

Covered

	Trace

	11[T], 12[(-5+i < 0)]
	
	Blocked

	[{}, {10[T], 18[T], 19[T]}, {15[T], 16[T], 17[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T], 12[T], 18[T], 19[T]}]

Backtrack

	Trace

	Blocked

	[{11[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
