unknown

Initial ITS

Start location: [1]
Program variables: q y
   0: [1] -> [2] : q'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : q > 0, cost: 1
  10: [3] -> [10] : q <= 0, cost: 1
   3: [4] -> [6] : y > 0, cost: 1
   6: [4] -> [8] : y <= 0, cost: 1
   9: [5] -> [3] : T, cost: 1
   4: [6] -> [7] : q'=-1-y+q, T, cost: 1
   5: [7] -> [5] : T, cost: 1
   7: [8] -> [9] : q'=-1+y+q, T, cost: 1
   8: [9] -> [5] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: q y
  11: [1] -> [3] : q'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [4] : q > 0, cost: 1
  10: [3] -> [10] : q <= 0, cost: 1
  14: [4] -> [5] : q'=-1-y+q, y > 0, cost: 1
  15: [4] -> [5] : q'=-1+y+q, y <= 0, cost: 1
   9: [5] -> [3] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : q'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : q'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[4] -> [6] : y > 0, cost: 1
	Second rule:
	[6] -> [7] : q'=-1-y+q, T, cost: 1
	New rule:
	[4] -> [7] : q'=-1-y+q, y > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[4] -> [8] : y <= 0, cost: 1
	Second rule:
	[8] -> [9] : q'=-1+y+q, T, cost: 1
	New rule:
	[4] -> [9] : q'=-1+y+q, y <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[4] -> [7] : q'=-1-y+q, y > 0, cost: 1
	Second rule:
	[7] -> [5] : T, cost: 1
	New rule:
	[4] -> [5] : q'=-1-y+q, y > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 12
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[4] -> [9] : q'=-1+y+q, y <= 0, cost: 1
	Second rule:
	[9] -> [5] : T, cost: 1
	New rule:
	[4] -> [5] : q'=-1+y+q, y <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 13

Step with 11

	Trace

	11[T]
	
	Blocked

	[{}, {}]

Step with 10

	Trace

	11[T], 10[(q <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T]}]

Step with 2

	Trace

	11[T], 2[(q > 0)]
	
	Blocked

	[{}, {10[T]}, {}]

Step with 14

	Trace

	11[T], 2[(q > 0)], 14[(y > 0)]
	
	Blocked

	[{}, {10[T]}, {}, {}]

Step with 9

	Trace

	11[T], 2[(q > 0)], 14[(y > 0)], 9[T]
	
	Blocked

	[{}, {10[T]}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: q y
  11: [1] -> [3] : q'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [4] : q > 0, cost: 1
  10: [3] -> [10] : q <= 0, cost: 1
  16: [3] -> [3] : q'=-n-n*y+q, (1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0), cost: 1
  14: [4] -> [5] : q'=-1-y+q, y > 0, cost: 1
  15: [4] -> [5] : q'=-1+y+q, y <= 0, cost: 1
   9: [5] -> [3] : T, cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : q'=-1-y+q, (y > 0 /\ q > 0), cost: 1
	New rule:
	[3] -> [3] : q'=-n-n*y+q, (1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0), cost: 1

		y > 0 [0]: monotonic increase yields y > 0
		
		q > 0 [0]: montonic decrease yields 1-n-(-1+n)*y+q > 0, dependencies: y > 0
		
		q > 0 [1]: eventual increase yields (1+y <= 0 /\ q > 0)
		
		Replacement map: {y > 0 -> y > 0, q > 0 -> 1-n-(-1+n)*y+q > 0}

	Trace

	11[T], 16[(1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0)]
	
	Blocked

	[{}, {10[T]}, {16[T]}]

Step with 10

	Trace

	11[T], 16[(1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0)], 10[(q <= 0)]
	
	Blocked

	[{}, {10[T]}, {16[T]}, {}]

Backtrack

	Trace

	11[T], 16[(1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}]

Step with 2

	Trace

	11[T], 16[(1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0)], 2[(q > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {}]

Step with 14

	Trace

	11[T], 16[(1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0)], 2[(q > 0)], 14[(y > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {}, {}]

Step with 9

	Trace

	11[T], 16[(1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0)], 2[(q > 0)], 14[(y > 0)], 9[T]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {}, {}, {}]

Covered

	Trace

	11[T], 16[(1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0)], 2[(q > 0)], 14[(y > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {}, {9[T]}]

Backtrack

	Trace

	11[T], 16[(1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0)], 2[(q > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {14[T]}]

Backtrack

	Trace

	11[T], 16[(1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0)]
	
	Blocked

	[{}, {10[T]}, {2[T], 10[T], 16[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T], 16[T]}]

Step with 2

	Trace

	11[T], 2[(q > 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {}]

Step with 14

	Trace

	11[T], 2[(q > 0)], 14[(y > 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {}, {}]

Step with 9

	Trace

	11[T], 2[(q > 0)], 14[(y > 0)], 9[T]
	
	Blocked

	[{}, {10[T], 16[T]}, {}, {}, {}]

Covered

	Trace

	11[T], 2[(q > 0)], 14[(y > 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {}, {9[T]}]

Backtrack

	Trace

	11[T], 2[(q > 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {14[T]}]

Step with 15

	Trace

	11[T], 2[(q > 0)], 15[(y <= 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {14[T]}, {}]

Step with 9

	Trace

	11[T], 2[(q > 0)], 15[(y <= 0)], 9[T]
	
	Blocked

	[{}, {10[T], 16[T]}, {14[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: q y
  11: [1] -> [3] : q'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [4] : q > 0, cost: 1
  10: [3] -> [10] : q <= 0, cost: 1
  16: [3] -> [3] : q'=-n-n*y+q, (1-n-(-1+n)*y+q > 0 /\ -1+n >= 0 /\ y > 0), cost: 1
  17: [3] -> [3] : q'=n2*y-n2+q, (-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0), cost: 1
  14: [4] -> [5] : q'=-1-y+q, y > 0, cost: 1
  15: [4] -> [5] : q'=-1+y+q, y <= 0, cost: 1
   9: [5] -> [3] : T, cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : q'=-1+y+q, (y <= 0 /\ q > 0), cost: 1
	New rule:
	[3] -> [3] : q'=n2*y-n2+q, (-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0), cost: 1

		-y >= 0 [0]: monotonic increase yields -y >= 0
		
		q > 0 [0]: montonic decrease yields 1+(-1+n2)*y-n2+q > 0, dependencies: -y >= 0
		
		q > 0 [1]: eventual increase yields (1-y <= 0 /\ q > 0), dependencies: -y >= 0
		
		Replacement map: {-y >= 0 -> -y >= 0, q > 0 -> 1+(-1+n2)*y-n2+q > 0}

	Trace

	11[T], 17[(-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {17[T]}]

Step with 10

	Trace

	11[T], 17[(-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0)], 10[(q <= 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {17[T]}, {}]

Backtrack

	Trace

	11[T], 17[(-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {10[T], 17[T]}]

Step with 2

	Trace

	11[T], 17[(-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0)], 2[(q > 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {10[T], 17[T]}, {}]

Step with 15

	Trace

	11[T], 17[(-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0)], 2[(q > 0)], 15[(y <= 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {10[T], 17[T]}, {}, {}]

Step with 9

	Trace

	11[T], 17[(-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0)], 2[(q > 0)], 15[(y <= 0)], 9[T]
	
	Blocked

	[{}, {10[T], 16[T]}, {10[T], 17[T]}, {}, {}, {}]

Covered

	Trace

	11[T], 17[(-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0)], 2[(q > 0)], 15[(y <= 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {10[T], 17[T]}, {}, {9[T]}]

Backtrack

	Trace

	11[T], 17[(-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0)], 2[(q > 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {10[T], 17[T]}, {15[T]}]

Backtrack

	Trace

	11[T], 17[(-1+n2 >= 0 /\ 1+(-1+n2)*y-n2+q > 0 /\ -y >= 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {2[T], 10[T], 17[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}]

Step with 2

	Trace

	11[T], 2[(q > 0)]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}, {}]

Step with 15

	Trace

	11[T], 2[(q > 0)], 15[(y <= 0)]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}, {}, {}]

Step with 9

	Trace

	11[T], 2[(q > 0)], 15[(y <= 0)], 9[T]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}, {}, {}, {}]

Covered

	Trace

	11[T], 2[(q > 0)], 15[(y <= 0)]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}, {}, {9[T]}]

Backtrack

	Trace

	11[T], 2[(q > 0)]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}, {15[T]}]

Step with 14

	Trace

	11[T], 2[(q > 0)], 14[(y > 0)]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}, {15[T]}, {}]

Step with 9

	Trace

	11[T], 2[(q > 0)], 14[(y > 0)], 9[T]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}, {15[T]}, {}, {}]

Covered

	Trace

	11[T], 2[(q > 0)], 14[(y > 0)]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}, {15[T]}, {9[T]}]

Backtrack

	Trace

	11[T], 2[(q > 0)]
	
	Blocked

	[{}, {10[T], 16[T], 17[T]}, {14[T], 15[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {2[T], 10[T], 16[T], 17[T]}]

Backtrack

	Trace

	Blocked

	[{11[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
