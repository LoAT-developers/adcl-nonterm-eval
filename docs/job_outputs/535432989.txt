WORST_CASE(Omega(0),?)

Initial ITS
Start location: l5
   0: l0 -> l1 : i_5^0'=i_5^post0, __cil_tmp4_8^0'=__cil_tmp4_8^post0, __retres3_7^0'=__retres3_7^post0, Result_4^0'=Result_4^post0, x_6^0'=x_6^post0, __const_100^0'=__const_100^post0, (__retres3_7^post0 == 0 /\ Result_4^post0-__cil_tmp4_8^post0 == 0 /\ -__const_100^post0+__const_100^0 == 0 /\ 1-i_5^0+__const_100^0 <= 0 /\ x_6^0-x_6^post0 == 0 /\ -__retres3_7^post0+__cil_tmp4_8^post0 == 0 /\ i_5^0-i_5^post0 == 0), cost: 1
   1: l0 -> l2 : i_5^0'=i_5^post1, __cil_tmp4_8^0'=__cil_tmp4_8^post1, __retres3_7^0'=__retres3_7^post1, Result_4^0'=Result_4^post1, x_6^0'=x_6^post1, __const_100^0'=__const_100^post1, (-1-i_5^0+i_5^post1 == 0 /\ i_5^0-__const_100^0 <= 0 /\ -x_6^post1+x_6^0 == 0 /\ -Result_4^post1+Result_4^0 == 0 /\ -__const_100^post1+__const_100^0 == 0 /\ __retres3_7^0-__retres3_7^post1 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post1 == 0 /\ 1-x_6^0 <= 0), cost: 1
   2: l2 -> l0 : i_5^0'=i_5^post2, __cil_tmp4_8^0'=__cil_tmp4_8^post2, __retres3_7^0'=__retres3_7^post2, Result_4^0'=Result_4^post2, x_6^0'=x_6^post2, __const_100^0'=__const_100^post2, (-__const_100^post2+__const_100^0 == 0 /\ Result_4^0-Result_4^post2 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post2 == 0 /\ i_5^0-i_5^post2 == 0 /\ __retres3_7^0-__retres3_7^post2 == 0 /\ -x_6^post2+x_6^0 == 0), cost: 1
   3: l3 -> l4 : i_5^0'=i_5^post3, __cil_tmp4_8^0'=__cil_tmp4_8^post3, __retres3_7^0'=__retres3_7^post3, Result_4^0'=Result_4^post3, x_6^0'=x_6^post3, __const_100^0'=__const_100^post3, (Result_4^0-Result_4^post3 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ __retres3_7^0-__retres3_7^post3 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post3 == 0 /\ -x_6^post3+x_6^0 == 0 /\ i_5^post3 == 0), cost: 1
   4: l4 -> l1 : i_5^0'=i_5^post4, __cil_tmp4_8^0'=__cil_tmp4_8^post4, __retres3_7^0'=__retres3_7^post4, Result_4^0'=Result_4^post4, x_6^0'=x_6^post4, __const_100^0'=__const_100^post4, (i_5^0-__const_100^0 <= 0 /\ -__cil_tmp4_8^post4+Result_4^post4 == 0 /\ __retres3_7^post4 == 0 /\ x_6^0 <= 0 /\ __cil_tmp4_8^post4-__retres3_7^post4 == 0 /\ i_5^0-i_5^post4 == 0 /\ -__const_100^post4+__const_100^0 == 0 /\ -x_6^post4+x_6^0 == 0), cost: 1
   5: l4 -> l0 : i_5^0'=i_5^post5, __cil_tmp4_8^0'=__cil_tmp4_8^post5, __retres3_7^0'=__retres3_7^post5, Result_4^0'=Result_4^post5, x_6^0'=x_6^post5, __const_100^0'=__const_100^post5, (-1-i_5^0+i_5^post5 == 0 /\ i_5^0-__const_100^0 <= 0 /\ -__const_100^post5+__const_100^0 == 0 /\ -__retres3_7^post5+__retres3_7^0 == 0 /\ 1-x_6^0 <= 0 /\ Result_4^0-Result_4^post5 == 0 /\ x_6^0-x_6^post5 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post5 == 0), cost: 1
   6: l5 -> l3 : i_5^0'=i_5^post6, __cil_tmp4_8^0'=__cil_tmp4_8^post6, __retres3_7^0'=__retres3_7^post6, Result_4^0'=Result_4^post6, x_6^0'=x_6^post6, __const_100^0'=__const_100^post6, (i_5^0-i_5^post6 == 0 /\ -__const_100^post6+__const_100^0 == 0 /\ -__retres3_7^post6+__retres3_7^0 == 0 /\ x_6^0-x_6^post6 == 0 /\ -Result_4^post6+Result_4^0 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post6 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l5
   1: l0 -> l2 : i_5^0'=i_5^post1, __cil_tmp4_8^0'=__cil_tmp4_8^post1, __retres3_7^0'=__retres3_7^post1, Result_4^0'=Result_4^post1, x_6^0'=x_6^post1, __const_100^0'=__const_100^post1, (-1-i_5^0+i_5^post1 == 0 /\ i_5^0-__const_100^0 <= 0 /\ -x_6^post1+x_6^0 == 0 /\ -Result_4^post1+Result_4^0 == 0 /\ -__const_100^post1+__const_100^0 == 0 /\ __retres3_7^0-__retres3_7^post1 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post1 == 0 /\ 1-x_6^0 <= 0), cost: 1
   2: l2 -> l0 : i_5^0'=i_5^post2, __cil_tmp4_8^0'=__cil_tmp4_8^post2, __retres3_7^0'=__retres3_7^post2, Result_4^0'=Result_4^post2, x_6^0'=x_6^post2, __const_100^0'=__const_100^post2, (-__const_100^post2+__const_100^0 == 0 /\ Result_4^0-Result_4^post2 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post2 == 0 /\ i_5^0-i_5^post2 == 0 /\ __retres3_7^0-__retres3_7^post2 == 0 /\ -x_6^post2+x_6^0 == 0), cost: 1
   3: l3 -> l4 : i_5^0'=i_5^post3, __cil_tmp4_8^0'=__cil_tmp4_8^post3, __retres3_7^0'=__retres3_7^post3, Result_4^0'=Result_4^post3, x_6^0'=x_6^post3, __const_100^0'=__const_100^post3, (Result_4^0-Result_4^post3 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ __retres3_7^0-__retres3_7^post3 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post3 == 0 /\ -x_6^post3+x_6^0 == 0 /\ i_5^post3 == 0), cost: 1
   5: l4 -> l0 : i_5^0'=i_5^post5, __cil_tmp4_8^0'=__cil_tmp4_8^post5, __retres3_7^0'=__retres3_7^post5, Result_4^0'=Result_4^post5, x_6^0'=x_6^post5, __const_100^0'=__const_100^post5, (-1-i_5^0+i_5^post5 == 0 /\ i_5^0-__const_100^0 <= 0 /\ -__const_100^post5+__const_100^0 == 0 /\ -__retres3_7^post5+__retres3_7^0 == 0 /\ 1-x_6^0 <= 0 /\ Result_4^0-Result_4^post5 == 0 /\ x_6^0-x_6^post5 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post5 == 0), cost: 1
   6: l5 -> l3 : i_5^0'=i_5^post6, __cil_tmp4_8^0'=__cil_tmp4_8^post6, __retres3_7^0'=__retres3_7^post6, Result_4^0'=Result_4^post6, x_6^0'=x_6^post6, __const_100^0'=__const_100^post6, (i_5^0-i_5^post6 == 0 /\ -__const_100^post6+__const_100^0 == 0 /\ -__retres3_7^post6+__retres3_7^0 == 0 /\ x_6^0-x_6^post6 == 0 /\ -Result_4^post6+Result_4^0 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post6 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : i_5^0'=i_5^post1, __cil_tmp4_8^0'=__cil_tmp4_8^post1, __retres3_7^0'=__retres3_7^post1, Result_4^0'=Result_4^post1, x_6^0'=x_6^post1, __const_100^0'=__const_100^post1, (-1-i_5^0+i_5^post1 == 0 /\ i_5^0-__const_100^0 <= 0 /\ -x_6^post1+x_6^0 == 0 /\ -Result_4^post1+Result_4^0 == 0 /\ -__const_100^post1+__const_100^0 == 0 /\ __retres3_7^0-__retres3_7^post1 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post1 == 0 /\ 1-x_6^0 <= 0), cost: 1
New rule:
l0 -> l2 : i_5^0'=1+i_5^0, (i_5^0-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : i_5^0'=i_5^post2, __cil_tmp4_8^0'=__cil_tmp4_8^post2, __retres3_7^0'=__retres3_7^post2, Result_4^0'=Result_4^post2, x_6^0'=x_6^post2, __const_100^0'=__const_100^post2, (-__const_100^post2+__const_100^0 == 0 /\ Result_4^0-Result_4^post2 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post2 == 0 /\ i_5^0-i_5^post2 == 0 /\ __retres3_7^0-__retres3_7^post2 == 0 /\ -x_6^post2+x_6^0 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l4 : i_5^0'=i_5^post3, __cil_tmp4_8^0'=__cil_tmp4_8^post3, __retres3_7^0'=__retres3_7^post3, Result_4^0'=Result_4^post3, x_6^0'=x_6^post3, __const_100^0'=__const_100^post3, (Result_4^0-Result_4^post3 == 0 /\ -__const_100^post3+__const_100^0 == 0 /\ __retres3_7^0-__retres3_7^post3 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post3 == 0 /\ -x_6^post3+x_6^0 == 0 /\ i_5^post3 == 0), cost: 1
New rule:
l3 -> l4 : i_5^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l0 : i_5^0'=i_5^post5, __cil_tmp4_8^0'=__cil_tmp4_8^post5, __retres3_7^0'=__retres3_7^post5, Result_4^0'=Result_4^post5, x_6^0'=x_6^post5, __const_100^0'=__const_100^post5, (-1-i_5^0+i_5^post5 == 0 /\ i_5^0-__const_100^0 <= 0 /\ -__const_100^post5+__const_100^0 == 0 /\ -__retres3_7^post5+__retres3_7^0 == 0 /\ 1-x_6^0 <= 0 /\ Result_4^0-Result_4^post5 == 0 /\ x_6^0-x_6^post5 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post5 == 0), cost: 1
New rule:
l4 -> l0 : i_5^0'=1+i_5^0, (i_5^0-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 1

Applied preprocessing
Original rule:
l5 -> l3 : i_5^0'=i_5^post6, __cil_tmp4_8^0'=__cil_tmp4_8^post6, __retres3_7^0'=__retres3_7^post6, Result_4^0'=Result_4^post6, x_6^0'=x_6^post6, __const_100^0'=__const_100^post6, (i_5^0-i_5^post6 == 0 /\ -__const_100^post6+__const_100^0 == 0 /\ -__retres3_7^post6+__retres3_7^0 == 0 /\ x_6^0-x_6^post6 == 0 /\ -Result_4^post6+Result_4^0 == 0 /\ __cil_tmp4_8^0-__cil_tmp4_8^post6 == 0), cost: 1
New rule:
l5 -> l3 : TRUE, cost: 1

Simplified rules
Start location: l5
   7: l0 -> l2 : i_5^0'=1+i_5^0, (i_5^0-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 1
   8: l2 -> l0 : TRUE, cost: 1
   9: l3 -> l4 : i_5^0'=0, TRUE, cost: 1
  10: l4 -> l0 : i_5^0'=1+i_5^0, (i_5^0-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 1
  11: l5 -> l3 : TRUE, cost: 1


Eliminating location l3 by chaining:

Applied chaining
First rule:
l5 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l4 : i_5^0'=0, TRUE, cost: 1
New rule:
l5 -> l4 : i_5^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 9 11

Eliminating location l4 by chaining:

Applied chaining
First rule:
l5 -> l4 : i_5^0'=0, TRUE, cost: 2
Second rule:
l4 -> l0 : i_5^0'=1+i_5^0, (i_5^0-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 1
New rule:
l5 -> l0 : i_5^0'=1, (-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 3

Applied simplification
Original rule:
l5 -> l0 : i_5^0'=1, (-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 3
New rule:
l5 -> l0 : i_5^0'=1, (-1+x_6^0 >= 0 /\ __const_100^0 >= 0), cost: 3

Applied deletion
Removed the following rules: 10 12

Eliminating location l2 by chaining:

Applied chaining
First rule:
l0 -> l2 : i_5^0'=1+i_5^0, (i_5^0-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 1
Second rule:
l2 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : i_5^0'=1+i_5^0, (i_5^0-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 2

Applied deletion
Removed the following rules: 7 8

Eliminated locations on linear paths
Start location: l5
  14: l0 -> l0 : i_5^0'=1+i_5^0, (i_5^0-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 2
  13: l5 -> l0 : i_5^0'=1, (-1+x_6^0 >= 0 /\ __const_100^0 >= 0), cost: 3


Applied acceleration
Original rule:
l0 -> l0 : i_5^0'=1+i_5^0, (i_5^0-__const_100^0 <= 0 /\ -1+x_6^0 >= 0), cost: 2
New rule:
l0 -> l0 : i_5^0'=i_5^0+n, (-1+x_6^0 >= 0 /\ 1-i_5^0+__const_100^0-n >= 0 /\ n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ecemha.txt

Applied instantiation
Original rule:
l0 -> l0 : i_5^0'=i_5^0+n, (-1+x_6^0 >= 0 /\ 1-i_5^0+__const_100^0-n >= 0 /\ n >= 0), cost: 2*n
New rule:
l0 -> l0 : i_5^0'=1+__const_100^0, (0 >= 0 /\ 1-i_5^0+__const_100^0 >= 0 /\ -1+x_6^0 >= 0), cost: 2-2*i_5^0+2*__const_100^0

Applied simplification
Original rule:
l0 -> l0 : i_5^0'=1+__const_100^0, (0 >= 0 /\ 1-i_5^0+__const_100^0 >= 0 /\ -1+x_6^0 >= 0), cost: 2-2*i_5^0+2*__const_100^0
New rule:
l0 -> l0 : i_5^0'=1+__const_100^0, (1-i_5^0+__const_100^0 >= 0 /\ -1+x_6^0 >= 0), cost: 2-2*i_5^0+2*__const_100^0

Applied deletion
Removed the following rules: 14

Accelerated simple loops
Start location: l5
  16: l0 -> l0 : i_5^0'=1+__const_100^0, (1-i_5^0+__const_100^0 >= 0 /\ -1+x_6^0 >= 0), cost: 2-2*i_5^0+2*__const_100^0
  13: l5 -> l0 : i_5^0'=1, (-1+x_6^0 >= 0 /\ __const_100^0 >= 0), cost: 3


Applied chaining
First rule:
l5 -> l0 : i_5^0'=1, (-1+x_6^0 >= 0 /\ __const_100^0 >= 0), cost: 3
Second rule:
l0 -> l0 : i_5^0'=1+__const_100^0, (1-i_5^0+__const_100^0 >= 0 /\ -1+x_6^0 >= 0), cost: 2-2*i_5^0+2*__const_100^0
New rule:
l5 -> l0 : i_5^0'=1+__const_100^0, (-1+x_6^0 >= 0 /\ __const_100^0 >= 0), cost: 3+2*__const_100^0

Applied deletion
Removed the following rules: 16

Chained accelerated rules with incoming rules
Start location: l5
  13: l5 -> l0 : i_5^0'=1, (-1+x_6^0 >= 0 /\ __const_100^0 >= 0), cost: 3
  17: l5 -> l0 : i_5^0'=1+__const_100^0, (-1+x_6^0 >= 0 /\ __const_100^0 >= 0), cost: 3+2*__const_100^0


Removed unreachable locations and irrelevant leafs
Start location: l5
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

