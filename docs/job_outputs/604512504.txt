NO

Initial ITS

Start location: [1]
Program variables: a am b bm
   0: [1] -> [2] : am'=a, T, cost: 1
   1: [2] -> [3] : bm'=b, T, cost: 1
   2: [3] -> [4] : (-bm+am < 0 \/ -bm+am > 0), cost: 1
  10: [3] -> [10] : (-bm+am <= 0 /\ -bm+am >= 0), cost: 1
   3: [4] -> [6] : -bm+am > 0, cost: 1
   6: [4] -> [8] : -bm+am <= 0, cost: 1
   9: [5] -> [3] : T, cost: 1
   4: [6] -> [7] : bm'=b+bm, T, cost: 1
   5: [7] -> [5] : T, cost: 1
   7: [8] -> [9] : am'=a+am, T, cost: 1
   8: [9] -> [5] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: a am b bm
  11: [1] -> [3] : am'=a, bm'=b, T, cost: 1
   2: [3] -> [4] : (-bm+am < 0 \/ -bm+am > 0), cost: 1
  10: [3] -> [10] : (-bm+am <= 0 /\ -bm+am >= 0), cost: 1
  14: [4] -> [5] : bm'=b+bm, -bm+am > 0, cost: 1
  15: [4] -> [5] : am'=a+am, -bm+am <= 0, cost: 1
   9: [5] -> [3] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : am'=a, T, cost: 1
	Second rule:
	[2] -> [3] : bm'=b, T, cost: 1
	New rule:
	[1] -> [3] : am'=a, bm'=b, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[4] -> [6] : -bm+am > 0, cost: 1
	Second rule:
	[6] -> [7] : bm'=b+bm, T, cost: 1
	New rule:
	[4] -> [7] : bm'=b+bm, -bm+am > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[4] -> [8] : -bm+am <= 0, cost: 1
	Second rule:
	[8] -> [9] : am'=a+am, T, cost: 1
	New rule:
	[4] -> [9] : am'=a+am, -bm+am <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[4] -> [7] : bm'=b+bm, -bm+am > 0, cost: 1
	Second rule:
	[7] -> [5] : T, cost: 1
	New rule:
	[4] -> [5] : bm'=b+bm, -bm+am > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 12
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[4] -> [9] : am'=a+am, -bm+am <= 0, cost: 1
	Second rule:
	[9] -> [5] : T, cost: 1
	New rule:
	[4] -> [5] : am'=a+am, -bm+am <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 13

Step with 11

	Trace

	11[T]
	
	Blocked

	[{}, {}]

Step with 10

	Trace

	11[T], 10[(-bm+am <= 0 /\ -bm+am >= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T]}]

Step with 2

	Trace

	11[T], 2[(-bm+am > 0)]
	
	Blocked

	[{}, {10[T]}, {}]

Step with 14

	Trace

	11[T], 2[(-bm+am > 0)], 14[(-bm+am > 0)]
	
	Blocked

	[{}, {10[T]}, {}, {}]

Step with 9

	Trace

	11[T], 2[(-bm+am > 0)], 14[(-bm+am > 0)], 9[T]
	
	Blocked

	[{}, {10[T]}, {}, {}, {}]

Nonterm

Start location: [1]
Program variables: a am b bm
  11: [1] -> [3] : am'=a, bm'=b, T, cost: 1
   2: [3] -> [4] : (-bm+am < 0 \/ -bm+am > 0), cost: 1
  10: [3] -> [10] : (-bm+am <= 0 /\ -bm+am >= 0), cost: 1
  16: [3] -> LoAT_sink : (-bm+am > 0 /\ b <= 0), cost: NONTERM
  17: [3] -> [3] : bm'=n*b+bm, (-b*(-1+n)-bm+am > 0 /\ -bm+am > 0 /\ -1+n >= 0), cost: 1
  14: [4] -> [5] : bm'=b+bm, -bm+am > 0, cost: 1
  15: [4] -> [5] : am'=a+am, -bm+am <= 0, cost: 1
   9: [5] -> [3] : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	[3] -> [3] : bm'=b+bm, -bm+am > 0, cost: 1
	New rule:
	[3] -> LoAT_sink : (-bm+am > 0 /\ b <= 0), cost: NONTERM

		-bm+am > 0 [0]: eventual decrease yields (-b*(-1+n)-bm+am > 0 /\ -bm+am > 0)
		
		-bm+am > 0 [1]: eventual increase yields (-bm+am > 0 /\ b <= 0)
		
		Replacement map: {-bm+am > 0 -> (-bm+am > 0 /\ b <= 0)}

	Loop Acceleration

	Original rule:
	[3] -> [3] : bm'=b+bm, -bm+am > 0, cost: 1
	New rule:
	[3] -> [3] : bm'=n*b+bm, (-b*(-1+n)-bm+am > 0 /\ -bm+am > 0 /\ -1+n >= 0), cost: 1

		-bm+am > 0 [0]: eventual decrease yields (-b*(-1+n)-bm+am > 0 /\ -bm+am > 0)
		
		-bm+am > 0 [1]: eventual increase yields (-bm+am > 0 /\ b <= 0)
		
		Replacement map: {-bm+am > 0 -> (-b*(-1+n)-bm+am > 0 /\ -bm+am > 0)}

Step with 16

	Trace

	11[T], 16[(-bm+am > 0 /\ b <= 0)]
	
	Blocked

	[{}, {10[T]}, {16[T]}]

Refute

	Counterexample

	[ a=1 am=1 b=0 bm=0 ] 11 [ a=1 am=am b=0 bm=bm ] 16
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
