NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7
   0: f1_0_main_Load -> f988_0_random_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, (arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0), cost: 1
   5: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, (-arg5p6 == 0 /\ -arg2p6 == 0 /\ 1+arg1p6 > 0 /\ -arg4p6 == 0 /\ 1+arg1p6-arg1 <= 0 /\ -arg2 == 0 /\ -arg3p6 == 0 /\ arg1 > 0), cost: 1
   6: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, (1-arg5p7 == 0 /\ -arg2p7 == 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ -arg4p7+arg2 == 0 /\ 1+arg1p7-arg1 <= 0 /\ -arg3p7 == 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, (1+arg1p8 > 0 /\ 1+arg1p8-arg1 <= 0 /\ arg2 > 0 /\ 1-arg5p8 == 0 /\ -arg2p8 == 0 /\ 1+arg3p8 > 0 /\ arg2-arg4p8 == 0 /\ arg1 > 0), cost: 1
   2: f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, (-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg3p3-x10 >= 0), cost: 1
   3: f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (-1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ 1+x17-arg3p4 == 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ x17-x16 < 0 /\ arg1 > 0), cost: 1
  15: f988_0_random_GT -> f752_0_getFirst_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, (x91-x90 < 0 /\ 1+x91-x90 <= 0 /\ 1+x91 > 0 /\ arg2 > 0 /\ arg1p16 > 0 /\ 1+arg2p16 > 0 /\ 2+arg3p16-arg2 <= 0 /\ x90 > 0 /\ -arg2+arg1p16 <= 0 /\ 2-arg2+arg4p16 <= 0 /\ 1+x98 > 0 /\ arg1 > 0), cost: 1
  18: f988_0_random_GT -> f1026_0_findR_NE : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, (1+arg2p19 > 0 /\ -1+arg1p19 > 0 /\ arg2 > 0 /\ x114 > 0 /\ 1+x115 > 0 /\ 1+x115-x114 <= 0 /\ x115-x114 < 0 /\ arg1 > 0), cost: 1
   1: f121_0_createList_Return -> f988_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, (arg1p2-arg1 <= 0 /\ 1+arg2p2-arg1 <= 0 /\ 1+arg2p2 > 0 /\ arg1p2 > 0 /\ 1+x5 > 0 /\ arg1 > 0), cost: 1
   4: f1007_0_main_InvokeMethod -> f1127_0_find_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, (arg3-x22 >= 0 /\ -arg2+arg1p5 <= 0 /\ arg2 > 0 /\ arg1p5 > 0 /\ -1+arg2p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
  14: f1007_0_main_InvokeMethod -> f752_0_getFirst_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, (arg1p15 > 0 /\ arg2 > 0 /\ 1+arg2p15 > 0 /\ 2-arg2+arg3p15 <= 0 /\ 2-arg2+arg4p15 <= 0 /\ arg3-x82 >= 0 /\ arg1p15-arg2 <= 0 /\ arg1 > 0), cost: 1
  17: f1127_0_find_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (2+arg3-arg2 <= 0 /\ arg3-arg3p18 == 0 /\ -arg2p18 == 0 /\ -1+arg2 > 0 /\ -1+arg1p18 > 0 /\ -arg2+arg1p18 <= 0 /\ 2-arg2+arg4 <= 0 /\ arg1 > 0), cost: 1
   8: f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, (arg5-arg4 >= 0 /\ arg3-arg3p9 == 0 /\ -arg4p9+arg4 == 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ arg5-arg5p9 == 0 /\ 1+arg4 > 0 /\ 1-arg2p9+arg2 == 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
   9: f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, (arg5-arg4 >= 0 /\ 1-arg2p10+arg2 == 0 /\ arg3-arg2 > 0 /\ arg3-arg3p10 == 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ -arg5p10+arg5 == 0 /\ -arg4p10+arg4 == 0 /\ arg1 > 0), cost: 1
  10: f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, arg7'=arg7p11, (arg5-arg4 < 0 /\ arg2-arg3p11 == 0 /\ -arg5p11+arg4 == 0 /\ 1+arg5 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg5-arg6p11 == 0 /\ -arg1p11+arg3 == 0 /\ 1+arg4 > 0 /\ 1+arg4p11 > 0 /\ -arg7p11 == 0 /\ -1+arg2p11 > 0 /\ arg4p11-arg1 <= 0), cost: 1
  11: f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, (arg5-arg4 < 0 /\ -arg1p12+arg3 == 0 /\ arg2-arg3p12 == 0 /\ 1+arg5 > 0 /\ 1+arg7p12 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ arg4p12-arg1 <= 0 /\ -arg5p12+arg4 == 0 /\ -1+arg2p12 > 0 /\ 1+arg4p12 > 0 /\ 1+arg5-arg6p12 == 0), cost: 1
  12: f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, (1+arg4 > 0 /\ -arg4p13+arg5 == 0 /\ -1+arg1p13 > 0 /\ 1+arg3-arg2p13 == 0 /\ -1+arg2 > 0 /\ -arg3p13+arg1 == 0 /\ arg6-arg5p13 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1p13-arg2 <= 0), cost: 1
  13: f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, (1+arg3-arg2p14 == 0 /\ arg5-arg4p14 == 0 /\ -arg3p14+arg1 == 0 /\ -2+arg2 > 0 /\ -4+arg1p14 > 0 /\ arg6-arg5p14 == 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
  16: f752_0_getFirst_NONNULL -> f752_0_getFirst_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, (1+arg2p17 > 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p17 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  19: f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0 /\ -arg2p20+arg2 == 0), cost: 1
  20: f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (-2+arg1 > 0 /\ -arg2p21+arg2 == 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
  21: __init -> f1_0_main_Load : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, arg7'=arg7p22, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7
   0: f1_0_main_Load -> f988_0_random_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, (arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0), cost: 1
   5: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, (-arg5p6 == 0 /\ -arg2p6 == 0 /\ 1+arg1p6 > 0 /\ -arg4p6 == 0 /\ 1+arg1p6-arg1 <= 0 /\ -arg2 == 0 /\ -arg3p6 == 0 /\ arg1 > 0), cost: 1
   6: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, (1-arg5p7 == 0 /\ -arg2p7 == 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ -arg4p7+arg2 == 0 /\ 1+arg1p7-arg1 <= 0 /\ -arg3p7 == 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, (1+arg1p8 > 0 /\ 1+arg1p8-arg1 <= 0 /\ arg2 > 0 /\ 1-arg5p8 == 0 /\ -arg2p8 == 0 /\ 1+arg3p8 > 0 /\ arg2-arg4p8 == 0 /\ arg1 > 0), cost: 1
   2: f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, (-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg3p3-x10 >= 0), cost: 1
   3: f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (-1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ 1+x17-arg3p4 == 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ x17-x16 < 0 /\ arg1 > 0), cost: 1
  15: f988_0_random_GT -> f752_0_getFirst_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, (x91-x90 < 0 /\ 1+x91-x90 <= 0 /\ 1+x91 > 0 /\ arg2 > 0 /\ arg1p16 > 0 /\ 1+arg2p16 > 0 /\ 2+arg3p16-arg2 <= 0 /\ x90 > 0 /\ -arg2+arg1p16 <= 0 /\ 2-arg2+arg4p16 <= 0 /\ 1+x98 > 0 /\ arg1 > 0), cost: 1
  18: f988_0_random_GT -> f1026_0_findR_NE : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, (1+arg2p19 > 0 /\ -1+arg1p19 > 0 /\ arg2 > 0 /\ x114 > 0 /\ 1+x115 > 0 /\ 1+x115-x114 <= 0 /\ x115-x114 < 0 /\ arg1 > 0), cost: 1
   1: f121_0_createList_Return -> f988_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, (arg1p2-arg1 <= 0 /\ 1+arg2p2-arg1 <= 0 /\ 1+arg2p2 > 0 /\ arg1p2 > 0 /\ 1+x5 > 0 /\ arg1 > 0), cost: 1
  14: f1007_0_main_InvokeMethod -> f752_0_getFirst_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, (arg1p15 > 0 /\ arg2 > 0 /\ 1+arg2p15 > 0 /\ 2-arg2+arg3p15 <= 0 /\ 2-arg2+arg4p15 <= 0 /\ arg3-x82 >= 0 /\ arg1p15-arg2 <= 0 /\ arg1 > 0), cost: 1
  22: f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (arg3-x22 >= 0 /\ 2+arg3p5-arg2p5 <= 0 /\ -arg2+arg1p5 <= 0 /\ arg2 > 0 /\ -arg2p18 == 0 /\ arg3p5-arg3p18 == 0 /\ arg1p5 > 0 /\ -1+arg1p18 > 0 /\ arg1p18-arg2p5 <= 0 /\ -1+arg2p5 > 0 /\ arg1p5-arg1 <= 0 /\ 2+arg4p5-arg2p5 <= 0 /\ arg1 > 0), cost: 1
   8: f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, (arg5-arg4 >= 0 /\ arg3-arg3p9 == 0 /\ -arg4p9+arg4 == 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ arg5-arg5p9 == 0 /\ 1+arg4 > 0 /\ 1-arg2p9+arg2 == 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
   9: f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, (arg5-arg4 >= 0 /\ 1-arg2p10+arg2 == 0 /\ arg3-arg2 > 0 /\ arg3-arg3p10 == 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ -arg5p10+arg5 == 0 /\ -arg4p10+arg4 == 0 /\ arg1 > 0), cost: 1
  10: f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, arg7'=arg7p11, (arg5-arg4 < 0 /\ arg2-arg3p11 == 0 /\ -arg5p11+arg4 == 0 /\ 1+arg5 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg5-arg6p11 == 0 /\ -arg1p11+arg3 == 0 /\ 1+arg4 > 0 /\ 1+arg4p11 > 0 /\ -arg7p11 == 0 /\ -1+arg2p11 > 0 /\ arg4p11-arg1 <= 0), cost: 1
  11: f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, (arg5-arg4 < 0 /\ -arg1p12+arg3 == 0 /\ arg2-arg3p12 == 0 /\ 1+arg5 > 0 /\ 1+arg7p12 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ arg4p12-arg1 <= 0 /\ -arg5p12+arg4 == 0 /\ -1+arg2p12 > 0 /\ 1+arg4p12 > 0 /\ 1+arg5-arg6p12 == 0), cost: 1
  12: f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, (1+arg4 > 0 /\ -arg4p13+arg5 == 0 /\ -1+arg1p13 > 0 /\ 1+arg3-arg2p13 == 0 /\ -1+arg2 > 0 /\ -arg3p13+arg1 == 0 /\ arg6-arg5p13 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1p13-arg2 <= 0), cost: 1
  13: f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, (1+arg3-arg2p14 == 0 /\ arg5-arg4p14 == 0 /\ -arg3p14+arg1 == 0 /\ -2+arg2 > 0 /\ -4+arg1p14 > 0 /\ arg6-arg5p14 == 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
  16: f752_0_getFirst_NONNULL -> f752_0_getFirst_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, (1+arg2p17 > 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p17 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  19: f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0 /\ -arg2p20+arg2 == 0), cost: 1
  20: f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (-2+arg1 > 0 /\ -arg2p21+arg2 == 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
  21: __init -> f1_0_main_Load : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, arg7'=arg7p22, T, cost: 1

	Eliminating location f1127_0_find_InvokeMethod by chaining:

	Applied chaining

	First rule:
	f1007_0_main_InvokeMethod -> f1127_0_find_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, (arg3-x22 >= 0 /\ -arg2+arg1p5 <= 0 /\ arg2 > 0 /\ arg1p5 > 0 /\ -1+arg2p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
	Second rule:
	f1127_0_find_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (2+arg3-arg2 <= 0 /\ arg3-arg3p18 == 0 /\ -arg2p18 == 0 /\ -1+arg2 > 0 /\ -1+arg1p18 > 0 /\ -arg2+arg1p18 <= 0 /\ 2-arg2+arg4 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (arg3-x22 >= 0 /\ 2+arg3p5-arg2p5 <= 0 /\ -arg2+arg1p5 <= 0 /\ arg2 > 0 /\ -arg2p18 == 0 /\ arg3p5-arg3p18 == 0 /\ arg1p5 > 0 /\ -1+arg1p18 > 0 /\ arg1p18-arg2p5 <= 0 /\ -1+arg2p5 > 0 /\ arg1p5-arg1 <= 0 /\ 2+arg4p5-arg2p5 <= 0 /\ arg1 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 17

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7
   0: f1_0_main_Load -> f988_0_random_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, (arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0), cost: 1
  26: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p6, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p6, arg7'=arg7p6, (1+arg1p6 > 0 /\ 1+arg1p6-arg1 <= 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
  27: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p7, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p7, arg7'=arg7p7, (1+arg1p7 > 0 /\ arg2 > 0 /\ 1+arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
  28: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p8, arg2'=0, arg3'=arg3p8, arg4'=arg2, arg5'=1, arg6'=arg6p8, arg7'=arg7p8, (1+arg1p8 > 0 /\ 1+arg1p8-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p8 > 0 /\ arg1 > 0), cost: 1
  24: f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, (-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0), cost: 1
  25: f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=1+x17, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (-1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
  36: f988_0_random_GT -> f752_0_getFirst_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, (arg2 > 0 /\ arg1p16 > 0 /\ 1+arg2p16 > 0 /\ 2+arg3p16-arg2 <= 0 /\ -arg2+arg1p16 <= 0 /\ 2-arg2+arg4p16 <= 0 /\ arg1 > 0), cost: 1
  37: f988_0_random_GT -> f1026_0_findR_NE : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, (1+arg2p19 > 0 /\ -1+arg1p19 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
  23: f121_0_createList_Return -> f988_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, (arg1p2-arg1 <= 0 /\ 1+arg2p2-arg1 <= 0 /\ 1+arg2p2 > 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
  35: f1007_0_main_InvokeMethod -> f752_0_getFirst_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, (arg1p15 > 0 /\ arg2 > 0 /\ 1+arg2p15 > 0 /\ 2-arg2+arg3p15 <= 0 /\ 2-arg2+arg4p15 <= 0 /\ arg1p15-arg2 <= 0 /\ arg1 > 0), cost: 1
  40: f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=0, arg3'=arg3p5, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (arg2 > 0 /\ 1-arg2 <= 0 /\ -1+arg1p18 > 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1
  29: f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=1+arg2, arg6'=arg6p9, arg7'=arg7p9, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ 1+arg4 > 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
  30: f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=1+arg2, arg6'=arg6p10, arg7'=arg7p10, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ arg1 > 0), cost: 1
  31: f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p11, arg3'=arg2, arg4'=arg4p11, arg5'=arg4, arg6'=1+arg5, arg7'=0, (arg5-arg4 < 0 /\ 1+arg5 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ 1+arg4p11 > 0 /\ -1+arg2p11 > 0 /\ arg4p11-arg1 <= 0), cost: 1
  32: f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p12, arg3'=arg2, arg4'=arg4p12, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p12, (arg5-arg4 < 0 /\ 1+arg5 > 0 /\ 1+arg7p12 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ arg4p12-arg1 <= 0 /\ -1+arg2p12 > 0 /\ 1+arg4p12 > 0), cost: 1
  33: f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p13, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p13, arg7'=arg7p13, (1+arg4 > 0 /\ -1+arg1p13 > 0 /\ -1+arg2 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1p13-arg2 <= 0), cost: 1
  34: f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p14, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p14, arg7'=arg7p14, (-2+arg2 > 0 /\ -4+arg1p14 > 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
  16: f752_0_getFirst_NONNULL -> f752_0_getFirst_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, (1+arg2p17 > 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p17 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  38: f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0), cost: 1
  39: f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
  21: __init -> f1_0_main_Load : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, arg7'=arg7p22, T, cost: 1

	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f121_0_createList_Return -> f988_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, (arg1p2-arg1 <= 0 /\ 1+arg2p2-arg1 <= 0 /\ 1+arg2p2 > 0 /\ arg1p2 > 0 /\ 1+x5 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f121_0_createList_Return -> f988_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, (arg1p2-arg1 <= 0 /\ 1+arg2p2-arg1 <= 0 /\ 1+arg2p2 > 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, (-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg3p3-x10 >= 0), cost: 1
	New rule:
	f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, (-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (-1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ 1+x17-arg3p4 == 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ x17-x16 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=1+x17, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (0 == 0 /\ -1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ x17-x16 < 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p4 = 1+x17
		
	Simplified Guard

	Original rule:
	f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=1+x17, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (0 == 0 /\ -1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ x17-x16 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=1+x17, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (-1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ x17-x16 < 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=1+x17, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (-1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ x17-x16 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=1+x17, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (-1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, (-arg5p6 == 0 /\ -arg2p6 == 0 /\ 1+arg1p6 > 0 /\ -arg4p6 == 0 /\ 1+arg1p6-arg1 <= 0 /\ -arg2 == 0 /\ -arg3p6 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p6, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p6, arg7'=arg7p6, (0 == 0 /\ 1+arg1p6 > 0 /\ 1+arg1p6-arg1 <= 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg5p6 = 0
		
		propagated equality arg2p6 = 0
		
		propagated equality arg4p6 = 0
		
		propagated equality arg3p6 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p6, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p6, arg7'=arg7p6, (0 == 0 /\ 1+arg1p6 > 0 /\ 1+arg1p6-arg1 <= 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p6, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p6, arg7'=arg7p6, (1+arg1p6 > 0 /\ 1+arg1p6-arg1 <= 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, (1-arg5p7 == 0 /\ -arg2p7 == 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ -arg4p7+arg2 == 0 /\ 1+arg1p7-arg1 <= 0 /\ -arg3p7 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p7, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p7, arg7'=arg7p7, (0 == 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 1+arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg5p7 = 1
		
		propagated equality arg2p7 = 0
		
		propagated equality arg4p7 = arg2
		
		propagated equality arg3p7 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p7, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p7, arg7'=arg7p7, (0 == 0 /\ 1+arg1p7 > 0 /\ arg2 > 0 /\ 1+arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p7, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p7, arg7'=arg7p7, (1+arg1p7 > 0 /\ arg2 > 0 /\ 1+arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, (1+arg1p8 > 0 /\ 1+arg1p8-arg1 <= 0 /\ arg2 > 0 /\ 1-arg5p8 == 0 /\ -arg2p8 == 0 /\ 1+arg3p8 > 0 /\ arg2-arg4p8 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p8, arg2'=0, arg3'=arg3p8, arg4'=arg2, arg5'=1, arg6'=arg6p8, arg7'=arg7p8, (0 == 0 /\ 1+arg1p8 > 0 /\ 1+arg1p8-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p8 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg5p8 = 1
		
		propagated equality arg2p8 = 0
		
		propagated equality arg4p8 = arg2
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p8, arg2'=0, arg3'=arg3p8, arg4'=arg2, arg5'=1, arg6'=arg6p8, arg7'=arg7p8, (0 == 0 /\ 1+arg1p8 > 0 /\ 1+arg1p8-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p8 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p8, arg2'=0, arg3'=arg3p8, arg4'=arg2, arg5'=1, arg6'=arg6p8, arg7'=arg7p8, (1+arg1p8 > 0 /\ 1+arg1p8-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p8 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, (arg5-arg4 >= 0 /\ arg3-arg3p9 == 0 /\ -arg4p9+arg4 == 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ arg5-arg5p9 == 0 /\ 1+arg4 > 0 /\ 1-arg2p9+arg2 == 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p9, arg7'=arg7p9, (0 == 0 /\ arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ 1+arg4 > 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
	
		propagated equality arg3p9 = arg3
		
		propagated equality arg4p9 = arg4
		
		propagated equality arg5p9 = arg5
		
		propagated equality arg2p9 = 1+arg2
		
	Simplified Guard

	Original rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p9, arg7'=arg7p9, (0 == 0 /\ arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ 1+arg4 > 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p9, arg7'=arg7p9, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ 1+arg4 > 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p9, arg7'=arg7p9, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ 1+arg4 > 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=1+arg2, arg6'=arg6p9, arg7'=arg7p9, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ 1+arg4 > 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, (arg5-arg4 >= 0 /\ 1-arg2p10+arg2 == 0 /\ arg3-arg2 > 0 /\ arg3-arg3p10 == 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ -arg5p10+arg5 == 0 /\ -arg4p10+arg4 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p10, arg7'=arg7p10, (0 == 0 /\ arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p10 = 1+arg2
		
		propagated equality arg3p10 = arg3
		
		propagated equality arg5p10 = arg5
		
		propagated equality arg4p10 = arg4
		
	Simplified Guard

	Original rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p10, arg7'=arg7p10, (0 == 0 /\ arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p10, arg7'=arg7p10, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=1+arg2, arg3'=arg3, arg4'=arg4, arg5'=arg5, arg6'=arg6p10, arg7'=arg7p10, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=1+arg2, arg6'=arg6p10, arg7'=arg7p10, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, arg7'=arg7p11, (arg5-arg4 < 0 /\ arg2-arg3p11 == 0 /\ -arg5p11+arg4 == 0 /\ 1+arg5 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg5-arg6p11 == 0 /\ -arg1p11+arg3 == 0 /\ 1+arg4 > 0 /\ 1+arg4p11 > 0 /\ -arg7p11 == 0 /\ -1+arg2p11 > 0 /\ arg4p11-arg1 <= 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p11, arg3'=arg2, arg4'=arg4p11, arg5'=arg4, arg6'=1+arg5, arg7'=0, (0 == 0 /\ arg5-arg4 < 0 /\ 1+arg5 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ 1+arg4p11 > 0 /\ -1+arg2p11 > 0 /\ arg4p11-arg1 <= 0), cost: 1
	
		propagated equality arg3p11 = arg2
		
		propagated equality arg5p11 = arg4
		
		propagated equality arg6p11 = 1+arg5
		
		propagated equality arg1p11 = arg3
		
		propagated equality arg7p11 = 0
		
	Simplified Guard

	Original rule:
	f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p11, arg3'=arg2, arg4'=arg4p11, arg5'=arg4, arg6'=1+arg5, arg7'=0, (0 == 0 /\ arg5-arg4 < 0 /\ 1+arg5 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ 1+arg4p11 > 0 /\ -1+arg2p11 > 0 /\ arg4p11-arg1 <= 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p11, arg3'=arg2, arg4'=arg4p11, arg5'=arg4, arg6'=1+arg5, arg7'=0, (arg5-arg4 < 0 /\ 1+arg5 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ 1+arg4p11 > 0 /\ -1+arg2p11 > 0 /\ arg4p11-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, (arg5-arg4 < 0 /\ -arg1p12+arg3 == 0 /\ arg2-arg3p12 == 0 /\ 1+arg5 > 0 /\ 1+arg7p12 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ arg4p12-arg1 <= 0 /\ -arg5p12+arg4 == 0 /\ -1+arg2p12 > 0 /\ 1+arg4p12 > 0 /\ 1+arg5-arg6p12 == 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p12, arg3'=arg2, arg4'=arg4p12, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p12, (0 == 0 /\ arg5-arg4 < 0 /\ 1+arg5 > 0 /\ 1+arg7p12 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ arg4p12-arg1 <= 0 /\ -1+arg2p12 > 0 /\ 1+arg4p12 > 0), cost: 1
	
		propagated equality arg1p12 = arg3
		
		propagated equality arg3p12 = arg2
		
		propagated equality arg5p12 = arg4
		
		propagated equality arg6p12 = 1+arg5
		
	Simplified Guard

	Original rule:
	f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p12, arg3'=arg2, arg4'=arg4p12, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p12, (0 == 0 /\ arg5-arg4 < 0 /\ 1+arg5 > 0 /\ 1+arg7p12 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ arg4p12-arg1 <= 0 /\ -1+arg2p12 > 0 /\ 1+arg4p12 > 0), cost: 1
	New rule:
	f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p12, arg3'=arg2, arg4'=arg4p12, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p12, (arg5-arg4 < 0 /\ 1+arg5 > 0 /\ 1+arg7p12 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ arg4p12-arg1 <= 0 /\ -1+arg2p12 > 0 /\ 1+arg4p12 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, (1+arg4 > 0 /\ -arg4p13+arg5 == 0 /\ -1+arg1p13 > 0 /\ 1+arg3-arg2p13 == 0 /\ -1+arg2 > 0 /\ -arg3p13+arg1 == 0 /\ arg6-arg5p13 == 0 /\ 2-arg2+arg7 <= 0 /\ arg1p13-arg2 <= 0), cost: 1
	New rule:
	f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p13, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p13, arg7'=arg7p13, (0 == 0 /\ 1+arg4 > 0 /\ -1+arg1p13 > 0 /\ -1+arg2 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1p13-arg2 <= 0), cost: 1
	
		propagated equality arg4p13 = arg5
		
		propagated equality arg2p13 = 1+arg3
		
		propagated equality arg3p13 = arg1
		
		propagated equality arg5p13 = arg6
		
	Simplified Guard

	Original rule:
	f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p13, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p13, arg7'=arg7p13, (0 == 0 /\ 1+arg4 > 0 /\ -1+arg1p13 > 0 /\ -1+arg2 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1p13-arg2 <= 0), cost: 1
	New rule:
	f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p13, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p13, arg7'=arg7p13, (1+arg4 > 0 /\ -1+arg1p13 > 0 /\ -1+arg2 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1p13-arg2 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, (1+arg3-arg2p14 == 0 /\ arg5-arg4p14 == 0 /\ -arg3p14+arg1 == 0 /\ -2+arg2 > 0 /\ -4+arg1p14 > 0 /\ arg6-arg5p14 == 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	New rule:
	f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p14, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p14, arg7'=arg7p14, (0 == 0 /\ -2+arg2 > 0 /\ -4+arg1p14 > 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	
		propagated equality arg2p14 = 1+arg3
		
		propagated equality arg4p14 = arg5
		
		propagated equality arg3p14 = arg1
		
		propagated equality arg5p14 = arg6
		
	Simplified Guard

	Original rule:
	f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p14, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p14, arg7'=arg7p14, (0 == 0 /\ -2+arg2 > 0 /\ -4+arg1p14 > 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	New rule:
	f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p14, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p14, arg7'=arg7p14, (-2+arg2 > 0 /\ -4+arg1p14 > 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1007_0_main_InvokeMethod -> f752_0_getFirst_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, (arg1p15 > 0 /\ arg2 > 0 /\ 1+arg2p15 > 0 /\ 2-arg2+arg3p15 <= 0 /\ 2-arg2+arg4p15 <= 0 /\ arg3-x82 >= 0 /\ arg1p15-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1007_0_main_InvokeMethod -> f752_0_getFirst_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, (arg1p15 > 0 /\ arg2 > 0 /\ 1+arg2p15 > 0 /\ 2-arg2+arg3p15 <= 0 /\ 2-arg2+arg4p15 <= 0 /\ arg1p15-arg2 <= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f988_0_random_GT -> f752_0_getFirst_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, (x91-x90 < 0 /\ 1+x91-x90 <= 0 /\ 1+x91 > 0 /\ arg2 > 0 /\ arg1p16 > 0 /\ 1+arg2p16 > 0 /\ 2+arg3p16-arg2 <= 0 /\ x90 > 0 /\ -arg2+arg1p16 <= 0 /\ 2-arg2+arg4p16 <= 0 /\ 1+x98 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f988_0_random_GT -> f752_0_getFirst_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, (arg2 > 0 /\ arg1p16 > 0 /\ 1+arg2p16 > 0 /\ 2+arg3p16-arg2 <= 0 /\ -arg2+arg1p16 <= 0 /\ 2-arg2+arg4p16 <= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f988_0_random_GT -> f1026_0_findR_NE : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, (1+arg2p19 > 0 /\ -1+arg1p19 > 0 /\ arg2 > 0 /\ x114 > 0 /\ 1+x115 > 0 /\ 1+x115-x114 <= 0 /\ x115-x114 < 0 /\ arg1 > 0), cost: 1
	New rule:
	f988_0_random_GT -> f1026_0_findR_NE : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, (1+arg2p19 > 0 /\ -1+arg1p19 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0 /\ -arg2p20+arg2 == 0), cost: 1
	New rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg2'=arg2, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (0 == 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0), cost: 1
	
		propagated equality arg2p20 = arg2
		
	Simplified Guard

	Original rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg2'=arg2, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (0 == 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0), cost: 1
	New rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg2'=arg2, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg2'=arg2, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0), cost: 1
	New rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (-2+arg1 > 0 /\ -arg2p21+arg2 == 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
	New rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg2'=arg2, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (0 == 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
	
		propagated equality arg2p21 = arg2
		
	Simplified Guard

	Original rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg2'=arg2, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (0 == 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
	New rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg2'=arg2, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg2'=arg2, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
	New rule:
	f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (arg3-x22 >= 0 /\ 2+arg3p5-arg2p5 <= 0 /\ -arg2+arg1p5 <= 0 /\ arg2 > 0 /\ -arg2p18 == 0 /\ arg3p5-arg3p18 == 0 /\ arg1p5 > 0 /\ -1+arg1p18 > 0 /\ arg1p18-arg2p5 <= 0 /\ -1+arg2p5 > 0 /\ arg1p5-arg1 <= 0 /\ 2+arg4p5-arg2p5 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=0, arg3'=arg3p5, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (0 == 0 /\ arg3-x22 >= 0 /\ 2+arg3p5-arg2p5 <= 0 /\ -arg2+arg1p5 <= 0 /\ arg2 > 0 /\ arg1p5 > 0 /\ -1+arg1p18 > 0 /\ arg1p18-arg2p5 <= 0 /\ -1+arg2p5 > 0 /\ arg1p5-arg1 <= 0 /\ 2+arg4p5-arg2p5 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p18 = 0
		
		propagated equality arg3p18 = arg3p5
		
	Simplified Guard

	Original rule:
	f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=0, arg3'=arg3p5, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (0 == 0 /\ arg3-x22 >= 0 /\ 2+arg3p5-arg2p5 <= 0 /\ -arg2+arg1p5 <= 0 /\ arg2 > 0 /\ arg1p5 > 0 /\ -1+arg1p18 > 0 /\ arg1p18-arg2p5 <= 0 /\ -1+arg2p5 > 0 /\ arg1p5-arg1 <= 0 /\ 2+arg4p5-arg2p5 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=0, arg3'=arg3p5, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (arg3-x22 >= 0 /\ 2+arg3p5-arg2p5 <= 0 /\ -arg2+arg1p5 <= 0 /\ arg2 > 0 /\ arg1p5 > 0 /\ -1+arg1p18 > 0 /\ arg1p18-arg2p5 <= 0 /\ -1+arg2p5 > 0 /\ arg1p5-arg1 <= 0 /\ 2+arg4p5-arg2p5 <= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=0, arg3'=arg3p5, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (arg3-x22 >= 0 /\ 2+arg3p5-arg2p5 <= 0 /\ -arg2+arg1p5 <= 0 /\ arg2 > 0 /\ arg1p5 > 0 /\ -1+arg1p18 > 0 /\ arg1p18-arg2p5 <= 0 /\ -1+arg2p5 > 0 /\ arg1p5-arg1 <= 0 /\ 2+arg4p5-arg2p5 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=0, arg3'=arg3p5, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (arg2 > 0 /\ 1-arg2 <= 0 /\ -1+arg1p18 > 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1

Step with 21

	Trace

	21[T]
	
	Blocked

	[{}, {}]

Step with 0

	Trace

	21[T], 0[(arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 24

	Trace

	21[T], 0[(arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0)], 24[(-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 35

	Trace

	21[T], 0[(arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0)], 24[(-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0)], 35[(arg1p15 > 0 /\ arg2 > 0 /\ 1+arg2p15 > 0 /\ 2-arg2+arg3p15 <= 0 /\ 2-arg2+arg4p15 <= 0 /\ arg1p15-arg2 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Step with 16

	Trace

	21[T], 0[(arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0)], 24[(-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0)], 35[(arg1p15 > 0 /\ arg2 > 0 /\ 1+arg2p15 > 0 /\ 2-arg2+arg3p15 <= 0 /\ 2-arg2+arg4p15 <= 0 /\ arg1p15-arg2 <= 0 /\ arg1 > 0)], 16[(1+arg2p17 > 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p17 > 0 /\ 2+arg4-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6 arg7
   0: f1_0_main_Load -> f988_0_random_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, (arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0), cost: 1
  26: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p6, arg2'=0, arg3'=0, arg4'=0, arg5'=0, arg6'=arg6p6, arg7'=arg7p6, (1+arg1p6 > 0 /\ 1+arg1p6-arg1 <= 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
  27: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p7, arg2'=0, arg3'=0, arg4'=arg2, arg5'=1, arg6'=arg6p7, arg7'=arg7p7, (1+arg1p7 > 0 /\ arg2 > 0 /\ 1+arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
  28: f1_0_main_Load -> f1273_0_createList_GE : arg1'=arg1p8, arg2'=0, arg3'=arg3p8, arg4'=arg2, arg5'=1, arg6'=arg6p8, arg7'=arg7p8, (1+arg1p8 > 0 /\ 1+arg1p8-arg1 <= 0 /\ arg2 > 0 /\ 1+arg3p8 > 0 /\ arg1 > 0), cost: 1
  24: f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, (-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0), cost: 1
  25: f988_0_random_GT -> f1007_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=1+x17, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, (-1+arg1p4-arg2 <= 0 /\ arg1p4 > 0 /\ 1+x17 > 0 /\ 1+arg2 > 0 /\ 1+arg2p4 > 0 /\ -arg2+arg2p4 <= 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
  36: f988_0_random_GT -> f752_0_getFirst_NONNULL : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, (arg2 > 0 /\ arg1p16 > 0 /\ 1+arg2p16 > 0 /\ 2+arg3p16-arg2 <= 0 /\ -arg2+arg1p16 <= 0 /\ 2-arg2+arg4p16 <= 0 /\ arg1 > 0), cost: 1
  37: f988_0_random_GT -> f1026_0_findR_NE : arg1'=arg1p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, (1+arg2p19 > 0 /\ -1+arg1p19 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
  23: f121_0_createList_Return -> f988_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, (arg1p2-arg1 <= 0 /\ 1+arg2p2-arg1 <= 0 /\ 1+arg2p2 > 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
  35: f1007_0_main_InvokeMethod -> f752_0_getFirst_NONNULL : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, (arg1p15 > 0 /\ arg2 > 0 /\ 1+arg2p15 > 0 /\ 2-arg2+arg3p15 <= 0 /\ 2-arg2+arg4p15 <= 0 /\ arg1p15-arg2 <= 0 /\ arg1 > 0), cost: 1
  40: f1007_0_main_InvokeMethod -> f1026_0_findR_NE : arg1'=arg1p18, arg2'=0, arg3'=arg3p5, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, (arg2 > 0 /\ 1-arg2 <= 0 /\ -1+arg1p18 > 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1
  29: f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p9, arg2'=1+arg2, arg6'=arg6p9, arg7'=arg7p9, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ -1+arg1p9 > 0 /\ 1+arg4 > 0 /\ -2+arg1p9-arg1 <= 0), cost: 1
  30: f1273_0_createList_GE -> f1273_0_createList_GE : arg1'=arg1p10, arg2'=1+arg2, arg6'=arg6p10, arg7'=arg7p10, (arg5-arg4 >= 0 /\ arg3-arg2 > 0 /\ 1+arg4 > 0 /\ -4+arg1p10 > 0 /\ arg1 > 0), cost: 1
  31: f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p11, arg3'=arg2, arg4'=arg4p11, arg5'=arg4, arg6'=1+arg5, arg7'=0, (arg5-arg4 < 0 /\ 1+arg5 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ 1+arg4p11 > 0 /\ -1+arg2p11 > 0 /\ arg4p11-arg1 <= 0), cost: 1
  32: f1273_0_createList_GE -> f1409_0_createList_NULL : arg1'=arg3, arg2'=arg2p12, arg3'=arg2, arg4'=arg4p12, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p12, (arg5-arg4 < 0 /\ 1+arg5 > 0 /\ 1+arg7p12 > 0 /\ arg3-arg2 > 0 /\ 1+arg1 > 0 /\ 1+arg4 > 0 /\ arg4p12-arg1 <= 0 /\ -1+arg2p12 > 0 /\ 1+arg4p12 > 0), cost: 1
  33: f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p13, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p13, arg7'=arg7p13, (1+arg4 > 0 /\ -1+arg1p13 > 0 /\ -1+arg2 > 0 /\ 2-arg2+arg7 <= 0 /\ arg1p13-arg2 <= 0), cost: 1
  34: f1409_0_createList_NULL -> f1273_0_createList_GE : arg1'=arg1p14, arg2'=1+arg3, arg3'=arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p14, arg7'=arg7p14, (-2+arg2 > 0 /\ -4+arg1p14 > 0 /\ arg4 > 0 /\ 2-arg2+arg7 <= 0), cost: 1
  16: f752_0_getFirst_NONNULL -> f752_0_getFirst_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, (1+arg2p17 > 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p17 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
  41: f752_0_getFirst_NONNULL -> LoAT_sink : (1+arg2p17 > 0 /\ -2+arg1 > 0 /\ -2-arg3+arg1 >= 0 /\ arg2 > 0 /\ arg3p17-arg3-arg1p17+arg1 <= 0 /\ arg4p17-arg1p17-arg4+arg1 <= 0 /\ arg2-arg2p17 <= 0 /\ -arg1p17+arg1 <= 0 /\ arg1p17 > 0 /\ -2-arg4+arg1 >= 0), cost: NONTERM
  38: f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 > 0 /\ arg1p20 > 0), cost: 1
  39: f1026_0_findR_NE -> f1026_0_findR_NE : arg1'=arg1p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, (-2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ -arg3+arg2 < 0 /\ arg1p21 > 0), cost: 1
  21: __init -> f1_0_main_Load : arg1'=arg1p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, arg7'=arg7p22, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	f752_0_getFirst_NONNULL -> f752_0_getFirst_NONNULL : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, (1+arg2p17 > 0 /\ -2+arg1 > 0 /\ 2+arg3-arg1 <= 0 /\ arg2 > 0 /\ arg1p17 > 0 /\ 2+arg4-arg1 <= 0), cost: 1
	New rule:
	f752_0_getFirst_NONNULL -> LoAT_sink : (1+arg2p17 > 0 /\ -2+arg1 > 0 /\ -2-arg3+arg1 >= 0 /\ arg2 > 0 /\ arg3p17-arg3-arg1p17+arg1 <= 0 /\ arg4p17-arg1p17-arg4+arg1 <= 0 /\ arg2-arg2p17 <= 0 /\ -arg1p17+arg1 <= 0 /\ arg1p17 > 0 /\ -2-arg4+arg1 >= 0), cost: NONTERM

		1+arg2p17 > 0 [0]: monotonic increase yields 1+arg2p17 > 0
		
		-2+arg1 > 0 [0]: eventual decrease yields (-2+arg1 > 0 /\ -2+arg1p17 > 0)
		
		-2+arg1 > 0 [1]: eventual increase yields (-2+arg1 > 0 /\ -arg1p17+arg1 <= 0)
		
		-2-arg3+arg1 >= 0 [0]: eventual decrease yields (-2-arg3+arg1 >= 0 /\ -2-arg3p17+arg1p17 >= 0)
		
		-2-arg3+arg1 >= 0 [1]: eventual increase yields (-2-arg3+arg1 >= 0 /\ arg3p17-arg3-arg1p17+arg1 <= 0)
		
		arg2 > 0 [0]: eventual decrease yields (arg2 > 0 /\ arg2p17 > 0)
		
		arg2 > 0 [1]: eventual increase yields (arg2 > 0 /\ arg2-arg2p17 <= 0)
		
		arg1p17 > 0 [0]: monotonic increase yields arg1p17 > 0
		
		-2-arg4+arg1 >= 0 [0]: eventual decrease yields (-2-arg4p17+arg1p17 >= 0 /\ -2-arg4+arg1 >= 0)
		
		-2-arg4+arg1 >= 0 [1]: eventual increase yields (arg4p17-arg1p17-arg4+arg1 <= 0 /\ -2-arg4+arg1 >= 0)
		
		Replacement map: {1+arg2p17 > 0 -> 1+arg2p17 > 0, -2+arg1 > 0 -> (-2+arg1 > 0 /\ -arg1p17+arg1 <= 0), -2-arg3+arg1 >= 0 -> (-2-arg3+arg1 >= 0 /\ arg3p17-arg3-arg1p17+arg1 <= 0), arg2 > 0 -> (arg2 > 0 /\ arg2-arg2p17 <= 0), arg1p17 > 0 -> arg1p17 > 0, -2-arg4+arg1 >= 0 -> (arg4p17-arg1p17-arg4+arg1 <= 0 /\ -2-arg4+arg1 >= 0)}

Step with 41

	Trace

	21[T], 0[(arg1p1-arg1 <= 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0)], 24[(-arg2+arg2p3 <= 0 /\ -1+arg1p3-arg2 <= 0 /\ arg1p3 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0)], 35[(arg1p15 > 0 /\ arg2 > 0 /\ 1+arg2p15 > 0 /\ 2-arg2+arg3p15 <= 0 /\ 2-arg2+arg4p15 <= 0 /\ arg1p15-arg2 <= 0 /\ arg1 > 0)], 41[(1+arg2p17 > 0 /\ -2+arg1 > 0 /\ -2-arg3+arg1 >= 0 /\ arg2 > 0 /\ arg3p17-arg3-arg1p17+arg1 <= 0 /\ arg4p17-arg1p17-arg4+arg1 <= 0 /\ arg2-arg2p17 <= 0 /\ -arg1p17+arg1 <= 0 /\ arg1p17 > 0 /\ -2-arg4+arg1 >= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {41[T]}]

Refute

	Counterexample

	[ arg1=1 arg2=0 arg3=0 arg4=0 arg5=0 arg6=0 arg7=0 ] 21 [ arg1=1 arg2=3 arg3=0 arg4=0 arg5=0 arg6=0 arg7=0 ] 0 [ arg1=1 arg2=3 arg3=0 arg4=0 arg5=0 arg6=0 arg7=0 ] 24 [ arg1=3 arg2=1 arg3=1 arg4=1 arg5=0 arg6=0 arg7=0 ] 35 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 arg5=arg5 arg6=arg6 arg7=arg7 ] 41
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
