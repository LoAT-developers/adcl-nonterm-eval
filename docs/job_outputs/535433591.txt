WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg3P0 > 0 /\ -arg1P0 == 0 /\ 1+arg2 > 0 /\ 1+arg2P0 > 0 /\ arg1 > 0), cost: 1
   1: f370_0_div_LT -> f398_0_minus_EQ : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg2-arg3P1 == 0 /\ -arg4P1+arg3 == 0 /\ -arg1P1+arg3 == 0 /\ -arg5P1+arg3 == 0 /\ arg3 > 0 /\ arg1-arg2P1 == 0 /\ -arg2+arg3 <= 0), cost: 1
   2: f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3P2+arg3 == 0 /\ -arg2P2+arg2 == 0 /\ -1+arg4 < 0 /\ -arg5+arg4 == 0 /\ arg1-arg1P2 == 0 /\ arg4 < 0 /\ 1+arg4-arg5P2 == 0 /\ 1+arg4-arg4P2 == 0), cost: 1
   3: f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-1+arg4 < 0 /\ 1-arg3P3+arg3 == 0 /\ -arg5+arg4 == 0 /\ arg4 > 0 /\ arg2-arg2P3 == 0 /\ 1-arg5P3+arg4 == 0 /\ 1+arg4-arg4P3 == 0 /\ -arg1P3+arg1 == 0), cost: 1
   4: f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1-arg1P4 == 0 /\ -1+arg4-arg5P4 == 0 /\ -arg5+arg4 == 0 /\ arg2-arg2P4 == 0 /\ arg4 > 0 /\ -1-arg3P4+arg3 == 0 /\ -1+arg4-arg4P4 == 0), cost: 1
   5: f398_0_minus_EQ -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg4 == 0 /\ 1+arg2-arg1P5 == 0 /\ arg1-arg3P5 == 0 /\ 1+arg2 > 0 /\ arg3-arg2P5 == 0 /\ -arg5 == 0), cost: 1
   6: __init -> f1_0_main_Load : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Removed rules with unsatisfiable guard
Start location: __init
   0: f1_0_main_Load -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg3P0 > 0 /\ -arg1P0 == 0 /\ 1+arg2 > 0 /\ 1+arg2P0 > 0 /\ arg1 > 0), cost: 1
   1: f370_0_div_LT -> f398_0_minus_EQ : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg2-arg3P1 == 0 /\ -arg4P1+arg3 == 0 /\ -arg1P1+arg3 == 0 /\ -arg5P1+arg3 == 0 /\ arg3 > 0 /\ arg1-arg2P1 == 0 /\ -arg2+arg3 <= 0), cost: 1
   2: f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3P2+arg3 == 0 /\ -arg2P2+arg2 == 0 /\ -1+arg4 < 0 /\ -arg5+arg4 == 0 /\ arg1-arg1P2 == 0 /\ arg4 < 0 /\ 1+arg4-arg5P2 == 0 /\ 1+arg4-arg4P2 == 0), cost: 1
   4: f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1-arg1P4 == 0 /\ -1+arg4-arg5P4 == 0 /\ -arg5+arg4 == 0 /\ arg2-arg2P4 == 0 /\ arg4 > 0 /\ -1-arg3P4+arg3 == 0 /\ -1+arg4-arg4P4 == 0), cost: 1
   5: f398_0_minus_EQ -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg4 == 0 /\ 1+arg2-arg1P5 == 0 /\ arg1-arg3P5 == 0 /\ 1+arg2 > 0 /\ arg3-arg2P5 == 0 /\ -arg5 == 0), cost: 1
   6: __init -> f1_0_main_Load : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg3P0 > 0 /\ -arg1P0 == 0 /\ 1+arg2 > 0 /\ 1+arg2P0 > 0 /\ arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (1+arg3P0 > 0 /\ 1+arg2 > 0 /\ 1+arg2P0 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f370_0_div_LT -> f398_0_minus_EQ : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg2-arg3P1 == 0 /\ -arg4P1+arg3 == 0 /\ -arg1P1+arg3 == 0 /\ -arg5P1+arg3 == 0 /\ arg3 > 0 /\ arg1-arg2P1 == 0 /\ -arg2+arg3 <= 0), cost: 1
New rule:
f370_0_div_LT -> f398_0_minus_EQ : arg5'=arg3, arg2'=arg1, arg4'=arg3, arg1'=arg3, arg3'=arg2, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1-arg3P2+arg3 == 0 /\ -arg2P2+arg2 == 0 /\ -1+arg4 < 0 /\ -arg5+arg4 == 0 /\ arg1-arg1P2 == 0 /\ arg4 < 0 /\ 1+arg4-arg5P2 == 0 /\ 1+arg4-arg4P2 == 0), cost: 1
New rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=1+arg4, arg4'=1+arg4, arg3'=1+arg3, (-arg4 > 0 /\ -arg5+arg4 == 0), cost: 1

Applied preprocessing
Original rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1-arg1P4 == 0 /\ -1+arg4-arg5P4 == 0 /\ -arg5+arg4 == 0 /\ arg2-arg2P4 == 0 /\ arg4 > 0 /\ -1-arg3P4+arg3 == 0 /\ -1+arg4-arg4P4 == 0), cost: 1
New rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=-1+arg4, arg4'=-1+arg4, arg3'=-1+arg3, (-arg5+arg4 == 0 /\ arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f398_0_minus_EQ -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-arg4 == 0 /\ 1+arg2-arg1P5 == 0 /\ arg1-arg3P5 == 0 /\ 1+arg2 > 0 /\ arg3-arg2P5 == 0 /\ -arg5 == 0), cost: 1
New rule:
f398_0_minus_EQ -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=1+arg2, arg3'=arg1, (arg5 == 0 /\ 1+arg2 > 0 /\ arg4 == 0), cost: 1

Simplified rules
Start location: __init
   7: f1_0_main_Load -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (1+arg3P0 > 0 /\ 1+arg2 > 0 /\ 1+arg2P0 > 0 /\ arg1 > 0), cost: 1
   8: f370_0_div_LT -> f398_0_minus_EQ : arg5'=arg3, arg2'=arg1, arg4'=arg3, arg1'=arg3, arg3'=arg2, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
   9: f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=1+arg4, arg4'=1+arg4, arg3'=1+arg3, (-arg4 > 0 /\ -arg5+arg4 == 0), cost: 1
  10: f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=-1+arg4, arg4'=-1+arg4, arg3'=-1+arg3, (-arg5+arg4 == 0 /\ arg4 > 0), cost: 1
  11: f398_0_minus_EQ -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=1+arg2, arg3'=arg1, (arg5 == 0 /\ 1+arg2 > 0 /\ arg4 == 0), cost: 1
   6: __init -> f1_0_main_Load : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Applied acceleration
Original rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=1+arg4, arg4'=1+arg4, arg3'=1+arg3, (-arg4 > 0 /\ -arg5+arg4 == 0), cost: 1
New rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg4+n, arg4'=arg4+n, arg3'=n+arg3, (-arg5+arg4 >= 0 /\ arg5-arg4 >= 0 /\ -1+n >= 0 /\ 1-arg4-n > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_nAPCNA.txt

Applied instantiation
Original rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg4+n, arg4'=arg4+n, arg3'=n+arg3, (-arg5+arg4 >= 0 /\ arg5-arg4 >= 0 /\ -1+n >= 0 /\ 1-arg4-n > 0), cost: n
New rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=0, arg4'=0, arg3'=-arg4+arg3, (1 > 0 /\ -arg5+arg4 >= 0 /\ arg5-arg4 >= 0 /\ -1-arg4 >= 0), cost: -arg4

Applied acceleration
Original rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=-1+arg4, arg4'=-1+arg4, arg3'=-1+arg3, (-arg5+arg4 == 0 /\ arg4 > 0), cost: 1
New rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg4-n0, arg4'=arg4-n0, arg3'=arg3-n0, (-arg5+arg4 >= 0 /\ -1+n0 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg4-n0 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hmgIGe.txt

Applied instantiation
Original rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=arg4-n0, arg4'=arg4-n0, arg3'=arg3-n0, (-arg5+arg4 >= 0 /\ -1+n0 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg4-n0 > 0), cost: n0
New rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=0, arg4'=0, arg3'=-arg4+arg3, (1 > 0 /\ -1+arg4 >= 0 /\ -arg5+arg4 >= 0 /\ arg5-arg4 >= 0), cost: arg4

Applied simplification
Original rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=0, arg4'=0, arg3'=-arg4+arg3, (1 > 0 /\ -arg5+arg4 >= 0 /\ arg5-arg4 >= 0 /\ -1-arg4 >= 0), cost: -arg4
New rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=0, arg4'=0, arg3'=-arg4+arg3, (-arg5+arg4 >= 0 /\ arg5-arg4 >= 0 /\ -1-arg4 >= 0), cost: -arg4

Applied simplification
Original rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=0, arg4'=0, arg3'=-arg4+arg3, (1 > 0 /\ -1+arg4 >= 0 /\ -arg5+arg4 >= 0 /\ arg5-arg4 >= 0), cost: arg4
New rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=0, arg4'=0, arg3'=-arg4+arg3, (-1+arg4 >= 0 /\ -arg5+arg4 >= 0 /\ arg5-arg4 >= 0), cost: arg4

Applied deletion
Removed the following rules: 9 10

Accelerated simple loops
Start location: __init
   7: f1_0_main_Load -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (1+arg3P0 > 0 /\ 1+arg2 > 0 /\ 1+arg2P0 > 0 /\ arg1 > 0), cost: 1
   8: f370_0_div_LT -> f398_0_minus_EQ : arg5'=arg3, arg2'=arg1, arg4'=arg3, arg1'=arg3, arg3'=arg2, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
  11: f398_0_minus_EQ -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=1+arg2, arg3'=arg1, (arg5 == 0 /\ 1+arg2 > 0 /\ arg4 == 0), cost: 1
  14: f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=0, arg4'=0, arg3'=-arg4+arg3, (-arg5+arg4 >= 0 /\ arg5-arg4 >= 0 /\ -1-arg4 >= 0), cost: -arg4
  15: f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=0, arg4'=0, arg3'=-arg4+arg3, (-1+arg4 >= 0 /\ -arg5+arg4 >= 0 /\ arg5-arg4 >= 0), cost: arg4
   6: __init -> f1_0_main_Load : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Applied chaining
First rule:
f370_0_div_LT -> f398_0_minus_EQ : arg5'=arg3, arg2'=arg1, arg4'=arg3, arg1'=arg3, arg3'=arg2, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
Second rule:
f398_0_minus_EQ -> f398_0_minus_EQ : arg5'=0, arg4'=0, arg3'=-arg4+arg3, (-1+arg4 >= 0 /\ -arg5+arg4 >= 0 /\ arg5-arg4 >= 0), cost: arg4
New rule:
f370_0_div_LT -> f398_0_minus_EQ : arg5'=0, arg2'=arg1, arg4'=0, arg1'=arg3, arg3'=arg2-arg3, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1+arg3

Applied deletion
Removed the following rules: 14 15

Chained accelerated rules with incoming rules
Start location: __init
   7: f1_0_main_Load -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (1+arg3P0 > 0 /\ 1+arg2 > 0 /\ 1+arg2P0 > 0 /\ arg1 > 0), cost: 1
   8: f370_0_div_LT -> f398_0_minus_EQ : arg5'=arg3, arg2'=arg1, arg4'=arg3, arg1'=arg3, arg3'=arg2, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
  16: f370_0_div_LT -> f398_0_minus_EQ : arg5'=0, arg2'=arg1, arg4'=0, arg1'=arg3, arg3'=arg2-arg3, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1+arg3
  11: f398_0_minus_EQ -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=1+arg2, arg3'=arg1, (arg5 == 0 /\ 1+arg2 > 0 /\ arg4 == 0), cost: 1
   6: __init -> f1_0_main_Load : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (1+arg3P0 > 0 /\ 1+arg2 > 0 /\ 1+arg2P0 > 0 /\ arg1 > 0), cost: 1
New rule:
__init -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (arg1P6 > 0 /\ 1+arg3P0 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0), cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminated locations on linear paths
Start location: __init
   8: f370_0_div_LT -> f398_0_minus_EQ : arg5'=arg3, arg2'=arg1, arg4'=arg3, arg1'=arg3, arg3'=arg2, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
  16: f370_0_div_LT -> f398_0_minus_EQ : arg5'=0, arg2'=arg1, arg4'=0, arg1'=arg3, arg3'=arg2-arg3, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1+arg3
  11: f398_0_minus_EQ -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=1+arg2, arg3'=arg1, (arg5 == 0 /\ 1+arg2 > 0 /\ arg4 == 0), cost: 1
  17: __init -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (arg1P6 > 0 /\ 1+arg3P0 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0), cost: 2


Eliminating location f398_0_minus_EQ by chaining:

Applied chaining
First rule:
f370_0_div_LT -> f398_0_minus_EQ : arg5'=0, arg2'=arg1, arg4'=0, arg1'=arg3, arg3'=arg2-arg3, (arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1+arg3
Second rule:
f398_0_minus_EQ -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=1+arg2, arg3'=arg1, (arg5 == 0 /\ 1+arg2 > 0 /\ arg4 == 0), cost: 1
New rule:
f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-arg3, arg4'=arg4P5, arg1'=1+arg1, arg3'=arg3, (0 == 0 /\ 1+arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 2+arg3

Applied simplification
Original rule:
f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-arg3, arg4'=arg4P5, arg1'=1+arg1, arg3'=arg3, (0 == 0 /\ 1+arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 2+arg3
New rule:
f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-arg3, arg4'=arg4P5, arg1'=1+arg1, arg3'=arg3, (1+arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 2+arg3

Applied deletion
Removed the following rules: 8 11 16

Eliminated locations on tree-shaped paths
Start location: __init
  18: f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-arg3, arg4'=arg4P5, arg1'=1+arg1, arg3'=arg3, (1+arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 2+arg3
  17: __init -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (arg1P6 > 0 /\ 1+arg3P0 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0), cost: 2


Applied simplification
Original rule:
f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-arg3, arg4'=arg4P5, arg1'=1+arg1, arg3'=arg3, (1+arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 2+arg3
New rule:
f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-arg3, arg4'=arg4P5, arg1'=1+arg1, (1+arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 2+arg3

Simplified simple loops
Start location: __init
  19: f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-arg3, arg4'=arg4P5, arg1'=1+arg1, (1+arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 2+arg3
  17: __init -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (arg1P6 > 0 /\ 1+arg3P0 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0), cost: 2


Applied acceleration
Original rule:
f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-arg3, arg4'=arg4P5, arg1'=1+arg1, (1+arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 2+arg3
New rule:
f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-n1*arg3, arg4'=arg4P5, arg1'=n1+arg1, (1+arg1 > 0 /\ arg2-arg3-arg3*(-1+n1) >= 0 /\ arg3 > 0 /\ -1+n1 >= 0), cost: 2*n1+n1*arg3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fGiCLK.txt

Applied deletion
Removed the following rules: 19

Accelerated simple loops
Start location: __init
  20: f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-n1*arg3, arg4'=arg4P5, arg1'=n1+arg1, (1+arg1 > 0 /\ arg2-arg3-arg3*(-1+n1) >= 0 /\ arg3 > 0 /\ -1+n1 >= 0), cost: 2*n1+n1*arg3
  17: __init -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (arg1P6 > 0 /\ 1+arg3P0 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0), cost: 2


Applied chaining
First rule:
__init -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (arg1P6 > 0 /\ 1+arg3P0 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0), cost: 2
Second rule:
f370_0_div_LT -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2-n1*arg3, arg4'=arg4P5, arg1'=n1+arg1, (1+arg1 > 0 /\ arg2-arg3-arg3*(-1+n1) >= 0 /\ arg3 > 0 /\ -1+n1 >= 0), cost: 2*n1+n1*arg3
New rule:
__init -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2P0-arg3P0*n1, arg4'=arg4P5, arg1'=n1, arg3'=arg3P0, (arg3P0 > 0 /\ -arg3P0+arg2P0-arg3P0*(-1+n1) >= 0 /\ -1+n1 >= 0), cost: 2+arg3P0*n1+2*n1

Applied deletion
Removed the following rules: 20

Chained accelerated rules with incoming rules
Start location: __init
  17: __init -> f370_0_div_LT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=0, arg3'=arg3P0, (arg1P6 > 0 /\ 1+arg3P0 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2P6 > 0), cost: 2
  21: __init -> f370_0_div_LT : arg5'=arg5P5, arg2'=arg2P0-arg3P0*n1, arg4'=arg4P5, arg1'=n1, arg3'=arg3P0, (arg3P0 > 0 /\ -arg3P0+arg2P0-arg3P0*(-1+n1) >= 0 /\ -1+n1 >= 0), cost: 2+arg3P0*n1+2*n1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

