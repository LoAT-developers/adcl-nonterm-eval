unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3
   0: f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (-arg2p1 == 0 /\ arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0), cost: 1
   4: f1_0_main_Load -> f167_0_log_LT : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (-arg2p5 == 0 /\ -arg1p5 == 0 /\ -arg2 == 0 /\ -arg3p5 == 0 /\ arg1 > 0), cost: 1
   2: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (arg1p3 > 0 /\ -arg3p3 == 0 /\ -1+x7 > 0 /\ arg2-arg2p3 == 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
   3: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg2-arg2p4 == 0 /\ -1+x11 > 0 /\ 1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
   5: f96_0_random_GT -> f167_0_log_LT : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (arg2-arg2p6 == 0 /\ -arg1p6 == 0 /\ -arg3p6 == 0 /\ arg1 > 0), cost: 1
   6: f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (arg2-arg2p7 == 0 /\ -1+x19 > 0 /\ arg3-arg3p7 == 0 /\ arg3-arg1p7 == 0 /\ arg1 > 0), cost: 1
   7: f167_0_log_LT -> f167_0_log_LT\' : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, (-arg3+arg1 == 0 /\ -arg3p8+arg1 == 0 /\ -1+arg2 > 0 /\ -x28+arg2 > 0 /\ -arg1p8+arg1 == 0 /\ arg2-arg2p8 == 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
   8: f167_0_log_LT\' -> f167_0_log_LT : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, (-arg3+arg1 == 0 /\ -arg1p9+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ -arg3p9+arg1 == 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
   9: __init -> f1_0_main_Load : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3
   0: f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (-arg2p1 == 0 /\ arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0), cost: 1
   4: f1_0_main_Load -> f167_0_log_LT : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (-arg2p5 == 0 /\ -arg1p5 == 0 /\ -arg2 == 0 /\ -arg3p5 == 0 /\ arg1 > 0), cost: 1
   2: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (arg1p3 > 0 /\ -arg3p3 == 0 /\ -1+x7 > 0 /\ arg2-arg2p3 == 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
   3: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg2-arg2p4 == 0 /\ -1+x11 > 0 /\ 1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
   5: f96_0_random_GT -> f167_0_log_LT : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (arg2-arg2p6 == 0 /\ -arg1p6 == 0 /\ -arg3p6 == 0 /\ arg1 > 0), cost: 1
   6: f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (arg2-arg2p7 == 0 /\ -1+x19 > 0 /\ arg3-arg3p7 == 0 /\ arg3-arg1p7 == 0 /\ arg1 > 0), cost: 1
  10: f167_0_log_LT -> f167_0_log_LT : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, (-arg3+arg1 == 0 /\ -1+arg1p8 > 0 /\ -arg3p9+arg1p8 == 0 /\ -arg3p8+arg1 == 0 /\ -arg3p8+arg1p8 == 0 /\ -1+arg2 > 0 /\ arg1p8*arg2p9+arg1p8-arg2p8 > 0 /\ -1+arg2p8 > 0 /\ -x28+arg2 > 0 /\ -arg2p9+arg2p8 > 0 /\ -arg1p9+arg1p8 == 0 /\ -arg1p8*arg2p9+arg2p8 >= 0 /\ arg1p8-arg2p8 <= 0 /\ -arg1p8+arg1 == 0 /\ arg2-arg2p8 == 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
   9: __init -> f1_0_main_Load : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, T, cost: 1

	Eliminating location f167_0_log_LT\' by chaining:

	Applied chaining

	First rule:
	f167_0_log_LT -> f167_0_log_LT\' : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, (-arg3+arg1 == 0 /\ -arg3p8+arg1 == 0 /\ -1+arg2 > 0 /\ -x28+arg2 > 0 /\ -arg1p8+arg1 == 0 /\ arg2-arg2p8 == 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	Second rule:
	f167_0_log_LT\' -> f167_0_log_LT : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, (-arg3+arg1 == 0 /\ -arg1p9+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ -arg3p9+arg1 == 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	New rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, (-arg3+arg1 == 0 /\ -1+arg1p8 > 0 /\ -arg3p9+arg1p8 == 0 /\ -arg3p8+arg1 == 0 /\ -arg3p8+arg1p8 == 0 /\ -1+arg2 > 0 /\ arg1p8*arg2p9+arg1p8-arg2p8 > 0 /\ -1+arg2p8 > 0 /\ -x28+arg2 > 0 /\ -arg2p9+arg2p8 > 0 /\ -arg1p9+arg1p8 == 0 /\ -arg1p8*arg2p9+arg2p8 >= 0 /\ arg1p8-arg2p8 <= 0 /\ -arg1p8+arg1 == 0 /\ arg2-arg2p8 == 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 8

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3
   1: f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0), cost: 1
  11: f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, (arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
  14: f1_0_main_Load -> f167_0_log_LT : arg1'=0, arg2'=0, arg3'=0, (-arg2 == 0 /\ arg1 > 0), cost: 1
  12: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg3'=0, (arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
  13: f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg3'=arg3p4, (1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
  15: f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg3'=0, arg1 > 0, cost: 1
  16: f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, (arg1 > 0), cost: 1
  17: f167_0_log_LT -> f167_0_log_LT : arg2'=arg2p9, arg3'=arg1, (-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
   9: __init -> f1_0_main_Load : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (-arg2p1 == 0 /\ arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, (0 == 0 /\ arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p1 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, (0 == 0 /\ arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f96_0_random_GT : arg1'=arg1p1, arg2'=0, arg3'=arg3p1, (arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (arg1p3 > 0 /\ -arg3p3 == 0 /\ -1+x7 > 0 /\ arg2-arg2p3 == 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2, arg3'=0, (0 == 0 /\ arg1p3 > 0 /\ -1+x7 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p3 = 0
		
		propagated equality arg2p3 = arg2
		
	Simplified Guard

	Original rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2, arg3'=0, (0 == 0 /\ arg1p3 > 0 /\ -1+x7 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2, arg3'=0, (arg1p3 > 0 /\ -1+x7 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2, arg3'=0, (arg1p3 > 0 /\ -1+x7 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2, arg3'=0, (arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2, arg3'=0, (arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p3, arg3'=0, (arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg2-arg2p4 == 0 /\ -1+x11 > 0 /\ 1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2, arg3'=arg3p4, (0 == 0 /\ -1+x11 > 0 /\ 1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p4 = arg2
		
	Simplified Guard

	Original rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2, arg3'=arg3p4, (0 == 0 /\ -1+x11 > 0 /\ 1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2, arg3'=arg3p4, (-1+x11 > 0 /\ 1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2, arg3'=arg3p4, (-1+x11 > 0 /\ 1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2, arg3'=arg3p4, (1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg2'=arg2, arg3'=arg3p4, (1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f154_0_main_InvokeMethod : arg1'=arg1p4, arg3'=arg3p4, (1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f167_0_log_LT : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (-arg2p5 == 0 /\ -arg1p5 == 0 /\ -arg2 == 0 /\ -arg3p5 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f167_0_log_LT : arg1'=0, arg2'=0, arg3'=0, (0 == 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p5 = 0
		
		propagated equality arg1p5 = 0
		
		propagated equality arg3p5 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f167_0_log_LT : arg1'=0, arg2'=0, arg3'=0, (0 == 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f167_0_log_LT : arg1'=0, arg2'=0, arg3'=0, (-arg2 == 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f96_0_random_GT -> f167_0_log_LT : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (arg2-arg2p6 == 0 /\ -arg1p6 == 0 /\ -arg3p6 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg2'=arg2, arg3'=0, (0 == 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p6 = arg2
		
		propagated equality arg1p6 = 0
		
		propagated equality arg3p6 = 0
		
	Simplified Guard

	Original rule:
	f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg2'=arg2, arg3'=0, (0 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg2'=arg2, arg3'=0, arg1 > 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg2'=arg2, arg3'=0, arg1 > 0, cost: 1
	New rule:
	f96_0_random_GT -> f167_0_log_LT : arg1'=0, arg3'=0, arg1 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (arg2-arg2p7 == 0 /\ -1+x19 > 0 /\ arg3-arg3p7 == 0 /\ arg3-arg1p7 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg2'=arg2, arg3'=arg3, (0 == 0 /\ -1+x19 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p7 = arg2
		
		propagated equality arg3p7 = arg3
		
		propagated equality arg1p7 = arg3
		
	Simplified Guard

	Original rule:
	f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg2'=arg2, arg3'=arg3, (0 == 0 /\ -1+x19 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg2'=arg2, arg3'=arg3, (-1+x19 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg2'=arg2, arg3'=arg3, (-1+x19 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg2'=arg2, arg3'=arg3, (arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, arg2'=arg2, arg3'=arg3, (arg1 > 0), cost: 1
	New rule:
	f154_0_main_InvokeMethod -> f167_0_log_LT : arg1'=arg3, (arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, (-arg3+arg1 == 0 /\ -1+arg1p8 > 0 /\ -arg3p9+arg1p8 == 0 /\ -arg3p8+arg1 == 0 /\ -arg3p8+arg1p8 == 0 /\ -1+arg2 > 0 /\ arg1p8*arg2p9+arg1p8-arg2p8 > 0 /\ -1+arg2p8 > 0 /\ -x28+arg2 > 0 /\ -arg2p9+arg2p8 > 0 /\ -arg1p9+arg1p8 == 0 /\ -arg1p8*arg2p9+arg2p8 >= 0 /\ arg1p8-arg2p8 <= 0 /\ -arg1p8+arg1 == 0 /\ arg2-arg2p8 == 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	New rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1p8, arg2'=arg2p9, arg3'=arg1p8, (0 == 0 /\ -arg3+arg1 == 0 /\ -1+arg1p8 > 0 /\ -arg3p8+arg1 == 0 /\ -arg3p8+arg1p8 == 0 /\ -1+arg2 > 0 /\ arg1p8*arg2p9+arg1p8-arg2p8 > 0 /\ -1+arg2p8 > 0 /\ -x28+arg2 > 0 /\ -arg2p9+arg2p8 > 0 /\ -arg1p8*arg2p9+arg2p8 >= 0 /\ arg1p8-arg2p8 <= 0 /\ -arg1p8+arg1 == 0 /\ arg2-arg2p8 == 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	
		propagated equality arg3p9 = arg1p8
		
		propagated equality arg1p9 = arg1p8
		
	Propagated Equalities

	Original rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1p8, arg2'=arg2p9, arg3'=arg1p8, (0 == 0 /\ -arg3+arg1 == 0 /\ -1+arg1p8 > 0 /\ -arg3p8+arg1 == 0 /\ -arg3p8+arg1p8 == 0 /\ -1+arg2 > 0 /\ arg1p8*arg2p9+arg1p8-arg2p8 > 0 /\ -1+arg2p8 > 0 /\ -x28+arg2 > 0 /\ -arg2p9+arg2p8 > 0 /\ -arg1p8*arg2p9+arg2p8 >= 0 /\ arg1p8-arg2p8 <= 0 /\ -arg1p8+arg1 == 0 /\ arg2-arg2p8 == 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	New rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1, arg2'=arg2p9, arg3'=arg1, (0 == 0 /\ -arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ -x28+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	
		propagated equality arg3p8 = arg1
		
		propagated equality arg1p8 = arg1
		
		propagated equality arg2p8 = arg2
		
	Simplified Guard

	Original rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1, arg2'=arg2p9, arg3'=arg1, (0 == 0 /\ -arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ -x28+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	New rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1, arg2'=arg2p9, arg3'=arg1, (-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ -x28+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1, arg2'=arg2p9, arg3'=arg1, (-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ -x28+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	New rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1, arg2'=arg2p9, arg3'=arg1, (-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f167_0_log_LT -> f167_0_log_LT : arg1'=arg1, arg2'=arg2p9, arg3'=arg1, (-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1
	New rule:
	f167_0_log_LT -> f167_0_log_LT : arg2'=arg2p9, arg3'=arg1, (-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0), cost: 1

Step with 9

	Trace

	9[T]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 12

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 12[(arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 16

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 12[(arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0)], 16[(arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Backtrack

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 12[(arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {16[T]}]

Backtrack

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T]}]

Step with 13

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}]

Step with 16

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)], 16[(arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}, {}]

Step with 17

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)], 16[(arg1 > 0)], 17[(-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 17

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)], 16[(arg1 > 0)], 17[(-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0)], 17[(-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}, {}, {}, {}]

Covered

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)], 16[(arg1 > 0)], 17[(-arg3+arg1 == 0 /\ -arg2+arg2p9*arg1+arg1 > 0 /\ arg2-arg2p9*arg1 >= 0 /\ -1+arg2 > 0 /\ arg2-arg2p9 > 0 /\ -1+arg1 > 0 /\ -arg2+arg1 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}, {}, {17[T]}]

Backtrack

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)], 16[(arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}, {17[T]}]

Backtrack

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T]}, {16[T]}]

Backtrack

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T], 13[T]}]

Step with 15

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)], 15[(arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T], 13[T]}, {}]

Backtrack

	Trace

	9[T], 1[(arg2 > 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1+arg2p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T], 13[T], 15[T]}]

Backtrack

	Trace

	9[T]
	
	Blocked

	[{}, {1[T]}]

Step with 11

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {}]

Step with 15

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)], 15[(arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {}, {}]

Backtrack

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {15[T]}]

Step with 12

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)], 12[(arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {15[T]}, {}]

Step with 16

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)], 12[(arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0)], 16[(arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {15[T]}, {}, {}]

Backtrack

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)], 12[(arg1p3 > 0 /\ -arg1p3+arg1 >= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {15[T]}, {16[T]}]

Backtrack

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {12[T], 15[T]}]

Step with 13

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {12[T], 15[T]}, {}]

Step with 16

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)], 16[(arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {12[T], 15[T]}, {}, {}]

Backtrack

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)], 13[(1+arg3p4 > 0 /\ arg1p4 > 0 /\ arg1p4-arg1 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {12[T], 15[T]}, {16[T]}]

Backtrack

	Trace

	9[T], 11[(arg2 > 0 /\ arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T]}, {12[T], 13[T], 15[T]}]

Backtrack

	Trace

	9[T]
	
	Blocked

	[{}, {1[T], 11[T]}]

Step with 14

	Trace

	9[T], 14[(-arg2 == 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {1[T], 11[T]}, {}]

Backtrack

	Trace

	9[T]
	
	Blocked

	[{}, {1[T], 11[T], 14[T]}]

Backtrack

	Trace

	Blocked

	[{9[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
