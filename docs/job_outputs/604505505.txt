WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f139_0_main_GE : arg2'=arg2P0, arg1'=arg1P0, -arg1P0 == 0, cost: 1
   1: f139_0_main_GE -> f169_0_main_GE : arg2'=arg2P1, arg1'=arg1P1, (arg1-arg1P1 == 0 /\ -10+arg1 < 0 /\ 3-arg2P1 == 0), cost: 1
   2: f169_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=arg1P2, (-11+arg2 > 0 /\ 1+arg1-arg1P2 == 0), cost: 1
   3: f169_0_main_GE -> f169_0_main_GE : arg2'=arg2P3, arg1'=arg1P3, (-12+arg2 < 0 /\ 1+arg2-arg2P3 == 0 /\ -arg1P3+arg1 == 0), cost: 1
   4: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f139_0_main_GE : arg2'=arg2P0, arg1'=arg1P0, -arg1P0 == 0, cost: 1
New rule:
f1_0_main_ConstantStackPush -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
f139_0_main_GE -> f169_0_main_GE : arg2'=arg2P1, arg1'=arg1P1, (arg1-arg1P1 == 0 /\ -10+arg1 < 0 /\ 3-arg2P1 == 0), cost: 1
New rule:
f139_0_main_GE -> f169_0_main_GE : arg2'=3, 10-arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f169_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=arg1P2, (-11+arg2 > 0 /\ 1+arg1-arg1P2 == 0), cost: 1
New rule:
f169_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, -11+arg2 > 0, cost: 1

Applied preprocessing
Original rule:
f169_0_main_GE -> f169_0_main_GE : arg2'=arg2P3, arg1'=arg1P3, (-12+arg2 < 0 /\ 1+arg2-arg2P3 == 0 /\ -arg1P3+arg1 == 0), cost: 1
New rule:
f169_0_main_GE -> f169_0_main_GE : arg2'=1+arg2, 12-arg2 > 0, cost: 1

Simplified rules
Start location: __init
   5: f1_0_main_ConstantStackPush -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1
   6: f139_0_main_GE -> f169_0_main_GE : arg2'=3, 10-arg1 > 0, cost: 1
   7: f169_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, -11+arg2 > 0, cost: 1
   8: f169_0_main_GE -> f169_0_main_GE : arg2'=1+arg2, 12-arg2 > 0, cost: 1
   4: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied acceleration
Original rule:
f169_0_main_GE -> f169_0_main_GE : arg2'=1+arg2, 12-arg2 > 0, cost: 1
New rule:
f169_0_main_GE -> f169_0_main_GE : arg2'=arg2+n, (n >= 0 /\ 13-arg2-n > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_iPfidF.txt

Applied instantiation
Original rule:
f169_0_main_GE -> f169_0_main_GE : arg2'=arg2+n, (n >= 0 /\ 13-arg2-n > 0), cost: n
New rule:
f169_0_main_GE -> f169_0_main_GE : arg2'=12, (1 > 0 /\ 12-arg2 >= 0), cost: 12-arg2

Applied simplification
Original rule:
f169_0_main_GE -> f169_0_main_GE : arg2'=12, (1 > 0 /\ 12-arg2 >= 0), cost: 12-arg2
New rule:
f169_0_main_GE -> f169_0_main_GE : arg2'=12, -12+arg2 <= 0, cost: 12-arg2

Applied deletion
Removed the following rules: 8

Accelerated simple loops
Start location: __init
   5: f1_0_main_ConstantStackPush -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1
   6: f139_0_main_GE -> f169_0_main_GE : arg2'=3, 10-arg1 > 0, cost: 1
   7: f169_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, -11+arg2 > 0, cost: 1
  10: f169_0_main_GE -> f169_0_main_GE : arg2'=12, -12+arg2 <= 0, cost: 12-arg2
   4: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied chaining
First rule:
f139_0_main_GE -> f169_0_main_GE : arg2'=3, 10-arg1 > 0, cost: 1
Second rule:
f169_0_main_GE -> f169_0_main_GE : arg2'=12, -12+arg2 <= 0, cost: 12-arg2
New rule:
f139_0_main_GE -> f169_0_main_GE : arg2'=12, 10-arg1 > 0, cost: 10

Applied deletion
Removed the following rules: 10

Chained accelerated rules with incoming rules
Start location: __init
   5: f1_0_main_ConstantStackPush -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1
   6: f139_0_main_GE -> f169_0_main_GE : arg2'=3, 10-arg1 > 0, cost: 1
  11: f139_0_main_GE -> f169_0_main_GE : arg2'=12, 10-arg1 > 0, cost: 10
   7: f169_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, -11+arg2 > 0, cost: 1
   4: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Eliminating location f1_0_main_ConstantStackPush by chaining:

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1
New rule:
__init -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 4 5

Eliminated locations on linear paths
Start location: __init
   6: f139_0_main_GE -> f169_0_main_GE : arg2'=3, 10-arg1 > 0, cost: 1
  11: f139_0_main_GE -> f169_0_main_GE : arg2'=12, 10-arg1 > 0, cost: 10
   7: f169_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, -11+arg2 > 0, cost: 1
  12: __init -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2


Eliminating location f169_0_main_GE by chaining:

Applied chaining
First rule:
f139_0_main_GE -> f169_0_main_GE : arg2'=12, 10-arg1 > 0, cost: 10
Second rule:
f169_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, -11+arg2 > 0, cost: 1
New rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, (10-arg1 > 0 /\ 1 > 0), cost: 11

Applied simplification
Original rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, (10-arg1 > 0 /\ 1 > 0), cost: 11
New rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, 10-arg1 > 0, cost: 11

Applied deletion
Removed the following rules: 6 7 11

Eliminated locations on tree-shaped paths
Start location: __init
  13: f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, 10-arg1 > 0, cost: 11
  12: __init -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2


Applied acceleration
Original rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=1+arg1, 10-arg1 > 0, cost: 11
New rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=n0+arg1, (11-n0-arg1 > 0 /\ -1+n0 >= 0), cost: 11*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_KApbhI.txt

Applied instantiation
Original rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=n0+arg1, (11-n0-arg1 > 0 /\ -1+n0 >= 0), cost: 11*n0
New rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=10, (1 > 0 /\ 9-arg1 >= 0), cost: 110-11*arg1

Applied simplification
Original rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=10, (1 > 0 /\ 9-arg1 >= 0), cost: 110-11*arg1
New rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=10, -9+arg1 <= 0, cost: 110-11*arg1

Applied deletion
Removed the following rules: 13

Accelerated simple loops
Start location: __init
  15: f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=10, -9+arg1 <= 0, cost: 110-11*arg1
  12: __init -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2


Applied chaining
First rule:
__init -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2
Second rule:
f139_0_main_GE -> f139_0_main_GE : arg2'=arg2P2, arg1'=10, -9+arg1 <= 0, cost: 110-11*arg1
New rule:
__init -> f139_0_main_GE : arg2'=arg2P2, arg1'=10, -9 <= 0, cost: 112

Applied deletion
Removed the following rules: 15

Chained accelerated rules with incoming rules
Start location: __init
  12: __init -> f139_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2
  16: __init -> f139_0_main_GE : arg2'=arg2P2, arg1'=10, -9 <= 0, cost: 112


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

