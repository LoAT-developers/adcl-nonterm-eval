WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=arg2P0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg1P0 > 0 /\ arg2-arg3P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ -arg2P0 == 0 /\ arg1P0-arg1 <= 0), cost: 1
   1: f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2P1, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg1 > 0 /\ 1+arg2-arg2P1 == 0 /\ -arg2+arg3 > 0 /\ -arg3P1+arg3 == 0), cost: 1
   2: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg5P2, arg2'=arg2P2, arg7'=arg7P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, (-arg5P2+arg3 == 0 /\ -1-arg4P2+arg3 == 0 /\ -arg3P2 == 0 /\ arg1P2 > 0 /\ arg1 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -1 < 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
   3: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P3, arg2'=arg2P3, arg7'=arg7P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (-arg4P3+arg4 == 0 /\ -arg2+x630 <= 0 /\ arg2 > 0 /\ -arg2+x1160 <= 0 /\ arg5-arg5P3 == 0 /\ -arg3P3+arg3 == 0 /\ arg4-x560 > 0 /\ -arg1P3+arg1 == 0 /\ arg1 > 0 /\ -arg1+x630 <= 0 /\ x1160 > 0 /\ arg4-arg3 > 0 /\ x630 > 0 /\ -arg1+x1160 <= 0 /\ -arg2P3+arg2 == 0), cost: 1
   5: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P5, arg2'=arg2P5, arg7'=arg7P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, (1 > 0 /\ -arg2+x1320 <= 0 /\ -arg1+x1310 <= 0 /\ arg2 > 0 /\ -x1300+arg4 <= 0 /\ 1+x1300-arg3 > 0 /\ arg1 > 0 /\ arg2-arg2P5 == 0 /\ -arg1+x1320 <= 0 /\ -arg2+x1310 <= 0 /\ x1320 > 0 /\ arg4-arg3 > 0 /\ -arg3P5+arg3 == 0 /\ -arg5P5+arg5 == 0 /\ -arg1P5+arg1 == 0 /\ -arg4P5+arg4 == 0 /\ x1310 > 0), cost: 1
   7: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P7, arg2'=arg2P7, arg7'=arg7P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (-arg4P7+arg4 == 0 /\ -arg1+x1470 <= 0 /\ -arg3P7+arg3 == 0 /\ 1 > 0 /\ arg2 > 0 /\ arg4-x1460 > 0 /\ -arg2+x1480 <= 0 /\ -arg2+x1470 <= 0 /\ arg2-arg2P7 == 0 /\ arg1 > 0 /\ arg1-arg1P7 == 0 /\ x1480 > 0 /\ arg5-arg5P7 == 0 /\ arg4-arg3 > 0 /\ -arg1+x1480 <= 0 /\ 1+x1460-arg3 > 0 /\ x1470 > 0), cost: 1
   9: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P9, arg2'=arg2P9, arg7'=arg7P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg3P9+arg3 == 0 /\ arg4-x1620 > 0 /\ arg2 > 0 /\ -arg1P9+arg1 == 0 /\ arg2-arg2P9 == 0 /\ -arg1+x1630 <= 0 /\ 1+x1620-arg3 <= 0 /\ arg5-arg5P9 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ -arg4P9+arg4 == 0 /\ -arg2+x1630 <= 0 /\ x1630 > 0), cost: 1
  11: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P11, arg2'=arg2P11, arg7'=arg7P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (1 > 0 /\ arg2-arg2P11 == 0 /\ arg2 > 0 /\ x1770 > 0 /\ 1-arg3+x1760 > 0 /\ arg3-arg3P11 == 0 /\ arg4-x1760 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ x1770-arg1 <= 0 /\ arg4-arg4P11 == 0 /\ arg5-arg5P11 == 0 /\ -arg2+x1770 <= 0 /\ arg1-arg1P11 == 0), cost: 1
  13: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P13, arg2'=arg2P13, arg7'=arg7P13, arg4'=arg4P13, arg1'=arg1P13, arg6'=arg6P13, arg3'=arg3P13, (-arg2+x1910 <= 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ arg5-arg5P13 == 0 /\ -x1900+arg4 <= 0 /\ 1+x1900-arg3 <= 0 /\ arg2-arg2P13 == 0 /\ arg3-arg3P13 == 0 /\ arg1-arg1P13 == 0 /\ arg4-arg4P13 == 0 /\ arg1 > 0 /\ -arg1+x1910 <= 0 /\ x1910 > 0 /\ arg4-arg3 > 0), cost: 1
  15: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P15, arg2'=arg2P15, arg7'=arg7P15, arg4'=arg4P15, arg1'=arg1P15, arg6'=arg6P15, arg3'=arg3P15, (1 > 0 /\ 1+x2040-arg3 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ arg4-x2040 <= 0 /\ arg5-arg5P15 == 0 /\ arg4-arg4P15 == 0 /\ x2050 > 0 /\ x2050-arg1 <= 0 /\ -arg2+x2050 <= 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ -arg2P15+arg2 == 0 /\ -arg1P15+arg1 == 0 /\ -arg3P15+arg3 == 0), cost: 1
   4: f507_0_sort_GE\' -> f507_0_sort_GE : arg5'=arg5P4, arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg5-arg5P4 == 0 /\ arg2 > 0 /\ arg3-arg3P4 == 0 /\ -arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg1 > 0 /\ arg2P4 > 0 /\ arg4-arg3 > 0 /\ -2-2*arg4P4+arg4+arg3 < 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
   6: f507_0_sort_GE\' -> f507_0_sort_GE : arg5'=arg5P6, arg2'=arg2P6, arg7'=arg7P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (1 > 0 /\ arg2 > 0 /\ arg2P6 > 0 /\ arg5-arg5P6 == 0 /\ -arg2+arg1P6 <= 0 /\ arg1P6 > 0 /\ -2-2*x1400+arg4+arg3 < 0 /\ arg1 > 0 /\ arg2P6-arg1 <= 0 /\ -2*x1400+arg4+arg3 >= 0 /\ arg4-arg3 > 0 /\ arg1P6-arg1 <= 0 /\ 1+x1400-arg3P6 == 0 /\ 1+x1400-arg3 > 0 /\ -arg2+arg2P6 <= 0 /\ -x1400+arg4 <= 0 /\ arg4-arg4P6 == 0), cost: 1
   8: f507_0_sort_GE\' -> f507_0_sort_GE : arg5'=arg5P8, arg2'=arg2P8, arg7'=arg7P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (1 > 0 /\ -arg4P8+arg4 == 0 /\ arg2 > 0 /\ -arg2+arg1P8 <= 0 /\ 1+x1560-arg3P8 == 0 /\ arg2P8-arg1 <= 0 /\ -x1560+arg4 > 0 /\ arg2P8 > 0 /\ 1+x1560-arg3 > 0 /\ arg1 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ -2-2*x1560+arg4+arg3 < 0 /\ arg4-arg3 > 0 /\ arg5-arg5P8 == 0), cost: 1
  10: f507_0_sort_GE\' -> f1503_0_sort_InvokeMethod : arg5'=arg5P10, arg2'=arg2P10, arg7'=arg7P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (arg2 > 0 /\ -arg1P10+arg3 == 0 /\ arg4P10-arg1 <= 0 /\ 1+arg3P10-arg3 <= 0 /\ arg5-arg5P10 == 0 /\ arg4P10 > 0 /\ -arg3P10+arg4 > 0 /\ -2-2*arg3P10+arg4+arg3 < 0 /\ arg4-arg2P10 == 0 /\ arg1 > 0 /\ -arg2+arg4P10 <= 0 /\ -2*arg3P10+arg4+arg3 >= 0 /\ arg4-arg3 > 0), cost: 1
  12: f507_0_sort_GE\' -> f1503_0_sort_InvokeMethod : arg5'=arg5P12, arg2'=arg2P12, arg7'=arg7P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-arg3P12+arg4 > 0 /\ arg3-arg1P12 == 0 /\ 1 > 0 /\ 1+arg3P12-arg3 > 0 /\ arg2 > 0 /\ -2*arg3P12+arg4+arg3 >= 0 /\ -2-2*arg3P12+arg4+arg3 < 0 /\ -arg2+arg4P12 <= 0 /\ arg4P12 > 0 /\ arg1 > 0 /\ arg5-arg5P12 == 0 /\ arg4P12-arg1 <= 0 /\ arg4-arg3 > 0 /\ arg4-arg2P12 == 0), cost: 1
  14: f507_0_sort_GE\' -> f757_0_merge_GT : arg5'=arg5P14, arg2'=arg2P14, arg7'=arg7P14, arg4'=arg4P14, arg1'=arg1P14, arg6'=arg6P14, arg3'=arg3P14, (1+arg6P14-arg3 <= 0 /\ -arg6P14+arg4 <= 0 /\ -arg1P14+arg3 == 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ arg3-arg4P14 == 0 /\ -arg2+arg3P14 <= 0 /\ -2-2*arg6P14+arg4+arg3 < 0 /\ arg5-arg7P14 == 0 /\ arg3-arg5P14 == 0 /\ -2*arg6P14+arg4+arg3 >= 0 /\ arg1 > 0 /\ arg3P14 > 0 /\ -arg2P14+arg4 == 0 /\ arg4-arg3 > 0 /\ -arg1+arg3P14 <= 0), cost: 1
  16: f507_0_sort_GE\' -> f757_0_merge_GT : arg5'=arg5P16, arg2'=arg2P16, arg7'=arg7P16, arg4'=arg4P16, arg1'=arg1P16, arg6'=arg6P16, arg3'=arg3P16, (-arg2P16+arg4 == 0 /\ arg3-arg4P16 == 0 /\ 1 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ -arg2+arg3P16 <= 0 /\ arg3-arg5P16 == 0 /\ 1+arg6P16-arg3 > 0 /\ -arg6P16+arg4 <= 0 /\ arg5-arg7P16 == 0 /\ arg1 > 0 /\ arg3P16 > 0 /\ arg4-arg3 > 0 /\ -arg1+arg3P16 <= 0 /\ -2-2*arg6P16+arg4+arg3 < 0 /\ -arg1P16+arg3 == 0 /\ -2*arg6P16+arg4+arg3 >= 0), cost: 1
  17: f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=arg5P17, arg2'=arg2P17, arg7'=arg7P17, arg4'=arg4P17, arg1'=arg1P17, arg6'=arg6P17, arg3'=arg3P17, (-arg1P17+arg1 == 0 /\ arg5-arg7P17 == 0 /\ 1+arg5 > 0 /\ -arg6P17+arg3 == 0 /\ -arg5P17+arg1 == 0 /\ arg2-arg2P17 == 0 /\ -arg4P17+arg1 == 0 /\ arg4 > 0 /\ -arg4+arg3P17 <= 0 /\ arg3P17 > 0), cost: 1
  18: f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg5P18, arg2'=arg2P18, arg7'=arg7P18, arg4'=arg4P18, arg1'=arg1P18, arg6'=arg6P18, arg3'=arg3P18, (arg3P18 > 0 /\ -arg4+arg6 < 0 /\ -arg5+arg4 == 0 /\ arg3P18-arg3 <= 0 /\ arg6-arg2P18 == 0 /\ arg7-arg6P18 == 0 /\ arg1-arg1P18 == 0 /\ 1-arg4P18+arg6 == 0 /\ arg3 > 0 /\ arg2-arg5P18 == 0), cost: 1
  19: f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg5P19, arg2'=arg2P19, arg7'=arg7P19, arg4'=arg4P19, arg1'=arg1P19, arg6'=arg6P19, arg3'=arg3P19, (-arg4+arg6 >= 0 /\ -arg7P19+arg7 == 0 /\ -arg5+arg4 == 0 /\ arg3P19 > 0 /\ arg2-arg2P19 == 0 /\ 1-arg4P19+arg4 == 0 /\ arg6-arg6P19 == 0 /\ arg3 > 0 /\ arg7-arg4 > 0 /\ arg3P19-arg3 <= 0 /\ 1+arg4-arg5P19 == 0 /\ arg1-arg1P19 == 0), cost: 1
  20: f774_0_merge_GT -> f774_0_merge_GT : arg5'=arg5P20, arg2'=arg2P20, arg7'=arg7P20, arg4'=arg4P20, arg1'=arg1P20, arg6'=arg6P20, arg3'=arg3P20, (arg1-arg1P20 == 0 /\ -arg4+arg6 > 0 /\ arg3P20-arg3 <= 0 /\ 1+arg4-arg4P20 == 0 /\ arg3P20 > 0 /\ arg5-arg4 >= 0 /\ arg5-arg5P20 == 0 /\ arg3 > 0 /\ arg2-arg2P20 == 0 /\ arg6-arg6P20 == 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1
  21: f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg5P21, arg2'=arg2P21, arg7'=arg7P21, arg4'=arg4P21, arg1'=arg1P21, arg6'=arg6P21, arg3'=arg3P21, (arg1P21 > 0 /\ arg1-arg4P21 == 0 /\ arg1-arg5P21 == 0 /\ arg5-arg3P21 == 0 /\ arg5-arg4 < 0 /\ arg1P21-arg3 <= 0 /\ -arg7P21+arg6 == 0 /\ -arg2P21+arg1 == 0 /\ arg3 > 0 /\ arg5-arg6P21 == 0), cost: 1
  22: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg5P22, arg2'=arg2P22, arg7'=arg7P22, arg4'=arg4P22, arg1'=arg1P22, arg6'=arg6P22, arg3'=arg3P22, (arg7-arg7P22 == 0 /\ arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ arg2-arg2P22 == 0 /\ -arg1P22+arg1 >= 0 /\ arg1 > 0 /\ -1-arg3P22+arg3 == 0 /\ arg7-arg3 > 0 /\ 1+arg4-arg4P22 == 0 /\ arg7-arg4 > 0 /\ -x1050+x1060 >= 0 /\ arg2-arg7 < 0 /\ arg6-arg6P22 == 0 /\ 1+arg4-arg5P22 == 0), cost: 1
  23: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg5P23, arg2'=arg2P23, arg7'=arg7P23, arg4'=arg4P23, arg1'=arg1P23, arg6'=arg6P23, arg3'=arg3P23, (arg7-arg7P23 == 0 /\ arg1P23-arg1 <= 0 /\ arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ 1+arg2-arg2P23 == 0 /\ -arg3P23+arg3 == 0 /\ arg1 > 0 /\ arg7-arg3 > 0 /\ 1+arg4-arg4P23 == 0 /\ -arg2+arg7 > 0 /\ arg7-arg4 > 0 /\ arg6-arg6P23 == 0 /\ -x1140+x1150 < 0 /\ 1+arg4-arg5P23 == 0), cost: 1
  24: __init -> f1_0_main_Load : arg5'=arg5P24, arg2'=arg2P24, arg7'=arg7P24, arg4'=arg4P24, arg1'=arg1P24, arg6'=arg6P24, arg3'=arg3P24, TRUE, cost: 1


Removed rules with unsatisfiable guard
Start location: __init
   0: f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=arg2P0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg1P0 > 0 /\ arg2-arg3P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ -arg2P0 == 0 /\ arg1P0-arg1 <= 0), cost: 1
   1: f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2P1, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg1 > 0 /\ 1+arg2-arg2P1 == 0 /\ -arg2+arg3 > 0 /\ -arg3P1+arg3 == 0), cost: 1
   2: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg5P2, arg2'=arg2P2, arg7'=arg7P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, (-arg5P2+arg3 == 0 /\ -1-arg4P2+arg3 == 0 /\ -arg3P2 == 0 /\ arg1P2 > 0 /\ arg1 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -1 < 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
   3: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P3, arg2'=arg2P3, arg7'=arg7P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (-arg4P3+arg4 == 0 /\ -arg2+x630 <= 0 /\ arg2 > 0 /\ -arg2+x1160 <= 0 /\ arg5-arg5P3 == 0 /\ -arg3P3+arg3 == 0 /\ arg4-x560 > 0 /\ -arg1P3+arg1 == 0 /\ arg1 > 0 /\ -arg1+x630 <= 0 /\ x1160 > 0 /\ arg4-arg3 > 0 /\ x630 > 0 /\ -arg1+x1160 <= 0 /\ -arg2P3+arg2 == 0), cost: 1
   5: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P5, arg2'=arg2P5, arg7'=arg7P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, (1 > 0 /\ -arg2+x1320 <= 0 /\ -arg1+x1310 <= 0 /\ arg2 > 0 /\ -x1300+arg4 <= 0 /\ 1+x1300-arg3 > 0 /\ arg1 > 0 /\ arg2-arg2P5 == 0 /\ -arg1+x1320 <= 0 /\ -arg2+x1310 <= 0 /\ x1320 > 0 /\ arg4-arg3 > 0 /\ -arg3P5+arg3 == 0 /\ -arg5P5+arg5 == 0 /\ -arg1P5+arg1 == 0 /\ -arg4P5+arg4 == 0 /\ x1310 > 0), cost: 1
   7: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P7, arg2'=arg2P7, arg7'=arg7P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (-arg4P7+arg4 == 0 /\ -arg1+x1470 <= 0 /\ -arg3P7+arg3 == 0 /\ 1 > 0 /\ arg2 > 0 /\ arg4-x1460 > 0 /\ -arg2+x1480 <= 0 /\ -arg2+x1470 <= 0 /\ arg2-arg2P7 == 0 /\ arg1 > 0 /\ arg1-arg1P7 == 0 /\ x1480 > 0 /\ arg5-arg5P7 == 0 /\ arg4-arg3 > 0 /\ -arg1+x1480 <= 0 /\ 1+x1460-arg3 > 0 /\ x1470 > 0), cost: 1
   9: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P9, arg2'=arg2P9, arg7'=arg7P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg3P9+arg3 == 0 /\ arg4-x1620 > 0 /\ arg2 > 0 /\ -arg1P9+arg1 == 0 /\ arg2-arg2P9 == 0 /\ -arg1+x1630 <= 0 /\ 1+x1620-arg3 <= 0 /\ arg5-arg5P9 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ -arg4P9+arg4 == 0 /\ -arg2+x1630 <= 0 /\ x1630 > 0), cost: 1
  11: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P11, arg2'=arg2P11, arg7'=arg7P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (1 > 0 /\ arg2-arg2P11 == 0 /\ arg2 > 0 /\ x1770 > 0 /\ 1-arg3+x1760 > 0 /\ arg3-arg3P11 == 0 /\ arg4-x1760 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ x1770-arg1 <= 0 /\ arg4-arg4P11 == 0 /\ arg5-arg5P11 == 0 /\ -arg2+x1770 <= 0 /\ arg1-arg1P11 == 0), cost: 1
  15: f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P15, arg2'=arg2P15, arg7'=arg7P15, arg4'=arg4P15, arg1'=arg1P15, arg6'=arg6P15, arg3'=arg3P15, (1 > 0 /\ 1+x2040-arg3 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ arg4-x2040 <= 0 /\ arg5-arg5P15 == 0 /\ arg4-arg4P15 == 0 /\ x2050 > 0 /\ x2050-arg1 <= 0 /\ -arg2+x2050 <= 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ -arg2P15+arg2 == 0 /\ -arg1P15+arg1 == 0 /\ -arg3P15+arg3 == 0), cost: 1
   4: f507_0_sort_GE\' -> f507_0_sort_GE : arg5'=arg5P4, arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg5-arg5P4 == 0 /\ arg2 > 0 /\ arg3-arg3P4 == 0 /\ -arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg1 > 0 /\ arg2P4 > 0 /\ arg4-arg3 > 0 /\ -2-2*arg4P4+arg4+arg3 < 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
   8: f507_0_sort_GE\' -> f507_0_sort_GE : arg5'=arg5P8, arg2'=arg2P8, arg7'=arg7P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (1 > 0 /\ -arg4P8+arg4 == 0 /\ arg2 > 0 /\ -arg2+arg1P8 <= 0 /\ 1+x1560-arg3P8 == 0 /\ arg2P8-arg1 <= 0 /\ -x1560+arg4 > 0 /\ arg2P8 > 0 /\ 1+x1560-arg3 > 0 /\ arg1 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ -2-2*x1560+arg4+arg3 < 0 /\ arg4-arg3 > 0 /\ arg5-arg5P8 == 0), cost: 1
  12: f507_0_sort_GE\' -> f1503_0_sort_InvokeMethod : arg5'=arg5P12, arg2'=arg2P12, arg7'=arg7P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-arg3P12+arg4 > 0 /\ arg3-arg1P12 == 0 /\ 1 > 0 /\ 1+arg3P12-arg3 > 0 /\ arg2 > 0 /\ -2*arg3P12+arg4+arg3 >= 0 /\ -2-2*arg3P12+arg4+arg3 < 0 /\ -arg2+arg4P12 <= 0 /\ arg4P12 > 0 /\ arg1 > 0 /\ arg5-arg5P12 == 0 /\ arg4P12-arg1 <= 0 /\ arg4-arg3 > 0 /\ arg4-arg2P12 == 0), cost: 1
  17: f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=arg5P17, arg2'=arg2P17, arg7'=arg7P17, arg4'=arg4P17, arg1'=arg1P17, arg6'=arg6P17, arg3'=arg3P17, (-arg1P17+arg1 == 0 /\ arg5-arg7P17 == 0 /\ 1+arg5 > 0 /\ -arg6P17+arg3 == 0 /\ -arg5P17+arg1 == 0 /\ arg2-arg2P17 == 0 /\ -arg4P17+arg1 == 0 /\ arg4 > 0 /\ -arg4+arg3P17 <= 0 /\ arg3P17 > 0), cost: 1
  18: f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg5P18, arg2'=arg2P18, arg7'=arg7P18, arg4'=arg4P18, arg1'=arg1P18, arg6'=arg6P18, arg3'=arg3P18, (arg3P18 > 0 /\ -arg4+arg6 < 0 /\ -arg5+arg4 == 0 /\ arg3P18-arg3 <= 0 /\ arg6-arg2P18 == 0 /\ arg7-arg6P18 == 0 /\ arg1-arg1P18 == 0 /\ 1-arg4P18+arg6 == 0 /\ arg3 > 0 /\ arg2-arg5P18 == 0), cost: 1
  19: f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg5P19, arg2'=arg2P19, arg7'=arg7P19, arg4'=arg4P19, arg1'=arg1P19, arg6'=arg6P19, arg3'=arg3P19, (-arg4+arg6 >= 0 /\ -arg7P19+arg7 == 0 /\ -arg5+arg4 == 0 /\ arg3P19 > 0 /\ arg2-arg2P19 == 0 /\ 1-arg4P19+arg4 == 0 /\ arg6-arg6P19 == 0 /\ arg3 > 0 /\ arg7-arg4 > 0 /\ arg3P19-arg3 <= 0 /\ 1+arg4-arg5P19 == 0 /\ arg1-arg1P19 == 0), cost: 1
  20: f774_0_merge_GT -> f774_0_merge_GT : arg5'=arg5P20, arg2'=arg2P20, arg7'=arg7P20, arg4'=arg4P20, arg1'=arg1P20, arg6'=arg6P20, arg3'=arg3P20, (arg1-arg1P20 == 0 /\ -arg4+arg6 > 0 /\ arg3P20-arg3 <= 0 /\ 1+arg4-arg4P20 == 0 /\ arg3P20 > 0 /\ arg5-arg4 >= 0 /\ arg5-arg5P20 == 0 /\ arg3 > 0 /\ arg2-arg2P20 == 0 /\ arg6-arg6P20 == 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1
  21: f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg5P21, arg2'=arg2P21, arg7'=arg7P21, arg4'=arg4P21, arg1'=arg1P21, arg6'=arg6P21, arg3'=arg3P21, (arg1P21 > 0 /\ arg1-arg4P21 == 0 /\ arg1-arg5P21 == 0 /\ arg5-arg3P21 == 0 /\ arg5-arg4 < 0 /\ arg1P21-arg3 <= 0 /\ -arg7P21+arg6 == 0 /\ -arg2P21+arg1 == 0 /\ arg3 > 0 /\ arg5-arg6P21 == 0), cost: 1
  22: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg5P22, arg2'=arg2P22, arg7'=arg7P22, arg4'=arg4P22, arg1'=arg1P22, arg6'=arg6P22, arg3'=arg3P22, (arg7-arg7P22 == 0 /\ arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ arg2-arg2P22 == 0 /\ -arg1P22+arg1 >= 0 /\ arg1 > 0 /\ -1-arg3P22+arg3 == 0 /\ arg7-arg3 > 0 /\ 1+arg4-arg4P22 == 0 /\ arg7-arg4 > 0 /\ -x1050+x1060 >= 0 /\ arg2-arg7 < 0 /\ arg6-arg6P22 == 0 /\ 1+arg4-arg5P22 == 0), cost: 1
  23: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg5P23, arg2'=arg2P23, arg7'=arg7P23, arg4'=arg4P23, arg1'=arg1P23, arg6'=arg6P23, arg3'=arg3P23, (arg7-arg7P23 == 0 /\ arg1P23-arg1 <= 0 /\ arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ 1+arg2-arg2P23 == 0 /\ -arg3P23+arg3 == 0 /\ arg1 > 0 /\ arg7-arg3 > 0 /\ 1+arg4-arg4P23 == 0 /\ -arg2+arg7 > 0 /\ arg7-arg4 > 0 /\ arg6-arg6P23 == 0 /\ -x1140+x1150 < 0 /\ 1+arg4-arg5P23 == 0), cost: 1
  24: __init -> f1_0_main_Load : arg5'=arg5P24, arg2'=arg2P24, arg7'=arg7P24, arg4'=arg4P24, arg1'=arg1P24, arg6'=arg6P24, arg3'=arg3P24, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=arg2P0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg1P0 > 0 /\ arg2-arg3P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ -arg2P0 == 0 /\ arg1P0-arg1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2, (arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1P0-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2P1, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ arg1 > 0 /\ 1+arg2-arg2P1 == 0 /\ -arg2+arg3 > 0 /\ -arg3P1+arg3 == 0), cost: 1
New rule:
f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=1+arg2, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -arg2+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg5P2, arg2'=arg2P2, arg7'=arg7P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, (-arg5P2+arg3 == 0 /\ -1-arg4P2+arg3 == 0 /\ -arg3P2 == 0 /\ arg1P2 > 0 /\ arg1 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -1 < 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
New rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P3, arg2'=arg2P3, arg7'=arg7P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (-arg4P3+arg4 == 0 /\ -arg2+x630 <= 0 /\ arg2 > 0 /\ -arg2+x1160 <= 0 /\ arg5-arg5P3 == 0 /\ -arg3P3+arg3 == 0 /\ arg4-x560 > 0 /\ -arg1P3+arg1 == 0 /\ arg1 > 0 /\ -arg1+x630 <= 0 /\ x1160 > 0 /\ arg4-arg3 > 0 /\ x630 > 0 /\ -arg1+x1160 <= 0 /\ -arg2P3+arg2 == 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P3, arg6'=arg6P3, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1

Applied preprocessing
Original rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg5'=arg5P4, arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg5-arg5P4 == 0 /\ arg2 > 0 /\ arg3-arg3P4 == 0 /\ -arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg1 > 0 /\ arg2P4 > 0 /\ arg4-arg3 > 0 /\ -2-2*arg4P4+arg4+arg3 < 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
New rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1

Applied preprocessing
Original rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P5, arg2'=arg2P5, arg7'=arg7P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, (1 > 0 /\ -arg2+x1320 <= 0 /\ -arg1+x1310 <= 0 /\ arg2 > 0 /\ -x1300+arg4 <= 0 /\ 1+x1300-arg3 > 0 /\ arg1 > 0 /\ arg2-arg2P5 == 0 /\ -arg1+x1320 <= 0 /\ -arg2+x1310 <= 0 /\ x1320 > 0 /\ arg4-arg3 > 0 /\ -arg3P5+arg3 == 0 /\ -arg5P5+arg5 == 0 /\ -arg1P5+arg1 == 0 /\ -arg4P5+arg4 == 0 /\ x1310 > 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P5, arg6'=arg6P5, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1

Applied preprocessing
Original rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P7, arg2'=arg2P7, arg7'=arg7P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (-arg4P7+arg4 == 0 /\ -arg1+x1470 <= 0 /\ -arg3P7+arg3 == 0 /\ 1 > 0 /\ arg2 > 0 /\ arg4-x1460 > 0 /\ -arg2+x1480 <= 0 /\ -arg2+x1470 <= 0 /\ arg2-arg2P7 == 0 /\ arg1 > 0 /\ arg1-arg1P7 == 0 /\ x1480 > 0 /\ arg5-arg5P7 == 0 /\ arg4-arg3 > 0 /\ -arg1+x1480 <= 0 /\ 1+x1460-arg3 > 0 /\ x1470 > 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P7, arg6'=arg6P7, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg5'=arg5P8, arg2'=arg2P8, arg7'=arg7P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (1 > 0 /\ -arg4P8+arg4 == 0 /\ arg2 > 0 /\ -arg2+arg1P8 <= 0 /\ 1+x1560-arg3P8 == 0 /\ arg2P8-arg1 <= 0 /\ -x1560+arg4 > 0 /\ arg2P8 > 0 /\ 1+x1560-arg3 > 0 /\ arg1 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ -2-2*x1560+arg4+arg3 < 0 /\ arg4-arg3 > 0 /\ arg5-arg5P8 == 0), cost: 1
New rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P9, arg2'=arg2P9, arg7'=arg7P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg3P9+arg3 == 0 /\ arg4-x1620 > 0 /\ arg2 > 0 /\ -arg1P9+arg1 == 0 /\ arg2-arg2P9 == 0 /\ -arg1+x1630 <= 0 /\ 1+x1620-arg3 <= 0 /\ arg5-arg5P9 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ -arg4P9+arg4 == 0 /\ -arg2+x1630 <= 0 /\ x1630 > 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P9, arg6'=arg6P9, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1

Applied preprocessing
Original rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P11, arg2'=arg2P11, arg7'=arg7P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (1 > 0 /\ arg2-arg2P11 == 0 /\ arg2 > 0 /\ x1770 > 0 /\ 1-arg3+x1760 > 0 /\ arg3-arg3P11 == 0 /\ arg4-x1760 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ x1770-arg1 <= 0 /\ arg4-arg4P11 == 0 /\ arg5-arg5P11 == 0 /\ -arg2+x1770 <= 0 /\ arg1-arg1P11 == 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P11, arg6'=arg6P11, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f507_0_sort_GE\' -> f1503_0_sort_InvokeMethod : arg5'=arg5P12, arg2'=arg2P12, arg7'=arg7P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-arg3P12+arg4 > 0 /\ arg3-arg1P12 == 0 /\ 1 > 0 /\ 1+arg3P12-arg3 > 0 /\ arg2 > 0 /\ -2*arg3P12+arg4+arg3 >= 0 /\ -2-2*arg3P12+arg4+arg3 < 0 /\ -arg2+arg4P12 <= 0 /\ arg4P12 > 0 /\ arg1 > 0 /\ arg5-arg5P12 == 0 /\ arg4P12-arg1 <= 0 /\ arg4-arg3 > 0 /\ arg4-arg2P12 == 0), cost: 1
New rule:
f507_0_sort_GE\' -> f1503_0_sort_InvokeMethod : arg2'=arg4, arg7'=arg7P12, arg4'=arg4P12, arg1'=arg3, arg6'=arg6P12, arg3'=arg3P12, (-2*arg3P12+arg4+arg3 >= 0 /\ 2+2*arg3P12-arg4-arg3 > 0 /\ -arg2+arg4P12 <= 0 /\ arg4P12 > 0 /\ arg4P12-arg1 <= 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg5'=arg5P15, arg2'=arg2P15, arg7'=arg7P15, arg4'=arg4P15, arg1'=arg1P15, arg6'=arg6P15, arg3'=arg3P15, (1 > 0 /\ 1+x2040-arg3 > 0 /\ arg2 > 0 /\ 1+arg5 > 0 /\ arg4-x2040 <= 0 /\ arg5-arg5P15 == 0 /\ arg4-arg4P15 == 0 /\ x2050 > 0 /\ x2050-arg1 <= 0 /\ -arg2+x2050 <= 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ -arg2P15+arg2 == 0 /\ -arg1P15+arg1 == 0 /\ -arg3P15+arg3 == 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P15, arg6'=arg6P15, (1+arg5 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1

Applied preprocessing
Original rule:
f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=arg5P17, arg2'=arg2P17, arg7'=arg7P17, arg4'=arg4P17, arg1'=arg1P17, arg6'=arg6P17, arg3'=arg3P17, (-arg1P17+arg1 == 0 /\ arg5-arg7P17 == 0 /\ 1+arg5 > 0 /\ -arg6P17+arg3 == 0 /\ -arg5P17+arg1 == 0 /\ arg2-arg2P17 == 0 /\ -arg4P17+arg1 == 0 /\ arg4 > 0 /\ -arg4+arg3P17 <= 0 /\ arg3P17 > 0), cost: 1
New rule:
f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=arg1, arg7'=arg5, arg4'=arg1, arg6'=arg3, arg3'=arg3P17, (1+arg5 > 0 /\ -arg4+arg3P17 <= 0 /\ arg3P17 > 0), cost: 1

Applied preprocessing
Original rule:
f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg5P18, arg2'=arg2P18, arg7'=arg7P18, arg4'=arg4P18, arg1'=arg1P18, arg6'=arg6P18, arg3'=arg3P18, (arg3P18 > 0 /\ -arg4+arg6 < 0 /\ -arg5+arg4 == 0 /\ arg3P18-arg3 <= 0 /\ arg6-arg2P18 == 0 /\ arg7-arg6P18 == 0 /\ arg1-arg1P18 == 0 /\ 1-arg4P18+arg6 == 0 /\ arg3 > 0 /\ arg2-arg5P18 == 0), cost: 1
New rule:
f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P18, arg4'=1+arg6, arg6'=arg7, arg3'=arg3P18, (arg3P18 > 0 /\ -arg5+arg4 == 0 /\ arg3P18-arg3 <= 0 /\ arg4-arg6 > 0), cost: 1

Applied preprocessing
Original rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg5P19, arg2'=arg2P19, arg7'=arg7P19, arg4'=arg4P19, arg1'=arg1P19, arg6'=arg6P19, arg3'=arg3P19, (-arg4+arg6 >= 0 /\ -arg7P19+arg7 == 0 /\ -arg5+arg4 == 0 /\ arg3P19 > 0 /\ arg2-arg2P19 == 0 /\ 1-arg4P19+arg4 == 0 /\ arg6-arg6P19 == 0 /\ arg3 > 0 /\ arg7-arg4 > 0 /\ arg3P19-arg3 <= 0 /\ 1+arg4-arg5P19 == 0 /\ arg1-arg1P19 == 0), cost: 1
New rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=1+arg4, arg4'=1+arg4, arg3'=arg3P19, (-arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ arg3P19 > 0 /\ arg7-arg4 > 0 /\ arg3P19-arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f774_0_merge_GT -> f774_0_merge_GT : arg5'=arg5P20, arg2'=arg2P20, arg7'=arg7P20, arg4'=arg4P20, arg1'=arg1P20, arg6'=arg6P20, arg3'=arg3P20, (arg1-arg1P20 == 0 /\ -arg4+arg6 > 0 /\ arg3P20-arg3 <= 0 /\ 1+arg4-arg4P20 == 0 /\ arg3P20 > 0 /\ arg5-arg4 >= 0 /\ arg5-arg5P20 == 0 /\ arg3 > 0 /\ arg2-arg2P20 == 0 /\ arg6-arg6P20 == 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1
New rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=1+arg4, arg3'=arg3P20, (-arg4+arg6 > 0 /\ arg3P20-arg3 <= 0 /\ arg3P20 > 0 /\ arg5-arg4 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1

Applied preprocessing
Original rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg5P21, arg2'=arg2P21, arg7'=arg7P21, arg4'=arg4P21, arg1'=arg1P21, arg6'=arg6P21, arg3'=arg3P21, (arg1P21 > 0 /\ arg1-arg4P21 == 0 /\ arg1-arg5P21 == 0 /\ arg5-arg3P21 == 0 /\ arg5-arg4 < 0 /\ arg1P21-arg3 <= 0 /\ -arg7P21+arg6 == 0 /\ -arg2P21+arg1 == 0 /\ arg3 > 0 /\ arg5-arg6P21 == 0), cost: 1
New rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg1, arg2'=arg1, arg7'=arg6, arg4'=arg1, arg1'=arg1P21, arg6'=arg5, arg3'=arg5, (arg1P21 > 0 /\ -arg5+arg4 > 0 /\ arg1P21-arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg5P22, arg2'=arg2P22, arg7'=arg7P22, arg4'=arg4P22, arg1'=arg1P22, arg6'=arg6P22, arg3'=arg3P22, (arg7-arg7P22 == 0 /\ arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ arg2-arg2P22 == 0 /\ -arg1P22+arg1 >= 0 /\ arg1 > 0 /\ -1-arg3P22+arg3 == 0 /\ arg7-arg3 > 0 /\ 1+arg4-arg4P22 == 0 /\ arg7-arg4 > 0 /\ -x1050+x1060 >= 0 /\ arg2-arg7 < 0 /\ arg6-arg6P22 == 0 /\ 1+arg4-arg5P22 == 0), cost: 1
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg4, arg4'=1+arg4, arg1'=arg1P22, arg3'=-1+arg3, (arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ -arg1P22+arg1 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0 /\ arg7-arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg5P23, arg2'=arg2P23, arg7'=arg7P23, arg4'=arg4P23, arg1'=arg1P23, arg6'=arg6P23, arg3'=arg3P23, (arg7-arg7P23 == 0 /\ arg1P23-arg1 <= 0 /\ arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ 1+arg2-arg2P23 == 0 /\ -arg3P23+arg3 == 0 /\ arg1 > 0 /\ arg7-arg3 > 0 /\ 1+arg4-arg4P23 == 0 /\ -arg2+arg7 > 0 /\ arg7-arg4 > 0 /\ arg6-arg6P23 == 0 /\ -x1140+x1150 < 0 /\ 1+arg4-arg5P23 == 0), cost: 1
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg4, arg2'=1+arg2, arg4'=1+arg4, arg1'=arg1P23, (arg1P23-arg1 <= 0 /\ arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0 /\ arg7-arg4 > 0), cost: 1

Simplified rules
Start location: __init
  25: f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2, (arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1P0-arg1 <= 0), cost: 1
  26: f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=1+arg2, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -arg2+arg3 > 0), cost: 1
  27: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
  28: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P3, arg6'=arg6P3, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  30: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P5, arg6'=arg6P5, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  31: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P7, arg6'=arg6P7, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
  33: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P9, arg6'=arg6P9, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  34: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P11, arg6'=arg6P11, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
  36: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P15, arg6'=arg6P15, (1+arg5 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  29: f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
  32: f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
  35: f507_0_sort_GE\' -> f1503_0_sort_InvokeMethod : arg2'=arg4, arg7'=arg7P12, arg4'=arg4P12, arg1'=arg3, arg6'=arg6P12, arg3'=arg3P12, (-2*arg3P12+arg4+arg3 >= 0 /\ 2+2*arg3P12-arg4-arg3 > 0 /\ -arg2+arg4P12 <= 0 /\ arg4P12 > 0 /\ arg4P12-arg1 <= 0 /\ arg4-arg3 > 0), cost: 1
  37: f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=arg1, arg7'=arg5, arg4'=arg1, arg6'=arg3, arg3'=arg3P17, (1+arg5 > 0 /\ -arg4+arg3P17 <= 0 /\ arg3P17 > 0), cost: 1
  38: f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P18, arg4'=1+arg6, arg6'=arg7, arg3'=arg3P18, (arg3P18 > 0 /\ -arg5+arg4 == 0 /\ arg3P18-arg3 <= 0 /\ arg4-arg6 > 0), cost: 1
  39: f757_0_merge_GT -> f757_0_merge_GT : arg5'=1+arg4, arg4'=1+arg4, arg3'=arg3P19, (-arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ arg3P19 > 0 /\ arg7-arg4 > 0 /\ arg3P19-arg3 <= 0), cost: 1
  40: f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=1+arg4, arg3'=arg3P20, (-arg4+arg6 > 0 /\ arg3P20-arg3 <= 0 /\ arg3P20 > 0 /\ arg5-arg4 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1
  41: f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg1, arg2'=arg1, arg7'=arg6, arg4'=arg1, arg1'=arg1P21, arg6'=arg5, arg3'=arg5, (arg1P21 > 0 /\ -arg5+arg4 > 0 /\ arg1P21-arg3 <= 0), cost: 1
  42: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg4, arg4'=1+arg4, arg1'=arg1P22, arg3'=-1+arg3, (arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ -arg1P22+arg1 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0 /\ arg7-arg4 > 0), cost: 1
  43: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg4, arg2'=1+arg2, arg4'=1+arg4, arg1'=arg1P23, (arg1P23-arg1 <= 0 /\ arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0 /\ arg7-arg4 > 0), cost: 1
  24: __init -> f1_0_main_Load : arg5'=arg5P24, arg2'=arg2P24, arg7'=arg7P24, arg4'=arg4P24, arg1'=arg1P24, arg6'=arg6P24, arg3'=arg3P24, TRUE, cost: 1


Applied acceleration
Original rule:
f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=1+arg2, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -arg2+arg3 > 0), cost: 1
New rule:
f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2+n, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (1-arg2-n+arg3 > 0 /\ -arg1P1+arg1 >= 0 /\ arg1P1 > 0 /\ -1+n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lfCNCG.txt

Applied instantiation
Original rule:
f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2+n, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (1-arg2-n+arg3 > 0 /\ -arg1P1+arg1 >= 0 /\ arg1P1 > 0 /\ -1+n >= 0), cost: n
New rule:
f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (1 > 0 /\ -arg1P1+arg1 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0), cost: -arg2+arg3

Applied simplification
Original rule:
f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (1 > 0 /\ -arg1P1+arg1 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0), cost: -arg2+arg3
New rule:
f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (-arg1P1+arg1 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0), cost: -arg2+arg3

Applied deletion
Removed the following rules: 26

Applied acceleration
Original rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=1+arg4, arg4'=1+arg4, arg3'=arg3P19, (-arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ arg3P19 > 0 /\ arg7-arg4 > 0 /\ arg3P19-arg3 <= 0), cost: 1
New rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg4+n0, arg4'=arg4+n0, arg3'=arg3P19, (1-arg4-n0+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ 1+arg7-arg4-n0 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0 /\ -1+n0 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_eIemjM.txt

Applied instantiation
Original rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg4+n0, arg4'=arg4+n0, arg3'=arg3P19, (1-arg4-n0+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ 1+arg7-arg4-n0 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0 /\ -1+n0 >= 0), cost: n0
New rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg3'=arg3P19, (0 >= 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg7-arg6 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: 1-arg4+arg6

Applied instantiation
Original rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg4+n0, arg4'=arg4+n0, arg3'=arg3P19, (1-arg4-n0+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ 1+arg7-arg4-n0 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0 /\ -1+n0 >= 0), cost: n0
New rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg7, arg4'=arg7, arg3'=arg3P19, (-1+arg7-arg4 >= 0 /\ 1 > 0 /\ 1-arg7+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: arg7-arg4

Applied simplification
Original rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg3'=arg3P19, (0 >= 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg7-arg6 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: 1-arg4+arg6
New rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg3'=arg3P19, (-arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg7-arg6 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: 1-arg4+arg6

Applied simplification
Original rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg7, arg4'=arg7, arg3'=arg3P19, (-1+arg7-arg4 >= 0 /\ 1 > 0 /\ 1-arg7+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: arg7-arg4
New rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg7, arg4'=arg7, arg3'=arg3P19, (-1+arg7-arg4 >= 0 /\ 1-arg7+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: arg7-arg4

Applied deletion
Removed the following rules: 39

Applied acceleration
Original rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=1+arg4, arg3'=arg3P20, (-arg4+arg6 > 0 /\ arg3P20-arg3 <= 0 /\ arg3P20 > 0 /\ arg5-arg4 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1
New rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=n1+arg4, arg3'=arg3P20, (arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ 1-n1-arg4+arg6 > 0 /\ -1+n1 >= 0 /\ 1+arg5-n1-arg4 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_nBhDLf.txt

Applied instantiation
Original rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=n1+arg4, arg3'=arg3P20, (arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ 1-n1-arg4+arg6 > 0 /\ -1+n1 >= 0 /\ 1+arg5-n1-arg4 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: n1
New rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=arg6, arg3'=arg3P20, (1 > 0 /\ arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ -1-arg4+arg6 >= 0 /\ 1+arg5-arg6 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: -arg4+arg6

Applied instantiation
Original rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=n1+arg4, arg3'=arg3P20, (arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ 1-n1-arg4+arg6 > 0 /\ -1+n1 >= 0 /\ 1+arg5-n1-arg4 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: n1
New rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=1+arg5, arg3'=arg3P20, (0 >= 0 /\ arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ arg5-arg4 >= 0 /\ -arg5+arg6 > 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1+arg5-arg4

Applied simplification
Original rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=arg6, arg3'=arg3P20, (1 > 0 /\ arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ -1-arg4+arg6 >= 0 /\ 1+arg5-arg6 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: -arg4+arg6
New rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=arg6, arg3'=arg3P20, (arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ -1-arg4+arg6 >= 0 /\ 1+arg5-arg6 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: -arg4+arg6

Applied simplification
Original rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=1+arg5, arg3'=arg3P20, (0 >= 0 /\ arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ arg5-arg4 >= 0 /\ -arg5+arg6 > 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1+arg5-arg4
New rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=1+arg5, arg3'=arg3P20, (arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ arg5-arg4 >= 0 /\ -arg5+arg6 > 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1+arg5-arg4

Applied deletion
Removed the following rules: 40

Applied acceleration
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg4, arg4'=1+arg4, arg1'=arg1P22, arg3'=-1+arg3, (arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ -arg1P22+arg1 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0 /\ arg7-arg4 > 0), cost: 1
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg4+n2, arg4'=arg4+n2, arg1'=arg1P22, arg3'=arg3-n2, (-1+n2 >= 0 /\ arg1P22 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P22+arg1 >= 0 /\ 1-arg4+arg6-n2 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg7-arg4-n2 > 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_kNhBIh.txt

Applied instantiation
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg4+n2, arg4'=arg4+n2, arg1'=arg1P22, arg3'=arg3-n2, (-1+n2 >= 0 /\ arg1P22 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P22+arg1 >= 0 /\ 1-arg4+arg6-n2 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg7-arg4-n2 > 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: n2
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg1'=arg1P22, arg3'=-1+arg4-arg6+arg3, (0 >= 0 /\ arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: 1-arg4+arg6

Applied instantiation
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg4+n2, arg4'=arg4+n2, arg1'=arg1P22, arg3'=arg3-n2, (-1+n2 >= 0 /\ arg1P22 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P22+arg1 >= 0 /\ 1-arg4+arg6-n2 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg7-arg4-n2 > 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: n2
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg4'=arg7, arg1'=arg1P22, arg3'=-arg7+arg4+arg3, (-1+arg7-arg4 >= 0 /\ 1 > 0 /\ 1-arg7+arg6 >= 0 /\ arg1P22 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: arg7-arg4

Applied acceleration
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg4, arg2'=1+arg2, arg4'=1+arg4, arg1'=arg1P23, (arg1P23-arg1 <= 0 /\ arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 == 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0 /\ arg7-arg4 > 0), cost: 1
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=n3+arg4, arg2'=n3+arg2, arg4'=n3+arg4, arg1'=arg1P23, (1-n3+arg7-arg4 > 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ 1-n3-arg2+arg7 > 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ 1-n3-arg4+arg6 >= 0 /\ -1+n3 >= 0), cost: n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_apIHEg.txt

Applied instantiation
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=n3+arg4, arg2'=n3+arg2, arg4'=n3+arg4, arg1'=arg1P23, (1-n3+arg7-arg4 > 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ 1-n3-arg2+arg7 > 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ 1-n3-arg4+arg6 >= 0 /\ -1+n3 >= 0), cost: n3
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg2'=1+arg2-arg4+arg6, arg4'=1+arg6, arg1'=arg1P23, (0 >= 0 /\ arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7+arg4-arg6 > 0), cost: 1-arg4+arg6

Applied instantiation
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=n3+arg4, arg2'=n3+arg2, arg4'=n3+arg4, arg1'=arg1P23, (1-n3+arg7-arg4 > 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ 1-n3-arg2+arg7 > 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ 1-n3-arg4+arg6 >= 0 /\ -1+n3 >= 0), cost: n3
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=-arg2+arg7+arg4, arg2'=arg7, arg4'=-arg2+arg7+arg4, arg1'=arg1P23, (1 > 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ -1-arg2+arg7 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg2-arg7-arg4+arg6 >= 0 /\ arg7-arg3 > 0 /\ 1+arg2-arg4 > 0), cost: -arg2+arg7

Applied instantiation
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=n3+arg4, arg2'=n3+arg2, arg4'=n3+arg4, arg1'=arg1P23, (1-n3+arg7-arg4 > 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ 1-n3-arg2+arg7 > 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ 1-n3-arg4+arg6 >= 0 /\ -1+n3 >= 0), cost: n3
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg2'=arg2+arg7-arg4, arg4'=arg7, arg1'=arg1P23, (-1+arg7-arg4 >= 0 /\ 1 > 0 /\ 1-arg7+arg6 >= 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ 1-arg2+arg4 > 0), cost: arg7-arg4

Applied simplification
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg1'=arg1P22, arg3'=-1+arg4-arg6+arg3, (0 >= 0 /\ arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: 1-arg4+arg6
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg1'=arg1P22, arg3'=-1+arg4-arg6+arg3, (arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: 1-arg4+arg6

Applied simplification
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg4'=arg7, arg1'=arg1P22, arg3'=-arg7+arg4+arg3, (-1+arg7-arg4 >= 0 /\ 1 > 0 /\ 1-arg7+arg6 >= 0 /\ arg1P22 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: arg7-arg4
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg4'=arg7, arg1'=arg1P22, arg3'=-arg7+arg4+arg3, (-1+arg7-arg4 >= 0 /\ 1-arg7+arg6 >= 0 /\ arg1P22 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: arg7-arg4

Applied simplification
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg2'=1+arg2-arg4+arg6, arg4'=1+arg6, arg1'=arg1P23, (0 >= 0 /\ arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7+arg4-arg6 > 0), cost: 1-arg4+arg6
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg2'=1+arg2-arg4+arg6, arg4'=1+arg6, arg1'=arg1P23, (arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7+arg4-arg6 > 0), cost: 1-arg4+arg6

Applied simplification
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=-arg2+arg7+arg4, arg2'=arg7, arg4'=-arg2+arg7+arg4, arg1'=arg1P23, (1 > 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ -1-arg2+arg7 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg2-arg7-arg4+arg6 >= 0 /\ arg7-arg3 > 0 /\ 1+arg2-arg4 > 0), cost: -arg2+arg7
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=-arg2+arg7+arg4, arg2'=arg7, arg4'=-arg2+arg7+arg4, arg1'=arg1P23, (arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ -1-arg2+arg7 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg2-arg7-arg4+arg6 >= 0 /\ arg7-arg3 > 0 /\ 1+arg2-arg4 > 0), cost: -arg2+arg7

Applied simplification
Original rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg2'=arg2+arg7-arg4, arg4'=arg7, arg1'=arg1P23, (-1+arg7-arg4 >= 0 /\ 1 > 0 /\ 1-arg7+arg6 >= 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ 1-arg2+arg4 > 0), cost: arg7-arg4
New rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg2'=arg2+arg7-arg4, arg4'=arg7, arg1'=arg1P23, (-1+arg7-arg4 >= 0 /\ 1-arg7+arg6 >= 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ 1-arg2+arg4 > 0), cost: arg7-arg4

Applied deletion
Removed the following rules: 42 43

Accelerated simple loops
Start location: __init
  25: f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2, (arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1P0-arg1 <= 0), cost: 1
  27: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
  45: f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (-arg1P1+arg1 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0), cost: -arg2+arg3
  28: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P3, arg6'=arg6P3, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  30: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P5, arg6'=arg6P5, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  31: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P7, arg6'=arg6P7, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
  33: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P9, arg6'=arg6P9, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  34: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P11, arg6'=arg6P11, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
  36: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P15, arg6'=arg6P15, (1+arg5 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  29: f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
  32: f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
  35: f507_0_sort_GE\' -> f1503_0_sort_InvokeMethod : arg2'=arg4, arg7'=arg7P12, arg4'=arg4P12, arg1'=arg3, arg6'=arg6P12, arg3'=arg3P12, (-2*arg3P12+arg4+arg3 >= 0 /\ 2+2*arg3P12-arg4-arg3 > 0 /\ -arg2+arg4P12 <= 0 /\ arg4P12 > 0 /\ arg4P12-arg1 <= 0 /\ arg4-arg3 > 0), cost: 1
  37: f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=arg1, arg7'=arg5, arg4'=arg1, arg6'=arg3, arg3'=arg3P17, (1+arg5 > 0 /\ -arg4+arg3P17 <= 0 /\ arg3P17 > 0), cost: 1
  38: f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P18, arg4'=1+arg6, arg6'=arg7, arg3'=arg3P18, (arg3P18 > 0 /\ -arg5+arg4 == 0 /\ arg3P18-arg3 <= 0 /\ arg4-arg6 > 0), cost: 1
  48: f757_0_merge_GT -> f757_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg3'=arg3P19, (-arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg7-arg6 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: 1-arg4+arg6
  49: f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg7, arg4'=arg7, arg3'=arg3P19, (-1+arg7-arg4 >= 0 /\ 1-arg7+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: arg7-arg4
  41: f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg1, arg2'=arg1, arg7'=arg6, arg4'=arg1, arg1'=arg1P21, arg6'=arg5, arg3'=arg5, (arg1P21 > 0 /\ -arg5+arg4 > 0 /\ arg1P21-arg3 <= 0), cost: 1
  52: f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=arg6, arg3'=arg3P20, (arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ -1-arg4+arg6 >= 0 /\ 1+arg5-arg6 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: -arg4+arg6
  53: f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=1+arg5, arg3'=arg3P20, (arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ arg5-arg4 >= 0 /\ -arg5+arg6 > 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1+arg5-arg4
  59: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg1'=arg1P22, arg3'=-1+arg4-arg6+arg3, (arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: 1-arg4+arg6
  60: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg4'=arg7, arg1'=arg1P22, arg3'=-arg7+arg4+arg3, (-1+arg7-arg4 >= 0 /\ 1-arg7+arg6 >= 0 /\ arg1P22 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: arg7-arg4
  61: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg2'=1+arg2-arg4+arg6, arg4'=1+arg6, arg1'=arg1P23, (arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7+arg4-arg6 > 0), cost: 1-arg4+arg6
  62: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=-arg2+arg7+arg4, arg2'=arg7, arg4'=-arg2+arg7+arg4, arg1'=arg1P23, (arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ -1-arg2+arg7 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg2-arg7-arg4+arg6 >= 0 /\ arg7-arg3 > 0 /\ 1+arg2-arg4 > 0), cost: -arg2+arg7
  63: f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg2'=arg2+arg7-arg4, arg4'=arg7, arg1'=arg1P23, (-1+arg7-arg4 >= 0 /\ 1-arg7+arg6 >= 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ 1-arg2+arg4 > 0), cost: arg7-arg4
  24: __init -> f1_0_main_Load : arg5'=arg5P24, arg2'=arg2P24, arg7'=arg7P24, arg4'=arg4P24, arg1'=arg1P24, arg6'=arg6P24, arg3'=arg3P24, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2, (arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1P0-arg1 <= 0), cost: 1
Second rule:
f229_0_main_GE -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg3, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, (-arg1P1+arg1 >= 0 /\ -1-arg2+arg3 >= 0 /\ arg1P1 > 0), cost: -arg2+arg3
New rule:
f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P1, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg2, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 >= 0), cost: 1+arg2

Applied deletion
Removed the following rules: 45

Applied chaining
First rule:
f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=arg1, arg7'=arg5, arg4'=arg1, arg6'=arg3, arg3'=arg3P17, (1+arg5 > 0 /\ -arg4+arg3P17 <= 0 /\ arg3P17 > 0), cost: 1
Second rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg3'=arg3P19, (-arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg7-arg6 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: 1-arg4+arg6
New rule:
f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=1+arg3, arg7'=arg5, arg4'=1+arg3, arg6'=arg3, arg3'=arg3P19, (1+arg5 > 0 /\ arg5-arg3 > 0 /\ arg3P19 > 0 /\ -arg1+arg3 >= 0 /\ arg3P19-arg4 <= 0), cost: 2-arg1+arg3

Applied chaining
First rule:
f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=arg1, arg7'=arg5, arg4'=arg1, arg6'=arg3, arg3'=arg3P17, (1+arg5 > 0 /\ -arg4+arg3P17 <= 0 /\ arg3P17 > 0), cost: 1
Second rule:
f757_0_merge_GT -> f757_0_merge_GT : arg5'=arg7, arg4'=arg7, arg3'=arg3P19, (-1+arg7-arg4 >= 0 /\ 1-arg7+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg3P19 > 0 /\ arg5-arg4 >= 0 /\ -arg3P19+arg3 >= 0), cost: arg7-arg4
New rule:
f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg7'=arg5, arg4'=arg5, arg6'=arg3, arg3'=arg3P19, (1+arg5 > 0 /\ arg3P19 > 0 /\ 1-arg5+arg3 >= 0 /\ -1+arg5-arg1 >= 0 /\ arg3P19-arg4 <= 0), cost: 1+arg5-arg1

Applied deletion
Removed the following rules: 48 49

Applied chaining
First rule:
f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P18, arg4'=1+arg6, arg6'=arg7, arg3'=arg3P18, (arg3P18 > 0 /\ -arg5+arg4 == 0 /\ arg3P18-arg3 <= 0 /\ arg4-arg6 > 0), cost: 1
Second rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=arg6, arg3'=arg3P20, (arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ -1-arg4+arg6 >= 0 /\ 1+arg5-arg6 >= 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: -arg4+arg6
New rule:
f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P20, arg4'=arg7, arg6'=arg7, arg3'=arg3P20, (arg3P20-arg3 <= 0 /\ -arg5+arg4 == 0 /\ arg3P20 > 0 /\ -2+arg7-arg6 >= 0 /\ arg4-arg6 > 0 /\ 1+arg2-arg7 == 0), cost: arg7-arg6

Applied chaining
First rule:
f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P18, arg4'=1+arg6, arg6'=arg7, arg3'=arg3P18, (arg3P18 > 0 /\ -arg5+arg4 == 0 /\ arg3P18-arg3 <= 0 /\ arg4-arg6 > 0), cost: 1
Second rule:
f774_0_merge_GT -> f774_0_merge_GT : arg7'=arg7P20, arg4'=1+arg5, arg3'=arg3P20, (arg3P20 > 0 /\ -arg3P20+arg3 >= 0 /\ arg5-arg4 >= 0 /\ -arg5+arg6 > 0 /\ -1-arg5-arg2+arg4+arg6 > 0), cost: 1+arg5-arg4
New rule:
f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P20, arg4'=1+arg2, arg6'=arg7, arg3'=arg3P20, (arg3P20-arg3 <= 0 /\ -arg5+arg4 == 0 /\ arg3P20 > 0 /\ arg4-arg6 > 0 /\ -1+arg2-arg6 >= 0 /\ -arg2+arg7 > 0), cost: 1+arg2-arg6

Applied deletion
Removed the following rules: 52 53

Applied chaining
First rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg1, arg2'=arg1, arg7'=arg6, arg4'=arg1, arg1'=arg1P21, arg6'=arg5, arg3'=arg5, (arg1P21 > 0 /\ -arg5+arg4 > 0 /\ arg1P21-arg3 <= 0), cost: 1
Second rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg4'=1+arg6, arg1'=arg1P22, arg3'=-1+arg4-arg6+arg3, (arg1P22 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: 1-arg4+arg6
New rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg5, arg2'=arg1, arg7'=arg6, arg4'=1+arg5, arg1'=arg1P22, arg6'=arg5, arg3'=-1+arg1, (arg1P22 > 0 /\ -arg5+arg4 > 0 /\ arg1P22-arg3 <= 0 /\ -arg5+arg6 > 0 /\ arg5-arg1 >= 0), cost: 2+arg5-arg1

Applied chaining
First rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg1, arg2'=arg1, arg7'=arg6, arg4'=arg1, arg1'=arg1P21, arg6'=arg5, arg3'=arg5, (arg1P21 > 0 /\ -arg5+arg4 > 0 /\ arg1P21-arg3 <= 0), cost: 1
Second rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg4'=arg7, arg1'=arg1P22, arg3'=-arg7+arg4+arg3, (-1+arg7-arg4 >= 0 /\ 1-arg7+arg6 >= 0 /\ arg1P22 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P22+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7 > 0), cost: arg7-arg4
New rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg6, arg2'=arg1, arg7'=arg6, arg4'=arg6, arg1'=arg1P22, arg6'=arg5, arg3'=arg5+arg1-arg6, (arg1P22 > 0 /\ -arg5+arg4 > 0 /\ arg1P22-arg3 <= 0 /\ -arg1+arg6 > 0 /\ 1+arg5-arg6 == 0), cost: 1-arg1+arg6

Applied chaining
First rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg1, arg2'=arg1, arg7'=arg6, arg4'=arg1, arg1'=arg1P21, arg6'=arg5, arg3'=arg5, (arg1P21 > 0 /\ -arg5+arg4 > 0 /\ arg1P21-arg3 <= 0), cost: 1
Second rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg6, arg2'=1+arg2-arg4+arg6, arg4'=1+arg6, arg1'=arg1P23, (arg1P23 > 0 /\ -arg4+arg6 >= 0 /\ -arg5+arg4 >= 0 /\ arg7-arg6 > 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ -arg2+arg7+arg4-arg6 > 0), cost: 1-arg4+arg6
New rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg5, arg2'=1+arg5, arg7'=arg6, arg4'=1+arg5, arg1'=arg1P23, arg6'=arg5, arg3'=arg5, (arg1P23 > 0 /\ -arg5+arg4 > 0 /\ arg1P23-arg3 <= 0 /\ -arg5+arg6 > 0 /\ arg5-arg1 >= 0), cost: 2+arg5-arg1

Applied chaining
First rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg1, arg2'=arg1, arg7'=arg6, arg4'=arg1, arg1'=arg1P21, arg6'=arg5, arg3'=arg5, (arg1P21 > 0 /\ -arg5+arg4 > 0 /\ arg1P21-arg3 <= 0), cost: 1
Second rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=-arg2+arg7+arg4, arg2'=arg7, arg4'=-arg2+arg7+arg4, arg1'=arg1P23, (arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ -1-arg2+arg7 >= 0 /\ arg5-arg4 >= 0 /\ 1+arg2-arg7-arg4+arg6 >= 0 /\ arg7-arg3 > 0 /\ 1+arg2-arg4 > 0), cost: -arg2+arg7
New rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg6, arg2'=arg6, arg7'=arg6, arg4'=arg6, arg1'=arg1P23, arg6'=arg5, arg3'=arg5, (arg1P23 > 0 /\ -arg5+arg4 > 0 /\ -1-arg1+arg6 >= 0 /\ arg1P23-arg3 <= 0 /\ 1+arg5-arg6 == 0), cost: 1-arg1+arg6

Applied chaining
First rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg1, arg2'=arg1, arg7'=arg6, arg4'=arg1, arg1'=arg1P21, arg6'=arg5, arg3'=arg5, (arg1P21 > 0 /\ -arg5+arg4 > 0 /\ arg1P21-arg3 <= 0), cost: 1
Second rule:
f1440_0_merge_GT -> f1440_0_merge_GT : arg5'=arg7, arg2'=arg2+arg7-arg4, arg4'=arg7, arg1'=arg1P23, (-1+arg7-arg4 >= 0 /\ 1-arg7+arg6 >= 0 /\ arg1P23 > 0 /\ -arg5+arg4 >= 0 /\ -arg1P23+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg7-arg3 > 0 /\ 1-arg2+arg4 > 0), cost: arg7-arg4
New rule:
f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg6, arg2'=arg6, arg7'=arg6, arg4'=arg6, arg1'=arg1P23, arg6'=arg5, arg3'=arg5, (arg1P23 > 0 /\ -arg5+arg4 > 0 /\ -1-arg1+arg6 >= 0 /\ arg1P23-arg3 <= 0 /\ 1+arg5-arg6 == 0), cost: 1-arg1+arg6

Applied deletion
Removed the following rules: 59 60 61 62 63

Chained accelerated rules with incoming rules
Start location: __init
  25: f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2, (arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1P0-arg1 <= 0), cost: 1
  64: f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P1, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg2, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 >= 0), cost: 1+arg2
  27: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
  28: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P3, arg6'=arg6P3, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  30: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P5, arg6'=arg6P5, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  31: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P7, arg6'=arg6P7, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
  33: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P9, arg6'=arg6P9, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  34: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P11, arg6'=arg6P11, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
  36: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P15, arg6'=arg6P15, (1+arg5 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  29: f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
  32: f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
  35: f507_0_sort_GE\' -> f1503_0_sort_InvokeMethod : arg2'=arg4, arg7'=arg7P12, arg4'=arg4P12, arg1'=arg3, arg6'=arg6P12, arg3'=arg3P12, (-2*arg3P12+arg4+arg3 >= 0 /\ 2+2*arg3P12-arg4-arg3 > 0 /\ -arg2+arg4P12 <= 0 /\ arg4P12 > 0 /\ arg4P12-arg1 <= 0 /\ arg4-arg3 > 0), cost: 1
  37: f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=arg1, arg7'=arg5, arg4'=arg1, arg6'=arg3, arg3'=arg3P17, (1+arg5 > 0 /\ -arg4+arg3P17 <= 0 /\ arg3P17 > 0), cost: 1
  65: f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg5'=1+arg3, arg7'=arg5, arg4'=1+arg3, arg6'=arg3, arg3'=arg3P19, (1+arg5 > 0 /\ arg5-arg3 > 0 /\ arg3P19 > 0 /\ -arg1+arg3 >= 0 /\ arg3P19-arg4 <= 0), cost: 2-arg1+arg3
  66: f1503_0_sort_InvokeMethod -> f757_0_merge_GT : arg7'=arg5, arg4'=arg5, arg6'=arg3, arg3'=arg3P19, (1+arg5 > 0 /\ arg3P19 > 0 /\ 1-arg5+arg3 >= 0 /\ -1+arg5-arg1 >= 0 /\ arg3P19-arg4 <= 0), cost: 1+arg5-arg1
  38: f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P18, arg4'=1+arg6, arg6'=arg7, arg3'=arg3P18, (arg3P18 > 0 /\ -arg5+arg4 == 0 /\ arg3P18-arg3 <= 0 /\ arg4-arg6 > 0), cost: 1
  67: f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P20, arg4'=arg7, arg6'=arg7, arg3'=arg3P20, (arg3P20-arg3 <= 0 /\ -arg5+arg4 == 0 /\ arg3P20 > 0 /\ -2+arg7-arg6 >= 0 /\ arg4-arg6 > 0 /\ 1+arg2-arg7 == 0), cost: arg7-arg6
  68: f757_0_merge_GT -> f774_0_merge_GT : arg5'=arg2, arg2'=arg6, arg7'=arg7P20, arg4'=1+arg2, arg6'=arg7, arg3'=arg3P20, (arg3P20-arg3 <= 0 /\ -arg5+arg4 == 0 /\ arg3P20 > 0 /\ arg4-arg6 > 0 /\ -1+arg2-arg6 >= 0 /\ -arg2+arg7 > 0), cost: 1+arg2-arg6
  41: f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg1, arg2'=arg1, arg7'=arg6, arg4'=arg1, arg1'=arg1P21, arg6'=arg5, arg3'=arg5, (arg1P21 > 0 /\ -arg5+arg4 > 0 /\ arg1P21-arg3 <= 0), cost: 1
  69: f774_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg5, arg2'=arg1, arg7'=arg6, arg4'=1+arg5, arg1'=arg1P22, arg6'=arg5, arg3'=-1+arg1, (arg1P22 > 0 /\ -arg5+arg4 > 0 /\ arg1P22-arg3 <= 0 /\ -arg5+arg6 > 0 /\ arg5-arg1 >= 0), cost: 2+arg5-arg1
  70: f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg6, arg2'=arg1, arg7'=arg6, arg4'=arg6, arg1'=arg1P22, arg6'=arg5, arg3'=arg5+arg1-arg6, (arg1P22 > 0 /\ -arg5+arg4 > 0 /\ arg1P22-arg3 <= 0 /\ -arg1+arg6 > 0 /\ 1+arg5-arg6 == 0), cost: 1-arg1+arg6
  71: f774_0_merge_GT -> f1440_0_merge_GT : arg5'=1+arg5, arg2'=1+arg5, arg7'=arg6, arg4'=1+arg5, arg1'=arg1P23, arg6'=arg5, arg3'=arg5, (arg1P23 > 0 /\ -arg5+arg4 > 0 /\ arg1P23-arg3 <= 0 /\ -arg5+arg6 > 0 /\ arg5-arg1 >= 0), cost: 2+arg5-arg1
  72: f774_0_merge_GT -> f1440_0_merge_GT : arg5'=arg6, arg2'=arg6, arg7'=arg6, arg4'=arg6, arg1'=arg1P23, arg6'=arg5, arg3'=arg5, (arg1P23 > 0 /\ -arg5+arg4 > 0 /\ -1-arg1+arg6 >= 0 /\ arg1P23-arg3 <= 0 /\ 1+arg5-arg6 == 0), cost: 1-arg1+arg6
  24: __init -> f1_0_main_Load : arg5'=arg5P24, arg2'=arg2P24, arg7'=arg7P24, arg4'=arg4P24, arg1'=arg1P24, arg6'=arg6P24, arg3'=arg3P24, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  25: f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2, (arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1P0-arg1 <= 0), cost: 1
  64: f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P1, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg2, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 >= 0), cost: 1+arg2
  27: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
  28: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P3, arg6'=arg6P3, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  30: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P5, arg6'=arg6P5, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  31: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P7, arg6'=arg6P7, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
  33: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P9, arg6'=arg6P9, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  34: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P11, arg6'=arg6P11, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
  36: f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P15, arg6'=arg6P15, (1+arg5 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
  29: f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
  32: f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
  24: __init -> f1_0_main_Load : arg5'=arg5P24, arg2'=arg2P24, arg7'=arg7P24, arg4'=arg4P24, arg1'=arg1P24, arg6'=arg6P24, arg3'=arg3P24, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg5'=arg5P24, arg2'=arg2P24, arg7'=arg7P24, arg4'=arg4P24, arg1'=arg1P24, arg6'=arg6P24, arg3'=arg3P24, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2, (arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1P0-arg1 <= 0), cost: 1
New rule:
__init -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2P24, (arg1P0 > 0 /\ arg1P0-arg1P24 <= 0 /\ 1+arg2P24 > 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg5'=arg5P24, arg2'=arg2P24, arg7'=arg7P24, arg4'=arg4P24, arg1'=arg1P24, arg6'=arg6P24, arg3'=arg3P24, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f229_0_main_GE : arg5'=arg5P1, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg2, (arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -1+arg2 >= 0), cost: 1+arg2
New rule:
__init -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2P24, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg2P24, (-1+arg2P24 >= 0 /\ arg1P1 > 0 /\ arg1P1-arg1P24 <= 0), cost: 2+arg2P24

Applied deletion
Removed the following rules: 24 25 64

Eliminating location f507_0_sort_GE\' by chaining:

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P3, arg6'=arg6P3, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P3, arg6'=arg6P3, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P5, arg6'=arg6P5, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P5, arg6'=arg6P5, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P7, arg6'=arg6P7, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg1+arg2P4 <= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P7, arg6'=arg6P7, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ 1-arg4+arg3 <= 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P9, arg6'=arg6P9, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P9, arg6'=arg6P9, (-1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P11, arg6'=arg6P11, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg1+arg2P4 <= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P11, arg6'=arg6P11, (-1+arg2 >= 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0 /\ 1-arg4+arg3 <= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ 1-arg4+arg3 <= 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P15, arg6'=arg6P15, (1+arg5 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (1+arg5 > 0 /\ -arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (1+arg5 > 0 /\ -arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -1+arg1 >= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (1+arg5 > 0 /\ -arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2

Applied chaining
First rule:
f507_0_sort_GE -> f507_0_sort_GE\' : arg7'=arg7P15, arg6'=arg6P15, (1+arg5 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 1
Second rule:
f507_0_sort_GE\' -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ 1+arg5 > 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 2

Applied simplification
Original rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ 1+arg5 > 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ -1+arg2 >= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0 /\ -1+arg1 >= 0), cost: 2
New rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ 1+arg5 > 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2

Applied deletion
Removed the following rules: 28 29 30 31 32 33 34 36

Eliminated locations on tree-shaped paths
Start location: __init
  27: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
  75: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
  76: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2
  77: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg1+arg2P4 <= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
  78: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ 1-arg4+arg3 <= 0), cost: 2
  79: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (1+arg5 > 0 /\ -arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
  80: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ 1+arg5 > 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2
  73: __init -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2P24, (arg1P0 > 0 /\ arg1P0-arg1P24 <= 0 /\ 1+arg2P24 > 0), cost: 2
  74: __init -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2P24, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg2P24, (-1+arg2P24 >= 0 /\ arg1P1 > 0 /\ arg1P1-arg1P24 <= 0), cost: 2+arg2P24


Applied pruning (of leafs and parallel rules):
Start location: __init
  27: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
  75: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
  76: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2
  77: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg1+arg2P4 <= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
  78: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ 1-arg4+arg3 <= 0), cost: 2
  80: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ 1+arg5 > 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2
  73: __init -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2P24, (arg1P0 > 0 /\ arg1P0-arg1P24 <= 0 /\ 1+arg2P24 > 0), cost: 2
  74: __init -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2P24, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg2P24, (-1+arg2P24 >= 0 /\ arg1P1 > 0 /\ arg1P1-arg1P24 <= 0), cost: 2+arg2P24


Accelerated simple loops
Start location: __init
  27: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
  75: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
  76: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2
  77: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg1+arg2P4 <= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
  78: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ 1-arg4+arg3 <= 0), cost: 2
  80: f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ 1+arg5 > 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2
  73: __init -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2P24, (arg1P0 > 0 /\ arg1P0-arg1P24 <= 0 /\ 1+arg2P24 > 0), cost: 2
  74: __init -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2P24, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg2P24, (-1+arg2P24 >= 0 /\ arg1P1 > 0 /\ arg1P1-arg1P24 <= 0), cost: 2+arg2P24


Applied chaining
First rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
Second rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg4P4+arg4 > 0 /\ -arg1+arg2P4 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
New rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=0, (-1-arg4P4+arg3 > 0 /\ arg1P4-arg1 <= 0 /\ 3+2*arg4P4-arg3 > 0 /\ arg1P4 > 0 /\ arg2P4 > 0 /\ -1-2*arg4P4+arg3 >= 0 /\ -arg1+arg2P4 <= 0 /\ -arg2+arg3 <= 0), cost: 3

Applied chaining
First rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
Second rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2
New rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P8, arg7'=arg7P8, arg4'=-1+arg3, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-1-2*x1560+arg3 >= 0 /\ arg2P8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2P8 > 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 3+2*x1560-arg3 > 0 /\ -arg2+arg3 <= 0), cost: 3

Applied chaining
First rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
Second rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, (-arg2+arg2P4 <= 0 /\ arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -arg2+arg1P4 <= 0 /\ arg2P4 > 0 /\ 2+2*arg4P4-arg4-arg3 > 0 /\ -arg1+arg2P4 <= 0 /\ 1-arg4+arg3 <= 0 /\ -2*arg4P4+arg4+arg3 >= 0), cost: 2
New rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=0, (arg1P4-arg1 <= 0 /\ 3+2*arg4P4-arg3 > 0 /\ arg1P4 > 0 /\ arg2P4 > 0 /\ -2+arg3 >= 0 /\ -1-2*arg4P4+arg3 >= 0 /\ -arg1+arg2P4 <= 0 /\ -arg2+arg3 <= 0), cost: 3

Applied chaining
First rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
Second rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ 1-arg4+arg3 <= 0), cost: 2
New rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P8, arg7'=arg7P8, arg4'=-1+arg3, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-1-2*x1560+arg3 >= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -2+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 3+2*x1560-arg3 > 0 /\ -arg2+arg3 <= 0), cost: 3

Applied chaining
First rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
Second rule:
f507_0_sort_GE -> f507_0_sort_GE : arg2'=arg2P8, arg7'=arg7P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-arg2+arg1P8 <= 0 /\ 1+arg5 > 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -arg2+arg2P8 <= 0 /\ -2*x1560+arg4+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 2+2*x1560-arg4-arg3 > 0 /\ arg4-arg3 > 0), cost: 2
New rule:
f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P8, arg7'=arg7P8, arg4'=-1+arg3, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-1-2*x1560+arg3 >= 0 /\ arg2P8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2P8 > 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 3+2*x1560-arg3 > 0 /\ -arg2+arg3 <= 0), cost: 3

Applied deletion
Removed the following rules: 75 76 77 78 80

Chained accelerated rules with incoming rules
Start location: __init
  27: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P2, arg7'=arg7P2, arg4'=-1+arg3, arg1'=arg1P2, arg6'=arg6P2, arg3'=0, (arg1P2 > 0 /\ arg2P2 > 0 /\ arg1-arg2P2 >= 0 /\ 1+arg3 > 0 /\ -arg1P2+arg1 >= 0 /\ -arg2+arg3 <= 0), cost: 1
  81: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=0, (-1-arg4P4+arg3 > 0 /\ arg1P4-arg1 <= 0 /\ 3+2*arg4P4-arg3 > 0 /\ arg1P4 > 0 /\ arg2P4 > 0 /\ -1-2*arg4P4+arg3 >= 0 /\ -arg1+arg2P4 <= 0 /\ -arg2+arg3 <= 0), cost: 3
  82: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P8, arg7'=arg7P8, arg4'=-1+arg3, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-1-2*x1560+arg3 >= 0 /\ arg2P8-arg1 <= 0 /\ -1+arg3 > 0 /\ arg2P8 > 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 3+2*x1560-arg3 > 0 /\ -arg2+arg3 <= 0), cost: 3
  83: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P4, arg7'=arg7P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=0, (arg1P4-arg1 <= 0 /\ 3+2*arg4P4-arg3 > 0 /\ arg1P4 > 0 /\ arg2P4 > 0 /\ -2+arg3 >= 0 /\ -1-2*arg4P4+arg3 >= 0 /\ -arg1+arg2P4 <= 0 /\ -arg2+arg3 <= 0), cost: 3
  84: f229_0_main_GE -> f507_0_sort_GE : arg5'=arg3, arg2'=arg2P8, arg7'=arg7P8, arg4'=-1+arg3, arg1'=arg1P8, arg6'=arg6P8, arg3'=1+x1560, (-1-2*x1560+arg3 >= 0 /\ arg2P8-arg1 <= 0 /\ arg2P8 > 0 /\ -2+arg3 >= 0 /\ -arg1+arg1P8 <= 0 /\ arg1P8 > 0 /\ 3+2*x1560-arg3 > 0 /\ -arg2+arg3 <= 0), cost: 3
  73: __init -> f229_0_main_GE : arg5'=arg5P0, arg2'=0, arg7'=arg7P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg2P24, (arg1P0 > 0 /\ arg1P0-arg1P24 <= 0 /\ 1+arg2P24 > 0), cost: 2
  74: __init -> f229_0_main_GE : arg5'=arg5P1, arg2'=arg2P24, arg7'=arg7P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg2P24, (-1+arg2P24 >= 0 /\ arg1P1 > 0 /\ arg1P1-arg1P24 <= 0), cost: 2+arg2P24


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

