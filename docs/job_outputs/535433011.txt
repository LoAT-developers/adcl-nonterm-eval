WORST_CASE(Omega(0),?)

Initial ITS
Start location: l4
   0: l0 -> l1 : deltaext^0'=deltaext^post0, c0^0'=c0^post0, wnt^0'=wnt^post0, (wnt^0-wnt^post0 == 0 /\ 1-deltaext^0+deltaext^post0 == 0 /\ c0^0-c0^post0 == 0 /\ 2-2*deltaext^0+c0^0+wnt^0 <= 0), cost: 1
   2: l0 -> l2 : deltaext^0'=deltaext^post2, c0^0'=c0^post2, wnt^0'=wnt^post2, (wnt^0-wnt^post2 == 0 /\ 1+2*deltaext^0-c0^0-wnt^0 <= 0 /\ -1-deltaext^0+deltaext^post2 == 0 /\ -c0^post2+c0^0 == 0), cost: 1
   1: l1 -> l0 : deltaext^0'=deltaext^post1, c0^0'=c0^post1, wnt^0'=wnt^post1, (wnt^0-wnt^post1 == 0 /\ c0^0-c0^post1 == 0 /\ deltaext^0-deltaext^post1 == 0), cost: 1
   3: l2 -> l0 : deltaext^0'=deltaext^post3, c0^0'=c0^post3, wnt^0'=wnt^post3, (-c0^post3+c0^0 == 0 /\ -deltaext^post3+deltaext^0 == 0 /\ -wnt^post3+wnt^0 == 0), cost: 1
   4: l3 -> l0 : deltaext^0'=deltaext^post4, c0^0'=c0^post4, wnt^0'=wnt^post4, (-wnt^0 <= 0 /\ -3+deltaext^0 <= 0 /\ -wnt^post4+wnt^0 == 0 /\ -deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ -2+c0^post4 == 0 /\ -deltaext^post4+deltaext^0 == 0), cost: 1
   5: l4 -> l3 : deltaext^0'=deltaext^post5, c0^0'=c0^post5, wnt^0'=wnt^post5, (-c0^post5+c0^0 == 0 /\ -wnt^post5+wnt^0 == 0 /\ -deltaext^post5+deltaext^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : deltaext^0'=deltaext^post0, c0^0'=c0^post0, wnt^0'=wnt^post0, (wnt^0-wnt^post0 == 0 /\ 1-deltaext^0+deltaext^post0 == 0 /\ c0^0-c0^post0 == 0 /\ 2-2*deltaext^0+c0^0+wnt^0 <= 0), cost: 1
New rule:
l0 -> l1 : deltaext^0'=-1+deltaext^0, 2-2*deltaext^0+c0^0+wnt^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : deltaext^0'=deltaext^post1, c0^0'=c0^post1, wnt^0'=wnt^post1, (wnt^0-wnt^post1 == 0 /\ c0^0-c0^post1 == 0 /\ deltaext^0-deltaext^post1 == 0), cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : deltaext^0'=deltaext^post2, c0^0'=c0^post2, wnt^0'=wnt^post2, (wnt^0-wnt^post2 == 0 /\ 1+2*deltaext^0-c0^0-wnt^0 <= 0 /\ -1-deltaext^0+deltaext^post2 == 0 /\ -c0^post2+c0^0 == 0), cost: 1
New rule:
l0 -> l2 : deltaext^0'=1+deltaext^0, 1+2*deltaext^0-c0^0-wnt^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : deltaext^0'=deltaext^post3, c0^0'=c0^post3, wnt^0'=wnt^post3, (-c0^post3+c0^0 == 0 /\ -deltaext^post3+deltaext^0 == 0 /\ -wnt^post3+wnt^0 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : deltaext^0'=deltaext^post4, c0^0'=c0^post4, wnt^0'=wnt^post4, (-wnt^0 <= 0 /\ -3+deltaext^0 <= 0 /\ -wnt^post4+wnt^0 == 0 /\ -deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ -2+c0^post4 == 0 /\ -deltaext^post4+deltaext^0 == 0), cost: 1
New rule:
l3 -> l0 : c0^0'=2, (deltaext^0 >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0), cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : deltaext^0'=deltaext^post5, c0^0'=c0^post5, wnt^0'=wnt^post5, (-c0^post5+c0^0 == 0 /\ -wnt^post5+wnt^0 == 0 /\ -deltaext^post5+deltaext^0 == 0), cost: 1
New rule:
l4 -> l3 : TRUE, cost: 1

Simplified rules
Start location: l4
   6: l0 -> l1 : deltaext^0'=-1+deltaext^0, 2-2*deltaext^0+c0^0+wnt^0 <= 0, cost: 1
   8: l0 -> l2 : deltaext^0'=1+deltaext^0, 1+2*deltaext^0-c0^0-wnt^0 <= 0, cost: 1
   7: l1 -> l0 : TRUE, cost: 1
   9: l2 -> l0 : TRUE, cost: 1
  10: l3 -> l0 : c0^0'=2, (deltaext^0 >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0), cost: 1
  11: l4 -> l3 : TRUE, cost: 1


Eliminating location l3 by chaining:

Applied chaining
First rule:
l4 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l0 : c0^0'=2, (deltaext^0 >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0), cost: 1
New rule:
l4 -> l0 : c0^0'=2, (deltaext^0 >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0), cost: 2

Applied deletion
Removed the following rules: 10 11

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : deltaext^0'=-1+deltaext^0, 2-2*deltaext^0+c0^0+wnt^0 <= 0, cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : deltaext^0'=-1+deltaext^0, 2-2*deltaext^0+c0^0+wnt^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminating location l2 by chaining:

Applied chaining
First rule:
l0 -> l2 : deltaext^0'=1+deltaext^0, 1+2*deltaext^0-c0^0-wnt^0 <= 0, cost: 1
Second rule:
l2 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : deltaext^0'=1+deltaext^0, 1+2*deltaext^0-c0^0-wnt^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 8 9

Eliminated locations on linear paths
Start location: l4
  13: l0 -> l0 : deltaext^0'=-1+deltaext^0, 2-2*deltaext^0+c0^0+wnt^0 <= 0, cost: 2
  14: l0 -> l0 : deltaext^0'=1+deltaext^0, 1+2*deltaext^0-c0^0-wnt^0 <= 0, cost: 2
  12: l4 -> l0 : c0^0'=2, (deltaext^0 >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0), cost: 2


Applied acceleration
Original rule:
l0 -> l0 : deltaext^0'=-1+deltaext^0, 2-2*deltaext^0+c0^0+wnt^0 <= 0, cost: 2
New rule:
l0 -> l0 : deltaext^0'=deltaext^0-n, (2*deltaext^0-c0^0-wnt^0-2*n >= 0 /\ n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_epbLIL.txt

Applied acceleration
Original rule:
l0 -> l0 : deltaext^0'=1+deltaext^0, 1+2*deltaext^0-c0^0-wnt^0 <= 0, cost: 2
New rule:
l0 -> l0 : deltaext^0'=deltaext^0+n0, (1-2*deltaext^0+c0^0+wnt^0-2*n0 >= 0 /\ n0 >= 0), cost: 2*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_CLGpEc.txt

Applied deletion
Removed the following rules: 13 14

Accelerated simple loops
Start location: l4
  15: l0 -> l0 : deltaext^0'=deltaext^0-n, (2*deltaext^0-c0^0-wnt^0-2*n >= 0 /\ n >= 0), cost: 2*n
  16: l0 -> l0 : deltaext^0'=deltaext^0+n0, (1-2*deltaext^0+c0^0+wnt^0-2*n0 >= 0 /\ n0 >= 0), cost: 2*n0
  12: l4 -> l0 : c0^0'=2, (deltaext^0 >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0), cost: 2


Applied chaining
First rule:
l4 -> l0 : c0^0'=2, (deltaext^0 >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l0 -> l0 : deltaext^0'=deltaext^0-n, (2*deltaext^0-c0^0-wnt^0-2*n >= 0 /\ n >= 0), cost: 2*n
New rule:
l4 -> l0 : deltaext^0'=deltaext^0-n, c0^0'=2, (-2+2*deltaext^0-wnt^0-2*n >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0 /\ n >= 0), cost: 2+2*n

Applied chaining
First rule:
l4 -> l0 : c0^0'=2, (deltaext^0 >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0), cost: 2
Second rule:
l0 -> l0 : deltaext^0'=deltaext^0+n0, (1-2*deltaext^0+c0^0+wnt^0-2*n0 >= 0 /\ n0 >= 0), cost: 2*n0
New rule:
l4 -> l0 : deltaext^0'=deltaext^0+n0, c0^0'=2, (deltaext^0 >= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0 /\ n0 >= 0 /\ 3-2*deltaext^0+wnt^0-2*n0 >= 0), cost: 2+2*n0

Applied deletion
Removed the following rules: 15 16

Chained accelerated rules with incoming rules
Start location: l4
  12: l4 -> l0 : c0^0'=2, (deltaext^0 >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0), cost: 2
  17: l4 -> l0 : deltaext^0'=deltaext^0-n, c0^0'=2, (-2+2*deltaext^0-wnt^0-2*n >= 0 /\ -3+deltaext^0 <= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0 /\ n >= 0), cost: 2+2*n
  18: l4 -> l0 : deltaext^0'=deltaext^0+n0, c0^0'=2, (deltaext^0 >= 0 /\ -3+wnt^0 <= 0 /\ wnt^0 >= 0 /\ n0 >= 0 /\ 3-2*deltaext^0+wnt^0-2*n0 >= 0), cost: 2+2*n0


Removed unreachable locations and irrelevant leafs
Start location: l4
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

