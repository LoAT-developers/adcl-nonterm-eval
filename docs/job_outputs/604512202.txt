NO

Initial ITS

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [5] : -1+y < 0, cost: 1
   8: [3] -> [4] : -1+y >= 0, cost: 1
   3: [5] -> [6] : x >= 0, cost: 1
   6: [5] -> [8] : x < 0, cost: 1
   4: [6] -> [7] : x'=-y+x, T, cost: 1
   5: [7] -> [5] : T, cost: 1
   7: [8] -> [4] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x y
   9: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [5] : -1+y < 0, cost: 1
   8: [3] -> [4] : -1+y >= 0, cost: 1
  11: [5] -> [4] : x < 0, cost: 1
  12: [5] -> [5] : x'=-y+x, x >= 0, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[5] -> [6] : x >= 0, cost: 1
	Second rule:
	[6] -> [7] : x'=-y+x, T, cost: 1
	New rule:
	[5] -> [7] : x'=-y+x, x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[5] -> [8] : x < 0, cost: 1
	Second rule:
	[8] -> [4] : T, cost: 1
	New rule:
	[5] -> [4] : x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[5] -> [7] : x'=-y+x, x >= 0, cost: 1
	Second rule:
	[7] -> [5] : T, cost: 1
	New rule:
	[5] -> [5] : x'=-y+x, x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 10

Step with 9

	Trace

	9[T]
	
	Blocked

	[{}, {}]

Step with 2

	Trace

	9[T], 2[(-1+y < 0)]
	
	Blocked

	[{}, {}, {}]

Step with 11

	Trace

	9[T], 2[(-1+y < 0)], 11[(x < 0)]
	
	Blocked

	[{}, {}, {}, {}]

Backtrack

	Trace

	9[T], 2[(-1+y < 0)]
	
	Blocked

	[{}, {}, {11[T]}]

Step with 12

	Trace

	9[T], 2[(-1+y < 0)], 12[(x >= 0)]
	
	Blocked

	[{}, {}, {11[T]}, {}]

Nonterm

Start location: [1]
Program variables: x y
   9: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   2: [3] -> [5] : -1+y < 0, cost: 1
   8: [3] -> [4] : -1+y >= 0, cost: 1
  11: [5] -> [4] : x < 0, cost: 1
  12: [5] -> [5] : x'=-y+x, x >= 0, cost: 1
  13: [5] -> LoAT_sink : (y <= 0 /\ x >= 0), cost: NONTERM
  14: [5] -> [5] : x'=-n*y+x, (-(-1+n)*y+x >= 0 /\ -1+n >= 0 /\ x >= 0), cost: 1

	Certificate of Non-Termination

	Original rule:
	[5] -> [5] : x'=-y+x, (x >= 0), cost: 1
	New rule:
	[5] -> LoAT_sink : (y <= 0 /\ x >= 0), cost: NONTERM

		x >= 0 [0]: eventual decrease yields (-(-1+n)*y+x >= 0 /\ x >= 0)
		
		x >= 0 [1]: eventual increase yields (y <= 0 /\ x >= 0)
		
		Replacement map: {x >= 0 -> (y <= 0 /\ x >= 0)}

	Loop Acceleration

	Original rule:
	[5] -> [5] : x'=-y+x, (x >= 0), cost: 1
	New rule:
	[5] -> [5] : x'=-n*y+x, (-(-1+n)*y+x >= 0 /\ -1+n >= 0 /\ x >= 0), cost: 1

		x >= 0 [0]: eventual decrease yields (-(-1+n)*y+x >= 0 /\ x >= 0)
		
		x >= 0 [1]: eventual increase yields (y <= 0 /\ x >= 0)
		
		Replacement map: {x >= 0 -> (-(-1+n)*y+x >= 0 /\ x >= 0)}

Step with 13

	Trace

	9[T], 2[(-1+y < 0)], 13[(y <= 0 /\ x >= 0)]
	
	Blocked

	[{}, {}, {11[T]}, {13[T]}]

Refute

	Counterexample

	[ x=0 y=0 ] 9 [ x=0 y=0 ] 2 [ x=x y=y ] 13
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
