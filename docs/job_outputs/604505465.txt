WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f127_0_average_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
   1: f127_0_average_LE -> f127_0_average_LE : arg2'=arg2P1, arg1'=arg1P1, (1 > 0 /\ 1+arg1 > 0 /\ arg2 > 0 /\ 1+arg1-arg1P1 == 0 /\ -1+arg2-arg2P1 == 0 /\ -1 < 0), cost: 1
   2: f127_0_average_LE -> f127_0_average_LE : arg2'=arg2P2, arg1'=arg1P2, (-2+arg1 > 0 /\ -2 < 0 /\ 1-arg2P2 == 0 /\ -arg2 == 0 /\ -2+arg1-arg1P2 == 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=arg2P1, arg1'=arg1P1, (1 > 0 /\ 1+arg1 > 0 /\ arg2 > 0 /\ 1+arg1-arg1P1 == 0 /\ -1+arg2-arg2P1 == 0 /\ -1 < 0), cost: 1
New rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=-1+arg2, arg1'=1+arg1, (1+arg1 > 0 /\ arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=arg2P2, arg1'=arg1P2, (-2+arg1 > 0 /\ -2 < 0 /\ 1-arg2P2 == 0 /\ -arg2 == 0 /\ -2+arg1-arg1P2 == 0), cost: 1
New rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=1, arg1'=-2+arg1, (-2+arg1 > 0 /\ arg2 == 0), cost: 1

Simplified rules
Start location: __init
   0: f1_0_main_Load -> f127_0_average_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
   4: f127_0_average_LE -> f127_0_average_LE : arg2'=-1+arg2, arg1'=1+arg1, (1+arg1 > 0 /\ arg2 > 0), cost: 1
   5: f127_0_average_LE -> f127_0_average_LE : arg2'=1, arg1'=-2+arg1, (-2+arg1 > 0 /\ arg2 == 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied acceleration
Original rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=-1+arg2, arg1'=1+arg1, (1+arg1 > 0 /\ arg2 > 0), cost: 1
New rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=arg2-n, arg1'=arg1+n, (1+arg2-n > 0 /\ 1+arg1 > 0 /\ n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FgJbaE.txt

Applied instantiation
Original rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=arg2-n, arg1'=arg1+n, (1+arg2-n > 0 /\ 1+arg1 > 0 /\ n >= 0), cost: n
New rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=0, arg1'=arg2+arg1, (1 > 0 /\ 1+arg1 > 0 /\ arg2 >= 0), cost: arg2

Applied simplification
Original rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=0, arg1'=arg2+arg1, (1 > 0 /\ 1+arg1 > 0 /\ arg2 >= 0), cost: arg2
New rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=0, arg1'=arg2+arg1, (1+arg1 > 0 /\ arg2 >= 0), cost: arg2

Applied deletion
Removed the following rules: 4

Accelerated simple loops
Start location: __init
   0: f1_0_main_Load -> f127_0_average_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
   5: f127_0_average_LE -> f127_0_average_LE : arg2'=1, arg1'=-2+arg1, (-2+arg1 > 0 /\ arg2 == 0), cost: 1
   7: f127_0_average_LE -> f127_0_average_LE : arg2'=0, arg1'=arg2+arg1, (1+arg1 > 0 /\ arg2 >= 0), cost: arg2
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f127_0_average_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
Second rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=1, arg1'=-2+arg1, (-2+arg1 > 0 /\ arg2 == 0), cost: 1
New rule:
f1_0_main_Load -> f127_0_average_LE : arg2'=1, arg1'=-2+arg1P0, (arg1 > 0 /\ -2+arg1P0 > 0 /\ -1+arg2 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f127_0_average_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
Second rule:
f127_0_average_LE -> f127_0_average_LE : arg2'=0, arg1'=arg2+arg1, (1+arg1 > 0 /\ arg2 >= 0), cost: arg2
New rule:
f1_0_main_Load -> f127_0_average_LE : arg2'=0, arg1'=arg2P0+arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1+arg2P0

Applied deletion
Removed the following rules: 5 7

Chained accelerated rules with incoming rules
Start location: __init
   0: f1_0_main_Load -> f127_0_average_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
   8: f1_0_main_Load -> f127_0_average_LE : arg2'=1, arg1'=-2+arg1P0, (arg1 > 0 /\ -2+arg1P0 > 0 /\ -1+arg2 > 0), cost: 2
   9: f1_0_main_Load -> f127_0_average_LE : arg2'=0, arg1'=arg2P0+arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1+arg2P0
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

