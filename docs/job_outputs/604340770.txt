NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l3, true, seq{main_oldx -> main_x, main_x -> ~(main_y), main_y -> main_oldx}>
<l3, l2, true>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l4, true, seq{main__func_return_ -> 0}>
<l4, l5, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l5, l6, true, seq{main_x -> varCall_1}>
<l6, l7, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l7, l1, true, seq{main_y -> varCall_2}>
<l1, l2, true>
<l2, l3, true, seq{main_oldx -> main_x, main_x -> ~(main_y), main_y -> main_oldx}>
<l3, l2, true>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [5 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 18, col: 6> <line: 19, col: 6>
main | function | [integer, ()] | <line: 13, col: 1>
oldx | local variable | integer | <line: 15, col: 5> | <line: 21, col: 9> <line: 23, col: 7>
x | local variable | integer | <line: 16, col: 2> | <line: 18, col: 2> <line: 21, col: 16> <line: 22, col: 3>
y | local variable | integer | <line: 17, col: 2> | <line: 19, col: 2> <line: 22, col: 8> <line: 23, col: 3>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef3) /\ (main_y = undef4)>
<l2, l2, true, par{main_x -> ~(main_y), main_y -> main_x}>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, true, {main_x -> -main_y, main_y -> main_x, rest remain the same}>
Variables:
main_x, main_y

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef3 /\ main_y = undef4, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001798

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000472s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000751s
[21534 : 21536]
[21534 : 21537]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009636s
Time used: 0.009305
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, main_x = undef3 /\ main_y = undef4, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, main_x = undef3 /\ main_y = undef4, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001118s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001253s
Cannot prove unreachability

[21534 : 21541]
[21534 : 21542]
Successful child: 21541

[32mProgram does NOT terminate[0m
