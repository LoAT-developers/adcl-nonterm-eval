WORST_CASE(Omega(0),?)

Initial ITS
Start location: l6
   0: l0 -> l1 : x_32^0'=x_32^post0, temp0_14^0'=temp0_14^post0, y_28^0'=y_28^post0, x_27^0'=x_27^post0, result_11^0'=result_11^post0, y_16^0'=y_16^post0, x_13^0'=x_13^post0, y_33^0'=y_33^post0, (0 == 0 /\ -y_33^post0+y_33^0 == 0 /\ x_32^0-x_32^post0 == 0 /\ -x_27^post0+x_27^0 == 0 /\ y_28^0-y_28^post0 == 0 /\ -temp0_14^post0+temp0_14^0 == 0 /\ result_11^0-result_11^post0 == 0), cost: 1
   1: l1 -> l2 : x_32^0'=x_32^post1, temp0_14^0'=temp0_14^post1, y_28^0'=y_28^post1, x_27^0'=x_27^post1, result_11^0'=result_11^post1, y_16^0'=y_16^post1, x_13^0'=x_13^post1, y_33^0'=y_33^post1, (0 == 0 /\ temp0_14^0-temp0_14^post1 == 0 /\ 1-x_13^0 <= 0 /\ x_32^0-x_32^post1 == 0 /\ x_27^0-x_27^post1 == 0 /\ -x_13^post1+x_13^0 == 0 /\ -y_33^post1+y_33^0 == 0 /\ -result_11^post1+result_11^0 == 0 /\ 1-y_16^post1 <= 0 /\ -y_28^post1+y_28^0 == 0), cost: 1
   2: l1 -> l3 : x_32^0'=x_32^post2, temp0_14^0'=temp0_14^post2, y_28^0'=y_28^post2, x_27^0'=x_27^post2, result_11^0'=result_11^post2, y_16^0'=y_16^post2, x_13^0'=x_13^post2, y_33^0'=y_33^post2, (-temp0_14^0+result_11^post2 == 0 /\ -y_33^post2+y_33^0 == 0 /\ y_28^0-y_28^post2 == 0 /\ x_32^0-x_32^post2 == 0 /\ -y_16^post2+y_16^0 == 0 /\ x_13^0 <= 0 /\ -temp0_14^post2+temp0_14^0 == 0 /\ -x_13^post2+x_13^0 == 0 /\ x_27^0-x_27^post2 == 0), cost: 1
   4: l2 -> l1 : x_32^0'=x_32^post4, temp0_14^0'=temp0_14^post4, y_28^0'=y_28^post4, x_27^0'=x_27^post4, result_11^0'=result_11^post4, y_16^0'=y_16^post4, x_13^0'=x_13^post4, y_33^0'=y_33^post4, (x_32^0-x_32^post4 == 0 /\ -x_27^post4+x_27^0 == 0 /\ y_28^0-y_28^post4 == 0 /\ result_11^0-result_11^post4 == 0 /\ y_16^0 <= 0 /\ -x_13^post4+x_13^0 == 0 /\ temp0_14^0-temp0_14^post4 == 0 /\ y_16^0-y_16^post4 == 0 /\ -y_33^post4+y_33^0 == 0), cost: 1
   5: l2 -> l5 : x_32^0'=x_32^post5, temp0_14^0'=temp0_14^post5, y_28^0'=y_28^post5, x_27^0'=x_27^post5, result_11^0'=result_11^post5, y_16^0'=y_16^post5, x_13^0'=x_13^post5, y_33^0'=y_33^post5, (0 == 0 /\ 1+y_16^post5-y_16^0 == 0 /\ -1-y_16^post5+y_33^post5 <= 0 /\ -result_11^post5+result_11^0 == 0 /\ 1+x_13^post5-x_13^0 == 0 /\ x_27^0-x_27^post5 == 0 /\ 1+x_13^post5-x_32^post5 <= 0 /\ 1-y_33^post5 <= 0 /\ -y_28^post5+y_28^0 == 0 /\ 1-y_16^0 <= 0 /\ 1+y_16^post5-y_33^post5 <= 0 /\ -1-x_13^post5+x_32^post5 <= 0 /\ temp0_14^0-temp0_14^post5 == 0), cost: 1
   3: l4 -> l2 : x_32^0'=x_32^post3, temp0_14^0'=temp0_14^post3, y_28^0'=y_28^post3, x_27^0'=x_27^post3, result_11^0'=result_11^post3, y_16^0'=y_16^post3, x_13^0'=x_13^post3, y_33^0'=y_33^post3, (0 == 0 /\ temp0_14^0-temp0_14^post3 == 0 /\ 1+x_13^post3-x_13^0 == 0 /\ 1-y_28^post3+y_16^post3 <= 0 /\ 1-x_27^post3 <= 0 /\ 1+x_13^post3-x_27^post3 <= 0 /\ x_32^0-x_32^post3 == 0 /\ 1-y_28^post3 <= 0 /\ 1+y_16^post3-y_16^0 == 0 /\ -1+y_28^post3-y_16^post3 <= 0 /\ 1-y_16^0 <= 0 /\ -result_11^post3+result_11^0 == 0 /\ -1-x_13^post3+x_27^post3 <= 0 /\ -y_33^post3+y_33^0 == 0), cost: 1
   6: l5 -> l2 : x_32^0'=x_32^post6, temp0_14^0'=temp0_14^post6, y_28^0'=y_28^post6, x_27^0'=x_27^post6, result_11^0'=result_11^post6, y_16^0'=y_16^post6, x_13^0'=x_13^post6, y_33^0'=y_33^post6, (-x_27^post6+x_27^0 == 0 /\ y_28^0-y_28^post6 == 0 /\ -x_13^post6+x_13^0 == 0 /\ x_32^0-x_32^post6 == 0 /\ -temp0_14^post6+temp0_14^0 == 0 /\ y_16^0-y_16^post6 == 0 /\ -y_33^post6+y_33^0 == 0 /\ result_11^0-result_11^post6 == 0), cost: 1
   7: l6 -> l0 : x_32^0'=x_32^post7, temp0_14^0'=temp0_14^post7, y_28^0'=y_28^post7, x_27^0'=x_27^post7, result_11^0'=result_11^post7, y_16^0'=y_16^post7, x_13^0'=x_13^post7, y_33^0'=y_33^post7, (x_32^0-x_32^post7 == 0 /\ result_11^0-result_11^post7 == 0 /\ -y_33^post7+y_33^0 == 0 /\ x_13^0-x_13^post7 == 0 /\ -y_28^post7+y_28^0 == 0 /\ x_27^0-x_27^post7 == 0 /\ -y_16^post7+y_16^0 == 0 /\ temp0_14^0-temp0_14^post7 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l6
   0: l0 -> l1 : x_32^0'=x_32^post0, temp0_14^0'=temp0_14^post0, y_28^0'=y_28^post0, x_27^0'=x_27^post0, result_11^0'=result_11^post0, y_16^0'=y_16^post0, x_13^0'=x_13^post0, y_33^0'=y_33^post0, (0 == 0 /\ -y_33^post0+y_33^0 == 0 /\ x_32^0-x_32^post0 == 0 /\ -x_27^post0+x_27^0 == 0 /\ y_28^0-y_28^post0 == 0 /\ -temp0_14^post0+temp0_14^0 == 0 /\ result_11^0-result_11^post0 == 0), cost: 1
   1: l1 -> l2 : x_32^0'=x_32^post1, temp0_14^0'=temp0_14^post1, y_28^0'=y_28^post1, x_27^0'=x_27^post1, result_11^0'=result_11^post1, y_16^0'=y_16^post1, x_13^0'=x_13^post1, y_33^0'=y_33^post1, (0 == 0 /\ temp0_14^0-temp0_14^post1 == 0 /\ 1-x_13^0 <= 0 /\ x_32^0-x_32^post1 == 0 /\ x_27^0-x_27^post1 == 0 /\ -x_13^post1+x_13^0 == 0 /\ -y_33^post1+y_33^0 == 0 /\ -result_11^post1+result_11^0 == 0 /\ 1-y_16^post1 <= 0 /\ -y_28^post1+y_28^0 == 0), cost: 1
   4: l2 -> l1 : x_32^0'=x_32^post4, temp0_14^0'=temp0_14^post4, y_28^0'=y_28^post4, x_27^0'=x_27^post4, result_11^0'=result_11^post4, y_16^0'=y_16^post4, x_13^0'=x_13^post4, y_33^0'=y_33^post4, (x_32^0-x_32^post4 == 0 /\ -x_27^post4+x_27^0 == 0 /\ y_28^0-y_28^post4 == 0 /\ result_11^0-result_11^post4 == 0 /\ y_16^0 <= 0 /\ -x_13^post4+x_13^0 == 0 /\ temp0_14^0-temp0_14^post4 == 0 /\ y_16^0-y_16^post4 == 0 /\ -y_33^post4+y_33^0 == 0), cost: 1
   5: l2 -> l5 : x_32^0'=x_32^post5, temp0_14^0'=temp0_14^post5, y_28^0'=y_28^post5, x_27^0'=x_27^post5, result_11^0'=result_11^post5, y_16^0'=y_16^post5, x_13^0'=x_13^post5, y_33^0'=y_33^post5, (0 == 0 /\ 1+y_16^post5-y_16^0 == 0 /\ -1-y_16^post5+y_33^post5 <= 0 /\ -result_11^post5+result_11^0 == 0 /\ 1+x_13^post5-x_13^0 == 0 /\ x_27^0-x_27^post5 == 0 /\ 1+x_13^post5-x_32^post5 <= 0 /\ 1-y_33^post5 <= 0 /\ -y_28^post5+y_28^0 == 0 /\ 1-y_16^0 <= 0 /\ 1+y_16^post5-y_33^post5 <= 0 /\ -1-x_13^post5+x_32^post5 <= 0 /\ temp0_14^0-temp0_14^post5 == 0), cost: 1
   6: l5 -> l2 : x_32^0'=x_32^post6, temp0_14^0'=temp0_14^post6, y_28^0'=y_28^post6, x_27^0'=x_27^post6, result_11^0'=result_11^post6, y_16^0'=y_16^post6, x_13^0'=x_13^post6, y_33^0'=y_33^post6, (-x_27^post6+x_27^0 == 0 /\ y_28^0-y_28^post6 == 0 /\ -x_13^post6+x_13^0 == 0 /\ x_32^0-x_32^post6 == 0 /\ -temp0_14^post6+temp0_14^0 == 0 /\ y_16^0-y_16^post6 == 0 /\ -y_33^post6+y_33^0 == 0 /\ result_11^0-result_11^post6 == 0), cost: 1
   7: l6 -> l0 : x_32^0'=x_32^post7, temp0_14^0'=temp0_14^post7, y_28^0'=y_28^post7, x_27^0'=x_27^post7, result_11^0'=result_11^post7, y_16^0'=y_16^post7, x_13^0'=x_13^post7, y_33^0'=y_33^post7, (x_32^0-x_32^post7 == 0 /\ result_11^0-result_11^post7 == 0 /\ -y_33^post7+y_33^0 == 0 /\ x_13^0-x_13^post7 == 0 /\ -y_28^post7+y_28^0 == 0 /\ x_27^0-x_27^post7 == 0 /\ -y_16^post7+y_16^0 == 0 /\ temp0_14^0-temp0_14^post7 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x_32^0'=x_32^post0, temp0_14^0'=temp0_14^post0, y_28^0'=y_28^post0, x_27^0'=x_27^post0, result_11^0'=result_11^post0, y_16^0'=y_16^post0, x_13^0'=x_13^post0, y_33^0'=y_33^post0, (0 == 0 /\ -y_33^post0+y_33^0 == 0 /\ x_32^0-x_32^post0 == 0 /\ -x_27^post0+x_27^0 == 0 /\ y_28^0-y_28^post0 == 0 /\ -temp0_14^post0+temp0_14^0 == 0 /\ result_11^0-result_11^post0 == 0), cost: 1
New rule:
l0 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l2 : x_32^0'=x_32^post1, temp0_14^0'=temp0_14^post1, y_28^0'=y_28^post1, x_27^0'=x_27^post1, result_11^0'=result_11^post1, y_16^0'=y_16^post1, x_13^0'=x_13^post1, y_33^0'=y_33^post1, (0 == 0 /\ temp0_14^0-temp0_14^post1 == 0 /\ 1-x_13^0 <= 0 /\ x_32^0-x_32^post1 == 0 /\ x_27^0-x_27^post1 == 0 /\ -x_13^post1+x_13^0 == 0 /\ -y_33^post1+y_33^0 == 0 /\ -result_11^post1+result_11^0 == 0 /\ 1-y_16^post1 <= 0 /\ -y_28^post1+y_28^0 == 0), cost: 1
New rule:
l1 -> l2 : y_16^0'=y_16^post1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 1

Applied preprocessing
Original rule:
l2 -> l1 : x_32^0'=x_32^post4, temp0_14^0'=temp0_14^post4, y_28^0'=y_28^post4, x_27^0'=x_27^post4, result_11^0'=result_11^post4, y_16^0'=y_16^post4, x_13^0'=x_13^post4, y_33^0'=y_33^post4, (x_32^0-x_32^post4 == 0 /\ -x_27^post4+x_27^0 == 0 /\ y_28^0-y_28^post4 == 0 /\ result_11^0-result_11^post4 == 0 /\ y_16^0 <= 0 /\ -x_13^post4+x_13^0 == 0 /\ temp0_14^0-temp0_14^post4 == 0 /\ y_16^0-y_16^post4 == 0 /\ -y_33^post4+y_33^0 == 0), cost: 1
New rule:
l2 -> l1 : y_16^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l5 : x_32^0'=x_32^post5, temp0_14^0'=temp0_14^post5, y_28^0'=y_28^post5, x_27^0'=x_27^post5, result_11^0'=result_11^post5, y_16^0'=y_16^post5, x_13^0'=x_13^post5, y_33^0'=y_33^post5, (0 == 0 /\ 1+y_16^post5-y_16^0 == 0 /\ -1-y_16^post5+y_33^post5 <= 0 /\ -result_11^post5+result_11^0 == 0 /\ 1+x_13^post5-x_13^0 == 0 /\ x_27^0-x_27^post5 == 0 /\ 1+x_13^post5-x_32^post5 <= 0 /\ 1-y_33^post5 <= 0 /\ -y_28^post5+y_28^0 == 0 /\ 1-y_16^0 <= 0 /\ 1+y_16^post5-y_33^post5 <= 0 /\ -1-x_13^post5+x_32^post5 <= 0 /\ temp0_14^0-temp0_14^post5 == 0), cost: 1
New rule:
l2 -> l5 : x_32^0'=x_13^0, y_16^0'=-1+y_16^0, x_13^0'=-1+x_13^0, y_33^0'=y_16^0, -1+y_16^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l2 : x_32^0'=x_32^post6, temp0_14^0'=temp0_14^post6, y_28^0'=y_28^post6, x_27^0'=x_27^post6, result_11^0'=result_11^post6, y_16^0'=y_16^post6, x_13^0'=x_13^post6, y_33^0'=y_33^post6, (-x_27^post6+x_27^0 == 0 /\ y_28^0-y_28^post6 == 0 /\ -x_13^post6+x_13^0 == 0 /\ x_32^0-x_32^post6 == 0 /\ -temp0_14^post6+temp0_14^0 == 0 /\ y_16^0-y_16^post6 == 0 /\ -y_33^post6+y_33^0 == 0 /\ result_11^0-result_11^post6 == 0), cost: 1
New rule:
l5 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l0 : x_32^0'=x_32^post7, temp0_14^0'=temp0_14^post7, y_28^0'=y_28^post7, x_27^0'=x_27^post7, result_11^0'=result_11^post7, y_16^0'=y_16^post7, x_13^0'=x_13^post7, y_33^0'=y_33^post7, (x_32^0-x_32^post7 == 0 /\ result_11^0-result_11^post7 == 0 /\ -y_33^post7+y_33^0 == 0 /\ x_13^0-x_13^post7 == 0 /\ -y_28^post7+y_28^0 == 0 /\ x_27^0-x_27^post7 == 0 /\ -y_16^post7+y_16^0 == 0 /\ temp0_14^0-temp0_14^post7 == 0), cost: 1
New rule:
l6 -> l0 : TRUE, cost: 1

Simplified rules
Start location: l6
   8: l0 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 1
   9: l1 -> l2 : y_16^0'=y_16^post1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 1
  10: l2 -> l1 : y_16^0 <= 0, cost: 1
  11: l2 -> l5 : x_32^0'=x_13^0, y_16^0'=-1+y_16^0, x_13^0'=-1+x_13^0, y_33^0'=y_16^0, -1+y_16^0 >= 0, cost: 1
  12: l5 -> l2 : TRUE, cost: 1
  13: l6 -> l0 : TRUE, cost: 1


Eliminating location l0 by chaining:

Applied chaining
First rule:
l6 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 1
New rule:
l6 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 8 13

Eliminating location l5 by chaining:

Applied chaining
First rule:
l2 -> l5 : x_32^0'=x_13^0, y_16^0'=-1+y_16^0, x_13^0'=-1+x_13^0, y_33^0'=y_16^0, -1+y_16^0 >= 0, cost: 1
Second rule:
l5 -> l2 : TRUE, cost: 1
New rule:
l2 -> l2 : x_32^0'=x_13^0, y_16^0'=-1+y_16^0, x_13^0'=-1+x_13^0, y_33^0'=y_16^0, -1+y_16^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 11 12

Eliminated locations on linear paths
Start location: l6
   9: l1 -> l2 : y_16^0'=y_16^post1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 1
  10: l2 -> l1 : y_16^0 <= 0, cost: 1
  15: l2 -> l2 : x_32^0'=x_13^0, y_16^0'=-1+y_16^0, x_13^0'=-1+x_13^0, y_33^0'=y_16^0, -1+y_16^0 >= 0, cost: 2
  14: l6 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 2


Applied acceleration
Original rule:
l2 -> l2 : x_32^0'=x_13^0, y_16^0'=-1+y_16^0, x_13^0'=-1+x_13^0, y_33^0'=y_16^0, -1+y_16^0 >= 0, cost: 2
New rule:
l2 -> l2 : x_32^0'=1-n+x_13^0, y_16^0'=-n+y_16^0, x_13^0'=-n+x_13^0, y_33^0'=1-n+y_16^0, (-n+y_16^0 >= 0 /\ -1+n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GCpdbA.txt

Applied instantiation
Original rule:
l2 -> l2 : x_32^0'=1-n+x_13^0, y_16^0'=-n+y_16^0, x_13^0'=-n+x_13^0, y_33^0'=1-n+y_16^0, (-n+y_16^0 >= 0 /\ -1+n >= 0), cost: 2*n
New rule:
l2 -> l2 : x_32^0'=1-y_16^0+x_13^0, y_16^0'=0, x_13^0'=-y_16^0+x_13^0, y_33^0'=1, (0 >= 0 /\ -1+y_16^0 >= 0), cost: 2*y_16^0

Applied simplification
Original rule:
l2 -> l2 : x_32^0'=1-y_16^0+x_13^0, y_16^0'=0, x_13^0'=-y_16^0+x_13^0, y_33^0'=1, (0 >= 0 /\ -1+y_16^0 >= 0), cost: 2*y_16^0
New rule:
l2 -> l2 : x_32^0'=1-y_16^0+x_13^0, y_16^0'=0, x_13^0'=-y_16^0+x_13^0, y_33^0'=1, -1+y_16^0 >= 0, cost: 2*y_16^0

Applied deletion
Removed the following rules: 15

Accelerated simple loops
Start location: l6
   9: l1 -> l2 : y_16^0'=y_16^post1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 1
  10: l2 -> l1 : y_16^0 <= 0, cost: 1
  17: l2 -> l2 : x_32^0'=1-y_16^0+x_13^0, y_16^0'=0, x_13^0'=-y_16^0+x_13^0, y_33^0'=1, -1+y_16^0 >= 0, cost: 2*y_16^0
  14: l6 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 2


Applied chaining
First rule:
l1 -> l2 : y_16^0'=y_16^post1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 1
Second rule:
l2 -> l2 : x_32^0'=1-y_16^0+x_13^0, y_16^0'=0, x_13^0'=-y_16^0+x_13^0, y_33^0'=1, -1+y_16^0 >= 0, cost: 2*y_16^0
New rule:
l1 -> l2 : x_32^0'=1-y_16^post1+x_13^0, y_16^0'=0, x_13^0'=-y_16^post1+x_13^0, y_33^0'=1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 1+2*y_16^post1

Applied deletion
Removed the following rules: 17

Chained accelerated rules with incoming rules
Start location: l6
   9: l1 -> l2 : y_16^0'=y_16^post1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 1
  18: l1 -> l2 : x_32^0'=1-y_16^post1+x_13^0, y_16^0'=0, x_13^0'=-y_16^post1+x_13^0, y_33^0'=1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 1+2*y_16^post1
  10: l2 -> l1 : y_16^0 <= 0, cost: 1
  14: l6 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 2


Eliminating location l2 by chaining:

Applied chaining
First rule:
l1 -> l2 : x_32^0'=1-y_16^post1+x_13^0, y_16^0'=0, x_13^0'=-y_16^post1+x_13^0, y_33^0'=1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 1+2*y_16^post1
Second rule:
l2 -> l1 : y_16^0 <= 0, cost: 1
New rule:
l1 -> l1 : x_32^0'=1-y_16^post1+x_13^0, y_16^0'=0, x_13^0'=-y_16^post1+x_13^0, y_33^0'=1, (0 <= 0 /\ -1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 2+2*y_16^post1

Applied simplification
Original rule:
l1 -> l1 : x_32^0'=1-y_16^post1+x_13^0, y_16^0'=0, x_13^0'=-y_16^post1+x_13^0, y_33^0'=1, (0 <= 0 /\ -1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 2+2*y_16^post1
New rule:
l1 -> l1 : x_32^0'=1-y_16^post1+x_13^0, y_16^0'=0, x_13^0'=-y_16^post1+x_13^0, y_33^0'=1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 2+2*y_16^post1

Applied deletion
Removed the following rules: 9 10 18

Eliminated locations on tree-shaped paths
Start location: l6
  19: l1 -> l1 : x_32^0'=1-y_16^post1+x_13^0, y_16^0'=0, x_13^0'=-y_16^post1+x_13^0, y_33^0'=1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 2+2*y_16^post1
  14: l6 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : x_32^0'=1-y_16^post1+x_13^0, y_16^0'=0, x_13^0'=-y_16^post1+x_13^0, y_33^0'=1, (-1+x_13^0 >= 0 /\ -1+y_16^post1 >= 0), cost: 2+2*y_16^post1
New rule:
l1 -> l1 : x_32^0'=1-y_16^post1-y_16^post1*(-1+n0)+x_13^0, y_16^0'=0, x_13^0'=-n0*y_16^post1+x_13^0, y_33^0'=1, (-1-y_16^post1*(-1+n0)+x_13^0 >= 0 /\ -1+y_16^post1 >= 0 /\ -1+n0 >= 0), cost: 2*n0*y_16^post1+2*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_CGljBk.txt

Applied instantiation
Original rule:
l1 -> l1 : x_32^0'=1-y_16^post1-y_16^post1*(-1+n0)+x_13^0, y_16^0'=0, x_13^0'=-n0*y_16^post1+x_13^0, y_33^0'=1, (-1-y_16^post1*(-1+n0)+x_13^0 >= 0 /\ -1+y_16^post1 >= 0 /\ -1+n0 >= 0), cost: 2*n0*y_16^post1+2*n0
New rule:
l1 -> l1 : x_32^0'=1, y_16^0'=0, x_13^0'=0, y_33^0'=1, (0 >= 0 /\ -1+x_13^0 >= 0), cost: 4*x_13^0

Applied simplification
Original rule:
l1 -> l1 : x_32^0'=1, y_16^0'=0, x_13^0'=0, y_33^0'=1, (0 >= 0 /\ -1+x_13^0 >= 0), cost: 4*x_13^0
New rule:
l1 -> l1 : x_32^0'=1, y_16^0'=0, x_13^0'=0, y_33^0'=1, -1+x_13^0 >= 0, cost: 4*x_13^0

Applied deletion
Removed the following rules: 19

Accelerated simple loops
Start location: l6
  21: l1 -> l1 : x_32^0'=1, y_16^0'=0, x_13^0'=0, y_33^0'=1, -1+x_13^0 >= 0, cost: 4*x_13^0
  14: l6 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 2


Applied chaining
First rule:
l6 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 2
Second rule:
l1 -> l1 : x_32^0'=1, y_16^0'=0, x_13^0'=0, y_33^0'=1, -1+x_13^0 >= 0, cost: 4*x_13^0
New rule:
l6 -> l1 : x_32^0'=1, y_16^0'=0, x_13^0'=0, y_33^0'=1, -1+x_13^post0 >= 0, cost: 2+4*x_13^post0

Applied deletion
Removed the following rules: 21

Chained accelerated rules with incoming rules
Start location: l6
  14: l6 -> l1 : y_16^0'=y_16^post0, x_13^0'=x_13^post0, 0 == 0, cost: 2
  22: l6 -> l1 : x_32^0'=1, y_16^0'=0, x_13^0'=0, y_33^0'=1, -1+x_13^post0 >= 0, cost: 2+4*x_13^post0


Removed unreachable locations and irrelevant leafs
Start location: l6
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

