YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l7, true>
<l1, l2, (undef7 > ~(1)) /\ (arg2 > 0) /\ (undef1 <= arg1) /\ (arg1 > 0) /\ (undef1 > 0) /\ (undef2 > 0), par{arg1 -> undef1, arg2 -> undef2, arg3 -> undef3, arg4 -> undef4, arg5 -> undef5, arg6 -> undef6}>
<l3, l2, (arg1 >= undef8) /\ (undef8 <= arg2) /\ (undef9 <= arg2) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef8 > 0) /\ (undef9 > 0) /\ ((arg3 + 2) <= arg2) /\ ((arg5 + 2) <= arg2) /\ ((arg4 + 2) <= arg2), par{arg1 -> undef8, arg2 -> undef9, arg6 -> undef13}>
<l2, l4, (undef14 <= arg2) /\ (undef20 > 1) /\ (undef15 <= arg2) /\ (arg1 > 0) /\ (arg2 > 0) /\ (undef14 > 0) /\ (undef15 > 0) /\ ((arg3 + 2) <= arg2) /\ ((arg5 + 2) <= arg2) /\ ((arg4 + 2) <= arg2), par{arg1 -> undef14, arg2 -> undef15, arg3 -> undef16, arg4 -> undef17, arg5 -> undef18, arg6 -> undef19}>
<l1, l5, (undef26 > ~(1)) /\ (arg2 > 1) /\ (undef23 > ~(1)) /\ (arg1 > 0) /\ (undef21 > 1), par{arg1 -> undef21, arg2 -> 0, arg3 -> undef23, arg4 -> arg2, arg5 -> 2, arg6 -> undef26}>
<l5, l5, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef33 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (undef27 > 3) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef27, arg2 -> (arg2 + 1), arg5 -> (arg5 + 1), arg6 -> undef32}>
<l5, l5, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef40 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (undef34 > 3) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef34, arg2 -> (arg2 + 1), arg5 -> (arg5 + 1), arg6 -> undef39}>
<l5, l5, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef47 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (undef41 > 2) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef41, arg2 -> (arg2 + 1), arg5 -> (arg5 + 1), arg6 -> undef46}>
<l5, l5, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef54 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (undef48 > 2) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef48, arg2 -> (arg2 + 1), arg5 -> (arg5 + 1), arg6 -> undef53}>
<l4, l4, ((undef55 + 3) <= arg1) /\ ((undef55 + 3) <= arg2) /\ ((undef56 + 3) <= arg1) /\ ((undef56 + 3) <= arg2) /\ (arg1 > 2) /\ (arg2 > 2) /\ (undef55 > ~(1)) /\ (undef56 > ~(1)), par{arg1 -> undef55, arg2 -> undef56, arg3 -> undef57, arg4 -> undef58, arg5 -> undef59, arg6 -> undef60}>
<l4, l4, ((undef61 + 2) <= arg1) /\ ((undef61 + 2) <= arg2) /\ ((undef62 + 2) <= arg1) /\ ((undef62 + 2) <= arg2) /\ (arg1 > 2) /\ (arg2 > 2) /\ (undef61 > ~(1)) /\ (undef62 > ~(1)), par{arg1 -> undef61, arg2 -> undef62, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> undef66}>
<l5, l6, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef68 > ~(1)) /\ (arg5 < arg4) /\ (undef67 <= arg1) /\ (arg1 > 0) /\ (undef67 > 0) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef67, arg2 -> undef68, arg3 -> arg4, arg4 -> arg6, arg5 -> undef71, arg6 -> undef72}>
<l6, l6, (arg3 > 1) /\ (arg4 < arg2) /\ ((undef73 + 2) <= arg1) /\ (arg1 > 2) /\ (undef73 > 0) /\ ((arg4 + 2) <= arg1) /\ ((undef76 + 4) <= arg1), par{arg1 -> undef73, arg4 -> undef76, arg5 -> undef77, arg6 -> undef78}>
<l6, l6, (arg3 > 1) /\ (arg4 >= arg2) /\ ((undef79 + 2) <= arg1) /\ (arg1 > 2) /\ (undef79 > 0) /\ ((arg4 + 2) <= arg1) /\ ((undef82 + 4) <= arg1), par{arg1 -> undef79, arg4 -> undef82, arg5 -> undef83, arg6 -> undef84}>
<l7, l1, true, par{arg1 -> undef85, arg2 -> undef86, arg3 -> undef87, arg4 -> undef88, arg5 -> undef89, arg6 -> undef90}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef23, undef26, undef27, undef32, undef33, undef34, undef39, undef40, undef41, undef46, undef47, undef48, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef71, undef72, undef73, undef76, undef77, undef78, undef79, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef23, undef26, undef27, undef32, undef33, undef34, undef39, undef40, undef41, undef46, undef47, undef48, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef71, undef72, undef73, undef76, undef77, undef78, undef79, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l4, (undef7 > ~(1)) /\ (undef86 > 0) /\ (undef1 <= undef85) /\ (undef85 > 0) /\ (undef1 > 0) /\ (undef2 > 0) /\ (undef14 <= undef2) /\ (undef20 > 1) /\ (undef15 <= undef2) /\ (undef1 > 0) /\ (undef2 > 0) /\ (undef14 > 0) /\ (undef15 > 0) /\ ((undef3 + 2) <= undef2) /\ ((undef5 + 2) <= undef2) /\ ((undef4 + 2) <= undef2), par{arg1 -> undef14, arg2 -> undef15, arg3 -> undef16, arg4 -> undef17, arg5 -> undef18, arg6 -> undef19}>
<l0, l5, (undef26 > ~(1)) /\ (undef86 > 1) /\ (undef23 > ~(1)) /\ (undef85 > 0) /\ (undef21 > 1), par{arg1 -> undef21, arg2 -> 0, arg3 -> undef23, arg4 -> undef86, arg5 -> 2, arg6 -> undef26}>
<l4, l4, ((undef55 + 3) <= arg1) /\ ((undef55 + 3) <= arg2) /\ ((undef56 + 3) <= arg1) /\ ((undef56 + 3) <= arg2) /\ (arg1 > 2) /\ (arg2 > 2) /\ (undef55 > ~(1)) /\ (undef56 > ~(1)), par{arg1 -> undef55, arg2 -> undef56, arg3 -> undef57, arg4 -> undef58, arg5 -> undef59, arg6 -> undef60}>
<l4, l4, ((undef61 + 2) <= arg1) /\ ((undef61 + 2) <= arg2) /\ ((undef62 + 2) <= arg1) /\ ((undef62 + 2) <= arg2) /\ (arg1 > 2) /\ (arg2 > 2) /\ (undef61 > ~(1)) /\ (undef62 > ~(1)), par{arg1 -> undef61, arg2 -> undef62, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> undef66}>
<l5, l5, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef33 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (undef27 > 3) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef27, arg2 -> (arg2 + 1), arg5 -> (arg5 + 1), arg6 -> undef32}>
<l5, l5, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef40 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (undef34 > 3) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef34, arg2 -> (arg2 + 1), arg5 -> (arg5 + 1), arg6 -> undef39}>
<l5, l5, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef47 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (undef41 > 2) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef41, arg2 -> (arg2 + 1), arg5 -> (arg5 + 1), arg6 -> undef46}>
<l5, l5, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef54 > ~(1)) /\ (arg5 < arg4) /\ (arg1 > 0) /\ (undef48 > 2) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef48, arg2 -> (arg2 + 1), arg5 -> (arg5 + 1), arg6 -> undef53}>
<l5, l6, (arg5 > ~(1)) /\ (arg3 > arg2) /\ (arg3 > 0) /\ (arg4 > 1) /\ (undef68 > ~(1)) /\ (arg5 < arg4) /\ (undef67 <= arg1) /\ (arg1 > 0) /\ (undef67 > 0) /\ ((arg6 + 2) <= arg1), par{arg1 -> undef67, arg2 -> undef68, arg3 -> arg4, arg4 -> arg6, arg5 -> undef71, arg6 -> undef72}>
<l6, l6, (arg3 > 1) /\ (arg4 < arg2) /\ ((undef73 + 2) <= arg1) /\ (arg1 > 2) /\ (undef73 > 0) /\ ((arg4 + 2) <= arg1) /\ ((undef76 + 4) <= arg1), par{arg1 -> undef73, arg4 -> undef76, arg5 -> undef77, arg6 -> undef78}>
<l6, l6, (arg3 > 1) /\ (arg4 >= arg2) /\ ((undef79 + 2) <= arg1) /\ (arg1 > 2) /\ (undef79 > 0) /\ ((arg4 + 2) <= arg1) /\ ((undef82 + 4) <= arg1), par{arg1 -> undef79, arg4 -> undef82, arg5 -> undef83, arg6 -> undef84}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef23, undef26, undef27, undef32, undef33, undef34, undef39, undef40, undef41, undef46, undef47, undef48, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef71, undef72, undef73, undef76, undef77, undef78, undef79, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef21, undef23, undef26, undef27, undef32, undef33, undef34, undef39, undef40, undef41, undef46, undef47, undef48, undef53, undef54, undef55, undef56, undef57, undef58, undef59, undef60, undef61, undef62, undef63, undef64, undef65, undef66, undef67, undef68, undef71, undef72, undef73, undef76, undef77, undef78, undef79, undef82, undef83, undef84, undef85, undef86, undef87, undef88, undef89, undef90, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l5, l5, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 0 <= arg5 /\ 0 <= undef33 /\ 2 + arg6 <= arg1 /\ 2 <= arg4 /\ 4 <= undef27, {arg1 -> undef27, arg2 -> 1 + arg2, arg5 -> 1 + arg5, arg6 -> undef32, rest remain the same}>
<l5, l5, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 0 <= arg5 /\ 0 <= undef40 /\ 2 + arg6 <= arg1 /\ 2 <= arg4 /\ 4 <= undef34, {arg1 -> undef34, arg2 -> 1 + arg2, arg5 -> 1 + arg5, arg6 -> undef39, rest remain the same}>
<l5, l5, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 0 <= arg5 /\ 0 <= undef47 /\ 2 + arg6 <= arg1 /\ 2 <= arg4 /\ 3 <= undef41, {arg1 -> undef41, arg2 -> 1 + arg2, arg5 -> 1 + arg5, arg6 -> undef46, rest remain the same}>
<l5, l5, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 0 <= arg5 /\ 0 <= undef54 /\ 2 + arg6 <= arg1 /\ 2 <= arg4 /\ 3 <= undef48, {arg1 -> undef48, arg2 -> 1 + arg2, arg5 -> 1 + arg5, arg6 -> undef53, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6

Graph 2:
Transitions:
<l6, l6, 1 + arg4 <= arg2 /\ 1 <= undef73 /\ 2 + arg4 <= arg1 /\ 2 + undef73 <= arg1 /\ 2 <= arg3 /\ 3 <= arg1 /\ 4 + undef76 <= arg1, {arg1 -> undef73, arg4 -> undef76, arg5 -> undef77, arg6 -> undef78, rest remain the same}>
<l6, l6, 1 <= undef79 /\ arg2 <= arg4 /\ 2 + arg4 <= arg1 /\ 2 + undef79 <= arg1 /\ 2 <= arg3 /\ 3 <= arg1 /\ 4 + undef82 <= arg1, {arg1 -> undef79, arg4 -> undef82, arg5 -> undef83, arg6 -> undef84, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6

Graph 3:
Transitions:
<l4, l4, 0 <= undef55 /\ 0 <= undef56 /\ 3 <= arg1 /\ 3 + undef55 <= arg1 /\ 3 + undef56 <= arg1 /\ 3 <= arg2 /\ 3 + undef55 <= arg2 /\ 3 + undef56 <= arg2, {arg1 -> undef55, arg2 -> undef56, arg3 -> undef57, arg4 -> undef58, arg5 -> undef59, arg6 -> undef60, rest remain the same}>
<l4, l4, 0 <= undef61 /\ 0 <= undef62 /\ 2 + undef61 <= arg1 /\ 2 + undef62 <= arg1 /\ 2 + undef61 <= arg2 /\ 2 + undef62 <= arg2 /\ 3 <= arg1 /\ 3 <= arg2, {arg1 -> undef61, arg2 -> undef62, arg3 -> undef63, arg4 -> undef64, arg5 -> undef65, arg6 -> undef66, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6

Precedence: 
Graph 0

Graph 1
<l0, l5, 1 <= undef85 /\ 0 <= undef23 /\ 0 <= undef26 /\ 2 <= undef21 /\ 2 <= undef86, {arg1 -> undef21, arg2 -> 0, arg3 -> undef23, arg4 -> undef86, arg5 -> 2, arg6 -> undef26, rest remain the same}>

Graph 2
<l5, l6, 1 <= arg1 /\ 1 + arg2 <= arg3 /\ 1 <= arg3 /\ 1 + arg5 <= arg4 /\ 1 <= undef67 /\ undef67 <= arg1 /\ 0 <= arg5 /\ 0 <= undef68 /\ 2 + arg6 <= arg1 /\ 2 <= arg4, {arg1 -> undef67, arg2 -> undef68, arg3 -> arg4, arg4 -> arg6, arg5 -> undef71, arg6 -> undef72, rest remain the same}>

Graph 3
<l0, l4, 1 <= undef1 /\ 1 <= undef2 /\ 1 <= undef14 /\ 1 <= undef15 /\ 1 <= undef85 /\ 1 <= undef86 /\ undef1 <= undef85 /\ undef14 <= undef2 /\ undef15 <= undef2 /\ 0 <= undef7 /\ 2 + undef3 <= undef2 /\ 2 + undef4 <= undef2 /\ 2 + undef5 <= undef2 /\ 2 <= undef20, {arg1 -> undef14, arg2 -> undef15, arg3 -> undef16, arg4 -> undef17, arg5 -> undef18, arg6 -> undef19, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 3 )
( 5 , 1 )
( 6 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.031407

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008179s
[33mRanking function: [36m-13 - arg2 + arg3 + 6*arg4[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.010535

Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003339s
[33mRanking function: [36m-32 + 16*arg1 - 16*arg2[0m
New Graphs: 
Transitions:
<l6, l6, 1 + arg4 <= arg2 /\ 1 <= undef73 /\ 2 + arg4 <= arg1 /\ 2 + undef73 <= arg1 /\ 2 <= arg3 /\ 3 <= arg1 /\ 4 + undef76 <= arg1, {arg1 -> undef73, arg4 -> undef76, arg5 -> undef77, arg6 -> undef78, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4, arg5, arg6
Checking conditional termination of SCC {l6}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001653s
[33mRanking function: [36m(~(3) / 2) + (1 / 2)*arg1[0m
New Graphs: 
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.010884

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003527s
[33mRanking function: [36m(~(3) / 2) + (1 / 2)*arg2[0m
New Graphs: 
[32mProgram Terminates[0m
