NO

Initial ITS
Start location: l3
   0: l0 -> l1 : pc_Loop^0'=pc_Loop^post0, (-3+pc_Loop^10 == 0 /\ -2+pc_Loop^post0 == 0), cost: 1
   1: l1 -> l0 : pc_Loop^0'=pc_Loop^post1, -pc_Loop^post1+pc_Loop^0 == 0, cost: 1
   2: l2 -> l0 : pc_Loop^0'=pc_Loop^post2, -2+pc_Loop^post2 == 0, cost: 1
   3: l3 -> l2 : pc_Loop^0'=pc_Loop^post3, pc_Loop^0-pc_Loop^post3 == 0, cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : pc_Loop^0'=pc_Loop^post0, (-3+pc_Loop^10 == 0 /\ -2+pc_Loop^post0 == 0), cost: 1
New rule:
l0 -> l1 : pc_Loop^0'=2, TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : pc_Loop^0'=pc_Loop^post1, -pc_Loop^post1+pc_Loop^0 == 0, cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : pc_Loop^0'=pc_Loop^post2, -2+pc_Loop^post2 == 0, cost: 1
New rule:
l2 -> l0 : pc_Loop^0'=2, TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : pc_Loop^0'=pc_Loop^post3, pc_Loop^0-pc_Loop^post3 == 0, cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Simplified rules
Start location: l3
   4: l0 -> l1 : pc_Loop^0'=2, TRUE, cost: 1
   5: l1 -> l0 : TRUE, cost: 1
   6: l2 -> l0 : pc_Loop^0'=2, TRUE, cost: 1
   7: l3 -> l2 : TRUE, cost: 1


Eliminating location l2 by chaining:

Applied chaining
First rule:
l3 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : pc_Loop^0'=2, TRUE, cost: 1
New rule:
l3 -> l0 : pc_Loop^0'=2, TRUE, cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : pc_Loop^0'=2, TRUE, cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : pc_Loop^0'=2, TRUE, cost: 2

Applied deletion
Removed the following rules: 4 5

Eliminated locations on linear paths
Start location: l3
   9: l0 -> l0 : pc_Loop^0'=2, TRUE, cost: 2
   8: l3 -> l0 : pc_Loop^0'=2, TRUE, cost: 2


Applied nonterm
Original rule:
l0 -> l0 : pc_Loop^0'=2, TRUE, cost: 2
New rule:
l0 -> [4] : -1+n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_iiiOnL.txt

Applied deletion
Removed the following rules: 9

Accelerated simple loops
Start location: l3
  10: l0 -> [4] : -1+n >= 0, cost: NONTERM
   8: l3 -> l0 : pc_Loop^0'=2, TRUE, cost: 2


Applied chaining
First rule:
l3 -> l0 : pc_Loop^0'=2, TRUE, cost: 2
Second rule:
l0 -> [4] : -1+n >= 0, cost: NONTERM
New rule:
l3 -> [4] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 10

Chained accelerated rules with incoming rules
Start location: l3
   8: l3 -> l0 : pc_Loop^0'=2, TRUE, cost: 2
  11: l3 -> [4] : TRUE, cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: l3
  11: l3 -> [4] : TRUE, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 11 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  TRUE
