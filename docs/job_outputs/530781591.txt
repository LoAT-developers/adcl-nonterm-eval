YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l11, true>
<l1, l2, ((1 + i34^0) <= 0)>
<l1, l3, (0 <= (0 + i34^0)), par{i34^0 -> (~(1) + i34^0)}>
<l4, l2, (1 <= (0 + i2^0))>
<l4, l2, ((1 + i2^0) <= 0)>
<l4, l3, ((0 + i2^0) <= 0) /\ (0 <= (0 + i2^0)), par{i34^0 -> (0 + __const_999^0)}>
<l3, l1, true>
<l5, l6, true>
<l7, l8, ((1 + i8^0) <= 0)>
<l7, l9, (0 <= (0 + i8^0)), par{i8^0 -> (~(1) + i8^0)}>
<l9, l7, true>
<l6, l9, ((1 + i6^0) <= 0), par{i8^0 -> (0 + __const_999^0)}>
<l6, l5, (0 <= (0 + i6^0)), par{i6^0 -> (~(1) + i6^0)}>
<l2, l5, true, par{i6^0 -> (0 + __const_999^0)}>
<l10, l4, true, par{i2^0 -> 1}>
<l11, l10, true>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l5, (1 <= (0 + 1)), par{i6^0 -> (0 + __const_999^0)}>
<l5, l9, ((1 + i6^0) <= 0), par{i8^0 -> (0 + __const_999^0)}>
<l5, l5, (0 <= (0 + i6^0)), par{i6^0 -> (~(1) + i6^0)}>
<l9, l8, ((1 + i8^0) <= 0)>
<l9, l9, (0 <= (0 + i8^0)), par{i8^0 -> (~(1) + i8^0)}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l5, l5, 0 <= i6^0, {i6^0 -> -1 + i6^0, rest remain the same}>
Variables:
i6^0

Graph 2:
Transitions:
<l9, l9, 0 <= i8^0, {i8^0 -> -1 + i8^0, rest remain the same}>
Variables:
i8^0

Graph 3:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l5, true, {i6^0 -> __const_999^0, rest remain the same}>

Graph 2
<l5, l9, 1 + i6^0 <= 0, {i8^0 -> __const_999^0, rest remain the same}>

Graph 3
<l9, l8, 1 + i8^0 <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 5 , 1 )
( 8 , 3 )
( 9 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001521

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000829s
[33mRanking function: [36mi6^0[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.001438

Checking conditional termination of SCC {l9}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000842s
[33mRanking function: [36mi8^0[0m
New Graphs: 
Proving termination of subgraph 3
Analyzing SCC {l8}...
No cycles found.

[32mProgram Terminates[0m
