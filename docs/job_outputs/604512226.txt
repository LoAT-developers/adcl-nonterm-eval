NO

Initial ITS

Start location: [1]
Program variables: a b c r
   0: [1] -> [2] : a'=nondet, T, cost: 1
   1: [2] -> [3] : b'=nondet1, T, cost: 1
   2: [3] -> [4] : c'=nondet2, T, cost: 1
   3: [4] -> [5] : (-1-c+b >= 0 /\ -c+a == 0), cost: 1
   9: [4] -> [10] : (-1-c+b < 0 \/ -c+a < 0 \/ -c+a > 0), cost: 1
   4: [5] -> [6] : r'=nondet3, T, cost: 1
   5: [6] -> [7] : b'=10, T, cost: 1
   6: [7] -> [8] : c'=1+r+c, T, cost: 1
   7: [8] -> [9] : a'=c, T, cost: 1
   8: [9] -> [4] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: a b c r
  11: [1] -> [4] : a'=nondet, b'=nondet1, c'=nondet2, T, cost: 1
   9: [4] -> [10] : (-1-c+b < 0 \/ -c+a < 0 \/ -c+a > 0), cost: 1
  16: [4] -> [4] : a'=1+c+nondet3, b'=10, c'=1+c+nondet3, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : a'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : b'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : a'=nondet, b'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[1] -> [3] : a'=nondet, b'=nondet1, T, cost: 1
	Second rule:
	[3] -> [4] : c'=nondet2, T, cost: 1
	New rule:
	[1] -> [4] : a'=nondet, b'=nondet1, c'=nondet2, T, cost: 1
	
	Applied deletion

	Removed the following rules: 2 10
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[4] -> [5] : (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	Second rule:
	[5] -> [6] : r'=nondet3, T, cost: 1
	New rule:
	[4] -> [6] : r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[4] -> [6] : r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	Second rule:
	[6] -> [7] : b'=10, T, cost: 1
	New rule:
	[4] -> [7] : b'=10, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 12
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[4] -> [7] : b'=10, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	Second rule:
	[7] -> [8] : c'=1+r+c, T, cost: 1
	New rule:
	[4] -> [8] : b'=10, c'=1+c+nondet3, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 13
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[4] -> [8] : b'=10, c'=1+c+nondet3, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	Second rule:
	[8] -> [9] : a'=c, T, cost: 1
	New rule:
	[4] -> [9] : a'=1+c+nondet3, b'=10, c'=1+c+nondet3, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 14
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[4] -> [9] : a'=1+c+nondet3, b'=10, c'=1+c+nondet3, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	Second rule:
	[9] -> [4] : T, cost: 1
	New rule:
	[4] -> [4] : a'=1+c+nondet3, b'=10, c'=1+c+nondet3, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 8 15

Step with 11

	Trace

	11[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	11[T], 9[(-1-c+b < 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {9[-1-c+b < 0]}]

Step with 9

	Trace

	11[T], 9[(-c+a < 0)]
	
	Blocked

	[{}, {9[-1-c+b < 0]}, {}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {9[(-1-c+b < 0 /\ -c+a < 0)]}]

Step with 9

	Trace

	11[T], 9[(-c+a > 0)]
	
	Blocked

	[{}, {9[(-1-c+b < 0 /\ -c+a < 0)]}, {}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {9[(-1-c+b < 0 /\ -c+a < 0 /\ -c+a > 0)]}]

Step with 16

	Trace

	11[T], 16[(-1-c+b >= 0 /\ -c+a == 0)]
	
	Blocked

	[{}, {9[T]}, {}]

Nonterm

Start location: [1]
Program variables: a b c r
  11: [1] -> [4] : a'=nondet, b'=nondet1, c'=nondet2, T, cost: 1
   9: [4] -> [10] : (-1-c+b < 0 \/ -c+a < 0 \/ -c+a > 0), cost: 1
  16: [4] -> [4] : a'=1+c+nondet3, b'=10, c'=1+c+nondet3, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
  17: [4] -> LoAT_sink : (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0), cost: NONTERM
  18: [4] -> [4] : a'=c, b'=10, r'=-1, (-1-c+b >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1

	Certificate of Non-Termination

	Original rule:
	[4] -> [4] : a'=1+c+nondet3, b'=10, c'=1+c+nondet3, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	New rule:
	[4] -> LoAT_sink : (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0), cost: NONTERM

		-1-c+b >= 0 [0]: fixpoint yields (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -10+b == 0)
		
		c-a >= 0 [0]: monotonic increase yields c-a >= 0
		
		-c+a >= 0 [0]: monotonic increase yields -c+a >= 0
		
		Replacement map: {-1-c+b >= 0 -> (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -10+b == 0), c-a >= 0 -> c-a >= 0, -c+a >= 0 -> -c+a >= 0}

	Loop Acceleration

	Original rule:
	[4] -> [4] : a'=1+c+nondet3, b'=10, c'=1+c+nondet3, r'=nondet3, (-1-c+b >= 0 /\ -c+a == 0), cost: 1
	New rule:
	[4] -> [4] : a'=(-1+n)*nondet3+n+c+nondet3, b'=10, c'=n*nondet3+n+c, r'=nondet3, (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0), cost: 1

		-1-c+b >= 0 [0]: fixpoint yields (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -10+b == 0)
		
		c-a >= 0 [0]: monotonic increase yields c-a >= 0
		
		-c+a >= 0 [0]: monotonic increase yields -c+a >= 0
		
		Replacement map: {-1-c+b >= 0 -> (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -10+b == 0), c-a >= 0 -> c-a >= 0, -c+a >= 0 -> -c+a >= 0}

	made implied equalities explicit

	Original rule:
	[4] -> [4] : a'=(-1+n)*nondet3+n+c+nondet3, b'=10, c'=n*nondet3+n+c, r'=nondet3, (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0), cost: 1
	New rule:
	[4] -> [4] : a'=(-1+n)*nondet3+n+c+nondet3, b'=10, c'=n*nondet3+n+c, r'=nondet3, (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	[4] -> [4] : a'=(-1+n)*nondet3+n+c+nondet3, b'=10, c'=n*nondet3+n+c, r'=nondet3, (0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1
	New rule:
	[4] -> [4] : a'=c, b'=10, c'=c, r'=-1, (0 == 0 /\ -1-c+b >= 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1
	
		propagated equality nondet3 = -1
		
	Simplified Guard

	Original rule:
	[4] -> [4] : a'=c, b'=10, c'=c, r'=-1, (0 == 0 /\ -1-c+b >= 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1
	New rule:
	[4] -> [4] : a'=c, b'=10, c'=c, r'=-1, (-1-c+b >= 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	[4] -> [4] : a'=c, b'=10, c'=c, r'=-1, (-1-c+b >= 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1
	New rule:
	[4] -> [4] : a'=c, b'=10, c'=c, r'=-1, (-1-c+b >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	[4] -> [4] : a'=c, b'=10, c'=c, r'=-1, (-1-c+b >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1
	New rule:
	[4] -> [4] : a'=c, b'=10, r'=-1, (-1-c+b >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0 /\ -c+a == 0), cost: 1

Step with 17

	Trace

	11[T], 17[(0 == 0 /\ -1-c+b >= 0 /\ -1-nondet3 == 0 /\ -1+n >= 0 /\ c-a >= 0 /\ -10+b == 0 /\ -c+a >= 0)]
	
	Blocked

	[{}, {9[T]}, {17[T]}]

Refute

	Counterexample

	[ a=-1 b=10 c=-1 r=0 ] 11 [ a=a b=b c=c r=0 ] 17
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
