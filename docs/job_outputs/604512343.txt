unknown

Initial ITS

Start location: [1]
Program variables: oldy x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : (oldy+y <= 0 /\ x > 0), cost: 1
   7: [3] -> [8] : (oldy+y > 0 \/ x <= 0), cost: 1
   3: [4] -> [5] : x'=y, T, cost: 1
   4: [5] -> [6] : oldy'=y, T, cost: 1
   5: [6] -> [7] : y'=nondet2, T, cost: 1
   6: [7] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: oldy x y
   8: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   7: [3] -> [8] : (oldy+y > 0 \/ x <= 0), cost: 1
  12: [3] -> [3] : oldy'=y, x'=y, y'=nondet2, (oldy+y <= 0 /\ x > 0), cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : (oldy+y <= 0 /\ x > 0), cost: 1
	Second rule:
	[4] -> [5] : x'=y, T, cost: 1
	New rule:
	[3] -> [5] : x'=y, (oldy+y <= 0 /\ x > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : x'=y, (oldy+y <= 0 /\ x > 0), cost: 1
	Second rule:
	[5] -> [6] : oldy'=y, T, cost: 1
	New rule:
	[3] -> [6] : oldy'=y, x'=y, (oldy+y <= 0 /\ x > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 9
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[3] -> [6] : oldy'=y, x'=y, (oldy+y <= 0 /\ x > 0), cost: 1
	Second rule:
	[6] -> [7] : y'=nondet2, T, cost: 1
	New rule:
	[3] -> [7] : oldy'=y, x'=y, y'=nondet2, (oldy+y <= 0 /\ x > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 10
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[3] -> [7] : oldy'=y, x'=y, y'=nondet2, (oldy+y <= 0 /\ x > 0), cost: 1
	Second rule:
	[7] -> [3] : T, cost: 1
	New rule:
	[3] -> [3] : oldy'=y, x'=y, y'=nondet2, (oldy+y <= 0 /\ x > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 11

Unrolled Loops

Start location: [1]
Program variables: oldy x y
   8: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   7: [3] -> [8] : (oldy+y > 0 \/ x <= 0), cost: 1
  12: [3] -> [3] : oldy'=y, x'=y, y'=nondet2, (oldy+y <= 0 /\ x > 0), cost: 1
  13: [3] -> [3] : oldy'=nondet2, x'=nondet2, y'=nondet21, (nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0), cost: 1

	Unrolling

	Original rule:
	[3] -> [3] : oldy'=y, x'=y, y'=nondet2, (oldy+y <= 0 /\ x > 0), cost: 1
	New rule:
	[3] -> [3] : oldy'=nondet2, x'=nondet2, y'=nondet21, (nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0), cost: 1

Step with 8

	Trace

	8[T]
	
	Blocked

	[{}, {}]

Step with 7

	Trace

	8[T], 7[(oldy+y > 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {7[oldy+y > 0]}]

Step with 7

	Trace

	8[T], 7[(x <= 0)]
	
	Blocked

	[{}, {7[oldy+y > 0]}, {}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {7[(oldy+y > 0 /\ x <= 0)]}]

Step with 12

	Trace

	8[T], 12[(oldy+y <= 0 /\ x > 0)]
	
	Blocked

	[{}, {7[T]}, {}]

Accelerate

Start location: [1]
Program variables: oldy x y
   8: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   7: [3] -> [8] : (oldy+y > 0 \/ x <= 0), cost: 1
  12: [3] -> [3] : oldy'=y, x'=y, y'=nondet2, (oldy+y <= 0 /\ x > 0), cost: 1
  13: [3] -> [3] : oldy'=nondet2, x'=nondet2, y'=nondet21, (nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0), cost: 1
  14: [3] -> [3] : oldy'=nondet2, x'=nondet2, y'=nondet23, (nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0), cost: 1

	unrolling

	Original rule:
	[3] -> [3] : oldy'=y, x'=y, y'=nondet2, (oldy+y <= 0 /\ x > 0), cost: 1
	New rule:
	[3] -> [3] : oldy'=nondet2, x'=nondet2, y'=nondet23, (nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0), cost: 1
	rule cannot be iterated more than once

	Trace

	8[T], 14[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T], 14[T]}]

Step with 7

	Trace

	8[T], 14[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)], 7[(oldy+y > 0)]
	
	Blocked

	[{}, {7[T]}, {12[T], 14[T]}, {}]

Backtrack

	Trace

	8[T], 14[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)]
	
	Blocked

	[{}, {7[T]}, {7[oldy+y > 0], 12[T], 14[T]}]

Step with 7

	Trace

	8[T], 14[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)], 7[(x <= 0)]
	
	Blocked

	[{}, {7[T]}, {7[oldy+y > 0], 12[T], 14[T]}, {}]

Backtrack

	Trace

	8[T], 14[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)]
	
	Blocked

	[{}, {7[T]}, {7[(oldy+y > 0 /\ x <= 0)], 12[T], 14[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {7[T], 14[T]}]

Step with 12

	Trace

	8[T], 12[(oldy+y <= 0 /\ x > 0)]
	
	Blocked

	[{}, {7[T], 14[T]}, {}]

Covered

	Trace

	8[T]
	
	Blocked

	[{}, {7[T], 12[T], 14[T]}]

Step with 13

	Trace

	8[T], 13[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)]
	
	Blocked

	[{}, {7[T], 12[T], 14[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 7

	Trace

	8[T], 13[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)], 7[(oldy+y > 0)]
	
	Blocked

	[{}, {7[T], 12[T], 14[T]}, {13[T], 14[T]}, {}]

Backtrack

	Trace

	8[T], 13[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)]
	
	Blocked

	[{}, {7[T], 12[T], 14[T]}, {7[oldy+y > 0], 13[T], 14[T]}]

Step with 7

	Trace

	8[T], 13[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)], 7[(x <= 0)]
	
	Blocked

	[{}, {7[T], 12[T], 14[T]}, {7[oldy+y > 0], 13[T], 14[T]}, {}]

Backtrack

	Trace

	8[T], 13[(nondet2+y <= 0 /\ oldy+y <= 0 /\ y > 0 /\ x > 0)]
	
	Blocked

	[{}, {7[T], 12[T], 14[T]}, {7[(oldy+y > 0 /\ x <= 0)], 13[T], 14[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {7[T], 12[T], 13[T], 14[T]}]

Backtrack

	Trace

	Blocked

	[{8[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
