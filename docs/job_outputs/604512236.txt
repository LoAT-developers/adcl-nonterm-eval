unknown

Initial ITS

Start location: [1]
Program variables: b i n t x
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : x'=nondet1, T, cost: 1
   2: [3] -> [4] : n'=nondet2, T, cost: 1
   3: [4] -> [5] : b'=nondet3, T, cost: 1
   4: [5] -> [7] : -1+b >= 0, cost: 1
   7: [5] -> [9] : -1+b < 0, cost: 1
  10: [6] -> [11] : -n+x <= 0, cost: 1
  18: [6] -> [17] : -n+x > 0, cost: 1
   5: [7] -> [8] : t'=1, T, cost: 1
   6: [8] -> [6] : T, cost: 1
   8: [9] -> [10] : t'=-1, T, cost: 1
   9: [10] -> [6] : T, cost: 1
  11: [11] -> [13] : -1+b >= 0, cost: 1
  14: [11] -> [15] : -1+b < 0, cost: 1
  17: [12] -> [6] : T, cost: 1
  12: [13] -> [14] : x'=t+x, T, cost: 1
  13: [14] -> [12] : T, cost: 1
  15: [15] -> [16] : x'=-t+x, T, cost: 1
  16: [16] -> [12] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: b i n t x
  21: [1] -> [5] : b'=nondet3, i'=nondet, n'=nondet2, x'=nondet1, T, cost: 1
  24: [5] -> [6] : t'=1, -1+b >= 0, cost: 1
  25: [5] -> [6] : t'=-1, -1+b < 0, cost: 1
  10: [6] -> [11] : -n+x <= 0, cost: 1
  18: [6] -> [17] : -n+x > 0, cost: 1
  28: [11] -> [12] : x'=t+x, -1+b >= 0, cost: 1
  29: [11] -> [12] : x'=-t+x, -1+b < 0, cost: 1
  17: [12] -> [6] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : i'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : x'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : i'=nondet, x'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[1] -> [3] : i'=nondet, x'=nondet1, T, cost: 1
	Second rule:
	[3] -> [4] : n'=nondet2, T, cost: 1
	New rule:
	[1] -> [4] : i'=nondet, n'=nondet2, x'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 2 19
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[1] -> [4] : i'=nondet, n'=nondet2, x'=nondet1, T, cost: 1
	Second rule:
	[4] -> [5] : b'=nondet3, T, cost: 1
	New rule:
	[1] -> [5] : b'=nondet3, i'=nondet, n'=nondet2, x'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 3 20
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[5] -> [7] : -1+b >= 0, cost: 1
	Second rule:
	[7] -> [8] : t'=1, T, cost: 1
	New rule:
	[5] -> [8] : t'=1, -1+b >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[5] -> [9] : -1+b < 0, cost: 1
	Second rule:
	[9] -> [10] : t'=-1, T, cost: 1
	New rule:
	[5] -> [10] : t'=-1, -1+b < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 7 8
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[5] -> [8] : t'=1, -1+b >= 0, cost: 1
	Second rule:
	[8] -> [6] : T, cost: 1
	New rule:
	[5] -> [6] : t'=1, -1+b >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 22
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[5] -> [10] : t'=-1, -1+b < 0, cost: 1
	Second rule:
	[10] -> [6] : T, cost: 1
	New rule:
	[5] -> [6] : t'=-1, -1+b < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 23
	
	Eliminating location [13] by chaining:

	Applied chaining

	First rule:
	[11] -> [13] : -1+b >= 0, cost: 1
	Second rule:
	[13] -> [14] : x'=t+x, T, cost: 1
	New rule:
	[11] -> [14] : x'=t+x, -1+b >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 11 12
	
	Eliminating location [15] by chaining:

	Applied chaining

	First rule:
	[11] -> [15] : -1+b < 0, cost: 1
	Second rule:
	[15] -> [16] : x'=-t+x, T, cost: 1
	New rule:
	[11] -> [16] : x'=-t+x, -1+b < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 14 15
	
	Eliminating location [14] by chaining:

	Applied chaining

	First rule:
	[11] -> [14] : x'=t+x, -1+b >= 0, cost: 1
	Second rule:
	[14] -> [12] : T, cost: 1
	New rule:
	[11] -> [12] : x'=t+x, -1+b >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 13 26
	
	Eliminating location [16] by chaining:

	Applied chaining

	First rule:
	[11] -> [16] : x'=-t+x, -1+b < 0, cost: 1
	Second rule:
	[16] -> [12] : T, cost: 1
	New rule:
	[11] -> [12] : x'=-t+x, -1+b < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 16 27

Step with 21

	Trace

	21[T]
	
	Blocked

	[{}, {}]

Step with 24

	Trace

	21[T], 24[(-1+b >= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 18

	Trace

	21[T], 24[(-1+b >= 0)], 18[(-n+x > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Backtrack

	Trace

	21[T], 24[(-1+b >= 0)]
	
	Blocked

	[{}, {}, {18[T]}]

Step with 10

	Trace

	21[T], 24[(-1+b >= 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {}, {18[T]}, {}]

Step with 28

	Trace

	21[T], 24[(-1+b >= 0)], 10[(-n+x <= 0)], 28[(-1+b >= 0)]
	
	Blocked

	[{}, {}, {18[T]}, {}, {}]

Step with 17

	Trace

	21[T], 24[(-1+b >= 0)], 10[(-n+x <= 0)], 28[(-1+b >= 0)], 17[T]
	
	Blocked

	[{}, {}, {18[T]}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: b i n t x
  21: [1] -> [5] : b'=nondet3, i'=nondet, n'=nondet2, x'=nondet1, T, cost: 1
  24: [5] -> [6] : t'=1, -1+b >= 0, cost: 1
  25: [5] -> [6] : t'=-1, -1+b < 0, cost: 1
  10: [6] -> [11] : -n+x <= 0, cost: 1
  18: [6] -> [17] : -n+x > 0, cost: 1
  30: [6] -> LoAT_sink : (-1+b >= 0 /\ t <= 0 /\ n-x >= 0), cost: NONTERM
  31: [6] -> [6] : x'=t*n7+x, (-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0), cost: 1
  28: [11] -> [12] : x'=t+x, -1+b >= 0, cost: 1
  29: [11] -> [12] : x'=-t+x, -1+b < 0, cost: 1
  17: [12] -> [6] : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	[6] -> [6] : x'=t+x, (-1+b >= 0 /\ -n+x <= 0), cost: 1
	New rule:
	[6] -> LoAT_sink : (-1+b >= 0 /\ t <= 0 /\ n-x >= 0), cost: NONTERM

		-1+b >= 0 [0]: monotonic increase yields -1+b >= 0
		
		n-x >= 0 [0]: eventual decrease yields (n-x >= 0 /\ n-t*(-1+n7)-x >= 0)
		
		n-x >= 0 [1]: eventual increase yields (t <= 0 /\ n-x >= 0)
		
		Replacement map: {-1+b >= 0 -> -1+b >= 0, n-x >= 0 -> (t <= 0 /\ n-x >= 0)}

	Loop Acceleration

	Original rule:
	[6] -> [6] : x'=t+x, (-1+b >= 0 /\ -n+x <= 0), cost: 1
	New rule:
	[6] -> [6] : x'=t*n7+x, (-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0), cost: 1

		-1+b >= 0 [0]: monotonic increase yields -1+b >= 0
		
		n-x >= 0 [0]: eventual decrease yields (n-x >= 0 /\ n-t*(-1+n7)-x >= 0)
		
		n-x >= 0 [1]: eventual increase yields (t <= 0 /\ n-x >= 0)
		
		Replacement map: {-1+b >= 0 -> -1+b >= 0, n-x >= 0 -> (n-x >= 0 /\ n-t*(-1+n7)-x >= 0)}

	Trace

	21[T], 24[(-1+b >= 0)], 31[(-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0)]
	
	Blocked

	[{}, {}, {18[T]}, {31[T]}]

Step with 18

	Trace

	21[T], 24[(-1+b >= 0)], 31[(-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0)], 18[(-n+x > 0)]
	
	Blocked

	[{}, {}, {18[T]}, {30[T], 31[T]}, {}]

Backtrack

	Trace

	21[T], 24[(-1+b >= 0)], 31[(-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0)]
	
	Blocked

	[{}, {}, {18[T]}, {18[T], 30[T], 31[T]}]

Step with 10

	Trace

	21[T], 24[(-1+b >= 0)], 31[(-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {}, {18[T]}, {18[T], 30[T], 31[T]}, {}]

Step with 28

	Trace

	21[T], 24[(-1+b >= 0)], 31[(-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0)], 10[(-n+x <= 0)], 28[(-1+b >= 0)]
	
	Blocked

	[{}, {}, {18[T]}, {18[T], 30[T], 31[T]}, {}, {}]

Step with 17

	Trace

	21[T], 24[(-1+b >= 0)], 31[(-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0)], 10[(-n+x <= 0)], 28[(-1+b >= 0)], 17[T]
	
	Blocked

	[{}, {}, {18[T]}, {18[T], 30[T], 31[T]}, {}, {}, {}]

Covered

	Trace

	21[T], 24[(-1+b >= 0)], 31[(-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0)], 10[(-n+x <= 0)], 28[(-1+b >= 0)]
	
	Blocked

	[{}, {}, {18[T]}, {18[T], 30[T], 31[T]}, {}, {17[T]}]

Backtrack

	Trace

	21[T], 24[(-1+b >= 0)], 31[(-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {}, {18[T]}, {18[T], 30[T], 31[T]}, {28[T]}]

Backtrack

	Trace

	21[T], 24[(-1+b >= 0)], 31[(-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0)]
	
	Blocked

	[{}, {}, {18[T]}, {10[T], 18[T], 30[T], 31[T]}]

Backtrack

	Trace

	21[T], 24[(-1+b >= 0)]
	
	Blocked

	[{}, {}, {18[T], 31[T]}]

Step with 10

	Trace

	21[T], 24[(-1+b >= 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {}, {18[T], 31[T]}, {}]

Step with 28

	Trace

	21[T], 24[(-1+b >= 0)], 10[(-n+x <= 0)], 28[(-1+b >= 0)]
	
	Blocked

	[{}, {}, {18[T], 31[T]}, {}, {}]

Step with 17

	Trace

	21[T], 24[(-1+b >= 0)], 10[(-n+x <= 0)], 28[(-1+b >= 0)], 17[T]
	
	Blocked

	[{}, {}, {18[T], 31[T]}, {}, {}, {}]

Covered

	Trace

	21[T], 24[(-1+b >= 0)], 10[(-n+x <= 0)], 28[(-1+b >= 0)]
	
	Blocked

	[{}, {}, {18[T], 31[T]}, {}, {17[T]}]

Backtrack

	Trace

	21[T], 24[(-1+b >= 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {}, {18[T], 31[T]}, {28[T]}]

Backtrack

	Trace

	21[T], 24[(-1+b >= 0)]
	
	Blocked

	[{}, {}, {10[T], 18[T], 31[T]}]

Backtrack

	Trace

	21[T]
	
	Blocked

	[{}, {24[T]}]

Step with 25

	Trace

	21[T], 25[(-1+b < 0)]
	
	Blocked

	[{}, {24[T]}, {}]

Step with 10

	Trace

	21[T], 25[(-1+b < 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {}]

Step with 29

	Trace

	21[T], 25[(-1+b < 0)], 10[(-n+x <= 0)], 29[(-1+b < 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {28[T]}, {}]

Step with 17

	Trace

	21[T], 25[(-1+b < 0)], 10[(-n+x <= 0)], 29[(-1+b < 0)], 17[T]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {28[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: b i n t x
  21: [1] -> [5] : b'=nondet3, i'=nondet, n'=nondet2, x'=nondet1, T, cost: 1
  24: [5] -> [6] : t'=1, -1+b >= 0, cost: 1
  25: [5] -> [6] : t'=-1, -1+b < 0, cost: 1
  10: [6] -> [11] : -n+x <= 0, cost: 1
  18: [6] -> [17] : -n+x > 0, cost: 1
  30: [6] -> LoAT_sink : (-1+b >= 0 /\ t <= 0 /\ n-x >= 0), cost: NONTERM
  31: [6] -> [6] : x'=t*n7+x, (-1+b >= 0 /\ n-x >= 0 /\ n-t*(-1+n7)-x >= 0 /\ -1+n7 >= 0), cost: 1
  32: [6] -> LoAT_sink : (1-b > 0 /\ n-x >= 0 /\ -t <= 0), cost: NONTERM
  33: [6] -> [6] : x'=x-t*n20, (1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0), cost: 1
  28: [11] -> [12] : x'=t+x, -1+b >= 0, cost: 1
  29: [11] -> [12] : x'=-t+x, -1+b < 0, cost: 1
  17: [12] -> [6] : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	[6] -> [6] : x'=-t+x, (-1+b < 0 /\ -n+x <= 0), cost: 1
	New rule:
	[6] -> LoAT_sink : (1-b > 0 /\ n-x >= 0 /\ -t <= 0), cost: NONTERM

		1-b > 0 [0]: monotonic increase yields 1-b > 0
		
		n-x >= 0 [0]: eventual decrease yields (n-x >= 0 /\ t*(-1+n20)+n-x >= 0)
		
		n-x >= 0 [1]: eventual increase yields (n-x >= 0 /\ -t <= 0)
		
		Replacement map: {1-b > 0 -> 1-b > 0, n-x >= 0 -> (n-x >= 0 /\ -t <= 0)}

	Loop Acceleration

	Original rule:
	[6] -> [6] : x'=-t+x, (-1+b < 0 /\ -n+x <= 0), cost: 1
	New rule:
	[6] -> [6] : x'=x-t*n20, (1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0), cost: 1

		1-b > 0 [0]: monotonic increase yields 1-b > 0
		
		n-x >= 0 [0]: eventual decrease yields (n-x >= 0 /\ t*(-1+n20)+n-x >= 0)
		
		n-x >= 0 [1]: eventual increase yields (n-x >= 0 /\ -t <= 0)
		
		Replacement map: {1-b > 0 -> 1-b > 0, n-x >= 0 -> (n-x >= 0 /\ t*(-1+n20)+n-x >= 0)}

	Trace

	21[T], 25[(-1+b < 0)], 33[(1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {33[T]}]

Step with 18

	Trace

	21[T], 25[(-1+b < 0)], 33[(1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0)], 18[(-n+x > 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {30[T], 32[T], 33[T]}, {}]

Backtrack

	Trace

	21[T], 25[(-1+b < 0)], 33[(1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {18[T], 30[T], 32[T], 33[T]}]

Step with 10

	Trace

	21[T], 25[(-1+b < 0)], 33[(1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {18[T], 30[T], 32[T], 33[T]}, {}]

Step with 29

	Trace

	21[T], 25[(-1+b < 0)], 33[(1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0)], 10[(-n+x <= 0)], 29[(-1+b < 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {18[T], 30[T], 32[T], 33[T]}, {}, {}]

Step with 17

	Trace

	21[T], 25[(-1+b < 0)], 33[(1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0)], 10[(-n+x <= 0)], 29[(-1+b < 0)], 17[T]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {18[T], 30[T], 32[T], 33[T]}, {}, {}, {}]

Covered

	Trace

	21[T], 25[(-1+b < 0)], 33[(1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0)], 10[(-n+x <= 0)], 29[(-1+b < 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {18[T], 30[T], 32[T], 33[T]}, {}, {17[T]}]

Backtrack

	Trace

	21[T], 25[(-1+b < 0)], 33[(1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {18[T], 30[T], 32[T], 33[T]}, {29[T]}]

Backtrack

	Trace

	21[T], 25[(-1+b < 0)], 33[(1-b > 0 /\ -1+n20 >= 0 /\ n-x >= 0 /\ t*(-1+n20)+n-x >= 0)]
	
	Blocked

	[{}, {24[T]}, {30[T]}, {10[T], 18[T], 30[T], 32[T], 33[T]}]

Backtrack

	Trace

	21[T], 25[(-1+b < 0)]
	
	Blocked

	[{}, {24[T]}, {30[T], 33[T]}]

Step with 10

	Trace

	21[T], 25[(-1+b < 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {24[T]}, {30[T], 33[T]}, {}]

Step with 29

	Trace

	21[T], 25[(-1+b < 0)], 10[(-n+x <= 0)], 29[(-1+b < 0)]
	
	Blocked

	[{}, {24[T]}, {30[T], 33[T]}, {}, {}]

Step with 17

	Trace

	21[T], 25[(-1+b < 0)], 10[(-n+x <= 0)], 29[(-1+b < 0)], 17[T]
	
	Blocked

	[{}, {24[T]}, {30[T], 33[T]}, {}, {}, {}]

Covered

	Trace

	21[T], 25[(-1+b < 0)], 10[(-n+x <= 0)], 29[(-1+b < 0)]
	
	Blocked

	[{}, {24[T]}, {30[T], 33[T]}, {}, {17[T]}]

Backtrack

	Trace

	21[T], 25[(-1+b < 0)], 10[(-n+x <= 0)]
	
	Blocked

	[{}, {24[T]}, {30[T], 33[T]}, {29[T]}]

Backtrack

	Trace

	21[T], 25[(-1+b < 0)]
	
	Blocked

	[{}, {24[T]}, {10[T], 30[T], 33[T]}]

Step with 18

	Trace

	21[T], 25[(-1+b < 0)], 18[(-n+x > 0)]
	
	Blocked

	[{}, {24[T]}, {10[T], 30[T], 31[T], 33[T]}, {}]

Backtrack

	Trace

	21[T], 25[(-1+b < 0)]
	
	Blocked

	[{}, {24[T]}, {10[T], 18[T], 30[T], 31[T], 33[T]}]

Backtrack

	Trace

	21[T]
	
	Blocked

	[{}, {24[T], 25[T]}]

Backtrack

	Trace

	Blocked

	[{21[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
