WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (20-arg1P0 == 0 /\ 15 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ -arg2P0 == 0 /\ 15-arg3P0+arg2 == 0), cost: 1
   1: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1 > 0 /\ arg2 < 0 /\ arg2-arg3P1 == 0 /\ 1-arg4P1+arg3 == 0 /\ -2-arg5P1+arg1 == 0 /\ -arg1+arg3 < 0 /\ -arg1P1+arg3 == 0 /\ arg3 > 0 /\ arg1-arg2P1 == 0), cost: 1
   2: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1 > 0 /\ arg2 > 0 /\ -2+arg1-arg5P2 == 0 /\ -arg2P2+arg1 == 0 /\ -arg1P2+arg3 == 0 /\ -arg1+arg3 < 0 /\ 1-arg4P2+arg3 == 0 /\ arg3 > 0 /\ -arg3P2+arg2 == 0), cost: 1
   3: f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1 > 0 /\ -2+arg1-arg4P3 == 0 /\ -arg1P3+arg3 == 0 /\ -arg1+arg3 < 0 /\ -arg2 == 0 /\ arg3 > 0 /\ arg1-arg2P3 == 0 /\ -1-arg3P3+arg3 == 0), cost: 1
   4: f887_0_loop_aux_GT -> f970_0_loop_aux_NE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1-arg1P4 == 0 /\ arg1-arg3 == 0 /\ arg1 > 0 /\ -1-arg2P4+arg1 == 0 /\ -2-arg3P4+arg1 == 0), cost: 1
  17: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-3+arg1 < 0 /\ -arg3 == 0 /\ 1-arg3P17 == 0 /\ 1-arg2P17 == 0 /\ arg1 > 0 /\ -arg1P17+arg1 == 0), cost: 1
  18: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (1-arg2P18 == 0 /\ 1-arg3P18 == 0 /\ -3+arg1 > 0 /\ -arg3 == 0 /\ arg1-arg1P18 == 0), cost: 1
  20: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=arg3P20, (-arg3 == 0 /\ 1-arg3P20 == 0 /\ 3-arg1 == 0 /\ 2-arg1P20 == 0 /\ 1-arg2P20 == 0), cost: 1
  21: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=arg3P21, (-arg2P21 == 0 /\ -arg3 == 0 /\ -1-arg3P21 == 0 /\ -arg1 == 0 /\ -arg1P21 == 0), cost: 1
   5: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-1+arg4 > 0 /\ arg2-arg1P5 == 0 /\ arg3-arg2P5 == 0 /\ -arg2+arg1 < 0 /\ arg5-arg4 > 0 /\ arg1 > 0 /\ arg4-arg3P5 == 0), cost: 1
   6: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-1+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg5-arg4 > 0 /\ -arg3P6+arg4 == 0 /\ arg1 > 0 /\ -arg1P6+arg2 == 0 /\ -arg2P6+arg3 == 0), cost: 1
   7: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (arg2-arg1P7 == 0 /\ -1+arg4 > 0 /\ arg3-arg2P7 == 0 /\ -arg2+arg1 < 0 /\ arg5-arg4 < 0 /\ arg1 > 0 /\ arg4-arg3P7 == 0), cost: 1
   8: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-1+arg4 > 0 /\ -arg3P8+arg4 == 0 /\ -arg2+arg1 > 0 /\ arg5-arg4 < 0 /\ -arg1P8+arg2 == 0 /\ arg1 > 0 /\ -arg2P8+arg3 == 0), cost: 1
  13: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-arg5+arg4 == 0 /\ -1+arg2-arg1P13 == 0 /\ arg1 > 0 /\ -arg3P13+arg4 == 0 /\ -arg2P13+arg3 == 0 /\ 1-arg2+arg4 <= 0), cost: 1
   9: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg2-arg1P9 == 0 /\ arg2-arg1 > 0 /\ -arg2P9 == 0 /\ arg3-arg3P9 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
  10: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-arg2P10 == 0 /\ arg2-arg1 < 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ -arg1P10+arg2 == 0 /\ -arg3P10+arg3 == 0), cost: 1
  11: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-arg3P11+arg3 == 0 /\ arg2-arg1 > 0 /\ arg1 > 0 /\ -arg2P11 == 0 /\ arg4-arg3 < 0 /\ arg2-arg1P11 == 0), cost: 1
  12: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (arg2-arg1 < 0 /\ arg1 > 0 /\ arg2-arg1P12 == 0 /\ arg4-arg3 < 0 /\ -arg2P12 == 0 /\ -arg3P12+arg3 == 0), cost: 1
  14: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-arg3P14+arg3 == 0 /\ -arg2P14 == 0 /\ -1+arg2-arg1P14 == 0 /\ arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
  15: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (-arg3P15+arg2 == 0 /\ arg1-arg1P15 == 0 /\ -arg2P15 == 0 /\ -arg2+arg3 > 0), cost: 1
  16: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-arg2P16 == 0 /\ arg2-arg3P16 == 0 /\ -arg1P16+arg1 == 0 /\ -arg2+arg3 < 0), cost: 1
  19: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2-arg1 < 0 /\ 1+arg2-arg1 <= 0 /\ -1-arg1P19+arg1 == 0 /\ arg2-arg3 == 0 /\ arg2-arg3P19 == 0 /\ -arg2P19 == 0), cost: 1
  22: __init -> f1_0_main_Load : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (20-arg1P0 == 0 /\ 15 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ -arg2P0 == 0 /\ 15-arg3P0+arg2 == 0), cost: 1
New rule:
f1_0_main_Load -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1 > 0 /\ arg2 < 0 /\ arg2-arg3P1 == 0 /\ 1-arg4P1+arg3 == 0 /\ -2-arg5P1+arg1 == 0 /\ -arg1+arg3 < 0 /\ -arg1P1+arg3 == 0 /\ arg3 > 0 /\ arg1-arg2P1 == 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1 > 0 /\ arg2 > 0 /\ -2+arg1-arg5P2 == 0 /\ -arg2P2+arg1 == 0 /\ -arg1P2+arg3 == 0 /\ -arg1+arg3 < 0 /\ 1-arg4P2+arg3 == 0 /\ arg3 > 0 /\ -arg3P2+arg2 == 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1 > 0 /\ -2+arg1-arg4P3 == 0 /\ -arg1P3+arg3 == 0 /\ -arg1+arg3 < 0 /\ -arg2 == 0 /\ arg3 > 0 /\ arg1-arg2P3 == 0 /\ -1-arg3P3+arg3 == 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f887_0_loop_aux_GT -> f970_0_loop_aux_NE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1-arg1P4 == 0 /\ arg1-arg3 == 0 /\ arg1 > 0 /\ -1-arg2P4+arg1 == 0 /\ -2-arg3P4+arg1 == 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f970_0_loop_aux_NE : arg5'=arg5P4, arg2'=-1+arg1, arg4'=arg4P4, arg3'=-2+arg1, (arg1-arg3 == 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (-1+arg4 > 0 /\ arg2-arg1P5 == 0 /\ arg3-arg2P5 == 0 /\ -arg2+arg1 < 0 /\ arg5-arg4 > 0 /\ arg1 > 0 /\ arg4-arg3P5 == 0), cost: 1
New rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-1+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg5-arg4 > 0 /\ -arg3P6+arg4 == 0 /\ arg1 > 0 /\ -arg1P6+arg2 == 0 /\ -arg2P6+arg3 == 0), cost: 1
New rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P6, arg2'=arg3, arg4'=arg4P6, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (arg2-arg1P7 == 0 /\ -1+arg4 > 0 /\ arg3-arg2P7 == 0 /\ -arg2+arg1 < 0 /\ arg5-arg4 < 0 /\ arg1 > 0 /\ arg4-arg3P7 == 0), cost: 1
New rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg3, arg4'=arg4P7, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ -arg5+arg4 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-1+arg4 > 0 /\ -arg3P8+arg4 == 0 /\ -arg2+arg1 > 0 /\ arg5-arg4 < 0 /\ -arg1P8+arg2 == 0 /\ arg1 > 0 /\ -arg2P8+arg3 == 0), cost: 1
New rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg5+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg2-arg1P9 == 0 /\ arg2-arg1 > 0 /\ -arg2P9 == 0 /\ arg3-arg3P9 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-arg2P10 == 0 /\ arg2-arg1 < 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ -arg1P10+arg2 == 0 /\ -arg3P10+arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=0, arg4'=arg4P10, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-arg3P11+arg3 == 0 /\ arg2-arg1 > 0 /\ arg1 > 0 /\ -arg2P11 == 0 /\ arg4-arg3 < 0 /\ arg2-arg1P11 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=0, arg4'=arg4P11, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (arg2-arg1 < 0 /\ arg1 > 0 /\ arg2-arg1P12 == 0 /\ arg4-arg3 < 0 /\ -arg2P12 == 0 /\ -arg3P12+arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=0, arg4'=arg4P12, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-arg5+arg4 == 0 /\ -1+arg2-arg1P13 == 0 /\ arg1 > 0 /\ -arg3P13+arg4 == 0 /\ -arg2P13+arg3 == 0 /\ 1-arg2+arg4 <= 0), cost: 1
New rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1

Applied preprocessing
Original rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-arg3P14+arg3 == 0 /\ -arg2P14 == 0 /\ -1+arg2-arg1P14 == 0 /\ arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (-arg3P15+arg2 == 0 /\ arg1-arg1P15 == 0 /\ -arg2P15 == 0 /\ -arg2+arg3 > 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=0, arg4'=arg4P15, arg3'=arg2, -arg2+arg3 > 0, cost: 1

Applied preprocessing
Original rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-arg2P16 == 0 /\ arg2-arg3P16 == 0 /\ -arg1P16+arg1 == 0 /\ -arg2+arg3 < 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1

Applied preprocessing
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-3+arg1 < 0 /\ -arg3 == 0 /\ 1-arg3P17 == 0 /\ 1-arg2P17 == 0 /\ arg1 > 0 /\ -arg1P17+arg1 == 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (1-arg2P18 == 0 /\ 1-arg3P18 == 0 /\ -3+arg1 > 0 /\ -arg3 == 0 /\ arg1-arg1P18 == 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2-arg1 < 0 /\ 1+arg2-arg1 <= 0 /\ -1-arg1P19+arg1 == 0 /\ arg2-arg3 == 0 /\ arg2-arg3P19 == 0 /\ -arg2P19 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=0, arg4'=arg4P19, arg1'=-1+arg1, arg3'=arg2, (1+arg2-arg1 <= 0 /\ arg2-arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=arg3P20, (-arg3 == 0 /\ 1-arg3P20 == 0 /\ 3-arg1 == 0 /\ 2-arg1P20 == 0 /\ 1-arg2P20 == 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=arg3P21, (-arg2P21 == 0 /\ -arg3 == 0 /\ -1-arg3P21 == 0 /\ -arg1 == 0 /\ -arg1P21 == 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1

Simplified rules
Start location: __init
  23: f1_0_main_Load -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  24: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 1
  25: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
  26: f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
  27: f887_0_loop_aux_GT -> f970_0_loop_aux_NE : arg5'=arg5P4, arg2'=-1+arg1, arg4'=arg4P4, arg3'=-2+arg1, (arg1-arg3 == 0 /\ arg1 > 0), cost: 1
  40: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
  41: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
  43: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
  44: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1
  28: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
  29: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P6, arg2'=arg3, arg4'=arg4P6, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
  30: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg3, arg4'=arg4P7, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ -arg5+arg4 > 0 /\ arg1 > 0), cost: 1
  31: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg5+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg1 > 0), cost: 1
  36: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
  32: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
  33: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=0, arg4'=arg4P10, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
  34: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=0, arg4'=arg4P11, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
  35: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=0, arg4'=arg4P12, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
  37: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
  38: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=0, arg4'=arg4P15, arg3'=arg2, -arg2+arg3 > 0, cost: 1
  39: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1
  42: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=0, arg4'=arg4P19, arg1'=-1+arg1, arg3'=arg2, (1+arg2-arg1 <= 0 /\ arg2-arg3 == 0), cost: 1
  22: __init -> f1_0_main_Load : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, TRUE, cost: 1


Accelerated simple loops
Start location: __init
  23: f1_0_main_Load -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  24: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 1
  25: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
  26: f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
  27: f887_0_loop_aux_GT -> f970_0_loop_aux_NE : arg5'=arg5P4, arg2'=-1+arg1, arg4'=arg4P4, arg3'=-2+arg1, (arg1-arg3 == 0 /\ arg1 > 0), cost: 1
  40: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
  41: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
  43: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
  44: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1
  28: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
  29: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P6, arg2'=arg3, arg4'=arg4P6, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
  30: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg3, arg4'=arg4P7, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ -arg5+arg4 > 0 /\ arg1 > 0), cost: 1
  31: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg5+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg1 > 0), cost: 1
  36: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
  32: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
  33: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=0, arg4'=arg4P10, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
  34: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=0, arg4'=arg4P11, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
  35: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=0, arg4'=arg4P12, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
  37: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
  38: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=0, arg4'=arg4P15, arg3'=arg2, -arg2+arg3 > 0, cost: 1
  39: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1
  42: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=0, arg4'=arg4P19, arg1'=-1+arg1, arg3'=arg2, (1+arg2-arg1 <= 0 /\ arg2-arg3 == 0), cost: 1
  22: __init -> f1_0_main_Load : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, TRUE, cost: 1


Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0 /\ 3-arg2 > 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=0, arg4'=arg4P10, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2 > 0 /\ -arg2+arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0 /\ 3-arg2 > 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=0, arg4'=arg4P11, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0 /\ 3-arg2 > 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=0, arg4'=arg4P12, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2 > 0 /\ -arg2+arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0 /\ 3-arg2 > 0), cost: 2

Applied chaining
First rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg2, arg3'=1, (4-arg2 > 0 /\ -arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg2, arg3'=1, (4-arg2 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=0, arg4'=arg4P15, arg3'=arg2, -arg2+arg3 > 0, cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg2 == 0 /\ arg1 > 0 /\ 3-arg1 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg2 == 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ 3-arg1 > 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=0, arg4'=arg4P19, arg1'=-1+arg1, arg3'=arg2, (1+arg2-arg1 <= 0 /\ arg2-arg3 == 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1 > 0 /\ 3-arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ 4-arg1 > 0 /\ arg2-arg3 == 0 /\ -1+arg1 > 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=0, arg4'=arg4P10, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=0, arg4'=arg4P11, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=0, arg4'=arg4P12, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2

Applied chaining
First rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=-1+arg2, arg3'=1, (-4+arg2 > 0 /\ -arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=-1+arg2, arg3'=1, (-4+arg2 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=0, arg4'=arg4P15, arg3'=arg2, -arg2+arg3 > 0, cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (arg2 == 0 /\ -3+arg1 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (arg2 == 0 /\ -3+arg1 > 0 /\ arg2-arg3 > 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=0, arg4'=arg4P19, arg1'=-1+arg1, arg3'=arg2, (1+arg2-arg1 <= 0 /\ arg2-arg3 == 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (-3+arg1 > 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ -4+arg1 > 0 /\ arg2-arg3 == 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=0, arg4'=arg4P10, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 == 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=0, arg4'=arg4P11, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 == 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=0, arg4'=arg4P12, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 == 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2

Applied chaining
First rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-4+arg2 == 0 /\ -arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-4+arg2 == 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=0, arg4'=arg4P15, arg3'=arg2, -arg2+arg3 > 0, cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -3+arg1 == 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -3+arg1 == 0 /\ arg2-arg3 > 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=0, arg4'=arg4P19, arg1'=-1+arg1, arg3'=arg2, (1+arg2-arg1 <= 0 /\ arg2-arg3 == 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-3+arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -4+arg1 == 0 /\ arg2-arg3 == 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=0, arg4'=arg4P10, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=0, arg4'=arg4P12, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2

Applied chaining
First rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (-arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 2

Applied chaining
First rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 > 0 /\ -1+arg2 == 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=0, arg4'=arg4P15, arg3'=arg2, -arg2+arg3 > 0, cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 == 0 /\ -arg2+arg3 > 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 == 0 /\ arg2-arg3 > 0), cost: 2

Applied chaining
First rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=0, arg4'=arg4P19, arg1'=-1+arg1, arg3'=arg2, (1+arg2-arg1 <= 0 /\ arg2-arg3 == 0), cost: 1
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 == 0 /\ arg3 == 0), cost: 1
New rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg2-arg3 == 0 /\ -1+arg1 == 0), cost: 2

Applied deletion
Removed the following rules: 40 41 43 44

Chained accelerated rules with incoming rules
Start location: __init
  23: f1_0_main_Load -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  24: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 1
  25: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
  26: f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
  27: f887_0_loop_aux_GT -> f970_0_loop_aux_NE : arg5'=arg5P4, arg2'=-1+arg1, arg4'=arg4P4, arg3'=-2+arg1, (arg1-arg3 == 0 /\ arg1 > 0), cost: 1
  28: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
  29: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P6, arg2'=arg3, arg4'=arg4P6, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
  30: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg3, arg4'=arg4P7, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ -arg5+arg4 > 0 /\ arg1 > 0), cost: 1
  31: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg5+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg1 > 0), cost: 1
  36: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
  49: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg2, arg3'=1, (4-arg2 > 0 /\ -arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 2
  58: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=-1+arg2, arg3'=1, (-4+arg2 > 0 /\ -arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0), cost: 2
  67: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-4+arg2 == 0 /\ -arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0), cost: 2
  74: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (-arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 2
  32: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
  33: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=0, arg4'=arg4P10, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
  34: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=0, arg4'=arg4P11, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
  35: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=0, arg4'=arg4P12, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
  37: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
  45: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0 /\ 3-arg2 > 0), cost: 2
  46: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2 > 0 /\ -arg2+arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0 /\ 3-arg2 > 0), cost: 2
  47: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0 /\ 3-arg2 > 0), cost: 2
  48: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2 > 0 /\ -arg2+arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0 /\ 3-arg2 > 0), cost: 2
  50: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg2, arg3'=1, (4-arg2 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2
  54: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  55: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  56: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  57: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  59: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=-1+arg2, arg3'=1, (-4+arg2 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2
  63: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  64: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 == 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  65: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 == 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  66: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 == 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  68: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-4+arg2 == 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2
  72: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  73: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  75: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 > 0 /\ -1+arg2 == 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2
  38: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=0, arg4'=arg4P15, arg3'=arg2, -arg2+arg3 > 0, cost: 1
  39: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1
  42: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=0, arg4'=arg4P19, arg1'=-1+arg1, arg3'=arg2, (1+arg2-arg1 <= 0 /\ arg2-arg3 == 0), cost: 1
  51: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg2 == 0 /\ arg1 > 0 /\ 3-arg1 > 0 /\ -arg2+arg3 > 0), cost: 2
  52: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg2 == 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ 3-arg1 > 0), cost: 2
  53: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ 4-arg1 > 0 /\ arg2-arg3 == 0 /\ -1+arg1 > 0), cost: 2
  60: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (arg2 == 0 /\ -3+arg1 > 0 /\ -arg2+arg3 > 0), cost: 2
  61: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (arg2 == 0 /\ -3+arg1 > 0 /\ arg2-arg3 > 0), cost: 2
  62: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ -4+arg1 > 0 /\ arg2-arg3 == 0), cost: 2
  69: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -3+arg1 == 0 /\ -arg2+arg3 > 0), cost: 2
  70: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -3+arg1 == 0 /\ arg2-arg3 > 0), cost: 2
  71: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -4+arg1 == 0 /\ arg2-arg3 == 0), cost: 2
  76: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 == 0 /\ -arg2+arg3 > 0), cost: 2
  77: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 == 0 /\ arg2-arg3 > 0), cost: 2
  78: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg2-arg3 == 0 /\ -1+arg1 == 0), cost: 2
  22: __init -> f1_0_main_Load : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
New rule:
__init -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2P22, (arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 2

Applied deletion
Removed the following rules: 22 23

Eliminated locations on linear paths
Start location: __init
  24: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 1
  25: f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
  26: f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
  27: f887_0_loop_aux_GT -> f970_0_loop_aux_NE : arg5'=arg5P4, arg2'=-1+arg1, arg4'=arg4P4, arg3'=-2+arg1, (arg1-arg3 == 0 /\ arg1 > 0), cost: 1
  28: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
  29: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P6, arg2'=arg3, arg4'=arg4P6, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
  30: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg3, arg4'=arg4P7, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ -arg5+arg4 > 0 /\ arg1 > 0), cost: 1
  31: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ -arg5+arg4 > 0 /\ -arg2+arg1 > 0 /\ arg1 > 0), cost: 1
  36: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
  49: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg2, arg3'=1, (4-arg2 > 0 /\ -arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 2
  58: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=-1+arg2, arg3'=1, (-4+arg2 > 0 /\ -arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0), cost: 2
  67: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-4+arg2 == 0 /\ -arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0), cost: 2
  74: f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (-arg5+arg4 == 0 /\ arg4 == 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 2
  32: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
  33: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P10, arg2'=0, arg4'=arg4P10, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
  34: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P11, arg2'=0, arg4'=arg4P11, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
  35: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P12, arg2'=0, arg4'=arg4P12, arg1'=arg2, (-arg2+arg1 > 0 /\ arg1 > 0 /\ -arg4+arg3 > 0), cost: 1
  37: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
  45: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0 /\ 3-arg2 > 0), cost: 2
  46: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2 > 0 /\ -arg2+arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0 /\ 3-arg2 > 0), cost: 2
  47: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0 /\ 3-arg2 > 0), cost: 2
  48: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=arg2, arg3'=1, (arg2 > 0 /\ -arg2+arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0 /\ 3-arg2 > 0), cost: 2
  50: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg2, arg3'=1, (4-arg2 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2
  54: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  55: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  56: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  57: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  59: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=-1+arg2, arg3'=1, (-4+arg2 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2
  63: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  64: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 == 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  65: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 == 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  66: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-arg2+arg1 > 0 /\ -3+arg2 == 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  68: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (-4+arg2 == 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2
  72: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
  73: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 > 0 /\ arg3 == 0 /\ -arg4+arg3 > 0), cost: 2
  75: f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg1 > 0 /\ -1+arg2 == 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2
  38: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P15, arg2'=0, arg4'=arg4P15, arg3'=arg2, -arg2+arg3 > 0, cost: 1
  39: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1
  42: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P19, arg2'=0, arg4'=arg4P19, arg1'=-1+arg1, arg3'=arg2, (1+arg2-arg1 <= 0 /\ arg2-arg3 == 0), cost: 1
  51: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg2 == 0 /\ arg1 > 0 /\ 3-arg1 > 0 /\ -arg2+arg3 > 0), cost: 2
  52: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg2 == 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ 3-arg1 > 0), cost: 2
  53: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ 4-arg1 > 0 /\ arg2-arg3 == 0 /\ -1+arg1 > 0), cost: 2
  60: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (arg2 == 0 /\ -3+arg1 > 0 /\ -arg2+arg3 > 0), cost: 2
  61: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg3'=1, (arg2 == 0 /\ -3+arg1 > 0 /\ arg2-arg3 > 0), cost: 2
  62: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ -4+arg1 > 0 /\ arg2-arg3 == 0), cost: 2
  69: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -3+arg1 == 0 /\ -arg2+arg3 > 0), cost: 2
  70: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -3+arg1 == 0 /\ arg2-arg3 > 0), cost: 2
  71: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -4+arg1 == 0 /\ arg2-arg3 == 0), cost: 2
  76: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 == 0 /\ -arg2+arg3 > 0), cost: 2
  77: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg1 == 0 /\ arg2-arg3 > 0), cost: 2
  78: f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P21, arg2'=0, arg4'=arg4P21, arg1'=0, arg3'=-1, (arg2 == 0 /\ arg2-arg3 == 0 /\ -1+arg1 == 0), cost: 2
  79: __init -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2P22, (arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 2


Eliminating location f961_0_loop_aux_NE by chaining:

Applied chaining
First rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 1
Second rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2

Applied chaining
First rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 1
Second rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg3, arg4'=arg4P7, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ -arg5+arg4 > 0 /\ arg1 > 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg2, arg4'=arg4P7, arg1'=arg1, arg3'=1+arg3, (3-arg1+arg3 > 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2

Applied chaining
First rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 1
Second rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2, arg4'=arg4P13, arg1'=-1+arg1, arg3'=1+arg3, (2-arg1+arg3 <= 0 /\ 3-arg1+arg3 == 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2, arg4'=arg4P13, arg1'=-1+arg1, arg3'=1+arg3, (2-arg1+arg3 <= 0 /\ 3-arg1+arg3 == 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2, arg4'=arg4P13, arg1'=-1+arg1, arg3'=1+arg3, (3-arg1+arg3 == 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2

Applied chaining
First rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg3, arg4'=arg4P5, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ arg5-arg4 > 0 /\ arg1 > 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg2 > 0 /\ arg3 > 0), cost: 2

Applied chaining
First rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg3, arg4'=arg4P7, arg1'=arg2, arg3'=arg4, (-1+arg4 > 0 /\ arg2-arg1 > 0 /\ -arg5+arg4 > 0 /\ arg1 > 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg2, arg4'=arg4P7, arg1'=arg1, arg3'=1+arg3, (3-arg1+arg3 > 0 /\ arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 2

Applied chaining
First rule:
f887_0_loop_aux_GT -> f961_0_loop_aux_NE : arg5'=-2+arg1, arg2'=arg1, arg4'=1+arg3, arg1'=arg3, arg3'=arg2, (arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f961_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg3, arg4'=arg4P13, arg1'=-1+arg2, arg3'=arg4, (-arg5+arg4 == 0 /\ arg1 > 0 /\ 1-arg2+arg4 <= 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2, arg4'=arg4P13, arg1'=-1+arg1, arg3'=1+arg3, (2-arg1+arg3 <= 0 /\ 3-arg1+arg3 == 0 /\ arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2, arg4'=arg4P13, arg1'=-1+arg1, arg3'=1+arg3, (2-arg1+arg3 <= 0 /\ 3-arg1+arg3 == 0 /\ arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2, arg4'=arg4P13, arg1'=-1+arg1, arg3'=1+arg3, (3-arg1+arg3 == 0 /\ arg2 > 0 /\ arg3 > 0), cost: 2

Applied deletion
Removed the following rules: 24 25 28 29 30 31 36 49 58 67 74

Eliminating location f962_0_loop_aux_NE by chaining:

Applied chaining
First rule:
f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg2, (arg2-arg1 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg1, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg1, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg1, arg3'=-1+arg3, (arg2 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 2

Applied chaining
First rule:
f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg2, (arg1 > 0 /\ 1-arg2+arg3 <= 0 /\ -arg4+arg3 == 0), cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg1, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ -arg1+arg3 <= 0 /\ 1-arg1+arg3 == 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg1, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ -arg1+arg3 <= 0 /\ 1-arg1+arg3 == 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg1, arg3'=-1+arg3, (arg2 == 0 /\ 1-arg1+arg3 == 0 /\ arg3 > 0), cost: 2

Applied chaining
First rule:
f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg2, arg3'=1, (4-arg2 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg3 == 0 /\ -arg4+arg3 == 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ arg1-arg3 > 0 /\ 4-arg1 > 0 /\ -1+arg3 == 0 /\ 1-arg1+arg3 == 0 /\ arg3 > 0 /\ -1+arg1 > 0), cost: 3

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ arg1-arg3 > 0 /\ 4-arg1 > 0 /\ -1+arg3 == 0 /\ 1-arg1+arg3 == 0 /\ arg3 > 0 /\ -1+arg1 > 0), cost: 3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ -1+arg3 == 0 /\ 1-arg1+arg3 == 0), cost: 3

Applied chaining
First rule:
f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 > 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg1, arg3'=1, (arg2 == 0 /\ arg1-arg3 > 0 /\ -3+arg1 > 0 /\ -1+arg3 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 3

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg1, arg3'=1, (arg2 == 0 /\ arg1-arg3 > 0 /\ -3+arg1 > 0 /\ -1+arg3 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg1, arg3'=1, (arg2 == 0 /\ -3+arg1 > 0 /\ -1+arg3 == 0), cost: 3

Applied chaining
First rule:
f887_0_loop_aux_GT -> f962_0_loop_aux_NE : arg5'=arg5P3, arg2'=arg1, arg4'=-2+arg1, arg1'=arg3, arg3'=-1+arg3, (arg2 == 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f962_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2-arg1 > 0 /\ -3+arg2 == 0 /\ arg1 > 0 /\ arg4-arg3 > 0 /\ arg3 == 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ arg1-arg3 > 0 /\ -3+arg1 == 0 /\ -1+arg3 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 3

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ arg1-arg3 > 0 /\ -3+arg1 == 0 /\ -1+arg3 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -3+arg1 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 3

Applied deletion
Removed the following rules: 26 32 33 34 35 37 45 46 47 48 50 54 55 56 57 59 63 64 65 66 68 72 73 75

Eliminating location f970_0_loop_aux_NE by chaining:

Applied chaining
First rule:
f887_0_loop_aux_GT -> f970_0_loop_aux_NE : arg5'=arg5P4, arg2'=-1+arg1, arg4'=arg4P4, arg3'=-2+arg1, (arg1-arg3 == 0 /\ arg1 > 0), cost: 1
Second rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=arg2, arg2-arg3 > 0, cost: 1
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=-1+arg1, (1 > 0 /\ arg1-arg3 == 0 /\ arg1 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=-1+arg1, (1 > 0 /\ arg1-arg3 == 0 /\ arg1 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=-1+arg1, (arg1-arg3 == 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f887_0_loop_aux_GT -> f970_0_loop_aux_NE : arg5'=arg5P4, arg2'=-1+arg1, arg4'=arg4P4, arg3'=-2+arg1, (arg1-arg3 == 0 /\ arg1 > 0), cost: 1
Second rule:
f970_0_loop_aux_NE -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg2 == 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ 3-arg1 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (1 > 0 /\ arg1-arg3 == 0 /\ arg1 > 0 /\ 3-arg1 > 0 /\ -1+arg1 == 0), cost: 3

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (1 > 0 /\ arg1-arg3 == 0 /\ arg1 > 0 /\ 3-arg1 > 0 /\ -1+arg1 == 0), cost: 3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1-arg3 == 0 /\ -1+arg1 == 0), cost: 3

Applied deletion
Removed the following rules: 27 38 39 42 51 52 53 60 61 62 69 70 71 76 77 78

Eliminated locations on tree-shaped paths
Start location: __init
  80: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
  81: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg2, arg4'=arg4P7, arg1'=arg1, arg3'=1+arg3, (3-arg1+arg3 > 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
  82: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2, arg4'=arg4P13, arg1'=-1+arg1, arg3'=1+arg3, (3-arg1+arg3 == 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
  83: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg2 > 0 /\ arg3 > 0), cost: 2
  84: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg2, arg4'=arg4P7, arg1'=arg1, arg3'=1+arg3, (3-arg1+arg3 > 0 /\ arg2 > 0 /\ arg1-arg3 > 0 /\ arg3 > 0), cost: 2
  85: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P13, arg2'=arg2, arg4'=arg4P13, arg1'=-1+arg1, arg3'=1+arg3, (3-arg1+arg3 == 0 /\ arg2 > 0 /\ arg3 > 0), cost: 2
  86: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg1, arg3'=-1+arg3, (arg2 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 2
  87: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg1, arg3'=-1+arg3, (arg2 == 0 /\ 1-arg1+arg3 == 0 /\ arg3 > 0), cost: 2
  88: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg1'=-1+arg1, arg3'=1, (arg2 == 0 /\ -1+arg3 == 0 /\ 1-arg1+arg3 == 0), cost: 3
  89: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P18, arg2'=1, arg4'=arg4P18, arg1'=arg1, arg3'=1, (arg2 == 0 /\ -3+arg1 > 0 /\ -1+arg3 == 0), cost: 3
  90: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P20, arg2'=1, arg4'=arg4P20, arg1'=2, arg3'=1, (arg2 == 0 /\ -3+arg1 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 3
  91: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P16, arg2'=0, arg4'=arg4P16, arg3'=-1+arg1, (arg1-arg3 == 0 /\ arg1 > 0), cost: 2
  92: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P17, arg2'=1, arg4'=arg4P17, arg3'=1, (arg1-arg3 == 0 /\ -1+arg1 == 0), cost: 3
  79: __init -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2P22, (arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 2


Applied pruning (of leafs and parallel rules):
Start location: __init
  80: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
  81: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg2, arg4'=arg4P7, arg1'=arg1, arg3'=1+arg3, (3-arg1+arg3 > 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
  83: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg2 > 0 /\ arg3 > 0), cost: 2
  86: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg1, arg3'=-1+arg3, (arg2 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 2
  87: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg1, arg3'=-1+arg3, (arg2 == 0 /\ 1-arg1+arg3 == 0 /\ arg3 > 0), cost: 2
  79: __init -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2P22, (arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 2


Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg2'=arg2, arg4'=arg4P7, arg1'=arg1, arg3'=1+arg3, (3-arg1+arg3 > 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg4'=arg4P7, arg3'=1+arg3, (3-arg1+arg3 > 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=arg1, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg2 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=arg1, arg3'=-1+arg3, (arg2 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=-1+arg3, (arg2 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 2

Simplified simple loops
Start location: __init
  87: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg1, arg3'=-1+arg3, (arg2 == 0 /\ 1-arg1+arg3 == 0 /\ arg3 > 0), cost: 2
  93: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
  94: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg4'=arg4P7, arg3'=1+arg3, (3-arg1+arg3 > 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
  95: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg2 > 0 /\ arg3 > 0), cost: 2
  96: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=-1+arg3, (arg2 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 2
  79: __init -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2P22, (arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 2


Applied acceleration
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-1+arg1, arg3'=-1+arg3, (arg2 == 0 /\ 1-arg1+arg3 == 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-n3+arg1, arg3'=-n3+arg3, (arg2 >= 0 /\ 1-arg1+arg3 >= 0 /\ -arg2 >= 0 /\ -1+n3 >= 0 /\ 1-n3+arg3 > 0 /\ -1+arg1-arg3 >= 0), cost: 2*n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fGajge.txt

Applied instantiation
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=-n3+arg1, arg3'=-n3+arg3, (arg2 >= 0 /\ 1-arg1+arg3 >= 0 /\ -arg2 >= 0 /\ -1+n3 >= 0 /\ 1-n3+arg3 > 0 /\ -1+arg1-arg3 >= 0), cost: 2*n3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=arg1-arg3, arg3'=0, (1 > 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ 1-arg1+arg3 >= 0 /\ -arg2 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg3

Applied acceleration
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=n4+arg3, (-1+n4 >= 0 /\ -arg2 > 0 /\ -2-n4+arg1-arg3 > 0 /\ arg3 > 0), cost: 2*n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_IBBJmg.txt

Applied instantiation
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=n4+arg3, (-1+n4 >= 0 /\ -arg2 > 0 /\ -2-n4+arg1-arg3 > 0 /\ arg3 > 0), cost: 2*n4
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=-3+arg1, (1 > 0 /\ -4+arg1-arg3 >= 0 /\ -arg2 > 0 /\ arg3 > 0), cost: -6+2*arg1-2*arg3

Applied acceleration
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg4'=arg4P7, arg3'=1+arg3, (3-arg1+arg3 > 0 /\ arg1-arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg4'=arg4P7, arg3'=arg3+n5, (1+arg1-arg3-n5 > 0 /\ 3-arg1+arg3 > 0 /\ -1+n5 >= 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2*n5
Sub-proof via acceration calculus written to file:///tmp/tmpnam_MPcJNL.txt

Applied instantiation
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg4'=arg4P7, arg3'=arg3+n5, (1+arg1-arg3-n5 > 0 /\ 3-arg1+arg3 > 0 /\ -1+n5 >= 0 /\ -arg2 > 0 /\ arg3 > 0), cost: 2*n5
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg4'=arg4P7, arg3'=arg1, (1 > 0 /\ 3-arg1+arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg1-2*arg3

Applied acceleration
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=1+arg3, (-3+arg1-arg3 > 0 /\ arg2 > 0 /\ arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=n6+arg3, (arg2 > 0 /\ -2-n6+arg1-arg3 > 0 /\ arg3 > 0 /\ -1+n6 >= 0), cost: 2*n6
Sub-proof via acceration calculus written to file:///tmp/tmpnam_npaDPe.txt

Applied instantiation
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=n6+arg3, (arg2 > 0 /\ -2-n6+arg1-arg3 > 0 /\ arg3 > 0 /\ -1+n6 >= 0), cost: 2*n6
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=-3+arg1, (1 > 0 /\ arg2 > 0 /\ -4+arg1-arg3 >= 0 /\ arg3 > 0), cost: -6+2*arg1-2*arg3

Applied acceleration
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=-1+arg3, (arg2 == 0 /\ arg3 > 0 /\ -1+arg1-arg3 > 0), cost: 2
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=-n7+arg3, (arg2 >= 0 /\ 1-n7+arg3 > 0 /\ -arg2 >= 0 /\ -1+n7 >= 0 /\ -1+arg1-arg3 > 0), cost: 2*n7
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oBeLEm.txt

Applied instantiation
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=-n7+arg3, (arg2 >= 0 /\ 1-n7+arg3 > 0 /\ -arg2 >= 0 /\ -1+n7 >= 0 /\ -1+arg1-arg3 > 0), cost: 2*n7
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=0, (1 > 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ -arg2 >= 0 /\ -1+arg1-arg3 > 0), cost: 2*arg3

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=arg1-arg3, arg3'=0, (1 > 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ 1-arg1+arg3 >= 0 /\ -arg2 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=arg1-arg3, arg3'=0, (arg2 <= 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ 1-arg1+arg3 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg3

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=-3+arg1, (1 > 0 /\ -4+arg1-arg3 >= 0 /\ -arg2 > 0 /\ arg3 > 0), cost: -6+2*arg1-2*arg3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=-3+arg1, (-4+arg1-arg3 >= 0 /\ -arg2 > 0 /\ arg3 > 0), cost: -6+2*arg1-2*arg3

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg4'=arg4P7, arg3'=arg1, (1 > 0 /\ 3-arg1+arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg1-2*arg3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg4'=arg4P7, arg3'=arg1, (3-arg1+arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg1-2*arg3

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=-3+arg1, (1 > 0 /\ arg2 > 0 /\ -4+arg1-arg3 >= 0 /\ arg3 > 0), cost: -6+2*arg1-2*arg3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=-3+arg1, (arg2 > 0 /\ -4+arg1-arg3 >= 0 /\ arg3 > 0), cost: -6+2*arg1-2*arg3

Applied simplification
Original rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=0, (1 > 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ -arg2 >= 0 /\ -1+arg1-arg3 > 0), cost: 2*arg3
New rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=0, (arg2 <= 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ -1+arg1-arg3 > 0), cost: 2*arg3

Applied deletion
Removed the following rules: 87 93 94 95 96

Accelerated simple loops
Start location: __init
 102: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=arg1-arg3, arg3'=0, (arg2 <= 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ 1-arg1+arg3 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg3
 103: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=-3+arg1, (-4+arg1-arg3 >= 0 /\ -arg2 > 0 /\ arg3 > 0), cost: -6+2*arg1-2*arg3
 104: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P7, arg4'=arg4P7, arg3'=arg1, (3-arg1+arg3 > 0 /\ -arg2 > 0 /\ arg3 > 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg1-2*arg3
 105: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P5, arg4'=arg4P5, arg3'=-3+arg1, (arg2 > 0 /\ -4+arg1-arg3 >= 0 /\ arg3 > 0), cost: -6+2*arg1-2*arg3
 106: f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=0, (arg2 <= 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ -1+arg1-arg3 > 0), cost: 2*arg3
  79: __init -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2P22, (arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 2


Applied chaining
First rule:
__init -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2P22, (arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 2
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=arg1-arg3, arg3'=0, (arg2 <= 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ 1-arg1+arg3 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg3
New rule:
__init -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=1, arg3'=0, (0 == 0 /\ 5 > 0 /\ 18 >= 0), cost: 40

Applied chaining
First rule:
__init -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2P22, (arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 2
Second rule:
f887_0_loop_aux_GT -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg3'=0, (arg2 <= 0 /\ arg2 >= 0 /\ -1+arg3 >= 0 /\ -1+arg1-arg3 > 0), cost: 2*arg3
New rule:
__init -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=20, arg3'=0, (4-arg2P22 > 0 /\ 1+arg2P22 > 0), cost: 32+2*arg2P22

Applied deletion
Removed the following rules: 102 103 104 105 106

Chained accelerated rules with incoming rules
Start location: __init
  79: __init -> f887_0_loop_aux_GT : arg5'=arg5P0, arg2'=0, arg4'=arg4P0, arg1'=20, arg3'=15+arg2P22, (arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 2
 107: __init -> f887_0_loop_aux_GT : arg5'=arg5P14, arg2'=0, arg4'=arg4P14, arg1'=1, arg3'=0, (0 == 0 /\ 5 > 0 /\ 18 >= 0), cost: 40
 108: __init -> f887_0_loop_aux_GT : arg5'=arg5P9, arg2'=0, arg4'=arg4P9, arg1'=20, arg3'=0, (4-arg2P22 > 0 /\ 1+arg2P22 > 0), cost: 32+2*arg2P22


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

