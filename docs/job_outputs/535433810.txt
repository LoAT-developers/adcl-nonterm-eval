WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f278_0_main_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg2P0-arg4P0 == 0 /\ arg1 > 0 /\ arg2P0-arg3P0 == 0), cost: 1
   1: f278_0_main_LE -> f278_0_main_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1-arg1P1 == 0 /\ -arg4P1+arg3 == 0 /\ -arg2 == 0 /\ -arg2P1+arg3 == 0 /\ arg3 > 0 /\ -arg3P1+arg3 == 0 /\ -arg4+arg3 == 0), cost: 1
   2: f278_0_main_LE -> f278_0_main_LE : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ -1-arg1P2+arg1 == 0 /\ -arg4P2+arg3 == 0 /\ -1+arg2-arg2P2 == 0 /\ arg1 > 0 /\ -arg3P2+arg3 == 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f278_0_main_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2P0 > 0 /\ 1+arg2 > 0 /\ arg2P0-arg4P0 == 0 /\ arg1 > 0 /\ arg2P0-arg3P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f278_0_main_LE : arg2'=arg3P0, arg4'=arg3P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0), cost: 1

Applied preprocessing
Original rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1-arg1P1 == 0 /\ -arg4P1+arg3 == 0 /\ -arg2 == 0 /\ -arg2P1+arg3 == 0 /\ arg3 > 0 /\ -arg3P1+arg3 == 0 /\ -arg4+arg3 == 0), cost: 1
New rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg3, arg4'=arg3, (arg2 == 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ -1-arg1P2+arg1 == 0 /\ -arg4P2+arg3 == 0 /\ -1+arg2-arg2P2 == 0 /\ arg1 > 0 /\ -arg3P2+arg3 == 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
New rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=-1+arg2, arg4'=arg3, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_Load -> f278_0_main_LE : arg2'=arg3P0, arg4'=arg3P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0), cost: 1
   5: f278_0_main_LE -> f278_0_main_LE : arg2'=arg3, arg4'=arg3, (arg2 == 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
   6: f278_0_main_LE -> f278_0_main_LE : arg2'=-1+arg2, arg4'=arg3, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied acceleration
Original rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=-1+arg2, arg4'=arg3, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
New rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg2-n0, arg4'=arg3, arg1'=arg1-n0, (1+arg2-n0 > 0 /\ -1+n0 >= 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ 1+arg1-n0 > 0 /\ -arg4+arg3 >= 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JbEfim.txt

Applied instantiation
Original rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg2-n0, arg4'=arg3, arg1'=arg1-n0, (1+arg2-n0 > 0 /\ -1+n0 >= 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ 1+arg1-n0 > 0 /\ -arg4+arg3 >= 0), cost: n0
New rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=0, arg4'=arg3, arg1'=-arg2+arg1, (1 > 0 /\ 1-arg2+arg1 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -arg4+arg3 >= 0), cost: arg2

Applied instantiation
Original rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg2-n0, arg4'=arg3, arg1'=arg1-n0, (1+arg2-n0 > 0 /\ -1+n0 >= 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ 1+arg1-n0 > 0 /\ -arg4+arg3 >= 0), cost: n0
New rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg2-arg1, arg4'=arg3, arg1'=0, (1 > 0 /\ 1+arg2-arg1 > 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -1+arg1 >= 0 /\ -arg4+arg3 >= 0), cost: arg1

Applied simplification
Original rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=0, arg4'=arg3, arg1'=-arg2+arg1, (1 > 0 /\ 1-arg2+arg1 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -arg4+arg3 >= 0), cost: arg2
New rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=0, arg4'=arg3, arg1'=-arg2+arg1, (1-arg2+arg1 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -arg4+arg3 >= 0), cost: arg2

Applied simplification
Original rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg2-arg1, arg4'=arg3, arg1'=0, (1 > 0 /\ 1+arg2-arg1 > 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -1+arg1 >= 0 /\ -arg4+arg3 >= 0), cost: arg1
New rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg2-arg1, arg4'=arg3, arg1'=0, (1+arg2-arg1 > 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -1+arg1 >= 0 /\ -arg4+arg3 >= 0), cost: arg1

Applied deletion
Removed the following rules: 6

Accelerated simple loops
Start location: __init
   4: f1_0_main_Load -> f278_0_main_LE : arg2'=arg3P0, arg4'=arg3P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0), cost: 1
   5: f278_0_main_LE -> f278_0_main_LE : arg2'=arg3, arg4'=arg3, (arg2 == 0 /\ arg3 > 0 /\ -arg4+arg3 == 0), cost: 1
   9: f278_0_main_LE -> f278_0_main_LE : arg2'=0, arg4'=arg3, arg1'=-arg2+arg1, (1-arg2+arg1 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -arg4+arg3 >= 0), cost: arg2
  10: f278_0_main_LE -> f278_0_main_LE : arg2'=arg2-arg1, arg4'=arg3, arg1'=0, (1+arg2-arg1 > 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -1+arg1 >= 0 /\ -arg4+arg3 >= 0), cost: arg1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f278_0_main_LE : arg2'=arg3P0, arg4'=arg3P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0), cost: 1
Second rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=0, arg4'=arg3, arg1'=-arg2+arg1, (1-arg2+arg1 > 0 /\ -1+arg2 >= 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -arg4+arg3 >= 0), cost: arg2
New rule:
f1_0_main_Load -> f278_0_main_LE : arg2'=0, arg4'=arg3P0, arg1'=arg1P0-arg3P0, arg3'=arg3P0, (1+arg1P0-arg3P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ arg3P0 > 0), cost: 1+arg3P0

Applied chaining
First rule:
f1_0_main_Load -> f278_0_main_LE : arg2'=arg3P0, arg4'=arg3P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0), cost: 1
Second rule:
f278_0_main_LE -> f278_0_main_LE : arg2'=arg2-arg1, arg4'=arg3, arg1'=0, (1+arg2-arg1 > 0 /\ arg4-arg3 >= 0 /\ arg3 > 0 /\ -1+arg1 >= 0 /\ -arg4+arg3 >= 0), cost: arg1
New rule:
f1_0_main_Load -> f278_0_main_LE : arg2'=-arg1P0+arg3P0, arg4'=arg3P0, arg1'=0, arg3'=arg3P0, (1+arg2 > 0 /\ 1-arg1P0+arg3P0 > 0 /\ arg1 > 0 /\ -1+arg1P0 >= 0), cost: 1+arg1P0

Applied deletion
Removed the following rules: 5 9 10

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_Load -> f278_0_main_LE : arg2'=arg3P0, arg4'=arg3P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0), cost: 1
  11: f1_0_main_Load -> f278_0_main_LE : arg2'=0, arg4'=arg3P0, arg1'=arg1P0-arg3P0, arg3'=arg3P0, (1+arg1P0-arg3P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ arg3P0 > 0), cost: 1+arg3P0
  12: f1_0_main_Load -> f278_0_main_LE : arg2'=-arg1P0+arg3P0, arg4'=arg3P0, arg1'=0, arg3'=arg3P0, (1+arg2 > 0 /\ 1-arg1P0+arg3P0 > 0 /\ arg1 > 0 /\ -1+arg1P0 >= 0), cost: 1+arg1P0
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

