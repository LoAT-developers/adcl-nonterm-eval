NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2}>
<l2, l2, (arg1 > 4) /\ (arg2 > 0) /\ (arg2 >= arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) <= 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 2), arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) > 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 1)}>
<l2, l2, (arg2 < arg1) /\ (arg1 > 1) /\ ((arg2 + 1) >= (2 * arg1)) /\ (arg2 > 0), par{arg1 -> (arg1 + 1), arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 < arg1) /\ (arg1 > 1) /\ ((arg2 + 1) < (2 * arg1)) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l3, l1, true, par{arg1 -> undef13, arg2 -> undef14}>

Fresh variables:
undef13, undef14, 

Undef variables:
undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef14) /\ (arg2 = undef14) /\ (undef13 > 0) /\ (undef14 > ~(1))>
<l2, l2, (arg1 > 4) /\ (arg2 > 0) /\ (arg2 >= arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) <= 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 2), arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) > 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 1)}>
<l2, l2, (arg2 < arg1) /\ (arg1 > 1) /\ ((arg2 + 1) < (2 * arg1)) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>

Fresh variables:
undef13, undef14, 

Undef variables:
undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg1 <= 4 /\ arg2 <= 4 + arg1, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 1 <= arg2 /\ 5 + arg1 <= arg2 /\ arg1 <= 4, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.013226
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l2: arg2 <= 1 + arg1[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 /\ 1 <= arg2 /\ 5 + arg1 <= arg2 /\ arg1 <= 4, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Checking unfeasibility...
Time used: 0.04662

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002112s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.317371s
Trying to remove transition: <l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.260939s
Time used: 0.260367
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.058153s
Time used: 1.05646
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 2.306283s
Time used: 2.30194
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.061035s
Time used: 0.056057
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.212371s
Time used: 0.212345

LOG: SAT solveNonLinear - Elapsed time: 0.273406s
Cost: 1; Total time: 0.268402
[31mFailed at location 2: arg1 + arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 + arg2 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011473s
Remaining time after improvement: 0.996522
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 + arg2 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 + arg2 <= 0 and entry <l0, l2, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

LOG: CALL check - Post:arg1 + arg2 <= 0 - Process 1
* Exit transition: <l0, l2, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>
* Postcondition  : arg1 + arg2 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000843s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000961s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 + arg2 <= 0 , 
Narrowing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002021s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.297442s
Trying to remove transition: <l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.248573s
Time used: 0.247866
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.952084s
Time used: 0.950057
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 2.374972s
Time used: 2.37036
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.625457s
Time used: 0.620411
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.327614s
Time used: 0.327578

LOG: SAT solveNonLinear - Elapsed time: 0.953071s
Cost: 1; Total time: 0.947989
[31mFailed at location 2: arg1 + 2*arg2 <= 3[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 + 2*arg2 <= 3[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013657s
Remaining time after improvement: 0.99618
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 + 2*arg2 <= 3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[33mRanking function: [36marg1 + 3*arg2[0m
New Graphs: 
Calling Safety with literal arg1 + 2*arg2 <= 3 and entry <l0, l2, 0 <= undef14 /\ 1 <= arg1 + arg2 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

LOG: CALL check - Post:arg1 + 2*arg2 <= 3 - Process 2
* Exit transition: <l0, l2, 0 <= undef14 /\ 1 <= arg1 + arg2 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>
* Postcondition  : arg1 + 2*arg2 <= 3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000702s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000820s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 + 2*arg2 <= 3 , 
Narrowing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002413s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.436845s
Trying to remove transition: <l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.286676s
Time used: 0.285352
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 2.064149s
Time used: 2.06162
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 2.563543s
Time used: 2.55856
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.006368s
Time used: 4.00124
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.010518s
Time used: 4.00087
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.010015s
Time used: 1.00002
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.083969s
Time used: 1.06408

Proving non-termination of subgraph 1
Transitions:
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {all remain the same}>
<l2, end, arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 5 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, 0 <= arg1 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 2 + arg2 <= 2*arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 5 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ 0 <= arg1 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ arg1 <= 1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg2 <= 0 /\ 1 + arg1 <= 0 /\ 1 + arg2 <= arg1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg1 <= arg2 /\ 0 <= arg1 /\ arg2 <= 0 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg1 <= arg2 /\ arg2 <= 0 /\ 1 + arg1 <= 0 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.041353s
Time used: 0.040842
Improving Solution with cost 3 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.001319s
Time used: 1.00119

LOG: SAT solveNonLinear - Elapsed time: 1.042672s
Cost: 3; Total time: 1.04203
[31mFailed at location 2: 1 <= arg2[0m
Before Improving: 
[36mQuasi-invariant at l2: 1 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.013685s
Remaining time after improvement: 0.995677
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 9
Strengthening exit transition (result): 
<l2, end, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.054373s
Time used: 0.054055
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.015462s
Time used: 0.015285

LOG: SAT solveNonLinear - Elapsed time: 0.069835s
Cost: 1; Total time: 0.06934
[31mFailed at location 2: 3 <= arg1 + arg2[0m
Before Improving: 
[36mQuasi-invariant at l2: 3 <= arg1 + arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005247s
Remaining time after improvement: 0.997166
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 3 <= arg1 + arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1 /\ 3 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4 /\ 3 <= arg1 + arg2, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ 3 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 1 <= arg2, 3 <= arg1 + arg2, 
OPEN EXITS: 
<l2, end, 1 <= arg2 /\ 3 <= arg1 + arg2, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>
Conditions: 1 <= arg2, 3 <= arg1 + arg2, 
OPEN EXITS: 
<l0, l2, 0 <= undef14 /\ 1 <= arg2 /\ 1 <= undef13 /\ 3 <= arg1 + arg2 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
