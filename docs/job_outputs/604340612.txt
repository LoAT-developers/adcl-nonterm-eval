NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_i -> Â¿functionCall(__VERIFIER_nondet_int), main_w -> 5}>
<l1, l2, true>
<l2, l14, (main_i = 0)>
<l2, l3, not((main_i = 0))>
<l3, l4, (main_i < ~(main_w))>
<l3, l6, not((main_i < ~(main_w)))>
<l4, l5, true, seq{main_i -> (main_i - 1), main_i -> (main_i * ~(1))}>
<l5, l12, true>
<l6, l7, (main_i > main_w)>
<l6, l9, not((main_i > main_w))>
<l7, l8, true, seq{main_i -> (main_i + 1), main_i -> (main_i * ~(1))}>
<l8, l11, true>
<l9, l10, true, seq{main_i -> 0}>
<l10, l11, true>
<l11, l12, true>
<l12, l13, true, seq{main_w -> (main_w + 1)}>
<l13, l2, true>
<l14, l15, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l16, true, seq{main__func_return_ -> 0}>
<l16, l17, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l17, l1, true, seq{main_i -> varCall_1, main_w -> 5}>
<l1, l2, true>
<l2, l14, (main_i = 0)>
<l2, l3, not((main_i = 0))>
<l3, l4, (main_i < ~(main_w))>
<l3, l6, not((main_i < ~(main_w)))>
<l4, l5, true, seq{main_i -> (main_i - 1), main_i -> (main_i * ~(1))}>
<l5, l12, true>
<l6, l7, (main_i > main_w)>
<l6, l9, not((main_i > main_w))>
<l7, l8, true, seq{main_i -> (main_i + 1), main_i -> (main_i * ~(1))}>
<l8, l11, true>
<l9, l10, true, seq{main_i -> 0}>
<l10, l11, true>
<l11, l12, true>
<l12, l13, true, seq{main_w -> (main_w + 1)}>
<l13, l2, true>
<l14, l15, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
15, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [4 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1> | <line: 8, col: 9>
main | function | [integer, ()] | <line: 5, col: 1>
i | local variable | integer | <line: 6, col: 5> | <line: 8, col: 5> <line: 11, col: 12> <line: 12, col: 13> <line: 13, col: 13> <line: 13, col: 17> <line: 14, col: 13> <line: 14, col: 17> <line: 16, col: 17> <line: 17, col: 17> <line: 17, col: 21> <line: 18, col: 17> <line: 18, col: 21> <line: 20, col: 17>
w | local variable | integer | <line: 7, col: 5> | <line: 9, col: 5> <line: 12, col: 18> <line: 16, col: 21> <line: 23, col: 9> <line: 23, col: 13>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_i = undef2) /\ (main_w = 5)>
<l2, l15, (main_i = 0)>
<l2, l2, (main_i < 0) /\ (main_i < ~(main_w)), par{main_i -> ((main_i - 1) * ~(1)), main_w -> (main_w + 1)}>
<l2, l2, (main_i < 0) /\ not((main_i < ~(main_w))) /\ not((main_i > main_w)), par{main_i -> 0, main_w -> (main_w + 1)}>
<l2, l2, (main_i > 0) /\ (main_i < ~(main_w)), par{main_i -> ((main_i - 1) * ~(1)), main_w -> (main_w + 1)}>
<l2, l2, (main_i > 0) /\ not((main_i < ~(main_w))) /\ (main_i > main_w), par{main_i -> ((main_i + 1) * ~(1)), main_w -> (main_w + 1)}>
<l2, l2, (main_i > 0) /\ not((main_i < ~(main_w))) /\ not((main_i > main_w)), par{main_i -> 0, main_w -> (main_w + 1)}>

Fresh variables:
undef2, 

Undef variables:
undef2, 

Abstraction variables:

Exit nodes:
15, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + main_i <= 0 /\ 1 + main_i + main_w <= 0, {main_i -> 1 - main_i, main_w -> 1 + main_w, rest remain the same}>
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 + main_i <= 0, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
<l2, l2, 1 + main_i + main_w <= 0 /\ 1 <= main_i, {main_i -> 1 - main_i, main_w -> 1 + main_w, rest remain the same}>
<l2, l2, 0 <= main_i + main_w /\ 1 <= main_i /\ 1 + main_w <= main_i, {main_i -> -1 - main_i, main_w -> 1 + main_w, rest remain the same}>
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 <= main_i, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
Variables:
main_i, main_w

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_i = undef2 /\ main_w = 5, {all remain the same}>

Graph 2
<l2, l15, main_i = 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 15 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.00821
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l2: 1 <= main_w[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i + main_w <= 0 /\ 1 <= main_i, {main_i -> 1 - main_i, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + main_i <= 0 /\ 1 + main_i + main_w <= 0 /\ 1 <= main_w, {main_i -> 1 - main_i, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 + main_i <= 0 /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= main_i + main_w /\ 1 <= main_i /\ 1 + main_w <= main_i /\ 1 <= main_w, {main_i -> -1 - main_i, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 <= main_i /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
Checking unfeasibility...
Time used: 0.00403

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001218s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.137074s
[9907 : 9909]
[9907 : 9910]
Successful child: 9909
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= 0 /\ 1 + main_i + main_w <= 0 /\ 1 <= main_w, {main_i -> 1 - main_i, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 + main_i <= 0 /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_i + main_w /\ 1 <= main_i /\ 1 + main_w <= main_i /\ 1 <= main_w, {main_i -> -1 - main_i, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 <= main_i /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + main_i <= 0 /\ 1 + main_i + main_w <= 0 /\ 1 <= main_w, {main_i -> 1 - main_i, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 + main_i <= 0 /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_i + main_w /\ 1 <= main_i /\ 1 + main_w <= main_i /\ 1 <= main_w, {main_i -> -1 - main_i, main_w -> 1 + main_w, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 <= main_i /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
New Graphs: 
Transitions:
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 + main_i <= 0 /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 <= main_i /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
Variables:
main_i, main_w
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000618s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008225s
[9907 : 9914]
[9907 : 9915]
Successful child: 9915
[33mRanking function: [36mmain_i
[33mRanking function and negation of Quasi-Invariant applied[0m
New Graphs: 
Transitions:
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 + main_i <= 0 /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
Variables:
main_i, main_w
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000572s
[33mRanking function: [36m-1 - main_i[0m
New Graphs: 
[9907 : 9919]
[9907 : 9920]
INVARIANTS: 
2: 0 <= 7 + main_w , 
Quasi-INVARIANTS to narrow Graph: 
2: main_i <= main_w , 0 <= main_i + main_w , 
Narrowing transition: 
<l2, l2, 1 + main_i <= 0 /\ 1 + main_i + main_w <= 0 /\ 1 <= main_w, {main_i -> 1 - main_i, main_w -> 1 + main_w, rest remain the same}>

LOG: Narrow transition size 2
It's unfeasible. Removing transition: 
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 + main_i <= 0 /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
Narrowing transition: 
<l2, l2, 0 <= main_i + main_w /\ 1 <= main_i /\ 1 + main_w <= main_i /\ 1 <= main_w, {main_i -> -1 - main_i, main_w -> 1 + main_w, rest remain the same}>

LOG: Narrow transition size 2
It's unfeasible. Removing transition: 
<l2, l2, main_i <= main_w /\ 0 <= main_i + main_w /\ 1 <= main_i /\ 1 <= main_w, {main_i -> 0, main_w -> 1 + main_w, rest remain the same}>
invGraph after Narrowing: 
Transitions:
<l2, l2, main_i <= main_w /\ 1 + main_i <= 0 /\ 1 + main_i + main_w <= 0 /\ 1 <= main_w, {main_i -> 1 - main_i, main_w -> 1 + main_w, rest remain the same}>
<l2, l2, 0 <= main_i + main_w /\ 1 <= main_i /\ 1 + main_w <= main_i /\ 1 <= main_w, {main_i -> -1 - main_i, main_w -> 1 + main_w, rest remain the same}>
Variables:
main_i, main_w
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000652s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.024513s
[9907 : 9921]
[9907 : 9922]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009216s
Time used: 0.008789
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000491s
Time used: 1.00045

LOG: SAT solveNonLinear - Elapsed time: 1.009707s
Cost: 1; Total time: 1.00924
[33mQuasi-ranking function: [36m50000 - main_w[0m
New Graphs: 
Transitions:
<l2, l2, main_i <= main_w /\ 1 + main_i <= 0 /\ 1 + main_i + main_w <= 0 /\ 50001 <= main_w, {main_i -> 1 - main_i, main_w -> 1 + main_w, rest remain the same}>
<l2, l2, 0 <= main_i + main_w /\ 1 <= main_i /\ 1 + main_w <= main_i /\ 50001 <= main_w, {main_i -> -1 - main_i, main_w -> 1 + main_w, rest remain the same}>
Variables:
main_i, main_w
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000686s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.057974s
[9907 : 9926]
[9907 : 9927]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.104857s
Time used: 4.10156

[9907 : 9931]
[9907 : 9933]
Successful child: 9931

[32mProgram does NOT terminate[0m
