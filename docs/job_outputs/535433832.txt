NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f169_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (1-arg2P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1-arg1P0 == 0 /\ arg2-arg3P0 == 0), cost: 1
   1: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-arg3P1 == 0 /\ 1+arg2-arg1P1 == 0 /\ arg2 > 0 /\ -1-arg2+arg3 < 0 /\ arg2+arg3 >= 0 /\ arg1 > 0 /\ 1+arg2-arg2P1 == 0 /\ arg3 < 0 /\ -arg2+arg3 <= 0), cost: 1
   2: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ -1-arg2+arg3 < 0 /\ 1+arg2-arg1P2 == 0 /\ 1+arg2-arg2P2 == 0 /\ arg2+arg3 >= 0 /\ -arg3P2 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
   3: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1-arg2P3+arg2 == 0 /\ arg2 > 0 /\ arg2+arg3 < 0 /\ arg1 > 0 /\ 1-arg3P3-arg3 == 0 /\ arg3 < 0 /\ 1+arg2-arg1P3 == 0), cost: 1
   4: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (arg2 > 0 /\ 1-arg3P4-arg3 == 0 /\ arg2+arg3 < 0 /\ arg1 > 0 /\ arg3 > 0 /\ 1-arg2P4+arg2 == 0 /\ 1+arg2-arg1P4 == 0), cost: 1
   5: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (arg2 > 0 /\ 1+arg2-arg1P5 == 0 /\ -1-arg3P5-arg3 == 0 /\ arg2+arg3 >= 0 /\ -1+arg3 > 0 /\ 1-arg2P5+arg2 == 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ 1+arg2-arg3 <= 0 /\ 2+arg3 > 0), cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Removed rules with unsatisfiable guard
Start location: __init
   0: f1_0_main_Load -> f169_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (1-arg2P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1-arg1P0 == 0 /\ arg2-arg3P0 == 0), cost: 1
   1: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-arg3P1 == 0 /\ 1+arg2-arg1P1 == 0 /\ arg2 > 0 /\ -1-arg2+arg3 < 0 /\ arg2+arg3 >= 0 /\ arg1 > 0 /\ 1+arg2-arg2P1 == 0 /\ arg3 < 0 /\ -arg2+arg3 <= 0), cost: 1
   2: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ -1-arg2+arg3 < 0 /\ 1+arg2-arg1P2 == 0 /\ 1+arg2-arg2P2 == 0 /\ arg2+arg3 >= 0 /\ -arg3P2 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
   3: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1-arg2P3+arg2 == 0 /\ arg2 > 0 /\ arg2+arg3 < 0 /\ arg1 > 0 /\ 1-arg3P3-arg3 == 0 /\ arg3 < 0 /\ 1+arg2-arg1P3 == 0), cost: 1
   5: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (arg2 > 0 /\ 1+arg2-arg1P5 == 0 /\ -1-arg3P5-arg3 == 0 /\ arg2+arg3 >= 0 /\ -1+arg3 > 0 /\ 1-arg2P5+arg2 == 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ 1+arg2-arg3 <= 0 /\ 2+arg3 > 0), cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f169_0_loop_EQ : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (1-arg2P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1-arg1P0 == 0 /\ arg2-arg3P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f169_0_loop_EQ : arg2'=1, arg1'=1, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-arg3P1 == 0 /\ 1+arg2-arg1P1 == 0 /\ arg2 > 0 /\ -1-arg2+arg3 < 0 /\ arg2+arg3 >= 0 /\ arg1 > 0 /\ 1+arg2-arg2P1 == 0 /\ arg3 < 0 /\ -arg2+arg3 <= 0), cost: 1
New rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=0, (-arg3 > 0 /\ arg2+arg3 >= 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg2 > 0 /\ -1-arg2+arg3 < 0 /\ 1+arg2-arg1P2 == 0 /\ 1+arg2-arg2P2 == 0 /\ arg2+arg3 >= 0 /\ -arg3P2 == 0 /\ arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
New rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=0, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1-arg2P3+arg2 == 0 /\ arg2 > 0 /\ arg2+arg3 < 0 /\ arg1 > 0 /\ 1-arg3P3-arg3 == 0 /\ arg3 < 0 /\ 1+arg2-arg1P3 == 0), cost: 1
New rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=1-arg3, (-arg2-arg3 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (arg2 > 0 /\ 1+arg2-arg1P5 == 0 /\ -1-arg3P5-arg3 == 0 /\ arg2+arg3 >= 0 /\ -1+arg3 > 0 /\ 1-arg2P5+arg2 == 0 /\ arg1 > 0 /\ arg2-arg3 < 0 /\ 1+arg2-arg3 <= 0 /\ 2+arg3 > 0), cost: 1
New rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=-1-arg3, (arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: 1

Simplified rules
Start location: __init
   7: f1_0_main_Load -> f169_0_loop_EQ : arg2'=1, arg1'=1, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=0, (-arg3 > 0 /\ arg2+arg3 >= 0 /\ arg1 > 0), cost: 1
   9: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=0, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
  10: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=1-arg3, (-arg2-arg3 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
  11: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=-1-arg3, (arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Applied chaining
First rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=-1-arg3, (arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: 1
Second rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=1-arg3, (-arg2-arg3 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
New rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=2+arg2, arg1'=2+arg2, arg3'=2+arg3, (arg2 > 0 /\ arg1 > 0 /\ -arg2+arg3 > 0), cost: 2

Applied nonterm
Original rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=2+arg2, arg1'=2+arg2, arg3'=2+arg3, (arg2 > 0 /\ arg1 > 0 /\ -arg2+arg3 > 0), cost: 2
New rule:
f169_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ -arg2+arg3 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fKaNiF.txt

Applied chaining
First rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=1-arg3, (-arg2-arg3 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f169_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ -arg2+arg3 > 0), cost: NONTERM
New rule:
f169_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ -arg2-arg3 > 0 /\ arg2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=1-arg3, (-arg2-arg3 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=-1-arg3, (arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: 1
New rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=2+arg2, arg1'=2+arg2, arg3'=-2+arg3, (arg2 > 0 /\ 1+arg2+arg3 <= 0 /\ arg1 > 0), cost: 2

Applied nonterm
Original rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=2+arg2, arg1'=2+arg2, arg3'=-2+arg3, (arg2 > 0 /\ 1+arg2+arg3 <= 0 /\ arg1 > 0), cost: 2
New rule:
f169_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ -1-arg2-arg3 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_pDajGE.txt

Applied chaining
First rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=-1-arg3, (arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: 1
Second rule:
f169_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ -1-arg2-arg3 >= 0), cost: NONTERM
New rule:
f169_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ arg2 > 0 /\ -1-arg2+arg3 >= 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: NONTERM

Applied simplification
Original rule:
f169_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ -arg2-arg3 > 0 /\ arg2 > 0 /\ 1+arg2 > 0 /\ arg1 > 0), cost: NONTERM
New rule:
f169_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ -arg2-arg3 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: NONTERM

Applied simplification
Original rule:
f169_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ arg2 > 0 /\ -1-arg2+arg3 >= 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: NONTERM
New rule:
f169_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: NONTERM

Accelerated simple loops
Start location: __init
   7: f1_0_main_Load -> f169_0_loop_EQ : arg2'=1, arg1'=1, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   8: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=0, (-arg3 > 0 /\ arg2+arg3 >= 0 /\ arg1 > 0), cost: 1
   9: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=0, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
  10: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=1-arg3, (-arg2-arg3 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
  11: f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=-1-arg3, (arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: 1
  12: f169_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ -arg2+arg3 > 0), cost: NONTERM
  14: f169_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ -1-arg2-arg3 >= 0), cost: NONTERM
  16: f169_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ -arg2-arg3 > 0 /\ arg2 > 0 /\ arg1 > 0), cost: NONTERM
  17: f169_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: NONTERM
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f169_0_loop_EQ : arg2'=1, arg1'=1, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=0, (arg1 > 0 /\ arg3 > 0 /\ -arg2+arg3 <= 0), cost: 1
New rule:
f1_0_main_Load -> f169_0_loop_EQ : arg2'=2, arg1'=2, arg3'=0, (arg1 > 0 /\ -1+arg2 == 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f169_0_loop_EQ : arg2'=1, arg1'=1, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f169_0_loop_EQ -> f169_0_loop_EQ : arg2'=1+arg2, arg1'=1+arg2, arg3'=-1-arg3, (arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: 1
New rule:
f1_0_main_Load -> f169_0_loop_EQ : arg2'=2, arg1'=2, arg3'=-1-arg2, (-2+arg2 >= 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f169_0_loop_EQ : arg2'=1, arg1'=1, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f169_0_loop_EQ -> [3] : (-1+n1 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ -arg2+arg3 > 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM

Applied chaining
First rule:
f1_0_main_Load -> f169_0_loop_EQ : arg2'=1, arg1'=1, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f169_0_loop_EQ -> [3] : (-1+n2 >= 0 /\ arg2 > 0 /\ arg1 > 0 /\ 1+arg2-arg3 <= 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (-2+arg2 >= 0 /\ arg1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 8 9 10 11 12 14 16 17

Chained accelerated rules with incoming rules
Start location: __init
   7: f1_0_main_Load -> f169_0_loop_EQ : arg2'=1, arg1'=1, arg3'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  18: f1_0_main_Load -> f169_0_loop_EQ : arg2'=2, arg1'=2, arg3'=0, (arg1 > 0 /\ -1+arg2 == 0), cost: 2
  19: f1_0_main_Load -> f169_0_loop_EQ : arg2'=2, arg1'=2, arg3'=-1-arg2, (-2+arg2 >= 0 /\ arg1 > 0), cost: 2
  20: f1_0_main_Load -> [3] : (arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
  21: f1_0_main_Load -> [3] : (-2+arg2 >= 0 /\ arg1 > 0), cost: NONTERM
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  20: f1_0_main_Load -> [3] : (arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
  21: f1_0_main_Load -> [3] : (-2+arg2 >= 0 /\ arg1 > 0), cost: NONTERM
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [3] : (arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
New rule:
__init -> [3] : (arg1P6 > 0 /\ -1+arg2P6 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [3] : (-2+arg2 >= 0 /\ arg1 > 0), cost: NONTERM
New rule:
__init -> [3] : (arg1P6 > 0 /\ -2+arg2P6 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 6 20 21

Eliminated locations on tree-shaped paths
Start location: __init
  22: __init -> [3] : (arg1P6 > 0 /\ -1+arg2P6 > 0), cost: NONTERM
  23: __init -> [3] : (arg1P6 > 0 /\ -2+arg2P6 >= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 22 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (arg1P6 > 0 /\ -1+arg2P6 > 0)
