NO

Initial ITS

Start location: l6
Program variables: cnt_33^0 cnt_54^0 lt_10^0 lt_11^0 lt_12^0 lt_65^0 px_8^0 py_6^0 q_9^0 result_4^0 x_7^0 y_5^0
   0: l0 -> l1 : cnt_33^0'=cnt_33^post1, cnt_54^0'=cnt_54^post1, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, lt_65^0'=lt_65^post1, px_8^0'=px_8^post1, py_6^0'=py_6^post1, q_9^0'=q_9^post1, result_4^0'=result_4^post1, x_7^0'=x_7^post1, y_5^0'=y_5^post1, (0 == 0 /\ -lt_10^post1+lt_10^0 == 0 /\ cnt_54^0-cnt_54^post1 == 0 /\ lt_11^1-x_7^0 == 0 /\ lt_12^1 <= 0 /\ lt_12^1-cnt_33^0 == 0 /\ -cnt_33^post1+cnt_33^0 == 0 /\ y_5^0-y_5^post1 == 0 /\ px_8^0-px_8^post1 == 0 /\ -x_7^post1+x_7^0 == 0 /\ -py_6^post1+py_6^0 == 0 /\ lt_65^0-lt_65^post1 == 0 /\ q_9^0-q_9^post1 == 0), cost: 1
   1: l0 -> l2 : cnt_33^0'=cnt_33^post2, cnt_54^0'=cnt_54^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, lt_65^0'=lt_65^post2, px_8^0'=px_8^post2, py_6^0'=py_6^post2, q_9^0'=q_9^post2, result_4^0'=result_4^post2, x_7^0'=x_7^post2, y_5^0'=y_5^post2, (0 == 0 /\ result_4^0-result_4^post2 == 0 /\ -cnt_33^0+lt_10^1 == 0 /\ -cnt_33^post2+cnt_33^0 == 0 /\ -x_7^post2+x_7^0 == 0 /\ lt_11^1-x_7^0 == 0 /\ cnt_54^0-cnt_54^post2 == 0 /\ q_9^post2-py_6^0 == 0 /\ y_5^0-y_5^post2 == 0 /\ -py_6^post2+py_6^0 == 0 /\ lt_12^1-cnt_33^0 == 0 /\ lt_65^0-lt_65^post2 == 0 /\ 1-lt_12^1 <= 0 /\ px_8^0-px_8^post2 == 0), cost: 1
   3: l2 -> l1 : cnt_33^0'=cnt_33^post4, cnt_54^0'=cnt_54^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, lt_65^0'=lt_65^post4, px_8^0'=px_8^post4, py_6^0'=py_6^post4, q_9^0'=q_9^post4, result_4^0'=result_4^post4, x_7^0'=x_7^post4, y_5^0'=y_5^post4, (0 == 0 /\ lt_65^0-lt_65^post4 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ lt_12^1 <= 0 /\ -y_5^0+lt_11^1 == 0 /\ -py_6^post4+py_6^0 == 0 /\ x_7^0-x_7^post4 == 0 /\ px_8^0-px_8^post4 == 0 /\ cnt_54^0-cnt_54^post4 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ q_9^0-q_9^post4 == 0 /\ cnt_33^0-cnt_33^post4 == 0 /\ y_5^0-y_5^post4 == 0), cost: 1
   4: l2 -> l4 : cnt_33^0'=cnt_33^post5, cnt_54^0'=cnt_54^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, lt_65^0'=lt_65^post5, px_8^0'=px_8^post5, py_6^0'=py_6^post5, q_9^0'=q_9^post5, result_4^0'=result_4^post5, x_7^0'=x_7^post5, y_5^0'=y_5^post5, (0 == 0 /\ -result_4^post5+result_4^0 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ 1-cnt_33^0+lt_10^1 == 0 /\ px_8^0-px_8^post5 == 0 /\ cnt_33^0-cnt_33^post5 == 0 /\ py_6^0-py_6^post5 == 0 /\ -y_5^0+lt_11^1 == 0 /\ -cnt_54^post5+cnt_54^0 == 0 /\ 1-lt_12^1 <= 0 /\ q_9^post5-py_6^0 == 0 /\ -y_5^post5+y_5^0 == 0 /\ -x_7^post5+x_7^0 == 0 /\ -lt_65^post5+lt_65^0 == 0), cost: 1
   2: l3 -> l0 : cnt_33^0'=cnt_33^post3, cnt_54^0'=cnt_54^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, lt_65^0'=lt_65^post3, px_8^0'=px_8^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^post3, x_7^0'=x_7^post3, y_5^0'=y_5^post3, (0 == 0 /\ result_4^0-result_4^post3 == 0 /\ lt_11^0-lt_11^post3 == 0 /\ lt_65^0-lt_65^post3 == 0 /\ -lt_10^post3+lt_10^0 == 0 /\ q_9^post3-px_8^post3 == 0 /\ -lt_12^post3+lt_12^0 == 0 /\ cnt_54^0-cnt_54^post3 == 0 /\ cnt_33^0-cnt_33^post3 == 0), cost: 1
   5: l4 -> l5 : cnt_33^0'=cnt_33^post6, cnt_54^0'=cnt_54^post6, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, lt_65^0'=lt_65^post6, px_8^0'=px_8^post6, py_6^0'=py_6^post6, q_9^0'=q_9^post6, result_4^0'=result_4^post6, x_7^0'=x_7^post6, y_5^0'=y_5^post6, (0 == 0 /\ y_5^0-y_5^post6 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ -x_7^post6+x_7^0 == 0 /\ lt_65^0-lt_65^post6 == 0 /\ px_8^0-px_8^post6 == 0 /\ -py_6^0+q_9^post6 == 0 /\ -y_5^0+lt_11^1 == 0 /\ cnt_54^0-cnt_54^post6 == 0 /\ 1-lt_12^1 <= 0 /\ -cnt_33^post6+cnt_33^0 == 0 /\ -py_6^post6+py_6^0 == 0 /\ -result_4^post6+result_4^0 == 0 /\ 1-lt_65^0+lt_10^1 == 0), cost: 1
   6: l5 -> l4 : cnt_33^0'=cnt_33^post7, cnt_54^0'=cnt_54^post7, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post7, lt_12^0'=lt_12^post7, lt_65^0'=lt_65^post7, px_8^0'=px_8^post7, py_6^0'=py_6^post7, q_9^0'=q_9^post7, result_4^0'=result_4^post7, x_7^0'=x_7^post7, y_5^0'=y_5^post7, (-cnt_33^post7+cnt_33^0 == 0 /\ -lt_12^post7+lt_12^0 == 0 /\ -lt_10^post7+lt_10^0 == 0 /\ -x_7^post7+x_7^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ lt_11^0-lt_11^post7 == 0 /\ cnt_54^0-cnt_54^post7 == 0 /\ y_5^0-y_5^post7 == 0 /\ px_8^0-px_8^post7 == 0 /\ lt_65^0-lt_65^post7 == 0 /\ -py_6^post7+py_6^0 == 0 /\ q_9^0-q_9^post7 == 0), cost: 1
   7: l6 -> l3 : cnt_33^0'=cnt_33^post8, cnt_54^0'=cnt_54^post8, lt_10^0'=lt_10^post8, lt_11^0'=lt_11^post8, lt_12^0'=lt_12^post8, lt_65^0'=lt_65^post8, px_8^0'=px_8^post8, py_6^0'=py_6^post8, q_9^0'=q_9^post8, result_4^0'=result_4^post8, x_7^0'=x_7^post8, y_5^0'=y_5^post8, (lt_11^0-lt_11^post8 == 0 /\ lt_65^0-lt_65^post8 == 0 /\ -py_6^post8+py_6^0 == 0 /\ -y_5^post8+y_5^0 == 0 /\ -x_7^post8+x_7^0 == 0 /\ px_8^0-px_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -lt_10^post8+lt_10^0 == 0 /\ -result_4^post8+result_4^0 == 0 /\ -q_9^post8+q_9^0 == 0 /\ cnt_33^0-cnt_33^post8 == 0 /\ cnt_54^0-cnt_54^post8 == 0), cost: 1

Chained Linear Paths

Start location: l6
Program variables: cnt_33^0 cnt_54^0 lt_10^0 lt_11^0 lt_12^0 lt_65^0 px_8^0 py_6^0 q_9^0 result_4^0 x_7^0 y_5^0
   0: l0 -> l1 : cnt_33^0'=cnt_33^post1, cnt_54^0'=cnt_54^post1, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, lt_65^0'=lt_65^post1, px_8^0'=px_8^post1, py_6^0'=py_6^post1, q_9^0'=q_9^post1, result_4^0'=result_4^post1, x_7^0'=x_7^post1, y_5^0'=y_5^post1, (0 == 0 /\ -lt_10^post1+lt_10^0 == 0 /\ cnt_54^0-cnt_54^post1 == 0 /\ lt_11^1-x_7^0 == 0 /\ lt_12^1 <= 0 /\ lt_12^1-cnt_33^0 == 0 /\ -cnt_33^post1+cnt_33^0 == 0 /\ y_5^0-y_5^post1 == 0 /\ px_8^0-px_8^post1 == 0 /\ -x_7^post1+x_7^0 == 0 /\ -py_6^post1+py_6^0 == 0 /\ lt_65^0-lt_65^post1 == 0 /\ q_9^0-q_9^post1 == 0), cost: 1
   1: l0 -> l2 : cnt_33^0'=cnt_33^post2, cnt_54^0'=cnt_54^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, lt_65^0'=lt_65^post2, px_8^0'=px_8^post2, py_6^0'=py_6^post2, q_9^0'=q_9^post2, result_4^0'=result_4^post2, x_7^0'=x_7^post2, y_5^0'=y_5^post2, (0 == 0 /\ result_4^0-result_4^post2 == 0 /\ -cnt_33^0+lt_10^1 == 0 /\ -cnt_33^post2+cnt_33^0 == 0 /\ -x_7^post2+x_7^0 == 0 /\ lt_11^1-x_7^0 == 0 /\ cnt_54^0-cnt_54^post2 == 0 /\ q_9^post2-py_6^0 == 0 /\ y_5^0-y_5^post2 == 0 /\ -py_6^post2+py_6^0 == 0 /\ lt_12^1-cnt_33^0 == 0 /\ lt_65^0-lt_65^post2 == 0 /\ 1-lt_12^1 <= 0 /\ px_8^0-px_8^post2 == 0), cost: 1
   3: l2 -> l1 : cnt_33^0'=cnt_33^post4, cnt_54^0'=cnt_54^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, lt_65^0'=lt_65^post4, px_8^0'=px_8^post4, py_6^0'=py_6^post4, q_9^0'=q_9^post4, result_4^0'=result_4^post4, x_7^0'=x_7^post4, y_5^0'=y_5^post4, (0 == 0 /\ lt_65^0-lt_65^post4 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ lt_12^1 <= 0 /\ -y_5^0+lt_11^1 == 0 /\ -py_6^post4+py_6^0 == 0 /\ x_7^0-x_7^post4 == 0 /\ px_8^0-px_8^post4 == 0 /\ cnt_54^0-cnt_54^post4 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ q_9^0-q_9^post4 == 0 /\ cnt_33^0-cnt_33^post4 == 0 /\ y_5^0-y_5^post4 == 0), cost: 1
   4: l2 -> l4 : cnt_33^0'=cnt_33^post5, cnt_54^0'=cnt_54^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, lt_65^0'=lt_65^post5, px_8^0'=px_8^post5, py_6^0'=py_6^post5, q_9^0'=q_9^post5, result_4^0'=result_4^post5, x_7^0'=x_7^post5, y_5^0'=y_5^post5, (0 == 0 /\ -result_4^post5+result_4^0 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ 1-cnt_33^0+lt_10^1 == 0 /\ px_8^0-px_8^post5 == 0 /\ cnt_33^0-cnt_33^post5 == 0 /\ py_6^0-py_6^post5 == 0 /\ -y_5^0+lt_11^1 == 0 /\ -cnt_54^post5+cnt_54^0 == 0 /\ 1-lt_12^1 <= 0 /\ q_9^post5-py_6^0 == 0 /\ -y_5^post5+y_5^0 == 0 /\ -x_7^post5+x_7^0 == 0 /\ -lt_65^post5+lt_65^0 == 0), cost: 1
   9: l4 -> l4 : cnt_33^0'=cnt_33^post7, cnt_54^0'=cnt_54^post7, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post7, lt_12^0'=lt_12^post7, lt_65^0'=lt_65^post7, px_8^0'=px_8^post7, py_6^0'=py_6^post7, q_9^0'=q_9^post7, result_4^0'=result_4^post7, x_7^0'=x_7^post7, y_5^0'=y_5^post7, (0 == 0 /\ lt_10^post6-lt_10^post7 == 0 /\ -x_7^post7+x_7^post6 == 0 /\ y_5^0-y_5^post6 == 0 /\ -cnt_54^post7+cnt_54^post6 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ -q_9^post7+q_9^post6 == 0 /\ -x_7^post6+x_7^0 == 0 /\ -y_5^post7+y_5^post6 == 0 /\ lt_65^0-lt_65^post6 == 0 /\ px_8^0-px_8^post6 == 0 /\ -py_6^0+q_9^post6 == 0 /\ -y_5^0+lt_11^1 == 0 /\ -py_6^post7+py_6^post6 == 0 /\ px_8^post6-px_8^post7 == 0 /\ -lt_12^post7+lt_12^post6 == 0 /\ cnt_54^0-cnt_54^post6 == 0 /\ 1-lt_12^1 <= 0 /\ -cnt_33^post6+cnt_33^0 == 0 /\ -py_6^post6+py_6^0 == 0 /\ -result_4^post6+result_4^0 == 0 /\ 1-lt_65^0+lt_10^1 == 0 /\ -lt_65^post7+lt_65^post6 == 0 /\ lt_11^post6-lt_11^post7 == 0 /\ result_4^post6-result_4^post7 == 0 /\ -cnt_33^post7+cnt_33^post6 == 0), cost: 1
   8: l6 -> l0 : cnt_33^0'=cnt_33^post3, cnt_54^0'=cnt_54^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, lt_65^0'=lt_65^post3, px_8^0'=px_8^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^post3, x_7^0'=x_7^post3, y_5^0'=y_5^post3, (0 == 0 /\ lt_12^post8-lt_12^post3 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ lt_65^post8-lt_65^post3 == 0 /\ lt_65^0-lt_65^post8 == 0 /\ q_9^post3-px_8^post3 == 0 /\ lt_10^post8-lt_10^post3 == 0 /\ -py_6^post8+py_6^0 == 0 /\ -y_5^post8+y_5^0 == 0 /\ -x_7^post8+x_7^0 == 0 /\ px_8^0-px_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -lt_10^post8+lt_10^0 == 0 /\ cnt_33^post8-cnt_33^post3 == 0 /\ -result_4^post8+result_4^0 == 0 /\ cnt_54^post8-cnt_54^post3 == 0 /\ -q_9^post8+q_9^0 == 0 /\ cnt_33^0-cnt_33^post8 == 0 /\ cnt_54^0-cnt_54^post8 == 0 /\ result_4^post8-result_4^post3 == 0 /\ lt_11^post8-lt_11^post3 == 0), cost: 1

	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l6 -> l3 : cnt_33^0'=cnt_33^post8, cnt_54^0'=cnt_54^post8, lt_10^0'=lt_10^post8, lt_11^0'=lt_11^post8, lt_12^0'=lt_12^post8, lt_65^0'=lt_65^post8, px_8^0'=px_8^post8, py_6^0'=py_6^post8, q_9^0'=q_9^post8, result_4^0'=result_4^post8, x_7^0'=x_7^post8, y_5^0'=y_5^post8, (lt_11^0-lt_11^post8 == 0 /\ lt_65^0-lt_65^post8 == 0 /\ -py_6^post8+py_6^0 == 0 /\ -y_5^post8+y_5^0 == 0 /\ -x_7^post8+x_7^0 == 0 /\ px_8^0-px_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -lt_10^post8+lt_10^0 == 0 /\ -result_4^post8+result_4^0 == 0 /\ -q_9^post8+q_9^0 == 0 /\ cnt_33^0-cnt_33^post8 == 0 /\ cnt_54^0-cnt_54^post8 == 0), cost: 1
	Second rule:
	l3 -> l0 : cnt_33^0'=cnt_33^post3, cnt_54^0'=cnt_54^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, lt_65^0'=lt_65^post3, px_8^0'=px_8^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^post3, x_7^0'=x_7^post3, y_5^0'=y_5^post3, (0 == 0 /\ result_4^0-result_4^post3 == 0 /\ lt_11^0-lt_11^post3 == 0 /\ lt_65^0-lt_65^post3 == 0 /\ -lt_10^post3+lt_10^0 == 0 /\ q_9^post3-px_8^post3 == 0 /\ -lt_12^post3+lt_12^0 == 0 /\ cnt_54^0-cnt_54^post3 == 0 /\ cnt_33^0-cnt_33^post3 == 0), cost: 1
	New rule:
	l6 -> l0 : cnt_33^0'=cnt_33^post3, cnt_54^0'=cnt_54^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, lt_65^0'=lt_65^post3, px_8^0'=px_8^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^post3, x_7^0'=x_7^post3, y_5^0'=y_5^post3, (0 == 0 /\ lt_12^post8-lt_12^post3 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ lt_65^post8-lt_65^post3 == 0 /\ lt_65^0-lt_65^post8 == 0 /\ q_9^post3-px_8^post3 == 0 /\ lt_10^post8-lt_10^post3 == 0 /\ -py_6^post8+py_6^0 == 0 /\ -y_5^post8+y_5^0 == 0 /\ -x_7^post8+x_7^0 == 0 /\ px_8^0-px_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -lt_10^post8+lt_10^0 == 0 /\ cnt_33^post8-cnt_33^post3 == 0 /\ -result_4^post8+result_4^0 == 0 /\ cnt_54^post8-cnt_54^post3 == 0 /\ -q_9^post8+q_9^0 == 0 /\ cnt_33^0-cnt_33^post8 == 0 /\ cnt_54^0-cnt_54^post8 == 0 /\ result_4^post8-result_4^post3 == 0 /\ lt_11^post8-lt_11^post3 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 7
	
	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l4 -> l5 : cnt_33^0'=cnt_33^post6, cnt_54^0'=cnt_54^post6, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, lt_65^0'=lt_65^post6, px_8^0'=px_8^post6, py_6^0'=py_6^post6, q_9^0'=q_9^post6, result_4^0'=result_4^post6, x_7^0'=x_7^post6, y_5^0'=y_5^post6, (0 == 0 /\ y_5^0-y_5^post6 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ -x_7^post6+x_7^0 == 0 /\ lt_65^0-lt_65^post6 == 0 /\ px_8^0-px_8^post6 == 0 /\ -py_6^0+q_9^post6 == 0 /\ -y_5^0+lt_11^1 == 0 /\ cnt_54^0-cnt_54^post6 == 0 /\ 1-lt_12^1 <= 0 /\ -cnt_33^post6+cnt_33^0 == 0 /\ -py_6^post6+py_6^0 == 0 /\ -result_4^post6+result_4^0 == 0 /\ 1-lt_65^0+lt_10^1 == 0), cost: 1
	Second rule:
	l5 -> l4 : cnt_33^0'=cnt_33^post7, cnt_54^0'=cnt_54^post7, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post7, lt_12^0'=lt_12^post7, lt_65^0'=lt_65^post7, px_8^0'=px_8^post7, py_6^0'=py_6^post7, q_9^0'=q_9^post7, result_4^0'=result_4^post7, x_7^0'=x_7^post7, y_5^0'=y_5^post7, (-cnt_33^post7+cnt_33^0 == 0 /\ -lt_12^post7+lt_12^0 == 0 /\ -lt_10^post7+lt_10^0 == 0 /\ -x_7^post7+x_7^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ lt_11^0-lt_11^post7 == 0 /\ cnt_54^0-cnt_54^post7 == 0 /\ y_5^0-y_5^post7 == 0 /\ px_8^0-px_8^post7 == 0 /\ lt_65^0-lt_65^post7 == 0 /\ -py_6^post7+py_6^0 == 0 /\ q_9^0-q_9^post7 == 0), cost: 1
	New rule:
	l4 -> l4 : cnt_33^0'=cnt_33^post7, cnt_54^0'=cnt_54^post7, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post7, lt_12^0'=lt_12^post7, lt_65^0'=lt_65^post7, px_8^0'=px_8^post7, py_6^0'=py_6^post7, q_9^0'=q_9^post7, result_4^0'=result_4^post7, x_7^0'=x_7^post7, y_5^0'=y_5^post7, (0 == 0 /\ lt_10^post6-lt_10^post7 == 0 /\ -x_7^post7+x_7^post6 == 0 /\ y_5^0-y_5^post6 == 0 /\ -cnt_54^post7+cnt_54^post6 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ -q_9^post7+q_9^post6 == 0 /\ -x_7^post6+x_7^0 == 0 /\ -y_5^post7+y_5^post6 == 0 /\ lt_65^0-lt_65^post6 == 0 /\ px_8^0-px_8^post6 == 0 /\ -py_6^0+q_9^post6 == 0 /\ -y_5^0+lt_11^1 == 0 /\ -py_6^post7+py_6^post6 == 0 /\ px_8^post6-px_8^post7 == 0 /\ -lt_12^post7+lt_12^post6 == 0 /\ cnt_54^0-cnt_54^post6 == 0 /\ 1-lt_12^1 <= 0 /\ -cnt_33^post6+cnt_33^0 == 0 /\ -py_6^post6+py_6^0 == 0 /\ -result_4^post6+result_4^0 == 0 /\ 1-lt_65^0+lt_10^1 == 0 /\ -lt_65^post7+lt_65^post6 == 0 /\ lt_11^post6-lt_11^post7 == 0 /\ result_4^post6-result_4^post7 == 0 /\ -cnt_33^post7+cnt_33^post6 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 6

Simplified Transitions

Start location: l6
Program variables: cnt_33^0 cnt_54^0 lt_10^0 lt_11^0 lt_12^0 px_8^0 py_6^0 q_9^0 result_4^0 x_7^0 y_5^0
  10: l0 -> l1 : lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, result_4^0'=result_4^post1, cnt_33^0 <= 0, cost: 1
  11: l0 -> l2 : lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, q_9^0'=py_6^0, 1-cnt_33^0 <= 0, cost: 1
  12: l2 -> l1 : lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, result_4^0'=result_4^post4, cnt_54^0 <= 0, cost: 1
  13: l2 -> l4 : lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, q_9^0'=py_6^0, 1-cnt_54^0 <= 0, cost: 1
  15: l4 -> l4 : lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, q_9^0'=py_6^0, 1-cnt_54^0 <= 0, cost: 1
  14: l6 -> l0 : px_8^0'=q_9^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, x_7^0'=x_7^post3, y_5^0'=y_5^post3, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : cnt_33^0'=cnt_33^post1, cnt_54^0'=cnt_54^post1, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, lt_65^0'=lt_65^post1, px_8^0'=px_8^post1, py_6^0'=py_6^post1, q_9^0'=q_9^post1, result_4^0'=result_4^post1, x_7^0'=x_7^post1, y_5^0'=y_5^post1, (0 == 0 /\ -lt_10^post1+lt_10^0 == 0 /\ cnt_54^0-cnt_54^post1 == 0 /\ lt_11^1-x_7^0 == 0 /\ lt_12^1 <= 0 /\ lt_12^1-cnt_33^0 == 0 /\ -cnt_33^post1+cnt_33^0 == 0 /\ y_5^0-y_5^post1 == 0 /\ px_8^0-px_8^post1 == 0 /\ -x_7^post1+x_7^0 == 0 /\ -py_6^post1+py_6^0 == 0 /\ lt_65^0-lt_65^post1 == 0 /\ q_9^0-q_9^post1 == 0), cost: 1
	New rule:
	l0 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post1, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ lt_11^1-x_7^0 == 0 /\ lt_12^1 <= 0 /\ lt_12^1-cnt_33^0 == 0), cost: 1
	
		propagated equality lt_10^post1 = lt_10^0
		
		propagated equality cnt_54^post1 = cnt_54^0
		
		propagated equality cnt_33^post1 = cnt_33^0
		
		propagated equality y_5^post1 = y_5^0
		
		propagated equality px_8^post1 = px_8^0
		
		propagated equality x_7^post1 = x_7^0
		
		propagated equality py_6^post1 = py_6^0
		
		propagated equality lt_65^post1 = lt_65^0
		
		propagated equality q_9^post1 = q_9^0
		
	Propagated Equalities

	Original rule:
	l0 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post1, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ lt_11^1-x_7^0 == 0 /\ lt_12^1 <= 0 /\ lt_12^1-cnt_33^0 == 0), cost: 1
	New rule:
	l0 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post1, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ cnt_33^0 <= 0), cost: 1
	
		propagated equality lt_11^1 = x_7^0
		
		propagated equality lt_12^1 = cnt_33^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post1, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ cnt_33^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post1, x_7^0'=x_7^0, y_5^0'=y_5^0, cnt_33^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post1, x_7^0'=x_7^0, y_5^0'=y_5^0, cnt_33^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, result_4^0'=result_4^post1, cnt_33^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l2 : cnt_33^0'=cnt_33^post2, cnt_54^0'=cnt_54^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, lt_65^0'=lt_65^post2, px_8^0'=px_8^post2, py_6^0'=py_6^post2, q_9^0'=q_9^post2, result_4^0'=result_4^post2, x_7^0'=x_7^post2, y_5^0'=y_5^post2, (0 == 0 /\ result_4^0-result_4^post2 == 0 /\ -cnt_33^0+lt_10^1 == 0 /\ -cnt_33^post2+cnt_33^0 == 0 /\ -x_7^post2+x_7^0 == 0 /\ lt_11^1-x_7^0 == 0 /\ cnt_54^0-cnt_54^post2 == 0 /\ q_9^post2-py_6^0 == 0 /\ y_5^0-y_5^post2 == 0 /\ -py_6^post2+py_6^0 == 0 /\ lt_12^1-cnt_33^0 == 0 /\ lt_65^0-lt_65^post2 == 0 /\ 1-lt_12^1 <= 0 /\ px_8^0-px_8^post2 == 0), cost: 1
	New rule:
	l0 -> l2 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ -cnt_33^0+lt_10^1 == 0 /\ lt_11^1-x_7^0 == 0 /\ lt_12^1-cnt_33^0 == 0 /\ 1-lt_12^1 <= 0), cost: 1
	
		propagated equality result_4^post2 = result_4^0
		
		propagated equality cnt_33^post2 = cnt_33^0
		
		propagated equality x_7^post2 = x_7^0
		
		propagated equality cnt_54^post2 = cnt_54^0
		
		propagated equality q_9^post2 = py_6^0
		
		propagated equality y_5^post2 = y_5^0
		
		propagated equality py_6^post2 = py_6^0
		
		propagated equality lt_65^post2 = lt_65^0
		
		propagated equality px_8^post2 = px_8^0
		
	Propagated Equalities

	Original rule:
	l0 -> l2 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ -cnt_33^0+lt_10^1 == 0 /\ lt_11^1-x_7^0 == 0 /\ lt_12^1-cnt_33^0 == 0 /\ 1-lt_12^1 <= 0), cost: 1
	New rule:
	l0 -> l2 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ 1-cnt_33^0 <= 0), cost: 1
	
		propagated equality lt_10^1 = cnt_33^0
		
		propagated equality lt_11^1 = x_7^0
		
		propagated equality lt_12^1 = cnt_33^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ 1-cnt_33^0 <= 0), cost: 1
	New rule:
	l0 -> l2 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, 1-cnt_33^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, 1-cnt_33^0 <= 0, cost: 1
	New rule:
	l0 -> l2 : lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, q_9^0'=py_6^0, 1-cnt_33^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l1 : cnt_33^0'=cnt_33^post4, cnt_54^0'=cnt_54^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, lt_65^0'=lt_65^post4, px_8^0'=px_8^post4, py_6^0'=py_6^post4, q_9^0'=q_9^post4, result_4^0'=result_4^post4, x_7^0'=x_7^post4, y_5^0'=y_5^post4, (0 == 0 /\ lt_65^0-lt_65^post4 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ lt_12^1 <= 0 /\ -y_5^0+lt_11^1 == 0 /\ -py_6^post4+py_6^0 == 0 /\ x_7^0-x_7^post4 == 0 /\ px_8^0-px_8^post4 == 0 /\ cnt_54^0-cnt_54^post4 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ q_9^0-q_9^post4 == 0 /\ cnt_33^0-cnt_33^post4 == 0 /\ y_5^0-y_5^post4 == 0), cost: 1
	New rule:
	l2 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post4, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ lt_12^1 <= 0 /\ -y_5^0+lt_11^1 == 0), cost: 1
	
		propagated equality lt_65^post4 = lt_65^0
		
		propagated equality py_6^post4 = py_6^0
		
		propagated equality x_7^post4 = x_7^0
		
		propagated equality px_8^post4 = px_8^0
		
		propagated equality cnt_54^post4 = cnt_54^0
		
		propagated equality lt_10^post4 = lt_10^0
		
		propagated equality q_9^post4 = q_9^0
		
		propagated equality cnt_33^post4 = cnt_33^0
		
		propagated equality y_5^post4 = y_5^0
		
	Propagated Equalities

	Original rule:
	l2 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post4, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ lt_12^1 <= 0 /\ -y_5^0+lt_11^1 == 0), cost: 1
	New rule:
	l2 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post4, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ cnt_54^0 <= 0), cost: 1
	
		propagated equality lt_12^1 = cnt_54^0
		
		propagated equality lt_11^1 = y_5^0
		
	Simplified Guard

	Original rule:
	l2 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post4, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ cnt_54^0 <= 0), cost: 1
	New rule:
	l2 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post4, x_7^0'=x_7^0, y_5^0'=y_5^0, cnt_54^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l1 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=q_9^0, result_4^0'=result_4^post4, x_7^0'=x_7^0, y_5^0'=y_5^0, cnt_54^0 <= 0, cost: 1
	New rule:
	l2 -> l1 : lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, result_4^0'=result_4^post4, cnt_54^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l4 : cnt_33^0'=cnt_33^post5, cnt_54^0'=cnt_54^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, lt_65^0'=lt_65^post5, px_8^0'=px_8^post5, py_6^0'=py_6^post5, q_9^0'=q_9^post5, result_4^0'=result_4^post5, x_7^0'=x_7^post5, y_5^0'=y_5^post5, (0 == 0 /\ -result_4^post5+result_4^0 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ 1-cnt_33^0+lt_10^1 == 0 /\ px_8^0-px_8^post5 == 0 /\ cnt_33^0-cnt_33^post5 == 0 /\ py_6^0-py_6^post5 == 0 /\ -y_5^0+lt_11^1 == 0 /\ -cnt_54^post5+cnt_54^0 == 0 /\ 1-lt_12^1 <= 0 /\ q_9^post5-py_6^0 == 0 /\ -y_5^post5+y_5^0 == 0 /\ -x_7^post5+x_7^0 == 0 /\ -lt_65^post5+lt_65^0 == 0), cost: 1
	New rule:
	l2 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ 1-cnt_33^0+lt_10^1 == 0 /\ -y_5^0+lt_11^1 == 0 /\ 1-lt_12^1 <= 0), cost: 1
	
		propagated equality result_4^post5 = result_4^0
		
		propagated equality px_8^post5 = px_8^0
		
		propagated equality cnt_33^post5 = cnt_33^0
		
		propagated equality py_6^post5 = py_6^0
		
		propagated equality cnt_54^post5 = cnt_54^0
		
		propagated equality q_9^post5 = py_6^0
		
		propagated equality y_5^post5 = y_5^0
		
		propagated equality x_7^post5 = x_7^0
		
		propagated equality lt_65^post5 = lt_65^0
		
	Propagated Equalities

	Original rule:
	l2 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ 1-cnt_33^0+lt_10^1 == 0 /\ -y_5^0+lt_11^1 == 0 /\ 1-lt_12^1 <= 0), cost: 1
	New rule:
	l2 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ 1-cnt_54^0 <= 0), cost: 1
	
		propagated equality lt_12^1 = cnt_54^0
		
		propagated equality lt_10^1 = -1+cnt_33^0
		
		propagated equality lt_11^1 = y_5^0
		
	Simplified Guard

	Original rule:
	l2 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ 1-cnt_54^0 <= 0), cost: 1
	New rule:
	l2 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, 1-cnt_54^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, 1-cnt_54^0 <= 0, cost: 1
	New rule:
	l2 -> l4 : lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, q_9^0'=py_6^0, 1-cnt_54^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l0 : cnt_33^0'=cnt_33^post3, cnt_54^0'=cnt_54^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_12^0'=lt_12^post3, lt_65^0'=lt_65^post3, px_8^0'=px_8^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^post3, x_7^0'=x_7^post3, y_5^0'=y_5^post3, (0 == 0 /\ lt_12^post8-lt_12^post3 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ lt_65^post8-lt_65^post3 == 0 /\ lt_65^0-lt_65^post8 == 0 /\ q_9^post3-px_8^post3 == 0 /\ lt_10^post8-lt_10^post3 == 0 /\ -py_6^post8+py_6^0 == 0 /\ -y_5^post8+y_5^0 == 0 /\ -x_7^post8+x_7^0 == 0 /\ px_8^0-px_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -lt_10^post8+lt_10^0 == 0 /\ cnt_33^post8-cnt_33^post3 == 0 /\ -result_4^post8+result_4^0 == 0 /\ cnt_54^post8-cnt_54^post3 == 0 /\ -q_9^post8+q_9^0 == 0 /\ cnt_33^0-cnt_33^post8 == 0 /\ cnt_54^0-cnt_54^post8 == 0 /\ result_4^post8-result_4^post3 == 0 /\ lt_11^post8-lt_11^post3 == 0), cost: 1
	New rule:
	l6 -> l0 : cnt_33^0'=cnt_33^post8, cnt_54^0'=cnt_54^post8, lt_10^0'=lt_10^post8, lt_11^0'=lt_11^post8, lt_12^0'=lt_12^post8, lt_65^0'=lt_65^post8, px_8^0'=q_9^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^post8, x_7^0'=x_7^post3, y_5^0'=y_5^post3, (0 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ lt_65^0-lt_65^post8 == 0 /\ -py_6^post8+py_6^0 == 0 /\ -y_5^post8+y_5^0 == 0 /\ -x_7^post8+x_7^0 == 0 /\ px_8^0-px_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -lt_10^post8+lt_10^0 == 0 /\ -result_4^post8+result_4^0 == 0 /\ -q_9^post8+q_9^0 == 0 /\ cnt_33^0-cnt_33^post8 == 0 /\ cnt_54^0-cnt_54^post8 == 0), cost: 1
	
		propagated equality lt_12^post3 = lt_12^post8
		
		propagated equality lt_65^post3 = lt_65^post8
		
		propagated equality px_8^post3 = q_9^post3
		
		propagated equality lt_10^post3 = lt_10^post8
		
		propagated equality cnt_33^post3 = cnt_33^post8
		
		propagated equality cnt_54^post3 = cnt_54^post8
		
		propagated equality result_4^post3 = result_4^post8
		
		propagated equality lt_11^post3 = lt_11^post8
		
	Propagated Equalities

	Original rule:
	l6 -> l0 : cnt_33^0'=cnt_33^post8, cnt_54^0'=cnt_54^post8, lt_10^0'=lt_10^post8, lt_11^0'=lt_11^post8, lt_12^0'=lt_12^post8, lt_65^0'=lt_65^post8, px_8^0'=q_9^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^post8, x_7^0'=x_7^post3, y_5^0'=y_5^post3, (0 == 0 /\ lt_11^0-lt_11^post8 == 0 /\ lt_65^0-lt_65^post8 == 0 /\ -py_6^post8+py_6^0 == 0 /\ -y_5^post8+y_5^0 == 0 /\ -x_7^post8+x_7^0 == 0 /\ px_8^0-px_8^post8 == 0 /\ -lt_12^post8+lt_12^0 == 0 /\ -lt_10^post8+lt_10^0 == 0 /\ -result_4^post8+result_4^0 == 0 /\ -q_9^post8+q_9^0 == 0 /\ cnt_33^0-cnt_33^post8 == 0 /\ cnt_54^0-cnt_54^post8 == 0), cost: 1
	New rule:
	l6 -> l0 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, lt_65^0'=lt_65^0, px_8^0'=q_9^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^0, x_7^0'=x_7^post3, y_5^0'=y_5^post3, 0 == 0, cost: 1
	
		propagated equality lt_11^post8 = lt_11^0
		
		propagated equality lt_65^post8 = lt_65^0
		
		propagated equality py_6^post8 = py_6^0
		
		propagated equality y_5^post8 = y_5^0
		
		propagated equality x_7^post8 = x_7^0
		
		propagated equality px_8^post8 = px_8^0
		
		propagated equality lt_12^post8 = lt_12^0
		
		propagated equality lt_10^post8 = lt_10^0
		
		propagated equality result_4^post8 = result_4^0
		
		propagated equality q_9^post8 = q_9^0
		
		propagated equality cnt_33^post8 = cnt_33^0
		
		propagated equality cnt_54^post8 = cnt_54^0
		
	Simplified Guard

	Original rule:
	l6 -> l0 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, lt_65^0'=lt_65^0, px_8^0'=q_9^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^0, x_7^0'=x_7^post3, y_5^0'=y_5^post3, 0 == 0, cost: 1
	New rule:
	l6 -> l0 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, lt_65^0'=lt_65^0, px_8^0'=q_9^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^0, x_7^0'=x_7^post3, y_5^0'=y_5^post3, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l0 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_12^0'=lt_12^0, lt_65^0'=lt_65^0, px_8^0'=q_9^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, result_4^0'=result_4^0, x_7^0'=x_7^post3, y_5^0'=y_5^post3, T, cost: 1
	New rule:
	l6 -> l0 : px_8^0'=q_9^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, x_7^0'=x_7^post3, y_5^0'=y_5^post3, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l4 : cnt_33^0'=cnt_33^post7, cnt_54^0'=cnt_54^post7, lt_10^0'=lt_10^post7, lt_11^0'=lt_11^post7, lt_12^0'=lt_12^post7, lt_65^0'=lt_65^post7, px_8^0'=px_8^post7, py_6^0'=py_6^post7, q_9^0'=q_9^post7, result_4^0'=result_4^post7, x_7^0'=x_7^post7, y_5^0'=y_5^post7, (0 == 0 /\ lt_10^post6-lt_10^post7 == 0 /\ -x_7^post7+x_7^post6 == 0 /\ y_5^0-y_5^post6 == 0 /\ -cnt_54^post7+cnt_54^post6 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ -q_9^post7+q_9^post6 == 0 /\ -x_7^post6+x_7^0 == 0 /\ -y_5^post7+y_5^post6 == 0 /\ lt_65^0-lt_65^post6 == 0 /\ px_8^0-px_8^post6 == 0 /\ -py_6^0+q_9^post6 == 0 /\ -y_5^0+lt_11^1 == 0 /\ -py_6^post7+py_6^post6 == 0 /\ px_8^post6-px_8^post7 == 0 /\ -lt_12^post7+lt_12^post6 == 0 /\ cnt_54^0-cnt_54^post6 == 0 /\ 1-lt_12^1 <= 0 /\ -cnt_33^post6+cnt_33^0 == 0 /\ -py_6^post6+py_6^0 == 0 /\ -result_4^post6+result_4^0 == 0 /\ 1-lt_65^0+lt_10^1 == 0 /\ -lt_65^post7+lt_65^post6 == 0 /\ lt_11^post6-lt_11^post7 == 0 /\ result_4^post6-result_4^post7 == 0 /\ -cnt_33^post7+cnt_33^post6 == 0), cost: 1
	New rule:
	l4 -> l4 : cnt_33^0'=cnt_33^post6, cnt_54^0'=cnt_54^post6, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, lt_65^0'=lt_65^post6, px_8^0'=px_8^post6, py_6^0'=py_6^post6, q_9^0'=q_9^post6, result_4^0'=result_4^post6, x_7^0'=x_7^post6, y_5^0'=y_5^post6, (0 == 0 /\ y_5^0-y_5^post6 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ -x_7^post6+x_7^0 == 0 /\ lt_65^0-lt_65^post6 == 0 /\ px_8^0-px_8^post6 == 0 /\ -py_6^0+q_9^post6 == 0 /\ -y_5^0+lt_11^1 == 0 /\ cnt_54^0-cnt_54^post6 == 0 /\ 1-lt_12^1 <= 0 /\ -cnt_33^post6+cnt_33^0 == 0 /\ -py_6^post6+py_6^0 == 0 /\ -result_4^post6+result_4^0 == 0 /\ 1-lt_65^0+lt_10^1 == 0), cost: 1
	
		propagated equality lt_10^post7 = lt_10^post6
		
		propagated equality x_7^post7 = x_7^post6
		
		propagated equality cnt_54^post7 = cnt_54^post6
		
		propagated equality q_9^post7 = q_9^post6
		
		propagated equality y_5^post7 = y_5^post6
		
		propagated equality py_6^post7 = py_6^post6
		
		propagated equality px_8^post7 = px_8^post6
		
		propagated equality lt_12^post7 = lt_12^post6
		
		propagated equality lt_65^post7 = lt_65^post6
		
		propagated equality lt_11^post7 = lt_11^post6
		
		propagated equality result_4^post7 = result_4^post6
		
		propagated equality cnt_33^post7 = cnt_33^post6
		
	Propagated Equalities

	Original rule:
	l4 -> l4 : cnt_33^0'=cnt_33^post6, cnt_54^0'=cnt_54^post6, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, lt_65^0'=lt_65^post6, px_8^0'=px_8^post6, py_6^0'=py_6^post6, q_9^0'=q_9^post6, result_4^0'=result_4^post6, x_7^0'=x_7^post6, y_5^0'=y_5^post6, (0 == 0 /\ y_5^0-y_5^post6 == 0 /\ -cnt_54^0+lt_12^1 == 0 /\ -x_7^post6+x_7^0 == 0 /\ lt_65^0-lt_65^post6 == 0 /\ px_8^0-px_8^post6 == 0 /\ -py_6^0+q_9^post6 == 0 /\ -y_5^0+lt_11^1 == 0 /\ cnt_54^0-cnt_54^post6 == 0 /\ 1-lt_12^1 <= 0 /\ -cnt_33^post6+cnt_33^0 == 0 /\ -py_6^post6+py_6^0 == 0 /\ -result_4^post6+result_4^0 == 0 /\ 1-lt_65^0+lt_10^1 == 0), cost: 1
	New rule:
	l4 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ 1-cnt_54^0 <= 0), cost: 1
	
		propagated equality y_5^post6 = y_5^0
		
		propagated equality lt_12^1 = cnt_54^0
		
		propagated equality x_7^post6 = x_7^0
		
		propagated equality lt_65^post6 = lt_65^0
		
		propagated equality px_8^post6 = px_8^0
		
		propagated equality q_9^post6 = py_6^0
		
		propagated equality lt_11^1 = y_5^0
		
		propagated equality cnt_54^post6 = cnt_54^0
		
		propagated equality cnt_33^post6 = cnt_33^0
		
		propagated equality py_6^post6 = py_6^0
		
		propagated equality result_4^post6 = result_4^0
		
		propagated equality lt_10^1 = -1+lt_65^0
		
	Simplified Guard

	Original rule:
	l4 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, (0 == 0 /\ 1-cnt_54^0 <= 0), cost: 1
	New rule:
	l4 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, 1-cnt_54^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l4 : cnt_33^0'=cnt_33^0, cnt_54^0'=cnt_54^0, lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, lt_65^0'=lt_65^0, px_8^0'=px_8^0, py_6^0'=py_6^0, q_9^0'=py_6^0, result_4^0'=result_4^0, x_7^0'=x_7^0, y_5^0'=y_5^0, 1-cnt_54^0 <= 0, cost: 1
	New rule:
	l4 -> l4 : lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, q_9^0'=py_6^0, 1-cnt_54^0 <= 0, cost: 1

Step with 14

	Trace

	14[T]
	
	Blocked

	[{}, {}]

Step with 10

	Trace

	14[T], 10[(cnt_33^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {10[T]}]

Step with 11

	Trace

	14[T], 11[(1-cnt_33^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {}]

Step with 12

	Trace

	14[T], 11[(1-cnt_33^0 <= 0)], 12[(cnt_54^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {}, {}]

Backtrack

	Trace

	14[T], 11[(1-cnt_33^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {12[T]}]

Step with 13

	Trace

	14[T], 11[(1-cnt_33^0 <= 0)], 13[(1-cnt_54^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {12[T]}, {}]

Step with 15

	Trace

	14[T], 11[(1-cnt_33^0 <= 0)], 13[(1-cnt_54^0 <= 0)], 15[(1-cnt_54^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {12[T]}, {}, {}]

Nonterm

Start location: l6
Program variables: cnt_33^0 cnt_54^0 lt_10^0 lt_11^0 lt_12^0 px_8^0 py_6^0 q_9^0 result_4^0 x_7^0 y_5^0
  10: l0 -> l1 : lt_11^0'=lt_11^post1, lt_12^0'=lt_12^post1, result_4^0'=result_4^post1, cnt_33^0 <= 0, cost: 1
  11: l0 -> l2 : lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_12^0'=lt_12^post2, q_9^0'=py_6^0, 1-cnt_33^0 <= 0, cost: 1
  12: l2 -> l1 : lt_11^0'=lt_11^post4, lt_12^0'=lt_12^post4, result_4^0'=result_4^post4, cnt_54^0 <= 0, cost: 1
  13: l2 -> l4 : lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_12^0'=lt_12^post5, q_9^0'=py_6^0, 1-cnt_54^0 <= 0, cost: 1
  15: l4 -> l4 : lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, q_9^0'=py_6^0, 1-cnt_54^0 <= 0, cost: 1
  16: l4 -> LoAT_sink : (-1+cnt_54^0 >= 0 /\ -1+n >= 0), cost: NONTERM
  14: l6 -> l0 : px_8^0'=q_9^post3, py_6^0'=py_6^post3, q_9^0'=q_9^post3, x_7^0'=x_7^post3, y_5^0'=y_5^post3, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l4 -> l4 : lt_10^0'=lt_10^post6, lt_11^0'=lt_11^post6, lt_12^0'=lt_12^post6, q_9^0'=py_6^0, (1-cnt_54^0 <= 0), cost: 1
	New rule:
	l4 -> LoAT_sink : (-1+cnt_54^0 >= 0 /\ -1+n >= 0), cost: NONTERM

		-1+cnt_54^0 >= 0 [0]: monotonic increase yields -1+cnt_54^0 >= 0
		
		Replacement map: {-1+cnt_54^0 >= 0 -> -1+cnt_54^0 >= 0}

Step with 16

	Trace

	14[T], 11[(1-cnt_33^0 <= 0)], 13[(1-cnt_54^0 <= 0)], 16[(-1+cnt_54^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {10[T]}, {12[T]}, {}, {16[T]}]

Refute

	Counterexample

	[ cnt_33^0=1 cnt_54^0=1 lt_10^0=0 lt_11^0=0 lt_12^0=0 px_8^0=0 py_6^0=0 q_9^0=0 result_4^0=0 x_7^0=0 y_5^0=0 ] 14 [ cnt_33^0=1 cnt_54^0=1 lt_10^0=0 lt_11^0=0 lt_12^0=0 px_8^0=0 py_6^0=0 q_9^0=0 result_4^0=0 x_7^0=0 y_5^0=0 ] 11 [ cnt_33^0=1 cnt_54^0=1 lt_10^0=0 lt_11^0=0 lt_12^0=0 px_8^0=0 py_6^0=0 q_9^0=0 result_4^0=0 x_7^0=0 y_5^0=0 ] 13 [ cnt_33^0=1 cnt_54^0=1 lt_10^0=0 lt_11^0=0 lt_12^0=0 px_8^0=px_8^0 py_6^0=py_6^0 q_9^0=q_9^0 result_4^0=0 x_7^0=x_7^0 y_5^0=y_5^0 ] 16
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
