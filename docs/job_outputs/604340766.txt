NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_a -> Â¿functionCall(__VERIFIER_nondet_int), main_b -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l5, not((main_a >= 7))>
<l2, l3, (main_a >= 7)>
<l3, l4, true, seq{main_olda -> main_a, main_a -> main_b, main_b -> (main_olda + 1)}>
<l4, l2, true>
<l5, l6, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l7, true, seq{main__func_return_ -> 0}>
<l7, l8, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l8, l9, true, seq{main_a -> varCall_1}>
<l9, l10, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l10, l1, true, seq{main_b -> varCall_2}>
<l1, l2, true>
<l2, l3, (main_a >= 7)>
<l2, l5, not((main_a >= 7))>
<l3, l4, true, seq{main_olda -> main_a, main_a -> main_b, main_b -> (main_olda + 1)}>
<l4, l2, true>
<l5, l6, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
6, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [5 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 11, col: 1> | <line: 15, col: 6> <line: 16, col: 6>
main | function | [integer, ()] | <line: 13, col: 1>
a | local variable | integer | <line: 14, col: 5> | <line: 15, col: 2> <line: 17, col: 9> <line: 18, col: 10> <line: 19, col: 3>
b | local variable | integer | <line: 14, col: 5> | <line: 16, col: 2> <line: 19, col: 7> <line: 20, col: 3>
olda | local variable | integer | <line: 14, col: 5> | <line: 18, col: 3> <line: 20, col: 7>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_a = undef3) /\ (main_b = undef4)>
<l2, l2, (main_a >= 7), par{main_a -> main_b, main_b -> (main_a + 1)}>
<l2, l6, not((main_a >= 7))>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
6, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
Variables:
main_a, main_b

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_a = undef3 /\ main_b = undef4, {all remain the same}>

Graph 2
<l2, l6, main_a <= 6, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 6 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001622

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000451s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001269s
[20664 : 20666]
[20664 : 20667]
Successful child: 20666
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:main_a <= 2 - Process 1
* Exit transition: <l0, l2, main_a = undef3 /\ main_b = undef4, {all remain the same}>
* Postcondition  : main_a <= 2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000303s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000353s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: main_a <= 2 , 
Narrowing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
Variables:
main_a, main_b
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000335s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001083s
[20664 : 20671]
[20664 : 20672]
Successful child: 20671
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:main_a <= 3 - Process 2
* Exit transition: <l0, l2, 3 <= main_a /\ main_a = undef3 /\ main_b = undef4, {all remain the same}>
* Postcondition  : main_a <= 3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000261s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000299s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: main_a <= 3 , 
Narrowing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
Variables:
main_a, main_b
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000249s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000787s
[20664 : 20676]
[20664 : 20677]
Successful child: 20676
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:main_a <= 5 - Process 3
* Exit transition: <l0, l2, 4 <= main_a /\ main_a = undef3 /\ main_b = undef4, {all remain the same}>
* Postcondition  : main_a <= 5

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000270s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000309s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: main_a <= 5 , 
Narrowing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
Variables:
main_a, main_b
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000249s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000793s
[20664 : 20681]
[20664 : 20682]
Successful child: 20681
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:main_a <= 6 - Process 4
* Exit transition: <l0, l2, 6 <= main_a /\ main_a = undef3 /\ main_b = undef4, {all remain the same}>
* Postcondition  : main_a <= 6

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000283s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000323s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: main_a <= 6 , 
Narrowing transition: 
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 7 <= main_a, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
Variables:
main_a, main_b
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000246s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000803s
[20664 : 20686]
[20664 : 20687]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003112s
Time used: 0.002932
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.005688s
Time used: 0.005686

LOG: SAT solveNonLinear - Elapsed time: 0.008799s
Cost: 1; Total time: 0.008618
[33mQuasi-ranking function: [36m50000 - main_a - main_b[0m
New Graphs: 
Transitions:
<l2, l2, 7 <= main_a /\ 50001 <= main_a + main_b, {main_a -> main_b, main_b -> 1 + main_a, rest remain the same}>
Variables:
main_a, main_b
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000288s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001041s
[20664 : 20692]
[20664 : 20693]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003672s
Time used: 0.003476

[20664 : 20697]
[20664 : 20700]
Successful child: 20697

[32mProgram does NOT terminate[0m
