WORST_CASE(Omega(0),?)

Initial ITS
Start location: l13
   0: l0 -> l1 : k4^0'=k4^post0, __const_5^0'=__const_5^post0, x1^0'=x1^post0, j3^0'=j3^post0, __const_400^0'=__const_400^post0, l5^0'=l5^post0, i2^0'=i2^post0, (k4^0-k4^post0 == 0 /\ -__const_5^post0+__const_5^0 == 0 /\ -i2^post0+i2^0 == 0 /\ -l5^post0+l5^0 == 0 /\ -__const_400^post0+__const_400^0 == 0 /\ j3^0-j3^post0 == 0 /\ __const_5^0-i2^0 <= 0 /\ x1^0-x1^post0 == 0), cost: 1
   1: l0 -> l2 : k4^0'=k4^post1, __const_5^0'=__const_5^post1, x1^0'=x1^post1, j3^0'=j3^post1, __const_400^0'=__const_400^post1, l5^0'=l5^post1, i2^0'=i2^post1, (-__const_400^post1+__const_400^0 == 0 /\ x1^0-x1^post1 == 0 /\ k4^0-k4^post1 == 0 /\ __const_5^0-__const_5^post1 == 0 /\ j3^post1 == 0 /\ -i2^post1+i2^0 == 0 /\ 1-__const_5^0+i2^0 <= 0 /\ -l5^post1+l5^0 == 0), cost: 1
   4: l1 -> l5 : k4^0'=k4^post4, __const_5^0'=__const_5^post4, x1^0'=x1^post4, j3^0'=j3^post4, __const_400^0'=__const_400^post4, l5^0'=l5^post4, i2^0'=i2^post4, (-x1^post4+x1^0 == 0 /\ -i2^post4+i2^0 == 0 /\ k4^0-k4^post4 == 0 /\ -j3^post4+j3^0 == 0 /\ __const_400^0-__const_400^post4 == 0 /\ l5^0-l5^post4 == 0 /\ __const_5^0-__const_5^post4 == 0), cost: 1
   3: l2 -> l4 : k4^0'=k4^post3, __const_5^0'=__const_5^post3, x1^0'=x1^post3, j3^0'=j3^post3, __const_400^0'=__const_400^post3, l5^0'=l5^post3, i2^0'=i2^post3, (-i2^post3+i2^0 == 0 /\ -x1^post3+x1^0 == 0 /\ __const_5^0-__const_5^post3 == 0 /\ k4^0-k4^post3 == 0 /\ -j3^post3+j3^0 == 0 /\ l5^0-l5^post3 == 0 /\ __const_400^0-__const_400^post3 == 0), cost: 1
   2: l3 -> l0 : k4^0'=k4^post2, __const_5^0'=__const_5^post2, x1^0'=x1^post2, j3^0'=j3^post2, __const_400^0'=__const_400^post2, l5^0'=l5^post2, i2^0'=i2^post2, (__const_5^0-__const_5^post2 == 0 /\ i2^0-i2^post2 == 0 /\ k4^0-k4^post2 == 0 /\ -l5^post2+l5^0 == 0 /\ x1^0-x1^post2 == 0 /\ -j3^post2+j3^0 == 0 /\ -__const_400^post2+__const_400^0 == 0), cost: 1
  15: l4 -> l3 : k4^0'=k4^post15, __const_5^0'=__const_5^post15, x1^0'=x1^post15, j3^0'=j3^post15, __const_400^0'=__const_400^post15, l5^0'=l5^post15, i2^0'=i2^post15, (-__const_400^post15+__const_400^0 == 0 /\ -j3^post15+j3^0 == 0 /\ -1-i2^0+i2^post15 == 0 /\ x1^0-x1^post15 == 0 /\ -l5^post15+l5^0 == 0 /\ __const_5^0-__const_5^post15 == 0 /\ __const_5^0-j3^0 <= 0 /\ k4^0-k4^post15 == 0), cost: 1
  16: l4 -> l6 : k4^0'=k4^post16, __const_5^0'=__const_5^post16, x1^0'=x1^post16, j3^0'=j3^post16, __const_400^0'=__const_400^post16, l5^0'=l5^post16, i2^0'=i2^post16, (-x1^post16+x1^0 == 0 /\ -j3^post16+j3^0 == 0 /\ k4^post16 == 0 /\ __const_5^0-__const_5^post16 == 0 /\ 1-__const_5^0+j3^0 <= 0 /\ l5^0-l5^post16 == 0 /\ -i2^post16+i2^0 == 0 /\ __const_400^0-__const_400^post16 == 0), cost: 1
   5: l6 -> l7 : k4^0'=k4^post5, __const_5^0'=__const_5^post5, x1^0'=x1^post5, j3^0'=j3^post5, __const_400^0'=__const_400^post5, l5^0'=l5^post5, i2^0'=i2^post5, (j3^0-j3^post5 == 0 /\ -x1^post5+x1^0 == 0 /\ -i2^post5+i2^0 == 0 /\ __const_400^0-__const_400^post5 == 0 /\ -l5^post5+l5^0 == 0 /\ __const_5^0-__const_5^post5 == 0 /\ k4^0-k4^post5 == 0), cost: 1
  13: l7 -> l2 : k4^0'=k4^post13, __const_5^0'=__const_5^post13, x1^0'=x1^post13, j3^0'=j3^post13, __const_400^0'=__const_400^post13, l5^0'=l5^post13, i2^0'=i2^post13, (-1-j3^0+j3^post13 == 0 /\ -l5^post13+l5^0 == 0 /\ -i2^post13+i2^0 == 0 /\ x1^0-x1^post13 == 0 /\ __const_5^0-__const_5^post13 == 0 /\ -__const_400^post13+__const_400^0 == 0 /\ k4^0-k4^post13 == 0 /\ -k4^0+__const_5^0 <= 0), cost: 1
  14: l7 -> l9 : k4^0'=k4^post14, __const_5^0'=__const_5^post14, x1^0'=x1^post14, j3^0'=j3^post14, __const_400^0'=__const_400^post14, l5^0'=l5^post14, i2^0'=i2^post14, (-__const_400^post14+__const_400^0 == 0 /\ x1^0-x1^post14 == 0 /\ l5^post14 == 0 /\ __const_5^0-__const_5^post14 == 0 /\ -i2^post14+i2^0 == 0 /\ -k4^post14+k4^0 == 0 /\ 1+k4^0-__const_5^0 <= 0 /\ j3^0-j3^post14 == 0), cost: 1
   6: l8 -> l9 : k4^0'=k4^post6, __const_5^0'=__const_5^post6, x1^0'=x1^post6, j3^0'=j3^post6, __const_400^0'=__const_400^post6, l5^0'=l5^post6, i2^0'=i2^post6, (k4^0-k4^post6 == 0 /\ -__const_400^post6+__const_400^0 == 0 /\ j3^0-j3^post6 == 0 /\ -i2^post6+i2^0 == 0 /\ -1+l5^post6-l5^0 == 0 /\ x1^0-x1^post6 == 0 /\ -__const_5^post6+__const_5^0 == 0), cost: 1
   7: l9 -> l10 : k4^0'=k4^post7, __const_5^0'=__const_5^post7, x1^0'=x1^post7, j3^0'=j3^post7, __const_400^0'=__const_400^post7, l5^0'=l5^post7, i2^0'=i2^post7, (-j3^post7+j3^0 == 0 /\ -i2^post7+i2^0 == 0 /\ -l5^post7+l5^0 == 0 /\ x1^0-x1^post7 == 0 /\ k4^0-k4^post7 == 0 /\ -__const_400^post7+__const_400^0 == 0 /\ __const_5^0-__const_5^post7 == 0), cost: 1
  11: l10 -> l6 : k4^0'=k4^post11, __const_5^0'=__const_5^post11, x1^0'=x1^post11, j3^0'=j3^post11, __const_400^0'=__const_400^post11, l5^0'=l5^post11, i2^0'=i2^post11, (-1-k4^0+k4^post11 == 0 /\ -i2^post11+i2^0 == 0 /\ __const_400^0-__const_400^post11 == 0 /\ -x1^post11+x1^0 == 0 /\ j3^0-j3^post11 == 0 /\ __const_5^0-l5^0 <= 0 /\ -l5^post11+l5^0 == 0 /\ -__const_5^post11+__const_5^0 == 0), cost: 1
  12: l10 -> l11 : k4^0'=k4^post12, __const_5^0'=__const_5^post12, x1^0'=x1^post12, j3^0'=j3^post12, __const_400^0'=__const_400^post12, l5^0'=l5^post12, i2^0'=i2^post12, (-i2^post12+i2^0 == 0 /\ x1^0-x1^post12 == 0 /\ 1-__const_5^0+l5^0 <= 0 /\ -__const_400^post12+__const_400^0 == 0 /\ __const_5^0-__const_5^post12 == 0 /\ k4^0-k4^post12 == 0 /\ j3^0-j3^post12 == 0 /\ -l5^post12+l5^0 == 0), cost: 1
   8: l11 -> l8 : k4^0'=k4^post8, __const_5^0'=__const_5^post8, x1^0'=x1^post8, j3^0'=j3^post8, __const_400^0'=__const_400^post8, l5^0'=l5^post8, i2^0'=i2^post8, (-l5^post8+l5^0 == 0 /\ __const_5^0-__const_5^post8 == 0 /\ -__const_400^post8+__const_400^0 == 0 /\ i2^0-i2^post8 == 0 /\ -j3^post8+j3^0 == 0 /\ x1^0-x1^post8 == 0 /\ k4^0-k4^post8 == 0), cost: 1
   9: l11 -> l1 : k4^0'=k4^post9, __const_5^0'=__const_5^post9, x1^0'=x1^post9, j3^0'=j3^post9, __const_400^0'=__const_400^post9, l5^0'=l5^post9, i2^0'=i2^post9, (__const_5^0-__const_5^post9 == 0 /\ k4^0-k4^post9 == 0 /\ i2^0-i2^post9 == 0 /\ l5^0-l5^post9 == 0 /\ x1^0-x1^post9 == 0 /\ -j3^post9+j3^0 == 0 /\ -__const_400^post9+__const_400^0 == 0), cost: 1
  10: l11 -> l8 : k4^0'=k4^post10, __const_5^0'=__const_5^post10, x1^0'=x1^post10, j3^0'=j3^post10, __const_400^0'=__const_400^post10, l5^0'=l5^post10, i2^0'=i2^post10, (k4^0-k4^post10 == 0 /\ -x1^post10+x1^0 == 0 /\ -j3^post10+j3^0 == 0 /\ l5^0-l5^post10 == 0 /\ __const_5^0-__const_5^post10 == 0 /\ -i2^post10+i2^0 == 0 /\ __const_400^0-__const_400^post10 == 0), cost: 1
  17: l12 -> l3 : k4^0'=k4^post17, __const_5^0'=__const_5^post17, x1^0'=x1^post17, j3^0'=j3^post17, __const_400^0'=__const_400^post17, l5^0'=l5^post17, i2^0'=i2^post17, (__const_400^0-__const_400^post17 == 0 /\ j3^0-j3^post17 == 0 /\ i2^post17 == 0 /\ x1^post17-__const_400^0 == 0 /\ k4^0-k4^post17 == 0 /\ __const_5^0-__const_5^post17 == 0 /\ l5^0-l5^post17 == 0), cost: 1
  18: l13 -> l12 : k4^0'=k4^post18, __const_5^0'=__const_5^post18, x1^0'=x1^post18, j3^0'=j3^post18, __const_400^0'=__const_400^post18, l5^0'=l5^post18, i2^0'=i2^post18, (j3^0-j3^post18 == 0 /\ -l5^post18+l5^0 == 0 /\ -x1^post18+x1^0 == 0 /\ __const_400^0-__const_400^post18 == 0 /\ -i2^post18+i2^0 == 0 /\ __const_5^0-__const_5^post18 == 0 /\ k4^0-k4^post18 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l13
   1: l0 -> l2 : k4^0'=k4^post1, __const_5^0'=__const_5^post1, x1^0'=x1^post1, j3^0'=j3^post1, __const_400^0'=__const_400^post1, l5^0'=l5^post1, i2^0'=i2^post1, (-__const_400^post1+__const_400^0 == 0 /\ x1^0-x1^post1 == 0 /\ k4^0-k4^post1 == 0 /\ __const_5^0-__const_5^post1 == 0 /\ j3^post1 == 0 /\ -i2^post1+i2^0 == 0 /\ 1-__const_5^0+i2^0 <= 0 /\ -l5^post1+l5^0 == 0), cost: 1
   3: l2 -> l4 : k4^0'=k4^post3, __const_5^0'=__const_5^post3, x1^0'=x1^post3, j3^0'=j3^post3, __const_400^0'=__const_400^post3, l5^0'=l5^post3, i2^0'=i2^post3, (-i2^post3+i2^0 == 0 /\ -x1^post3+x1^0 == 0 /\ __const_5^0-__const_5^post3 == 0 /\ k4^0-k4^post3 == 0 /\ -j3^post3+j3^0 == 0 /\ l5^0-l5^post3 == 0 /\ __const_400^0-__const_400^post3 == 0), cost: 1
   2: l3 -> l0 : k4^0'=k4^post2, __const_5^0'=__const_5^post2, x1^0'=x1^post2, j3^0'=j3^post2, __const_400^0'=__const_400^post2, l5^0'=l5^post2, i2^0'=i2^post2, (__const_5^0-__const_5^post2 == 0 /\ i2^0-i2^post2 == 0 /\ k4^0-k4^post2 == 0 /\ -l5^post2+l5^0 == 0 /\ x1^0-x1^post2 == 0 /\ -j3^post2+j3^0 == 0 /\ -__const_400^post2+__const_400^0 == 0), cost: 1
  15: l4 -> l3 : k4^0'=k4^post15, __const_5^0'=__const_5^post15, x1^0'=x1^post15, j3^0'=j3^post15, __const_400^0'=__const_400^post15, l5^0'=l5^post15, i2^0'=i2^post15, (-__const_400^post15+__const_400^0 == 0 /\ -j3^post15+j3^0 == 0 /\ -1-i2^0+i2^post15 == 0 /\ x1^0-x1^post15 == 0 /\ -l5^post15+l5^0 == 0 /\ __const_5^0-__const_5^post15 == 0 /\ __const_5^0-j3^0 <= 0 /\ k4^0-k4^post15 == 0), cost: 1
  16: l4 -> l6 : k4^0'=k4^post16, __const_5^0'=__const_5^post16, x1^0'=x1^post16, j3^0'=j3^post16, __const_400^0'=__const_400^post16, l5^0'=l5^post16, i2^0'=i2^post16, (-x1^post16+x1^0 == 0 /\ -j3^post16+j3^0 == 0 /\ k4^post16 == 0 /\ __const_5^0-__const_5^post16 == 0 /\ 1-__const_5^0+j3^0 <= 0 /\ l5^0-l5^post16 == 0 /\ -i2^post16+i2^0 == 0 /\ __const_400^0-__const_400^post16 == 0), cost: 1
   5: l6 -> l7 : k4^0'=k4^post5, __const_5^0'=__const_5^post5, x1^0'=x1^post5, j3^0'=j3^post5, __const_400^0'=__const_400^post5, l5^0'=l5^post5, i2^0'=i2^post5, (j3^0-j3^post5 == 0 /\ -x1^post5+x1^0 == 0 /\ -i2^post5+i2^0 == 0 /\ __const_400^0-__const_400^post5 == 0 /\ -l5^post5+l5^0 == 0 /\ __const_5^0-__const_5^post5 == 0 /\ k4^0-k4^post5 == 0), cost: 1
  13: l7 -> l2 : k4^0'=k4^post13, __const_5^0'=__const_5^post13, x1^0'=x1^post13, j3^0'=j3^post13, __const_400^0'=__const_400^post13, l5^0'=l5^post13, i2^0'=i2^post13, (-1-j3^0+j3^post13 == 0 /\ -l5^post13+l5^0 == 0 /\ -i2^post13+i2^0 == 0 /\ x1^0-x1^post13 == 0 /\ __const_5^0-__const_5^post13 == 0 /\ -__const_400^post13+__const_400^0 == 0 /\ k4^0-k4^post13 == 0 /\ -k4^0+__const_5^0 <= 0), cost: 1
  14: l7 -> l9 : k4^0'=k4^post14, __const_5^0'=__const_5^post14, x1^0'=x1^post14, j3^0'=j3^post14, __const_400^0'=__const_400^post14, l5^0'=l5^post14, i2^0'=i2^post14, (-__const_400^post14+__const_400^0 == 0 /\ x1^0-x1^post14 == 0 /\ l5^post14 == 0 /\ __const_5^0-__const_5^post14 == 0 /\ -i2^post14+i2^0 == 0 /\ -k4^post14+k4^0 == 0 /\ 1+k4^0-__const_5^0 <= 0 /\ j3^0-j3^post14 == 0), cost: 1
   6: l8 -> l9 : k4^0'=k4^post6, __const_5^0'=__const_5^post6, x1^0'=x1^post6, j3^0'=j3^post6, __const_400^0'=__const_400^post6, l5^0'=l5^post6, i2^0'=i2^post6, (k4^0-k4^post6 == 0 /\ -__const_400^post6+__const_400^0 == 0 /\ j3^0-j3^post6 == 0 /\ -i2^post6+i2^0 == 0 /\ -1+l5^post6-l5^0 == 0 /\ x1^0-x1^post6 == 0 /\ -__const_5^post6+__const_5^0 == 0), cost: 1
   7: l9 -> l10 : k4^0'=k4^post7, __const_5^0'=__const_5^post7, x1^0'=x1^post7, j3^0'=j3^post7, __const_400^0'=__const_400^post7, l5^0'=l5^post7, i2^0'=i2^post7, (-j3^post7+j3^0 == 0 /\ -i2^post7+i2^0 == 0 /\ -l5^post7+l5^0 == 0 /\ x1^0-x1^post7 == 0 /\ k4^0-k4^post7 == 0 /\ -__const_400^post7+__const_400^0 == 0 /\ __const_5^0-__const_5^post7 == 0), cost: 1
  11: l10 -> l6 : k4^0'=k4^post11, __const_5^0'=__const_5^post11, x1^0'=x1^post11, j3^0'=j3^post11, __const_400^0'=__const_400^post11, l5^0'=l5^post11, i2^0'=i2^post11, (-1-k4^0+k4^post11 == 0 /\ -i2^post11+i2^0 == 0 /\ __const_400^0-__const_400^post11 == 0 /\ -x1^post11+x1^0 == 0 /\ j3^0-j3^post11 == 0 /\ __const_5^0-l5^0 <= 0 /\ -l5^post11+l5^0 == 0 /\ -__const_5^post11+__const_5^0 == 0), cost: 1
  12: l10 -> l11 : k4^0'=k4^post12, __const_5^0'=__const_5^post12, x1^0'=x1^post12, j3^0'=j3^post12, __const_400^0'=__const_400^post12, l5^0'=l5^post12, i2^0'=i2^post12, (-i2^post12+i2^0 == 0 /\ x1^0-x1^post12 == 0 /\ 1-__const_5^0+l5^0 <= 0 /\ -__const_400^post12+__const_400^0 == 0 /\ __const_5^0-__const_5^post12 == 0 /\ k4^0-k4^post12 == 0 /\ j3^0-j3^post12 == 0 /\ -l5^post12+l5^0 == 0), cost: 1
   8: l11 -> l8 : k4^0'=k4^post8, __const_5^0'=__const_5^post8, x1^0'=x1^post8, j3^0'=j3^post8, __const_400^0'=__const_400^post8, l5^0'=l5^post8, i2^0'=i2^post8, (-l5^post8+l5^0 == 0 /\ __const_5^0-__const_5^post8 == 0 /\ -__const_400^post8+__const_400^0 == 0 /\ i2^0-i2^post8 == 0 /\ -j3^post8+j3^0 == 0 /\ x1^0-x1^post8 == 0 /\ k4^0-k4^post8 == 0), cost: 1
  10: l11 -> l8 : k4^0'=k4^post10, __const_5^0'=__const_5^post10, x1^0'=x1^post10, j3^0'=j3^post10, __const_400^0'=__const_400^post10, l5^0'=l5^post10, i2^0'=i2^post10, (k4^0-k4^post10 == 0 /\ -x1^post10+x1^0 == 0 /\ -j3^post10+j3^0 == 0 /\ l5^0-l5^post10 == 0 /\ __const_5^0-__const_5^post10 == 0 /\ -i2^post10+i2^0 == 0 /\ __const_400^0-__const_400^post10 == 0), cost: 1
  17: l12 -> l3 : k4^0'=k4^post17, __const_5^0'=__const_5^post17, x1^0'=x1^post17, j3^0'=j3^post17, __const_400^0'=__const_400^post17, l5^0'=l5^post17, i2^0'=i2^post17, (__const_400^0-__const_400^post17 == 0 /\ j3^0-j3^post17 == 0 /\ i2^post17 == 0 /\ x1^post17-__const_400^0 == 0 /\ k4^0-k4^post17 == 0 /\ __const_5^0-__const_5^post17 == 0 /\ l5^0-l5^post17 == 0), cost: 1
  18: l13 -> l12 : k4^0'=k4^post18, __const_5^0'=__const_5^post18, x1^0'=x1^post18, j3^0'=j3^post18, __const_400^0'=__const_400^post18, l5^0'=l5^post18, i2^0'=i2^post18, (j3^0-j3^post18 == 0 /\ -l5^post18+l5^0 == 0 /\ -x1^post18+x1^0 == 0 /\ __const_400^0-__const_400^post18 == 0 /\ -i2^post18+i2^0 == 0 /\ __const_5^0-__const_5^post18 == 0 /\ k4^0-k4^post18 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : k4^0'=k4^post1, __const_5^0'=__const_5^post1, x1^0'=x1^post1, j3^0'=j3^post1, __const_400^0'=__const_400^post1, l5^0'=l5^post1, i2^0'=i2^post1, (-__const_400^post1+__const_400^0 == 0 /\ x1^0-x1^post1 == 0 /\ k4^0-k4^post1 == 0 /\ __const_5^0-__const_5^post1 == 0 /\ j3^post1 == 0 /\ -i2^post1+i2^0 == 0 /\ 1-__const_5^0+i2^0 <= 0 /\ -l5^post1+l5^0 == 0), cost: 1
New rule:
l0 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : k4^0'=k4^post2, __const_5^0'=__const_5^post2, x1^0'=x1^post2, j3^0'=j3^post2, __const_400^0'=__const_400^post2, l5^0'=l5^post2, i2^0'=i2^post2, (__const_5^0-__const_5^post2 == 0 /\ i2^0-i2^post2 == 0 /\ k4^0-k4^post2 == 0 /\ -l5^post2+l5^0 == 0 /\ x1^0-x1^post2 == 0 /\ -j3^post2+j3^0 == 0 /\ -__const_400^post2+__const_400^0 == 0), cost: 1
New rule:
l3 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l4 : k4^0'=k4^post3, __const_5^0'=__const_5^post3, x1^0'=x1^post3, j3^0'=j3^post3, __const_400^0'=__const_400^post3, l5^0'=l5^post3, i2^0'=i2^post3, (-i2^post3+i2^0 == 0 /\ -x1^post3+x1^0 == 0 /\ __const_5^0-__const_5^post3 == 0 /\ k4^0-k4^post3 == 0 /\ -j3^post3+j3^0 == 0 /\ l5^0-l5^post3 == 0 /\ __const_400^0-__const_400^post3 == 0), cost: 1
New rule:
l2 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l7 : k4^0'=k4^post5, __const_5^0'=__const_5^post5, x1^0'=x1^post5, j3^0'=j3^post5, __const_400^0'=__const_400^post5, l5^0'=l5^post5, i2^0'=i2^post5, (j3^0-j3^post5 == 0 /\ -x1^post5+x1^0 == 0 /\ -i2^post5+i2^0 == 0 /\ __const_400^0-__const_400^post5 == 0 /\ -l5^post5+l5^0 == 0 /\ __const_5^0-__const_5^post5 == 0 /\ k4^0-k4^post5 == 0), cost: 1
New rule:
l6 -> l7 : TRUE, cost: 1

Applied preprocessing
Original rule:
l8 -> l9 : k4^0'=k4^post6, __const_5^0'=__const_5^post6, x1^0'=x1^post6, j3^0'=j3^post6, __const_400^0'=__const_400^post6, l5^0'=l5^post6, i2^0'=i2^post6, (k4^0-k4^post6 == 0 /\ -__const_400^post6+__const_400^0 == 0 /\ j3^0-j3^post6 == 0 /\ -i2^post6+i2^0 == 0 /\ -1+l5^post6-l5^0 == 0 /\ x1^0-x1^post6 == 0 /\ -__const_5^post6+__const_5^0 == 0), cost: 1
New rule:
l8 -> l9 : l5^0'=1+l5^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l10 : k4^0'=k4^post7, __const_5^0'=__const_5^post7, x1^0'=x1^post7, j3^0'=j3^post7, __const_400^0'=__const_400^post7, l5^0'=l5^post7, i2^0'=i2^post7, (-j3^post7+j3^0 == 0 /\ -i2^post7+i2^0 == 0 /\ -l5^post7+l5^0 == 0 /\ x1^0-x1^post7 == 0 /\ k4^0-k4^post7 == 0 /\ -__const_400^post7+__const_400^0 == 0 /\ __const_5^0-__const_5^post7 == 0), cost: 1
New rule:
l9 -> l10 : TRUE, cost: 1

Applied preprocessing
Original rule:
l11 -> l8 : k4^0'=k4^post8, __const_5^0'=__const_5^post8, x1^0'=x1^post8, j3^0'=j3^post8, __const_400^0'=__const_400^post8, l5^0'=l5^post8, i2^0'=i2^post8, (-l5^post8+l5^0 == 0 /\ __const_5^0-__const_5^post8 == 0 /\ -__const_400^post8+__const_400^0 == 0 /\ i2^0-i2^post8 == 0 /\ -j3^post8+j3^0 == 0 /\ x1^0-x1^post8 == 0 /\ k4^0-k4^post8 == 0), cost: 1
New rule:
l11 -> l8 : TRUE, cost: 1

Applied preprocessing
Original rule:
l11 -> l8 : k4^0'=k4^post10, __const_5^0'=__const_5^post10, x1^0'=x1^post10, j3^0'=j3^post10, __const_400^0'=__const_400^post10, l5^0'=l5^post10, i2^0'=i2^post10, (k4^0-k4^post10 == 0 /\ -x1^post10+x1^0 == 0 /\ -j3^post10+j3^0 == 0 /\ l5^0-l5^post10 == 0 /\ __const_5^0-__const_5^post10 == 0 /\ -i2^post10+i2^0 == 0 /\ __const_400^0-__const_400^post10 == 0), cost: 1
New rule:
l11 -> l8 : TRUE, cost: 1

Applied preprocessing
Original rule:
l10 -> l6 : k4^0'=k4^post11, __const_5^0'=__const_5^post11, x1^0'=x1^post11, j3^0'=j3^post11, __const_400^0'=__const_400^post11, l5^0'=l5^post11, i2^0'=i2^post11, (-1-k4^0+k4^post11 == 0 /\ -i2^post11+i2^0 == 0 /\ __const_400^0-__const_400^post11 == 0 /\ -x1^post11+x1^0 == 0 /\ j3^0-j3^post11 == 0 /\ __const_5^0-l5^0 <= 0 /\ -l5^post11+l5^0 == 0 /\ -__const_5^post11+__const_5^0 == 0), cost: 1
New rule:
l10 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l10 -> l11 : k4^0'=k4^post12, __const_5^0'=__const_5^post12, x1^0'=x1^post12, j3^0'=j3^post12, __const_400^0'=__const_400^post12, l5^0'=l5^post12, i2^0'=i2^post12, (-i2^post12+i2^0 == 0 /\ x1^0-x1^post12 == 0 /\ 1-__const_5^0+l5^0 <= 0 /\ -__const_400^post12+__const_400^0 == 0 /\ __const_5^0-__const_5^post12 == 0 /\ k4^0-k4^post12 == 0 /\ j3^0-j3^post12 == 0 /\ -l5^post12+l5^0 == 0), cost: 1
New rule:
l10 -> l11 : 1-__const_5^0+l5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l2 : k4^0'=k4^post13, __const_5^0'=__const_5^post13, x1^0'=x1^post13, j3^0'=j3^post13, __const_400^0'=__const_400^post13, l5^0'=l5^post13, i2^0'=i2^post13, (-1-j3^0+j3^post13 == 0 /\ -l5^post13+l5^0 == 0 /\ -i2^post13+i2^0 == 0 /\ x1^0-x1^post13 == 0 /\ __const_5^0-__const_5^post13 == 0 /\ -__const_400^post13+__const_400^0 == 0 /\ k4^0-k4^post13 == 0 /\ -k4^0+__const_5^0 <= 0), cost: 1
New rule:
l7 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l9 : k4^0'=k4^post14, __const_5^0'=__const_5^post14, x1^0'=x1^post14, j3^0'=j3^post14, __const_400^0'=__const_400^post14, l5^0'=l5^post14, i2^0'=i2^post14, (-__const_400^post14+__const_400^0 == 0 /\ x1^0-x1^post14 == 0 /\ l5^post14 == 0 /\ __const_5^0-__const_5^post14 == 0 /\ -i2^post14+i2^0 == 0 /\ -k4^post14+k4^0 == 0 /\ 1+k4^0-__const_5^0 <= 0 /\ j3^0-j3^post14 == 0), cost: 1
New rule:
l7 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : k4^0'=k4^post15, __const_5^0'=__const_5^post15, x1^0'=x1^post15, j3^0'=j3^post15, __const_400^0'=__const_400^post15, l5^0'=l5^post15, i2^0'=i2^post15, (-__const_400^post15+__const_400^0 == 0 /\ -j3^post15+j3^0 == 0 /\ -1-i2^0+i2^post15 == 0 /\ x1^0-x1^post15 == 0 /\ -l5^post15+l5^0 == 0 /\ __const_5^0-__const_5^post15 == 0 /\ __const_5^0-j3^0 <= 0 /\ k4^0-k4^post15 == 0), cost: 1
New rule:
l4 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l6 : k4^0'=k4^post16, __const_5^0'=__const_5^post16, x1^0'=x1^post16, j3^0'=j3^post16, __const_400^0'=__const_400^post16, l5^0'=l5^post16, i2^0'=i2^post16, (-x1^post16+x1^0 == 0 /\ -j3^post16+j3^0 == 0 /\ k4^post16 == 0 /\ __const_5^0-__const_5^post16 == 0 /\ 1-__const_5^0+j3^0 <= 0 /\ l5^0-l5^post16 == 0 /\ -i2^post16+i2^0 == 0 /\ __const_400^0-__const_400^post16 == 0), cost: 1
New rule:
l4 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l12 -> l3 : k4^0'=k4^post17, __const_5^0'=__const_5^post17, x1^0'=x1^post17, j3^0'=j3^post17, __const_400^0'=__const_400^post17, l5^0'=l5^post17, i2^0'=i2^post17, (__const_400^0-__const_400^post17 == 0 /\ j3^0-j3^post17 == 0 /\ i2^post17 == 0 /\ x1^post17-__const_400^0 == 0 /\ k4^0-k4^post17 == 0 /\ __const_5^0-__const_5^post17 == 0 /\ l5^0-l5^post17 == 0), cost: 1
New rule:
l12 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l13 -> l12 : k4^0'=k4^post18, __const_5^0'=__const_5^post18, x1^0'=x1^post18, j3^0'=j3^post18, __const_400^0'=__const_400^post18, l5^0'=l5^post18, i2^0'=i2^post18, (j3^0-j3^post18 == 0 /\ -l5^post18+l5^0 == 0 /\ -x1^post18+x1^0 == 0 /\ __const_400^0-__const_400^post18 == 0 /\ -i2^post18+i2^0 == 0 /\ __const_5^0-__const_5^post18 == 0 /\ k4^0-k4^post18 == 0), cost: 1
New rule:
l13 -> l12 : TRUE, cost: 1

Simplified rules
Start location: l13
  19: l0 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 1
  21: l2 -> l4 : TRUE, cost: 1
  20: l3 -> l0 : TRUE, cost: 1
  30: l4 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 1
  31: l4 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 1
  22: l6 -> l7 : TRUE, cost: 1
  28: l7 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 1
  29: l7 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 1
  23: l8 -> l9 : l5^0'=1+l5^0, TRUE, cost: 1
  24: l9 -> l10 : TRUE, cost: 1
  26: l10 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 1
  27: l10 -> l11 : 1-__const_5^0+l5^0 <= 0, cost: 1
  25: l11 -> l8 : TRUE, cost: 1
  32: l12 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 1
  33: l13 -> l12 : TRUE, cost: 1


Eliminating location l12 by chaining:

Applied chaining
First rule:
l13 -> l12 : TRUE, cost: 1
Second rule:
l12 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 1
New rule:
l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 32 33

Eliminating location l0 by chaining:

Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 1
New rule:
l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 19 20

Eliminating location l11 by chaining:

Applied chaining
First rule:
l10 -> l11 : 1-__const_5^0+l5^0 <= 0, cost: 1
Second rule:
l11 -> l8 : TRUE, cost: 1
New rule:
l10 -> l8 : 1-__const_5^0+l5^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 25 27

Eliminating location l8 by chaining:

Applied chaining
First rule:
l10 -> l8 : 1-__const_5^0+l5^0 <= 0, cost: 2
Second rule:
l8 -> l9 : l5^0'=1+l5^0, TRUE, cost: 1
New rule:
l10 -> l9 : l5^0'=1+l5^0, 1-__const_5^0+l5^0 <= 0, cost: 3

Applied deletion
Removed the following rules: 23 36

Eliminated locations on linear paths
Start location: l13
  21: l2 -> l4 : TRUE, cost: 1
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  30: l4 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 1
  31: l4 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 1
  22: l6 -> l7 : TRUE, cost: 1
  28: l7 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 1
  29: l7 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 1
  24: l9 -> l10 : TRUE, cost: 1
  26: l10 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 1
  37: l10 -> l9 : l5^0'=1+l5^0, 1-__const_5^0+l5^0 <= 0, cost: 3
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Eliminating location l4 by chaining:

Applied chaining
First rule:
l2 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 1
New rule:
l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2

Applied chaining
First rule:
l2 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 1
New rule:
l2 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 21 30 31

Eliminating location l7 by chaining:

Applied chaining
First rule:
l6 -> l7 : TRUE, cost: 1
Second rule:
l7 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 1
New rule:
l6 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 2

Applied chaining
First rule:
l6 -> l7 : TRUE, cost: 1
Second rule:
l7 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 1
New rule:
l6 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 22 28 29

Eliminating location l10 by chaining:

Applied chaining
First rule:
l9 -> l10 : TRUE, cost: 1
Second rule:
l10 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 1
New rule:
l9 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 2

Applied chaining
First rule:
l9 -> l10 : TRUE, cost: 1
Second rule:
l10 -> l9 : l5^0'=1+l5^0, 1-__const_5^0+l5^0 <= 0, cost: 3
New rule:
l9 -> l9 : l5^0'=1+l5^0, 1-__const_5^0+l5^0 <= 0, cost: 4

Applied deletion
Removed the following rules: 24 26 37

Eliminated locations on tree-shaped paths
Start location: l13
  38: l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
  39: l2 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 2
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  40: l6 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 2
  41: l6 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 2
  42: l9 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 2
  43: l9 -> l9 : l5^0'=1+l5^0, 1-__const_5^0+l5^0 <= 0, cost: 4
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l9 -> l9 : l5^0'=1+l5^0, 1-__const_5^0+l5^0 <= 0, cost: 4
New rule:
l9 -> l9 : l5^0'=n+l5^0, (n >= 0 /\ __const_5^0-n-l5^0 >= 0), cost: 4*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fmBBPP.txt

Applied instantiation
Original rule:
l9 -> l9 : l5^0'=n+l5^0, (n >= 0 /\ __const_5^0-n-l5^0 >= 0), cost: 4*n
New rule:
l9 -> l9 : l5^0'=__const_5^0, (0 >= 0 /\ __const_5^0-l5^0 >= 0), cost: 4*__const_5^0-4*l5^0

Applied simplification
Original rule:
l9 -> l9 : l5^0'=__const_5^0, (0 >= 0 /\ __const_5^0-l5^0 >= 0), cost: 4*__const_5^0-4*l5^0
New rule:
l9 -> l9 : l5^0'=__const_5^0, __const_5^0-l5^0 >= 0, cost: 4*__const_5^0-4*l5^0

Applied deletion
Removed the following rules: 43

Accelerated simple loops
Start location: l13
  38: l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
  39: l2 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 2
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  40: l6 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 2
  41: l6 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 2
  42: l9 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 2
  45: l9 -> l9 : l5^0'=__const_5^0, __const_5^0-l5^0 >= 0, cost: 4*__const_5^0-4*l5^0
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l6 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 2
Second rule:
l9 -> l9 : l5^0'=__const_5^0, __const_5^0-l5^0 >= 0, cost: 4*__const_5^0-4*l5^0
New rule:
l6 -> l9 : l5^0'=__const_5^0, (__const_5^0 >= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 2+4*__const_5^0

Applied deletion
Removed the following rules: 45

Chained accelerated rules with incoming rules
Start location: l13
  38: l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
  39: l2 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 2
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  40: l6 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 2
  41: l6 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 2
  46: l6 -> l9 : l5^0'=__const_5^0, (__const_5^0 >= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 2+4*__const_5^0
  42: l9 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 2
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Eliminating location l9 by chaining:

Applied chaining
First rule:
l6 -> l9 : l5^0'=0, 1+k4^0-__const_5^0 <= 0, cost: 2
Second rule:
l9 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 2
New rule:
l6 -> l6 : k4^0'=1+k4^0, l5^0'=0, (__const_5^0 <= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 4

Applied chaining
First rule:
l6 -> l9 : l5^0'=__const_5^0, (__const_5^0 >= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 2+4*__const_5^0
Second rule:
l9 -> l6 : k4^0'=1+k4^0, __const_5^0-l5^0 <= 0, cost: 2
New rule:
l6 -> l6 : k4^0'=1+k4^0, l5^0'=__const_5^0, (0 <= 0 /\ __const_5^0 >= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 4+4*__const_5^0

Applied simplification
Original rule:
l6 -> l6 : k4^0'=1+k4^0, l5^0'=__const_5^0, (0 <= 0 /\ __const_5^0 >= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 4+4*__const_5^0
New rule:
l6 -> l6 : k4^0'=1+k4^0, l5^0'=__const_5^0, (__const_5^0 >= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 4+4*__const_5^0

Applied deletion
Removed the following rules: 41 42 46

Eliminated locations on tree-shaped paths
Start location: l13
  38: l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
  39: l2 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 2
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  40: l6 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 2
  47: l6 -> l6 : k4^0'=1+k4^0, l5^0'=0, (__const_5^0 <= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 4
  48: l6 -> l6 : k4^0'=1+k4^0, l5^0'=__const_5^0, (__const_5^0 >= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 4+4*__const_5^0
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l6 -> l6 : k4^0'=1+k4^0, l5^0'=0, (__const_5^0 <= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 4
New rule:
l6 -> l6 : k4^0'=k4^0+n0, l5^0'=0, (-__const_5^0 >= 0 /\ -1+n0 >= 0 /\ -k4^0+__const_5^0-n0 >= 0), cost: 4*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FFNLfF.txt

Applied instantiation
Original rule:
l6 -> l6 : k4^0'=k4^0+n0, l5^0'=0, (-__const_5^0 >= 0 /\ -1+n0 >= 0 /\ -k4^0+__const_5^0-n0 >= 0), cost: 4*n0
New rule:
l6 -> l6 : k4^0'=__const_5^0, l5^0'=0, (0 >= 0 /\ -1-k4^0+__const_5^0 >= 0 /\ -__const_5^0 >= 0), cost: -4*k4^0+4*__const_5^0

Applied acceleration
Original rule:
l6 -> l6 : k4^0'=1+k4^0, l5^0'=__const_5^0, (__const_5^0 >= 0 /\ 1+k4^0-__const_5^0 <= 0), cost: 4+4*__const_5^0
New rule:
l6 -> l6 : k4^0'=k4^0+n1, l5^0'=__const_5^0, (__const_5^0 >= 0 /\ -k4^0-n1+__const_5^0 >= 0 /\ -1+n1 >= 0), cost: 4*n1+4*n1*__const_5^0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_KDPCHB.txt

Applied instantiation
Original rule:
l6 -> l6 : k4^0'=k4^0+n1, l5^0'=__const_5^0, (__const_5^0 >= 0 /\ -k4^0-n1+__const_5^0 >= 0 /\ -1+n1 >= 0), cost: 4*n1+4*n1*__const_5^0
New rule:
l6 -> l6 : k4^0'=__const_5^0, l5^0'=__const_5^0, (0 >= 0 /\ __const_5^0 >= 0 /\ -1-k4^0+__const_5^0 >= 0), cost: -4*k4^0+4*__const_5^0-4*__const_5^0*(k4^0-__const_5^0)

Applied simplification
Original rule:
l6 -> l6 : k4^0'=__const_5^0, l5^0'=0, (0 >= 0 /\ -1-k4^0+__const_5^0 >= 0 /\ -__const_5^0 >= 0), cost: -4*k4^0+4*__const_5^0
New rule:
l6 -> l6 : k4^0'=__const_5^0, l5^0'=0, (__const_5^0 <= 0 /\ -1-k4^0+__const_5^0 >= 0), cost: -4*k4^0+4*__const_5^0

Applied simplification
Original rule:
l6 -> l6 : k4^0'=__const_5^0, l5^0'=__const_5^0, (0 >= 0 /\ __const_5^0 >= 0 /\ -1-k4^0+__const_5^0 >= 0), cost: -4*k4^0+4*__const_5^0-4*__const_5^0*(k4^0-__const_5^0)
New rule:
l6 -> l6 : k4^0'=__const_5^0, l5^0'=__const_5^0, (__const_5^0 >= 0 /\ -1-k4^0+__const_5^0 >= 0), cost: -4*k4^0+4*__const_5^0-4*__const_5^0*(k4^0-__const_5^0)

Applied deletion
Removed the following rules: 47 48

Accelerated simple loops
Start location: l13
  38: l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
  39: l2 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 2
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  40: l6 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 2
  51: l6 -> l6 : k4^0'=__const_5^0, l5^0'=0, (__const_5^0 <= 0 /\ -1-k4^0+__const_5^0 >= 0), cost: -4*k4^0+4*__const_5^0
  52: l6 -> l6 : k4^0'=__const_5^0, l5^0'=__const_5^0, (__const_5^0 >= 0 /\ -1-k4^0+__const_5^0 >= 0), cost: -4*k4^0+4*__const_5^0-4*__const_5^0*(k4^0-__const_5^0)
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l2 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 2
Second rule:
l6 -> l6 : k4^0'=__const_5^0, l5^0'=__const_5^0, (__const_5^0 >= 0 /\ -1-k4^0+__const_5^0 >= 0), cost: -4*k4^0+4*__const_5^0-4*__const_5^0*(k4^0-__const_5^0)
New rule:
l2 -> l6 : k4^0'=__const_5^0, l5^0'=__const_5^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 2+4*__const_5^0+4*__const_5^0^2

Applied deletion
Removed the following rules: 51 52

Chained accelerated rules with incoming rules
Start location: l13
  38: l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
  39: l2 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 2
  53: l2 -> l6 : k4^0'=__const_5^0, l5^0'=__const_5^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 2+4*__const_5^0+4*__const_5^0^2
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  40: l6 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 2
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Eliminating location l6 by chaining:

Applied chaining
First rule:
l2 -> l6 : k4^0'=0, 1-__const_5^0+j3^0 <= 0, cost: 2
Second rule:
l6 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 2
New rule:
l2 -> l2 : k4^0'=0, j3^0'=1+j3^0, (__const_5^0 <= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 4

Applied chaining
First rule:
l2 -> l6 : k4^0'=__const_5^0, l5^0'=__const_5^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 2+4*__const_5^0+4*__const_5^0^2
Second rule:
l6 -> l2 : j3^0'=1+j3^0, -k4^0+__const_5^0 <= 0, cost: 2
New rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=1+j3^0, l5^0'=__const_5^0, (0 <= 0 /\ -1+__const_5^0 >= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2

Applied simplification
Original rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=1+j3^0, l5^0'=__const_5^0, (0 <= 0 /\ -1+__const_5^0 >= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2
New rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=1+j3^0, l5^0'=__const_5^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2

Applied deletion
Removed the following rules: 39 40 53

Eliminated locations on tree-shaped paths
Start location: l13
  38: l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
  54: l2 -> l2 : k4^0'=0, j3^0'=1+j3^0, (__const_5^0 <= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 4
  55: l2 -> l2 : k4^0'=__const_5^0, j3^0'=1+j3^0, l5^0'=__const_5^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l2 -> l2 : k4^0'=0, j3^0'=1+j3^0, (__const_5^0 <= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 4
New rule:
l2 -> l2 : k4^0'=0, j3^0'=j3^0+n6, (__const_5^0-j3^0-n6 >= 0 /\ -__const_5^0 >= 0 /\ -1+n6 >= 0), cost: 4*n6
Sub-proof via acceration calculus written to file:///tmp/tmpnam_bHnnfE.txt

Applied instantiation
Original rule:
l2 -> l2 : k4^0'=0, j3^0'=j3^0+n6, (__const_5^0-j3^0-n6 >= 0 /\ -__const_5^0 >= 0 /\ -1+n6 >= 0), cost: 4*n6
New rule:
l2 -> l2 : k4^0'=0, j3^0'=__const_5^0, (0 >= 0 /\ -1+__const_5^0-j3^0 >= 0 /\ -__const_5^0 >= 0), cost: 4*__const_5^0-4*j3^0

Applied acceleration
Original rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=1+j3^0, l5^0'=__const_5^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+j3^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2
New rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=j3^0+n7, l5^0'=__const_5^0, (-1+n7 >= 0 /\ -1+__const_5^0 >= 0 /\ __const_5^0-j3^0-n7 >= 0), cost: 4*__const_5^0*n7+4*__const_5^0^2*n7+4*n7
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JeNiKF.txt

Applied instantiation
Original rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=j3^0+n7, l5^0'=__const_5^0, (-1+n7 >= 0 /\ -1+__const_5^0 >= 0 /\ __const_5^0-j3^0-n7 >= 0), cost: 4*__const_5^0*n7+4*__const_5^0^2*n7+4*n7
New rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, (0 >= 0 /\ -1+__const_5^0-j3^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0+4*__const_5^0*(__const_5^0-j3^0)-4*j3^0+4*__const_5^0^2*(__const_5^0-j3^0)

Applied simplification
Original rule:
l2 -> l2 : k4^0'=0, j3^0'=__const_5^0, (0 >= 0 /\ -1+__const_5^0-j3^0 >= 0 /\ -__const_5^0 >= 0), cost: 4*__const_5^0-4*j3^0
New rule:
l2 -> l2 : k4^0'=0, j3^0'=__const_5^0, (__const_5^0 <= 0 /\ -1+__const_5^0-j3^0 >= 0), cost: 4*__const_5^0-4*j3^0

Applied simplification
Original rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, (0 >= 0 /\ -1+__const_5^0-j3^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0+4*__const_5^0*(__const_5^0-j3^0)-4*j3^0+4*__const_5^0^2*(__const_5^0-j3^0)
New rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, (-1+__const_5^0-j3^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0+4*__const_5^0*(__const_5^0-j3^0)-4*j3^0+4*__const_5^0^2*(__const_5^0-j3^0)

Applied deletion
Removed the following rules: 54 55

Accelerated simple loops
Start location: l13
  38: l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
  58: l2 -> l2 : k4^0'=0, j3^0'=__const_5^0, (__const_5^0 <= 0 /\ -1+__const_5^0-j3^0 >= 0), cost: 4*__const_5^0-4*j3^0
  59: l2 -> l2 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, (-1+__const_5^0-j3^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0+4*__const_5^0*(__const_5^0-j3^0)-4*j3^0+4*__const_5^0^2*(__const_5^0-j3^0)
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
Second rule:
l2 -> l2 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, (-1+__const_5^0-j3^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0+4*__const_5^0*(__const_5^0-j3^0)-4*j3^0+4*__const_5^0^2*(__const_5^0-j3^0)
New rule:
l3 -> l2 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 2+4*__const_5^0+4*__const_5^0^2+4*__const_5^0^3

Applied deletion
Removed the following rules: 58 59

Chained accelerated rules with incoming rules
Start location: l13
  38: l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
  35: l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
  60: l3 -> l2 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 2+4*__const_5^0+4*__const_5^0^2+4*__const_5^0^3
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Eliminating location l2 by chaining:

Applied chaining
First rule:
l3 -> l2 : j3^0'=0, 1-__const_5^0+i2^0 <= 0, cost: 2
Second rule:
l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
New rule:
l3 -> l3 : j3^0'=0, i2^0'=1+i2^0, (__const_5^0 <= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 4

Applied chaining
First rule:
l3 -> l2 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 2+4*__const_5^0+4*__const_5^0^2+4*__const_5^0^3
Second rule:
l2 -> l3 : i2^0'=1+i2^0, __const_5^0-j3^0 <= 0, cost: 2
New rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=1+i2^0, (0 <= 0 /\ -1+__const_5^0 >= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2+4*__const_5^0^3

Applied simplification
Original rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=1+i2^0, (0 <= 0 /\ -1+__const_5^0 >= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2+4*__const_5^0^3
New rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=1+i2^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2+4*__const_5^0^3

Applied deletion
Removed the following rules: 35 38 60

Eliminated locations on tree-shaped paths
Start location: l13
  61: l3 -> l3 : j3^0'=0, i2^0'=1+i2^0, (__const_5^0 <= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 4
  62: l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=1+i2^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2+4*__const_5^0^3
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Applied acceleration
Original rule:
l3 -> l3 : j3^0'=0, i2^0'=1+i2^0, (__const_5^0 <= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 4
New rule:
l3 -> l3 : j3^0'=0, i2^0'=i2^0+n8, (__const_5^0-i2^0-n8 >= 0 /\ -1+n8 >= 0 /\ -__const_5^0 >= 0), cost: 4*n8
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oDpNpP.txt

Applied instantiation
Original rule:
l3 -> l3 : j3^0'=0, i2^0'=i2^0+n8, (__const_5^0-i2^0-n8 >= 0 /\ -1+n8 >= 0 /\ -__const_5^0 >= 0), cost: 4*n8
New rule:
l3 -> l3 : j3^0'=0, i2^0'=__const_5^0, (0 >= 0 /\ -1+__const_5^0-i2^0 >= 0 /\ -__const_5^0 >= 0), cost: 4*__const_5^0-4*i2^0

Applied acceleration
Original rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=1+i2^0, (-1+__const_5^0 >= 0 /\ 1-__const_5^0+i2^0 <= 0), cost: 4+4*__const_5^0+4*__const_5^0^2+4*__const_5^0^3
New rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=n9+i2^0, (-1+__const_5^0 >= 0 /\ -n9+__const_5^0-i2^0 >= 0 /\ -1+n9 >= 0), cost: 4*n9+4*n9*__const_5^0+4*n9*__const_5^0^2+4*n9*__const_5^0^3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hPgDeo.txt

Applied instantiation
Original rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=n9+i2^0, (-1+__const_5^0 >= 0 /\ -n9+__const_5^0-i2^0 >= 0 /\ -1+n9 >= 0), cost: 4*n9+4*n9*__const_5^0+4*n9*__const_5^0^2+4*n9*__const_5^0^3
New rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=__const_5^0, (0 >= 0 /\ -1+__const_5^0-i2^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0^2*(__const_5^0-i2^0)+4*__const_5^0+4*__const_5^0^3*(__const_5^0-i2^0)-4*i2^0+4*__const_5^0*(__const_5^0-i2^0)

Applied simplification
Original rule:
l3 -> l3 : j3^0'=0, i2^0'=__const_5^0, (0 >= 0 /\ -1+__const_5^0-i2^0 >= 0 /\ -__const_5^0 >= 0), cost: 4*__const_5^0-4*i2^0
New rule:
l3 -> l3 : j3^0'=0, i2^0'=__const_5^0, (__const_5^0 <= 0 /\ -1+__const_5^0-i2^0 >= 0), cost: 4*__const_5^0-4*i2^0

Applied simplification
Original rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=__const_5^0, (0 >= 0 /\ -1+__const_5^0-i2^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0^2*(__const_5^0-i2^0)+4*__const_5^0+4*__const_5^0^3*(__const_5^0-i2^0)-4*i2^0+4*__const_5^0*(__const_5^0-i2^0)
New rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=__const_5^0, (-1+__const_5^0-i2^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0^2*(__const_5^0-i2^0)+4*__const_5^0+4*__const_5^0^3*(__const_5^0-i2^0)-4*i2^0+4*__const_5^0*(__const_5^0-i2^0)

Applied deletion
Removed the following rules: 61 62

Accelerated simple loops
Start location: l13
  65: l3 -> l3 : j3^0'=0, i2^0'=__const_5^0, (__const_5^0 <= 0 /\ -1+__const_5^0-i2^0 >= 0), cost: 4*__const_5^0-4*i2^0
  66: l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=__const_5^0, (-1+__const_5^0-i2^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0^2*(__const_5^0-i2^0)+4*__const_5^0+4*__const_5^0^3*(__const_5^0-i2^0)-4*i2^0+4*__const_5^0*(__const_5^0-i2^0)
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2


Applied chaining
First rule:
l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2
Second rule:
l3 -> l3 : k4^0'=__const_5^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=__const_5^0, (-1+__const_5^0-i2^0 >= 0 /\ -1+__const_5^0 >= 0), cost: 4*__const_5^0^2*(__const_5^0-i2^0)+4*__const_5^0+4*__const_5^0^3*(__const_5^0-i2^0)-4*i2^0+4*__const_5^0*(__const_5^0-i2^0)
New rule:
l13 -> l3 : k4^0'=__const_5^0, x1^0'=__const_400^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=__const_5^0, -1+__const_5^0 >= 0, cost: 2+4*__const_5^0+4*__const_5^0^4+4*__const_5^0^2+4*__const_5^0^3

Applied deletion
Removed the following rules: 65 66

Chained accelerated rules with incoming rules
Start location: l13
  34: l13 -> l3 : x1^0'=__const_400^0, i2^0'=0, TRUE, cost: 2
  67: l13 -> l3 : k4^0'=__const_5^0, x1^0'=__const_400^0, j3^0'=__const_5^0, l5^0'=__const_5^0, i2^0'=__const_5^0, -1+__const_5^0 >= 0, cost: 2+4*__const_5^0+4*__const_5^0^4+4*__const_5^0^2+4*__const_5^0^3


Removed unreachable locations and irrelevant leafs
Start location: l13
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

