WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f117_0_createList_GE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ 1+arg1P0 > 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ 1+x70 > 0 /\ -arg3P1 == 0 /\ arg1P1 > 0 /\ arg1 > 0 /\ arg1P1-arg1 <= 0 /\ -3+arg2P1 > 0), cost: 1
   2: f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+x120 > 0 /\ 1+arg1-arg2P2 >= 0 /\ arg2 > 0 /\ -arg1P2+arg1 >= 0 /\ arg1P2 > 0 /\ -1+arg2P2 > 0 /\ arg1 > 0 /\ -arg3P2 == 0), cost: 1
   3: f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1 > 0 /\ -1-arg1P3+arg1 == 0 /\ -1 < 0), cost: 1
   4: f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-arg3 == 0 /\ x150 > 0 /\ -1+arg1P4 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg2P4 > 0 /\ 2-arg2+arg2P4 <= 0 /\ -arg2+arg1P4 <= 0 /\ -arg3P4 == 0), cost: 1
   5: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ 4+arg3P5-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2P5 <= 0 /\ 1+arg2P5 > 0 /\ 2-arg1+arg1P5 <= 0 /\ -arg2+arg1P5 <= 0 /\ 2-arg2+arg3P5 <= 0 /\ arg3 < 0 /\ 3-arg1+arg2P5 <= 0 /\ arg1P5 > 0), cost: 1
   6: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 2-arg1+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ 2-arg2+arg3P6 <= 0 /\ 3-arg1+arg2P6 <= 0 /\ -arg2+arg1P6 <= 0 /\ 4+arg3P6-arg1 <= 0 /\ arg3 > 0 /\ arg1P6 > 0), cost: 1
   7: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 > 0 /\ arg2 > 0 /\ -arg3 == 0 /\ -arg1+arg1P7 <= 0 /\ -arg2+arg2P7 <= 0 /\ 1-arg3P7 == 0 /\ arg2P7 > 0 /\ -2+arg1P7 > 0 /\ 2+arg2P7-arg1 <= 0 /\ -2-arg2+arg1P7 <= 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, arg3'=arg3P8, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg2 > 0 /\ 1+x70 > 0 /\ -arg3P1 == 0 /\ arg1P1 > 0 /\ arg1 > 0 /\ arg1P1-arg1 <= 0 /\ -3+arg2P1 > 0), cost: 1
New rule:
f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (arg2 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -3+arg2P1 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+x120 > 0 /\ 1+arg1-arg2P2 >= 0 /\ arg2 > 0 /\ -arg1P2+arg1 >= 0 /\ arg1P2 > 0 /\ -1+arg2P2 > 0 /\ arg1 > 0 /\ -arg3P2 == 0), cost: 1
New rule:
f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=0, (1+arg1-arg2P2 >= 0 /\ arg2 > 0 /\ -arg1P2+arg1 >= 0 /\ arg1P2 > 0 /\ -1+arg2P2 > 0), cost: 1

Applied preprocessing
Original rule:
f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1 > 0 /\ -1-arg1P3+arg1 == 0 /\ -1 < 0), cost: 1
New rule:
f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1+arg1, arg3'=arg3P3, 1+arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-arg3 == 0 /\ x150 > 0 /\ -1+arg1P4 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg2P4 > 0 /\ 2-arg2+arg2P4 <= 0 /\ -arg2+arg1P4 <= 0 /\ -arg3P4 == 0), cost: 1
New rule:
f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=0, (-1+arg1P4 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ 1+arg2P4 > 0 /\ 2-arg2+arg2P4 <= 0 /\ -arg2+arg1P4 <= 0), cost: 1

Applied preprocessing
Original rule:
f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ 4+arg3P5-arg1 <= 0 /\ arg2 > 0 /\ 1-arg2+arg2P5 <= 0 /\ 1+arg2P5 > 0 /\ 2-arg1+arg1P5 <= 0 /\ -arg2+arg1P5 <= 0 /\ 2-arg2+arg3P5 <= 0 /\ arg3 < 0 /\ 3-arg1+arg2P5 <= 0 /\ arg1P5 > 0), cost: 1
New rule:
f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (4+arg3P5-arg1 <= 0 /\ 1-arg2+arg2P5 <= 0 /\ -arg3 > 0 /\ 1+arg2P5 > 0 /\ 2-arg1+arg1P5 <= 0 /\ -arg2+arg1P5 <= 0 /\ 2-arg2+arg3P5 <= 0 /\ 3-arg1+arg2P5 <= 0 /\ arg1P5 > 0), cost: 1

Applied preprocessing
Original rule:
f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 2-arg1+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ 2-arg2+arg3P6 <= 0 /\ 3-arg1+arg2P6 <= 0 /\ -arg2+arg1P6 <= 0 /\ 4+arg3P6-arg1 <= 0 /\ arg3 > 0 /\ arg1P6 > 0), cost: 1
New rule:
f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 2-arg1+arg3 <= 0 /\ 2-arg1+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ 2-arg2+arg3P6 <= 0 /\ 3-arg1+arg2P6 <= 0 /\ -arg2+arg1P6 <= 0 /\ 4+arg3P6-arg1 <= 0 /\ arg3 > 0 /\ arg1P6 > 0), cost: 1

Applied preprocessing
Original rule:
f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, (-2+arg1 > 0 /\ arg2 > 0 /\ -arg3 == 0 /\ -arg1+arg1P7 <= 0 /\ -arg2+arg2P7 <= 0 /\ 1-arg3P7 == 0 /\ arg2P7 > 0 /\ -2+arg1P7 > 0 /\ 2+arg2P7-arg1 <= 0 /\ -2-arg2+arg1P7 <= 0), cost: 1
New rule:
f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P7, arg1'=arg1P7, arg3'=1, (-arg1+arg1P7 <= 0 /\ -arg2+arg2P7 <= 0 /\ arg2P7 > 0 /\ -2+arg1P7 > 0 /\ arg3 == 0 /\ 2+arg2P7-arg1 <= 0 /\ -2-arg2+arg1P7 <= 0), cost: 1

Simplified rules
Start location: __init
   0: f1_0_main_Load -> f117_0_createList_GE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ 1+arg1P0 > 0 /\ arg1 > 0), cost: 1
   9: f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (arg2 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -3+arg2P1 > 0), cost: 1
  10: f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=0, (1+arg1-arg2P2 >= 0 /\ arg2 > 0 /\ -arg1P2+arg1 >= 0 /\ arg1P2 > 0 /\ -1+arg2P2 > 0), cost: 1
  11: f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1+arg1, arg3'=arg3P3, 1+arg1 > 0, cost: 1
  12: f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=0, (-1+arg1P4 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ 1+arg2P4 > 0 /\ 2-arg2+arg2P4 <= 0 /\ -arg2+arg1P4 <= 0), cost: 1
  13: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (4+arg3P5-arg1 <= 0 /\ 1-arg2+arg2P5 <= 0 /\ -arg3 > 0 /\ 1+arg2P5 > 0 /\ 2-arg1+arg1P5 <= 0 /\ -arg2+arg1P5 <= 0 /\ 2-arg2+arg3P5 <= 0 /\ 3-arg1+arg2P5 <= 0 /\ arg1P5 > 0), cost: 1
  14: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 2-arg1+arg3 <= 0 /\ 2-arg1+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ 2-arg2+arg3P6 <= 0 /\ 3-arg1+arg2P6 <= 0 /\ -arg2+arg1P6 <= 0 /\ 4+arg3P6-arg1 <= 0 /\ arg3 > 0 /\ arg1P6 > 0), cost: 1
  15: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P7, arg1'=arg1P7, arg3'=1, (-arg1+arg1P7 <= 0 /\ -arg2+arg2P7 <= 0 /\ arg2P7 > 0 /\ -2+arg1P7 > 0 /\ arg3 == 0 /\ 2+arg2P7-arg1 <= 0 /\ -2-arg2+arg1P7 <= 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, arg3'=arg3P8, TRUE, cost: 1


Applied acceleration
Original rule:
f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1+arg1, arg3'=arg3P3, 1+arg1 > 0, cost: 1
New rule:
f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-n+arg1, arg3'=arg3P3, (2-n+arg1 > 0 /\ -1+n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cLGPaE.txt

Applied instantiation
Original rule:
f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-n+arg1, arg3'=arg3P3, (2-n+arg1 > 0 /\ -1+n >= 0), cost: n
New rule:
f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1, arg3'=arg3P3, (1 > 0 /\ arg1 >= 0), cost: 1+arg1

Applied simplification
Original rule:
f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1, arg3'=arg3P3, (1 > 0 /\ arg1 >= 0), cost: 1+arg1
New rule:
f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1, arg3'=arg3P3, arg1 >= 0, cost: 1+arg1

Applied deletion
Removed the following rules: 11

Accelerated simple loops
Start location: __init
   0: f1_0_main_Load -> f117_0_createList_GE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ 1+arg1P0 > 0 /\ arg1 > 0), cost: 1
   9: f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (arg2 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -3+arg2P1 > 0), cost: 1
  10: f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=0, (1+arg1-arg2P2 >= 0 /\ arg2 > 0 /\ -arg1P2+arg1 >= 0 /\ arg1P2 > 0 /\ -1+arg2P2 > 0), cost: 1
  17: f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1, arg3'=arg3P3, arg1 >= 0, cost: 1+arg1
  12: f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=0, (-1+arg1P4 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ 1+arg2P4 > 0 /\ 2-arg2+arg2P4 <= 0 /\ -arg2+arg1P4 <= 0), cost: 1
  13: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (4+arg3P5-arg1 <= 0 /\ 1-arg2+arg2P5 <= 0 /\ -arg3 > 0 /\ 1+arg2P5 > 0 /\ 2-arg1+arg1P5 <= 0 /\ -arg2+arg1P5 <= 0 /\ 2-arg2+arg3P5 <= 0 /\ 3-arg1+arg2P5 <= 0 /\ arg1P5 > 0), cost: 1
  14: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (1+arg2P6 > 0 /\ 2-arg1+arg3 <= 0 /\ 2-arg1+arg1P6 <= 0 /\ 1-arg2+arg2P6 <= 0 /\ 2-arg2+arg3P6 <= 0 /\ 3-arg1+arg2P6 <= 0 /\ -arg2+arg1P6 <= 0 /\ 4+arg3P6-arg1 <= 0 /\ arg3 > 0 /\ arg1P6 > 0), cost: 1
  15: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P7, arg1'=arg1P7, arg3'=1, (-arg1+arg1P7 <= 0 /\ -arg2+arg2P7 <= 0 /\ arg2P7 > 0 /\ -2+arg1P7 > 0 /\ arg3 == 0 /\ 2+arg2P7-arg1 <= 0 /\ -2-arg2+arg1P7 <= 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, arg3'=arg3P8, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f117_0_createList_GE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ 1+arg1P0 > 0 /\ arg1 > 0), cost: 1
Second rule:
f117_0_createList_GE -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1, arg3'=arg3P3, arg1 >= 0, cost: 1+arg1
New rule:
f1_0_main_Load -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1, arg3'=arg3P3, (arg2 > 0 /\ arg1 > 0 /\ arg1P0 >= 0), cost: 2+arg1P0

Applied deletion
Removed the following rules: 17

Applied chaining
First rule:
f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=0, (-1+arg1P4 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ 1+arg2P4 > 0 /\ 2-arg2+arg2P4 <= 0 /\ -arg2+arg1P4 <= 0), cost: 1
Second rule:
f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg2'=arg2P7, arg1'=arg1P7, arg3'=1, (-arg1+arg1P7 <= 0 /\ -arg2+arg2P7 <= 0 /\ arg2P7 > 0 /\ -2+arg1P7 > 0 /\ arg3 == 0 /\ 2+arg2P7-arg1 <= 0 /\ -2-arg2+arg1P7 <= 0), cost: 1
New rule:
f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg2'=arg2P7, arg1'=arg1P7, arg3'=1, (2-arg2+arg2P7 <= 0 /\ arg2P7 > 0 /\ arg1 > 0 /\ -2+arg1P7 > 0 /\ -arg2+arg1P7 <= 0 /\ arg3 == 0), cost: 2

Applied deletion
Removed the following rules: 13 14 15

Chained accelerated rules with incoming rules
Start location: __init
   0: f1_0_main_Load -> f117_0_createList_GE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ 1+arg1P0 > 0 /\ arg1 > 0), cost: 1
   9: f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=0, (arg2 > 0 /\ arg1P1 > 0 /\ arg1P1-arg1 <= 0 /\ -3+arg2P1 > 0), cost: 1
  10: f1_0_main_Load -> f232_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=0, (1+arg1-arg2P2 >= 0 /\ arg2 > 0 /\ -arg1P2+arg1 >= 0 /\ arg1P2 > 0 /\ -1+arg2P2 > 0), cost: 1
  18: f1_0_main_Load -> f117_0_createList_GE : arg2'=arg2P3, arg1'=-1, arg3'=arg3P3, (arg2 > 0 /\ arg1 > 0 /\ arg1P0 >= 0), cost: 2+arg1P0
  12: f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg2'=arg2P4, arg1'=arg1P4, arg3'=0, (-1+arg1P4 > 0 /\ arg1 > 0 /\ arg3 == 0 /\ 1+arg2P4 > 0 /\ 2-arg2+arg2P4 <= 0 /\ -arg2+arg1P4 <= 0), cost: 1
  19: f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg2'=arg2P7, arg1'=arg1P7, arg3'=1, (2-arg2+arg2P7 <= 0 /\ arg2P7 > 0 /\ arg1 > 0 /\ -2+arg1P7 > 0 /\ -arg2+arg1P7 <= 0 /\ arg3 == 0), cost: 2
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, arg3'=arg3P8, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

