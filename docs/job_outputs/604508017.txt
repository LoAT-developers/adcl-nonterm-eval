NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f1_0_main_Load -> f1761_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0), cost: 1
   2: f1_0_main_Load -> f1733_0_createTree_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (-1+arg1p3 > 0 /\ -1+arg2p3-arg1 <= 0 /\ -1+arg1p3-arg1 <= 0 /\ arg3p3 > 0 /\ -1+arg2p3 > 0 /\ 1-arg4p3 == 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
   9: f1_0_main_Load -> f1830_0_flatten_NULL : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (1+arg2p10 > 0 /\ 1+arg2p10-arg1 <= 0 /\ arg2 > 0 /\ 1+arg1p10-arg1 <= 0 /\ 1+arg1p10 > 0 /\ arg1 > 0), cost: 1
  10: f1761_0_main_InvokeMethod -> f1830_0_flatten_NULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ x59 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0), cost: 1
   1: f459_0_createTree_Return -> f1761_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (-1+arg2p2 > 0 /\ -1+arg2 > 0 /\ arg3-arg3p2 == 0 /\ -arg2p2+arg2 >= 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1-arg2+arg1p2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
   3: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (arg3 > 0 /\ arg1p4 > 0 /\ 1-arg4p4+arg4 == 0 /\ 2+arg2p4-arg2 <= 0 /\ 1+arg4 > 0 /\ arg1p4-arg1 <= 0 /\ arg2p4 > 0 /\ -1+arg3-arg3p4 == 0 /\ -2+arg2 > 0 /\ arg1 > 0), cost: 1
   4: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (1-arg4p5+arg4 == 0 /\ arg2p5 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ x28 > 0 /\ 2+arg2p5-arg2 <= 0 /\ -1+arg3-arg3p5 == 0 /\ -2+arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
   5: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (1-arg4p6+arg4 == 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ 1+arg4 > 0 /\ arg2p6 > 0 /\ -1+arg3-arg3p6 == 0 /\ x35 > 0 /\ arg1 > 0), cost: 1
   6: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (1-arg4p7+arg4 == 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p7 > 0 /\ arg2p7 > 0 /\ -1-arg3p7+arg3 == 0 /\ arg1 > 0), cost: 1
   7: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (1-arg4p8+arg4 == 0 /\ -2-arg2+arg1p8 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -2+arg2p8-arg2 <= 0 /\ -2+arg1p8-arg1 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p8-arg1 <= 0 /\ -3+arg1p8 > 0 /\ -3+arg2p8 > 0 /\ -1+arg3-arg3p8 == 0 /\ -1+arg1 > 0), cost: 1
   8: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (-2-arg2+arg2p9 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -3+arg1p9 > 0 /\ -2+arg1p9-arg2 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p9-arg1 <= 0 /\ -1+arg3-arg3p9 == 0 /\ 1-arg4p9+arg4 == 0 /\ -2+arg1p9-arg1 <= 0 /\ -3+arg2p9 > 0 /\ x54 > 0 /\ -1+arg1 > 0), cost: 1
  11: f1830_0_flatten_NULL -> f1830_0_flatten_NULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (1+arg1p12 > 0 /\ 2+arg2p12-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p12 <= 0 /\ 2+arg1p12-arg1 <= 0 /\ 1+arg2p12 > 0 /\ 2+arg1p12-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
  12: f1830_0_flatten_NULL -> f1830_0_flatten_NULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-2+arg1 > 0 /\ -2+arg1p13 > 0 /\ -2+arg2p13-arg2 <= 0 /\ -2+arg1p13-arg1 <= 0 /\ -2+arg2p13 > 0 /\ -2-arg2+arg1p13 <= 0 /\ -2+arg2p13-arg1 <= 0 /\ -2+arg2 > 0), cost: 1
  13: __init -> f1_0_main_Load : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f1_0_main_Load -> f1761_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0), cost: 1
   9: f1_0_main_Load -> f1830_0_flatten_NULL : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (1+arg2p10 > 0 /\ 1+arg2p10-arg1 <= 0 /\ arg2 > 0 /\ 1+arg1p10-arg1 <= 0 /\ 1+arg1p10 > 0 /\ arg1 > 0), cost: 1
  15: f1_0_main_Load -> f1733_0_createTree_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1, (-1+arg1p3 > 0 /\ -1+arg2p3-arg1 <= 0 /\ -1+arg1p3-arg1 <= 0 /\ arg3p3 > 0 /\ -1+arg2p3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
  22: f1761_0_main_InvokeMethod -> f1830_0_flatten_NULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0), cost: 1
  14: f459_0_createTree_Return -> f1761_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg4'=arg4p2, (-1+arg2p2 > 0 /\ -1+arg2 > 0 /\ -arg2p2+arg2 >= 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1-arg2+arg1p2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
  16: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ arg1p4 > 0 /\ 2+arg2p4-arg2 <= 0 /\ 1+arg4 > 0 /\ arg1p4-arg1 <= 0 /\ arg2p4 > 0 /\ -2+arg2 > 0 /\ arg1 > 0), cost: 1
  17: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=1+arg4, (arg2p5 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ 2+arg2p5-arg2 <= 0 /\ -2+arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
  18: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ 1+arg4 > 0 /\ arg2p6 > 0 /\ arg1 > 0), cost: 1
  19: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p7 > 0 /\ arg2p7 > 0 /\ arg1 > 0), cost: 1
  20: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg1p8 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -2+arg2p8-arg2 <= 0 /\ -2+arg1p8-arg1 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p8-arg1 <= 0 /\ -3+arg1p8 > 0 /\ -3+arg2p8 > 0 /\ -1+arg1 > 0), cost: 1
  21: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p9 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -3+arg1p9 > 0 /\ -2+arg1p9-arg2 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p9-arg1 <= 0 /\ -2+arg1p9-arg1 <= 0 /\ -3+arg2p9 > 0 /\ -1+arg1 > 0), cost: 1
  11: f1830_0_flatten_NULL -> f1830_0_flatten_NULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (1+arg1p12 > 0 /\ 2+arg2p12-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p12 <= 0 /\ 2+arg1p12-arg1 <= 0 /\ 1+arg2p12 > 0 /\ 2+arg1p12-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
  12: f1830_0_flatten_NULL -> f1830_0_flatten_NULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-2+arg1 > 0 /\ -2+arg1p13 > 0 /\ -2+arg2p13-arg2 <= 0 /\ -2+arg1p13-arg1 <= 0 /\ -2+arg2p13 > 0 /\ -2-arg2+arg1p13 <= 0 /\ -2+arg2p13-arg1 <= 0 /\ -2+arg2 > 0), cost: 1
  13: __init -> f1_0_main_Load : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, T, cost: 1

	Propagated Equalities

	Original rule:
	f459_0_createTree_Return -> f1761_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (-1+arg2p2 > 0 /\ -1+arg2 > 0 /\ arg3-arg3p2 == 0 /\ -arg2p2+arg2 >= 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1-arg2+arg1p2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f459_0_createTree_Return -> f1761_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3, arg4'=arg4p2, (0 == 0 /\ -1+arg2p2 > 0 /\ -1+arg2 > 0 /\ -arg2p2+arg2 >= 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1-arg2+arg1p2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p2 = arg3
		
	Simplified Guard

	Original rule:
	f459_0_createTree_Return -> f1761_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3, arg4'=arg4p2, (0 == 0 /\ -1+arg2p2 > 0 /\ -1+arg2 > 0 /\ -arg2p2+arg2 >= 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1-arg2+arg1p2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f459_0_createTree_Return -> f1761_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3, arg4'=arg4p2, (-1+arg2p2 > 0 /\ -1+arg2 > 0 /\ -arg2p2+arg2 >= 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1-arg2+arg1p2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f459_0_createTree_Return -> f1761_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3, arg4'=arg4p2, (-1+arg2p2 > 0 /\ -1+arg2 > 0 /\ -arg2p2+arg2 >= 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1-arg2+arg1p2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f459_0_createTree_Return -> f1761_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg4'=arg4p2, (-1+arg2p2 > 0 /\ -1+arg2 > 0 /\ -arg2p2+arg2 >= 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1-arg2+arg1p2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1733_0_createTree_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (-1+arg1p3 > 0 /\ -1+arg2p3-arg1 <= 0 /\ -1+arg1p3-arg1 <= 0 /\ arg3p3 > 0 /\ -1+arg2p3 > 0 /\ 1-arg4p3 == 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1733_0_createTree_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1, (0 == 0 /\ -1+arg1p3 > 0 /\ -1+arg2p3-arg1 <= 0 /\ -1+arg1p3-arg1 <= 0 /\ arg3p3 > 0 /\ -1+arg2p3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	
		propagated equality arg4p3 = 1
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f1733_0_createTree_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1, (0 == 0 /\ -1+arg1p3 > 0 /\ -1+arg2p3-arg1 <= 0 /\ -1+arg1p3-arg1 <= 0 /\ arg3p3 > 0 /\ -1+arg2p3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1733_0_createTree_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1, (-1+arg1p3 > 0 /\ -1+arg2p3-arg1 <= 0 /\ -1+arg1p3-arg1 <= 0 /\ arg3p3 > 0 /\ -1+arg2p3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (arg3 > 0 /\ arg1p4 > 0 /\ 1-arg4p4+arg4 == 0 /\ 2+arg2p4-arg2 <= 0 /\ 1+arg4 > 0 /\ arg1p4-arg1 <= 0 /\ arg2p4 > 0 /\ -1+arg3-arg3p4 == 0 /\ -2+arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ arg1p4 > 0 /\ 2+arg2p4-arg2 <= 0 /\ 1+arg4 > 0 /\ arg1p4-arg1 <= 0 /\ arg2p4 > 0 /\ -2+arg2 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p4 = 1+arg4
		
		propagated equality arg3p4 = -1+arg3
		
	Simplified Guard

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ arg1p4 > 0 /\ 2+arg2p4-arg2 <= 0 /\ 1+arg4 > 0 /\ arg1p4-arg1 <= 0 /\ arg2p4 > 0 /\ -2+arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ arg1p4 > 0 /\ 2+arg2p4-arg2 <= 0 /\ 1+arg4 > 0 /\ arg1p4-arg1 <= 0 /\ arg2p4 > 0 /\ -2+arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (1-arg4p5+arg4 == 0 /\ arg2p5 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ x28 > 0 /\ 2+arg2p5-arg2 <= 0 /\ -1+arg3-arg3p5 == 0 /\ -2+arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg2p5 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ x28 > 0 /\ 2+arg2p5-arg2 <= 0 /\ -2+arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p5 = 1+arg4
		
		propagated equality arg3p5 = -1+arg3
		
	Simplified Guard

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg2p5 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ x28 > 0 /\ 2+arg2p5-arg2 <= 0 /\ -2+arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=1+arg4, (arg2p5 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ x28 > 0 /\ 2+arg2p5-arg2 <= 0 /\ -2+arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=1+arg4, (arg2p5 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ x28 > 0 /\ 2+arg2p5-arg2 <= 0 /\ -2+arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=1+arg4, (arg2p5 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ 2+arg2p5-arg2 <= 0 /\ -2+arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (1-arg4p6+arg4 == 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ 1+arg4 > 0 /\ arg2p6 > 0 /\ -1+arg3-arg3p6 == 0 /\ x35 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ 1+arg4 > 0 /\ arg2p6 > 0 /\ x35 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p6 = 1+arg4
		
		propagated equality arg3p6 = -1+arg3
		
	Simplified Guard

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ 1+arg4 > 0 /\ arg2p6 > 0 /\ x35 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ 1+arg4 > 0 /\ arg2p6 > 0 /\ x35 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ 1+arg4 > 0 /\ arg2p6 > 0 /\ x35 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ 1+arg4 > 0 /\ arg2p6 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (1-arg4p7+arg4 == 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p7 > 0 /\ arg2p7 > 0 /\ -1-arg3p7+arg3 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p7 > 0 /\ arg2p7 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p7 = 1+arg4
		
		propagated equality arg3p7 = -1+arg3
		
	Simplified Guard

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p7 > 0 /\ arg2p7 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p7 > 0 /\ arg2p7 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (1-arg4p8+arg4 == 0 /\ -2-arg2+arg1p8 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -2+arg2p8-arg2 <= 0 /\ -2+arg1p8-arg1 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p8-arg1 <= 0 /\ -3+arg1p8 > 0 /\ -3+arg2p8 > 0 /\ -1+arg3-arg3p8 == 0 /\ -1+arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ -2-arg2+arg1p8 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -2+arg2p8-arg2 <= 0 /\ -2+arg1p8-arg1 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p8-arg1 <= 0 /\ -3+arg1p8 > 0 /\ -3+arg2p8 > 0 /\ -1+arg1 > 0), cost: 1
	
		propagated equality arg4p8 = 1+arg4
		
		propagated equality arg3p8 = -1+arg3
		
	Simplified Guard

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ -2-arg2+arg1p8 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -2+arg2p8-arg2 <= 0 /\ -2+arg1p8-arg1 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p8-arg1 <= 0 /\ -3+arg1p8 > 0 /\ -3+arg2p8 > 0 /\ -1+arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg1p8 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -2+arg2p8-arg2 <= 0 /\ -2+arg1p8-arg1 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p8-arg1 <= 0 /\ -3+arg1p8 > 0 /\ -3+arg2p8 > 0 /\ -1+arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (-2-arg2+arg2p9 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -3+arg1p9 > 0 /\ -2+arg1p9-arg2 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p9-arg1 <= 0 /\ -1+arg3-arg3p9 == 0 /\ 1-arg4p9+arg4 == 0 /\ -2+arg1p9-arg1 <= 0 /\ -3+arg2p9 > 0 /\ x54 > 0 /\ -1+arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ -2-arg2+arg2p9 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -3+arg1p9 > 0 /\ -2+arg1p9-arg2 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p9-arg1 <= 0 /\ -2+arg1p9-arg1 <= 0 /\ -3+arg2p9 > 0 /\ x54 > 0 /\ -1+arg1 > 0), cost: 1
	
		propagated equality arg3p9 = -1+arg3
		
		propagated equality arg4p9 = 1+arg4
		
	Simplified Guard

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, (0 == 0 /\ -2-arg2+arg2p9 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -3+arg1p9 > 0 /\ -2+arg1p9-arg2 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p9-arg1 <= 0 /\ -2+arg1p9-arg1 <= 0 /\ -3+arg2p9 > 0 /\ x54 > 0 /\ -1+arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p9 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -3+arg1p9 > 0 /\ -2+arg1p9-arg2 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p9-arg1 <= 0 /\ -2+arg1p9-arg1 <= 0 /\ -3+arg2p9 > 0 /\ x54 > 0 /\ -1+arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p9 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -3+arg1p9 > 0 /\ -2+arg1p9-arg2 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p9-arg1 <= 0 /\ -2+arg1p9-arg1 <= 0 /\ -3+arg2p9 > 0 /\ x54 > 0 /\ -1+arg1 > 0), cost: 1
	New rule:
	f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p9 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -3+arg1p9 > 0 /\ -2+arg1p9-arg2 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p9-arg1 <= 0 /\ -2+arg1p9-arg1 <= 0 /\ -3+arg2p9 > 0 /\ -1+arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1761_0_main_InvokeMethod -> f1830_0_flatten_NULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ x59 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1761_0_main_InvokeMethod -> f1830_0_flatten_NULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0), cost: 1

Step with 13

	Trace

	13[T]
	
	Blocked

	[{}, {}]

Step with 0

	Trace

	13[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 22

	Trace

	13[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0)], 22[(arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 11

	Trace

	13[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0)], 22[(arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0)], 11[(1+arg1p12 > 0 /\ 2+arg2p12-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p12 <= 0 /\ 2+arg1p12-arg1 <= 0 /\ 1+arg2p12 > 0 /\ 2+arg1p12-arg2 <= 0 /\ -1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 11

	Trace

	13[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0)], 22[(arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0)], 11[(1+arg1p12 > 0 /\ 2+arg2p12-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p12 <= 0 /\ 2+arg1p12-arg1 <= 0 /\ 1+arg2p12 > 0 /\ 2+arg1p12-arg2 <= 0 /\ -1+arg1 > 0)], 11[(1+arg1p12 > 0 /\ 2+arg2p12-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p12 <= 0 /\ 2+arg1p12-arg1 <= 0 /\ 1+arg2p12 > 0 /\ 2+arg1p12-arg2 <= 0 /\ -1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Covered

	Trace

	13[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0)], 22[(arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0)], 11[(1+arg1p12 > 0 /\ 2+arg2p12-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p12 <= 0 /\ 2+arg1p12-arg1 <= 0 /\ 1+arg2p12 > 0 /\ 2+arg1p12-arg2 <= 0 /\ -1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {11[T]}]

Step with 12

	Trace

	13[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0)], 22[(arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0)], 11[(1+arg1p12 > 0 /\ 2+arg2p12-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p12 <= 0 /\ 2+arg1p12-arg1 <= 0 /\ 1+arg2p12 > 0 /\ 2+arg1p12-arg2 <= 0 /\ -1+arg1 > 0)], 12[(-2+arg1 > 0 /\ -2+arg1p13 > 0 /\ -2+arg2p13-arg2 <= 0 /\ -2+arg1p13-arg1 <= 0 /\ -2+arg2p13 > 0 /\ -2-arg2+arg1p13 <= 0 /\ -2+arg2p13-arg1 <= 0 /\ -2+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {11[T]}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f1_0_main_Load -> f1761_0_main_InvokeMethod : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0), cost: 1
   9: f1_0_main_Load -> f1830_0_flatten_NULL : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (1+arg2p10 > 0 /\ 1+arg2p10-arg1 <= 0 /\ arg2 > 0 /\ 1+arg1p10-arg1 <= 0 /\ 1+arg1p10 > 0 /\ arg1 > 0), cost: 1
  15: f1_0_main_Load -> f1733_0_createTree_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=1, (-1+arg1p3 > 0 /\ -1+arg2p3-arg1 <= 0 /\ -1+arg1p3-arg1 <= 0 /\ arg3p3 > 0 /\ -1+arg2p3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
  22: f1761_0_main_InvokeMethod -> f1830_0_flatten_NULL : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0), cost: 1
  14: f459_0_createTree_Return -> f1761_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg4'=arg4p2, (-1+arg2p2 > 0 /\ -1+arg2 > 0 /\ -arg2p2+arg2 >= 0 /\ arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ 1-arg2+arg1p2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
  16: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ arg1p4 > 0 /\ 2+arg2p4-arg2 <= 0 /\ 1+arg4 > 0 /\ arg1p4-arg1 <= 0 /\ arg2p4 > 0 /\ -2+arg2 > 0 /\ arg1 > 0), cost: 1
  17: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=-1+arg3, arg4'=1+arg4, (arg2p5 > 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ 2+arg2p5-arg2 <= 0 /\ -2+arg2 > 0 /\ arg1p5 > 0 /\ arg1p5-arg1 <= 0 /\ arg1 > 0), cost: 1
  18: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p6, arg2'=arg2p6, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -1+arg2 > 0 /\ arg1p6 > 0 /\ 1+arg4 > 0 /\ arg2p6 > 0 /\ arg1 > 0), cost: 1
  19: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=-1+arg3, arg4'=1+arg4, (arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p7 > 0 /\ arg2p7 > 0 /\ arg1 > 0), cost: 1
  20: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg1p8 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -2+arg2p8-arg2 <= 0 /\ -2+arg1p8-arg1 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p8-arg1 <= 0 /\ -3+arg1p8 > 0 /\ -3+arg2p8 > 0 /\ -1+arg1 > 0), cost: 1
  21: f1733_0_createTree_LE -> f1733_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, (-2-arg2+arg2p9 <= 0 /\ arg3 > 0 /\ -1+arg2 > 0 /\ -3+arg1p9 > 0 /\ -2+arg1p9-arg2 <= 0 /\ 1+arg4 > 0 /\ -2+arg2p9-arg1 <= 0 /\ -2+arg1p9-arg1 <= 0 /\ -3+arg2p9 > 0 /\ -1+arg1 > 0), cost: 1
  11: f1830_0_flatten_NULL -> f1830_0_flatten_NULL : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (1+arg1p12 > 0 /\ 2+arg2p12-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p12 <= 0 /\ 2+arg1p12-arg1 <= 0 /\ 1+arg2p12 > 0 /\ 2+arg1p12-arg2 <= 0 /\ -1+arg1 > 0), cost: 1
  12: f1830_0_flatten_NULL -> f1830_0_flatten_NULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-2+arg1 > 0 /\ -2+arg1p13 > 0 /\ -2+arg2p13-arg2 <= 0 /\ -2+arg1p13-arg1 <= 0 /\ -2+arg2p13 > 0 /\ -2-arg2+arg1p13 <= 0 /\ -2+arg2p13-arg1 <= 0 /\ -2+arg2 > 0), cost: 1
  23: f1830_0_flatten_NULL -> LoAT_sink : (-2+arg1 > 0 /\ -arg1p13+arg1 <= 0 /\ -arg2p13+arg2 <= 0 /\ -2+arg1p13 > 0 /\ 2-arg2p13+arg2 >= 0 /\ 2-arg1p13+arg1 >= 0 /\ -2+arg2p13 > 0 /\ 2+arg2-arg1p13 >= 0 /\ 2-arg2p13+arg1 >= 0 /\ -2+arg2 > 0), cost: NONTERM
  13: __init -> f1_0_main_Load : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	f1830_0_flatten_NULL -> f1830_0_flatten_NULL : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-2+arg1 > 0 /\ -2+arg1p13 > 0 /\ -2+arg2p13-arg2 <= 0 /\ -2+arg1p13-arg1 <= 0 /\ -2+arg2p13 > 0 /\ -2-arg2+arg1p13 <= 0 /\ -2+arg2p13-arg1 <= 0 /\ -2+arg2 > 0), cost: 1
	New rule:
	f1830_0_flatten_NULL -> LoAT_sink : (-2+arg1 > 0 /\ -arg1p13+arg1 <= 0 /\ -arg2p13+arg2 <= 0 /\ -2+arg1p13 > 0 /\ 2-arg2p13+arg2 >= 0 /\ 2-arg1p13+arg1 >= 0 /\ -2+arg2p13 > 0 /\ 2+arg2-arg1p13 >= 0 /\ 2-arg2p13+arg1 >= 0 /\ -2+arg2 > 0), cost: NONTERM

		-2+arg1 > 0 [0]: eventual decrease yields (-2+arg1 > 0 /\ -2+arg1p13 > 0)
		
		-2+arg1 > 0 [1]: eventual increase yields (-2+arg1 > 0 /\ -arg1p13+arg1 <= 0)
		
		-2+arg1p13 > 0 [0]: monotonic increase yields -2+arg1p13 > 0
		
		2-arg2p13+arg2 >= 0 [0]: monotonic increase yields 2-arg2p13+arg2 >= 0
		
		2-arg1p13+arg1 >= 0 [0]: monotonic increase yields 2-arg1p13+arg1 >= 0
		
		-2+arg2p13 > 0 [0]: monotonic increase yields -2+arg2p13 > 0
		
		2+arg2-arg1p13 >= 0 [0]: eventual decrease yields (2+arg2-arg1p13 >= 0 /\ 2+arg2p13-arg1p13 >= 0)
		
		2+arg2-arg1p13 >= 0 [1]: eventual increase yields (-arg2p13+arg2 <= 0 /\ 2+arg2-arg1p13 >= 0)
		
		2-arg2p13+arg1 >= 0 [0]: eventual decrease yields (2-arg2p13+arg1 >= 0 /\ 2-arg2p13+arg1p13 >= 0)
		
		2-arg2p13+arg1 >= 0 [1]: eventual increase yields (-arg1p13+arg1 <= 0 /\ 2-arg2p13+arg1 >= 0)
		
		-2+arg2 > 0 [0]: eventual decrease yields (-2+arg2p13 > 0 /\ -2+arg2 > 0)
		
		-2+arg2 > 0 [1]: eventual increase yields (-arg2p13+arg2 <= 0 /\ -2+arg2 > 0)
		
		Replacement map: {-2+arg1 > 0 -> (-2+arg1 > 0 /\ -arg1p13+arg1 <= 0), -2+arg1p13 > 0 -> -2+arg1p13 > 0, 2-arg2p13+arg2 >= 0 -> 2-arg2p13+arg2 >= 0, 2-arg1p13+arg1 >= 0 -> 2-arg1p13+arg1 >= 0, -2+arg2p13 > 0 -> -2+arg2p13 > 0, 2+arg2-arg1p13 >= 0 -> (-arg2p13+arg2 <= 0 /\ 2+arg2-arg1p13 >= 0), 2-arg2p13+arg1 >= 0 -> (-arg1p13+arg1 <= 0 /\ 2-arg2p13+arg1 >= 0), -2+arg2 > 0 -> (-arg2p13+arg2 <= 0 /\ -2+arg2 > 0)}

Step with 23

	Trace

	13[T], 0[(arg1p1-arg1 <= 0 /\ arg1p1 > 0 /\ arg2p1 > 0 /\ arg1 > 0)], 22[(arg1p11 > 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ arg2p11-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1p11-arg2 <= 0 /\ arg1 > 0)], 11[(1+arg1p12 > 0 /\ 2+arg2p12-arg1 <= 0 /\ -1+arg2 > 0 /\ 2-arg2+arg2p12 <= 0 /\ 2+arg1p12-arg1 <= 0 /\ 1+arg2p12 > 0 /\ 2+arg1p12-arg2 <= 0 /\ -1+arg1 > 0)], 23[(-2+arg1 > 0 /\ -arg1p13+arg1 <= 0 /\ -arg2p13+arg2 <= 0 /\ -2+arg1p13 > 0 /\ 2-arg2p13+arg2 >= 0 /\ 2-arg1p13+arg1 >= 0 /\ -2+arg2p13 > 0 /\ 2+arg2-arg1p13 >= 0 /\ 2-arg2p13+arg1 >= 0 /\ -2+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {11[T]}, {23[T]}]

Refute

	Counterexample

	[ arg1=1 arg2=0 arg3=0 arg4=0 ] 13 [ arg1=1 arg2=5 arg3=-1 arg4=0 ] 0 [ arg1=5 arg2=5 arg3=0 arg4=0 ] 22 [ arg1=3 arg2=3 arg3=0 arg4=0 ] 11 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 ] 23
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
