NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, true, par{arg1 -> 3}>
<l2, l2, (arg1 > 5), par{arg1 -> (arg1 + 3)}>
<l2, l2, (arg1 < 11) /\ (arg1 < 6) /\ (arg1 > 2), par{arg1 -> (arg1 + 1)}>
<l3, l1, true, par{arg1 -> undef4}>

Fresh variables:
undef4, 

Undef variables:
undef4, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = 3)>
<l2, l2, (arg1 > 5), par{arg1 -> (arg1 + 3)}>
<l2, l2, (arg1 < 11) /\ (arg1 < 6) /\ (arg1 > 2), par{arg1 -> (arg1 + 1)}>

Fresh variables:
undef4, 

Undef variables:
undef4, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
<l2, l2, 3 <= arg1 /\ arg1 <= 5, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l2, arg1 = 3, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.269702

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001403s
[33mRanking function: [36m6 - arg1[0m
New Graphs: 
Transitions:
<l2, l2, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000384s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001177s
Trying to remove transition: <l2, l2, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004338s
Time used: 0.004211
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001504s
Time used: 4.00093
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.013587s
Time used: 4.00064
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.012787s
Time used: 1.00126
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.022744s
Time used: 0.008202
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000904s
Time used: 1.00081

LOG: SAT solveNonLinear - Elapsed time: 1.023648s
Cost: 1; Total time: 1.00901
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: 0 <= arg1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 3 <= arg1 /\ arg1 <= 5, {arg1 -> 1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - arg1[0m
New Graphs: 
Transitions:
<l2, l2, 50001 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000449s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001319s
Trying to remove transition: <l2, l2, 50001 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.004915s
Time used: 0.004788
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001794s
Time used: 4.00124
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.014105s
Time used: 4.00117
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.010779s
Time used: 1.00049
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.008042s
Time used: 4.00127
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, arg1 = 3, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, arg1 = 3, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.015884s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.015993s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>
<l2, l2, 3 <= arg1 /\ arg1 <= 5, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg1 <= 2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.010554s
Time used: 0.010449

LOG: SAT solveNonLinear - Elapsed time: 0.010554s
Cost: 0; Total time: 0.010449
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 3 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 6 <= arg1, {arg1 -> 3 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 3 <= arg1 /\ arg1 <= 5, {arg1 -> 1 + arg1, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 3 <= arg1, 
OPEN EXITS: 
<l2, end, 3 <= arg1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, arg1 = 3, {all remain the same}>
Conditions: 3 <= arg1, 
OPEN EXITS: 
<l0, l2, arg1 = 3, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
