YES

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> 0, main_y -> 0}>
<l1, l2, true>
<l2, l10, not((main_y >= 0))>
<l2, l3, (main_y >= 0)>
<l3, l4, (main_x <= 50)>
<l3, l6, not((main_x <= 50))>
<l4, l5, true, seq{main_y -> (main_y + 1)}>
<l5, l8, true>
<l6, l7, true, seq{main_y -> (main_y - 1)}>
<l7, l8, true>
<l8, l9, true, seq{main_x -> (main_x + 1)}>
<l9, l2, true>
<l10, l11, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> 0, main_y -> 0}>
<l1, l2, true>
<l2, l3, (main_y >= 0)>
<l2, l10, not((main_y >= 0))>
<l3, l4, (main_x <= 50)>
<l3, l6, not((main_x <= 50))>
<l4, l5, true, seq{main_y -> (main_y + 1)}>
<l5, l8, true>
<l6, l7, true, seq{main_y -> (main_y - 1)}>
<l7, l8, true>
<l8, l9, true, seq{main_x -> (main_x + 1)}>
<l9, l2, true>
<l10, l11, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
11, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [1 functions]:
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [4 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 12, col: 1>
main | function | [integer, ()] | <line: 14, col: 1>
x | local variable | integer | <line: 15, col: 5> | <line: 16, col: 2> <line: 19, col: 7> <line: 24, col: 3> <line: 24, col: 7>
y | local variable | integer | <line: 15, col: 5> | <line: 17, col: 5> <line: 18, col: 9> <line: 20, col: 4> <line: 20, col: 8> <line: 22, col: 4> <line: 22, col: 8>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = 0) /\ (main_y = 0)>
<l2, l2, (main_y >= 0) /\ (main_x <= 50), par{main_x -> (main_x + 1), main_y -> (main_y + 1)}>
<l2, l2, (main_y >= 0) /\ not((main_x <= 50)), par{main_x -> (main_x + 1), main_y -> (main_y - 1)}>
<l2, l11, not((main_y >= 0))>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
11, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 0 <= main_y /\ main_x <= 50, {main_x -> 1 + main_x, main_y -> 1 + main_y, rest remain the same}>
<l2, l2, 0 <= main_y /\ 51 <= main_x, {main_x -> 1 + main_x, main_y -> -1 + main_y, rest remain the same}>
Variables:
main_x, main_y

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = 0 /\ main_y = 0, {all remain the same}>

Graph 2
<l2, l11, 1 + main_y <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 11 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.028078

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001024s
[33mRanking function: [36m51 - main_x[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= main_y /\ 51 <= main_x, {main_x -> 1 + main_x, main_y -> -1 + main_y, rest remain the same}>
Variables:
main_x, main_y
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000282s
[33mRanking function: [36mmain_y[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l11}...
No cycles found.

[32mProgram Terminates[0m
