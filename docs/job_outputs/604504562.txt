WORST_CASE(Omega(0),?)

Initial ITS
Start location: l9
   0: l0 -> l1 : n^0'=n^post0, i2^0'=i2^post0, i4^0'=i4^post0, i1^0'=i1^post0, i3^0'=i3^post0, (-i3^post0+i3^0 == 0 /\ n^0-n^post0 == 0 /\ 1-i4^0 <= 0 /\ i1^0-i1^post0 == 0 /\ -i2^post0+i2^0 == 0 /\ 1-i4^0+i4^post0 == 0), cost: 1
   1: l1 -> l0 : n^0'=n^post1, i2^0'=i2^post1, i4^0'=i4^post1, i1^0'=i1^post1, i3^0'=i3^post1, (-i1^post1+i1^0 == 0 /\ -i4^post1+i4^0 == 0 /\ -i3^post1+i3^0 == 0 /\ i2^0-i2^post1 == 0 /\ n^0-n^post1 == 0), cost: 1
   2: l2 -> l0 : n^0'=n^post2, i2^0'=i2^post2, i4^0'=i4^post2, i1^0'=i1^post2, i3^0'=i3^post2, (n^0-n^post2 == 0 /\ -i2^post2+i2^0 == 0 /\ -i3^post2+i3^0 == 0 /\ n^0-i3^0 <= 0 /\ i1^0-i1^post2 == 0 /\ i4^post2-i3^0 == 0), cost: 1
   3: l2 -> l3 : n^0'=n^post3, i2^0'=i2^post3, i4^0'=i4^post3, i1^0'=i1^post3, i3^0'=i3^post3, (n^0-n^post3 == 0 /\ 1-n^0+i3^0 <= 0 /\ i2^0-i2^post3 == 0 /\ -1+i3^post3-i3^0 == 0 /\ i4^0-i4^post3 == 0 /\ -i1^post3+i1^0 == 0), cost: 1
   4: l3 -> l2 : n^0'=n^post4, i2^0'=i2^post4, i4^0'=i4^post4, i1^0'=i1^post4, i3^0'=i3^post4, (i1^0-i1^post4 == 0 /\ i4^0-i4^post4 == 0 /\ -i3^post4+i3^0 == 0 /\ i2^0-i2^post4 == 0 /\ n^0-n^post4 == 0), cost: 1
   5: l4 -> l2 : n^0'=n^post5, i2^0'=i2^post5, i4^0'=i4^post5, i1^0'=i1^post5, i3^0'=i3^post5, (i2^0 <= 0 /\ n^0-n^post5 == 0 /\ -i4^post5+i4^0 == 0 /\ -i1^post5+i1^0 == 0 /\ -i2^0+i3^post5 == 0 /\ i2^0-i2^post5 == 0), cost: 1
   6: l4 -> l5 : n^0'=n^post6, i2^0'=i2^post6, i4^0'=i4^post6, i1^0'=i1^post6, i3^0'=i3^post6, (-i3^post6+i3^0 == 0 /\ i4^0-i4^post6 == 0 /\ n^0-n^post6 == 0 /\ 1-i2^0 <= 0 /\ 1-i2^0+i2^post6 == 0 /\ -i1^post6+i1^0 == 0), cost: 1
   7: l5 -> l4 : n^0'=n^post7, i2^0'=i2^post7, i4^0'=i4^post7, i1^0'=i1^post7, i3^0'=i3^post7, (-i4^post7+i4^0 == 0 /\ i3^0-i3^post7 == 0 /\ i1^0-i1^post7 == 0 /\ i2^0-i2^post7 == 0 /\ n^0-n^post7 == 0), cost: 1
   8: l6 -> l4 : n^0'=n^post8, i2^0'=i2^post8, i4^0'=i4^post8, i1^0'=i1^post8, i3^0'=i3^post8, (-i3^post8+i3^0 == 0 /\ i2^post8-i1^0 == 0 /\ i4^0-i4^post8 == 0 /\ n^0-n^post8 == 0 /\ n^0-i1^0 <= 0 /\ -i1^post8+i1^0 == 0), cost: 1
   9: l6 -> l7 : n^0'=n^post9, i2^0'=i2^post9, i4^0'=i4^post9, i1^0'=i1^post9, i3^0'=i3^post9, (-1-i1^0+i1^post9 == 0 /\ -i4^post9+i4^0 == 0 /\ i3^0-i3^post9 == 0 /\ i2^0-i2^post9 == 0 /\ 1-n^0+i1^0 <= 0 /\ n^0-n^post9 == 0), cost: 1
  10: l7 -> l6 : n^0'=n^post10, i2^0'=i2^post10, i4^0'=i4^post10, i1^0'=i1^post10, i3^0'=i3^post10, (-i1^post10+i1^0 == 0 /\ i4^0-i4^post10 == 0 /\ n^0-n^post10 == 0 /\ i2^0-i2^post10 == 0 /\ -i3^post10+i3^0 == 0), cost: 1
  11: l8 -> l6 : n^0'=n^post11, i2^0'=i2^post11, i4^0'=i4^post11, i1^0'=i1^post11, i3^0'=i3^post11, (-i2^post11+i2^0 == 0 /\ -i3^post11+i3^0 == 0 /\ i1^0-i1^post11 == 0 /\ i4^0-i4^post11 == 0 /\ n^0-n^post11 == 0), cost: 1
  12: l9 -> l8 : n^0'=n^post12, i2^0'=i2^post12, i4^0'=i4^post12, i1^0'=i1^post12, i3^0'=i3^post12, (-i4^post12+i4^0 == 0 /\ i2^0-i2^post12 == 0 /\ n^0-n^post12 == 0 /\ -i1^post12+i1^0 == 0 /\ -i3^post12+i3^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : n^0'=n^post0, i2^0'=i2^post0, i4^0'=i4^post0, i1^0'=i1^post0, i3^0'=i3^post0, (-i3^post0+i3^0 == 0 /\ n^0-n^post0 == 0 /\ 1-i4^0 <= 0 /\ i1^0-i1^post0 == 0 /\ -i2^post0+i2^0 == 0 /\ 1-i4^0+i4^post0 == 0), cost: 1
New rule:
l0 -> l1 : i4^0'=-1+i4^0, -1+i4^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : n^0'=n^post1, i2^0'=i2^post1, i4^0'=i4^post1, i1^0'=i1^post1, i3^0'=i3^post1, (-i1^post1+i1^0 == 0 /\ -i4^post1+i4^0 == 0 /\ -i3^post1+i3^0 == 0 /\ i2^0-i2^post1 == 0 /\ n^0-n^post1 == 0), cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : n^0'=n^post2, i2^0'=i2^post2, i4^0'=i4^post2, i1^0'=i1^post2, i3^0'=i3^post2, (n^0-n^post2 == 0 /\ -i2^post2+i2^0 == 0 /\ -i3^post2+i3^0 == 0 /\ n^0-i3^0 <= 0 /\ i1^0-i1^post2 == 0 /\ i4^post2-i3^0 == 0), cost: 1
New rule:
l2 -> l0 : i4^0'=i3^0, n^0-i3^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l3 : n^0'=n^post3, i2^0'=i2^post3, i4^0'=i4^post3, i1^0'=i1^post3, i3^0'=i3^post3, (n^0-n^post3 == 0 /\ 1-n^0+i3^0 <= 0 /\ i2^0-i2^post3 == 0 /\ -1+i3^post3-i3^0 == 0 /\ i4^0-i4^post3 == 0 /\ -i1^post3+i1^0 == 0), cost: 1
New rule:
l2 -> l3 : i3^0'=1+i3^0, 1-n^0+i3^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : n^0'=n^post4, i2^0'=i2^post4, i4^0'=i4^post4, i1^0'=i1^post4, i3^0'=i3^post4, (i1^0-i1^post4 == 0 /\ i4^0-i4^post4 == 0 /\ -i3^post4+i3^0 == 0 /\ i2^0-i2^post4 == 0 /\ n^0-n^post4 == 0), cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l2 : n^0'=n^post5, i2^0'=i2^post5, i4^0'=i4^post5, i1^0'=i1^post5, i3^0'=i3^post5, (i2^0 <= 0 /\ n^0-n^post5 == 0 /\ -i4^post5+i4^0 == 0 /\ -i1^post5+i1^0 == 0 /\ -i2^0+i3^post5 == 0 /\ i2^0-i2^post5 == 0), cost: 1
New rule:
l4 -> l2 : i3^0'=i2^0, i2^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : n^0'=n^post6, i2^0'=i2^post6, i4^0'=i4^post6, i1^0'=i1^post6, i3^0'=i3^post6, (-i3^post6+i3^0 == 0 /\ i4^0-i4^post6 == 0 /\ n^0-n^post6 == 0 /\ 1-i2^0 <= 0 /\ 1-i2^0+i2^post6 == 0 /\ -i1^post6+i1^0 == 0), cost: 1
New rule:
l4 -> l5 : i2^0'=-1+i2^0, -1+i2^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : n^0'=n^post7, i2^0'=i2^post7, i4^0'=i4^post7, i1^0'=i1^post7, i3^0'=i3^post7, (-i4^post7+i4^0 == 0 /\ i3^0-i3^post7 == 0 /\ i1^0-i1^post7 == 0 /\ i2^0-i2^post7 == 0 /\ n^0-n^post7 == 0), cost: 1
New rule:
l5 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l4 : n^0'=n^post8, i2^0'=i2^post8, i4^0'=i4^post8, i1^0'=i1^post8, i3^0'=i3^post8, (-i3^post8+i3^0 == 0 /\ i2^post8-i1^0 == 0 /\ i4^0-i4^post8 == 0 /\ n^0-n^post8 == 0 /\ n^0-i1^0 <= 0 /\ -i1^post8+i1^0 == 0), cost: 1
New rule:
l6 -> l4 : i2^0'=i1^0, n^0-i1^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l7 : n^0'=n^post9, i2^0'=i2^post9, i4^0'=i4^post9, i1^0'=i1^post9, i3^0'=i3^post9, (-1-i1^0+i1^post9 == 0 /\ -i4^post9+i4^0 == 0 /\ i3^0-i3^post9 == 0 /\ i2^0-i2^post9 == 0 /\ 1-n^0+i1^0 <= 0 /\ n^0-n^post9 == 0), cost: 1
New rule:
l6 -> l7 : i1^0'=1+i1^0, 1-n^0+i1^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l6 : n^0'=n^post10, i2^0'=i2^post10, i4^0'=i4^post10, i1^0'=i1^post10, i3^0'=i3^post10, (-i1^post10+i1^0 == 0 /\ i4^0-i4^post10 == 0 /\ n^0-n^post10 == 0 /\ i2^0-i2^post10 == 0 /\ -i3^post10+i3^0 == 0), cost: 1
New rule:
l7 -> l6 : TRUE, cost: 1

Applied preprocessing
Original rule:
l8 -> l6 : n^0'=n^post11, i2^0'=i2^post11, i4^0'=i4^post11, i1^0'=i1^post11, i3^0'=i3^post11, (-i2^post11+i2^0 == 0 /\ -i3^post11+i3^0 == 0 /\ i1^0-i1^post11 == 0 /\ i4^0-i4^post11 == 0 /\ n^0-n^post11 == 0), cost: 1
New rule:
l8 -> l6 : TRUE, cost: 1

Applied preprocessing
Original rule:
l9 -> l8 : n^0'=n^post12, i2^0'=i2^post12, i4^0'=i4^post12, i1^0'=i1^post12, i3^0'=i3^post12, (-i4^post12+i4^0 == 0 /\ i2^0-i2^post12 == 0 /\ n^0-n^post12 == 0 /\ -i1^post12+i1^0 == 0 /\ -i3^post12+i3^0 == 0), cost: 1
New rule:
l9 -> l8 : TRUE, cost: 1

Simplified rules
Start location: l9
  13: l0 -> l1 : i4^0'=-1+i4^0, -1+i4^0 >= 0, cost: 1
  14: l1 -> l0 : TRUE, cost: 1
  15: l2 -> l0 : i4^0'=i3^0, n^0-i3^0 <= 0, cost: 1
  16: l2 -> l3 : i3^0'=1+i3^0, 1-n^0+i3^0 <= 0, cost: 1
  17: l3 -> l2 : TRUE, cost: 1
  18: l4 -> l2 : i3^0'=i2^0, i2^0 <= 0, cost: 1
  19: l4 -> l5 : i2^0'=-1+i2^0, -1+i2^0 >= 0, cost: 1
  20: l5 -> l4 : TRUE, cost: 1
  21: l6 -> l4 : i2^0'=i1^0, n^0-i1^0 <= 0, cost: 1
  22: l6 -> l7 : i1^0'=1+i1^0, 1-n^0+i1^0 <= 0, cost: 1
  23: l7 -> l6 : TRUE, cost: 1
  24: l8 -> l6 : TRUE, cost: 1
  25: l9 -> l8 : TRUE, cost: 1


Eliminating location l8 by chaining:

Applied chaining
First rule:
l9 -> l8 : TRUE, cost: 1
Second rule:
l8 -> l6 : TRUE, cost: 1
New rule:
l9 -> l6 : TRUE, cost: 2

Applied deletion
Removed the following rules: 24 25

Eliminating location l7 by chaining:

Applied chaining
First rule:
l6 -> l7 : i1^0'=1+i1^0, 1-n^0+i1^0 <= 0, cost: 1
Second rule:
l7 -> l6 : TRUE, cost: 1
New rule:
l6 -> l6 : i1^0'=1+i1^0, 1-n^0+i1^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 22 23

Eliminating location l5 by chaining:

Applied chaining
First rule:
l4 -> l5 : i2^0'=-1+i2^0, -1+i2^0 >= 0, cost: 1
Second rule:
l5 -> l4 : TRUE, cost: 1
New rule:
l4 -> l4 : i2^0'=-1+i2^0, -1+i2^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 19 20

Eliminating location l3 by chaining:

Applied chaining
First rule:
l2 -> l3 : i3^0'=1+i3^0, 1-n^0+i3^0 <= 0, cost: 1
Second rule:
l3 -> l2 : TRUE, cost: 1
New rule:
l2 -> l2 : i3^0'=1+i3^0, 1-n^0+i3^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 16 17

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : i4^0'=-1+i4^0, -1+i4^0 >= 0, cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : i4^0'=-1+i4^0, -1+i4^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 13 14

Eliminated locations on linear paths
Start location: l9
  30: l0 -> l0 : i4^0'=-1+i4^0, -1+i4^0 >= 0, cost: 2
  15: l2 -> l0 : i4^0'=i3^0, n^0-i3^0 <= 0, cost: 1
  29: l2 -> l2 : i3^0'=1+i3^0, 1-n^0+i3^0 <= 0, cost: 2
  18: l4 -> l2 : i3^0'=i2^0, i2^0 <= 0, cost: 1
  28: l4 -> l4 : i2^0'=-1+i2^0, -1+i2^0 >= 0, cost: 2
  21: l6 -> l4 : i2^0'=i1^0, n^0-i1^0 <= 0, cost: 1
  27: l6 -> l6 : i1^0'=1+i1^0, 1-n^0+i1^0 <= 0, cost: 2
  26: l9 -> l6 : TRUE, cost: 2


Applied acceleration
Original rule:
l0 -> l0 : i4^0'=-1+i4^0, -1+i4^0 >= 0, cost: 2
New rule:
l0 -> l0 : i4^0'=i4^0-n, (n >= 0 /\ i4^0-n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_IHjIFc.txt

Applied instantiation
Original rule:
l0 -> l0 : i4^0'=i4^0-n, (n >= 0 /\ i4^0-n >= 0), cost: 2*n
New rule:
l0 -> l0 : i4^0'=0, (0 >= 0 /\ i4^0 >= 0), cost: 2*i4^0

Applied simplification
Original rule:
l0 -> l0 : i4^0'=0, (0 >= 0 /\ i4^0 >= 0), cost: 2*i4^0
New rule:
l0 -> l0 : i4^0'=0, i4^0 >= 0, cost: 2*i4^0

Applied deletion
Removed the following rules: 30

Applied acceleration
Original rule:
l2 -> l2 : i3^0'=1+i3^0, 1-n^0+i3^0 <= 0, cost: 2
New rule:
l2 -> l2 : i3^0'=i3^0+n0, (n^0-i3^0-n0 >= 0 /\ n0 >= 0), cost: 2*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_DNdefF.txt

Applied instantiation
Original rule:
l2 -> l2 : i3^0'=i3^0+n0, (n^0-i3^0-n0 >= 0 /\ n0 >= 0), cost: 2*n0
New rule:
l2 -> l2 : i3^0'=n^0, (0 >= 0 /\ n^0-i3^0 >= 0), cost: 2*n^0-2*i3^0

Applied simplification
Original rule:
l2 -> l2 : i3^0'=n^0, (0 >= 0 /\ n^0-i3^0 >= 0), cost: 2*n^0-2*i3^0
New rule:
l2 -> l2 : i3^0'=n^0, n^0-i3^0 >= 0, cost: 2*n^0-2*i3^0

Applied deletion
Removed the following rules: 29

Applied acceleration
Original rule:
l4 -> l4 : i2^0'=-1+i2^0, -1+i2^0 >= 0, cost: 2
New rule:
l4 -> l4 : i2^0'=i2^0-n1, (n1 >= 0 /\ i2^0-n1 >= 0), cost: 2*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PfPIBp.txt

Applied instantiation
Original rule:
l4 -> l4 : i2^0'=i2^0-n1, (n1 >= 0 /\ i2^0-n1 >= 0), cost: 2*n1
New rule:
l4 -> l4 : i2^0'=0, (0 >= 0 /\ i2^0 >= 0), cost: 2*i2^0

Applied simplification
Original rule:
l4 -> l4 : i2^0'=0, (0 >= 0 /\ i2^0 >= 0), cost: 2*i2^0
New rule:
l4 -> l4 : i2^0'=0, i2^0 >= 0, cost: 2*i2^0

Applied deletion
Removed the following rules: 28

Applied acceleration
Original rule:
l6 -> l6 : i1^0'=1+i1^0, 1-n^0+i1^0 <= 0, cost: 2
New rule:
l6 -> l6 : i1^0'=n2+i1^0, (n2 >= 0 /\ n^0-n2-i1^0 >= 0), cost: 2*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lDjpcc.txt

Applied instantiation
Original rule:
l6 -> l6 : i1^0'=n2+i1^0, (n2 >= 0 /\ n^0-n2-i1^0 >= 0), cost: 2*n2
New rule:
l6 -> l6 : i1^0'=n^0, (0 >= 0 /\ n^0-i1^0 >= 0), cost: 2*n^0-2*i1^0

Applied simplification
Original rule:
l6 -> l6 : i1^0'=n^0, (0 >= 0 /\ n^0-i1^0 >= 0), cost: 2*n^0-2*i1^0
New rule:
l6 -> l6 : i1^0'=n^0, n^0-i1^0 >= 0, cost: 2*n^0-2*i1^0

Applied deletion
Removed the following rules: 27

Accelerated simple loops
Start location: l9
  32: l0 -> l0 : i4^0'=0, i4^0 >= 0, cost: 2*i4^0
  15: l2 -> l0 : i4^0'=i3^0, n^0-i3^0 <= 0, cost: 1
  34: l2 -> l2 : i3^0'=n^0, n^0-i3^0 >= 0, cost: 2*n^0-2*i3^0
  18: l4 -> l2 : i3^0'=i2^0, i2^0 <= 0, cost: 1
  36: l4 -> l4 : i2^0'=0, i2^0 >= 0, cost: 2*i2^0
  21: l6 -> l4 : i2^0'=i1^0, n^0-i1^0 <= 0, cost: 1
  38: l6 -> l6 : i1^0'=n^0, n^0-i1^0 >= 0, cost: 2*n^0-2*i1^0
  26: l9 -> l6 : TRUE, cost: 2


Applied chaining
First rule:
l2 -> l0 : i4^0'=i3^0, n^0-i3^0 <= 0, cost: 1
Second rule:
l0 -> l0 : i4^0'=0, i4^0 >= 0, cost: 2*i4^0
New rule:
l2 -> l0 : i4^0'=0, (n^0-i3^0 <= 0 /\ i3^0 >= 0), cost: 1+2*i3^0

Applied deletion
Removed the following rules: 32

Applied chaining
First rule:
l4 -> l2 : i3^0'=i2^0, i2^0 <= 0, cost: 1
Second rule:
l2 -> l2 : i3^0'=n^0, n^0-i3^0 >= 0, cost: 2*n^0-2*i3^0
New rule:
l4 -> l2 : i3^0'=n^0, (i2^0 <= 0 /\ n^0-i2^0 >= 0), cost: 1+2*n^0-2*i2^0

Applied deletion
Removed the following rules: 34

Applied chaining
First rule:
l6 -> l4 : i2^0'=i1^0, n^0-i1^0 <= 0, cost: 1
Second rule:
l4 -> l4 : i2^0'=0, i2^0 >= 0, cost: 2*i2^0
New rule:
l6 -> l4 : i2^0'=0, (i1^0 >= 0 /\ n^0-i1^0 <= 0), cost: 1+2*i1^0

Applied deletion
Removed the following rules: 36

Applied chaining
First rule:
l9 -> l6 : TRUE, cost: 2
Second rule:
l6 -> l6 : i1^0'=n^0, n^0-i1^0 >= 0, cost: 2*n^0-2*i1^0
New rule:
l9 -> l6 : i1^0'=n^0, n^0-i1^0 >= 0, cost: 2+2*n^0-2*i1^0

Applied deletion
Removed the following rules: 38

Chained accelerated rules with incoming rules
Start location: l9
  15: l2 -> l0 : i4^0'=i3^0, n^0-i3^0 <= 0, cost: 1
  39: l2 -> l0 : i4^0'=0, (n^0-i3^0 <= 0 /\ i3^0 >= 0), cost: 1+2*i3^0
  18: l4 -> l2 : i3^0'=i2^0, i2^0 <= 0, cost: 1
  40: l4 -> l2 : i3^0'=n^0, (i2^0 <= 0 /\ n^0-i2^0 >= 0), cost: 1+2*n^0-2*i2^0
  21: l6 -> l4 : i2^0'=i1^0, n^0-i1^0 <= 0, cost: 1
  41: l6 -> l4 : i2^0'=0, (i1^0 >= 0 /\ n^0-i1^0 <= 0), cost: 1+2*i1^0
  26: l9 -> l6 : TRUE, cost: 2
  42: l9 -> l6 : i1^0'=n^0, n^0-i1^0 >= 0, cost: 2+2*n^0-2*i1^0


Removed unreachable locations and irrelevant leafs
Start location: l9
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

