YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (undef1 > ~(1)) /\ (arg2 > ~(1)) /\ (undef2 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef1, arg2 -> undef2, arg3 -> (undef1 - undef2), arg4 -> 2}>
<l2, l2, (arg4 > ~(1)) /\ (arg3 > 0) /\ (undef9 > ~(1)) /\ (undef10 > ~(1)) /\ (arg2 > ~(1)) /\ ((arg2 + (undef10 + 1)) >= 0), par{arg1 -> (arg1 - undef9), arg2 -> (arg2 + (undef10 + 1)), arg3 -> ((arg1 - undef9) - (arg2 + (undef10 + 1))), arg4 -> (arg4 + 2)}>
<l3, l1, true, par{arg1 -> undef11, arg2 -> undef12, arg3 -> undef13, arg4 -> undef14}>

Fresh variables:
undef1, undef2, undef9, undef10, undef11, undef12, undef13, undef14, 

Undef variables:
undef1, undef2, undef9, undef10, undef11, undef12, undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef1) /\ (arg2 = undef2) /\ (arg3 = (undef1 - undef2)) /\ (arg4 = 2) /\ (undef1 > ~(1)) /\ (undef12 > ~(1)) /\ (undef2 > ~(1)) /\ (undef11 > 0)>
<l2, l2, (arg4 > ~(1)) /\ (arg3 > 0) /\ (undef9 > ~(1)) /\ (undef10 > ~(1)) /\ (arg2 > ~(1)) /\ ((arg2 + (undef10 + 1)) >= 0), par{arg1 -> (arg1 - undef9), arg2 -> (arg2 + (undef10 + 1)), arg3 -> ((arg1 - undef9) - (arg2 + (undef10 + 1))), arg4 -> (arg4 + 2)}>

Fresh variables:
undef1, undef2, undef9, undef10, undef11, undef12, undef13, undef14, 

Undef variables:
undef1, undef2, undef9, undef10, undef11, undef12, undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= arg3 /\ 0 <= 1 + arg2 + undef10 /\ 0 <= arg2 /\ 0 <= arg4 /\ 0 <= undef9 /\ 0 <= undef10, {arg1 -> arg1 - undef9, arg2 -> 1 + arg2 + undef10, arg3 -> -1 + arg1 - arg2 - undef9 - undef10, arg4 -> 2 + arg4, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l2, 1 <= undef11 /\ 0 <= undef1 /\ 0 <= undef2 /\ 0 <= undef12 /\ arg1 = undef1 /\ arg2 = undef2 /\ arg3 + undef2 = undef1 /\ arg4 = 2, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.005698

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001057s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004229s
Trying to remove transition: <l2, l2, 1 <= arg3 /\ 0 <= 1 + arg2 + undef10 /\ 0 <= arg2 /\ 0 <= arg4 /\ 0 <= undef9 /\ 0 <= undef10, {arg1 -> arg1 - undef9, arg2 -> 1 + arg2 + undef10, arg3 -> -1 + arg1 - arg2 - undef9 - undef10, arg4 -> 2 + arg4, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.021281s
Time used: 0.020999
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.021888s
Time used: 0.021112

LOG: SAT solveNonLinear - Elapsed time: 0.021888s
Cost: 0; Total time: 0.021112
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: arg1 <= arg2 + arg3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg3 /\ 0 <= 1 + arg2 + undef10 /\ arg1 <= arg2 + arg3 /\ 0 <= arg2 /\ 0 <= arg4 /\ 0 <= undef9 /\ 0 <= undef10, {arg1 -> arg1 - undef9, arg2 -> 1 + arg2 + undef10, arg3 -> -1 + arg1 - arg2 - undef9 - undef10, arg4 -> 2 + arg4, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg3 /\ 0 <= 1 + arg2 + undef10 /\ arg1 <= arg2 + arg3 /\ 0 <= arg2 /\ 0 <= arg4 /\ 0 <= undef9 /\ 0 <= undef10, {arg1 -> arg1 - undef9, arg2 -> 1 + arg2 + undef10, arg3 -> -1 + arg1 - arg2 - undef9 - undef10, arg4 -> 2 + arg4, rest remain the same}>
[33mRanking function: [36marg2 + 2*arg3[0m
New Graphs: 
INVARIANTS: 
2: arg1 <= arg2 + arg3 , 
Quasi-INVARIANTS to narrow Graph: 
2: 
[32mProgram Terminates[0m
