NO

Initial ITS

Start location: l22
Program variables: a1010^0 a1414^0 a66^0 a^0 b1111^0 b77^0 bufhdr___01515^0 bufhdr_cntxdirty^0 bufhdr_flags^0 bufhdr_tag_blocknum^0 bufhdr_tag_rnode^0 bufhdr_tag_rnode_relnode^0 firstdelblock^0 i^0 istemp^0 nbuffers^0 nlocbuffer^0 r^0 ret_relfilenodeequals1313^0 ret_relfilenodeequals99^0 rnode^0 tmp1212^0 tmp1^0 tmp88^0 tmp___03^0 tmp___14^0
   0: l0 -> l1 : a1010^0'=a1010^post1, a1414^0'=a1414^post1, a66^0'=a66^post1, a^0'=a^post1, b1111^0'=b1111^post1, b77^0'=b77^post1, bufhdr___01515^0'=bufhdr___01515^post1, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post1, bufhdr_flags^0'=bufhdr_flags^post1, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post1, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post1, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post1, firstdelblock^0'=firstdelblock^post1, i^0'=i^post1, istemp^0'=istemp^post1, nbuffers^0'=nbuffers^post1, nlocbuffer^0'=nlocbuffer^post1, r^0'=r^post1, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post1, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post1, rnode^0'=rnode^post1, tmp1212^0'=tmp1212^post1, tmp1^0'=tmp1^post1, tmp88^0'=tmp88^post1, tmp___03^0'=tmp___03^post1, tmp___14^0'=tmp___14^post1, (r^0-r^post1 == 0 /\ -tmp___03^post1+tmp___03^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post1 == 0 /\ -firstdelblock^post1+firstdelblock^0 == 0 /\ rnode^0-rnode^post1 == 0 /\ tmp___14^0-tmp___14^post1 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post1 == 0 /\ -a^post1+a^0 == 0 /\ -i^post1+i^0 == 0 /\ -nlocbuffer^post1+nlocbuffer^0 == 0 /\ -nbuffers^post1+nbuffers^0 == 0 /\ -a1414^post1+a1414^0 == 0 /\ -tmp1^post1+tmp1^0 == 0 /\ a66^0-a66^post1 == 0 /\ istemp^0-istemp^post1 == 0 /\ -bufhdr_cntxdirty^post1+bufhdr_cntxdirty^0 == 0 /\ -b77^post1+b77^0 == 0 /\ -ret_relfilenodeequals99^post1+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post1+ret_relfilenodeequals1313^0 == 0 /\ tmp1212^0-tmp1212^post1 == 0 /\ -bufhdr___01515^post1+bufhdr___01515^0 == 0 /\ a1010^0-a1010^post1 == 0 /\ -tmp88^post1+tmp88^0 == 0 /\ b1111^0-b1111^post1 == 0 /\ -bufhdr_tag_rnode^post1+bufhdr_tag_rnode^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post1 == 0), cost: 1
   1: l2 -> l3 : a1010^0'=a1010^post2, a1414^0'=a1414^post2, a66^0'=a66^post2, a^0'=a^post2, b1111^0'=b1111^post2, b77^0'=b77^post2, bufhdr___01515^0'=bufhdr___01515^post2, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post2, bufhdr_flags^0'=bufhdr_flags^post2, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post2, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post2, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post2, firstdelblock^0'=firstdelblock^post2, i^0'=i^post2, istemp^0'=istemp^post2, nbuffers^0'=nbuffers^post2, nlocbuffer^0'=nlocbuffer^post2, r^0'=r^post2, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post2, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post2, rnode^0'=rnode^post2, tmp1212^0'=tmp1212^post2, tmp1^0'=tmp1^post2, tmp88^0'=tmp88^post2, tmp___03^0'=tmp___03^post2, tmp___14^0'=tmp___14^post2, (i^0-i^post2 == 0 /\ tmp___14^0-tmp___14^post2 == 0 /\ -nlocbuffer^post2+nlocbuffer^0 == 0 /\ -nbuffers^post2+nbuffers^0 == 0 /\ -tmp1^post2+tmp1^0 == 0 /\ rnode^0-rnode^post2 == 0 /\ -a^post2+a^0 == 0 /\ -tmp88^post2+tmp88^0 == 0 /\ istemp^0-istemp^post2 == 0 /\ -bufhdr_tag_rnode^post2+bufhdr_tag_rnode^0 == 0 /\ -ret_relfilenodeequals99^post2+ret_relfilenodeequals99^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post2 == 0 /\ -bufhdr_flags^post2+bufhdr_flags^0 == 0 /\ a1414^0-a1414^post2 == 0 /\ -firstdelblock^post2+firstdelblock^0 == 0 /\ -tmp1212^post2+tmp1212^0 == 0 /\ a1010^0-a1010^post2 == 0 /\ b1111^0-b1111^post2 == 0 /\ -bufhdr_tag_rnode_relnode^post2+bufhdr_tag_rnode_relnode^0 == 0 /\ r^0-r^post2 == 0 /\ -b77^post2+b77^0 == 0 /\ -a66^post2+a66^0 == 0 /\ -ret_relfilenodeequals1313^post2+ret_relfilenodeequals1313^0 == 0 /\ tmp___03^0-tmp___03^post2 == 0 /\ bufhdr___01515^0-bufhdr___01515^post2 == 0 /\ -bufhdr_cntxdirty^post2+bufhdr_cntxdirty^0 == 0), cost: 1
  26: l3 -> l6 : a1010^0'=a1010^post27, a1414^0'=a1414^post27, a66^0'=a66^post27, a^0'=a^post27, b1111^0'=b1111^post27, b77^0'=b77^post27, bufhdr___01515^0'=bufhdr___01515^post27, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post27, bufhdr_flags^0'=bufhdr_flags^post27, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post27, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post27, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post27, firstdelblock^0'=firstdelblock^post27, i^0'=i^post27, istemp^0'=istemp^post27, nbuffers^0'=nbuffers^post27, nlocbuffer^0'=nlocbuffer^post27, r^0'=r^post27, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post27, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post27, rnode^0'=rnode^post27, tmp1212^0'=tmp1212^post27, tmp1^0'=tmp1^post27, tmp88^0'=tmp88^post27, tmp___03^0'=tmp___03^post27, tmp___14^0'=tmp___14^post27, (r^0-r^post27 == 0 /\ tmp___14^0-tmp___14^post27 == 0 /\ -ret_relfilenodeequals1313^post27+ret_relfilenodeequals1313^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post27 == 0 /\ istemp^0-istemp^post27 == 0 /\ -bufhdr_cntxdirty^post27+bufhdr_cntxdirty^0 == 0 /\ -nlocbuffer^post27+nlocbuffer^0 == 0 /\ -b77^post27+b77^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post27 == 0 /\ -tmp88^post27+tmp88^0 == 0 /\ b1111^0-b1111^post27 == 0 /\ -firstdelblock^post27+firstdelblock^0 == 0 /\ a1414^0-a1414^post27 == 0 /\ -a66^post27+a66^0 == 0 /\ -bufhdr_tag_rnode^post27+bufhdr_tag_rnode^0 == 0 /\ rnode^0-rnode^post27 == 0 /\ -i^0+nlocbuffer^0 <= 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post27 == 0 /\ bufhdr_flags^0-bufhdr_flags^post27 == 0 /\ -i^post27+i^0 == 0 /\ -nbuffers^post27+nbuffers^0 == 0 /\ a1010^0-a1010^post27 == 0 /\ -bufhdr___01515^post27+bufhdr___01515^0 == 0 /\ -a^post27+a^0 == 0 /\ -tmp1212^post27+tmp1212^0 == 0 /\ -tmp1^post27+tmp1^0 == 0 /\ tmp___03^0-tmp___03^post27 == 0), cost: 1
  27: l3 -> l18 : a1010^0'=a1010^post28, a1414^0'=a1414^post28, a66^0'=a66^post28, a^0'=a^post28, b1111^0'=b1111^post28, b77^0'=b77^post28, bufhdr___01515^0'=bufhdr___01515^post28, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post28, bufhdr_flags^0'=bufhdr_flags^post28, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post28, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post28, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post28, firstdelblock^0'=firstdelblock^post28, i^0'=i^post28, istemp^0'=istemp^post28, nbuffers^0'=nbuffers^post28, nlocbuffer^0'=nlocbuffer^post28, r^0'=r^post28, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post28, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post28, rnode^0'=rnode^post28, tmp1212^0'=tmp1212^post28, tmp1^0'=tmp1^post28, tmp88^0'=tmp88^post28, tmp___03^0'=tmp___03^post28, tmp___14^0'=tmp___14^post28, (0 == 0 /\ a66^post28-bufhdr_tag_rnode^0 == 0 /\ istemp^0-istemp^post28 == 0 /\ tmp1212^0-tmp1212^post28 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post28 == 0 /\ -tmp___14^post28+tmp___14^0 == 0 /\ -rnode^0+b77^post28 == 0 /\ -ret_relfilenodeequals1313^post28+ret_relfilenodeequals1313^0 == 0 /\ -a^post28+a^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post28 == 0 /\ tmp___03^0-tmp___03^post28 == 0 /\ -r^post28+r^0 == 0 /\ -bufhdr_tag_rnode^post28+bufhdr_tag_rnode^0 == 0 /\ -i^post28+i^0 == 0 /\ -nlocbuffer^post28+nlocbuffer^0 == 0 /\ 1+i^0-nlocbuffer^0 <= 0 /\ a1414^0-a1414^post28 == 0 /\ -firstdelblock^post28+firstdelblock^0 == 0 /\ b1111^0-b1111^post28 == 0 /\ ret_relfilenodeequals99^post28-tmp88^post28 == 0 /\ a1010^0-a1010^post28 == 0 /\ -bufhdr_cntxdirty^post28+bufhdr_cntxdirty^0 == 0 /\ nbuffers^0-nbuffers^post28 == 0 /\ bufhdr___01515^0-bufhdr___01515^post28 == 0 /\ -ret_relfilenodeequals99^post28+tmp1^post28 == 0 /\ rnode^0-rnode^post28 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post28 == 0), cost: 1
   2: l4 -> l5 : a1010^0'=a1010^post3, a1414^0'=a1414^post3, a66^0'=a66^post3, a^0'=a^post3, b1111^0'=b1111^post3, b77^0'=b77^post3, bufhdr___01515^0'=bufhdr___01515^post3, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post3, bufhdr_flags^0'=bufhdr_flags^post3, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post3, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post3, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post3, firstdelblock^0'=firstdelblock^post3, i^0'=i^post3, istemp^0'=istemp^post3, nbuffers^0'=nbuffers^post3, nlocbuffer^0'=nlocbuffer^post3, r^0'=r^post3, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post3, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post3, rnode^0'=rnode^post3, tmp1212^0'=tmp1212^post3, tmp1^0'=tmp1^post3, tmp88^0'=tmp88^post3, tmp___03^0'=tmp___03^post3, tmp___14^0'=tmp___14^post3, (bufhdr___01515^0-bufhdr___01515^post3 == 0 /\ rnode^0-rnode^post3 == 0 /\ -ret_relfilenodeequals1313^post3+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post3 == 0 /\ -firstdelblock^post3+firstdelblock^0 == 0 /\ -a66^post3+a66^0 == 0 /\ tmp1^0-tmp1^post3 == 0 /\ -istemp^post3+istemp^0 == 0 /\ -a^post3+a^0 == 0 /\ tmp1212^0-tmp1212^post3 == 0 /\ -nlocbuffer^post3+nlocbuffer^0 == 0 /\ -bufhdr_cntxdirty^post3+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_tag_rnode^post3+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_flags^post3+bufhdr_flags^0 == 0 /\ -tmp88^post3+tmp88^0 == 0 /\ r^0-r^post3 == 0 /\ -tmp___03^post3+tmp___03^0 == 0 /\ -1-i^0+i^post3 == 0 /\ -b77^post3+b77^0 == 0 /\ -bufhdr_tag_rnode_relnode^post3+bufhdr_tag_rnode_relnode^0 == 0 /\ nbuffers^0-nbuffers^post3 == 0 /\ a1414^0-a1414^post3 == 0 /\ a1010^0-a1010^post3 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post3 == 0 /\ b1111^0-b1111^post3 == 0 /\ tmp___14^0-tmp___14^post3 == 0), cost: 1
  12: l5 -> l12 : a1010^0'=a1010^post13, a1414^0'=a1414^post13, a66^0'=a66^post13, a^0'=a^post13, b1111^0'=b1111^post13, b77^0'=b77^post13, bufhdr___01515^0'=bufhdr___01515^post13, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post13, bufhdr_flags^0'=bufhdr_flags^post13, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post13, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post13, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post13, firstdelblock^0'=firstdelblock^post13, i^0'=i^post13, istemp^0'=istemp^post13, nbuffers^0'=nbuffers^post13, nlocbuffer^0'=nlocbuffer^post13, r^0'=r^post13, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post13, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post13, rnode^0'=rnode^post13, tmp1212^0'=tmp1212^post13, tmp1^0'=tmp1^post13, tmp88^0'=tmp88^post13, tmp___03^0'=tmp___03^post13, tmp___14^0'=tmp___14^post13, (-tmp___14^post13+tmp___14^0 == 0 /\ -tmp88^post13+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post13 == 0 /\ -b77^post13+b77^0 == 0 /\ -ret_relfilenodeequals99^post13+ret_relfilenodeequals99^0 == 0 /\ -i^post13+i^0 == 0 /\ a^0-a^post13 == 0 /\ -firstdelblock^post13+firstdelblock^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post13 == 0 /\ r^0-r^post13 == 0 /\ -bufhdr_tag_rnode_relnode^post13+bufhdr_tag_rnode_relnode^0 == 0 /\ rnode^0-rnode^post13 == 0 /\ istemp^0-istemp^post13 == 0 /\ -bufhdr_cntxdirty^post13+bufhdr_cntxdirty^0 == 0 /\ -a1010^post13+a1010^0 == 0 /\ b1111^0-b1111^post13 == 0 /\ tmp___03^0-tmp___03^post13 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post13 == 0 /\ a66^0-a66^post13 == 0 /\ bufhdr___01515^0-bufhdr___01515^post13 == 0 /\ -nlocbuffer^post13+nlocbuffer^0 == 0 /\ tmp1212^0-tmp1212^post13 == 0 /\ -a1414^post13+a1414^0 == 0 /\ -bufhdr_tag_rnode^post13+bufhdr_tag_rnode^0 == 0 /\ -tmp1^post13+tmp1^0 == 0 /\ -bufhdr_flags^post13+bufhdr_flags^0 == 0), cost: 1
   3: l6 -> l7 : a1010^0'=a1010^post4, a1414^0'=a1414^post4, a66^0'=a66^post4, a^0'=a^post4, b1111^0'=b1111^post4, b77^0'=b77^post4, bufhdr___01515^0'=bufhdr___01515^post4, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post4, bufhdr_flags^0'=bufhdr_flags^post4, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post4, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post4, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post4, firstdelblock^0'=firstdelblock^post4, i^0'=i^post4, istemp^0'=istemp^post4, nbuffers^0'=nbuffers^post4, nlocbuffer^0'=nlocbuffer^post4, r^0'=r^post4, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post4, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post4, rnode^0'=rnode^post4, tmp1212^0'=tmp1212^post4, tmp1^0'=tmp1^post4, tmp88^0'=tmp88^post4, tmp___03^0'=tmp___03^post4, tmp___14^0'=tmp___14^post4, (-b77^post4+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post4 == 0 /\ tmp1^0-tmp1^post4 == 0 /\ -bufhdr_flags^post4+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post4+bufhdr_cntxdirty^0 == 0 /\ istemp^0-istemp^post4 == 0 /\ a^0-a^post4 == 0 /\ tmp1212^0-tmp1212^post4 == 0 /\ -a1010^post4+a1010^0 == 0 /\ tmp___14^0-tmp___14^post4 == 0 /\ -tmp___03^post4+tmp___03^0 == 0 /\ -ret_relfilenodeequals1313^post4+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_tag_rnode^post4+bufhdr_tag_rnode^0 == 0 /\ b1111^0-b1111^post4 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0 /\ -nlocbuffer^post4+nlocbuffer^0 == 0 /\ -firstdelblock^post4+firstdelblock^0 == 0 /\ a66^0-a66^post4 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post4 == 0 /\ -a1414^post4+a1414^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post4 == 0 /\ -tmp88^post4+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post4 == 0 /\ -ret_relfilenodeequals99^post4+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post4 == 0), cost: 1
   4: l7 -> l6 : a1010^0'=a1010^post5, a1414^0'=a1414^post5, a66^0'=a66^post5, a^0'=a^post5, b1111^0'=b1111^post5, b77^0'=b77^post5, bufhdr___01515^0'=bufhdr___01515^post5, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post5, bufhdr_flags^0'=bufhdr_flags^post5, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post5, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post5, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post5, firstdelblock^0'=firstdelblock^post5, i^0'=i^post5, istemp^0'=istemp^post5, nbuffers^0'=nbuffers^post5, nlocbuffer^0'=nlocbuffer^post5, r^0'=r^post5, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post5, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post5, rnode^0'=rnode^post5, tmp1212^0'=tmp1212^post5, tmp1^0'=tmp1^post5, tmp88^0'=tmp88^post5, tmp___03^0'=tmp___03^post5, tmp___14^0'=tmp___14^post5, (tmp1^0-tmp1^post5 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post5 == 0 /\ istemp^0-istemp^post5 == 0 /\ nbuffers^0-nbuffers^post5 == 0 /\ -bufhdr_tag_rnode^post5+bufhdr_tag_rnode^0 == 0 /\ -b77^post5+b77^0 == 0 /\ -a1414^post5+a1414^0 == 0 /\ tmp1212^0-tmp1212^post5 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post5 == 0 /\ -bufhdr_flags^post5+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post5+bufhdr_cntxdirty^0 == 0 /\ -a1010^post5+a1010^0 == 0 /\ -i^post5+i^0 == 0 /\ tmp___14^0-tmp___14^post5 == 0 /\ -tmp___03^post5+tmp___03^0 == 0 /\ -a^post5+a^0 == 0 /\ -nlocbuffer^post5+nlocbuffer^0 == 0 /\ a66^0-a66^post5 == 0 /\ b1111^0-b1111^post5 == 0 /\ -ret_relfilenodeequals1313^post5+ret_relfilenodeequals1313^0 == 0 /\ -ret_relfilenodeequals99^post5+ret_relfilenodeequals99^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post5 == 0 /\ -firstdelblock^post5+firstdelblock^0 == 0 /\ -tmp88^post5+tmp88^0 == 0 /\ -r^post5+r^0 == 0 /\ rnode^0-rnode^post5 == 0), cost: 1
   5: l8 -> l4 : a1010^0'=a1010^post6, a1414^0'=a1414^post6, a66^0'=a66^post6, a^0'=a^post6, b1111^0'=b1111^post6, b77^0'=b77^post6, bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post6, bufhdr_flags^0'=bufhdr_flags^post6, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post6, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post6, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post6, firstdelblock^0'=firstdelblock^post6, i^0'=i^post6, istemp^0'=istemp^post6, nbuffers^0'=nbuffers^post6, nlocbuffer^0'=nlocbuffer^post6, r^0'=r^post6, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post6, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post6, rnode^0'=rnode^post6, tmp1212^0'=tmp1212^post6, tmp1^0'=tmp1^post6, tmp88^0'=tmp88^post6, tmp___03^0'=tmp___03^post6, tmp___14^0'=tmp___14^post6, (0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post6 == 0 /\ b77^0-b77^post6 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post6 == 0 /\ istemp^0-istemp^post6 == 0 /\ -bufhdr_tag_rnode^post6+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post6 == 0 /\ rnode^0-rnode^post6 == 0 /\ tmp___14^0-tmp___14^post6 == 0 /\ -tmp___03^post6+tmp___03^0 == 0 /\ a66^0-a66^post6 == 0 /\ -nbuffers^post6+nbuffers^0 == 0 /\ i^0-i^post6 == 0 /\ -a1414^post6+a1414^0 == 0 /\ a1010^0-a1010^post6 == 0 /\ -tmp1^post6+tmp1^0 == 0 /\ -tmp1212^post6+tmp1212^0 == 0 /\ bufhdr_cntxdirty^post6 == 0 /\ -tmp88^post6+tmp88^0 == 0 /\ -ret_relfilenodeequals1313^post6+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post6+firstdelblock^0 == 0 /\ b1111^0-b1111^post6 == 0 /\ r^0-r^post6 == 0 /\ -a^post6+a^0 == 0 /\ -nlocbuffer^post6+nlocbuffer^0 == 0), cost: 1
   6: l8 -> l9 : a1010^0'=a1010^post7, a1414^0'=a1414^post7, a66^0'=a66^post7, a^0'=a^post7, b1111^0'=b1111^post7, b77^0'=b77^post7, bufhdr___01515^0'=bufhdr___01515^post7, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post7, bufhdr_flags^0'=bufhdr_flags^post7, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post7, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post7, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post7, firstdelblock^0'=firstdelblock^post7, i^0'=i^post7, istemp^0'=istemp^post7, nbuffers^0'=nbuffers^post7, nlocbuffer^0'=nlocbuffer^post7, r^0'=r^post7, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post7, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post7, rnode^0'=rnode^post7, tmp1212^0'=tmp1212^post7, tmp1^0'=tmp1^post7, tmp88^0'=tmp88^post7, tmp___03^0'=tmp___03^post7, tmp___14^0'=tmp___14^post7, (0 == 0 /\ istemp^0-istemp^post7 == 0 /\ -tmp88^post7+tmp88^0 == 0 /\ -tmp___03^post7+tmp___03^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post7 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post7 == 0 /\ tmp___14^0-tmp___14^post7 == 0 /\ -ret_relfilenodeequals1313^post7+ret_relfilenodeequals1313^0 == 0 /\ -b77^post7+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post7 == 0 /\ -nbuffers^post7+nbuffers^0 == 0 /\ i^0-i^post7 == 0 /\ -bufhdr_tag_rnode_relnode^post7+bufhdr_tag_rnode_relnode^0 == 0 /\ a1010^0-a1010^post7 == 0 /\ -bufhdr_tag_rnode^post7+bufhdr_tag_rnode^0 == 0 /\ -a66^post7+a66^0 == 0 /\ -bufhdr_cntxdirty^post7+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post7+bufhdr_flags^0 == 0 /\ rnode^0-rnode^post7 == 0 /\ r^0-r^post7 == 0 /\ -nlocbuffer^post7+nlocbuffer^0 == 0 /\ b1111^0-b1111^post7 == 0 /\ -firstdelblock^post7+firstdelblock^0 == 0 /\ -a^post7+a^0 == 0 /\ -tmp1212^post7+tmp1212^0 == 0 /\ -tmp1^post7+tmp1^0 == 0), cost: 1
  17: l9 -> l11 : a1010^0'=a1010^post18, a1414^0'=a1414^post18, a66^0'=a66^post18, a^0'=a^post18, b1111^0'=b1111^post18, b77^0'=b77^post18, bufhdr___01515^0'=bufhdr___01515^post18, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post18, bufhdr_flags^0'=bufhdr_flags^post18, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post18, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post18, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post18, firstdelblock^0'=firstdelblock^post18, i^0'=i^post18, istemp^0'=istemp^post18, nbuffers^0'=nbuffers^post18, nlocbuffer^0'=nlocbuffer^post18, r^0'=r^post18, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post18, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post18, rnode^0'=rnode^post18, tmp1212^0'=tmp1212^post18, tmp1^0'=tmp1^post18, tmp88^0'=tmp88^post18, tmp___03^0'=tmp___03^post18, tmp___14^0'=tmp___14^post18, (0 == 0 /\ a1010^post18-bufhdr_tag_rnode^0 == 0 /\ -tmp1^post18+tmp1^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post18 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post18 == 0 /\ -r^post18+r^0 == 0 /\ -tmp88^post18+tmp88^0 == 0 /\ -bufhdr_tag_rnode_relnode^post18+bufhdr_tag_rnode_relnode^0 == 0 /\ -a66^post18+a66^0 == 0 /\ nbuffers^0-nbuffers^post18 == 0 /\ -a1414^post18+a1414^0 == 0 /\ -b77^post18+b77^0 == 0 /\ -bufhdr_tag_rnode^post18+bufhdr_tag_rnode^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post18 == 0 /\ -ret_relfilenodeequals1313^post18+tmp___14^post18 == 0 /\ rnode^0-rnode^post18 == 0 /\ -bufhdr_flags^post18+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post18+bufhdr_cntxdirty^0 == 0 /\ -firstdelblock^post18+firstdelblock^0 == 0 /\ -tmp1212^post18+ret_relfilenodeequals1313^post18 == 0 /\ -rnode^0+b1111^post18 == 0 /\ -istemp^post18+istemp^0 == 0 /\ -tmp___03^post18+tmp___03^0 == 0 /\ -a^post18+a^0 == 0 /\ i^0-i^post18 == 0 /\ -nlocbuffer^post18+nlocbuffer^0 == 0), cost: 1
   7: l10 -> l4 : a1010^0'=a1010^post8, a1414^0'=a1414^post8, a66^0'=a66^post8, a^0'=a^post8, b1111^0'=b1111^post8, b77^0'=b77^post8, bufhdr___01515^0'=bufhdr___01515^post8, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post8, bufhdr_flags^0'=bufhdr_flags^post8, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post8, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post8, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post8, firstdelblock^0'=firstdelblock^post8, i^0'=i^post8, istemp^0'=istemp^post8, nbuffers^0'=nbuffers^post8, nlocbuffer^0'=nlocbuffer^post8, r^0'=r^post8, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post8, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post8, rnode^0'=rnode^post8, tmp1212^0'=tmp1212^post8, tmp1^0'=tmp1^post8, tmp88^0'=tmp88^post8, tmp___03^0'=tmp___03^post8, tmp___14^0'=tmp___14^post8, (-firstdelblock^post8+firstdelblock^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post8 == 0 /\ -tmp1^post8+tmp1^0 == 0 /\ -istemp^post8+istemp^0 == 0 /\ -tmp___14^post8+tmp___14^0 == 0 /\ -nlocbuffer^post8+nlocbuffer^0 == 0 /\ -tmp88^post8+tmp88^0 == 0 /\ -bufhdr_cntxdirty^post8+bufhdr_cntxdirty^0 == 0 /\ -ret_relfilenodeequals99^post8+ret_relfilenodeequals99^0 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0 /\ -b77^post8+b77^0 == 0 /\ -bufhdr_tag_rnode_relnode^post8+bufhdr_tag_rnode_relnode^0 == 0 /\ tmp___03^0-tmp___03^post8 == 0 /\ r^0-r^post8 == 0 /\ -a66^post8+a66^0 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post8 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post8 == 0 /\ a1414^0-a1414^post8 == 0 /\ a1010^0-a1010^post8 == 0 /\ rnode^0-rnode^post8 == 0 /\ -bufhdr_flags^post8+bufhdr_flags^0 == 0 /\ i^0-i^post8 == 0 /\ -a^post8+a^0 == 0 /\ nbuffers^0-nbuffers^post8 == 0 /\ b1111^0-b1111^post8 == 0 /\ tmp1212^0-tmp1212^post8 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post8 == 0), cost: 1
   8: l10 -> l8 : a1010^0'=a1010^post9, a1414^0'=a1414^post9, a66^0'=a66^post9, a^0'=a^post9, b1111^0'=b1111^post9, b77^0'=b77^post9, bufhdr___01515^0'=bufhdr___01515^post9, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post9, bufhdr_flags^0'=bufhdr_flags^post9, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post9, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post9, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post9, firstdelblock^0'=firstdelblock^post9, i^0'=i^post9, istemp^0'=istemp^post9, nbuffers^0'=nbuffers^post9, nlocbuffer^0'=nlocbuffer^post9, r^0'=r^post9, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post9, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post9, rnode^0'=rnode^post9, tmp1212^0'=tmp1212^post9, tmp1^0'=tmp1^post9, tmp88^0'=tmp88^post9, tmp___03^0'=tmp___03^post9, tmp___14^0'=tmp___14^post9, (a66^0-a66^post9 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0 /\ b1111^0-b1111^post9 == 0 /\ r^0-r^post9 == 0 /\ -bufhdr___01515^post9+bufhdr___01515^0 == 0 /\ -a1414^post9+a1414^0 == 0 /\ b77^0-b77^post9 == 0 /\ -bufhdr_cntxdirty^post9+bufhdr_cntxdirty^0 == 0 /\ -firstdelblock^post9+firstdelblock^0 == 0 /\ a1010^0-a1010^post9 == 0 /\ istemp^0-istemp^post9 == 0 /\ -tmp___14^post9+tmp___14^0 == 0 /\ tmp___03^0-tmp___03^post9 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post9 == 0 /\ -nlocbuffer^post9+nlocbuffer^0 == 0 /\ -a^post9+a^0 == 0 /\ rnode^0-rnode^post9 == 0 /\ -tmp1^post9+tmp1^0 == 0 /\ -bufhdr_tag_rnode^post9+bufhdr_tag_rnode^0 == 0 /\ tmp1212^0-tmp1212^post9 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post9 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post9 == 0 /\ -ret_relfilenodeequals99^post9+ret_relfilenodeequals99^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post9 == 0 /\ -i^post9+i^0 == 0 /\ -tmp88^post9+tmp88^0 == 0 /\ -nbuffers^post9+nbuffers^0 == 0), cost: 1
   9: l11 -> l4 : a1010^0'=a1010^post10, a1414^0'=a1414^post10, a66^0'=a66^post10, a^0'=a^post10, b1111^0'=b1111^post10, b77^0'=b77^post10, bufhdr___01515^0'=bufhdr___01515^post10, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post10, bufhdr_flags^0'=bufhdr_flags^post10, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post10, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post10, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post10, firstdelblock^0'=firstdelblock^post10, i^0'=i^post10, istemp^0'=istemp^post10, nbuffers^0'=nbuffers^post10, nlocbuffer^0'=nlocbuffer^post10, r^0'=r^post10, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post10, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post10, rnode^0'=rnode^post10, tmp1212^0'=tmp1212^post10, tmp1^0'=tmp1^post10, tmp88^0'=tmp88^post10, tmp___03^0'=tmp___03^post10, tmp___14^0'=tmp___14^post10, (rnode^0-rnode^post10 == 0 /\ r^0-r^post10 == 0 /\ -a1414^post10+a1414^0 == 0 /\ a66^0-a66^post10 == 0 /\ b1111^0-b1111^post10 == 0 /\ tmp___14^0 <= 0 /\ b77^0-b77^post10 == 0 /\ istemp^0-istemp^post10 == 0 /\ -bufhdr_tag_rnode^post10+bufhdr_tag_rnode^0 == 0 /\ -bufhdr___01515^post10+bufhdr___01515^0 == 0 /\ a1010^0-a1010^post10 == 0 /\ -a^post10+a^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post10 == 0 /\ -nlocbuffer^post10+nlocbuffer^0 == 0 /\ -tmp1^post10+tmp1^0 == 0 /\ -tmp___14^0 <= 0 /\ -firstdelblock^post10+firstdelblock^0 == 0 /\ -tmp88^post10+tmp88^0 == 0 /\ -ret_relfilenodeequals1313^post10+ret_relfilenodeequals1313^0 == 0 /\ -tmp___14^post10+tmp___14^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post10 == 0 /\ tmp1212^0-tmp1212^post10 == 0 /\ -ret_relfilenodeequals99^post10+ret_relfilenodeequals99^0 == 0 /\ -i^post10+i^0 == 0 /\ -bufhdr_tag_blocknum^post10+bufhdr_tag_blocknum^0 == 0 /\ tmp___03^0-tmp___03^post10 == 0 /\ -bufhdr_cntxdirty^post10+bufhdr_cntxdirty^0 == 0 /\ -nbuffers^post10+nbuffers^0 == 0), cost: 1
  10: l11 -> l10 : a1010^0'=a1010^post11, a1414^0'=a1414^post11, a66^0'=a66^post11, a^0'=a^post11, b1111^0'=b1111^post11, b77^0'=b77^post11, bufhdr___01515^0'=bufhdr___01515^post11, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post11, bufhdr_flags^0'=bufhdr_flags^post11, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post11, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post11, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post11, firstdelblock^0'=firstdelblock^post11, i^0'=i^post11, istemp^0'=istemp^post11, nbuffers^0'=nbuffers^post11, nlocbuffer^0'=nlocbuffer^post11, r^0'=r^post11, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post11, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post11, rnode^0'=rnode^post11, tmp1212^0'=tmp1212^post11, tmp1^0'=tmp1^post11, tmp88^0'=tmp88^post11, tmp___03^0'=tmp___03^post11, tmp___14^0'=tmp___14^post11, (rnode^0-rnode^post11 == 0 /\ -bufhdr_tag_rnode_relnode^post11+bufhdr_tag_rnode_relnode^0 == 0 /\ -ret_relfilenodeequals1313^post11+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_flags^post11+bufhdr_flags^0 == 0 /\ -b1111^post11+b1111^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post11 == 0 /\ -tmp___03^post11+tmp___03^0 == 0 /\ -r^post11+r^0 == 0 /\ 1-tmp___14^0 <= 0 /\ tmp1^0-tmp1^post11 == 0 /\ tmp1212^0-tmp1212^post11 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post11 == 0 /\ -a66^post11+a66^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post11 == 0 /\ nbuffers^0-nbuffers^post11 == 0 /\ -bufhdr_cntxdirty^post11+bufhdr_cntxdirty^0 == 0 /\ -a^post11+a^0 == 0 /\ a1414^0-a1414^post11 == 0 /\ tmp___14^0-tmp___14^post11 == 0 /\ -nlocbuffer^post11+nlocbuffer^0 == 0 /\ -istemp^post11+istemp^0 == 0 /\ -b77^post11+b77^0 == 0 /\ -tmp88^post11+tmp88^0 == 0 /\ i^0-i^post11 == 0 /\ -firstdelblock^post11+firstdelblock^0 == 0 /\ a1010^0-a1010^post11 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post11 == 0), cost: 1
  11: l11 -> l10 : a1010^0'=a1010^post12, a1414^0'=a1414^post12, a66^0'=a66^post12, a^0'=a^post12, b1111^0'=b1111^post12, b77^0'=b77^post12, bufhdr___01515^0'=bufhdr___01515^post12, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post12, bufhdr_flags^0'=bufhdr_flags^post12, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post12, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post12, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post12, firstdelblock^0'=firstdelblock^post12, i^0'=i^post12, istemp^0'=istemp^post12, nbuffers^0'=nbuffers^post12, nlocbuffer^0'=nlocbuffer^post12, r^0'=r^post12, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post12, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post12, rnode^0'=rnode^post12, tmp1212^0'=tmp1212^post12, tmp1^0'=tmp1^post12, tmp88^0'=tmp88^post12, tmp___03^0'=tmp___03^post12, tmp___14^0'=tmp___14^post12, (a1010^0-a1010^post12 == 0 /\ -ret_relfilenodeequals1313^post12+ret_relfilenodeequals1313^0 == 0 /\ a^0-a^post12 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post12 == 0 /\ -tmp___03^post12+tmp___03^0 == 0 /\ -tmp88^post12+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post12 == 0 /\ -b77^post12+b77^0 == 0 /\ -bufhdr_cntxdirty^post12+bufhdr_cntxdirty^0 == 0 /\ rnode^0-rnode^post12 == 0 /\ b1111^0-b1111^post12 == 0 /\ -a1414^post12+a1414^0 == 0 /\ -firstdelblock^post12+firstdelblock^0 == 0 /\ i^0-i^post12 == 0 /\ tmp1^0-tmp1^post12 == 0 /\ -r^post12+r^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post12 == 0 /\ -nlocbuffer^post12+nlocbuffer^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post12 == 0 /\ istemp^0-istemp^post12 == 0 /\ 1+tmp___14^0 <= 0 /\ tmp___14^0-tmp___14^post12 == 0 /\ tmp1212^0-tmp1212^post12 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post12 == 0 /\ a66^0-a66^post12 == 0 /\ -bufhdr_flags^post12+bufhdr_flags^0 == 0 /\ -bufhdr_tag_rnode_relnode^post12+bufhdr_tag_rnode_relnode^0 == 0), cost: 1
  13: l12 -> l13 : a1010^0'=a1010^post14, a1414^0'=a1414^post14, a66^0'=a66^post14, a^0'=a^post14, b1111^0'=b1111^post14, b77^0'=b77^post14, bufhdr___01515^0'=bufhdr___01515^post14, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post14, bufhdr_flags^0'=bufhdr_flags^post14, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post14, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post14, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post14, firstdelblock^0'=firstdelblock^post14, i^0'=i^post14, istemp^0'=istemp^post14, nbuffers^0'=nbuffers^post14, nlocbuffer^0'=nlocbuffer^post14, r^0'=r^post14, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post14, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post14, rnode^0'=rnode^post14, tmp1212^0'=tmp1212^post14, tmp1^0'=tmp1^post14, tmp88^0'=tmp88^post14, tmp___03^0'=tmp___03^post14, tmp___14^0'=tmp___14^post14, (-a^post14+a^0 == 0 /\ r^post14 == 0 /\ -tmp1212^post14+tmp1212^0 == 0 /\ -bufhdr_tag_rnode_relnode^post14+bufhdr_tag_rnode_relnode^0 == 0 /\ -bufhdr_flags^post14+bufhdr_flags^0 == 0 /\ -b77^post14+b77^0 == 0 /\ 1+nbuffers^0-i^0 <= 0 /\ bufhdr_cntxdirty^0-bufhdr_cntxdirty^post14 == 0 /\ tmp___14^0-tmp___14^post14 == 0 /\ bufhdr___01515^0-bufhdr___01515^post14 == 0 /\ -tmp___03^post14+tmp___03^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post14 == 0 /\ a1010^0-a1010^post14 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post14 == 0 /\ -tmp1^post14+tmp1^0 == 0 /\ -a1414^post14+a1414^0 == 0 /\ -a66^post14+a66^0 == 0 /\ nbuffers^0-nbuffers^post14 == 0 /\ rnode^0-rnode^post14 == 0 /\ -1+r^1 == 0 /\ -ret_relfilenodeequals1313^post14+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post14+firstdelblock^0 == 0 /\ b1111^0-b1111^post14 == 0 /\ -tmp88^post14+tmp88^0 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post14 == 0 /\ -nlocbuffer^post14+nlocbuffer^0 == 0 /\ -istemp^post14+istemp^0 == 0 /\ i^0-i^post14 == 0), cost: 1
  14: l12 -> l9 : a1010^0'=a1010^post15, a1414^0'=a1414^post15, a66^0'=a66^post15, a^0'=a^post15, b1111^0'=b1111^post15, b77^0'=b77^post15, bufhdr___01515^0'=bufhdr___01515^post15, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post15, bufhdr_flags^0'=bufhdr_flags^post15, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post15, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post15, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post15, firstdelblock^0'=firstdelblock^post15, i^0'=i^post15, istemp^0'=istemp^post15, nbuffers^0'=nbuffers^post15, nlocbuffer^0'=nlocbuffer^post15, r^0'=r^post15, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post15, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post15, rnode^0'=rnode^post15, tmp1212^0'=tmp1212^post15, tmp1^0'=tmp1^post15, tmp88^0'=tmp88^post15, tmp___03^0'=tmp___03^post15, tmp___14^0'=tmp___14^post15, (0 == 0 /\ -bufhdr_tag_rnode_relnode^post15+bufhdr_tag_rnode_relnode^0 == 0 /\ -nbuffers^0+i^0 <= 0 /\ -tmp88^post15+tmp88^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post15 == 0 /\ -ret_relfilenodeequals1313^post15+ret_relfilenodeequals1313^0 == 0 /\ -rnode^post15+rnode^0 == 0 /\ -r^post15+r^0 == 0 /\ -b77^post15+b77^0 == 0 /\ -bufhdr_cntxdirty^post15+bufhdr_cntxdirty^0 == 0 /\ -a66^post15+a66^0 == 0 /\ a1010^0-a1010^post15 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post15 == 0 /\ -a1414^post15+a1414^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post15 == 0 /\ tmp___14^0-tmp___14^post15 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post15 == 0 /\ nbuffers^0-nbuffers^post15 == 0 /\ -nlocbuffer^post15+nlocbuffer^0 == 0 /\ -a^post15+a^0 == 0 /\ -istemp^post15+istemp^0 == 0 /\ tmp1212^0-tmp1212^post15 == 0 /\ -bufhdr_flags^post15+bufhdr_flags^0 == 0 /\ i^0-i^post15 == 0 /\ b1111^0-b1111^post15 == 0 /\ -firstdelblock^post15+firstdelblock^0 == 0 /\ -tmp1^post15+tmp1^0 == 0), cost: 1
  24: l13 -> l19 : a1010^0'=a1010^post25, a1414^0'=a1414^post25, a66^0'=a66^post25, a^0'=a^post25, b1111^0'=b1111^post25, b77^0'=b77^post25, bufhdr___01515^0'=bufhdr___01515^post25, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post25, bufhdr_flags^0'=bufhdr_flags^post25, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post25, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post25, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post25, firstdelblock^0'=firstdelblock^post25, i^0'=i^post25, istemp^0'=istemp^post25, nbuffers^0'=nbuffers^post25, nlocbuffer^0'=nlocbuffer^post25, r^0'=r^post25, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post25, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post25, rnode^0'=rnode^post25, tmp1212^0'=tmp1212^post25, tmp1^0'=tmp1^post25, tmp88^0'=tmp88^post25, tmp___03^0'=tmp___03^post25, tmp___14^0'=tmp___14^post25, (a^0-a^post25 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post25 == 0 /\ a1010^0-a1010^post25 == 0 /\ istemp^0-istemp^post25 == 0 /\ -bufhdr_tag_rnode^post25+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post25 == 0 /\ -bufhdr_cntxdirty^post25+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post25+bufhdr_flags^0 == 0 /\ nbuffers^0-nbuffers^post25 == 0 /\ -tmp___14^post25+tmp___14^0 == 0 /\ -ret_relfilenodeequals1313^post25+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post25 == 0 /\ rnode^0-rnode^post25 == 0 /\ b1111^0-b1111^post25 == 0 /\ -i^post25+i^0 == 0 /\ tmp1212^0-tmp1212^post25 == 0 /\ -r^post25+r^0 == 0 /\ -tmp1^post25+tmp1^0 == 0 /\ -a1414^post25+a1414^0 == 0 /\ -b77^post25+b77^0 == 0 /\ tmp___03^0-tmp___03^post25 == 0 /\ a66^0-a66^post25 == 0 /\ bufhdr___01515^0-bufhdr___01515^post25 == 0 /\ -firstdelblock^post25+firstdelblock^0 == 0 /\ -tmp88^post25+tmp88^0 == 0 /\ -nlocbuffer^post25+nlocbuffer^0 == 0), cost: 1
  15: l14 -> l15 : a1010^0'=a1010^post16, a1414^0'=a1414^post16, a66^0'=a66^post16, a^0'=a^post16, b1111^0'=b1111^post16, b77^0'=b77^post16, bufhdr___01515^0'=bufhdr___01515^post16, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post16, bufhdr_flags^0'=bufhdr_flags^post16, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post16, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post16, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post16, firstdelblock^0'=firstdelblock^post16, i^0'=i^post16, istemp^0'=istemp^post16, nbuffers^0'=nbuffers^post16, nlocbuffer^0'=nlocbuffer^post16, r^0'=r^post16, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post16, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post16, rnode^0'=rnode^post16, tmp1212^0'=tmp1212^post16, tmp1^0'=tmp1^post16, tmp88^0'=tmp88^post16, tmp___03^0'=tmp___03^post16, tmp___14^0'=tmp___14^post16, (b77^0-b77^post16 == 0 /\ -tmp1^post16+tmp1^0 == 0 /\ a1010^0-a1010^post16 == 0 /\ -ret_relfilenodeequals99^post16+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post16 == 0 /\ a66^0-a66^post16 == 0 /\ -bufhdr_cntxdirty^post16+bufhdr_cntxdirty^0 == 0 /\ -nlocbuffer^post16+nlocbuffer^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post16 == 0 /\ r^0-r^post16 == 0 /\ -tmp88^post16+tmp88^0 == 0 /\ -tmp___14^post16+tmp___14^0 == 0 /\ -firstdelblock^post16+firstdelblock^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post16 == 0 /\ tmp___03^0-tmp___03^post16 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post16 == 0 /\ -bufhdr_tag_rnode^post16+bufhdr_tag_rnode^0 == 0 /\ -a1414^post16+a1414^0 == 0 /\ istemp^0-istemp^post16 == 0 /\ -bufhdr___01515^post16+bufhdr___01515^0 == 0 /\ -i^post16+i^0 == 0 /\ tmp1212^0-tmp1212^post16 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post16 == 0 /\ b1111^0-b1111^post16 == 0 /\ nbuffers^0-nbuffers^post16 == 0 /\ -a^post16+a^0 == 0), cost: 1
  16: l15 -> l5 : a1010^0'=a1010^post17, a1414^0'=a1414^post17, a66^0'=a66^post17, a^0'=a^post17, b1111^0'=b1111^post17, b77^0'=b77^post17, bufhdr___01515^0'=bufhdr___01515^post17, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post17, bufhdr_flags^0'=bufhdr_flags^post17, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post17, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post17, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post17, firstdelblock^0'=firstdelblock^post17, i^0'=i^post17, istemp^0'=istemp^post17, nbuffers^0'=nbuffers^post17, nlocbuffer^0'=nlocbuffer^post17, r^0'=r^post17, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post17, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post17, rnode^0'=rnode^post17, tmp1212^0'=tmp1212^post17, tmp1^0'=tmp1^post17, tmp88^0'=tmp88^post17, tmp___03^0'=tmp___03^post17, tmp___14^0'=tmp___14^post17, (bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post17 == 0 /\ -bufhdr_tag_rnode^post17+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_flags^post17+bufhdr_flags^0 == 0 /\ istemp^0-istemp^post17 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post17 == 0 /\ -bufhdr_cntxdirty^post17+bufhdr_cntxdirty^0 == 0 /\ -1+i^post17 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post17 == 0 /\ rnode^0-rnode^post17 == 0 /\ tmp___14^0-tmp___14^post17 == 0 /\ -tmp___03^post17+tmp___03^0 == 0 /\ -nbuffers^post17+nbuffers^0 == 0 /\ -tmp1212^post17+tmp1212^0 == 0 /\ -b77^post17+b77^0 == 0 /\ a^post17 == 0 /\ a1414^0-a1414^post17 == 0 /\ a1010^0-a1010^post17 == 0 /\ -tmp1^post17+tmp1^0 == 0 /\ -1+a^1 == 0 /\ -a66^post17+a66^0 == 0 /\ -tmp88^post17+tmp88^0 == 0 /\ b1111^0-b1111^post17 == 0 /\ -ret_relfilenodeequals1313^post17+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post17+firstdelblock^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post17 == 0 /\ r^0-r^post17 == 0 /\ -nlocbuffer^post17+nlocbuffer^0 == 0), cost: 1
  18: l16 -> l2 : a1010^0'=a1010^post19, a1414^0'=a1414^post19, a66^0'=a66^post19, a^0'=a^post19, b1111^0'=b1111^post19, b77^0'=b77^post19, bufhdr___01515^0'=bufhdr___01515^post19, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post19, bufhdr_flags^0'=bufhdr_flags^post19, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post19, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post19, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post19, firstdelblock^0'=firstdelblock^post19, i^0'=i^post19, istemp^0'=istemp^post19, nbuffers^0'=nbuffers^post19, nlocbuffer^0'=nlocbuffer^post19, r^0'=r^post19, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post19, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post19, rnode^0'=rnode^post19, tmp1212^0'=tmp1212^post19, tmp1^0'=tmp1^post19, tmp88^0'=tmp88^post19, tmp___03^0'=tmp___03^post19, tmp___14^0'=tmp___14^post19, (-tmp88^post19+tmp88^0 == 0 /\ a^0-a^post19 == 0 /\ -a1414^post19+a1414^0 == 0 /\ -tmp___03^post19+tmp___03^0 == 0 /\ nlocbuffer^0-nlocbuffer^post19 == 0 /\ -ret_relfilenodeequals1313^post19+ret_relfilenodeequals1313^0 == 0 /\ -1-i^0+i^post19 == 0 /\ a1010^0-a1010^post19 == 0 /\ istemp^0-istemp^post19 == 0 /\ -bufhdr_cntxdirty^post19+bufhdr_cntxdirty^0 == 0 /\ rnode^0-rnode^post19 == 0 /\ -b77^post19+b77^0 == 0 /\ b1111^0-b1111^post19 == 0 /\ -firstdelblock^post19+firstdelblock^0 == 0 /\ nbuffers^0-nbuffers^post19 == 0 /\ -bufhdr_tag_rnode_relnode^post19+bufhdr_tag_rnode_relnode^0 == 0 /\ tmp___14^0-tmp___14^post19 == 0 /\ bufhdr___01515^0-bufhdr___01515^post19 == 0 /\ tmp1^0-tmp1^post19 == 0 /\ -bufhdr_tag_rnode^post19+bufhdr_tag_rnode^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post19 == 0 /\ a66^0-a66^post19 == 0 /\ -bufhdr_flags^post19+bufhdr_flags^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post19 == 0 /\ tmp1212^0-tmp1212^post19 == 0 /\ -r^post19+r^0 == 0), cost: 1
  19: l17 -> l16 : a1010^0'=a1010^post20, a1414^0'=a1414^post20, a66^0'=a66^post20, a^0'=a^post20, b1111^0'=b1111^post20, b77^0'=b77^post20, bufhdr___01515^0'=bufhdr___01515^post20, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post20, bufhdr_flags^0'=bufhdr_flags^post20, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post20, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post20, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post20, firstdelblock^0'=firstdelblock^post20, i^0'=i^post20, istemp^0'=istemp^post20, nbuffers^0'=nbuffers^post20, nlocbuffer^0'=nlocbuffer^post20, r^0'=r^post20, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post20, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post20, rnode^0'=rnode^post20, tmp1212^0'=tmp1212^post20, tmp1^0'=tmp1^post20, tmp88^0'=tmp88^post20, tmp___03^0'=tmp___03^post20, tmp___14^0'=tmp___14^post20, (nbuffers^0-nbuffers^post20 == 0 /\ -firstdelblock^post20+firstdelblock^0 == 0 /\ rnode^0-rnode^post20 == 0 /\ nlocbuffer^0-nlocbuffer^post20 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post20 == 0 /\ -r^post20+r^0 == 0 /\ -i^post20+i^0 == 0 /\ a1010^0-a1010^post20 == 0 /\ b1111^0-b1111^post20 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0 /\ -bufhdr_tag_rnode_relnode^post20+bufhdr_tag_rnode_relnode^0 == 0 /\ tmp1^0-tmp1^post20 == 0 /\ a^0-a^post20 == 0 /\ -a1414^post20+a1414^0 == 0 /\ -tmp___14^post20+tmp___14^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post20 == 0 /\ istemp^0-istemp^post20 == 0 /\ bufhdr___01515^0-bufhdr___01515^post20 == 0 /\ -ret_relfilenodeequals1313^post20+ret_relfilenodeequals1313^0 == 0 /\ tmp1212^0-tmp1212^post20 == 0 /\ tmp___03^0-tmp___03^post20 == 0 /\ -tmp88^post20+tmp88^0 == 0 /\ -bufhdr_tag_rnode^post20+bufhdr_tag_rnode^0 == 0 /\ a66^0-a66^post20 == 0 /\ -b77^post20+b77^0 == 0 /\ -bufhdr_flags^post20+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post20+bufhdr_cntxdirty^0 == 0), cost: 1
  20: l17 -> l16 : a1010^0'=a1010^post21, a1414^0'=a1414^post21, a66^0'=a66^post21, a^0'=a^post21, b1111^0'=b1111^post21, b77^0'=b77^post21, bufhdr___01515^0'=bufhdr___01515^post21, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post21, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post21, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post21, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post21, firstdelblock^0'=firstdelblock^post21, i^0'=i^post21, istemp^0'=istemp^post21, nbuffers^0'=nbuffers^post21, nlocbuffer^0'=nlocbuffer^post21, r^0'=r^post21, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post21, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post21, rnode^0'=rnode^post21, tmp1212^0'=tmp1212^post21, tmp1^0'=tmp1^post21, tmp88^0'=tmp88^post21, tmp___03^0'=tmp___03^post21, tmp___14^0'=tmp___14^post21, (0 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0 /\ r^0-r^post21 == 0 /\ rnode^0-rnode^post21 == 0 /\ -a1414^post21+a1414^0 == 0 /\ a66^0-a66^post21 == 0 /\ b1111^0-b1111^post21 == 0 /\ -nlocbuffer^post21+nlocbuffer^0 == 0 /\ a1010^0-a1010^post21 == 0 /\ istemp^0-istemp^post21 == 0 /\ -bufhdr_tag_rnode^post21+bufhdr_tag_rnode^0 == 0 /\ b77^0-b77^post21 == 0 /\ -a^post21+a^0 == 0 /\ -bufhdr___01515^post21+bufhdr___01515^0 == 0 /\ -tmp1^post21+tmp1^0 == 0 /\ -tmp88^post21+tmp88^0 == 0 /\ -tmp___14^post21+tmp___14^0 == 0 /\ tmp1212^0-tmp1212^post21 == 0 /\ -1+bufhdr_tag_rnode_relnode^post21 == 0 /\ bufhdr_cntxdirty^post21 == 0 /\ -firstdelblock^post21+firstdelblock^0 == 0 /\ -ret_relfilenodeequals99^post21+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post21+ret_relfilenodeequals1313^0 == 0 /\ -i^post21+i^0 == 0 /\ -nbuffers^post21+nbuffers^0 == 0 /\ -bufhdr_tag_blocknum^post21+bufhdr_tag_blocknum^0 == 0 /\ tmp___03^0-tmp___03^post21 == 0), cost: 1
  21: l18 -> l16 : a1010^0'=a1010^post22, a1414^0'=a1414^post22, a66^0'=a66^post22, a^0'=a^post22, b1111^0'=b1111^post22, b77^0'=b77^post22, bufhdr___01515^0'=bufhdr___01515^post22, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post22, bufhdr_flags^0'=bufhdr_flags^post22, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post22, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post22, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post22, firstdelblock^0'=firstdelblock^post22, i^0'=i^post22, istemp^0'=istemp^post22, nbuffers^0'=nbuffers^post22, nlocbuffer^0'=nlocbuffer^post22, r^0'=r^post22, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post22, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post22, rnode^0'=rnode^post22, tmp1212^0'=tmp1212^post22, tmp1^0'=tmp1^post22, tmp88^0'=tmp88^post22, tmp___03^0'=tmp___03^post22, tmp___14^0'=tmp___14^post22, (rnode^0-rnode^post22 == 0 /\ -tmp1^post22+tmp1^0 == 0 /\ r^0-r^post22 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post22 == 0 /\ -tmp1^0 <= 0 /\ b1111^0-b1111^post22 == 0 /\ -a66^post22+a66^0 == 0 /\ b77^0-b77^post22 == 0 /\ -bufhdr_tag_rnode^post22+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_cntxdirty^post22+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post22+bufhdr___01515^0 == 0 /\ -nlocbuffer^post22+nlocbuffer^0 == 0 /\ -nbuffers^post22+nbuffers^0 == 0 /\ -i^post22+i^0 == 0 /\ -tmp88^post22+tmp88^0 == 0 /\ istemp^0-istemp^post22 == 0 /\ tmp1^0 <= 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post22 == 0 /\ -tmp1212^post22+tmp1212^0 == 0 /\ -a^post22+a^0 == 0 /\ -firstdelblock^post22+firstdelblock^0 == 0 /\ a1414^0-a1414^post22 == 0 /\ tmp___03^0-tmp___03^post22 == 0 /\ -ret_relfilenodeequals99^post22+ret_relfilenodeequals99^0 == 0 /\ a1010^0-a1010^post22 == 0 /\ tmp___14^0-tmp___14^post22 == 0 /\ bufhdr_flags^0-bufhdr_flags^post22 == 0 /\ -bufhdr_tag_blocknum^post22+bufhdr_tag_blocknum^0 == 0), cost: 1
  22: l18 -> l17 : a1010^0'=a1010^post23, a1414^0'=a1414^post23, a66^0'=a66^post23, a^0'=a^post23, b1111^0'=b1111^post23, b77^0'=b77^post23, bufhdr___01515^0'=bufhdr___01515^post23, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post23, bufhdr_flags^0'=bufhdr_flags^post23, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post23, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post23, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post23, firstdelblock^0'=firstdelblock^post23, i^0'=i^post23, istemp^0'=istemp^post23, nbuffers^0'=nbuffers^post23, nlocbuffer^0'=nlocbuffer^post23, r^0'=r^post23, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post23, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post23, rnode^0'=rnode^post23, tmp1212^0'=tmp1212^post23, tmp1^0'=tmp1^post23, tmp88^0'=tmp88^post23, tmp___03^0'=tmp___03^post23, tmp___14^0'=tmp___14^post23, (bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post23 == 0 /\ -bufhdr_cntxdirty^post23+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post23+bufhdr_flags^0 == 0 /\ -tmp___03^post23+tmp___03^0 == 0 /\ -tmp88^post23+tmp88^0 == 0 /\ -b77^post23+b77^0 == 0 /\ 1-tmp1^0 <= 0 /\ nbuffers^0-nbuffers^post23 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post23 == 0 /\ -a66^post23+a66^0 == 0 /\ rnode^0-rnode^post23 == 0 /\ -ret_relfilenodeequals1313^post23+ret_relfilenodeequals1313^0 == 0 /\ -a^post23+a^0 == 0 /\ i^0-i^post23 == 0 /\ b1111^0-b1111^post23 == 0 /\ -firstdelblock^post23+firstdelblock^0 == 0 /\ -r^post23+r^0 == 0 /\ tmp1^0-tmp1^post23 == 0 /\ -nlocbuffer^post23+nlocbuffer^0 == 0 /\ istemp^0-istemp^post23 == 0 /\ tmp___14^0-tmp___14^post23 == 0 /\ bufhdr___01515^0-bufhdr___01515^post23 == 0 /\ tmp1212^0-tmp1212^post23 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post23 == 0 /\ -bufhdr_tag_rnode_relnode^post23+bufhdr_tag_rnode_relnode^0 == 0 /\ a1414^0-a1414^post23 == 0 /\ a1010^0-a1010^post23 == 0), cost: 1
  23: l18 -> l17 : a1010^0'=a1010^post24, a1414^0'=a1414^post24, a66^0'=a66^post24, a^0'=a^post24, b1111^0'=b1111^post24, b77^0'=b77^post24, bufhdr___01515^0'=bufhdr___01515^post24, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post24, bufhdr_flags^0'=bufhdr_flags^post24, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post24, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post24, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post24, firstdelblock^0'=firstdelblock^post24, i^0'=i^post24, istemp^0'=istemp^post24, nbuffers^0'=nbuffers^post24, nlocbuffer^0'=nlocbuffer^post24, r^0'=r^post24, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post24, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post24, rnode^0'=rnode^post24, tmp1212^0'=tmp1212^post24, tmp1^0'=tmp1^post24, tmp88^0'=tmp88^post24, tmp___03^0'=tmp___03^post24, tmp___14^0'=tmp___14^post24, (-bufhdr_cntxdirty^post24+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post24+bufhdr_flags^0 == 0 /\ -i^post24+i^0 == 0 /\ nbuffers^0-nbuffers^post24 == 0 /\ -b77^post24+b77^0 == 0 /\ a^0-a^post24 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post24 == 0 /\ -firstdelblock^post24+firstdelblock^0 == 0 /\ -tmp___03^post24+tmp___03^0 == 0 /\ -bufhdr_tag_rnode_relnode^post24+bufhdr_tag_rnode_relnode^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post24 == 0 /\ -ret_relfilenodeequals1313^post24+ret_relfilenodeequals1313^0 == 0 /\ istemp^0-istemp^post24 == 0 /\ -a1010^post24+a1010^0 == 0 /\ rnode^0-rnode^post24 == 0 /\ 1+tmp1^0 <= 0 /\ -r^post24+r^0 == 0 /\ -nlocbuffer^post24+nlocbuffer^0 == 0 /\ b1111^0-b1111^post24 == 0 /\ tmp1^0-tmp1^post24 == 0 /\ tmp1212^0-tmp1212^post24 == 0 /\ a66^0-a66^post24 == 0 /\ tmp___14^0-tmp___14^post24 == 0 /\ -tmp88^post24+tmp88^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post24 == 0 /\ -a1414^post24+a1414^0 == 0 /\ -bufhdr_tag_rnode^post24+bufhdr_tag_rnode^0 == 0), cost: 1
  25: l19 -> l13 : a1010^0'=a1010^post26, a1414^0'=a1414^post26, a66^0'=a66^post26, a^0'=a^post26, b1111^0'=b1111^post26, b77^0'=b77^post26, bufhdr___01515^0'=bufhdr___01515^post26, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post26, bufhdr_flags^0'=bufhdr_flags^post26, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post26, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post26, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post26, firstdelblock^0'=firstdelblock^post26, i^0'=i^post26, istemp^0'=istemp^post26, nbuffers^0'=nbuffers^post26, nlocbuffer^0'=nlocbuffer^post26, r^0'=r^post26, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post26, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post26, rnode^0'=rnode^post26, tmp1212^0'=tmp1212^post26, tmp1^0'=tmp1^post26, tmp88^0'=tmp88^post26, tmp___03^0'=tmp___03^post26, tmp___14^0'=tmp___14^post26, (tmp___14^0-tmp___14^post26 == 0 /\ -a^post26+a^0 == 0 /\ -nlocbuffer^post26+nlocbuffer^0 == 0 /\ -nbuffers^post26+nbuffers^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post26 == 0 /\ a1010^0-a1010^post26 == 0 /\ -tmp1^post26+tmp1^0 == 0 /\ rnode^0-rnode^post26 == 0 /\ -tmp88^post26+tmp88^0 == 0 /\ i^0-i^post26 == 0 /\ -a1414^post26+a1414^0 == 0 /\ b1111^0-b1111^post26 == 0 /\ istemp^0-istemp^post26 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post26 == 0 /\ b77^0-b77^post26 == 0 /\ -tmp1212^post26+tmp1212^0 == 0 /\ -bufhdr_tag_rnode^post26+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_cntxdirty^post26+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post26+bufhdr___01515^0 == 0 /\ -firstdelblock^post26+firstdelblock^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post26 == 0 /\ -a66^post26+a66^0 == 0 /\ -ret_relfilenodeequals1313^post26+ret_relfilenodeequals1313^0 == 0 /\ r^0-r^post26 == 0 /\ bufhdr_flags^0-bufhdr_flags^post26 == 0 /\ tmp___03^0-tmp___03^post26 == 0), cost: 1
  28: l20 -> l15 : a1010^0'=a1010^post29, a1414^0'=a1414^post29, a66^0'=a66^post29, a^0'=a^post29, b1111^0'=b1111^post29, b77^0'=b77^post29, bufhdr___01515^0'=bufhdr___01515^post29, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post29, bufhdr_flags^0'=bufhdr_flags^post29, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post29, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post29, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post29, firstdelblock^0'=firstdelblock^post29, i^0'=i^post29, istemp^0'=istemp^post29, nbuffers^0'=nbuffers^post29, nlocbuffer^0'=nlocbuffer^post29, r^0'=r^post29, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post29, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post29, rnode^0'=rnode^post29, tmp1212^0'=tmp1212^post29, tmp1^0'=tmp1^post29, tmp88^0'=tmp88^post29, tmp___03^0'=tmp___03^post29, tmp___14^0'=tmp___14^post29, (tmp1^0-tmp1^post29 == 0 /\ tmp1212^0-tmp1212^post29 == 0 /\ -bufhdr_tag_rnode^post29+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_tag_blocknum^post29+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post29 == 0 /\ 2-istemp^0 <= 0 /\ -bufhdr_cntxdirty^post29+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post29+bufhdr___01515^0 == 0 /\ a66^0-a66^post29 == 0 /\ b77^0-b77^post29 == 0 /\ tmp___14^0-tmp___14^post29 == 0 /\ -nlocbuffer^post29+nlocbuffer^0 == 0 /\ -tmp___03^post29+tmp___03^0 == 0 /\ a1010^0-a1010^post29 == 0 /\ -i^post29+i^0 == 0 /\ -a^post29+a^0 == 0 /\ rnode^0-rnode^post29 == 0 /\ bufhdr_flags^0-bufhdr_flags^post29 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post29 == 0 /\ -ret_relfilenodeequals99^post29+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post29+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post29+firstdelblock^0 == 0 /\ -a1414^post29+a1414^0 == 0 /\ istemp^0-istemp^post29 == 0 /\ -tmp88^post29+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post29 == 0 /\ -r^post29+r^0 == 0), cost: 1
  29: l20 -> l15 : a1010^0'=a1010^post30, a1414^0'=a1414^post30, a66^0'=a66^post30, a^0'=a^post30, b1111^0'=b1111^post30, b77^0'=b77^post30, bufhdr___01515^0'=bufhdr___01515^post30, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post30, bufhdr_flags^0'=bufhdr_flags^post30, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post30, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post30, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post30, firstdelblock^0'=firstdelblock^post30, i^0'=i^post30, istemp^0'=istemp^post30, nbuffers^0'=nbuffers^post30, nlocbuffer^0'=nlocbuffer^post30, r^0'=r^post30, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post30, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post30, rnode^0'=rnode^post30, tmp1212^0'=tmp1212^post30, tmp1^0'=tmp1^post30, tmp88^0'=tmp88^post30, tmp___03^0'=tmp___03^post30, tmp___14^0'=tmp___14^post30, (-tmp1212^post30+tmp1212^0 == 0 /\ b1111^0-b1111^post30 == 0 /\ istemp^0 <= 0 /\ -ret_relfilenodeequals99^post30+ret_relfilenodeequals99^0 == 0 /\ -bufhdr_tag_rnode^post30+bufhdr_tag_rnode^0 == 0 /\ tmp___14^0-tmp___14^post30 == 0 /\ b77^0-b77^post30 == 0 /\ -i^post30+i^0 == 0 /\ r^0-r^post30 == 0 /\ a66^0-a66^post30 == 0 /\ -bufhdr___01515^post30+bufhdr___01515^0 == 0 /\ -tmp___03^post30+tmp___03^0 == 0 /\ -tmp1^post30+tmp1^0 == 0 /\ a1010^0-a1010^post30 == 0 /\ istemp^0-istemp^post30 == 0 /\ -a1414^post30+a1414^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post30 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post30 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post30 == 0 /\ nbuffers^0-nbuffers^post30 == 0 /\ -bufhdr_tag_blocknum^post30+bufhdr_tag_blocknum^0 == 0 /\ -bufhdr_cntxdirty^post30+bufhdr_cntxdirty^0 == 0 /\ -nlocbuffer^post30+nlocbuffer^0 == 0 /\ -a^post30+a^0 == 0 /\ rnode^0-rnode^post30 == 0 /\ -firstdelblock^post30+firstdelblock^0 == 0 /\ -tmp88^post30+tmp88^0 == 0), cost: 1
  30: l20 -> l2 : a1010^0'=a1010^post31, a1414^0'=a1414^post31, a66^0'=a66^post31, a^0'=a^post31, b1111^0'=b1111^post31, b77^0'=b77^post31, bufhdr___01515^0'=bufhdr___01515^post31, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post31, bufhdr_flags^0'=bufhdr_flags^post31, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post31, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post31, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post31, firstdelblock^0'=firstdelblock^post31, i^0'=i^post31, istemp^0'=istemp^post31, nbuffers^0'=nbuffers^post31, nlocbuffer^0'=nlocbuffer^post31, r^0'=r^post31, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post31, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post31, rnode^0'=rnode^post31, tmp1212^0'=tmp1212^post31, tmp1^0'=tmp1^post31, tmp88^0'=tmp88^post31, tmp___03^0'=tmp___03^post31, tmp___14^0'=tmp___14^post31, (-tmp1^post31+tmp1^0 == 0 /\ -bufhdr_tag_rnode_relnode^post31+bufhdr_tag_rnode_relnode^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post31 == 0 /\ -rnode^post31+rnode^0 == 0 /\ -ret_relfilenodeequals1313^post31+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_cntxdirty^post31+bufhdr_cntxdirty^0 == 0 /\ 1-istemp^0 <= 0 /\ -1+istemp^0 <= 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post31 == 0 /\ -b77^post31+b77^0 == 0 /\ -tmp88^post31+tmp88^0 == 0 /\ -r^post31+r^0 == 0 /\ tmp___14^0-tmp___14^post31 == 0 /\ a1010^0-a1010^post31 == 0 /\ nbuffers^0-nbuffers^post31 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post31 == 0 /\ -bufhdr_flags^post31+bufhdr_flags^0 == 0 /\ -a1414^post31+a1414^0 == 0 /\ -a66^post31+a66^0 == 0 /\ tmp1212^0-tmp1212^post31 == 0 /\ i^post31 == 0 /\ -firstdelblock^post31+firstdelblock^0 == 0 /\ -nlocbuffer^post31+nlocbuffer^0 == 0 /\ -istemp^post31+istemp^0 == 0 /\ -tmp___03^post31+tmp___03^0 == 0 /\ b1111^0-b1111^post31 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post31 == 0 /\ -a^post31+a^0 == 0), cost: 1
  31: l21 -> l20 : a1010^0'=a1010^post32, a1414^0'=a1414^post32, a66^0'=a66^post32, a^0'=a^post32, b1111^0'=b1111^post32, b77^0'=b77^post32, bufhdr___01515^0'=bufhdr___01515^post32, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post32, bufhdr_flags^0'=bufhdr_flags^post32, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post32, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post32, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post32, firstdelblock^0'=firstdelblock^post32, i^0'=i^post32, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=r^post32, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post32, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post32, rnode^0'=rnode^post32, tmp1212^0'=tmp1212^post32, tmp1^0'=tmp1^post32, tmp88^0'=tmp88^post32, tmp___03^0'=tmp___03^post32, tmp___14^0'=tmp___14^post32, (0 == 0 /\ -tmp88^post32+tmp88^0 == 0 /\ -tmp___03^post32+tmp___03^0 == 0 /\ -r^post32+a^post32 == 0 /\ -firstdelblock^post32+firstdelblock^0 == 0 /\ r^post32 == 0 /\ -ret_relfilenodeequals1313^post32+ret_relfilenodeequals1313^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post32 == 0 /\ rnode^0-rnode^post32 == 0 /\ -bufhdr_tag_rnode_relnode^post32+bufhdr_tag_rnode_relnode^0 == 0 /\ -bufhdr_cntxdirty^post32+bufhdr_cntxdirty^0 == 0 /\ -b77^post32+b77^0 == 0 /\ a1010^0-a1010^post32 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post32 == 0 /\ -a66^post32+a66^0 == 0 /\ -a1414^post32+a1414^0 == 0 /\ tmp___14^0-tmp___14^post32 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post32 == 0 /\ tmp1^0-tmp1^post32 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post32 == 0 /\ tmp1212^0-tmp1212^post32 == 0 /\ i^0-i^post32 == 0 /\ -bufhdr_flags^post32+bufhdr_flags^0 == 0 /\ b1111^0-b1111^post32 == 0), cost: 1
  32: l22 -> l21 : a1010^0'=a1010^post33, a1414^0'=a1414^post33, a66^0'=a66^post33, a^0'=a^post33, b1111^0'=b1111^post33, b77^0'=b77^post33, bufhdr___01515^0'=bufhdr___01515^post33, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post33, bufhdr_flags^0'=bufhdr_flags^post33, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post33, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post33, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post33, firstdelblock^0'=firstdelblock^post33, i^0'=i^post33, istemp^0'=istemp^post33, nbuffers^0'=nbuffers^post33, nlocbuffer^0'=nlocbuffer^post33, r^0'=r^post33, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post33, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post33, rnode^0'=rnode^post33, tmp1212^0'=tmp1212^post33, tmp1^0'=tmp1^post33, tmp88^0'=tmp88^post33, tmp___03^0'=tmp___03^post33, tmp___14^0'=tmp___14^post33, (-tmp88^post33+tmp88^0 == 0 /\ -tmp___14^post33+tmp___14^0 == 0 /\ tmp1212^0-tmp1212^post33 == 0 /\ a1010^0-a1010^post33 == 0 /\ -nlocbuffer^post33+nlocbuffer^0 == 0 /\ -bufhdr_tag_blocknum^post33+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post33 == 0 /\ bufhdr_flags^0-bufhdr_flags^post33 == 0 /\ -bufhdr_cntxdirty^post33+bufhdr_cntxdirty^0 == 0 /\ -a1414^post33+a1414^0 == 0 /\ a^0-a^post33 == 0 /\ -firstdelblock^post33+firstdelblock^0 == 0 /\ tmp___03^0-tmp___03^post33 == 0 /\ -b77^post33+b77^0 == 0 /\ rnode^0-rnode^post33 == 0 /\ -ret_relfilenodeequals99^post33+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post33+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post33 == 0 /\ -bufhdr_tag_rnode^post33+bufhdr_tag_rnode^0 == 0 /\ -i^post33+i^0 == 0 /\ -bufhdr___01515^post33+bufhdr___01515^0 == 0 /\ -r^post33+r^0 == 0 /\ istemp^0-istemp^post33 == 0 /\ -tmp1^post33+tmp1^0 == 0 /\ a66^0-a66^post33 == 0 /\ nbuffers^0-nbuffers^post33 == 0), cost: 1

Chained Linear Paths

Start location: l22
Program variables: a1010^0 a1414^0 a66^0 a^0 b1111^0 b77^0 bufhdr___01515^0 bufhdr_cntxdirty^0 bufhdr_flags^0 bufhdr_tag_blocknum^0 bufhdr_tag_rnode^0 bufhdr_tag_rnode_relnode^0 firstdelblock^0 i^0 istemp^0 nbuffers^0 nlocbuffer^0 r^0 ret_relfilenodeequals1313^0 ret_relfilenodeequals99^0 rnode^0 tmp1212^0 tmp1^0 tmp88^0 tmp___03^0 tmp___14^0
   0: l0 -> l1 : a1010^0'=a1010^post1, a1414^0'=a1414^post1, a66^0'=a66^post1, a^0'=a^post1, b1111^0'=b1111^post1, b77^0'=b77^post1, bufhdr___01515^0'=bufhdr___01515^post1, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post1, bufhdr_flags^0'=bufhdr_flags^post1, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post1, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post1, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post1, firstdelblock^0'=firstdelblock^post1, i^0'=i^post1, istemp^0'=istemp^post1, nbuffers^0'=nbuffers^post1, nlocbuffer^0'=nlocbuffer^post1, r^0'=r^post1, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post1, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post1, rnode^0'=rnode^post1, tmp1212^0'=tmp1212^post1, tmp1^0'=tmp1^post1, tmp88^0'=tmp88^post1, tmp___03^0'=tmp___03^post1, tmp___14^0'=tmp___14^post1, (r^0-r^post1 == 0 /\ -tmp___03^post1+tmp___03^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post1 == 0 /\ -firstdelblock^post1+firstdelblock^0 == 0 /\ rnode^0-rnode^post1 == 0 /\ tmp___14^0-tmp___14^post1 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post1 == 0 /\ -a^post1+a^0 == 0 /\ -i^post1+i^0 == 0 /\ -nlocbuffer^post1+nlocbuffer^0 == 0 /\ -nbuffers^post1+nbuffers^0 == 0 /\ -a1414^post1+a1414^0 == 0 /\ -tmp1^post1+tmp1^0 == 0 /\ a66^0-a66^post1 == 0 /\ istemp^0-istemp^post1 == 0 /\ -bufhdr_cntxdirty^post1+bufhdr_cntxdirty^0 == 0 /\ -b77^post1+b77^0 == 0 /\ -ret_relfilenodeequals99^post1+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post1+ret_relfilenodeequals1313^0 == 0 /\ tmp1212^0-tmp1212^post1 == 0 /\ -bufhdr___01515^post1+bufhdr___01515^0 == 0 /\ a1010^0-a1010^post1 == 0 /\ -tmp88^post1+tmp88^0 == 0 /\ b1111^0-b1111^post1 == 0 /\ -bufhdr_tag_rnode^post1+bufhdr_tag_rnode^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post1 == 0), cost: 1
   1: l2 -> l3 : a1010^0'=a1010^post2, a1414^0'=a1414^post2, a66^0'=a66^post2, a^0'=a^post2, b1111^0'=b1111^post2, b77^0'=b77^post2, bufhdr___01515^0'=bufhdr___01515^post2, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post2, bufhdr_flags^0'=bufhdr_flags^post2, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post2, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post2, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post2, firstdelblock^0'=firstdelblock^post2, i^0'=i^post2, istemp^0'=istemp^post2, nbuffers^0'=nbuffers^post2, nlocbuffer^0'=nlocbuffer^post2, r^0'=r^post2, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post2, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post2, rnode^0'=rnode^post2, tmp1212^0'=tmp1212^post2, tmp1^0'=tmp1^post2, tmp88^0'=tmp88^post2, tmp___03^0'=tmp___03^post2, tmp___14^0'=tmp___14^post2, (i^0-i^post2 == 0 /\ tmp___14^0-tmp___14^post2 == 0 /\ -nlocbuffer^post2+nlocbuffer^0 == 0 /\ -nbuffers^post2+nbuffers^0 == 0 /\ -tmp1^post2+tmp1^0 == 0 /\ rnode^0-rnode^post2 == 0 /\ -a^post2+a^0 == 0 /\ -tmp88^post2+tmp88^0 == 0 /\ istemp^0-istemp^post2 == 0 /\ -bufhdr_tag_rnode^post2+bufhdr_tag_rnode^0 == 0 /\ -ret_relfilenodeequals99^post2+ret_relfilenodeequals99^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post2 == 0 /\ -bufhdr_flags^post2+bufhdr_flags^0 == 0 /\ a1414^0-a1414^post2 == 0 /\ -firstdelblock^post2+firstdelblock^0 == 0 /\ -tmp1212^post2+tmp1212^0 == 0 /\ a1010^0-a1010^post2 == 0 /\ b1111^0-b1111^post2 == 0 /\ -bufhdr_tag_rnode_relnode^post2+bufhdr_tag_rnode_relnode^0 == 0 /\ r^0-r^post2 == 0 /\ -b77^post2+b77^0 == 0 /\ -a66^post2+a66^0 == 0 /\ -ret_relfilenodeequals1313^post2+ret_relfilenodeequals1313^0 == 0 /\ tmp___03^0-tmp___03^post2 == 0 /\ bufhdr___01515^0-bufhdr___01515^post2 == 0 /\ -bufhdr_cntxdirty^post2+bufhdr_cntxdirty^0 == 0), cost: 1
  26: l3 -> l6 : a1010^0'=a1010^post27, a1414^0'=a1414^post27, a66^0'=a66^post27, a^0'=a^post27, b1111^0'=b1111^post27, b77^0'=b77^post27, bufhdr___01515^0'=bufhdr___01515^post27, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post27, bufhdr_flags^0'=bufhdr_flags^post27, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post27, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post27, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post27, firstdelblock^0'=firstdelblock^post27, i^0'=i^post27, istemp^0'=istemp^post27, nbuffers^0'=nbuffers^post27, nlocbuffer^0'=nlocbuffer^post27, r^0'=r^post27, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post27, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post27, rnode^0'=rnode^post27, tmp1212^0'=tmp1212^post27, tmp1^0'=tmp1^post27, tmp88^0'=tmp88^post27, tmp___03^0'=tmp___03^post27, tmp___14^0'=tmp___14^post27, (r^0-r^post27 == 0 /\ tmp___14^0-tmp___14^post27 == 0 /\ -ret_relfilenodeequals1313^post27+ret_relfilenodeequals1313^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post27 == 0 /\ istemp^0-istemp^post27 == 0 /\ -bufhdr_cntxdirty^post27+bufhdr_cntxdirty^0 == 0 /\ -nlocbuffer^post27+nlocbuffer^0 == 0 /\ -b77^post27+b77^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post27 == 0 /\ -tmp88^post27+tmp88^0 == 0 /\ b1111^0-b1111^post27 == 0 /\ -firstdelblock^post27+firstdelblock^0 == 0 /\ a1414^0-a1414^post27 == 0 /\ -a66^post27+a66^0 == 0 /\ -bufhdr_tag_rnode^post27+bufhdr_tag_rnode^0 == 0 /\ rnode^0-rnode^post27 == 0 /\ -i^0+nlocbuffer^0 <= 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post27 == 0 /\ bufhdr_flags^0-bufhdr_flags^post27 == 0 /\ -i^post27+i^0 == 0 /\ -nbuffers^post27+nbuffers^0 == 0 /\ a1010^0-a1010^post27 == 0 /\ -bufhdr___01515^post27+bufhdr___01515^0 == 0 /\ -a^post27+a^0 == 0 /\ -tmp1212^post27+tmp1212^0 == 0 /\ -tmp1^post27+tmp1^0 == 0 /\ tmp___03^0-tmp___03^post27 == 0), cost: 1
  27: l3 -> l18 : a1010^0'=a1010^post28, a1414^0'=a1414^post28, a66^0'=a66^post28, a^0'=a^post28, b1111^0'=b1111^post28, b77^0'=b77^post28, bufhdr___01515^0'=bufhdr___01515^post28, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post28, bufhdr_flags^0'=bufhdr_flags^post28, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post28, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post28, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post28, firstdelblock^0'=firstdelblock^post28, i^0'=i^post28, istemp^0'=istemp^post28, nbuffers^0'=nbuffers^post28, nlocbuffer^0'=nlocbuffer^post28, r^0'=r^post28, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post28, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post28, rnode^0'=rnode^post28, tmp1212^0'=tmp1212^post28, tmp1^0'=tmp1^post28, tmp88^0'=tmp88^post28, tmp___03^0'=tmp___03^post28, tmp___14^0'=tmp___14^post28, (0 == 0 /\ a66^post28-bufhdr_tag_rnode^0 == 0 /\ istemp^0-istemp^post28 == 0 /\ tmp1212^0-tmp1212^post28 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post28 == 0 /\ -tmp___14^post28+tmp___14^0 == 0 /\ -rnode^0+b77^post28 == 0 /\ -ret_relfilenodeequals1313^post28+ret_relfilenodeequals1313^0 == 0 /\ -a^post28+a^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post28 == 0 /\ tmp___03^0-tmp___03^post28 == 0 /\ -r^post28+r^0 == 0 /\ -bufhdr_tag_rnode^post28+bufhdr_tag_rnode^0 == 0 /\ -i^post28+i^0 == 0 /\ -nlocbuffer^post28+nlocbuffer^0 == 0 /\ 1+i^0-nlocbuffer^0 <= 0 /\ a1414^0-a1414^post28 == 0 /\ -firstdelblock^post28+firstdelblock^0 == 0 /\ b1111^0-b1111^post28 == 0 /\ ret_relfilenodeequals99^post28-tmp88^post28 == 0 /\ a1010^0-a1010^post28 == 0 /\ -bufhdr_cntxdirty^post28+bufhdr_cntxdirty^0 == 0 /\ nbuffers^0-nbuffers^post28 == 0 /\ bufhdr___01515^0-bufhdr___01515^post28 == 0 /\ -ret_relfilenodeequals99^post28+tmp1^post28 == 0 /\ rnode^0-rnode^post28 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post28 == 0), cost: 1
   2: l4 -> l5 : a1010^0'=a1010^post3, a1414^0'=a1414^post3, a66^0'=a66^post3, a^0'=a^post3, b1111^0'=b1111^post3, b77^0'=b77^post3, bufhdr___01515^0'=bufhdr___01515^post3, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post3, bufhdr_flags^0'=bufhdr_flags^post3, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post3, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post3, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post3, firstdelblock^0'=firstdelblock^post3, i^0'=i^post3, istemp^0'=istemp^post3, nbuffers^0'=nbuffers^post3, nlocbuffer^0'=nlocbuffer^post3, r^0'=r^post3, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post3, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post3, rnode^0'=rnode^post3, tmp1212^0'=tmp1212^post3, tmp1^0'=tmp1^post3, tmp88^0'=tmp88^post3, tmp___03^0'=tmp___03^post3, tmp___14^0'=tmp___14^post3, (bufhdr___01515^0-bufhdr___01515^post3 == 0 /\ rnode^0-rnode^post3 == 0 /\ -ret_relfilenodeequals1313^post3+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post3 == 0 /\ -firstdelblock^post3+firstdelblock^0 == 0 /\ -a66^post3+a66^0 == 0 /\ tmp1^0-tmp1^post3 == 0 /\ -istemp^post3+istemp^0 == 0 /\ -a^post3+a^0 == 0 /\ tmp1212^0-tmp1212^post3 == 0 /\ -nlocbuffer^post3+nlocbuffer^0 == 0 /\ -bufhdr_cntxdirty^post3+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_tag_rnode^post3+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_flags^post3+bufhdr_flags^0 == 0 /\ -tmp88^post3+tmp88^0 == 0 /\ r^0-r^post3 == 0 /\ -tmp___03^post3+tmp___03^0 == 0 /\ -1-i^0+i^post3 == 0 /\ -b77^post3+b77^0 == 0 /\ -bufhdr_tag_rnode_relnode^post3+bufhdr_tag_rnode_relnode^0 == 0 /\ nbuffers^0-nbuffers^post3 == 0 /\ a1414^0-a1414^post3 == 0 /\ a1010^0-a1010^post3 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post3 == 0 /\ b1111^0-b1111^post3 == 0 /\ tmp___14^0-tmp___14^post3 == 0), cost: 1
  12: l5 -> l12 : a1010^0'=a1010^post13, a1414^0'=a1414^post13, a66^0'=a66^post13, a^0'=a^post13, b1111^0'=b1111^post13, b77^0'=b77^post13, bufhdr___01515^0'=bufhdr___01515^post13, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post13, bufhdr_flags^0'=bufhdr_flags^post13, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post13, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post13, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post13, firstdelblock^0'=firstdelblock^post13, i^0'=i^post13, istemp^0'=istemp^post13, nbuffers^0'=nbuffers^post13, nlocbuffer^0'=nlocbuffer^post13, r^0'=r^post13, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post13, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post13, rnode^0'=rnode^post13, tmp1212^0'=tmp1212^post13, tmp1^0'=tmp1^post13, tmp88^0'=tmp88^post13, tmp___03^0'=tmp___03^post13, tmp___14^0'=tmp___14^post13, (-tmp___14^post13+tmp___14^0 == 0 /\ -tmp88^post13+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post13 == 0 /\ -b77^post13+b77^0 == 0 /\ -ret_relfilenodeequals99^post13+ret_relfilenodeequals99^0 == 0 /\ -i^post13+i^0 == 0 /\ a^0-a^post13 == 0 /\ -firstdelblock^post13+firstdelblock^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post13 == 0 /\ r^0-r^post13 == 0 /\ -bufhdr_tag_rnode_relnode^post13+bufhdr_tag_rnode_relnode^0 == 0 /\ rnode^0-rnode^post13 == 0 /\ istemp^0-istemp^post13 == 0 /\ -bufhdr_cntxdirty^post13+bufhdr_cntxdirty^0 == 0 /\ -a1010^post13+a1010^0 == 0 /\ b1111^0-b1111^post13 == 0 /\ tmp___03^0-tmp___03^post13 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post13 == 0 /\ a66^0-a66^post13 == 0 /\ bufhdr___01515^0-bufhdr___01515^post13 == 0 /\ -nlocbuffer^post13+nlocbuffer^0 == 0 /\ tmp1212^0-tmp1212^post13 == 0 /\ -a1414^post13+a1414^0 == 0 /\ -bufhdr_tag_rnode^post13+bufhdr_tag_rnode^0 == 0 /\ -tmp1^post13+tmp1^0 == 0 /\ -bufhdr_flags^post13+bufhdr_flags^0 == 0), cost: 1
  34: l6 -> l6 : a1010^0'=a1010^post5, a1414^0'=a1414^post5, a66^0'=a66^post5, a^0'=a^post5, b1111^0'=b1111^post5, b77^0'=b77^post5, bufhdr___01515^0'=bufhdr___01515^post5, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post5, bufhdr_flags^0'=bufhdr_flags^post5, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post5, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post5, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post5, firstdelblock^0'=firstdelblock^post5, i^0'=i^post5, istemp^0'=istemp^post5, nbuffers^0'=nbuffers^post5, nlocbuffer^0'=nlocbuffer^post5, r^0'=r^post5, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post5, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post5, rnode^0'=rnode^post5, tmp1212^0'=tmp1212^post5, tmp1^0'=tmp1^post5, tmp88^0'=tmp88^post5, tmp___03^0'=tmp___03^post5, tmp___14^0'=tmp___14^post5, (b77^post4-b77^post5 == 0 /\ -b77^post4+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post4 == 0 /\ tmp1^0-tmp1^post4 == 0 /\ tmp___03^post4-tmp___03^post5 == 0 /\ -i^post5+i^post4 == 0 /\ -bufhdr_flags^post4+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post4+bufhdr_cntxdirty^0 == 0 /\ bufhdr___01515^post4-bufhdr___01515^post5 == 0 /\ istemp^0-istemp^post4 == 0 /\ r^post4-r^post5 == 0 /\ tmp___14^post4-tmp___14^post5 == 0 /\ ret_relfilenodeequals1313^post4-ret_relfilenodeequals1313^post5 == 0 /\ a^0-a^post4 == 0 /\ tmp1212^0-tmp1212^post4 == 0 /\ -a1010^post4+a1010^0 == 0 /\ nlocbuffer^post4-nlocbuffer^post5 == 0 /\ tmp___14^0-tmp___14^post4 == 0 /\ tmp1^post4-tmp1^post5 == 0 /\ -istemp^post5+istemp^post4 == 0 /\ -tmp___03^post4+tmp___03^0 == 0 /\ ret_relfilenodeequals99^post4-ret_relfilenodeequals99^post5 == 0 /\ a1010^post4-a1010^post5 == 0 /\ -nbuffers^post5+nbuffers^post4 == 0 /\ bufhdr_flags^post4-bufhdr_flags^post5 == 0 /\ -ret_relfilenodeequals1313^post4+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_tag_rnode^post4+bufhdr_tag_rnode^0 == 0 /\ rnode^post4-rnode^post5 == 0 /\ b1111^0-b1111^post4 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0 /\ -nlocbuffer^post4+nlocbuffer^0 == 0 /\ bufhdr_tag_blocknum^post4-bufhdr_tag_blocknum^post5 == 0 /\ a66^post4-a66^post5 == 0 /\ tmp1212^post4-tmp1212^post5 == 0 /\ -firstdelblock^post4+firstdelblock^0 == 0 /\ a66^0-a66^post4 == 0 /\ -firstdelblock^post5+firstdelblock^post4 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post4 == 0 /\ a1414^post4-a1414^post5 == 0 /\ bufhdr_cntxdirty^post4-bufhdr_cntxdirty^post5 == 0 /\ -a1414^post4+a1414^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post4 == 0 /\ -a^post5+a^post4 == 0 /\ -bufhdr_tag_rnode_relnode^post5+bufhdr_tag_rnode_relnode^post4 == 0 /\ -tmp88^post4+tmp88^0 == 0 /\ b1111^post4-b1111^post5 == 0 /\ nbuffers^0-nbuffers^post4 == 0 /\ -ret_relfilenodeequals99^post4+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post4 == 0 /\ tmp88^post4-tmp88^post5 == 0 /\ -bufhdr_tag_rnode^post5+bufhdr_tag_rnode^post4 == 0), cost: 1
   5: l8 -> l4 : a1010^0'=a1010^post6, a1414^0'=a1414^post6, a66^0'=a66^post6, a^0'=a^post6, b1111^0'=b1111^post6, b77^0'=b77^post6, bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post6, bufhdr_flags^0'=bufhdr_flags^post6, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post6, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post6, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post6, firstdelblock^0'=firstdelblock^post6, i^0'=i^post6, istemp^0'=istemp^post6, nbuffers^0'=nbuffers^post6, nlocbuffer^0'=nlocbuffer^post6, r^0'=r^post6, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post6, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post6, rnode^0'=rnode^post6, tmp1212^0'=tmp1212^post6, tmp1^0'=tmp1^post6, tmp88^0'=tmp88^post6, tmp___03^0'=tmp___03^post6, tmp___14^0'=tmp___14^post6, (0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post6 == 0 /\ b77^0-b77^post6 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post6 == 0 /\ istemp^0-istemp^post6 == 0 /\ -bufhdr_tag_rnode^post6+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post6 == 0 /\ rnode^0-rnode^post6 == 0 /\ tmp___14^0-tmp___14^post6 == 0 /\ -tmp___03^post6+tmp___03^0 == 0 /\ a66^0-a66^post6 == 0 /\ -nbuffers^post6+nbuffers^0 == 0 /\ i^0-i^post6 == 0 /\ -a1414^post6+a1414^0 == 0 /\ a1010^0-a1010^post6 == 0 /\ -tmp1^post6+tmp1^0 == 0 /\ -tmp1212^post6+tmp1212^0 == 0 /\ bufhdr_cntxdirty^post6 == 0 /\ -tmp88^post6+tmp88^0 == 0 /\ -ret_relfilenodeequals1313^post6+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post6+firstdelblock^0 == 0 /\ b1111^0-b1111^post6 == 0 /\ r^0-r^post6 == 0 /\ -a^post6+a^0 == 0 /\ -nlocbuffer^post6+nlocbuffer^0 == 0), cost: 1
   6: l8 -> l9 : a1010^0'=a1010^post7, a1414^0'=a1414^post7, a66^0'=a66^post7, a^0'=a^post7, b1111^0'=b1111^post7, b77^0'=b77^post7, bufhdr___01515^0'=bufhdr___01515^post7, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post7, bufhdr_flags^0'=bufhdr_flags^post7, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post7, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post7, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post7, firstdelblock^0'=firstdelblock^post7, i^0'=i^post7, istemp^0'=istemp^post7, nbuffers^0'=nbuffers^post7, nlocbuffer^0'=nlocbuffer^post7, r^0'=r^post7, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post7, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post7, rnode^0'=rnode^post7, tmp1212^0'=tmp1212^post7, tmp1^0'=tmp1^post7, tmp88^0'=tmp88^post7, tmp___03^0'=tmp___03^post7, tmp___14^0'=tmp___14^post7, (0 == 0 /\ istemp^0-istemp^post7 == 0 /\ -tmp88^post7+tmp88^0 == 0 /\ -tmp___03^post7+tmp___03^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post7 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post7 == 0 /\ tmp___14^0-tmp___14^post7 == 0 /\ -ret_relfilenodeequals1313^post7+ret_relfilenodeequals1313^0 == 0 /\ -b77^post7+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post7 == 0 /\ -nbuffers^post7+nbuffers^0 == 0 /\ i^0-i^post7 == 0 /\ -bufhdr_tag_rnode_relnode^post7+bufhdr_tag_rnode_relnode^0 == 0 /\ a1010^0-a1010^post7 == 0 /\ -bufhdr_tag_rnode^post7+bufhdr_tag_rnode^0 == 0 /\ -a66^post7+a66^0 == 0 /\ -bufhdr_cntxdirty^post7+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post7+bufhdr_flags^0 == 0 /\ rnode^0-rnode^post7 == 0 /\ r^0-r^post7 == 0 /\ -nlocbuffer^post7+nlocbuffer^0 == 0 /\ b1111^0-b1111^post7 == 0 /\ -firstdelblock^post7+firstdelblock^0 == 0 /\ -a^post7+a^0 == 0 /\ -tmp1212^post7+tmp1212^0 == 0 /\ -tmp1^post7+tmp1^0 == 0), cost: 1
  17: l9 -> l11 : a1010^0'=a1010^post18, a1414^0'=a1414^post18, a66^0'=a66^post18, a^0'=a^post18, b1111^0'=b1111^post18, b77^0'=b77^post18, bufhdr___01515^0'=bufhdr___01515^post18, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post18, bufhdr_flags^0'=bufhdr_flags^post18, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post18, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post18, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post18, firstdelblock^0'=firstdelblock^post18, i^0'=i^post18, istemp^0'=istemp^post18, nbuffers^0'=nbuffers^post18, nlocbuffer^0'=nlocbuffer^post18, r^0'=r^post18, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post18, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post18, rnode^0'=rnode^post18, tmp1212^0'=tmp1212^post18, tmp1^0'=tmp1^post18, tmp88^0'=tmp88^post18, tmp___03^0'=tmp___03^post18, tmp___14^0'=tmp___14^post18, (0 == 0 /\ a1010^post18-bufhdr_tag_rnode^0 == 0 /\ -tmp1^post18+tmp1^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post18 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post18 == 0 /\ -r^post18+r^0 == 0 /\ -tmp88^post18+tmp88^0 == 0 /\ -bufhdr_tag_rnode_relnode^post18+bufhdr_tag_rnode_relnode^0 == 0 /\ -a66^post18+a66^0 == 0 /\ nbuffers^0-nbuffers^post18 == 0 /\ -a1414^post18+a1414^0 == 0 /\ -b77^post18+b77^0 == 0 /\ -bufhdr_tag_rnode^post18+bufhdr_tag_rnode^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post18 == 0 /\ -ret_relfilenodeequals1313^post18+tmp___14^post18 == 0 /\ rnode^0-rnode^post18 == 0 /\ -bufhdr_flags^post18+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post18+bufhdr_cntxdirty^0 == 0 /\ -firstdelblock^post18+firstdelblock^0 == 0 /\ -tmp1212^post18+ret_relfilenodeequals1313^post18 == 0 /\ -rnode^0+b1111^post18 == 0 /\ -istemp^post18+istemp^0 == 0 /\ -tmp___03^post18+tmp___03^0 == 0 /\ -a^post18+a^0 == 0 /\ i^0-i^post18 == 0 /\ -nlocbuffer^post18+nlocbuffer^0 == 0), cost: 1
   7: l10 -> l4 : a1010^0'=a1010^post8, a1414^0'=a1414^post8, a66^0'=a66^post8, a^0'=a^post8, b1111^0'=b1111^post8, b77^0'=b77^post8, bufhdr___01515^0'=bufhdr___01515^post8, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post8, bufhdr_flags^0'=bufhdr_flags^post8, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post8, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post8, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post8, firstdelblock^0'=firstdelblock^post8, i^0'=i^post8, istemp^0'=istemp^post8, nbuffers^0'=nbuffers^post8, nlocbuffer^0'=nlocbuffer^post8, r^0'=r^post8, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post8, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post8, rnode^0'=rnode^post8, tmp1212^0'=tmp1212^post8, tmp1^0'=tmp1^post8, tmp88^0'=tmp88^post8, tmp___03^0'=tmp___03^post8, tmp___14^0'=tmp___14^post8, (-firstdelblock^post8+firstdelblock^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post8 == 0 /\ -tmp1^post8+tmp1^0 == 0 /\ -istemp^post8+istemp^0 == 0 /\ -tmp___14^post8+tmp___14^0 == 0 /\ -nlocbuffer^post8+nlocbuffer^0 == 0 /\ -tmp88^post8+tmp88^0 == 0 /\ -bufhdr_cntxdirty^post8+bufhdr_cntxdirty^0 == 0 /\ -ret_relfilenodeequals99^post8+ret_relfilenodeequals99^0 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0 /\ -b77^post8+b77^0 == 0 /\ -bufhdr_tag_rnode_relnode^post8+bufhdr_tag_rnode_relnode^0 == 0 /\ tmp___03^0-tmp___03^post8 == 0 /\ r^0-r^post8 == 0 /\ -a66^post8+a66^0 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post8 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post8 == 0 /\ a1414^0-a1414^post8 == 0 /\ a1010^0-a1010^post8 == 0 /\ rnode^0-rnode^post8 == 0 /\ -bufhdr_flags^post8+bufhdr_flags^0 == 0 /\ i^0-i^post8 == 0 /\ -a^post8+a^0 == 0 /\ nbuffers^0-nbuffers^post8 == 0 /\ b1111^0-b1111^post8 == 0 /\ tmp1212^0-tmp1212^post8 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post8 == 0), cost: 1
   8: l10 -> l8 : a1010^0'=a1010^post9, a1414^0'=a1414^post9, a66^0'=a66^post9, a^0'=a^post9, b1111^0'=b1111^post9, b77^0'=b77^post9, bufhdr___01515^0'=bufhdr___01515^post9, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post9, bufhdr_flags^0'=bufhdr_flags^post9, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post9, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post9, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post9, firstdelblock^0'=firstdelblock^post9, i^0'=i^post9, istemp^0'=istemp^post9, nbuffers^0'=nbuffers^post9, nlocbuffer^0'=nlocbuffer^post9, r^0'=r^post9, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post9, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post9, rnode^0'=rnode^post9, tmp1212^0'=tmp1212^post9, tmp1^0'=tmp1^post9, tmp88^0'=tmp88^post9, tmp___03^0'=tmp___03^post9, tmp___14^0'=tmp___14^post9, (a66^0-a66^post9 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0 /\ b1111^0-b1111^post9 == 0 /\ r^0-r^post9 == 0 /\ -bufhdr___01515^post9+bufhdr___01515^0 == 0 /\ -a1414^post9+a1414^0 == 0 /\ b77^0-b77^post9 == 0 /\ -bufhdr_cntxdirty^post9+bufhdr_cntxdirty^0 == 0 /\ -firstdelblock^post9+firstdelblock^0 == 0 /\ a1010^0-a1010^post9 == 0 /\ istemp^0-istemp^post9 == 0 /\ -tmp___14^post9+tmp___14^0 == 0 /\ tmp___03^0-tmp___03^post9 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post9 == 0 /\ -nlocbuffer^post9+nlocbuffer^0 == 0 /\ -a^post9+a^0 == 0 /\ rnode^0-rnode^post9 == 0 /\ -tmp1^post9+tmp1^0 == 0 /\ -bufhdr_tag_rnode^post9+bufhdr_tag_rnode^0 == 0 /\ tmp1212^0-tmp1212^post9 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post9 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post9 == 0 /\ -ret_relfilenodeequals99^post9+ret_relfilenodeequals99^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post9 == 0 /\ -i^post9+i^0 == 0 /\ -tmp88^post9+tmp88^0 == 0 /\ -nbuffers^post9+nbuffers^0 == 0), cost: 1
   9: l11 -> l4 : a1010^0'=a1010^post10, a1414^0'=a1414^post10, a66^0'=a66^post10, a^0'=a^post10, b1111^0'=b1111^post10, b77^0'=b77^post10, bufhdr___01515^0'=bufhdr___01515^post10, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post10, bufhdr_flags^0'=bufhdr_flags^post10, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post10, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post10, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post10, firstdelblock^0'=firstdelblock^post10, i^0'=i^post10, istemp^0'=istemp^post10, nbuffers^0'=nbuffers^post10, nlocbuffer^0'=nlocbuffer^post10, r^0'=r^post10, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post10, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post10, rnode^0'=rnode^post10, tmp1212^0'=tmp1212^post10, tmp1^0'=tmp1^post10, tmp88^0'=tmp88^post10, tmp___03^0'=tmp___03^post10, tmp___14^0'=tmp___14^post10, (rnode^0-rnode^post10 == 0 /\ r^0-r^post10 == 0 /\ -a1414^post10+a1414^0 == 0 /\ a66^0-a66^post10 == 0 /\ b1111^0-b1111^post10 == 0 /\ tmp___14^0 <= 0 /\ b77^0-b77^post10 == 0 /\ istemp^0-istemp^post10 == 0 /\ -bufhdr_tag_rnode^post10+bufhdr_tag_rnode^0 == 0 /\ -bufhdr___01515^post10+bufhdr___01515^0 == 0 /\ a1010^0-a1010^post10 == 0 /\ -a^post10+a^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post10 == 0 /\ -nlocbuffer^post10+nlocbuffer^0 == 0 /\ -tmp1^post10+tmp1^0 == 0 /\ -tmp___14^0 <= 0 /\ -firstdelblock^post10+firstdelblock^0 == 0 /\ -tmp88^post10+tmp88^0 == 0 /\ -ret_relfilenodeequals1313^post10+ret_relfilenodeequals1313^0 == 0 /\ -tmp___14^post10+tmp___14^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post10 == 0 /\ tmp1212^0-tmp1212^post10 == 0 /\ -ret_relfilenodeequals99^post10+ret_relfilenodeequals99^0 == 0 /\ -i^post10+i^0 == 0 /\ -bufhdr_tag_blocknum^post10+bufhdr_tag_blocknum^0 == 0 /\ tmp___03^0-tmp___03^post10 == 0 /\ -bufhdr_cntxdirty^post10+bufhdr_cntxdirty^0 == 0 /\ -nbuffers^post10+nbuffers^0 == 0), cost: 1
  10: l11 -> l10 : a1010^0'=a1010^post11, a1414^0'=a1414^post11, a66^0'=a66^post11, a^0'=a^post11, b1111^0'=b1111^post11, b77^0'=b77^post11, bufhdr___01515^0'=bufhdr___01515^post11, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post11, bufhdr_flags^0'=bufhdr_flags^post11, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post11, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post11, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post11, firstdelblock^0'=firstdelblock^post11, i^0'=i^post11, istemp^0'=istemp^post11, nbuffers^0'=nbuffers^post11, nlocbuffer^0'=nlocbuffer^post11, r^0'=r^post11, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post11, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post11, rnode^0'=rnode^post11, tmp1212^0'=tmp1212^post11, tmp1^0'=tmp1^post11, tmp88^0'=tmp88^post11, tmp___03^0'=tmp___03^post11, tmp___14^0'=tmp___14^post11, (rnode^0-rnode^post11 == 0 /\ -bufhdr_tag_rnode_relnode^post11+bufhdr_tag_rnode_relnode^0 == 0 /\ -ret_relfilenodeequals1313^post11+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_flags^post11+bufhdr_flags^0 == 0 /\ -b1111^post11+b1111^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post11 == 0 /\ -tmp___03^post11+tmp___03^0 == 0 /\ -r^post11+r^0 == 0 /\ 1-tmp___14^0 <= 0 /\ tmp1^0-tmp1^post11 == 0 /\ tmp1212^0-tmp1212^post11 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post11 == 0 /\ -a66^post11+a66^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post11 == 0 /\ nbuffers^0-nbuffers^post11 == 0 /\ -bufhdr_cntxdirty^post11+bufhdr_cntxdirty^0 == 0 /\ -a^post11+a^0 == 0 /\ a1414^0-a1414^post11 == 0 /\ tmp___14^0-tmp___14^post11 == 0 /\ -nlocbuffer^post11+nlocbuffer^0 == 0 /\ -istemp^post11+istemp^0 == 0 /\ -b77^post11+b77^0 == 0 /\ -tmp88^post11+tmp88^0 == 0 /\ i^0-i^post11 == 0 /\ -firstdelblock^post11+firstdelblock^0 == 0 /\ a1010^0-a1010^post11 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post11 == 0), cost: 1
  11: l11 -> l10 : a1010^0'=a1010^post12, a1414^0'=a1414^post12, a66^0'=a66^post12, a^0'=a^post12, b1111^0'=b1111^post12, b77^0'=b77^post12, bufhdr___01515^0'=bufhdr___01515^post12, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post12, bufhdr_flags^0'=bufhdr_flags^post12, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post12, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post12, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post12, firstdelblock^0'=firstdelblock^post12, i^0'=i^post12, istemp^0'=istemp^post12, nbuffers^0'=nbuffers^post12, nlocbuffer^0'=nlocbuffer^post12, r^0'=r^post12, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post12, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post12, rnode^0'=rnode^post12, tmp1212^0'=tmp1212^post12, tmp1^0'=tmp1^post12, tmp88^0'=tmp88^post12, tmp___03^0'=tmp___03^post12, tmp___14^0'=tmp___14^post12, (a1010^0-a1010^post12 == 0 /\ -ret_relfilenodeequals1313^post12+ret_relfilenodeequals1313^0 == 0 /\ a^0-a^post12 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post12 == 0 /\ -tmp___03^post12+tmp___03^0 == 0 /\ -tmp88^post12+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post12 == 0 /\ -b77^post12+b77^0 == 0 /\ -bufhdr_cntxdirty^post12+bufhdr_cntxdirty^0 == 0 /\ rnode^0-rnode^post12 == 0 /\ b1111^0-b1111^post12 == 0 /\ -a1414^post12+a1414^0 == 0 /\ -firstdelblock^post12+firstdelblock^0 == 0 /\ i^0-i^post12 == 0 /\ tmp1^0-tmp1^post12 == 0 /\ -r^post12+r^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post12 == 0 /\ -nlocbuffer^post12+nlocbuffer^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post12 == 0 /\ istemp^0-istemp^post12 == 0 /\ 1+tmp___14^0 <= 0 /\ tmp___14^0-tmp___14^post12 == 0 /\ tmp1212^0-tmp1212^post12 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post12 == 0 /\ a66^0-a66^post12 == 0 /\ -bufhdr_flags^post12+bufhdr_flags^0 == 0 /\ -bufhdr_tag_rnode_relnode^post12+bufhdr_tag_rnode_relnode^0 == 0), cost: 1
  13: l12 -> l13 : a1010^0'=a1010^post14, a1414^0'=a1414^post14, a66^0'=a66^post14, a^0'=a^post14, b1111^0'=b1111^post14, b77^0'=b77^post14, bufhdr___01515^0'=bufhdr___01515^post14, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post14, bufhdr_flags^0'=bufhdr_flags^post14, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post14, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post14, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post14, firstdelblock^0'=firstdelblock^post14, i^0'=i^post14, istemp^0'=istemp^post14, nbuffers^0'=nbuffers^post14, nlocbuffer^0'=nlocbuffer^post14, r^0'=r^post14, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post14, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post14, rnode^0'=rnode^post14, tmp1212^0'=tmp1212^post14, tmp1^0'=tmp1^post14, tmp88^0'=tmp88^post14, tmp___03^0'=tmp___03^post14, tmp___14^0'=tmp___14^post14, (-a^post14+a^0 == 0 /\ r^post14 == 0 /\ -tmp1212^post14+tmp1212^0 == 0 /\ -bufhdr_tag_rnode_relnode^post14+bufhdr_tag_rnode_relnode^0 == 0 /\ -bufhdr_flags^post14+bufhdr_flags^0 == 0 /\ -b77^post14+b77^0 == 0 /\ 1+nbuffers^0-i^0 <= 0 /\ bufhdr_cntxdirty^0-bufhdr_cntxdirty^post14 == 0 /\ tmp___14^0-tmp___14^post14 == 0 /\ bufhdr___01515^0-bufhdr___01515^post14 == 0 /\ -tmp___03^post14+tmp___03^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post14 == 0 /\ a1010^0-a1010^post14 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post14 == 0 /\ -tmp1^post14+tmp1^0 == 0 /\ -a1414^post14+a1414^0 == 0 /\ -a66^post14+a66^0 == 0 /\ nbuffers^0-nbuffers^post14 == 0 /\ rnode^0-rnode^post14 == 0 /\ -1+r^1 == 0 /\ -ret_relfilenodeequals1313^post14+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post14+firstdelblock^0 == 0 /\ b1111^0-b1111^post14 == 0 /\ -tmp88^post14+tmp88^0 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post14 == 0 /\ -nlocbuffer^post14+nlocbuffer^0 == 0 /\ -istemp^post14+istemp^0 == 0 /\ i^0-i^post14 == 0), cost: 1
  14: l12 -> l9 : a1010^0'=a1010^post15, a1414^0'=a1414^post15, a66^0'=a66^post15, a^0'=a^post15, b1111^0'=b1111^post15, b77^0'=b77^post15, bufhdr___01515^0'=bufhdr___01515^post15, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post15, bufhdr_flags^0'=bufhdr_flags^post15, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post15, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post15, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post15, firstdelblock^0'=firstdelblock^post15, i^0'=i^post15, istemp^0'=istemp^post15, nbuffers^0'=nbuffers^post15, nlocbuffer^0'=nlocbuffer^post15, r^0'=r^post15, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post15, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post15, rnode^0'=rnode^post15, tmp1212^0'=tmp1212^post15, tmp1^0'=tmp1^post15, tmp88^0'=tmp88^post15, tmp___03^0'=tmp___03^post15, tmp___14^0'=tmp___14^post15, (0 == 0 /\ -bufhdr_tag_rnode_relnode^post15+bufhdr_tag_rnode_relnode^0 == 0 /\ -nbuffers^0+i^0 <= 0 /\ -tmp88^post15+tmp88^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post15 == 0 /\ -ret_relfilenodeequals1313^post15+ret_relfilenodeequals1313^0 == 0 /\ -rnode^post15+rnode^0 == 0 /\ -r^post15+r^0 == 0 /\ -b77^post15+b77^0 == 0 /\ -bufhdr_cntxdirty^post15+bufhdr_cntxdirty^0 == 0 /\ -a66^post15+a66^0 == 0 /\ a1010^0-a1010^post15 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post15 == 0 /\ -a1414^post15+a1414^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post15 == 0 /\ tmp___14^0-tmp___14^post15 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post15 == 0 /\ nbuffers^0-nbuffers^post15 == 0 /\ -nlocbuffer^post15+nlocbuffer^0 == 0 /\ -a^post15+a^0 == 0 /\ -istemp^post15+istemp^0 == 0 /\ tmp1212^0-tmp1212^post15 == 0 /\ -bufhdr_flags^post15+bufhdr_flags^0 == 0 /\ i^0-i^post15 == 0 /\ b1111^0-b1111^post15 == 0 /\ -firstdelblock^post15+firstdelblock^0 == 0 /\ -tmp1^post15+tmp1^0 == 0), cost: 1
  35: l13 -> l13 : a1010^0'=a1010^post26, a1414^0'=a1414^post26, a66^0'=a66^post26, a^0'=a^post26, b1111^0'=b1111^post26, b77^0'=b77^post26, bufhdr___01515^0'=bufhdr___01515^post26, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post26, bufhdr_flags^0'=bufhdr_flags^post26, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post26, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post26, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post26, firstdelblock^0'=firstdelblock^post26, i^0'=i^post26, istemp^0'=istemp^post26, nbuffers^0'=nbuffers^post26, nlocbuffer^0'=nlocbuffer^post26, r^0'=r^post26, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post26, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post26, rnode^0'=rnode^post26, tmp1212^0'=tmp1212^post26, tmp1^0'=tmp1^post26, tmp88^0'=tmp88^post26, tmp___03^0'=tmp___03^post26, tmp___14^0'=tmp___14^post26, (tmp1^post25-tmp1^post26 == 0 /\ -ret_relfilenodeequals1313^post26+ret_relfilenodeequals1313^post25 == 0 /\ a^0-a^post25 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post25 == 0 /\ a1010^0-a1010^post25 == 0 /\ bufhdr_tag_rnode_relnode^post25-bufhdr_tag_rnode_relnode^post26 == 0 /\ a1414^post25-a1414^post26 == 0 /\ istemp^0-istemp^post25 == 0 /\ -bufhdr_tag_rnode^post25+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post25 == 0 /\ -tmp1212^post26+tmp1212^post25 == 0 /\ -bufhdr_cntxdirty^post25+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post25+bufhdr_flags^0 == 0 /\ nbuffers^0-nbuffers^post25 == 0 /\ i^post25-i^post26 == 0 /\ tmp88^post25-tmp88^post26 == 0 /\ -tmp___14^post25+tmp___14^0 == 0 /\ -ret_relfilenodeequals1313^post25+ret_relfilenodeequals1313^0 == 0 /\ -a66^post26+a66^post25 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post25 == 0 /\ rnode^0-rnode^post25 == 0 /\ -bufhdr_tag_blocknum^post26+bufhdr_tag_blocknum^post25 == 0 /\ -ret_relfilenodeequals99^post26+ret_relfilenodeequals99^post25 == 0 /\ istemp^post25-istemp^post26 == 0 /\ b1111^0-b1111^post25 == 0 /\ -i^post25+i^0 == 0 /\ b77^post25-b77^post26 == 0 /\ tmp1212^0-tmp1212^post25 == 0 /\ -r^post25+r^0 == 0 /\ -a1010^post26+a1010^post25 == 0 /\ bufhdr_flags^post25-bufhdr_flags^post26 == 0 /\ tmp___14^post25-tmp___14^post26 == 0 /\ -a^post26+a^post25 == 0 /\ nlocbuffer^post25-nlocbuffer^post26 == 0 /\ -tmp1^post25+tmp1^0 == 0 /\ -a1414^post25+a1414^0 == 0 /\ -firstdelblock^post26+firstdelblock^post25 == 0 /\ -b77^post25+b77^0 == 0 /\ tmp___03^0-tmp___03^post25 == 0 /\ r^post25-r^post26 == 0 /\ bufhdr_cntxdirty^post25-bufhdr_cntxdirty^post26 == 0 /\ a66^0-a66^post25 == 0 /\ tmp___03^post25-tmp___03^post26 == 0 /\ bufhdr___01515^0-bufhdr___01515^post25 == 0 /\ -firstdelblock^post25+firstdelblock^0 == 0 /\ -bufhdr___01515^post26+bufhdr___01515^post25 == 0 /\ -tmp88^post25+tmp88^0 == 0 /\ rnode^post25-rnode^post26 == 0 /\ bufhdr_tag_rnode^post25-bufhdr_tag_rnode^post26 == 0 /\ b1111^post25-b1111^post26 == 0 /\ -nbuffers^post26+nbuffers^post25 == 0 /\ -nlocbuffer^post25+nlocbuffer^0 == 0), cost: 1
  15: l14 -> l15 : a1010^0'=a1010^post16, a1414^0'=a1414^post16, a66^0'=a66^post16, a^0'=a^post16, b1111^0'=b1111^post16, b77^0'=b77^post16, bufhdr___01515^0'=bufhdr___01515^post16, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post16, bufhdr_flags^0'=bufhdr_flags^post16, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post16, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post16, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post16, firstdelblock^0'=firstdelblock^post16, i^0'=i^post16, istemp^0'=istemp^post16, nbuffers^0'=nbuffers^post16, nlocbuffer^0'=nlocbuffer^post16, r^0'=r^post16, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post16, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post16, rnode^0'=rnode^post16, tmp1212^0'=tmp1212^post16, tmp1^0'=tmp1^post16, tmp88^0'=tmp88^post16, tmp___03^0'=tmp___03^post16, tmp___14^0'=tmp___14^post16, (b77^0-b77^post16 == 0 /\ -tmp1^post16+tmp1^0 == 0 /\ a1010^0-a1010^post16 == 0 /\ -ret_relfilenodeequals99^post16+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post16 == 0 /\ a66^0-a66^post16 == 0 /\ -bufhdr_cntxdirty^post16+bufhdr_cntxdirty^0 == 0 /\ -nlocbuffer^post16+nlocbuffer^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post16 == 0 /\ r^0-r^post16 == 0 /\ -tmp88^post16+tmp88^0 == 0 /\ -tmp___14^post16+tmp___14^0 == 0 /\ -firstdelblock^post16+firstdelblock^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post16 == 0 /\ tmp___03^0-tmp___03^post16 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post16 == 0 /\ -bufhdr_tag_rnode^post16+bufhdr_tag_rnode^0 == 0 /\ -a1414^post16+a1414^0 == 0 /\ istemp^0-istemp^post16 == 0 /\ -bufhdr___01515^post16+bufhdr___01515^0 == 0 /\ -i^post16+i^0 == 0 /\ tmp1212^0-tmp1212^post16 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post16 == 0 /\ b1111^0-b1111^post16 == 0 /\ nbuffers^0-nbuffers^post16 == 0 /\ -a^post16+a^0 == 0), cost: 1
  16: l15 -> l5 : a1010^0'=a1010^post17, a1414^0'=a1414^post17, a66^0'=a66^post17, a^0'=a^post17, b1111^0'=b1111^post17, b77^0'=b77^post17, bufhdr___01515^0'=bufhdr___01515^post17, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post17, bufhdr_flags^0'=bufhdr_flags^post17, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post17, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post17, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post17, firstdelblock^0'=firstdelblock^post17, i^0'=i^post17, istemp^0'=istemp^post17, nbuffers^0'=nbuffers^post17, nlocbuffer^0'=nlocbuffer^post17, r^0'=r^post17, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post17, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post17, rnode^0'=rnode^post17, tmp1212^0'=tmp1212^post17, tmp1^0'=tmp1^post17, tmp88^0'=tmp88^post17, tmp___03^0'=tmp___03^post17, tmp___14^0'=tmp___14^post17, (bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post17 == 0 /\ -bufhdr_tag_rnode^post17+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_flags^post17+bufhdr_flags^0 == 0 /\ istemp^0-istemp^post17 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post17 == 0 /\ -bufhdr_cntxdirty^post17+bufhdr_cntxdirty^0 == 0 /\ -1+i^post17 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post17 == 0 /\ rnode^0-rnode^post17 == 0 /\ tmp___14^0-tmp___14^post17 == 0 /\ -tmp___03^post17+tmp___03^0 == 0 /\ -nbuffers^post17+nbuffers^0 == 0 /\ -tmp1212^post17+tmp1212^0 == 0 /\ -b77^post17+b77^0 == 0 /\ a^post17 == 0 /\ a1414^0-a1414^post17 == 0 /\ a1010^0-a1010^post17 == 0 /\ -tmp1^post17+tmp1^0 == 0 /\ -1+a^1 == 0 /\ -a66^post17+a66^0 == 0 /\ -tmp88^post17+tmp88^0 == 0 /\ b1111^0-b1111^post17 == 0 /\ -ret_relfilenodeequals1313^post17+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post17+firstdelblock^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post17 == 0 /\ r^0-r^post17 == 0 /\ -nlocbuffer^post17+nlocbuffer^0 == 0), cost: 1
  18: l16 -> l2 : a1010^0'=a1010^post19, a1414^0'=a1414^post19, a66^0'=a66^post19, a^0'=a^post19, b1111^0'=b1111^post19, b77^0'=b77^post19, bufhdr___01515^0'=bufhdr___01515^post19, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post19, bufhdr_flags^0'=bufhdr_flags^post19, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post19, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post19, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post19, firstdelblock^0'=firstdelblock^post19, i^0'=i^post19, istemp^0'=istemp^post19, nbuffers^0'=nbuffers^post19, nlocbuffer^0'=nlocbuffer^post19, r^0'=r^post19, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post19, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post19, rnode^0'=rnode^post19, tmp1212^0'=tmp1212^post19, tmp1^0'=tmp1^post19, tmp88^0'=tmp88^post19, tmp___03^0'=tmp___03^post19, tmp___14^0'=tmp___14^post19, (-tmp88^post19+tmp88^0 == 0 /\ a^0-a^post19 == 0 /\ -a1414^post19+a1414^0 == 0 /\ -tmp___03^post19+tmp___03^0 == 0 /\ nlocbuffer^0-nlocbuffer^post19 == 0 /\ -ret_relfilenodeequals1313^post19+ret_relfilenodeequals1313^0 == 0 /\ -1-i^0+i^post19 == 0 /\ a1010^0-a1010^post19 == 0 /\ istemp^0-istemp^post19 == 0 /\ -bufhdr_cntxdirty^post19+bufhdr_cntxdirty^0 == 0 /\ rnode^0-rnode^post19 == 0 /\ -b77^post19+b77^0 == 0 /\ b1111^0-b1111^post19 == 0 /\ -firstdelblock^post19+firstdelblock^0 == 0 /\ nbuffers^0-nbuffers^post19 == 0 /\ -bufhdr_tag_rnode_relnode^post19+bufhdr_tag_rnode_relnode^0 == 0 /\ tmp___14^0-tmp___14^post19 == 0 /\ bufhdr___01515^0-bufhdr___01515^post19 == 0 /\ tmp1^0-tmp1^post19 == 0 /\ -bufhdr_tag_rnode^post19+bufhdr_tag_rnode^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post19 == 0 /\ a66^0-a66^post19 == 0 /\ -bufhdr_flags^post19+bufhdr_flags^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post19 == 0 /\ tmp1212^0-tmp1212^post19 == 0 /\ -r^post19+r^0 == 0), cost: 1
  19: l17 -> l16 : a1010^0'=a1010^post20, a1414^0'=a1414^post20, a66^0'=a66^post20, a^0'=a^post20, b1111^0'=b1111^post20, b77^0'=b77^post20, bufhdr___01515^0'=bufhdr___01515^post20, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post20, bufhdr_flags^0'=bufhdr_flags^post20, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post20, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post20, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post20, firstdelblock^0'=firstdelblock^post20, i^0'=i^post20, istemp^0'=istemp^post20, nbuffers^0'=nbuffers^post20, nlocbuffer^0'=nlocbuffer^post20, r^0'=r^post20, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post20, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post20, rnode^0'=rnode^post20, tmp1212^0'=tmp1212^post20, tmp1^0'=tmp1^post20, tmp88^0'=tmp88^post20, tmp___03^0'=tmp___03^post20, tmp___14^0'=tmp___14^post20, (nbuffers^0-nbuffers^post20 == 0 /\ -firstdelblock^post20+firstdelblock^0 == 0 /\ rnode^0-rnode^post20 == 0 /\ nlocbuffer^0-nlocbuffer^post20 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post20 == 0 /\ -r^post20+r^0 == 0 /\ -i^post20+i^0 == 0 /\ a1010^0-a1010^post20 == 0 /\ b1111^0-b1111^post20 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0 /\ -bufhdr_tag_rnode_relnode^post20+bufhdr_tag_rnode_relnode^0 == 0 /\ tmp1^0-tmp1^post20 == 0 /\ a^0-a^post20 == 0 /\ -a1414^post20+a1414^0 == 0 /\ -tmp___14^post20+tmp___14^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post20 == 0 /\ istemp^0-istemp^post20 == 0 /\ bufhdr___01515^0-bufhdr___01515^post20 == 0 /\ -ret_relfilenodeequals1313^post20+ret_relfilenodeequals1313^0 == 0 /\ tmp1212^0-tmp1212^post20 == 0 /\ tmp___03^0-tmp___03^post20 == 0 /\ -tmp88^post20+tmp88^0 == 0 /\ -bufhdr_tag_rnode^post20+bufhdr_tag_rnode^0 == 0 /\ a66^0-a66^post20 == 0 /\ -b77^post20+b77^0 == 0 /\ -bufhdr_flags^post20+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post20+bufhdr_cntxdirty^0 == 0), cost: 1
  20: l17 -> l16 : a1010^0'=a1010^post21, a1414^0'=a1414^post21, a66^0'=a66^post21, a^0'=a^post21, b1111^0'=b1111^post21, b77^0'=b77^post21, bufhdr___01515^0'=bufhdr___01515^post21, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post21, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post21, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post21, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post21, firstdelblock^0'=firstdelblock^post21, i^0'=i^post21, istemp^0'=istemp^post21, nbuffers^0'=nbuffers^post21, nlocbuffer^0'=nlocbuffer^post21, r^0'=r^post21, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post21, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post21, rnode^0'=rnode^post21, tmp1212^0'=tmp1212^post21, tmp1^0'=tmp1^post21, tmp88^0'=tmp88^post21, tmp___03^0'=tmp___03^post21, tmp___14^0'=tmp___14^post21, (0 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0 /\ r^0-r^post21 == 0 /\ rnode^0-rnode^post21 == 0 /\ -a1414^post21+a1414^0 == 0 /\ a66^0-a66^post21 == 0 /\ b1111^0-b1111^post21 == 0 /\ -nlocbuffer^post21+nlocbuffer^0 == 0 /\ a1010^0-a1010^post21 == 0 /\ istemp^0-istemp^post21 == 0 /\ -bufhdr_tag_rnode^post21+bufhdr_tag_rnode^0 == 0 /\ b77^0-b77^post21 == 0 /\ -a^post21+a^0 == 0 /\ -bufhdr___01515^post21+bufhdr___01515^0 == 0 /\ -tmp1^post21+tmp1^0 == 0 /\ -tmp88^post21+tmp88^0 == 0 /\ -tmp___14^post21+tmp___14^0 == 0 /\ tmp1212^0-tmp1212^post21 == 0 /\ -1+bufhdr_tag_rnode_relnode^post21 == 0 /\ bufhdr_cntxdirty^post21 == 0 /\ -firstdelblock^post21+firstdelblock^0 == 0 /\ -ret_relfilenodeequals99^post21+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post21+ret_relfilenodeequals1313^0 == 0 /\ -i^post21+i^0 == 0 /\ -nbuffers^post21+nbuffers^0 == 0 /\ -bufhdr_tag_blocknum^post21+bufhdr_tag_blocknum^0 == 0 /\ tmp___03^0-tmp___03^post21 == 0), cost: 1
  21: l18 -> l16 : a1010^0'=a1010^post22, a1414^0'=a1414^post22, a66^0'=a66^post22, a^0'=a^post22, b1111^0'=b1111^post22, b77^0'=b77^post22, bufhdr___01515^0'=bufhdr___01515^post22, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post22, bufhdr_flags^0'=bufhdr_flags^post22, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post22, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post22, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post22, firstdelblock^0'=firstdelblock^post22, i^0'=i^post22, istemp^0'=istemp^post22, nbuffers^0'=nbuffers^post22, nlocbuffer^0'=nlocbuffer^post22, r^0'=r^post22, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post22, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post22, rnode^0'=rnode^post22, tmp1212^0'=tmp1212^post22, tmp1^0'=tmp1^post22, tmp88^0'=tmp88^post22, tmp___03^0'=tmp___03^post22, tmp___14^0'=tmp___14^post22, (rnode^0-rnode^post22 == 0 /\ -tmp1^post22+tmp1^0 == 0 /\ r^0-r^post22 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post22 == 0 /\ -tmp1^0 <= 0 /\ b1111^0-b1111^post22 == 0 /\ -a66^post22+a66^0 == 0 /\ b77^0-b77^post22 == 0 /\ -bufhdr_tag_rnode^post22+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_cntxdirty^post22+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post22+bufhdr___01515^0 == 0 /\ -nlocbuffer^post22+nlocbuffer^0 == 0 /\ -nbuffers^post22+nbuffers^0 == 0 /\ -i^post22+i^0 == 0 /\ -tmp88^post22+tmp88^0 == 0 /\ istemp^0-istemp^post22 == 0 /\ tmp1^0 <= 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post22 == 0 /\ -tmp1212^post22+tmp1212^0 == 0 /\ -a^post22+a^0 == 0 /\ -firstdelblock^post22+firstdelblock^0 == 0 /\ a1414^0-a1414^post22 == 0 /\ tmp___03^0-tmp___03^post22 == 0 /\ -ret_relfilenodeequals99^post22+ret_relfilenodeequals99^0 == 0 /\ a1010^0-a1010^post22 == 0 /\ tmp___14^0-tmp___14^post22 == 0 /\ bufhdr_flags^0-bufhdr_flags^post22 == 0 /\ -bufhdr_tag_blocknum^post22+bufhdr_tag_blocknum^0 == 0), cost: 1
  22: l18 -> l17 : a1010^0'=a1010^post23, a1414^0'=a1414^post23, a66^0'=a66^post23, a^0'=a^post23, b1111^0'=b1111^post23, b77^0'=b77^post23, bufhdr___01515^0'=bufhdr___01515^post23, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post23, bufhdr_flags^0'=bufhdr_flags^post23, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post23, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post23, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post23, firstdelblock^0'=firstdelblock^post23, i^0'=i^post23, istemp^0'=istemp^post23, nbuffers^0'=nbuffers^post23, nlocbuffer^0'=nlocbuffer^post23, r^0'=r^post23, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post23, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post23, rnode^0'=rnode^post23, tmp1212^0'=tmp1212^post23, tmp1^0'=tmp1^post23, tmp88^0'=tmp88^post23, tmp___03^0'=tmp___03^post23, tmp___14^0'=tmp___14^post23, (bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post23 == 0 /\ -bufhdr_cntxdirty^post23+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post23+bufhdr_flags^0 == 0 /\ -tmp___03^post23+tmp___03^0 == 0 /\ -tmp88^post23+tmp88^0 == 0 /\ -b77^post23+b77^0 == 0 /\ 1-tmp1^0 <= 0 /\ nbuffers^0-nbuffers^post23 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post23 == 0 /\ -a66^post23+a66^0 == 0 /\ rnode^0-rnode^post23 == 0 /\ -ret_relfilenodeequals1313^post23+ret_relfilenodeequals1313^0 == 0 /\ -a^post23+a^0 == 0 /\ i^0-i^post23 == 0 /\ b1111^0-b1111^post23 == 0 /\ -firstdelblock^post23+firstdelblock^0 == 0 /\ -r^post23+r^0 == 0 /\ tmp1^0-tmp1^post23 == 0 /\ -nlocbuffer^post23+nlocbuffer^0 == 0 /\ istemp^0-istemp^post23 == 0 /\ tmp___14^0-tmp___14^post23 == 0 /\ bufhdr___01515^0-bufhdr___01515^post23 == 0 /\ tmp1212^0-tmp1212^post23 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post23 == 0 /\ -bufhdr_tag_rnode_relnode^post23+bufhdr_tag_rnode_relnode^0 == 0 /\ a1414^0-a1414^post23 == 0 /\ a1010^0-a1010^post23 == 0), cost: 1
  23: l18 -> l17 : a1010^0'=a1010^post24, a1414^0'=a1414^post24, a66^0'=a66^post24, a^0'=a^post24, b1111^0'=b1111^post24, b77^0'=b77^post24, bufhdr___01515^0'=bufhdr___01515^post24, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post24, bufhdr_flags^0'=bufhdr_flags^post24, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post24, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post24, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post24, firstdelblock^0'=firstdelblock^post24, i^0'=i^post24, istemp^0'=istemp^post24, nbuffers^0'=nbuffers^post24, nlocbuffer^0'=nlocbuffer^post24, r^0'=r^post24, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post24, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post24, rnode^0'=rnode^post24, tmp1212^0'=tmp1212^post24, tmp1^0'=tmp1^post24, tmp88^0'=tmp88^post24, tmp___03^0'=tmp___03^post24, tmp___14^0'=tmp___14^post24, (-bufhdr_cntxdirty^post24+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post24+bufhdr_flags^0 == 0 /\ -i^post24+i^0 == 0 /\ nbuffers^0-nbuffers^post24 == 0 /\ -b77^post24+b77^0 == 0 /\ a^0-a^post24 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post24 == 0 /\ -firstdelblock^post24+firstdelblock^0 == 0 /\ -tmp___03^post24+tmp___03^0 == 0 /\ -bufhdr_tag_rnode_relnode^post24+bufhdr_tag_rnode_relnode^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post24 == 0 /\ -ret_relfilenodeequals1313^post24+ret_relfilenodeequals1313^0 == 0 /\ istemp^0-istemp^post24 == 0 /\ -a1010^post24+a1010^0 == 0 /\ rnode^0-rnode^post24 == 0 /\ 1+tmp1^0 <= 0 /\ -r^post24+r^0 == 0 /\ -nlocbuffer^post24+nlocbuffer^0 == 0 /\ b1111^0-b1111^post24 == 0 /\ tmp1^0-tmp1^post24 == 0 /\ tmp1212^0-tmp1212^post24 == 0 /\ a66^0-a66^post24 == 0 /\ tmp___14^0-tmp___14^post24 == 0 /\ -tmp88^post24+tmp88^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post24 == 0 /\ -a1414^post24+a1414^0 == 0 /\ -bufhdr_tag_rnode^post24+bufhdr_tag_rnode^0 == 0), cost: 1
  28: l20 -> l15 : a1010^0'=a1010^post29, a1414^0'=a1414^post29, a66^0'=a66^post29, a^0'=a^post29, b1111^0'=b1111^post29, b77^0'=b77^post29, bufhdr___01515^0'=bufhdr___01515^post29, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post29, bufhdr_flags^0'=bufhdr_flags^post29, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post29, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post29, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post29, firstdelblock^0'=firstdelblock^post29, i^0'=i^post29, istemp^0'=istemp^post29, nbuffers^0'=nbuffers^post29, nlocbuffer^0'=nlocbuffer^post29, r^0'=r^post29, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post29, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post29, rnode^0'=rnode^post29, tmp1212^0'=tmp1212^post29, tmp1^0'=tmp1^post29, tmp88^0'=tmp88^post29, tmp___03^0'=tmp___03^post29, tmp___14^0'=tmp___14^post29, (tmp1^0-tmp1^post29 == 0 /\ tmp1212^0-tmp1212^post29 == 0 /\ -bufhdr_tag_rnode^post29+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_tag_blocknum^post29+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post29 == 0 /\ 2-istemp^0 <= 0 /\ -bufhdr_cntxdirty^post29+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post29+bufhdr___01515^0 == 0 /\ a66^0-a66^post29 == 0 /\ b77^0-b77^post29 == 0 /\ tmp___14^0-tmp___14^post29 == 0 /\ -nlocbuffer^post29+nlocbuffer^0 == 0 /\ -tmp___03^post29+tmp___03^0 == 0 /\ a1010^0-a1010^post29 == 0 /\ -i^post29+i^0 == 0 /\ -a^post29+a^0 == 0 /\ rnode^0-rnode^post29 == 0 /\ bufhdr_flags^0-bufhdr_flags^post29 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post29 == 0 /\ -ret_relfilenodeequals99^post29+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post29+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post29+firstdelblock^0 == 0 /\ -a1414^post29+a1414^0 == 0 /\ istemp^0-istemp^post29 == 0 /\ -tmp88^post29+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post29 == 0 /\ -r^post29+r^0 == 0), cost: 1
  29: l20 -> l15 : a1010^0'=a1010^post30, a1414^0'=a1414^post30, a66^0'=a66^post30, a^0'=a^post30, b1111^0'=b1111^post30, b77^0'=b77^post30, bufhdr___01515^0'=bufhdr___01515^post30, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post30, bufhdr_flags^0'=bufhdr_flags^post30, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post30, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post30, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post30, firstdelblock^0'=firstdelblock^post30, i^0'=i^post30, istemp^0'=istemp^post30, nbuffers^0'=nbuffers^post30, nlocbuffer^0'=nlocbuffer^post30, r^0'=r^post30, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post30, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post30, rnode^0'=rnode^post30, tmp1212^0'=tmp1212^post30, tmp1^0'=tmp1^post30, tmp88^0'=tmp88^post30, tmp___03^0'=tmp___03^post30, tmp___14^0'=tmp___14^post30, (-tmp1212^post30+tmp1212^0 == 0 /\ b1111^0-b1111^post30 == 0 /\ istemp^0 <= 0 /\ -ret_relfilenodeequals99^post30+ret_relfilenodeequals99^0 == 0 /\ -bufhdr_tag_rnode^post30+bufhdr_tag_rnode^0 == 0 /\ tmp___14^0-tmp___14^post30 == 0 /\ b77^0-b77^post30 == 0 /\ -i^post30+i^0 == 0 /\ r^0-r^post30 == 0 /\ a66^0-a66^post30 == 0 /\ -bufhdr___01515^post30+bufhdr___01515^0 == 0 /\ -tmp___03^post30+tmp___03^0 == 0 /\ -tmp1^post30+tmp1^0 == 0 /\ a1010^0-a1010^post30 == 0 /\ istemp^0-istemp^post30 == 0 /\ -a1414^post30+a1414^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post30 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post30 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post30 == 0 /\ nbuffers^0-nbuffers^post30 == 0 /\ -bufhdr_tag_blocknum^post30+bufhdr_tag_blocknum^0 == 0 /\ -bufhdr_cntxdirty^post30+bufhdr_cntxdirty^0 == 0 /\ -nlocbuffer^post30+nlocbuffer^0 == 0 /\ -a^post30+a^0 == 0 /\ rnode^0-rnode^post30 == 0 /\ -firstdelblock^post30+firstdelblock^0 == 0 /\ -tmp88^post30+tmp88^0 == 0), cost: 1
  30: l20 -> l2 : a1010^0'=a1010^post31, a1414^0'=a1414^post31, a66^0'=a66^post31, a^0'=a^post31, b1111^0'=b1111^post31, b77^0'=b77^post31, bufhdr___01515^0'=bufhdr___01515^post31, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post31, bufhdr_flags^0'=bufhdr_flags^post31, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post31, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post31, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post31, firstdelblock^0'=firstdelblock^post31, i^0'=i^post31, istemp^0'=istemp^post31, nbuffers^0'=nbuffers^post31, nlocbuffer^0'=nlocbuffer^post31, r^0'=r^post31, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post31, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post31, rnode^0'=rnode^post31, tmp1212^0'=tmp1212^post31, tmp1^0'=tmp1^post31, tmp88^0'=tmp88^post31, tmp___03^0'=tmp___03^post31, tmp___14^0'=tmp___14^post31, (-tmp1^post31+tmp1^0 == 0 /\ -bufhdr_tag_rnode_relnode^post31+bufhdr_tag_rnode_relnode^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post31 == 0 /\ -rnode^post31+rnode^0 == 0 /\ -ret_relfilenodeequals1313^post31+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_cntxdirty^post31+bufhdr_cntxdirty^0 == 0 /\ 1-istemp^0 <= 0 /\ -1+istemp^0 <= 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post31 == 0 /\ -b77^post31+b77^0 == 0 /\ -tmp88^post31+tmp88^0 == 0 /\ -r^post31+r^0 == 0 /\ tmp___14^0-tmp___14^post31 == 0 /\ a1010^0-a1010^post31 == 0 /\ nbuffers^0-nbuffers^post31 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post31 == 0 /\ -bufhdr_flags^post31+bufhdr_flags^0 == 0 /\ -a1414^post31+a1414^0 == 0 /\ -a66^post31+a66^0 == 0 /\ tmp1212^0-tmp1212^post31 == 0 /\ i^post31 == 0 /\ -firstdelblock^post31+firstdelblock^0 == 0 /\ -nlocbuffer^post31+nlocbuffer^0 == 0 /\ -istemp^post31+istemp^0 == 0 /\ -tmp___03^post31+tmp___03^0 == 0 /\ b1111^0-b1111^post31 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post31 == 0 /\ -a^post31+a^0 == 0), cost: 1
  33: l22 -> l20 : a1010^0'=a1010^post32, a1414^0'=a1414^post32, a66^0'=a66^post32, a^0'=a^post32, b1111^0'=b1111^post32, b77^0'=b77^post32, bufhdr___01515^0'=bufhdr___01515^post32, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post32, bufhdr_flags^0'=bufhdr_flags^post32, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post32, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post32, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post32, firstdelblock^0'=firstdelblock^post32, i^0'=i^post32, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=r^post32, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post32, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post32, rnode^0'=rnode^post32, tmp1212^0'=tmp1212^post32, tmp1^0'=tmp1^post32, tmp88^0'=tmp88^post32, tmp___03^0'=tmp___03^post32, tmp___14^0'=tmp___14^post32, (0 == 0 /\ bufhdr___01515^post33-bufhdr___01515^post32 == 0 /\ -r^post32+a^post32 == 0 /\ tmp___14^post33-tmp___14^post32 == 0 /\ -tmp88^post33+tmp88^0 == 0 /\ -a1010^post32+a1010^post33 == 0 /\ -tmp___14^post33+tmp___14^0 == 0 /\ b1111^post33-b1111^post32 == 0 /\ i^post33-i^post32 == 0 /\ tmp1212^0-tmp1212^post33 == 0 /\ r^post32 == 0 /\ -ret_relfilenodeequals1313^post32+ret_relfilenodeequals1313^post33 == 0 /\ bufhdr_cntxdirty^post33-bufhdr_cntxdirty^post32 == 0 /\ -firstdelblock^post32+firstdelblock^post33 == 0 /\ -tmp1212^post32+tmp1212^post33 == 0 /\ a1010^0-a1010^post33 == 0 /\ tmp88^post33-tmp88^post32 == 0 /\ -nlocbuffer^post33+nlocbuffer^0 == 0 /\ -bufhdr_tag_blocknum^post33+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post33 == 0 /\ bufhdr_flags^0-bufhdr_flags^post33 == 0 /\ -a66^post32+a66^post33 == 0 /\ -bufhdr_cntxdirty^post33+bufhdr_cntxdirty^0 == 0 /\ bufhdr_tag_blocknum^post33-bufhdr_tag_blocknum^post32 == 0 /\ -a1414^post33+a1414^0 == 0 /\ a^0-a^post33 == 0 /\ ret_relfilenodeequals99^post33-ret_relfilenodeequals99^post32 == 0 /\ -a1414^post32+a1414^post33 == 0 /\ -firstdelblock^post33+firstdelblock^0 == 0 /\ bufhdr_tag_rnode^post33-bufhdr_tag_rnode^post32 == 0 /\ tmp___03^0-tmp___03^post33 == 0 /\ -b77^post33+b77^0 == 0 /\ rnode^0-rnode^post33 == 0 /\ -ret_relfilenodeequals99^post33+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post33+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post33 == 0 /\ -bufhdr_flags^post32+bufhdr_flags^post33 == 0 /\ tmp1^post33-tmp1^post32 == 0 /\ -tmp___03^post32+tmp___03^post33 == 0 /\ -bufhdr_tag_rnode^post33+bufhdr_tag_rnode^0 == 0 /\ -i^post33+i^0 == 0 /\ -bufhdr___01515^post33+bufhdr___01515^0 == 0 /\ -r^post33+r^0 == 0 /\ istemp^0-istemp^post33 == 0 /\ -rnode^post32+rnode^post33 == 0 /\ -tmp1^post33+tmp1^0 == 0 /\ a66^0-a66^post33 == 0 /\ -b77^post32+b77^post33 == 0 /\ -bufhdr_tag_rnode_relnode^post32+bufhdr_tag_rnode_relnode^post33 == 0 /\ nbuffers^0-nbuffers^post33 == 0), cost: 1

	Eliminating location l21 by chaining:

	Applied chaining

	First rule:
	l22 -> l21 : a1010^0'=a1010^post33, a1414^0'=a1414^post33, a66^0'=a66^post33, a^0'=a^post33, b1111^0'=b1111^post33, b77^0'=b77^post33, bufhdr___01515^0'=bufhdr___01515^post33, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post33, bufhdr_flags^0'=bufhdr_flags^post33, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post33, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post33, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post33, firstdelblock^0'=firstdelblock^post33, i^0'=i^post33, istemp^0'=istemp^post33, nbuffers^0'=nbuffers^post33, nlocbuffer^0'=nlocbuffer^post33, r^0'=r^post33, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post33, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post33, rnode^0'=rnode^post33, tmp1212^0'=tmp1212^post33, tmp1^0'=tmp1^post33, tmp88^0'=tmp88^post33, tmp___03^0'=tmp___03^post33, tmp___14^0'=tmp___14^post33, (-tmp88^post33+tmp88^0 == 0 /\ -tmp___14^post33+tmp___14^0 == 0 /\ tmp1212^0-tmp1212^post33 == 0 /\ a1010^0-a1010^post33 == 0 /\ -nlocbuffer^post33+nlocbuffer^0 == 0 /\ -bufhdr_tag_blocknum^post33+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post33 == 0 /\ bufhdr_flags^0-bufhdr_flags^post33 == 0 /\ -bufhdr_cntxdirty^post33+bufhdr_cntxdirty^0 == 0 /\ -a1414^post33+a1414^0 == 0 /\ a^0-a^post33 == 0 /\ -firstdelblock^post33+firstdelblock^0 == 0 /\ tmp___03^0-tmp___03^post33 == 0 /\ -b77^post33+b77^0 == 0 /\ rnode^0-rnode^post33 == 0 /\ -ret_relfilenodeequals99^post33+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post33+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post33 == 0 /\ -bufhdr_tag_rnode^post33+bufhdr_tag_rnode^0 == 0 /\ -i^post33+i^0 == 0 /\ -bufhdr___01515^post33+bufhdr___01515^0 == 0 /\ -r^post33+r^0 == 0 /\ istemp^0-istemp^post33 == 0 /\ -tmp1^post33+tmp1^0 == 0 /\ a66^0-a66^post33 == 0 /\ nbuffers^0-nbuffers^post33 == 0), cost: 1
	Second rule:
	l21 -> l20 : a1010^0'=a1010^post32, a1414^0'=a1414^post32, a66^0'=a66^post32, a^0'=a^post32, b1111^0'=b1111^post32, b77^0'=b77^post32, bufhdr___01515^0'=bufhdr___01515^post32, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post32, bufhdr_flags^0'=bufhdr_flags^post32, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post32, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post32, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post32, firstdelblock^0'=firstdelblock^post32, i^0'=i^post32, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=r^post32, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post32, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post32, rnode^0'=rnode^post32, tmp1212^0'=tmp1212^post32, tmp1^0'=tmp1^post32, tmp88^0'=tmp88^post32, tmp___03^0'=tmp___03^post32, tmp___14^0'=tmp___14^post32, (0 == 0 /\ -tmp88^post32+tmp88^0 == 0 /\ -tmp___03^post32+tmp___03^0 == 0 /\ -r^post32+a^post32 == 0 /\ -firstdelblock^post32+firstdelblock^0 == 0 /\ r^post32 == 0 /\ -ret_relfilenodeequals1313^post32+ret_relfilenodeequals1313^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post32 == 0 /\ rnode^0-rnode^post32 == 0 /\ -bufhdr_tag_rnode_relnode^post32+bufhdr_tag_rnode_relnode^0 == 0 /\ -bufhdr_cntxdirty^post32+bufhdr_cntxdirty^0 == 0 /\ -b77^post32+b77^0 == 0 /\ a1010^0-a1010^post32 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post32 == 0 /\ -a66^post32+a66^0 == 0 /\ -a1414^post32+a1414^0 == 0 /\ tmp___14^0-tmp___14^post32 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post32 == 0 /\ tmp1^0-tmp1^post32 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post32 == 0 /\ tmp1212^0-tmp1212^post32 == 0 /\ i^0-i^post32 == 0 /\ -bufhdr_flags^post32+bufhdr_flags^0 == 0 /\ b1111^0-b1111^post32 == 0), cost: 1
	New rule:
	l22 -> l20 : a1010^0'=a1010^post32, a1414^0'=a1414^post32, a66^0'=a66^post32, a^0'=a^post32, b1111^0'=b1111^post32, b77^0'=b77^post32, bufhdr___01515^0'=bufhdr___01515^post32, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post32, bufhdr_flags^0'=bufhdr_flags^post32, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post32, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post32, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post32, firstdelblock^0'=firstdelblock^post32, i^0'=i^post32, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=r^post32, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post32, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post32, rnode^0'=rnode^post32, tmp1212^0'=tmp1212^post32, tmp1^0'=tmp1^post32, tmp88^0'=tmp88^post32, tmp___03^0'=tmp___03^post32, tmp___14^0'=tmp___14^post32, (0 == 0 /\ bufhdr___01515^post33-bufhdr___01515^post32 == 0 /\ -r^post32+a^post32 == 0 /\ tmp___14^post33-tmp___14^post32 == 0 /\ -tmp88^post33+tmp88^0 == 0 /\ -a1010^post32+a1010^post33 == 0 /\ -tmp___14^post33+tmp___14^0 == 0 /\ b1111^post33-b1111^post32 == 0 /\ i^post33-i^post32 == 0 /\ tmp1212^0-tmp1212^post33 == 0 /\ r^post32 == 0 /\ -ret_relfilenodeequals1313^post32+ret_relfilenodeequals1313^post33 == 0 /\ bufhdr_cntxdirty^post33-bufhdr_cntxdirty^post32 == 0 /\ -firstdelblock^post32+firstdelblock^post33 == 0 /\ -tmp1212^post32+tmp1212^post33 == 0 /\ a1010^0-a1010^post33 == 0 /\ tmp88^post33-tmp88^post32 == 0 /\ -nlocbuffer^post33+nlocbuffer^0 == 0 /\ -bufhdr_tag_blocknum^post33+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post33 == 0 /\ bufhdr_flags^0-bufhdr_flags^post33 == 0 /\ -a66^post32+a66^post33 == 0 /\ -bufhdr_cntxdirty^post33+bufhdr_cntxdirty^0 == 0 /\ bufhdr_tag_blocknum^post33-bufhdr_tag_blocknum^post32 == 0 /\ -a1414^post33+a1414^0 == 0 /\ a^0-a^post33 == 0 /\ ret_relfilenodeequals99^post33-ret_relfilenodeequals99^post32 == 0 /\ -a1414^post32+a1414^post33 == 0 /\ -firstdelblock^post33+firstdelblock^0 == 0 /\ bufhdr_tag_rnode^post33-bufhdr_tag_rnode^post32 == 0 /\ tmp___03^0-tmp___03^post33 == 0 /\ -b77^post33+b77^0 == 0 /\ rnode^0-rnode^post33 == 0 /\ -ret_relfilenodeequals99^post33+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post33+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post33 == 0 /\ -bufhdr_flags^post32+bufhdr_flags^post33 == 0 /\ tmp1^post33-tmp1^post32 == 0 /\ -tmp___03^post32+tmp___03^post33 == 0 /\ -bufhdr_tag_rnode^post33+bufhdr_tag_rnode^0 == 0 /\ -i^post33+i^0 == 0 /\ -bufhdr___01515^post33+bufhdr___01515^0 == 0 /\ -r^post33+r^0 == 0 /\ istemp^0-istemp^post33 == 0 /\ -rnode^post32+rnode^post33 == 0 /\ -tmp1^post33+tmp1^0 == 0 /\ a66^0-a66^post33 == 0 /\ -b77^post32+b77^post33 == 0 /\ -bufhdr_tag_rnode_relnode^post32+bufhdr_tag_rnode_relnode^post33 == 0 /\ nbuffers^0-nbuffers^post33 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 31 32
	
	Eliminating location l7 by chaining:

	Applied chaining

	First rule:
	l6 -> l7 : a1010^0'=a1010^post4, a1414^0'=a1414^post4, a66^0'=a66^post4, a^0'=a^post4, b1111^0'=b1111^post4, b77^0'=b77^post4, bufhdr___01515^0'=bufhdr___01515^post4, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post4, bufhdr_flags^0'=bufhdr_flags^post4, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post4, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post4, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post4, firstdelblock^0'=firstdelblock^post4, i^0'=i^post4, istemp^0'=istemp^post4, nbuffers^0'=nbuffers^post4, nlocbuffer^0'=nlocbuffer^post4, r^0'=r^post4, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post4, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post4, rnode^0'=rnode^post4, tmp1212^0'=tmp1212^post4, tmp1^0'=tmp1^post4, tmp88^0'=tmp88^post4, tmp___03^0'=tmp___03^post4, tmp___14^0'=tmp___14^post4, (-b77^post4+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post4 == 0 /\ tmp1^0-tmp1^post4 == 0 /\ -bufhdr_flags^post4+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post4+bufhdr_cntxdirty^0 == 0 /\ istemp^0-istemp^post4 == 0 /\ a^0-a^post4 == 0 /\ tmp1212^0-tmp1212^post4 == 0 /\ -a1010^post4+a1010^0 == 0 /\ tmp___14^0-tmp___14^post4 == 0 /\ -tmp___03^post4+tmp___03^0 == 0 /\ -ret_relfilenodeequals1313^post4+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_tag_rnode^post4+bufhdr_tag_rnode^0 == 0 /\ b1111^0-b1111^post4 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0 /\ -nlocbuffer^post4+nlocbuffer^0 == 0 /\ -firstdelblock^post4+firstdelblock^0 == 0 /\ a66^0-a66^post4 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post4 == 0 /\ -a1414^post4+a1414^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post4 == 0 /\ -tmp88^post4+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post4 == 0 /\ -ret_relfilenodeequals99^post4+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post4 == 0), cost: 1
	Second rule:
	l7 -> l6 : a1010^0'=a1010^post5, a1414^0'=a1414^post5, a66^0'=a66^post5, a^0'=a^post5, b1111^0'=b1111^post5, b77^0'=b77^post5, bufhdr___01515^0'=bufhdr___01515^post5, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post5, bufhdr_flags^0'=bufhdr_flags^post5, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post5, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post5, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post5, firstdelblock^0'=firstdelblock^post5, i^0'=i^post5, istemp^0'=istemp^post5, nbuffers^0'=nbuffers^post5, nlocbuffer^0'=nlocbuffer^post5, r^0'=r^post5, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post5, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post5, rnode^0'=rnode^post5, tmp1212^0'=tmp1212^post5, tmp1^0'=tmp1^post5, tmp88^0'=tmp88^post5, tmp___03^0'=tmp___03^post5, tmp___14^0'=tmp___14^post5, (tmp1^0-tmp1^post5 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post5 == 0 /\ istemp^0-istemp^post5 == 0 /\ nbuffers^0-nbuffers^post5 == 0 /\ -bufhdr_tag_rnode^post5+bufhdr_tag_rnode^0 == 0 /\ -b77^post5+b77^0 == 0 /\ -a1414^post5+a1414^0 == 0 /\ tmp1212^0-tmp1212^post5 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post5 == 0 /\ -bufhdr_flags^post5+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post5+bufhdr_cntxdirty^0 == 0 /\ -a1010^post5+a1010^0 == 0 /\ -i^post5+i^0 == 0 /\ tmp___14^0-tmp___14^post5 == 0 /\ -tmp___03^post5+tmp___03^0 == 0 /\ -a^post5+a^0 == 0 /\ -nlocbuffer^post5+nlocbuffer^0 == 0 /\ a66^0-a66^post5 == 0 /\ b1111^0-b1111^post5 == 0 /\ -ret_relfilenodeequals1313^post5+ret_relfilenodeequals1313^0 == 0 /\ -ret_relfilenodeequals99^post5+ret_relfilenodeequals99^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post5 == 0 /\ -firstdelblock^post5+firstdelblock^0 == 0 /\ -tmp88^post5+tmp88^0 == 0 /\ -r^post5+r^0 == 0 /\ rnode^0-rnode^post5 == 0), cost: 1
	New rule:
	l6 -> l6 : a1010^0'=a1010^post5, a1414^0'=a1414^post5, a66^0'=a66^post5, a^0'=a^post5, b1111^0'=b1111^post5, b77^0'=b77^post5, bufhdr___01515^0'=bufhdr___01515^post5, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post5, bufhdr_flags^0'=bufhdr_flags^post5, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post5, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post5, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post5, firstdelblock^0'=firstdelblock^post5, i^0'=i^post5, istemp^0'=istemp^post5, nbuffers^0'=nbuffers^post5, nlocbuffer^0'=nlocbuffer^post5, r^0'=r^post5, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post5, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post5, rnode^0'=rnode^post5, tmp1212^0'=tmp1212^post5, tmp1^0'=tmp1^post5, tmp88^0'=tmp88^post5, tmp___03^0'=tmp___03^post5, tmp___14^0'=tmp___14^post5, (b77^post4-b77^post5 == 0 /\ -b77^post4+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post4 == 0 /\ tmp1^0-tmp1^post4 == 0 /\ tmp___03^post4-tmp___03^post5 == 0 /\ -i^post5+i^post4 == 0 /\ -bufhdr_flags^post4+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post4+bufhdr_cntxdirty^0 == 0 /\ bufhdr___01515^post4-bufhdr___01515^post5 == 0 /\ istemp^0-istemp^post4 == 0 /\ r^post4-r^post5 == 0 /\ tmp___14^post4-tmp___14^post5 == 0 /\ ret_relfilenodeequals1313^post4-ret_relfilenodeequals1313^post5 == 0 /\ a^0-a^post4 == 0 /\ tmp1212^0-tmp1212^post4 == 0 /\ -a1010^post4+a1010^0 == 0 /\ nlocbuffer^post4-nlocbuffer^post5 == 0 /\ tmp___14^0-tmp___14^post4 == 0 /\ tmp1^post4-tmp1^post5 == 0 /\ -istemp^post5+istemp^post4 == 0 /\ -tmp___03^post4+tmp___03^0 == 0 /\ ret_relfilenodeequals99^post4-ret_relfilenodeequals99^post5 == 0 /\ a1010^post4-a1010^post5 == 0 /\ -nbuffers^post5+nbuffers^post4 == 0 /\ bufhdr_flags^post4-bufhdr_flags^post5 == 0 /\ -ret_relfilenodeequals1313^post4+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_tag_rnode^post4+bufhdr_tag_rnode^0 == 0 /\ rnode^post4-rnode^post5 == 0 /\ b1111^0-b1111^post4 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0 /\ -nlocbuffer^post4+nlocbuffer^0 == 0 /\ bufhdr_tag_blocknum^post4-bufhdr_tag_blocknum^post5 == 0 /\ a66^post4-a66^post5 == 0 /\ tmp1212^post4-tmp1212^post5 == 0 /\ -firstdelblock^post4+firstdelblock^0 == 0 /\ a66^0-a66^post4 == 0 /\ -firstdelblock^post5+firstdelblock^post4 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post4 == 0 /\ a1414^post4-a1414^post5 == 0 /\ bufhdr_cntxdirty^post4-bufhdr_cntxdirty^post5 == 0 /\ -a1414^post4+a1414^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post4 == 0 /\ -a^post5+a^post4 == 0 /\ -bufhdr_tag_rnode_relnode^post5+bufhdr_tag_rnode_relnode^post4 == 0 /\ -tmp88^post4+tmp88^0 == 0 /\ b1111^post4-b1111^post5 == 0 /\ nbuffers^0-nbuffers^post4 == 0 /\ -ret_relfilenodeequals99^post4+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post4 == 0 /\ tmp88^post4-tmp88^post5 == 0 /\ -bufhdr_tag_rnode^post5+bufhdr_tag_rnode^post4 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location l19 by chaining:

	Applied chaining

	First rule:
	l13 -> l19 : a1010^0'=a1010^post25, a1414^0'=a1414^post25, a66^0'=a66^post25, a^0'=a^post25, b1111^0'=b1111^post25, b77^0'=b77^post25, bufhdr___01515^0'=bufhdr___01515^post25, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post25, bufhdr_flags^0'=bufhdr_flags^post25, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post25, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post25, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post25, firstdelblock^0'=firstdelblock^post25, i^0'=i^post25, istemp^0'=istemp^post25, nbuffers^0'=nbuffers^post25, nlocbuffer^0'=nlocbuffer^post25, r^0'=r^post25, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post25, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post25, rnode^0'=rnode^post25, tmp1212^0'=tmp1212^post25, tmp1^0'=tmp1^post25, tmp88^0'=tmp88^post25, tmp___03^0'=tmp___03^post25, tmp___14^0'=tmp___14^post25, (a^0-a^post25 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post25 == 0 /\ a1010^0-a1010^post25 == 0 /\ istemp^0-istemp^post25 == 0 /\ -bufhdr_tag_rnode^post25+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post25 == 0 /\ -bufhdr_cntxdirty^post25+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post25+bufhdr_flags^0 == 0 /\ nbuffers^0-nbuffers^post25 == 0 /\ -tmp___14^post25+tmp___14^0 == 0 /\ -ret_relfilenodeequals1313^post25+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post25 == 0 /\ rnode^0-rnode^post25 == 0 /\ b1111^0-b1111^post25 == 0 /\ -i^post25+i^0 == 0 /\ tmp1212^0-tmp1212^post25 == 0 /\ -r^post25+r^0 == 0 /\ -tmp1^post25+tmp1^0 == 0 /\ -a1414^post25+a1414^0 == 0 /\ -b77^post25+b77^0 == 0 /\ tmp___03^0-tmp___03^post25 == 0 /\ a66^0-a66^post25 == 0 /\ bufhdr___01515^0-bufhdr___01515^post25 == 0 /\ -firstdelblock^post25+firstdelblock^0 == 0 /\ -tmp88^post25+tmp88^0 == 0 /\ -nlocbuffer^post25+nlocbuffer^0 == 0), cost: 1
	Second rule:
	l19 -> l13 : a1010^0'=a1010^post26, a1414^0'=a1414^post26, a66^0'=a66^post26, a^0'=a^post26, b1111^0'=b1111^post26, b77^0'=b77^post26, bufhdr___01515^0'=bufhdr___01515^post26, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post26, bufhdr_flags^0'=bufhdr_flags^post26, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post26, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post26, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post26, firstdelblock^0'=firstdelblock^post26, i^0'=i^post26, istemp^0'=istemp^post26, nbuffers^0'=nbuffers^post26, nlocbuffer^0'=nlocbuffer^post26, r^0'=r^post26, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post26, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post26, rnode^0'=rnode^post26, tmp1212^0'=tmp1212^post26, tmp1^0'=tmp1^post26, tmp88^0'=tmp88^post26, tmp___03^0'=tmp___03^post26, tmp___14^0'=tmp___14^post26, (tmp___14^0-tmp___14^post26 == 0 /\ -a^post26+a^0 == 0 /\ -nlocbuffer^post26+nlocbuffer^0 == 0 /\ -nbuffers^post26+nbuffers^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post26 == 0 /\ a1010^0-a1010^post26 == 0 /\ -tmp1^post26+tmp1^0 == 0 /\ rnode^0-rnode^post26 == 0 /\ -tmp88^post26+tmp88^0 == 0 /\ i^0-i^post26 == 0 /\ -a1414^post26+a1414^0 == 0 /\ b1111^0-b1111^post26 == 0 /\ istemp^0-istemp^post26 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post26 == 0 /\ b77^0-b77^post26 == 0 /\ -tmp1212^post26+tmp1212^0 == 0 /\ -bufhdr_tag_rnode^post26+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_cntxdirty^post26+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post26+bufhdr___01515^0 == 0 /\ -firstdelblock^post26+firstdelblock^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post26 == 0 /\ -a66^post26+a66^0 == 0 /\ -ret_relfilenodeequals1313^post26+ret_relfilenodeequals1313^0 == 0 /\ r^0-r^post26 == 0 /\ bufhdr_flags^0-bufhdr_flags^post26 == 0 /\ tmp___03^0-tmp___03^post26 == 0), cost: 1
	New rule:
	l13 -> l13 : a1010^0'=a1010^post26, a1414^0'=a1414^post26, a66^0'=a66^post26, a^0'=a^post26, b1111^0'=b1111^post26, b77^0'=b77^post26, bufhdr___01515^0'=bufhdr___01515^post26, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post26, bufhdr_flags^0'=bufhdr_flags^post26, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post26, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post26, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post26, firstdelblock^0'=firstdelblock^post26, i^0'=i^post26, istemp^0'=istemp^post26, nbuffers^0'=nbuffers^post26, nlocbuffer^0'=nlocbuffer^post26, r^0'=r^post26, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post26, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post26, rnode^0'=rnode^post26, tmp1212^0'=tmp1212^post26, tmp1^0'=tmp1^post26, tmp88^0'=tmp88^post26, tmp___03^0'=tmp___03^post26, tmp___14^0'=tmp___14^post26, (tmp1^post25-tmp1^post26 == 0 /\ -ret_relfilenodeequals1313^post26+ret_relfilenodeequals1313^post25 == 0 /\ a^0-a^post25 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post25 == 0 /\ a1010^0-a1010^post25 == 0 /\ bufhdr_tag_rnode_relnode^post25-bufhdr_tag_rnode_relnode^post26 == 0 /\ a1414^post25-a1414^post26 == 0 /\ istemp^0-istemp^post25 == 0 /\ -bufhdr_tag_rnode^post25+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post25 == 0 /\ -tmp1212^post26+tmp1212^post25 == 0 /\ -bufhdr_cntxdirty^post25+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post25+bufhdr_flags^0 == 0 /\ nbuffers^0-nbuffers^post25 == 0 /\ i^post25-i^post26 == 0 /\ tmp88^post25-tmp88^post26 == 0 /\ -tmp___14^post25+tmp___14^0 == 0 /\ -ret_relfilenodeequals1313^post25+ret_relfilenodeequals1313^0 == 0 /\ -a66^post26+a66^post25 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post25 == 0 /\ rnode^0-rnode^post25 == 0 /\ -bufhdr_tag_blocknum^post26+bufhdr_tag_blocknum^post25 == 0 /\ -ret_relfilenodeequals99^post26+ret_relfilenodeequals99^post25 == 0 /\ istemp^post25-istemp^post26 == 0 /\ b1111^0-b1111^post25 == 0 /\ -i^post25+i^0 == 0 /\ b77^post25-b77^post26 == 0 /\ tmp1212^0-tmp1212^post25 == 0 /\ -r^post25+r^0 == 0 /\ -a1010^post26+a1010^post25 == 0 /\ bufhdr_flags^post25-bufhdr_flags^post26 == 0 /\ tmp___14^post25-tmp___14^post26 == 0 /\ -a^post26+a^post25 == 0 /\ nlocbuffer^post25-nlocbuffer^post26 == 0 /\ -tmp1^post25+tmp1^0 == 0 /\ -a1414^post25+a1414^0 == 0 /\ -firstdelblock^post26+firstdelblock^post25 == 0 /\ -b77^post25+b77^0 == 0 /\ tmp___03^0-tmp___03^post25 == 0 /\ r^post25-r^post26 == 0 /\ bufhdr_cntxdirty^post25-bufhdr_cntxdirty^post26 == 0 /\ a66^0-a66^post25 == 0 /\ tmp___03^post25-tmp___03^post26 == 0 /\ bufhdr___01515^0-bufhdr___01515^post25 == 0 /\ -firstdelblock^post25+firstdelblock^0 == 0 /\ -bufhdr___01515^post26+bufhdr___01515^post25 == 0 /\ -tmp88^post25+tmp88^0 == 0 /\ rnode^post25-rnode^post26 == 0 /\ bufhdr_tag_rnode^post25-bufhdr_tag_rnode^post26 == 0 /\ b1111^post25-b1111^post26 == 0 /\ -nbuffers^post26+nbuffers^post25 == 0 /\ -nlocbuffer^post25+nlocbuffer^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 24 25

Simplified Transitions

Start location: l22
Program variables: a1010^0 a1414^0 a66^0 a^0 b1111^0 b77^0 bufhdr___01515^0 bufhdr_cntxdirty^0 bufhdr_flags^0 bufhdr_tag_blocknum^0 bufhdr_tag_rnode^0 bufhdr_tag_rnode_relnode^0 firstdelblock^0 i^0 istemp^0 nbuffers^0 nlocbuffer^0 r^0 ret_relfilenodeequals1313^0 ret_relfilenodeequals99^0 rnode^0 tmp1212^0 tmp1^0 tmp88^0 tmp___03^0 tmp___14^0
  36: l0 -> l1 : T, cost: 1
  37: l2 -> l3 : T, cost: 1
  58: l3 -> l6 : -i^0+nlocbuffer^0 <= 0, cost: 1
  59: l3 -> l18 : a66^0'=bufhdr_tag_rnode^0, b77^0'=rnode^0, ret_relfilenodeequals99^0'=tmp88^post28, tmp1^0'=tmp88^post28, tmp88^0'=tmp88^post28, 1+i^0-nlocbuffer^0 <= 0, cost: 1
  38: l4 -> l5 : i^0'=1+i^0, T, cost: 1
  46: l5 -> l12 : T, cost: 1
  64: l6 -> l6 : T, cost: 1
  39: l8 -> l4 : bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post6, T, cost: 1
  40: l8 -> l9 : a1414^0'=a1414^post7, T, cost: 1
  51: l9 -> l11 : a1010^0'=bufhdr_tag_rnode^0, b1111^0'=rnode^0, ret_relfilenodeequals1313^0'=tmp___14^post18, tmp1212^0'=tmp___14^post18, tmp___14^0'=tmp___14^post18, T, cost: 1
  41: l10 -> l4 : 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
  42: l10 -> l8 : -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
  43: l11 -> l4 : (tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ -tmp___14^0 <= 0), cost: 1
  44: l11 -> l10 : 1-tmp___14^0 <= 0, cost: 1
  45: l11 -> l10 : 1+tmp___14^0 <= 0, cost: 1
  47: l12 -> l13 : r^0'=0, 1+nbuffers^0-i^0 <= 0, cost: 1
  48: l12 -> l9 : tmp___03^0'=tmp___03^post15, -nbuffers^0+i^0 <= 0, cost: 1
  65: l13 -> l13 : T, cost: 1
  49: l14 -> l15 : T, cost: 1
  50: l15 -> l5 : a^0'=0, i^0'=1, T, cost: 1
  52: l16 -> l2 : i^0'=1+i^0, T, cost: 1
  53: l17 -> l16 : 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
  54: l17 -> l16 : bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_rnode_relnode^0'=1, -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
  55: l18 -> l16 : (-tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ tmp1^0 <= 0), cost: 1
  56: l18 -> l17 : 1-tmp1^0 <= 0, cost: 1
  57: l18 -> l17 : 1+tmp1^0 <= 0, cost: 1
  60: l20 -> l15 : 2-istemp^0 <= 0, cost: 1
  61: l20 -> l15 : istemp^0 <= 0, cost: 1
  62: l20 -> l2 : i^0'=0, (1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0), cost: 1
  63: l22 -> l20 : a^0'=0, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=0, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : a1010^0'=a1010^post1, a1414^0'=a1414^post1, a66^0'=a66^post1, a^0'=a^post1, b1111^0'=b1111^post1, b77^0'=b77^post1, bufhdr___01515^0'=bufhdr___01515^post1, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post1, bufhdr_flags^0'=bufhdr_flags^post1, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post1, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post1, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post1, firstdelblock^0'=firstdelblock^post1, i^0'=i^post1, istemp^0'=istemp^post1, nbuffers^0'=nbuffers^post1, nlocbuffer^0'=nlocbuffer^post1, r^0'=r^post1, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post1, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post1, rnode^0'=rnode^post1, tmp1212^0'=tmp1212^post1, tmp1^0'=tmp1^post1, tmp88^0'=tmp88^post1, tmp___03^0'=tmp___03^post1, tmp___14^0'=tmp___14^post1, (r^0-r^post1 == 0 /\ -tmp___03^post1+tmp___03^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post1 == 0 /\ -firstdelblock^post1+firstdelblock^0 == 0 /\ rnode^0-rnode^post1 == 0 /\ tmp___14^0-tmp___14^post1 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post1 == 0 /\ -a^post1+a^0 == 0 /\ -i^post1+i^0 == 0 /\ -nlocbuffer^post1+nlocbuffer^0 == 0 /\ -nbuffers^post1+nbuffers^0 == 0 /\ -a1414^post1+a1414^0 == 0 /\ -tmp1^post1+tmp1^0 == 0 /\ a66^0-a66^post1 == 0 /\ istemp^0-istemp^post1 == 0 /\ -bufhdr_cntxdirty^post1+bufhdr_cntxdirty^0 == 0 /\ -b77^post1+b77^0 == 0 /\ -ret_relfilenodeequals99^post1+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post1+ret_relfilenodeequals1313^0 == 0 /\ tmp1212^0-tmp1212^post1 == 0 /\ -bufhdr___01515^post1+bufhdr___01515^0 == 0 /\ a1010^0-a1010^post1 == 0 /\ -tmp88^post1+tmp88^0 == 0 /\ b1111^0-b1111^post1 == 0 /\ -bufhdr_tag_rnode^post1+bufhdr_tag_rnode^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post1 == 0), cost: 1
	New rule:
	l0 -> l1 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality r^post1 = r^0
		
		propagated equality tmp___03^post1 = tmp___03^0
		
		propagated equality bufhdr_tag_rnode_relnode^post1 = bufhdr_tag_rnode_relnode^0
		
		propagated equality firstdelblock^post1 = firstdelblock^0
		
		propagated equality rnode^post1 = rnode^0
		
		propagated equality tmp___14^post1 = tmp___14^0
		
		propagated equality bufhdr_tag_blocknum^post1 = bufhdr_tag_blocknum^0
		
		propagated equality a^post1 = a^0
		
		propagated equality i^post1 = i^0
		
		propagated equality nlocbuffer^post1 = nlocbuffer^0
		
		propagated equality nbuffers^post1 = nbuffers^0
		
		propagated equality a1414^post1 = a1414^0
		
		propagated equality tmp1^post1 = tmp1^0
		
		propagated equality a66^post1 = a66^0
		
		propagated equality istemp^post1 = istemp^0
		
		propagated equality bufhdr_cntxdirty^post1 = bufhdr_cntxdirty^0
		
		propagated equality b77^post1 = b77^0
		
		propagated equality ret_relfilenodeequals99^post1 = ret_relfilenodeequals99^0
		
		propagated equality ret_relfilenodeequals1313^post1 = ret_relfilenodeequals1313^0
		
		propagated equality tmp1212^post1 = tmp1212^0
		
		propagated equality bufhdr___01515^post1 = bufhdr___01515^0
		
		propagated equality a1010^post1 = a1010^0
		
		propagated equality tmp88^post1 = tmp88^0
		
		propagated equality b1111^post1 = b1111^0
		
		propagated equality bufhdr_tag_rnode^post1 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr_flags^post1 = bufhdr_flags^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l0 -> l1 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l0 -> l1 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l3 : a1010^0'=a1010^post2, a1414^0'=a1414^post2, a66^0'=a66^post2, a^0'=a^post2, b1111^0'=b1111^post2, b77^0'=b77^post2, bufhdr___01515^0'=bufhdr___01515^post2, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post2, bufhdr_flags^0'=bufhdr_flags^post2, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post2, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post2, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post2, firstdelblock^0'=firstdelblock^post2, i^0'=i^post2, istemp^0'=istemp^post2, nbuffers^0'=nbuffers^post2, nlocbuffer^0'=nlocbuffer^post2, r^0'=r^post2, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post2, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post2, rnode^0'=rnode^post2, tmp1212^0'=tmp1212^post2, tmp1^0'=tmp1^post2, tmp88^0'=tmp88^post2, tmp___03^0'=tmp___03^post2, tmp___14^0'=tmp___14^post2, (i^0-i^post2 == 0 /\ tmp___14^0-tmp___14^post2 == 0 /\ -nlocbuffer^post2+nlocbuffer^0 == 0 /\ -nbuffers^post2+nbuffers^0 == 0 /\ -tmp1^post2+tmp1^0 == 0 /\ rnode^0-rnode^post2 == 0 /\ -a^post2+a^0 == 0 /\ -tmp88^post2+tmp88^0 == 0 /\ istemp^0-istemp^post2 == 0 /\ -bufhdr_tag_rnode^post2+bufhdr_tag_rnode^0 == 0 /\ -ret_relfilenodeequals99^post2+ret_relfilenodeequals99^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post2 == 0 /\ -bufhdr_flags^post2+bufhdr_flags^0 == 0 /\ a1414^0-a1414^post2 == 0 /\ -firstdelblock^post2+firstdelblock^0 == 0 /\ -tmp1212^post2+tmp1212^0 == 0 /\ a1010^0-a1010^post2 == 0 /\ b1111^0-b1111^post2 == 0 /\ -bufhdr_tag_rnode_relnode^post2+bufhdr_tag_rnode_relnode^0 == 0 /\ r^0-r^post2 == 0 /\ -b77^post2+b77^0 == 0 /\ -a66^post2+a66^0 == 0 /\ -ret_relfilenodeequals1313^post2+ret_relfilenodeequals1313^0 == 0 /\ tmp___03^0-tmp___03^post2 == 0 /\ bufhdr___01515^0-bufhdr___01515^post2 == 0 /\ -bufhdr_cntxdirty^post2+bufhdr_cntxdirty^0 == 0), cost: 1
	New rule:
	l2 -> l3 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality i^post2 = i^0
		
		propagated equality tmp___14^post2 = tmp___14^0
		
		propagated equality nlocbuffer^post2 = nlocbuffer^0
		
		propagated equality nbuffers^post2 = nbuffers^0
		
		propagated equality tmp1^post2 = tmp1^0
		
		propagated equality rnode^post2 = rnode^0
		
		propagated equality a^post2 = a^0
		
		propagated equality tmp88^post2 = tmp88^0
		
		propagated equality istemp^post2 = istemp^0
		
		propagated equality bufhdr_tag_rnode^post2 = bufhdr_tag_rnode^0
		
		propagated equality ret_relfilenodeequals99^post2 = ret_relfilenodeequals99^0
		
		propagated equality bufhdr_tag_blocknum^post2 = bufhdr_tag_blocknum^0
		
		propagated equality bufhdr_flags^post2 = bufhdr_flags^0
		
		propagated equality a1414^post2 = a1414^0
		
		propagated equality firstdelblock^post2 = firstdelblock^0
		
		propagated equality tmp1212^post2 = tmp1212^0
		
		propagated equality a1010^post2 = a1010^0
		
		propagated equality b1111^post2 = b1111^0
		
		propagated equality bufhdr_tag_rnode_relnode^post2 = bufhdr_tag_rnode_relnode^0
		
		propagated equality r^post2 = r^0
		
		propagated equality b77^post2 = b77^0
		
		propagated equality a66^post2 = a66^0
		
		propagated equality ret_relfilenodeequals1313^post2 = ret_relfilenodeequals1313^0
		
		propagated equality tmp___03^post2 = tmp___03^0
		
		propagated equality bufhdr___01515^post2 = bufhdr___01515^0
		
		propagated equality bufhdr_cntxdirty^post2 = bufhdr_cntxdirty^0
		
	Simplified Guard

	Original rule:
	l2 -> l3 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l2 -> l3 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l3 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l2 -> l3 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l5 : a1010^0'=a1010^post3, a1414^0'=a1414^post3, a66^0'=a66^post3, a^0'=a^post3, b1111^0'=b1111^post3, b77^0'=b77^post3, bufhdr___01515^0'=bufhdr___01515^post3, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post3, bufhdr_flags^0'=bufhdr_flags^post3, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post3, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post3, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post3, firstdelblock^0'=firstdelblock^post3, i^0'=i^post3, istemp^0'=istemp^post3, nbuffers^0'=nbuffers^post3, nlocbuffer^0'=nlocbuffer^post3, r^0'=r^post3, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post3, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post3, rnode^0'=rnode^post3, tmp1212^0'=tmp1212^post3, tmp1^0'=tmp1^post3, tmp88^0'=tmp88^post3, tmp___03^0'=tmp___03^post3, tmp___14^0'=tmp___14^post3, (bufhdr___01515^0-bufhdr___01515^post3 == 0 /\ rnode^0-rnode^post3 == 0 /\ -ret_relfilenodeequals1313^post3+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post3 == 0 /\ -firstdelblock^post3+firstdelblock^0 == 0 /\ -a66^post3+a66^0 == 0 /\ tmp1^0-tmp1^post3 == 0 /\ -istemp^post3+istemp^0 == 0 /\ -a^post3+a^0 == 0 /\ tmp1212^0-tmp1212^post3 == 0 /\ -nlocbuffer^post3+nlocbuffer^0 == 0 /\ -bufhdr_cntxdirty^post3+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_tag_rnode^post3+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_flags^post3+bufhdr_flags^0 == 0 /\ -tmp88^post3+tmp88^0 == 0 /\ r^0-r^post3 == 0 /\ -tmp___03^post3+tmp___03^0 == 0 /\ -1-i^0+i^post3 == 0 /\ -b77^post3+b77^0 == 0 /\ -bufhdr_tag_rnode_relnode^post3+bufhdr_tag_rnode_relnode^0 == 0 /\ nbuffers^0-nbuffers^post3 == 0 /\ a1414^0-a1414^post3 == 0 /\ a1010^0-a1010^post3 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post3 == 0 /\ b1111^0-b1111^post3 == 0 /\ tmp___14^0-tmp___14^post3 == 0), cost: 1
	New rule:
	l4 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1+i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality bufhdr___01515^post3 = bufhdr___01515^0
		
		propagated equality rnode^post3 = rnode^0
		
		propagated equality ret_relfilenodeequals1313^post3 = ret_relfilenodeequals1313^0
		
		propagated equality bufhdr_tag_blocknum^post3 = bufhdr_tag_blocknum^0
		
		propagated equality firstdelblock^post3 = firstdelblock^0
		
		propagated equality a66^post3 = a66^0
		
		propagated equality tmp1^post3 = tmp1^0
		
		propagated equality istemp^post3 = istemp^0
		
		propagated equality a^post3 = a^0
		
		propagated equality tmp1212^post3 = tmp1212^0
		
		propagated equality nlocbuffer^post3 = nlocbuffer^0
		
		propagated equality bufhdr_cntxdirty^post3 = bufhdr_cntxdirty^0
		
		propagated equality bufhdr_tag_rnode^post3 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr_flags^post3 = bufhdr_flags^0
		
		propagated equality tmp88^post3 = tmp88^0
		
		propagated equality r^post3 = r^0
		
		propagated equality tmp___03^post3 = tmp___03^0
		
		propagated equality i^post3 = 1+i^0
		
		propagated equality b77^post3 = b77^0
		
		propagated equality bufhdr_tag_rnode_relnode^post3 = bufhdr_tag_rnode_relnode^0
		
		propagated equality nbuffers^post3 = nbuffers^0
		
		propagated equality a1414^post3 = a1414^0
		
		propagated equality a1010^post3 = a1010^0
		
		propagated equality ret_relfilenodeequals99^post3 = ret_relfilenodeequals99^0
		
		propagated equality b1111^post3 = b1111^0
		
		propagated equality tmp___14^post3 = tmp___14^0
		
	Simplified Guard

	Original rule:
	l4 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1+i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l4 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1+i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1+i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l4 -> l5 : i^0'=1+i^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l4 : a1010^0'=a1010^post6, a1414^0'=a1414^post6, a66^0'=a66^post6, a^0'=a^post6, b1111^0'=b1111^post6, b77^0'=b77^post6, bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post6, bufhdr_flags^0'=bufhdr_flags^post6, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post6, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post6, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post6, firstdelblock^0'=firstdelblock^post6, i^0'=i^post6, istemp^0'=istemp^post6, nbuffers^0'=nbuffers^post6, nlocbuffer^0'=nlocbuffer^post6, r^0'=r^post6, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post6, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post6, rnode^0'=rnode^post6, tmp1212^0'=tmp1212^post6, tmp1^0'=tmp1^post6, tmp88^0'=tmp88^post6, tmp___03^0'=tmp___03^post6, tmp___14^0'=tmp___14^post6, (0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post6 == 0 /\ b77^0-b77^post6 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post6 == 0 /\ istemp^0-istemp^post6 == 0 /\ -bufhdr_tag_rnode^post6+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post6 == 0 /\ rnode^0-rnode^post6 == 0 /\ tmp___14^0-tmp___14^post6 == 0 /\ -tmp___03^post6+tmp___03^0 == 0 /\ a66^0-a66^post6 == 0 /\ -nbuffers^post6+nbuffers^0 == 0 /\ i^0-i^post6 == 0 /\ -a1414^post6+a1414^0 == 0 /\ a1010^0-a1010^post6 == 0 /\ -tmp1^post6+tmp1^0 == 0 /\ -tmp1212^post6+tmp1212^0 == 0 /\ bufhdr_cntxdirty^post6 == 0 /\ -tmp88^post6+tmp88^0 == 0 /\ -ret_relfilenodeequals1313^post6+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post6+firstdelblock^0 == 0 /\ b1111^0-b1111^post6 == 0 /\ r^0-r^post6 == 0 /\ -a^post6+a^0 == 0 /\ -nlocbuffer^post6+nlocbuffer^0 == 0), cost: 1
	New rule:
	l8 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post6, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality bufhdr_tag_blocknum^post6 = bufhdr_tag_blocknum^0
		
		propagated equality b77^post6 = b77^0
		
		propagated equality ret_relfilenodeequals99^post6 = ret_relfilenodeequals99^0
		
		propagated equality istemp^post6 = istemp^0
		
		propagated equality bufhdr_tag_rnode^post6 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr_tag_rnode_relnode^post6 = bufhdr_tag_rnode_relnode^0
		
		propagated equality rnode^post6 = rnode^0
		
		propagated equality tmp___14^post6 = tmp___14^0
		
		propagated equality tmp___03^post6 = tmp___03^0
		
		propagated equality a66^post6 = a66^0
		
		propagated equality nbuffers^post6 = nbuffers^0
		
		propagated equality i^post6 = i^0
		
		propagated equality a1414^post6 = a1414^0
		
		propagated equality a1010^post6 = a1010^0
		
		propagated equality tmp1^post6 = tmp1^0
		
		propagated equality tmp1212^post6 = tmp1212^0
		
		propagated equality bufhdr_cntxdirty^post6 = 0
		
		propagated equality tmp88^post6 = tmp88^0
		
		propagated equality ret_relfilenodeequals1313^post6 = ret_relfilenodeequals1313^0
		
		propagated equality firstdelblock^post6 = firstdelblock^0
		
		propagated equality b1111^post6 = b1111^0
		
		propagated equality r^post6 = r^0
		
		propagated equality a^post6 = a^0
		
		propagated equality nlocbuffer^post6 = nlocbuffer^0
		
	Simplified Guard

	Original rule:
	l8 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post6, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l8 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post6, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post6, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l8 -> l4 : bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post6, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l9 : a1010^0'=a1010^post7, a1414^0'=a1414^post7, a66^0'=a66^post7, a^0'=a^post7, b1111^0'=b1111^post7, b77^0'=b77^post7, bufhdr___01515^0'=bufhdr___01515^post7, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post7, bufhdr_flags^0'=bufhdr_flags^post7, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post7, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post7, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post7, firstdelblock^0'=firstdelblock^post7, i^0'=i^post7, istemp^0'=istemp^post7, nbuffers^0'=nbuffers^post7, nlocbuffer^0'=nlocbuffer^post7, r^0'=r^post7, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post7, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post7, rnode^0'=rnode^post7, tmp1212^0'=tmp1212^post7, tmp1^0'=tmp1^post7, tmp88^0'=tmp88^post7, tmp___03^0'=tmp___03^post7, tmp___14^0'=tmp___14^post7, (0 == 0 /\ istemp^0-istemp^post7 == 0 /\ -tmp88^post7+tmp88^0 == 0 /\ -tmp___03^post7+tmp___03^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post7 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post7 == 0 /\ tmp___14^0-tmp___14^post7 == 0 /\ -ret_relfilenodeequals1313^post7+ret_relfilenodeequals1313^0 == 0 /\ -b77^post7+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post7 == 0 /\ -nbuffers^post7+nbuffers^0 == 0 /\ i^0-i^post7 == 0 /\ -bufhdr_tag_rnode_relnode^post7+bufhdr_tag_rnode_relnode^0 == 0 /\ a1010^0-a1010^post7 == 0 /\ -bufhdr_tag_rnode^post7+bufhdr_tag_rnode^0 == 0 /\ -a66^post7+a66^0 == 0 /\ -bufhdr_cntxdirty^post7+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post7+bufhdr_flags^0 == 0 /\ rnode^0-rnode^post7 == 0 /\ r^0-r^post7 == 0 /\ -nlocbuffer^post7+nlocbuffer^0 == 0 /\ b1111^0-b1111^post7 == 0 /\ -firstdelblock^post7+firstdelblock^0 == 0 /\ -a^post7+a^0 == 0 /\ -tmp1212^post7+tmp1212^0 == 0 /\ -tmp1^post7+tmp1^0 == 0), cost: 1
	New rule:
	l8 -> l9 : a1010^0'=a1010^0, a1414^0'=a1414^post7, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality istemp^post7 = istemp^0
		
		propagated equality tmp88^post7 = tmp88^0
		
		propagated equality tmp___03^post7 = tmp___03^0
		
		propagated equality bufhdr___01515^post7 = bufhdr___01515^0
		
		propagated equality ret_relfilenodeequals99^post7 = ret_relfilenodeequals99^0
		
		propagated equality tmp___14^post7 = tmp___14^0
		
		propagated equality ret_relfilenodeequals1313^post7 = ret_relfilenodeequals1313^0
		
		propagated equality b77^post7 = b77^0
		
		propagated equality bufhdr_tag_blocknum^post7 = bufhdr_tag_blocknum^0
		
		propagated equality nbuffers^post7 = nbuffers^0
		
		propagated equality i^post7 = i^0
		
		propagated equality bufhdr_tag_rnode_relnode^post7 = bufhdr_tag_rnode_relnode^0
		
		propagated equality a1010^post7 = a1010^0
		
		propagated equality bufhdr_tag_rnode^post7 = bufhdr_tag_rnode^0
		
		propagated equality a66^post7 = a66^0
		
		propagated equality bufhdr_cntxdirty^post7 = bufhdr_cntxdirty^0
		
		propagated equality bufhdr_flags^post7 = bufhdr_flags^0
		
		propagated equality rnode^post7 = rnode^0
		
		propagated equality r^post7 = r^0
		
		propagated equality nlocbuffer^post7 = nlocbuffer^0
		
		propagated equality b1111^post7 = b1111^0
		
		propagated equality firstdelblock^post7 = firstdelblock^0
		
		propagated equality a^post7 = a^0
		
		propagated equality tmp1212^post7 = tmp1212^0
		
		propagated equality tmp1^post7 = tmp1^0
		
	Simplified Guard

	Original rule:
	l8 -> l9 : a1010^0'=a1010^0, a1414^0'=a1414^post7, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l8 -> l9 : a1010^0'=a1010^0, a1414^0'=a1414^post7, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l9 : a1010^0'=a1010^0, a1414^0'=a1414^post7, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l8 -> l9 : a1414^0'=a1414^post7, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l10 -> l4 : a1010^0'=a1010^post8, a1414^0'=a1414^post8, a66^0'=a66^post8, a^0'=a^post8, b1111^0'=b1111^post8, b77^0'=b77^post8, bufhdr___01515^0'=bufhdr___01515^post8, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post8, bufhdr_flags^0'=bufhdr_flags^post8, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post8, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post8, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post8, firstdelblock^0'=firstdelblock^post8, i^0'=i^post8, istemp^0'=istemp^post8, nbuffers^0'=nbuffers^post8, nlocbuffer^0'=nlocbuffer^post8, r^0'=r^post8, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post8, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post8, rnode^0'=rnode^post8, tmp1212^0'=tmp1212^post8, tmp1^0'=tmp1^post8, tmp88^0'=tmp88^post8, tmp___03^0'=tmp___03^post8, tmp___14^0'=tmp___14^post8, (-firstdelblock^post8+firstdelblock^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post8 == 0 /\ -tmp1^post8+tmp1^0 == 0 /\ -istemp^post8+istemp^0 == 0 /\ -tmp___14^post8+tmp___14^0 == 0 /\ -nlocbuffer^post8+nlocbuffer^0 == 0 /\ -tmp88^post8+tmp88^0 == 0 /\ -bufhdr_cntxdirty^post8+bufhdr_cntxdirty^0 == 0 /\ -ret_relfilenodeequals99^post8+ret_relfilenodeequals99^0 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0 /\ -b77^post8+b77^0 == 0 /\ -bufhdr_tag_rnode_relnode^post8+bufhdr_tag_rnode_relnode^0 == 0 /\ tmp___03^0-tmp___03^post8 == 0 /\ r^0-r^post8 == 0 /\ -a66^post8+a66^0 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post8 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post8 == 0 /\ a1414^0-a1414^post8 == 0 /\ a1010^0-a1010^post8 == 0 /\ rnode^0-rnode^post8 == 0 /\ -bufhdr_flags^post8+bufhdr_flags^0 == 0 /\ i^0-i^post8 == 0 /\ -a^post8+a^0 == 0 /\ nbuffers^0-nbuffers^post8 == 0 /\ b1111^0-b1111^post8 == 0 /\ tmp1212^0-tmp1212^post8 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post8 == 0), cost: 1
	New rule:
	l10 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0), cost: 1
	
		propagated equality firstdelblock^post8 = firstdelblock^0
		
		propagated equality bufhdr___01515^post8 = bufhdr___01515^0
		
		propagated equality tmp1^post8 = tmp1^0
		
		propagated equality istemp^post8 = istemp^0
		
		propagated equality tmp___14^post8 = tmp___14^0
		
		propagated equality nlocbuffer^post8 = nlocbuffer^0
		
		propagated equality tmp88^post8 = tmp88^0
		
		propagated equality bufhdr_cntxdirty^post8 = bufhdr_cntxdirty^0
		
		propagated equality ret_relfilenodeequals99^post8 = ret_relfilenodeequals99^0
		
		propagated equality b77^post8 = b77^0
		
		propagated equality bufhdr_tag_rnode_relnode^post8 = bufhdr_tag_rnode_relnode^0
		
		propagated equality tmp___03^post8 = tmp___03^0
		
		propagated equality r^post8 = r^0
		
		propagated equality a66^post8 = a66^0
		
		propagated equality bufhdr_tag_rnode^post8 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr_tag_blocknum^post8 = bufhdr_tag_blocknum^0
		
		propagated equality a1414^post8 = a1414^0
		
		propagated equality a1010^post8 = a1010^0
		
		propagated equality rnode^post8 = rnode^0
		
		propagated equality bufhdr_flags^post8 = bufhdr_flags^0
		
		propagated equality i^post8 = i^0
		
		propagated equality a^post8 = a^0
		
		propagated equality nbuffers^post8 = nbuffers^0
		
		propagated equality b1111^post8 = b1111^0
		
		propagated equality tmp1212^post8 = tmp1212^0
		
		propagated equality ret_relfilenodeequals1313^post8 = ret_relfilenodeequals1313^0
		
	Simplified Guard

	Original rule:
	l10 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0), cost: 1
	New rule:
	l10 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l10 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
	New rule:
	l10 -> l4 : 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l10 -> l8 : a1010^0'=a1010^post9, a1414^0'=a1414^post9, a66^0'=a66^post9, a^0'=a^post9, b1111^0'=b1111^post9, b77^0'=b77^post9, bufhdr___01515^0'=bufhdr___01515^post9, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post9, bufhdr_flags^0'=bufhdr_flags^post9, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post9, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post9, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post9, firstdelblock^0'=firstdelblock^post9, i^0'=i^post9, istemp^0'=istemp^post9, nbuffers^0'=nbuffers^post9, nlocbuffer^0'=nlocbuffer^post9, r^0'=r^post9, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post9, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post9, rnode^0'=rnode^post9, tmp1212^0'=tmp1212^post9, tmp1^0'=tmp1^post9, tmp88^0'=tmp88^post9, tmp___03^0'=tmp___03^post9, tmp___14^0'=tmp___14^post9, (a66^0-a66^post9 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0 /\ b1111^0-b1111^post9 == 0 /\ r^0-r^post9 == 0 /\ -bufhdr___01515^post9+bufhdr___01515^0 == 0 /\ -a1414^post9+a1414^0 == 0 /\ b77^0-b77^post9 == 0 /\ -bufhdr_cntxdirty^post9+bufhdr_cntxdirty^0 == 0 /\ -firstdelblock^post9+firstdelblock^0 == 0 /\ a1010^0-a1010^post9 == 0 /\ istemp^0-istemp^post9 == 0 /\ -tmp___14^post9+tmp___14^0 == 0 /\ tmp___03^0-tmp___03^post9 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post9 == 0 /\ -nlocbuffer^post9+nlocbuffer^0 == 0 /\ -a^post9+a^0 == 0 /\ rnode^0-rnode^post9 == 0 /\ -tmp1^post9+tmp1^0 == 0 /\ -bufhdr_tag_rnode^post9+bufhdr_tag_rnode^0 == 0 /\ tmp1212^0-tmp1212^post9 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post9 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post9 == 0 /\ -ret_relfilenodeequals99^post9+ret_relfilenodeequals99^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post9 == 0 /\ -i^post9+i^0 == 0 /\ -tmp88^post9+tmp88^0 == 0 /\ -nbuffers^post9+nbuffers^0 == 0), cost: 1
	New rule:
	l10 -> l8 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0), cost: 1
	
		propagated equality a66^post9 = a66^0
		
		propagated equality b1111^post9 = b1111^0
		
		propagated equality r^post9 = r^0
		
		propagated equality bufhdr___01515^post9 = bufhdr___01515^0
		
		propagated equality a1414^post9 = a1414^0
		
		propagated equality b77^post9 = b77^0
		
		propagated equality bufhdr_cntxdirty^post9 = bufhdr_cntxdirty^0
		
		propagated equality firstdelblock^post9 = firstdelblock^0
		
		propagated equality a1010^post9 = a1010^0
		
		propagated equality istemp^post9 = istemp^0
		
		propagated equality tmp___14^post9 = tmp___14^0
		
		propagated equality tmp___03^post9 = tmp___03^0
		
		propagated equality bufhdr_tag_rnode_relnode^post9 = bufhdr_tag_rnode_relnode^0
		
		propagated equality nlocbuffer^post9 = nlocbuffer^0
		
		propagated equality a^post9 = a^0
		
		propagated equality rnode^post9 = rnode^0
		
		propagated equality tmp1^post9 = tmp1^0
		
		propagated equality bufhdr_tag_rnode^post9 = bufhdr_tag_rnode^0
		
		propagated equality tmp1212^post9 = tmp1212^0
		
		propagated equality ret_relfilenodeequals1313^post9 = ret_relfilenodeequals1313^0
		
		propagated equality bufhdr_tag_blocknum^post9 = bufhdr_tag_blocknum^0
		
		propagated equality ret_relfilenodeequals99^post9 = ret_relfilenodeequals99^0
		
		propagated equality bufhdr_flags^post9 = bufhdr_flags^0
		
		propagated equality i^post9 = i^0
		
		propagated equality tmp88^post9 = tmp88^0
		
		propagated equality nbuffers^post9 = nbuffers^0
		
	Simplified Guard

	Original rule:
	l10 -> l8 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0), cost: 1
	New rule:
	l10 -> l8 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l10 -> l8 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
	New rule:
	l10 -> l8 : -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l11 -> l4 : a1010^0'=a1010^post10, a1414^0'=a1414^post10, a66^0'=a66^post10, a^0'=a^post10, b1111^0'=b1111^post10, b77^0'=b77^post10, bufhdr___01515^0'=bufhdr___01515^post10, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post10, bufhdr_flags^0'=bufhdr_flags^post10, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post10, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post10, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post10, firstdelblock^0'=firstdelblock^post10, i^0'=i^post10, istemp^0'=istemp^post10, nbuffers^0'=nbuffers^post10, nlocbuffer^0'=nlocbuffer^post10, r^0'=r^post10, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post10, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post10, rnode^0'=rnode^post10, tmp1212^0'=tmp1212^post10, tmp1^0'=tmp1^post10, tmp88^0'=tmp88^post10, tmp___03^0'=tmp___03^post10, tmp___14^0'=tmp___14^post10, (rnode^0-rnode^post10 == 0 /\ r^0-r^post10 == 0 /\ -a1414^post10+a1414^0 == 0 /\ a66^0-a66^post10 == 0 /\ b1111^0-b1111^post10 == 0 /\ tmp___14^0 <= 0 /\ b77^0-b77^post10 == 0 /\ istemp^0-istemp^post10 == 0 /\ -bufhdr_tag_rnode^post10+bufhdr_tag_rnode^0 == 0 /\ -bufhdr___01515^post10+bufhdr___01515^0 == 0 /\ a1010^0-a1010^post10 == 0 /\ -a^post10+a^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post10 == 0 /\ -nlocbuffer^post10+nlocbuffer^0 == 0 /\ -tmp1^post10+tmp1^0 == 0 /\ -tmp___14^0 <= 0 /\ -firstdelblock^post10+firstdelblock^0 == 0 /\ -tmp88^post10+tmp88^0 == 0 /\ -ret_relfilenodeequals1313^post10+ret_relfilenodeequals1313^0 == 0 /\ -tmp___14^post10+tmp___14^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post10 == 0 /\ tmp1212^0-tmp1212^post10 == 0 /\ -ret_relfilenodeequals99^post10+ret_relfilenodeequals99^0 == 0 /\ -i^post10+i^0 == 0 /\ -bufhdr_tag_blocknum^post10+bufhdr_tag_blocknum^0 == 0 /\ tmp___03^0-tmp___03^post10 == 0 /\ -bufhdr_cntxdirty^post10+bufhdr_cntxdirty^0 == 0 /\ -nbuffers^post10+nbuffers^0 == 0), cost: 1
	New rule:
	l11 -> l4 : a1010^0'=a1010^post10, a1414^0'=a1414^post10, a66^0'=a66^post10, a^0'=a^post10, b1111^0'=b1111^post10, b77^0'=b77^post10, bufhdr___01515^0'=bufhdr___01515^post10, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post10, bufhdr_flags^0'=bufhdr_flags^post10, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post10, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post10, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post10, firstdelblock^0'=firstdelblock^post10, i^0'=i^post10, istemp^0'=istemp^post10, nbuffers^0'=nbuffers^post10, nlocbuffer^0'=nlocbuffer^post10, r^0'=r^post10, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post10, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post10, rnode^0'=rnode^post10, tmp1212^0'=tmp1212^post10, tmp1^0'=tmp1^post10, tmp88^0'=tmp88^post10, tmp___03^0'=tmp___03^post10, tmp___14^0'=tmp___14^post10, (rnode^0-rnode^post10 == 0 /\ r^0-r^post10 == 0 /\ -a1414^post10+a1414^0 == 0 /\ a66^0-a66^post10 == 0 /\ b1111^0-b1111^post10 == 0 /\ tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ b77^0-b77^post10 == 0 /\ istemp^0-istemp^post10 == 0 /\ -bufhdr_tag_rnode^post10+bufhdr_tag_rnode^0 == 0 /\ -bufhdr___01515^post10+bufhdr___01515^0 == 0 /\ a1010^0-a1010^post10 == 0 /\ -a^post10+a^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post10 == 0 /\ -nlocbuffer^post10+nlocbuffer^0 == 0 /\ -tmp1^post10+tmp1^0 == 0 /\ -tmp___14^0 <= 0 /\ -firstdelblock^post10+firstdelblock^0 == 0 /\ -tmp88^post10+tmp88^0 == 0 /\ -ret_relfilenodeequals1313^post10+ret_relfilenodeequals1313^0 == 0 /\ -tmp___14^post10+tmp___14^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post10 == 0 /\ tmp1212^0-tmp1212^post10 == 0 /\ -ret_relfilenodeequals99^post10+ret_relfilenodeequals99^0 == 0 /\ -i^post10+i^0 == 0 /\ -bufhdr_tag_blocknum^post10+bufhdr_tag_blocknum^0 == 0 /\ tmp___03^0-tmp___03^post10 == 0 /\ -bufhdr_cntxdirty^post10+bufhdr_cntxdirty^0 == 0 /\ -nbuffers^post10+nbuffers^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l11 -> l4 : a1010^0'=a1010^post10, a1414^0'=a1414^post10, a66^0'=a66^post10, a^0'=a^post10, b1111^0'=b1111^post10, b77^0'=b77^post10, bufhdr___01515^0'=bufhdr___01515^post10, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post10, bufhdr_flags^0'=bufhdr_flags^post10, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post10, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post10, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post10, firstdelblock^0'=firstdelblock^post10, i^0'=i^post10, istemp^0'=istemp^post10, nbuffers^0'=nbuffers^post10, nlocbuffer^0'=nlocbuffer^post10, r^0'=r^post10, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post10, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post10, rnode^0'=rnode^post10, tmp1212^0'=tmp1212^post10, tmp1^0'=tmp1^post10, tmp88^0'=tmp88^post10, tmp___03^0'=tmp___03^post10, tmp___14^0'=tmp___14^post10, (rnode^0-rnode^post10 == 0 /\ r^0-r^post10 == 0 /\ -a1414^post10+a1414^0 == 0 /\ a66^0-a66^post10 == 0 /\ b1111^0-b1111^post10 == 0 /\ tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ b77^0-b77^post10 == 0 /\ istemp^0-istemp^post10 == 0 /\ -bufhdr_tag_rnode^post10+bufhdr_tag_rnode^0 == 0 /\ -bufhdr___01515^post10+bufhdr___01515^0 == 0 /\ a1010^0-a1010^post10 == 0 /\ -a^post10+a^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post10 == 0 /\ -nlocbuffer^post10+nlocbuffer^0 == 0 /\ -tmp1^post10+tmp1^0 == 0 /\ -tmp___14^0 <= 0 /\ -firstdelblock^post10+firstdelblock^0 == 0 /\ -tmp88^post10+tmp88^0 == 0 /\ -ret_relfilenodeequals1313^post10+ret_relfilenodeequals1313^0 == 0 /\ -tmp___14^post10+tmp___14^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post10 == 0 /\ tmp1212^0-tmp1212^post10 == 0 /\ -ret_relfilenodeequals99^post10+ret_relfilenodeequals99^0 == 0 /\ -i^post10+i^0 == 0 /\ -bufhdr_tag_blocknum^post10+bufhdr_tag_blocknum^0 == 0 /\ tmp___03^0-tmp___03^post10 == 0 /\ -bufhdr_cntxdirty^post10+bufhdr_cntxdirty^0 == 0 /\ -nbuffers^post10+nbuffers^0 == 0), cost: 1
	New rule:
	l11 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ -tmp___14^0 <= 0), cost: 1
	
		propagated equality rnode^post10 = rnode^0
		
		propagated equality r^post10 = r^0
		
		propagated equality a1414^post10 = a1414^0
		
		propagated equality a66^post10 = a66^0
		
		propagated equality b1111^post10 = b1111^0
		
		propagated equality b77^post10 = b77^0
		
		propagated equality istemp^post10 = istemp^0
		
		propagated equality bufhdr_tag_rnode^post10 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr___01515^post10 = bufhdr___01515^0
		
		propagated equality a1010^post10 = a1010^0
		
		propagated equality a^post10 = a^0
		
		propagated equality bufhdr_tag_rnode_relnode^post10 = bufhdr_tag_rnode_relnode^0
		
		propagated equality nlocbuffer^post10 = nlocbuffer^0
		
		propagated equality tmp1^post10 = tmp1^0
		
		propagated equality firstdelblock^post10 = firstdelblock^0
		
		propagated equality tmp88^post10 = tmp88^0
		
		propagated equality ret_relfilenodeequals1313^post10 = ret_relfilenodeequals1313^0
		
		propagated equality tmp___14^post10 = tmp___14^0
		
		propagated equality bufhdr_flags^post10 = bufhdr_flags^0
		
		propagated equality tmp1212^post10 = tmp1212^0
		
		propagated equality ret_relfilenodeequals99^post10 = ret_relfilenodeequals99^0
		
		propagated equality i^post10 = i^0
		
		propagated equality bufhdr_tag_blocknum^post10 = bufhdr_tag_blocknum^0
		
		propagated equality tmp___03^post10 = tmp___03^0
		
		propagated equality bufhdr_cntxdirty^post10 = bufhdr_cntxdirty^0
		
		propagated equality nbuffers^post10 = nbuffers^0
		
	Simplified Guard

	Original rule:
	l11 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ -tmp___14^0 <= 0), cost: 1
	New rule:
	l11 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ -tmp___14^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l11 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ -tmp___14^0 <= 0), cost: 1
	New rule:
	l11 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ -tmp___14^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l11 -> l4 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ -tmp___14^0 <= 0), cost: 1
	New rule:
	l11 -> l4 : (tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ -tmp___14^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l11 -> l10 : a1010^0'=a1010^post11, a1414^0'=a1414^post11, a66^0'=a66^post11, a^0'=a^post11, b1111^0'=b1111^post11, b77^0'=b77^post11, bufhdr___01515^0'=bufhdr___01515^post11, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post11, bufhdr_flags^0'=bufhdr_flags^post11, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post11, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post11, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post11, firstdelblock^0'=firstdelblock^post11, i^0'=i^post11, istemp^0'=istemp^post11, nbuffers^0'=nbuffers^post11, nlocbuffer^0'=nlocbuffer^post11, r^0'=r^post11, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post11, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post11, rnode^0'=rnode^post11, tmp1212^0'=tmp1212^post11, tmp1^0'=tmp1^post11, tmp88^0'=tmp88^post11, tmp___03^0'=tmp___03^post11, tmp___14^0'=tmp___14^post11, (rnode^0-rnode^post11 == 0 /\ -bufhdr_tag_rnode_relnode^post11+bufhdr_tag_rnode_relnode^0 == 0 /\ -ret_relfilenodeequals1313^post11+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_flags^post11+bufhdr_flags^0 == 0 /\ -b1111^post11+b1111^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post11 == 0 /\ -tmp___03^post11+tmp___03^0 == 0 /\ -r^post11+r^0 == 0 /\ 1-tmp___14^0 <= 0 /\ tmp1^0-tmp1^post11 == 0 /\ tmp1212^0-tmp1212^post11 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post11 == 0 /\ -a66^post11+a66^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post11 == 0 /\ nbuffers^0-nbuffers^post11 == 0 /\ -bufhdr_cntxdirty^post11+bufhdr_cntxdirty^0 == 0 /\ -a^post11+a^0 == 0 /\ a1414^0-a1414^post11 == 0 /\ tmp___14^0-tmp___14^post11 == 0 /\ -nlocbuffer^post11+nlocbuffer^0 == 0 /\ -istemp^post11+istemp^0 == 0 /\ -b77^post11+b77^0 == 0 /\ -tmp88^post11+tmp88^0 == 0 /\ i^0-i^post11 == 0 /\ -firstdelblock^post11+firstdelblock^0 == 0 /\ a1010^0-a1010^post11 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post11 == 0), cost: 1
	New rule:
	l11 -> l10 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1-tmp___14^0 <= 0), cost: 1
	
		propagated equality rnode^post11 = rnode^0
		
		propagated equality bufhdr_tag_rnode_relnode^post11 = bufhdr_tag_rnode_relnode^0
		
		propagated equality ret_relfilenodeequals1313^post11 = ret_relfilenodeequals1313^0
		
		propagated equality bufhdr_flags^post11 = bufhdr_flags^0
		
		propagated equality b1111^post11 = b1111^0
		
		propagated equality bufhdr___01515^post11 = bufhdr___01515^0
		
		propagated equality tmp___03^post11 = tmp___03^0
		
		propagated equality r^post11 = r^0
		
		propagated equality tmp1^post11 = tmp1^0
		
		propagated equality tmp1212^post11 = tmp1212^0
		
		propagated equality bufhdr_tag_blocknum^post11 = bufhdr_tag_blocknum^0
		
		propagated equality a66^post11 = a66^0
		
		propagated equality ret_relfilenodeequals99^post11 = ret_relfilenodeequals99^0
		
		propagated equality nbuffers^post11 = nbuffers^0
		
		propagated equality bufhdr_cntxdirty^post11 = bufhdr_cntxdirty^0
		
		propagated equality a^post11 = a^0
		
		propagated equality a1414^post11 = a1414^0
		
		propagated equality tmp___14^post11 = tmp___14^0
		
		propagated equality nlocbuffer^post11 = nlocbuffer^0
		
		propagated equality istemp^post11 = istemp^0
		
		propagated equality b77^post11 = b77^0
		
		propagated equality tmp88^post11 = tmp88^0
		
		propagated equality i^post11 = i^0
		
		propagated equality firstdelblock^post11 = firstdelblock^0
		
		propagated equality a1010^post11 = a1010^0
		
		propagated equality bufhdr_tag_rnode^post11 = bufhdr_tag_rnode^0
		
	Simplified Guard

	Original rule:
	l11 -> l10 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1-tmp___14^0 <= 0), cost: 1
	New rule:
	l11 -> l10 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1-tmp___14^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l11 -> l10 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1-tmp___14^0 <= 0, cost: 1
	New rule:
	l11 -> l10 : 1-tmp___14^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l11 -> l10 : a1010^0'=a1010^post12, a1414^0'=a1414^post12, a66^0'=a66^post12, a^0'=a^post12, b1111^0'=b1111^post12, b77^0'=b77^post12, bufhdr___01515^0'=bufhdr___01515^post12, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post12, bufhdr_flags^0'=bufhdr_flags^post12, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post12, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post12, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post12, firstdelblock^0'=firstdelblock^post12, i^0'=i^post12, istemp^0'=istemp^post12, nbuffers^0'=nbuffers^post12, nlocbuffer^0'=nlocbuffer^post12, r^0'=r^post12, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post12, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post12, rnode^0'=rnode^post12, tmp1212^0'=tmp1212^post12, tmp1^0'=tmp1^post12, tmp88^0'=tmp88^post12, tmp___03^0'=tmp___03^post12, tmp___14^0'=tmp___14^post12, (a1010^0-a1010^post12 == 0 /\ -ret_relfilenodeequals1313^post12+ret_relfilenodeequals1313^0 == 0 /\ a^0-a^post12 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post12 == 0 /\ -tmp___03^post12+tmp___03^0 == 0 /\ -tmp88^post12+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post12 == 0 /\ -b77^post12+b77^0 == 0 /\ -bufhdr_cntxdirty^post12+bufhdr_cntxdirty^0 == 0 /\ rnode^0-rnode^post12 == 0 /\ b1111^0-b1111^post12 == 0 /\ -a1414^post12+a1414^0 == 0 /\ -firstdelblock^post12+firstdelblock^0 == 0 /\ i^0-i^post12 == 0 /\ tmp1^0-tmp1^post12 == 0 /\ -r^post12+r^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post12 == 0 /\ -nlocbuffer^post12+nlocbuffer^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post12 == 0 /\ istemp^0-istemp^post12 == 0 /\ 1+tmp___14^0 <= 0 /\ tmp___14^0-tmp___14^post12 == 0 /\ tmp1212^0-tmp1212^post12 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post12 == 0 /\ a66^0-a66^post12 == 0 /\ -bufhdr_flags^post12+bufhdr_flags^0 == 0 /\ -bufhdr_tag_rnode_relnode^post12+bufhdr_tag_rnode_relnode^0 == 0), cost: 1
	New rule:
	l11 -> l10 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+tmp___14^0 <= 0), cost: 1
	
		propagated equality a1010^post12 = a1010^0
		
		propagated equality ret_relfilenodeequals1313^post12 = ret_relfilenodeequals1313^0
		
		propagated equality a^post12 = a^0
		
		propagated equality bufhdr_tag_blocknum^post12 = bufhdr_tag_blocknum^0
		
		propagated equality tmp___03^post12 = tmp___03^0
		
		propagated equality tmp88^post12 = tmp88^0
		
		propagated equality nbuffers^post12 = nbuffers^0
		
		propagated equality b77^post12 = b77^0
		
		propagated equality bufhdr_cntxdirty^post12 = bufhdr_cntxdirty^0
		
		propagated equality rnode^post12 = rnode^0
		
		propagated equality b1111^post12 = b1111^0
		
		propagated equality a1414^post12 = a1414^0
		
		propagated equality firstdelblock^post12 = firstdelblock^0
		
		propagated equality i^post12 = i^0
		
		propagated equality tmp1^post12 = tmp1^0
		
		propagated equality r^post12 = r^0
		
		propagated equality bufhdr___01515^post12 = bufhdr___01515^0
		
		propagated equality nlocbuffer^post12 = nlocbuffer^0
		
		propagated equality ret_relfilenodeequals99^post12 = ret_relfilenodeequals99^0
		
		propagated equality istemp^post12 = istemp^0
		
		propagated equality tmp___14^post12 = tmp___14^0
		
		propagated equality tmp1212^post12 = tmp1212^0
		
		propagated equality bufhdr_tag_rnode^post12 = bufhdr_tag_rnode^0
		
		propagated equality a66^post12 = a66^0
		
		propagated equality bufhdr_flags^post12 = bufhdr_flags^0
		
		propagated equality bufhdr_tag_rnode_relnode^post12 = bufhdr_tag_rnode_relnode^0
		
	Simplified Guard

	Original rule:
	l11 -> l10 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+tmp___14^0 <= 0), cost: 1
	New rule:
	l11 -> l10 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+tmp___14^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l11 -> l10 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+tmp___14^0 <= 0, cost: 1
	New rule:
	l11 -> l10 : 1+tmp___14^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l12 : a1010^0'=a1010^post13, a1414^0'=a1414^post13, a66^0'=a66^post13, a^0'=a^post13, b1111^0'=b1111^post13, b77^0'=b77^post13, bufhdr___01515^0'=bufhdr___01515^post13, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post13, bufhdr_flags^0'=bufhdr_flags^post13, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post13, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post13, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post13, firstdelblock^0'=firstdelblock^post13, i^0'=i^post13, istemp^0'=istemp^post13, nbuffers^0'=nbuffers^post13, nlocbuffer^0'=nlocbuffer^post13, r^0'=r^post13, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post13, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post13, rnode^0'=rnode^post13, tmp1212^0'=tmp1212^post13, tmp1^0'=tmp1^post13, tmp88^0'=tmp88^post13, tmp___03^0'=tmp___03^post13, tmp___14^0'=tmp___14^post13, (-tmp___14^post13+tmp___14^0 == 0 /\ -tmp88^post13+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post13 == 0 /\ -b77^post13+b77^0 == 0 /\ -ret_relfilenodeequals99^post13+ret_relfilenodeequals99^0 == 0 /\ -i^post13+i^0 == 0 /\ a^0-a^post13 == 0 /\ -firstdelblock^post13+firstdelblock^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post13 == 0 /\ r^0-r^post13 == 0 /\ -bufhdr_tag_rnode_relnode^post13+bufhdr_tag_rnode_relnode^0 == 0 /\ rnode^0-rnode^post13 == 0 /\ istemp^0-istemp^post13 == 0 /\ -bufhdr_cntxdirty^post13+bufhdr_cntxdirty^0 == 0 /\ -a1010^post13+a1010^0 == 0 /\ b1111^0-b1111^post13 == 0 /\ tmp___03^0-tmp___03^post13 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post13 == 0 /\ a66^0-a66^post13 == 0 /\ bufhdr___01515^0-bufhdr___01515^post13 == 0 /\ -nlocbuffer^post13+nlocbuffer^0 == 0 /\ tmp1212^0-tmp1212^post13 == 0 /\ -a1414^post13+a1414^0 == 0 /\ -bufhdr_tag_rnode^post13+bufhdr_tag_rnode^0 == 0 /\ -tmp1^post13+tmp1^0 == 0 /\ -bufhdr_flags^post13+bufhdr_flags^0 == 0), cost: 1
	New rule:
	l5 -> l12 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality tmp___14^post13 = tmp___14^0
		
		propagated equality tmp88^post13 = tmp88^0
		
		propagated equality nbuffers^post13 = nbuffers^0
		
		propagated equality b77^post13 = b77^0
		
		propagated equality ret_relfilenodeequals99^post13 = ret_relfilenodeequals99^0
		
		propagated equality i^post13 = i^0
		
		propagated equality a^post13 = a^0
		
		propagated equality firstdelblock^post13 = firstdelblock^0
		
		propagated equality bufhdr_tag_blocknum^post13 = bufhdr_tag_blocknum^0
		
		propagated equality r^post13 = r^0
		
		propagated equality bufhdr_tag_rnode_relnode^post13 = bufhdr_tag_rnode_relnode^0
		
		propagated equality rnode^post13 = rnode^0
		
		propagated equality istemp^post13 = istemp^0
		
		propagated equality bufhdr_cntxdirty^post13 = bufhdr_cntxdirty^0
		
		propagated equality a1010^post13 = a1010^0
		
		propagated equality b1111^post13 = b1111^0
		
		propagated equality tmp___03^post13 = tmp___03^0
		
		propagated equality ret_relfilenodeequals1313^post13 = ret_relfilenodeequals1313^0
		
		propagated equality a66^post13 = a66^0
		
		propagated equality bufhdr___01515^post13 = bufhdr___01515^0
		
		propagated equality nlocbuffer^post13 = nlocbuffer^0
		
		propagated equality tmp1212^post13 = tmp1212^0
		
		propagated equality a1414^post13 = a1414^0
		
		propagated equality bufhdr_tag_rnode^post13 = bufhdr_tag_rnode^0
		
		propagated equality tmp1^post13 = tmp1^0
		
		propagated equality bufhdr_flags^post13 = bufhdr_flags^0
		
	Simplified Guard

	Original rule:
	l5 -> l12 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l5 -> l12 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l12 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l5 -> l12 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l12 -> l13 : a1010^0'=a1010^post14, a1414^0'=a1414^post14, a66^0'=a66^post14, a^0'=a^post14, b1111^0'=b1111^post14, b77^0'=b77^post14, bufhdr___01515^0'=bufhdr___01515^post14, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post14, bufhdr_flags^0'=bufhdr_flags^post14, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post14, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post14, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post14, firstdelblock^0'=firstdelblock^post14, i^0'=i^post14, istemp^0'=istemp^post14, nbuffers^0'=nbuffers^post14, nlocbuffer^0'=nlocbuffer^post14, r^0'=r^post14, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post14, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post14, rnode^0'=rnode^post14, tmp1212^0'=tmp1212^post14, tmp1^0'=tmp1^post14, tmp88^0'=tmp88^post14, tmp___03^0'=tmp___03^post14, tmp___14^0'=tmp___14^post14, (-a^post14+a^0 == 0 /\ r^post14 == 0 /\ -tmp1212^post14+tmp1212^0 == 0 /\ -bufhdr_tag_rnode_relnode^post14+bufhdr_tag_rnode_relnode^0 == 0 /\ -bufhdr_flags^post14+bufhdr_flags^0 == 0 /\ -b77^post14+b77^0 == 0 /\ 1+nbuffers^0-i^0 <= 0 /\ bufhdr_cntxdirty^0-bufhdr_cntxdirty^post14 == 0 /\ tmp___14^0-tmp___14^post14 == 0 /\ bufhdr___01515^0-bufhdr___01515^post14 == 0 /\ -tmp___03^post14+tmp___03^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post14 == 0 /\ a1010^0-a1010^post14 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post14 == 0 /\ -tmp1^post14+tmp1^0 == 0 /\ -a1414^post14+a1414^0 == 0 /\ -a66^post14+a66^0 == 0 /\ nbuffers^0-nbuffers^post14 == 0 /\ rnode^0-rnode^post14 == 0 /\ -1+r^1 == 0 /\ -ret_relfilenodeequals1313^post14+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post14+firstdelblock^0 == 0 /\ b1111^0-b1111^post14 == 0 /\ -tmp88^post14+tmp88^0 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post14 == 0 /\ -nlocbuffer^post14+nlocbuffer^0 == 0 /\ -istemp^post14+istemp^0 == 0 /\ i^0-i^post14 == 0), cost: 1
	New rule:
	l12 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+nbuffers^0-i^0 <= 0 /\ -1+r^1 == 0), cost: 1
	
		propagated equality a^post14 = a^0
		
		propagated equality r^post14 = 0
		
		propagated equality tmp1212^post14 = tmp1212^0
		
		propagated equality bufhdr_tag_rnode_relnode^post14 = bufhdr_tag_rnode_relnode^0
		
		propagated equality bufhdr_flags^post14 = bufhdr_flags^0
		
		propagated equality b77^post14 = b77^0
		
		propagated equality bufhdr_cntxdirty^post14 = bufhdr_cntxdirty^0
		
		propagated equality tmp___14^post14 = tmp___14^0
		
		propagated equality bufhdr___01515^post14 = bufhdr___01515^0
		
		propagated equality tmp___03^post14 = tmp___03^0
		
		propagated equality bufhdr_tag_blocknum^post14 = bufhdr_tag_blocknum^0
		
		propagated equality a1010^post14 = a1010^0
		
		propagated equality ret_relfilenodeequals99^post14 = ret_relfilenodeequals99^0
		
		propagated equality tmp1^post14 = tmp1^0
		
		propagated equality a1414^post14 = a1414^0
		
		propagated equality a66^post14 = a66^0
		
		propagated equality nbuffers^post14 = nbuffers^0
		
		propagated equality rnode^post14 = rnode^0
		
		propagated equality ret_relfilenodeequals1313^post14 = ret_relfilenodeequals1313^0
		
		propagated equality firstdelblock^post14 = firstdelblock^0
		
		propagated equality b1111^post14 = b1111^0
		
		propagated equality tmp88^post14 = tmp88^0
		
		propagated equality bufhdr_tag_rnode^post14 = bufhdr_tag_rnode^0
		
		propagated equality nlocbuffer^post14 = nlocbuffer^0
		
		propagated equality istemp^post14 = istemp^0
		
		propagated equality i^post14 = i^0
		
	Propagated Equalities

	Original rule:
	l12 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+nbuffers^0-i^0 <= 0 /\ -1+r^1 == 0), cost: 1
	New rule:
	l12 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+nbuffers^0-i^0 <= 0), cost: 1
	
		propagated equality r^1 = 1
		
	Simplified Guard

	Original rule:
	l12 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+nbuffers^0-i^0 <= 0), cost: 1
	New rule:
	l12 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+nbuffers^0-i^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l12 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+nbuffers^0-i^0 <= 0, cost: 1
	New rule:
	l12 -> l13 : r^0'=0, 1+nbuffers^0-i^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l12 -> l9 : a1010^0'=a1010^post15, a1414^0'=a1414^post15, a66^0'=a66^post15, a^0'=a^post15, b1111^0'=b1111^post15, b77^0'=b77^post15, bufhdr___01515^0'=bufhdr___01515^post15, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post15, bufhdr_flags^0'=bufhdr_flags^post15, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post15, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post15, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post15, firstdelblock^0'=firstdelblock^post15, i^0'=i^post15, istemp^0'=istemp^post15, nbuffers^0'=nbuffers^post15, nlocbuffer^0'=nlocbuffer^post15, r^0'=r^post15, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post15, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post15, rnode^0'=rnode^post15, tmp1212^0'=tmp1212^post15, tmp1^0'=tmp1^post15, tmp88^0'=tmp88^post15, tmp___03^0'=tmp___03^post15, tmp___14^0'=tmp___14^post15, (0 == 0 /\ -bufhdr_tag_rnode_relnode^post15+bufhdr_tag_rnode_relnode^0 == 0 /\ -nbuffers^0+i^0 <= 0 /\ -tmp88^post15+tmp88^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post15 == 0 /\ -ret_relfilenodeequals1313^post15+ret_relfilenodeequals1313^0 == 0 /\ -rnode^post15+rnode^0 == 0 /\ -r^post15+r^0 == 0 /\ -b77^post15+b77^0 == 0 /\ -bufhdr_cntxdirty^post15+bufhdr_cntxdirty^0 == 0 /\ -a66^post15+a66^0 == 0 /\ a1010^0-a1010^post15 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post15 == 0 /\ -a1414^post15+a1414^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post15 == 0 /\ tmp___14^0-tmp___14^post15 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post15 == 0 /\ nbuffers^0-nbuffers^post15 == 0 /\ -nlocbuffer^post15+nlocbuffer^0 == 0 /\ -a^post15+a^0 == 0 /\ -istemp^post15+istemp^0 == 0 /\ tmp1212^0-tmp1212^post15 == 0 /\ -bufhdr_flags^post15+bufhdr_flags^0 == 0 /\ i^0-i^post15 == 0 /\ b1111^0-b1111^post15 == 0 /\ -firstdelblock^post15+firstdelblock^0 == 0 /\ -tmp1^post15+tmp1^0 == 0), cost: 1
	New rule:
	l12 -> l9 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^post15, tmp___14^0'=tmp___14^0, (0 == 0 /\ -nbuffers^0+i^0 <= 0), cost: 1
	
		propagated equality bufhdr_tag_rnode_relnode^post15 = bufhdr_tag_rnode_relnode^0
		
		propagated equality tmp88^post15 = tmp88^0
		
		propagated equality bufhdr___01515^post15 = bufhdr___01515^0
		
		propagated equality ret_relfilenodeequals1313^post15 = ret_relfilenodeequals1313^0
		
		propagated equality rnode^post15 = rnode^0
		
		propagated equality r^post15 = r^0
		
		propagated equality b77^post15 = b77^0
		
		propagated equality bufhdr_cntxdirty^post15 = bufhdr_cntxdirty^0
		
		propagated equality a66^post15 = a66^0
		
		propagated equality a1010^post15 = a1010^0
		
		propagated equality bufhdr_tag_rnode^post15 = bufhdr_tag_rnode^0
		
		propagated equality a1414^post15 = a1414^0
		
		propagated equality ret_relfilenodeequals99^post15 = ret_relfilenodeequals99^0
		
		propagated equality tmp___14^post15 = tmp___14^0
		
		propagated equality bufhdr_tag_blocknum^post15 = bufhdr_tag_blocknum^0
		
		propagated equality nbuffers^post15 = nbuffers^0
		
		propagated equality nlocbuffer^post15 = nlocbuffer^0
		
		propagated equality a^post15 = a^0
		
		propagated equality istemp^post15 = istemp^0
		
		propagated equality tmp1212^post15 = tmp1212^0
		
		propagated equality bufhdr_flags^post15 = bufhdr_flags^0
		
		propagated equality i^post15 = i^0
		
		propagated equality b1111^post15 = b1111^0
		
		propagated equality firstdelblock^post15 = firstdelblock^0
		
		propagated equality tmp1^post15 = tmp1^0
		
	Simplified Guard

	Original rule:
	l12 -> l9 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^post15, tmp___14^0'=tmp___14^0, (0 == 0 /\ -nbuffers^0+i^0 <= 0), cost: 1
	New rule:
	l12 -> l9 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^post15, tmp___14^0'=tmp___14^0, -nbuffers^0+i^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l12 -> l9 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^post15, tmp___14^0'=tmp___14^0, -nbuffers^0+i^0 <= 0, cost: 1
	New rule:
	l12 -> l9 : tmp___03^0'=tmp___03^post15, -nbuffers^0+i^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l14 -> l15 : a1010^0'=a1010^post16, a1414^0'=a1414^post16, a66^0'=a66^post16, a^0'=a^post16, b1111^0'=b1111^post16, b77^0'=b77^post16, bufhdr___01515^0'=bufhdr___01515^post16, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post16, bufhdr_flags^0'=bufhdr_flags^post16, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post16, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post16, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post16, firstdelblock^0'=firstdelblock^post16, i^0'=i^post16, istemp^0'=istemp^post16, nbuffers^0'=nbuffers^post16, nlocbuffer^0'=nlocbuffer^post16, r^0'=r^post16, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post16, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post16, rnode^0'=rnode^post16, tmp1212^0'=tmp1212^post16, tmp1^0'=tmp1^post16, tmp88^0'=tmp88^post16, tmp___03^0'=tmp___03^post16, tmp___14^0'=tmp___14^post16, (b77^0-b77^post16 == 0 /\ -tmp1^post16+tmp1^0 == 0 /\ a1010^0-a1010^post16 == 0 /\ -ret_relfilenodeequals99^post16+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post16 == 0 /\ a66^0-a66^post16 == 0 /\ -bufhdr_cntxdirty^post16+bufhdr_cntxdirty^0 == 0 /\ -nlocbuffer^post16+nlocbuffer^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post16 == 0 /\ r^0-r^post16 == 0 /\ -tmp88^post16+tmp88^0 == 0 /\ -tmp___14^post16+tmp___14^0 == 0 /\ -firstdelblock^post16+firstdelblock^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post16 == 0 /\ tmp___03^0-tmp___03^post16 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post16 == 0 /\ -bufhdr_tag_rnode^post16+bufhdr_tag_rnode^0 == 0 /\ -a1414^post16+a1414^0 == 0 /\ istemp^0-istemp^post16 == 0 /\ -bufhdr___01515^post16+bufhdr___01515^0 == 0 /\ -i^post16+i^0 == 0 /\ tmp1212^0-tmp1212^post16 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post16 == 0 /\ b1111^0-b1111^post16 == 0 /\ nbuffers^0-nbuffers^post16 == 0 /\ -a^post16+a^0 == 0), cost: 1
	New rule:
	l14 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality b77^post16 = b77^0
		
		propagated equality tmp1^post16 = tmp1^0
		
		propagated equality a1010^post16 = a1010^0
		
		propagated equality ret_relfilenodeequals99^post16 = ret_relfilenodeequals99^0
		
		propagated equality rnode^post16 = rnode^0
		
		propagated equality a66^post16 = a66^0
		
		propagated equality bufhdr_cntxdirty^post16 = bufhdr_cntxdirty^0
		
		propagated equality nlocbuffer^post16 = nlocbuffer^0
		
		propagated equality bufhdr_tag_blocknum^post16 = bufhdr_tag_blocknum^0
		
		propagated equality r^post16 = r^0
		
		propagated equality tmp88^post16 = tmp88^0
		
		propagated equality tmp___14^post16 = tmp___14^0
		
		propagated equality firstdelblock^post16 = firstdelblock^0
		
		propagated equality bufhdr_flags^post16 = bufhdr_flags^0
		
		propagated equality tmp___03^post16 = tmp___03^0
		
		propagated equality ret_relfilenodeequals1313^post16 = ret_relfilenodeequals1313^0
		
		propagated equality bufhdr_tag_rnode^post16 = bufhdr_tag_rnode^0
		
		propagated equality a1414^post16 = a1414^0
		
		propagated equality istemp^post16 = istemp^0
		
		propagated equality bufhdr___01515^post16 = bufhdr___01515^0
		
		propagated equality i^post16 = i^0
		
		propagated equality tmp1212^post16 = tmp1212^0
		
		propagated equality bufhdr_tag_rnode_relnode^post16 = bufhdr_tag_rnode_relnode^0
		
		propagated equality b1111^post16 = b1111^0
		
		propagated equality nbuffers^post16 = nbuffers^0
		
		propagated equality a^post16 = a^0
		
	Simplified Guard

	Original rule:
	l14 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l14 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l14 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l14 -> l15 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l15 -> l5 : a1010^0'=a1010^post17, a1414^0'=a1414^post17, a66^0'=a66^post17, a^0'=a^post17, b1111^0'=b1111^post17, b77^0'=b77^post17, bufhdr___01515^0'=bufhdr___01515^post17, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post17, bufhdr_flags^0'=bufhdr_flags^post17, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post17, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post17, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post17, firstdelblock^0'=firstdelblock^post17, i^0'=i^post17, istemp^0'=istemp^post17, nbuffers^0'=nbuffers^post17, nlocbuffer^0'=nlocbuffer^post17, r^0'=r^post17, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post17, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post17, rnode^0'=rnode^post17, tmp1212^0'=tmp1212^post17, tmp1^0'=tmp1^post17, tmp88^0'=tmp88^post17, tmp___03^0'=tmp___03^post17, tmp___14^0'=tmp___14^post17, (bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post17 == 0 /\ -bufhdr_tag_rnode^post17+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_flags^post17+bufhdr_flags^0 == 0 /\ istemp^0-istemp^post17 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post17 == 0 /\ -bufhdr_cntxdirty^post17+bufhdr_cntxdirty^0 == 0 /\ -1+i^post17 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post17 == 0 /\ rnode^0-rnode^post17 == 0 /\ tmp___14^0-tmp___14^post17 == 0 /\ -tmp___03^post17+tmp___03^0 == 0 /\ -nbuffers^post17+nbuffers^0 == 0 /\ -tmp1212^post17+tmp1212^0 == 0 /\ -b77^post17+b77^0 == 0 /\ a^post17 == 0 /\ a1414^0-a1414^post17 == 0 /\ a1010^0-a1010^post17 == 0 /\ -tmp1^post17+tmp1^0 == 0 /\ -1+a^1 == 0 /\ -a66^post17+a66^0 == 0 /\ -tmp88^post17+tmp88^0 == 0 /\ b1111^0-b1111^post17 == 0 /\ -ret_relfilenodeequals1313^post17+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post17+firstdelblock^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post17 == 0 /\ r^0-r^post17 == 0 /\ -nlocbuffer^post17+nlocbuffer^0 == 0), cost: 1
	New rule:
	l15 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -1+a^1 == 0), cost: 1
	
		propagated equality bufhdr_tag_blocknum^post17 = bufhdr_tag_blocknum^0
		
		propagated equality bufhdr_tag_rnode^post17 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr_flags^post17 = bufhdr_flags^0
		
		propagated equality istemp^post17 = istemp^0
		
		propagated equality ret_relfilenodeequals99^post17 = ret_relfilenodeequals99^0
		
		propagated equality bufhdr_cntxdirty^post17 = bufhdr_cntxdirty^0
		
		propagated equality i^post17 = 1
		
		propagated equality bufhdr_tag_rnode_relnode^post17 = bufhdr_tag_rnode_relnode^0
		
		propagated equality rnode^post17 = rnode^0
		
		propagated equality tmp___14^post17 = tmp___14^0
		
		propagated equality tmp___03^post17 = tmp___03^0
		
		propagated equality nbuffers^post17 = nbuffers^0
		
		propagated equality tmp1212^post17 = tmp1212^0
		
		propagated equality b77^post17 = b77^0
		
		propagated equality a^post17 = 0
		
		propagated equality a1414^post17 = a1414^0
		
		propagated equality a1010^post17 = a1010^0
		
		propagated equality tmp1^post17 = tmp1^0
		
		propagated equality a66^post17 = a66^0
		
		propagated equality tmp88^post17 = tmp88^0
		
		propagated equality b1111^post17 = b1111^0
		
		propagated equality ret_relfilenodeequals1313^post17 = ret_relfilenodeequals1313^0
		
		propagated equality firstdelblock^post17 = firstdelblock^0
		
		propagated equality bufhdr___01515^post17 = bufhdr___01515^0
		
		propagated equality r^post17 = r^0
		
		propagated equality nlocbuffer^post17 = nlocbuffer^0
		
	Propagated Equalities

	Original rule:
	l15 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -1+a^1 == 0), cost: 1
	New rule:
	l15 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality a^1 = 1
		
	Simplified Guard

	Original rule:
	l15 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l15 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l15 -> l5 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l15 -> l5 : a^0'=0, i^0'=1, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l9 -> l11 : a1010^0'=a1010^post18, a1414^0'=a1414^post18, a66^0'=a66^post18, a^0'=a^post18, b1111^0'=b1111^post18, b77^0'=b77^post18, bufhdr___01515^0'=bufhdr___01515^post18, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post18, bufhdr_flags^0'=bufhdr_flags^post18, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post18, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post18, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post18, firstdelblock^0'=firstdelblock^post18, i^0'=i^post18, istemp^0'=istemp^post18, nbuffers^0'=nbuffers^post18, nlocbuffer^0'=nlocbuffer^post18, r^0'=r^post18, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post18, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post18, rnode^0'=rnode^post18, tmp1212^0'=tmp1212^post18, tmp1^0'=tmp1^post18, tmp88^0'=tmp88^post18, tmp___03^0'=tmp___03^post18, tmp___14^0'=tmp___14^post18, (0 == 0 /\ a1010^post18-bufhdr_tag_rnode^0 == 0 /\ -tmp1^post18+tmp1^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post18 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post18 == 0 /\ -r^post18+r^0 == 0 /\ -tmp88^post18+tmp88^0 == 0 /\ -bufhdr_tag_rnode_relnode^post18+bufhdr_tag_rnode_relnode^0 == 0 /\ -a66^post18+a66^0 == 0 /\ nbuffers^0-nbuffers^post18 == 0 /\ -a1414^post18+a1414^0 == 0 /\ -b77^post18+b77^0 == 0 /\ -bufhdr_tag_rnode^post18+bufhdr_tag_rnode^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post18 == 0 /\ -ret_relfilenodeequals1313^post18+tmp___14^post18 == 0 /\ rnode^0-rnode^post18 == 0 /\ -bufhdr_flags^post18+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post18+bufhdr_cntxdirty^0 == 0 /\ -firstdelblock^post18+firstdelblock^0 == 0 /\ -tmp1212^post18+ret_relfilenodeequals1313^post18 == 0 /\ -rnode^0+b1111^post18 == 0 /\ -istemp^post18+istemp^0 == 0 /\ -tmp___03^post18+tmp___03^0 == 0 /\ -a^post18+a^0 == 0 /\ i^0-i^post18 == 0 /\ -nlocbuffer^post18+nlocbuffer^0 == 0), cost: 1
	New rule:
	l9 -> l11 : a1010^0'=bufhdr_tag_rnode^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=rnode^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=tmp___14^post18, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp___14^post18, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^post18, 0 == 0, cost: 1
	
		propagated equality a1010^post18 = bufhdr_tag_rnode^0
		
		propagated equality tmp1^post18 = tmp1^0
		
		propagated equality bufhdr___01515^post18 = bufhdr___01515^0
		
		propagated equality bufhdr_tag_blocknum^post18 = bufhdr_tag_blocknum^0
		
		propagated equality r^post18 = r^0
		
		propagated equality tmp88^post18 = tmp88^0
		
		propagated equality bufhdr_tag_rnode_relnode^post18 = bufhdr_tag_rnode_relnode^0
		
		propagated equality a66^post18 = a66^0
		
		propagated equality nbuffers^post18 = nbuffers^0
		
		propagated equality a1414^post18 = a1414^0
		
		propagated equality b77^post18 = b77^0
		
		propagated equality bufhdr_tag_rnode^post18 = bufhdr_tag_rnode^0
		
		propagated equality ret_relfilenodeequals99^post18 = ret_relfilenodeequals99^0
		
		propagated equality ret_relfilenodeequals1313^post18 = tmp___14^post18
		
		propagated equality rnode^post18 = rnode^0
		
		propagated equality bufhdr_flags^post18 = bufhdr_flags^0
		
		propagated equality bufhdr_cntxdirty^post18 = bufhdr_cntxdirty^0
		
		propagated equality firstdelblock^post18 = firstdelblock^0
		
		propagated equality tmp1212^post18 = tmp___14^post18
		
		propagated equality b1111^post18 = rnode^0
		
		propagated equality istemp^post18 = istemp^0
		
		propagated equality tmp___03^post18 = tmp___03^0
		
		propagated equality a^post18 = a^0
		
		propagated equality i^post18 = i^0
		
		propagated equality nlocbuffer^post18 = nlocbuffer^0
		
	Simplified Guard

	Original rule:
	l9 -> l11 : a1010^0'=bufhdr_tag_rnode^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=rnode^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=tmp___14^post18, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp___14^post18, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^post18, 0 == 0, cost: 1
	New rule:
	l9 -> l11 : a1010^0'=bufhdr_tag_rnode^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=rnode^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=tmp___14^post18, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp___14^post18, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^post18, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l9 -> l11 : a1010^0'=bufhdr_tag_rnode^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=rnode^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=tmp___14^post18, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp___14^post18, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^post18, T, cost: 1
	New rule:
	l9 -> l11 : a1010^0'=bufhdr_tag_rnode^0, b1111^0'=rnode^0, ret_relfilenodeequals1313^0'=tmp___14^post18, tmp1212^0'=tmp___14^post18, tmp___14^0'=tmp___14^post18, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l16 -> l2 : a1010^0'=a1010^post19, a1414^0'=a1414^post19, a66^0'=a66^post19, a^0'=a^post19, b1111^0'=b1111^post19, b77^0'=b77^post19, bufhdr___01515^0'=bufhdr___01515^post19, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post19, bufhdr_flags^0'=bufhdr_flags^post19, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post19, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post19, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post19, firstdelblock^0'=firstdelblock^post19, i^0'=i^post19, istemp^0'=istemp^post19, nbuffers^0'=nbuffers^post19, nlocbuffer^0'=nlocbuffer^post19, r^0'=r^post19, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post19, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post19, rnode^0'=rnode^post19, tmp1212^0'=tmp1212^post19, tmp1^0'=tmp1^post19, tmp88^0'=tmp88^post19, tmp___03^0'=tmp___03^post19, tmp___14^0'=tmp___14^post19, (-tmp88^post19+tmp88^0 == 0 /\ a^0-a^post19 == 0 /\ -a1414^post19+a1414^0 == 0 /\ -tmp___03^post19+tmp___03^0 == 0 /\ nlocbuffer^0-nlocbuffer^post19 == 0 /\ -ret_relfilenodeequals1313^post19+ret_relfilenodeequals1313^0 == 0 /\ -1-i^0+i^post19 == 0 /\ a1010^0-a1010^post19 == 0 /\ istemp^0-istemp^post19 == 0 /\ -bufhdr_cntxdirty^post19+bufhdr_cntxdirty^0 == 0 /\ rnode^0-rnode^post19 == 0 /\ -b77^post19+b77^0 == 0 /\ b1111^0-b1111^post19 == 0 /\ -firstdelblock^post19+firstdelblock^0 == 0 /\ nbuffers^0-nbuffers^post19 == 0 /\ -bufhdr_tag_rnode_relnode^post19+bufhdr_tag_rnode_relnode^0 == 0 /\ tmp___14^0-tmp___14^post19 == 0 /\ bufhdr___01515^0-bufhdr___01515^post19 == 0 /\ tmp1^0-tmp1^post19 == 0 /\ -bufhdr_tag_rnode^post19+bufhdr_tag_rnode^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post19 == 0 /\ a66^0-a66^post19 == 0 /\ -bufhdr_flags^post19+bufhdr_flags^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post19 == 0 /\ tmp1212^0-tmp1212^post19 == 0 /\ -r^post19+r^0 == 0), cost: 1
	New rule:
	l16 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1+i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality tmp88^post19 = tmp88^0
		
		propagated equality a^post19 = a^0
		
		propagated equality a1414^post19 = a1414^0
		
		propagated equality tmp___03^post19 = tmp___03^0
		
		propagated equality nlocbuffer^post19 = nlocbuffer^0
		
		propagated equality ret_relfilenodeequals1313^post19 = ret_relfilenodeequals1313^0
		
		propagated equality i^post19 = 1+i^0
		
		propagated equality a1010^post19 = a1010^0
		
		propagated equality istemp^post19 = istemp^0
		
		propagated equality bufhdr_cntxdirty^post19 = bufhdr_cntxdirty^0
		
		propagated equality rnode^post19 = rnode^0
		
		propagated equality b77^post19 = b77^0
		
		propagated equality b1111^post19 = b1111^0
		
		propagated equality firstdelblock^post19 = firstdelblock^0
		
		propagated equality nbuffers^post19 = nbuffers^0
		
		propagated equality bufhdr_tag_rnode_relnode^post19 = bufhdr_tag_rnode_relnode^0
		
		propagated equality tmp___14^post19 = tmp___14^0
		
		propagated equality bufhdr___01515^post19 = bufhdr___01515^0
		
		propagated equality tmp1^post19 = tmp1^0
		
		propagated equality bufhdr_tag_rnode^post19 = bufhdr_tag_rnode^0
		
		propagated equality ret_relfilenodeequals99^post19 = ret_relfilenodeequals99^0
		
		propagated equality a66^post19 = a66^0
		
		propagated equality bufhdr_flags^post19 = bufhdr_flags^0
		
		propagated equality bufhdr_tag_blocknum^post19 = bufhdr_tag_blocknum^0
		
		propagated equality tmp1212^post19 = tmp1212^0
		
		propagated equality r^post19 = r^0
		
	Simplified Guard

	Original rule:
	l16 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1+i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l16 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1+i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l16 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=1+i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l16 -> l2 : i^0'=1+i^0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l17 -> l16 : a1010^0'=a1010^post20, a1414^0'=a1414^post20, a66^0'=a66^post20, a^0'=a^post20, b1111^0'=b1111^post20, b77^0'=b77^post20, bufhdr___01515^0'=bufhdr___01515^post20, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post20, bufhdr_flags^0'=bufhdr_flags^post20, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post20, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post20, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post20, firstdelblock^0'=firstdelblock^post20, i^0'=i^post20, istemp^0'=istemp^post20, nbuffers^0'=nbuffers^post20, nlocbuffer^0'=nlocbuffer^post20, r^0'=r^post20, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post20, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post20, rnode^0'=rnode^post20, tmp1212^0'=tmp1212^post20, tmp1^0'=tmp1^post20, tmp88^0'=tmp88^post20, tmp___03^0'=tmp___03^post20, tmp___14^0'=tmp___14^post20, (nbuffers^0-nbuffers^post20 == 0 /\ -firstdelblock^post20+firstdelblock^0 == 0 /\ rnode^0-rnode^post20 == 0 /\ nlocbuffer^0-nlocbuffer^post20 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post20 == 0 /\ -r^post20+r^0 == 0 /\ -i^post20+i^0 == 0 /\ a1010^0-a1010^post20 == 0 /\ b1111^0-b1111^post20 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0 /\ -bufhdr_tag_rnode_relnode^post20+bufhdr_tag_rnode_relnode^0 == 0 /\ tmp1^0-tmp1^post20 == 0 /\ a^0-a^post20 == 0 /\ -a1414^post20+a1414^0 == 0 /\ -tmp___14^post20+tmp___14^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post20 == 0 /\ istemp^0-istemp^post20 == 0 /\ bufhdr___01515^0-bufhdr___01515^post20 == 0 /\ -ret_relfilenodeequals1313^post20+ret_relfilenodeequals1313^0 == 0 /\ tmp1212^0-tmp1212^post20 == 0 /\ tmp___03^0-tmp___03^post20 == 0 /\ -tmp88^post20+tmp88^0 == 0 /\ -bufhdr_tag_rnode^post20+bufhdr_tag_rnode^0 == 0 /\ a66^0-a66^post20 == 0 /\ -b77^post20+b77^0 == 0 /\ -bufhdr_flags^post20+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post20+bufhdr_cntxdirty^0 == 0), cost: 1
	New rule:
	l17 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0), cost: 1
	
		propagated equality nbuffers^post20 = nbuffers^0
		
		propagated equality firstdelblock^post20 = firstdelblock^0
		
		propagated equality rnode^post20 = rnode^0
		
		propagated equality nlocbuffer^post20 = nlocbuffer^0
		
		propagated equality bufhdr_tag_blocknum^post20 = bufhdr_tag_blocknum^0
		
		propagated equality r^post20 = r^0
		
		propagated equality i^post20 = i^0
		
		propagated equality a1010^post20 = a1010^0
		
		propagated equality b1111^post20 = b1111^0
		
		propagated equality bufhdr_tag_rnode_relnode^post20 = bufhdr_tag_rnode_relnode^0
		
		propagated equality tmp1^post20 = tmp1^0
		
		propagated equality a^post20 = a^0
		
		propagated equality a1414^post20 = a1414^0
		
		propagated equality tmp___14^post20 = tmp___14^0
		
		propagated equality ret_relfilenodeequals99^post20 = ret_relfilenodeequals99^0
		
		propagated equality istemp^post20 = istemp^0
		
		propagated equality bufhdr___01515^post20 = bufhdr___01515^0
		
		propagated equality ret_relfilenodeequals1313^post20 = ret_relfilenodeequals1313^0
		
		propagated equality tmp1212^post20 = tmp1212^0
		
		propagated equality tmp___03^post20 = tmp___03^0
		
		propagated equality tmp88^post20 = tmp88^0
		
		propagated equality bufhdr_tag_rnode^post20 = bufhdr_tag_rnode^0
		
		propagated equality a66^post20 = a66^0
		
		propagated equality b77^post20 = b77^0
		
		propagated equality bufhdr_flags^post20 = bufhdr_flags^0
		
		propagated equality bufhdr_cntxdirty^post20 = bufhdr_cntxdirty^0
		
	Simplified Guard

	Original rule:
	l17 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0), cost: 1
	New rule:
	l17 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l17 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
	New rule:
	l17 -> l16 : 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l17 -> l16 : a1010^0'=a1010^post21, a1414^0'=a1414^post21, a66^0'=a66^post21, a^0'=a^post21, b1111^0'=b1111^post21, b77^0'=b77^post21, bufhdr___01515^0'=bufhdr___01515^post21, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post21, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post21, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post21, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post21, firstdelblock^0'=firstdelblock^post21, i^0'=i^post21, istemp^0'=istemp^post21, nbuffers^0'=nbuffers^post21, nlocbuffer^0'=nlocbuffer^post21, r^0'=r^post21, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post21, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post21, rnode^0'=rnode^post21, tmp1212^0'=tmp1212^post21, tmp1^0'=tmp1^post21, tmp88^0'=tmp88^post21, tmp___03^0'=tmp___03^post21, tmp___14^0'=tmp___14^post21, (0 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0 /\ r^0-r^post21 == 0 /\ rnode^0-rnode^post21 == 0 /\ -a1414^post21+a1414^0 == 0 /\ a66^0-a66^post21 == 0 /\ b1111^0-b1111^post21 == 0 /\ -nlocbuffer^post21+nlocbuffer^0 == 0 /\ a1010^0-a1010^post21 == 0 /\ istemp^0-istemp^post21 == 0 /\ -bufhdr_tag_rnode^post21+bufhdr_tag_rnode^0 == 0 /\ b77^0-b77^post21 == 0 /\ -a^post21+a^0 == 0 /\ -bufhdr___01515^post21+bufhdr___01515^0 == 0 /\ -tmp1^post21+tmp1^0 == 0 /\ -tmp88^post21+tmp88^0 == 0 /\ -tmp___14^post21+tmp___14^0 == 0 /\ tmp1212^0-tmp1212^post21 == 0 /\ -1+bufhdr_tag_rnode_relnode^post21 == 0 /\ bufhdr_cntxdirty^post21 == 0 /\ -firstdelblock^post21+firstdelblock^0 == 0 /\ -ret_relfilenodeequals99^post21+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post21+ret_relfilenodeequals1313^0 == 0 /\ -i^post21+i^0 == 0 /\ -nbuffers^post21+nbuffers^0 == 0 /\ -bufhdr_tag_blocknum^post21+bufhdr_tag_blocknum^0 == 0 /\ tmp___03^0-tmp___03^post21 == 0), cost: 1
	New rule:
	l17 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=1, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0), cost: 1
	
		propagated equality r^post21 = r^0
		
		propagated equality rnode^post21 = rnode^0
		
		propagated equality a1414^post21 = a1414^0
		
		propagated equality a66^post21 = a66^0
		
		propagated equality b1111^post21 = b1111^0
		
		propagated equality nlocbuffer^post21 = nlocbuffer^0
		
		propagated equality a1010^post21 = a1010^0
		
		propagated equality istemp^post21 = istemp^0
		
		propagated equality bufhdr_tag_rnode^post21 = bufhdr_tag_rnode^0
		
		propagated equality b77^post21 = b77^0
		
		propagated equality a^post21 = a^0
		
		propagated equality bufhdr___01515^post21 = bufhdr___01515^0
		
		propagated equality tmp1^post21 = tmp1^0
		
		propagated equality tmp88^post21 = tmp88^0
		
		propagated equality tmp___14^post21 = tmp___14^0
		
		propagated equality tmp1212^post21 = tmp1212^0
		
		propagated equality bufhdr_tag_rnode_relnode^post21 = 1
		
		propagated equality bufhdr_cntxdirty^post21 = 0
		
		propagated equality firstdelblock^post21 = firstdelblock^0
		
		propagated equality ret_relfilenodeequals99^post21 = ret_relfilenodeequals99^0
		
		propagated equality ret_relfilenodeequals1313^post21 = ret_relfilenodeequals1313^0
		
		propagated equality i^post21 = i^0
		
		propagated equality nbuffers^post21 = nbuffers^0
		
		propagated equality bufhdr_tag_blocknum^post21 = bufhdr_tag_blocknum^0
		
		propagated equality tmp___03^post21 = tmp___03^0
		
	Simplified Guard

	Original rule:
	l17 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=1, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0), cost: 1
	New rule:
	l17 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=1, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l17 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=1, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
	New rule:
	l17 -> l16 : bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_rnode_relnode^0'=1, -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l18 -> l16 : a1010^0'=a1010^post22, a1414^0'=a1414^post22, a66^0'=a66^post22, a^0'=a^post22, b1111^0'=b1111^post22, b77^0'=b77^post22, bufhdr___01515^0'=bufhdr___01515^post22, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post22, bufhdr_flags^0'=bufhdr_flags^post22, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post22, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post22, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post22, firstdelblock^0'=firstdelblock^post22, i^0'=i^post22, istemp^0'=istemp^post22, nbuffers^0'=nbuffers^post22, nlocbuffer^0'=nlocbuffer^post22, r^0'=r^post22, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post22, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post22, rnode^0'=rnode^post22, tmp1212^0'=tmp1212^post22, tmp1^0'=tmp1^post22, tmp88^0'=tmp88^post22, tmp___03^0'=tmp___03^post22, tmp___14^0'=tmp___14^post22, (rnode^0-rnode^post22 == 0 /\ -tmp1^post22+tmp1^0 == 0 /\ r^0-r^post22 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post22 == 0 /\ -tmp1^0 <= 0 /\ b1111^0-b1111^post22 == 0 /\ -a66^post22+a66^0 == 0 /\ b77^0-b77^post22 == 0 /\ -bufhdr_tag_rnode^post22+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_cntxdirty^post22+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post22+bufhdr___01515^0 == 0 /\ -nlocbuffer^post22+nlocbuffer^0 == 0 /\ -nbuffers^post22+nbuffers^0 == 0 /\ -i^post22+i^0 == 0 /\ -tmp88^post22+tmp88^0 == 0 /\ istemp^0-istemp^post22 == 0 /\ tmp1^0 <= 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post22 == 0 /\ -tmp1212^post22+tmp1212^0 == 0 /\ -a^post22+a^0 == 0 /\ -firstdelblock^post22+firstdelblock^0 == 0 /\ a1414^0-a1414^post22 == 0 /\ tmp___03^0-tmp___03^post22 == 0 /\ -ret_relfilenodeequals99^post22+ret_relfilenodeequals99^0 == 0 /\ a1010^0-a1010^post22 == 0 /\ tmp___14^0-tmp___14^post22 == 0 /\ bufhdr_flags^0-bufhdr_flags^post22 == 0 /\ -bufhdr_tag_blocknum^post22+bufhdr_tag_blocknum^0 == 0), cost: 1
	New rule:
	l18 -> l16 : a1010^0'=a1010^post22, a1414^0'=a1414^post22, a66^0'=a66^post22, a^0'=a^post22, b1111^0'=b1111^post22, b77^0'=b77^post22, bufhdr___01515^0'=bufhdr___01515^post22, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post22, bufhdr_flags^0'=bufhdr_flags^post22, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post22, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post22, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post22, firstdelblock^0'=firstdelblock^post22, i^0'=i^post22, istemp^0'=istemp^post22, nbuffers^0'=nbuffers^post22, nlocbuffer^0'=nlocbuffer^post22, r^0'=r^post22, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post22, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post22, rnode^0'=rnode^post22, tmp1212^0'=tmp1212^post22, tmp1^0'=tmp1^post22, tmp88^0'=tmp88^post22, tmp___03^0'=tmp___03^post22, tmp___14^0'=tmp___14^post22, (rnode^0-rnode^post22 == 0 /\ -tmp1^post22+tmp1^0 == 0 /\ r^0-r^post22 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post22 == 0 /\ -tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ b1111^0-b1111^post22 == 0 /\ -a66^post22+a66^0 == 0 /\ b77^0-b77^post22 == 0 /\ -bufhdr_tag_rnode^post22+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_cntxdirty^post22+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post22+bufhdr___01515^0 == 0 /\ -nlocbuffer^post22+nlocbuffer^0 == 0 /\ -nbuffers^post22+nbuffers^0 == 0 /\ -i^post22+i^0 == 0 /\ -tmp88^post22+tmp88^0 == 0 /\ istemp^0-istemp^post22 == 0 /\ tmp1^0 <= 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post22 == 0 /\ -tmp1212^post22+tmp1212^0 == 0 /\ -a^post22+a^0 == 0 /\ -firstdelblock^post22+firstdelblock^0 == 0 /\ a1414^0-a1414^post22 == 0 /\ tmp___03^0-tmp___03^post22 == 0 /\ -ret_relfilenodeequals99^post22+ret_relfilenodeequals99^0 == 0 /\ a1010^0-a1010^post22 == 0 /\ tmp___14^0-tmp___14^post22 == 0 /\ bufhdr_flags^0-bufhdr_flags^post22 == 0 /\ -bufhdr_tag_blocknum^post22+bufhdr_tag_blocknum^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l18 -> l16 : a1010^0'=a1010^post22, a1414^0'=a1414^post22, a66^0'=a66^post22, a^0'=a^post22, b1111^0'=b1111^post22, b77^0'=b77^post22, bufhdr___01515^0'=bufhdr___01515^post22, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post22, bufhdr_flags^0'=bufhdr_flags^post22, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post22, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post22, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post22, firstdelblock^0'=firstdelblock^post22, i^0'=i^post22, istemp^0'=istemp^post22, nbuffers^0'=nbuffers^post22, nlocbuffer^0'=nlocbuffer^post22, r^0'=r^post22, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post22, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post22, rnode^0'=rnode^post22, tmp1212^0'=tmp1212^post22, tmp1^0'=tmp1^post22, tmp88^0'=tmp88^post22, tmp___03^0'=tmp___03^post22, tmp___14^0'=tmp___14^post22, (rnode^0-rnode^post22 == 0 /\ -tmp1^post22+tmp1^0 == 0 /\ r^0-r^post22 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post22 == 0 /\ -tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ b1111^0-b1111^post22 == 0 /\ -a66^post22+a66^0 == 0 /\ b77^0-b77^post22 == 0 /\ -bufhdr_tag_rnode^post22+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_cntxdirty^post22+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post22+bufhdr___01515^0 == 0 /\ -nlocbuffer^post22+nlocbuffer^0 == 0 /\ -nbuffers^post22+nbuffers^0 == 0 /\ -i^post22+i^0 == 0 /\ -tmp88^post22+tmp88^0 == 0 /\ istemp^0-istemp^post22 == 0 /\ tmp1^0 <= 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post22 == 0 /\ -tmp1212^post22+tmp1212^0 == 0 /\ -a^post22+a^0 == 0 /\ -firstdelblock^post22+firstdelblock^0 == 0 /\ a1414^0-a1414^post22 == 0 /\ tmp___03^0-tmp___03^post22 == 0 /\ -ret_relfilenodeequals99^post22+ret_relfilenodeequals99^0 == 0 /\ a1010^0-a1010^post22 == 0 /\ tmp___14^0-tmp___14^post22 == 0 /\ bufhdr_flags^0-bufhdr_flags^post22 == 0 /\ -bufhdr_tag_blocknum^post22+bufhdr_tag_blocknum^0 == 0), cost: 1
	New rule:
	l18 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ tmp1^0 <= 0), cost: 1
	
		propagated equality rnode^post22 = rnode^0
		
		propagated equality tmp1^post22 = tmp1^0
		
		propagated equality r^post22 = r^0
		
		propagated equality bufhdr_tag_rnode_relnode^post22 = bufhdr_tag_rnode_relnode^0
		
		propagated equality b1111^post22 = b1111^0
		
		propagated equality a66^post22 = a66^0
		
		propagated equality b77^post22 = b77^0
		
		propagated equality bufhdr_tag_rnode^post22 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr_cntxdirty^post22 = bufhdr_cntxdirty^0
		
		propagated equality bufhdr___01515^post22 = bufhdr___01515^0
		
		propagated equality nlocbuffer^post22 = nlocbuffer^0
		
		propagated equality nbuffers^post22 = nbuffers^0
		
		propagated equality i^post22 = i^0
		
		propagated equality tmp88^post22 = tmp88^0
		
		propagated equality istemp^post22 = istemp^0
		
		propagated equality ret_relfilenodeequals1313^post22 = ret_relfilenodeequals1313^0
		
		propagated equality tmp1212^post22 = tmp1212^0
		
		propagated equality a^post22 = a^0
		
		propagated equality firstdelblock^post22 = firstdelblock^0
		
		propagated equality a1414^post22 = a1414^0
		
		propagated equality tmp___03^post22 = tmp___03^0
		
		propagated equality ret_relfilenodeequals99^post22 = ret_relfilenodeequals99^0
		
		propagated equality a1010^post22 = a1010^0
		
		propagated equality tmp___14^post22 = tmp___14^0
		
		propagated equality bufhdr_flags^post22 = bufhdr_flags^0
		
		propagated equality bufhdr_tag_blocknum^post22 = bufhdr_tag_blocknum^0
		
	Simplified Guard

	Original rule:
	l18 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ tmp1^0 <= 0), cost: 1
	New rule:
	l18 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (-tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ tmp1^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l18 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (-tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ tmp1^0 <= 0), cost: 1
	New rule:
	l18 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (-tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ tmp1^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l18 -> l16 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (-tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ tmp1^0 <= 0), cost: 1
	New rule:
	l18 -> l16 : (-tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ tmp1^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l18 -> l17 : a1010^0'=a1010^post23, a1414^0'=a1414^post23, a66^0'=a66^post23, a^0'=a^post23, b1111^0'=b1111^post23, b77^0'=b77^post23, bufhdr___01515^0'=bufhdr___01515^post23, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post23, bufhdr_flags^0'=bufhdr_flags^post23, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post23, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post23, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post23, firstdelblock^0'=firstdelblock^post23, i^0'=i^post23, istemp^0'=istemp^post23, nbuffers^0'=nbuffers^post23, nlocbuffer^0'=nlocbuffer^post23, r^0'=r^post23, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post23, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post23, rnode^0'=rnode^post23, tmp1212^0'=tmp1212^post23, tmp1^0'=tmp1^post23, tmp88^0'=tmp88^post23, tmp___03^0'=tmp___03^post23, tmp___14^0'=tmp___14^post23, (bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post23 == 0 /\ -bufhdr_cntxdirty^post23+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post23+bufhdr_flags^0 == 0 /\ -tmp___03^post23+tmp___03^0 == 0 /\ -tmp88^post23+tmp88^0 == 0 /\ -b77^post23+b77^0 == 0 /\ 1-tmp1^0 <= 0 /\ nbuffers^0-nbuffers^post23 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post23 == 0 /\ -a66^post23+a66^0 == 0 /\ rnode^0-rnode^post23 == 0 /\ -ret_relfilenodeequals1313^post23+ret_relfilenodeequals1313^0 == 0 /\ -a^post23+a^0 == 0 /\ i^0-i^post23 == 0 /\ b1111^0-b1111^post23 == 0 /\ -firstdelblock^post23+firstdelblock^0 == 0 /\ -r^post23+r^0 == 0 /\ tmp1^0-tmp1^post23 == 0 /\ -nlocbuffer^post23+nlocbuffer^0 == 0 /\ istemp^0-istemp^post23 == 0 /\ tmp___14^0-tmp___14^post23 == 0 /\ bufhdr___01515^0-bufhdr___01515^post23 == 0 /\ tmp1212^0-tmp1212^post23 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post23 == 0 /\ -bufhdr_tag_rnode_relnode^post23+bufhdr_tag_rnode_relnode^0 == 0 /\ a1414^0-a1414^post23 == 0 /\ a1010^0-a1010^post23 == 0), cost: 1
	New rule:
	l18 -> l17 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1-tmp1^0 <= 0), cost: 1
	
		propagated equality bufhdr_tag_blocknum^post23 = bufhdr_tag_blocknum^0
		
		propagated equality bufhdr_cntxdirty^post23 = bufhdr_cntxdirty^0
		
		propagated equality bufhdr_flags^post23 = bufhdr_flags^0
		
		propagated equality tmp___03^post23 = tmp___03^0
		
		propagated equality tmp88^post23 = tmp88^0
		
		propagated equality b77^post23 = b77^0
		
		propagated equality nbuffers^post23 = nbuffers^0
		
		propagated equality ret_relfilenodeequals99^post23 = ret_relfilenodeequals99^0
		
		propagated equality a66^post23 = a66^0
		
		propagated equality rnode^post23 = rnode^0
		
		propagated equality ret_relfilenodeequals1313^post23 = ret_relfilenodeequals1313^0
		
		propagated equality a^post23 = a^0
		
		propagated equality i^post23 = i^0
		
		propagated equality b1111^post23 = b1111^0
		
		propagated equality firstdelblock^post23 = firstdelblock^0
		
		propagated equality r^post23 = r^0
		
		propagated equality tmp1^post23 = tmp1^0
		
		propagated equality nlocbuffer^post23 = nlocbuffer^0
		
		propagated equality istemp^post23 = istemp^0
		
		propagated equality tmp___14^post23 = tmp___14^0
		
		propagated equality bufhdr___01515^post23 = bufhdr___01515^0
		
		propagated equality tmp1212^post23 = tmp1212^0
		
		propagated equality bufhdr_tag_rnode^post23 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr_tag_rnode_relnode^post23 = bufhdr_tag_rnode_relnode^0
		
		propagated equality a1414^post23 = a1414^0
		
		propagated equality a1010^post23 = a1010^0
		
	Simplified Guard

	Original rule:
	l18 -> l17 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1-tmp1^0 <= 0), cost: 1
	New rule:
	l18 -> l17 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1-tmp1^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l18 -> l17 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1-tmp1^0 <= 0, cost: 1
	New rule:
	l18 -> l17 : 1-tmp1^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l18 -> l17 : a1010^0'=a1010^post24, a1414^0'=a1414^post24, a66^0'=a66^post24, a^0'=a^post24, b1111^0'=b1111^post24, b77^0'=b77^post24, bufhdr___01515^0'=bufhdr___01515^post24, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post24, bufhdr_flags^0'=bufhdr_flags^post24, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post24, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post24, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post24, firstdelblock^0'=firstdelblock^post24, i^0'=i^post24, istemp^0'=istemp^post24, nbuffers^0'=nbuffers^post24, nlocbuffer^0'=nlocbuffer^post24, r^0'=r^post24, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post24, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post24, rnode^0'=rnode^post24, tmp1212^0'=tmp1212^post24, tmp1^0'=tmp1^post24, tmp88^0'=tmp88^post24, tmp___03^0'=tmp___03^post24, tmp___14^0'=tmp___14^post24, (-bufhdr_cntxdirty^post24+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post24+bufhdr_flags^0 == 0 /\ -i^post24+i^0 == 0 /\ nbuffers^0-nbuffers^post24 == 0 /\ -b77^post24+b77^0 == 0 /\ a^0-a^post24 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post24 == 0 /\ -firstdelblock^post24+firstdelblock^0 == 0 /\ -tmp___03^post24+tmp___03^0 == 0 /\ -bufhdr_tag_rnode_relnode^post24+bufhdr_tag_rnode_relnode^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post24 == 0 /\ -ret_relfilenodeequals1313^post24+ret_relfilenodeequals1313^0 == 0 /\ istemp^0-istemp^post24 == 0 /\ -a1010^post24+a1010^0 == 0 /\ rnode^0-rnode^post24 == 0 /\ 1+tmp1^0 <= 0 /\ -r^post24+r^0 == 0 /\ -nlocbuffer^post24+nlocbuffer^0 == 0 /\ b1111^0-b1111^post24 == 0 /\ tmp1^0-tmp1^post24 == 0 /\ tmp1212^0-tmp1212^post24 == 0 /\ a66^0-a66^post24 == 0 /\ tmp___14^0-tmp___14^post24 == 0 /\ -tmp88^post24+tmp88^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post24 == 0 /\ -a1414^post24+a1414^0 == 0 /\ -bufhdr_tag_rnode^post24+bufhdr_tag_rnode^0 == 0), cost: 1
	New rule:
	l18 -> l17 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+tmp1^0 <= 0), cost: 1
	
		propagated equality bufhdr_cntxdirty^post24 = bufhdr_cntxdirty^0
		
		propagated equality bufhdr_flags^post24 = bufhdr_flags^0
		
		propagated equality i^post24 = i^0
		
		propagated equality nbuffers^post24 = nbuffers^0
		
		propagated equality b77^post24 = b77^0
		
		propagated equality a^post24 = a^0
		
		propagated equality bufhdr_tag_blocknum^post24 = bufhdr_tag_blocknum^0
		
		propagated equality firstdelblock^post24 = firstdelblock^0
		
		propagated equality tmp___03^post24 = tmp___03^0
		
		propagated equality bufhdr_tag_rnode_relnode^post24 = bufhdr_tag_rnode_relnode^0
		
		propagated equality ret_relfilenodeequals99^post24 = ret_relfilenodeequals99^0
		
		propagated equality ret_relfilenodeequals1313^post24 = ret_relfilenodeequals1313^0
		
		propagated equality istemp^post24 = istemp^0
		
		propagated equality a1010^post24 = a1010^0
		
		propagated equality rnode^post24 = rnode^0
		
		propagated equality r^post24 = r^0
		
		propagated equality nlocbuffer^post24 = nlocbuffer^0
		
		propagated equality b1111^post24 = b1111^0
		
		propagated equality tmp1^post24 = tmp1^0
		
		propagated equality tmp1212^post24 = tmp1212^0
		
		propagated equality a66^post24 = a66^0
		
		propagated equality tmp___14^post24 = tmp___14^0
		
		propagated equality tmp88^post24 = tmp88^0
		
		propagated equality bufhdr___01515^post24 = bufhdr___01515^0
		
		propagated equality a1414^post24 = a1414^0
		
		propagated equality bufhdr_tag_rnode^post24 = bufhdr_tag_rnode^0
		
	Simplified Guard

	Original rule:
	l18 -> l17 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+tmp1^0 <= 0), cost: 1
	New rule:
	l18 -> l17 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+tmp1^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l18 -> l17 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+tmp1^0 <= 0, cost: 1
	New rule:
	l18 -> l17 : 1+tmp1^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l6 : a1010^0'=a1010^post27, a1414^0'=a1414^post27, a66^0'=a66^post27, a^0'=a^post27, b1111^0'=b1111^post27, b77^0'=b77^post27, bufhdr___01515^0'=bufhdr___01515^post27, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post27, bufhdr_flags^0'=bufhdr_flags^post27, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post27, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post27, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post27, firstdelblock^0'=firstdelblock^post27, i^0'=i^post27, istemp^0'=istemp^post27, nbuffers^0'=nbuffers^post27, nlocbuffer^0'=nlocbuffer^post27, r^0'=r^post27, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post27, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post27, rnode^0'=rnode^post27, tmp1212^0'=tmp1212^post27, tmp1^0'=tmp1^post27, tmp88^0'=tmp88^post27, tmp___03^0'=tmp___03^post27, tmp___14^0'=tmp___14^post27, (r^0-r^post27 == 0 /\ tmp___14^0-tmp___14^post27 == 0 /\ -ret_relfilenodeequals1313^post27+ret_relfilenodeequals1313^0 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post27 == 0 /\ istemp^0-istemp^post27 == 0 /\ -bufhdr_cntxdirty^post27+bufhdr_cntxdirty^0 == 0 /\ -nlocbuffer^post27+nlocbuffer^0 == 0 /\ -b77^post27+b77^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post27 == 0 /\ -tmp88^post27+tmp88^0 == 0 /\ b1111^0-b1111^post27 == 0 /\ -firstdelblock^post27+firstdelblock^0 == 0 /\ a1414^0-a1414^post27 == 0 /\ -a66^post27+a66^0 == 0 /\ -bufhdr_tag_rnode^post27+bufhdr_tag_rnode^0 == 0 /\ rnode^0-rnode^post27 == 0 /\ -i^0+nlocbuffer^0 <= 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post27 == 0 /\ bufhdr_flags^0-bufhdr_flags^post27 == 0 /\ -i^post27+i^0 == 0 /\ -nbuffers^post27+nbuffers^0 == 0 /\ a1010^0-a1010^post27 == 0 /\ -bufhdr___01515^post27+bufhdr___01515^0 == 0 /\ -a^post27+a^0 == 0 /\ -tmp1212^post27+tmp1212^0 == 0 /\ -tmp1^post27+tmp1^0 == 0 /\ tmp___03^0-tmp___03^post27 == 0), cost: 1
	New rule:
	l3 -> l6 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -i^0+nlocbuffer^0 <= 0), cost: 1
	
		propagated equality r^post27 = r^0
		
		propagated equality tmp___14^post27 = tmp___14^0
		
		propagated equality ret_relfilenodeequals1313^post27 = ret_relfilenodeequals1313^0
		
		propagated equality ret_relfilenodeequals99^post27 = ret_relfilenodeequals99^0
		
		propagated equality istemp^post27 = istemp^0
		
		propagated equality bufhdr_cntxdirty^post27 = bufhdr_cntxdirty^0
		
		propagated equality nlocbuffer^post27 = nlocbuffer^0
		
		propagated equality b77^post27 = b77^0
		
		propagated equality bufhdr_tag_rnode_relnode^post27 = bufhdr_tag_rnode_relnode^0
		
		propagated equality tmp88^post27 = tmp88^0
		
		propagated equality b1111^post27 = b1111^0
		
		propagated equality firstdelblock^post27 = firstdelblock^0
		
		propagated equality a1414^post27 = a1414^0
		
		propagated equality a66^post27 = a66^0
		
		propagated equality bufhdr_tag_rnode^post27 = bufhdr_tag_rnode^0
		
		propagated equality rnode^post27 = rnode^0
		
		propagated equality bufhdr_tag_blocknum^post27 = bufhdr_tag_blocknum^0
		
		propagated equality bufhdr_flags^post27 = bufhdr_flags^0
		
		propagated equality i^post27 = i^0
		
		propagated equality nbuffers^post27 = nbuffers^0
		
		propagated equality a1010^post27 = a1010^0
		
		propagated equality bufhdr___01515^post27 = bufhdr___01515^0
		
		propagated equality a^post27 = a^0
		
		propagated equality tmp1212^post27 = tmp1212^0
		
		propagated equality tmp1^post27 = tmp1^0
		
		propagated equality tmp___03^post27 = tmp___03^0
		
	Simplified Guard

	Original rule:
	l3 -> l6 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ -i^0+nlocbuffer^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, -i^0+nlocbuffer^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l6 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, -i^0+nlocbuffer^0 <= 0, cost: 1
	New rule:
	l3 -> l6 : -i^0+nlocbuffer^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l18 : a1010^0'=a1010^post28, a1414^0'=a1414^post28, a66^0'=a66^post28, a^0'=a^post28, b1111^0'=b1111^post28, b77^0'=b77^post28, bufhdr___01515^0'=bufhdr___01515^post28, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post28, bufhdr_flags^0'=bufhdr_flags^post28, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post28, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post28, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post28, firstdelblock^0'=firstdelblock^post28, i^0'=i^post28, istemp^0'=istemp^post28, nbuffers^0'=nbuffers^post28, nlocbuffer^0'=nlocbuffer^post28, r^0'=r^post28, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post28, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post28, rnode^0'=rnode^post28, tmp1212^0'=tmp1212^post28, tmp1^0'=tmp1^post28, tmp88^0'=tmp88^post28, tmp___03^0'=tmp___03^post28, tmp___14^0'=tmp___14^post28, (0 == 0 /\ a66^post28-bufhdr_tag_rnode^0 == 0 /\ istemp^0-istemp^post28 == 0 /\ tmp1212^0-tmp1212^post28 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post28 == 0 /\ -tmp___14^post28+tmp___14^0 == 0 /\ -rnode^0+b77^post28 == 0 /\ -ret_relfilenodeequals1313^post28+ret_relfilenodeequals1313^0 == 0 /\ -a^post28+a^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post28 == 0 /\ tmp___03^0-tmp___03^post28 == 0 /\ -r^post28+r^0 == 0 /\ -bufhdr_tag_rnode^post28+bufhdr_tag_rnode^0 == 0 /\ -i^post28+i^0 == 0 /\ -nlocbuffer^post28+nlocbuffer^0 == 0 /\ 1+i^0-nlocbuffer^0 <= 0 /\ a1414^0-a1414^post28 == 0 /\ -firstdelblock^post28+firstdelblock^0 == 0 /\ b1111^0-b1111^post28 == 0 /\ ret_relfilenodeequals99^post28-tmp88^post28 == 0 /\ a1010^0-a1010^post28 == 0 /\ -bufhdr_cntxdirty^post28+bufhdr_cntxdirty^0 == 0 /\ nbuffers^0-nbuffers^post28 == 0 /\ bufhdr___01515^0-bufhdr___01515^post28 == 0 /\ -ret_relfilenodeequals99^post28+tmp1^post28 == 0 /\ rnode^0-rnode^post28 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post28 == 0), cost: 1
	New rule:
	l3 -> l18 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=bufhdr_tag_rnode^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=rnode^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=tmp88^post28, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp88^post28, tmp88^0'=tmp88^post28, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+i^0-nlocbuffer^0 <= 0), cost: 1
	
		propagated equality a66^post28 = bufhdr_tag_rnode^0
		
		propagated equality istemp^post28 = istemp^0
		
		propagated equality tmp1212^post28 = tmp1212^0
		
		propagated equality bufhdr_tag_blocknum^post28 = bufhdr_tag_blocknum^0
		
		propagated equality tmp___14^post28 = tmp___14^0
		
		propagated equality b77^post28 = rnode^0
		
		propagated equality ret_relfilenodeequals1313^post28 = ret_relfilenodeequals1313^0
		
		propagated equality a^post28 = a^0
		
		propagated equality bufhdr_flags^post28 = bufhdr_flags^0
		
		propagated equality tmp___03^post28 = tmp___03^0
		
		propagated equality r^post28 = r^0
		
		propagated equality bufhdr_tag_rnode^post28 = bufhdr_tag_rnode^0
		
		propagated equality i^post28 = i^0
		
		propagated equality nlocbuffer^post28 = nlocbuffer^0
		
		propagated equality a1414^post28 = a1414^0
		
		propagated equality firstdelblock^post28 = firstdelblock^0
		
		propagated equality b1111^post28 = b1111^0
		
		propagated equality ret_relfilenodeequals99^post28 = tmp88^post28
		
		propagated equality a1010^post28 = a1010^0
		
		propagated equality bufhdr_cntxdirty^post28 = bufhdr_cntxdirty^0
		
		propagated equality nbuffers^post28 = nbuffers^0
		
		propagated equality bufhdr___01515^post28 = bufhdr___01515^0
		
		propagated equality tmp1^post28 = tmp88^post28
		
		propagated equality rnode^post28 = rnode^0
		
		propagated equality bufhdr_tag_rnode_relnode^post28 = bufhdr_tag_rnode_relnode^0
		
	Simplified Guard

	Original rule:
	l3 -> l18 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=bufhdr_tag_rnode^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=rnode^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=tmp88^post28, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp88^post28, tmp88^0'=tmp88^post28, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1+i^0-nlocbuffer^0 <= 0), cost: 1
	New rule:
	l3 -> l18 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=bufhdr_tag_rnode^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=rnode^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=tmp88^post28, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp88^post28, tmp88^0'=tmp88^post28, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+i^0-nlocbuffer^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l18 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=bufhdr_tag_rnode^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=rnode^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=tmp88^post28, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp88^post28, tmp88^0'=tmp88^post28, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 1+i^0-nlocbuffer^0 <= 0, cost: 1
	New rule:
	l3 -> l18 : a66^0'=bufhdr_tag_rnode^0, b77^0'=rnode^0, ret_relfilenodeequals99^0'=tmp88^post28, tmp1^0'=tmp88^post28, tmp88^0'=tmp88^post28, 1+i^0-nlocbuffer^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l15 : a1010^0'=a1010^post29, a1414^0'=a1414^post29, a66^0'=a66^post29, a^0'=a^post29, b1111^0'=b1111^post29, b77^0'=b77^post29, bufhdr___01515^0'=bufhdr___01515^post29, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post29, bufhdr_flags^0'=bufhdr_flags^post29, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post29, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post29, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post29, firstdelblock^0'=firstdelblock^post29, i^0'=i^post29, istemp^0'=istemp^post29, nbuffers^0'=nbuffers^post29, nlocbuffer^0'=nlocbuffer^post29, r^0'=r^post29, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post29, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post29, rnode^0'=rnode^post29, tmp1212^0'=tmp1212^post29, tmp1^0'=tmp1^post29, tmp88^0'=tmp88^post29, tmp___03^0'=tmp___03^post29, tmp___14^0'=tmp___14^post29, (tmp1^0-tmp1^post29 == 0 /\ tmp1212^0-tmp1212^post29 == 0 /\ -bufhdr_tag_rnode^post29+bufhdr_tag_rnode^0 == 0 /\ -bufhdr_tag_blocknum^post29+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post29 == 0 /\ 2-istemp^0 <= 0 /\ -bufhdr_cntxdirty^post29+bufhdr_cntxdirty^0 == 0 /\ -bufhdr___01515^post29+bufhdr___01515^0 == 0 /\ a66^0-a66^post29 == 0 /\ b77^0-b77^post29 == 0 /\ tmp___14^0-tmp___14^post29 == 0 /\ -nlocbuffer^post29+nlocbuffer^0 == 0 /\ -tmp___03^post29+tmp___03^0 == 0 /\ a1010^0-a1010^post29 == 0 /\ -i^post29+i^0 == 0 /\ -a^post29+a^0 == 0 /\ rnode^0-rnode^post29 == 0 /\ bufhdr_flags^0-bufhdr_flags^post29 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post29 == 0 /\ -ret_relfilenodeequals99^post29+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post29+ret_relfilenodeequals1313^0 == 0 /\ -firstdelblock^post29+firstdelblock^0 == 0 /\ -a1414^post29+a1414^0 == 0 /\ istemp^0-istemp^post29 == 0 /\ -tmp88^post29+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post29 == 0 /\ -r^post29+r^0 == 0), cost: 1
	New rule:
	l20 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 2-istemp^0 <= 0), cost: 1
	
		propagated equality tmp1^post29 = tmp1^0
		
		propagated equality tmp1212^post29 = tmp1212^0
		
		propagated equality bufhdr_tag_rnode^post29 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr_tag_blocknum^post29 = bufhdr_tag_blocknum^0
		
		propagated equality b1111^post29 = b1111^0
		
		propagated equality bufhdr_cntxdirty^post29 = bufhdr_cntxdirty^0
		
		propagated equality bufhdr___01515^post29 = bufhdr___01515^0
		
		propagated equality a66^post29 = a66^0
		
		propagated equality b77^post29 = b77^0
		
		propagated equality tmp___14^post29 = tmp___14^0
		
		propagated equality nlocbuffer^post29 = nlocbuffer^0
		
		propagated equality tmp___03^post29 = tmp___03^0
		
		propagated equality a1010^post29 = a1010^0
		
		propagated equality i^post29 = i^0
		
		propagated equality a^post29 = a^0
		
		propagated equality rnode^post29 = rnode^0
		
		propagated equality bufhdr_flags^post29 = bufhdr_flags^0
		
		propagated equality bufhdr_tag_rnode_relnode^post29 = bufhdr_tag_rnode_relnode^0
		
		propagated equality ret_relfilenodeequals99^post29 = ret_relfilenodeequals99^0
		
		propagated equality ret_relfilenodeequals1313^post29 = ret_relfilenodeequals1313^0
		
		propagated equality firstdelblock^post29 = firstdelblock^0
		
		propagated equality a1414^post29 = a1414^0
		
		propagated equality istemp^post29 = istemp^0
		
		propagated equality tmp88^post29 = tmp88^0
		
		propagated equality nbuffers^post29 = nbuffers^0
		
		propagated equality r^post29 = r^0
		
	Simplified Guard

	Original rule:
	l20 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 2-istemp^0 <= 0), cost: 1
	New rule:
	l20 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 2-istemp^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 2-istemp^0 <= 0, cost: 1
	New rule:
	l20 -> l15 : 2-istemp^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l15 : a1010^0'=a1010^post30, a1414^0'=a1414^post30, a66^0'=a66^post30, a^0'=a^post30, b1111^0'=b1111^post30, b77^0'=b77^post30, bufhdr___01515^0'=bufhdr___01515^post30, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post30, bufhdr_flags^0'=bufhdr_flags^post30, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post30, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post30, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post30, firstdelblock^0'=firstdelblock^post30, i^0'=i^post30, istemp^0'=istemp^post30, nbuffers^0'=nbuffers^post30, nlocbuffer^0'=nlocbuffer^post30, r^0'=r^post30, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post30, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post30, rnode^0'=rnode^post30, tmp1212^0'=tmp1212^post30, tmp1^0'=tmp1^post30, tmp88^0'=tmp88^post30, tmp___03^0'=tmp___03^post30, tmp___14^0'=tmp___14^post30, (-tmp1212^post30+tmp1212^0 == 0 /\ b1111^0-b1111^post30 == 0 /\ istemp^0 <= 0 /\ -ret_relfilenodeequals99^post30+ret_relfilenodeequals99^0 == 0 /\ -bufhdr_tag_rnode^post30+bufhdr_tag_rnode^0 == 0 /\ tmp___14^0-tmp___14^post30 == 0 /\ b77^0-b77^post30 == 0 /\ -i^post30+i^0 == 0 /\ r^0-r^post30 == 0 /\ a66^0-a66^post30 == 0 /\ -bufhdr___01515^post30+bufhdr___01515^0 == 0 /\ -tmp___03^post30+tmp___03^0 == 0 /\ -tmp1^post30+tmp1^0 == 0 /\ a1010^0-a1010^post30 == 0 /\ istemp^0-istemp^post30 == 0 /\ -a1414^post30+a1414^0 == 0 /\ bufhdr_flags^0-bufhdr_flags^post30 == 0 /\ ret_relfilenodeequals1313^0-ret_relfilenodeequals1313^post30 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post30 == 0 /\ nbuffers^0-nbuffers^post30 == 0 /\ -bufhdr_tag_blocknum^post30+bufhdr_tag_blocknum^0 == 0 /\ -bufhdr_cntxdirty^post30+bufhdr_cntxdirty^0 == 0 /\ -nlocbuffer^post30+nlocbuffer^0 == 0 /\ -a^post30+a^0 == 0 /\ rnode^0-rnode^post30 == 0 /\ -firstdelblock^post30+firstdelblock^0 == 0 /\ -tmp88^post30+tmp88^0 == 0), cost: 1
	New rule:
	l20 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ istemp^0 <= 0), cost: 1
	
		propagated equality tmp1212^post30 = tmp1212^0
		
		propagated equality b1111^post30 = b1111^0
		
		propagated equality ret_relfilenodeequals99^post30 = ret_relfilenodeequals99^0
		
		propagated equality bufhdr_tag_rnode^post30 = bufhdr_tag_rnode^0
		
		propagated equality tmp___14^post30 = tmp___14^0
		
		propagated equality b77^post30 = b77^0
		
		propagated equality i^post30 = i^0
		
		propagated equality r^post30 = r^0
		
		propagated equality a66^post30 = a66^0
		
		propagated equality bufhdr___01515^post30 = bufhdr___01515^0
		
		propagated equality tmp___03^post30 = tmp___03^0
		
		propagated equality tmp1^post30 = tmp1^0
		
		propagated equality a1010^post30 = a1010^0
		
		propagated equality istemp^post30 = istemp^0
		
		propagated equality a1414^post30 = a1414^0
		
		propagated equality bufhdr_flags^post30 = bufhdr_flags^0
		
		propagated equality ret_relfilenodeequals1313^post30 = ret_relfilenodeequals1313^0
		
		propagated equality bufhdr_tag_rnode_relnode^post30 = bufhdr_tag_rnode_relnode^0
		
		propagated equality nbuffers^post30 = nbuffers^0
		
		propagated equality bufhdr_tag_blocknum^post30 = bufhdr_tag_blocknum^0
		
		propagated equality bufhdr_cntxdirty^post30 = bufhdr_cntxdirty^0
		
		propagated equality nlocbuffer^post30 = nlocbuffer^0
		
		propagated equality a^post30 = a^0
		
		propagated equality rnode^post30 = rnode^0
		
		propagated equality firstdelblock^post30 = firstdelblock^0
		
		propagated equality tmp88^post30 = tmp88^0
		
	Simplified Guard

	Original rule:
	l20 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ istemp^0 <= 0), cost: 1
	New rule:
	l20 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, istemp^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l15 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, istemp^0 <= 0, cost: 1
	New rule:
	l20 -> l15 : istemp^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l20 -> l2 : a1010^0'=a1010^post31, a1414^0'=a1414^post31, a66^0'=a66^post31, a^0'=a^post31, b1111^0'=b1111^post31, b77^0'=b77^post31, bufhdr___01515^0'=bufhdr___01515^post31, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post31, bufhdr_flags^0'=bufhdr_flags^post31, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post31, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post31, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post31, firstdelblock^0'=firstdelblock^post31, i^0'=i^post31, istemp^0'=istemp^post31, nbuffers^0'=nbuffers^post31, nlocbuffer^0'=nlocbuffer^post31, r^0'=r^post31, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post31, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post31, rnode^0'=rnode^post31, tmp1212^0'=tmp1212^post31, tmp1^0'=tmp1^post31, tmp88^0'=tmp88^post31, tmp___03^0'=tmp___03^post31, tmp___14^0'=tmp___14^post31, (-tmp1^post31+tmp1^0 == 0 /\ -bufhdr_tag_rnode_relnode^post31+bufhdr_tag_rnode_relnode^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post31 == 0 /\ -rnode^post31+rnode^0 == 0 /\ -ret_relfilenodeequals1313^post31+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_cntxdirty^post31+bufhdr_cntxdirty^0 == 0 /\ 1-istemp^0 <= 0 /\ -1+istemp^0 <= 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post31 == 0 /\ -b77^post31+b77^0 == 0 /\ -tmp88^post31+tmp88^0 == 0 /\ -r^post31+r^0 == 0 /\ tmp___14^0-tmp___14^post31 == 0 /\ a1010^0-a1010^post31 == 0 /\ nbuffers^0-nbuffers^post31 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post31 == 0 /\ -bufhdr_flags^post31+bufhdr_flags^0 == 0 /\ -a1414^post31+a1414^0 == 0 /\ -a66^post31+a66^0 == 0 /\ tmp1212^0-tmp1212^post31 == 0 /\ i^post31 == 0 /\ -firstdelblock^post31+firstdelblock^0 == 0 /\ -nlocbuffer^post31+nlocbuffer^0 == 0 /\ -istemp^post31+istemp^0 == 0 /\ -tmp___03^post31+tmp___03^0 == 0 /\ b1111^0-b1111^post31 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post31 == 0 /\ -a^post31+a^0 == 0), cost: 1
	New rule:
	l20 -> l2 : a1010^0'=a1010^post31, a1414^0'=a1414^post31, a66^0'=a66^post31, a^0'=a^post31, b1111^0'=b1111^post31, b77^0'=b77^post31, bufhdr___01515^0'=bufhdr___01515^post31, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post31, bufhdr_flags^0'=bufhdr_flags^post31, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post31, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post31, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post31, firstdelblock^0'=firstdelblock^post31, i^0'=i^post31, istemp^0'=istemp^post31, nbuffers^0'=nbuffers^post31, nlocbuffer^0'=nlocbuffer^post31, r^0'=r^post31, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post31, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post31, rnode^0'=rnode^post31, tmp1212^0'=tmp1212^post31, tmp1^0'=tmp1^post31, tmp88^0'=tmp88^post31, tmp___03^0'=tmp___03^post31, tmp___14^0'=tmp___14^post31, (-tmp1^post31+tmp1^0 == 0 /\ -bufhdr_tag_rnode_relnode^post31+bufhdr_tag_rnode_relnode^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post31 == 0 /\ -rnode^post31+rnode^0 == 0 /\ -ret_relfilenodeequals1313^post31+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_cntxdirty^post31+bufhdr_cntxdirty^0 == 0 /\ 1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post31 == 0 /\ -b77^post31+b77^0 == 0 /\ -tmp88^post31+tmp88^0 == 0 /\ -r^post31+r^0 == 0 /\ tmp___14^0-tmp___14^post31 == 0 /\ a1010^0-a1010^post31 == 0 /\ nbuffers^0-nbuffers^post31 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post31 == 0 /\ -bufhdr_flags^post31+bufhdr_flags^0 == 0 /\ -a1414^post31+a1414^0 == 0 /\ -a66^post31+a66^0 == 0 /\ tmp1212^0-tmp1212^post31 == 0 /\ i^post31 == 0 /\ -firstdelblock^post31+firstdelblock^0 == 0 /\ -nlocbuffer^post31+nlocbuffer^0 == 0 /\ -istemp^post31+istemp^0 == 0 /\ -tmp___03^post31+tmp___03^0 == 0 /\ b1111^0-b1111^post31 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post31 == 0 /\ -a^post31+a^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l20 -> l2 : a1010^0'=a1010^post31, a1414^0'=a1414^post31, a66^0'=a66^post31, a^0'=a^post31, b1111^0'=b1111^post31, b77^0'=b77^post31, bufhdr___01515^0'=bufhdr___01515^post31, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post31, bufhdr_flags^0'=bufhdr_flags^post31, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post31, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post31, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post31, firstdelblock^0'=firstdelblock^post31, i^0'=i^post31, istemp^0'=istemp^post31, nbuffers^0'=nbuffers^post31, nlocbuffer^0'=nlocbuffer^post31, r^0'=r^post31, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post31, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post31, rnode^0'=rnode^post31, tmp1212^0'=tmp1212^post31, tmp1^0'=tmp1^post31, tmp88^0'=tmp88^post31, tmp___03^0'=tmp___03^post31, tmp___14^0'=tmp___14^post31, (-tmp1^post31+tmp1^0 == 0 /\ -bufhdr_tag_rnode_relnode^post31+bufhdr_tag_rnode_relnode^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post31 == 0 /\ -rnode^post31+rnode^0 == 0 /\ -ret_relfilenodeequals1313^post31+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_cntxdirty^post31+bufhdr_cntxdirty^0 == 0 /\ 1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post31 == 0 /\ -b77^post31+b77^0 == 0 /\ -tmp88^post31+tmp88^0 == 0 /\ -r^post31+r^0 == 0 /\ tmp___14^0-tmp___14^post31 == 0 /\ a1010^0-a1010^post31 == 0 /\ nbuffers^0-nbuffers^post31 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post31 == 0 /\ -bufhdr_flags^post31+bufhdr_flags^0 == 0 /\ -a1414^post31+a1414^0 == 0 /\ -a66^post31+a66^0 == 0 /\ tmp1212^0-tmp1212^post31 == 0 /\ i^post31 == 0 /\ -firstdelblock^post31+firstdelblock^0 == 0 /\ -nlocbuffer^post31+nlocbuffer^0 == 0 /\ -istemp^post31+istemp^0 == 0 /\ -tmp___03^post31+tmp___03^0 == 0 /\ b1111^0-b1111^post31 == 0 /\ bufhdr_tag_rnode^0-bufhdr_tag_rnode^post31 == 0 /\ -a^post31+a^0 == 0), cost: 1
	New rule:
	l20 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0), cost: 1
	
		propagated equality tmp1^post31 = tmp1^0
		
		propagated equality bufhdr_tag_rnode_relnode^post31 = bufhdr_tag_rnode_relnode^0
		
		propagated equality bufhdr___01515^post31 = bufhdr___01515^0
		
		propagated equality rnode^post31 = rnode^0
		
		propagated equality ret_relfilenodeequals1313^post31 = ret_relfilenodeequals1313^0
		
		propagated equality bufhdr_cntxdirty^post31 = bufhdr_cntxdirty^0
		
		propagated equality bufhdr_tag_blocknum^post31 = bufhdr_tag_blocknum^0
		
		propagated equality b77^post31 = b77^0
		
		propagated equality tmp88^post31 = tmp88^0
		
		propagated equality r^post31 = r^0
		
		propagated equality tmp___14^post31 = tmp___14^0
		
		propagated equality a1010^post31 = a1010^0
		
		propagated equality nbuffers^post31 = nbuffers^0
		
		propagated equality ret_relfilenodeequals99^post31 = ret_relfilenodeequals99^0
		
		propagated equality bufhdr_flags^post31 = bufhdr_flags^0
		
		propagated equality a1414^post31 = a1414^0
		
		propagated equality a66^post31 = a66^0
		
		propagated equality tmp1212^post31 = tmp1212^0
		
		propagated equality i^post31 = 0
		
		propagated equality firstdelblock^post31 = firstdelblock^0
		
		propagated equality nlocbuffer^post31 = nlocbuffer^0
		
		propagated equality istemp^post31 = istemp^0
		
		propagated equality tmp___03^post31 = tmp___03^0
		
		propagated equality b1111^post31 = b1111^0
		
		propagated equality bufhdr_tag_rnode^post31 = bufhdr_tag_rnode^0
		
		propagated equality a^post31 = a^0
		
	Simplified Guard

	Original rule:
	l20 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (0 == 0 /\ 1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0), cost: 1
	New rule:
	l20 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l20 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0), cost: 1
	New rule:
	l20 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l20 -> l2 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, (1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0), cost: 1
	New rule:
	l20 -> l2 : i^0'=0, (1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l22 -> l20 : a1010^0'=a1010^post32, a1414^0'=a1414^post32, a66^0'=a66^post32, a^0'=a^post32, b1111^0'=b1111^post32, b77^0'=b77^post32, bufhdr___01515^0'=bufhdr___01515^post32, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post32, bufhdr_flags^0'=bufhdr_flags^post32, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post32, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post32, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post32, firstdelblock^0'=firstdelblock^post32, i^0'=i^post32, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=r^post32, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post32, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post32, rnode^0'=rnode^post32, tmp1212^0'=tmp1212^post32, tmp1^0'=tmp1^post32, tmp88^0'=tmp88^post32, tmp___03^0'=tmp___03^post32, tmp___14^0'=tmp___14^post32, (0 == 0 /\ bufhdr___01515^post33-bufhdr___01515^post32 == 0 /\ -r^post32+a^post32 == 0 /\ tmp___14^post33-tmp___14^post32 == 0 /\ -tmp88^post33+tmp88^0 == 0 /\ -a1010^post32+a1010^post33 == 0 /\ -tmp___14^post33+tmp___14^0 == 0 /\ b1111^post33-b1111^post32 == 0 /\ i^post33-i^post32 == 0 /\ tmp1212^0-tmp1212^post33 == 0 /\ r^post32 == 0 /\ -ret_relfilenodeequals1313^post32+ret_relfilenodeequals1313^post33 == 0 /\ bufhdr_cntxdirty^post33-bufhdr_cntxdirty^post32 == 0 /\ -firstdelblock^post32+firstdelblock^post33 == 0 /\ -tmp1212^post32+tmp1212^post33 == 0 /\ a1010^0-a1010^post33 == 0 /\ tmp88^post33-tmp88^post32 == 0 /\ -nlocbuffer^post33+nlocbuffer^0 == 0 /\ -bufhdr_tag_blocknum^post33+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post33 == 0 /\ bufhdr_flags^0-bufhdr_flags^post33 == 0 /\ -a66^post32+a66^post33 == 0 /\ -bufhdr_cntxdirty^post33+bufhdr_cntxdirty^0 == 0 /\ bufhdr_tag_blocknum^post33-bufhdr_tag_blocknum^post32 == 0 /\ -a1414^post33+a1414^0 == 0 /\ a^0-a^post33 == 0 /\ ret_relfilenodeequals99^post33-ret_relfilenodeequals99^post32 == 0 /\ -a1414^post32+a1414^post33 == 0 /\ -firstdelblock^post33+firstdelblock^0 == 0 /\ bufhdr_tag_rnode^post33-bufhdr_tag_rnode^post32 == 0 /\ tmp___03^0-tmp___03^post33 == 0 /\ -b77^post33+b77^0 == 0 /\ rnode^0-rnode^post33 == 0 /\ -ret_relfilenodeequals99^post33+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post33+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post33 == 0 /\ -bufhdr_flags^post32+bufhdr_flags^post33 == 0 /\ tmp1^post33-tmp1^post32 == 0 /\ -tmp___03^post32+tmp___03^post33 == 0 /\ -bufhdr_tag_rnode^post33+bufhdr_tag_rnode^0 == 0 /\ -i^post33+i^0 == 0 /\ -bufhdr___01515^post33+bufhdr___01515^0 == 0 /\ -r^post33+r^0 == 0 /\ istemp^0-istemp^post33 == 0 /\ -rnode^post32+rnode^post33 == 0 /\ -tmp1^post33+tmp1^0 == 0 /\ a66^0-a66^post33 == 0 /\ -b77^post32+b77^post33 == 0 /\ -bufhdr_tag_rnode_relnode^post32+bufhdr_tag_rnode_relnode^post33 == 0 /\ nbuffers^0-nbuffers^post33 == 0), cost: 1
	New rule:
	l22 -> l20 : a1010^0'=a1010^post33, a1414^0'=a1414^post33, a66^0'=a66^post33, a^0'=0, b1111^0'=b1111^post33, b77^0'=b77^post33, bufhdr___01515^0'=bufhdr___01515^post33, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post33, bufhdr_flags^0'=bufhdr_flags^post33, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post33, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post33, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post33, firstdelblock^0'=firstdelblock^post33, i^0'=i^post33, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post33, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post33, rnode^0'=rnode^post33, tmp1212^0'=tmp1212^post33, tmp1^0'=tmp1^post33, tmp88^0'=tmp88^post33, tmp___03^0'=tmp___03^post33, tmp___14^0'=tmp___14^post33, (0 == 0 /\ -tmp88^post33+tmp88^0 == 0 /\ -tmp___14^post33+tmp___14^0 == 0 /\ tmp1212^0-tmp1212^post33 == 0 /\ a1010^0-a1010^post33 == 0 /\ -nlocbuffer^post33+nlocbuffer^0 == 0 /\ -bufhdr_tag_blocknum^post33+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post33 == 0 /\ bufhdr_flags^0-bufhdr_flags^post33 == 0 /\ -bufhdr_cntxdirty^post33+bufhdr_cntxdirty^0 == 0 /\ -a1414^post33+a1414^0 == 0 /\ a^0-a^post33 == 0 /\ -firstdelblock^post33+firstdelblock^0 == 0 /\ tmp___03^0-tmp___03^post33 == 0 /\ -b77^post33+b77^0 == 0 /\ rnode^0-rnode^post33 == 0 /\ -ret_relfilenodeequals99^post33+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post33+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post33 == 0 /\ -bufhdr_tag_rnode^post33+bufhdr_tag_rnode^0 == 0 /\ -i^post33+i^0 == 0 /\ -bufhdr___01515^post33+bufhdr___01515^0 == 0 /\ -r^post33+r^0 == 0 /\ istemp^0-istemp^post33 == 0 /\ -tmp1^post33+tmp1^0 == 0 /\ a66^0-a66^post33 == 0 /\ nbuffers^0-nbuffers^post33 == 0), cost: 1
	
		propagated equality bufhdr___01515^post32 = bufhdr___01515^post33
		
		propagated equality a^post32 = r^post32
		
		propagated equality tmp___14^post32 = tmp___14^post33
		
		propagated equality a1010^post32 = a1010^post33
		
		propagated equality b1111^post32 = b1111^post33
		
		propagated equality i^post32 = i^post33
		
		propagated equality r^post32 = 0
		
		propagated equality ret_relfilenodeequals1313^post32 = ret_relfilenodeequals1313^post33
		
		propagated equality bufhdr_cntxdirty^post32 = bufhdr_cntxdirty^post33
		
		propagated equality firstdelblock^post32 = firstdelblock^post33
		
		propagated equality tmp1212^post32 = tmp1212^post33
		
		propagated equality tmp88^post32 = tmp88^post33
		
		propagated equality a66^post32 = a66^post33
		
		propagated equality bufhdr_tag_blocknum^post32 = bufhdr_tag_blocknum^post33
		
		propagated equality ret_relfilenodeequals99^post32 = ret_relfilenodeequals99^post33
		
		propagated equality a1414^post32 = a1414^post33
		
		propagated equality bufhdr_tag_rnode^post32 = bufhdr_tag_rnode^post33
		
		propagated equality bufhdr_flags^post32 = bufhdr_flags^post33
		
		propagated equality tmp1^post32 = tmp1^post33
		
		propagated equality tmp___03^post32 = tmp___03^post33
		
		propagated equality rnode^post32 = rnode^post33
		
		propagated equality b77^post32 = b77^post33
		
		propagated equality bufhdr_tag_rnode_relnode^post32 = bufhdr_tag_rnode_relnode^post33
		
	Propagated Equalities

	Original rule:
	l22 -> l20 : a1010^0'=a1010^post33, a1414^0'=a1414^post33, a66^0'=a66^post33, a^0'=0, b1111^0'=b1111^post33, b77^0'=b77^post33, bufhdr___01515^0'=bufhdr___01515^post33, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post33, bufhdr_flags^0'=bufhdr_flags^post33, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post33, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post33, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post33, firstdelblock^0'=firstdelblock^post33, i^0'=i^post33, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post33, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post33, rnode^0'=rnode^post33, tmp1212^0'=tmp1212^post33, tmp1^0'=tmp1^post33, tmp88^0'=tmp88^post33, tmp___03^0'=tmp___03^post33, tmp___14^0'=tmp___14^post33, (0 == 0 /\ -tmp88^post33+tmp88^0 == 0 /\ -tmp___14^post33+tmp___14^0 == 0 /\ tmp1212^0-tmp1212^post33 == 0 /\ a1010^0-a1010^post33 == 0 /\ -nlocbuffer^post33+nlocbuffer^0 == 0 /\ -bufhdr_tag_blocknum^post33+bufhdr_tag_blocknum^0 == 0 /\ b1111^0-b1111^post33 == 0 /\ bufhdr_flags^0-bufhdr_flags^post33 == 0 /\ -bufhdr_cntxdirty^post33+bufhdr_cntxdirty^0 == 0 /\ -a1414^post33+a1414^0 == 0 /\ a^0-a^post33 == 0 /\ -firstdelblock^post33+firstdelblock^0 == 0 /\ tmp___03^0-tmp___03^post33 == 0 /\ -b77^post33+b77^0 == 0 /\ rnode^0-rnode^post33 == 0 /\ -ret_relfilenodeequals99^post33+ret_relfilenodeequals99^0 == 0 /\ -ret_relfilenodeequals1313^post33+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post33 == 0 /\ -bufhdr_tag_rnode^post33+bufhdr_tag_rnode^0 == 0 /\ -i^post33+i^0 == 0 /\ -bufhdr___01515^post33+bufhdr___01515^0 == 0 /\ -r^post33+r^0 == 0 /\ istemp^0-istemp^post33 == 0 /\ -tmp1^post33+tmp1^0 == 0 /\ a66^0-a66^post33 == 0 /\ nbuffers^0-nbuffers^post33 == 0), cost: 1
	New rule:
	l22 -> l20 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality tmp88^post33 = tmp88^0
		
		propagated equality tmp___14^post33 = tmp___14^0
		
		propagated equality tmp1212^post33 = tmp1212^0
		
		propagated equality a1010^post33 = a1010^0
		
		propagated equality nlocbuffer^post33 = nlocbuffer^0
		
		propagated equality bufhdr_tag_blocknum^post33 = bufhdr_tag_blocknum^0
		
		propagated equality b1111^post33 = b1111^0
		
		propagated equality bufhdr_flags^post33 = bufhdr_flags^0
		
		propagated equality bufhdr_cntxdirty^post33 = bufhdr_cntxdirty^0
		
		propagated equality a1414^post33 = a1414^0
		
		propagated equality a^post33 = a^0
		
		propagated equality firstdelblock^post33 = firstdelblock^0
		
		propagated equality tmp___03^post33 = tmp___03^0
		
		propagated equality b77^post33 = b77^0
		
		propagated equality rnode^post33 = rnode^0
		
		propagated equality ret_relfilenodeequals99^post33 = ret_relfilenodeequals99^0
		
		propagated equality ret_relfilenodeequals1313^post33 = ret_relfilenodeequals1313^0
		
		propagated equality bufhdr_tag_rnode_relnode^post33 = bufhdr_tag_rnode_relnode^0
		
		propagated equality bufhdr_tag_rnode^post33 = bufhdr_tag_rnode^0
		
		propagated equality i^post33 = i^0
		
		propagated equality bufhdr___01515^post33 = bufhdr___01515^0
		
		propagated equality r^post33 = r^0
		
		propagated equality istemp^post33 = istemp^0
		
		propagated equality tmp1^post33 = tmp1^0
		
		propagated equality a66^post33 = a66^0
		
		propagated equality nbuffers^post33 = nbuffers^0
		
	Simplified Guard

	Original rule:
	l22 -> l20 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l22 -> l20 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l22 -> l20 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l22 -> l20 : a^0'=0, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l6 : a1010^0'=a1010^post5, a1414^0'=a1414^post5, a66^0'=a66^post5, a^0'=a^post5, b1111^0'=b1111^post5, b77^0'=b77^post5, bufhdr___01515^0'=bufhdr___01515^post5, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post5, bufhdr_flags^0'=bufhdr_flags^post5, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post5, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post5, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post5, firstdelblock^0'=firstdelblock^post5, i^0'=i^post5, istemp^0'=istemp^post5, nbuffers^0'=nbuffers^post5, nlocbuffer^0'=nlocbuffer^post5, r^0'=r^post5, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post5, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post5, rnode^0'=rnode^post5, tmp1212^0'=tmp1212^post5, tmp1^0'=tmp1^post5, tmp88^0'=tmp88^post5, tmp___03^0'=tmp___03^post5, tmp___14^0'=tmp___14^post5, (b77^post4-b77^post5 == 0 /\ -b77^post4+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post4 == 0 /\ tmp1^0-tmp1^post4 == 0 /\ tmp___03^post4-tmp___03^post5 == 0 /\ -i^post5+i^post4 == 0 /\ -bufhdr_flags^post4+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post4+bufhdr_cntxdirty^0 == 0 /\ bufhdr___01515^post4-bufhdr___01515^post5 == 0 /\ istemp^0-istemp^post4 == 0 /\ r^post4-r^post5 == 0 /\ tmp___14^post4-tmp___14^post5 == 0 /\ ret_relfilenodeequals1313^post4-ret_relfilenodeequals1313^post5 == 0 /\ a^0-a^post4 == 0 /\ tmp1212^0-tmp1212^post4 == 0 /\ -a1010^post4+a1010^0 == 0 /\ nlocbuffer^post4-nlocbuffer^post5 == 0 /\ tmp___14^0-tmp___14^post4 == 0 /\ tmp1^post4-tmp1^post5 == 0 /\ -istemp^post5+istemp^post4 == 0 /\ -tmp___03^post4+tmp___03^0 == 0 /\ ret_relfilenodeequals99^post4-ret_relfilenodeequals99^post5 == 0 /\ a1010^post4-a1010^post5 == 0 /\ -nbuffers^post5+nbuffers^post4 == 0 /\ bufhdr_flags^post4-bufhdr_flags^post5 == 0 /\ -ret_relfilenodeequals1313^post4+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_tag_rnode^post4+bufhdr_tag_rnode^0 == 0 /\ rnode^post4-rnode^post5 == 0 /\ b1111^0-b1111^post4 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0 /\ -nlocbuffer^post4+nlocbuffer^0 == 0 /\ bufhdr_tag_blocknum^post4-bufhdr_tag_blocknum^post5 == 0 /\ a66^post4-a66^post5 == 0 /\ tmp1212^post4-tmp1212^post5 == 0 /\ -firstdelblock^post4+firstdelblock^0 == 0 /\ a66^0-a66^post4 == 0 /\ -firstdelblock^post5+firstdelblock^post4 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post4 == 0 /\ a1414^post4-a1414^post5 == 0 /\ bufhdr_cntxdirty^post4-bufhdr_cntxdirty^post5 == 0 /\ -a1414^post4+a1414^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post4 == 0 /\ -a^post5+a^post4 == 0 /\ -bufhdr_tag_rnode_relnode^post5+bufhdr_tag_rnode_relnode^post4 == 0 /\ -tmp88^post4+tmp88^0 == 0 /\ b1111^post4-b1111^post5 == 0 /\ nbuffers^0-nbuffers^post4 == 0 /\ -ret_relfilenodeequals99^post4+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post4 == 0 /\ tmp88^post4-tmp88^post5 == 0 /\ -bufhdr_tag_rnode^post5+bufhdr_tag_rnode^post4 == 0), cost: 1
	New rule:
	l6 -> l6 : a1010^0'=a1010^post4, a1414^0'=a1414^post4, a66^0'=a66^post4, a^0'=a^post4, b1111^0'=b1111^post4, b77^0'=b77^post4, bufhdr___01515^0'=bufhdr___01515^post4, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post4, bufhdr_flags^0'=bufhdr_flags^post4, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post4, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post4, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post4, firstdelblock^0'=firstdelblock^post4, i^0'=i^post4, istemp^0'=istemp^post4, nbuffers^0'=nbuffers^post4, nlocbuffer^0'=nlocbuffer^post4, r^0'=r^post4, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post4, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post4, rnode^0'=rnode^post4, tmp1212^0'=tmp1212^post4, tmp1^0'=tmp1^post4, tmp88^0'=tmp88^post4, tmp___03^0'=tmp___03^post4, tmp___14^0'=tmp___14^post4, (0 == 0 /\ -b77^post4+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post4 == 0 /\ tmp1^0-tmp1^post4 == 0 /\ -bufhdr_flags^post4+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post4+bufhdr_cntxdirty^0 == 0 /\ istemp^0-istemp^post4 == 0 /\ a^0-a^post4 == 0 /\ tmp1212^0-tmp1212^post4 == 0 /\ -a1010^post4+a1010^0 == 0 /\ tmp___14^0-tmp___14^post4 == 0 /\ -tmp___03^post4+tmp___03^0 == 0 /\ -ret_relfilenodeequals1313^post4+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_tag_rnode^post4+bufhdr_tag_rnode^0 == 0 /\ b1111^0-b1111^post4 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0 /\ -nlocbuffer^post4+nlocbuffer^0 == 0 /\ -firstdelblock^post4+firstdelblock^0 == 0 /\ a66^0-a66^post4 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post4 == 0 /\ -a1414^post4+a1414^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post4 == 0 /\ -tmp88^post4+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post4 == 0 /\ -ret_relfilenodeequals99^post4+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post4 == 0), cost: 1
	
		propagated equality b77^post5 = b77^post4
		
		propagated equality tmp___03^post5 = tmp___03^post4
		
		propagated equality i^post5 = i^post4
		
		propagated equality bufhdr___01515^post5 = bufhdr___01515^post4
		
		propagated equality r^post5 = r^post4
		
		propagated equality tmp___14^post5 = tmp___14^post4
		
		propagated equality ret_relfilenodeequals1313^post5 = ret_relfilenodeequals1313^post4
		
		propagated equality nlocbuffer^post5 = nlocbuffer^post4
		
		propagated equality tmp1^post5 = tmp1^post4
		
		propagated equality istemp^post5 = istemp^post4
		
		propagated equality ret_relfilenodeequals99^post5 = ret_relfilenodeequals99^post4
		
		propagated equality a1010^post5 = a1010^post4
		
		propagated equality nbuffers^post5 = nbuffers^post4
		
		propagated equality bufhdr_flags^post5 = bufhdr_flags^post4
		
		propagated equality rnode^post5 = rnode^post4
		
		propagated equality bufhdr_tag_blocknum^post5 = bufhdr_tag_blocknum^post4
		
		propagated equality a66^post5 = a66^post4
		
		propagated equality tmp1212^post5 = tmp1212^post4
		
		propagated equality firstdelblock^post5 = firstdelblock^post4
		
		propagated equality a1414^post5 = a1414^post4
		
		propagated equality bufhdr_cntxdirty^post5 = bufhdr_cntxdirty^post4
		
		propagated equality a^post5 = a^post4
		
		propagated equality bufhdr_tag_rnode_relnode^post5 = bufhdr_tag_rnode_relnode^post4
		
		propagated equality b1111^post5 = b1111^post4
		
		propagated equality tmp88^post5 = tmp88^post4
		
		propagated equality bufhdr_tag_rnode^post5 = bufhdr_tag_rnode^post4
		
	Propagated Equalities

	Original rule:
	l6 -> l6 : a1010^0'=a1010^post4, a1414^0'=a1414^post4, a66^0'=a66^post4, a^0'=a^post4, b1111^0'=b1111^post4, b77^0'=b77^post4, bufhdr___01515^0'=bufhdr___01515^post4, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post4, bufhdr_flags^0'=bufhdr_flags^post4, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post4, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post4, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post4, firstdelblock^0'=firstdelblock^post4, i^0'=i^post4, istemp^0'=istemp^post4, nbuffers^0'=nbuffers^post4, nlocbuffer^0'=nlocbuffer^post4, r^0'=r^post4, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post4, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post4, rnode^0'=rnode^post4, tmp1212^0'=tmp1212^post4, tmp1^0'=tmp1^post4, tmp88^0'=tmp88^post4, tmp___03^0'=tmp___03^post4, tmp___14^0'=tmp___14^post4, (0 == 0 /\ -b77^post4+b77^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post4 == 0 /\ tmp1^0-tmp1^post4 == 0 /\ -bufhdr_flags^post4+bufhdr_flags^0 == 0 /\ -bufhdr_cntxdirty^post4+bufhdr_cntxdirty^0 == 0 /\ istemp^0-istemp^post4 == 0 /\ a^0-a^post4 == 0 /\ tmp1212^0-tmp1212^post4 == 0 /\ -a1010^post4+a1010^0 == 0 /\ tmp___14^0-tmp___14^post4 == 0 /\ -tmp___03^post4+tmp___03^0 == 0 /\ -ret_relfilenodeequals1313^post4+ret_relfilenodeequals1313^0 == 0 /\ -bufhdr_tag_rnode^post4+bufhdr_tag_rnode^0 == 0 /\ b1111^0-b1111^post4 == 0 /\ -r^post4+r^0 == 0 /\ -i^post4+i^0 == 0 /\ -nlocbuffer^post4+nlocbuffer^0 == 0 /\ -firstdelblock^post4+firstdelblock^0 == 0 /\ a66^0-a66^post4 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post4 == 0 /\ -a1414^post4+a1414^0 == 0 /\ bufhdr___01515^0-bufhdr___01515^post4 == 0 /\ -tmp88^post4+tmp88^0 == 0 /\ nbuffers^0-nbuffers^post4 == 0 /\ -ret_relfilenodeequals99^post4+ret_relfilenodeequals99^0 == 0 /\ rnode^0-rnode^post4 == 0), cost: 1
	New rule:
	l6 -> l6 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality b77^post4 = b77^0
		
		propagated equality bufhdr_tag_blocknum^post4 = bufhdr_tag_blocknum^0
		
		propagated equality tmp1^post4 = tmp1^0
		
		propagated equality bufhdr_flags^post4 = bufhdr_flags^0
		
		propagated equality bufhdr_cntxdirty^post4 = bufhdr_cntxdirty^0
		
		propagated equality istemp^post4 = istemp^0
		
		propagated equality a^post4 = a^0
		
		propagated equality tmp1212^post4 = tmp1212^0
		
		propagated equality a1010^post4 = a1010^0
		
		propagated equality tmp___14^post4 = tmp___14^0
		
		propagated equality tmp___03^post4 = tmp___03^0
		
		propagated equality ret_relfilenodeequals1313^post4 = ret_relfilenodeequals1313^0
		
		propagated equality bufhdr_tag_rnode^post4 = bufhdr_tag_rnode^0
		
		propagated equality b1111^post4 = b1111^0
		
		propagated equality r^post4 = r^0
		
		propagated equality i^post4 = i^0
		
		propagated equality nlocbuffer^post4 = nlocbuffer^0
		
		propagated equality firstdelblock^post4 = firstdelblock^0
		
		propagated equality a66^post4 = a66^0
		
		propagated equality bufhdr_tag_rnode_relnode^post4 = bufhdr_tag_rnode_relnode^0
		
		propagated equality a1414^post4 = a1414^0
		
		propagated equality bufhdr___01515^post4 = bufhdr___01515^0
		
		propagated equality tmp88^post4 = tmp88^0
		
		propagated equality nbuffers^post4 = nbuffers^0
		
		propagated equality ret_relfilenodeequals99^post4 = ret_relfilenodeequals99^0
		
		propagated equality rnode^post4 = rnode^0
		
	Simplified Guard

	Original rule:
	l6 -> l6 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l6 -> l6 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l6 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l6 -> l6 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l13 -> l13 : a1010^0'=a1010^post26, a1414^0'=a1414^post26, a66^0'=a66^post26, a^0'=a^post26, b1111^0'=b1111^post26, b77^0'=b77^post26, bufhdr___01515^0'=bufhdr___01515^post26, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post26, bufhdr_flags^0'=bufhdr_flags^post26, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post26, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post26, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post26, firstdelblock^0'=firstdelblock^post26, i^0'=i^post26, istemp^0'=istemp^post26, nbuffers^0'=nbuffers^post26, nlocbuffer^0'=nlocbuffer^post26, r^0'=r^post26, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post26, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post26, rnode^0'=rnode^post26, tmp1212^0'=tmp1212^post26, tmp1^0'=tmp1^post26, tmp88^0'=tmp88^post26, tmp___03^0'=tmp___03^post26, tmp___14^0'=tmp___14^post26, (tmp1^post25-tmp1^post26 == 0 /\ -ret_relfilenodeequals1313^post26+ret_relfilenodeequals1313^post25 == 0 /\ a^0-a^post25 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post25 == 0 /\ a1010^0-a1010^post25 == 0 /\ bufhdr_tag_rnode_relnode^post25-bufhdr_tag_rnode_relnode^post26 == 0 /\ a1414^post25-a1414^post26 == 0 /\ istemp^0-istemp^post25 == 0 /\ -bufhdr_tag_rnode^post25+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post25 == 0 /\ -tmp1212^post26+tmp1212^post25 == 0 /\ -bufhdr_cntxdirty^post25+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post25+bufhdr_flags^0 == 0 /\ nbuffers^0-nbuffers^post25 == 0 /\ i^post25-i^post26 == 0 /\ tmp88^post25-tmp88^post26 == 0 /\ -tmp___14^post25+tmp___14^0 == 0 /\ -ret_relfilenodeequals1313^post25+ret_relfilenodeequals1313^0 == 0 /\ -a66^post26+a66^post25 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post25 == 0 /\ rnode^0-rnode^post25 == 0 /\ -bufhdr_tag_blocknum^post26+bufhdr_tag_blocknum^post25 == 0 /\ -ret_relfilenodeequals99^post26+ret_relfilenodeequals99^post25 == 0 /\ istemp^post25-istemp^post26 == 0 /\ b1111^0-b1111^post25 == 0 /\ -i^post25+i^0 == 0 /\ b77^post25-b77^post26 == 0 /\ tmp1212^0-tmp1212^post25 == 0 /\ -r^post25+r^0 == 0 /\ -a1010^post26+a1010^post25 == 0 /\ bufhdr_flags^post25-bufhdr_flags^post26 == 0 /\ tmp___14^post25-tmp___14^post26 == 0 /\ -a^post26+a^post25 == 0 /\ nlocbuffer^post25-nlocbuffer^post26 == 0 /\ -tmp1^post25+tmp1^0 == 0 /\ -a1414^post25+a1414^0 == 0 /\ -firstdelblock^post26+firstdelblock^post25 == 0 /\ -b77^post25+b77^0 == 0 /\ tmp___03^0-tmp___03^post25 == 0 /\ r^post25-r^post26 == 0 /\ bufhdr_cntxdirty^post25-bufhdr_cntxdirty^post26 == 0 /\ a66^0-a66^post25 == 0 /\ tmp___03^post25-tmp___03^post26 == 0 /\ bufhdr___01515^0-bufhdr___01515^post25 == 0 /\ -firstdelblock^post25+firstdelblock^0 == 0 /\ -bufhdr___01515^post26+bufhdr___01515^post25 == 0 /\ -tmp88^post25+tmp88^0 == 0 /\ rnode^post25-rnode^post26 == 0 /\ bufhdr_tag_rnode^post25-bufhdr_tag_rnode^post26 == 0 /\ b1111^post25-b1111^post26 == 0 /\ -nbuffers^post26+nbuffers^post25 == 0 /\ -nlocbuffer^post25+nlocbuffer^0 == 0), cost: 1
	New rule:
	l13 -> l13 : a1010^0'=a1010^post25, a1414^0'=a1414^post25, a66^0'=a66^post25, a^0'=a^post25, b1111^0'=b1111^post25, b77^0'=b77^post25, bufhdr___01515^0'=bufhdr___01515^post25, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post25, bufhdr_flags^0'=bufhdr_flags^post25, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post25, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post25, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post25, firstdelblock^0'=firstdelblock^post25, i^0'=i^post25, istemp^0'=istemp^post25, nbuffers^0'=nbuffers^post25, nlocbuffer^0'=nlocbuffer^post25, r^0'=r^post25, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post25, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post25, rnode^0'=rnode^post25, tmp1212^0'=tmp1212^post25, tmp1^0'=tmp1^post25, tmp88^0'=tmp88^post25, tmp___03^0'=tmp___03^post25, tmp___14^0'=tmp___14^post25, (0 == 0 /\ a^0-a^post25 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post25 == 0 /\ a1010^0-a1010^post25 == 0 /\ istemp^0-istemp^post25 == 0 /\ -bufhdr_tag_rnode^post25+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post25 == 0 /\ -bufhdr_cntxdirty^post25+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post25+bufhdr_flags^0 == 0 /\ nbuffers^0-nbuffers^post25 == 0 /\ -tmp___14^post25+tmp___14^0 == 0 /\ -ret_relfilenodeequals1313^post25+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post25 == 0 /\ rnode^0-rnode^post25 == 0 /\ b1111^0-b1111^post25 == 0 /\ -i^post25+i^0 == 0 /\ tmp1212^0-tmp1212^post25 == 0 /\ -r^post25+r^0 == 0 /\ -tmp1^post25+tmp1^0 == 0 /\ -a1414^post25+a1414^0 == 0 /\ -b77^post25+b77^0 == 0 /\ tmp___03^0-tmp___03^post25 == 0 /\ a66^0-a66^post25 == 0 /\ bufhdr___01515^0-bufhdr___01515^post25 == 0 /\ -firstdelblock^post25+firstdelblock^0 == 0 /\ -tmp88^post25+tmp88^0 == 0 /\ -nlocbuffer^post25+nlocbuffer^0 == 0), cost: 1
	
		propagated equality tmp1^post26 = tmp1^post25
		
		propagated equality ret_relfilenodeequals1313^post26 = ret_relfilenodeequals1313^post25
		
		propagated equality bufhdr_tag_rnode_relnode^post26 = bufhdr_tag_rnode_relnode^post25
		
		propagated equality a1414^post26 = a1414^post25
		
		propagated equality tmp1212^post26 = tmp1212^post25
		
		propagated equality i^post26 = i^post25
		
		propagated equality tmp88^post26 = tmp88^post25
		
		propagated equality a66^post26 = a66^post25
		
		propagated equality bufhdr_tag_blocknum^post26 = bufhdr_tag_blocknum^post25
		
		propagated equality ret_relfilenodeequals99^post26 = ret_relfilenodeequals99^post25
		
		propagated equality istemp^post26 = istemp^post25
		
		propagated equality b77^post26 = b77^post25
		
		propagated equality a1010^post26 = a1010^post25
		
		propagated equality bufhdr_flags^post26 = bufhdr_flags^post25
		
		propagated equality tmp___14^post26 = tmp___14^post25
		
		propagated equality a^post26 = a^post25
		
		propagated equality nlocbuffer^post26 = nlocbuffer^post25
		
		propagated equality firstdelblock^post26 = firstdelblock^post25
		
		propagated equality r^post26 = r^post25
		
		propagated equality bufhdr_cntxdirty^post26 = bufhdr_cntxdirty^post25
		
		propagated equality tmp___03^post26 = tmp___03^post25
		
		propagated equality bufhdr___01515^post26 = bufhdr___01515^post25
		
		propagated equality rnode^post26 = rnode^post25
		
		propagated equality bufhdr_tag_rnode^post26 = bufhdr_tag_rnode^post25
		
		propagated equality b1111^post26 = b1111^post25
		
		propagated equality nbuffers^post26 = nbuffers^post25
		
	Propagated Equalities

	Original rule:
	l13 -> l13 : a1010^0'=a1010^post25, a1414^0'=a1414^post25, a66^0'=a66^post25, a^0'=a^post25, b1111^0'=b1111^post25, b77^0'=b77^post25, bufhdr___01515^0'=bufhdr___01515^post25, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^post25, bufhdr_flags^0'=bufhdr_flags^post25, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^post25, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^post25, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^post25, firstdelblock^0'=firstdelblock^post25, i^0'=i^post25, istemp^0'=istemp^post25, nbuffers^0'=nbuffers^post25, nlocbuffer^0'=nlocbuffer^post25, r^0'=r^post25, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^post25, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^post25, rnode^0'=rnode^post25, tmp1212^0'=tmp1212^post25, tmp1^0'=tmp1^post25, tmp88^0'=tmp88^post25, tmp___03^0'=tmp___03^post25, tmp___14^0'=tmp___14^post25, (0 == 0 /\ a^0-a^post25 == 0 /\ ret_relfilenodeequals99^0-ret_relfilenodeequals99^post25 == 0 /\ a1010^0-a1010^post25 == 0 /\ istemp^0-istemp^post25 == 0 /\ -bufhdr_tag_rnode^post25+bufhdr_tag_rnode^0 == 0 /\ bufhdr_tag_blocknum^0-bufhdr_tag_blocknum^post25 == 0 /\ -bufhdr_cntxdirty^post25+bufhdr_cntxdirty^0 == 0 /\ -bufhdr_flags^post25+bufhdr_flags^0 == 0 /\ nbuffers^0-nbuffers^post25 == 0 /\ -tmp___14^post25+tmp___14^0 == 0 /\ -ret_relfilenodeequals1313^post25+ret_relfilenodeequals1313^0 == 0 /\ bufhdr_tag_rnode_relnode^0-bufhdr_tag_rnode_relnode^post25 == 0 /\ rnode^0-rnode^post25 == 0 /\ b1111^0-b1111^post25 == 0 /\ -i^post25+i^0 == 0 /\ tmp1212^0-tmp1212^post25 == 0 /\ -r^post25+r^0 == 0 /\ -tmp1^post25+tmp1^0 == 0 /\ -a1414^post25+a1414^0 == 0 /\ -b77^post25+b77^0 == 0 /\ tmp___03^0-tmp___03^post25 == 0 /\ a66^0-a66^post25 == 0 /\ bufhdr___01515^0-bufhdr___01515^post25 == 0 /\ -firstdelblock^post25+firstdelblock^0 == 0 /\ -tmp88^post25+tmp88^0 == 0 /\ -nlocbuffer^post25+nlocbuffer^0 == 0), cost: 1
	New rule:
	l13 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	
		propagated equality a^post25 = a^0
		
		propagated equality ret_relfilenodeequals99^post25 = ret_relfilenodeequals99^0
		
		propagated equality a1010^post25 = a1010^0
		
		propagated equality istemp^post25 = istemp^0
		
		propagated equality bufhdr_tag_rnode^post25 = bufhdr_tag_rnode^0
		
		propagated equality bufhdr_tag_blocknum^post25 = bufhdr_tag_blocknum^0
		
		propagated equality bufhdr_cntxdirty^post25 = bufhdr_cntxdirty^0
		
		propagated equality bufhdr_flags^post25 = bufhdr_flags^0
		
		propagated equality nbuffers^post25 = nbuffers^0
		
		propagated equality tmp___14^post25 = tmp___14^0
		
		propagated equality ret_relfilenodeequals1313^post25 = ret_relfilenodeequals1313^0
		
		propagated equality bufhdr_tag_rnode_relnode^post25 = bufhdr_tag_rnode_relnode^0
		
		propagated equality rnode^post25 = rnode^0
		
		propagated equality b1111^post25 = b1111^0
		
		propagated equality i^post25 = i^0
		
		propagated equality tmp1212^post25 = tmp1212^0
		
		propagated equality r^post25 = r^0
		
		propagated equality tmp1^post25 = tmp1^0
		
		propagated equality a1414^post25 = a1414^0
		
		propagated equality b77^post25 = b77^0
		
		propagated equality tmp___03^post25 = tmp___03^0
		
		propagated equality a66^post25 = a66^0
		
		propagated equality bufhdr___01515^post25 = bufhdr___01515^0
		
		propagated equality firstdelblock^post25 = firstdelblock^0
		
		propagated equality tmp88^post25 = tmp88^0
		
		propagated equality nlocbuffer^post25 = nlocbuffer^0
		
	Simplified Guard

	Original rule:
	l13 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, 0 == 0, cost: 1
	New rule:
	l13 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l13 : a1010^0'=a1010^0, a1414^0'=a1414^0, a66^0'=a66^0, a^0'=a^0, b1111^0'=b1111^0, b77^0'=b77^0, bufhdr___01515^0'=bufhdr___01515^0, bufhdr_cntxdirty^0'=bufhdr_cntxdirty^0, bufhdr_flags^0'=bufhdr_flags^0, bufhdr_tag_blocknum^0'=bufhdr_tag_blocknum^0, bufhdr_tag_rnode^0'=bufhdr_tag_rnode^0, bufhdr_tag_rnode_relnode^0'=bufhdr_tag_rnode_relnode^0, firstdelblock^0'=firstdelblock^0, i^0'=i^0, istemp^0'=istemp^0, nbuffers^0'=nbuffers^0, nlocbuffer^0'=nlocbuffer^0, r^0'=r^0, ret_relfilenodeequals1313^0'=ret_relfilenodeequals1313^0, ret_relfilenodeequals99^0'=ret_relfilenodeequals99^0, rnode^0'=rnode^0, tmp1212^0'=tmp1212^0, tmp1^0'=tmp1^0, tmp88^0'=tmp88^0, tmp___03^0'=tmp___03^0, tmp___14^0'=tmp___14^0, T, cost: 1
	New rule:
	l13 -> l13 : T, cost: 1

Step with 63

	Trace

	63[T]
	
	Blocked

	[{}, {}]

Step with 60

	Trace

	63[T], 60[(2-istemp^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 50

	Trace

	63[T], 60[(2-istemp^0 <= 0)], 50[T]
	
	Blocked

	[{}, {}, {}, {}]

Step with 46

	Trace

	63[T], 60[(2-istemp^0 <= 0)], 50[T], 46[T]
	
	Blocked

	[{}, {}, {}, {}, {}]

Step with 47

	Trace

	63[T], 60[(2-istemp^0 <= 0)], 50[T], 46[T], 47[(1+nbuffers^0-i^0 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Step with 65

	Trace

	63[T], 60[(2-istemp^0 <= 0)], 50[T], 46[T], 47[(1+nbuffers^0-i^0 <= 0)], 65[T]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}]

Nonterm

Start location: l22
Program variables: a1010^0 a1414^0 a66^0 a^0 b1111^0 b77^0 bufhdr___01515^0 bufhdr_cntxdirty^0 bufhdr_flags^0 bufhdr_tag_blocknum^0 bufhdr_tag_rnode^0 bufhdr_tag_rnode_relnode^0 firstdelblock^0 i^0 istemp^0 nbuffers^0 nlocbuffer^0 r^0 ret_relfilenodeequals1313^0 ret_relfilenodeequals99^0 rnode^0 tmp1212^0 tmp1^0 tmp88^0 tmp___03^0 tmp___14^0
  36: l0 -> l1 : T, cost: 1
  37: l2 -> l3 : T, cost: 1
  58: l3 -> l6 : -i^0+nlocbuffer^0 <= 0, cost: 1
  59: l3 -> l18 : a66^0'=bufhdr_tag_rnode^0, b77^0'=rnode^0, ret_relfilenodeequals99^0'=tmp88^post28, tmp1^0'=tmp88^post28, tmp88^0'=tmp88^post28, 1+i^0-nlocbuffer^0 <= 0, cost: 1
  38: l4 -> l5 : i^0'=1+i^0, T, cost: 1
  46: l5 -> l12 : T, cost: 1
  64: l6 -> l6 : T, cost: 1
  39: l8 -> l4 : bufhdr___01515^0'=bufhdr___01515^post6, bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post6, T, cost: 1
  40: l8 -> l9 : a1414^0'=a1414^post7, T, cost: 1
  51: l9 -> l11 : a1010^0'=bufhdr_tag_rnode^0, b1111^0'=rnode^0, ret_relfilenodeequals1313^0'=tmp___14^post18, tmp1212^0'=tmp___14^post18, tmp___14^0'=tmp___14^post18, T, cost: 1
  41: l10 -> l4 : 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
  42: l10 -> l8 : -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
  43: l11 -> l4 : (tmp___14^0 <= 0 /\ tmp___14^0 == 0 /\ -tmp___14^0 <= 0), cost: 1
  44: l11 -> l10 : 1-tmp___14^0 <= 0, cost: 1
  45: l11 -> l10 : 1+tmp___14^0 <= 0, cost: 1
  47: l12 -> l13 : r^0'=0, 1+nbuffers^0-i^0 <= 0, cost: 1
  48: l12 -> l9 : tmp___03^0'=tmp___03^post15, -nbuffers^0+i^0 <= 0, cost: 1
  65: l13 -> l13 : T, cost: 1
  66: l13 -> LoAT_sink : -1+n >= 0, cost: NONTERM
  49: l14 -> l15 : T, cost: 1
  50: l15 -> l5 : a^0'=0, i^0'=1, T, cost: 1
  52: l16 -> l2 : i^0'=1+i^0, T, cost: 1
  53: l17 -> l16 : 1+bufhdr_tag_blocknum^0-firstdelblock^0 <= 0, cost: 1
  54: l17 -> l16 : bufhdr_cntxdirty^0'=0, bufhdr_flags^0'=bufhdr_flags^post21, bufhdr_tag_rnode_relnode^0'=1, -bufhdr_tag_blocknum^0+firstdelblock^0 <= 0, cost: 1
  55: l18 -> l16 : (-tmp1^0 <= 0 /\ -tmp1^0 == 0 /\ tmp1^0 <= 0), cost: 1
  56: l18 -> l17 : 1-tmp1^0 <= 0, cost: 1
  57: l18 -> l17 : 1+tmp1^0 <= 0, cost: 1
  60: l20 -> l15 : 2-istemp^0 <= 0, cost: 1
  61: l20 -> l15 : istemp^0 <= 0, cost: 1
  62: l20 -> l2 : i^0'=0, (1-istemp^0 <= 0 /\ 1-istemp^0 == 0 /\ -1+istemp^0 <= 0), cost: 1
  63: l22 -> l20 : a^0'=0, istemp^0'=istemp^post32, nbuffers^0'=nbuffers^post32, nlocbuffer^0'=nlocbuffer^post32, r^0'=0, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l13 -> l13 : T, cost: 1
	New rule:
	l13 -> LoAT_sink : -1+n >= 0, cost: NONTERM

		Replacement map: {}

Step with 66

	Trace

	63[T], 60[(2-istemp^0 <= 0)], 50[T], 46[T], 47[(1+nbuffers^0-i^0 <= 0)], 66[-1+n >= 0]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {66[T]}]

Refute

	Counterexample

	[ a1010^0=0 a1414^0=0 a66^0=0 a^0=0 b1111^0=0 b77^0=0 bufhdr___01515^0=0 bufhdr_cntxdirty^0=0 bufhdr_flags^0=0 bufhdr_tag_blocknum^0=0 bufhdr_tag_rnode^0=0 bufhdr_tag_rnode_relnode^0=0 firstdelblock^0=0 i^0=0 istemp^0=2 nbuffers^0=0 nlocbuffer^0=0 r^0=0 ret_relfilenodeequals1313^0=0 ret_relfilenodeequals99^0=0 rnode^0=0 tmp1212^0=0 tmp1^0=0 tmp88^0=0 tmp___03^0=0 tmp___14^0=0 ] 63 [ a1010^0=0 a1414^0=0 a66^0=0 a^0=0 b1111^0=0 b77^0=0 bufhdr___01515^0=0 bufhdr_cntxdirty^0=0 bufhdr_flags^0=0 bufhdr_tag_blocknum^0=0 bufhdr_tag_rnode^0=0 bufhdr_tag_rnode_relnode^0=0 firstdelblock^0=0 i^0=0 istemp^0=2 nbuffers^0=0 nlocbuffer^0=0 r^0=0 ret_relfilenodeequals1313^0=0 ret_relfilenodeequals99^0=0 rnode^0=0 tmp1212^0=0 tmp1^0=0 tmp88^0=0 tmp___03^0=0 tmp___14^0=0 ] 60 [ a1010^0=0 a1414^0=0 a66^0=0 a^0=0 b1111^0=0 b77^0=0 bufhdr___01515^0=0 bufhdr_cntxdirty^0=0 bufhdr_flags^0=0 bufhdr_tag_blocknum^0=0 bufhdr_tag_rnode^0=0 bufhdr_tag_rnode_relnode^0=0 firstdelblock^0=0 i^0=1 istemp^0=2 nbuffers^0=0 nlocbuffer^0=0 r^0=0 ret_relfilenodeequals1313^0=0 ret_relfilenodeequals99^0=0 rnode^0=0 tmp1212^0=0 tmp1^0=0 tmp88^0=0 tmp___03^0=0 tmp___14^0=0 ] 50 [ a1010^0=0 a1414^0=0 a66^0=0 a^0=0 b1111^0=0 b77^0=0 bufhdr___01515^0=0 bufhdr_cntxdirty^0=0 bufhdr_flags^0=0 bufhdr_tag_blocknum^0=0 bufhdr_tag_rnode^0=0 bufhdr_tag_rnode_relnode^0=0 firstdelblock^0=0 i^0=1 istemp^0=2 nbuffers^0=0 nlocbuffer^0=0 r^0=0 ret_relfilenodeequals1313^0=0 ret_relfilenodeequals99^0=0 rnode^0=0 tmp1212^0=0 tmp1^0=0 tmp88^0=0 tmp___03^0=0 tmp___14^0=0 ] 46 [ a1010^0=0 a1414^0=0 a66^0=0 a^0=0 b1111^0=0 b77^0=0 bufhdr___01515^0=0 bufhdr_cntxdirty^0=0 bufhdr_flags^0=0 bufhdr_tag_blocknum^0=0 bufhdr_tag_rnode^0=0 bufhdr_tag_rnode_relnode^0=0 firstdelblock^0=0 i^0=1 istemp^0=2 nbuffers^0=0 nlocbuffer^0=0 r^0=0 ret_relfilenodeequals1313^0=0 ret_relfilenodeequals99^0=0 rnode^0=0 tmp1212^0=0 tmp1^0=0 tmp88^0=0 tmp___03^0=0 tmp___14^0=0 ] 47 [ a1010^0=0 a1414^0=0 a66^0=0 a^0=a^0 b1111^0=0 b77^0=0 bufhdr___01515^0=0 bufhdr_cntxdirty^0=0 bufhdr_flags^0=0 bufhdr_tag_blocknum^0=0 bufhdr_tag_rnode^0=0 bufhdr_tag_rnode_relnode^0=0 firstdelblock^0=0 i^0=0 istemp^0=istemp^0 nbuffers^0=nbuffers^0 nlocbuffer^0=nlocbuffer^0 r^0=r^0 ret_relfilenodeequals1313^0=0 ret_relfilenodeequals99^0=0 rnode^0=0 tmp1212^0=0 tmp1^0=0 tmp88^0=0 tmp___03^0=0 tmp___14^0=0 ] 66
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
