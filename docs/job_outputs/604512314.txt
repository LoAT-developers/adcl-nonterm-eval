unknown

Initial ITS

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : x > 0, cost: 1
   9: [2] -> [9] : x <= 0, cost: 1
   2: [3] -> [4] : y'=0, T, cost: 1
   3: [4] -> [5] : y-x < 0, cost: 1
   6: [4] -> [7] : y-x >= 0, cost: 1
   4: [5] -> [6] : y'=1+y, T, cost: 1
   5: [6] -> [4] : T, cost: 1
   7: [7] -> [8] : x'=-1+x, T, cost: 1
   8: [8] -> [2] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   9: [2] -> [9] : x <= 0, cost: 1
  10: [2] -> [4] : y'=0, x > 0, cost: 1
  13: [4] -> [4] : y'=1+y, y-x < 0, cost: 1
  14: [4] -> [2] : x'=-1+x, y-x >= 0, cost: 1

	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[2] -> [3] : x > 0, cost: 1
	Second rule:
	[3] -> [4] : y'=0, T, cost: 1
	New rule:
	[2] -> [4] : y'=0, x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 1 2
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[4] -> [5] : y-x < 0, cost: 1
	Second rule:
	[5] -> [6] : y'=1+y, T, cost: 1
	New rule:
	[4] -> [6] : y'=1+y, y-x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[4] -> [7] : y-x >= 0, cost: 1
	Second rule:
	[7] -> [8] : x'=-1+x, T, cost: 1
	New rule:
	[4] -> [8] : x'=-1+x, y-x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[4] -> [6] : y'=1+y, y-x < 0, cost: 1
	Second rule:
	[6] -> [4] : T, cost: 1
	New rule:
	[4] -> [4] : y'=1+y, y-x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 11
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[4] -> [8] : x'=-1+x, y-x >= 0, cost: 1
	Second rule:
	[8] -> [2] : T, cost: 1
	New rule:
	[4] -> [2] : x'=-1+x, y-x >= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 12

Step with 0

	Trace

	0[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	0[T], 9[(x <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	0[T]
	
	Blocked

	[{}, {9[T]}]

Step with 10

	Trace

	0[T], 10[(x > 0)]
	
	Blocked

	[{}, {9[T]}, {}]

Step with 13

	Trace

	0[T], 10[(x > 0)], 13[(y-x < 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   9: [2] -> [9] : x <= 0, cost: 1
  10: [2] -> [4] : y'=0, x > 0, cost: 1
  13: [4] -> [4] : y'=1+y, y-x < 0, cost: 1
  14: [4] -> [2] : x'=-1+x, y-x >= 0, cost: 1
  15: [4] -> [4] : y'=n+y, (1-n-y+x > 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[4] -> [4] : y'=1+y, (y-x < 0), cost: 1
	New rule:
	[4] -> [4] : y'=n+y, (1-n-y+x > 0 /\ -1+n >= 0), cost: 1

		-y+x > 0 [0]: montonic decrease yields 1-n-y+x > 0
		
		-y+x > 0 [1]: eventual increase yields (1 <= 0 /\ -y+x > 0)
		
		Replacement map: {-y+x > 0 -> 1-n-y+x > 0}

	Trace

	0[T], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {13[T], 15[T]}]

Step with 14

	Trace

	0[T], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)], 14[(y-x >= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {13[T], 15[T]}, {}]

Accelerate

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   9: [2] -> [9] : x <= 0, cost: 1
  10: [2] -> [4] : y'=0, x > 0, cost: 1
  16: [2] -> [2] : x'=-n2+x, y'=1-n2+x, (-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0), cost: 1
  13: [4] -> [4] : y'=1+y, y-x < 0, cost: 1
  14: [4] -> [2] : x'=-1+x, y-x >= 0, cost: 1
  15: [4] -> [4] : y'=n+y, (1-n-y+x > 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[2] -> [2] : x'=-1+x, y'=x, (-1+x >= 0 /\ x > 0), cost: 1
	New rule:
	[2] -> [2] : x'=-n2+x, y'=1-n2+x, (-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0), cost: 1

		-1+x >= 0 [0]: montonic decrease yields -n2+x >= 0
		
		-1+x >= 0 [1]: eventual increase yields (1 <= 0 /\ -1+x >= 0)
		
		x > 0 [0]: montonic decrease yields 1-n2+x > 0
		
		x > 0 [1]: eventual increase yields (1 <= 0 /\ x > 0)
		
		Replacement map: {-1+x >= 0 -> -n2+x >= 0, x > 0 -> 1-n2+x > 0}

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)]
	
	Blocked

	[{}, {9[T]}, {16[T]}]

Step with 9

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 9[(x <= 0)]
	
	Blocked

	[{}, {9[T]}, {16[T]}, {}]

Backtrack

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}]

Step with 10

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 10[(x > 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}, {}]

Step with 15

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}, {14[T]}, {15[T]}]

Step with 13

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)], 13[(y-x < 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}, {14[T]}, {15[T]}, {}]

Covered

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}, {14[T]}, {13[T], 15[T]}]

Step with 14

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)], 14[(y-x >= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}, {14[T]}, {13[T], 15[T]}, {}]

Covered

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}, {14[T]}, {13[T], 14[T], 15[T]}]

Backtrack

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 10[(x > 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}, {14[T], 15[T]}]

Step with 13

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 10[(x > 0)], 13[(y-x < 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}, {14[T], 15[T]}, {}]

Covered

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)], 10[(x > 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 16[T]}, {13[T], 14[T], 15[T]}]

Backtrack

	Trace

	0[T], 16[(-1+n2 >= 0 /\ 1-n2+x > 0 /\ -n2+x >= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 10[T], 16[T]}]

Backtrack

	Trace

	0[T]
	
	Blocked

	[{}, {9[T], 16[T]}]

Step with 10

	Trace

	0[T], 10[(x > 0)]
	
	Blocked

	[{}, {9[T], 16[T]}, {}]

Step with 13

	Trace

	0[T], 10[(x > 0)], 13[(y-x < 0)]
	
	Blocked

	[{}, {9[T], 16[T]}, {}, {}]

Covered

	Trace

	0[T], 10[(x > 0)]
	
	Blocked

	[{}, {9[T], 16[T]}, {13[T]}]

Step with 15

	Trace

	0[T], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 16[T]}, {13[T], 14[T]}, {15[T]}]

Step with 13

	Trace

	0[T], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)], 13[(y-x < 0)]
	
	Blocked

	[{}, {9[T], 16[T]}, {13[T], 14[T]}, {15[T]}, {}]

Covered

	Trace

	0[T], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 16[T]}, {13[T], 14[T]}, {13[T], 15[T]}]

Step with 14

	Trace

	0[T], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)], 14[(y-x >= 0)]
	
	Blocked

	[{}, {9[T], 16[T]}, {13[T], 14[T]}, {13[T], 15[T]}, {}]

Covered

	Trace

	0[T], 10[(x > 0)], 15[(1-n-y+x > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 16[T]}, {13[T], 14[T]}, {13[T], 14[T], 15[T]}]

Backtrack

	Trace

	0[T], 10[(x > 0)]
	
	Blocked

	[{}, {9[T], 16[T]}, {13[T], 14[T], 15[T]}]

Backtrack

	Trace

	0[T]
	
	Blocked

	[{}, {9[T], 10[T], 16[T]}]

Backtrack

	Trace

	Blocked

	[{0[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
