WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_New -> f160_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (28-arg3P0 == 0 /\ arg1P0 > 0 /\ 27-arg2P0 == 0), cost: 1
   1: f160_0_main_LE -> f160_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-3+arg1P1 > 0 /\ -1+arg2-arg2P1 == 0 /\ arg1 > 0 /\ -3-arg1+arg1P1 <= 0 /\ arg3 > 0 /\ arg2-arg3P1 == 0), cost: 1
   2: f160_0_main_LE -> f167_0_length_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ -1+arg3 < 0 /\ arg1 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
   3: f167_0_length_InvokeMethod -> f167_0_length_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (arg1 > 0 /\ 1+arg1P3 > 0 /\ -1-arg1P3+arg1 >= 0), cost: 1
   4: __init -> f1_0_main_New : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_New -> f160_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (28-arg3P0 == 0 /\ arg1P0 > 0 /\ 27-arg2P0 == 0), cost: 1
New rule:
f1_0_main_New -> f160_0_main_LE : arg2'=27, arg1'=arg1P0, arg3'=28, arg1P0 > 0, cost: 1

Applied preprocessing
Original rule:
f160_0_main_LE -> f160_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-3+arg1P1 > 0 /\ -1+arg2-arg2P1 == 0 /\ arg1 > 0 /\ -3-arg1+arg1P1 <= 0 /\ arg3 > 0 /\ arg2-arg3P1 == 0), cost: 1
New rule:
f160_0_main_LE -> f160_0_main_LE : arg2'=-1+arg2, arg1'=arg1P1, arg3'=arg2, (-3+arg1P1 > 0 /\ -3-arg1+arg1P1 <= 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f160_0_main_LE -> f167_0_length_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ -1+arg3 < 0 /\ arg1 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
New rule:
f160_0_main_LE -> f167_0_length_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1-arg3 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f167_0_length_InvokeMethod -> f167_0_length_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (arg1 > 0 /\ 1+arg1P3 > 0 /\ -1-arg1P3+arg1 >= 0), cost: 1
New rule:
f167_0_length_InvokeMethod -> f167_0_length_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1-arg1P3+arg1 >= 0), cost: 1

Simplified rules
Start location: __init
   5: f1_0_main_New -> f160_0_main_LE : arg2'=27, arg1'=arg1P0, arg3'=28, arg1P0 > 0, cost: 1
   6: f160_0_main_LE -> f160_0_main_LE : arg2'=-1+arg2, arg1'=arg1P1, arg3'=arg2, (-3+arg1P1 > 0 /\ -3-arg1+arg1P1 <= 0 /\ arg3 > 0), cost: 1
   7: f160_0_main_LE -> f167_0_length_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1-arg3 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
   8: f167_0_length_InvokeMethod -> f167_0_length_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1-arg1P3+arg1 >= 0), cost: 1
   4: __init -> f1_0_main_New : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied acceleration
Original rule:
f160_0_main_LE -> f160_0_main_LE : arg2'=-1+arg2, arg1'=arg1P1, arg3'=arg2, (-3+arg1P1 > 0 /\ -3-arg1+arg1P1 <= 0 /\ arg3 > 0), cost: 1
New rule:
f160_0_main_LE -> f160_0_main_LE : arg2'=-n+arg2, arg1'=arg1P1, arg3'=1-n+arg2, (-3+arg1P1 > 0 /\ 3+arg1-arg1P1 >= 0 /\ arg3 > 0 /\ 2-n+arg2 > 0 /\ -1+n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PfDBgF.txt

Applied instantiation
Original rule:
f160_0_main_LE -> f160_0_main_LE : arg2'=-n+arg2, arg1'=arg1P1, arg3'=1-n+arg2, (-3+arg1P1 > 0 /\ 3+arg1-arg1P1 >= 0 /\ arg3 > 0 /\ 2-n+arg2 > 0 /\ -1+n >= 0), cost: n
New rule:
f160_0_main_LE -> f160_0_main_LE : arg2'=-1, arg1'=arg1P1, arg3'=0, (1 > 0 /\ -3+arg1P1 > 0 /\ arg2 >= 0 /\ 3+arg1-arg1P1 >= 0 /\ arg3 > 0), cost: 1+arg2

Applied simplification
Original rule:
f160_0_main_LE -> f160_0_main_LE : arg2'=-1, arg1'=arg1P1, arg3'=0, (1 > 0 /\ -3+arg1P1 > 0 /\ arg2 >= 0 /\ 3+arg1-arg1P1 >= 0 /\ arg3 > 0), cost: 1+arg2
New rule:
f160_0_main_LE -> f160_0_main_LE : arg2'=-1, arg1'=arg1P1, arg3'=0, (-3+arg1P1 > 0 /\ arg2 >= 0 /\ 3+arg1-arg1P1 >= 0 /\ arg3 > 0), cost: 1+arg2

Applied deletion
Removed the following rules: 6

Accelerated simple loops
Start location: __init
   5: f1_0_main_New -> f160_0_main_LE : arg2'=27, arg1'=arg1P0, arg3'=28, arg1P0 > 0, cost: 1
   7: f160_0_main_LE -> f167_0_length_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1-arg3 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
  10: f160_0_main_LE -> f160_0_main_LE : arg2'=-1, arg1'=arg1P1, arg3'=0, (-3+arg1P1 > 0 /\ arg2 >= 0 /\ 3+arg1-arg1P1 >= 0 /\ arg3 > 0), cost: 1+arg2
   8: f167_0_length_InvokeMethod -> f167_0_length_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1-arg1P3+arg1 >= 0), cost: 1
   4: __init -> f1_0_main_New : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_New -> f160_0_main_LE : arg2'=27, arg1'=arg1P0, arg3'=28, arg1P0 > 0, cost: 1
Second rule:
f160_0_main_LE -> f160_0_main_LE : arg2'=-1, arg1'=arg1P1, arg3'=0, (-3+arg1P1 > 0 /\ arg2 >= 0 /\ 3+arg1-arg1P1 >= 0 /\ arg3 > 0), cost: 1+arg2
New rule:
f1_0_main_New -> f160_0_main_LE : arg2'=-1, arg1'=arg1P1, arg3'=0, -3+arg1P1 > 0, cost: 29

Applied deletion
Removed the following rules: 10

Applied chaining
First rule:
f160_0_main_LE -> f167_0_length_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1-arg3 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
Second rule:
f167_0_length_InvokeMethod -> f167_0_length_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1-arg1P3+arg1 >= 0), cost: 1
New rule:
f160_0_main_LE -> f167_0_length_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (2+arg1P3-arg1 <= 0 /\ 1-arg3 > 0 /\ 1+arg1P3 > 0), cost: 2

Applied deletion
Removed the following rules: 8

Chained accelerated rules with incoming rules
Start location: __init
   5: f1_0_main_New -> f160_0_main_LE : arg2'=27, arg1'=arg1P0, arg3'=28, arg1P0 > 0, cost: 1
  11: f1_0_main_New -> f160_0_main_LE : arg2'=-1, arg1'=arg1P1, arg3'=0, -3+arg1P1 > 0, cost: 29
   7: f160_0_main_LE -> f167_0_length_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1-arg3 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
  12: f160_0_main_LE -> f167_0_length_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (2+arg1P3-arg1 <= 0 /\ 1-arg3 > 0 /\ 1+arg1P3 > 0), cost: 2
   4: __init -> f1_0_main_New : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

