NO

Initial ITS

Start location: l4
Program variables: x^0 y^0
   0: l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (x^post1 == 0 /\ y^post1 == 0), cost: 1
   1: l1 -> l2 : x^0'=x^post2, y^0'=y^post2, (1-x^0+y^0 <= 0 /\ -y^post2+y^0 == 0 /\ x^0-x^post2 == 0), cost: 1
   2: l1 -> l3 : x^0'=x^post3, y^0'=y^post3, (-1-y^0+y^post3 == 0 /\ -1-x^0+x^post3 == 0), cost: 1
   3: l3 -> l1 : x^0'=x^post4, y^0'=y^post4, (-y^post4+y^0 == 0 /\ -x^post4+x^0 == 0), cost: 1
   4: l4 -> l0 : x^0'=x^post5, y^0'=y^post5, (-y^post5+y^0 == 0 /\ x^0-x^post5 == 0), cost: 1

Chained Linear Paths

Start location: l4
Program variables: x^0 y^0
   1: l1 -> l2 : x^0'=x^post2, y^0'=y^post2, (1-x^0+y^0 <= 0 /\ -y^post2+y^0 == 0 /\ x^0-x^post2 == 0), cost: 1
   6: l1 -> l1 : x^0'=x^post4, y^0'=y^post4, (-1-y^0+y^post3 == 0 /\ -y^post4+y^post3 == 0 /\ -1-x^0+x^post3 == 0 /\ -x^post4+x^post3 == 0), cost: 1
   5: l4 -> l1 : x^0'=x^post1, y^0'=y^post1, (x^post1 == 0 /\ -y^post5+y^0 == 0 /\ y^post1 == 0 /\ x^0-x^post5 == 0), cost: 1

	Eliminating location l0 by chaining:

	Applied chaining

	First rule:
	l4 -> l0 : x^0'=x^post5, y^0'=y^post5, (-y^post5+y^0 == 0 /\ x^0-x^post5 == 0), cost: 1
	Second rule:
	l0 -> l1 : x^0'=x^post1, y^0'=y^post1, (x^post1 == 0 /\ y^post1 == 0), cost: 1
	New rule:
	l4 -> l1 : x^0'=x^post1, y^0'=y^post1, (x^post1 == 0 /\ -y^post5+y^0 == 0 /\ y^post1 == 0 /\ x^0-x^post5 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 4
	
	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l1 -> l3 : x^0'=x^post3, y^0'=y^post3, (-1-y^0+y^post3 == 0 /\ -1-x^0+x^post3 == 0), cost: 1
	Second rule:
	l3 -> l1 : x^0'=x^post4, y^0'=y^post4, (-y^post4+y^0 == 0 /\ -x^post4+x^0 == 0), cost: 1
	New rule:
	l1 -> l1 : x^0'=x^post4, y^0'=y^post4, (-1-y^0+y^post3 == 0 /\ -y^post4+y^post3 == 0 /\ -1-x^0+x^post3 == 0 /\ -x^post4+x^post3 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3

Simplified Transitions

Start location: l4
Program variables: x^0 y^0
   7: l1 -> l2 : 1-x^0+y^0 <= 0, cost: 1
   9: l1 -> l1 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1
   8: l4 -> l1 : x^0'=0, y^0'=0, T, cost: 1

	Propagated Equalities

	Original rule:
	l1 -> l2 : x^0'=x^post2, y^0'=y^post2, (1-x^0+y^0 <= 0 /\ -y^post2+y^0 == 0 /\ x^0-x^post2 == 0), cost: 1
	New rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ 1-x^0+y^0 <= 0), cost: 1
	
		propagated equality y^post2 = y^0
		
		propagated equality x^post2 = x^0
		
	Simplified Guard

	Original rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, (0 == 0 /\ 1-x^0+y^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, 1-x^0+y^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : x^0'=x^0, y^0'=y^0, 1-x^0+y^0 <= 0, cost: 1
	New rule:
	l1 -> l2 : 1-x^0+y^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l1 : x^0'=x^post1, y^0'=y^post1, (x^post1 == 0 /\ -y^post5+y^0 == 0 /\ y^post1 == 0 /\ x^0-x^post5 == 0), cost: 1
	New rule:
	l4 -> l1 : x^0'=0, y^0'=0, (0 == 0 /\ -y^post5+y^0 == 0 /\ x^0-x^post5 == 0), cost: 1
	
		propagated equality x^post1 = 0
		
		propagated equality y^post1 = 0
		
	Propagated Equalities

	Original rule:
	l4 -> l1 : x^0'=0, y^0'=0, (0 == 0 /\ -y^post5+y^0 == 0 /\ x^0-x^post5 == 0), cost: 1
	New rule:
	l4 -> l1 : x^0'=0, y^0'=0, 0 == 0, cost: 1
	
		propagated equality y^post5 = y^0
		
		propagated equality x^post5 = x^0
		
	Simplified Guard

	Original rule:
	l4 -> l1 : x^0'=0, y^0'=0, 0 == 0, cost: 1
	New rule:
	l4 -> l1 : x^0'=0, y^0'=0, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : x^0'=x^post4, y^0'=y^post4, (-1-y^0+y^post3 == 0 /\ -y^post4+y^post3 == 0 /\ -1-x^0+x^post3 == 0 /\ -x^post4+x^post3 == 0), cost: 1
	New rule:
	l1 -> l1 : x^0'=x^post3, y^0'=y^post3, (0 == 0 /\ -1-y^0+y^post3 == 0 /\ -1-x^0+x^post3 == 0), cost: 1
	
		propagated equality y^post4 = y^post3
		
		propagated equality x^post4 = x^post3
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : x^0'=x^post3, y^0'=y^post3, (0 == 0 /\ -1-y^0+y^post3 == 0 /\ -1-x^0+x^post3 == 0), cost: 1
	New rule:
	l1 -> l1 : x^0'=1+x^0, y^0'=1+y^0, 0 == 0, cost: 1
	
		propagated equality y^post3 = 1+y^0
		
		propagated equality x^post3 = 1+x^0
		
	Simplified Guard

	Original rule:
	l1 -> l1 : x^0'=1+x^0, y^0'=1+y^0, 0 == 0, cost: 1
	New rule:
	l1 -> l1 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1

Step with 8

	Trace

	8[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	8[T], 9[T]
	
	Blocked

	[{}, {7[T]}, {}]

Nonterm

Start location: l4
Program variables: x^0 y^0
   7: l1 -> l2 : 1-x^0+y^0 <= 0, cost: 1
   9: l1 -> l1 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1
  10: l1 -> LoAT_sink : -1+n >= 0, cost: NONTERM
  11: l1 -> l1 : x^0'=x^0+n, y^0'=n+y^0, -1+n >= 0, cost: 1
   8: l4 -> l1 : x^0'=0, y^0'=0, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l1 -> l1 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1
	New rule:
	l1 -> LoAT_sink : -1+n >= 0, cost: NONTERM

		Replacement map: {}

	Loop Acceleration

	Original rule:
	l1 -> l1 : x^0'=1+x^0, y^0'=1+y^0, T, cost: 1
	New rule:
	l1 -> l1 : x^0'=x^0+n, y^0'=n+y^0, -1+n >= 0, cost: 1

		Replacement map: {}

Step with 10

	Trace

	8[T], 10[-1+n >= 0]
	
	Blocked

	[{}, {7[T]}, {10[T]}]

Refute

	Counterexample

	[ x^0=0 y^0=0 ] 8 [ x^0=x^0 y^0=y^0 ] 10
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
