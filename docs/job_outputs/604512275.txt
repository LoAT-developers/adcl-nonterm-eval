NO

Initial ITS

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : T, cost: 1
   9: [2] -> [9] : _|_, cost: 1
   2: [3] -> [5] : i <= 0, cost: 1
   5: [3] -> [7] : i > 0, cost: 1
   8: [4] -> [2] : T, cost: 1
   3: [5] -> [6] : i'=-1+i, T, cost: 1
   4: [6] -> [4] : T, cost: 1
   6: [7] -> [8] : i'=1+i, T, cost: 1
   7: [8] -> [4] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : T, cost: 1
   9: [2] -> [9] : _|_, cost: 1
  12: [3] -> [4] : i'=-1+i, i <= 0, cost: 1
  13: [3] -> [4] : i'=1+i, i > 0, cost: 1
   8: [4] -> [2] : T, cost: 1

	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : i <= 0, cost: 1
	Second rule:
	[5] -> [6] : i'=-1+i, T, cost: 1
	New rule:
	[3] -> [6] : i'=-1+i, i <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[3] -> [7] : i > 0, cost: 1
	Second rule:
	[7] -> [8] : i'=1+i, T, cost: 1
	New rule:
	[3] -> [8] : i'=1+i, i > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 6
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[3] -> [6] : i'=-1+i, i <= 0, cost: 1
	Second rule:
	[6] -> [4] : T, cost: 1
	New rule:
	[3] -> [4] : i'=-1+i, i <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 10
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[3] -> [8] : i'=1+i, i > 0, cost: 1
	Second rule:
	[8] -> [4] : T, cost: 1
	New rule:
	[3] -> [4] : i'=1+i, i > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 7 11

Step with 0

	Trace

	0[T]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	0[T], 1[T]
	
	Blocked

	[{}, {9[T]}, {}]

Step with 12

	Trace

	0[T], 1[T], 12[(i <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}]

Step with 8

	Trace

	0[T], 1[T], 12[(i <= 0)], 8[T]
	
	Blocked

	[{}, {9[T]}, {}, {}, {}]

Nonterm

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : T, cost: 1
   9: [2] -> [9] : _|_, cost: 1
  14: [2] -> LoAT_sink : (-1+n >= 0 /\ -i >= 0), cost: NONTERM
  15: [2] -> [2] : i'=-n+i, (-1+n >= 0 /\ -i >= 0), cost: 1
  12: [3] -> [4] : i'=-1+i, i <= 0, cost: 1
  13: [3] -> [4] : i'=1+i, i > 0, cost: 1
   8: [4] -> [2] : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	[2] -> [2] : i'=-1+i, i <= 0, cost: 1
	New rule:
	[2] -> LoAT_sink : (-1+n >= 0 /\ -i >= 0), cost: NONTERM

		-i >= 0 [0]: monotonic increase yields -i >= 0
		
		Replacement map: {-i >= 0 -> -i >= 0}

	Loop Acceleration

	Original rule:
	[2] -> [2] : i'=-1+i, i <= 0, cost: 1
	New rule:
	[2] -> [2] : i'=-n+i, (-1+n >= 0 /\ -i >= 0), cost: 1

		-i >= 0 [0]: monotonic increase yields -i >= 0
		
		Replacement map: {-i >= 0 -> -i >= 0}

Step with 14

	Trace

	0[T], 14[(-1+n >= 0 /\ -i >= 0)]
	
	Blocked

	[{}, {9[T]}, {14[T]}]

Refute

	Counterexample

	[ i=0 ] 0 [ i=i ] 14
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
