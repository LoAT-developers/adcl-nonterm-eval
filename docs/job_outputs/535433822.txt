NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f74_0_loop_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2-arg4P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ arg1P0 > 0 /\ -arg2P0 == 0 /\ -arg1+arg1P0 <= 0 /\ arg2-arg3P0 == 0), cost: 1
   1: f74_0_loop_LE -> f74_0_loop_LE\' : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (x70-arg1 <= 0 /\ -arg1P1+arg1 == 0 /\ arg4-arg4P1 == 0 /\ -arg3P1+arg3 == 0 /\ x70 > 0 /\ arg1 > 0 /\ -arg2P1+arg2 == 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: 1
   2: f74_0_loop_LE\' -> f74_0_loop_LE : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-arg3P2-arg2+arg4-x130 == 0 /\ -2-arg2+arg4-2*x130 < 0 /\ -arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg1 > 0 /\ arg4-arg4P2 == 0 /\ arg2-arg2P2+x130 == 0 /\ arg3 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f74_0_loop_LE : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2-arg4P0 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ arg1P0 > 0 /\ -arg2P0 == 0 /\ -arg1+arg1P0 <= 0 /\ arg2-arg3P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f74_0_loop_LE : arg2'=0, arg4'=arg2, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ arg1P0 > 0 /\ -arg1+arg1P0 <= 0), cost: 1

Applied preprocessing
Original rule:
f74_0_loop_LE -> f74_0_loop_LE\' : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (x70-arg1 <= 0 /\ -arg1P1+arg1 == 0 /\ arg4-arg4P1 == 0 /\ -arg3P1+arg3 == 0 /\ x70 > 0 /\ arg1 > 0 /\ -arg2P1+arg2 == 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: 1
New rule:
f74_0_loop_LE -> f74_0_loop_LE\' : (arg3 > 0 /\ -1+arg1 >= 0 /\ 1+arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f74_0_loop_LE\' -> f74_0_loop_LE : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-arg3P2-arg2+arg4-x130 == 0 /\ -2-arg2+arg4-2*x130 < 0 /\ -arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg1 > 0 /\ arg4-arg4P2 == 0 /\ arg2-arg2P2+x130 == 0 /\ arg3 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 1
New rule:
f74_0_loop_LE\' -> f74_0_loop_LE : arg2'=arg2+x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130, (-arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_Load -> f74_0_loop_LE : arg2'=0, arg4'=arg2, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ arg1P0 > 0 /\ -arg1+arg1P0 <= 0), cost: 1
   5: f74_0_loop_LE -> f74_0_loop_LE\' : (arg3 > 0 /\ -1+arg1 >= 0 /\ 1+arg4 > 0), cost: 1
   6: f74_0_loop_LE\' -> f74_0_loop_LE : arg2'=arg2+x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130, (-arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f74_0_loop_LE : arg2'=0, arg4'=arg2, arg1'=arg1P0, arg3'=arg2, (1+arg2 > 0 /\ arg1P0 > 0 /\ -arg1+arg1P0 <= 0), cost: 1
New rule:
__init -> f74_0_loop_LE : arg2'=0, arg4'=arg2P3, arg1'=arg1P0, arg3'=arg2P3, (1+arg2P3 > 0 /\ arg1P0 > 0 /\ -arg1P3+arg1P0 <= 0), cost: 2

Applied deletion
Removed the following rules: 3 4

Eliminating location f74_0_loop_LE\' by chaining:

Applied chaining
First rule:
f74_0_loop_LE -> f74_0_loop_LE\' : (arg3 > 0 /\ -1+arg1 >= 0 /\ 1+arg4 > 0), cost: 1
Second rule:
f74_0_loop_LE\' -> f74_0_loop_LE : arg2'=arg2+x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130, (-arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 1
New rule:
f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130, (-arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ -1+arg1 >= 0 /\ 1+arg4 > 0), cost: 2

Applied simplification
Original rule:
f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130, (-arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ -1+arg1 >= 0 /\ 1+arg4 > 0), cost: 2
New rule:
f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130, (-arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 2

Applied deletion
Removed the following rules: 5 6

Eliminated locations on linear paths
Start location: __init
   8: f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130, (-arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 2
   7: __init -> f74_0_loop_LE : arg2'=0, arg4'=arg2P3, arg1'=arg1P0, arg3'=arg2P3, (1+arg2P3 > 0 /\ arg1P0 > 0 /\ -arg1P3+arg1P0 <= 0), cost: 2


Applied acceleration
Original rule:
f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130, (-arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 2
New rule:
f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+n*x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130-(-1+n)*x130, (0 == 0 /\ arg1-arg1P2 >= 0 /\ -arg2+arg4-2*x130-(-1+n)*x130 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ 2+arg2-arg4+2*x130+(-1+n)*x130 > 0 /\ -1+n >= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ -x130 == 0 /\ 1+arg4 > 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_MaAIFk.txt

Applied nonterm
Original rule:
f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130, (-arg1+arg1P2 <= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 2
New rule:
f74_0_loop_LE -> [4] : (0 == 0 /\ arg1-arg1P2 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ -arg2+arg4-2*x130 >= 0 /\ x130 <= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ -x130 <= 0 /\ -x130 == 0 /\ 1+arg4 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GlOnhH.txt

Applied simplification
Original rule:
f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+n*x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130-(-1+n)*x130, (0 == 0 /\ arg1-arg1P2 >= 0 /\ -arg2+arg4-2*x130-(-1+n)*x130 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ 2+arg2-arg4+2*x130+(-1+n)*x130 > 0 /\ -1+n >= 0 /\ -arg2+arg4-2*x130 >= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ -x130 == 0 /\ 1+arg4 > 0), cost: 2*n
New rule:
f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+n*x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130-(-1+n)*x130, (arg1-arg1P2 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ -1+n >= 0 /\ x130 == 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 2*n

Applied simplification
Original rule:
f74_0_loop_LE -> [4] : (0 == 0 /\ arg1-arg1P2 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ -arg2+arg4-2*x130 >= 0 /\ x130 <= 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ -x130 <= 0 /\ -x130 == 0 /\ 1+arg4 > 0), cost: NONTERM
New rule:
f74_0_loop_LE -> [4] : (arg1-arg1P2 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ x130 == 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 8

Accelerated simple loops
Start location: __init
  11: f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+n*x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130-(-1+n)*x130, (arg1-arg1P2 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ -1+n >= 0 /\ x130 == 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 2*n
  12: f74_0_loop_LE -> [4] : (arg1-arg1P2 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ x130 == 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: NONTERM
   7: __init -> f74_0_loop_LE : arg2'=0, arg4'=arg2P3, arg1'=arg1P0, arg3'=arg2P3, (1+arg2P3 > 0 /\ arg1P0 > 0 /\ -arg1P3+arg1P0 <= 0), cost: 2


Applied chaining
First rule:
__init -> f74_0_loop_LE : arg2'=0, arg4'=arg2P3, arg1'=arg1P0, arg3'=arg2P3, (1+arg2P3 > 0 /\ arg1P0 > 0 /\ -arg1P3+arg1P0 <= 0), cost: 2
Second rule:
f74_0_loop_LE -> f74_0_loop_LE : arg2'=arg2+n*x130, arg1'=arg1P2, arg3'=-arg2+arg4-x130-(-1+n)*x130, (arg1-arg1P2 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ -1+n >= 0 /\ x130 == 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: 2*n
New rule:
__init -> f74_0_loop_LE : arg2'=0, arg4'=arg2P3, arg1'=arg1P2, arg3'=arg2P3, (-1+n >= 0 /\ arg2P3 > 0 /\ 2-arg2P3 > 0 /\ arg1P2 > 0), cost: 2+2*n

Applied chaining
First rule:
__init -> f74_0_loop_LE : arg2'=0, arg4'=arg2P3, arg1'=arg1P0, arg3'=arg2P3, (1+arg2P3 > 0 /\ arg1P0 > 0 /\ -arg1P3+arg1P0 <= 0), cost: 2
Second rule:
f74_0_loop_LE -> [4] : (arg1-arg1P2 >= 0 /\ arg2-arg4+x130+arg3 == 0 /\ x130 == 0 /\ arg3 > 0 /\ 2+arg2-arg4+2*x130 > 0 /\ arg1P2 > 0 /\ 1+arg4 > 0), cost: NONTERM
New rule:
__init -> [4] : (0 <= 0 /\ -1 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 11 12

Chained accelerated rules with incoming rules
Start location: __init
   7: __init -> f74_0_loop_LE : arg2'=0, arg4'=arg2P3, arg1'=arg1P0, arg3'=arg2P3, (1+arg2P3 > 0 /\ arg1P0 > 0 /\ -arg1P3+arg1P0 <= 0), cost: 2
  13: __init -> f74_0_loop_LE : arg2'=0, arg4'=arg2P3, arg1'=arg1P2, arg3'=arg2P3, (-1+n >= 0 /\ arg2P3 > 0 /\ 2-arg2P3 > 0 /\ arg1P2 > 0), cost: 2+2*n
  14: __init -> [4] : (0 <= 0 /\ -1 <= 0), cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: __init
  14: __init -> [4] : (0 <= 0 /\ -1 <= 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 14 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (0 <= 0 /\ -1 <= 0)
