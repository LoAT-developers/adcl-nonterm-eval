WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg2 > 0 /\ arg2-arg2P0 == 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ 1-arg3P0 == 0), cost: 1
   1: f1_0_main_Load -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg2 > 0 /\ 1+x80 > 0 /\ -arg1+arg1P1 <= 0 /\ arg1 > 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
   4: f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg2-arg5P4 == 0 /\ 1+arg3-arg6P4 == 0 /\ -arg3P4 == 0 /\ 1+arg2 > 0 /\ 1+arg4P4 > 0 /\ arg1 > 0 /\ -1+arg1-arg2P4 == 0 /\ arg3 > 0 /\ -arg2+arg3 < 0 /\ arg1-arg1P4 == 0), cost: 1
   3: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (x140 > 0 /\ 1+arg1P3 > 0 /\ -arg2P3+arg3 == 0 /\ 1+arg2 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
   2: f350_0_createTree_Return -> f1061_0_main_InvokeMethod : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, (arg2-arg3P2 == 0 /\ -arg1+arg1P2 <= 0 /\ arg1 > 0 /\ 1+arg2P2-arg1 <= 0 /\ 1+arg2P2 > 0 /\ arg1P2 > 0), cost: 1
   8: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (-2+arg1 > 0 /\ arg1P8 > 0 /\ arg2-arg2P8 == 0 /\ -1+arg2 > 0 /\ 2+arg1P8-arg1 <= 0), cost: 1
   9: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg2P9+arg2 == 0 /\ -3+arg1 > 0 /\ 4-arg1+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P9 > 0), cost: 1
  10: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (arg2-arg5P10 == 0 /\ -2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1
  11: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ arg2-arg5P11 == 0 /\ -1+arg1P11 > 0), cost: 1
   5: f1039_0_createTree_GE -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, (arg2-arg1 < 0 /\ -1+arg2-arg1P5 == 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -arg3P5+arg6 == 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0 /\ -1 < 0 /\ arg5-arg2P5 == 0 /\ -1+arg2-arg1 < 0), cost: 1
   6: f1039_0_createTree_GE -> f1039_0_createTree_GE : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (arg2-arg1 < 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ 1+arg3-arg3P6 == 0 /\ arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0 /\ -arg6P6+arg6 == 0 /\ arg5-arg5P6 == 0 /\ arg4-arg4P6 == 0 /\ arg2-arg2P6 == 0 /\ -1 < 0 /\ -arg1P6+arg1 == 0 /\ -1+arg2-arg1 < 0), cost: 1
   7: f1039_0_createTree_GE -> f1039_0_createTree_GE : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (arg2-arg1 < 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -arg1P7+arg1 == 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0 /\ 1-arg3P7+arg3 == 0 /\ arg4-arg4P7 == 0 /\ -1 < 0 /\ arg2-arg2P7 == 0 /\ arg5-arg5P7 == 0 /\ -1+arg2-arg1 < 0), cost: 1
  12: f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ arg5-arg2P12 == 0 /\ arg3 > 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
  13: f1400_0_mirror_FieldAccess -> f1463_0_mirror_FieldAccess : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg6'=arg6P13, arg3'=arg3P13, (-3+arg2P13 > 0 /\ arg2 > 0 /\ -3+arg1 > 0 /\ -3-arg2+arg2P13 <= 0 /\ arg1P13 > 0 /\ -1+arg3 > 0 /\ -2+arg2P13-arg3 <= 0 /\ -arg2+arg1P13 <= 0 /\ -arg1+arg2P13 <= 0 /\ -1+arg5 > 0), cost: 1
  14: f1400_0_mirror_FieldAccess -> f1463_0_mirror_FieldAccess : arg5'=arg5P14, arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg6'=arg6P14, arg3'=arg3P14, (-arg2+arg1P14 <= 0 /\ arg2 > 0 /\ arg1P14 > 0 /\ -5+arg1 > 0 /\ arg2P14-arg1 <= 0 /\ -5+arg2P14 > 0 /\ -3+arg3 > 0 /\ -1+arg5 > 0 /\ -2+arg2P14-arg3 <= 0), cost: 1
  15: f1400_0_mirror_FieldAccess -> f1463_0_mirror_FieldAccess : arg5'=arg5P15, arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg6'=arg6P15, arg3'=arg3P15, (arg1P15 > 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -5+arg2P15 > 0 /\ arg3 > 0 /\ arg1P15-arg2 <= 0 /\ -1+arg5 > 0), cost: 1
  16: __init -> f1_0_main_Load : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg6'=arg6P16, arg3'=arg3P16, TRUE, cost: 1


Removed unreachable rules and leafs
Start location: __init
   0: f1_0_main_Load -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg2 > 0 /\ arg2-arg2P0 == 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ 1-arg3P0 == 0), cost: 1
   1: f1_0_main_Load -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg2 > 0 /\ 1+x80 > 0 /\ -arg1+arg1P1 <= 0 /\ arg1 > 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
   4: f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg2-arg5P4 == 0 /\ 1+arg3-arg6P4 == 0 /\ -arg3P4 == 0 /\ 1+arg2 > 0 /\ 1+arg4P4 > 0 /\ arg1 > 0 /\ -1+arg1-arg2P4 == 0 /\ arg3 > 0 /\ -arg2+arg3 < 0 /\ arg1-arg1P4 == 0), cost: 1
   3: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (x140 > 0 /\ 1+arg1P3 > 0 /\ -arg2P3+arg3 == 0 /\ 1+arg2 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
   8: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (-2+arg1 > 0 /\ arg1P8 > 0 /\ arg2-arg2P8 == 0 /\ -1+arg2 > 0 /\ 2+arg1P8-arg1 <= 0), cost: 1
   9: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg2P9+arg2 == 0 /\ -3+arg1 > 0 /\ 4-arg1+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P9 > 0), cost: 1
  10: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (arg2-arg5P10 == 0 /\ -2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1
  11: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ arg2-arg5P11 == 0 /\ -1+arg1P11 > 0), cost: 1
   5: f1039_0_createTree_GE -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, (arg2-arg1 < 0 /\ -1+arg2-arg1P5 == 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -arg3P5+arg6 == 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0 /\ -1 < 0 /\ arg5-arg2P5 == 0 /\ -1+arg2-arg1 < 0), cost: 1
   6: f1039_0_createTree_GE -> f1039_0_createTree_GE : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (arg2-arg1 < 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ 1+arg3-arg3P6 == 0 /\ arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0 /\ -arg6P6+arg6 == 0 /\ arg5-arg5P6 == 0 /\ arg4-arg4P6 == 0 /\ arg2-arg2P6 == 0 /\ -1 < 0 /\ -arg1P6+arg1 == 0 /\ -1+arg2-arg1 < 0), cost: 1
   7: f1039_0_createTree_GE -> f1039_0_createTree_GE : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (arg2-arg1 < 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -arg1P7+arg1 == 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0 /\ 1-arg3P7+arg3 == 0 /\ arg4-arg4P7 == 0 /\ -1 < 0 /\ arg2-arg2P7 == 0 /\ arg5-arg5P7 == 0 /\ -1+arg2-arg1 < 0), cost: 1
  12: f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ arg5-arg2P12 == 0 /\ arg3 > 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
  16: __init -> f1_0_main_Load : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg6'=arg6P16, arg3'=arg3P16, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg2 > 0 /\ arg2-arg2P0 == 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ 1-arg3P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f499_0_createTree_GT : arg5'=arg5P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg2 > 0 /\ 1+x80 > 0 /\ -arg1+arg1P1 <= 0 /\ arg1 > 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
New rule:
f1_0_main_Load -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1

Applied preprocessing
Original rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (x140 > 0 /\ 1+arg1P3 > 0 /\ -arg2P3+arg3 == 0 /\ 1+arg2 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg2-arg5P4 == 0 /\ 1+arg3-arg6P4 == 0 /\ -arg3P4 == 0 /\ 1+arg2 > 0 /\ 1+arg4P4 > 0 /\ arg1 > 0 /\ -1+arg1-arg2P4 == 0 /\ arg3 > 0 /\ -arg2+arg3 < 0 /\ arg1-arg1P4 == 0), cost: 1
New rule:
f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=0, (1+arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f1039_0_createTree_GE -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, (arg2-arg1 < 0 /\ -1+arg2-arg1P5 == 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -arg3P5+arg6 == 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0 /\ -1 < 0 /\ arg5-arg2P5 == 0 /\ -1+arg2-arg1 < 0), cost: 1
New rule:
f1039_0_createTree_GE -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg5, arg4'=arg4P5, arg1'=-1+arg2, arg6'=arg6P5, arg3'=arg6, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg6'=arg6P6, arg3'=arg3P6, (arg2-arg1 < 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ 1+arg3-arg3P6 == 0 /\ arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0 /\ -arg6P6+arg6 == 0 /\ arg5-arg5P6 == 0 /\ arg4-arg4P6 == 0 /\ arg2-arg2P6 == 0 /\ -1 < 0 /\ -arg1P6+arg1 == 0 /\ -1+arg2-arg1 < 0), cost: 1
New rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=1+arg3, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg6'=arg6P7, arg3'=arg3P7, (arg2-arg1 < 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -arg1P7+arg1 == 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0 /\ 1-arg3P7+arg3 == 0 /\ arg4-arg4P7 == 0 /\ -1 < 0 /\ arg2-arg2P7 == 0 /\ arg5-arg5P7 == 0 /\ -1+arg2-arg1 < 0), cost: 1
New rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=1+arg3, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (-2+arg1 > 0 /\ arg1P8 > 0 /\ arg2-arg2P8 == 0 /\ -1+arg2 > 0 /\ 2+arg1P8-arg1 <= 0), cost: 1
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg2 > 0 /\ 2+arg1P8-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg2P9+arg2 == 0 /\ -3+arg1 > 0 /\ 4-arg1+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P9 > 0), cost: 1
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg1+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P9 > 0), cost: 1

Applied preprocessing
Original rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (arg2-arg5P10 == 0 /\ -2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1
New rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (-2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1

Applied preprocessing
Original rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ arg2-arg5P11 == 0 /\ -1+arg1P11 > 0), cost: 1
New rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ -1+arg1P11 > 0), cost: 1

Applied preprocessing
Original rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ arg5-arg2P12 == 0 /\ arg3 > 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
New rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg5, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1

Simplified rules
Start location: __init
  17: f1_0_main_Load -> f499_0_createTree_GT : arg5'=arg5P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
  18: f1_0_main_Load -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
  20: f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=0, (1+arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1
  19: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
  24: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg2 > 0 /\ 2+arg1P8-arg1 <= 0), cost: 1
  25: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg1+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P9 > 0), cost: 1
  26: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (-2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1
  27: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ -1+arg1P11 > 0), cost: 1
  21: f1039_0_createTree_GE -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg5, arg4'=arg4P5, arg1'=-1+arg2, arg6'=arg6P5, arg3'=arg6, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1
  22: f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=1+arg3, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1
  23: f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=1+arg3, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1
  28: f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg5, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
  16: __init -> f1_0_main_Load : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg6'=arg6P16, arg3'=arg3P16, TRUE, cost: 1


Applied acceleration
Original rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=1+arg3, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=n3+arg3, (1+arg4-n3-arg3 > 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ n3 >= 0 /\ -1+arg6 > 0), cost: n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_iCnikH.txt

Applied instantiation
Original rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=n3+arg3, (1+arg4-n3-arg3 > 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ n3 >= 0 /\ -1+arg6 > 0), cost: n3
New rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=arg4, (1 > 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 >= 0), cost: arg4-arg3

Applied acceleration
Original rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=1+arg3, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=n4+arg3, (-1+arg6P7 > 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+n4 >= 0 /\ -1+arg6 > 0 /\ 1-n4+arg4-arg3 > 0), cost: n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_DfLJbc.txt

Applied instantiation
Original rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=n4+arg3, (-1+arg6P7 > 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+n4 >= 0 /\ -1+arg6 > 0 /\ 1-n4+arg4-arg3 > 0), cost: n4
New rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=arg4, (1 > 0 /\ -1+arg6P7 > 0 /\ -1+arg4-arg3 >= 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0), cost: arg4-arg3

Applied simplification
Original rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=arg4, (1 > 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 >= 0), cost: arg4-arg3
New rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=arg4, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 >= 0), cost: arg4-arg3

Applied simplification
Original rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=arg4, (1 > 0 /\ -1+arg6P7 > 0 /\ -1+arg4-arg3 >= 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0), cost: arg4-arg3
New rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=arg4, (-1+arg6P7 > 0 /\ -1+arg4-arg3 >= 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0), cost: arg4-arg3

Applied deletion
Removed the following rules: 22 23

Accelerated simple loops
Start location: __init
  17: f1_0_main_Load -> f499_0_createTree_GT : arg5'=arg5P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
  18: f1_0_main_Load -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
  20: f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=0, (1+arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1
  19: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
  24: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg2 > 0 /\ 2+arg1P8-arg1 <= 0), cost: 1
  25: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg1+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P9 > 0), cost: 1
  26: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (-2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1
  27: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ -1+arg1P11 > 0), cost: 1
  21: f1039_0_createTree_GE -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg5, arg4'=arg4P5, arg1'=-1+arg2, arg6'=arg6P5, arg3'=arg6, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1
  31: f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=arg4, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 >= 0), cost: arg4-arg3
  32: f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=arg4, (-1+arg6P7 > 0 /\ -1+arg4-arg3 >= 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0), cost: arg4-arg3
  28: f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg5, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
  16: __init -> f1_0_main_Load : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg6'=arg6P16, arg3'=arg3P16, TRUE, cost: 1


Applied chaining
First rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg2 > 0 /\ 2+arg1P8-arg1 <= 0), cost: 1
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2

Applied chaining
First rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg5, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg2 > 0 /\ 2+arg1P8-arg1 <= 0), cost: 1
New rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg5, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3 <= 0 /\ arg1P8 > 0 /\ arg2 > 0 /\ 5+arg1P8-arg1 <= 0 /\ -1+arg5 > 0), cost: 2

Applied chaining
First rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg1+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P9 > 0), cost: 1
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2

Applied chaining
First rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg5, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg1+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P9 > 0), cost: 1
New rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg5, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (arg2 > 0 /\ 5-arg3+arg1P9 <= 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0 /\ -1+arg5 > 0), cost: 2

Applied deletion
Removed the following rules: 24 25

Applied chaining
First rule:
f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=0, (1+arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg3'=arg4, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 >= 0), cost: arg4-arg3
New rule:
f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=arg4P4, (arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4

Applied chaining
First rule:
f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=0, (1+arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f1039_0_createTree_GE -> f1039_0_createTree_GE : arg6'=arg6P7, arg3'=arg4, (-1+arg6P7 > 0 /\ -1+arg4-arg3 >= 0 /\ 1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0), cost: arg4-arg3
New rule:
f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=arg6P7, arg3'=arg4P4, (-1+arg6P7 > 0 /\ arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4

Applied deletion
Removed the following rules: 31 32

Chained accelerated rules with incoming rules
Start location: __init
  17: f1_0_main_Load -> f499_0_createTree_GT : arg5'=arg5P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
  18: f1_0_main_Load -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
  20: f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=0, (1+arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1
  37: f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=arg4P4, (arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4
  38: f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=arg6P7, arg3'=arg4P4, (-1+arg6P7 > 0 /\ arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4
  19: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
  33: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2
  35: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2
  26: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (-2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1
  27: f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ -1+arg1P11 > 0), cost: 1
  21: f1039_0_createTree_GE -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg5, arg4'=arg4P5, arg1'=-1+arg2, arg6'=arg6P5, arg3'=arg6, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1
  28: f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg5, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
  34: f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg5, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3 <= 0 /\ arg1P8 > 0 /\ arg2 > 0 /\ 5+arg1P8-arg1 <= 0 /\ -1+arg5 > 0), cost: 2
  36: f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg5, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (arg2 > 0 /\ 5-arg3+arg1P9 <= 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0 /\ -1+arg5 > 0), cost: 2
  16: __init -> f1_0_main_Load : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg6'=arg6P16, arg3'=arg3P16, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg6'=arg6P16, arg3'=arg3P16, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f499_0_createTree_GT : arg5'=arg5P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
New rule:
__init -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P16, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg1P16 > 0 /\ arg2P16 > 0 /\ 1+arg1P0 > 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg6'=arg6P16, arg3'=arg3P16, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg2 > 0 /\ -arg1+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0), cost: 1
New rule:
__init -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (-arg1P16+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg2P16 > 0), cost: 2

Applied deletion
Removed the following rules: 16 17 18

Eliminating location f1039_0_createTree_GE by chaining:

Applied chaining
First rule:
f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=0, (1+arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1
Second rule:
f1039_0_createTree_GE -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg5, arg4'=arg4P5, arg1'=-1+arg2, arg6'=arg6P5, arg3'=arg6, (1+arg2 > 0 /\ arg4 > 0 /\ -arg2+arg1 > 0 /\ -1+arg6 > 0 /\ arg4-arg3 > 0), cost: 1
New rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=-2+arg1, arg6'=arg6P5, arg3'=1+arg3, (1 > 0 /\ arg4P4 > 0 /\ 1+arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 2

Applied simplification
Original rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=-2+arg1, arg6'=arg6P5, arg3'=1+arg3, (1 > 0 /\ arg4P4 > 0 /\ 1+arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 2
New rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=-2+arg1, arg6'=arg6P5, arg3'=1+arg3, (arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 2

Applied partial deletion
Original rule:
f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=1+arg3, arg3'=arg4P4, (arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4
New rule:
f499_0_createTree_GT -> [11] : (arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4

Applied partial deletion
Original rule:
f499_0_createTree_GT -> f1039_0_createTree_GE : arg5'=arg2, arg2'=-1+arg1, arg4'=arg4P4, arg6'=arg6P7, arg3'=arg4P4, (-1+arg6P7 > 0 /\ arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4
New rule:
f499_0_createTree_GT -> [11] : (-1+arg6P7 > 0 /\ arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4

Applied deletion
Removed the following rules: 20 21 37 38

Eliminating location f1400_0_mirror_FieldAccess by chaining:

Applied chaining
First rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (-2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1
Second rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg5, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-2+arg1 > 0 /\ 1-arg3P10+arg1P12 <= 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ 3+arg1P12-arg1P10 <= 0 /\ -2+arg2P10 > 0 /\ arg2P10 > 0 /\ 1+arg1P12 > 0), cost: 2

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-2+arg1 > 0 /\ 1-arg3P10+arg1P12 <= 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ 3+arg1P12-arg1P10 <= 0 /\ -2+arg2P10 > 0 /\ arg2P10 > 0 /\ 1+arg1P12 > 0), cost: 2
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (1-arg3P10+arg1P12 <= 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ 3+arg1P12-arg1P10 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P12 > 0), cost: 2

Applied chaining
First rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (-2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1
Second rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg5, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3 <= 0 /\ arg1P8 > 0 /\ arg2 > 0 /\ 5+arg1P8-arg1 <= 0 /\ -1+arg5 > 0), cost: 2
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3P10 <= 0 /\ -2+arg1 > 0 /\ arg1P8 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 5+arg1P8-arg1P10 <= 0 /\ arg2P10 > 0), cost: 3

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3P10 <= 0 /\ -2+arg1 > 0 /\ arg1P8 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 5+arg1P8-arg1P10 <= 0 /\ arg2P10 > 0), cost: 3
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3P10 <= 0 /\ arg1P8 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 5+arg1P8-arg1P10 <= 0), cost: 3

Applied chaining
First rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg6'=arg6P10, arg3'=arg3P10, (-2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0), cost: 1
Second rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg5, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (arg2 > 0 /\ 5-arg3+arg1P9 <= 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0 /\ -1+arg5 > 0), cost: 2
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ 5-arg3P10+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 7-arg1P10+arg1P9 <= 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P9 > 0 /\ arg2P10 > 0), cost: 3

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-2+arg1 > 0 /\ -1+arg1P10 > 0 /\ -arg1+arg1P10 <= 0 /\ 5-arg3P10+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P10 > 0 /\ 7-arg1P10+arg1P9 <= 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P9 > 0 /\ arg2P10 > 0), cost: 3
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg1+arg1P10 <= 0 /\ 5-arg3P10+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P10+arg1P9 <= 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P9 > 0), cost: 3

Applied chaining
First rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ -1+arg1P11 > 0), cost: 1
Second rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg5, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (arg2 > 0 /\ 3+arg1P12-arg1 <= 0 /\ 1+arg1P12-arg3 <= 0 /\ -1+arg5 > 0 /\ 1+arg1P12 > 0), cost: 1
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-2+arg1 > 0 /\ 3+arg1P12-arg1P11 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ 1-arg3P11+arg1P12 <= 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ arg2P11 > 0 /\ -5+arg2P11 > 0 /\ -1+arg1P11 > 0 /\ 1+arg1P12 > 0), cost: 2

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-2+arg1 > 0 /\ 3+arg1P12-arg1P11 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ 1-arg3P11+arg1P12 <= 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ arg2P11 > 0 /\ -5+arg2P11 > 0 /\ -1+arg1P11 > 0 /\ 1+arg1P12 > 0), cost: 2
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1P11 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ 1-arg3P11+arg1P12 <= 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P12 > 0), cost: 2

Applied chaining
First rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ -1+arg1P11 > 0), cost: 1
Second rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg5, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3 <= 0 /\ arg1P8 > 0 /\ arg2 > 0 /\ 5+arg1P8-arg1 <= 0 /\ -1+arg5 > 0), cost: 2
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (-2+arg1 > 0 /\ arg1P8 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 5+arg1P8-arg1P11 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ arg2P11 > 0 /\ -5+arg2P11 > 0 /\ 3+arg1P8-arg3P11 <= 0 /\ -1+arg1P11 > 0), cost: 3

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (-2+arg1 > 0 /\ arg1P8 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 5+arg1P8-arg1P11 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ arg2P11 > 0 /\ -5+arg2P11 > 0 /\ 3+arg1P8-arg3P11 <= 0 /\ -1+arg1P11 > 0), cost: 3
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 5+arg1P8-arg1P11 <= 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 3+arg1P8-arg3P11 <= 0), cost: 3

Applied chaining
First rule:
f1079_0_mirror_NULL -> f1400_0_mirror_FieldAccess : arg5'=arg2, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg6'=arg6P11, arg3'=arg3P11, (-2+arg1 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ -1+arg1P11 > 0), cost: 1
Second rule:
f1400_0_mirror_FieldAccess -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg5, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (arg2 > 0 /\ 5-arg3+arg1P9 <= 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0 /\ -1+arg5 > 0), cost: 2
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-2+arg1 > 0 /\ 5-arg3P11+arg1P9 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ 7-arg1P11+arg1P9 <= 0 /\ arg1P11-arg1 <= 0 /\ arg2P11 > 0 /\ -5+arg2P11 > 0 /\ 1+arg1P9 > 0 /\ -1+arg1P11 > 0), cost: 3

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-2+arg1 > 0 /\ 5-arg3P11+arg1P9 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ 1+arg3P11 > 0 /\ -1+arg2 > 0 /\ 7-arg1P11+arg1P9 <= 0 /\ arg1P11-arg1 <= 0 /\ arg2P11 > 0 /\ -5+arg2P11 > 0 /\ 1+arg1P9 > 0 /\ -1+arg1P11 > 0), cost: 3
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (5-arg3P11+arg1P9 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P11+arg1P9 <= 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P9 > 0), cost: 3

Applied deletion
Removed the following rules: 26 27 28 34 36

Eliminated locations on tree-shaped paths
Start location: __init
  41: f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=-2+arg1, arg6'=arg6P5, arg3'=1+arg3, (arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 2
  42: f499_0_createTree_GT -> [11] : (arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4
  43: f499_0_createTree_GT -> [11] : (-1+arg6P7 > 0 /\ arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 1+arg4P4
  19: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
  33: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2
  35: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2
  44: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (1-arg3P10+arg1P12 <= 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ 3+arg1P12-arg1P10 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P12 > 0), cost: 2
  45: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3P10 <= 0 /\ arg1P8 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 5+arg1P8-arg1P10 <= 0), cost: 3
  46: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg1+arg1P10 <= 0 /\ 5-arg3P10+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P10+arg1P9 <= 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P9 > 0), cost: 3
  47: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1P11 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ 1-arg3P11+arg1P12 <= 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P12 > 0), cost: 2
  48: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ 2+arg3P11-arg1 <= 0 /\ 5+arg1P8-arg1P11 <= 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 3+arg1P8-arg3P11 <= 0), cost: 3
  49: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (5-arg3P11+arg1P9 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P11+arg1P9 <= 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P9 > 0), cost: 3
  39: __init -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P16, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg1P16 > 0 /\ arg2P16 > 0 /\ 1+arg1P0 > 0), cost: 2
  40: __init -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (-arg1P16+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg2P16 > 0), cost: 2


Applied pruning (of leafs and parallel rules):
Start location: __init
  41: f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=-2+arg1, arg6'=arg6P5, arg3'=1+arg3, (arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 2
  19: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
  33: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2
  35: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2
  44: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (1-arg3P10+arg1P12 <= 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ 3+arg1P12-arg1P10 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P12 > 0), cost: 2
  45: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3P10 <= 0 /\ arg1P8 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 5+arg1P8-arg1P10 <= 0), cost: 3
  46: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg1+arg1P10 <= 0 /\ 5-arg3P10+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P10+arg1P9 <= 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P9 > 0), cost: 3
  47: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1P11 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ 1-arg3P11+arg1P12 <= 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P12 > 0), cost: 2
  49: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (5-arg3P11+arg1P9 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P11+arg1P9 <= 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P9 > 0), cost: 3
  39: __init -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P16, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg1P16 > 0 /\ arg2P16 > 0 /\ 1+arg1P0 > 0), cost: 2
  40: __init -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (-arg1P16+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg2P16 > 0), cost: 2


Applied simplification
Original rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2, arg4'=arg4P5, arg1'=-2+arg1, arg6'=arg6P5, arg3'=1+arg3, (arg4P4 > 0 /\ arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 2
New rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=-2+arg1, arg6'=arg6P5, arg3'=1+arg3, (arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 2

Simplified simple loops
Start location: __init
  50: f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=-2+arg1, arg6'=arg6P5, arg3'=1+arg3, (arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 2
  19: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
  33: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2
  35: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2
  44: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (1-arg3P10+arg1P12 <= 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ 3+arg1P12-arg1P10 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P12 > 0), cost: 2
  45: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3P10 <= 0 /\ arg1P8 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 5+arg1P8-arg1P10 <= 0), cost: 3
  46: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg1+arg1P10 <= 0 /\ 5-arg3P10+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P10+arg1P9 <= 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P9 > 0), cost: 3
  47: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1P11 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ 1-arg3P11+arg1P12 <= 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P12 > 0), cost: 2
  49: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (5-arg3P11+arg1P9 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P11+arg1P9 <= 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P9 > 0), cost: 3
  39: __init -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P16, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg1P16 > 0 /\ arg2P16 > 0 /\ 1+arg1P0 > 0), cost: 2
  40: __init -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (-arg1P16+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg2P16 > 0), cost: 2


Applied acceleration
Original rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=-2+arg1, arg6'=arg6P5, arg3'=1+arg3, (arg1 > 0 /\ arg2-arg3 > 0 /\ arg3 > 0), cost: 2
New rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=arg1-2*n9, arg6'=arg6P5, arg3'=n9+arg3, (2+arg1-2*n9 > 0 /\ 1+arg2-n9-arg3 > 0 /\ -1+n9 >= 0 /\ arg3 > 0), cost: 2*n9
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GCjNLe.txt

Applied instantiation
Original rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=arg1-2*n9, arg6'=arg6P5, arg3'=n9+arg3, (2+arg1-2*n9 > 0 /\ 1+arg2-n9-arg3 > 0 /\ -1+n9 >= 0 /\ arg3 > 0), cost: 2*n9
New rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=-2*arg2+arg1+2*arg3, arg6'=arg6P5, arg3'=arg2, (1 > 0 /\ -1+arg2-arg3 >= 0 /\ 2-2*arg2+arg1+2*arg3 > 0 /\ arg3 > 0), cost: 2*arg2-2*arg3

Applied simplification
Original rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=-2*arg2+arg1+2*arg3, arg6'=arg6P5, arg3'=arg2, (1 > 0 /\ -1+arg2-arg3 >= 0 /\ 2-2*arg2+arg1+2*arg3 > 0 /\ arg3 > 0), cost: 2*arg2-2*arg3
New rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=-2*arg2+arg1+2*arg3, arg6'=arg6P5, arg3'=arg2, (-1+arg2-arg3 >= 0 /\ 2-2*arg2+arg1+2*arg3 > 0 /\ arg3 > 0), cost: 2*arg2-2*arg3

Applied deletion
Removed the following rules: 50

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (1-arg3P10+arg1P12 <= 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ 3+arg1P12-arg1P10 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P12 > 0), cost: 2
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P12 > 0), cost: 2

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg2, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (3+arg1P8-arg3P10 <= 0 /\ arg1P8 > 0 /\ -arg1+arg1P10 <= 0 /\ -1+arg2 > 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 5+arg1P8-arg1P10 <= 0), cost: 3
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ 5+arg1P8-arg1 <= 0 /\ -1+arg2 > 0), cost: 3

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-arg1+arg1P10 <= 0 /\ 5-arg3P10+arg1P9 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P10+arg1P9 <= 0 /\ 2+arg3P10-arg1 <= 0 /\ -2+arg2P10 > 0 /\ 1+arg1P9 > 0), cost: 3
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-1+arg2 > 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0), cost: 3

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg2, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1P11 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ 1-arg3P11+arg1P12 <= 0 /\ -1+arg2 > 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P12 > 0), cost: 2
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P12 > 0), cost: 2

Applied simplification
Original rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg2, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (5-arg3P11+arg1P9 <= 0 /\ 2+arg3P11-arg1 <= 0 /\ -1+arg2 > 0 /\ 7-arg1P11+arg1P9 <= 0 /\ arg1P11-arg1 <= 0 /\ -5+arg2P11 > 0 /\ 1+arg1P9 > 0), cost: 3
New rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-1+arg2 > 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0), cost: 3

Simplified simple loops
Start location: __init
  52: f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=-2*arg2+arg1+2*arg3, arg6'=arg6P5, arg3'=arg2, (-1+arg2-arg3 >= 0 /\ 2-2*arg2+arg1+2*arg3 > 0 /\ arg3 > 0), cost: 2*arg2-2*arg3
  19: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
  33: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2
  35: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2
  53: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P12 > 0), cost: 2
  54: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ 5+arg1P8-arg1 <= 0 /\ -1+arg2 > 0), cost: 3
  55: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-1+arg2 > 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0), cost: 3
  39: __init -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P16, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg1P16 > 0 /\ arg2P16 > 0 /\ 1+arg1P0 > 0), cost: 2
  40: __init -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (-arg1P16+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg2P16 > 0), cost: 2


Accelerated simple loops
Start location: __init
  52: f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=-2*arg2+arg1+2*arg3, arg6'=arg6P5, arg3'=arg2, (-1+arg2-arg3 >= 0 /\ 2-2*arg2+arg1+2*arg3 > 0 /\ arg3 > 0), cost: 2*arg2-2*arg3
  19: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
  33: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2
  35: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2
  53: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P12 > 0), cost: 2
  54: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ 5+arg1P8-arg1 <= 0 /\ -1+arg2 > 0), cost: 3
  55: f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-1+arg2 > 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0), cost: 3
  39: __init -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P16, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg1P16 > 0 /\ arg2P16 > 0 /\ 1+arg1P0 > 0), cost: 2
  40: __init -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (-arg1P16+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg2P16 > 0), cost: 2


Applied chaining
First rule:
__init -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P16, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg1P16 > 0 /\ arg2P16 > 0 /\ 1+arg1P0 > 0), cost: 2
Second rule:
f499_0_createTree_GT -> f499_0_createTree_GT : arg5'=arg5P5, arg4'=arg4P5, arg1'=-2*arg2+arg1+2*arg3, arg6'=arg6P5, arg3'=arg2, (-1+arg2-arg3 >= 0 /\ 2-2*arg2+arg1+2*arg3 > 0 /\ arg3 > 0), cost: 2*arg2-2*arg3
New rule:
__init -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2P16, arg4'=arg4P5, arg1'=2+arg1P0-2*arg2P16, arg6'=arg6P5, arg3'=arg2P16, (4+arg1P0-2*arg2P16 > 0 /\ -2+arg2P16 >= 0), cost: 2*arg2P16

Applied deletion
Removed the following rules: 52

Applied chaining
First rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P12 > 0), cost: 2
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg3, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P12 > 0 /\ 3-arg2+arg1P12 <= 0), cost: 3

Applied chaining
First rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P12 > 0), cost: 2
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg3, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (5-arg2+arg1P12 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P12 > 0), cost: 4

Applied chaining
First rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P12, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (3+arg1P12-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg1P12 > 0), cost: 2
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg3, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (7-arg2+arg1P12 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P12 > 0), cost: 4

Applied chaining
First rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ 5+arg1P8-arg1 <= 0 /\ -1+arg2 > 0), cost: 3
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ 5+arg1P8-arg2 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0), cost: 4

Applied chaining
First rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P8, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ 5+arg1P8-arg1 <= 0 /\ -1+arg2 > 0), cost: 3
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 9+arg1P8-arg2 <= 0), cost: 5

Applied chaining
First rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-1+arg2 > 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0), cost: 3
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (7-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 4

Applied chaining
First rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2
Second rule:
f1079_0_mirror_NULL -> f1079_0_mirror_NULL : arg5'=arg5P9, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-1+arg2 > 0 /\ 7-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0), cost: 3
New rule:
f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-1+arg3 > 0 /\ arg1 > 0 /\ 9-arg2+arg1P9 <= 0 /\ 1+arg1P9 > 0), cost: 5

Applied deletion
Removed the following rules: 53 54 55

Chained accelerated rules with incoming rules
Start location: __init
  19: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P3, arg2'=arg3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (1+arg1P3 > 0 /\ -1+arg3 > 0 /\ -arg2+arg1P3 <= 0 /\ arg1 > 0), cost: 1
  33: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 2+arg1P8-arg2 <= 0), cost: 2
  35: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (4-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 2
  57: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg3, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (-1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P12 > 0 /\ 3-arg2+arg1P12 <= 0), cost: 3
  58: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg3, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (5-arg2+arg1P12 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P12 > 0), cost: 4
  59: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P12, arg2'=arg3, arg4'=arg4P12, arg1'=arg1P12, arg6'=arg6P12, arg3'=arg3P12, (7-arg2+arg1P12 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P12 > 0), cost: 4
  60: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ 5+arg1P8-arg2 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0), cost: 4
  61: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P8, arg2'=arg3, arg4'=arg4P8, arg1'=arg1P8, arg6'=arg6P8, arg3'=arg3P8, (arg1P8 > 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 9+arg1P8-arg2 <= 0), cost: 5
  62: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (7-arg2+arg1P9 <= 0 /\ -1+arg3 > 0 /\ arg1 > 0 /\ 1+arg1P9 > 0), cost: 4
  63: f1061_0_main_InvokeMethod -> f1079_0_mirror_NULL : arg5'=arg5P9, arg2'=arg3, arg4'=arg4P9, arg1'=arg1P9, arg6'=arg6P9, arg3'=arg3P9, (-1+arg3 > 0 /\ arg1 > 0 /\ 9-arg2+arg1P9 <= 0 /\ 1+arg1P9 > 0), cost: 5
  39: __init -> f499_0_createTree_GT : arg5'=arg5P0, arg2'=arg2P16, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=1, (arg1P16 > 0 /\ arg2P16 > 0 /\ 1+arg1P0 > 0), cost: 2
  40: __init -> f1061_0_main_InvokeMethod : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (-arg1P16+arg1P1 <= 0 /\ 1+arg2P1 > 0 /\ arg1P1 > 0 /\ arg2P16 > 0), cost: 2
  56: __init -> f499_0_createTree_GT : arg5'=arg5P5, arg2'=arg2P16, arg4'=arg4P5, arg1'=2+arg1P0-2*arg2P16, arg6'=arg6P5, arg3'=arg2P16, (4+arg1P0-2*arg2P16 > 0 /\ -2+arg2P16 >= 0), cost: 2*arg2P16


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

