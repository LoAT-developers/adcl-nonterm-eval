unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3
   0: f169_0_createList_Return -> f229_0_random_ArrayAccess : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p1 > 0 /\ arg1p1-arg2 <= 0), cost: 1
   4: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
   1: f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg1 > 0 /\ 1+arg1p2 > 0 /\ -arg2p2+arg2 == 0), cost: 1
   2: f1_0_main_Load -> f194_0_createList_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
   3: f194_0_createList_LE -> f194_0_createList_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg1 > 0 /\ -1+arg1-arg1p4 == 0), cost: 1
   5: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -arg2p6+arg2 == 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
   6: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ -1-arg2p7+arg2 == 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3
   0: f169_0_createList_Return -> f229_0_random_ArrayAccess : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p1 > 0 /\ arg1p1-arg2 <= 0), cost: 1
   4: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
   2: f1_0_main_Load -> f194_0_createList_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
   8: f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg3'=arg3p2, (arg1 > 0 /\ 1+arg1p2 > 0), cost: 1
   9: f194_0_createList_LE -> f194_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, arg1 > 0, cost: 1
  10: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg3'=arg3p6, (arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
  11: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-1+arg2, arg3'=arg3p7, (-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg1 > 0 /\ 1+arg1p2 > 0 /\ -arg2p2+arg2 == 0), cost: 1
	New rule:
	f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg2'=arg2, arg3'=arg3p2, (0 == 0 /\ arg1 > 0 /\ 1+arg1p2 > 0), cost: 1
	
		propagated equality arg2p2 = arg2
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg2'=arg2, arg3'=arg3p2, (0 == 0 /\ arg1 > 0 /\ 1+arg1p2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg2'=arg2, arg3'=arg3p2, (arg1 > 0 /\ 1+arg1p2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg2'=arg2, arg3'=arg3p2, (arg1 > 0 /\ 1+arg1p2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg3'=arg3p2, (arg1 > 0 /\ 1+arg1p2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f194_0_createList_LE -> f194_0_createList_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (arg1 > 0 /\ -1+arg1-arg1p4 == 0), cost: 1
	New rule:
	f194_0_createList_LE -> f194_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, (0 == 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg1p4 = -1+arg1
		
	Simplified Guard

	Original rule:
	f194_0_createList_LE -> f194_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, (0 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f194_0_createList_LE -> f194_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, arg1 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -arg2p6+arg2 == 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
	New rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, (0 == 0 /\ arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
	
		propagated equality arg2p6 = arg2
		
	Simplified Guard

	Original rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, (0 == 0 /\ arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
	New rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, (arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, (arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
	New rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg3'=arg3p6, (arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ -1-arg2p7+arg2 == 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-1+arg2, arg3'=arg3p7, (0 == 0 /\ -1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg2p7 = -1+arg2
		
	Simplified Guard

	Original rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-1+arg2, arg3'=arg3p7, (0 == 0 /\ -1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-1+arg2, arg3'=arg3p7, (-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0), cost: 1

Step with 7

	Trace

	7[T]
	
	Blocked

	[{}, {}]

Step with 2

	Trace

	7[T], 2[(1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 9

	Trace

	7[T], 2[(1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0)], 9[(arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   0: f169_0_createList_Return -> f229_0_random_ArrayAccess : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p1 > 0 /\ arg1p1-arg2 <= 0), cost: 1
   4: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
   2: f1_0_main_Load -> f194_0_createList_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
   8: f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg3'=arg3p2, (arg1 > 0 /\ 1+arg1p2 > 0), cost: 1
   9: f194_0_createList_LE -> f194_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, arg1 > 0, cost: 1
  12: f194_0_createList_LE -> f194_0_createList_LE : arg1'=arg1-n, arg2'=arg2p4, arg3'=arg3p4, (1+arg1-n > 0 /\ -1+n >= 0), cost: 1
  10: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg3'=arg3p6, (arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
  11: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-1+arg2, arg3'=arg3p7, (-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, T, cost: 1

	Loop Acceleration

	Original rule:
	f194_0_createList_LE -> f194_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, (arg1 > 0), cost: 1
	New rule:
	f194_0_createList_LE -> f194_0_createList_LE : arg1'=arg1-n, arg2'=arg2p4, arg3'=arg3p4, (1+arg1-n > 0 /\ -1+n >= 0), cost: 1

		arg1 > 0 [0]: montonic decrease yields 1+arg1-n > 0
		
		arg1 > 0 [1]: eventual increase yields (1 <= 0 /\ arg1 > 0)
		
		Replacement map: {arg1 > 0 -> 1+arg1-n > 0}

	Trace

	7[T], 2[(1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0)], 12[(1+arg1-n > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {}, {9[T], 12[T]}]

Backtrack

	Trace

	7[T], 2[(1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0)]
	
	Blocked

	[{}, {}, {12[T]}]

Step with 9

	Trace

	7[T], 2[(1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0)], 9[(arg1 > 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}]

Covered

	Trace

	7[T], 2[(1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0)]
	
	Blocked

	[{}, {}, {9[T], 12[T]}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {2[T]}]

Step with 8

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)]
	
	Blocked

	[{}, {2[T]}, {}]

Step with 4

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T]}, {}, {}]

Step with 10

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 10

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {}, {}, {}]

Covered

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {}, {10[T]}]

Step with 11

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)], 11[(-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {2[T]}, {}, {}, {10[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   0: f169_0_createList_Return -> f229_0_random_ArrayAccess : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p1 > 0 /\ arg1p1-arg2 <= 0), cost: 1
   4: f229_0_random_ArrayAccess -> f298_0_appE_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
   2: f1_0_main_Load -> f194_0_createList_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p3 > 0), cost: 1
   8: f1_0_main_Load -> f229_0_random_ArrayAccess : arg1'=arg1p2, arg3'=arg3p2, (arg1 > 0 /\ 1+arg1p2 > 0), cost: 1
   9: f194_0_createList_LE -> f194_0_createList_LE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, arg1 > 0, cost: 1
  12: f194_0_createList_LE -> f194_0_createList_LE : arg1'=arg1-n, arg2'=arg2p4, arg3'=arg3p4, (1+arg1-n > 0 /\ -1+n >= 0), cost: 1
  10: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p6, arg3'=arg3p6, (arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0), cost: 1
  11: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-1+arg2, arg3'=arg3p7, (-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0), cost: 1
  13: f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=2+arg3p7, arg2'=-n2+arg2, arg3'=arg3p7, (-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, T, cost: 1

	Loop Acceleration

	Original rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-1+arg2, arg3'=arg3p7, (-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-n2+arg2, arg3'=arg3p7, (-1+arg1p7 > 0 /\ arg1-arg1p7 >= 0 /\ -2-arg3p7+arg1p7 >= 0 /\ 2+arg3p7-arg1p7 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0), cost: 1

		-1+arg1p7 > 0 [0]: monotonic increase yields -1+arg1p7 > 0
		
		-2-arg3p7+arg1 >= 0 [0]: montonic decrease yields -2-arg3p7+arg1p7 >= 0, dependencies: arg1-arg1p7 >= 0
		
		-2-arg3p7+arg1 >= 0 [1]: eventual decrease yields (-2-arg3p7+arg1 >= 0 /\ -2-arg3p7+arg1p7 >= 0)
		
		-2-arg3p7+arg1 >= 0 [2]: eventual increase yields (-2-arg3p7+arg1 >= 0 /\ arg1-arg1p7 <= 0)
		
		arg1-arg1p7 >= 0 [0]: monotonic increase yields arg1-arg1p7 >= 0
		
		1+arg3p7 > 0 [0]: monotonic increase yields 1+arg3p7 > 0
		
		-1+arg1 > 0 [0]: montonic decrease yields -1+arg1p7 > 0, dependencies: arg1-arg1p7 >= 0
		
		-1+arg1 > 0 [1]: eventual increase yields (arg1-arg1p7 <= 0 /\ -1+arg1 > 0)
		
		1+arg3 > 0 [0]: montonic decrease yields 1+arg3p7 > 0, dependencies: -arg3p7+arg3 >= 0
		
		1+arg3 > 0 [1]: eventual decrease yields (1+arg3p7 > 0 /\ 1+arg3 > 0)
		
		1+arg3 > 0 [2]: eventual increase yields (1+arg3 > 0 /\ -arg3p7+arg3 <= 0)
		
		-arg3p7+arg3 >= 0 [0]: monotonic increase yields -arg3p7+arg3 >= 0
		
		2+arg3-arg1p7 >= 0 [0]: montonic decrease yields 2+arg3p7-arg1p7 >= 0, dependencies: -arg3p7+arg3 >= 0
		
		2+arg3-arg1p7 >= 0 [1]: eventual increase yields (-arg3p7+arg3 <= 0 /\ 2+arg3-arg1p7 >= 0)
		
		arg2 > 0 [0]: montonic decrease yields 1-n2+arg2 > 0
		
		arg2 > 0 [1]: eventual increase yields (1 <= 0 /\ arg2 > 0)
		
		Replacement map: {-1+arg1p7 > 0 -> -1+arg1p7 > 0, -2-arg3p7+arg1 >= 0 -> -2-arg3p7+arg1p7 >= 0, arg1-arg1p7 >= 0 -> arg1-arg1p7 >= 0, 1+arg3p7 > 0 -> 1+arg3p7 > 0, -1+arg1 > 0 -> -1+arg1p7 > 0, 1+arg3 > 0 -> 1+arg3p7 > 0, -arg3p7+arg3 >= 0 -> -arg3p7+arg3 >= 0, 2+arg3-arg1p7 >= 0 -> 2+arg3p7-arg1p7 >= 0, arg2 > 0 -> 1-n2+arg2 > 0}

	made implied equalities explicit

	Original rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-n2+arg2, arg3'=arg3p7, (-1+arg1p7 > 0 /\ arg1-arg1p7 >= 0 /\ -2-arg3p7+arg1p7 >= 0 /\ 2+arg3p7-arg1p7 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0), cost: 1
	New rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-n2+arg2, arg3'=arg3p7, (-1+arg1p7 > 0 /\ arg1-arg1p7 >= 0 /\ -2-arg3p7+arg1p7 >= 0 /\ 2+arg3p7-arg1p7 >= 0 /\ 2+arg3p7-arg1p7 == 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=arg1p7, arg2'=-n2+arg2, arg3'=arg3p7, (-1+arg1p7 > 0 /\ arg1-arg1p7 >= 0 /\ -2-arg3p7+arg1p7 >= 0 /\ 2+arg3p7-arg1p7 >= 0 /\ 2+arg3p7-arg1p7 == 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0), cost: 1
	New rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=2+arg3p7, arg2'=-n2+arg2, arg3'=arg3p7, (0 >= 0 /\ 0 == 0 /\ -2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0), cost: 1
	
		propagated equality arg1p7 = 2+arg3p7
		
	Simplified Guard

	Original rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=2+arg3p7, arg2'=-n2+arg2, arg3'=arg3p7, (0 >= 0 /\ 0 == 0 /\ -2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0), cost: 1
	New rule:
	f298_0_appE_NONNULL -> f298_0_appE_NONNULL : arg1'=2+arg3p7, arg2'=-n2+arg2, arg3'=arg3p7, (-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0), cost: 1

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)], 13[(-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {}, {10[T]}, {11[T], 13[T]}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {}, {10[T], 13[T]}]

Step with 11

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)], 11[(-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {2[T]}, {}, {}, {10[T], 13[T]}, {}]

Covered

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {}, {10[T], 11[T], 13[T]}]

Backtrack

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T]}]

Step with 11

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 11[(-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T]}, {}]

Covered

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T], 11[T]}]

Step with 13

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 13[(-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T], 11[T]}, {13[T]}]

Step with 10

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 13[(-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T], 11[T]}, {13[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 10

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 13[(-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T], 11[T]}, {13[T]}, {}, {}]

Covered

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 13[(-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0)], 10[(arg3 > 0 /\ 2-arg1+arg1p6 <= 0 /\ -2+arg1 > 0 /\ 3+arg3p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ -arg3+arg1p6 <= 0 /\ 1+arg3p6-arg3 <= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T], 11[T]}, {13[T]}, {10[T]}]

Backtrack

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 13[(-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T], 11[T]}, {10[T], 13[T]}]

Step with 11

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 13[(-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0)], 11[(-1+arg1p7 > 0 /\ -arg1+arg1p7 <= 0 /\ 2+arg3p7-arg1 <= 0 /\ arg3p7-arg3 <= 0 /\ 1+arg3p7 > 0 /\ -1+arg1 > 0 /\ 1+arg3 > 0 /\ -2-arg3+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T], 11[T]}, {10[T], 13[T]}, {}]

Covered

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)], 13[(-2-arg3p7+arg1 >= 0 /\ 1+arg3p7 > 0 /\ -1+n2 >= 0 /\ 1-n2+arg2 > 0 /\ -arg3p7+arg3 >= 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T], 11[T]}, {10[T], 11[T], 13[T]}]

Backtrack

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)], 4[(1+arg2p5 > 0 /\ -arg1+arg1p5 <= 0 /\ 1+arg3p5 > 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T]}, {}, {10[T], 11[T], 13[T]}]

Backtrack

	Trace

	7[T], 8[(arg1 > 0 /\ 1+arg1p2 > 0)]
	
	Blocked

	[{}, {2[T]}, {4[T]}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {2[T], 8[T]}]

Backtrack

	Trace

	Blocked

	[{7[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
