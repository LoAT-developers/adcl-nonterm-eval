WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f152_0_createList_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg1P0-arg1 <= 0 /\ -1+x30-arg2P0 == 0 /\ arg2 > 0 /\ 1+x30 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
   1: f152_0_createList_LE -> f196_0_reverse_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg1 > 0 /\ -1+arg2 < 0 /\ 1+arg1P1 > 0), cost: 1
   2: f152_0_createList_LE -> f152_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1 > 0 /\ arg2 > 0 /\ -1+arg2-arg2P2 == 0 /\ arg1P2 > 0 /\ -2-arg1+arg1P2 <= 0), cost: 1
   3: f196_0_reverse_NULL -> f196_0_reverse_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg1P3-arg1 <= 0 /\ arg1 > 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f152_0_createList_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg1P0-arg1 <= 0 /\ -1+x30-arg2P0 == 0 /\ arg2 > 0 /\ 1+x30 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0), cost: 1
New rule:
f1_0_main_Load -> f152_0_createList_LE : arg2'=-1+x30, arg1'=arg1P0, (1+arg1P0-arg1 <= 0 /\ arg2 > 0 /\ 1+x30 > 0 /\ 1+arg1P0 > 0), cost: 1

Applied preprocessing
Original rule:
f152_0_createList_LE -> f196_0_reverse_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1+arg1 > 0 /\ -1+arg2 < 0 /\ 1+arg1P1 > 0), cost: 1
New rule:
f152_0_createList_LE -> f196_0_reverse_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1-arg2 > 0 /\ 1+arg1P1 > 0), cost: 1

Applied preprocessing
Original rule:
f152_0_createList_LE -> f152_0_createList_LE : arg2'=arg2P2, arg1'=arg1P2, (1+arg1 > 0 /\ arg2 > 0 /\ -1+arg2-arg2P2 == 0 /\ arg1P2 > 0 /\ -2-arg1+arg1P2 <= 0), cost: 1
New rule:
f152_0_createList_LE -> f152_0_createList_LE : arg2'=-1+arg2, arg1'=arg1P2, (1+arg1 > 0 /\ arg2 > 0 /\ arg1P2 > 0 /\ -2-arg1+arg1P2 <= 0), cost: 1

Applied preprocessing
Original rule:
f196_0_reverse_NULL -> f196_0_reverse_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg1P3-arg1 <= 0 /\ arg1 > 0), cost: 1
New rule:
f196_0_reverse_NULL -> f196_0_reverse_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg1P3-arg1 <= 0), cost: 1

Simplified rules
Start location: __init
   5: f1_0_main_Load -> f152_0_createList_LE : arg2'=-1+x30, arg1'=arg1P0, (1+arg1P0-arg1 <= 0 /\ arg2 > 0 /\ 1+x30 > 0 /\ 1+arg1P0 > 0), cost: 1
   6: f152_0_createList_LE -> f196_0_reverse_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1-arg2 > 0 /\ 1+arg1P1 > 0), cost: 1
   7: f152_0_createList_LE -> f152_0_createList_LE : arg2'=-1+arg2, arg1'=arg1P2, (1+arg1 > 0 /\ arg2 > 0 /\ arg1P2 > 0 /\ -2-arg1+arg1P2 <= 0), cost: 1
   8: f196_0_reverse_NULL -> f196_0_reverse_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg1P3-arg1 <= 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied acceleration
Original rule:
f152_0_createList_LE -> f152_0_createList_LE : arg2'=-1+arg2, arg1'=arg1P2, (1+arg1 > 0 /\ arg2 > 0 /\ arg1P2 > 0 /\ -2-arg1+arg1P2 <= 0), cost: 1
New rule:
f152_0_createList_LE -> f152_0_createList_LE : arg2'=-n+arg2, arg1'=arg1P2, (1+arg1 > 0 /\ 1-n+arg2 > 0 /\ arg1P2 > 0 /\ -1+n >= 0 /\ 2+arg1-arg1P2 >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_eIGeBD.txt

Applied instantiation
Original rule:
f152_0_createList_LE -> f152_0_createList_LE : arg2'=-n+arg2, arg1'=arg1P2, (1+arg1 > 0 /\ 1-n+arg2 > 0 /\ arg1P2 > 0 /\ -1+n >= 0 /\ 2+arg1-arg1P2 >= 0), cost: n
New rule:
f152_0_createList_LE -> f152_0_createList_LE : arg2'=0, arg1'=arg1P2, (1 > 0 /\ 1+arg1 > 0 /\ arg1P2 > 0 /\ -1+arg2 >= 0 /\ 2+arg1-arg1P2 >= 0), cost: arg2

Applied simplification
Original rule:
f152_0_createList_LE -> f152_0_createList_LE : arg2'=0, arg1'=arg1P2, (1 > 0 /\ 1+arg1 > 0 /\ arg1P2 > 0 /\ -1+arg2 >= 0 /\ 2+arg1-arg1P2 >= 0), cost: arg2
New rule:
f152_0_createList_LE -> f152_0_createList_LE : arg2'=0, arg1'=arg1P2, (1+arg1 > 0 /\ arg1P2 > 0 /\ -1+arg2 >= 0 /\ 2+arg1-arg1P2 >= 0), cost: arg2

Applied deletion
Removed the following rules: 7

Accelerated simple loops
Start location: __init
   5: f1_0_main_Load -> f152_0_createList_LE : arg2'=-1+x30, arg1'=arg1P0, (1+arg1P0-arg1 <= 0 /\ arg2 > 0 /\ 1+x30 > 0 /\ 1+arg1P0 > 0), cost: 1
   6: f152_0_createList_LE -> f196_0_reverse_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1-arg2 > 0 /\ 1+arg1P1 > 0), cost: 1
  10: f152_0_createList_LE -> f152_0_createList_LE : arg2'=0, arg1'=arg1P2, (1+arg1 > 0 /\ arg1P2 > 0 /\ -1+arg2 >= 0 /\ 2+arg1-arg1P2 >= 0), cost: arg2
   8: f196_0_reverse_NULL -> f196_0_reverse_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg1P3-arg1 <= 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f152_0_createList_LE : arg2'=-1+x30, arg1'=arg1P0, (1+arg1P0-arg1 <= 0 /\ arg2 > 0 /\ 1+x30 > 0 /\ 1+arg1P0 > 0), cost: 1
Second rule:
f152_0_createList_LE -> f152_0_createList_LE : arg2'=0, arg1'=arg1P2, (1+arg1 > 0 /\ arg1P2 > 0 /\ -1+arg2 >= 0 /\ 2+arg1-arg1P2 >= 0), cost: arg2
New rule:
f1_0_main_Load -> f152_0_createList_LE : arg2'=0, arg1'=arg1P2, (-1-arg1+arg1P2 <= 0 /\ arg2 > 0 /\ -2+x30 >= 0 /\ arg1P2 > 0 /\ 1-arg1 <= 0), cost: x30

Applied deletion
Removed the following rules: 10

Applied chaining
First rule:
f152_0_createList_LE -> f196_0_reverse_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1-arg2 > 0 /\ 1+arg1P1 > 0), cost: 1
Second rule:
f196_0_reverse_NULL -> f196_0_reverse_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg1P3-arg1 <= 0), cost: 1
New rule:
f152_0_createList_LE -> f196_0_reverse_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg1P3-arg1 <= 0 /\ 1-arg2 > 0), cost: 2

Applied deletion
Removed the following rules: 8

Chained accelerated rules with incoming rules
Start location: __init
   5: f1_0_main_Load -> f152_0_createList_LE : arg2'=-1+x30, arg1'=arg1P0, (1+arg1P0-arg1 <= 0 /\ arg2 > 0 /\ 1+x30 > 0 /\ 1+arg1P0 > 0), cost: 1
  11: f1_0_main_Load -> f152_0_createList_LE : arg2'=0, arg1'=arg1P2, (-1-arg1+arg1P2 <= 0 /\ arg2 > 0 /\ -2+x30 >= 0 /\ arg1P2 > 0 /\ 1-arg1 <= 0), cost: x30
   6: f152_0_createList_LE -> f196_0_reverse_NULL : arg2'=arg2P1, arg1'=arg1P1, (-arg1+arg1P1 <= 0 /\ 1-arg2 > 0 /\ 1+arg1P1 > 0), cost: 1
  12: f152_0_createList_LE -> f196_0_reverse_NULL : arg2'=arg2P3, arg1'=arg1P3, (1+arg1P3 > 0 /\ 1+arg1P3-arg1 <= 0 /\ 1-arg2 > 0), cost: 2
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

