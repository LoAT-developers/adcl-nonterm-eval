WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f593_0_main_LE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg1P0-arg1 <= 0 /\ arg1P0 > 0 /\ -arg2 == 0 /\ arg1 > 0 /\ -arg5P0 == 0 /\ -arg6P0 == 0 /\ -arg2P0 == 0 /\ -arg3P0 == 0 /\ -arg4P0 == 0), cost: 1
   1: f1_0_main_Load -> f593_0_main_LE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg1P1-arg1 <= 0 /\ 1-arg6P1 == 0 /\ arg1P1 > 0 /\ 1-arg4P1 == 0 /\ -arg3P1 == 0 /\ 1+arg2P1 > 0 /\ arg1 > 0 /\ 1-arg2 == 0 /\ 1-arg5P1 == 0), cost: 1
   2: f1_0_main_Load -> f593_0_main_LE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, (-arg1+arg1P2 <= 0 /\ 1+arg3P2 > 0 /\ 1+arg2P2 > 0 /\ 2-arg5P2 == 0 /\ arg2-arg4P2 == 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg2-arg6P2 == 0 /\ arg1P2 > 0), cost: 1
   3: f593_0_main_LE -> f593_0_main_LE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (-arg6P3+arg4 == 0 /\ arg4-arg4P3 == 0 /\ -arg1+arg1P3 <= 0 /\ arg5-arg5P3 == 0 /\ arg4-arg6 == 0 /\ arg5-arg4 >= 0 /\ -1+arg2-arg2P3 == 0 /\ arg1 > 0 /\ -1+arg2-arg3P3 == 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: 1
   4: f593_0_main_LE -> f593_0_main_LE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+x220 > 0 /\ 1+arg5 > 0 /\ arg4-arg6P4 == 0 /\ -arg4P4+arg4 == 0 /\ arg1P4 > 0 /\ arg4-arg6 == 0 /\ arg5-arg4 < 0 /\ arg1 > 0 /\ -1-x220+arg2-arg2P4 == 0 /\ arg3 > 0 /\ 1+arg5-arg5P4 == 0 /\ -1-x220+arg2-arg3P4 == 0 /\ 1+arg4 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg6'=arg6P0, arg3'=arg3P0, (arg1P0-arg1 <= 0 /\ arg1P0 > 0 /\ -arg2 == 0 /\ arg1 > 0 /\ -arg5P0 == 0 /\ -arg6P0 == 0 /\ -arg2P0 == 0 /\ -arg3P0 == 0 /\ -arg4P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=0, arg2'=0, arg4'=0, arg1'=arg1P0, arg6'=0, arg3'=0, (arg1P0-arg1 <= 0 /\ arg2 == 0 /\ arg1P0 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg6'=arg6P1, arg3'=arg3P1, (arg1P1-arg1 <= 0 /\ 1-arg6P1 == 0 /\ arg1P1 > 0 /\ 1-arg4P1 == 0 /\ -arg3P1 == 0 /\ 1+arg2P1 > 0 /\ arg1 > 0 /\ 1-arg2 == 0 /\ 1-arg5P1 == 0), cost: 1
New rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg6'=1, arg3'=0, (arg1P1-arg1 <= 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -1+arg2 == 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg6'=arg6P2, arg3'=arg3P2, (-arg1+arg1P2 <= 0 /\ 1+arg3P2 > 0 /\ 1+arg2P2 > 0 /\ 2-arg5P2 == 0 /\ arg2-arg4P2 == 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg2-arg6P2 == 0 /\ arg1P2 > 0), cost: 1
New rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=2, arg2'=arg2P2, arg4'=arg2, arg1'=arg1P2, arg6'=arg2, arg3'=arg3P2, (-arg1+arg1P2 <= 0 /\ 1+arg3P2 > 0 /\ 1+arg2P2 > 0 /\ -1+arg2 > 0 /\ arg1P2 > 0), cost: 1

Applied preprocessing
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg6'=arg6P3, arg3'=arg3P3, (-arg6P3+arg4 == 0 /\ arg4-arg4P3 == 0 /\ -arg1+arg1P3 <= 0 /\ arg5-arg5P3 == 0 /\ arg4-arg6 == 0 /\ arg5-arg4 >= 0 /\ -1+arg2-arg2P3 == 0 /\ arg1 > 0 /\ -1+arg2-arg3P3 == 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: 1
New rule:
f593_0_main_LE -> f593_0_main_LE : arg2'=-1+arg2, arg1'=arg1P3, arg6'=arg4, arg3'=-1+arg2, (-arg1+arg1P3 <= 0 /\ arg4-arg6 == 0 /\ arg5-arg4 >= 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg6'=arg6P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ 1+x220 > 0 /\ 1+arg5 > 0 /\ arg4-arg6P4 == 0 /\ -arg4P4+arg4 == 0 /\ arg1P4 > 0 /\ arg4-arg6 == 0 /\ arg5-arg4 < 0 /\ arg1 > 0 /\ -1-x220+arg2-arg2P4 == 0 /\ arg3 > 0 /\ 1+arg5-arg5P4 == 0 /\ -1-x220+arg2-arg3P4 == 0 /\ 1+arg4 > 0), cost: 1
New rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=1+arg5, arg2'=-1-x220+arg2, arg1'=arg1P4, arg6'=arg4, arg3'=-1-x220+arg2, (arg1P4-arg1 <= 0 /\ 1+x220 > 0 /\ 1+arg5 > 0 /\ -arg5+arg4 > 0 /\ arg1P4 > 0 /\ arg4-arg6 == 0 /\ arg3 > 0), cost: 1

Simplified rules
Start location: __init
   6: f1_0_main_Load -> f593_0_main_LE : arg5'=0, arg2'=0, arg4'=0, arg1'=arg1P0, arg6'=0, arg3'=0, (arg1P0-arg1 <= 0 /\ arg2 == 0 /\ arg1P0 > 0), cost: 1
   7: f1_0_main_Load -> f593_0_main_LE : arg5'=1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg6'=1, arg3'=0, (arg1P1-arg1 <= 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -1+arg2 == 0), cost: 1
   8: f1_0_main_Load -> f593_0_main_LE : arg5'=2, arg2'=arg2P2, arg4'=arg2, arg1'=arg1P2, arg6'=arg2, arg3'=arg3P2, (-arg1+arg1P2 <= 0 /\ 1+arg3P2 > 0 /\ 1+arg2P2 > 0 /\ -1+arg2 > 0 /\ arg1P2 > 0), cost: 1
   9: f593_0_main_LE -> f593_0_main_LE : arg2'=-1+arg2, arg1'=arg1P3, arg6'=arg4, arg3'=-1+arg2, (-arg1+arg1P3 <= 0 /\ arg4-arg6 == 0 /\ arg5-arg4 >= 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: 1
  10: f593_0_main_LE -> f593_0_main_LE : arg5'=1+arg5, arg2'=-1-x220+arg2, arg1'=arg1P4, arg6'=arg4, arg3'=-1-x220+arg2, (arg1P4-arg1 <= 0 /\ 1+x220 > 0 /\ 1+arg5 > 0 /\ -arg5+arg4 > 0 /\ arg1P4 > 0 /\ arg4-arg6 == 0 /\ arg3 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, TRUE, cost: 1


Applied acceleration
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg2'=-1+arg2, arg1'=arg1P3, arg6'=arg4, arg3'=-1+arg2, (-arg1+arg1P3 <= 0 /\ arg4-arg6 == 0 /\ arg5-arg4 >= 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: 1
New rule:
f593_0_main_LE -> f593_0_main_LE : arg2'=-n+arg2, arg1'=arg1P3, arg6'=arg4, arg3'=-n+arg2, (arg1-arg1P3 >= 0 /\ -arg4+arg6 >= 0 /\ arg4-arg6 >= 0 /\ arg5-arg4 >= 0 /\ 1-n+arg2 > 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0 /\ -1+n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PMdFof.txt

Applied instantiation
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg2'=-n+arg2, arg1'=arg1P3, arg6'=arg4, arg3'=-n+arg2, (arg1-arg1P3 >= 0 /\ -arg4+arg6 >= 0 /\ arg4-arg6 >= 0 /\ arg5-arg4 >= 0 /\ 1-n+arg2 > 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0 /\ -1+n >= 0), cost: n
New rule:
f593_0_main_LE -> f593_0_main_LE : arg2'=0, arg1'=arg1P3, arg6'=arg4, arg3'=0, (arg1-arg1P3 >= 0 /\ 1 > 0 /\ -arg4+arg6 >= 0 /\ arg4-arg6 >= 0 /\ arg5-arg4 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: arg2

Applied acceleration
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=1+arg5, arg2'=-1-x220+arg2, arg1'=arg1P4, arg6'=arg4, arg3'=-1-x220+arg2, (arg1P4-arg1 <= 0 /\ 1+x220 > 0 /\ 1+arg5 > 0 /\ -arg5+arg4 > 0 /\ arg1P4 > 0 /\ arg4-arg6 == 0 /\ arg3 > 0), cost: 1
New rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg5+n0, arg2'=arg2-n0-x220*n0, arg1'=arg1P4, arg6'=arg4, arg3'=-x220+arg2-x220*(-1+n0)-n0, (-1+n0 >= 0 /\ 1+x220 > 0 /\ 1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ 1-arg5+arg4-n0 > 0 /\ 1-x220+arg2-n0-x220*(-2+n0) > 0 /\ arg3 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NaILbB.txt

Applied instantiation
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg5+n0, arg2'=arg2-n0-x220*n0, arg1'=arg1P4, arg6'=arg4, arg3'=-x220+arg2-x220*(-1+n0)-n0, (-1+n0 >= 0 /\ 1+x220 > 0 /\ 1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ 1-arg5+arg4-n0 > 0 /\ 1-x220+arg2-n0-x220*(-2+n0) > 0 /\ arg3 > 0), cost: n0
New rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg5+arg2, arg2'=0, arg1'=arg1P4, arg6'=arg4, arg3'=0, (1 > 0 /\ 1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ 1-arg5-arg2+arg4 > 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0), cost: arg2

Applied instantiation
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg5+n0, arg2'=arg2-n0-x220*n0, arg1'=arg1P4, arg6'=arg4, arg3'=-x220+arg2-x220*(-1+n0)-n0, (-1+n0 >= 0 /\ 1+x220 > 0 /\ 1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ 1-arg5+arg4-n0 > 0 /\ 1-x220+arg2-n0-x220*(-2+n0) > 0 /\ arg3 > 0), cost: n0
New rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg4, arg2'=arg5+arg2-arg4, arg1'=arg1P4, arg6'=arg4, arg3'=arg5+arg2-arg4, (1 > 0 /\ 1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ 1+arg5+arg2-arg4 > 0 /\ arg3 > 0 /\ -1-arg5+arg4 >= 0), cost: -arg5+arg4

Applied simplification
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg2'=0, arg1'=arg1P3, arg6'=arg4, arg3'=0, (arg1-arg1P3 >= 0 /\ 1 > 0 /\ -arg4+arg6 >= 0 /\ arg4-arg6 >= 0 /\ arg5-arg4 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: arg2
New rule:
f593_0_main_LE -> f593_0_main_LE : arg2'=0, arg1'=arg1P3, arg6'=arg4, arg3'=0, (arg1-arg1P3 >= 0 /\ -arg4+arg6 >= 0 /\ arg4-arg6 >= 0 /\ arg5-arg4 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: arg2

Applied simplification
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg5+arg2, arg2'=0, arg1'=arg1P4, arg6'=arg4, arg3'=0, (1 > 0 /\ 1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ 1-arg5-arg2+arg4 > 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0), cost: arg2
New rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg5+arg2, arg2'=0, arg1'=arg1P4, arg6'=arg4, arg3'=0, (1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ 1-arg5-arg2+arg4 > 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0), cost: arg2

Applied simplification
Original rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg4, arg2'=arg5+arg2-arg4, arg1'=arg1P4, arg6'=arg4, arg3'=arg5+arg2-arg4, (1 > 0 /\ 1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ 1+arg5+arg2-arg4 > 0 /\ arg3 > 0 /\ -1-arg5+arg4 >= 0), cost: -arg5+arg4
New rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg4, arg2'=arg5+arg2-arg4, arg1'=arg1P4, arg6'=arg4, arg3'=arg5+arg2-arg4, (1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ 1+arg5+arg2-arg4 > 0 /\ arg3 > 0 /\ -1-arg5+arg4 >= 0), cost: -arg5+arg4

Applied deletion
Removed the following rules: 9 10

Accelerated simple loops
Start location: __init
   6: f1_0_main_Load -> f593_0_main_LE : arg5'=0, arg2'=0, arg4'=0, arg1'=arg1P0, arg6'=0, arg3'=0, (arg1P0-arg1 <= 0 /\ arg2 == 0 /\ arg1P0 > 0), cost: 1
   7: f1_0_main_Load -> f593_0_main_LE : arg5'=1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg6'=1, arg3'=0, (arg1P1-arg1 <= 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -1+arg2 == 0), cost: 1
   8: f1_0_main_Load -> f593_0_main_LE : arg5'=2, arg2'=arg2P2, arg4'=arg2, arg1'=arg1P2, arg6'=arg2, arg3'=arg3P2, (-arg1+arg1P2 <= 0 /\ 1+arg3P2 > 0 /\ 1+arg2P2 > 0 /\ -1+arg2 > 0 /\ arg1P2 > 0), cost: 1
  14: f593_0_main_LE -> f593_0_main_LE : arg2'=0, arg1'=arg1P3, arg6'=arg4, arg3'=0, (arg1-arg1P3 >= 0 /\ -arg4+arg6 >= 0 /\ arg4-arg6 >= 0 /\ arg5-arg4 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: arg2
  15: f593_0_main_LE -> f593_0_main_LE : arg5'=arg5+arg2, arg2'=0, arg1'=arg1P4, arg6'=arg4, arg3'=0, (1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ 1-arg5-arg2+arg4 > 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0), cost: arg2
  16: f593_0_main_LE -> f593_0_main_LE : arg5'=arg4, arg2'=arg5+arg2-arg4, arg1'=arg1P4, arg6'=arg4, arg3'=arg5+arg2-arg4, (1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ 1+arg5+arg2-arg4 > 0 /\ arg3 > 0 /\ -1-arg5+arg4 >= 0), cost: -arg5+arg4
   5: __init -> f1_0_main_Load : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=2, arg2'=arg2P2, arg4'=arg2, arg1'=arg1P2, arg6'=arg2, arg3'=arg3P2, (-arg1+arg1P2 <= 0 /\ 1+arg3P2 > 0 /\ 1+arg2P2 > 0 /\ -1+arg2 > 0 /\ arg1P2 > 0), cost: 1
Second rule:
f593_0_main_LE -> f593_0_main_LE : arg2'=0, arg1'=arg1P3, arg6'=arg4, arg3'=0, (arg1-arg1P3 >= 0 /\ -arg4+arg6 >= 0 /\ arg4-arg6 >= 0 /\ arg5-arg4 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0 /\ arg1P3 > 0 /\ 1+arg4 > 0), cost: arg2
New rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=2, arg2'=0, arg4'=arg2, arg1'=arg1P3, arg6'=arg2, arg3'=0, (-arg1+arg1P3 <= 0 /\ -2+arg2 == 0 /\ -1+arg2P2 >= 0 /\ arg1P3 > 0), cost: 1+arg2P2

Applied chaining
First rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=2, arg2'=arg2P2, arg4'=arg2, arg1'=arg1P2, arg6'=arg2, arg3'=arg3P2, (-arg1+arg1P2 <= 0 /\ 1+arg3P2 > 0 /\ 1+arg2P2 > 0 /\ -1+arg2 > 0 /\ arg1P2 > 0), cost: 1
Second rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg5+arg2, arg2'=0, arg1'=arg1P4, arg6'=arg4, arg3'=0, (1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ 1-arg5-arg2+arg4 > 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ -1+arg2 >= 0 /\ arg3 > 0), cost: arg2
New rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=2+arg2P2, arg2'=0, arg4'=arg2, arg1'=arg1P4, arg6'=arg2, arg3'=0, (arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -1+arg2P2 >= 0 /\ -1+arg2-arg2P2 > 0), cost: 1+arg2P2

Applied chaining
First rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=2, arg2'=arg2P2, arg4'=arg2, arg1'=arg1P2, arg6'=arg2, arg3'=arg3P2, (-arg1+arg1P2 <= 0 /\ 1+arg3P2 > 0 /\ 1+arg2P2 > 0 /\ -1+arg2 > 0 /\ arg1P2 > 0), cost: 1
Second rule:
f593_0_main_LE -> f593_0_main_LE : arg5'=arg4, arg2'=arg5+arg2-arg4, arg1'=arg1P4, arg6'=arg4, arg3'=arg5+arg2-arg4, (1+arg5 > 0 /\ -arg4+arg6 >= 0 /\ -arg1P4+arg1 >= 0 /\ arg1P4 > 0 /\ arg4-arg6 >= 0 /\ 1+arg5+arg2-arg4 > 0 /\ arg3 > 0 /\ -1-arg5+arg4 >= 0), cost: -arg5+arg4
New rule:
f1_0_main_Load -> f593_0_main_LE : arg5'=arg2, arg2'=2-arg2+arg2P2, arg4'=arg2, arg1'=arg1P4, arg6'=arg2, arg3'=2-arg2+arg2P2, (arg1P4-arg1 <= 0 /\ 3-arg2+arg2P2 > 0 /\ arg1P4 > 0 /\ -3+arg2 >= 0), cost: -1+arg2

Applied deletion
Removed the following rules: 14 15 16

Chained accelerated rules with incoming rules
Start location: __init
   6: f1_0_main_Load -> f593_0_main_LE : arg5'=0, arg2'=0, arg4'=0, arg1'=arg1P0, arg6'=0, arg3'=0, (arg1P0-arg1 <= 0 /\ arg2 == 0 /\ arg1P0 > 0), cost: 1
   7: f1_0_main_Load -> f593_0_main_LE : arg5'=1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg6'=1, arg3'=0, (arg1P1-arg1 <= 0 /\ arg1P1 > 0 /\ 1+arg2P1 > 0 /\ -1+arg2 == 0), cost: 1
   8: f1_0_main_Load -> f593_0_main_LE : arg5'=2, arg2'=arg2P2, arg4'=arg2, arg1'=arg1P2, arg6'=arg2, arg3'=arg3P2, (-arg1+arg1P2 <= 0 /\ 1+arg3P2 > 0 /\ 1+arg2P2 > 0 /\ -1+arg2 > 0 /\ arg1P2 > 0), cost: 1
  17: f1_0_main_Load -> f593_0_main_LE : arg5'=2, arg2'=0, arg4'=arg2, arg1'=arg1P3, arg6'=arg2, arg3'=0, (-arg1+arg1P3 <= 0 /\ -2+arg2 == 0 /\ -1+arg2P2 >= 0 /\ arg1P3 > 0), cost: 1+arg2P2
  18: f1_0_main_Load -> f593_0_main_LE : arg5'=2+arg2P2, arg2'=0, arg4'=arg2, arg1'=arg1P4, arg6'=arg2, arg3'=0, (arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ -1+arg2P2 >= 0 /\ -1+arg2-arg2P2 > 0), cost: 1+arg2P2
  19: f1_0_main_Load -> f593_0_main_LE : arg5'=arg2, arg2'=2-arg2+arg2P2, arg4'=arg2, arg1'=arg1P4, arg6'=arg2, arg3'=2-arg2+arg2P2, (arg1P4-arg1 <= 0 /\ 3-arg2+arg2P2 > 0 /\ arg1P4 > 0 /\ -3+arg2 >= 0), cost: -1+arg2
   5: __init -> f1_0_main_Load : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg6'=arg6P5, arg3'=arg3P5, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

