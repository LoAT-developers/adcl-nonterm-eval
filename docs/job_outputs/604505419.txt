NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f104_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-arg1P0+x20-x30 == 0 /\ 1+x20 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x30 > 0), cost: 1
   1: f104_0_main_LE -> f157_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1-arg3P1 == 0 /\ 1-arg1P1+arg1 == 0 /\ 1-arg2P1+arg1 == 0 /\ arg1 > 0), cost: 1
   2: f157_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (-arg3 == 0 /\ -arg1P2+arg1 == 0 /\ -arg2 == 0), cost: 1
   3: f157_0_main_LE -> f157_0_main_LE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-arg1P3+arg1 == 0 /\ arg2 > 0 /\ -1-arg2P3+arg2 == 0 /\ arg2-arg3 == 0 /\ -1+arg2-arg3P3 == 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f104_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-arg1P0+x20-x30 == 0 /\ 1+x20 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x30 > 0), cost: 1
New rule:
f1_0_main_Load -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (1+x20 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x30 > 0), cost: 1

Applied preprocessing
Original rule:
f104_0_main_LE -> f157_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1-arg3P1 == 0 /\ 1-arg1P1+arg1 == 0 /\ 1-arg2P1+arg1 == 0 /\ arg1 > 0), cost: 1
New rule:
f104_0_main_LE -> f157_0_main_LE : arg2'=1+arg1, arg1'=1+arg1, arg3'=1+arg1, arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f157_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (-arg3 == 0 /\ -arg1P2+arg1 == 0 /\ -arg2 == 0), cost: 1
New rule:
f157_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg3'=arg3P2, (arg2 == 0 /\ arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f157_0_main_LE -> f157_0_main_LE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-arg1P3+arg1 == 0 /\ arg2 > 0 /\ -1-arg2P3+arg2 == 0 /\ arg2-arg3 == 0 /\ -1+arg2-arg3P3 == 0), cost: 1
New rule:
f157_0_main_LE -> f157_0_main_LE : arg2'=-1+arg2, arg3'=-1+arg2, (arg2 > 0 /\ arg2-arg3 == 0), cost: 1

Simplified rules
Start location: __init
   5: f1_0_main_Load -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (1+x20 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x30 > 0), cost: 1
   6: f104_0_main_LE -> f157_0_main_LE : arg2'=1+arg1, arg1'=1+arg1, arg3'=1+arg1, arg1 > 0, cost: 1
   7: f157_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg3'=arg3P2, (arg2 == 0 /\ arg3 == 0), cost: 1
   8: f157_0_main_LE -> f157_0_main_LE : arg2'=-1+arg2, arg3'=-1+arg2, (arg2 > 0 /\ arg2-arg3 == 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied acceleration
Original rule:
f157_0_main_LE -> f157_0_main_LE : arg2'=-1+arg2, arg3'=-1+arg2, (arg2 > 0 /\ arg2-arg3 == 0), cost: 1
New rule:
f157_0_main_LE -> f157_0_main_LE : arg2'=arg2-n, arg3'=arg2-n, (-1+n >= 0 /\ 1+arg2-n > 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gcDjie.txt

Applied instantiation
Original rule:
f157_0_main_LE -> f157_0_main_LE : arg2'=arg2-n, arg3'=arg2-n, (-1+n >= 0 /\ 1+arg2-n > 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0), cost: n
New rule:
f157_0_main_LE -> f157_0_main_LE : arg2'=0, arg3'=0, (1 > 0 /\ -1+arg2 >= 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0), cost: arg2

Applied simplification
Original rule:
f157_0_main_LE -> f157_0_main_LE : arg2'=0, arg3'=0, (1 > 0 /\ -1+arg2 >= 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0), cost: arg2
New rule:
f157_0_main_LE -> f157_0_main_LE : arg2'=0, arg3'=0, (-1+arg2 >= 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0), cost: arg2

Applied deletion
Removed the following rules: 8

Accelerated simple loops
Start location: __init
   5: f1_0_main_Load -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (1+x20 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x30 > 0), cost: 1
   6: f104_0_main_LE -> f157_0_main_LE : arg2'=1+arg1, arg1'=1+arg1, arg3'=1+arg1, arg1 > 0, cost: 1
   7: f157_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg3'=arg3P2, (arg2 == 0 /\ arg3 == 0), cost: 1
  10: f157_0_main_LE -> f157_0_main_LE : arg2'=0, arg3'=0, (-1+arg2 >= 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0), cost: arg2
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied chaining
First rule:
f104_0_main_LE -> f157_0_main_LE : arg2'=1+arg1, arg1'=1+arg1, arg3'=1+arg1, arg1 > 0, cost: 1
Second rule:
f157_0_main_LE -> f157_0_main_LE : arg2'=0, arg3'=0, (-1+arg2 >= 0 /\ arg2-arg3 >= 0 /\ -arg2+arg3 >= 0), cost: arg2
New rule:
f104_0_main_LE -> f157_0_main_LE : arg2'=0, arg1'=1+arg1, arg3'=0, arg1 > 0, cost: 2+arg1

Applied deletion
Removed the following rules: 10

Chained accelerated rules with incoming rules
Start location: __init
   5: f1_0_main_Load -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (1+x20 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x30 > 0), cost: 1
   6: f104_0_main_LE -> f157_0_main_LE : arg2'=1+arg1, arg1'=1+arg1, arg3'=1+arg1, arg1 > 0, cost: 1
  11: f104_0_main_LE -> f157_0_main_LE : arg2'=0, arg1'=1+arg1, arg3'=0, arg1 > 0, cost: 2+arg1
   7: f157_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg3'=arg3P2, (arg2 == 0 /\ arg3 == 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (1+x20 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x30 > 0), cost: 1
New rule:
__init -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (arg1P4 > 0 /\ -1+arg2P4 > 0 /\ 1+x20 > 0 /\ 1+x30 > 0), cost: 2

Applied deletion
Removed the following rules: 4 5

Eliminated locations on linear paths
Start location: __init
   6: f104_0_main_LE -> f157_0_main_LE : arg2'=1+arg1, arg1'=1+arg1, arg3'=1+arg1, arg1 > 0, cost: 1
  11: f104_0_main_LE -> f157_0_main_LE : arg2'=0, arg1'=1+arg1, arg3'=0, arg1 > 0, cost: 2+arg1
   7: f157_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg3'=arg3P2, (arg2 == 0 /\ arg3 == 0), cost: 1
  12: __init -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (arg1P4 > 0 /\ -1+arg2P4 > 0 /\ 1+x20 > 0 /\ 1+x30 > 0), cost: 2


Eliminating location f157_0_main_LE by chaining:

Applied chaining
First rule:
f104_0_main_LE -> f157_0_main_LE : arg2'=0, arg1'=1+arg1, arg3'=0, arg1 > 0, cost: 2+arg1
Second rule:
f157_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg3'=arg3P2, (arg2 == 0 /\ arg3 == 0), cost: 1
New rule:
f104_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg1'=1+arg1, arg3'=arg3P2, (0 == 0 /\ arg1 > 0), cost: 3+arg1

Applied simplification
Original rule:
f104_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg1'=1+arg1, arg3'=arg3P2, (0 == 0 /\ arg1 > 0), cost: 3+arg1
New rule:
f104_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg1'=1+arg1, arg3'=arg3P2, arg1 > 0, cost: 3+arg1

Applied deletion
Removed the following rules: 6 7 11

Eliminated locations on tree-shaped paths
Start location: __init
  13: f104_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg1'=1+arg1, arg3'=arg3P2, arg1 > 0, cost: 3+arg1
  12: __init -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (arg1P4 > 0 /\ -1+arg2P4 > 0 /\ 1+x20 > 0 /\ 1+x30 > 0), cost: 2


Applied nonterm
Original rule:
f104_0_main_LE -> f104_0_main_LE : arg2'=arg2P2, arg1'=1+arg1, arg3'=arg3P2, arg1 > 0, cost: 3+arg1
New rule:
f104_0_main_LE -> [5] : (-1+n0 >= 0 /\ arg1 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_pbkKaG.txt

Applied deletion
Removed the following rules: 13

Accelerated simple loops
Start location: __init
  14: f104_0_main_LE -> [5] : (-1+n0 >= 0 /\ arg1 > 0), cost: NONTERM
  12: __init -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (arg1P4 > 0 /\ -1+arg2P4 > 0 /\ 1+x20 > 0 /\ 1+x30 > 0), cost: 2


Applied chaining
First rule:
__init -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (arg1P4 > 0 /\ -1+arg2P4 > 0 /\ 1+x20 > 0 /\ 1+x30 > 0), cost: 2
Second rule:
f104_0_main_LE -> [5] : (-1+n0 >= 0 /\ arg1 > 0), cost: NONTERM
New rule:
__init -> [5] : TRUE, cost: NONTERM

Applied deletion
Removed the following rules: 14

Chained accelerated rules with incoming rules
Start location: __init
  12: __init -> f104_0_main_LE : arg2'=arg2P0, arg1'=x20-x30, arg3'=arg3P0, (arg1P4 > 0 /\ -1+arg2P4 > 0 /\ 1+x20 > 0 /\ 1+x30 > 0), cost: 2
  15: __init -> [5] : TRUE, cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: __init
  15: __init -> [5] : TRUE, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 15 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  TRUE
