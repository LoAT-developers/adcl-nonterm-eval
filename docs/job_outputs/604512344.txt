NO

Initial ITS

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=0, T, cost: 1
   1: [2] -> [3] : -100+i < 0, cost: 1
   5: [2] -> [6] : -100+i >= 0, cost: 1
   2: [3] -> [4] : i'=1+i, T, cost: 1
   3: [4] -> [5] : i'=-1+i, T, cost: 1
   4: [5] -> [2] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=0, T, cost: 1
   5: [2] -> [6] : -100+i >= 0, cost: 1
   8: [2] -> [2] : i'=i, -100+i < 0, cost: 1

	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[2] -> [3] : -100+i < 0, cost: 1
	Second rule:
	[3] -> [4] : i'=1+i, T, cost: 1
	New rule:
	[2] -> [4] : i'=1+i, -100+i < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 1 2
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[2] -> [4] : i'=1+i, -100+i < 0, cost: 1
	Second rule:
	[4] -> [5] : i'=-1+i, T, cost: 1
	New rule:
	[2] -> [5] : i'=i, -100+i < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 3 6
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[2] -> [5] : i'=i, -100+i < 0, cost: 1
	Second rule:
	[5] -> [2] : T, cost: 1
	New rule:
	[2] -> [2] : i'=i, -100+i < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 7

Simplified Transitions

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=0, T, cost: 1
   5: [2] -> [6] : -100+i >= 0, cost: 1
   9: [2] -> [2] : -100+i < 0, cost: 1

	Removed Trivial Updates

	Original rule:
	[2] -> [2] : i'=i, -100+i < 0, cost: 1
	New rule:
	[2] -> [2] : -100+i < 0, cost: 1

Step with 0

	Trace

	0[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	0[T], 9[(-100+i < 0)]
	
	Blocked

	[{}, {5[T]}, {}]

Nonterm

Start location: [1]
Program variables: i
   0: [1] -> [2] : i'=0, T, cost: 1
   5: [2] -> [6] : -100+i >= 0, cost: 1
   9: [2] -> [2] : -100+i < 0, cost: 1
  10: [2] -> LoAT_sink : (100-i > 0 /\ -1+n >= 0), cost: NONTERM

	Certificate of Non-Termination

	Original rule:
	[2] -> [2] : (-100+i < 0), cost: 1
	New rule:
	[2] -> LoAT_sink : (100-i > 0 /\ -1+n >= 0), cost: NONTERM

		100-i > 0 [0]: monotonic increase yields 100-i > 0
		
		Replacement map: {100-i > 0 -> 100-i > 0}

Step with 10

	Trace

	0[T], 10[(100-i > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {5[T]}, {10[T]}]

Refute

	Counterexample

	[ i=0 ] 0 [ i=i ] 10
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
