WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -arg4P0 == 0 /\ -7+arg2P0 > 0 /\ arg1P0 > 0 /\ -5+arg3P0 > 0 /\ -7+arg2P0-arg1 <= 0 /\ arg1P0-arg1 <= 0 /\ 1+x50 > 0 /\ arg1 > 0 /\ -5+arg3P0-arg1 <= 0), cost: 1
   1: f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1-arg1 <= 0 /\ -6+arg3P1 > 0 /\ arg2 > 0 /\ 1+x120 > 0 /\ arg1P1 > 0 /\ arg1 > 0 /\ -8+arg2P1 > 0), cost: 1
   4: f1_0_main_Load -> f415_0_main_InvokeMethod : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ 1+x330 > 0 /\ arg1P4-arg1 <= 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x340 > 0), cost: 1
   8: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+x670 > 0 /\ -6+arg2P8 > 0 /\ 1+x660 > 0 /\ arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  10: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg1P10-arg1 <= 0 /\ arg1P10 > 0 /\ -5+arg2P10 > 0 /\ 1+x840 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x830 > 0 /\ -5+arg2P10-arg1 <= 0), cost: 1
  11: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P11 > 0 /\ 1-arg2P11 == 0), cost: 1
  14: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (2-arg2P14 == 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x1060 > 0 /\ 1+arg1P14 > 0), cost: 1
   2: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2 > 0 /\ 7+arg1P2-arg2 <= 0 /\ -7+arg2 > 0 /\ 1+x190 > 0 /\ -1+x130 > 0 /\ arg1 > 0 /\ arg1P2-arg1 <= 0 /\ -5+arg3 > 0 /\ 5+arg1P2-arg3 <= 0), cost: 1
   3: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3 > 0 /\ -1+x200 > 0 /\ -6+arg2 > 0 /\ 6+arg1P3-arg2 <= 0 /\ x280-arg4 > 0 /\ x260-arg4 > 0 /\ arg4 > 0 /\ x270-arg4 > 0 /\ arg1 > 0 /\ -4+arg3 > 0 /\ 1+x290 > 0 /\ 4+arg1P3-arg3 <= 0 /\ arg1P3-arg1 <= 0), cost: 1
   5: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (x440-arg4 > 0 /\ arg1P5 > 0 /\ 6+arg1P5-arg2 <= 0 /\ -6+arg2 > 0 /\ -1+x350 > 0 /\ -6+arg2P5 > 0 /\ x420-arg4 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ x430-arg4 > 0 /\ -4+arg3 > 0 /\ arg1P5-arg1 <= 0 /\ 1+x450 > 0 /\ 4+arg1P5-arg3 <= 0), cost: 1
   6: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ 7-arg2+arg1P6 <= 0 /\ 1+x530 > 0 /\ -7+arg2 > 0 /\ -arg3+arg2P6 <= 0 /\ -5-arg1+arg2P6 <= 0 /\ -1+x460 > 0 /\ arg1 > 0 /\ -5+arg2P6 > 0 /\ 5-arg3+arg1P6 <= 0 /\ 2-arg2+arg2P6 <= 0 /\ -5+arg3 > 0 /\ arg1P6 > 0), cost: 1
   7: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (7+arg1P7-arg2 <= 0 /\ arg1P7 > 0 /\ -7+arg2 > 0 /\ 1+x610 > 0 /\ -1+x540 > 0 /\ -6+arg2P7 > 0 /\ arg1 > 0 /\ arg1P7-arg1 <= 0 /\ -5+arg3 > 0 /\ 5+arg1P7-arg3 <= 0), cost: 1
   9: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg1P9 > 0 /\ x760-arg4 > 0 /\ -6+arg2 > 0 /\ 6+arg1P9-arg2 <= 0 /\ -5+arg2P9 > 0 /\ 1+x780 > 0 /\ arg4 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg1 > 0 /\ arg1P9-arg1 <= 0 /\ x750-arg4 > 0 /\ 4+arg1P9-arg3 <= 0 /\ -1+x680 > 0 /\ -4+arg3 > 0 /\ -5+arg2P9-arg1 <= 0 /\ -arg4+x770 > 0 /\ -1+arg2P9-arg3 <= 0), cost: 1
  12: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1+arg1P12 > 0 /\ -6+arg2 > 0 /\ 2-arg2P12 == 0 /\ arg4 > 0 /\ -arg4+x940 > 0 /\ arg1 > 0 /\ -arg4+x950 > 0 /\ -4+arg3 > 0 /\ x960-arg4 > 0 /\ -1+x880 > 0), cost: 1
  13: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-1+x970 > 0 /\ -7+arg2 > 0 /\ 1+arg1P13 > 0 /\ arg1 > 0 /\ -5+arg3 > 0 /\ 2-arg2P13 == 0), cost: 1
  16: f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-1+arg2P16 > 0 /\ arg1 > 0 /\ -3+arg1P16 > 0 /\ -1-arg1+arg2P16 <= 0 /\ -1+x1100 > 0 /\ -3+arg1P16-arg1 <= 0), cost: 1
  17: f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-2+arg2P17 > 0 /\ -4+arg2 > 0 /\ -1+x1140 > 0 /\ arg1 > 0 /\ -4+arg1P17 > 0 /\ 2+arg2P17-arg2 <= 0 /\ -arg2+arg1P17 <= 0), cost: 1
  15: f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (arg2 > 0 /\ -1 < 0 /\ -1+arg1 > 0 /\ -arg2P15+arg2 == 0 /\ -1-arg1P15+arg1 == 0), cost: 1
  18: f519_0_length_NONNULL -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (-2+arg1 > 0 /\ 1+arg2P18 > 0 /\ arg2 > 0 /\ 1-arg2+arg2P18 <= 0 /\ 2-arg1+arg1P18 <= 0 /\ 3-arg1+arg2P18 <= 0 /\ -arg2+arg1P18 <= 0 /\ arg1P18 > 0), cost: 1
  19: __init -> f1_0_main_Load : arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -arg4P0 == 0 /\ -7+arg2P0 > 0 /\ arg1P0 > 0 /\ -5+arg3P0 > 0 /\ -7+arg2P0-arg1 <= 0 /\ arg1P0-arg1 <= 0 /\ 1+x50 > 0 /\ arg1 > 0 /\ -5+arg3P0-arg1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P0, arg4'=0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -7+arg2P0 > 0 /\ arg1P0 > 0 /\ -5+arg3P0 > 0 /\ -7+arg2P0-arg1 <= 0 /\ arg1P0-arg1 <= 0 /\ -5+arg3P0-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1-arg1 <= 0 /\ -6+arg3P1 > 0 /\ arg2 > 0 /\ 1+x120 > 0 /\ arg1P1 > 0 /\ arg1 > 0 /\ -8+arg2P1 > 0), cost: 1
New rule:
f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1-arg1 <= 0 /\ -6+arg3P1 > 0 /\ arg2 > 0 /\ arg1P1 > 0 /\ -8+arg2P1 > 0), cost: 1

Applied preprocessing
Original rule:
f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2 > 0 /\ 7+arg1P2-arg2 <= 0 /\ -7+arg2 > 0 /\ 1+x190 > 0 /\ -1+x130 > 0 /\ arg1 > 0 /\ arg1P2-arg1 <= 0 /\ -5+arg3 > 0 /\ 5+arg1P2-arg3 <= 0), cost: 1
New rule:
f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2 > 0 /\ 7+arg1P2-arg2 <= 0 /\ arg1P2-arg1 <= 0 /\ 5+arg1P2-arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3 > 0 /\ -1+x200 > 0 /\ -6+arg2 > 0 /\ 6+arg1P3-arg2 <= 0 /\ x280-arg4 > 0 /\ x260-arg4 > 0 /\ arg4 > 0 /\ x270-arg4 > 0 /\ arg1 > 0 /\ -4+arg3 > 0 /\ 1+x290 > 0 /\ 4+arg1P3-arg3 <= 0 /\ arg1P3-arg1 <= 0), cost: 1
New rule:
f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3 > 0 /\ 6+arg1P3-arg2 <= 0 /\ arg4 > 0 /\ 4+arg1P3-arg3 <= 0 /\ arg1P3-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f415_0_main_InvokeMethod : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ 1+x330 > 0 /\ arg1P4-arg1 <= 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x340 > 0), cost: 1
New rule:
f1_0_main_Load -> f415_0_main_InvokeMethod : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ arg1P4-arg1 <= 0 /\ -1+arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (x440-arg4 > 0 /\ arg1P5 > 0 /\ 6+arg1P5-arg2 <= 0 /\ -6+arg2 > 0 /\ -1+x350 > 0 /\ -6+arg2P5 > 0 /\ x420-arg4 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ x430-arg4 > 0 /\ -4+arg3 > 0 /\ arg1P5-arg1 <= 0 /\ 1+x450 > 0 /\ 4+arg1P5-arg3 <= 0), cost: 1
New rule:
f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg1P5 > 0 /\ 6+arg1P5-arg2 <= 0 /\ -6+arg2P5 > 0 /\ arg4 > 0 /\ arg1P5-arg1 <= 0 /\ 4+arg1P5-arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ 7-arg2+arg1P6 <= 0 /\ 1+x530 > 0 /\ -7+arg2 > 0 /\ -arg3+arg2P6 <= 0 /\ -5-arg1+arg2P6 <= 0 /\ -1+x460 > 0 /\ arg1 > 0 /\ -5+arg2P6 > 0 /\ 5-arg3+arg1P6 <= 0 /\ 2-arg2+arg2P6 <= 0 /\ -5+arg3 > 0 /\ arg1P6 > 0), cost: 1
New rule:
f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ 7-arg2+arg1P6 <= 0 /\ -arg3+arg2P6 <= 0 /\ -5-arg1+arg2P6 <= 0 /\ -5+arg2P6 > 0 /\ 5-arg3+arg1P6 <= 0 /\ 2-arg2+arg2P6 <= 0 /\ arg1P6 > 0), cost: 1

Applied preprocessing
Original rule:
f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (7+arg1P7-arg2 <= 0 /\ arg1P7 > 0 /\ -7+arg2 > 0 /\ 1+x610 > 0 /\ -1+x540 > 0 /\ -6+arg2P7 > 0 /\ arg1 > 0 /\ arg1P7-arg1 <= 0 /\ -5+arg3 > 0 /\ 5+arg1P7-arg3 <= 0), cost: 1
New rule:
f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (7+arg1P7-arg2 <= 0 /\ arg1P7 > 0 /\ -6+arg2P7 > 0 /\ arg1P7-arg1 <= 0 /\ 5+arg1P7-arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (1+x670 > 0 /\ -6+arg2P8 > 0 /\ 1+x660 > 0 /\ arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
New rule:
f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-6+arg2P8 > 0 /\ arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ -1+arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg1P9 > 0 /\ x760-arg4 > 0 /\ -6+arg2 > 0 /\ 6+arg1P9-arg2 <= 0 /\ -5+arg2P9 > 0 /\ 1+x780 > 0 /\ arg4 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg1 > 0 /\ arg1P9-arg1 <= 0 /\ x750-arg4 > 0 /\ 4+arg1P9-arg3 <= 0 /\ -1+x680 > 0 /\ -4+arg3 > 0 /\ -5+arg2P9-arg1 <= 0 /\ -arg4+x770 > 0 /\ -1+arg2P9-arg3 <= 0), cost: 1
New rule:
f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg1P9 > 0 /\ 6+arg1P9-arg2 <= 0 /\ -5+arg2P9 > 0 /\ arg4 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg1P9-arg1 <= 0 /\ 4+arg1P9-arg3 <= 0 /\ -5+arg2P9-arg1 <= 0 /\ -1+arg2P9-arg3 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg1P10-arg1 <= 0 /\ arg1P10 > 0 /\ -5+arg2P10 > 0 /\ 1+x840 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x830 > 0 /\ -5+arg2P10-arg1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg1P10-arg1 <= 0 /\ arg1P10 > 0 /\ -5+arg2P10 > 0 /\ -1+arg2 > 0 /\ -5+arg2P10-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P11 > 0 /\ 1-arg2P11 == 0), cost: 1
New rule:
f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=1, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P11 > 0), cost: 1

Applied preprocessing
Original rule:
f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1+arg1P12 > 0 /\ -6+arg2 > 0 /\ 2-arg2P12 == 0 /\ arg4 > 0 /\ -arg4+x940 > 0 /\ arg1 > 0 /\ -arg4+x950 > 0 /\ -4+arg3 > 0 /\ x960-arg4 > 0 /\ -1+x880 > 0), cost: 1
New rule:
f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1+arg1P12 > 0 /\ -6+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -4+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-1+x970 > 0 /\ -7+arg2 > 0 /\ 1+arg1P13 > 0 /\ arg1 > 0 /\ -5+arg3 > 0 /\ 2-arg2P13 == 0), cost: 1
New rule:
f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-7+arg2 > 0 /\ 1+arg1P13 > 0 /\ arg1 > 0 /\ -5+arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (2-arg2P14 == 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x1060 > 0 /\ 1+arg1P14 > 0), cost: 1
New rule:
f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P14 > 0), cost: 1

Applied preprocessing
Original rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (arg2 > 0 /\ -1 < 0 /\ -1+arg1 > 0 /\ -arg2P15+arg2 == 0 /\ -1-arg1P15+arg1 == 0), cost: 1
New rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=-1+arg1, arg3'=arg3P15, (arg2 > 0 /\ -1+arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-1+arg2P16 > 0 /\ arg1 > 0 /\ -3+arg1P16 > 0 /\ -1-arg1+arg2P16 <= 0 /\ -1+x1100 > 0 /\ -3+arg1P16-arg1 <= 0), cost: 1
New rule:
f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-1+arg2P16 > 0 /\ -3+arg1P16 > 0 /\ -1-arg1+arg2P16 <= 0 /\ -3+arg1P16-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-2+arg2P17 > 0 /\ -4+arg2 > 0 /\ -1+x1140 > 0 /\ arg1 > 0 /\ -4+arg1P17 > 0 /\ 2+arg2P17-arg2 <= 0 /\ -arg2+arg1P17 <= 0), cost: 1
New rule:
f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-2+arg2P17 > 0 /\ arg1 > 0 /\ -4+arg1P17 > 0 /\ 2+arg2P17-arg2 <= 0 /\ -arg2+arg1P17 <= 0), cost: 1

Applied preprocessing
Original rule:
f519_0_length_NONNULL -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (-2+arg1 > 0 /\ 1+arg2P18 > 0 /\ arg2 > 0 /\ 1-arg2+arg2P18 <= 0 /\ 2-arg1+arg1P18 <= 0 /\ 3-arg1+arg2P18 <= 0 /\ -arg2+arg1P18 <= 0 /\ arg1P18 > 0), cost: 1
New rule:
f519_0_length_NONNULL -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (1+arg2P18 > 0 /\ 1-arg2+arg2P18 <= 0 /\ 2-arg1+arg1P18 <= 0 /\ 3-arg1+arg2P18 <= 0 /\ -arg2+arg1P18 <= 0 /\ arg1P18 > 0), cost: 1

Simplified rules
Start location: __init
  20: f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P0, arg4'=0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -7+arg2P0 > 0 /\ arg1P0 > 0 /\ -5+arg3P0 > 0 /\ -7+arg2P0-arg1 <= 0 /\ arg1P0-arg1 <= 0 /\ -5+arg3P0-arg1 <= 0), cost: 1
  21: f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1-arg1 <= 0 /\ -6+arg3P1 > 0 /\ arg2 > 0 /\ arg1P1 > 0 /\ -8+arg2P1 > 0), cost: 1
  24: f1_0_main_Load -> f415_0_main_InvokeMethod : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ arg1P4-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
  28: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-6+arg2P8 > 0 /\ arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
  30: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg1P10-arg1 <= 0 /\ arg1P10 > 0 /\ -5+arg2P10 > 0 /\ -1+arg2 > 0 /\ -5+arg2P10-arg1 <= 0), cost: 1
  31: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=1, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P11 > 0), cost: 1
  34: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P14 > 0), cost: 1
  22: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2 > 0 /\ 7+arg1P2-arg2 <= 0 /\ arg1P2-arg1 <= 0 /\ 5+arg1P2-arg3 <= 0), cost: 1
  23: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3 > 0 /\ 6+arg1P3-arg2 <= 0 /\ arg4 > 0 /\ 4+arg1P3-arg3 <= 0 /\ arg1P3-arg1 <= 0), cost: 1
  25: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg1P5 > 0 /\ 6+arg1P5-arg2 <= 0 /\ -6+arg2P5 > 0 /\ arg4 > 0 /\ arg1P5-arg1 <= 0 /\ 4+arg1P5-arg3 <= 0), cost: 1
  26: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ 7-arg2+arg1P6 <= 0 /\ -arg3+arg2P6 <= 0 /\ -5-arg1+arg2P6 <= 0 /\ -5+arg2P6 > 0 /\ 5-arg3+arg1P6 <= 0 /\ 2-arg2+arg2P6 <= 0 /\ arg1P6 > 0), cost: 1
  27: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (7+arg1P7-arg2 <= 0 /\ arg1P7 > 0 /\ -6+arg2P7 > 0 /\ arg1P7-arg1 <= 0 /\ 5+arg1P7-arg3 <= 0), cost: 1
  29: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg1P9 > 0 /\ 6+arg1P9-arg2 <= 0 /\ -5+arg2P9 > 0 /\ arg4 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg1P9-arg1 <= 0 /\ 4+arg1P9-arg3 <= 0 /\ -5+arg2P9-arg1 <= 0 /\ -1+arg2P9-arg3 <= 0), cost: 1
  32: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1+arg1P12 > 0 /\ -6+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -4+arg3 > 0), cost: 1
  33: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-7+arg2 > 0 /\ 1+arg1P13 > 0 /\ arg1 > 0 /\ -5+arg3 > 0), cost: 1
  36: f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-1+arg2P16 > 0 /\ -3+arg1P16 > 0 /\ -1-arg1+arg2P16 <= 0 /\ -3+arg1P16-arg1 <= 0), cost: 1
  37: f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-2+arg2P17 > 0 /\ arg1 > 0 /\ -4+arg1P17 > 0 /\ 2+arg2P17-arg2 <= 0 /\ -arg2+arg1P17 <= 0), cost: 1
  35: f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=-1+arg1, arg3'=arg3P15, (arg2 > 0 /\ -1+arg1 > 0), cost: 1
  38: f519_0_length_NONNULL -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (1+arg2P18 > 0 /\ 1-arg2+arg2P18 <= 0 /\ 2-arg1+arg1P18 <= 0 /\ 3-arg1+arg2P18 <= 0 /\ -arg2+arg1P18 <= 0 /\ arg1P18 > 0), cost: 1
  19: __init -> f1_0_main_Load : arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, TRUE, cost: 1


Applied acceleration
Original rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=-1+arg1, arg3'=arg3P15, (arg2 > 0 /\ -1+arg1 > 0), cost: 1
New rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=-n+arg1, arg3'=arg3P15, (arg2 > 0 /\ -n+arg1 > 0 /\ -1+n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FNGfda.txt

Applied instantiation
Original rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=-n+arg1, arg3'=arg3P15, (arg2 > 0 /\ -n+arg1 > 0 /\ -1+n >= 0), cost: n
New rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-2+arg1 >= 0 /\ 1 > 0 /\ arg2 > 0), cost: -1+arg1

Applied simplification
Original rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-2+arg1 >= 0 /\ 1 > 0 /\ arg2 > 0), cost: -1+arg1
New rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-2+arg1 >= 0 /\ arg2 > 0), cost: -1+arg1

Applied deletion
Removed the following rules: 35

Accelerated simple loops
Start location: __init
  20: f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P0, arg4'=0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -7+arg2P0 > 0 /\ arg1P0 > 0 /\ -5+arg3P0 > 0 /\ -7+arg2P0-arg1 <= 0 /\ arg1P0-arg1 <= 0 /\ -5+arg3P0-arg1 <= 0), cost: 1
  21: f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1-arg1 <= 0 /\ -6+arg3P1 > 0 /\ arg2 > 0 /\ arg1P1 > 0 /\ -8+arg2P1 > 0), cost: 1
  24: f1_0_main_Load -> f415_0_main_InvokeMethod : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ arg1P4-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
  28: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-6+arg2P8 > 0 /\ arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
  30: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg1P10-arg1 <= 0 /\ arg1P10 > 0 /\ -5+arg2P10 > 0 /\ -1+arg2 > 0 /\ -5+arg2P10-arg1 <= 0), cost: 1
  31: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=1, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P11 > 0), cost: 1
  34: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P14 > 0), cost: 1
  22: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2 > 0 /\ 7+arg1P2-arg2 <= 0 /\ arg1P2-arg1 <= 0 /\ 5+arg1P2-arg3 <= 0), cost: 1
  23: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3 > 0 /\ 6+arg1P3-arg2 <= 0 /\ arg4 > 0 /\ 4+arg1P3-arg3 <= 0 /\ arg1P3-arg1 <= 0), cost: 1
  25: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg1P5 > 0 /\ 6+arg1P5-arg2 <= 0 /\ -6+arg2P5 > 0 /\ arg4 > 0 /\ arg1P5-arg1 <= 0 /\ 4+arg1P5-arg3 <= 0), cost: 1
  26: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ 7-arg2+arg1P6 <= 0 /\ -arg3+arg2P6 <= 0 /\ -5-arg1+arg2P6 <= 0 /\ -5+arg2P6 > 0 /\ 5-arg3+arg1P6 <= 0 /\ 2-arg2+arg2P6 <= 0 /\ arg1P6 > 0), cost: 1
  27: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (7+arg1P7-arg2 <= 0 /\ arg1P7 > 0 /\ -6+arg2P7 > 0 /\ arg1P7-arg1 <= 0 /\ 5+arg1P7-arg3 <= 0), cost: 1
  29: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg1P9 > 0 /\ 6+arg1P9-arg2 <= 0 /\ -5+arg2P9 > 0 /\ arg4 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg1P9-arg1 <= 0 /\ 4+arg1P9-arg3 <= 0 /\ -5+arg2P9-arg1 <= 0 /\ -1+arg2P9-arg3 <= 0), cost: 1
  32: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1+arg1P12 > 0 /\ -6+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -4+arg3 > 0), cost: 1
  33: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-7+arg2 > 0 /\ 1+arg1P13 > 0 /\ arg1 > 0 /\ -5+arg3 > 0), cost: 1
  36: f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-1+arg2P16 > 0 /\ -3+arg1P16 > 0 /\ -1-arg1+arg2P16 <= 0 /\ -3+arg1P16-arg1 <= 0), cost: 1
  37: f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-2+arg2P17 > 0 /\ arg1 > 0 /\ -4+arg1P17 > 0 /\ 2+arg2P17-arg2 <= 0 /\ -arg2+arg1P17 <= 0), cost: 1
  40: f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-2+arg1 >= 0 /\ arg2 > 0), cost: -1+arg1
  38: f519_0_length_NONNULL -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (1+arg2P18 > 0 /\ 1-arg2+arg2P18 <= 0 /\ 2-arg1+arg1P18 <= 0 /\ 3-arg1+arg2P18 <= 0 /\ -arg2+arg1P18 <= 0 /\ arg1P18 > 0), cost: 1
  19: __init -> f1_0_main_Load : arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=1, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P11 > 0), cost: 1
Second rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-2+arg1 >= 0 /\ arg2 > 0), cost: -1+arg1
New rule:
f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=1, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2 > 0 /\ arg1 > 0 /\ -2+arg1P11 >= 0), cost: arg1P11

Applied chaining
First rule:
f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1+arg1P12 > 0 /\ -6+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -4+arg3 > 0), cost: 1
Second rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-2+arg1 >= 0 /\ arg2 > 0), cost: -1+arg1
New rule:
f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-6+arg2 > 0 /\ -2+arg1P12 >= 0 /\ arg4 > 0 /\ arg1 > 0 /\ -4+arg3 > 0), cost: arg1P12

Applied chaining
First rule:
f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-7+arg2 > 0 /\ 1+arg1P13 > 0 /\ arg1 > 0 /\ -5+arg3 > 0), cost: 1
Second rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-2+arg1 >= 0 /\ arg2 > 0), cost: -1+arg1
New rule:
f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-7+arg2 > 0 /\ -2+arg1P13 >= 0 /\ arg1 > 0 /\ -5+arg3 > 0), cost: arg1P13

Applied chaining
First rule:
f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P14 > 0), cost: 1
Second rule:
f343_0_appendNewList_GT -> f343_0_appendNewList_GT : arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-2+arg1 >= 0 /\ arg2 > 0), cost: -1+arg1
New rule:
f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1 > 0 /\ -1+arg2 > 0 /\ -2+arg1P14 >= 0), cost: arg1P14

Applied deletion
Removed the following rules: 40

Applied chaining
First rule:
f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-1+arg2P16 > 0 /\ -3+arg1P16 > 0 /\ -1-arg1+arg2P16 <= 0 /\ -3+arg1P16-arg1 <= 0), cost: 1
Second rule:
f519_0_length_NONNULL -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (1+arg2P18 > 0 /\ 1-arg2+arg2P18 <= 0 /\ 2-arg1+arg1P18 <= 0 /\ 3-arg1+arg2P18 <= 0 /\ -arg2+arg1P18 <= 0 /\ arg1P18 > 0), cost: 1
New rule:
f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (1+arg2P18 > 0 /\ -1-arg1+arg1P18 <= 0 /\ -arg1+arg2P18 <= 0 /\ 1-arg1 <= 0 /\ arg1P18 > 0), cost: 2

Applied chaining
First rule:
f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-2+arg2P17 > 0 /\ arg1 > 0 /\ -4+arg1P17 > 0 /\ 2+arg2P17-arg2 <= 0 /\ -arg2+arg1P17 <= 0), cost: 1
Second rule:
f519_0_length_NONNULL -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (1+arg2P18 > 0 /\ 1-arg2+arg2P18 <= 0 /\ 2-arg1+arg1P18 <= 0 /\ 3-arg1+arg2P18 <= 0 /\ -arg2+arg1P18 <= 0 /\ arg1P18 > 0), cost: 1
New rule:
f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (-5+arg2 >= 0 /\ 3-arg2+arg2P18 <= 0 /\ 1+arg2P18 > 0 /\ arg1 > 0 /\ arg1P18 > 0 /\ 2-arg2+arg1P18 <= 0), cost: 2

Applied deletion
Removed the following rules: 38

Chained accelerated rules with incoming rules
Start location: __init
  20: f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P0, arg4'=0, arg1'=arg1P0, arg3'=arg3P0, (arg2 > 0 /\ -7+arg2P0 > 0 /\ arg1P0 > 0 /\ -5+arg3P0 > 0 /\ -7+arg2P0-arg1 <= 0 /\ arg1P0-arg1 <= 0 /\ -5+arg3P0-arg1 <= 0), cost: 1
  21: f1_0_main_Load -> f177_0_appendNewList_Return : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (arg1P1-arg1 <= 0 /\ -6+arg3P1 > 0 /\ arg2 > 0 /\ arg1P1 > 0 /\ -8+arg2P1 > 0), cost: 1
  24: f1_0_main_Load -> f415_0_main_InvokeMethod : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4 > 0 /\ arg1P4-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
  28: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-6+arg2P8 > 0 /\ arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ -1+arg2 > 0), cost: 1
  30: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (arg1P10-arg1 <= 0 /\ arg1P10 > 0 /\ -5+arg2P10 > 0 /\ -1+arg2 > 0 /\ -5+arg2P10-arg1 <= 0), cost: 1
  31: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=1, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (arg2 > 0 /\ arg1 > 0 /\ 1+arg1P11 > 0), cost: 1
  34: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P14 > 0), cost: 1
  41: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=1, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg2 > 0 /\ arg1 > 0 /\ -2+arg1P11 >= 0), cost: arg1P11
  44: f1_0_main_Load -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (arg1 > 0 /\ -1+arg2 > 0 /\ -2+arg1P14 >= 0), cost: arg1P14
  22: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (arg1P2 > 0 /\ 7+arg1P2-arg2 <= 0 /\ arg1P2-arg1 <= 0 /\ 5+arg1P2-arg3 <= 0), cost: 1
  23: f177_0_appendNewList_Return -> f415_0_main_InvokeMethod : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg1P3 > 0 /\ 6+arg1P3-arg2 <= 0 /\ arg4 > 0 /\ 4+arg1P3-arg3 <= 0 /\ arg1P3-arg1 <= 0), cost: 1
  25: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (arg1P5 > 0 /\ 6+arg1P5-arg2 <= 0 /\ -6+arg2P5 > 0 /\ arg4 > 0 /\ arg1P5-arg1 <= 0 /\ 4+arg1P5-arg3 <= 0), cost: 1
  26: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ 7-arg2+arg1P6 <= 0 /\ -arg3+arg2P6 <= 0 /\ -5-arg1+arg2P6 <= 0 /\ -5+arg2P6 > 0 /\ 5-arg3+arg1P6 <= 0 /\ 2-arg2+arg2P6 <= 0 /\ arg1P6 > 0), cost: 1
  27: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (7+arg1P7-arg2 <= 0 /\ arg1P7 > 0 /\ -6+arg2P7 > 0 /\ arg1P7-arg1 <= 0 /\ 5+arg1P7-arg3 <= 0), cost: 1
  29: f177_0_appendNewList_Return -> f480_0_main_InvokeMethod : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (arg1P9 > 0 /\ 6+arg1P9-arg2 <= 0 /\ -5+arg2P9 > 0 /\ arg4 > 0 /\ 1-arg2+arg2P9 <= 0 /\ arg1P9-arg1 <= 0 /\ 4+arg1P9-arg3 <= 0 /\ -5+arg2P9-arg1 <= 0 /\ -1+arg2P9-arg3 <= 0), cost: 1
  32: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1+arg1P12 > 0 /\ -6+arg2 > 0 /\ arg4 > 0 /\ arg1 > 0 /\ -4+arg3 > 0), cost: 1
  33: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-7+arg2 > 0 /\ 1+arg1P13 > 0 /\ arg1 > 0 /\ -5+arg3 > 0), cost: 1
  42: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-6+arg2 > 0 /\ -2+arg1P12 >= 0 /\ arg4 > 0 /\ arg1 > 0 /\ -4+arg3 > 0), cost: arg1P12
  43: f177_0_appendNewList_Return -> f343_0_appendNewList_GT : arg2'=2, arg4'=arg4P15, arg1'=1, arg3'=arg3P15, (-7+arg2 > 0 /\ -2+arg1P13 >= 0 /\ arg1 > 0 /\ -5+arg3 > 0), cost: arg1P13
  36: f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-1+arg2P16 > 0 /\ -3+arg1P16 > 0 /\ -1-arg1+arg2P16 <= 0 /\ -3+arg1P16-arg1 <= 0), cost: 1
  45: f415_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (1+arg2P18 > 0 /\ -1-arg1+arg1P18 <= 0 /\ -arg1+arg2P18 <= 0 /\ 1-arg1 <= 0 /\ arg1P18 > 0), cost: 2
  37: f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (-2+arg2P17 > 0 /\ arg1 > 0 /\ -4+arg1P17 > 0 /\ 2+arg2P17-arg2 <= 0 /\ -arg2+arg1P17 <= 0), cost: 1
  46: f480_0_main_InvokeMethod -> f519_0_length_NONNULL : arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (-5+arg2 >= 0 /\ 3-arg2+arg2P18 <= 0 /\ 1+arg2P18 > 0 /\ arg1 > 0 /\ arg1P18 > 0 /\ 2-arg2+arg1P18 <= 0), cost: 2
  19: __init -> f1_0_main_Load : arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

