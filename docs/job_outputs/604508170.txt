NO

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
   0: f1_0_main_Load -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ 1+arg2p1-arg1 <= 0 /\ 1-arg4p1 == 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ 1+arg2p1 > 0), cost: 1
   1: f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg3-arg3p2 == 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x5 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
   2: f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ arg1p3-arg1 <= 0 /\ -1+arg3-arg3p3 == 0), cost: 1
   4: f962_0_main_LE -> f1548_0_flatten_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x30 > 0 /\ 1+arg1p5 > 0), cost: 1
   7: f962_0_main_LE -> f2482_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (-1+arg1p8 > 0 /\ -2+arg1p8-arg2 <= 0 /\ -2+arg2p8-arg2 <= 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -1+arg1p8-arg1 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ -1+arg2p8 > 0 /\ x46 > 0 /\ -1+arg2p8-arg1 <= 0 /\ arg3p8 > 0), cost: 1
  14: f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (1-arg2p15+arg4 == 0 /\ x104 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ x98 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
   3: f1714_0_createTree_Return -> f962_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (-1-arg3p4+arg3 == 0 /\ arg5-arg4p4 == 0 /\ -3+arg2p4 > 0 /\ arg1 > 0 /\ -1+arg4 > 0 /\ 1-arg4+arg1p4 <= 0 /\ arg1p4 > 0 /\ 2+arg6-arg4 <= 0 /\ -arg1+arg1p4 <= 0), cost: 1
   5: f1548_0_flatten_NULL -> f1548_0_flatten_NULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0), cost: 1
   6: f1548_0_flatten_NULL -> f1548_0_flatten_NULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2-arg2+arg1p7 <= 0 /\ -2+arg1p7 > 0 /\ -2+arg2 > 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ -2+arg1 > 0 /\ -2-arg1+arg1p7 <= 0 /\ -2+arg2p7-arg1 <= 0), cost: 1
   8: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, (-1+arg3-arg3p9 == 0 /\ 1-arg4p9+arg4 == 0 /\ arg1p9 > 0 /\ 2+arg2p9-arg2 <= 0 /\ 1+arg4 > 0 /\ arg2p9 > 0 /\ arg1p9-arg1 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0), cost: 1
   9: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, (x67 > 0 /\ arg1p10-arg1 <= 0 /\ -1+arg3-arg3p10 == 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0 /\ 1-arg4p10+arg4 == 0), cost: 1
  10: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (x75 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0 /\ -1-arg3p11+arg3 == 0), cost: 1
  11: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (-1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ arg3 > 0 /\ -1-arg3p12+arg3 == 0 /\ arg1 > 0 /\ arg2p12 > 0), cost: 1
  12: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1p13-arg1 <= 0 /\ -1+arg3-arg3p13 == 0 /\ -2-arg1+arg2p13 <= 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1p13 > 0 /\ 1+arg4 > 0 /\ -2+arg1p13-arg2 <= 0 /\ -3+arg2p13 > 0 /\ arg3 > 0 /\ -2+arg2p13-arg2 <= 0), cost: 1
  13: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-2-arg1+arg2p14 <= 0 /\ x97 > 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0 /\ -1-arg3p14+arg3 == 0), cost: 1
  15: f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (1-arg2p16+arg4 == 0 /\ 1-arg2+arg1p16 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p16 > 0 /\ -arg1+arg1p16 <= 0), cost: 1
  16: f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1-arg2p17+arg4 == 0 /\ x117 > 0), cost: 1
  17: __init -> f1_0_main_Load : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
   1: f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg3-arg3p2 == 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x5 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
   2: f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ arg1p3-arg1 <= 0 /\ -1+arg3-arg3p3 == 0), cost: 1
   4: f962_0_main_LE -> f1548_0_flatten_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x30 > 0 /\ 1+arg1p5 > 0), cost: 1
   7: f962_0_main_LE -> f2482_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (-1+arg1p8 > 0 /\ -2+arg1p8-arg2 <= 0 /\ -2+arg2p8-arg2 <= 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -1+arg1p8-arg1 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ -1+arg2p8 > 0 /\ x46 > 0 /\ -1+arg2p8-arg1 <= 0 /\ arg3p8 > 0), cost: 1
  14: f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (1-arg2p15+arg4 == 0 /\ x104 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ x98 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
   3: f1714_0_createTree_Return -> f962_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (-1-arg3p4+arg3 == 0 /\ arg5-arg4p4 == 0 /\ -3+arg2p4 > 0 /\ arg1 > 0 /\ -1+arg4 > 0 /\ 1-arg4+arg1p4 <= 0 /\ arg1p4 > 0 /\ 2+arg6-arg4 <= 0 /\ -arg1+arg1p4 <= 0), cost: 1
   5: f1548_0_flatten_NULL -> f1548_0_flatten_NULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0), cost: 1
   6: f1548_0_flatten_NULL -> f1548_0_flatten_NULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2-arg2+arg1p7 <= 0 /\ -2+arg1p7 > 0 /\ -2+arg2 > 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ -2+arg1 > 0 /\ -2-arg1+arg1p7 <= 0 /\ -2+arg2p7-arg1 <= 0), cost: 1
   8: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, (-1+arg3-arg3p9 == 0 /\ 1-arg4p9+arg4 == 0 /\ arg1p9 > 0 /\ 2+arg2p9-arg2 <= 0 /\ 1+arg4 > 0 /\ arg2p9 > 0 /\ arg1p9-arg1 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0), cost: 1
   9: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, (x67 > 0 /\ arg1p10-arg1 <= 0 /\ -1+arg3-arg3p10 == 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0 /\ 1-arg4p10+arg4 == 0), cost: 1
  10: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (x75 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0 /\ -1-arg3p11+arg3 == 0), cost: 1
  11: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (-1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ arg3 > 0 /\ -1-arg3p12+arg3 == 0 /\ arg1 > 0 /\ arg2p12 > 0), cost: 1
  12: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1p13-arg1 <= 0 /\ -1+arg3-arg3p13 == 0 /\ -2-arg1+arg2p13 <= 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1p13 > 0 /\ 1+arg4 > 0 /\ -2+arg1p13-arg2 <= 0 /\ -3+arg2p13 > 0 /\ arg3 > 0 /\ -2+arg2p13-arg2 <= 0), cost: 1
  13: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-2-arg1+arg2p14 <= 0 /\ x97 > 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0 /\ -1-arg3p14+arg3 == 0), cost: 1
  15: f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (1-arg2p16+arg4 == 0 /\ 1-arg2+arg1p16 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p16 > 0 /\ -arg1+arg1p16 <= 0), cost: 1
  16: f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1-arg2p17+arg4 == 0 /\ x117 > 0), cost: 1
  18: __init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ arg1p18 > 0 /\ 1+arg2p18 > 0 /\ 1-arg4p1 == 0 /\ -arg1p18+arg1p1 <= 0 /\ 1+arg2p1-arg1p18 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Eliminating location f1_0_main_Load by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_Load : arg1'=arg1p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, T, cost: 1
	Second rule:
	f1_0_main_Load -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ 1+arg2p1-arg1 <= 0 /\ 1-arg4p1 == 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p1 > 0 /\ -arg1+arg1p1 <= 0 /\ 1+arg2p1 > 0), cost: 1
	New rule:
	__init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ arg1p18 > 0 /\ 1+arg2p18 > 0 /\ 1-arg4p1 == 0 /\ -arg1p18+arg1p1 <= 0 /\ 1+arg2p1-arg1p18 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 17

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  19: f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=-1+arg3, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
  20: f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0), cost: 1
  22: f962_0_main_LE -> f1548_0_flatten_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p5 > 0), cost: 1
  23: f962_0_main_LE -> f2482_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (-1+arg1p8 > 0 /\ -2+arg1p8-arg2 <= 0 /\ -2+arg2p8-arg2 <= 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -1+arg1p8-arg1 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ -1+arg2p8 > 0 /\ -1+arg2p8-arg1 <= 0 /\ arg3p8 > 0), cost: 1
  30: f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=1+arg4, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
  21: f1714_0_createTree_Return -> f962_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=arg5, arg5'=arg5p4, arg6'=arg6p4, (-3+arg2p4 > 0 /\ arg1 > 0 /\ -1+arg4 > 0 /\ 1-arg4+arg1p4 <= 0 /\ arg1p4 > 0 /\ 2+arg6-arg4 <= 0 /\ -arg1+arg1p4 <= 0), cost: 1
   5: f1548_0_flatten_NULL -> f1548_0_flatten_NULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0), cost: 1
   6: f1548_0_flatten_NULL -> f1548_0_flatten_NULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2-arg2+arg1p7 <= 0 /\ -2+arg1p7 > 0 /\ -2+arg2 > 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ -2+arg1 > 0 /\ -2-arg1+arg1p7 <= 0 /\ -2+arg2p7-arg1 <= 0), cost: 1
  24: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p9, arg6'=arg6p9, (arg1p9 > 0 /\ 2+arg2p9-arg2 <= 0 /\ 1+arg4 > 0 /\ arg2p9 > 0 /\ arg1p9-arg1 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0), cost: 1
  25: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p10, arg6'=arg6p10, (arg1p10-arg1 <= 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0), cost: 1
  26: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (-1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0), cost: 1
  27: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (-1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg2p12 > 0), cost: 1
  28: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1p13-arg1 <= 0 /\ -2-arg1+arg2p13 <= 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1p13 > 0 /\ 1+arg4 > 0 /\ -2+arg1p13-arg2 <= 0 /\ -3+arg2p13 > 0 /\ arg3 > 0 /\ -2+arg2p13-arg2 <= 0), cost: 1
  29: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-2-arg1+arg2p14 <= 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0), cost: 1
  31: f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p16, arg2'=1+arg4, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (1-arg2+arg1p16 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p16 > 0 /\ -arg1+arg1p16 <= 0), cost: 1
  32: f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=1+arg4, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0), cost: 1
  33: __init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg3-arg3p2 == 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x5 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
	New rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=-1+arg3, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (0 == 0 /\ 2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x5 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
	
		propagated equality arg3p2 = -1+arg3
		
	Simplified Guard

	Original rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=-1+arg3, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (0 == 0 /\ 2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x5 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
	New rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=-1+arg3, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x5 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=-1+arg3, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x5 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
	New rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=-1+arg3, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ arg1p3-arg1 <= 0 /\ -1+arg3-arg3p3 == 0), cost: 1
	New rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (0 == 0 /\ arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ arg1p3-arg1 <= 0), cost: 1
	
		propagated equality arg3p3 = -1+arg3
		
	Simplified Guard

	Original rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (0 == 0 /\ arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ arg1p3-arg1 <= 0), cost: 1
	New rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ arg1p3-arg1 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x13 > 0 /\ arg1p3-arg1 <= 0), cost: 1
	New rule:
	f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1714_0_createTree_Return -> f962_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, (-1-arg3p4+arg3 == 0 /\ arg5-arg4p4 == 0 /\ -3+arg2p4 > 0 /\ arg1 > 0 /\ -1+arg4 > 0 /\ 1-arg4+arg1p4 <= 0 /\ arg1p4 > 0 /\ 2+arg6-arg4 <= 0 /\ -arg1+arg1p4 <= 0), cost: 1
	New rule:
	f1714_0_createTree_Return -> f962_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=arg5, arg5'=arg5p4, arg6'=arg6p4, (0 == 0 /\ -3+arg2p4 > 0 /\ arg1 > 0 /\ -1+arg4 > 0 /\ 1-arg4+arg1p4 <= 0 /\ arg1p4 > 0 /\ 2+arg6-arg4 <= 0 /\ -arg1+arg1p4 <= 0), cost: 1
	
		propagated equality arg3p4 = -1+arg3
		
		propagated equality arg4p4 = arg5
		
	Simplified Guard

	Original rule:
	f1714_0_createTree_Return -> f962_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=arg5, arg5'=arg5p4, arg6'=arg6p4, (0 == 0 /\ -3+arg2p4 > 0 /\ arg1 > 0 /\ -1+arg4 > 0 /\ 1-arg4+arg1p4 <= 0 /\ arg1p4 > 0 /\ 2+arg6-arg4 <= 0 /\ -arg1+arg1p4 <= 0), cost: 1
	New rule:
	f1714_0_createTree_Return -> f962_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=arg5, arg5'=arg5p4, arg6'=arg6p4, (-3+arg2p4 > 0 /\ arg1 > 0 /\ -1+arg4 > 0 /\ 1-arg4+arg1p4 <= 0 /\ arg1p4 > 0 /\ 2+arg6-arg4 <= 0 /\ -arg1+arg1p4 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f962_0_main_LE -> f1548_0_flatten_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ x30 > 0 /\ 1+arg1p5 > 0), cost: 1
	New rule:
	f962_0_main_LE -> f1548_0_flatten_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p5 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f962_0_main_LE -> f2482_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (-1+arg1p8 > 0 /\ -2+arg1p8-arg2 <= 0 /\ -2+arg2p8-arg2 <= 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -1+arg1p8-arg1 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ -1+arg2p8 > 0 /\ x46 > 0 /\ -1+arg2p8-arg1 <= 0 /\ arg3p8 > 0), cost: 1
	New rule:
	f962_0_main_LE -> f2482_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (-1+arg1p8 > 0 /\ -2+arg1p8-arg2 <= 0 /\ -2+arg2p8-arg2 <= 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -1+arg1p8-arg1 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ -1+arg2p8 > 0 /\ -1+arg2p8-arg1 <= 0 /\ arg3p8 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, (-1+arg3-arg3p9 == 0 /\ 1-arg4p9+arg4 == 0 /\ arg1p9 > 0 /\ 2+arg2p9-arg2 <= 0 /\ 1+arg4 > 0 /\ arg2p9 > 0 /\ arg1p9-arg1 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p9, arg6'=arg6p9, (0 == 0 /\ arg1p9 > 0 /\ 2+arg2p9-arg2 <= 0 /\ 1+arg4 > 0 /\ arg2p9 > 0 /\ arg1p9-arg1 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0), cost: 1
	
		propagated equality arg3p9 = -1+arg3
		
		propagated equality arg4p9 = 1+arg4
		
	Simplified Guard

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p9, arg6'=arg6p9, (0 == 0 /\ arg1p9 > 0 /\ 2+arg2p9-arg2 <= 0 /\ 1+arg4 > 0 /\ arg2p9 > 0 /\ arg1p9-arg1 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p9, arg6'=arg6p9, (arg1p9 > 0 /\ 2+arg2p9-arg2 <= 0 /\ 1+arg4 > 0 /\ arg2p9 > 0 /\ arg1p9-arg1 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, (x67 > 0 /\ arg1p10-arg1 <= 0 /\ -1+arg3-arg3p10 == 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0 /\ 1-arg4p10+arg4 == 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p10, arg6'=arg6p10, (0 == 0 /\ x67 > 0 /\ arg1p10-arg1 <= 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0), cost: 1
	
		propagated equality arg3p10 = -1+arg3
		
		propagated equality arg4p10 = 1+arg4
		
	Simplified Guard

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p10, arg6'=arg6p10, (0 == 0 /\ x67 > 0 /\ arg1p10-arg1 <= 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p10, arg6'=arg6p10, (x67 > 0 /\ arg1p10-arg1 <= 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p10, arg6'=arg6p10, (x67 > 0 /\ arg1p10-arg1 <= 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p10, arg6'=arg6p10, (arg1p10-arg1 <= 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (x75 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0 /\ -1-arg3p11+arg3 == 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (0 == 0 /\ x75 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0), cost: 1
	
		propagated equality arg3p11 = -1+arg3
		
	Simplified Guard

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (0 == 0 /\ x75 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (x75 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (x75 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (-1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (-1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ arg3 > 0 /\ -1-arg3p12+arg3 == 0 /\ arg1 > 0 /\ arg2p12 > 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (0 == 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg2p12 > 0), cost: 1
	
		propagated equality arg3p12 = -1+arg3
		
	Simplified Guard

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (0 == 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg2p12 > 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (-1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg2p12 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1p13-arg1 <= 0 /\ -1+arg3-arg3p13 == 0 /\ -2-arg1+arg2p13 <= 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1p13 > 0 /\ 1+arg4 > 0 /\ -2+arg1p13-arg2 <= 0 /\ -3+arg2p13 > 0 /\ arg3 > 0 /\ -2+arg2p13-arg2 <= 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (0 == 0 /\ -2+arg1p13-arg1 <= 0 /\ -2-arg1+arg2p13 <= 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1p13 > 0 /\ 1+arg4 > 0 /\ -2+arg1p13-arg2 <= 0 /\ -3+arg2p13 > 0 /\ arg3 > 0 /\ -2+arg2p13-arg2 <= 0), cost: 1
	
		propagated equality arg3p13 = -1+arg3
		
	Simplified Guard

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (0 == 0 /\ -2+arg1p13-arg1 <= 0 /\ -2-arg1+arg2p13 <= 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1p13 > 0 /\ 1+arg4 > 0 /\ -2+arg1p13-arg2 <= 0 /\ -3+arg2p13 > 0 /\ arg3 > 0 /\ -2+arg2p13-arg2 <= 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1p13-arg1 <= 0 /\ -2-arg1+arg2p13 <= 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1p13 > 0 /\ 1+arg4 > 0 /\ -2+arg1p13-arg2 <= 0 /\ -3+arg2p13 > 0 /\ arg3 > 0 /\ -2+arg2p13-arg2 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-2-arg1+arg2p14 <= 0 /\ x97 > 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0 /\ -1-arg3p14+arg3 == 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (0 == 0 /\ -2-arg1+arg2p14 <= 0 /\ x97 > 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0), cost: 1
	
		propagated equality arg3p14 = -1+arg3
		
	Simplified Guard

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (0 == 0 /\ -2-arg1+arg2p14 <= 0 /\ x97 > 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-2-arg1+arg2p14 <= 0 /\ x97 > 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-2-arg1+arg2p14 <= 0 /\ x97 > 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-2-arg1+arg2p14 <= 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (1-arg2p15+arg4 == 0 /\ x104 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ x98 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
	New rule:
	f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=1+arg4, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (0 == 0 /\ x104 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ x98 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
	
		propagated equality arg2p15 = 1+arg4
		
	Simplified Guard

	Original rule:
	f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=1+arg4, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (0 == 0 /\ x104 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ x98 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
	New rule:
	f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=1+arg4, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (x104 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ x98 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=1+arg4, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (x104 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ x98 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
	New rule:
	f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=1+arg4, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (1-arg2p16+arg4 == 0 /\ 1-arg2+arg1p16 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p16 > 0 /\ -arg1+arg1p16 <= 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p16, arg2'=1+arg4, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (0 == 0 /\ 1-arg2+arg1p16 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p16 > 0 /\ -arg1+arg1p16 <= 0), cost: 1
	
		propagated equality arg2p16 = 1+arg4
		
	Simplified Guard

	Original rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p16, arg2'=1+arg4, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (0 == 0 /\ 1-arg2+arg1p16 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p16 > 0 /\ -arg1+arg1p16 <= 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p16, arg2'=1+arg4, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (1-arg2+arg1p16 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p16 > 0 /\ -arg1+arg1p16 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1-arg2p17+arg4 == 0 /\ x117 > 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=1+arg4, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (0 == 0 /\ arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ x117 > 0), cost: 1
	
		propagated equality arg2p17 = 1+arg4
		
	Simplified Guard

	Original rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=1+arg4, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (0 == 0 /\ arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ x117 > 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=1+arg4, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ x117 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=1+arg4, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ x117 > 0), cost: 1
	New rule:
	f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=1+arg4, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	__init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ arg1p18 > 0 /\ 1+arg2p18 > 0 /\ 1-arg4p1 == 0 /\ -arg1p18+arg1p1 <= 0 /\ 1+arg2p1-arg1p18 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
	New rule:
	__init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=1, arg5'=arg5p1, arg6'=arg6p1, (0 == 0 /\ 1+arg3p1 > 0 /\ arg1p18 > 0 /\ 1+arg2p18 > 0 /\ -arg1p18+arg1p1 <= 0 /\ 1+arg2p1-arg1p18 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
	
		propagated equality arg4p1 = 1
		
	Simplified Guard

	Original rule:
	__init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=1, arg5'=arg5p1, arg6'=arg6p1, (0 == 0 /\ 1+arg3p1 > 0 /\ arg1p18 > 0 /\ 1+arg2p18 > 0 /\ -arg1p18+arg1p1 <= 0 /\ 1+arg2p1-arg1p18 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
	New rule:
	__init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ arg1p18 > 0 /\ 1+arg2p18 > 0 /\ -arg1p18+arg1p1 <= 0 /\ 1+arg2p1-arg1p18 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ arg1p18 > 0 /\ 1+arg2p18 > 0 /\ -arg1p18+arg1p1 <= 0 /\ 1+arg2p1-arg1p18 <= 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
	New rule:
	__init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

Step with 33

	Trace

	33[(1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {}]

Step with 22

	Trace

	33[(1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0)], 22[(-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p5 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 5

	Trace

	33[(1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0)], 22[(-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p5 > 0)], 5[(2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0)]
	
	Blocked

	[{}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 5

	Trace

	33[(1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0)], 22[(-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p5 > 0)], 5[(2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0)], 5[(2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Covered

	Trace

	33[(1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0)], 22[(-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p5 > 0)], 5[(2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0)]
	
	Blocked

	[{}, {}, {}, {5[T]}]

Step with 6

	Trace

	33[(1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0)], 22[(-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p5 > 0)], 5[(2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0)], 6[(-2-arg2+arg1p7 <= 0 /\ -2+arg1p7 > 0 /\ -2+arg2 > 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ -2+arg1 > 0 /\ -2-arg1+arg1p7 <= 0 /\ -2+arg2p7-arg1 <= 0)]
	
	Blocked

	[{}, {}, {}, {5[T]}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2 arg3 arg4 arg5 arg6
  19: f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, arg3'=-1+arg3, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, (2-arg2p2+arg2 >= 0 /\ 1+arg2-arg1p2 >= 0 /\ -1+arg2p2 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1-arg1p2 >= 0 /\ arg1p2 > 0), cost: 1
  20: f962_0_main_LE -> f962_0_main_LE : arg1'=arg1p3, arg2'=arg2p3, arg3'=-1+arg3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, (arg1p3 > 0 /\ -2+arg2p3 > 0 /\ -1+arg1p3-arg2 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p3-arg1 <= 0), cost: 1
  22: f962_0_main_LE -> f1548_0_flatten_NULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, (-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p5 > 0), cost: 1
  23: f962_0_main_LE -> f2482_0_createTree_LE : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, (-1+arg1p8 > 0 /\ -2+arg1p8-arg2 <= 0 /\ -2+arg2p8-arg2 <= 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -1+arg1p8-arg1 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ -1+arg2p8 > 0 /\ -1+arg2p8-arg1 <= 0 /\ arg3p8 > 0), cost: 1
  30: f962_0_main_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p15, arg2'=1+arg4, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, (1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ arg1p15 > 0 /\ -1-arg2+arg1p15 <= 0 /\ -arg1+arg1p15 <= 0), cost: 1
  21: f1714_0_createTree_Return -> f962_0_main_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=-1+arg3, arg4'=arg5, arg5'=arg5p4, arg6'=arg6p4, (-3+arg2p4 > 0 /\ arg1 > 0 /\ -1+arg4 > 0 /\ 1-arg4+arg1p4 <= 0 /\ arg1p4 > 0 /\ 2+arg6-arg4 <= 0 /\ -arg1+arg1p4 <= 0), cost: 1
   5: f1548_0_flatten_NULL -> f1548_0_flatten_NULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, (2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0), cost: 1
   6: f1548_0_flatten_NULL -> f1548_0_flatten_NULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2-arg2+arg1p7 <= 0 /\ -2+arg1p7 > 0 /\ -2+arg2 > 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ -2+arg1 > 0 /\ -2-arg1+arg1p7 <= 0 /\ -2+arg2p7-arg1 <= 0), cost: 1
  34: f1548_0_flatten_NULL -> LoAT_sink : (2+arg2-arg1p7 >= 0 /\ -2+arg1p7 > 0 /\ -2+arg2 > 0 /\ -2+arg2p7 > 0 /\ 2-arg2p7+arg2 >= 0 /\ arg1-arg1p7 <= 0 /\ -2+arg1 > 0 /\ 2+arg1-arg1p7 >= 0 /\ -arg2p7+arg2 <= 0 /\ 2-arg2p7+arg1 >= 0), cost: NONTERM
  24: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p9, arg2'=arg2p9, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p9, arg6'=arg6p9, (arg1p9 > 0 /\ 2+arg2p9-arg2 <= 0 /\ 1+arg4 > 0 /\ arg2p9 > 0 /\ arg1p9-arg1 <= 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0), cost: 1
  25: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p10, arg2'=arg2p10, arg3'=-1+arg3, arg4'=1+arg4, arg5'=arg5p10, arg6'=arg6p10, (arg1p10-arg1 <= 0 /\ arg1p10 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ -2+arg2 > 0 /\ arg2p10 > 0 /\ 2-arg2+arg2p10 <= 0), cost: 1
  26: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p11, arg2'=arg2p11, arg3'=-1+arg3, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, (-1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p11 > 0 /\ arg2p11 > 0), cost: 1
  27: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p12, arg2'=arg2p12, arg3'=-1+arg3, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, (-1+arg2 > 0 /\ 1+arg4 > 0 /\ arg1p12 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg2p12 > 0), cost: 1
  28: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p13, arg2'=arg2p13, arg3'=-1+arg3, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, (-2+arg1p13-arg1 <= 0 /\ -2-arg1+arg2p13 <= 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ -3+arg1p13 > 0 /\ 1+arg4 > 0 /\ -2+arg1p13-arg2 <= 0 /\ -3+arg2p13 > 0 /\ arg3 > 0 /\ -2+arg2p13-arg2 <= 0), cost: 1
  29: f2482_0_createTree_LE -> f2482_0_createTree_LE : arg1'=arg1p14, arg2'=arg2p14, arg3'=-1+arg3, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, (-2-arg1+arg2p14 <= 0 /\ -3+arg1p14 > 0 /\ -1+arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ -2+arg1p14-arg2 <= 0 /\ -3+arg2p14 > 0 /\ -2-arg2+arg2p14 <= 0 /\ -2+arg1p14-arg1 <= 0), cost: 1
  31: f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p16, arg2'=1+arg4, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, (1-arg2+arg1p16 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0 /\ arg1p16 > 0 /\ -arg1+arg1p16 <= 0), cost: 1
  32: f2482_0_createTree_LE -> f1223_0_random_ArrayAccess : arg1'=arg1p17, arg2'=1+arg4, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, (arg1p17 > 0 /\ 1+arg1p17-arg2 <= 0 /\ arg1p17-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4 > 0 /\ arg3 > 0 /\ arg1 > 0), cost: 1
  33: __init -> f962_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=1, arg5'=arg5p1, arg6'=arg6p1, (1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Certificate of Non-Termination

	Original rule:
	f1548_0_flatten_NULL -> f1548_0_flatten_NULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, (-2-arg2+arg1p7 <= 0 /\ -2+arg1p7 > 0 /\ -2+arg2 > 0 /\ -2+arg2p7 > 0 /\ -2+arg2p7-arg2 <= 0 /\ -2+arg1 > 0 /\ -2-arg1+arg1p7 <= 0 /\ -2+arg2p7-arg1 <= 0), cost: 1
	New rule:
	f1548_0_flatten_NULL -> LoAT_sink : (2+arg2-arg1p7 >= 0 /\ -2+arg1p7 > 0 /\ -2+arg2 > 0 /\ -2+arg2p7 > 0 /\ 2-arg2p7+arg2 >= 0 /\ arg1-arg1p7 <= 0 /\ -2+arg1 > 0 /\ 2+arg1-arg1p7 >= 0 /\ -arg2p7+arg2 <= 0 /\ 2-arg2p7+arg1 >= 0), cost: NONTERM

		2+arg2-arg1p7 >= 0 [0]: eventual decrease yields (2+arg2p7-arg1p7 >= 0 /\ 2+arg2-arg1p7 >= 0)
		
		2+arg2-arg1p7 >= 0 [1]: eventual increase yields (2+arg2-arg1p7 >= 0 /\ -arg2p7+arg2 <= 0)
		
		-2+arg1p7 > 0 [0]: monotonic increase yields -2+arg1p7 > 0
		
		-2+arg2 > 0 [0]: eventual decrease yields (-2+arg2 > 0 /\ -2+arg2p7 > 0)
		
		-2+arg2 > 0 [1]: eventual increase yields (-2+arg2 > 0 /\ -arg2p7+arg2 <= 0)
		
		-2+arg2p7 > 0 [0]: monotonic increase yields -2+arg2p7 > 0
		
		2-arg2p7+arg2 >= 0 [0]: monotonic increase yields 2-arg2p7+arg2 >= 0
		
		-2+arg1 > 0 [0]: eventual decrease yields (-2+arg1p7 > 0 /\ -2+arg1 > 0)
		
		-2+arg1 > 0 [1]: eventual increase yields (arg1-arg1p7 <= 0 /\ -2+arg1 > 0)
		
		2+arg1-arg1p7 >= 0 [0]: monotonic increase yields 2+arg1-arg1p7 >= 0
		
		2-arg2p7+arg1 >= 0 [0]: eventual decrease yields (2-arg2p7+arg1p7 >= 0 /\ 2-arg2p7+arg1 >= 0)
		
		2-arg2p7+arg1 >= 0 [1]: eventual increase yields (arg1-arg1p7 <= 0 /\ 2-arg2p7+arg1 >= 0)
		
		Replacement map: {2+arg2-arg1p7 >= 0 -> (2+arg2-arg1p7 >= 0 /\ -arg2p7+arg2 <= 0), -2+arg1p7 > 0 -> -2+arg1p7 > 0, -2+arg2 > 0 -> (-2+arg2 > 0 /\ -arg2p7+arg2 <= 0), -2+arg2p7 > 0 -> -2+arg2p7 > 0, 2-arg2p7+arg2 >= 0 -> 2-arg2p7+arg2 >= 0, -2+arg1 > 0 -> (arg1-arg1p7 <= 0 /\ -2+arg1 > 0), 2+arg1-arg1p7 >= 0 -> 2+arg1-arg1p7 >= 0, 2-arg2p7+arg1 >= 0 -> (arg1-arg1p7 <= 0 /\ 2-arg2p7+arg1 >= 0)}

Step with 34

	Trace

	33[(1+arg3p1 > 0 /\ arg1p1 > 0 /\ 1+arg2p1 > 0)], 22[(-arg3 == 0 /\ arg1p5-arg2 <= 0 /\ 1+arg2p5 > 0 /\ arg2p5-arg2 <= 0 /\ arg1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p5 > 0)], 5[(2+arg2p6-arg1 <= 0 /\ 2-arg2+arg1p6 <= 0 /\ 1+arg1p6 > 0 /\ -1+arg1 > 0 /\ 1+arg2p6 > 0 /\ -1+arg2 > 0 /\ 2+arg2p6-arg2 <= 0 /\ 2-arg1+arg1p6 <= 0)], 34[(2+arg2-arg1p7 >= 0 /\ -2+arg1p7 > 0 /\ -2+arg2 > 0 /\ -2+arg2p7 > 0 /\ 2-arg2p7+arg2 >= 0 /\ arg1-arg1p7 <= 0 /\ -2+arg1 > 0 /\ 2+arg1-arg1p7 >= 0 /\ -arg2p7+arg2 <= 0 /\ 2-arg2p7+arg1 >= 0)]
	
	Blocked

	[{}, {}, {}, {5[T]}, {34[T]}]

Refute

	Counterexample

	[ arg1=1 arg2=5 arg3=0 arg4=1 arg5=0 arg6=0 ] 33 [ arg1=5 arg2=5 arg3=0 arg4=0 arg5=0 arg6=0 ] 22 [ arg1=3 arg2=3 arg3=0 arg4=0 arg5=0 arg6=0 ] 5 [ arg1=arg1 arg2=arg2 arg3=arg3 arg4=arg4 arg5=arg5 arg6=arg6 ] 34
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
