NO

Initial ITS
Start location: __init
   0: f289_0_createIntList_Return -> f491_0_random_ArrayAccess : arg2'=arg2P0, arg1'=arg1P0, (1+arg1 > 0 /\ 1+arg1P0 > 0 /\ arg1P0-arg1 <= 0), cost: 1
   2: f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ 1+arg1 > 0 /\ -arg1+arg1P2 <= 0 /\ x70 > 0), cost: 1
   1: f1_0_main_Load -> f491_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
   6: f1_0_main_Load -> f639_0_createIntList_LE : arg2'=arg2P6, arg1'=arg1P6, (1-arg2P6 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P6 > 0), cost: 1
   3: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (2-arg1+arg1P3 <= 0 /\ 1+arg1P3 > 0 /\ -1+x120 < 0 /\ -1+arg1 > 0), cost: 1
   4: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P4, arg1'=arg1P4, (x150 > 0 /\ arg1 > 0 /\ -arg1+arg1P4 <= 0 /\ arg1P4 > 0), cost: 1
   5: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P5, arg1'=arg1P5, (-2+arg1 > 0 /\ arg1P5 > 0 /\ 2+arg1P5-arg1 <= 0 /\ -1+x180 < 0), cost: 1
   7: f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2P7, arg1'=arg1P7, (arg2 > 0 /\ -1-arg1P7+arg1 == 0 /\ arg1 > 0 /\ 1-arg2P7+arg2 == 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Removed unreachable rules and leafs
Start location: __init
   2: f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ 1+arg1 > 0 /\ -arg1+arg1P2 <= 0 /\ x70 > 0), cost: 1
   1: f1_0_main_Load -> f491_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
   6: f1_0_main_Load -> f639_0_createIntList_LE : arg2'=arg2P6, arg1'=arg1P6, (1-arg2P6 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P6 > 0), cost: 1
   3: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (2-arg1+arg1P3 <= 0 /\ 1+arg1P3 > 0 /\ -1+x120 < 0 /\ -1+arg1 > 0), cost: 1
   4: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P4, arg1'=arg1P4, (x150 > 0 /\ arg1 > 0 /\ -arg1+arg1P4 <= 0 /\ arg1P4 > 0), cost: 1
   5: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P5, arg1'=arg1P5, (-2+arg1 > 0 /\ arg1P5 > 0 /\ 2+arg1P5-arg1 <= 0 /\ -1+x180 < 0), cost: 1
   7: f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2P7, arg1'=arg1P7, (arg2 > 0 /\ -1-arg1P7+arg1 == 0 /\ arg1 > 0 /\ 1-arg2P7+arg2 == 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Applied preprocessing
Original rule:
f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ 1+arg1 > 0 /\ -arg1+arg1P2 <= 0 /\ x70 > 0), cost: 1
New rule:
f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1

Applied preprocessing
Original rule:
f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (2-arg1+arg1P3 <= 0 /\ 1+arg1P3 > 0 /\ -1+x120 < 0 /\ -1+arg1 > 0), cost: 1
New rule:
f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (2-arg1+arg1P3 <= 0 /\ 1+arg1P3 > 0), cost: 1

Applied preprocessing
Original rule:
f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P4, arg1'=arg1P4, (x150 > 0 /\ arg1 > 0 /\ -arg1+arg1P4 <= 0 /\ arg1P4 > 0), cost: 1
New rule:
f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P4, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg1P4 > 0), cost: 1

Applied preprocessing
Original rule:
f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P5, arg1'=arg1P5, (-2+arg1 > 0 /\ arg1P5 > 0 /\ 2+arg1P5-arg1 <= 0 /\ -1+x180 < 0), cost: 1
New rule:
f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P5, arg1'=arg1P5, (arg1P5 > 0 /\ 2+arg1P5-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f639_0_createIntList_LE : arg2'=arg2P6, arg1'=arg1P6, (1-arg2P6 == 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P6 > 0), cost: 1
New rule:
f1_0_main_Load -> f639_0_createIntList_LE : arg2'=1, arg1'=arg1P6, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P6 > 0), cost: 1

Applied preprocessing
Original rule:
f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2P7, arg1'=arg1P7, (arg2 > 0 /\ -1-arg1P7+arg1 == 0 /\ arg1 > 0 /\ 1-arg2P7+arg2 == 0), cost: 1
New rule:
f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=1+arg2, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0), cost: 1

Simplified rules
Start location: __init
   9: f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1
   1: f1_0_main_Load -> f491_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
  13: f1_0_main_Load -> f639_0_createIntList_LE : arg2'=1, arg1'=arg1P6, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P6 > 0), cost: 1
  10: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (2-arg1+arg1P3 <= 0 /\ 1+arg1P3 > 0), cost: 1
  11: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P4, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg1P4 > 0), cost: 1
  12: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P5, arg1'=arg1P5, (arg1P5 > 0 /\ 2+arg1P5-arg1 <= 0), cost: 1
  14: f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=1+arg2, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Applied nonterm
Original rule:
f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P4, arg1'=arg1P4, (-arg1+arg1P4 <= 0 /\ arg1P4 > 0), cost: 1
New rule:
f815_0_main_NULL -> [6] : (arg1P4 > 0 /\ arg1-arg1P4 >= 0 /\ -1+n0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fniCbj.txt

Applied deletion
Removed the following rules: 11

Applied acceleration
Original rule:
f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=1+arg2, arg1'=-1+arg1, (arg2 > 0 /\ arg1 > 0), cost: 1
New rule:
f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2+n8, arg1'=-n8+arg1, (arg2 > 0 /\ 1-n8+arg1 > 0 /\ n8 >= 0), cost: n8
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PckdHd.txt

Applied instantiation
Original rule:
f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2+n8, arg1'=-n8+arg1, (arg2 > 0 /\ 1-n8+arg1 > 0 /\ n8 >= 0), cost: n8
New rule:
f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (1 > 0 /\ arg2 > 0 /\ arg1 >= 0), cost: arg1

Applied simplification
Original rule:
f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (1 > 0 /\ arg2 > 0 /\ arg1 >= 0), cost: arg1
New rule:
f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (arg2 > 0 /\ arg1 >= 0), cost: arg1

Applied deletion
Removed the following rules: 14

Accelerated simple loops
Start location: __init
   9: f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1
   1: f1_0_main_Load -> f491_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
  13: f1_0_main_Load -> f639_0_createIntList_LE : arg2'=1, arg1'=arg1P6, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P6 > 0), cost: 1
  10: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (2-arg1+arg1P3 <= 0 /\ 1+arg1P3 > 0), cost: 1
  12: f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P5, arg1'=arg1P5, (arg1P5 > 0 /\ 2+arg1P5-arg1 <= 0), cost: 1
  15: f815_0_main_NULL -> [6] : (arg1P4 > 0 /\ arg1-arg1P4 >= 0 /\ -1+n0 >= 0), cost: NONTERM
  17: f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (arg2 > 0 /\ arg1 >= 0), cost: arg1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Applied chaining
First rule:
f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1
Second rule:
f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (2-arg1+arg1P3 <= 0 /\ 1+arg1P3 > 0), cost: 1
New rule:
f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (2-arg1+arg1P3 <= 0 /\ 1+arg1P3 > 0), cost: 2

Applied chaining
First rule:
f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1
Second rule:
f815_0_main_NULL -> f815_0_main_NULL : arg2'=arg2P5, arg1'=arg1P5, (arg1P5 > 0 /\ 2+arg1P5-arg1 <= 0), cost: 1
New rule:
f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P5, arg1'=arg1P5, (arg1P5 > 0 /\ 2+arg1P5-arg1 <= 0), cost: 2

Applied chaining
First rule:
f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1
Second rule:
f815_0_main_NULL -> [6] : (arg1P4 > 0 /\ arg1-arg1P4 >= 0 /\ -1+n0 >= 0), cost: NONTERM
New rule:
f491_0_random_ArrayAccess -> [6] : -1+arg1 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 10 12 15

Applied chaining
First rule:
f1_0_main_Load -> f639_0_createIntList_LE : arg2'=1, arg1'=arg1P6, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P6 > 0), cost: 1
Second rule:
f639_0_createIntList_LE -> f639_0_createIntList_LE : arg2'=arg2+arg1, arg1'=0, (arg2 > 0 /\ arg1 >= 0), cost: arg1
New rule:
f1_0_main_Load -> f639_0_createIntList_LE : arg2'=1+arg1P6, arg1'=0, (1+arg2 > 0 /\ arg1 > 0 /\ arg1P6 >= 0), cost: 1+arg1P6

Applied deletion
Removed the following rules: 17

Chained accelerated rules with incoming rules
Start location: __init
   9: f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P2, arg1'=arg1P2, (1+arg1P2 > 0 /\ -arg1+arg1P2 <= 0), cost: 1
  18: f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P3, arg1'=arg1P3, (2-arg1+arg1P3 <= 0 /\ 1+arg1P3 > 0), cost: 2
  19: f491_0_random_ArrayAccess -> f815_0_main_NULL : arg2'=arg2P5, arg1'=arg1P5, (arg1P5 > 0 /\ 2+arg1P5-arg1 <= 0), cost: 2
  20: f491_0_random_ArrayAccess -> [6] : -1+arg1 >= 0, cost: NONTERM
   1: f1_0_main_Load -> f491_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
  13: f1_0_main_Load -> f639_0_createIntList_LE : arg2'=1, arg1'=arg1P6, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1P6 > 0), cost: 1
  21: f1_0_main_Load -> f639_0_createIntList_LE : arg2'=1+arg1P6, arg1'=0, (1+arg2 > 0 /\ arg1 > 0 /\ arg1P6 >= 0), cost: 1+arg1P6
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  20: f491_0_random_ArrayAccess -> [6] : -1+arg1 >= 0, cost: NONTERM
   1: f1_0_main_Load -> f491_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
   8: __init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P8, arg1'=arg1P8, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f491_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (arg1 > 0 /\ 1+arg1P1 > 0), cost: 1
New rule:
__init -> f491_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (1+arg1P1 > 0 /\ arg1P8 > 0), cost: 2

Applied deletion
Removed the following rules: 1 8

Eliminating location f491_0_random_ArrayAccess by chaining:

Applied chaining
First rule:
__init -> f491_0_random_ArrayAccess : arg2'=arg2P1, arg1'=arg1P1, (1+arg1P1 > 0 /\ arg1P8 > 0), cost: 2
Second rule:
f491_0_random_ArrayAccess -> [6] : -1+arg1 >= 0, cost: NONTERM
New rule:
__init -> [6] : (-1+arg1P1 >= 0 /\ 1+arg1P1 > 0 /\ arg1P8 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [6] : (-1+arg1P1 >= 0 /\ 1+arg1P1 > 0 /\ arg1P8 > 0), cost: NONTERM
New rule:
__init -> [6] : (-1+arg1P1 >= 0 /\ arg1P8 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 20 22

Eliminated locations on linear paths
Start location: __init
  23: __init -> [6] : (-1+arg1P1 >= 0 /\ arg1P8 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 23 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-1+arg1P1 >= 0 /\ arg1P8 > 0)
