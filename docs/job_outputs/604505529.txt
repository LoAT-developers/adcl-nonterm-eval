WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-2+arg1P0 > 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-1-arg1+arg1P1 <= 0 /\ -arg2 == 0 /\ arg1 > 0 /\ -1+arg1P1 > 0), cost: 1
   2: f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+x60 > 0 /\ arg1 > 0 /\ 1-arg2 == 0 /\ -2+arg1P2 > 0), cost: 1
   3: f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+x640 > 0 /\ arg1 > 0 /\ -1+arg1P3 > 0 /\ -1+arg1P3-arg1 <= 0 /\ 1-arg2 == 0), cost: 1
   4: f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg2P4 > 0 /\ arg1P4 > 0 /\ 1+x140 > 0 /\ x150*x140 >= 0 /\ arg1 > 0 /\ 1+x150 > 0 /\ -1+arg2 > 0 /\ arg1P4-arg1 <= 0), cost: 1
   5: f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (-1+arg2P5 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ -1-arg1+arg2P5 <= 0 /\ -1+arg2 > 0 /\ 1+x200 > 0 /\ x200*x210 >= 0 /\ -arg1+arg1P5 <= 0 /\ 1+x210 > 0), cost: 1
   6: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (10-arg1P6 == 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, (1+x690 > 0 /\ arg1 > 0 /\ 1-arg2 == 0 /\ 10-arg1P7 == 0), cost: 1
   8: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P8, arg1'=arg1P8, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ x270*x280 >= 0 /\ 10-arg1P8+x270*x280 == 0), cost: 1
  13: f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ 1-arg1+arg2P13 <= 0 /\ arg1 > 0 /\ 1+arg2P13 > 0 /\ arg1P13-arg1 <= 0), cost: 1
  14: f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P14, arg1'=arg1P14, arg3'=arg3P14, (arg1P14 > 0 /\ 1+arg2P14 > 0 /\ 1-arg1+arg2P14 <= 0 /\ arg1 > 0 /\ arg1P14-arg1 <= 0), cost: 1
  15: f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P15, arg1'=arg1P15, arg3'=arg3P15, (1-arg2+arg2P15 <= 0 /\ arg2 > 0 /\ 1+arg2P15 > 0 /\ -1+x460 > 0 /\ -arg2+arg1P15 <= 0 /\ arg1P15 > 0 /\ arg1 > 0), cost: 1
   9: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=arg1P9, arg3'=arg3P9, (-1-arg1P9+arg1 == 0 /\ -1 < 0 /\ -1+arg1 > 0), cost: 1
  10: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=arg2P10, arg1'=arg1P10, arg3'=arg3P10, (-4+arg1P10 > 0 /\ -1+arg1-arg2P10 == 0 /\ -1 < 0 /\ -1+arg1 > 0), cost: 1
  11: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=arg2P11, arg1'=arg1P11, arg3'=arg3P11, (-3+arg1P11 > 0 /\ -1 < 0 /\ -1+arg1 > 0 /\ -1+arg1-arg2P11 == 0), cost: 1
  12: f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg1P12, arg3'=arg3P12, (-arg1P12+arg2 == 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: 1
  16: f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 3+arg2P16-arg1 <= 0 /\ 1-arg2+arg2P16 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ -arg2+arg1P16 <= 0), cost: 1
  17: f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (-2+arg1 > 0 /\ 1+arg2 > 0 /\ arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 1
  18: __init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (-2+arg1P0 > 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 == 0 /\ -2+arg1P0 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-1-arg1+arg1P1 <= 0 /\ -arg2 == 0 /\ arg1 > 0 /\ -1+arg1P1 > 0), cost: 1
New rule:
f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-1-arg1+arg1P1 <= 0 /\ arg2 == 0 /\ -1+arg1P1 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (1+x60 > 0 /\ arg1 > 0 /\ 1-arg2 == 0 /\ -2+arg1P2 > 0), cost: 1
New rule:
f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg1 > 0 /\ -1+arg2 == 0 /\ -2+arg1P2 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+x640 > 0 /\ arg1 > 0 /\ -1+arg1P3 > 0 /\ -1+arg1P3-arg1 <= 0 /\ 1-arg2 == 0), cost: 1
New rule:
f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1+arg1P3 > 0 /\ -1+arg1P3-arg1 <= 0 /\ -1+arg2 == 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg2P4 > 0 /\ arg1P4 > 0 /\ 1+x140 > 0 /\ x150*x140 >= 0 /\ arg1 > 0 /\ 1+x150 > 0 /\ -1+arg2 > 0 /\ arg1P4-arg1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg2P4 > 0 /\ arg1P4 > 0 /\ 1+x140 > 0 /\ 1+x150 > 0 /\ -1+arg2 > 0 /\ arg1P4-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (-1+arg2P5 > 0 /\ arg1 > 0 /\ arg1P5 > 0 /\ -1-arg1+arg2P5 <= 0 /\ -1+arg2 > 0 /\ 1+x200 > 0 /\ x200*x210 >= 0 /\ -arg1+arg1P5 <= 0 /\ 1+x210 > 0), cost: 1
New rule:
f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (-1+arg2P5 > 0 /\ arg1P5 > 0 /\ -1-arg1+arg2P5 <= 0 /\ -1+arg2 > 0 /\ 1+x200 > 0 /\ -arg1+arg1P5 <= 0 /\ 1+x210 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P6, arg1'=arg1P6, arg3'=arg3P6, (10-arg1P6 == 0 /\ -arg2 == 0 /\ arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2 == 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P7, arg1'=arg1P7, arg3'=arg3P7, (1+x690 > 0 /\ arg1 > 0 /\ 1-arg2 == 0 /\ 10-arg1P7 == 0), cost: 1
New rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1 > 0 /\ -1+arg2 == 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P8, arg1'=arg1P8, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ x270*x280 >= 0 /\ 10-arg1P8+x270*x280 == 0), cost: 1
New rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=arg1P9, arg3'=arg3P9, (-1-arg1P9+arg1 == 0 /\ -1 < 0 /\ -1+arg1 > 0), cost: 1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=-1+arg1, arg3'=arg3P9, -1+arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=arg2P10, arg1'=arg1P10, arg3'=arg3P10, (-4+arg1P10 > 0 /\ -1+arg1-arg2P10 == 0 /\ -1 < 0 /\ -1+arg1 > 0), cost: 1
New rule:
f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P10, arg3'=arg3P10, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=arg2P11, arg1'=arg1P11, arg3'=arg3P11, (-3+arg1P11 > 0 /\ -1 < 0 /\ -1+arg1 > 0 /\ -1+arg1-arg2P11 == 0), cost: 1
New rule:
f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P11, arg3'=arg3P11, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg1P12, arg3'=arg3P12, (-arg1P12+arg2 == 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: 1
New rule:
f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg2, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ 1-arg1+arg2P13 <= 0 /\ arg1 > 0 /\ 1+arg2P13 > 0 /\ arg1P13-arg1 <= 0), cost: 1
New rule:
f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ 1-arg1+arg2P13 <= 0 /\ 1+arg2P13 > 0 /\ arg1P13-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P14, arg1'=arg1P14, arg3'=arg3P14, (arg1P14 > 0 /\ 1+arg2P14 > 0 /\ 1-arg1+arg2P14 <= 0 /\ arg1 > 0 /\ arg1P14-arg1 <= 0), cost: 1
New rule:
f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P14, arg1'=arg1P14, arg3'=arg3P14, (arg1P14 > 0 /\ 1+arg2P14 > 0 /\ 1-arg1+arg2P14 <= 0 /\ arg1P14-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P15, arg1'=arg1P15, arg3'=arg3P15, (1-arg2+arg2P15 <= 0 /\ arg2 > 0 /\ 1+arg2P15 > 0 /\ -1+x460 > 0 /\ -arg2+arg1P15 <= 0 /\ arg1P15 > 0 /\ arg1 > 0), cost: 1
New rule:
f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P15, arg1'=arg1P15, arg3'=arg3P15, (1-arg2+arg2P15 <= 0 /\ 1+arg2P15 > 0 /\ -arg2+arg1P15 <= 0 /\ arg1P15 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 3+arg2P16-arg1 <= 0 /\ 1-arg2+arg2P16 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ -arg2+arg1P16 <= 0), cost: 1
New rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1-arg2+arg2P16 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ -arg2+arg1P16 <= 0), cost: 1

Applied preprocessing
Original rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (-2+arg1 > 0 /\ 1+arg2 > 0 /\ arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 1
New rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (1+arg2 > 0 /\ arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 1

Simplified rules
Start location: __init
  19: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 == 0 /\ -2+arg1P0 > 0 /\ arg1 > 0), cost: 1
  20: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-1-arg1+arg1P1 <= 0 /\ arg2 == 0 /\ -1+arg1P1 > 0), cost: 1
  21: f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg1 > 0 /\ -1+arg2 == 0 /\ -2+arg1P2 > 0), cost: 1
  22: f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1+arg1P3 > 0 /\ -1+arg1P3-arg1 <= 0 /\ -1+arg2 == 0), cost: 1
  23: f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg2P4 > 0 /\ arg1P4 > 0 /\ 1+x140 > 0 /\ 1+x150 > 0 /\ -1+arg2 > 0 /\ arg1P4-arg1 <= 0), cost: 1
  24: f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (-1+arg2P5 > 0 /\ arg1P5 > 0 /\ -1-arg1+arg2P5 <= 0 /\ -1+arg2 > 0 /\ 1+x200 > 0 /\ -arg1+arg1P5 <= 0 /\ 1+x210 > 0), cost: 1
  25: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2 == 0 /\ arg1 > 0), cost: 1
  26: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1 > 0 /\ -1+arg2 == 0), cost: 1
  27: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  32: f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ 1-arg1+arg2P13 <= 0 /\ 1+arg2P13 > 0 /\ arg1P13-arg1 <= 0), cost: 1
  33: f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P14, arg1'=arg1P14, arg3'=arg3P14, (arg1P14 > 0 /\ 1+arg2P14 > 0 /\ 1-arg1+arg2P14 <= 0 /\ arg1P14-arg1 <= 0), cost: 1
  34: f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P15, arg1'=arg1P15, arg3'=arg3P15, (1-arg2+arg2P15 <= 0 /\ 1+arg2P15 > 0 /\ -arg2+arg1P15 <= 0 /\ arg1P15 > 0 /\ arg1 > 0), cost: 1
  28: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=-1+arg1, arg3'=arg3P9, -1+arg1 > 0, cost: 1
  29: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P10, arg3'=arg3P10, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 1
  30: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P11, arg3'=arg3P11, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 1
  31: f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg2, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0), cost: 1
  35: f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1-arg2+arg2P16 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ -arg2+arg1P16 <= 0), cost: 1
  36: f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (1+arg2 > 0 /\ arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 1
  18: __init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1


Applied acceleration
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=-1+arg1, arg3'=arg3P9, -1+arg1 > 0, cost: 1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=-n+arg1, arg3'=arg3P9, (-n+arg1 > 0 /\ -1+n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FMnkIl.txt

Applied instantiation
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=-n+arg1, arg3'=arg3P9, (-n+arg1 > 0 /\ -1+n >= 0), cost: n
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-2+arg1 >= 0 /\ 1 > 0), cost: -1+arg1

Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-2+arg1 >= 0 /\ 1 > 0), cost: -1+arg1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -2+arg1 >= 0, cost: -1+arg1

Applied deletion
Removed the following rules: 28

Accelerated simple loops
Start location: __init
  19: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 == 0 /\ -2+arg1P0 > 0 /\ arg1 > 0), cost: 1
  20: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-1-arg1+arg1P1 <= 0 /\ arg2 == 0 /\ -1+arg1P1 > 0), cost: 1
  21: f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg1 > 0 /\ -1+arg2 == 0 /\ -2+arg1P2 > 0), cost: 1
  22: f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1+arg1P3 > 0 /\ -1+arg1P3-arg1 <= 0 /\ -1+arg2 == 0), cost: 1
  23: f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg2P4 > 0 /\ arg1P4 > 0 /\ 1+x140 > 0 /\ 1+x150 > 0 /\ -1+arg2 > 0 /\ arg1P4-arg1 <= 0), cost: 1
  24: f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (-1+arg2P5 > 0 /\ arg1P5 > 0 /\ -1-arg1+arg2P5 <= 0 /\ -1+arg2 > 0 /\ 1+x200 > 0 /\ -arg1+arg1P5 <= 0 /\ 1+x210 > 0), cost: 1
  25: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2 == 0 /\ arg1 > 0), cost: 1
  26: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1 > 0 /\ -1+arg2 == 0), cost: 1
  27: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  32: f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ 1-arg1+arg2P13 <= 0 /\ 1+arg2P13 > 0 /\ arg1P13-arg1 <= 0), cost: 1
  33: f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P14, arg1'=arg1P14, arg3'=arg3P14, (arg1P14 > 0 /\ 1+arg2P14 > 0 /\ 1-arg1+arg2P14 <= 0 /\ arg1P14-arg1 <= 0), cost: 1
  34: f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P15, arg1'=arg1P15, arg3'=arg3P15, (1-arg2+arg2P15 <= 0 /\ 1+arg2P15 > 0 /\ -arg2+arg1P15 <= 0 /\ arg1P15 > 0 /\ arg1 > 0), cost: 1
  29: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P10, arg3'=arg3P10, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 1
  30: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P11, arg3'=arg3P11, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 1
  38: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -2+arg1 >= 0, cost: -1+arg1
  31: f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg2, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0), cost: 1
  35: f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1-arg2+arg2P16 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ -arg2+arg1P16 <= 0), cost: 1
  36: f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (1+arg2 > 0 /\ arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 1
  18: __init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2 == 0 /\ arg1 > 0), cost: 1
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -2+arg1 >= 0, cost: -1+arg1
New rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2 == 0 /\ arg1 > 0), cost: 10

Applied chaining
First rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1 > 0 /\ -1+arg2 == 0), cost: 1
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -2+arg1 >= 0, cost: -1+arg1
New rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg1 > 0 /\ -1+arg2 == 0), cost: 10

Applied chaining
First rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -2+arg1 >= 0, cost: -1+arg1
New rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 10+x270*x280

Applied chaining
First rule:
f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg2, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0), cost: 1
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -2+arg1 >= 0, cost: -1+arg1
New rule:
f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-2+arg1 > 0 /\ -2+arg2 >= 0), cost: arg2

Applied deletion
Removed the following rules: 38

Applied chaining
First rule:
f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ 1-arg1+arg2P13 <= 0 /\ 1+arg2P13 > 0 /\ arg1P13-arg1 <= 0), cost: 1
Second rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1-arg2+arg2P16 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ -arg2+arg1P16 <= 0), cost: 1
New rule:
f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0), cost: 2

Applied chaining
First rule:
f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P14, arg1'=arg1P14, arg3'=arg3P14, (arg1P14 > 0 /\ 1+arg2P14 > 0 /\ 1-arg1+arg2P14 <= 0 /\ arg1P14-arg1 <= 0), cost: 1
Second rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1-arg2+arg2P16 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ -arg2+arg1P16 <= 0), cost: 1
New rule:
f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0), cost: 2

Applied chaining
First rule:
f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P15, arg1'=arg1P15, arg3'=arg3P15, (1-arg2+arg2P15 <= 0 /\ 1+arg2P15 > 0 /\ -arg2+arg1P15 <= 0 /\ arg1P15 > 0 /\ arg1 > 0), cost: 1
Second rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1-arg2+arg2P16 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ -arg2+arg1P16 <= 0), cost: 1
New rule:
f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg2+arg1P16 <= 0 /\ arg1 > 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ 3-arg2+arg2P16 <= 0), cost: 2

Applied chaining
First rule:
f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ 1-arg1+arg2P13 <= 0 /\ 1+arg2P13 > 0 /\ arg1P13-arg1 <= 0), cost: 1
Second rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (1+arg2 > 0 /\ arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 1
New rule:
f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 2

Applied chaining
First rule:
f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P14, arg1'=arg1P14, arg3'=arg3P14, (arg1P14 > 0 /\ 1+arg2P14 > 0 /\ 1-arg1+arg2P14 <= 0 /\ arg1P14-arg1 <= 0), cost: 1
Second rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (1+arg2 > 0 /\ arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 1
New rule:
f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 2

Applied chaining
First rule:
f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P15, arg1'=arg1P15, arg3'=arg3P15, (1-arg2+arg2P15 <= 0 /\ 1+arg2P15 > 0 /\ -arg2+arg1P15 <= 0 /\ arg1P15 > 0 /\ arg1 > 0), cost: 1
Second rule:
f388_0_height_NONNULL -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (1+arg2 > 0 /\ arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 1
New rule:
f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (2-arg2+arg1P17 <= 0 /\ arg1 > 0 /\ arg1P17 > 0 /\ 3-arg2+arg2P17 <= 0 /\ 1+arg2P17 > 0), cost: 2

Applied deletion
Removed the following rules: 35 36

Chained accelerated rules with incoming rules
Start location: __init
  19: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (arg2 == 0 /\ -2+arg1P0 > 0 /\ arg1 > 0), cost: 1
  20: f1_0_main_Load -> f480_0_main_InvokeMethod : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (-1-arg1+arg1P1 <= 0 /\ arg2 == 0 /\ -1+arg1P1 > 0), cost: 1
  21: f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg1 > 0 /\ -1+arg2 == 0 /\ -2+arg1P2 > 0), cost: 1
  22: f1_0_main_Load -> f481_0_main_InvokeMethod : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (-1+arg1P3 > 0 /\ -1+arg1P3-arg1 <= 0 /\ -1+arg2 == 0), cost: 1
  23: f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, (-2+arg2P4 > 0 /\ arg1P4 > 0 /\ 1+x140 > 0 /\ 1+x150 > 0 /\ -1+arg2 > 0 /\ arg1P4-arg1 <= 0), cost: 1
  24: f1_0_main_Load -> f482_0_main_InvokeMethod : arg2'=arg2P5, arg1'=arg1P5, arg3'=arg3P5, (-1+arg2P5 > 0 /\ arg1P5 > 0 /\ -1-arg1+arg2P5 <= 0 /\ -1+arg2 > 0 /\ 1+x200 > 0 /\ -arg1+arg1P5 <= 0 /\ 1+x210 > 0), cost: 1
  25: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2 == 0 /\ arg1 > 0), cost: 1
  26: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1 > 0 /\ -1+arg2 == 0), cost: 1
  27: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  39: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2 == 0 /\ arg1 > 0), cost: 10
  40: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg1 > 0 /\ -1+arg2 == 0), cost: 10
  41: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 10+x270*x280
  32: f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ 1-arg1+arg2P13 <= 0 /\ 1+arg2P13 > 0 /\ arg1P13-arg1 <= 0), cost: 1
  43: f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0), cost: 2
  46: f480_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 2
  33: f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P14, arg1'=arg1P14, arg3'=arg3P14, (arg1P14 > 0 /\ 1+arg2P14 > 0 /\ 1-arg1+arg2P14 <= 0 /\ arg1P14-arg1 <= 0), cost: 1
  44: f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg1P16 <= 0 /\ 3+arg2P16-arg1 <= 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0), cost: 2
  47: f481_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (arg1P17 > 0 /\ 1+arg2P17 > 0 /\ 2-arg1+arg1P17 <= 0 /\ 3+arg2P17-arg1 <= 0), cost: 2
  34: f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P15, arg1'=arg1P15, arg3'=arg3P15, (1-arg2+arg2P15 <= 0 /\ 1+arg2P15 > 0 /\ -arg2+arg1P15 <= 0 /\ arg1P15 > 0 /\ arg1 > 0), cost: 1
  45: f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg2+arg1P16 <= 0 /\ arg1 > 0 /\ 1+arg2P16 > 0 /\ arg1P16 > 0 /\ 3-arg2+arg2P16 <= 0), cost: 2
  48: f482_0_main_InvokeMethod -> f388_0_height_NONNULL : arg2'=arg2P17, arg1'=arg1P17, arg3'=arg3P17, (2-arg2+arg1P17 <= 0 /\ arg1 > 0 /\ arg1P17 > 0 /\ 3-arg2+arg2P17 <= 0 /\ 1+arg2P17 > 0), cost: 2
  29: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P10, arg3'=arg3P10, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 1
  30: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P11, arg3'=arg3P11, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 1
  31: f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg2, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0), cost: 1
  42: f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-2+arg1 > 0 /\ -2+arg2 >= 0), cost: arg2
  18: __init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  25: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2 == 0 /\ arg1 > 0), cost: 1
  26: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1 > 0 /\ -1+arg2 == 0), cost: 1
  27: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  39: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2 == 0 /\ arg1 > 0), cost: 10
  40: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg1 > 0 /\ -1+arg2 == 0), cost: 10
  41: f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 10+x270*x280
  29: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P10, arg3'=arg3P10, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 1
  30: f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P11, arg3'=arg3P11, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 1
  31: f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg2, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0), cost: 1
  42: f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-2+arg1 > 0 /\ -2+arg2 >= 0), cost: arg2
  18: __init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2 == 0 /\ arg1 > 0), cost: 1
New rule:
__init -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2P18 == 0 /\ arg1P18 > 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1 > 0 /\ -1+arg2 == 0), cost: 1
New rule:
__init -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
New rule:
__init -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2 == 0 /\ arg1 > 0), cost: 10
New rule:
__init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2P18 == 0 /\ arg1P18 > 0), cost: 11

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg1 > 0 /\ -1+arg2 == 0), cost: 10
New rule:
__init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 11

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P18, arg1'=arg1P18, arg3'=arg3P18, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 10+x270*x280
New rule:
__init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 11+x270*x280

Applied deletion
Removed the following rules: 18 25 26 27 39 40 41

Eliminating location f518_0__init__InvokeMethod by chaining:

Applied chaining
First rule:
f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P10, arg3'=arg3P10, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 1
Second rule:
f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg2, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0), cost: 1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-4+arg1P10 > 0 /\ -2+arg1P10 > 0 /\ -1+arg1 > 0), cost: 2

Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-4+arg1P10 > 0 /\ -2+arg1P10 > 0 /\ -1+arg1 > 0), cost: 2
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 2

Applied chaining
First rule:
f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P10, arg3'=arg3P10, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 1
Second rule:
f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-2+arg1 > 0 /\ -2+arg2 >= 0), cost: arg2
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-4+arg1P10 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P10 > 0 /\ -1+arg1 > 0), cost: arg1

Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-4+arg1P10 > 0 /\ -3+arg1 >= 0 /\ -2+arg1P10 > 0 /\ -1+arg1 > 0), cost: arg1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-4+arg1P10 > 0 /\ -3+arg1 >= 0), cost: arg1

Applied chaining
First rule:
f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P11, arg3'=arg3P11, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 1
Second rule:
f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg2, arg3'=arg3P12, (-2+arg1 > 0 /\ arg2 > 0), cost: 1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-3+arg1P11 > 0 /\ -2+arg1P11 > 0 /\ -1+arg1 > 0), cost: 2

Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-3+arg1P11 > 0 /\ -2+arg1P11 > 0 /\ -1+arg1 > 0), cost: 2
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 2

Applied chaining
First rule:
f193_0__init__LE -> f518_0__init__InvokeMethod : arg2'=-1+arg1, arg1'=arg1P11, arg3'=arg3P11, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 1
Second rule:
f518_0__init__InvokeMethod -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-2+arg1 > 0 /\ -2+arg2 >= 0), cost: arg2
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-3+arg1P11 > 0 /\ -2+arg1P11 > 0 /\ -3+arg1 >= 0 /\ -1+arg1 > 0), cost: arg1

Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-3+arg1P11 > 0 /\ -2+arg1P11 > 0 /\ -3+arg1 >= 0 /\ -1+arg1 > 0), cost: arg1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-3+arg1P11 > 0 /\ -3+arg1 >= 0), cost: arg1

Applied deletion
Removed the following rules: 29 30 31 42

Eliminated locations on tree-shaped paths
Start location: __init
  55: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 2
  56: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-4+arg1P10 > 0 /\ -3+arg1 >= 0), cost: arg1
  57: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 2
  58: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-3+arg1P11 > 0 /\ -3+arg1 >= 0), cost: arg1
  49: __init -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2P18 == 0 /\ arg1P18 > 0), cost: 2
  50: __init -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 2
  51: __init -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 2
  52: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2P18 == 0 /\ arg1P18 > 0), cost: 11
  53: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 11
  54: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 11+x270*x280


Applied pruning (of leafs and parallel rules):
Start location: __init
  55: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 2
  56: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-4+arg1P10 > 0 /\ -3+arg1 >= 0), cost: arg1
  57: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 2
  58: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-3+arg1P11 > 0 /\ -3+arg1 >= 0), cost: arg1
  49: __init -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2P18 == 0 /\ arg1P18 > 0), cost: 2
  50: __init -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 2
  51: __init -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 2
  52: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2P18 == 0 /\ arg1P18 > 0), cost: 11
  54: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 11+x270*x280


Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-4+arg1P10 > 0 /\ -1+arg1 > 0), cost: 2
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, -1+arg1 > 0, cost: 2

Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-4+arg1P10 > 0 /\ -3+arg1 >= 0), cost: arg1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -3+arg1 >= 0, cost: arg1

Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, (-3+arg1P11 > 0 /\ -1+arg1 > 0), cost: 2
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, -1+arg1 > 0, cost: 2

Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (-3+arg1P11 > 0 /\ -3+arg1 >= 0), cost: arg1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -3+arg1 >= 0, cost: arg1

Simplified simple loops
Start location: __init
  59: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, -1+arg1 > 0, cost: 2
  60: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -3+arg1 >= 0, cost: arg1
  49: __init -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2P18 == 0 /\ arg1P18 > 0), cost: 2
  50: __init -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 2
  51: __init -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 2
  52: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2P18 == 0 /\ arg1P18 > 0), cost: 11
  54: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 11+x270*x280


Applied acceleration
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=-1+arg1, arg3'=arg3P12, -1+arg1 > 0, cost: 2
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg1-n4, arg3'=arg3P12, (arg1-n4 > 0 /\ -1+n4 >= 0), cost: 2*n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_LAaJcA.txt

Applied instantiation
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=arg1-n4, arg3'=arg3P12, (arg1-n4 > 0 /\ -1+n4 >= 0), cost: 2*n4
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, (-2+arg1 >= 0 /\ 1 > 0), cost: -2+2*arg1

Applied simplification
Original rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, (-2+arg1 >= 0 /\ 1 > 0), cost: -2+2*arg1
New rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, -2+arg1 >= 0, cost: -2+2*arg1

Applied deletion
Removed the following rules: 59

Accelerated simple loops
Start location: __init
  60: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -3+arg1 >= 0, cost: arg1
  62: f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, -2+arg1 >= 0, cost: -2+2*arg1
  49: __init -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2P18 == 0 /\ arg1P18 > 0), cost: 2
  50: __init -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 2
  51: __init -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 2
  52: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2P18 == 0 /\ arg1P18 > 0), cost: 11
  54: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 11+x270*x280


Applied chaining
First rule:
__init -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2P18 == 0 /\ arg1P18 > 0), cost: 2
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -3+arg1 >= 0, cost: arg1
New rule:
__init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, 7 >= 0, cost: 12

Applied chaining
First rule:
__init -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 2
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -3+arg1 >= 0, cost: arg1
New rule:
__init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, 7 >= 0, cost: 12

Applied chaining
First rule:
__init -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 2
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, -3+arg1 >= 0, cost: arg1
New rule:
__init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0), cost: 12+x270*x280

Applied chaining
First rule:
__init -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2P18 == 0 /\ arg1P18 > 0), cost: 2
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, -2+arg1 >= 0, cost: -2+2*arg1
New rule:
__init -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, 8 >= 0, cost: 20

Applied chaining
First rule:
__init -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 2
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, -2+arg1 >= 0, cost: -2+2*arg1
New rule:
__init -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, 8 >= 0, cost: 20

Applied chaining
First rule:
__init -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 2
Second rule:
f193_0__init__LE -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, -2+arg1 >= 0, cost: -2+2*arg1
New rule:
__init -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, (1+x280 > 0 /\ 1+x270 > 0), cost: 20+2*x270*x280

Applied deletion
Removed the following rules: 60 62

Chained accelerated rules with incoming rules
Start location: __init
  49: __init -> f193_0__init__LE : arg2'=arg2P6, arg1'=10, arg3'=arg3P6, (arg2P18 == 0 /\ arg1P18 > 0), cost: 2
  50: __init -> f193_0__init__LE : arg2'=arg2P7, arg1'=10, arg3'=arg3P7, (arg1P18 > 0 /\ -1+arg2P18 == 0), cost: 2
  51: __init -> f193_0__init__LE : arg2'=arg2P8, arg1'=10+x270*x280, arg3'=arg3P8, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 2
  52: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (arg2P18 == 0 /\ arg1P18 > 0), cost: 11
  54: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0 /\ arg1P18 > 0 /\ -1+arg2P18 > 0), cost: 11+x270*x280
  63: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, 7 >= 0, cost: 12
  64: __init -> f193_0__init__LE : arg2'=arg2P9, arg1'=1, arg3'=arg3P9, (1+x280 > 0 /\ 1+x270 > 0), cost: 12+x270*x280
  65: __init -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, 8 >= 0, cost: 20
  66: __init -> f193_0__init__LE : arg2'=arg2P12, arg1'=1, arg3'=arg3P12, (1+x280 > 0 /\ 1+x270 > 0), cost: 20+2*x270*x280


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

