WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f1_0_main_Load\' : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-arg1P0+arg1 == 0 /\ 1+arg2 > 0 /\ -200*arg2+x230 <= 0 /\ arg1 > 0 /\ arg2-arg2P0 == 0), cost: 1
   1: f1_0_main_Load\' -> f1870_0_rec_LE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (-arg1P1+100*arg2 == 0 /\ 200*arg2-13*arg2P1 >= 0 /\ 1+arg2 > 0 /\ -13+200*arg2-13*arg2P1 < 0 /\ arg1 > 0 /\ arg2-arg4P1 == 0 /\ 100*arg2-arg3P1+arg2P1 == 0 /\ -arg5P1 == 0 /\ -200*arg2+arg2P1 <= 0), cost: 1
   2: f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-1-arg2P2+arg2 == 0 /\ -1+arg2+arg1-arg3P2 == 0 /\ arg5-arg5P2 == 0 /\ -arg4P2+arg4 == 0 /\ arg5-arg4 >= 0 /\ arg3 > 0 /\ -1 < 0 /\ arg1-arg1P2 == 0 /\ 1+arg4 > 0), cost: 1
   3: f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg4-arg4P3 == 0 /\ 2+arg5-arg4 <= 0 /\ -1+arg4 > 0 /\ 1+arg5 > 0 /\ 1+x130 > 0 /\ 1+arg5-arg4 < 0 /\ -1+arg2-arg2P3 == 0 /\ arg1-arg1P3 == 0 /\ 1+x140 > 0 /\ -1+arg2-arg3P3+arg1 == 0 /\ arg3 > 0 /\ 2+arg5-arg5P3 == 0 /\ -1 < 0 /\ -9+x130*x140 <= 0), cost: 1
   4: f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1+x210 > 0 /\ -1+arg2+arg1-arg3P4 == 0 /\ 2+arg5-arg4 <= 0 /\ -9+x210*x200 > 0 /\ -1+arg4 > 0 /\ 1+arg5 > 0 /\ -1-arg1P4+arg1 == 0 /\ 1+arg5-arg4 < 0 /\ 1+x200 > 0 /\ arg2-arg2P4 == 0 /\ arg3 > 0 /\ arg4-arg4P4 == 0 /\ -1 < 0 /\ 2+arg5-arg5P4 == 0), cost: 1
   5: __init -> f1_0_main_Load : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f1_0_main_Load\' : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-arg1P0+arg1 == 0 /\ 1+arg2 > 0 /\ -200*arg2+x230 <= 0 /\ arg1 > 0 /\ arg2-arg2P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f1_0_main_Load\' : arg5'=arg5P0, arg4'=arg4P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load\' -> f1870_0_rec_LE : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (-arg1P1+100*arg2 == 0 /\ 200*arg2-13*arg2P1 >= 0 /\ 1+arg2 > 0 /\ -13+200*arg2-13*arg2P1 < 0 /\ arg1 > 0 /\ arg2-arg4P1 == 0 /\ 100*arg2-arg3P1+arg2P1 == 0 /\ -arg5P1 == 0 /\ -200*arg2+arg2P1 <= 0), cost: 1
New rule:
f1_0_main_Load\' -> f1870_0_rec_LE : arg5'=0, arg2'=arg2P1, arg4'=arg2, arg1'=100*arg2, arg3'=100*arg2+arg2P1, (200*arg2-13*arg2P1 >= 0 /\ arg1 > 0 /\ -200*arg2+arg2P1 <= 0 /\ 13-200*arg2+13*arg2P1 > 0), cost: 1

Applied preprocessing
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-1-arg2P2+arg2 == 0 /\ -1+arg2+arg1-arg3P2 == 0 /\ arg5-arg5P2 == 0 /\ -arg4P2+arg4 == 0 /\ arg5-arg4 >= 0 /\ arg3 > 0 /\ -1 < 0 /\ arg1-arg1P2 == 0 /\ 1+arg4 > 0), cost: 1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg2'=-1+arg2, arg3'=-1+arg2+arg1, (arg5-arg4 >= 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (arg4-arg4P3 == 0 /\ 2+arg5-arg4 <= 0 /\ -1+arg4 > 0 /\ 1+arg5 > 0 /\ 1+x130 > 0 /\ 1+arg5-arg4 < 0 /\ -1+arg2-arg2P3 == 0 /\ arg1-arg1P3 == 0 /\ 1+x140 > 0 /\ -1+arg2-arg3P3+arg1 == 0 /\ arg3 > 0 /\ 2+arg5-arg5P3 == 0 /\ -1 < 0 /\ -9+x130*x140 <= 0), cost: 1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=2+arg5, arg2'=-1+arg2, arg3'=-1+arg2+arg1, (1+arg5 > 0 /\ 1+x130 > 0 /\ 1+x140 > 0 /\ arg3 > 0 /\ -9+x130*x140 <= 0 /\ -1-arg5+arg4 > 0), cost: 1

Applied preprocessing
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (1+x210 > 0 /\ -1+arg2+arg1-arg3P4 == 0 /\ 2+arg5-arg4 <= 0 /\ -9+x210*x200 > 0 /\ -1+arg4 > 0 /\ 1+arg5 > 0 /\ -1-arg1P4+arg1 == 0 /\ 1+arg5-arg4 < 0 /\ 1+x200 > 0 /\ arg2-arg2P4 == 0 /\ arg3 > 0 /\ arg4-arg4P4 == 0 /\ -1 < 0 /\ 2+arg5-arg5P4 == 0), cost: 1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=2+arg5, arg1'=-1+arg1, arg3'=-1+arg2+arg1, (-9+x210*x200 > 0 /\ 1+arg5 > 0 /\ 1+x200 > 0 /\ arg3 > 0 /\ -1-arg5+arg4 > 0), cost: 1

Simplified rules
Start location: __init
   6: f1_0_main_Load -> f1_0_main_Load\' : arg5'=arg5P0, arg4'=arg4P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load\' -> f1870_0_rec_LE : arg5'=0, arg2'=arg2P1, arg4'=arg2, arg1'=100*arg2, arg3'=100*arg2+arg2P1, (200*arg2-13*arg2P1 >= 0 /\ arg1 > 0 /\ -200*arg2+arg2P1 <= 0 /\ 13-200*arg2+13*arg2P1 > 0), cost: 1
   8: f1870_0_rec_LE -> f1870_0_rec_LE : arg2'=-1+arg2, arg3'=-1+arg2+arg1, (arg5-arg4 >= 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: 1
   9: f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=2+arg5, arg2'=-1+arg2, arg3'=-1+arg2+arg1, (1+arg5 > 0 /\ 1+x130 > 0 /\ 1+x140 > 0 /\ arg3 > 0 /\ -9+x130*x140 <= 0 /\ -1-arg5+arg4 > 0), cost: 1
  10: f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=2+arg5, arg1'=-1+arg1, arg3'=-1+arg2+arg1, (-9+x210*x200 > 0 /\ 1+arg5 > 0 /\ 1+x200 > 0 /\ arg3 > 0 /\ -1-arg5+arg4 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied acceleration
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg2'=-1+arg2, arg3'=-1+arg2+arg1, (arg5-arg4 >= 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: 1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg2'=arg2-n, arg3'=arg2+arg1-n, (1+arg2+arg1-n > 0 /\ arg5-arg4 >= 0 /\ -1+n >= 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_DeHknP.txt

Applied instantiation
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg2'=arg2-n, arg3'=arg2+arg1-n, (1+arg2+arg1-n > 0 /\ arg5-arg4 >= 0 /\ -1+n >= 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: n
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg2'=-arg1, arg3'=0, (1 > 0 /\ -1+arg2+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: arg2+arg1

Applied acceleration
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=2+arg5, arg2'=-1+arg2, arg3'=-1+arg2+arg1, (1+arg5 > 0 /\ 1+x130 > 0 /\ 1+x140 > 0 /\ arg3 > 0 /\ -9+x130*x140 <= 0 /\ -1-arg5+arg4 > 0), cost: 1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*n0, arg2'=-n0+arg2, arg3'=-n0+arg2+arg1, (1-n0+arg2+arg1 > 0 /\ 1+arg5 > 0 /\ 9-x130*x140 >= 0 /\ 1+x130 > 0 /\ 1+x140 > 0 /\ -1+n0 >= 0 /\ arg3 > 0 /\ 1-arg5-2*n0+arg4 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_EHbNjC.txt

Applied instantiation
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*n0, arg2'=-n0+arg2, arg3'=-n0+arg2+arg1, (1-n0+arg2+arg1 > 0 /\ 1+arg5 > 0 /\ 9-x130*x140 >= 0 /\ 1+x130 > 0 /\ 1+x140 > 0 /\ -1+n0 >= 0 /\ arg3 > 0 /\ 1-arg5-2*n0+arg4 > 0), cost: n0
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*arg2+2*arg1, arg2'=-arg1, arg3'=0, (1 > 0 /\ 1+arg5 > 0 /\ -1+arg2+arg1 >= 0 /\ 9-x130*x140 >= 0 /\ 1+x130 > 0 /\ 1+x140 > 0 /\ 1-arg5-2*arg2+arg4-2*arg1 > 0 /\ arg3 > 0), cost: arg2+arg1

Applied acceleration
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=2+arg5, arg1'=-1+arg1, arg3'=-1+arg2+arg1, (-9+x210*x200 > 0 /\ 1+arg5 > 0 /\ 1+x200 > 0 /\ arg3 > 0 /\ -1-arg5+arg4 > 0), cost: 1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*n1, arg1'=arg1-n1, arg3'=arg2+arg1-n1, (-9+x210*x200 > 0 /\ 1+arg2+arg1-n1 > 0 /\ 1+arg5 > 0 /\ 1+x200 > 0 /\ 1-arg5+arg4-2*n1 > 0 /\ -1+n1 >= 0 /\ arg3 > 0), cost: n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_AjlCEg.txt

Applied instantiation
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*n1, arg1'=arg1-n1, arg3'=arg2+arg1-n1, (-9+x210*x200 > 0 /\ 1+arg2+arg1-n1 > 0 /\ 1+arg5 > 0 /\ 1+x200 > 0 /\ 1-arg5+arg4-2*n1 > 0 /\ -1+n1 >= 0 /\ arg3 > 0), cost: n1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*arg2+2*arg1, arg1'=-arg2, arg3'=0, (1 > 0 /\ -9+x210*x200 > 0 /\ 1+arg5 > 0 /\ -1+arg2+arg1 >= 0 /\ 1+x200 > 0 /\ 1-arg5-2*arg2+arg4-2*arg1 > 0 /\ arg3 > 0), cost: arg2+arg1

Applied simplification
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg2'=-arg1, arg3'=0, (1 > 0 /\ -1+arg2+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: arg2+arg1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg2'=-arg1, arg3'=0, (-1+arg2+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: arg2+arg1

Applied simplification
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*arg2+2*arg1, arg2'=-arg1, arg3'=0, (1 > 0 /\ 1+arg5 > 0 /\ -1+arg2+arg1 >= 0 /\ 9-x130*x140 >= 0 /\ 1+x130 > 0 /\ 1+x140 > 0 /\ 1-arg5-2*arg2+arg4-2*arg1 > 0 /\ arg3 > 0), cost: arg2+arg1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*arg2+2*arg1, arg2'=-arg1, arg3'=0, (1+arg5 > 0 /\ -1+arg2+arg1 >= 0 /\ 1+x130 > 0 /\ 1+x140 > 0 /\ 1-arg5-2*arg2+arg4-2*arg1 > 0 /\ arg3 > 0 /\ -9+x130*x140 <= 0), cost: arg2+arg1

Applied simplification
Original rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*arg2+2*arg1, arg1'=-arg2, arg3'=0, (1 > 0 /\ -9+x210*x200 > 0 /\ 1+arg5 > 0 /\ -1+arg2+arg1 >= 0 /\ 1+x200 > 0 /\ 1-arg5-2*arg2+arg4-2*arg1 > 0 /\ arg3 > 0), cost: arg2+arg1
New rule:
f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*arg2+2*arg1, arg1'=-arg2, arg3'=0, (-9+x210*x200 > 0 /\ 1+arg5 > 0 /\ -1+arg2+arg1 >= 0 /\ 1+x200 > 0 /\ 1-arg5-2*arg2+arg4-2*arg1 > 0 /\ arg3 > 0), cost: arg2+arg1

Applied deletion
Removed the following rules: 8 9 10

Accelerated simple loops
Start location: __init
   6: f1_0_main_Load -> f1_0_main_Load\' : arg5'=arg5P0, arg4'=arg4P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load\' -> f1870_0_rec_LE : arg5'=0, arg2'=arg2P1, arg4'=arg2, arg1'=100*arg2, arg3'=100*arg2+arg2P1, (200*arg2-13*arg2P1 >= 0 /\ arg1 > 0 /\ -200*arg2+arg2P1 <= 0 /\ 13-200*arg2+13*arg2P1 > 0), cost: 1
  14: f1870_0_rec_LE -> f1870_0_rec_LE : arg2'=-arg1, arg3'=0, (-1+arg2+arg1 >= 0 /\ arg5-arg4 >= 0 /\ arg3 > 0 /\ 1+arg4 > 0), cost: arg2+arg1
  15: f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*arg2+2*arg1, arg2'=-arg1, arg3'=0, (1+arg5 > 0 /\ -1+arg2+arg1 >= 0 /\ 1+x130 > 0 /\ 1+x140 > 0 /\ 1-arg5-2*arg2+arg4-2*arg1 > 0 /\ arg3 > 0 /\ -9+x130*x140 <= 0), cost: arg2+arg1
  16: f1870_0_rec_LE -> f1870_0_rec_LE : arg5'=arg5+2*arg2+2*arg1, arg1'=-arg2, arg3'=0, (-9+x210*x200 > 0 /\ 1+arg5 > 0 /\ -1+arg2+arg1 >= 0 /\ 1+x200 > 0 /\ 1-arg5-2*arg2+arg4-2*arg1 > 0 /\ arg3 > 0), cost: arg2+arg1
   5: __init -> f1_0_main_Load : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Applied deletion
Removed the following rules: 14 15 16

Chained accelerated rules with incoming rules
Start location: __init
   6: f1_0_main_Load -> f1_0_main_Load\' : arg5'=arg5P0, arg4'=arg4P0, arg3'=arg3P0, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f1_0_main_Load\' -> f1870_0_rec_LE : arg5'=0, arg2'=arg2P1, arg4'=arg2, arg1'=100*arg2, arg3'=100*arg2+arg2P1, (200*arg2-13*arg2P1 >= 0 /\ arg1 > 0 /\ -200*arg2+arg2P1 <= 0 /\ 13-200*arg2+13*arg2P1 > 0), cost: 1
   5: __init -> f1_0_main_Load : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

