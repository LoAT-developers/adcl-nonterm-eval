unknown

Initial ITS

Start location: l2
Program variables: __const_5^0 x^0 y^0
   0: l0 -> l1 : __const_5^0'=__const_5^post1, x^0'=x^post1, y^0'=y^post1, (x^post1-__const_5^0 == 0 /\ -x^post1+y^post1 == 0 /\ y^post1 <= 0 /\ -__const_5^post1+__const_5^0 == 0), cost: 1
   1: l2 -> l0 : __const_5^0'=__const_5^post2, x^0'=x^post2, y^0'=y^post2, (y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ -__const_5^post2+__const_5^0 == 0), cost: 1

Chained Linear Paths

Start location: l2
Program variables: __const_5^0 x^0 y^0
   2: l2 -> l1 : __const_5^0'=__const_5^post1, x^0'=x^post1, y^0'=y^post1, (-x^post1+y^post1 == 0 /\ x^post1-__const_5^post2 == 0 /\ y^post1 <= 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ __const_5^post2-__const_5^post1 == 0 /\ -__const_5^post2+__const_5^0 == 0), cost: 1

	Eliminating location l0 by chaining:

	Applied chaining

	First rule:
	l2 -> l0 : __const_5^0'=__const_5^post2, x^0'=x^post2, y^0'=y^post2, (y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ -__const_5^post2+__const_5^0 == 0), cost: 1
	Second rule:
	l0 -> l1 : __const_5^0'=__const_5^post1, x^0'=x^post1, y^0'=y^post1, (x^post1-__const_5^0 == 0 /\ -x^post1+y^post1 == 0 /\ y^post1 <= 0 /\ -__const_5^post1+__const_5^0 == 0), cost: 1
	New rule:
	l2 -> l1 : __const_5^0'=__const_5^post1, x^0'=x^post1, y^0'=y^post1, (-x^post1+y^post1 == 0 /\ x^post1-__const_5^post2 == 0 /\ y^post1 <= 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ __const_5^post2-__const_5^post1 == 0 /\ -__const_5^post2+__const_5^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 1

Simplified Transitions

Start location: l2
Program variables: __const_5^0 x^0 y^0
   3: l2 -> l1 : x^0'=__const_5^0, y^0'=__const_5^0, __const_5^0 <= 0, cost: 1

	Propagated Equalities

	Original rule:
	l2 -> l1 : __const_5^0'=__const_5^post1, x^0'=x^post1, y^0'=y^post1, (-x^post1+y^post1 == 0 /\ x^post1-__const_5^post2 == 0 /\ y^post1 <= 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ __const_5^post2-__const_5^post1 == 0 /\ -__const_5^post2+__const_5^0 == 0), cost: 1
	New rule:
	l2 -> l1 : __const_5^0'=__const_5^post2, x^0'=__const_5^post2, y^0'=__const_5^post2, (0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ __const_5^post2 <= 0 /\ -__const_5^post2+__const_5^0 == 0), cost: 1
	
		propagated equality x^post1 = y^post1
		
		propagated equality y^post1 = __const_5^post2
		
		propagated equality __const_5^post1 = __const_5^post2
		
	Propagated Equalities

	Original rule:
	l2 -> l1 : __const_5^0'=__const_5^post2, x^0'=__const_5^post2, y^0'=__const_5^post2, (0 == 0 /\ y^0-y^post2 == 0 /\ -x^post2+x^0 == 0 /\ __const_5^post2 <= 0 /\ -__const_5^post2+__const_5^0 == 0), cost: 1
	New rule:
	l2 -> l1 : __const_5^0'=__const_5^0, x^0'=__const_5^0, y^0'=__const_5^0, (0 == 0 /\ __const_5^0 <= 0), cost: 1
	
		propagated equality y^post2 = y^0
		
		propagated equality x^post2 = x^0
		
		propagated equality __const_5^post2 = __const_5^0
		
	Simplified Guard

	Original rule:
	l2 -> l1 : __const_5^0'=__const_5^0, x^0'=__const_5^0, y^0'=__const_5^0, (0 == 0 /\ __const_5^0 <= 0), cost: 1
	New rule:
	l2 -> l1 : __const_5^0'=__const_5^0, x^0'=__const_5^0, y^0'=__const_5^0, __const_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l1 : __const_5^0'=__const_5^0, x^0'=__const_5^0, y^0'=__const_5^0, __const_5^0 <= 0, cost: 1
	New rule:
	l2 -> l1 : x^0'=__const_5^0, y^0'=__const_5^0, __const_5^0 <= 0, cost: 1

Step with 3

	Trace

	3[(__const_5^0 <= 0)]
	
	Blocked

	[{}, {}]

Backtrack

	Trace

	Blocked

	[{3[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
