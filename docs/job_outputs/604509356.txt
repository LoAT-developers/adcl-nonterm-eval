YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l6, true>
<l1, l2, (undef1 <= arg2) /\ (arg1 > 0) /\ (arg2 > ~(1)) /\ (undef1 > ~(1)), par{arg1 -> undef1, arg2 -> undef2, arg3 -> undef3}>
<l3, l2, (arg1 > 0) /\ (undef4 > ~(1)), par{arg1 -> undef4, arg3 -> undef6}>
<l3, l4, (arg2 > ~(1)) /\ (undef7 > ~(1)) /\ (arg1 > 0), par{arg1 -> undef7, arg2 -> undef8, arg3 -> undef9}>
<l4, l4, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef11, arg3 -> undef12}>
<l2, l5, (undef14 > ~(1)) /\ (arg2 > 1) /\ (undef13 <= arg1) /\ ((undef15 + 1) <= arg1) /\ (arg1 > 0) /\ (undef13 > 0) /\ (undef15 > ~(1)), par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15}>
<l5, l5, ((undef16 + 2) <= arg1) /\ (undef16 <= arg3) /\ ((undef18 + 3) <= arg1) /\ ((undef18 + 1) <= arg3) /\ (arg1 > 2) /\ (arg3 > 0) /\ (undef16 > 0) /\ (undef18 > ~(1)), par{arg1 -> undef16, arg3 -> undef18}>
<l5, l5, (undef19 <= arg1) /\ (arg2 > 0) /\ ((undef19 - 2) <= arg3) /\ ((undef21 + 2) <= arg1) /\ (undef21 <= arg3) /\ (arg1 > 1) /\ (arg3 > ~(1)) /\ (undef19 > 1) /\ (undef21 > ~(1)), par{arg1 -> undef19, arg2 -> (arg2 - 1), arg3 -> undef21}>
<l6, l3, true, par{arg1 -> undef22, arg2 -> undef23, arg3 -> undef24}>

Fresh variables:
undef1, undef2, undef3, undef4, undef6, undef7, undef8, undef9, undef11, undef12, undef13, undef14, undef15, undef16, undef18, undef19, undef21, undef22, undef23, undef24, 

Undef variables:
undef1, undef2, undef3, undef4, undef6, undef7, undef8, undef9, undef11, undef12, undef13, undef14, undef15, undef16, undef18, undef19, undef21, undef22, undef23, undef24, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l5, (undef22 > 0) /\ (undef4 > ~(1)) /\ (undef14 > ~(1)) /\ (undef23 > 1) /\ (undef13 <= undef4) /\ ((undef15 + 1) <= undef4) /\ (undef4 > 0) /\ (undef13 > 0) /\ (undef15 > ~(1)), par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15}>
<l0, l4, (undef23 > ~(1)) /\ (undef7 > ~(1)) /\ (undef22 > 0), par{arg1 -> undef7, arg2 -> undef8, arg3 -> undef9}>
<l4, l4, (arg1 > 0), par{arg1 -> (arg1 - 1), arg2 -> undef11, arg3 -> undef12}>
<l5, l5, ((undef16 + 2) <= arg1) /\ (undef16 <= arg3) /\ ((undef18 + 3) <= arg1) /\ ((undef18 + 1) <= arg3) /\ (arg1 > 2) /\ (arg3 > 0) /\ (undef16 > 0) /\ (undef18 > ~(1)), par{arg1 -> undef16, arg3 -> undef18}>
<l5, l5, (undef19 <= arg1) /\ (arg2 > 0) /\ ((undef19 - 2) <= arg3) /\ ((undef21 + 2) <= arg1) /\ (undef21 <= arg3) /\ (arg1 > 1) /\ (arg3 > ~(1)) /\ (undef19 > 1) /\ (undef21 > ~(1)), par{arg1 -> undef19, arg2 -> (arg2 - 1), arg3 -> undef21}>

Fresh variables:
undef1, undef2, undef3, undef4, undef6, undef7, undef8, undef9, undef11, undef12, undef13, undef14, undef15, undef16, undef18, undef19, undef21, undef22, undef23, undef24, 

Undef variables:
undef1, undef2, undef3, undef4, undef6, undef7, undef8, undef9, undef11, undef12, undef13, undef14, undef15, undef16, undef18, undef19, undef21, undef22, undef23, undef24, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l4, l4, 1 <= arg1, {arg1 -> -1 + arg1, arg2 -> undef11, arg3 -> undef12, rest remain the same}>
Variables:
arg1, arg2, arg3

Graph 2:
Transitions:
<l5, l5, undef16 <= arg3 /\ 0 <= undef18 /\ 1 <= arg3 /\ 1 + undef18 <= arg3 /\ 1 <= undef16 /\ 2 + undef16 <= arg1 /\ 3 <= arg1 /\ 3 + undef18 <= arg1, {arg1 -> undef16, arg3 -> undef18, rest remain the same}>
<l5, l5, undef19 <= arg1 /\ 0 <= arg3 /\ undef21 <= arg3 /\ 0 <= undef21 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + undef21 <= arg1 /\ 2 <= undef19 /\ undef19 <= 2 + arg3, {arg1 -> undef19, arg2 -> -1 + arg2, arg3 -> undef21, rest remain the same}>
Variables:
arg1, arg3, arg2

Precedence: 
Graph 0

Graph 1
<l0, l4, 0 <= undef7 /\ 0 <= undef23 /\ 1 <= undef22, {arg1 -> undef7, arg2 -> undef8, arg3 -> undef9, rest remain the same}>

Graph 2
<l0, l5, undef13 <= undef4 /\ 0 <= undef14 /\ 0 <= undef15 /\ 1 <= undef4 /\ 1 + undef15 <= undef4 /\ 1 <= undef13 /\ 1 <= undef22 /\ 2 <= undef23, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 4 , 1 )
( 5 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.001626

Checking conditional termination of SCC {l4}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000477s
[33mRanking function: [36m-1 + arg1[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.004897

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001903s
[33mRanking function: [36m-1 + arg2[0m
New Graphs: 
Transitions:
<l5, l5, undef16 <= arg3 /\ 0 <= undef18 /\ 1 <= arg3 /\ 1 + undef18 <= arg3 /\ 1 <= undef16 /\ 2 + undef16 <= arg1 /\ 3 <= arg1 /\ 3 + undef18 <= arg1, {arg1 -> undef16, arg3 -> undef18, rest remain the same}>
Variables:
arg1, arg3
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000635s
[33mRanking function: [36m(~(4) / 3) + (1 / 3)*arg1 + (1 / 3)*arg3[0m
New Graphs: 
[32mProgram Terminates[0m
