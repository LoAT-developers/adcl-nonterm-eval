unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3
   0: f1_0_main_Load -> f33_0_rec_Cmp : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ -arg1p1+arg2 == 0 /\ arg1 > 0), cost: 1
   1: f33_0_rec_Cmp -> f48_0_rec_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (-arg2p2+arg1 == 0 /\ arg1-arg1p2 == 0 /\ -arg3p2+arg1 == 0), cost: 1
   2: f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 == 0 /\ -1+arg1-arg1p3 == 0 /\ arg1 > 0 /\ -99+arg2 > 0 /\ -1 < 0), cost: 1
   3: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (-arg3+arg2 == 0 /\ -arg1p4+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
   4: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (-arg3+arg2 == 0 /\ -arg1p5+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
   5: f48_0_rec_GE -> f48_0_rec_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (1-arg3p6+arg2 == 0 /\ -arg3+arg2 == 0 /\ -arg1p6+arg1 == 0 /\ 1-arg2p6+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
   6: f77_0_descend_LE -> f77_0_descend_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (arg1 > 0 /\ -1-arg1p7+arg1 == 0 /\ -1 < 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3
   1: f33_0_rec_Cmp -> f48_0_rec_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (-arg2p2+arg1 == 0 /\ arg1-arg1p2 == 0 /\ -arg3p2+arg1 == 0), cost: 1
   2: f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 == 0 /\ -1+arg1-arg1p3 == 0 /\ arg1 > 0 /\ -99+arg2 > 0 /\ -1 < 0), cost: 1
   3: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (-arg3+arg2 == 0 /\ -arg1p4+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
   4: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (-arg3+arg2 == 0 /\ -arg1p5+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
   5: f48_0_rec_GE -> f48_0_rec_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (1-arg3p6+arg2 == 0 /\ -arg3+arg2 == 0 /\ -arg1p6+arg1 == 0 /\ 1-arg2p6+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
   6: f77_0_descend_LE -> f77_0_descend_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (arg1 > 0 /\ -1-arg1p7+arg1 == 0 /\ -1 < 0), cost: 1
   8: __init -> f33_0_rec_Cmp : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (arg2p8-arg1p1 == 0 /\ arg1p8 > 0 /\ 1+arg2p8 > 0), cost: 1

	Eliminating location f1_0_main_Load by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, T, cost: 1
	Second rule:
	f1_0_main_Load -> f33_0_rec_Cmp : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg2 > 0 /\ -arg1p1+arg2 == 0 /\ arg1 > 0), cost: 1
	New rule:
	__init -> f33_0_rec_Cmp : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (arg2p8-arg1p1 == 0 /\ arg1p8 > 0 /\ 1+arg2p8 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 7

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3
   9: f33_0_rec_Cmp -> f48_0_rec_GE : arg2'=arg1, arg3'=arg1, T, cost: 1
  10: f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0), cost: 1
  11: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p4, arg3'=arg3p4, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  12: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p5, arg3'=arg3p5, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  13: f48_0_rec_GE -> f48_0_rec_GE : arg2'=1+arg2, arg3'=1+arg2, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  14: f77_0_descend_LE -> f77_0_descend_LE : arg1'=-1+arg1, arg2'=arg2p7, arg3'=arg3p7, arg1 > 0, cost: 1
  15: __init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (1+arg2p8 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f33_0_rec_Cmp -> f48_0_rec_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (-arg2p2+arg1 == 0 /\ arg1-arg1p2 == 0 /\ -arg3p2+arg1 == 0), cost: 1
	New rule:
	f33_0_rec_Cmp -> f48_0_rec_GE : arg1'=arg1, arg2'=arg1, arg3'=arg1, 0 == 0, cost: 1
	
		propagated equality arg2p2 = arg1
		
		propagated equality arg1p2 = arg1
		
		propagated equality arg3p2 = arg1
		
	Simplified Guard

	Original rule:
	f33_0_rec_Cmp -> f48_0_rec_GE : arg1'=arg1, arg2'=arg1, arg3'=arg1, 0 == 0, cost: 1
	New rule:
	f33_0_rec_Cmp -> f48_0_rec_GE : arg1'=arg1, arg2'=arg1, arg3'=arg1, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	f33_0_rec_Cmp -> f48_0_rec_GE : arg1'=arg1, arg2'=arg1, arg3'=arg1, T, cost: 1
	New rule:
	f33_0_rec_Cmp -> f48_0_rec_GE : arg2'=arg1, arg3'=arg1, T, cost: 1
	
	Propagated Equalities

	Original rule:
	f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 == 0 /\ -1+arg1-arg1p3 == 0 /\ arg1 > 0 /\ -99+arg2 > 0 /\ -1 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (0 == 0 /\ -arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0 /\ -1 < 0), cost: 1
	
		propagated equality arg1p3 = -1+arg1
		
	Simplified Guard

	Original rule:
	f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (0 == 0 /\ -arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0 /\ -1 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (-arg3+arg2 == 0 /\ -arg1p4+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p4, arg3'=arg3p4, (0 == 0 /\ -arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	
		propagated equality arg1p4 = arg2
		
	Simplified Guard

	Original rule:
	f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p4, arg3'=arg3p4, (0 == 0 /\ -arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p4, arg3'=arg3p4, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (-arg3+arg2 == 0 /\ -arg1p5+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p5, arg3'=arg3p5, (0 == 0 /\ -arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	
		propagated equality arg1p5 = arg2
		
	Simplified Guard

	Original rule:
	f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p5, arg3'=arg3p5, (0 == 0 /\ -arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p5, arg3'=arg3p5, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f48_0_rec_GE -> f48_0_rec_GE : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (1-arg3p6+arg2 == 0 /\ -arg3+arg2 == 0 /\ -arg1p6+arg1 == 0 /\ 1-arg2p6+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f48_0_rec_GE : arg1'=arg1, arg2'=1+arg2, arg3'=1+arg2, (0 == 0 /\ -arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	
		propagated equality arg3p6 = 1+arg2
		
		propagated equality arg1p6 = arg1
		
		propagated equality arg2p6 = 1+arg2
		
	Simplified Guard

	Original rule:
	f48_0_rec_GE -> f48_0_rec_GE : arg1'=arg1, arg2'=1+arg2, arg3'=1+arg2, (0 == 0 /\ -arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f48_0_rec_GE : arg1'=arg1, arg2'=1+arg2, arg3'=1+arg2, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f48_0_rec_GE -> f48_0_rec_GE : arg1'=arg1, arg2'=1+arg2, arg3'=1+arg2, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f48_0_rec_GE : arg2'=1+arg2, arg3'=1+arg2, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f77_0_descend_LE -> f77_0_descend_LE : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (arg1 > 0 /\ -1-arg1p7+arg1 == 0 /\ -1 < 0), cost: 1
	New rule:
	f77_0_descend_LE -> f77_0_descend_LE : arg1'=-1+arg1, arg2'=arg2p7, arg3'=arg3p7, (0 == 0 /\ arg1 > 0 /\ -1 < 0), cost: 1
	
		propagated equality arg1p7 = -1+arg1
		
	Simplified Guard

	Original rule:
	f77_0_descend_LE -> f77_0_descend_LE : arg1'=-1+arg1, arg2'=arg2p7, arg3'=arg3p7, (0 == 0 /\ arg1 > 0 /\ -1 < 0), cost: 1
	New rule:
	f77_0_descend_LE -> f77_0_descend_LE : arg1'=-1+arg1, arg2'=arg2p7, arg3'=arg3p7, arg1 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	__init -> f33_0_rec_Cmp : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (arg2p8-arg1p1 == 0 /\ arg1p8 > 0 /\ 1+arg2p8 > 0), cost: 1
	New rule:
	__init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (0 == 0 /\ arg1p8 > 0 /\ 1+arg2p8 > 0), cost: 1
	
		propagated equality arg1p1 = arg2p8
		
	Simplified Guard

	Original rule:
	__init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (0 == 0 /\ arg1p8 > 0 /\ 1+arg2p8 > 0), cost: 1
	New rule:
	__init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (arg1p8 > 0 /\ 1+arg2p8 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (arg1p8 > 0 /\ 1+arg2p8 > 0), cost: 1
	New rule:
	__init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (1+arg2p8 > 0), cost: 1

Step with 15

	Trace

	15[(1+arg2p8 > 0)]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	15[(1+arg2p8 > 0)], 9[T]
	
	Blocked

	[{}, {}, {}]

Step with 11

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   9: f33_0_rec_Cmp -> f48_0_rec_GE : arg2'=arg1, arg3'=arg1, T, cost: 1
  10: f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0), cost: 1
  11: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p4, arg3'=arg3p4, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  12: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p5, arg3'=arg3p5, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  13: f48_0_rec_GE -> f48_0_rec_GE : arg2'=1+arg2, arg3'=1+arg2, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  14: f77_0_descend_LE -> f77_0_descend_LE : arg1'=-1+arg1, arg2'=arg2p7, arg3'=arg3p7, arg1 > 0, cost: 1
  16: f77_0_descend_LE -> f77_0_descend_LE : arg1'=-n+arg1, arg2'=arg2p7, arg3'=arg3p7, (1-n+arg1 > 0 /\ -1+n >= 0), cost: 1
  15: __init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (1+arg2p8 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f77_0_descend_LE -> f77_0_descend_LE : arg1'=-1+arg1, arg2'=arg2p7, arg3'=arg3p7, (arg1 > 0), cost: 1
	New rule:
	f77_0_descend_LE -> f77_0_descend_LE : arg1'=-n+arg1, arg2'=arg2p7, arg3'=arg3p7, (1-n+arg1 > 0 /\ -1+n >= 0), cost: 1

		arg1 > 0 [0]: montonic decrease yields 1-n+arg1 > 0
		
		arg1 > 0 [1]: eventual increase yields (1 <= 0 /\ arg1 > 0)
		
		Replacement map: {arg1 > 0 -> 1-n+arg1 > 0}

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {}, {}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T]
	
	Blocked

	[{}, {}, {11[T]}]

Step with 12

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {11[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {11[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {11[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {11[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {11[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {11[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {11[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T]
	
	Blocked

	[{}, {}, {11[T], 12[T]}]

Step with 10

	Trace

	15[(1+arg2p8 > 0)], 9[T], 10[(-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0)]
	
	Blocked

	[{}, {}, {11[T], 12[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   9: f33_0_rec_Cmp -> f48_0_rec_GE : arg2'=arg1, arg3'=arg1, T, cost: 1
  17: f33_0_rec_Cmp -> f33_0_rec_Cmp : arg1'=-n3+arg1, arg2'=arg2p3, arg3'=arg3p3, (arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0), cost: 1
  10: f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0), cost: 1
  11: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p4, arg3'=arg3p4, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  12: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p5, arg3'=arg3p5, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  13: f48_0_rec_GE -> f48_0_rec_GE : arg2'=1+arg2, arg3'=1+arg2, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  14: f77_0_descend_LE -> f77_0_descend_LE : arg1'=-1+arg1, arg2'=arg2p7, arg3'=arg3p7, arg1 > 0, cost: 1
  16: f77_0_descend_LE -> f77_0_descend_LE : arg1'=-n+arg1, arg2'=arg2p7, arg3'=arg3p7, (1-n+arg1 > 0 /\ -1+n >= 0), cost: 1
  15: __init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (1+arg2p8 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f33_0_rec_Cmp -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (-99+arg1 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f33_0_rec_Cmp -> f33_0_rec_Cmp : arg1'=-n3+arg1, arg2'=arg2p3, arg3'=arg3p3, (arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0), cost: 1

		-99+arg1 > 0 [0]: montonic decrease yields -98-n3+arg1 > 0
		
		-99+arg1 > 0 [1]: eventual increase yields (-99+arg1 > 0 /\ 1 <= 0)
		
		arg1 > 0 [0]: monotonic increase yields arg1 > 0, dependencies: -99+arg1 > 0
		
		Replacement map: {-99+arg1 > 0 -> -98-n3+arg1 > 0, arg1 > 0 -> arg1 > 0}

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}]

Step with 9

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T]}, {}]

Step with 10

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 10[(-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T]}, {10[T]}]

Step with 13

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 13[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {10[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   9: f33_0_rec_Cmp -> f48_0_rec_GE : arg2'=arg1, arg3'=arg1, T, cost: 1
  17: f33_0_rec_Cmp -> f33_0_rec_Cmp : arg1'=-n3+arg1, arg2'=arg2p3, arg3'=arg3p3, (arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0), cost: 1
  10: f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0), cost: 1
  11: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p4, arg3'=arg3p4, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  12: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p5, arg3'=arg3p5, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  13: f48_0_rec_GE -> f48_0_rec_GE : arg2'=1+arg2, arg3'=1+arg2, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  18: f48_0_rec_GE -> f48_0_rec_GE : arg2'=n4+arg2, arg3'=n4+arg2, (-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0), cost: 1
  14: f77_0_descend_LE -> f77_0_descend_LE : arg1'=-1+arg1, arg2'=arg2p7, arg3'=arg3p7, arg1 > 0, cost: 1
  16: f77_0_descend_LE -> f77_0_descend_LE : arg1'=-n+arg1, arg2'=arg2p7, arg3'=arg3p7, (1-n+arg1 > 0 /\ -1+n >= 0), cost: 1
  15: __init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (1+arg2p8 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f48_0_rec_GE -> f48_0_rec_GE : arg2'=1+arg2, arg3'=1+arg2, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
	New rule:
	f48_0_rec_GE -> f48_0_rec_GE : arg2'=n4+arg2, arg3'=n4+arg2, (-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0), cost: 1

		-arg3+arg2 >= 0 [0]: monotonic increase yields -arg3+arg2 >= 0
		
		arg3-arg2 >= 0 [0]: monotonic increase yields arg3-arg2 >= 0
		
		arg2 > 0 [0]: monotonic increase yields arg2 > 0
		
		100-arg2 > 0 [0]: montonic decrease yields 101-n4-arg2 > 0
		
		100-arg2 > 0 [1]: eventual increase yields (1 <= 0 /\ 100-arg2 > 0)
		
		Replacement map: {-arg3+arg2 >= 0 -> -arg3+arg2 >= 0, arg3-arg2 >= 0 -> arg3-arg2 >= 0, arg2 > 0 -> arg2 > 0, 100-arg2 > 0 -> 101-n4-arg2 > 0}

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {10[T]}, {13[T], 18[T]}]

Step with 10

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 10[(-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {10[T]}, {11[T], 12[T], 13[T], 18[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   9: f33_0_rec_Cmp -> f48_0_rec_GE : arg2'=arg1, arg3'=arg1, T, cost: 1
  17: f33_0_rec_Cmp -> f33_0_rec_Cmp : arg1'=-n3+arg1, arg2'=arg2p3, arg3'=arg3p3, (arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0), cost: 1
  19: f33_0_rec_Cmp -> f33_0_rec_Cmp : arg1'=-n5+arg1, arg2'=arg2p3, arg3'=arg3p3, (1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0), cost: 1
  10: f48_0_rec_GE -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0), cost: 1
  11: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p4, arg3'=arg3p4, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  12: f48_0_rec_GE -> f77_0_descend_LE : arg1'=arg2, arg2'=arg2p5, arg3'=arg3p5, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  13: f48_0_rec_GE -> f48_0_rec_GE : arg2'=1+arg2, arg3'=1+arg2, (-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0), cost: 1
  18: f48_0_rec_GE -> f48_0_rec_GE : arg2'=n4+arg2, arg3'=n4+arg2, (-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0), cost: 1
  14: f77_0_descend_LE -> f77_0_descend_LE : arg1'=-1+arg1, arg2'=arg2p7, arg3'=arg3p7, arg1 > 0, cost: 1
  16: f77_0_descend_LE -> f77_0_descend_LE : arg1'=-n+arg1, arg2'=arg2p7, arg3'=arg3p7, (1-n+arg1 > 0 /\ -1+n >= 0), cost: 1
  15: __init -> f33_0_rec_Cmp : arg1'=arg2p8, arg2'=arg2p1, arg3'=arg3p1, (1+arg2p8 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f33_0_rec_Cmp -> f33_0_rec_Cmp : arg1'=-1+arg1, arg2'=arg2p3, arg3'=arg3p3, (99-arg1 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f33_0_rec_Cmp -> f33_0_rec_Cmp : arg1'=-n5+arg1, arg2'=arg2p3, arg3'=arg3p3, (1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0), cost: 1

		99-arg1 >= 0 [0]: monotonic increase yields 99-arg1 >= 0
		
		arg1 > 0 [0]: montonic decrease yields 1-n5+arg1 > 0
		
		arg1 > 0 [1]: eventual increase yields (1 <= 0 /\ arg1 > 0)
		
		Replacement map: {99-arg1 >= 0 -> 99-arg1 >= 0, arg1 > 0 -> 1-n5+arg1 > 0}

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 9

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {}]

Step with 13

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 13[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}]

Step with 18

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {18[T]}]

Step with 11

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 18[T]}]

Step with 12

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 12[T], 18[T]}]

Step with 10

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 10[(-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {11[T], 12[T], 18[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {10[T], 11[T], 12[T], 18[T]}]

Step with 13

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 13[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {10[T], 11[T], 12[T], 18[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T]}, {10[T], 11[T], 12[T], 13[T], 18[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T], 18[T]}]

Step with 11

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T], 18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T], 18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T], 18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T], 18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T], 18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T], 18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 13[T], 18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 11[T], 13[T], 18[T]}]

Step with 12

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 11[T], 13[T], 18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 11[T], 13[T], 18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 11[T], 13[T], 18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 11[T], 13[T], 18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 11[T], 13[T], 18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 11[T], 13[T], 18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 11[T], 13[T], 18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T]}, {19[T]}, {10[T], 11[T], 12[T], 13[T], 18[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)]
	
	Blocked

	[{}, {}, {17[T]}, {9[T], 19[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}]

Step with 9

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {}]

Step with 12

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {12[T]}]

Step with 10

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 10[(-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {12[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T]}]

Step with 13

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 13[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T]}]

Step with 18

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T]}, {18[T]}]

Step with 10

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 10[(-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T]}, {11[T], 12[T], 18[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 18[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T], 18[T]}]

Step with 11

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T], 18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T], 18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T], 18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T], 18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T], 18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T], 18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 12[T], 13[T], 18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)], 9[T]
	
	Blocked

	[{}, {}, {17[T], 19[T]}, {10[T], 11[T], 12[T], 13[T], 18[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 17[(arg1 > 0 /\ -98-n3+arg1 > 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {}, {9[T], 17[T], 19[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)]
	
	Blocked

	[{}, {17[T]}]

Step with 9

	Trace

	15[(1+arg2p8 > 0)], 9[T]
	
	Blocked

	[{}, {17[T]}, {}]

Step with 11

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {17[T]}, {}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {17[T]}, {}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {17[T]}, {}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {17[T]}, {}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T]
	
	Blocked

	[{}, {17[T]}, {11[T]}]

Step with 12

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {11[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {17[T]}, {11[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {11[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {17[T]}, {11[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {17[T]}, {11[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {17[T]}, {11[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {11[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T]
	
	Blocked

	[{}, {17[T]}, {11[T], 12[T]}]

Step with 10

	Trace

	15[(1+arg2p8 > 0)], 9[T], 10[(-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0)]
	
	Blocked

	[{}, {17[T]}, {11[T], 12[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T]}]

Step with 13

	Trace

	15[(1+arg2p8 > 0)], 9[T], 13[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}]

Step with 18

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {18[T]}]

Step with 11

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 18[T]}]

Step with 12

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 12[T], 18[T]}]

Step with 10

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 10[(-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {11[T], 12[T], 18[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 18[T]}]

Step with 13

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 13[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 18[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T]}, {10[T], 11[T], 12[T], 13[T], 18[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 9[T]
	
	Blocked

	[{}, {17[T]}, {10[T], 11[T], 12[T], 13[T], 18[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}]

Step with 19

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}]

Step with 9

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {}]

Step with 13

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 13[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}]

Step with 18

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {18[T]}]

Step with 11

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 18[T]}]

Step with 12

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 12[T], 18[T]}]

Step with 10

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 10[(-arg3+arg2 == 0 /\ arg1 > 0 /\ -99+arg2 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {11[T], 12[T], 18[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {10[T], 11[T], 12[T], 18[T]}]

Step with 13

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)], 13[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {10[T], 11[T], 12[T], 18[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 18[(-arg3+arg2 >= 0 /\ arg3-arg2 >= 0 /\ 101-n4-arg2 > 0 /\ arg2 > 0 /\ -1+n4 >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T]}, {10[T], 11[T], 12[T], 13[T], 18[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T], 18[T]}]

Step with 11

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T], 18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T], 18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T], 18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T], 18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T], 18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T], 18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 11[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {13[T], 18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {11[T], 13[T], 18[T]}]

Step with 12

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {11[T], 13[T], 18[T]}, {}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {11[T], 13[T], 18[T]}, {}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {11[T], 13[T], 18[T]}, {14[T]}]

Step with 16

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {11[T], 13[T], 18[T]}, {14[T]}, {16[T]}]

Step with 14

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)], 14[(arg1 > 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {11[T], 13[T], 18[T]}, {14[T]}, {16[T]}, {}]

Covered

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)], 16[(1-n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {11[T], 13[T], 18[T]}, {14[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T], 12[(-arg3+arg2 == 0 /\ arg2 > 0 /\ -100+arg2 < 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {11[T], 13[T], 18[T]}, {14[T], 16[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)], 9[T]
	
	Blocked

	[{}, {9[T], 17[T]}, {19[T]}, {11[T], 12[T], 13[T], 18[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)], 19[(1-n5+arg1 > 0 /\ -1+n5 >= 0 /\ 99-arg1 >= 0)]
	
	Blocked

	[{}, {9[T], 17[T]}, {9[T], 19[T]}]

Backtrack

	Trace

	15[(1+arg2p8 > 0)]
	
	Blocked

	[{}, {9[T], 17[T], 19[T]}]

Backtrack

	Trace

	Blocked

	[{15[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
