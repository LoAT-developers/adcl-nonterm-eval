NO

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=arg2P0, arg1'=arg1P0, (-arg1P0 == 0 /\ 100-arg2P0 == 0), cost: 1
   1: f162_0_main_GE -> f162_0_main_GE : arg2'=arg2P1, arg1'=arg1P1, (-2+arg2-arg1 > 0 /\ arg2-arg1 > 0 /\ 1+arg1-arg1P1 == 0 /\ arg2-arg2P1 == 0), cost: 1
   2: f162_0_main_GE -> f162_0_main_GE : arg2'=arg2P2, arg1'=arg1P2, (2-arg2+arg1 == 0 /\ -2 < 0 /\ -1+arg2-arg1P2 == 0 /\ 1+arg2-arg2P2 == 0), cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=arg2P0, arg1'=arg1P0, (-arg1P0 == 0 /\ 100-arg2P0 == 0), cost: 1
New rule:
f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=arg2P1, arg1'=arg1P1, (-2+arg2-arg1 > 0 /\ arg2-arg1 > 0 /\ 1+arg1-arg1P1 == 0 /\ arg2-arg2P1 == 0), cost: 1
New rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=1+arg1, -2+arg2-arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=arg2P2, arg1'=arg1P2, (2-arg2+arg1 == 0 /\ -2 < 0 /\ -1+arg2-arg1P2 == 0 /\ 1+arg2-arg2P2 == 0), cost: 1
New rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, 2-arg2+arg1 == 0, cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
   5: f162_0_main_GE -> f162_0_main_GE : arg1'=1+arg1, -2+arg2-arg1 > 0, cost: 1
   6: f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, 2-arg2+arg1 == 0, cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied acceleration
Original rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=1+arg1, -2+arg2-arg1 > 0, cost: 1
New rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=arg1+n, (-1+arg2-arg1-n > 0 /\ n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BiBABa.txt

Applied instantiation
Original rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=arg1+n, (-1+arg2-arg1-n > 0 /\ n >= 0), cost: n
New rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=-2+arg2, (-2+arg2-arg1 >= 0 /\ 1 > 0), cost: -2+arg2-arg1

Applied nonterm
Original rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, 2-arg2+arg1 == 0, cost: 1
New rule:
f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ 2-arg2+arg1 >= 0 /\ -1+n0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JmiMpC.txt

Applied chaining
First rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, 2-arg2+arg1 == 0, cost: 1
Second rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=-2+arg2, (-2+arg2-arg1 >= 0 /\ 1 > 0), cost: -2+arg2-arg1
New rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, 2-arg2+arg1 == 0, cost: 1

Applied nonterm
Original rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, 2-arg2+arg1 == 0, cost: 1
New rule:
f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ 2-arg2+arg1 >= 0 /\ -1+n2 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_bJbCpa.txt

Applied chaining
First rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=-2+arg2, (-2+arg2-arg1 >= 0 /\ 1 > 0), cost: -2+arg2-arg1
Second rule:
f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ 2-arg2+arg1 >= 0 /\ -1+n2 >= 0), cost: NONTERM
New rule:
f162_0_main_GE -> [3] : (0 >= 0 /\ -2+arg2-arg1 >= 0 /\ 1 > 0 /\ -1+n2 >= 0), cost: NONTERM

Applied chaining
First rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=-2+arg2, (-2+arg2-arg1 >= 0 /\ 1 > 0), cost: -2+arg2-arg1
Second rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, 2-arg2+arg1 == 0, cost: 1
New rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, -2+arg2-arg1 >= 0, cost: -1+arg2-arg1

Applied nonterm
Original rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, -2+arg2-arg1 >= 0, cost: -1+arg2-arg1
New rule:
f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_LFnAIl.txt

Applied chaining
First rule:
f162_0_main_GE -> f162_0_main_GE : arg2'=1+arg2, arg1'=-1+arg2, 2-arg2+arg1 == 0, cost: 1
Second rule:
f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
New rule:
f162_0_main_GE -> [3] : (0 >= 0 /\ 2-arg2+arg1 == 0 /\ -1+n3 >= 0), cost: NONTERM

Applied simplification
Original rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=-2+arg2, (-2+arg2-arg1 >= 0 /\ 1 > 0), cost: -2+arg2-arg1
New rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=-2+arg2, -2+arg2-arg1 >= 0, cost: -2+arg2-arg1

Applied simplification
Original rule:
f162_0_main_GE -> [3] : (0 >= 0 /\ -2+arg2-arg1 >= 0 /\ 1 > 0 /\ -1+n2 >= 0), cost: NONTERM
New rule:
f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ -1+n2 >= 0), cost: NONTERM

Applied simplification
Original rule:
f162_0_main_GE -> [3] : (0 >= 0 /\ 2-arg2+arg1 == 0 /\ -1+n3 >= 0), cost: NONTERM
New rule:
f162_0_main_GE -> [3] : (2-arg2+arg1 == 0 /\ -1+n3 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 5 6

Accelerated simple loops
Start location: __init
   4: f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
   8: f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ 2-arg2+arg1 >= 0 /\ -1+n0 >= 0), cost: NONTERM
   9: f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ 2-arg2+arg1 >= 0 /\ -1+n2 >= 0), cost: NONTERM
  11: f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
  13: f162_0_main_GE -> f162_0_main_GE : arg1'=-2+arg2, -2+arg2-arg1 >= 0, cost: -2+arg2-arg1
  14: f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ -1+n2 >= 0), cost: NONTERM
  15: f162_0_main_GE -> [3] : (2-arg2+arg1 == 0 /\ -1+n3 >= 0), cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
Second rule:
f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ -1+n3 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : 98 >= 0, cost: NONTERM

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
Second rule:
f162_0_main_GE -> f162_0_main_GE : arg1'=-2+arg2, -2+arg2-arg1 >= 0, cost: -2+arg2-arg1
New rule:
f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=100, arg1'=98, 98 >= 0, cost: 99

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
Second rule:
f162_0_main_GE -> [3] : (-2+arg2-arg1 >= 0 /\ -1+n2 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : 98 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 8 9 11 13 14 15

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
  16: f1_0_main_ConstantStackPush -> [3] : 98 >= 0, cost: NONTERM
  17: f1_0_main_ConstantStackPush -> f162_0_main_GE : arg2'=100, arg1'=98, 98 >= 0, cost: 99
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  16: f1_0_main_ConstantStackPush -> [3] : 98 >= 0, cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Eliminating location f1_0_main_ConstantStackPush by chaining:

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> [3] : 98 >= 0, cost: NONTERM
New rule:
__init -> [3] : 98 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 3 16

Eliminated locations on linear paths
Start location: __init
  18: __init -> [3] : 98 >= 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 18 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  98 >= 0
