NO

Initial ITS

Start location: l8
Program variables: result_4^0 x_5^0
   0: l0 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (x_5^0-x_5^post1 == 0 /\ -result_4^post1+result_4^0 == 0), cost: 1
   1: l1 -> l2 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, (-x_5^post2+x_5^0 == 0 /\ x_5^0 <= 0 /\ result_4^0-result_4^post2 == 0 /\ -x_5^0 <= 0), cost: 1
   2: l1 -> l2 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, (0 == 0 /\ x_5^post3 <= 0 /\ -1+x_5^post3-x_5^1 == 0 /\ -x_5^post3 <= 0 /\ result_4^0-result_4^post3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
   3: l1 -> l2 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, (0 == 0 /\ 1+x_5^0 <= 0 /\ 1-x_5^1+x_5^post4 == 0 /\ -x_5^post4 <= 0 /\ x_5^post4 <= 0 /\ -result_4^post4+result_4^0 == 0), cost: 1
   4: l1 -> l3 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, (0 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1+x_5^post5-x_5^3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0), cost: 1
   6: l1 -> l4 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, (0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^post7-x_5^3 == 0 /\ 1+x_5^2 <= 0), cost: 1
   8: l1 -> l5 : result_4^0'=result_4^post9, x_5^0'=x_5^post9, (0 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1-x_5^3+x_5^post9 == 0 /\ 1+x_5^0 <= 0 /\ -result_4^post9+result_4^0 == 0 /\ 1+x_5^2-x_5^1 == 0), cost: 1
  10: l1 -> l6 : result_4^0'=result_4^post11, x_5^0'=x_5^post11, (0 == 0 /\ 1+x_5^0 <= 0 /\ -result_4^post11+result_4^0 == 0 /\ 1-x_5^3+x_5^post11 == 0 /\ 1+x_5^2-x_5^1 == 0 /\ 1+x_5^2 <= 0), cost: 1
  12: l2 -> l7 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ x_5^0-x_5^post13 == 0), cost: 1
   5: l3 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (x_5^0-x_5^post6 == 0 /\ -result_4^post6+result_4^0 == 0), cost: 1
   7: l4 -> l1 : result_4^0'=result_4^post8, x_5^0'=x_5^post8, (-result_4^post8+result_4^0 == 0 /\ x_5^0-x_5^post8 == 0), cost: 1
   9: l5 -> l1 : result_4^0'=result_4^post10, x_5^0'=x_5^post10, (-x_5^post10+x_5^0 == 0 /\ result_4^0-result_4^post10 == 0), cost: 1
  11: l6 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (result_4^0-result_4^post12 == 0 /\ -x_5^post12+x_5^0 == 0), cost: 1
  13: l8 -> l0 : result_4^0'=result_4^post14, x_5^0'=x_5^post14, (x_5^0-x_5^post14 == 0 /\ -result_4^post14+result_4^0 == 0), cost: 1

Chained Linear Paths

Start location: l8
Program variables: result_4^0 x_5^0
   1: l1 -> l2 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, (-x_5^post2+x_5^0 == 0 /\ x_5^0 <= 0 /\ result_4^0-result_4^post2 == 0 /\ -x_5^0 <= 0), cost: 1
   2: l1 -> l2 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, (0 == 0 /\ x_5^post3 <= 0 /\ -1+x_5^post3-x_5^1 == 0 /\ -x_5^post3 <= 0 /\ result_4^0-result_4^post3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
   3: l1 -> l2 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, (0 == 0 /\ 1+x_5^0 <= 0 /\ 1-x_5^1+x_5^post4 == 0 /\ -x_5^post4 <= 0 /\ x_5^post4 <= 0 /\ -result_4^post4+result_4^0 == 0), cost: 1
  15: l1 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (0 == 0 /\ x_5^post5-x_5^post6 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1+x_5^post5-x_5^3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0), cost: 1
  16: l1 -> l1 : result_4^0'=result_4^post8, x_5^0'=x_5^post8, (0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ -result_4^post8+result_4^post7 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^post7-x_5^3 == 0 /\ x_5^post7-x_5^post8 == 0 /\ 1+x_5^2 <= 0), cost: 1
  17: l1 -> l1 : result_4^0'=result_4^post10, x_5^0'=x_5^post10, (0 == 0 /\ result_4^post9-result_4^post10 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1-x_5^3+x_5^post9 == 0 /\ 1+x_5^0 <= 0 /\ -x_5^post10+x_5^post9 == 0 /\ -result_4^post9+result_4^0 == 0 /\ 1+x_5^2-x_5^1 == 0), cost: 1
  18: l1 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (0 == 0 /\ result_4^post11-result_4^post12 == 0 /\ 1+x_5^0 <= 0 /\ -x_5^post12+x_5^post11 == 0 /\ -result_4^post11+result_4^0 == 0 /\ 1-x_5^3+x_5^post11 == 0 /\ 1+x_5^2-x_5^1 == 0 /\ 1+x_5^2 <= 0), cost: 1
  12: l2 -> l7 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ x_5^0-x_5^post13 == 0), cost: 1
  14: l8 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (x_5^post14-x_5^post1 == 0 /\ x_5^0-x_5^post14 == 0 /\ result_4^post14-result_4^post1 == 0 /\ -result_4^post14+result_4^0 == 0), cost: 1

	Eliminating location l0 by chaining:

	Applied chaining

	First rule:
	l8 -> l0 : result_4^0'=result_4^post14, x_5^0'=x_5^post14, (x_5^0-x_5^post14 == 0 /\ -result_4^post14+result_4^0 == 0), cost: 1
	Second rule:
	l0 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (x_5^0-x_5^post1 == 0 /\ -result_4^post1+result_4^0 == 0), cost: 1
	New rule:
	l8 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (x_5^post14-x_5^post1 == 0 /\ x_5^0-x_5^post14 == 0 /\ result_4^post14-result_4^post1 == 0 /\ -result_4^post14+result_4^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 13
	
	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l1 -> l3 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, (0 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1+x_5^post5-x_5^3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0), cost: 1
	Second rule:
	l3 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (x_5^0-x_5^post6 == 0 /\ -result_4^post6+result_4^0 == 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (0 == 0 /\ x_5^post5-x_5^post6 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1+x_5^post5-x_5^3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l1 -> l4 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, (0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^post7-x_5^3 == 0 /\ 1+x_5^2 <= 0), cost: 1
	Second rule:
	l4 -> l1 : result_4^0'=result_4^post8, x_5^0'=x_5^post8, (-result_4^post8+result_4^0 == 0 /\ x_5^0-x_5^post8 == 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post8, x_5^0'=x_5^post8, (0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ -result_4^post8+result_4^post7 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^post7-x_5^3 == 0 /\ x_5^post7-x_5^post8 == 0 /\ 1+x_5^2 <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l1 -> l5 : result_4^0'=result_4^post9, x_5^0'=x_5^post9, (0 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1-x_5^3+x_5^post9 == 0 /\ 1+x_5^0 <= 0 /\ -result_4^post9+result_4^0 == 0 /\ 1+x_5^2-x_5^1 == 0), cost: 1
	Second rule:
	l5 -> l1 : result_4^0'=result_4^post10, x_5^0'=x_5^post10, (-x_5^post10+x_5^0 == 0 /\ result_4^0-result_4^post10 == 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post10, x_5^0'=x_5^post10, (0 == 0 /\ result_4^post9-result_4^post10 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1-x_5^3+x_5^post9 == 0 /\ 1+x_5^0 <= 0 /\ -x_5^post10+x_5^post9 == 0 /\ -result_4^post9+result_4^0 == 0 /\ 1+x_5^2-x_5^1 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 8 9
	
	Eliminating location l6 by chaining:

	Applied chaining

	First rule:
	l1 -> l6 : result_4^0'=result_4^post11, x_5^0'=x_5^post11, (0 == 0 /\ 1+x_5^0 <= 0 /\ -result_4^post11+result_4^0 == 0 /\ 1-x_5^3+x_5^post11 == 0 /\ 1+x_5^2-x_5^1 == 0 /\ 1+x_5^2 <= 0), cost: 1
	Second rule:
	l6 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (result_4^0-result_4^post12 == 0 /\ -x_5^post12+x_5^0 == 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (0 == 0 /\ result_4^post11-result_4^post12 == 0 /\ 1+x_5^0 <= 0 /\ -x_5^post12+x_5^post11 == 0 /\ -result_4^post11+result_4^0 == 0 /\ 1-x_5^3+x_5^post11 == 0 /\ 1+x_5^2-x_5^1 == 0 /\ 1+x_5^2 <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 10 11

Simplified Transitions

Start location: l8
Program variables: result_4^0 x_5^0
  19: l1 -> l2 : (x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0), cost: 1
  20: l1 -> l2 : x_5^0'=0, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
  21: l1 -> l2 : x_5^0'=0, 1+x_5^0 <= 0, cost: 1
  24: l1 -> l1 : x_5^0'=x_5^post5, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
  25: l1 -> l1 : x_5^0'=x_5^post7, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
  26: l1 -> l1 : x_5^0'=x_5^post9, (1+x_5^0 <= 0), cost: 1
  27: l1 -> l1 : x_5^0'=x_5^post11, (1+x_5^0 <= 0), cost: 1
  22: l2 -> l7 : result_4^0'=result_4^post13, T, cost: 1
  23: l8 -> l1 : T, cost: 1

	made implied equalities explicit

	Original rule:
	l1 -> l2 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, (-x_5^post2+x_5^0 == 0 /\ x_5^0 <= 0 /\ result_4^0-result_4^post2 == 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, (-x_5^post2+x_5^0 == 0 /\ x_5^0 <= 0 /\ x_5^0 == 0 /\ result_4^0-result_4^post2 == 0 /\ -x_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l2 : result_4^0'=result_4^post2, x_5^0'=x_5^post2, (-x_5^post2+x_5^0 == 0 /\ x_5^0 <= 0 /\ x_5^0 == 0 /\ result_4^0-result_4^post2 == 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0), cost: 1
	
		propagated equality x_5^post2 = x_5^0
		
		propagated equality result_4^post2 = result_4^0
		
	Simplified Guard

	Original rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, (0 == 0 /\ x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, (x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, (x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, (x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=x_5^0, (x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : (x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l2 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, (0 == 0 /\ x_5^post3 <= 0 /\ -1+x_5^post3-x_5^1 == 0 /\ -x_5^post3 <= 0 /\ result_4^0-result_4^post3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, (0 == 0 /\ x_5^post3 <= 0 /\ x_5^post3 == 0 /\ -1+x_5^post3-x_5^1 == 0 /\ -x_5^post3 <= 0 /\ result_4^0-result_4^post3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l2 : result_4^0'=result_4^post3, x_5^0'=x_5^post3, (0 == 0 /\ x_5^post3 <= 0 /\ x_5^post3 == 0 /\ -1+x_5^post3-x_5^1 == 0 /\ -x_5^post3 <= 0 /\ result_4^0-result_4^post3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, (0 <= 0 /\ 0 == 0 /\ -1-x_5^1 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
		propagated equality x_5^post3 = 0
		
		propagated equality result_4^post3 = result_4^0
		
	Propagated Equalities

	Original rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, (0 <= 0 /\ 0 == 0 /\ -1-x_5^1 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, (0 <= 0 /\ 0 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
		propagated equality x_5^1 = -1
		
	Simplified Guard

	Original rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, (0 <= 0 /\ 0 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : x_5^0'=0, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l2 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, (0 == 0 /\ 1+x_5^0 <= 0 /\ 1-x_5^1+x_5^post4 == 0 /\ -x_5^post4 <= 0 /\ x_5^post4 <= 0 /\ -result_4^post4+result_4^0 == 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, (0 == 0 /\ 1+x_5^0 <= 0 /\ 1-x_5^1+x_5^post4 == 0 /\ -x_5^post4 <= 0 /\ -x_5^post4 == 0 /\ x_5^post4 <= 0 /\ -result_4^post4+result_4^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l2 : result_4^0'=result_4^post4, x_5^0'=x_5^post4, (0 == 0 /\ 1+x_5^0 <= 0 /\ 1-x_5^1+x_5^post4 == 0 /\ -x_5^post4 <= 0 /\ -x_5^post4 == 0 /\ x_5^post4 <= 0 /\ -result_4^post4+result_4^0 == 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=-1+x_5^1, (0 == 0 /\ 1+x_5^0 <= 0 /\ 1-x_5^1 <= 0 /\ 1-x_5^1 == 0 /\ -1+x_5^1 <= 0), cost: 1
	
		propagated equality x_5^post4 = -1+x_5^1
		
		propagated equality result_4^post4 = result_4^0
		
	Propagated Equalities

	Original rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=-1+x_5^1, (0 == 0 /\ 1+x_5^0 <= 0 /\ 1-x_5^1 <= 0 /\ 1-x_5^1 == 0 /\ -1+x_5^1 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, (0 <= 0 /\ 0 == 0 /\ 1+x_5^0 <= 0), cost: 1
	
		propagated equality x_5^1 = 1
		
	Simplified Guard

	Original rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, (0 <= 0 /\ 0 == 0 /\ 1+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, 1+x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : result_4^0'=result_4^0, x_5^0'=0, 1+x_5^0 <= 0, cost: 1
	New rule:
	l1 -> l2 : x_5^0'=0, 1+x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l7 : result_4^0'=result_4^post13, x_5^0'=x_5^post13, (0 == 0 /\ x_5^0-x_5^post13 == 0), cost: 1
	New rule:
	l2 -> l7 : result_4^0'=result_4^post13, x_5^0'=x_5^0, 0 == 0, cost: 1
	
		propagated equality x_5^post13 = x_5^0
		
	Simplified Guard

	Original rule:
	l2 -> l7 : result_4^0'=result_4^post13, x_5^0'=x_5^0, 0 == 0, cost: 1
	New rule:
	l2 -> l7 : result_4^0'=result_4^post13, x_5^0'=x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l7 : result_4^0'=result_4^post13, x_5^0'=x_5^0, T, cost: 1
	New rule:
	l2 -> l7 : result_4^0'=result_4^post13, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l1 : result_4^0'=result_4^post1, x_5^0'=x_5^post1, (x_5^post14-x_5^post1 == 0 /\ x_5^0-x_5^post14 == 0 /\ result_4^post14-result_4^post1 == 0 /\ -result_4^post14+result_4^0 == 0), cost: 1
	New rule:
	l8 -> l1 : result_4^0'=result_4^post14, x_5^0'=x_5^post14, (0 == 0 /\ x_5^0-x_5^post14 == 0 /\ -result_4^post14+result_4^0 == 0), cost: 1
	
		propagated equality x_5^post1 = x_5^post14
		
		propagated equality result_4^post1 = result_4^post14
		
	Propagated Equalities

	Original rule:
	l8 -> l1 : result_4^0'=result_4^post14, x_5^0'=x_5^post14, (0 == 0 /\ x_5^0-x_5^post14 == 0 /\ -result_4^post14+result_4^0 == 0), cost: 1
	New rule:
	l8 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	
		propagated equality x_5^post14 = x_5^0
		
		propagated equality result_4^post14 = result_4^0
		
	Simplified Guard

	Original rule:
	l8 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, 0 == 0, cost: 1
	New rule:
	l8 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^0, T, cost: 1
	New rule:
	l8 -> l1 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post6, x_5^0'=x_5^post6, (0 == 0 /\ x_5^post5-x_5^post6 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1+x_5^post5-x_5^3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, (0 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1+x_5^post5-x_5^3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0), cost: 1
	
		propagated equality x_5^post6 = x_5^post5
		
		propagated equality result_4^post6 = result_4^post5
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post5, x_5^0'=x_5^post5, (0 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1+x_5^post5-x_5^3 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post5, (0 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
		propagated equality x_5^1 = -1+x_5^2
		
		propagated equality x_5^3 = -1+x_5^post5
		
		propagated equality result_4^post5 = result_4^0
		
	Simplified Guard

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post5, (0 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post5, (1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post5, (1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post5, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post5, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=x_5^post5, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post8, x_5^0'=x_5^post8, (0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ -result_4^post8+result_4^post7 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^post7-x_5^3 == 0 /\ x_5^post7-x_5^post8 == 0 /\ 1+x_5^2 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, (0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^post7-x_5^3 == 0 /\ 1+x_5^2 <= 0), cost: 1
	
		propagated equality result_4^post8 = result_4^post7
		
		propagated equality x_5^post8 = x_5^post7
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post7, x_5^0'=x_5^post7, (0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -1+x_5^2-x_5^1 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^post7-x_5^3 == 0 /\ 1+x_5^2 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post7, (0 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^2 <= 0), cost: 1
	
		propagated equality result_4^post7 = result_4^0
		
		propagated equality x_5^1 = -1+x_5^2
		
		propagated equality x_5^3 = 1+x_5^post7
		
	Simplified Guard

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post7, (0 == 0 /\ 1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^2 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post7, (1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^2 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post7, (1-x_5^0 <= 0 /\ -x_5^0 <= 0 /\ 1+x_5^2 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post7, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post7, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=x_5^post7, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post10, x_5^0'=x_5^post10, (0 == 0 /\ result_4^post9-result_4^post10 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1-x_5^3+x_5^post9 == 0 /\ 1+x_5^0 <= 0 /\ -x_5^post10+x_5^post9 == 0 /\ -result_4^post9+result_4^0 == 0 /\ 1+x_5^2-x_5^1 == 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post9, x_5^0'=x_5^post9, (0 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1-x_5^3+x_5^post9 == 0 /\ 1+x_5^0 <= 0 /\ -result_4^post9+result_4^0 == 0 /\ 1+x_5^2-x_5^1 == 0), cost: 1
	
		propagated equality result_4^post10 = result_4^post9
		
		propagated equality x_5^post10 = x_5^post9
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post9, x_5^0'=x_5^post9, (0 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ -1-x_5^3+x_5^post9 == 0 /\ 1+x_5^0 <= 0 /\ -result_4^post9+result_4^0 == 0 /\ 1+x_5^2-x_5^1 == 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post9, (0 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ 1+x_5^0 <= 0), cost: 1
	
		propagated equality x_5^3 = -1+x_5^post9
		
		propagated equality result_4^post9 = result_4^0
		
		propagated equality x_5^1 = 1+x_5^2
		
	Simplified Guard

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post9, (0 == 0 /\ 1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ 1+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post9, (1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ 1+x_5^0 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post9, (1-x_5^2 <= 0 /\ -x_5^2 <= 0 /\ 1+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post9, (1+x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post9, (1+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=x_5^post9, (1+x_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post12, x_5^0'=x_5^post12, (0 == 0 /\ result_4^post11-result_4^post12 == 0 /\ 1+x_5^0 <= 0 /\ -x_5^post12+x_5^post11 == 0 /\ -result_4^post11+result_4^0 == 0 /\ 1-x_5^3+x_5^post11 == 0 /\ 1+x_5^2-x_5^1 == 0 /\ 1+x_5^2 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^post11, x_5^0'=x_5^post11, (0 == 0 /\ 1+x_5^0 <= 0 /\ -result_4^post11+result_4^0 == 0 /\ 1-x_5^3+x_5^post11 == 0 /\ 1+x_5^2-x_5^1 == 0 /\ 1+x_5^2 <= 0), cost: 1
	
		propagated equality result_4^post12 = result_4^post11
		
		propagated equality x_5^post12 = x_5^post11
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : result_4^0'=result_4^post11, x_5^0'=x_5^post11, (0 == 0 /\ 1+x_5^0 <= 0 /\ -result_4^post11+result_4^0 == 0 /\ 1-x_5^3+x_5^post11 == 0 /\ 1+x_5^2-x_5^1 == 0 /\ 1+x_5^2 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (0 == 0 /\ 1+x_5^0 <= 0 /\ 1+x_5^2 <= 0), cost: 1
	
		propagated equality result_4^post11 = result_4^0
		
		propagated equality x_5^3 = 1+x_5^post11
		
		propagated equality x_5^1 = 1+x_5^2
		
	Simplified Guard

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (0 == 0 /\ 1+x_5^0 <= 0 /\ 1+x_5^2 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (1+x_5^0 <= 0 /\ 1+x_5^2 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (1+x_5^0 <= 0 /\ 1+x_5^2 <= 0), cost: 1
	New rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (1+x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : result_4^0'=result_4^0, x_5^0'=x_5^post11, (1+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : x_5^0'=x_5^post11, (1+x_5^0 <= 0), cost: 1

Step with 23

	Trace

	23[T]
	
	Blocked

	[{}, {}]

Step with 19

	Trace

	23[T], 19[(x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Step with 22

	Trace

	23[T], 19[(x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0)], 22[T]
	
	Blocked

	[{}, {}, {}, {}]

Backtrack

	Trace

	23[T], 19[(x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}]

Backtrack

	Trace

	23[T]
	
	Blocked

	[{}, {19[T]}]

Step with 20

	Trace

	23[T], 20[(1-x_5^0 <= 0 /\ -x_5^0 <= 0)]
	
	Blocked

	[{}, {19[T]}, {}]

Step with 22

	Trace

	23[T], 20[(1-x_5^0 <= 0 /\ -x_5^0 <= 0)], 22[T]
	
	Blocked

	[{}, {19[T]}, {}, {}]

Backtrack

	Trace

	23[T], 20[(1-x_5^0 <= 0 /\ -x_5^0 <= 0)]
	
	Blocked

	[{}, {19[T]}, {22[T]}]

Backtrack

	Trace

	23[T]
	
	Blocked

	[{}, {19[T], 20[T]}]

Step with 21

	Trace

	23[T], 21[(1+x_5^0 <= 0)]
	
	Blocked

	[{}, {19[T], 20[T]}, {}]

Step with 22

	Trace

	23[T], 21[(1+x_5^0 <= 0)], 22[T]
	
	Blocked

	[{}, {19[T], 20[T]}, {}, {}]

Backtrack

	Trace

	23[T], 21[(1+x_5^0 <= 0)]
	
	Blocked

	[{}, {19[T], 20[T]}, {22[T]}]

Backtrack

	Trace

	23[T]
	
	Blocked

	[{}, {19[T], 20[T], 21[T]}]

Step with 24

	Trace

	23[T], 24[(1-x_5^0 <= 0 /\ -x_5^0 <= 0)]
	
	Blocked

	[{}, {19[T], 20[T], 21[T]}, {}]

Nonterm

Start location: l8
Program variables: result_4^0 x_5^0
  19: l1 -> l2 : (x_5^0 <= 0 /\ x_5^0 == 0 /\ -x_5^0 <= 0), cost: 1
  20: l1 -> l2 : x_5^0'=0, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
  21: l1 -> l2 : x_5^0'=0, 1+x_5^0 <= 0, cost: 1
  24: l1 -> l1 : x_5^0'=x_5^post5, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
  25: l1 -> l1 : x_5^0'=x_5^post7, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
  26: l1 -> l1 : x_5^0'=x_5^post9, (1+x_5^0 <= 0), cost: 1
  27: l1 -> l1 : x_5^0'=x_5^post11, (1+x_5^0 <= 0), cost: 1
  28: l1 -> LoAT_sink : (x_5^0 >= 0 /\ -x_5^post5+x_5^0 <= 0 /\ -1+x_5^0 >= 0), cost: NONTERM
  22: l2 -> l7 : result_4^0'=result_4^post13, T, cost: 1
  23: l8 -> l1 : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l1 -> l1 : x_5^0'=x_5^post5, (1-x_5^0 <= 0 /\ -x_5^0 <= 0), cost: 1
	New rule:
	l1 -> LoAT_sink : (x_5^0 >= 0 /\ -x_5^post5+x_5^0 <= 0 /\ -1+x_5^0 >= 0), cost: NONTERM

		x_5^0 >= 0 [0]: montonic decrease yields x_5^post5 >= 0, dependencies: -1+x_5^0 >= 0
		
		x_5^0 >= 0 [1]: eventual decrease yields (x_5^post5 >= 0 /\ x_5^0 >= 0)
		
		x_5^0 >= 0 [2]: eventual increase yields (x_5^0 >= 0 /\ -x_5^post5+x_5^0 <= 0)
		
		-1+x_5^0 >= 0 [0]: eventual decrease yields (-1+x_5^post5 >= 0 /\ -1+x_5^0 >= 0)
		
		-1+x_5^0 >= 0 [1]: eventual increase yields (-x_5^post5+x_5^0 <= 0 /\ -1+x_5^0 >= 0)
		
		Replacement map: {x_5^0 >= 0 -> (x_5^0 >= 0 /\ -x_5^post5+x_5^0 <= 0), -1+x_5^0 >= 0 -> (-x_5^post5+x_5^0 <= 0 /\ -1+x_5^0 >= 0)}

Step with 28

	Trace

	23[T], 28[(x_5^0 >= 0 /\ -x_5^post5+x_5^0 <= 0 /\ -1+x_5^0 >= 0)]
	
	Blocked

	[{}, {19[T], 20[T], 21[T]}, {28[T]}]

Refute

	Counterexample

	[ result_4^0=0 x_5^0=1 ] 23 [ result_4^0=0 x_5^0=1 ] 28
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
