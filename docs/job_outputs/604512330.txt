NO

Initial ITS

Start location: [1]
Program variables: i range
   0: [1] -> [2] : i'=nondet, T, cost: 1
   1: [2] -> [3] : range'=20, T, cost: 1
   2: [3] -> [4] : (-range-i <= 0 /\ -range+i <= 0), cost: 1
  15: [3] -> [14] : (-range-i > 0 \/ -range+i > 0), cost: 1
   3: [4] -> [6] : (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
   6: [4] -> [8] : (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
  14: [5] -> [3] : T, cost: 1
   4: [6] -> [7] : i'=-i, T, cost: 1
   5: [7] -> [5] : T, cost: 1
   7: [8] -> [9] : range'=1+range, T, cost: 1
   8: [9] -> [10] : i'=-1+i, T, cost: 1
   9: [10] -> [12] : i == 0, cost: 1
  12: [10] -> [11] : (i < 0 \/ i > 0), cost: 1
  13: [11] -> [5] : T, cost: 1
  10: [12] -> [13] : range'=-1, T, cost: 1
  11: [13] -> [11] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: i range
  16: [1] -> [3] : i'=nondet, range'=20, T, cost: 1
   2: [3] -> [4] : (-range-i <= 0 /\ -range+i <= 0), cost: 1
  15: [3] -> [14] : (-range-i > 0 \/ -range+i > 0), cost: 1
  19: [4] -> [5] : i'=-i, (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
  20: [4] -> [10] : i'=-1+i, range'=1+range, (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
  14: [5] -> [3] : T, cost: 1
  12: [10] -> [11] : (i < 0 \/ i > 0), cost: 1
  22: [10] -> [11] : range'=-1, i == 0, cost: 1
  13: [11] -> [5] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : i'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : range'=20, T, cost: 1
	New rule:
	[1] -> [3] : i'=nondet, range'=20, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[4] -> [6] : (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
	Second rule:
	[6] -> [7] : i'=-i, T, cost: 1
	New rule:
	[4] -> [7] : i'=-i, (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[4] -> [8] : (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
	Second rule:
	[8] -> [9] : range'=1+range, T, cost: 1
	New rule:
	[4] -> [9] : range'=1+range, (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[4] -> [7] : i'=-i, (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
	Second rule:
	[7] -> [5] : T, cost: 1
	New rule:
	[4] -> [5] : i'=-i, (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 17
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[4] -> [9] : range'=1+range, (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
	Second rule:
	[9] -> [10] : i'=-1+i, T, cost: 1
	New rule:
	[4] -> [10] : i'=-1+i, range'=1+range, (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 8 18
	
	Eliminating location [12] by chaining:

	Applied chaining

	First rule:
	[10] -> [12] : i == 0, cost: 1
	Second rule:
	[12] -> [13] : range'=-1, T, cost: 1
	New rule:
	[10] -> [13] : range'=-1, i == 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 10
	
	Eliminating location [13] by chaining:

	Applied chaining

	First rule:
	[10] -> [13] : range'=-1, i == 0, cost: 1
	Second rule:
	[13] -> [11] : T, cost: 1
	New rule:
	[10] -> [11] : range'=-1, i == 0, cost: 1
	
	Applied deletion

	Removed the following rules: 11 21

Step with 16

	Trace

	16[T]
	
	Blocked

	[{}, {}]

Step with 15

	Trace

	16[T], 15[(-range-i > 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {15[-range-i > 0]}]

Step with 15

	Trace

	16[T], 15[(-range+i > 0)]
	
	Blocked

	[{}, {15[-range-i > 0]}, {}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {15[(-range-i > 0 /\ -range+i > 0)]}]

Step with 2

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)]
	
	Blocked

	[{}, {15[T]}, {}]

Step with 19

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range-i < 0)]
	
	Blocked

	[{}, {15[T]}, {}, {}]

Step with 14

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range-i < 0)], 14[T]
	
	Blocked

	[{}, {15[T]}, {}, {}, {}]

Accelerate and Drop

Start location: [1]
Program variables: i range
  16: [1] -> [3] : i'=nondet, range'=20, T, cost: 1
   2: [3] -> [4] : (-range-i <= 0 /\ -range+i <= 0), cost: 1
  15: [3] -> [14] : (-range-i > 0 \/ -range+i > 0), cost: 1
  23: [3] -> LoAT_sink : (5-range+i > 0 /\ range+i >= 0 /\ -1+n >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: NONTERM
  24: [3] -> [3] : (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
  19: [4] -> [5] : i'=-i, (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
  20: [4] -> [10] : i'=-1+i, range'=1+range, (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
  14: [5] -> [3] : T, cost: 1
  12: [10] -> [11] : (i < 0 \/ i > 0), cost: 1
  22: [10] -> [11] : range'=-1, i == 0, cost: 1
  13: [11] -> [5] : T, cost: 1

	unrolling

	Original rule:
	[3] -> [3] : i'=-i, (-range-i <= 0 /\ -5+range-i < 0 /\ -range+i <= 0), cost: 1
	New rule:
	[3] -> [3] : i'=i, (-5+range+i < 0 /\ -range-i <= 0 /\ -5+range-i < 0 /\ -range+i <= 0), cost: 1
	
	Certificate of Non-Termination

	Original rule:
	[3] -> [3] : i'=i, (-5+range+i < 0 /\ -range-i <= 0 /\ -5+range-i < 0 /\ -range+i <= 0), cost: 1
	New rule:
	[3] -> LoAT_sink : (5-range+i > 0 /\ range+i >= 0 /\ -1+n >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: NONTERM

		5-range+i > 0 [0]: monotonic increase yields 5-range+i > 0
		
		range+i >= 0 [0]: monotonic increase yields range+i >= 0
		
		5-range-i > 0 [0]: monotonic increase yields 5-range-i > 0
		
		range-i >= 0 [0]: monotonic increase yields range-i >= 0
		
		Replacement map: {5-range+i > 0 -> 5-range+i > 0, range+i >= 0 -> range+i >= 0, 5-range-i > 0 -> 5-range-i > 0, range-i >= 0 -> range-i >= 0}

	Loop Acceleration

	Original rule:
	[3] -> [3] : i'=i, (-5+range+i < 0 /\ -range-i <= 0 /\ -5+range-i < 0 /\ -range+i <= 0), cost: 1
	New rule:
	[3] -> [3] : i'=i, (5-range+i > 0 /\ range+i >= 0 /\ -1+n >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1

		5-range+i > 0 [0]: monotonic increase yields 5-range+i > 0
		
		range+i >= 0 [0]: monotonic increase yields range+i >= 0
		
		5-range-i > 0 [0]: monotonic increase yields 5-range-i > 0
		
		range-i >= 0 [0]: monotonic increase yields range-i >= 0
		
		Replacement map: {5-range+i > 0 -> 5-range+i > 0, range+i >= 0 -> range+i >= 0, 5-range-i > 0 -> 5-range-i > 0, range-i >= 0 -> range-i >= 0}

	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	[3] -> [3] : i'=i, (5-range+i > 0 /\ range+i >= 0 /\ -1+n >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
	New rule:
	[3] -> [3] : i'=i, (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	[3] -> [3] : i'=i, (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
	New rule:
	[3] -> [3] : (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1

	Trace

	16[T]
	
	Blocked

	[{}, {15[T]}]

Step with 2

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)]
	
	Blocked

	[{}, {15[T]}, {}]

Step with 19

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range+i < 0)]
	
	Blocked

	[{}, {15[T]}, {}, {}]

Step with 14

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range+i < 0)], 14[T]
	
	Blocked

	[{}, {15[T]}, {}, {}, {}]

Accelerate and Drop

Start location: [1]
Program variables: i range
  16: [1] -> [3] : i'=nondet, range'=20, T, cost: 1
   2: [3] -> [4] : (-range-i <= 0 /\ -range+i <= 0), cost: 1
  15: [3] -> [14] : (-range-i > 0 \/ -range+i > 0), cost: 1
  23: [3] -> LoAT_sink : (5-range+i > 0 /\ range+i >= 0 /\ -1+n >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: NONTERM
  24: [3] -> [3] : (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
  25: [3] -> LoAT_sink : (5-range+i > 0 /\ range+i >= 0 /\ -1+n1 >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: NONTERM
  26: [3] -> [3] : (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
  19: [4] -> [5] : i'=-i, (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
  20: [4] -> [10] : i'=-1+i, range'=1+range, (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
  14: [5] -> [3] : T, cost: 1
  12: [10] -> [11] : (i < 0 \/ i > 0), cost: 1
  22: [10] -> [11] : range'=-1, i == 0, cost: 1
  13: [11] -> [5] : T, cost: 1

	unrolling

	Original rule:
	[3] -> [3] : i'=-i, (-5+range+i < 0 /\ -range-i <= 0 /\ -range+i <= 0), cost: 1
	New rule:
	[3] -> [3] : i'=i, (-5+range+i < 0 /\ -range-i <= 0 /\ -5+range-i < 0 /\ -range+i <= 0), cost: 1
	
	Certificate of Non-Termination

	Original rule:
	[3] -> [3] : i'=i, (-5+range+i < 0 /\ -range-i <= 0 /\ -5+range-i < 0 /\ -range+i <= 0), cost: 1
	New rule:
	[3] -> LoAT_sink : (5-range+i > 0 /\ range+i >= 0 /\ -1+n1 >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: NONTERM

		5-range+i > 0 [0]: monotonic increase yields 5-range+i > 0
		
		range+i >= 0 [0]: monotonic increase yields range+i >= 0
		
		5-range-i > 0 [0]: monotonic increase yields 5-range-i > 0
		
		range-i >= 0 [0]: monotonic increase yields range-i >= 0
		
		Replacement map: {5-range+i > 0 -> 5-range+i > 0, range+i >= 0 -> range+i >= 0, 5-range-i > 0 -> 5-range-i > 0, range-i >= 0 -> range-i >= 0}

	Loop Acceleration

	Original rule:
	[3] -> [3] : i'=i, (-5+range+i < 0 /\ -range-i <= 0 /\ -5+range-i < 0 /\ -range+i <= 0), cost: 1
	New rule:
	[3] -> [3] : i'=i, (5-range+i > 0 /\ range+i >= 0 /\ -1+n1 >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1

		5-range+i > 0 [0]: monotonic increase yields 5-range+i > 0
		
		range+i >= 0 [0]: monotonic increase yields range+i >= 0
		
		5-range-i > 0 [0]: monotonic increase yields 5-range-i > 0
		
		range-i >= 0 [0]: monotonic increase yields range-i >= 0
		
		Replacement map: {5-range+i > 0 -> 5-range+i > 0, range+i >= 0 -> range+i >= 0, 5-range-i > 0 -> 5-range-i > 0, range-i >= 0 -> range-i >= 0}

	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	[3] -> [3] : i'=i, (5-range+i > 0 /\ range+i >= 0 /\ -1+n1 >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
	New rule:
	[3] -> [3] : i'=i, (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	[3] -> [3] : i'=i, (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
	New rule:
	[3] -> [3] : (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1

	Trace

	16[T]
	
	Blocked

	[{}, {15[T]}]

Step with 2

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)]
	
	Blocked

	[{}, {15[T]}, {}]

Step with 19

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range+i < 0)]
	
	Blocked

	[{}, {15[T]}, {}, {}]

Step with 14

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range+i < 0)], 14[T]
	
	Blocked

	[{}, {15[T]}, {}, {}, {}]

Covered

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range+i < 0)]
	
	Blocked

	[{}, {15[T]}, {}, {14[T]}]

Backtrack

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)]
	
	Blocked

	[{}, {15[T]}, {19[-5+range+i < 0]}]

Step with 19

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range-i < 0)]
	
	Blocked

	[{}, {15[T]}, {19[-5+range+i < 0]}, {}]

Step with 14

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range-i < 0)], 14[T]
	
	Blocked

	[{}, {15[T]}, {19[-5+range+i < 0]}, {}, {}]

Covered

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 19[(-5+range-i < 0)]
	
	Blocked

	[{}, {15[T]}, {19[-5+range+i < 0]}, {14[T]}]

Backtrack

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)]
	
	Blocked

	[{}, {15[T]}, {19[(-5+range+i < 0 /\ -5+range-i < 0)]}]

Step with 20

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)]
	
	Blocked

	[{}, {15[T]}, {19[T]}, {}]

Step with 12

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)]
	
	Blocked

	[{}, {15[T]}, {19[T]}, {}, {}]

Step with 13

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)], 13[T]
	
	Blocked

	[{}, {15[T]}, {19[T]}, {}, {}, {}]

Step with 14

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)], 13[T], 14[T]
	
	Blocked

	[{}, {15[T]}, {19[T]}, {}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: i range
  16: [1] -> [3] : i'=nondet, range'=20, T, cost: 1
   2: [3] -> [4] : (-range-i <= 0 /\ -range+i <= 0), cost: 1
  15: [3] -> [14] : (-range-i > 0 \/ -range+i > 0), cost: 1
  23: [3] -> LoAT_sink : (5-range+i > 0 /\ range+i >= 0 /\ -1+n >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: NONTERM
  24: [3] -> [3] : (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
  25: [3] -> LoAT_sink : (5-range+i > 0 /\ range+i >= 0 /\ -1+n1 >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: NONTERM
  26: [3] -> [3] : (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
  27: [3] -> [3] : i'=-n2+i, range'=range+n2, (-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0), cost: 1
  19: [4] -> [5] : i'=-i, (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
  20: [4] -> [10] : i'=-1+i, range'=1+range, (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
  14: [5] -> [3] : T, cost: 1
  12: [10] -> [11] : (i < 0 \/ i > 0), cost: 1
  22: [10] -> [11] : range'=-1, i == 0, cost: 1
  13: [11] -> [5] : T, cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : i'=-1+i, range'=1+range, (-5+range+i >= 0 /\ -range-i <= 0 /\ -5+range-i >= 0 /\ -range+i <= 0 /\ -1+i > 0), cost: 1
	New rule:
	[3] -> [3] : i'=-n2+i, range'=range+n2, (-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0), cost: 1

		range+i >= 0 [0]: monotonic increase yields range+i >= 0
		
		-5+range+i >= 0 [0]: monotonic increase yields -5+range+i >= 0
		
		-5+range-i >= 0 [0]: monotonic increase yields -5+range-i >= 0
		
		range-i >= 0 [0]: monotonic increase yields range-i >= 0, dependencies: -5+range-i >= 0
		
		-1+i > 0 [0]: montonic decrease yields -n2+i > 0
		
		-1+i > 0 [1]: eventual increase yields (1 <= 0 /\ -1+i > 0)
		
		Replacement map: {range+i >= 0 -> range+i >= 0, -5+range+i >= 0 -> -5+range+i >= 0, -5+range-i >= 0 -> -5+range-i >= 0, range-i >= 0 -> range-i >= 0, -1+i > 0 -> -n2+i > 0}

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)]
	
	Blocked

	[{}, {15[T]}, {27[T]}]

Step with 2

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}]

Step with 20

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {}]

Step with 12

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {}, {}]

Step with 13

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)], 13[T]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {}, {}, {}]

Step with 14

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)], 13[T], 14[T]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {}, {}, {}, {}]

Covered

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)], 13[T]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {}, {}, {14[T]}]

Backtrack

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {}, {13[T]}]

Backtrack

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {12[i > 0]}]

Step with 22

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {12[T]}, {}]

Step with 13

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {12[T]}, {}, {}]

Step with 14

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T], 14[T]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {12[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 15

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T], 14[T], 15[(-range-i > 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {12[T]}, {}, {}, {2[T], 23[T], 24[T], 25[T], 26[T], 27[T]}, {}]

Backtrack

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T], 14[T]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {12[T]}, {}, {}, {2[T], 15[-range-i > 0], 23[T], 24[T], 25[T], 26[T], 27[T]}]

Backtrack

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {12[T]}, {}, {14[T]}]

Backtrack

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {12[T]}, {13[T]}]

Backtrack

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {}, {12[T], 22[T]}]

Backtrack

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)], 2[(-range-i <= 0 /\ -range+i <= 0)]
	
	Blocked

	[{}, {15[T]}, {15[T], 23[T], 25[T], 27[T]}, {20[T]}]

Backtrack

	Trace

	16[T], 27[(-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0)]
	
	Blocked

	[{}, {15[T]}, {2[T], 15[T], 23[T], 25[T], 27[T]}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {15[T], 27[T]}]

Step with 2

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}]

Step with 20

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {}]

Step with 22

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {}, {}]

Step with 13

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {}, {}, {}]

Step with 14

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T], 14[T]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {}, {}, {}, {}]

Step with 15

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T], 14[T], 15[(-range-i > 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {}, {}, {}, {2[T], 23[T], 24[T], 25[T], 26[T], 27[T]}, {}]

Backtrack

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T], 14[T]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {}, {}, {}, {2[T], 15[-range-i > 0], 23[T], 24[T], 25[T], 26[T], 27[T]}]

Backtrack

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)], 13[T]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {}, {}, {14[T]}]

Backtrack

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 22[(i == 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {}, {13[T]}]

Backtrack

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {22[T]}]

Step with 12

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {22[T]}, {}]

Step with 13

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)], 13[T]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {22[T]}, {}, {}]

Step with 14

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)], 13[T], 14[T]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {22[T]}, {}, {}, {}]

Covered

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)], 13[T]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {22[T]}, {}, {14[T]}]

Backtrack

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i > 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {22[T]}, {13[T]}]

Backtrack

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {12[i > 0], 22[T]}]

Step with 12

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i < 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {12[i > 0], 22[T]}, {}]

Step with 13

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i < 0)], 13[T]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {12[i > 0], 22[T]}, {}, {}]

Step with 14

	Trace

	16[T], 2[(-range-i <= 0 /\ -range+i <= 0)], 20[(-5+range+i >= 0 /\ -5+range-i >= 0)], 12[(i < 0)], 13[T], 14[T]
	
	Blocked

	[{}, {15[T], 27[T]}, {}, {12[i > 0], 22[T]}, {}, {}, {}]

Nonterm

Start location: [1]
Program variables: i range
  16: [1] -> [3] : i'=nondet, range'=20, T, cost: 1
   2: [3] -> [4] : (-range-i <= 0 /\ -range+i <= 0), cost: 1
  15: [3] -> [14] : (-range-i > 0 \/ -range+i > 0), cost: 1
  23: [3] -> LoAT_sink : (5-range+i > 0 /\ range+i >= 0 /\ -1+n >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: NONTERM
  24: [3] -> [3] : (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
  25: [3] -> LoAT_sink : (5-range+i > 0 /\ range+i >= 0 /\ -1+n1 >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: NONTERM
  26: [3] -> [3] : (5-range+i > 0 /\ range+i >= 0 /\ 5-range-i > 0 /\ range-i >= 0), cost: 1
  27: [3] -> [3] : i'=-n2+i, range'=range+n2, (-n2+i > 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -1+n2 >= 0 /\ -5+range-i >= 0 /\ range-i >= 0), cost: 1
  28: [3] -> LoAT_sink : (-1+n3 >= 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -5+range-i >= 0 /\ range-i >= 0 /\ 1-i > 0), cost: NONTERM
  29: [3] -> [3] : i'=-n3+i, range'=n3+range, (-1+n3 >= 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -5+range-i >= 0 /\ range-i >= 0 /\ 1-i > 0), cost: 1
  19: [4] -> [5] : i'=-i, (-5+range+i < 0 \/ -5+range-i < 0), cost: 1
  20: [4] -> [10] : i'=-1+i, range'=1+range, (-5+range+i >= 0 /\ -5+range-i >= 0), cost: 1
  14: [5] -> [3] : T, cost: 1
  12: [10] -> [11] : (i < 0 \/ i > 0), cost: 1
  22: [10] -> [11] : range'=-1, i == 0, cost: 1
  13: [11] -> [5] : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	[3] -> [3] : i'=-1+i, range'=1+range, (-5+range+i >= 0 /\ -range-i <= 0 /\ -5+range-i >= 0 /\ -range+i <= 0 /\ -1+i < 0), cost: 1
	New rule:
	[3] -> LoAT_sink : (-1+n3 >= 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -5+range-i >= 0 /\ range-i >= 0 /\ 1-i > 0), cost: NONTERM

		range+i >= 0 [0]: monotonic increase yields range+i >= 0
		
		-5+range+i >= 0 [0]: monotonic increase yields -5+range+i >= 0
		
		-5+range-i >= 0 [0]: monotonic increase yields -5+range-i >= 0
		
		range-i >= 0 [0]: monotonic increase yields range-i >= 0, dependencies: -5+range-i >= 0
		
		1-i > 0 [0]: monotonic increase yields 1-i > 0
		
		Replacement map: {range+i >= 0 -> range+i >= 0, -5+range+i >= 0 -> -5+range+i >= 0, -5+range-i >= 0 -> -5+range-i >= 0, range-i >= 0 -> range-i >= 0, 1-i > 0 -> 1-i > 0}

	Loop Acceleration

	Original rule:
	[3] -> [3] : i'=-1+i, range'=1+range, (-5+range+i >= 0 /\ -range-i <= 0 /\ -5+range-i >= 0 /\ -range+i <= 0 /\ -1+i < 0), cost: 1
	New rule:
	[3] -> [3] : i'=-n3+i, range'=n3+range, (-1+n3 >= 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -5+range-i >= 0 /\ range-i >= 0 /\ 1-i > 0), cost: 1

		range+i >= 0 [0]: monotonic increase yields range+i >= 0
		
		-5+range+i >= 0 [0]: monotonic increase yields -5+range+i >= 0
		
		-5+range-i >= 0 [0]: monotonic increase yields -5+range-i >= 0
		
		range-i >= 0 [0]: monotonic increase yields range-i >= 0, dependencies: -5+range-i >= 0
		
		1-i > 0 [0]: monotonic increase yields 1-i > 0
		
		Replacement map: {range+i >= 0 -> range+i >= 0, -5+range+i >= 0 -> -5+range+i >= 0, -5+range-i >= 0 -> -5+range-i >= 0, range-i >= 0 -> range-i >= 0, 1-i > 0 -> 1-i > 0}

Step with 28

	Trace

	16[T], 28[(-1+n3 >= 0 /\ range+i >= 0 /\ -5+range+i >= 0 /\ -5+range-i >= 0 /\ range-i >= 0 /\ 1-i > 0)]
	
	Blocked

	[{}, {15[T], 27[T]}, {28[T]}]

Refute

	Counterexample

	[ i=0 range=20 ] 16 [ i=i range=range ] 28
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
