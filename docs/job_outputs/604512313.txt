NO

Initial ITS

Start location: [1]
Program variables: x
   0: [1] -> [2] : (x < 0 \/ x > 0), cost: 1
  18: [1] -> [16] : (x <= 0 /\ x >= 0), cost: 1
   1: [2] -> [4] : (-5-x <= 0 /\ -35+x <= 0), cost: 1
  14: [2] -> [14] : (-5-x > 0 \/ -35+x > 0), cost: 1
  17: [3] -> [1] : T, cost: 1
   2: [4] -> [6] : x < 0, cost: 1
   5: [4] -> [8] : x >= 0, cost: 1
  13: [5] -> [3] : T, cost: 1
   3: [6] -> [7] : x'=-5, T, cost: 1
   4: [7] -> [5] : T, cost: 1
   6: [8] -> [10] : -30+x > 0, cost: 1
   9: [8] -> [12] : -30+x <= 0, cost: 1
  12: [9] -> [5] : T, cost: 1
   7: [10] -> [11] : x'=35, T, cost: 1
   8: [11] -> [9] : T, cost: 1
  10: [12] -> [13] : x'=-1+x, T, cost: 1
  11: [13] -> [9] : T, cost: 1
  15: [14] -> [15] : x'=0, T, cost: 1
  16: [15] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x
   0: [1] -> [2] : (x < 0 \/ x > 0), cost: 1
  18: [1] -> [16] : (x <= 0 /\ x >= 0), cost: 1
   1: [2] -> [4] : (-5-x <= 0 /\ -35+x <= 0), cost: 1
  20: [2] -> [3] : x'=0, (-5-x > 0 \/ -35+x > 0), cost: 1
  17: [3] -> [1] : T, cost: 1
   5: [4] -> [8] : x >= 0, cost: 1
  22: [4] -> [5] : x'=-5, x < 0, cost: 1
  13: [5] -> [3] : T, cost: 1
  25: [8] -> [9] : x'=35, -30+x > 0, cost: 1
  26: [8] -> [9] : x'=-1+x, -30+x <= 0, cost: 1
  12: [9] -> [5] : T, cost: 1

	Eliminating location [14] by chaining:

	Applied chaining

	First rule:
	[2] -> [14] : (-5-x > 0 \/ -35+x > 0), cost: 1
	Second rule:
	[14] -> [15] : x'=0, T, cost: 1
	New rule:
	[2] -> [15] : x'=0, (-5-x > 0 \/ -35+x > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 14 15
	
	Eliminating location [15] by chaining:

	Applied chaining

	First rule:
	[2] -> [15] : x'=0, (-5-x > 0 \/ -35+x > 0), cost: 1
	Second rule:
	[15] -> [3] : T, cost: 1
	New rule:
	[2] -> [3] : x'=0, (-5-x > 0 \/ -35+x > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 16 19
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[4] -> [6] : x < 0, cost: 1
	Second rule:
	[6] -> [7] : x'=-5, T, cost: 1
	New rule:
	[4] -> [7] : x'=-5, x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[4] -> [7] : x'=-5, x < 0, cost: 1
	Second rule:
	[7] -> [5] : T, cost: 1
	New rule:
	[4] -> [5] : x'=-5, x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 21
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[8] -> [10] : -30+x > 0, cost: 1
	Second rule:
	[10] -> [11] : x'=35, T, cost: 1
	New rule:
	[8] -> [11] : x'=35, -30+x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [12] by chaining:

	Applied chaining

	First rule:
	[8] -> [12] : -30+x <= 0, cost: 1
	Second rule:
	[12] -> [13] : x'=-1+x, T, cost: 1
	New rule:
	[8] -> [13] : x'=-1+x, -30+x <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 10
	
	Eliminating location [11] by chaining:

	Applied chaining

	First rule:
	[8] -> [11] : x'=35, -30+x > 0, cost: 1
	Second rule:
	[11] -> [9] : T, cost: 1
	New rule:
	[8] -> [9] : x'=35, -30+x > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 23
	
	Eliminating location [13] by chaining:

	Applied chaining

	First rule:
	[8] -> [13] : x'=-1+x, -30+x <= 0, cost: 1
	Second rule:
	[13] -> [9] : T, cost: 1
	New rule:
	[8] -> [9] : x'=-1+x, -30+x <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 11 24

Step with 18

	Trace

	18[(x <= 0 /\ x >= 0)]
	
	Blocked

	[{}, {}]

Backtrack

	Trace

	Blocked

	[{18[T]}]

Step with 0

	Trace

	0[(x > 0)]
	
	Blocked

	[{18[T]}, {}]

Step with 1

	Trace

	0[(x > 0)], 1[(-5-x <= 0 /\ -35+x <= 0)]
	
	Blocked

	[{18[T]}, {}, {}]

Step with 5

	Trace

	0[(x > 0)], 1[(-5-x <= 0 /\ -35+x <= 0)], 5[(x >= 0)]
	
	Blocked

	[{18[T]}, {}, {}, {}]

Step with 25

	Trace

	0[(x > 0)], 1[(-5-x <= 0 /\ -35+x <= 0)], 5[(x >= 0)], 25[(-30+x > 0)]
	
	Blocked

	[{18[T]}, {}, {}, {}, {}]

Step with 12

	Trace

	0[(x > 0)], 1[(-5-x <= 0 /\ -35+x <= 0)], 5[(x >= 0)], 25[(-30+x > 0)], 12[T]
	
	Blocked

	[{18[T]}, {}, {}, {}, {}, {}]

Step with 13

	Trace

	0[(x > 0)], 1[(-5-x <= 0 /\ -35+x <= 0)], 5[(x >= 0)], 25[(-30+x > 0)], 12[T], 13[T]
	
	Blocked

	[{18[T]}, {}, {}, {}, {}, {}, {}]

Step with 17

	Trace

	0[(x > 0)], 1[(-5-x <= 0 /\ -35+x <= 0)], 5[(x >= 0)], 25[(-30+x > 0)], 12[T], 13[T], 17[T]
	
	Blocked

	[{18[T]}, {}, {}, {}, {}, {}, {}, {}]

Nonterm

Start location: [1]
Program variables: x
   0: [1] -> [2] : (x < 0 \/ x > 0), cost: 1
  18: [1] -> [16] : (x <= 0 /\ x >= 0), cost: 1
  27: [1] -> LoAT_sink : (5+x >= 0 /\ 35-x >= 0 /\ -1+n >= 0 /\ x > 0 /\ x >= 0 /\ -30+x > 0), cost: NONTERM
   1: [2] -> [4] : (-5-x <= 0 /\ -35+x <= 0), cost: 1
  20: [2] -> [3] : x'=0, (-5-x > 0 \/ -35+x > 0), cost: 1
  17: [3] -> [1] : T, cost: 1
   5: [4] -> [8] : x >= 0, cost: 1
  22: [4] -> [5] : x'=-5, x < 0, cost: 1
  13: [5] -> [3] : T, cost: 1
  25: [8] -> [9] : x'=35, -30+x > 0, cost: 1
  26: [8] -> [9] : x'=-1+x, -30+x <= 0, cost: 1
  12: [9] -> [5] : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	[1] -> [1] : x'=35, (-5-x <= 0 /\ x > 0 /\ x >= 0 /\ -35+x <= 0 /\ -30+x > 0), cost: 1
	New rule:
	[1] -> LoAT_sink : (5+x >= 0 /\ 35-x >= 0 /\ -1+n >= 0 /\ x > 0 /\ x >= 0 /\ -30+x > 0), cost: NONTERM

		5+x >= 0 [0]: monotonic increase yields 5+x >= 0
		
		35-x >= 0 [0]: monotonic increase yields 35-x >= 0
		
		x > 0 [0]: monotonic increase yields x > 0
		
		x >= 0 [0]: monotonic increase yields x >= 0
		
		-30+x > 0 [0]: monotonic increase yields -30+x > 0
		
		Replacement map: {5+x >= 0 -> 5+x >= 0, 35-x >= 0 -> 35-x >= 0, x > 0 -> x > 0, x >= 0 -> x >= 0, -30+x > 0 -> -30+x > 0}

Step with 27

	Trace

	27[(5+x >= 0 /\ 35-x >= 0 /\ -1+n >= 0 /\ x > 0 /\ x >= 0 /\ -30+x > 0)]
	
	Blocked

	[{18[T]}, {27[T]}]

Refute

	Counterexample

	[ x=31 ] 27
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
