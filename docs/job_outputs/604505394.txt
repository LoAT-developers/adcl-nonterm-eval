WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f223_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ -arg1P0 == 0 /\ arg1 > 0 /\ 1-arg2 == 0), cost: 1
   1: f1_0_main_Load -> f259_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, (1+arg2P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P1 > 0), cost: 1
   2: f223_0_main_LE -> f223_0_main_LE : arg2'=arg2P2, arg1'=arg1P2, (-1+arg1-arg1P2 == 0 /\ arg2 > 0 /\ arg2-arg2P2+arg1 == 0), cost: 1
   3: f259_0_main_LE -> f259_0_main_LE : arg2'=arg2P3, arg1'=arg1P3, (arg2 > 0 /\ -1-arg1P3+arg1 == 0 /\ arg2+arg1-arg2P3 == 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f223_0_main_LE : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ -arg1P0 == 0 /\ arg1 > 0 /\ 1-arg2 == 0), cost: 1
New rule:
f1_0_main_Load -> f223_0_main_LE : arg2'=arg2P0, arg1'=0, (1+arg2P0 > 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 1

Applied preprocessing
Original rule:
f223_0_main_LE -> f223_0_main_LE : arg2'=arg2P2, arg1'=arg1P2, (-1+arg1-arg1P2 == 0 /\ arg2 > 0 /\ arg2-arg2P2+arg1 == 0), cost: 1
New rule:
f223_0_main_LE -> f223_0_main_LE : arg2'=arg2+arg1, arg1'=-1+arg1, arg2 > 0, cost: 1

Applied preprocessing
Original rule:
f259_0_main_LE -> f259_0_main_LE : arg2'=arg2P3, arg1'=arg1P3, (arg2 > 0 /\ -1-arg1P3+arg1 == 0 /\ arg2+arg1-arg2P3 == 0), cost: 1
New rule:
f259_0_main_LE -> f259_0_main_LE : arg2'=arg2+arg1, arg1'=-1+arg1, arg2 > 0, cost: 1

Simplified rules
Start location: __init
   1: f1_0_main_Load -> f259_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, (1+arg2P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P1 > 0), cost: 1
   5: f1_0_main_Load -> f223_0_main_LE : arg2'=arg2P0, arg1'=0, (1+arg2P0 > 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 1
   6: f223_0_main_LE -> f223_0_main_LE : arg2'=arg2+arg1, arg1'=-1+arg1, arg2 > 0, cost: 1
   7: f259_0_main_LE -> f259_0_main_LE : arg2'=arg2+arg1, arg1'=-1+arg1, arg2 > 0, cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied acceleration
Original rule:
f223_0_main_LE -> f223_0_main_LE : arg2'=arg2+arg1, arg1'=-1+arg1, arg2 > 0, cost: 1
New rule:
f223_0_main_LE -> f223_0_main_LE : arg2'=arg2+1/2*n-1/2*n^2+n*arg1, arg1'=-n+arg1, (arg2 > 0 /\ n >= 0 /\ -1/2+arg2+(-1+n)*arg1+1/2*n-1/2*(-1+n)^2 > 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fIpPMB.txt

Applied deletion
Removed the following rules: 6

Applied acceleration
Original rule:
f259_0_main_LE -> f259_0_main_LE : arg2'=arg2+arg1, arg1'=-1+arg1, arg2 > 0, cost: 1
New rule:
f259_0_main_LE -> f259_0_main_LE : arg2'=n0*arg1+arg2+1/2*n0-1/2*n0^2, arg1'=-n0+arg1, (arg2 > 0 /\ n0 >= 0 /\ -1/2+arg2-1/2*(-1+n0)^2+1/2*n0+(-1+n0)*arg1 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_LnIjdg.txt

Applied deletion
Removed the following rules: 7

Accelerated simple loops
Start location: __init
   1: f1_0_main_Load -> f259_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, (1+arg2P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P1 > 0), cost: 1
   5: f1_0_main_Load -> f223_0_main_LE : arg2'=arg2P0, arg1'=0, (1+arg2P0 > 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 1
   8: f223_0_main_LE -> f223_0_main_LE : arg2'=arg2+1/2*n-1/2*n^2+n*arg1, arg1'=-n+arg1, (arg2 > 0 /\ n >= 0 /\ -1/2+arg2+(-1+n)*arg1+1/2*n-1/2*(-1+n)^2 > 0), cost: n
   9: f259_0_main_LE -> f259_0_main_LE : arg2'=n0*arg1+arg2+1/2*n0-1/2*n0^2, arg1'=-n0+arg1, (arg2 > 0 /\ n0 >= 0 /\ -1/2+arg2-1/2*(-1+n0)^2+1/2*n0+(-1+n0)*arg1 > 0), cost: n0
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f223_0_main_LE : arg2'=arg2P0, arg1'=0, (1+arg2P0 > 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 1
Second rule:
f223_0_main_LE -> f223_0_main_LE : arg2'=arg2+1/2*n-1/2*n^2+n*arg1, arg1'=-n+arg1, (arg2 > 0 /\ n >= 0 /\ -1/2+arg2+(-1+n)*arg1+1/2*n-1/2*(-1+n)^2 > 0), cost: n
New rule:
f1_0_main_Load -> f223_0_main_LE : arg2'=arg2P0+1/2*n-1/2*n^2, arg1'=-n, (-1/2+arg2P0+1/2*n-1/2*(-1+n)^2 > 0 /\ n >= 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 1+n

Applied deletion
Removed the following rules: 8

Applied chaining
First rule:
f1_0_main_Load -> f259_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, (1+arg2P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P1 > 0), cost: 1
Second rule:
f259_0_main_LE -> f259_0_main_LE : arg2'=n0*arg1+arg2+1/2*n0-1/2*n0^2, arg1'=-n0+arg1, (arg2 > 0 /\ n0 >= 0 /\ -1/2+arg2-1/2*(-1+n0)^2+1/2*n0+(-1+n0)*arg1 > 0), cost: n0
New rule:
f1_0_main_Load -> f259_0_main_LE : arg2'=1/2*n0-1/2*n0^2+arg2P1+n0*arg1P1, arg1'=-n0+arg1P1, (n0 >= 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg2P1 > 0 /\ 1+arg1P1 > 0 /\ -1/2+(-1+n0)*arg1P1-1/2*(-1+n0)^2+1/2*n0+arg2P1 > 0), cost: 1+n0

Applied deletion
Removed the following rules: 9

Chained accelerated rules with incoming rules
Start location: __init
   1: f1_0_main_Load -> f259_0_main_LE : arg2'=arg2P1, arg1'=arg1P1, (1+arg2P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+arg1P1 > 0), cost: 1
   5: f1_0_main_Load -> f223_0_main_LE : arg2'=arg2P0, arg1'=0, (1+arg2P0 > 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 1
  10: f1_0_main_Load -> f223_0_main_LE : arg2'=arg2P0+1/2*n-1/2*n^2, arg1'=-n, (-1/2+arg2P0+1/2*n-1/2*(-1+n)^2 > 0 /\ n >= 0 /\ arg1 > 0 /\ -1+arg2 == 0), cost: 1+n
  11: f1_0_main_Load -> f259_0_main_LE : arg2'=1/2*n0-1/2*n0^2+arg2P1+n0*arg1P1, arg1'=-n0+arg1P1, (n0 >= 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ arg2P1 > 0 /\ 1+arg1P1 > 0 /\ -1/2+(-1+n0)*arg1P1-1/2*(-1+n0)^2+1/2*n0+arg2P1 > 0), cost: 1+n0
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

