WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f252_0_min_GE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0 /\ -1-arg2P0+arg1P0 == 0), cost: 1
   1: f252_0_min_GE -> f261_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg3-arg3P1 == 0 /\ arg1-arg1P1 == 0 /\ arg2-arg2P1 == 0 /\ -arg2+arg3 > 0), cost: 1
   2: f252_0_min_GE -> f261_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg3-arg3P2 == 0 /\ -arg2P2+arg3 == 0 /\ -arg2+arg3 <= 0 /\ -arg1P2+arg1 == 0), cost: 1
   3: f261_0_main_NE -> f252_0_min_GE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1 > 0 /\ -arg1P3+arg1 == 0 /\ arg2-arg3 == 0 /\ 1+arg2-arg3P3 == 0 /\ -1-arg2P3+arg1 == 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f252_0_min_GE : arg2'=arg2P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0 /\ -1-arg2P0+arg1P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0), cost: 1

Applied preprocessing
Original rule:
f252_0_min_GE -> f261_0_main_NE : arg2'=arg2P1, arg1'=arg1P1, arg3'=arg3P1, (arg3-arg3P1 == 0 /\ arg1-arg1P1 == 0 /\ arg2-arg2P1 == 0 /\ -arg2+arg3 > 0), cost: 1
New rule:
f252_0_min_GE -> f261_0_main_NE : -arg2+arg3 > 0, cost: 1

Applied preprocessing
Original rule:
f252_0_min_GE -> f261_0_main_NE : arg2'=arg2P2, arg1'=arg1P2, arg3'=arg3P2, (arg3-arg3P2 == 0 /\ -arg2P2+arg3 == 0 /\ -arg2+arg3 <= 0 /\ -arg1P2+arg1 == 0), cost: 1
New rule:
f252_0_min_GE -> f261_0_main_NE : arg2'=arg3, -arg2+arg3 <= 0, cost: 1

Applied preprocessing
Original rule:
f261_0_main_NE -> f252_0_min_GE : arg2'=arg2P3, arg1'=arg1P3, arg3'=arg3P3, (1+arg1 > 0 /\ -arg1P3+arg1 == 0 /\ arg2-arg3 == 0 /\ 1+arg2-arg3P3 == 0 /\ -1-arg2P3+arg1 == 0), cost: 1
New rule:
f261_0_main_NE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=1+arg2, (1+arg1 > 0 /\ arg2-arg3 == 0), cost: 1

Simplified rules
Start location: __init
   5: f1_0_main_Load -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0), cost: 1
   6: f252_0_min_GE -> f261_0_main_NE : -arg2+arg3 > 0, cost: 1
   7: f252_0_min_GE -> f261_0_main_NE : arg2'=arg3, -arg2+arg3 <= 0, cost: 1
   8: f261_0_main_NE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=1+arg2, (1+arg1 > 0 /\ arg2-arg3 == 0), cost: 1
   4: __init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P4, arg1'=arg1P4, arg3'=arg3P4, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ 1+arg2 > 0 /\ arg1 > 0 /\ 1+arg3P0 > 0), cost: 1
New rule:
__init -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2P4 > 0 /\ 1+arg1P0 > 0 /\ arg1P4 > 0 /\ 1+arg3P0 > 0), cost: 2

Applied deletion
Removed the following rules: 4 5

Eliminated locations on linear paths
Start location: __init
   6: f252_0_min_GE -> f261_0_main_NE : -arg2+arg3 > 0, cost: 1
   7: f252_0_min_GE -> f261_0_main_NE : arg2'=arg3, -arg2+arg3 <= 0, cost: 1
   8: f261_0_main_NE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=1+arg2, (1+arg1 > 0 /\ arg2-arg3 == 0), cost: 1
   9: __init -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2P4 > 0 /\ 1+arg1P0 > 0 /\ arg1P4 > 0 /\ 1+arg3P0 > 0), cost: 2


Eliminating location f261_0_main_NE by chaining:

Applied chaining
First rule:
f252_0_min_GE -> f261_0_main_NE : arg2'=arg3, -arg2+arg3 <= 0, cost: 1
Second rule:
f261_0_main_NE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=1+arg2, (1+arg1 > 0 /\ arg2-arg3 == 0), cost: 1
New rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=1+arg3, (0 == 0 /\ 1+arg1 > 0 /\ -arg2+arg3 <= 0), cost: 2

Applied simplification
Original rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=1+arg3, (0 == 0 /\ 1+arg1 > 0 /\ -arg2+arg3 <= 0), cost: 2
New rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=1+arg3, (1+arg1 > 0 /\ -arg2+arg3 <= 0), cost: 2

Applied deletion
Removed the following rules: 6 7 8

Eliminated locations on tree-shaped paths
Start location: __init
  10: f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=1+arg3, (1+arg1 > 0 /\ -arg2+arg3 <= 0), cost: 2
   9: __init -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2P4 > 0 /\ 1+arg1P0 > 0 /\ arg1P4 > 0 /\ 1+arg3P0 > 0), cost: 2


Applied acceleration
Original rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=1+arg3, (1+arg1 > 0 /\ -arg2+arg3 <= 0), cost: 2
New rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=n+arg3, (1+arg1 > 0 /\ arg2-arg3 >= 0 /\ -n+arg1-arg3 >= 0 /\ -1+n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_CGjNNc.txt

Applied instantiation
Original rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=n+arg3, (1+arg1 > 0 /\ arg2-arg3 >= 0 /\ -n+arg1-arg3 >= 0 /\ -1+n >= 0), cost: 2*n
New rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=arg1, (0 >= 0 /\ 1+arg1 > 0 /\ arg2-arg3 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg1-2*arg3

Applied simplification
Original rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=arg1, (0 >= 0 /\ 1+arg1 > 0 /\ arg2-arg3 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg1-2*arg3
New rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=arg1, (1+arg1 > 0 /\ arg2-arg3 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg1-2*arg3

Applied deletion
Removed the following rules: 10

Accelerated simple loops
Start location: __init
  12: f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=arg1, (1+arg1 > 0 /\ arg2-arg3 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg1-2*arg3
   9: __init -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2P4 > 0 /\ 1+arg1P0 > 0 /\ arg1P4 > 0 /\ 1+arg3P0 > 0), cost: 2


Applied chaining
First rule:
__init -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2P4 > 0 /\ 1+arg1P0 > 0 /\ arg1P4 > 0 /\ 1+arg3P0 > 0), cost: 2
Second rule:
f252_0_min_GE -> f252_0_min_GE : arg2'=-1+arg1, arg3'=arg1, (1+arg1 > 0 /\ arg2-arg3 >= 0 /\ -1+arg1-arg3 >= 0), cost: 2*arg1-2*arg3
New rule:
__init -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg1P0, (-1+arg1P0-arg3P0 >= 0 /\ 1+arg3P0 > 0), cost: 2+2*arg1P0-2*arg3P0

Applied deletion
Removed the following rules: 12

Chained accelerated rules with incoming rules
Start location: __init
   9: __init -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg2P4 > 0 /\ 1+arg1P0 > 0 /\ arg1P4 > 0 /\ 1+arg3P0 > 0), cost: 2
  13: __init -> f252_0_min_GE : arg2'=-1+arg1P0, arg1'=arg1P0, arg3'=arg1P0, (-1+arg1P0-arg3P0 >= 0 /\ 1+arg3P0 > 0), cost: 2+2*arg1P0-2*arg3P0


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

