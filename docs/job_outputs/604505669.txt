NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f1_0_main_Load\' : arg2'=arg2P0, arg1'=arg1P0, (arg2-arg2P0 == 0 /\ -arg1P0+arg1 == 0 /\ -2*x90+x80 == 0 /\ arg1 > 0 /\ 1+x70 > 0 /\ -1+arg2 > 0 /\ 1+x80 > 0), cost: 1
   1: f1_0_main_Load\' -> f128_0_loop_GE : arg2'=arg2P1, arg1'=arg1P1, (1+x130 > 0 /\ 1+x120 > 0 /\ arg1 > 0 /\ -2+x130-2*x140 < 0 /\ -1+arg2 > 0 /\ x130-2*x140 >= 0 /\ x130-2*x140 == 0 /\ -x120-arg1P1 == 0), cost: 1
   2: f128_0_loop_GE -> f128_0_loop_GE : arg2'=arg2P2, arg1'=arg1P2, (-1-arg1P2+arg1 == 0 /\ arg1 < 0), cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f1_0_main_Load\' : arg2'=arg2P0, arg1'=arg1P0, (arg2-arg2P0 == 0 /\ -arg1P0+arg1 == 0 /\ -2*x90+x80 == 0 /\ arg1 > 0 /\ 1+x70 > 0 /\ -1+arg2 > 0 /\ 1+x80 > 0), cost: 1
New rule:
f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ 1+2*x90 > 0 /\ -1+arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load\' -> f128_0_loop_GE : arg2'=arg2P1, arg1'=arg1P1, (1+x130 > 0 /\ 1+x120 > 0 /\ arg1 > 0 /\ -2+x130-2*x140 < 0 /\ -1+arg2 > 0 /\ x130-2*x140 >= 0 /\ x130-2*x140 == 0 /\ -x120-arg1P1 == 0), cost: 1
New rule:
f1_0_main_Load\' -> f128_0_loop_GE : arg2'=arg2P1, arg1'=-x120, (1+x120 > 0 /\ 1+2*x140 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f128_0_loop_GE -> f128_0_loop_GE : arg2'=arg2P2, arg1'=arg1P2, (-1-arg1P2+arg1 == 0 /\ arg1 < 0), cost: 1
New rule:
f128_0_loop_GE -> f128_0_loop_GE : arg2'=arg2P2, arg1'=-1+arg1, -arg1 > 0, cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ 1+2*x90 > 0 /\ -1+arg2 > 0), cost: 1
   5: f1_0_main_Load\' -> f128_0_loop_GE : arg2'=arg2P1, arg1'=-x120, (1+x120 > 0 /\ 1+2*x140 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   6: f128_0_loop_GE -> f128_0_loop_GE : arg2'=arg2P2, arg1'=-1+arg1, -arg1 > 0, cost: 1
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied nonterm
Original rule:
f128_0_loop_GE -> f128_0_loop_GE : arg2'=arg2P2, arg1'=-1+arg1, -arg1 > 0, cost: 1
New rule:
f128_0_loop_GE -> [4] : (-arg1 > 0 /\ -1+n >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_OEGAaP.txt

Applied deletion
Removed the following rules: 6

Accelerated simple loops
Start location: __init
   4: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ 1+2*x90 > 0 /\ -1+arg2 > 0), cost: 1
   5: f1_0_main_Load\' -> f128_0_loop_GE : arg2'=arg2P1, arg1'=-x120, (1+x120 > 0 /\ 1+2*x140 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   7: f128_0_loop_GE -> [4] : (-arg1 > 0 /\ -1+n >= 0), cost: NONTERM
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load\' -> f128_0_loop_GE : arg2'=arg2P1, arg1'=-x120, (1+x120 > 0 /\ 1+2*x140 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
Second rule:
f128_0_loop_GE -> [4] : (-arg1 > 0 /\ -1+n >= 0), cost: NONTERM
New rule:
f1_0_main_Load\' -> [4] : (1+2*x140 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 7

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ 1+2*x90 > 0 /\ -1+arg2 > 0), cost: 1
   5: f1_0_main_Load\' -> f128_0_loop_GE : arg2'=arg2P1, arg1'=-x120, (1+x120 > 0 /\ 1+2*x140 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   8: f1_0_main_Load\' -> [4] : (1+2*x140 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
   4: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ 1+2*x90 > 0 /\ -1+arg2 > 0), cost: 1
   8: f1_0_main_Load\' -> [4] : (1+2*x140 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
   3: __init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ 1+2*x90 > 0 /\ -1+arg2 > 0), cost: 1
New rule:
__init -> f1_0_main_Load\' : arg2'=arg2P3, arg1'=arg1P3, (-1+arg2P3 > 0 /\ 1+2*x90 > 0 /\ arg1P3 > 0), cost: 2

Applied deletion
Removed the following rules: 3 4

Eliminating location f1_0_main_Load\' by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load\' : arg2'=arg2P3, arg1'=arg1P3, (-1+arg2P3 > 0 /\ 1+2*x90 > 0 /\ arg1P3 > 0), cost: 2
Second rule:
f1_0_main_Load\' -> [4] : (1+2*x140 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
New rule:
__init -> [4] : (-1+arg2P3 > 0 /\ 1+2*x140 > 0 /\ 1+2*x90 > 0 /\ arg1P3 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 8 9

Eliminated locations on linear paths
Start location: __init
  10: __init -> [4] : (-1+arg2P3 > 0 /\ 1+2*x140 > 0 /\ 1+2*x90 > 0 /\ arg1P3 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 10 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-1+arg2P3 > 0 /\ 1+2*x140 > 0 /\ 1+2*x90 > 0 /\ arg1P3 > 0)
