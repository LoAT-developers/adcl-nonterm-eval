unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f1_0_main_Load -> f162_0_power_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (-arg2p1 == 0 /\ arg1 > 0 /\ -arg1p1 == 0 /\ -arg2 == 0), cost: 1
   1: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (-arg1+arg1p2 <= 0 /\ -arg2p2 == 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0), cost: 1
   2: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
   7: f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (-arg1p8+arg1 == 0 /\ -arg2p8+arg2 == 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
   9: f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (arg1-arg1p10 == 0 /\ -arg2p10+arg2 == 0 /\ -2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
   3: f97_0_random_GT -> f162_0_power_GT : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-arg2p4 == 0 /\ arg1 > 0 /\ -arg1p4+arg2 == 0), cost: 1
   4: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (-1+x10 > 0 /\ -arg1+arg1p5 <= 0 /\ -arg2p5+arg2 == 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ -arg3p5 == 0), cost: 1
   5: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0 /\ -1+x14 > 0 /\ -arg2p6+arg2 == 0), cost: 1
   6: f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (-arg2p7+arg3 == 0 /\ arg1 > 0 /\ -1+x19 > 0 /\ -arg1p7+arg2 == 0), cost: 1
   8: f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ arg2-arg2p9 == 0 /\ arg1-arg1p9 == 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0 /\ -2*x37-arg3p9+arg2 == 0), cost: 1
  10: f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (-arg1p11+arg1 == 0 /\ -2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -arg2p11+arg2 == 0 /\ -arg3p11-2*x41+arg2 == 0 /\ -1+arg2 > 0), cost: 1
  11: f213_0_power_NE -> f213_0_power_NE\' : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (-x47+arg2 > 0 /\ -arg3 == 0 /\ -arg1p12+arg1 == 0 /\ -arg4p12+arg4 == 0 /\ -arg2p12+arg2 == 0 /\ x47 > 0 /\ -arg3p12 == 0 /\ -1+arg2 > 0), cost: 1
  13: f213_0_power_NE -> f162_0_power_GT : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, (1-arg3 == 0 /\ arg1-arg1p14 == 0 /\ -1-arg2p14+arg2 == 0 /\ -1 < 0 /\ -1+arg2 > 0), cost: 1
  12: f213_0_power_NE\' -> f162_0_power_GT : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-arg1p13+arg1 == 0 /\ -arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
  14: __init -> f1_0_main_Load : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   0: f1_0_main_Load -> f162_0_power_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (-arg2p1 == 0 /\ arg1 > 0 /\ -arg1p1 == 0 /\ -arg2 == 0), cost: 1
   1: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (-arg1+arg1p2 <= 0 /\ -arg2p2 == 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0), cost: 1
   2: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
   7: f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (-arg1p8+arg1 == 0 /\ -arg2p8+arg2 == 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
   9: f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (arg1-arg1p10 == 0 /\ -arg2p10+arg2 == 0 /\ -2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
   3: f97_0_random_GT -> f162_0_power_GT : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-arg2p4 == 0 /\ arg1 > 0 /\ -arg1p4+arg2 == 0), cost: 1
   4: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (-1+x10 > 0 /\ -arg1+arg1p5 <= 0 /\ -arg2p5+arg2 == 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ -arg3p5 == 0), cost: 1
   5: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0 /\ -1+x14 > 0 /\ -arg2p6+arg2 == 0), cost: 1
   6: f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (-arg2p7+arg3 == 0 /\ arg1 > 0 /\ -1+x19 > 0 /\ -arg1p7+arg2 == 0), cost: 1
   8: f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ arg2-arg2p9 == 0 /\ arg1-arg1p9 == 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0 /\ -2*x37-arg3p9+arg2 == 0), cost: 1
  10: f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (-arg1p11+arg1 == 0 /\ -2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -arg2p11+arg2 == 0 /\ -arg3p11-2*x41+arg2 == 0 /\ -1+arg2 > 0), cost: 1
  13: f213_0_power_NE -> f162_0_power_GT : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, (1-arg3 == 0 /\ arg1-arg1p14 == 0 /\ -1-arg2p14+arg2 == 0 /\ -1 < 0 /\ -1+arg2 > 0), cost: 1
  15: f213_0_power_NE -> f162_0_power_GT : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-x47+arg2 > 0 /\ arg2p12-2*arg2p13 >= 0 /\ -2+arg2p12-2*arg2p13 < 0 /\ arg1p12-arg1p13 == 0 /\ -arg3 == 0 /\ -arg1p12+arg1 == 0 /\ -arg4p12+arg4 == 0 /\ -arg2p12+arg2 == 0 /\ -1+arg2p12 > 0 /\ x47 > 0 /\ arg2p12-arg2p13 > 0 /\ arg2p13 > 0 /\ -arg3p12 == 0 /\ -1+arg2 > 0), cost: 1
  14: __init -> f1_0_main_Load : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, T, cost: 1

	Eliminating location f213_0_power_NE\' by chaining:

	Applied chaining

	First rule:
	f213_0_power_NE -> f213_0_power_NE\' : arg1'=arg1p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, (-x47+arg2 > 0 /\ -arg3 == 0 /\ -arg1p12+arg1 == 0 /\ -arg4p12+arg4 == 0 /\ -arg2p12+arg2 == 0 /\ x47 > 0 /\ -arg3p12 == 0 /\ -1+arg2 > 0), cost: 1
	Second rule:
	f213_0_power_NE\' -> f162_0_power_GT : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-arg1p13+arg1 == 0 /\ -arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-x47+arg2 > 0 /\ arg2p12-2*arg2p13 >= 0 /\ -2+arg2p12-2*arg2p13 < 0 /\ arg1p12-arg1p13 == 0 /\ -arg3 == 0 /\ -arg1p12+arg1 == 0 /\ -arg4p12+arg4 == 0 /\ -arg2p12+arg2 == 0 /\ -1+arg2p12 > 0 /\ x47 > 0 /\ arg2p12-arg2p13 > 0 /\ arg2p13 > 0 /\ -arg3p12 == 0 /\ -1+arg2 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 11 12

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   2: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
  16: f1_0_main_Load -> f162_0_power_GT : arg1'=0, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, (arg1 > 0 /\ -arg2 == 0), cost: 1
  17: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p2, arg2'=0, arg3'=arg3p2, arg4'=arg4p2, (-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0), cost: 1
  22: f162_0_power_GT -> f162_0_power_GT\' : arg3'=arg3p8, arg4'=arg4p8, (-2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
  24: f162_0_power_GT -> f162_0_power_GT\' : arg3'=arg3p10, arg4'=arg4p10, (-2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
  18: f97_0_random_GT -> f162_0_power_GT : arg1'=arg2, arg2'=0, arg3'=arg3p4, arg4'=arg4p4, arg1 > 0, cost: 1
  19: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, (-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
  20: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
  21: f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg2, arg2'=arg3, arg3'=arg3p7, arg4'=arg4p7, (arg1 > 0), cost: 1
  23: f162_0_power_GT\' -> f213_0_power_NE : arg3'=-2*x37+arg2, arg4'=arg4p9, (-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
  25: f162_0_power_GT\' -> f213_0_power_NE : arg3'=-2*x41+arg2, arg4'=arg4p11, (-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0), cost: 1
  26: f213_0_power_NE -> f162_0_power_GT : arg2'=-1+arg2, arg3'=arg3p14, arg4'=arg4p14, (1-arg3 == 0 /\ -1+arg2 > 0), cost: 1
  27: f213_0_power_NE -> f162_0_power_GT : arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
  14: __init -> f1_0_main_Load : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f162_0_power_GT : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, (-arg2p1 == 0 /\ arg1 > 0 /\ -arg1p1 == 0 /\ -arg2 == 0), cost: 1
	New rule:
	f1_0_main_Load -> f162_0_power_GT : arg1'=0, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, (0 == 0 /\ arg1 > 0 /\ -arg2 == 0), cost: 1
	
		propagated equality arg2p1 = 0
		
		propagated equality arg1p1 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f162_0_power_GT : arg1'=0, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, (0 == 0 /\ arg1 > 0 /\ -arg2 == 0), cost: 1
	New rule:
	f1_0_main_Load -> f162_0_power_GT : arg1'=0, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, (arg1 > 0 /\ -arg2 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, (-arg1+arg1p2 <= 0 /\ -arg2p2 == 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p2, arg2'=0, arg3'=arg3p2, arg4'=arg4p2, (0 == 0 /\ -arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg2p2 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p2, arg2'=0, arg3'=arg3p2, arg4'=arg4p2, (0 == 0 /\ -arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p2, arg2'=0, arg3'=arg3p2, arg4'=arg4p2, (-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f97_0_random_GT -> f162_0_power_GT : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, (-arg2p4 == 0 /\ arg1 > 0 /\ -arg1p4+arg2 == 0), cost: 1
	New rule:
	f97_0_random_GT -> f162_0_power_GT : arg1'=arg2, arg2'=0, arg3'=arg3p4, arg4'=arg4p4, (0 == 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p4 = 0
		
		propagated equality arg1p4 = arg2
		
	Simplified Guard

	Original rule:
	f97_0_random_GT -> f162_0_power_GT : arg1'=arg2, arg2'=0, arg3'=arg3p4, arg4'=arg4p4, (0 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f97_0_random_GT -> f162_0_power_GT : arg1'=arg2, arg2'=0, arg3'=arg3p4, arg4'=arg4p4, arg1 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, (-1+x10 > 0 /\ -arg1+arg1p5 <= 0 /\ -arg2p5+arg2 == 0 /\ arg1 > 0 /\ arg1p5 > 0 /\ -arg3p5 == 0), cost: 1
	New rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, (0 == 0 /\ -1+x10 > 0 /\ -arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
	
		propagated equality arg2p5 = arg2
		
		propagated equality arg3p5 = 0
		
	Simplified Guard

	Original rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, (0 == 0 /\ -1+x10 > 0 /\ -arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
	New rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, (-1+x10 > 0 /\ -arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, (-1+x10 > 0 /\ -arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
	New rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, (-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg2'=arg2, arg3'=0, arg4'=arg4p5, (-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
	New rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, (-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0 /\ -1+x14 > 0 /\ -arg2p6+arg2 == 0), cost: 1
	New rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, arg4'=arg4p6, (0 == 0 /\ arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0 /\ -1+x14 > 0), cost: 1
	
		propagated equality arg2p6 = arg2
		
	Simplified Guard

	Original rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, arg4'=arg4p6, (0 == 0 /\ arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0 /\ -1+x14 > 0), cost: 1
	New rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0 /\ -1+x14 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0 /\ -1+x14 > 0), cost: 1
	New rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg2'=arg2, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, (-arg2p7+arg3 == 0 /\ arg1 > 0 /\ -1+x19 > 0 /\ -arg1p7+arg2 == 0), cost: 1
	New rule:
	f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg2, arg2'=arg3, arg3'=arg3p7, arg4'=arg4p7, (0 == 0 /\ arg1 > 0 /\ -1+x19 > 0), cost: 1
	
		propagated equality arg2p7 = arg3
		
		propagated equality arg1p7 = arg2
		
	Simplified Guard

	Original rule:
	f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg2, arg2'=arg3, arg3'=arg3p7, arg4'=arg4p7, (0 == 0 /\ arg1 > 0 /\ -1+x19 > 0), cost: 1
	New rule:
	f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg2, arg2'=arg3, arg3'=arg3p7, arg4'=arg4p7, (arg1 > 0 /\ -1+x19 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg2, arg2'=arg3, arg3'=arg3p7, arg4'=arg4p7, (arg1 > 0 /\ -1+x19 > 0), cost: 1
	New rule:
	f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg2, arg2'=arg3, arg3'=arg3p7, arg4'=arg4p7, (arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, (-arg1p8+arg1 == 0 /\ -arg2p8+arg2 == 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1, arg2'=arg2, arg3'=arg3p8, arg4'=arg4p8, (0 == 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg1p8 = arg1
		
		propagated equality arg2p8 = arg2
		
	Simplified Guard

	Original rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1, arg2'=arg2, arg3'=arg3p8, arg4'=arg4p8, (0 == 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1, arg2'=arg2, arg3'=arg3p8, arg4'=arg4p8, (-2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1, arg2'=arg2, arg3'=arg3p8, arg4'=arg4p8, (-2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg3'=arg3p8, arg4'=arg4p8, (-2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, (-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ arg2-arg2p9 == 0 /\ arg1-arg1p9 == 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0 /\ -2*x37-arg3p9+arg2 == 0), cost: 1
	New rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1, arg2'=arg2, arg3'=-2*x37+arg2, arg4'=arg4p9, (0 == 0 /\ -2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg2p9 = arg2
		
		propagated equality arg1p9 = arg1
		
		propagated equality arg3p9 = -2*x37+arg2
		
	Simplified Guard

	Original rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1, arg2'=arg2, arg3'=-2*x37+arg2, arg4'=arg4p9, (0 == 0 /\ -2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1, arg2'=arg2, arg3'=-2*x37+arg2, arg4'=arg4p9, (-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1, arg2'=arg2, arg3'=-2*x37+arg2, arg4'=arg4p9, (-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg3'=-2*x37+arg2, arg4'=arg4p9, (-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, (arg1-arg1p10 == 0 /\ -arg2p10+arg2 == 0 /\ -2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1, arg2'=arg2, arg3'=arg3p10, arg4'=arg4p10, (0 == 0 /\ -2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg1p10 = arg1
		
		propagated equality arg2p10 = arg2
		
	Simplified Guard

	Original rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1, arg2'=arg2, arg3'=arg3p10, arg4'=arg4p10, (0 == 0 /\ -2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1, arg2'=arg2, arg3'=arg3p10, arg4'=arg4p10, (-2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg1'=arg1, arg2'=arg2, arg3'=arg3p10, arg4'=arg4p10, (-2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT -> f162_0_power_GT\' : arg3'=arg3p10, arg4'=arg4p10, (-2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, (-arg1p11+arg1 == 0 /\ -2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -arg2p11+arg2 == 0 /\ -arg3p11-2*x41+arg2 == 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1, arg2'=arg2, arg3'=-2*x41+arg2, arg4'=arg4p11, (0 == 0 /\ -2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg1p11 = arg1
		
		propagated equality arg2p11 = arg2
		
		propagated equality arg3p11 = -2*x41+arg2
		
	Simplified Guard

	Original rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1, arg2'=arg2, arg3'=-2*x41+arg2, arg4'=arg4p11, (0 == 0 /\ -2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1, arg2'=arg2, arg3'=-2*x41+arg2, arg4'=arg4p11, (-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg1'=arg1, arg2'=arg2, arg3'=-2*x41+arg2, arg4'=arg4p11, (-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f162_0_power_GT\' -> f213_0_power_NE : arg3'=-2*x41+arg2, arg4'=arg4p11, (-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, (1-arg3 == 0 /\ arg1-arg1p14 == 0 /\ -1-arg2p14+arg2 == 0 /\ -1 < 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=-1+arg2, arg3'=arg3p14, arg4'=arg4p14, (0 == 0 /\ 1-arg3 == 0 /\ -1 < 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg1p14 = arg1
		
		propagated equality arg2p14 = -1+arg2
		
	Simplified Guard

	Original rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=-1+arg2, arg3'=arg3p14, arg4'=arg4p14, (0 == 0 /\ 1-arg3 == 0 /\ -1 < 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=-1+arg2, arg3'=arg3p14, arg4'=arg4p14, (1-arg3 == 0 /\ -1+arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=-1+arg2, arg3'=arg3p14, arg4'=arg4p14, (1-arg3 == 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f162_0_power_GT : arg2'=-1+arg2, arg3'=arg3p14, arg4'=arg4p14, (1-arg3 == 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-x47+arg2 > 0 /\ arg2p12-2*arg2p13 >= 0 /\ -2+arg2p12-2*arg2p13 < 0 /\ arg1p12-arg1p13 == 0 /\ -arg3 == 0 /\ -arg1p12+arg1 == 0 /\ -arg4p12+arg4 == 0 /\ -arg2p12+arg2 == 0 /\ -1+arg2p12 > 0 /\ x47 > 0 /\ arg2p12-arg2p13 > 0 /\ arg2p13 > 0 /\ -arg3p12 == 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1p12, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (0 == 0 /\ -x47+arg2 > 0 /\ arg2p12-2*arg2p13 >= 0 /\ -2+arg2p12-2*arg2p13 < 0 /\ -arg3 == 0 /\ -arg1p12+arg1 == 0 /\ -arg4p12+arg4 == 0 /\ -arg2p12+arg2 == 0 /\ -1+arg2p12 > 0 /\ x47 > 0 /\ arg2p12-arg2p13 > 0 /\ arg2p13 > 0 /\ -arg3p12 == 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg1p13 = arg1p12
		
	Propagated Equalities

	Original rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1p12, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (0 == 0 /\ -x47+arg2 > 0 /\ arg2p12-2*arg2p13 >= 0 /\ -2+arg2p12-2*arg2p13 < 0 /\ -arg3 == 0 /\ -arg1p12+arg1 == 0 /\ -arg4p12+arg4 == 0 /\ -arg2p12+arg2 == 0 /\ -1+arg2p12 > 0 /\ x47 > 0 /\ arg2p12-arg2p13 > 0 /\ arg2p13 > 0 /\ -arg3p12 == 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (0 == 0 /\ -x47+arg2 > 0 /\ -arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ -2*arg2p13+arg2 >= 0 /\ x47 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg1p12 = arg1
		
		propagated equality arg4p12 = arg4
		
		propagated equality arg2p12 = arg2
		
		propagated equality arg3p12 = 0
		
	Simplified Guard

	Original rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (0 == 0 /\ -x47+arg2 > 0 /\ -arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ -2*arg2p13+arg2 >= 0 /\ x47 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-x47+arg2 > 0 /\ -arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ -2*arg2p13+arg2 >= 0 /\ x47 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-x47+arg2 > 0 /\ -arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ -2*arg2p13+arg2 >= 0 /\ x47 > 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f213_0_power_NE -> f162_0_power_GT : arg1'=arg1, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f162_0_power_GT : arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1

Step with 14

	Trace

	14[T]
	
	Blocked

	[{}, {}]

Step with 2

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 18

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 18[(arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T]}]

Step with 19

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 19[(-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0)]
	
	Blocked

	[{}, {}, {18[T]}, {}]

Step with 21

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 19[(-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {}, {18[T]}, {}, {}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 19[(-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0)]
	
	Blocked

	[{}, {}, {18[T]}, {21[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}]

Step with 20

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}]

Step with 21

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}]

Step with 22

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}]

Step with 23

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {}]

Step with 26

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 22

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 23

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {}, {}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   2: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
  16: f1_0_main_Load -> f162_0_power_GT : arg1'=0, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, (arg1 > 0 /\ -arg2 == 0), cost: 1
  17: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p2, arg2'=0, arg3'=arg3p2, arg4'=arg4p2, (-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0), cost: 1
  22: f162_0_power_GT -> f162_0_power_GT\' : arg3'=arg3p8, arg4'=arg4p8, (-2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
  24: f162_0_power_GT -> f162_0_power_GT\' : arg3'=arg3p10, arg4'=arg4p10, (-2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
  18: f97_0_random_GT -> f162_0_power_GT : arg1'=arg2, arg2'=0, arg3'=arg3p4, arg4'=arg4p4, arg1 > 0, cost: 1
  19: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, (-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
  20: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
  21: f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg2, arg2'=arg3, arg3'=arg3p7, arg4'=arg4p7, (arg1 > 0), cost: 1
  23: f162_0_power_GT\' -> f213_0_power_NE : arg3'=-2*x37+arg2, arg4'=arg4p9, (-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
  25: f162_0_power_GT\' -> f213_0_power_NE : arg3'=-2*x41+arg2, arg4'=arg4p11, (-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0), cost: 1
  26: f213_0_power_NE -> f162_0_power_GT : arg2'=-1+arg2, arg3'=arg3p14, arg4'=arg4p14, (1-arg3 == 0 /\ -1+arg2 > 0), cost: 1
  27: f213_0_power_NE -> f162_0_power_GT : arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
  28: f213_0_power_NE -> f213_0_power_NE : arg2'=-n+arg2, arg3'=-2*x37-n+arg2, arg4'=arg4p9, (2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0), cost: 1
  14: __init -> f1_0_main_Load : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, T, cost: 1

	Loop Acceleration

	Original rule:
	f213_0_power_NE -> f213_0_power_NE : arg2'=-1+arg2, arg3'=-1-2*x37+arg2, arg4'=arg4p9, (-2+arg2 > 0 /\ -3-2*x37+arg2 < 0 /\ 1-arg3 == 0 /\ -2+arg1 < 0 /\ -1-2*x37+arg2 >= 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f213_0_power_NE : arg2'=-n+arg2, arg3'=-2*x37-n+arg2, arg4'=arg4p9, (2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0), cost: 1

		-2+arg2 > 0 [0]: montonic decrease yields -1-n+arg2 > 0
		
		-2+arg2 > 0 [1]: eventual increase yields (-2+arg2 > 0 /\ 1 <= 0)
		
		2-arg1 > 0 [0]: monotonic increase yields 2-arg1 > 0
		
		3+2*x37-arg2 > 0 [0]: monotonic increase yields 3+2*x37-arg2 > 0
		
		1-arg3 >= 0 [0]: monotonic increase yields 1-arg3 >= 0, dependencies: 3+2*x37-arg2 > 0
		
		-1+arg3 >= 0 [0]: eventual decrease yields (-1+arg3 >= 0 /\ -2*x37-n+arg2 >= 0)
		
		-1-2*x37+arg2 >= 0 [0]: montonic decrease yields -2*x37-n+arg2 >= 0
		
		-1-2*x37+arg2 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1-2*x37+arg2 >= 0)
		
		-1+arg2 > 0 [0]: montonic decrease yields -n+arg2 > 0
		
		-1+arg2 > 0 [1]: eventual increase yields (1 <= 0 /\ -1+arg2 > 0)
		
		Replacement map: {-2+arg2 > 0 -> -1-n+arg2 > 0, 2-arg1 > 0 -> 2-arg1 > 0, 3+2*x37-arg2 > 0 -> 3+2*x37-arg2 > 0, 1-arg3 >= 0 -> 1-arg3 >= 0, -1+arg3 >= 0 -> (-1+arg3 >= 0 /\ -2*x37-n+arg2 >= 0), -1-2*x37+arg2 >= 0 -> -2*x37-n+arg2 >= 0, -1+arg2 > 0 -> -n+arg2 > 0}

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {}, {28[T]}]

Step with 27

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {}, {26[T], 28[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 22

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {}, {26[T], 28[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {}, {26[T], 28[T]}, {22[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {}, {26[T], 27[T], 28[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {28[T]}]

Step with 27

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {28[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 22

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {28[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {28[T]}, {22[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {27[T], 28[T]}]

Step with 26

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {27[T], 28[T]}, {}]

Step with 22

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {27[T], 28[T]}, {}, {}]

Step with 23

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {27[T], 28[T]}, {}, {}, {}]

Covered

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {27[T], 28[T]}, {}, {23[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {27[T], 28[T]}, {22[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {}, {26[T], 27[T], 28[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {}, {23[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {22[T]}]

Step with 24

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {22[T]}, {}]

Step with 25

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {22[T]}, {23[T]}, {}]

Step with 26

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {22[T]}, {23[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 24

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {22[T]}, {23[T]}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 25

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {22[T]}, {23[T]}, {}, {}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3 arg4
   2: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, (arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0), cost: 1
  16: f1_0_main_Load -> f162_0_power_GT : arg1'=0, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, (arg1 > 0 /\ -arg2 == 0), cost: 1
  17: f1_0_main_Load -> f97_0_random_GT : arg1'=arg1p2, arg2'=0, arg3'=arg3p2, arg4'=arg4p2, (-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0), cost: 1
  22: f162_0_power_GT -> f162_0_power_GT\' : arg3'=arg3p8, arg4'=arg4p8, (-2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
  24: f162_0_power_GT -> f162_0_power_GT\' : arg3'=arg3p10, arg4'=arg4p10, (-2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
  18: f97_0_random_GT -> f162_0_power_GT : arg1'=arg2, arg2'=0, arg3'=arg3p4, arg4'=arg4p4, arg1 > 0, cost: 1
  19: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p5, arg3'=0, arg4'=arg4p5, (-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0), cost: 1
  20: f97_0_random_GT -> f155_0_main_InvokeMethod : arg1'=arg1p6, arg3'=arg3p6, arg4'=arg4p6, (arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0), cost: 1
  21: f155_0_main_InvokeMethod -> f162_0_power_GT : arg1'=arg2, arg2'=arg3, arg3'=arg3p7, arg4'=arg4p7, (arg1 > 0), cost: 1
  23: f162_0_power_GT\' -> f213_0_power_NE : arg3'=-2*x37+arg2, arg4'=arg4p9, (-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0), cost: 1
  25: f162_0_power_GT\' -> f213_0_power_NE : arg3'=-2*x41+arg2, arg4'=arg4p11, (-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0), cost: 1
  26: f213_0_power_NE -> f162_0_power_GT : arg2'=-1+arg2, arg3'=arg3p14, arg4'=arg4p14, (1-arg3 == 0 /\ -1+arg2 > 0), cost: 1
  27: f213_0_power_NE -> f162_0_power_GT : arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, (-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0), cost: 1
  28: f213_0_power_NE -> f213_0_power_NE : arg2'=-n+arg2, arg3'=-2*x37-n+arg2, arg4'=arg4p9, (2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0), cost: 1
  29: f213_0_power_NE -> f213_0_power_NE : arg2'=-n2+arg2, arg3'=-2*x41-n2+arg2, arg4'=arg4p11, (-2*x41-n2+arg2 >= 0 /\ -1+n2 >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -n2+arg2 > 0 /\ 3+2*x41-arg2 > 0 /\ -1-n2+arg2 > 0 /\ -2+arg1 > 0), cost: 1
  14: __init -> f1_0_main_Load : arg1'=arg1p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, T, cost: 1

	Loop Acceleration

	Original rule:
	f213_0_power_NE -> f213_0_power_NE : arg2'=-1+arg2, arg3'=-1-2*x41+arg2, arg4'=arg4p11, (-2+arg2 > 0 /\ -1-2*x41+arg2 >= 0 /\ 1-arg3 == 0 /\ -3-2*x41+arg2 < 0 /\ -2+arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f213_0_power_NE -> f213_0_power_NE : arg2'=-n2+arg2, arg3'=-2*x41-n2+arg2, arg4'=arg4p11, (-2*x41-n2+arg2 >= 0 /\ -1+n2 >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -n2+arg2 > 0 /\ 3+2*x41-arg2 > 0 /\ -1-n2+arg2 > 0 /\ -2+arg1 > 0), cost: 1

		-2+arg2 > 0 [0]: montonic decrease yields -1-n2+arg2 > 0
		
		-2+arg2 > 0 [1]: eventual increase yields (-2+arg2 > 0 /\ 1 <= 0)
		
		-1-2*x41+arg2 >= 0 [0]: montonic decrease yields -2*x41-n2+arg2 >= 0
		
		-1-2*x41+arg2 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1-2*x41+arg2 >= 0)
		
		1-arg3 >= 0 [0]: monotonic increase yields 1-arg3 >= 0, dependencies: 3+2*x41-arg2 > 0
		
		1-arg3 >= 0 [1]: eventual increase yields (1-arg3 >= 0 /\ -1-2*x41-arg3+arg2 <= 0)
		
		-1+arg3 >= 0 [0]: eventual decrease yields (-2*x41-n2+arg2 >= 0 /\ -1+arg3 >= 0)
		
		3+2*x41-arg2 > 0 [0]: monotonic increase yields 3+2*x41-arg2 > 0
		
		-2+arg1 > 0 [0]: monotonic increase yields -2+arg1 > 0
		
		-1+arg2 > 0 [0]: montonic decrease yields -n2+arg2 > 0
		
		-1+arg2 > 0 [1]: eventual increase yields (1 <= 0 /\ -1+arg2 > 0)
		
		Replacement map: {-2+arg2 > 0 -> -1-n2+arg2 > 0, -1-2*x41+arg2 >= 0 -> -2*x41-n2+arg2 >= 0, 1-arg3 >= 0 -> 1-arg3 >= 0, -1+arg3 >= 0 -> (-2*x41-n2+arg2 >= 0 /\ -1+arg3 >= 0), 3+2*x41-arg2 > 0 -> 3+2*x41-arg2 > 0, -2+arg1 > 0 -> -2+arg1 > 0, -1+arg2 > 0 -> -n2+arg2 > 0}

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 29[(-2*x41-n2+arg2 >= 0 /\ -1+n2 >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -n2+arg2 > 0 /\ 3+2*x41-arg2 > 0 /\ -1-n2+arg2 > 0 /\ -2+arg1 > 0)]
	
	Blocked

	[{}, {}, {18[T], 19[T]}, {}, {22[T]}, {23[T]}, {}, {29[T]}]

Restart

Step with 14

	Trace

	14[T]
	
	Blocked

	[{}, {}]

Step with 16

	Trace

	14[T], 16[(arg1 > 0 /\ -arg2 == 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {16[T]}]

Step with 2

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}]

Step with 20

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}]

Step with 21

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}]

Step with 24

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}]

Step with 25

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {}]

Step with 26

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {}, {}]

Step with 24

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {}, {}, {}]

Step with 25

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {}, {}, {}, {}]

Covered

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {}, {}, {25[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {}, {24[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T]}]

Step with 27

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 24

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T]}, {24[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T], 27[T]}]

Step with 29

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 29[(-2*x41-n2+arg2 >= 0 /\ -1+n2 >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -n2+arg2 > 0 /\ 3+2*x41-arg2 > 0 /\ -1-n2+arg2 > 0 /\ -2+arg1 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T], 27[T]}, {29[T]}]

Step with 27

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 29[(-2*x41-n2+arg2 >= 0 /\ -1+n2 >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -n2+arg2 > 0 /\ 3+2*x41-arg2 > 0 /\ -1-n2+arg2 > 0 /\ -2+arg1 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T], 27[T]}, {26[T], 28[T], 29[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 24

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 29[(-2*x41-n2+arg2 >= 0 /\ -1+n2 >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -n2+arg2 > 0 /\ 3+2*x41-arg2 > 0 /\ -1-n2+arg2 > 0 /\ -2+arg1 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T], 27[T]}, {26[T], 28[T], 29[T]}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 29[(-2*x41-n2+arg2 >= 0 /\ -1+n2 >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -n2+arg2 > 0 /\ 3+2*x41-arg2 > 0 /\ -1-n2+arg2 > 0 /\ -2+arg1 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T], 27[T]}, {26[T], 28[T], 29[T]}, {24[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)], 29[(-2*x41-n2+arg2 >= 0 /\ -1+n2 >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -n2+arg2 > 0 /\ 3+2*x41-arg2 > 0 /\ -1-n2+arg2 > 0 /\ -2+arg1 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T], 27[T]}, {26[T], 27[T], 28[T], 29[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)], 25[(-2*x41+arg2 >= 0 /\ -2+arg1 > 0 /\ -2-2*x41+arg2 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {}, {26[T], 27[T], 29[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 24[(-2+arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {}, {25[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}]

Step with 22

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {}]

Step with 23

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {}]

Step with 27

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {}, {}]

Step with 22

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {}, {}, {}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {}, {22[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T]}]

Step with 28

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 29[T]}, {28[T]}]

Step with 27

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 29[T]}, {26[T], 28[T]}, {}]

Step with 22

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 29[T]}, {26[T], 28[T]}, {}, {}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 29[T]}, {26[T], 28[T]}, {22[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 29[T]}, {26[T], 27[T], 28[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 28[T], 29[T]}]

Step with 26

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 28[T], 29[T]}, {}]

Step with 22

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 28[T], 29[T]}, {}, {}]

Step with 23

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 28[T], 29[T]}, {}, {}, {}]

Covered

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 28[T], 29[T]}, {}, {23[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {27[T], 28[T], 29[T]}, {22[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {25[T]}, {26[T], 27[T], 28[T], 29[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {24[T]}, {23[T], 25[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {}, {22[T], 24[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {16[T]}, {}, {21[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {20[T]}]

Step with 19

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 19[(-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0)]
	
	Blocked

	[{}, {16[T]}, {20[T]}, {}]

Step with 21

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 19[(-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {16[T]}, {20[T]}, {}, {}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 19[(-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0)]
	
	Blocked

	[{}, {16[T]}, {20[T]}, {21[T]}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {19[T], 20[T]}]

Step with 18

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)], 18[(arg1 > 0)]
	
	Blocked

	[{}, {16[T]}, {19[T], 20[T]}, {}]

Backtrack

	Trace

	14[T], 2[(arg1p3 > 0 /\ arg1p3-arg1 <= 0 /\ 1+arg2p3 > 0 /\ arg1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {16[T]}, {18[T], 19[T], 20[T]}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {2[T], 16[T]}]

Step with 17

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {}]

Step with 18

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 18[(arg1 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {}, {}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}]

Step with 20

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}]

Step with 21

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}]

Step with 22

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}]

Step with 23

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {}]

Step with 26

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {}, {}]

Step with 22

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {}, {}, {}]

Step with 23

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {}, {}, {}, {}]

Covered

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {}, {}, {23[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 26[(1-arg3 == 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {}, {22[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T]}]

Step with 27

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T]}, {}]

Step with 22

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T]}, {}, {}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T]}, {22[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T], 27[T]}]

Step with 28

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T], 27[T], 29[T]}, {28[T]}]

Step with 27

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T], 27[T], 29[T]}, {26[T], 28[T]}, {}]

Step with 22

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T], 27[T], 29[T]}, {26[T], 28[T]}, {}, {}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)], 27[(-arg2p13+arg2 > 0 /\ -arg3 == 0 /\ -2-2*arg2p13+arg2 < 0 /\ 2-arg2 <= 0 /\ -2*arg2p13+arg2 >= 0 /\ arg2p13 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T], 27[T], 29[T]}, {26[T], 28[T]}, {22[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)], 28[(2-arg1 > 0 /\ 3+2*x37-arg2 > 0 /\ -1+n >= 0 /\ 1-arg3 >= 0 /\ -1+arg3 >= 0 /\ -1-n+arg2 > 0 /\ -n+arg2 > 0 /\ -2*x37-n+arg2 >= 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T], 27[T], 29[T]}, {26[T], 27[T], 28[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)], 23[(-2-2*x37+arg2 < 0 /\ -2*x37+arg2 >= 0 /\ -2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {}, {26[T], 27[T], 28[T], 29[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)], 22[(-2+arg1 < 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {}, {23[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {}, {22[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 20[(arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ 1+arg3p6 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T]}, {21[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T], 20[T]}]

Step with 19

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 19[(-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T], 20[T]}, {}]

Step with 21

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 19[(-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0)], 21[(arg1 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T], 20[T]}, {}, {}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)], 19[(-arg1+arg1p5 <= 0 /\ arg1 > 0 /\ arg1p5 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T], 20[T]}, {21[T]}]

Backtrack

	Trace

	14[T], 17[(-arg1+arg1p2 <= 0 /\ arg1 > 0 /\ arg1p2 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {2[T], 16[T]}, {18[T], 19[T], 20[T]}]

Backtrack

	Trace

	14[T]
	
	Blocked

	[{}, {2[T], 16[T], 17[T]}]

Backtrack

	Trace

	Blocked

	[{14[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
