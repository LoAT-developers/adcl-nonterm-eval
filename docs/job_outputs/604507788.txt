unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3
   0: f1_0_main_Load -> f117_0_createList_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (arg1 > 0 /\ 1+arg1p1 > 0 /\ arg2 > 0), cost: 1
   1: f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ 1+x7 > 0 /\ -arg3p2 == 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
   2: f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg3p3 == 0 /\ 1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ 1+x12 > 0 /\ arg2 > 0), cost: 1
   3: f117_0_createList_GE -> f117_0_createList_GE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (-1+arg1-arg1p4 == 0 /\ 1+arg1 > 0 /\ -1 < 0), cost: 1
   4: f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ x15 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ -arg3p5 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0), cost: 1
   5: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0), cost: 1
   6: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0), cost: 1
   7: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, (-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ 1-arg3p8 == 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0), cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3
   0: f1_0_main_Load -> f117_0_createList_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (arg1 > 0 /\ 1+arg1p1 > 0 /\ arg2 > 0), cost: 1
   9: f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=0, (arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
  10: f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=0, (1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0), cost: 1
  11: f117_0_createList_GE -> f117_0_createList_GE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, 1+arg1 > 0, cost: 1
  12: f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=0, (1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0), cost: 1
   5: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0), cost: 1
   6: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0), cost: 1
  13: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p8, arg2'=arg2p8, arg3'=1, (-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0), cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ 1+x7 > 0 /\ -arg3p2 == 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=0, (0 == 0 /\ arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ 1+x7 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg3p2 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=0, (0 == 0 /\ arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ 1+x7 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=0, (arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ 1+x7 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=0, (arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ 1+x7 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=0, (arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg3p3 == 0 /\ 1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ 1+x12 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=0, (0 == 0 /\ 1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ 1+x12 > 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg3p3 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=0, (0 == 0 /\ 1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ 1+x12 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=0, (1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ 1+x12 > 0 /\ arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=0, (1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ 1+x12 > 0 /\ arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=0, (1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f117_0_createList_GE -> f117_0_createList_GE : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, (-1+arg1-arg1p4 == 0 /\ 1+arg1 > 0 /\ -1 < 0), cost: 1
	New rule:
	f117_0_createList_GE -> f117_0_createList_GE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, (0 == 0 /\ 1+arg1 > 0 /\ -1 < 0), cost: 1
	
		propagated equality arg1p4 = -1+arg1
		
	Simplified Guard

	Original rule:
	f117_0_createList_GE -> f117_0_createList_GE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, (0 == 0 /\ 1+arg1 > 0 /\ -1 < 0), cost: 1
	New rule:
	f117_0_createList_GE -> f117_0_createList_GE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, 1+arg1 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=arg3p5, (1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ x15 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ -arg3p5 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=0, (0 == 0 /\ 1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ x15 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg3p5 = 0
		
	Simplified Guard

	Original rule:
	f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=0, (0 == 0 /\ 1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ x15 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=0, (1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ x15 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=0, (1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ x15 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=0, (1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p8, arg2'=arg2p8, arg3'=arg3p8, (-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ 1-arg3p8 == 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p8, arg2'=arg2p8, arg3'=1, (0 == 0 /\ -arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0), cost: 1
	
		propagated equality arg3p8 = 1
		
	Simplified Guard

	Original rule:
	f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p8, arg2'=arg2p8, arg3'=1, (0 == 0 /\ -arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0), cost: 1
	New rule:
	f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p8, arg2'=arg2p8, arg3'=1, (-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0), cost: 1

Step with 8

	Trace

	8[T]
	
	Blocked

	[{}, {}]

Step with 0

	Trace

	8[T], 0[(arg1 > 0 /\ 1+arg1p1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 11

	Trace

	8[T], 0[(arg1 > 0 /\ 1+arg1p1 > 0 /\ arg2 > 0)], 11[(1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   0: f1_0_main_Load -> f117_0_createList_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (arg1 > 0 /\ 1+arg1p1 > 0 /\ arg2 > 0), cost: 1
   9: f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p2, arg2'=arg2p2, arg3'=0, (arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0), cost: 1
  10: f1_0_main_Load -> f232_0_main_InvokeMethod : arg1'=arg1p3, arg2'=arg2p3, arg3'=0, (1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0), cost: 1
  11: f117_0_createList_GE -> f117_0_createList_GE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, 1+arg1 > 0, cost: 1
  14: f117_0_createList_GE -> f117_0_createList_GE : arg1'=arg1-n, arg2'=arg2p4, arg3'=arg3p4, (-1+n >= 0 /\ 2+arg1-n > 0), cost: 1
  12: f232_0_main_InvokeMethod -> f389_0_dupList_NONNULL : arg1'=arg1p5, arg2'=arg2p5, arg3'=0, (1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0), cost: 1
   5: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p6, arg2'=arg2p6, arg3'=arg3p6, (arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0), cost: 1
   6: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p7, arg2'=arg2p7, arg3'=arg3p7, (3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0), cost: 1
  13: f389_0_dupList_NONNULL -> f389_0_dupList_NONNULL : arg1'=arg1p8, arg2'=arg2p8, arg3'=1, (-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0), cost: 1
   8: __init -> f1_0_main_Load : arg1'=arg1p9, arg2'=arg2p9, arg3'=arg3p9, T, cost: 1

	Loop Acceleration

	Original rule:
	f117_0_createList_GE -> f117_0_createList_GE : arg1'=-1+arg1, arg2'=arg2p4, arg3'=arg3p4, (1+arg1 > 0), cost: 1
	New rule:
	f117_0_createList_GE -> f117_0_createList_GE : arg1'=arg1-n, arg2'=arg2p4, arg3'=arg3p4, (-1+n >= 0 /\ 2+arg1-n > 0), cost: 1

		1+arg1 > 0 [0]: montonic decrease yields 2+arg1-n > 0
		
		1+arg1 > 0 [1]: eventual increase yields (1 <= 0 /\ 1+arg1 > 0)
		
		Replacement map: {1+arg1 > 0 -> 2+arg1-n > 0}

	Trace

	8[T], 0[(arg1 > 0 /\ 1+arg1p1 > 0 /\ arg2 > 0)], 14[(-1+n >= 0 /\ 2+arg1-n > 0)]
	
	Blocked

	[{}, {}, {}, {11[T], 14[T]}]

Backtrack

	Trace

	8[T], 0[(arg1 > 0 /\ 1+arg1p1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {14[T]}]

Step with 11

	Trace

	8[T], 0[(arg1 > 0 /\ 1+arg1p1 > 0 /\ arg2 > 0)], 11[(1+arg1 > 0)]
	
	Blocked

	[{}, {}, {14[T]}, {}]

Covered

	Trace

	8[T], 0[(arg1 > 0 /\ 1+arg1p1 > 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {}, {11[T], 14[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {0[T]}]

Step with 9

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}]

Step with 12

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {}]

Step with 13

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 6

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 6

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {}, {}]

Covered

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {6[T]}]

Step with 5

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)], 5[(arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {6[T], 13[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Acceleration Failed

marked recursive suffix as redundant

Step with 5

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)], 5[(arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0)], 5[(arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {6[T], 13[T]}, {}, {}]

Covered

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)], 5[(arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {6[T], 13[T]}, {5[T]}]

Backtrack

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {5[T], 6[T], 13[T]}]

Backtrack

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T]}, {5[T], 6[T], 13[T]}]

Backtrack

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {}, {5[T], 6[T], 13[T]}]

Backtrack

	Trace

	8[T], 9[(arg1p2 > 0 /\ -3+arg2p2 > 0 /\ arg1 > 0 /\ arg1p2-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T]}, {12[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {0[T], 9[T]}]

Step with 10

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}]

Step with 12

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {}]

Step with 13

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T]}, {}]

Step with 6

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {}]

Step with 6

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {}, {}]

Covered

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {6[T]}]

Step with 5

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)], 5[(arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {6[T], 13[T]}, {}]

Step with 5

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)], 5[(arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0)], 5[(arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {6[T], 13[T]}, {}, {}]

Covered

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)], 5[(arg3 < 0 /\ 2+arg3-arg1 <= 0 /\ -2+arg1 > 0 /\ 1+arg2p6 > 0 /\ 2-arg1+arg1p6 <= 0 /\ 2+arg3p6-arg2 <= 0 /\ arg1p6 > 0 /\ arg1p6-arg2 <= 0 /\ 1+arg2p6-arg2 <= 0 /\ 4+arg3p6-arg1 <= 0 /\ 3-arg1+arg2p6 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {6[T], 13[T]}, {5[T]}]

Backtrack

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)], 6[(3-arg1+arg2p7 <= 0 /\ 1+arg2p7-arg2 <= 0 /\ arg1p7-arg2 <= 0 /\ 2+arg3p7-arg2 <= 0 /\ arg3 > 0 /\ 2+arg3-arg1 <= 0 /\ 4-arg1+arg3p7 <= 0 /\ -2+arg1 > 0 /\ arg1p7 > 0 /\ 1+arg2p7 > 0 /\ 2-arg1+arg1p7 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T]}, {5[T], 13[T]}, {5[T], 6[T], 13[T]}]

Backtrack

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)], 13[(-arg3 == 0 /\ -2+arg1 > 0 /\ 2-arg1+arg2p8 <= 0 /\ -2+arg1p8 > 0 /\ arg2p8 > 0 /\ arg2p8-arg2 <= 0 /\ -2+arg1p8-arg2 <= 0 /\ arg1p8-arg1 <= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T]}, {5[T], 6[T], 13[T]}]

Backtrack

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)], 12[(1+arg2p5 > 0 /\ -1+arg1p5 > 0 /\ arg1 > 0 /\ -arg3 == 0 /\ 2+arg2p5-arg2 <= 0 /\ arg1p5-arg2 <= 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {}, {5[T], 6[T], 13[T]}]

Backtrack

	Trace

	8[T], 10[(1+arg1-arg2p3 >= 0 /\ arg1 > 0 /\ arg1p3 > 0 /\ -1+arg2p3 > 0 /\ arg1-arg1p3 >= 0 /\ arg2 > 0)]
	
	Blocked

	[{}, {0[T], 9[T]}, {12[T]}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {0[T], 9[T], 10[T]}]

Backtrack

	Trace

	Blocked

	[{8[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
