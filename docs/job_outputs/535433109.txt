WORST_CASE(Omega(0),?)

Initial ITS
Start location: l3
   0: l0 -> l1 : x^0'=x^post0, (201-x^post0 <= 0 /\ 1000-x^0+x^post0 == 0), cost: 1
   1: l1 -> l0 : x^0'=x^post1, -x^post1+x^0 == 0, cost: 1
   2: l2 -> l0 : x^0'=x^post2, -x^post2+x^0 == 0, cost: 1
   3: l3 -> l2 : x^0'=x^post3, x^0-x^post3 == 0, cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post0, (201-x^post0 <= 0 /\ 1000-x^0+x^post0 == 0), cost: 1
New rule:
l0 -> l1 : x^0'=-1000+x^0, -1201+x^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : x^0'=x^post1, -x^post1+x^0 == 0, cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : x^0'=x^post2, -x^post2+x^0 == 0, cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : x^0'=x^post3, x^0-x^post3 == 0, cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Simplified rules
Start location: l3
   4: l0 -> l1 : x^0'=-1000+x^0, -1201+x^0 >= 0, cost: 1
   5: l1 -> l0 : TRUE, cost: 1
   6: l2 -> l0 : TRUE, cost: 1
   7: l3 -> l2 : TRUE, cost: 1


Eliminating location l2 by chaining:

Applied chaining
First rule:
l3 -> l2 : TRUE, cost: 1
Second rule:
l2 -> l0 : TRUE, cost: 1
New rule:
l3 -> l0 : TRUE, cost: 2

Applied deletion
Removed the following rules: 6 7

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : x^0'=-1000+x^0, -1201+x^0 >= 0, cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : x^0'=-1000+x^0, -1201+x^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 4 5

Eliminated locations on linear paths
Start location: l3
   9: l0 -> l0 : x^0'=-1000+x^0, -1201+x^0 >= 0, cost: 2
   8: l3 -> l0 : TRUE, cost: 2


Applied acceleration
Original rule:
l0 -> l0 : x^0'=-1000+x^0, -1201+x^0 >= 0, cost: 2
New rule:
l0 -> l0 : x^0'=-1000*n+x^0, (n >= 0 /\ -201-1000*n+x^0 >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_idGCFo.txt

Applied deletion
Removed the following rules: 9

Accelerated simple loops
Start location: l3
  10: l0 -> l0 : x^0'=-1000*n+x^0, (n >= 0 /\ -201-1000*n+x^0 >= 0), cost: 2*n
   8: l3 -> l0 : TRUE, cost: 2


Applied chaining
First rule:
l3 -> l0 : TRUE, cost: 2
Second rule:
l0 -> l0 : x^0'=-1000*n+x^0, (n >= 0 /\ -201-1000*n+x^0 >= 0), cost: 2*n
New rule:
l3 -> l0 : x^0'=-1000*n+x^0, (n >= 0 /\ -201-1000*n+x^0 >= 0), cost: 2+2*n

Applied deletion
Removed the following rules: 10

Chained accelerated rules with incoming rules
Start location: l3
   8: l3 -> l0 : TRUE, cost: 2
  11: l3 -> l0 : x^0'=-1000*n+x^0, (n >= 0 /\ -201-1000*n+x^0 >= 0), cost: 2+2*n


Removed unreachable locations and irrelevant leafs
Start location: l3
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

