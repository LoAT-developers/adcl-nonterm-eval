unknown

Initial ITS

Start location: l8
Program variables: i^0 j^0
   0: l0 -> l1 : i^0'=i^post1, j^0'=j^post1, (2-i^0 <= 0 /\ j^post1 == 0 /\ -i^post1+i^0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post2, j^0'=j^post2, (-1+i^0 <= 0 /\ -j^post2+j^0 == 0 /\ -1-i^0+i^post2 == 0), cost: 1
   3: l1 -> l3 : i^0'=i^post4, j^0'=j^post4, (-i^post4+i^0 == 0 /\ -j^post4+j^0 == 0), cost: 1
   2: l2 -> l0 : i^0'=i^post3, j^0'=j^post3, (j^0-j^post3 == 0 /\ -i^post3+i^0 == 0), cost: 1
   7: l3 -> l6 : i^0'=i^post8, j^0'=j^post8, (2-j^0 <= 0 /\ -i^post8+i^0 == 0 /\ j^0-j^post8 == 0), cost: 1
   8: l3 -> l1 : i^0'=i^post9, j^0'=j^post9, (-1+j^0 <= 0 /\ -i^post9+i^0 == 0 /\ -1+j^post9-j^0 == 0), cost: 1
   4: l4 -> l5 : i^0'=i^post5, j^0'=j^post5, (i^0-i^post5 == 0 /\ -j^post5+j^0 == 0), cost: 1
   5: l6 -> l4 : i^0'=i^post6, j^0'=j^post6, (j^0-j^post6 == 0 /\ -i^post6+i^0 == 0), cost: 1
   6: l6 -> l4 : i^0'=i^post7, j^0'=j^post7, (-i^post7+i^0 == 0 /\ -j^post7+j^0 == 0), cost: 1
   9: l7 -> l2 : i^0'=i^post10, j^0'=j^post10, (-j^post10+j^0 == 0 /\ i^post10 == 0), cost: 1
  10: l8 -> l7 : i^0'=i^post11, j^0'=j^post11, (-i^post11+i^0 == 0 /\ j^0-j^post11 == 0), cost: 1

Chained Linear Paths

Start location: l8
Program variables: i^0 j^0
   0: l0 -> l1 : i^0'=i^post1, j^0'=j^post1, (2-i^0 <= 0 /\ j^post1 == 0 /\ -i^post1+i^0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post2, j^0'=j^post2, (-1+i^0 <= 0 /\ -j^post2+j^0 == 0 /\ -1-i^0+i^post2 == 0), cost: 1
   3: l1 -> l3 : i^0'=i^post4, j^0'=j^post4, (-i^post4+i^0 == 0 /\ -j^post4+j^0 == 0), cost: 1
   2: l2 -> l0 : i^0'=i^post3, j^0'=j^post3, (j^0-j^post3 == 0 /\ -i^post3+i^0 == 0), cost: 1
   7: l3 -> l6 : i^0'=i^post8, j^0'=j^post8, (2-j^0 <= 0 /\ -i^post8+i^0 == 0 /\ j^0-j^post8 == 0), cost: 1
   8: l3 -> l1 : i^0'=i^post9, j^0'=j^post9, (-1+j^0 <= 0 /\ -i^post9+i^0 == 0 /\ -1+j^post9-j^0 == 0), cost: 1
   4: l4 -> l5 : i^0'=i^post5, j^0'=j^post5, (i^0-i^post5 == 0 /\ -j^post5+j^0 == 0), cost: 1
   5: l6 -> l4 : i^0'=i^post6, j^0'=j^post6, (j^0-j^post6 == 0 /\ -i^post6+i^0 == 0), cost: 1
   6: l6 -> l4 : i^0'=i^post7, j^0'=j^post7, (-i^post7+i^0 == 0 /\ -j^post7+j^0 == 0), cost: 1
  11: l8 -> l2 : i^0'=i^post10, j^0'=j^post10, (-j^post10+j^post11 == 0 /\ -i^post11+i^0 == 0 /\ j^0-j^post11 == 0 /\ i^post10 == 0), cost: 1

	Eliminating location l7 by chaining:

	Applied chaining

	First rule:
	l8 -> l7 : i^0'=i^post11, j^0'=j^post11, (-i^post11+i^0 == 0 /\ j^0-j^post11 == 0), cost: 1
	Second rule:
	l7 -> l2 : i^0'=i^post10, j^0'=j^post10, (-j^post10+j^0 == 0 /\ i^post10 == 0), cost: 1
	New rule:
	l8 -> l2 : i^0'=i^post10, j^0'=j^post10, (-j^post10+j^post11 == 0 /\ -i^post11+i^0 == 0 /\ j^0-j^post11 == 0 /\ i^post10 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 9 10

Simplified Transitions

Start location: l8
Program variables: i^0 j^0
  12: l0 -> l1 : j^0'=0, 2-i^0 <= 0, cost: 1
  13: l0 -> l2 : i^0'=1+i^0, -1+i^0 <= 0, cost: 1
  15: l1 -> l3 : T, cost: 1
  14: l2 -> l0 : T, cost: 1
  19: l3 -> l6 : 2-j^0 <= 0, cost: 1
  20: l3 -> l1 : j^0'=1+j^0, -1+j^0 <= 0, cost: 1
  16: l4 -> l5 : T, cost: 1
  17: l6 -> l4 : T, cost: 1
  18: l6 -> l4 : T, cost: 1
  21: l8 -> l2 : i^0'=0, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : i^0'=i^post1, j^0'=j^post1, (2-i^0 <= 0 /\ j^post1 == 0 /\ -i^post1+i^0 == 0), cost: 1
	New rule:
	l0 -> l1 : i^0'=i^0, j^0'=0, (0 == 0 /\ 2-i^0 <= 0), cost: 1
	
		propagated equality j^post1 = 0
		
		propagated equality i^post1 = i^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : i^0'=i^0, j^0'=0, (0 == 0 /\ 2-i^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : i^0'=i^0, j^0'=0, 2-i^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : i^0'=i^0, j^0'=0, 2-i^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : j^0'=0, 2-i^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l2 : i^0'=i^post2, j^0'=j^post2, (-1+i^0 <= 0 /\ -j^post2+j^0 == 0 /\ -1-i^0+i^post2 == 0), cost: 1
	New rule:
	l0 -> l2 : i^0'=1+i^0, j^0'=j^0, (0 == 0 /\ -1+i^0 <= 0), cost: 1
	
		propagated equality j^post2 = j^0
		
		propagated equality i^post2 = 1+i^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : i^0'=1+i^0, j^0'=j^0, (0 == 0 /\ -1+i^0 <= 0), cost: 1
	New rule:
	l0 -> l2 : i^0'=1+i^0, j^0'=j^0, -1+i^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : i^0'=1+i^0, j^0'=j^0, -1+i^0 <= 0, cost: 1
	New rule:
	l0 -> l2 : i^0'=1+i^0, -1+i^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : i^0'=i^post3, j^0'=j^post3, (j^0-j^post3 == 0 /\ -i^post3+i^0 == 0), cost: 1
	New rule:
	l2 -> l0 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	
		propagated equality j^post3 = j^0
		
		propagated equality i^post3 = i^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	New rule:
	l2 -> l0 : i^0'=i^0, j^0'=j^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : i^0'=i^0, j^0'=j^0, T, cost: 1
	New rule:
	l2 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l3 : i^0'=i^post4, j^0'=j^post4, (-i^post4+i^0 == 0 /\ -j^post4+j^0 == 0), cost: 1
	New rule:
	l1 -> l3 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	
		propagated equality i^post4 = i^0
		
		propagated equality j^post4 = j^0
		
	Simplified Guard

	Original rule:
	l1 -> l3 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	New rule:
	l1 -> l3 : i^0'=i^0, j^0'=j^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l3 : i^0'=i^0, j^0'=j^0, T, cost: 1
	New rule:
	l1 -> l3 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l5 : i^0'=i^post5, j^0'=j^post5, (i^0-i^post5 == 0 /\ -j^post5+j^0 == 0), cost: 1
	New rule:
	l4 -> l5 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	
		propagated equality i^post5 = i^0
		
		propagated equality j^post5 = j^0
		
	Simplified Guard

	Original rule:
	l4 -> l5 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	New rule:
	l4 -> l5 : i^0'=i^0, j^0'=j^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l5 : i^0'=i^0, j^0'=j^0, T, cost: 1
	New rule:
	l4 -> l5 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l4 : i^0'=i^post6, j^0'=j^post6, (j^0-j^post6 == 0 /\ -i^post6+i^0 == 0), cost: 1
	New rule:
	l6 -> l4 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	
		propagated equality j^post6 = j^0
		
		propagated equality i^post6 = i^0
		
	Simplified Guard

	Original rule:
	l6 -> l4 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	New rule:
	l6 -> l4 : i^0'=i^0, j^0'=j^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l4 : i^0'=i^0, j^0'=j^0, T, cost: 1
	New rule:
	l6 -> l4 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l6 -> l4 : i^0'=i^post7, j^0'=j^post7, (-i^post7+i^0 == 0 /\ -j^post7+j^0 == 0), cost: 1
	New rule:
	l6 -> l4 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	
		propagated equality i^post7 = i^0
		
		propagated equality j^post7 = j^0
		
	Simplified Guard

	Original rule:
	l6 -> l4 : i^0'=i^0, j^0'=j^0, 0 == 0, cost: 1
	New rule:
	l6 -> l4 : i^0'=i^0, j^0'=j^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l6 -> l4 : i^0'=i^0, j^0'=j^0, T, cost: 1
	New rule:
	l6 -> l4 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l6 : i^0'=i^post8, j^0'=j^post8, (2-j^0 <= 0 /\ -i^post8+i^0 == 0 /\ j^0-j^post8 == 0), cost: 1
	New rule:
	l3 -> l6 : i^0'=i^0, j^0'=j^0, (0 == 0 /\ 2-j^0 <= 0), cost: 1
	
		propagated equality i^post8 = i^0
		
		propagated equality j^post8 = j^0
		
	Simplified Guard

	Original rule:
	l3 -> l6 : i^0'=i^0, j^0'=j^0, (0 == 0 /\ 2-j^0 <= 0), cost: 1
	New rule:
	l3 -> l6 : i^0'=i^0, j^0'=j^0, 2-j^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l6 : i^0'=i^0, j^0'=j^0, 2-j^0 <= 0, cost: 1
	New rule:
	l3 -> l6 : 2-j^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l3 -> l1 : i^0'=i^post9, j^0'=j^post9, (-1+j^0 <= 0 /\ -i^post9+i^0 == 0 /\ -1+j^post9-j^0 == 0), cost: 1
	New rule:
	l3 -> l1 : i^0'=i^0, j^0'=1+j^0, (0 == 0 /\ -1+j^0 <= 0), cost: 1
	
		propagated equality i^post9 = i^0
		
		propagated equality j^post9 = 1+j^0
		
	Simplified Guard

	Original rule:
	l3 -> l1 : i^0'=i^0, j^0'=1+j^0, (0 == 0 /\ -1+j^0 <= 0), cost: 1
	New rule:
	l3 -> l1 : i^0'=i^0, j^0'=1+j^0, -1+j^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l3 -> l1 : i^0'=i^0, j^0'=1+j^0, -1+j^0 <= 0, cost: 1
	New rule:
	l3 -> l1 : j^0'=1+j^0, -1+j^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l8 -> l2 : i^0'=i^post10, j^0'=j^post10, (-j^post10+j^post11 == 0 /\ -i^post11+i^0 == 0 /\ j^0-j^post11 == 0 /\ i^post10 == 0), cost: 1
	New rule:
	l8 -> l2 : i^0'=0, j^0'=j^post11, (0 == 0 /\ -i^post11+i^0 == 0 /\ j^0-j^post11 == 0), cost: 1
	
		propagated equality j^post10 = j^post11
		
		propagated equality i^post10 = 0
		
	Propagated Equalities

	Original rule:
	l8 -> l2 : i^0'=0, j^0'=j^post11, (0 == 0 /\ -i^post11+i^0 == 0 /\ j^0-j^post11 == 0), cost: 1
	New rule:
	l8 -> l2 : i^0'=0, j^0'=j^0, 0 == 0, cost: 1
	
		propagated equality i^post11 = i^0
		
		propagated equality j^post11 = j^0
		
	Simplified Guard

	Original rule:
	l8 -> l2 : i^0'=0, j^0'=j^0, 0 == 0, cost: 1
	New rule:
	l8 -> l2 : i^0'=0, j^0'=j^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l8 -> l2 : i^0'=0, j^0'=j^0, T, cost: 1
	New rule:
	l8 -> l2 : i^0'=0, T, cost: 1

Step with 21

	Trace

	21[T]
	
	Blocked

	[{}, {}]

Step with 14

	Trace

	21[T], 14[T]
	
	Blocked

	[{}, {}, {}]

Step with 13

	Trace

	21[T], 14[T], 13[(-1+i^0 <= 0)]
	
	Blocked

	[{}, {}, {12[T]}, {}]

Accelerate

Start location: l8
Program variables: i^0 j^0
  12: l0 -> l1 : j^0'=0, 2-i^0 <= 0, cost: 1
  13: l0 -> l2 : i^0'=1+i^0, -1+i^0 <= 0, cost: 1
  15: l1 -> l3 : T, cost: 1
  14: l2 -> l0 : T, cost: 1
  22: l2 -> l2 : i^0'=n+i^0, (2-n-i^0 >= 0 /\ -1+n >= 0), cost: 1
  19: l3 -> l6 : 2-j^0 <= 0, cost: 1
  20: l3 -> l1 : j^0'=1+j^0, -1+j^0 <= 0, cost: 1
  16: l4 -> l5 : T, cost: 1
  17: l6 -> l4 : T, cost: 1
  18: l6 -> l4 : T, cost: 1
  21: l8 -> l2 : i^0'=0, T, cost: 1

	Loop Acceleration

	Original rule:
	l2 -> l2 : i^0'=1+i^0, -1+i^0 <= 0, cost: 1
	New rule:
	l2 -> l2 : i^0'=n+i^0, (2-n-i^0 >= 0 /\ -1+n >= 0), cost: 1

		1-i^0 >= 0 [0]: montonic decrease yields 2-n-i^0 >= 0
		
		1-i^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ 1-i^0 >= 0)
		
		Replacement map: {1-i^0 >= 0 -> 2-n-i^0 >= 0}

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {22[T]}]

Step with 14

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T]
	
	Blocked

	[{}, {}, {22[T]}, {}]

Step with 13

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 13[(-1+i^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {}, {}]

Covered

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}]

Step with 12

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}]

Step with 15

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 15[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {}]

Step with 20

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 15[T], 20[(-1+j^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {19[T]}, {}]

Accelerate

Start location: l8
Program variables: i^0 j^0
  12: l0 -> l1 : j^0'=0, 2-i^0 <= 0, cost: 1
  13: l0 -> l2 : i^0'=1+i^0, -1+i^0 <= 0, cost: 1
  15: l1 -> l3 : T, cost: 1
  23: l1 -> l1 : j^0'=n2+j^0, (-1+n2 >= 0 /\ 2-n2-j^0 >= 0), cost: 1
  14: l2 -> l0 : T, cost: 1
  22: l2 -> l2 : i^0'=n+i^0, (2-n-i^0 >= 0 /\ -1+n >= 0), cost: 1
  19: l3 -> l6 : 2-j^0 <= 0, cost: 1
  20: l3 -> l1 : j^0'=1+j^0, -1+j^0 <= 0, cost: 1
  16: l4 -> l5 : T, cost: 1
  17: l6 -> l4 : T, cost: 1
  18: l6 -> l4 : T, cost: 1
  21: l8 -> l2 : i^0'=0, T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : j^0'=1+j^0, -1+j^0 <= 0, cost: 1
	New rule:
	l1 -> l1 : j^0'=n2+j^0, (-1+n2 >= 0 /\ 2-n2-j^0 >= 0), cost: 1

		1-j^0 >= 0 [0]: montonic decrease yields 2-n2-j^0 >= 0
		
		1-j^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ 1-j^0 >= 0)
		
		Replacement map: {1-j^0 >= 0 -> 2-n2-j^0 >= 0}

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}]

Step with 15

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {}]

Step with 20

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 20[(-1+j^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {}, {}]

Covered

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}]

Step with 19

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 19[(2-j^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}, {}]

Step with 17

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 19[(2-j^0 <= 0)], 17[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}, {}, {}]

Step with 16

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 19[(2-j^0 <= 0)], 17[T], 16[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}, {}, {}, {}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 19[(2-j^0 <= 0)], 17[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}, {}, {16[T]}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 19[(2-j^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}, {17[T]}]

Step with 18

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 19[(2-j^0 <= 0)], 18[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}, {17[T]}, {}]

Step with 16

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 19[(2-j^0 <= 0)], 18[T], 16[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}, {17[T]}, {}, {}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 19[(2-j^0 <= 0)], 18[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}, {17[T]}, {16[T]}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T], 19[(2-j^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {20[T]}, {17[T], 18[T]}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)], 15[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {23[T]}, {19[T], 20[T]}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 23[(-1+n2 >= 0 /\ 2-n2-j^0 >= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {}, {15[T], 23[T]}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {23[T]}]

Step with 15

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 15[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {23[T]}, {}]

Step with 20

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 15[T], 20[(-1+j^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {23[T]}, {19[T]}, {}]

Covered

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)], 15[T]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {23[T]}, {19[T], 20[T]}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T], 12[(2-i^0 <= 0)]
	
	Blocked

	[{}, {}, {22[T]}, {13[T]}, {15[T], 23[T]}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)], 14[T]
	
	Blocked

	[{}, {}, {22[T]}, {12[T], 13[T]}]

Backtrack

	Trace

	21[T], 22[(2-n-i^0 >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {14[T], 22[T]}]

Backtrack

	Trace

	21[T]
	
	Blocked

	[{}, {22[T]}]

Step with 14

	Trace

	21[T], 14[T]
	
	Blocked

	[{}, {22[T]}, {}]

Step with 13

	Trace

	21[T], 14[T], 13[(-1+i^0 <= 0)]
	
	Blocked

	[{}, {22[T]}, {12[T]}, {}]

Covered

	Trace

	21[T], 14[T]
	
	Blocked

	[{}, {22[T]}, {12[T], 13[T]}]

Backtrack

	Trace

	21[T]
	
	Blocked

	[{}, {14[T], 22[T]}]

Backtrack

	Trace

	Blocked

	[{21[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
