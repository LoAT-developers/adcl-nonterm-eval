NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l5, true>
<l1, l2, (undef1 = __disjvr_0^0) /\ (__disjvr_0^0 = undef1), par{__disjvr_0^0 -> undef1}>
<l2, l3, true, par{deltaext^0 -> (0 + deltaext_new^0)}>
<l3, l1, ((~(1) + (2 * deltaext^0)) <= ((0 + c0^0) + wnt^0)) /\ (((0 + c0^0) + wnt^0) <= (0 + (2 * deltaext^0))), par{deltaext_new^0 -> (0 + deltaext^0)}>
<l3, l1, (((1 + c0^0) + wnt^0) <= (~(1) + (2 * deltaext^0))), par{deltaext_new^0 -> (~(1) + deltaext^0)}>
<l3, l1, ((1 + (2 * deltaext^0)) <= ((0 + c0^0) + wnt^0)), par{deltaext_new^0 -> (1 + deltaext^0)}>
<l4, l3, (0 <= (0 + wnt^0)) /\ ((0 + wnt^0) <= 3) /\ (0 <= (0 + deltaext^0)) /\ ((0 + deltaext^0) <= 3), par{c0^0 -> 2}>
<l5, l4, true>

Fresh variables:
undef1, 

Undef variables:
undef1, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l3, (2 = 2) /\ (0 <= (0 + wnt^0)) /\ ((0 + wnt^0) <= 3) /\ (0 <= (0 + deltaext^0)) /\ ((0 + deltaext^0) <= 3)>
<l3, l3, ((~(1) + (2 * deltaext^0)) <= ((0 + 2) + wnt^0)) /\ (((0 + 2) + wnt^0) <= (0 + (2 * deltaext^0))) /\ (undef1 = __disjvr_0^0) /\ (__disjvr_0^0 = undef1), par{__disjvr_0^0 -> undef1, deltaext^0 -> (0 + (0 + deltaext^0))}>
<l3, l3, (((1 + 2) + wnt^0) <= (~(1) + (2 * deltaext^0))) /\ (undef1 = __disjvr_0^0) /\ (__disjvr_0^0 = undef1), par{__disjvr_0^0 -> undef1, deltaext^0 -> (0 + (~(1) + deltaext^0))}>
<l3, l3, ((1 + (2 * deltaext^0)) <= ((0 + 2) + wnt^0)) /\ (undef1 = __disjvr_0^0) /\ (__disjvr_0^0 = undef1), par{__disjvr_0^0 -> undef1, deltaext^0 -> (0 + (1 + deltaext^0))}>

Fresh variables:
undef1, 

Undef variables:
undef1, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l3, l3, 2 + wnt^0 <= 2*deltaext^0 /\ 2*deltaext^0 <= 3 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, rest remain the same}>
<l3, l3, 4 + wnt^0 <= 2*deltaext^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> -1 + deltaext^0, rest remain the same}>
<l3, l3, 2*deltaext^0 <= 1 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> 1 + deltaext^0, rest remain the same}>
Variables:
__disjvr_0^0, deltaext^0, wnt^0

Precedence: 
Graph 0

Graph 1
<l0, l3, 0 <= deltaext^0 /\ 0 <= wnt^0 /\ deltaext^0 <= 3 /\ wnt^0 <= 3, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 3 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.004989

Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000835s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009435s
Trying to remove transition: <l3, l3, 2*deltaext^0 <= 1 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> 1 + deltaext^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.011114s
Time used: 0.010834
Trying to remove transition: <l3, l3, 4 + wnt^0 <= 2*deltaext^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> -1 + deltaext^0, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008209s
Time used: 0.00764
Trying to remove transition: <l3, l3, 2 + wnt^0 <= 2*deltaext^0 /\ 2*deltaext^0 <= 3 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005353s
Time used: 0.004816
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.022388s
Time used: 0.021872
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001790s
Time used: 4.00051
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.300860s
Time used: 0.294916
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.705596s
Time used: 0.705576

LOG: SAT solveNonLinear - Elapsed time: 1.006457s
Cost: 2; Total time: 1.00049
[31mFailed at location 3: wnt^0 <= 0[0m
[31mFailed at location 3: deltaext^0 <= 1 + wnt^0[0m
Before Improving: 
[36mQuasi-invariant at l3: wnt^0 <= 0[0m
[36mQuasi-invariant at l3: deltaext^0 <= 1 + wnt^0[0m
[36mQuasi-invariant at l3: 0 <= deltaext^0 + wnt^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006621s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002422s
Remaining time after improvement: 0.994871
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l3: wnt^0 <= 1[0m
[36mQuasi-invariant at l3: deltaext^0 <= 1 + wnt^0[0m
[36mQuasi-invariant at l3: 0 <= deltaext^0 + wnt^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= deltaext^0 + wnt^0 /\ deltaext^0 <= 1 + wnt^0 /\ wnt^0 <= 1 /\ 2 + wnt^0 <= 2*deltaext^0 /\ 2*deltaext^0 <= 3 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 4 + wnt^0 <= 2*deltaext^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> -1 + deltaext^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= deltaext^0 + wnt^0 /\ deltaext^0 <= 1 + wnt^0 /\ 2*deltaext^0 <= 1 + wnt^0 /\ wnt^0 <= 1 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> 1 + deltaext^0, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= deltaext^0 + wnt^0 /\ deltaext^0 <= 1 + wnt^0 /\ wnt^0 <= 1 /\ 2 + wnt^0 <= 2*deltaext^0 /\ 2*deltaext^0 <= 3 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l3, l3, 4 + wnt^0 <= 2*deltaext^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> -1 + deltaext^0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l3, l3, 0 <= deltaext^0 + wnt^0 /\ deltaext^0 <= 1 + wnt^0 /\ 2*deltaext^0 <= 1 + wnt^0 /\ wnt^0 <= 1 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> 1 + deltaext^0, rest remain the same}>
New Graphs: 
Transitions:
<l3, l3, 0 <= deltaext^0 + wnt^0 /\ deltaext^0 <= 1 + wnt^0 /\ wnt^0 <= 1 /\ 2 + wnt^0 <= 2*deltaext^0 /\ 2*deltaext^0 <= 3 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, rest remain the same}>
<l3, l3, 0 <= deltaext^0 + wnt^0 /\ deltaext^0 <= 1 + wnt^0 /\ 2*deltaext^0 <= 1 + wnt^0 /\ wnt^0 <= 1 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> 1 + deltaext^0, rest remain the same}>
Variables:
__disjvr_0^0, deltaext^0, wnt^0
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001068s
[33mRanking function: [36m(15 / 2) - 15*deltaext^0 + (15 / 2)*wnt^0[0m
New Graphs: 
Transitions:
<l3, l3, 0 <= deltaext^0 + wnt^0 /\ deltaext^0 <= 1 + wnt^0 /\ wnt^0 <= 1 /\ 2 + wnt^0 <= 2*deltaext^0 /\ 2*deltaext^0 <= 3 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, rest remain the same}>
Variables:
__disjvr_0^0, deltaext^0, wnt^0
Checking conditional termination of SCC {l3}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000423s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001578s
Trying to remove transition: <l3, l3, 0 <= deltaext^0 + wnt^0 /\ deltaext^0 <= 1 + wnt^0 /\ wnt^0 <= 1 /\ 2 + wnt^0 <= 2*deltaext^0 /\ 2*deltaext^0 <= 3 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003530s
Time used: 0.003428
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.024138s
Time used: 0.023858
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001627s
Time used: 4.00109
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005324s
Time used: 1.00001
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.009337s
Time used: 0.005354
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l3, 0 <= deltaext^0 /\ 0 <= wnt^0 /\ deltaext^0 <= 3 /\ wnt^0 <= 3, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l3, 0 <= deltaext^0 /\ 0 <= wnt^0 /\ deltaext^0 <= 3 /\ wnt^0 <= 3, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000958s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001000s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l3, l3, 2 + wnt^0 <= 2*deltaext^0 /\ 2*deltaext^0 <= 3 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, rest remain the same}>
<l3, l3, 4 + wnt^0 <= 2*deltaext^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> -1 + deltaext^0, rest remain the same}>
<l3, l3, 2*deltaext^0 <= 1 + wnt^0 /\ __disjvr_0^0 = undef1, {__disjvr_0^0 -> undef1, deltaext^0 -> 1 + deltaext^0, rest remain the same}>
Variables:
__disjvr_0^0, deltaext^0, wnt^0

Checking conditional non-termination of SCC {l3}...
> No exit transition to close.
Checking that every undef value has an assignment...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001105s
Calling reachability with...
Transition: <l3, end, true, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l3, end, true, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l3, 0 <= deltaext^0 /\ 0 <= wnt^0 /\ deltaext^0 <= 3 /\ wnt^0 <= 3, {all remain the same}>
Conditions: 
OPEN EXITS: 
<l0, l3, 0 <= deltaext^0 /\ 0 <= wnt^0 /\ deltaext^0 <= 3 /\ wnt^0 <= 3, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
