WORST_CASE(Omega(0),?)

Initial ITS
Start location: l6
   0: l0 -> l1 : i^0'=i^post0, i5^0'=i5^post0, tmp^0'=tmp^post0, (50-i5^0 <= 0 /\ tmp^0-tmp^post0 == 0 /\ i^post0 == 0 /\ i5^0-i5^post0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post1, i5^0'=i5^post1, tmp^0'=tmp^post1, (-1-i5^0+i5^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ i^0-i^post1 == 0 /\ -49+i5^0 <= 0), cost: 1
   3: l1 -> l3 : i^0'=i^post3, i5^0'=i5^post3, tmp^0'=tmp^post3, (-i5^post3+i5^0 == 0 /\ -i^post3+i^0 == 0 /\ -tmp^post3+tmp^0 == 0), cost: 1
   2: l2 -> l0 : i^0'=i^post2, i5^0'=i5^post2, tmp^0'=tmp^post2, (tmp^0-tmp^post2 == 0 /\ i^0-i^post2 == 0 /\ -i5^post2+i5^0 == 0), cost: 1
   4: l3 -> l4 : i^0'=i^post4, i5^0'=i5^post4, tmp^0'=tmp^post4, (-i5^post4+i5^0 == 0 /\ 50-i^0 <= 0 /\ -tmp^post4+tmp^0 == 0 /\ -i^post4+i^0 == 0), cost: 1
   5: l3 -> l1 : i^0'=i^post5, i5^0'=i5^post5, tmp^0'=tmp^post5, (-i5^post5+i5^0 == 0 /\ -1+i^post5-i^0 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -49+i^0 <= 0), cost: 1
   6: l5 -> l2 : i^0'=i^post6, i5^0'=i5^post6, tmp^0'=tmp^post6, (0 == 0 /\ i5^10 == 0 /\ i^post6 == 0 /\ i5^post6 == 0), cost: 1
   7: l6 -> l5 : i^0'=i^post7, i5^0'=i5^post7, tmp^0'=tmp^post7, (i5^0-i5^post7 == 0 /\ -tmp^post7+tmp^0 == 0 /\ i^0-i^post7 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l6
   0: l0 -> l1 : i^0'=i^post0, i5^0'=i5^post0, tmp^0'=tmp^post0, (50-i5^0 <= 0 /\ tmp^0-tmp^post0 == 0 /\ i^post0 == 0 /\ i5^0-i5^post0 == 0), cost: 1
   1: l0 -> l2 : i^0'=i^post1, i5^0'=i5^post1, tmp^0'=tmp^post1, (-1-i5^0+i5^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ i^0-i^post1 == 0 /\ -49+i5^0 <= 0), cost: 1
   3: l1 -> l3 : i^0'=i^post3, i5^0'=i5^post3, tmp^0'=tmp^post3, (-i5^post3+i5^0 == 0 /\ -i^post3+i^0 == 0 /\ -tmp^post3+tmp^0 == 0), cost: 1
   2: l2 -> l0 : i^0'=i^post2, i5^0'=i5^post2, tmp^0'=tmp^post2, (tmp^0-tmp^post2 == 0 /\ i^0-i^post2 == 0 /\ -i5^post2+i5^0 == 0), cost: 1
   5: l3 -> l1 : i^0'=i^post5, i5^0'=i5^post5, tmp^0'=tmp^post5, (-i5^post5+i5^0 == 0 /\ -1+i^post5-i^0 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -49+i^0 <= 0), cost: 1
   6: l5 -> l2 : i^0'=i^post6, i5^0'=i5^post6, tmp^0'=tmp^post6, (0 == 0 /\ i5^10 == 0 /\ i^post6 == 0 /\ i5^post6 == 0), cost: 1
   7: l6 -> l5 : i^0'=i^post7, i5^0'=i5^post7, tmp^0'=tmp^post7, (i5^0-i5^post7 == 0 /\ -tmp^post7+tmp^0 == 0 /\ i^0-i^post7 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : i^0'=i^post0, i5^0'=i5^post0, tmp^0'=tmp^post0, (50-i5^0 <= 0 /\ tmp^0-tmp^post0 == 0 /\ i^post0 == 0 /\ i5^0-i5^post0 == 0), cost: 1
New rule:
l0 -> l1 : i^0'=0, -50+i5^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : i^0'=i^post1, i5^0'=i5^post1, tmp^0'=tmp^post1, (-1-i5^0+i5^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ i^0-i^post1 == 0 /\ -49+i5^0 <= 0), cost: 1
New rule:
l0 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : i^0'=i^post2, i5^0'=i5^post2, tmp^0'=tmp^post2, (tmp^0-tmp^post2 == 0 /\ i^0-i^post2 == 0 /\ -i5^post2+i5^0 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l3 : i^0'=i^post3, i5^0'=i5^post3, tmp^0'=tmp^post3, (-i5^post3+i5^0 == 0 /\ -i^post3+i^0 == 0 /\ -tmp^post3+tmp^0 == 0), cost: 1
New rule:
l1 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l1 : i^0'=i^post5, i5^0'=i5^post5, tmp^0'=tmp^post5, (-i5^post5+i5^0 == 0 /\ -1+i^post5-i^0 == 0 /\ -tmp^post5+tmp^0 == 0 /\ -49+i^0 <= 0), cost: 1
New rule:
l3 -> l1 : i^0'=1+i^0, -49+i^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l2 : i^0'=i^post6, i5^0'=i5^post6, tmp^0'=tmp^post6, (0 == 0 /\ i5^10 == 0 /\ i^post6 == 0 /\ i5^post6 == 0), cost: 1
New rule:
l5 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : i^0'=i^post7, i5^0'=i5^post7, tmp^0'=tmp^post7, (i5^0-i5^post7 == 0 /\ -tmp^post7+tmp^0 == 0 /\ i^0-i^post7 == 0), cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
   8: l0 -> l1 : i^0'=0, -50+i5^0 >= 0, cost: 1
   9: l0 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 1
  11: l1 -> l3 : TRUE, cost: 1
  10: l2 -> l0 : TRUE, cost: 1
  12: l3 -> l1 : i^0'=1+i^0, -49+i^0 <= 0, cost: 1
  13: l5 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 1
  14: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 1
New rule:
l6 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 13 14

Eliminating location l3 by chaining:

Applied chaining
First rule:
l1 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l1 : i^0'=1+i^0, -49+i^0 <= 0, cost: 1
New rule:
l1 -> l1 : i^0'=1+i^0, -49+i^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 11 12

Eliminated locations on linear paths
Start location: l6
   8: l0 -> l1 : i^0'=0, -50+i5^0 >= 0, cost: 1
   9: l0 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 1
  16: l1 -> l1 : i^0'=1+i^0, -49+i^0 <= 0, cost: 2
  10: l2 -> l0 : TRUE, cost: 1
  15: l6 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : i^0'=1+i^0, -49+i^0 <= 0, cost: 2
New rule:
l1 -> l1 : i^0'=i^0+n, (50-i^0-n >= 0 /\ n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_OibmkK.txt

Applied instantiation
Original rule:
l1 -> l1 : i^0'=i^0+n, (50-i^0-n >= 0 /\ n >= 0), cost: 2*n
New rule:
l1 -> l1 : i^0'=50, (0 >= 0 /\ 50-i^0 >= 0), cost: 100-2*i^0

Applied simplification
Original rule:
l1 -> l1 : i^0'=50, (0 >= 0 /\ 50-i^0 >= 0), cost: 100-2*i^0
New rule:
l1 -> l1 : i^0'=50, -50+i^0 <= 0, cost: 100-2*i^0

Applied deletion
Removed the following rules: 16

Accelerated simple loops
Start location: l6
   8: l0 -> l1 : i^0'=0, -50+i5^0 >= 0, cost: 1
   9: l0 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 1
  18: l1 -> l1 : i^0'=50, -50+i^0 <= 0, cost: 100-2*i^0
  10: l2 -> l0 : TRUE, cost: 1
  15: l6 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Applied chaining
First rule:
l0 -> l1 : i^0'=0, -50+i5^0 >= 0, cost: 1
Second rule:
l1 -> l1 : i^0'=50, -50+i^0 <= 0, cost: 100-2*i^0
New rule:
l0 -> l1 : i^0'=50, -50+i5^0 >= 0, cost: 101

Applied deletion
Removed the following rules: 18

Chained accelerated rules with incoming rules
Start location: l6
   8: l0 -> l1 : i^0'=0, -50+i5^0 >= 0, cost: 1
   9: l0 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 1
  19: l0 -> l1 : i^0'=50, -50+i5^0 >= 0, cost: 101
  10: l2 -> l0 : TRUE, cost: 1
  15: l6 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l6
   9: l0 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 1
  10: l2 -> l0 : TRUE, cost: 1
  15: l6 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 1
New rule:
l2 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 9 10

Eliminated locations on linear paths
Start location: l6
  20: l2 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 2
  15: l6 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Applied acceleration
Original rule:
l2 -> l2 : i5^0'=1+i5^0, -49+i5^0 <= 0, cost: 2
New rule:
l2 -> l2 : i5^0'=n0+i5^0, (n0 >= 0 /\ 50-n0-i5^0 >= 0), cost: 2*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JkPGFO.txt

Applied instantiation
Original rule:
l2 -> l2 : i5^0'=n0+i5^0, (n0 >= 0 /\ 50-n0-i5^0 >= 0), cost: 2*n0
New rule:
l2 -> l2 : i5^0'=50, (0 >= 0 /\ 50-i5^0 >= 0), cost: 100-2*i5^0

Applied simplification
Original rule:
l2 -> l2 : i5^0'=50, (0 >= 0 /\ 50-i5^0 >= 0), cost: 100-2*i5^0
New rule:
l2 -> l2 : i5^0'=50, -50+i5^0 <= 0, cost: 100-2*i5^0

Applied deletion
Removed the following rules: 20

Accelerated simple loops
Start location: l6
  22: l2 -> l2 : i5^0'=50, -50+i5^0 <= 0, cost: 100-2*i5^0
  15: l6 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2


Applied chaining
First rule:
l6 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2
Second rule:
l2 -> l2 : i5^0'=50, -50+i5^0 <= 0, cost: 100-2*i5^0
New rule:
l6 -> l2 : i^0'=0, i5^0'=50, tmp^0'=tmp^post6, (0 == 0 /\ -50 <= 0), cost: 102

Applied deletion
Removed the following rules: 22

Chained accelerated rules with incoming rules
Start location: l6
  15: l6 -> l2 : i^0'=0, i5^0'=0, tmp^0'=tmp^post6, 0 == 0, cost: 2
  23: l6 -> l2 : i^0'=0, i5^0'=50, tmp^0'=tmp^post6, (0 == 0 /\ -50 <= 0), cost: 102


Removed unreachable locations and irrelevant leafs
Start location: l6
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

