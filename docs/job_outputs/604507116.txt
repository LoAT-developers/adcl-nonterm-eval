NO

Initial ITS

Start location: l13
Program variables: __disjvr_0^0 __disjvr_1^0 __disjvr_2^0 result_4^0 tmp_7^0 x_5^0 y_6^0
   0: l0 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, result_4^0'=result_4^post1, tmp_7^0'=tmp_7^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (-__disjvr_2^post1+__disjvr_2^0 == 0 /\ -result_4^post1+result_4^0 == 0 /\ -__disjvr_1^post1+__disjvr_1^0 == 0 /\ x_5^0-x_5^post1 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ tmp_7^0-tmp_7^post1 == 0 /\ -y_6^post1+y_6^0 == 0), cost: 1
   1: l1 -> l3 : __disjvr_0^0'=__disjvr_0^post2, __disjvr_1^0'=__disjvr_1^post2, __disjvr_2^0'=__disjvr_2^post2, result_4^0'=result_4^post2, tmp_7^0'=tmp_7^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (-x_5^post2+x_5^0 == 0 /\ y_6^0-y_6^post2 == 0 /\ tmp_7^0-tmp_7^post2 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ -__disjvr_2^post2+__disjvr_2^0 == 0), cost: 1
   4: l1 -> l5 : __disjvr_0^0'=__disjvr_0^post5, __disjvr_1^0'=__disjvr_1^post5, __disjvr_2^0'=__disjvr_2^post5, result_4^0'=result_4^post5, tmp_7^0'=tmp_7^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ __disjvr_2^0-__disjvr_2^post5 == 0 /\ -y_6^0+x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ tmp_7^post5 <= 0 /\ y_6^0-x_5^0 <= 0 /\ -tmp_7^post5 <= 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0), cost: 1
   6: l1 -> l7 : __disjvr_0^0'=__disjvr_0^post7, __disjvr_1^0'=__disjvr_1^post7, __disjvr_2^0'=__disjvr_2^post7, result_4^0'=result_4^post7, tmp_7^0'=tmp_7^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -result_4^post7+result_4^0 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0), cost: 1
  10: l1 -> l9 : __disjvr_0^0'=__disjvr_0^post11, __disjvr_1^0'=__disjvr_1^post11, __disjvr_2^0'=__disjvr_2^post11, result_4^0'=result_4^post11, tmp_7^0'=tmp_7^post11, x_5^0'=x_5^post11, y_6^0'=y_6^post11, (0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ -__disjvr_2^post11+__disjvr_2^0 == 0 /\ -tmp_7^post11 <= 0 /\ -y_6^post11+y_6^0 == 0 /\ -x_5^post11+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ tmp_7^post11 <= 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -result_4^post11+result_4^0 == 0), cost: 1
  12: l1 -> l11 : __disjvr_0^0'=__disjvr_0^post13, __disjvr_1^0'=__disjvr_1^post13, __disjvr_2^0'=__disjvr_2^post13, result_4^0'=result_4^post13, tmp_7^0'=tmp_7^post13, x_5^0'=x_5^post13, y_6^0'=y_6^post13, (0 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ -x_5^post13+x_5^0 == 0 /\ y_6^0-y_6^post13 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
   2: l3 -> l4 : __disjvr_0^0'=__disjvr_0^post3, __disjvr_1^0'=__disjvr_1^post3, __disjvr_2^0'=__disjvr_2^post3, result_4^0'=result_4^post3, tmp_7^0'=tmp_7^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (__disjvr_0^0-__disjvr_0^post3 == 0 /\ -x_5^post3+x_5^0 == 0 /\ y_6^0-y_6^post3 == 0 /\ __disjvr_1^0-__disjvr_1^post3 == 0 /\ -__disjvr_2^post3+__disjvr_2^0 == 0 /\ tmp_7^0-tmp_7^post3 == 0 /\ -__disjvr_0^0+__disjvr_0^post3 == 0 /\ -result_4^post3+result_4^0 == 0), cost: 1
   3: l4 -> l2 : __disjvr_0^0'=__disjvr_0^post4, __disjvr_1^0'=__disjvr_1^post4, __disjvr_2^0'=__disjvr_2^post4, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ -tmp_7^post4+tmp_7^0 == 0 /\ -__disjvr_2^post4+__disjvr_2^0 == 0 /\ -__disjvr_1^post4+__disjvr_1^0 == 0 /\ y_6^0-y_6^post4 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ -x_5^post4+x_5^0 == 0), cost: 1
   5: l5 -> l1 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, result_4^0'=result_4^post6, tmp_7^0'=tmp_7^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (tmp_7^0-tmp_7^post6 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ -y_6^post6+y_6^0 == 0 /\ __disjvr_2^0-__disjvr_2^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -__disjvr_1^post6+__disjvr_1^0 == 0 /\ x_5^0-x_5^post6 == 0), cost: 1
   7: l7 -> l8 : __disjvr_0^0'=__disjvr_0^post8, __disjvr_1^0'=__disjvr_1^post8, __disjvr_2^0'=__disjvr_2^post8, result_4^0'=result_4^post8, tmp_7^0'=tmp_7^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (-__disjvr_1^post8+__disjvr_1^0 == 0 /\ -__disjvr_2^post8+__disjvr_2^0 == 0 /\ -x_5^post8+x_5^0 == 0 /\ __disjvr_1^post8-__disjvr_1^0 == 0 /\ result_4^0-result_4^post8 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0 /\ y_6^0-y_6^post8 == 0 /\ -tmp_7^post8+tmp_7^0 == 0), cost: 1
   8: l8 -> l6 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, result_4^0'=result_4^post9, tmp_7^0'=tmp_7^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (__disjvr_2^0-__disjvr_2^post9 == 0 /\ result_4^0-result_4^post9 == 0 /\ -1+x_5^post9-x_5^0 == 0 /\ tmp_7^0-tmp_7^post9 == 0 /\ -__disjvr_1^post9+__disjvr_1^0 == 0 /\ -__disjvr_0^post9+__disjvr_0^0 == 0 /\ -y_6^post9+y_6^0 == 0), cost: 1
   9: l6 -> l1 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, result_4^0'=result_4^post10, tmp_7^0'=tmp_7^post10, x_5^0'=x_5^post10, y_6^0'=y_6^post10, (-y_6^post10+y_6^0 == 0 /\ -__disjvr_1^post10+__disjvr_1^0 == 0 /\ -result_4^post10+result_4^0 == 0 /\ __disjvr_2^0-__disjvr_2^post10 == 0 /\ x_5^0-x_5^post10 == 0 /\ tmp_7^0-tmp_7^post10 == 0 /\ __disjvr_0^0-__disjvr_0^post10 == 0), cost: 1
  11: l9 -> l1 : __disjvr_0^0'=__disjvr_0^post12, __disjvr_1^0'=__disjvr_1^post12, __disjvr_2^0'=__disjvr_2^post12, result_4^0'=result_4^post12, tmp_7^0'=tmp_7^post12, x_5^0'=x_5^post12, y_6^0'=y_6^post12, (__disjvr_0^0-__disjvr_0^post12 == 0 /\ y_6^0-y_6^post12 == 0 /\ tmp_7^0-tmp_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0 /\ -result_4^post12+result_4^0 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ -x_5^post12+x_5^0 == 0), cost: 1
  13: l11 -> l12 : __disjvr_0^0'=__disjvr_0^post14, __disjvr_1^0'=__disjvr_1^post14, __disjvr_2^0'=__disjvr_2^post14, result_4^0'=result_4^post14, tmp_7^0'=tmp_7^post14, x_5^0'=x_5^post14, y_6^0'=y_6^post14, (result_4^0-result_4^post14 == 0 /\ -__disjvr_1^post14+__disjvr_1^0 == 0 /\ y_6^0-y_6^post14 == 0 /\ tmp_7^0-tmp_7^post14 == 0 /\ __disjvr_2^post14-__disjvr_2^0 == 0 /\ -x_5^post14+x_5^0 == 0 /\ -__disjvr_2^post14+__disjvr_2^0 == 0 /\ __disjvr_0^0-__disjvr_0^post14 == 0), cost: 1
  14: l12 -> l10 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, result_4^0'=result_4^post15, tmp_7^0'=tmp_7^post15, x_5^0'=x_5^post15, y_6^0'=y_6^post15, (-__disjvr_0^post15+__disjvr_0^0 == 0 /\ -__disjvr_1^post15+__disjvr_1^0 == 0 /\ tmp_7^0-tmp_7^post15 == 0 /\ -result_4^post15+result_4^0 == 0 /\ -y_6^post15+y_6^0 == 0 /\ -1+x_5^post15-x_5^0 == 0 /\ __disjvr_2^0-__disjvr_2^post15 == 0), cost: 1
  15: l10 -> l1 : __disjvr_0^0'=__disjvr_0^post16, __disjvr_1^0'=__disjvr_1^post16, __disjvr_2^0'=__disjvr_2^post16, result_4^0'=result_4^post16, tmp_7^0'=tmp_7^post16, x_5^0'=x_5^post16, y_6^0'=y_6^post16, (y_6^0-y_6^post16 == 0 /\ -x_5^post16+x_5^0 == 0 /\ -result_4^post16+result_4^0 == 0 /\ -__disjvr_1^post16+__disjvr_1^0 == 0 /\ __disjvr_2^0-__disjvr_2^post16 == 0 /\ __disjvr_0^0-__disjvr_0^post16 == 0 /\ tmp_7^0-tmp_7^post16 == 0), cost: 1
  16: l13 -> l0 : __disjvr_0^0'=__disjvr_0^post17, __disjvr_1^0'=__disjvr_1^post17, __disjvr_2^0'=__disjvr_2^post17, result_4^0'=result_4^post17, tmp_7^0'=tmp_7^post17, x_5^0'=x_5^post17, y_6^0'=y_6^post17, (-tmp_7^post17+tmp_7^0 == 0 /\ -__disjvr_1^post17+__disjvr_1^0 == 0 /\ -__disjvr_2^post17+__disjvr_2^0 == 0 /\ result_4^0-result_4^post17 == 0 /\ y_6^0-y_6^post17 == 0 /\ -x_5^post17+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post17 == 0), cost: 1

Chained Linear Paths

Start location: l13
Program variables: __disjvr_0^0 __disjvr_1^0 __disjvr_2^0 result_4^0 tmp_7^0 x_5^0 y_6^0
  19: l1 -> l1 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, result_4^0'=result_4^post6, tmp_7^0'=tmp_7^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ __disjvr_2^post5-__disjvr_2^post6 == 0 /\ __disjvr_2^0-__disjvr_2^post5 == 0 /\ -__disjvr_0^post6+__disjvr_0^post5 == 0 /\ -y_6^0+x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ tmp_7^post5 <= 0 /\ __disjvr_1^post5-__disjvr_1^post6 == 0 /\ y_6^0-x_5^0 <= 0 /\ -result_4^post6+result_4^post5 == 0 /\ -tmp_7^post5 <= 0 /\ x_5^post5-x_5^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -y_6^post6+y_6^post5 == 0 /\ tmp_7^post5-tmp_7^post6 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0), cost: 1
  21: l1 -> l1 : __disjvr_0^0'=__disjvr_0^post12, __disjvr_1^0'=__disjvr_1^post12, __disjvr_2^0'=__disjvr_2^post12, result_4^0'=result_4^post12, tmp_7^0'=tmp_7^post12, x_5^0'=x_5^post12, y_6^0'=y_6^post12, (0 == 0 /\ tmp_7^post11-tmp_7^post12 == 0 /\ result_4^post11-result_4^post12 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_2^post11-__disjvr_2^post12 == 0 /\ -__disjvr_2^post11+__disjvr_2^0 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -tmp_7^post11 <= 0 /\ -y_6^post11+y_6^0 == 0 /\ -x_5^post11+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ tmp_7^post11 <= 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -result_4^post11+result_4^0 == 0 /\ __disjvr_0^post11-__disjvr_0^post12 == 0 /\ y_6^post11-y_6^post12 == 0 /\ __disjvr_1^post11-__disjvr_1^post12 == 0), cost: 1
  23: l1 -> l2 : __disjvr_0^0'=__disjvr_0^post4, __disjvr_1^0'=__disjvr_1^post4, __disjvr_2^0'=__disjvr_2^post4, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ __disjvr_1^post2-__disjvr_1^post3 == 0 /\ y_6^post2-y_6^post3 == 0 /\ -x_5^post2+x_5^0 == 0 /\ __disjvr_2^post2-__disjvr_2^post3 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ tmp_7^0-tmp_7^post2 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ result_4^post2-result_4^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ __disjvr_0^post3-__disjvr_0^post4 == 0 /\ x_5^post3-x_5^post4 == 0 /\ tmp_7^post2-tmp_7^post3 == 0 /\ -__disjvr_1^post4+__disjvr_1^post3 == 0 /\ __disjvr_2^post3-__disjvr_2^post4 == 0 /\ -tmp_7^post4+tmp_7^post3 == 0 /\ x_5^post2-x_5^post3 == 0 /\ y_6^post3-y_6^post4 == 0 /\ -__disjvr_2^post2+__disjvr_2^0 == 0), cost: 1
  26: l1 -> l1 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, result_4^0'=result_4^post10, tmp_7^0'=tmp_7^post10, x_5^0'=x_5^post10, y_6^0'=y_6^post10, (0 == 0 /\ -1-x_5^post8+x_5^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post9 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ y_6^post9-y_6^post10 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ __disjvr_2^post9-__disjvr_2^post10 == 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ -y_6^post9+y_6^post8 == 0 /\ __disjvr_1^post9-__disjvr_1^post10 == 0 /\ y_6^0-x_5^0 <= 0 /\ tmp_7^post9-tmp_7^post10 == 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ tmp_7^post8-tmp_7^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ x_5^post9-x_5^post10 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ -result_4^post10+result_4^post9 == 0 /\ result_4^post8-result_4^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ __disjvr_0^post9-__disjvr_0^post10 == 0), cost: 1
  27: l1 -> l1 : __disjvr_0^0'=__disjvr_0^post16, __disjvr_1^0'=__disjvr_1^post16, __disjvr_2^0'=__disjvr_2^post16, result_4^0'=result_4^post16, tmp_7^0'=tmp_7^post16, x_5^0'=x_5^post16, y_6^0'=y_6^post16, (0 == 0 /\ -__disjvr_0^post15+__disjvr_0^post14 == 0 /\ __disjvr_0^post13-__disjvr_0^post14 == 0 /\ __disjvr_2^post14-__disjvr_2^post15 == 0 /\ -tmp_7^post14+tmp_7^post13 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_1^post14-__disjvr_1^post15 == 0 /\ result_4^post13-result_4^post14 == 0 /\ tmp_7^post14-tmp_7^post15 == 0 /\ result_4^post15-result_4^post16 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ x_5^post13-x_5^post14 == 0 /\ __disjvr_0^post15-__disjvr_0^post16 == 0 /\ -x_5^post16+x_5^post15 == 0 /\ __disjvr_1^post15-__disjvr_1^post16 == 0 /\ y_6^post13-y_6^post14 == 0 /\ -y_6^post15+y_6^post14 == 0 /\ -1-x_5^post14+x_5^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^post14 == 0 /\ y_6^post15-y_6^post16 == 0 /\ -x_5^post13+x_5^0 == 0 /\ __disjvr_2^post15-__disjvr_2^post16 == 0 /\ -result_4^post15+result_4^post14 == 0 /\ y_6^0-y_6^post13 == 0 /\ __disjvr_2^post13-__disjvr_2^post14 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ tmp_7^post15-tmp_7^post16 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
  17: l13 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, result_4^0'=result_4^post1, tmp_7^0'=tmp_7^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (tmp_7^post17-tmp_7^post1 == 0 /\ -__disjvr_0^post1+__disjvr_0^post17 == 0 /\ -result_4^post1+result_4^post17 == 0 /\ -tmp_7^post17+tmp_7^0 == 0 /\ -y_6^post1+y_6^post17 == 0 /\ __disjvr_1^post17-__disjvr_1^post1 == 0 /\ -__disjvr_1^post17+__disjvr_1^0 == 0 /\ -__disjvr_2^post17+__disjvr_2^0 == 0 /\ result_4^0-result_4^post17 == 0 /\ y_6^0-y_6^post17 == 0 /\ -x_5^post17+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post17 == 0 /\ -__disjvr_2^post1+__disjvr_2^post17 == 0 /\ x_5^post17-x_5^post1 == 0), cost: 1

	Eliminating location l0 by chaining:

	Applied chaining

	First rule:
	l13 -> l0 : __disjvr_0^0'=__disjvr_0^post17, __disjvr_1^0'=__disjvr_1^post17, __disjvr_2^0'=__disjvr_2^post17, result_4^0'=result_4^post17, tmp_7^0'=tmp_7^post17, x_5^0'=x_5^post17, y_6^0'=y_6^post17, (-tmp_7^post17+tmp_7^0 == 0 /\ -__disjvr_1^post17+__disjvr_1^0 == 0 /\ -__disjvr_2^post17+__disjvr_2^0 == 0 /\ result_4^0-result_4^post17 == 0 /\ y_6^0-y_6^post17 == 0 /\ -x_5^post17+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post17 == 0), cost: 1
	Second rule:
	l0 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, result_4^0'=result_4^post1, tmp_7^0'=tmp_7^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (-__disjvr_2^post1+__disjvr_2^0 == 0 /\ -result_4^post1+result_4^0 == 0 /\ -__disjvr_1^post1+__disjvr_1^0 == 0 /\ x_5^0-x_5^post1 == 0 /\ __disjvr_0^0-__disjvr_0^post1 == 0 /\ tmp_7^0-tmp_7^post1 == 0 /\ -y_6^post1+y_6^0 == 0), cost: 1
	New rule:
	l13 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, result_4^0'=result_4^post1, tmp_7^0'=tmp_7^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (tmp_7^post17-tmp_7^post1 == 0 /\ -__disjvr_0^post1+__disjvr_0^post17 == 0 /\ -result_4^post1+result_4^post17 == 0 /\ -tmp_7^post17+tmp_7^0 == 0 /\ -y_6^post1+y_6^post17 == 0 /\ __disjvr_1^post17-__disjvr_1^post1 == 0 /\ -__disjvr_1^post17+__disjvr_1^0 == 0 /\ -__disjvr_2^post17+__disjvr_2^0 == 0 /\ result_4^0-result_4^post17 == 0 /\ y_6^0-y_6^post17 == 0 /\ -x_5^post17+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post17 == 0 /\ -__disjvr_2^post1+__disjvr_2^post17 == 0 /\ x_5^post17-x_5^post1 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 16
	
	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l1 -> l3 : __disjvr_0^0'=__disjvr_0^post2, __disjvr_1^0'=__disjvr_1^post2, __disjvr_2^0'=__disjvr_2^post2, result_4^0'=result_4^post2, tmp_7^0'=tmp_7^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (-x_5^post2+x_5^0 == 0 /\ y_6^0-y_6^post2 == 0 /\ tmp_7^0-tmp_7^post2 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ -__disjvr_2^post2+__disjvr_2^0 == 0), cost: 1
	Second rule:
	l3 -> l4 : __disjvr_0^0'=__disjvr_0^post3, __disjvr_1^0'=__disjvr_1^post3, __disjvr_2^0'=__disjvr_2^post3, result_4^0'=result_4^post3, tmp_7^0'=tmp_7^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (__disjvr_0^0-__disjvr_0^post3 == 0 /\ -x_5^post3+x_5^0 == 0 /\ y_6^0-y_6^post3 == 0 /\ __disjvr_1^0-__disjvr_1^post3 == 0 /\ -__disjvr_2^post3+__disjvr_2^0 == 0 /\ tmp_7^0-tmp_7^post3 == 0 /\ -__disjvr_0^0+__disjvr_0^post3 == 0 /\ -result_4^post3+result_4^0 == 0), cost: 1
	New rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^post3, __disjvr_1^0'=__disjvr_1^post3, __disjvr_2^0'=__disjvr_2^post3, result_4^0'=result_4^post3, tmp_7^0'=tmp_7^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (__disjvr_1^post2-__disjvr_1^post3 == 0 /\ y_6^post2-y_6^post3 == 0 /\ -x_5^post2+x_5^0 == 0 /\ __disjvr_2^post2-__disjvr_2^post3 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ tmp_7^0-tmp_7^post2 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ result_4^post2-result_4^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ tmp_7^post2-tmp_7^post3 == 0 /\ x_5^post2-x_5^post3 == 0 /\ -__disjvr_2^post2+__disjvr_2^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 1 2
	
	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l1 -> l5 : __disjvr_0^0'=__disjvr_0^post5, __disjvr_1^0'=__disjvr_1^post5, __disjvr_2^0'=__disjvr_2^post5, result_4^0'=result_4^post5, tmp_7^0'=tmp_7^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ __disjvr_2^0-__disjvr_2^post5 == 0 /\ -y_6^0+x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ tmp_7^post5 <= 0 /\ y_6^0-x_5^0 <= 0 /\ -tmp_7^post5 <= 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0), cost: 1
	Second rule:
	l5 -> l1 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, result_4^0'=result_4^post6, tmp_7^0'=tmp_7^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (tmp_7^0-tmp_7^post6 == 0 /\ -__disjvr_0^post6+__disjvr_0^0 == 0 /\ -y_6^post6+y_6^0 == 0 /\ __disjvr_2^0-__disjvr_2^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -__disjvr_1^post6+__disjvr_1^0 == 0 /\ x_5^0-x_5^post6 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, result_4^0'=result_4^post6, tmp_7^0'=tmp_7^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ __disjvr_2^post5-__disjvr_2^post6 == 0 /\ __disjvr_2^0-__disjvr_2^post5 == 0 /\ -__disjvr_0^post6+__disjvr_0^post5 == 0 /\ -y_6^0+x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ tmp_7^post5 <= 0 /\ __disjvr_1^post5-__disjvr_1^post6 == 0 /\ y_6^0-x_5^0 <= 0 /\ -result_4^post6+result_4^post5 == 0 /\ -tmp_7^post5 <= 0 /\ x_5^post5-x_5^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -y_6^post6+y_6^post5 == 0 /\ tmp_7^post5-tmp_7^post6 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location l7 by chaining:

	Applied chaining

	First rule:
	l1 -> l7 : __disjvr_0^0'=__disjvr_0^post7, __disjvr_1^0'=__disjvr_1^post7, __disjvr_2^0'=__disjvr_2^post7, result_4^0'=result_4^post7, tmp_7^0'=tmp_7^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -result_4^post7+result_4^0 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0), cost: 1
	Second rule:
	l7 -> l8 : __disjvr_0^0'=__disjvr_0^post8, __disjvr_1^0'=__disjvr_1^post8, __disjvr_2^0'=__disjvr_2^post8, result_4^0'=result_4^post8, tmp_7^0'=tmp_7^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (-__disjvr_1^post8+__disjvr_1^0 == 0 /\ -__disjvr_2^post8+__disjvr_2^0 == 0 /\ -x_5^post8+x_5^0 == 0 /\ __disjvr_1^post8-__disjvr_1^0 == 0 /\ result_4^0-result_4^post8 == 0 /\ __disjvr_0^0-__disjvr_0^post8 == 0 /\ y_6^0-y_6^post8 == 0 /\ -tmp_7^post8+tmp_7^0 == 0), cost: 1
	New rule:
	l1 -> l8 : __disjvr_0^0'=__disjvr_0^post8, __disjvr_1^0'=__disjvr_1^post8, __disjvr_2^0'=__disjvr_2^post8, result_4^0'=result_4^post8, tmp_7^0'=tmp_7^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (0 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location l9 by chaining:

	Applied chaining

	First rule:
	l1 -> l9 : __disjvr_0^0'=__disjvr_0^post11, __disjvr_1^0'=__disjvr_1^post11, __disjvr_2^0'=__disjvr_2^post11, result_4^0'=result_4^post11, tmp_7^0'=tmp_7^post11, x_5^0'=x_5^post11, y_6^0'=y_6^post11, (0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ -__disjvr_2^post11+__disjvr_2^0 == 0 /\ -tmp_7^post11 <= 0 /\ -y_6^post11+y_6^0 == 0 /\ -x_5^post11+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ tmp_7^post11 <= 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -result_4^post11+result_4^0 == 0), cost: 1
	Second rule:
	l9 -> l1 : __disjvr_0^0'=__disjvr_0^post12, __disjvr_1^0'=__disjvr_1^post12, __disjvr_2^0'=__disjvr_2^post12, result_4^0'=result_4^post12, tmp_7^0'=tmp_7^post12, x_5^0'=x_5^post12, y_6^0'=y_6^post12, (__disjvr_0^0-__disjvr_0^post12 == 0 /\ y_6^0-y_6^post12 == 0 /\ tmp_7^0-tmp_7^post12 == 0 /\ -__disjvr_2^post12+__disjvr_2^0 == 0 /\ -result_4^post12+result_4^0 == 0 /\ -__disjvr_1^post12+__disjvr_1^0 == 0 /\ -x_5^post12+x_5^0 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post12, __disjvr_1^0'=__disjvr_1^post12, __disjvr_2^0'=__disjvr_2^post12, result_4^0'=result_4^post12, tmp_7^0'=tmp_7^post12, x_5^0'=x_5^post12, y_6^0'=y_6^post12, (0 == 0 /\ tmp_7^post11-tmp_7^post12 == 0 /\ result_4^post11-result_4^post12 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_2^post11-__disjvr_2^post12 == 0 /\ -__disjvr_2^post11+__disjvr_2^0 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -tmp_7^post11 <= 0 /\ -y_6^post11+y_6^0 == 0 /\ -x_5^post11+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ tmp_7^post11 <= 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -result_4^post11+result_4^0 == 0 /\ __disjvr_0^post11-__disjvr_0^post12 == 0 /\ y_6^post11-y_6^post12 == 0 /\ __disjvr_1^post11-__disjvr_1^post12 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 10 11
	
	Eliminating location l11 by chaining:

	Applied chaining

	First rule:
	l1 -> l11 : __disjvr_0^0'=__disjvr_0^post13, __disjvr_1^0'=__disjvr_1^post13, __disjvr_2^0'=__disjvr_2^post13, result_4^0'=result_4^post13, tmp_7^0'=tmp_7^post13, x_5^0'=x_5^post13, y_6^0'=y_6^post13, (0 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ -x_5^post13+x_5^0 == 0 /\ y_6^0-y_6^post13 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
	Second rule:
	l11 -> l12 : __disjvr_0^0'=__disjvr_0^post14, __disjvr_1^0'=__disjvr_1^post14, __disjvr_2^0'=__disjvr_2^post14, result_4^0'=result_4^post14, tmp_7^0'=tmp_7^post14, x_5^0'=x_5^post14, y_6^0'=y_6^post14, (result_4^0-result_4^post14 == 0 /\ -__disjvr_1^post14+__disjvr_1^0 == 0 /\ y_6^0-y_6^post14 == 0 /\ tmp_7^0-tmp_7^post14 == 0 /\ __disjvr_2^post14-__disjvr_2^0 == 0 /\ -x_5^post14+x_5^0 == 0 /\ -__disjvr_2^post14+__disjvr_2^0 == 0 /\ __disjvr_0^0-__disjvr_0^post14 == 0), cost: 1
	New rule:
	l1 -> l12 : __disjvr_0^0'=__disjvr_0^post14, __disjvr_1^0'=__disjvr_1^post14, __disjvr_2^0'=__disjvr_2^post14, result_4^0'=result_4^post14, tmp_7^0'=tmp_7^post14, x_5^0'=x_5^post14, y_6^0'=y_6^post14, (0 == 0 /\ __disjvr_0^post13-__disjvr_0^post14 == 0 /\ -tmp_7^post14+tmp_7^post13 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ result_4^post13-result_4^post14 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ x_5^post13-x_5^post14 == 0 /\ y_6^post13-y_6^post14 == 0 /\ -__disjvr_2^post13+__disjvr_2^post14 == 0 /\ -x_5^post13+x_5^0 == 0 /\ y_6^0-y_6^post13 == 0 /\ __disjvr_2^post13-__disjvr_2^post14 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 12 13
	
	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l1 -> l4 : __disjvr_0^0'=__disjvr_0^post3, __disjvr_1^0'=__disjvr_1^post3, __disjvr_2^0'=__disjvr_2^post3, result_4^0'=result_4^post3, tmp_7^0'=tmp_7^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (__disjvr_1^post2-__disjvr_1^post3 == 0 /\ y_6^post2-y_6^post3 == 0 /\ -x_5^post2+x_5^0 == 0 /\ __disjvr_2^post2-__disjvr_2^post3 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ tmp_7^0-tmp_7^post2 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ result_4^post2-result_4^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ tmp_7^post2-tmp_7^post3 == 0 /\ x_5^post2-x_5^post3 == 0 /\ -__disjvr_2^post2+__disjvr_2^0 == 0), cost: 1
	Second rule:
	l4 -> l2 : __disjvr_0^0'=__disjvr_0^post4, __disjvr_1^0'=__disjvr_1^post4, __disjvr_2^0'=__disjvr_2^post4, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ -tmp_7^post4+tmp_7^0 == 0 /\ -__disjvr_2^post4+__disjvr_2^0 == 0 /\ -__disjvr_1^post4+__disjvr_1^0 == 0 /\ y_6^0-y_6^post4 == 0 /\ __disjvr_0^0-__disjvr_0^post4 == 0 /\ -x_5^post4+x_5^0 == 0), cost: 1
	New rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^post4, __disjvr_1^0'=__disjvr_1^post4, __disjvr_2^0'=__disjvr_2^post4, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ __disjvr_1^post2-__disjvr_1^post3 == 0 /\ y_6^post2-y_6^post3 == 0 /\ -x_5^post2+x_5^0 == 0 /\ __disjvr_2^post2-__disjvr_2^post3 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ tmp_7^0-tmp_7^post2 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ result_4^post2-result_4^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ __disjvr_0^post3-__disjvr_0^post4 == 0 /\ x_5^post3-x_5^post4 == 0 /\ tmp_7^post2-tmp_7^post3 == 0 /\ -__disjvr_1^post4+__disjvr_1^post3 == 0 /\ __disjvr_2^post3-__disjvr_2^post4 == 0 /\ -tmp_7^post4+tmp_7^post3 == 0 /\ x_5^post2-x_5^post3 == 0 /\ y_6^post3-y_6^post4 == 0 /\ -__disjvr_2^post2+__disjvr_2^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 3 18
	
	Eliminating location l8 by chaining:

	Applied chaining

	First rule:
	l1 -> l8 : __disjvr_0^0'=__disjvr_0^post8, __disjvr_1^0'=__disjvr_1^post8, __disjvr_2^0'=__disjvr_2^post8, result_4^0'=result_4^post8, tmp_7^0'=tmp_7^post8, x_5^0'=x_5^post8, y_6^0'=y_6^post8, (0 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0), cost: 1
	Second rule:
	l8 -> l6 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, result_4^0'=result_4^post9, tmp_7^0'=tmp_7^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (__disjvr_2^0-__disjvr_2^post9 == 0 /\ result_4^0-result_4^post9 == 0 /\ -1+x_5^post9-x_5^0 == 0 /\ tmp_7^0-tmp_7^post9 == 0 /\ -__disjvr_1^post9+__disjvr_1^0 == 0 /\ -__disjvr_0^post9+__disjvr_0^0 == 0 /\ -y_6^post9+y_6^0 == 0), cost: 1
	New rule:
	l1 -> l6 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, result_4^0'=result_4^post9, tmp_7^0'=tmp_7^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ -1-x_5^post8+x_5^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post9 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ -y_6^post9+y_6^post8 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ tmp_7^post8-tmp_7^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ result_4^post8-result_4^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 8 20
	
	Eliminating location l12 by chaining:

	Applied chaining

	First rule:
	l1 -> l12 : __disjvr_0^0'=__disjvr_0^post14, __disjvr_1^0'=__disjvr_1^post14, __disjvr_2^0'=__disjvr_2^post14, result_4^0'=result_4^post14, tmp_7^0'=tmp_7^post14, x_5^0'=x_5^post14, y_6^0'=y_6^post14, (0 == 0 /\ __disjvr_0^post13-__disjvr_0^post14 == 0 /\ -tmp_7^post14+tmp_7^post13 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ result_4^post13-result_4^post14 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ x_5^post13-x_5^post14 == 0 /\ y_6^post13-y_6^post14 == 0 /\ -__disjvr_2^post13+__disjvr_2^post14 == 0 /\ -x_5^post13+x_5^0 == 0 /\ y_6^0-y_6^post13 == 0 /\ __disjvr_2^post13-__disjvr_2^post14 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
	Second rule:
	l12 -> l10 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, result_4^0'=result_4^post15, tmp_7^0'=tmp_7^post15, x_5^0'=x_5^post15, y_6^0'=y_6^post15, (-__disjvr_0^post15+__disjvr_0^0 == 0 /\ -__disjvr_1^post15+__disjvr_1^0 == 0 /\ tmp_7^0-tmp_7^post15 == 0 /\ -result_4^post15+result_4^0 == 0 /\ -y_6^post15+y_6^0 == 0 /\ -1+x_5^post15-x_5^0 == 0 /\ __disjvr_2^0-__disjvr_2^post15 == 0), cost: 1
	New rule:
	l1 -> l10 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, result_4^0'=result_4^post15, tmp_7^0'=tmp_7^post15, x_5^0'=x_5^post15, y_6^0'=y_6^post15, (0 == 0 /\ -__disjvr_0^post15+__disjvr_0^post14 == 0 /\ __disjvr_0^post13-__disjvr_0^post14 == 0 /\ __disjvr_2^post14-__disjvr_2^post15 == 0 /\ -tmp_7^post14+tmp_7^post13 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_1^post14-__disjvr_1^post15 == 0 /\ result_4^post13-result_4^post14 == 0 /\ tmp_7^post14-tmp_7^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ x_5^post13-x_5^post14 == 0 /\ y_6^post13-y_6^post14 == 0 /\ -y_6^post15+y_6^post14 == 0 /\ -1-x_5^post14+x_5^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^post14 == 0 /\ -x_5^post13+x_5^0 == 0 /\ -result_4^post15+result_4^post14 == 0 /\ y_6^0-y_6^post13 == 0 /\ __disjvr_2^post13-__disjvr_2^post14 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 14 22
	
	Eliminating location l6 by chaining:

	Applied chaining

	First rule:
	l1 -> l6 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, result_4^0'=result_4^post9, tmp_7^0'=tmp_7^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ -1-x_5^post8+x_5^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post9 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ -y_6^post9+y_6^post8 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ tmp_7^post8-tmp_7^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ result_4^post8-result_4^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0), cost: 1
	Second rule:
	l6 -> l1 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, result_4^0'=result_4^post10, tmp_7^0'=tmp_7^post10, x_5^0'=x_5^post10, y_6^0'=y_6^post10, (-y_6^post10+y_6^0 == 0 /\ -__disjvr_1^post10+__disjvr_1^0 == 0 /\ -result_4^post10+result_4^0 == 0 /\ __disjvr_2^0-__disjvr_2^post10 == 0 /\ x_5^0-x_5^post10 == 0 /\ tmp_7^0-tmp_7^post10 == 0 /\ __disjvr_0^0-__disjvr_0^post10 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, result_4^0'=result_4^post10, tmp_7^0'=tmp_7^post10, x_5^0'=x_5^post10, y_6^0'=y_6^post10, (0 == 0 /\ -1-x_5^post8+x_5^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post9 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ y_6^post9-y_6^post10 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ __disjvr_2^post9-__disjvr_2^post10 == 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ -y_6^post9+y_6^post8 == 0 /\ __disjvr_1^post9-__disjvr_1^post10 == 0 /\ y_6^0-x_5^0 <= 0 /\ tmp_7^post9-tmp_7^post10 == 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ tmp_7^post8-tmp_7^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ x_5^post9-x_5^post10 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ -result_4^post10+result_4^post9 == 0 /\ result_4^post8-result_4^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ __disjvr_0^post9-__disjvr_0^post10 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 9 24
	
	Eliminating location l10 by chaining:

	Applied chaining

	First rule:
	l1 -> l10 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, result_4^0'=result_4^post15, tmp_7^0'=tmp_7^post15, x_5^0'=x_5^post15, y_6^0'=y_6^post15, (0 == 0 /\ -__disjvr_0^post15+__disjvr_0^post14 == 0 /\ __disjvr_0^post13-__disjvr_0^post14 == 0 /\ __disjvr_2^post14-__disjvr_2^post15 == 0 /\ -tmp_7^post14+tmp_7^post13 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_1^post14-__disjvr_1^post15 == 0 /\ result_4^post13-result_4^post14 == 0 /\ tmp_7^post14-tmp_7^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ x_5^post13-x_5^post14 == 0 /\ y_6^post13-y_6^post14 == 0 /\ -y_6^post15+y_6^post14 == 0 /\ -1-x_5^post14+x_5^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^post14 == 0 /\ -x_5^post13+x_5^0 == 0 /\ -result_4^post15+result_4^post14 == 0 /\ y_6^0-y_6^post13 == 0 /\ __disjvr_2^post13-__disjvr_2^post14 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
	Second rule:
	l10 -> l1 : __disjvr_0^0'=__disjvr_0^post16, __disjvr_1^0'=__disjvr_1^post16, __disjvr_2^0'=__disjvr_2^post16, result_4^0'=result_4^post16, tmp_7^0'=tmp_7^post16, x_5^0'=x_5^post16, y_6^0'=y_6^post16, (y_6^0-y_6^post16 == 0 /\ -x_5^post16+x_5^0 == 0 /\ -result_4^post16+result_4^0 == 0 /\ -__disjvr_1^post16+__disjvr_1^0 == 0 /\ __disjvr_2^0-__disjvr_2^post16 == 0 /\ __disjvr_0^0-__disjvr_0^post16 == 0 /\ tmp_7^0-tmp_7^post16 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post16, __disjvr_1^0'=__disjvr_1^post16, __disjvr_2^0'=__disjvr_2^post16, result_4^0'=result_4^post16, tmp_7^0'=tmp_7^post16, x_5^0'=x_5^post16, y_6^0'=y_6^post16, (0 == 0 /\ -__disjvr_0^post15+__disjvr_0^post14 == 0 /\ __disjvr_0^post13-__disjvr_0^post14 == 0 /\ __disjvr_2^post14-__disjvr_2^post15 == 0 /\ -tmp_7^post14+tmp_7^post13 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_1^post14-__disjvr_1^post15 == 0 /\ result_4^post13-result_4^post14 == 0 /\ tmp_7^post14-tmp_7^post15 == 0 /\ result_4^post15-result_4^post16 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ x_5^post13-x_5^post14 == 0 /\ __disjvr_0^post15-__disjvr_0^post16 == 0 /\ -x_5^post16+x_5^post15 == 0 /\ __disjvr_1^post15-__disjvr_1^post16 == 0 /\ y_6^post13-y_6^post14 == 0 /\ -y_6^post15+y_6^post14 == 0 /\ -1-x_5^post14+x_5^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^post14 == 0 /\ y_6^post15-y_6^post16 == 0 /\ -x_5^post13+x_5^0 == 0 /\ __disjvr_2^post15-__disjvr_2^post16 == 0 /\ -result_4^post15+result_4^post14 == 0 /\ y_6^0-y_6^post13 == 0 /\ __disjvr_2^post13-__disjvr_2^post14 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ tmp_7^post15-tmp_7^post16 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 15 25

Simplified Transitions

Start location: l13
Program variables: result_4^0 tmp_7^0 x_5^0 y_6^0
  29: l1 -> l1 : tmp_7^0'=0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
  30: l1 -> l1 : tmp_7^0'=0, 1-y_6^0+x_5^0 <= 0, cost: 1
  31: l1 -> l2 : result_4^0'=result_4^post4, y_6^0-x_5^0 <= 0, cost: 1
  32: l1 -> l1 : tmp_7^0'=tmp_7^post9, x_5^0'=1+x_5^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
  33: l1 -> l1 : tmp_7^0'=tmp_7^post15, x_5^0'=1+x_5^0, 1-y_6^0+x_5^0 <= 0, cost: 1
  28: l13 -> l1 : T, cost: 1

	Propagated Equalities

	Original rule:
	l13 -> l1 : __disjvr_0^0'=__disjvr_0^post1, __disjvr_1^0'=__disjvr_1^post1, __disjvr_2^0'=__disjvr_2^post1, result_4^0'=result_4^post1, tmp_7^0'=tmp_7^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (tmp_7^post17-tmp_7^post1 == 0 /\ -__disjvr_0^post1+__disjvr_0^post17 == 0 /\ -result_4^post1+result_4^post17 == 0 /\ -tmp_7^post17+tmp_7^0 == 0 /\ -y_6^post1+y_6^post17 == 0 /\ __disjvr_1^post17-__disjvr_1^post1 == 0 /\ -__disjvr_1^post17+__disjvr_1^0 == 0 /\ -__disjvr_2^post17+__disjvr_2^0 == 0 /\ result_4^0-result_4^post17 == 0 /\ y_6^0-y_6^post17 == 0 /\ -x_5^post17+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post17 == 0 /\ -__disjvr_2^post1+__disjvr_2^post17 == 0 /\ x_5^post17-x_5^post1 == 0), cost: 1
	New rule:
	l13 -> l1 : __disjvr_0^0'=__disjvr_0^post17, __disjvr_1^0'=__disjvr_1^post17, __disjvr_2^0'=__disjvr_2^post17, result_4^0'=result_4^post17, tmp_7^0'=tmp_7^post17, x_5^0'=x_5^post17, y_6^0'=y_6^post17, (0 == 0 /\ -tmp_7^post17+tmp_7^0 == 0 /\ -__disjvr_1^post17+__disjvr_1^0 == 0 /\ -__disjvr_2^post17+__disjvr_2^0 == 0 /\ result_4^0-result_4^post17 == 0 /\ y_6^0-y_6^post17 == 0 /\ -x_5^post17+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post17 == 0), cost: 1
	
		propagated equality tmp_7^post1 = tmp_7^post17
		
		propagated equality __disjvr_0^post1 = __disjvr_0^post17
		
		propagated equality result_4^post1 = result_4^post17
		
		propagated equality y_6^post1 = y_6^post17
		
		propagated equality __disjvr_1^post1 = __disjvr_1^post17
		
		propagated equality __disjvr_2^post1 = __disjvr_2^post17
		
		propagated equality x_5^post1 = x_5^post17
		
	Propagated Equalities

	Original rule:
	l13 -> l1 : __disjvr_0^0'=__disjvr_0^post17, __disjvr_1^0'=__disjvr_1^post17, __disjvr_2^0'=__disjvr_2^post17, result_4^0'=result_4^post17, tmp_7^0'=tmp_7^post17, x_5^0'=x_5^post17, y_6^0'=y_6^post17, (0 == 0 /\ -tmp_7^post17+tmp_7^0 == 0 /\ -__disjvr_1^post17+__disjvr_1^0 == 0 /\ -__disjvr_2^post17+__disjvr_2^0 == 0 /\ result_4^0-result_4^post17 == 0 /\ y_6^0-y_6^post17 == 0 /\ -x_5^post17+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post17 == 0), cost: 1
	New rule:
	l13 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	
		propagated equality tmp_7^post17 = tmp_7^0
		
		propagated equality __disjvr_1^post17 = __disjvr_1^0
		
		propagated equality __disjvr_2^post17 = __disjvr_2^0
		
		propagated equality result_4^post17 = result_4^0
		
		propagated equality y_6^post17 = y_6^0
		
		propagated equality x_5^post17 = x_5^0
		
		propagated equality __disjvr_0^post17 = __disjvr_0^0
		
	Simplified Guard

	Original rule:
	l13 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	New rule:
	l13 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l13 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	New rule:
	l13 -> l1 : T, cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, result_4^0'=result_4^post6, tmp_7^0'=tmp_7^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ __disjvr_2^post5-__disjvr_2^post6 == 0 /\ __disjvr_2^0-__disjvr_2^post5 == 0 /\ -__disjvr_0^post6+__disjvr_0^post5 == 0 /\ -y_6^0+x_5^0 <= 0 /\ result_4^0-result_4^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ tmp_7^post5 <= 0 /\ __disjvr_1^post5-__disjvr_1^post6 == 0 /\ y_6^0-x_5^0 <= 0 /\ -result_4^post6+result_4^post5 == 0 /\ -tmp_7^post5 <= 0 /\ x_5^post5-x_5^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -y_6^post6+y_6^post5 == 0 /\ tmp_7^post5-tmp_7^post6 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, result_4^0'=result_4^post6, tmp_7^0'=tmp_7^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ __disjvr_2^post5-__disjvr_2^post6 == 0 /\ __disjvr_2^0-__disjvr_2^post5 == 0 /\ -__disjvr_0^post6+__disjvr_0^post5 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ tmp_7^post5 <= 0 /\ tmp_7^post5 == 0 /\ __disjvr_1^post5-__disjvr_1^post6 == 0 /\ y_6^0-x_5^0 <= 0 /\ -result_4^post6+result_4^post5 == 0 /\ -tmp_7^post5 <= 0 /\ x_5^post5-x_5^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -y_6^post6+y_6^post5 == 0 /\ tmp_7^post5-tmp_7^post6 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post6, __disjvr_1^0'=__disjvr_1^post6, __disjvr_2^0'=__disjvr_2^post6, result_4^0'=result_4^post6, tmp_7^0'=tmp_7^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ __disjvr_2^post5-__disjvr_2^post6 == 0 /\ __disjvr_2^0-__disjvr_2^post5 == 0 /\ -__disjvr_0^post6+__disjvr_0^post5 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ tmp_7^post5 <= 0 /\ tmp_7^post5 == 0 /\ __disjvr_1^post5-__disjvr_1^post6 == 0 /\ y_6^0-x_5^0 <= 0 /\ -result_4^post6+result_4^post5 == 0 /\ -tmp_7^post5 <= 0 /\ x_5^post5-x_5^post6 == 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -y_6^post6+y_6^post5 == 0 /\ tmp_7^post5-tmp_7^post6 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post5, __disjvr_1^0'=__disjvr_1^post5, __disjvr_2^0'=__disjvr_2^post5, result_4^0'=result_4^post5, tmp_7^0'=tmp_7^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ __disjvr_2^0-__disjvr_2^post5 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ tmp_7^post5 <= 0 /\ tmp_7^post5 == 0 /\ y_6^0-x_5^0 <= 0 /\ -tmp_7^post5 <= 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0), cost: 1
	
		propagated equality __disjvr_2^post6 = __disjvr_2^post5
		
		propagated equality __disjvr_0^post6 = __disjvr_0^post5
		
		propagated equality __disjvr_1^post6 = __disjvr_1^post5
		
		propagated equality result_4^post6 = result_4^post5
		
		propagated equality x_5^post6 = x_5^post5
		
		propagated equality y_6^post6 = y_6^post5
		
		propagated equality tmp_7^post6 = tmp_7^post5
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post5, __disjvr_1^0'=__disjvr_1^post5, __disjvr_2^0'=__disjvr_2^post5, result_4^0'=result_4^post5, tmp_7^0'=tmp_7^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ __disjvr_2^0-__disjvr_2^post5 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ y_6^0-y_6^post5 == 0 /\ tmp_7^post5 <= 0 /\ tmp_7^post5 == 0 /\ y_6^0-x_5^0 <= 0 /\ -tmp_7^post5 <= 0 /\ __disjvr_0^0-__disjvr_0^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__disjvr_1^post5+__disjvr_1^0 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 <= 0 /\ 0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
		propagated equality __disjvr_2^post5 = __disjvr_2^0
		
		propagated equality result_4^post5 = result_4^0
		
		propagated equality y_6^post5 = y_6^0
		
		propagated equality tmp_7^post5 = 0
		
		propagated equality __disjvr_0^post5 = __disjvr_0^0
		
		propagated equality x_5^post5 = x_5^0
		
		propagated equality __disjvr_1^post5 = __disjvr_1^0
		
	Simplified Guard

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 <= 0 /\ 0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : tmp_7^0'=0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post12, __disjvr_1^0'=__disjvr_1^post12, __disjvr_2^0'=__disjvr_2^post12, result_4^0'=result_4^post12, tmp_7^0'=tmp_7^post12, x_5^0'=x_5^post12, y_6^0'=y_6^post12, (0 == 0 /\ tmp_7^post11-tmp_7^post12 == 0 /\ result_4^post11-result_4^post12 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_2^post11-__disjvr_2^post12 == 0 /\ -__disjvr_2^post11+__disjvr_2^0 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -tmp_7^post11 <= 0 /\ -y_6^post11+y_6^0 == 0 /\ -x_5^post11+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ tmp_7^post11 <= 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -result_4^post11+result_4^0 == 0 /\ __disjvr_0^post11-__disjvr_0^post12 == 0 /\ y_6^post11-y_6^post12 == 0 /\ __disjvr_1^post11-__disjvr_1^post12 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post12, __disjvr_1^0'=__disjvr_1^post12, __disjvr_2^0'=__disjvr_2^post12, result_4^0'=result_4^post12, tmp_7^0'=tmp_7^post12, x_5^0'=x_5^post12, y_6^0'=y_6^post12, (0 == 0 /\ tmp_7^post11-tmp_7^post12 == 0 /\ result_4^post11-result_4^post12 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_2^post11-__disjvr_2^post12 == 0 /\ -__disjvr_2^post11+__disjvr_2^0 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -tmp_7^post11 <= 0 /\ -tmp_7^post11 == 0 /\ -y_6^post11+y_6^0 == 0 /\ -x_5^post11+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ tmp_7^post11 <= 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -result_4^post11+result_4^0 == 0 /\ __disjvr_0^post11-__disjvr_0^post12 == 0 /\ y_6^post11-y_6^post12 == 0 /\ __disjvr_1^post11-__disjvr_1^post12 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post12, __disjvr_1^0'=__disjvr_1^post12, __disjvr_2^0'=__disjvr_2^post12, result_4^0'=result_4^post12, tmp_7^0'=tmp_7^post12, x_5^0'=x_5^post12, y_6^0'=y_6^post12, (0 == 0 /\ tmp_7^post11-tmp_7^post12 == 0 /\ result_4^post11-result_4^post12 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_2^post11-__disjvr_2^post12 == 0 /\ -__disjvr_2^post11+__disjvr_2^0 == 0 /\ x_5^post11-x_5^post12 == 0 /\ -tmp_7^post11 <= 0 /\ -tmp_7^post11 == 0 /\ -y_6^post11+y_6^0 == 0 /\ -x_5^post11+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ tmp_7^post11 <= 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -result_4^post11+result_4^0 == 0 /\ __disjvr_0^post11-__disjvr_0^post12 == 0 /\ y_6^post11-y_6^post12 == 0 /\ __disjvr_1^post11-__disjvr_1^post12 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post11, __disjvr_1^0'=__disjvr_1^post11, __disjvr_2^0'=__disjvr_2^post11, result_4^0'=result_4^post11, tmp_7^0'=tmp_7^post11, x_5^0'=x_5^post11, y_6^0'=y_6^post11, (0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ -__disjvr_2^post11+__disjvr_2^0 == 0 /\ -tmp_7^post11 <= 0 /\ -tmp_7^post11 == 0 /\ -y_6^post11+y_6^0 == 0 /\ -x_5^post11+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ tmp_7^post11 <= 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -result_4^post11+result_4^0 == 0), cost: 1
	
		propagated equality tmp_7^post12 = tmp_7^post11
		
		propagated equality result_4^post12 = result_4^post11
		
		propagated equality __disjvr_2^post12 = __disjvr_2^post11
		
		propagated equality x_5^post12 = x_5^post11
		
		propagated equality __disjvr_0^post12 = __disjvr_0^post11
		
		propagated equality y_6^post12 = y_6^post11
		
		propagated equality __disjvr_1^post12 = __disjvr_1^post11
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post11, __disjvr_1^0'=__disjvr_1^post11, __disjvr_2^0'=__disjvr_2^post11, result_4^0'=result_4^post11, tmp_7^0'=tmp_7^post11, x_5^0'=x_5^post11, y_6^0'=y_6^post11, (0 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ -__disjvr_2^post11+__disjvr_2^0 == 0 /\ -tmp_7^post11 <= 0 /\ -tmp_7^post11 == 0 /\ -y_6^post11+y_6^0 == 0 /\ -x_5^post11+x_5^0 == 0 /\ __disjvr_0^0-__disjvr_0^post11 == 0 /\ tmp_7^post11 <= 0 /\ -__disjvr_1^post11+__disjvr_1^0 == 0 /\ -result_4^post11+result_4^0 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 <= 0 /\ 0 == 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
	
		propagated equality __disjvr_2^post11 = __disjvr_2^0
		
		propagated equality tmp_7^post11 = 0
		
		propagated equality y_6^post11 = y_6^0
		
		propagated equality x_5^post11 = x_5^0
		
		propagated equality __disjvr_0^post11 = __disjvr_0^0
		
		propagated equality __disjvr_1^post11 = __disjvr_1^0
		
		propagated equality result_4^post11 = result_4^0
		
	Simplified Guard

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 <= 0 /\ 0 == 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-y_6^0+x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-y_6^0+x_5^0 <= 0, cost: 1
	New rule:
	l1 -> l1 : tmp_7^0'=0, 1-y_6^0+x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^post4, __disjvr_1^0'=__disjvr_1^post4, __disjvr_2^0'=__disjvr_2^post4, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ __disjvr_1^post2-__disjvr_1^post3 == 0 /\ y_6^post2-y_6^post3 == 0 /\ -x_5^post2+x_5^0 == 0 /\ __disjvr_2^post2-__disjvr_2^post3 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ tmp_7^0-tmp_7^post2 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ result_4^post2-result_4^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ __disjvr_0^post3-__disjvr_0^post4 == 0 /\ x_5^post3-x_5^post4 == 0 /\ tmp_7^post2-tmp_7^post3 == 0 /\ -__disjvr_1^post4+__disjvr_1^post3 == 0 /\ __disjvr_2^post3-__disjvr_2^post4 == 0 /\ -tmp_7^post4+tmp_7^post3 == 0 /\ x_5^post2-x_5^post3 == 0 /\ y_6^post3-y_6^post4 == 0 /\ -__disjvr_2^post2+__disjvr_2^0 == 0), cost: 1
	New rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^post3, __disjvr_1^0'=__disjvr_1^post3, __disjvr_2^0'=__disjvr_2^post3, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ __disjvr_1^post2-__disjvr_1^post3 == 0 /\ y_6^post2-y_6^post3 == 0 /\ -x_5^post2+x_5^0 == 0 /\ __disjvr_2^post2-__disjvr_2^post3 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ tmp_7^0-tmp_7^post2 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ result_4^post2-result_4^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ tmp_7^post2-tmp_7^post3 == 0 /\ x_5^post2-x_5^post3 == 0 /\ -__disjvr_2^post2+__disjvr_2^0 == 0), cost: 1
	
		propagated equality __disjvr_0^post4 = __disjvr_0^post3
		
		propagated equality x_5^post4 = x_5^post3
		
		propagated equality __disjvr_1^post4 = __disjvr_1^post3
		
		propagated equality __disjvr_2^post4 = __disjvr_2^post3
		
		propagated equality tmp_7^post4 = tmp_7^post3
		
		propagated equality y_6^post4 = y_6^post3
		
	Propagated Equalities

	Original rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^post3, __disjvr_1^0'=__disjvr_1^post3, __disjvr_2^0'=__disjvr_2^post3, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ __disjvr_1^post2-__disjvr_1^post3 == 0 /\ y_6^post2-y_6^post3 == 0 /\ -x_5^post2+x_5^0 == 0 /\ __disjvr_2^post2-__disjvr_2^post3 == 0 /\ -__disjvr_0^post2+__disjvr_0^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ tmp_7^0-tmp_7^post2 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_0^0-__disjvr_0^post2 == 0 /\ result_4^post2-result_4^post3 == 0 /\ __disjvr_0^post2-__disjvr_0^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -__disjvr_1^post2+__disjvr_1^0 == 0 /\ tmp_7^post2-tmp_7^post3 == 0 /\ x_5^post2-x_5^post3 == 0 /\ -__disjvr_2^post2+__disjvr_2^0 == 0), cost: 1
	New rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
		propagated equality __disjvr_1^post2 = __disjvr_1^post3
		
		propagated equality y_6^post2 = y_6^post3
		
		propagated equality x_5^post2 = x_5^0
		
		propagated equality __disjvr_2^post2 = __disjvr_2^post3
		
		propagated equality __disjvr_0^post2 = __disjvr_0^post3
		
		propagated equality y_6^post3 = y_6^0
		
		propagated equality tmp_7^post2 = tmp_7^0
		
		propagated equality __disjvr_0^post3 = __disjvr_0^0
		
		propagated equality result_4^post2 = result_4^post3
		
		propagated equality result_4^post3 = result_4^0
		
		propagated equality __disjvr_1^post3 = __disjvr_1^0
		
		propagated equality tmp_7^post3 = tmp_7^0
		
		propagated equality x_5^post3 = x_5^0
		
		propagated equality __disjvr_2^post3 = __disjvr_2^0
		
	Simplified Guard

	Original rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^0, x_5^0'=x_5^0, y_6^0'=y_6^0, y_6^0-x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^post4, tmp_7^0'=tmp_7^0, x_5^0'=x_5^0, y_6^0'=y_6^0, y_6^0-x_5^0 <= 0, cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^post4, y_6^0-x_5^0 <= 0, cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, result_4^0'=result_4^post10, tmp_7^0'=tmp_7^post10, x_5^0'=x_5^post10, y_6^0'=y_6^post10, (0 == 0 /\ -1-x_5^post8+x_5^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post9 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ y_6^post9-y_6^post10 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ __disjvr_2^post9-__disjvr_2^post10 == 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ -y_6^post9+y_6^post8 == 0 /\ __disjvr_1^post9-__disjvr_1^post10 == 0 /\ y_6^0-x_5^0 <= 0 /\ tmp_7^post9-tmp_7^post10 == 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ tmp_7^post8-tmp_7^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ x_5^post9-x_5^post10 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ -result_4^post10+result_4^post9 == 0 /\ result_4^post8-result_4^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ __disjvr_0^post9-__disjvr_0^post10 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, result_4^0'=result_4^post10, tmp_7^0'=tmp_7^post10, x_5^0'=x_5^post10, y_6^0'=y_6^post10, (0 == 0 /\ -1-x_5^post8+x_5^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post9 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^post9-y_6^post10 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ __disjvr_2^post9-__disjvr_2^post10 == 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ -y_6^post9+y_6^post8 == 0 /\ __disjvr_1^post9-__disjvr_1^post10 == 0 /\ y_6^0-x_5^0 <= 0 /\ tmp_7^post9-tmp_7^post10 == 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ tmp_7^post8-tmp_7^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ x_5^post9-x_5^post10 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ -result_4^post10+result_4^post9 == 0 /\ result_4^post8-result_4^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ __disjvr_0^post9-__disjvr_0^post10 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post10, __disjvr_1^0'=__disjvr_1^post10, __disjvr_2^0'=__disjvr_2^post10, result_4^0'=result_4^post10, tmp_7^0'=tmp_7^post10, x_5^0'=x_5^post10, y_6^0'=y_6^post10, (0 == 0 /\ -1-x_5^post8+x_5^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post9 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^post9-y_6^post10 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ __disjvr_2^post9-__disjvr_2^post10 == 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ -y_6^post9+y_6^post8 == 0 /\ __disjvr_1^post9-__disjvr_1^post10 == 0 /\ y_6^0-x_5^0 <= 0 /\ tmp_7^post9-tmp_7^post10 == 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ tmp_7^post8-tmp_7^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ x_5^post9-x_5^post10 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ -result_4^post10+result_4^post9 == 0 /\ result_4^post8-result_4^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0 /\ __disjvr_0^post9-__disjvr_0^post10 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, result_4^0'=result_4^post9, tmp_7^0'=tmp_7^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ -1-x_5^post8+x_5^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post9 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ -y_6^post9+y_6^post8 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ tmp_7^post8-tmp_7^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ result_4^post8-result_4^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0), cost: 1
	
		propagated equality y_6^post10 = y_6^post9
		
		propagated equality __disjvr_2^post10 = __disjvr_2^post9
		
		propagated equality __disjvr_1^post10 = __disjvr_1^post9
		
		propagated equality tmp_7^post10 = tmp_7^post9
		
		propagated equality x_5^post10 = x_5^post9
		
		propagated equality result_4^post10 = result_4^post9
		
		propagated equality __disjvr_0^post10 = __disjvr_0^post9
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post9, __disjvr_1^0'=__disjvr_1^post9, __disjvr_2^0'=__disjvr_2^post9, result_4^0'=result_4^post9, tmp_7^0'=tmp_7^post9, x_5^0'=x_5^post9, y_6^0'=y_6^post9, (0 == 0 /\ -1-x_5^post8+x_5^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post9 == 0 /\ -__disjvr_1^post7+__disjvr_1^0 == 0 /\ -__disjvr_2^post7+__disjvr_2^0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ __disjvr_2^post8-__disjvr_2^post9 == 0 /\ __disjvr_0^post7-__disjvr_0^post8 == 0 /\ -result_4^post7+result_4^0 == 0 /\ -tmp_7^post8+tmp_7^post7 == 0 /\ y_6^post7-y_6^post8 == 0 /\ -y_6^post9+y_6^post8 == 0 /\ y_6^0-x_5^0 <= 0 /\ __disjvr_2^post7-__disjvr_2^post8 == 0 /\ tmp_7^post8-tmp_7^post9 == 0 /\ __disjvr_0^0-__disjvr_0^post7 == 0 /\ result_4^post7-result_4^post8 == 0 /\ x_5^post7-x_5^post8 == 0 /\ -__disjvr_1^post8+__disjvr_1^post7 == 0 /\ -x_5^post7+x_5^0 == 0 /\ y_6^0-y_6^post7 == 0 /\ -__disjvr_0^post9+__disjvr_0^post8 == 0 /\ result_4^post8-result_4^post9 == 0 /\ __disjvr_1^post8-__disjvr_1^post7 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post9, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
		propagated equality x_5^post8 = -1+x_5^post9
		
		propagated equality __disjvr_1^post8 = __disjvr_1^post9
		
		propagated equality __disjvr_1^post7 = __disjvr_1^0
		
		propagated equality __disjvr_2^post7 = __disjvr_2^0
		
		propagated equality __disjvr_2^post8 = __disjvr_2^post9
		
		propagated equality __disjvr_0^post7 = __disjvr_0^post8
		
		propagated equality result_4^post7 = result_4^0
		
		propagated equality tmp_7^post7 = tmp_7^post8
		
		propagated equality y_6^post7 = y_6^post8
		
		propagated equality y_6^post8 = y_6^post9
		
		propagated equality __disjvr_2^post9 = __disjvr_2^0
		
		propagated equality tmp_7^post8 = tmp_7^post9
		
		propagated equality __disjvr_0^post8 = __disjvr_0^0
		
		propagated equality result_4^post8 = result_4^0
		
		propagated equality x_5^post7 = -1+x_5^post9
		
		propagated equality __disjvr_1^post9 = __disjvr_1^0
		
		propagated equality x_5^post9 = 1+x_5^0
		
		propagated equality y_6^post9 = y_6^0
		
		propagated equality __disjvr_0^post9 = __disjvr_0^0
		
		propagated equality result_4^post9 = result_4^0
		
	Simplified Guard

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post9, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post9, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
	made implied equalities explicit

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post9, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post9, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post9, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : tmp_7^0'=tmp_7^post9, x_5^0'=1+x_5^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post16, __disjvr_1^0'=__disjvr_1^post16, __disjvr_2^0'=__disjvr_2^post16, result_4^0'=result_4^post16, tmp_7^0'=tmp_7^post16, x_5^0'=x_5^post16, y_6^0'=y_6^post16, (0 == 0 /\ -__disjvr_0^post15+__disjvr_0^post14 == 0 /\ __disjvr_0^post13-__disjvr_0^post14 == 0 /\ __disjvr_2^post14-__disjvr_2^post15 == 0 /\ -tmp_7^post14+tmp_7^post13 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_1^post14-__disjvr_1^post15 == 0 /\ result_4^post13-result_4^post14 == 0 /\ tmp_7^post14-tmp_7^post15 == 0 /\ result_4^post15-result_4^post16 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ x_5^post13-x_5^post14 == 0 /\ __disjvr_0^post15-__disjvr_0^post16 == 0 /\ -x_5^post16+x_5^post15 == 0 /\ __disjvr_1^post15-__disjvr_1^post16 == 0 /\ y_6^post13-y_6^post14 == 0 /\ -y_6^post15+y_6^post14 == 0 /\ -1-x_5^post14+x_5^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^post14 == 0 /\ y_6^post15-y_6^post16 == 0 /\ -x_5^post13+x_5^0 == 0 /\ __disjvr_2^post15-__disjvr_2^post16 == 0 /\ -result_4^post15+result_4^post14 == 0 /\ y_6^0-y_6^post13 == 0 /\ __disjvr_2^post13-__disjvr_2^post14 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ tmp_7^post15-tmp_7^post16 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, result_4^0'=result_4^post15, tmp_7^0'=tmp_7^post15, x_5^0'=x_5^post15, y_6^0'=y_6^post15, (0 == 0 /\ -__disjvr_0^post15+__disjvr_0^post14 == 0 /\ __disjvr_0^post13-__disjvr_0^post14 == 0 /\ __disjvr_2^post14-__disjvr_2^post15 == 0 /\ -tmp_7^post14+tmp_7^post13 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_1^post14-__disjvr_1^post15 == 0 /\ result_4^post13-result_4^post14 == 0 /\ tmp_7^post14-tmp_7^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ x_5^post13-x_5^post14 == 0 /\ y_6^post13-y_6^post14 == 0 /\ -y_6^post15+y_6^post14 == 0 /\ -1-x_5^post14+x_5^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^post14 == 0 /\ -x_5^post13+x_5^0 == 0 /\ -result_4^post15+result_4^post14 == 0 /\ y_6^0-y_6^post13 == 0 /\ __disjvr_2^post13-__disjvr_2^post14 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
	
		propagated equality result_4^post16 = result_4^post15
		
		propagated equality __disjvr_0^post16 = __disjvr_0^post15
		
		propagated equality x_5^post16 = x_5^post15
		
		propagated equality __disjvr_1^post16 = __disjvr_1^post15
		
		propagated equality y_6^post16 = y_6^post15
		
		propagated equality __disjvr_2^post16 = __disjvr_2^post15
		
		propagated equality tmp_7^post16 = tmp_7^post15
		
	Propagated Equalities

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^post15, __disjvr_1^0'=__disjvr_1^post15, __disjvr_2^0'=__disjvr_2^post15, result_4^0'=result_4^post15, tmp_7^0'=tmp_7^post15, x_5^0'=x_5^post15, y_6^0'=y_6^post15, (0 == 0 /\ -__disjvr_0^post15+__disjvr_0^post14 == 0 /\ __disjvr_0^post13-__disjvr_0^post14 == 0 /\ __disjvr_2^post14-__disjvr_2^post15 == 0 /\ -tmp_7^post14+tmp_7^post13 == 0 /\ __disjvr_0^0-__disjvr_0^post13 == 0 /\ __disjvr_1^post13-__disjvr_1^post14 == 0 /\ 1-y_6^0+x_5^0 <= 0 /\ __disjvr_1^post14-__disjvr_1^post15 == 0 /\ result_4^post13-result_4^post14 == 0 /\ tmp_7^post14-tmp_7^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^0 == 0 /\ x_5^post13-x_5^post14 == 0 /\ y_6^post13-y_6^post14 == 0 /\ -y_6^post15+y_6^post14 == 0 /\ -1-x_5^post14+x_5^post15 == 0 /\ -__disjvr_2^post13+__disjvr_2^post14 == 0 /\ -x_5^post13+x_5^0 == 0 /\ -result_4^post15+result_4^post14 == 0 /\ y_6^0-y_6^post13 == 0 /\ __disjvr_2^post13-__disjvr_2^post14 == 0 /\ -__disjvr_1^post13+__disjvr_1^0 == 0 /\ -result_4^post13+result_4^0 == 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post15, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
	
		propagated equality __disjvr_0^post14 = __disjvr_0^post15
		
		propagated equality __disjvr_0^post13 = __disjvr_0^post15
		
		propagated equality __disjvr_2^post14 = __disjvr_2^post15
		
		propagated equality tmp_7^post13 = tmp_7^post14
		
		propagated equality __disjvr_0^post15 = __disjvr_0^0
		
		propagated equality __disjvr_1^post13 = __disjvr_1^post14
		
		propagated equality __disjvr_1^post14 = __disjvr_1^post15
		
		propagated equality result_4^post13 = result_4^post14
		
		propagated equality tmp_7^post14 = tmp_7^post15
		
		propagated equality __disjvr_2^post13 = __disjvr_2^0
		
		propagated equality x_5^post13 = x_5^post14
		
		propagated equality y_6^post13 = y_6^post14
		
		propagated equality y_6^post14 = y_6^post15
		
		propagated equality x_5^post14 = -1+x_5^post15
		
		propagated equality __disjvr_2^post15 = __disjvr_2^0
		
		propagated equality x_5^post15 = 1+x_5^0
		
		propagated equality result_4^post14 = result_4^post15
		
		propagated equality y_6^post15 = y_6^0
		
		propagated equality __disjvr_1^post15 = __disjvr_1^0
		
		propagated equality result_4^post15 = result_4^0
		
	Simplified Guard

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post15, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-y_6^0+x_5^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post15, x_5^0'=1+x_5^0, y_6^0'=y_6^0, 1-y_6^0+x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l1 : __disjvr_0^0'=__disjvr_0^0, __disjvr_1^0'=__disjvr_1^0, __disjvr_2^0'=__disjvr_2^0, result_4^0'=result_4^0, tmp_7^0'=tmp_7^post15, x_5^0'=1+x_5^0, y_6^0'=y_6^0, 1-y_6^0+x_5^0 <= 0, cost: 1
	New rule:
	l1 -> l1 : tmp_7^0'=tmp_7^post15, x_5^0'=1+x_5^0, 1-y_6^0+x_5^0 <= 0, cost: 1

Step with 28

	Trace

	28[T]
	
	Blocked

	[{}, {}]

Step with 31

	Trace

	28[T], 31[(y_6^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	28[T]
	
	Blocked

	[{}, {31[T]}]

Step with 29

	Trace

	28[T], 29[(-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {31[T]}, {}]

Nonterm

Start location: l13
Program variables: result_4^0 tmp_7^0 x_5^0 y_6^0
  29: l1 -> l1 : tmp_7^0'=0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
  30: l1 -> l1 : tmp_7^0'=0, 1-y_6^0+x_5^0 <= 0, cost: 1
  31: l1 -> l2 : result_4^0'=result_4^post4, y_6^0-x_5^0 <= 0, cost: 1
  32: l1 -> l1 : tmp_7^0'=tmp_7^post9, x_5^0'=1+x_5^0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
  33: l1 -> l1 : tmp_7^0'=tmp_7^post15, x_5^0'=1+x_5^0, 1-y_6^0+x_5^0 <= 0, cost: 1
  34: l1 -> LoAT_sink : (-1+n >= 0 /\ -y_6^0+x_5^0 >= 0 /\ y_6^0-x_5^0 >= 0), cost: NONTERM
  28: l13 -> l1 : T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l1 -> l1 : tmp_7^0'=0, (-y_6^0+x_5^0 <= 0 /\ -y_6^0+x_5^0 == 0 /\ y_6^0-x_5^0 <= 0), cost: 1
	New rule:
	l1 -> LoAT_sink : (-1+n >= 0 /\ -y_6^0+x_5^0 >= 0 /\ y_6^0-x_5^0 >= 0), cost: NONTERM

		-y_6^0+x_5^0 >= 0 [0]: monotonic increase yields -y_6^0+x_5^0 >= 0
		
		y_6^0-x_5^0 >= 0 [0]: monotonic increase yields y_6^0-x_5^0 >= 0
		
		Replacement map: {-y_6^0+x_5^0 >= 0 -> -y_6^0+x_5^0 >= 0, y_6^0-x_5^0 >= 0 -> y_6^0-x_5^0 >= 0}

Step with 34

	Trace

	28[T], 34[(-1+n >= 0 /\ -y_6^0+x_5^0 >= 0 /\ y_6^0-x_5^0 >= 0)]
	
	Blocked

	[{}, {31[T]}, {34[T]}]

Refute

	Counterexample

	[ result_4^0=0 tmp_7^0=0 x_5^0=0 y_6^0=0 ] 28 [ result_4^0=0 tmp_7^0=0 x_5^0=0 y_6^0=0 ] 34
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
