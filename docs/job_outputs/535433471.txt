WORST_CASE(Omega(0),?)

Initial ITS
Start location: l6
   0: l0 -> l1 : x^0'=x^post0, p^0'=p^post0, y^0'=y^post0, (x^0 <= 0 /\ y^0-y^post0 == 0 /\ -1+p^post0 == 0 /\ y^0 <= 0 /\ x^0-x^post0 == 0), cost: 1
   1: l0 -> l2 : x^0'=x^post1, p^0'=p^post1, y^0'=y^post1, (1-y^0+y^post1 == 0 /\ 1-y^0 <= 0 /\ p^0-p^post1 == 0 /\ x^0-x^post1 == 0), cost: 1
   2: l2 -> l0 : x^0'=x^post2, p^0'=p^post2, y^0'=y^post2, (y^0-y^post2 == 0 /\ x^0-x^post2 == 0 /\ -p^post2+p^0 == 0), cost: 1
   3: l3 -> l2 : x^0'=x^post3, p^0'=p^post3, y^0'=y^post3, (x^0 <= 0 /\ -p^post3+p^0 == 0 /\ -x^post3+x^0 == 0 /\ -y^post3+y^0 == 0), cost: 1
   4: l3 -> l4 : x^0'=x^post4, p^0'=p^post4, y^0'=y^post4, (-y^post4+y^0 == 0 /\ 1-x^0 <= 0 /\ -x^post4+x^0 == 0 /\ -1+p^post4-p^0 == 0), cost: 1
   5: l5 -> l3 : x^0'=x^post5, p^0'=p^post5, y^0'=y^post5, (p^post5 == 0 /\ -y^post5+y^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
   6: l6 -> l5 : x^0'=x^post6, p^0'=p^post6, y^0'=y^post6, (-p^post6+p^0 == 0 /\ x^0-x^post6 == 0 /\ -y^post6+y^0 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l6
   1: l0 -> l2 : x^0'=x^post1, p^0'=p^post1, y^0'=y^post1, (1-y^0+y^post1 == 0 /\ 1-y^0 <= 0 /\ p^0-p^post1 == 0 /\ x^0-x^post1 == 0), cost: 1
   2: l2 -> l0 : x^0'=x^post2, p^0'=p^post2, y^0'=y^post2, (y^0-y^post2 == 0 /\ x^0-x^post2 == 0 /\ -p^post2+p^0 == 0), cost: 1
   3: l3 -> l2 : x^0'=x^post3, p^0'=p^post3, y^0'=y^post3, (x^0 <= 0 /\ -p^post3+p^0 == 0 /\ -x^post3+x^0 == 0 /\ -y^post3+y^0 == 0), cost: 1
   5: l5 -> l3 : x^0'=x^post5, p^0'=p^post5, y^0'=y^post5, (p^post5 == 0 /\ -y^post5+y^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
   6: l6 -> l5 : x^0'=x^post6, p^0'=p^post6, y^0'=y^post6, (-p^post6+p^0 == 0 /\ x^0-x^post6 == 0 /\ -y^post6+y^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : x^0'=x^post1, p^0'=p^post1, y^0'=y^post1, (1-y^0+y^post1 == 0 /\ 1-y^0 <= 0 /\ p^0-p^post1 == 0 /\ x^0-x^post1 == 0), cost: 1
New rule:
l0 -> l2 : y^0'=-1+y^0, -1+y^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : x^0'=x^post2, p^0'=p^post2, y^0'=y^post2, (y^0-y^post2 == 0 /\ x^0-x^post2 == 0 /\ -p^post2+p^0 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : x^0'=x^post3, p^0'=p^post3, y^0'=y^post3, (x^0 <= 0 /\ -p^post3+p^0 == 0 /\ -x^post3+x^0 == 0 /\ -y^post3+y^0 == 0), cost: 1
New rule:
l3 -> l2 : x^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l3 : x^0'=x^post5, p^0'=p^post5, y^0'=y^post5, (p^post5 == 0 /\ -y^post5+y^0 == 0 /\ -x^post5+x^0 == 0), cost: 1
New rule:
l5 -> l3 : p^0'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : x^0'=x^post6, p^0'=p^post6, y^0'=y^post6, (-p^post6+p^0 == 0 /\ x^0-x^post6 == 0 /\ -y^post6+y^0 == 0), cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
   7: l0 -> l2 : y^0'=-1+y^0, -1+y^0 >= 0, cost: 1
   8: l2 -> l0 : TRUE, cost: 1
   9: l3 -> l2 : x^0 <= 0, cost: 1
  10: l5 -> l3 : p^0'=0, TRUE, cost: 1
  11: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l3 : p^0'=0, TRUE, cost: 1
New rule:
l6 -> l3 : p^0'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 10 11

Eliminating location l3 by chaining:

Applied chaining
First rule:
l6 -> l3 : p^0'=0, TRUE, cost: 2
Second rule:
l3 -> l2 : x^0 <= 0, cost: 1
New rule:
l6 -> l2 : p^0'=0, x^0 <= 0, cost: 3

Applied deletion
Removed the following rules: 9 12

Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : y^0'=-1+y^0, -1+y^0 >= 0, cost: 1
New rule:
l2 -> l2 : y^0'=-1+y^0, -1+y^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 7 8

Eliminated locations on linear paths
Start location: l6
  14: l2 -> l2 : y^0'=-1+y^0, -1+y^0 >= 0, cost: 2
  13: l6 -> l2 : p^0'=0, x^0 <= 0, cost: 3


Applied acceleration
Original rule:
l2 -> l2 : y^0'=-1+y^0, -1+y^0 >= 0, cost: 2
New rule:
l2 -> l2 : y^0'=-n+y^0, (-n+y^0 >= 0 /\ n >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_kKcgcj.txt

Applied instantiation
Original rule:
l2 -> l2 : y^0'=-n+y^0, (-n+y^0 >= 0 /\ n >= 0), cost: 2*n
New rule:
l2 -> l2 : y^0'=0, (0 >= 0 /\ y^0 >= 0), cost: 2*y^0

Applied simplification
Original rule:
l2 -> l2 : y^0'=0, (0 >= 0 /\ y^0 >= 0), cost: 2*y^0
New rule:
l2 -> l2 : y^0'=0, y^0 >= 0, cost: 2*y^0

Applied deletion
Removed the following rules: 14

Accelerated simple loops
Start location: l6
  16: l2 -> l2 : y^0'=0, y^0 >= 0, cost: 2*y^0
  13: l6 -> l2 : p^0'=0, x^0 <= 0, cost: 3


Applied chaining
First rule:
l6 -> l2 : p^0'=0, x^0 <= 0, cost: 3
Second rule:
l2 -> l2 : y^0'=0, y^0 >= 0, cost: 2*y^0
New rule:
l6 -> l2 : p^0'=0, y^0'=0, (x^0 <= 0 /\ y^0 >= 0), cost: 3+2*y^0

Applied deletion
Removed the following rules: 16

Chained accelerated rules with incoming rules
Start location: l6
  13: l6 -> l2 : p^0'=0, x^0 <= 0, cost: 3
  17: l6 -> l2 : p^0'=0, y^0'=0, (x^0 <= 0 /\ y^0 >= 0), cost: 3+2*y^0


Removed unreachable locations and irrelevant leafs
Start location: l6
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

