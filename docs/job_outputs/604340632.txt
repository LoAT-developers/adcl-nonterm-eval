NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_i -> Â¿functionCall(__VERIFIER_nondet_int), main_up -> 0}>
<l1, l2, true>
<l2, l15, not((main_i > 0))>
<l2, l3, (main_i > 0)>
<l3, l4, (main_i = 1)>
<l3, l6, not((main_i = 1))>
<l4, l5, true, seq{main_up -> 1}>
<l5, l6, true>
<l6, l7, (main_i = 10)>
<l6, l9, not((main_i = 10))>
<l7, l8, true, seq{main_up -> 0}>
<l8, l9, true>
<l9, l10, (main_up = 1)>
<l9, l12, not((main_up = 1))>
<l10, l11, true, seq{main_i -> (main_i + 1)}>
<l11, l14, true>
<l12, l13, true, seq{main_i -> (main_i - 1)}>
<l13, l14, true>
<l14, l2, true>
<l15, l16, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l17, true, seq{main__func_return_ -> 0}>
<l17, l18, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l18, l1, true, seq{main_i -> varCall_1, main_up -> 0}>
<l1, l2, true>
<l2, l3, (main_i > 0)>
<l2, l15, not((main_i > 0))>
<l3, l4, (main_i = 1)>
<l3, l6, not((main_i = 1))>
<l4, l5, true, seq{main_up -> 1}>
<l5, l6, true>
<l6, l7, (main_i = 10)>
<l6, l9, not((main_i = 10))>
<l7, l8, true, seq{main_up -> 0}>
<l8, l9, true>
<l9, l10, (main_up = 1)>
<l9, l12, not((main_up = 1))>
<l10, l11, true, seq{main_i -> (main_i + 1)}>
<l11, l14, true>
<l12, l13, true, seq{main_i -> (main_i - 1)}>
<l13, l14, true>
<l14, l2, true>
<l15, l16, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
16, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [4 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1> | <line: 8, col: 9>
main | function | [integer, ()] | <line: 5, col: 1>
i | local variable | integer | <line: 6, col: 5> | <line: 8, col: 5> <line: 11, col: 12> <line: 12, col: 13> <line: 15, col: 13> <line: 19, col: 13> <line: 19, col: 17> <line: 21, col: 13> <line: 21, col: 17>
up | local variable | integer | <line: 7, col: 5> | <line: 9, col: 5> <line: 13, col: 13> <line: 16, col: 13> <line: 18, col: 13>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_i = undef2) /\ (main_up = 0)>
<l2, l2, (main_i > 0) /\ (main_i = 1) /\ (main_i < 10) /\ (1 = 1), par{main_i -> (main_i + 1), main_up -> 1}>
<l2, l2, (main_i > 0) /\ (main_i > 1) /\ (main_i = 10) /\ (0 < 1), par{main_i -> (main_i - 1), main_up -> 0}>
<l2, l2, (main_i > 0) /\ (main_i > 1) /\ (main_i < 10) /\ (main_up = 1), par{main_i -> (main_i + 1)}>
<l2, l2, (main_i > 0) /\ (main_i > 1) /\ (main_i < 10) /\ (main_up < 1), par{main_i -> (main_i - 1)}>
<l2, l2, (main_i > 0) /\ (main_i > 1) /\ (main_i < 10) /\ (main_up > 1), par{main_i -> (main_i - 1)}>
<l2, l2, (main_i > 0) /\ (main_i > 1) /\ (main_i > 10) /\ (main_up = 1), par{main_i -> (main_i + 1)}>
<l2, l2, (main_i > 0) /\ (main_i > 1) /\ (main_i > 10) /\ (main_up < 1), par{main_i -> (main_i - 1)}>
<l2, l2, (main_i > 0) /\ (main_i > 1) /\ (main_i > 10) /\ (main_up > 1), par{main_i -> (main_i - 1)}>
<l2, l16, not((main_i > 0))>

Fresh variables:
undef2, 

Undef variables:
undef2, 

Abstraction variables:

Exit nodes:
16, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>
<l2, l2, main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>
<l2, l2, main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>
<l2, l2, main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
<l2, l2, main_i <= 9 /\ 2 <= main_i /\ 2 <= main_up, {main_i -> -1 + main_i, rest remain the same}>
<l2, l2, 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>
<l2, l2, main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
<l2, l2, 2 <= main_up /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
Variables:
main_i, main_up

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_i = undef2 /\ main_up = 0, {all remain the same}>

Graph 2
<l2, l16, main_i <= 0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 16 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.010055
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l2: main_up <= 1[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 2 <= main_up /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_up <= 1 /\ main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_up <= 1 /\ main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_i <= 9 /\ 2 <= main_i /\ 2 <= main_up, {main_i -> -1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
Checking unfeasibility...
Time used: 0.005638

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001277s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.051343s
[22556 : 22558]
[22556 : 22559]
Successful child: 22558
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= 1 /\ main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= 1 /\ main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= 1 /\ main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= 1 /\ main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:1 + main_i <= main_up - Process 1
* Exit transition: <l0, l2, main_i = undef2 /\ main_up = 0, {all remain the same}>
* Postcondition  : 1 + main_i <= main_up

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000296s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000334s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: 1 + main_i <= main_up , 
Narrowing transition: 
<l2, l2, main_up <= 1 /\ main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, main_up <= 1 /\ main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>
<l2, l2, main_up <= main_i /\ main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
<l2, l2, main_up <= main_i /\ 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
Variables:
main_i, main_up
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001319s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.064416s
[22556 : 22563]
[22556 : 22564]
Successful child: 22563
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:main_i <= 0 - Process 2
* Exit transition: <l0, l2, main_up <= main_i /\ main_i = undef2 /\ main_up = 0, {all remain the same}>
* Postcondition  : main_i <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000488s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000528s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: main_i <= 0 , 
Narrowing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, main_up <= main_i /\ main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, main_up <= main_i /\ 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 1, {main_i -> 1 + main_i, main_up -> 1, rest remain the same}>
<l2, l2, main_up <= main_i /\ main_up <= 1 /\ main_i = 10, {main_i -> -1 + main_i, main_up -> 0, rest remain the same}>
<l2, l2, main_up <= main_i /\ main_i <= 9 /\ 2 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ main_i <= 9 /\ 2 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
<l2, l2, main_up <= main_i /\ 11 <= main_i /\ main_up = 1, {main_i -> 1 + main_i, rest remain the same}>
<l2, l2, main_up <= main_i /\ main_up <= 0 /\ 11 <= main_i, {main_i -> -1 + main_i, rest remain the same}>
Variables:
main_i, main_up
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001376s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.064513s
[22556 : 22568]
[22556 : 22569]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.065647s
Time used: 0.061438

[22556 : 22573]
[22556 : 22577]
Successful child: 22573

[32mProgram does NOT terminate[0m
