unknown

Initial ITS

Start location: l5
Program variables: __const_21^0 __const_31^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l1 : __const_21^0'=__const_21^post1, __const_31^0'=__const_31^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ -__const_21^post1+__const_21^0 == 0 /\ 1-__const_21^0+x_5^0 <= 0 /\ -__const_31^post1+__const_31^0 == 0 /\ -x_5^post1+x_5^0 == 0), cost: 1
   1: l0 -> l2 : __const_21^0'=__const_21^post2, __const_31^0'=__const_31^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (__const_21^0-x_5^0 <= 0 /\ -x_5^post2+x_5^0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ __const_21^0-__const_21^post2 == 0 /\ -__const_31^post2+__const_31^0 == 0 /\ y_6^0-y_6^post2 == 0), cost: 1
   3: l2 -> l0 : __const_21^0'=__const_21^post4, __const_31^0'=__const_31^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (1+x_5^post4-x_5^0 == 0 /\ __const_21^0-__const_21^post4 == 0 /\ -__const_31^post4+__const_31^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ y_6^0-y_6^post4 == 0 /\ 1+y_6^0-__const_31^0 <= 0), cost: 1
   4: l2 -> l4 : __const_21^0'=__const_21^post5, __const_31^0'=__const_31^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (result_4^0-result_4^post5 == 0 /\ 1+y_6^post5-y_6^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__const_21^post5+__const_21^0 == 0 /\ -y_6^0+__const_31^0 <= 0 /\ -__const_31^post5+__const_31^0 == 0), cost: 1
   2: l3 -> l0 : __const_21^0'=__const_21^post3, __const_31^0'=__const_31^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-x_5^post3+x_5^0 == 0 /\ -__const_21^post3+__const_21^0 == 0 /\ result_4^0-result_4^post3 == 0 /\ -y_6^post3+y_6^0 == 0 /\ -__const_31^post3+__const_31^0 == 0), cost: 1
   5: l4 -> l2 : __const_21^0'=__const_21^post6, __const_31^0'=__const_31^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (-x_5^post6+x_5^0 == 0 /\ __const_21^0-__const_21^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -__const_31^post6+__const_31^0 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
   6: l5 -> l3 : __const_21^0'=__const_21^post7, __const_31^0'=__const_31^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (-__const_21^post7+__const_21^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -__const_31^post7+__const_31^0 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1

Chained Linear Paths

Start location: l5
Program variables: __const_21^0 __const_31^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l1 : __const_21^0'=__const_21^post1, __const_31^0'=__const_31^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ -__const_21^post1+__const_21^0 == 0 /\ 1-__const_21^0+x_5^0 <= 0 /\ -__const_31^post1+__const_31^0 == 0 /\ -x_5^post1+x_5^0 == 0), cost: 1
   1: l0 -> l2 : __const_21^0'=__const_21^post2, __const_31^0'=__const_31^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (__const_21^0-x_5^0 <= 0 /\ -x_5^post2+x_5^0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ __const_21^0-__const_21^post2 == 0 /\ -__const_31^post2+__const_31^0 == 0 /\ y_6^0-y_6^post2 == 0), cost: 1
   3: l2 -> l0 : __const_21^0'=__const_21^post4, __const_31^0'=__const_31^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (1+x_5^post4-x_5^0 == 0 /\ __const_21^0-__const_21^post4 == 0 /\ -__const_31^post4+__const_31^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ y_6^0-y_6^post4 == 0 /\ 1+y_6^0-__const_31^0 <= 0), cost: 1
   8: l2 -> l2 : __const_21^0'=__const_21^post6, __const_31^0'=__const_31^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (result_4^0-result_4^post5 == 0 /\ 1+y_6^post5-y_6^0 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ -__const_31^post6+__const_31^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__const_21^post5+__const_21^0 == 0 /\ -y_6^0+__const_31^0 <= 0 /\ x_5^post5-x_5^post6 == 0 /\ -__const_31^post5+__const_31^0 == 0 /\ __const_21^post5-__const_21^post6 == 0 /\ -y_6^post6+y_6^post5 == 0), cost: 1
   7: l5 -> l0 : __const_21^0'=__const_21^post3, __const_31^0'=__const_31^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-__const_21^post7+__const_21^0 == 0 /\ -__const_31^post3+__const_31^post7 == 0 /\ -result_4^post3+result_4^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -y_6^post3+y_6^post7 == 0 /\ -x_5^post3+x_5^post7 == 0 /\ -__const_31^post7+__const_31^0 == 0 /\ -__const_21^post3+__const_21^post7 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1

	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l5 -> l3 : __const_21^0'=__const_21^post7, __const_31^0'=__const_31^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (-__const_21^post7+__const_21^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -__const_31^post7+__const_31^0 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	Second rule:
	l3 -> l0 : __const_21^0'=__const_21^post3, __const_31^0'=__const_31^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-x_5^post3+x_5^0 == 0 /\ -__const_21^post3+__const_21^0 == 0 /\ result_4^0-result_4^post3 == 0 /\ -y_6^post3+y_6^0 == 0 /\ -__const_31^post3+__const_31^0 == 0), cost: 1
	New rule:
	l5 -> l0 : __const_21^0'=__const_21^post3, __const_31^0'=__const_31^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-__const_21^post7+__const_21^0 == 0 /\ -__const_31^post3+__const_31^post7 == 0 /\ -result_4^post3+result_4^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -y_6^post3+y_6^post7 == 0 /\ -x_5^post3+x_5^post7 == 0 /\ -__const_31^post7+__const_31^0 == 0 /\ -__const_21^post3+__const_21^post7 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 6
	
	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l2 -> l4 : __const_21^0'=__const_21^post5, __const_31^0'=__const_31^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (result_4^0-result_4^post5 == 0 /\ 1+y_6^post5-y_6^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__const_21^post5+__const_21^0 == 0 /\ -y_6^0+__const_31^0 <= 0 /\ -__const_31^post5+__const_31^0 == 0), cost: 1
	Second rule:
	l4 -> l2 : __const_21^0'=__const_21^post6, __const_31^0'=__const_31^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (-x_5^post6+x_5^0 == 0 /\ __const_21^0-__const_21^post6 == 0 /\ -result_4^post6+result_4^0 == 0 /\ -__const_31^post6+__const_31^0 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
	New rule:
	l2 -> l2 : __const_21^0'=__const_21^post6, __const_31^0'=__const_31^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (result_4^0-result_4^post5 == 0 /\ 1+y_6^post5-y_6^0 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ -__const_31^post6+__const_31^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__const_21^post5+__const_21^0 == 0 /\ -y_6^0+__const_31^0 <= 0 /\ x_5^post5-x_5^post6 == 0 /\ -__const_31^post5+__const_31^0 == 0 /\ __const_21^post5-__const_21^post6 == 0 /\ -y_6^post6+y_6^post5 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 5

Simplified Transitions

Start location: l5
Program variables: __const_21^0 __const_31^0 result_4^0 x_5^0 y_6^0
   9: l0 -> l1 : result_4^0'=result_4^post1, 1-__const_21^0+x_5^0 <= 0, cost: 1
  10: l0 -> l2 : __const_21^0-x_5^0 <= 0, cost: 1
  11: l2 -> l0 : x_5^0'=-1+x_5^0, 1+y_6^0-__const_31^0 <= 0, cost: 1
  13: l2 -> l2 : y_6^0'=-1+y_6^0, -y_6^0+__const_31^0 <= 0, cost: 1
  12: l5 -> l0 : T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : __const_21^0'=__const_21^post1, __const_31^0'=__const_31^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ -y_6^post1+y_6^0 == 0 /\ -__const_21^post1+__const_21^0 == 0 /\ 1-__const_21^0+x_5^0 <= 0 /\ -__const_31^post1+__const_31^0 == 0 /\ -x_5^post1+x_5^0 == 0), cost: 1
	New rule:
	l0 -> l1 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-__const_21^0+x_5^0 <= 0), cost: 1
	
		propagated equality y_6^post1 = y_6^0
		
		propagated equality __const_21^post1 = __const_21^0
		
		propagated equality __const_31^post1 = __const_31^0
		
		propagated equality x_5^post1 = x_5^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-__const_21^0+x_5^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-__const_21^0+x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-__const_21^0+x_5^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : result_4^0'=result_4^post1, 1-__const_21^0+x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l2 : __const_21^0'=__const_21^post2, __const_31^0'=__const_31^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (__const_21^0-x_5^0 <= 0 /\ -x_5^post2+x_5^0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ __const_21^0-__const_21^post2 == 0 /\ -__const_31^post2+__const_31^0 == 0 /\ y_6^0-y_6^post2 == 0), cost: 1
	New rule:
	l0 -> l2 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ __const_21^0-x_5^0 <= 0), cost: 1
	
		propagated equality x_5^post2 = x_5^0
		
		propagated equality result_4^post2 = result_4^0
		
		propagated equality __const_21^post2 = __const_21^0
		
		propagated equality __const_31^post2 = __const_31^0
		
		propagated equality y_6^post2 = y_6^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ __const_21^0-x_5^0 <= 0), cost: 1
	New rule:
	l0 -> l2 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, __const_21^0-x_5^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, __const_21^0-x_5^0 <= 0, cost: 1
	New rule:
	l0 -> l2 : __const_21^0-x_5^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l0 : __const_21^0'=__const_21^post4, __const_31^0'=__const_31^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (1+x_5^post4-x_5^0 == 0 /\ __const_21^0-__const_21^post4 == 0 /\ -__const_31^post4+__const_31^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ y_6^0-y_6^post4 == 0 /\ 1+y_6^0-__const_31^0 <= 0), cost: 1
	New rule:
	l2 -> l0 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+y_6^0-__const_31^0 <= 0), cost: 1
	
		propagated equality x_5^post4 = -1+x_5^0
		
		propagated equality __const_21^post4 = __const_21^0
		
		propagated equality __const_31^post4 = __const_31^0
		
		propagated equality result_4^post4 = result_4^0
		
		propagated equality y_6^post4 = y_6^0
		
	Simplified Guard

	Original rule:
	l2 -> l0 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+y_6^0-__const_31^0 <= 0), cost: 1
	New rule:
	l2 -> l0 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, 1+y_6^0-__const_31^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l0 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=-1+x_5^0, y_6^0'=y_6^0, 1+y_6^0-__const_31^0 <= 0, cost: 1
	New rule:
	l2 -> l0 : x_5^0'=-1+x_5^0, 1+y_6^0-__const_31^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l5 -> l0 : __const_21^0'=__const_21^post3, __const_31^0'=__const_31^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (-__const_21^post7+__const_21^0 == 0 /\ -__const_31^post3+__const_31^post7 == 0 /\ -result_4^post3+result_4^post7 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -y_6^post3+y_6^post7 == 0 /\ -x_5^post3+x_5^post7 == 0 /\ -__const_31^post7+__const_31^0 == 0 /\ -__const_21^post3+__const_21^post7 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	New rule:
	l5 -> l0 : __const_21^0'=__const_21^post7, __const_31^0'=__const_31^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ -__const_21^post7+__const_21^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -__const_31^post7+__const_31^0 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	
		propagated equality __const_31^post3 = __const_31^post7
		
		propagated equality result_4^post3 = result_4^post7
		
		propagated equality y_6^post3 = y_6^post7
		
		propagated equality x_5^post3 = x_5^post7
		
		propagated equality __const_21^post3 = __const_21^post7
		
	Propagated Equalities

	Original rule:
	l5 -> l0 : __const_21^0'=__const_21^post7, __const_31^0'=__const_31^post7, result_4^0'=result_4^post7, x_5^0'=x_5^post7, y_6^0'=y_6^post7, (0 == 0 /\ -__const_21^post7+__const_21^0 == 0 /\ result_4^0-result_4^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -__const_31^post7+__const_31^0 == 0 /\ -x_5^post7+x_5^0 == 0), cost: 1
	New rule:
	l5 -> l0 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	
		propagated equality __const_21^post7 = __const_21^0
		
		propagated equality result_4^post7 = result_4^0
		
		propagated equality y_6^post7 = y_6^0
		
		propagated equality __const_31^post7 = __const_31^0
		
		propagated equality x_5^post7 = x_5^0
		
	Simplified Guard

	Original rule:
	l5 -> l0 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	New rule:
	l5 -> l0 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l5 -> l0 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	New rule:
	l5 -> l0 : T, cost: 1
	
	Propagated Equalities

	Original rule:
	l2 -> l2 : __const_21^0'=__const_21^post6, __const_31^0'=__const_31^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (result_4^0-result_4^post5 == 0 /\ 1+y_6^post5-y_6^0 == 0 /\ -result_4^post6+result_4^post5 == 0 /\ -__const_31^post6+__const_31^post5 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__const_21^post5+__const_21^0 == 0 /\ -y_6^0+__const_31^0 <= 0 /\ x_5^post5-x_5^post6 == 0 /\ -__const_31^post5+__const_31^0 == 0 /\ __const_21^post5-__const_21^post6 == 0 /\ -y_6^post6+y_6^post5 == 0), cost: 1
	New rule:
	l2 -> l2 : __const_21^0'=__const_21^post5, __const_31^0'=__const_31^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ result_4^0-result_4^post5 == 0 /\ 1+y_6^post5-y_6^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__const_21^post5+__const_21^0 == 0 /\ -y_6^0+__const_31^0 <= 0 /\ -__const_31^post5+__const_31^0 == 0), cost: 1
	
		propagated equality result_4^post6 = result_4^post5
		
		propagated equality __const_31^post6 = __const_31^post5
		
		propagated equality x_5^post6 = x_5^post5
		
		propagated equality __const_21^post6 = __const_21^post5
		
		propagated equality y_6^post6 = y_6^post5
		
	Propagated Equalities

	Original rule:
	l2 -> l2 : __const_21^0'=__const_21^post5, __const_31^0'=__const_31^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ result_4^0-result_4^post5 == 0 /\ 1+y_6^post5-y_6^0 == 0 /\ -x_5^post5+x_5^0 == 0 /\ -__const_21^post5+__const_21^0 == 0 /\ -y_6^0+__const_31^0 <= 0 /\ -__const_31^post5+__const_31^0 == 0), cost: 1
	New rule:
	l2 -> l2 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, (0 == 0 /\ -y_6^0+__const_31^0 <= 0), cost: 1
	
		propagated equality result_4^post5 = result_4^0
		
		propagated equality y_6^post5 = -1+y_6^0
		
		propagated equality x_5^post5 = x_5^0
		
		propagated equality __const_21^post5 = __const_21^0
		
		propagated equality __const_31^post5 = __const_31^0
		
	Simplified Guard

	Original rule:
	l2 -> l2 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, (0 == 0 /\ -y_6^0+__const_31^0 <= 0), cost: 1
	New rule:
	l2 -> l2 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, -y_6^0+__const_31^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l2 -> l2 : __const_21^0'=__const_21^0, __const_31^0'=__const_31^0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, -y_6^0+__const_31^0 <= 0, cost: 1
	New rule:
	l2 -> l2 : y_6^0'=-1+y_6^0, -y_6^0+__const_31^0 <= 0, cost: 1

Step with 12

	Trace

	12[T]
	
	Blocked

	[{}, {}]

Step with 9

	Trace

	12[T], 9[(1-__const_21^0+x_5^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {9[T]}]

Step with 10

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T]}, {}]

Step with 11

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T]}, {}, {}]

Accelerate

Start location: l5
Program variables: __const_21^0 __const_31^0 result_4^0 x_5^0 y_6^0
   9: l0 -> l1 : result_4^0'=result_4^post1, 1-__const_21^0+x_5^0 <= 0, cost: 1
  10: l0 -> l2 : __const_21^0-x_5^0 <= 0, cost: 1
  14: l0 -> l0 : x_5^0'=-n+x_5^0, (-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0), cost: 1
  11: l2 -> l0 : x_5^0'=-1+x_5^0, 1+y_6^0-__const_31^0 <= 0, cost: 1
  13: l2 -> l2 : y_6^0'=-1+y_6^0, -y_6^0+__const_31^0 <= 0, cost: 1
  12: l5 -> l0 : T, cost: 1

	Loop Acceleration

	Original rule:
	l0 -> l0 : x_5^0'=-1+x_5^0, (__const_21^0-x_5^0 <= 0 /\ 1+y_6^0-__const_31^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : x_5^0'=-n+x_5^0, (-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0), cost: 1

		-1-y_6^0+__const_31^0 >= 0 [0]: monotonic increase yields -1-y_6^0+__const_31^0 >= 0
		
		-__const_21^0+x_5^0 >= 0 [0]: montonic decrease yields 1-n-__const_21^0+x_5^0 >= 0
		
		-__const_21^0+x_5^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -__const_21^0+x_5^0 >= 0)
		
		Replacement map: {-1-y_6^0+__const_31^0 >= 0 -> -1-y_6^0+__const_31^0 >= 0, -__const_21^0+x_5^0 >= 0 -> 1-n-__const_21^0+x_5^0 >= 0}

	Trace

	12[T], 14[(-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T]}, {14[T]}]

Step with 9

	Trace

	12[T], 14[(-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0)], 9[(1-__const_21^0+x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T]}, {14[T]}, {}]

Backtrack

	Trace

	12[T], 14[(-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 14[T]}]

Step with 10

	Trace

	12[T], 14[(-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0)], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 14[T]}, {}]

Step with 11

	Trace

	12[T], 14[(-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0)], 10[(__const_21^0-x_5^0 <= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 14[T]}, {}, {}]

Covered

	Trace

	12[T], 14[(-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0)], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 14[T]}, {11[T]}]

Backtrack

	Trace

	12[T], 14[(-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T]}, {9[T], 10[T], 14[T]}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {9[T], 14[T]}]

Step with 10

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {}]

Step with 11

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {}, {}]

Covered

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}]

Step with 13

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 13[(-y_6^0+__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {}]

Accelerate

Start location: l5
Program variables: __const_21^0 __const_31^0 result_4^0 x_5^0 y_6^0
   9: l0 -> l1 : result_4^0'=result_4^post1, 1-__const_21^0+x_5^0 <= 0, cost: 1
  10: l0 -> l2 : __const_21^0-x_5^0 <= 0, cost: 1
  14: l0 -> l0 : x_5^0'=-n+x_5^0, (-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0), cost: 1
  11: l2 -> l0 : x_5^0'=-1+x_5^0, 1+y_6^0-__const_31^0 <= 0, cost: 1
  13: l2 -> l2 : y_6^0'=-1+y_6^0, -y_6^0+__const_31^0 <= 0, cost: 1
  15: l2 -> l2 : y_6^0'=-n2+y_6^0, (-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0), cost: 1
  12: l5 -> l0 : T, cost: 1

	Loop Acceleration

	Original rule:
	l2 -> l2 : y_6^0'=-1+y_6^0, (-y_6^0+__const_31^0 <= 0), cost: 1
	New rule:
	l2 -> l2 : y_6^0'=-n2+y_6^0, (-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0), cost: 1

		y_6^0-__const_31^0 >= 0 [0]: montonic decrease yields 1-n2+y_6^0-__const_31^0 >= 0
		
		y_6^0-__const_31^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ y_6^0-__const_31^0 >= 0)
		
		Replacement map: {y_6^0-__const_31^0 >= 0 -> 1-n2+y_6^0-__const_31^0 >= 0}

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}]

Step with 11

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 10

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {}, {}]

Accelerate

Start location: l5
Program variables: __const_21^0 __const_31^0 result_4^0 x_5^0 y_6^0
   9: l0 -> l1 : result_4^0'=result_4^post1, 1-__const_21^0+x_5^0 <= 0, cost: 1
  10: l0 -> l2 : __const_21^0-x_5^0 <= 0, cost: 1
  14: l0 -> l0 : x_5^0'=-n+x_5^0, (-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0), cost: 1
  11: l2 -> l0 : x_5^0'=-1+x_5^0, 1+y_6^0-__const_31^0 <= 0, cost: 1
  13: l2 -> l2 : y_6^0'=-1+y_6^0, -y_6^0+__const_31^0 <= 0, cost: 1
  15: l2 -> l2 : y_6^0'=-n2+y_6^0, (-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0), cost: 1
  16: l2 -> l2 : x_5^0'=-n3+x_5^0, (-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0), cost: 1
  12: l5 -> l0 : T, cost: 1

	Loop Acceleration

	Original rule:
	l2 -> l2 : x_5^0'=-1+x_5^0, (1+__const_21^0-x_5^0 <= 0 /\ 1+y_6^0-__const_31^0 <= 0), cost: 1
	New rule:
	l2 -> l2 : x_5^0'=-n3+x_5^0, (-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0), cost: 1

		-1-y_6^0+__const_31^0 >= 0 [0]: monotonic increase yields -1-y_6^0+__const_31^0 >= 0
		
		-1-__const_21^0+x_5^0 >= 0 [0]: montonic decrease yields -n3-__const_21^0+x_5^0 >= 0
		
		-1-__const_21^0+x_5^0 >= 0 [1]: eventual increase yields (1 <= 0 /\ -1-__const_21^0+x_5^0 >= 0)
		
		Replacement map: {-1-y_6^0+__const_31^0 >= 0 -> -1-y_6^0+__const_31^0 >= 0, -1-__const_21^0+x_5^0 >= 0 -> -n3-__const_21^0+x_5^0 >= 0}

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {16[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 11

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {16[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 10

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {16[T]}, {}, {}]

Covered

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {16[T]}, {10[T]}]

Step with 14

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)], 14[(-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {16[T]}, {10[T]}, {14[T]}]

Covered

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {16[T]}, {10[T], 14[T]}]

Step with 9

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)], 9[(1-__const_21^0+x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {16[T]}, {10[T], 14[T]}, {}]

Backtrack

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {16[T]}, {9[T], 10[T], 14[T]}]

Backtrack

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T]}, {11[T], 16[T]}]

Backtrack

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T], 16[T]}]

Step with 11

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T], 16[T]}, {}]

Step with 9

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)], 9[(1-__const_21^0+x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T], 16[T]}, {}, {}]

Backtrack

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T], 16[T]}, {9[T]}]

Step with 10

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T], 16[T]}, {9[T]}, {}]

Covered

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T], 16[T]}, {9[T], 10[T]}]

Step with 14

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)], 14[(-1+n >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ 1-n-__const_21^0+x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T], 16[T]}, {9[T], 10[T]}, {14[T]}]

Covered

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {13[T], 15[T], 16[T]}, {9[T], 10[T], 14[T]}]

Backtrack

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 15[(-1+n2 >= 0 /\ 1-n2+y_6^0-__const_31^0 >= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T]}, {11[T], 13[T], 15[T], 16[T]}]

Backtrack

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T], 15[T]}]

Step with 13

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 13[(-y_6^0+__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T], 15[T]}, {}]

Covered

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T], 13[T], 15[T]}]

Step with 16

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T], 13[T], 15[T]}, {16[T]}]

Step with 11

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)], 11[(1+y_6^0-__const_31^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T], 13[T], 15[T]}, {16[T]}, {}]

Covered

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)], 16[(-1+n3 >= 0 /\ -1-y_6^0+__const_31^0 >= 0 /\ -n3-__const_21^0+x_5^0 >= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T], 13[T], 15[T]}, {11[T], 16[T]}]

Backtrack

	Trace

	12[T], 10[(__const_21^0-x_5^0 <= 0)]
	
	Blocked

	[{}, {9[T], 14[T]}, {11[T], 13[T], 15[T], 16[T]}]

Backtrack

	Trace

	12[T]
	
	Blocked

	[{}, {9[T], 10[T], 14[T]}]

Backtrack

	Trace

	Blocked

	[{12[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
