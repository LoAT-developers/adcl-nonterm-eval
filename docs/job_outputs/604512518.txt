unknown

Initial ITS

Start location: [1]
Program variables: c i
   0: [1] -> [2] : i'=0, T, cost: 1
   1: [2] -> [3] : c'=0, T, cost: 1
   2: [3] -> [4] : -20+i < 0, cost: 1
  10: [3] -> [10] : -20+i >= 0, cost: 1
   3: [4] -> [5] : i'=1+i, T, cost: 1
   4: [5] -> [7] : -10+i <= 0, cost: 1
   6: [5] -> [8] : -10+i > 0, cost: 1
   9: [6] -> [3] : T, cost: 1
   5: [7] -> [6] : T, cost: 1
   7: [8] -> [9] : c'=1+c, T, cost: 1
   8: [9] -> [6] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: c i
  11: [1] -> [3] : c'=0, i'=0, T, cost: 1
  10: [3] -> [10] : -20+i >= 0, cost: 1
  12: [3] -> [5] : i'=1+i, -20+i < 0, cost: 1
  13: [5] -> [6] : -10+i <= 0, cost: 1
  15: [5] -> [6] : c'=1+c, -10+i > 0, cost: 1
   9: [6] -> [3] : T, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : i'=0, T, cost: 1
	Second rule:
	[2] -> [3] : c'=0, T, cost: 1
	New rule:
	[1] -> [3] : c'=0, i'=0, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : -20+i < 0, cost: 1
	Second rule:
	[4] -> [5] : i'=1+i, T, cost: 1
	New rule:
	[3] -> [5] : i'=1+i, -20+i < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[5] -> [7] : -10+i <= 0, cost: 1
	Second rule:
	[7] -> [6] : T, cost: 1
	New rule:
	[5] -> [6] : -10+i <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 5
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[5] -> [8] : -10+i > 0, cost: 1
	Second rule:
	[8] -> [9] : c'=1+c, T, cost: 1
	New rule:
	[5] -> [9] : c'=1+c, -10+i > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 6 7
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[5] -> [9] : c'=1+c, -10+i > 0, cost: 1
	Second rule:
	[9] -> [6] : T, cost: 1
	New rule:
	[5] -> [6] : c'=1+c, -10+i > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 14

Step with 11

	Trace

	11[T]
	
	Blocked

	[{}, {}]

Step with 12

	Trace

	11[T], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T]}, {}]

Step with 13

	Trace

	11[T], 12[(-20+i < 0)], 13[(-10+i <= 0)]
	
	Blocked

	[{}, {10[T]}, {}, {}]

Step with 9

	Trace

	11[T], 12[(-20+i < 0)], 13[(-10+i <= 0)], 9[T]
	
	Blocked

	[{}, {10[T]}, {}, {}, {}]

Accelerate

Start location: [1]
Program variables: c i
  11: [1] -> [3] : c'=0, i'=0, T, cost: 1
  10: [3] -> [10] : -20+i >= 0, cost: 1
  12: [3] -> [5] : i'=1+i, -20+i < 0, cost: 1
  16: [3] -> [3] : i'=n+i, (20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0), cost: 1
  13: [5] -> [6] : -10+i <= 0, cost: 1
  15: [5] -> [6] : c'=1+c, -10+i > 0, cost: 1
   9: [6] -> [3] : T, cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : i'=1+i, (-20+i < 0 /\ -9+i <= 0), cost: 1
	New rule:
	[3] -> [3] : i'=n+i, (20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0), cost: 1

		20-i > 0 [0]: monotonic increase yields 20-i > 0, dependencies: 9-i >= 0
		
		20-i > 0 [1]: montonic decrease yields 21-n-i > 0, dependencies: 9-i >= 0
		
		20-i > 0 [2]: eventual decrease yields (20-i > 0 /\ 21-n-i > 0)
		
		20-i > 0 [3]: eventual increase yields (20-i > 0 /\ 1 <= 0)
		
		9-i >= 0 [0]: montonic decrease yields 10-n-i >= 0
		
		9-i >= 0 [1]: eventual increase yields (1 <= 0 /\ 9-i >= 0)
		
		Replacement map: {20-i > 0 -> 20-i > 0, 9-i >= 0 -> 10-n-i >= 0}

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)]
	
	Blocked

	[{}, {10[T]}, {16[T]}]

Step with 12

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {}]

Step with 13

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 13[(-10+i <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {}, {}]

Step with 9

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 13[(-10+i <= 0)], 9[T]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {}, {}, {}]

Covered

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 13[(-10+i <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {}, {9[T]}]

Backtrack

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {13[T]}]

Step with 15

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 15[(-10+i > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {13[T]}, {}]

Step with 9

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 15[(-10+i > 0)], 9[T]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {13[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: c i
  11: [1] -> [3] : c'=0, i'=0, T, cost: 1
  10: [3] -> [10] : -20+i >= 0, cost: 1
  12: [3] -> [5] : i'=1+i, -20+i < 0, cost: 1
  16: [3] -> [3] : i'=n+i, (20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0), cost: 1
  17: [3] -> [3] : c'=c+n2, i'=i+n2, (21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0), cost: 1
  13: [5] -> [6] : -10+i <= 0, cost: 1
  15: [5] -> [6] : c'=1+c, -10+i > 0, cost: 1
   9: [6] -> [3] : T, cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : c'=1+c, i'=1+i, (-20+i < 0 /\ -9+i > 0), cost: 1
	New rule:
	[3] -> [3] : c'=c+n2, i'=i+n2, (21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0), cost: 1

		20-i > 0 [0]: montonic decrease yields 21-i-n2 > 0
		
		20-i > 0 [1]: eventual increase yields (20-i > 0 /\ 1 <= 0)
		
		-9+i > 0 [0]: monotonic increase yields -9+i > 0
		
		Replacement map: {20-i > 0 -> 21-i-n2 > 0, -9+i > 0 -> -9+i > 0}

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 17[(21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {17[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 10

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 17[(21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0)], 10[(-20+i >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {17[T]}, {}]

Backtrack

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 17[(21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {10[T], 17[T]}]

Step with 12

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 17[(21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0)], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {10[T], 17[T]}, {}]

Step with 15

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 17[(21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0)], 12[(-20+i < 0)], 15[(-10+i > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {10[T], 17[T]}, {}, {}]

Step with 9

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 17[(21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0)], 12[(-20+i < 0)], 15[(-10+i > 0)], 9[T]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {10[T], 17[T]}, {}, {}, {}]

Covered

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 17[(21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0)], 12[(-20+i < 0)], 15[(-10+i > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {10[T], 17[T]}, {}, {9[T]}]

Backtrack

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 17[(21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0)], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {10[T], 17[T]}, {15[T]}]

Backtrack

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 17[(21-i-n2 > 0 /\ -9+i > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T]}, {10[T], 12[T], 17[T]}]

Backtrack

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}]

Step with 12

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}, {}]

Step with 15

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 15[(-10+i > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}, {}, {}]

Step with 9

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 15[(-10+i > 0)], 9[T]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}, {}, {}, {}]

Covered

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 15[(-10+i > 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}, {}, {9[T]}]

Backtrack

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}, {15[T]}]

Step with 13

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 13[(-10+i <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}, {15[T]}, {}]

Step with 9

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 13[(-10+i <= 0)], 9[T]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}, {15[T]}, {}, {}]

Covered

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)], 13[(-10+i <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}, {15[T]}, {9[T]}]

Backtrack

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 16[T], 17[T]}, {13[T], 15[T]}]

Backtrack

	Trace

	11[T], 16[(20-i > 0 /\ -1+n >= 0 /\ 10-n-i >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 12[T], 16[T], 17[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T], 16[T]}]

Step with 12

	Trace

	11[T], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {}]

Step with 13

	Trace

	11[T], 12[(-20+i < 0)], 13[(-10+i <= 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {}, {}]

Step with 9

	Trace

	11[T], 12[(-20+i < 0)], 13[(-10+i <= 0)], 9[T]
	
	Blocked

	[{}, {10[T], 16[T]}, {}, {}, {}]

Covered

	Trace

	11[T], 12[(-20+i < 0)], 13[(-10+i <= 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {}, {9[T]}]

Backtrack

	Trace

	11[T], 12[(-20+i < 0)]
	
	Blocked

	[{}, {10[T], 16[T]}, {13[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T], 12[T], 16[T]}]

Backtrack

	Trace

	Blocked

	[{11[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
