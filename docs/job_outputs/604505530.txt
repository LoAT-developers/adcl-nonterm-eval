NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f116_0_flip_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
   1: f116_0_flip_EQ -> f116_0_flip_EQ : arg2'=arg2P1, arg1'=arg1P1, (arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P1 == 0 /\ arg1-arg2P1 == 0), cost: 1
   2: __init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Applied preprocessing
Original rule:
f116_0_flip_EQ -> f116_0_flip_EQ : arg2'=arg2P1, arg1'=arg1P1, (arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P1 == 0 /\ arg1-arg2P1 == 0), cost: 1
New rule:
f116_0_flip_EQ -> f116_0_flip_EQ : arg2'=arg1, arg1'=arg2, (arg2 > 0 /\ arg1 > 0), cost: 1

Simplified rules
Start location: __init
   0: f1_0_main_Load -> f116_0_flip_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
   3: f116_0_flip_EQ -> f116_0_flip_EQ : arg2'=arg1, arg1'=arg2, (arg2 > 0 /\ arg1 > 0), cost: 1
   2: __init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Applied unrolling
Original rule:
f116_0_flip_EQ -> f116_0_flip_EQ : arg2'=arg1, arg1'=arg2, (arg2 > 0 /\ arg1 > 0), cost: 1
New rule:
f116_0_flip_EQ -> f116_0_flip_EQ : arg2'=arg2, arg1'=arg1, (arg2 > 0 /\ arg1 > 0), cost: 2

Applied nonterm
Original rule:
f116_0_flip_EQ -> f116_0_flip_EQ : arg2'=arg2, arg1'=arg1, (arg2 > 0 /\ arg1 > 0), cost: 2
New rule:
f116_0_flip_EQ -> [3] : (arg2 > 0 /\ arg1 > 0 /\ n >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ggEfbC.txt

Applied deletion
Removed the following rules: 3

Accelerated simple loops
Start location: __init
   0: f1_0_main_Load -> f116_0_flip_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
   4: f116_0_flip_EQ -> [3] : (arg2 > 0 /\ arg1 > 0 /\ n >= 0), cost: NONTERM
   2: __init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f116_0_flip_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
Second rule:
f116_0_flip_EQ -> [3] : (arg2 > 0 /\ arg1 > 0 /\ n >= 0), cost: NONTERM
New rule:
f1_0_main_Load -> [3] : (arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 4

Chained accelerated rules with incoming rules
Start location: __init
   0: f1_0_main_Load -> f116_0_flip_EQ : arg2'=arg2P0, arg1'=arg1P0, (1+arg2P0 > 0 /\ arg1 > 0 /\ 1+arg1P0 > 0 /\ -1+arg2 > 0), cost: 1
   5: f1_0_main_Load -> [3] : (arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
   2: __init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
   5: f1_0_main_Load -> [3] : (arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
   2: __init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, TRUE, cost: 1
Second rule:
f1_0_main_Load -> [3] : (arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
New rule:
__init -> [3] : (-1+arg2P2 > 0 /\ arg1P2 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 2 5

Eliminated locations on linear paths
Start location: __init
   6: __init -> [3] : (-1+arg2P2 > 0 /\ arg1P2 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 6 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-1+arg2P2 > 0 /\ arg1P2 > 0)
