NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_j -> 0, main_i -> 0}>
<l1, l2, true>
<l2, l8, not((main_i <= main_j))>
<l2, l3, (main_i <= main_j)>
<l3, l4, ((main_j - main_i) < 1)>
<l3, l6, not(((main_j - main_i) < 1))>
<l4, l5, true, seq{main_j -> (main_j + 2)}>
<l5, l6, true>
<l6, l7, true, seq{main_i -> (main_i + 1)}>
<l7, l2, true>
<l8, l9, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_j -> 0, main_i -> 0}>
<l1, l2, true>
<l2, l3, (main_i <= main_j)>
<l2, l8, not((main_i <= main_j))>
<l3, l4, ((main_j - main_i) < 1)>
<l3, l6, not(((main_j - main_i) < 1))>
<l4, l5, true, seq{main_j -> (main_j + 2)}>
<l5, l6, true>
<l6, l7, true, seq{main_i -> (main_i + 1)}>
<l7, l2, true>
<l8, l9, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
9, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [1 functions]:
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [4 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1>
main | function | [integer, ()] | <line: 5, col: 1>
i | local variable | integer | <line: 6, col: 5> | <line: 9, col: 5> <line: 11, col: 12> <line: 12, col: 15> <line: 13, col: 9> <line: 13, col: 13>
j | local variable | integer | <line: 7, col: 5> | <line: 8, col: 5> <line: 11, col: 17> <line: 12, col: 13> <line: 12, col: 24> <line: 12, col: 28>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_i = 0) /\ (main_j = 0)>
<l2, l2, (main_i <= main_j) /\ ((main_j - main_i) < 1), par{main_i -> (main_i + 1), main_j -> (main_j + 2)}>
<l2, l2, (main_i <= main_j) /\ not(((main_j - main_i) < 1)), par{main_i -> (main_i + 1)}>
<l2, l9, not((main_i <= main_j))>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
9, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, main_i = main_j, {main_i -> 1 + main_i, main_j -> 2 + main_j, rest remain the same}>
<l2, l2, 1 + main_i <= main_j, {main_i -> 1 + main_i, rest remain the same}>
Variables:
main_i, main_j

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_i = 0 /\ main_j = 0, {all remain the same}>

Graph 2
<l2, l9, 1 + main_j <= main_i, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 9 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.00669

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000600s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003054s
[23229 : 23231]
[23229 : 23232]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.034419s
Time used: 0.033651
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000352s
Time used: 1.00019

LOG: SAT solveNonLinear - Elapsed time: 1.034771s
Cost: 1; Total time: 1.03384
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: main_j <= 1 + main_i[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i = main_j, {main_i -> 1 + main_i, main_j -> 2 + main_j, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + main_i = main_j, {main_i -> 1 + main_i, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i = main_j, {main_i -> 1 + main_i, main_j -> 2 + main_j, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + main_i = main_j, {main_i -> 1 + main_i, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - 2*main_i + main_j[0m
New Graphs: 
Transitions:
<l2, l2, main_i = main_j, {main_i -> 1 + main_i, main_j -> 2 + main_j, rest remain the same}>
<l2, l2, 50001 + main_j <= 2*main_i /\ 1 + main_i = main_j, {main_i -> 1 + main_i, rest remain the same}>
Variables:
main_i, main_j
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000399s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003358s
[23229 : 23236]
[23229 : 23237]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.012634s
Time used: 0.012219
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000389s
Time used: 1.00038

LOG: SAT solveNonLinear - Elapsed time: 1.013023s
Cost: 1; Total time: 1.01259
[33mTermination implied by a set of invariant(s):[0m
[36mInvariant at l2: main_i <= 1 + main_j[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i = main_j, {main_i -> 1 + main_i, main_j -> 2 + main_j, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + main_i = main_j, {main_i -> 1 + main_i, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, main_i = main_j, {main_i -> 1 + main_i, main_j -> 2 + main_j, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 50001 + main_j <= 2*main_i /\ 1 + main_i = main_j, {main_i -> 1 + main_i, rest remain the same}>
[33mQuasi-ranking function: [36m50000 - main_i[0m
New Graphs: 
Transitions:
<l2, l2, 50001 <= main_i /\ main_i = main_j, {main_i -> 1 + main_i, main_j -> 2 + main_j, rest remain the same}>
<l2, l2, 50001 <= main_i /\ 50001 + main_j <= 2*main_i /\ 1 + main_i = main_j, {main_i -> 1 + main_i, rest remain the same}>
Variables:
main_i, main_j
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000488s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005825s
[23229 : 23241]
[23229 : 23242]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.014091s
Time used: 0.013695
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000871s
Time used: 1.00086

LOG: SAT solveNonLinear - Elapsed time: 1.014962s
Cost: 1; Total time: 1.01455
[33mQuasi-ranking function: [36m50000 - main_i - main_j[0m
New Graphs: 
Transitions:
<l2, l2, 50001 <= main_i /\ 50001 <= main_i + main_j /\ main_i = main_j, {main_i -> 1 + main_i, main_j -> 2 + main_j, rest remain the same}>
<l2, l2, 50001 <= main_i /\ 50001 <= main_i + main_j /\ 50001 + main_j <= 2*main_i /\ 1 + main_i = main_j, {main_i -> 1 + main_i, rest remain the same}>
Variables:
main_i, main_j
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000596s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006877s
[23229 : 23246]
[23229 : 23247]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.019218s
Time used: 0.018445
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000579s
Time used: 1.00042

LOG: SAT solveNonLinear - Elapsed time: 1.019796s
Cost: 1; Total time: 1.01887
[33mQuasi-ranking function: [36m50000 - main_j[0m
New Graphs: 
Transitions:
<l2, l2, 50001 <= main_i /\ 50001 <= main_i + main_j /\ 50001 <= main_j /\ main_i = main_j, {main_i -> 1 + main_i, main_j -> 2 + main_j, rest remain the same}>
<l2, l2, 50001 <= main_i /\ 50001 <= main_i + main_j /\ 50001 + main_j <= 2*main_i /\ 1 + main_i = main_j, {main_i -> 1 + main_i, rest remain the same}>
Variables:
main_i, main_j
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000683s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005350s
[23229 : 23251]
[23229 : 23252]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.101589s
Time used: 4.10045
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, main_i = 0 /\ main_j = 0, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, main_i = 0 /\ main_j = 0, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009626s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.009660s
Cannot prove unreachability

[23229 : 23256]
[23229 : 23259]
Successful child: 23256

[32mProgram does NOT terminate[0m
