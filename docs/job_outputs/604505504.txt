WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f1317_0_mirror_NULL : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ arg1 > 0), cost: 1
   4: f1_0_main_Load -> f731_0_random_ArrayAccess : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ arg1 > 0), cost: 1
   6: f1_0_main_Load -> f750_0_random_ArrayAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ arg1 > 0 /\ arg1P6 > 0), cost: 1
  14: f1_0_main_Load -> f973_0_random_ArrayAccess : arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (-arg1+arg2P14 <= 0 /\ -arg3P14 == 0 /\ 1+arg2 > 0 /\ arg1P14-arg1 <= 0 /\ arg1P14 > 0 /\ arg1 > 0 /\ arg2P14 > 0), cost: 1
   2: f1317_0_mirror_NULL -> f1317_0_mirror_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ arg1 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
   1: f322_0_createTree_Return -> f1317_0_mirror_NULL : arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (1+arg1 > 0 /\ -arg1+arg1P1 <= 0 /\ 1+arg1P1 > 0), cost: 1
   3: f477_0_createNode_Return -> f731_0_random_ArrayAccess : arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, arg1P3 > 0, cost: 1
   8: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ arg1 > 0 /\ 1-arg4P8+x270 == 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
   5: f512_0_createNode_Return -> f750_0_random_ArrayAccess : arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, arg1P5 > 0, cost: 1
   7: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ arg1 > 0 /\ 1+arg2P7 > 0 /\ 1-arg4P7+x220 == 0 /\ -3+arg1P7 > 0), cost: 1
   9: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg1P9 > 0 /\ arg2 > 0 /\ -1-arg2P9+arg2 == 0 /\ arg3-arg3P9 == 0 /\ 2-arg1+arg1P9 <= 0 /\ -arg4P9+arg4 == 0 /\ -1+arg1 > 0), cost: 1
  10: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-1+arg2-arg2P10 == 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ x420 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ -arg3P10+arg3 == 0 /\ -2+arg1P10-arg1 <= 0), cost: 1
  11: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1 > 0 /\ arg2 > 0 /\ -1-arg2P11+arg2 == 0 /\ arg3-arg3P11 == 0 /\ -2+arg1P11-arg1 <= 0 /\ arg4 > 0 /\ x490 > 0 /\ -3+arg1P11 > 0), cost: 1
  12: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (-2+arg1 > 0 /\ x560 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ -3-arg1+arg1P12 <= 0 /\ -1+arg2-arg2P12 == 0 /\ -5+arg1P12 > 0 /\ -arg3P12+arg3 == 0), cost: 1
  13: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg1 > 0 /\ arg2 > 0 /\ -3-arg1+arg1P13 <= 0 /\ x630 > 0 /\ -1+arg2-arg2P13 == 0 /\ arg4 > 0 /\ -arg3P13+arg3 == 0 /\ -5+arg1P13 > 0), cost: 1
  15: f1551_0_createTree_LE -> f973_0_random_ArrayAccess : arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (-2+arg1 > 0 /\ 2+arg2P15-arg1 <= 0 /\ arg2 > 0 /\ arg2P15 > 0 /\ arg4 > 0 /\ 1+arg3 > 0 /\ arg4-arg3P15 == 0), cost: 1
  16: f1551_0_createTree_LE -> f973_0_random_ArrayAccess : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg3P16 > 0 /\ 2+arg2P16-arg1 <= 0 /\ arg2 > 0 /\ arg4 > 0 /\ arg2P16 > 0 /\ 1+arg3 > 0), cost: 1
  17: __init -> f1_0_main_Load : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, TRUE, cost: 1


Removed unreachable rules and leafs
Start location: __init
   0: f1_0_main_Load -> f1317_0_mirror_NULL : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ arg1 > 0), cost: 1
   4: f1_0_main_Load -> f731_0_random_ArrayAccess : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ arg1 > 0), cost: 1
   6: f1_0_main_Load -> f750_0_random_ArrayAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ arg1 > 0 /\ arg1P6 > 0), cost: 1
   2: f1317_0_mirror_NULL -> f1317_0_mirror_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ arg1 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
   8: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ arg1 > 0 /\ 1-arg4P8+x270 == 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
   7: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ arg1 > 0 /\ 1+arg2P7 > 0 /\ 1-arg4P7+x220 == 0 /\ -3+arg1P7 > 0), cost: 1
   9: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg1P9 > 0 /\ arg2 > 0 /\ -1-arg2P9+arg2 == 0 /\ arg3-arg3P9 == 0 /\ 2-arg1+arg1P9 <= 0 /\ -arg4P9+arg4 == 0 /\ -1+arg1 > 0), cost: 1
  10: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-1+arg2-arg2P10 == 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ x420 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ -arg3P10+arg3 == 0 /\ -2+arg1P10-arg1 <= 0), cost: 1
  11: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1 > 0 /\ arg2 > 0 /\ -1-arg2P11+arg2 == 0 /\ arg3-arg3P11 == 0 /\ -2+arg1P11-arg1 <= 0 /\ arg4 > 0 /\ x490 > 0 /\ -3+arg1P11 > 0), cost: 1
  12: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (-2+arg1 > 0 /\ x560 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ -3-arg1+arg1P12 <= 0 /\ -1+arg2-arg2P12 == 0 /\ -5+arg1P12 > 0 /\ -arg3P12+arg3 == 0), cost: 1
  13: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg1 > 0 /\ arg2 > 0 /\ -3-arg1+arg1P13 <= 0 /\ x630 > 0 /\ -1+arg2-arg2P13 == 0 /\ arg4 > 0 /\ -arg3P13+arg3 == 0 /\ -5+arg1P13 > 0), cost: 1
  17: __init -> f1_0_main_Load : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, TRUE, cost: 1


Applied preprocessing
Original rule:
f1317_0_mirror_NULL -> f1317_0_mirror_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ arg1 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
New rule:
f1317_0_mirror_NULL -> f1317_0_mirror_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f731_0_random_ArrayAccess : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ arg1P4 > 0 /\ arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f731_0_random_ArrayAccess : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ arg1P4 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f750_0_random_ArrayAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ arg1 > 0 /\ arg1P6 > 0), cost: 1
New rule:
f1_0_main_Load -> f750_0_random_ArrayAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ arg1P6 > 0), cost: 1

Applied preprocessing
Original rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ arg1 > 0 /\ 1+arg2P7 > 0 /\ 1-arg4P7+x220 == 0 /\ -3+arg1P7 > 0), cost: 1
New rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=1+x220, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ 1+arg2P7 > 0 /\ -3+arg1P7 > 0), cost: 1

Applied preprocessing
Original rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ arg1 > 0 /\ 1-arg4P8+x270 == 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
New rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=1+x270, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1

Applied preprocessing
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (1+arg1P9 > 0 /\ arg2 > 0 /\ -1-arg2P9+arg2 == 0 /\ arg3-arg3P9 == 0 /\ 2-arg1+arg1P9 <= 0 /\ -arg4P9+arg4 == 0 /\ -1+arg1 > 0), cost: 1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg1'=arg1P9, (1+arg1P9 > 0 /\ arg2 > 0 /\ 2-arg1+arg1P9 <= 0), cost: 1

Applied preprocessing
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-1+arg2-arg2P10 == 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ x420 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ -arg3P10+arg3 == 0 /\ -2+arg1P10-arg1 <= 0), cost: 1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ -2+arg1P10-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-2+arg1 > 0 /\ arg2 > 0 /\ -1-arg2P11+arg2 == 0 /\ arg3-arg3P11 == 0 /\ -2+arg1P11-arg1 <= 0 /\ arg4 > 0 /\ x490 > 0 /\ -3+arg1P11 > 0), cost: 1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P11-arg1 <= 0 /\ arg4 > 0 /\ -3+arg1P11 > 0), cost: 1

Applied preprocessing
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (-2+arg1 > 0 /\ x560 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ -3-arg1+arg1P12 <= 0 /\ -1+arg2-arg2P12 == 0 /\ -5+arg1P12 > 0 /\ -arg3P12+arg3 == 0), cost: 1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P12, arg1'=arg1P12, (arg2 > 0 /\ arg4 > 0 /\ -3-arg1+arg1P12 <= 0 /\ -5+arg1P12 > 0), cost: 1

Applied preprocessing
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg1 > 0 /\ arg2 > 0 /\ -3-arg1+arg1P13 <= 0 /\ x630 > 0 /\ -1+arg2-arg2P13 == 0 /\ arg4 > 0 /\ -arg3P13+arg3 == 0 /\ -5+arg1P13 > 0), cost: 1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P13, arg1'=arg1P13, (arg2 > 0 /\ -3-arg1+arg1P13 <= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0), cost: 1

Simplified rules
Start location: __init
   0: f1_0_main_Load -> f1317_0_mirror_NULL : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ arg1 > 0), cost: 1
  19: f1_0_main_Load -> f731_0_random_ArrayAccess : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ arg1P4 > 0), cost: 1
  20: f1_0_main_Load -> f750_0_random_ArrayAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ arg1P6 > 0), cost: 1
  18: f1317_0_mirror_NULL -> f1317_0_mirror_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
  22: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=1+x270, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
  21: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=1+x220, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ 1+arg2P7 > 0 /\ -3+arg1P7 > 0), cost: 1
  23: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg1'=arg1P9, (1+arg1P9 > 0 /\ arg2 > 0 /\ 2-arg1+arg1P9 <= 0), cost: 1
  24: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ -2+arg1P10-arg1 <= 0), cost: 1
  25: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P11-arg1 <= 0 /\ arg4 > 0 /\ -3+arg1P11 > 0), cost: 1
  26: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P12, arg1'=arg1P12, (arg2 > 0 /\ arg4 > 0 /\ -3-arg1+arg1P12 <= 0 /\ -5+arg1P12 > 0), cost: 1
  27: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P13, arg1'=arg1P13, (arg2 > 0 /\ -3-arg1+arg1P13 <= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0), cost: 1
  17: __init -> f1_0_main_Load : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, TRUE, cost: 1


Applied acceleration
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ -2+arg1P10-arg1 <= 0), cost: 1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-n1+arg2, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ 1-n1+arg2 > 0 /\ -1+n1 >= 0 /\ 2-arg1P10+arg1 >= 0), cost: n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_dmkIAc.txt

Applied instantiation
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-n1+arg2, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ 1-n1+arg2 > 0 /\ -1+n1 >= 0 /\ 2-arg1P10+arg1 >= 0), cost: n1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ 1 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -1+arg2 >= 0 /\ 2-arg1P10+arg1 >= 0), cost: arg2

Applied acceleration
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P11-arg1 <= 0 /\ arg4 > 0 /\ -3+arg1P11 > 0), cost: 1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2-n2, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ 2-arg1P11+arg1 >= 0 /\ 1+arg2-n2 > 0 /\ arg4 > 0 /\ -1+n2 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hMFbHh.txt

Applied instantiation
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2-n2, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ 2-arg1P11+arg1 >= 0 /\ 1+arg2-n2 > 0 /\ arg4 > 0 /\ -1+n2 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: n2
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ 1 > 0 /\ 2-arg1P11+arg1 >= 0 /\ arg4 > 0 /\ -1+arg2 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: arg2

Applied acceleration
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P12, arg1'=arg1P12, (arg2 > 0 /\ arg4 > 0 /\ -3-arg1+arg1P12 <= 0 /\ -5+arg1P12 > 0), cost: 1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2-n3, arg4'=arg4P12, arg1'=arg1P12, (arg4P12 > 0 /\ arg4 > 0 /\ 3+arg1-arg1P12 >= 0 /\ -1+n3 >= 0 /\ 1+arg2-n3 > 0 /\ -5+arg1P12 > 0), cost: n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hGolDN.txt

Applied instantiation
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=arg2-n3, arg4'=arg4P12, arg1'=arg1P12, (arg4P12 > 0 /\ arg4 > 0 /\ 3+arg1-arg1P12 >= 0 /\ -1+n3 >= 0 /\ 1+arg2-n3 > 0 /\ -5+arg1P12 > 0), cost: n3
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, (arg4P12 > 0 /\ 1 > 0 /\ arg4 > 0 /\ 3+arg1-arg1P12 >= 0 /\ -1+arg2 >= 0 /\ -5+arg1P12 > 0), cost: arg2

Applied acceleration
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg4'=arg4P13, arg1'=arg1P13, (arg2 > 0 /\ -3-arg1+arg1P13 <= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0), cost: 1
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-n4+arg2, arg4'=arg4P13, arg1'=arg1P13, (1-n4+arg2 > 0 /\ arg4P13 > 0 /\ 3+arg1-arg1P13 >= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0 /\ -1+n4 >= 0), cost: n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BfbkEm.txt

Applied instantiation
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-n4+arg2, arg4'=arg4P13, arg1'=arg1P13, (1-n4+arg2 > 0 /\ arg4P13 > 0 /\ 3+arg1-arg1P13 >= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0 /\ -1+n4 >= 0), cost: n4
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, (1 > 0 /\ arg4P13 > 0 /\ 3+arg1-arg1P13 >= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0 /\ -1+arg2 >= 0), cost: arg2

Applied simplification
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ 1 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -1+arg2 >= 0 /\ 2-arg1P10+arg1 >= 0), cost: arg2
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -1+arg2 >= 0 /\ 2-arg1P10+arg1 >= 0), cost: arg2

Applied simplification
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ 1 > 0 /\ 2-arg1P11+arg1 >= 0 /\ arg4 > 0 /\ -1+arg2 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: arg2
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ 2-arg1P11+arg1 >= 0 /\ arg4 > 0 /\ -1+arg2 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: arg2

Applied simplification
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, (arg4P12 > 0 /\ 1 > 0 /\ arg4 > 0 /\ 3+arg1-arg1P12 >= 0 /\ -1+arg2 >= 0 /\ -5+arg1P12 > 0), cost: arg2
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, (arg4P12 > 0 /\ arg4 > 0 /\ 3+arg1-arg1P12 >= 0 /\ -1+arg2 >= 0 /\ -5+arg1P12 > 0), cost: arg2

Applied simplification
Original rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, (1 > 0 /\ arg4P13 > 0 /\ 3+arg1-arg1P13 >= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0 /\ -1+arg2 >= 0), cost: arg2
New rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, (arg4P13 > 0 /\ 3+arg1-arg1P13 >= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0 /\ -1+arg2 >= 0), cost: arg2

Applied deletion
Removed the following rules: 24 25 26 27

Accelerated simple loops
Start location: __init
   0: f1_0_main_Load -> f1317_0_mirror_NULL : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ arg1 > 0), cost: 1
  19: f1_0_main_Load -> f731_0_random_ArrayAccess : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ arg1P4 > 0), cost: 1
  20: f1_0_main_Load -> f750_0_random_ArrayAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ arg1P6 > 0), cost: 1
  18: f1317_0_mirror_NULL -> f1317_0_mirror_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
  22: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=1+x270, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
  21: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=1+x220, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ 1+arg2P7 > 0 /\ -3+arg1P7 > 0), cost: 1
  23: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg1'=arg1P9, (1+arg1P9 > 0 /\ arg2 > 0 /\ 2-arg1+arg1P9 <= 0), cost: 1
  32: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -1+arg2 >= 0 /\ 2-arg1P10+arg1 >= 0), cost: arg2
  33: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ 2-arg1P11+arg1 >= 0 /\ arg4 > 0 /\ -1+arg2 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: arg2
  34: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, (arg4P12 > 0 /\ arg4 > 0 /\ 3+arg1-arg1P12 >= 0 /\ -1+arg2 >= 0 /\ -5+arg1P12 > 0), cost: arg2
  35: f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, (arg4P13 > 0 /\ 3+arg1-arg1P13 >= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0 /\ -1+arg2 >= 0), cost: arg2
  17: __init -> f1_0_main_Load : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f1317_0_mirror_NULL : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ arg1 > 0), cost: 1
Second rule:
f1317_0_mirror_NULL -> f1317_0_mirror_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ 1+arg1P2-arg1 <= 0), cost: 1
New rule:
f1_0_main_Load -> f1317_0_mirror_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ arg1 > 0), cost: 2

Applied deletion
Removed the following rules: 18

Applied chaining
First rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=1+x220, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ 1+arg2P7 > 0 /\ -3+arg1P7 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg1'=arg1P9, (1+arg1P9 > 0 /\ arg2 > 0 /\ 2-arg1+arg1P9 <= 0), cost: 1
New rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=-1+arg2P7, arg4'=1+x220, arg1'=arg1P9, arg3'=arg3P7, (-1-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0 /\ x220 > 0 /\ arg2P7 > 0 /\ 1-arg1 <= 0), cost: 2

Applied chaining
First rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=1+x270, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=-1+arg2, arg1'=arg1P9, (1+arg1P9 > 0 /\ arg2 > 0 /\ 2-arg1+arg1P9 <= 0), cost: 1
New rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=-1+arg2P8, arg4'=1+x270, arg1'=arg1P9, arg3'=arg3P8, (1+arg1P9 > 0 /\ x270 > 0 /\ 1-arg1+arg1P9 <= 0 /\ arg2P8 > 0), cost: 2

Applied chaining
First rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=1+x220, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ 1+arg2P7 > 0 /\ -3+arg1P7 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -1+arg2 >= 0 /\ 2-arg1P10+arg1 >= 0), cost: arg2
New rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P7, (-1+arg2P7 >= 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -5+arg1P10-arg1 <= 0 /\ 1-arg1 <= 0), cost: 1+arg2P7

Applied chaining
First rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=1+x270, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, (-2+arg1 > 0 /\ arg4 > 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -1+arg2 >= 0 /\ 2-arg1P10+arg1 >= 0), cost: arg2
New rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P8, (-1+arg2P8 >= 0 /\ -2+arg1 >= 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -3+arg1P10-arg1 <= 0), cost: 1+arg2P8

Applied chaining
First rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=1+x220, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ 1+arg2P7 > 0 /\ -3+arg1P7 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ 2-arg1P11+arg1 >= 0 /\ arg4 > 0 /\ -1+arg2 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: arg2
New rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P7, (-5+arg1P11-arg1 <= 0 /\ -1+arg2P7 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0 /\ 1-arg1 <= 0), cost: 1+arg2P7

Applied chaining
First rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=1+x270, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, (-2+arg1 > 0 /\ 2-arg1P11+arg1 >= 0 /\ arg4 > 0 /\ -1+arg2 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: arg2
New rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P8, (-1+arg2P8 >= 0 /\ -3+arg1P11-arg1 <= 0 /\ 2-arg1 <= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: 1+arg2P8

Applied chaining
First rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=1+x220, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ 1+arg2P7 > 0 /\ -3+arg1P7 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, (arg4P12 > 0 /\ arg4 > 0 /\ 3+arg1-arg1P12 >= 0 /\ -1+arg2 >= 0 /\ -5+arg1P12 > 0), cost: arg2
New rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P7, (arg4P12 > 0 /\ -6-arg1+arg1P12 <= 0 /\ -1+arg2P7 >= 0 /\ -5+arg1P12 > 0 /\ 1-arg1 <= 0), cost: 1+arg2P7

Applied chaining
First rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=1+x270, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, (arg4P12 > 0 /\ arg4 > 0 /\ 3+arg1-arg1P12 >= 0 /\ -1+arg2 >= 0 /\ -5+arg1P12 > 0), cost: arg2
New rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-4-arg1+arg1P12 <= 0 /\ arg4P12 > 0 /\ -1+arg2P8 >= 0 /\ -5+arg1P12 > 0), cost: 1+arg2P8

Applied chaining
First rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=1+x220, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ 1+arg2P7 > 0 /\ -3+arg1P7 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, (arg4P13 > 0 /\ 3+arg1-arg1P13 >= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0 /\ -1+arg2 >= 0), cost: arg2
New rule:
f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P7, (arg4P13 > 0 /\ -1+arg2P7 >= 0 /\ -6-arg1+arg1P13 <= 0 /\ -5+arg1P13 > 0 /\ 1-arg1 <= 0), cost: 1+arg2P7

Applied chaining
First rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=1+x270, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
Second rule:
f1551_0_createTree_LE -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, (arg4P13 > 0 /\ 3+arg1-arg1P13 >= 0 /\ arg4 > 0 /\ -5+arg1P13 > 0 /\ -1+arg2 >= 0), cost: arg2
New rule:
f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P8, (-1+arg2P8 >= 0 /\ arg4P13 > 0 /\ -4-arg1+arg1P13 <= 0 /\ -5+arg1P13 > 0), cost: 1+arg2P8

Applied deletion
Removed the following rules: 23 32 33 34 35

Chained accelerated rules with incoming rules
Start location: __init
   0: f1_0_main_Load -> f1317_0_mirror_NULL : arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (1+arg1P0 > 0 /\ arg1 > 0), cost: 1
  19: f1_0_main_Load -> f731_0_random_ArrayAccess : arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (arg1P4-arg1 <= 0 /\ arg1P4 > 0), cost: 1
  20: f1_0_main_Load -> f750_0_random_ArrayAccess : arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (-arg1+arg1P6 <= 0 /\ arg1P6 > 0), cost: 1
  36: f1_0_main_Load -> f1317_0_mirror_NULL : arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (1+arg1P2 > 0 /\ arg1 > 0), cost: 2
  22: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P8, arg4'=1+x270, arg1'=arg1P8, arg3'=arg3P8, (-1+arg1P8-arg1 <= 0 /\ x270 > 0 /\ 1+arg2P8 > 0 /\ -1+arg1P8 > 0), cost: 1
  38: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=-1+arg2P8, arg4'=1+x270, arg1'=arg1P9, arg3'=arg3P8, (1+arg1P9 > 0 /\ x270 > 0 /\ 1-arg1+arg1P9 <= 0 /\ arg2P8 > 0), cost: 2
  40: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P8, (-1+arg2P8 >= 0 /\ -2+arg1 >= 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -3+arg1P10-arg1 <= 0), cost: 1+arg2P8
  42: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P8, (-1+arg2P8 >= 0 /\ -3+arg1P11-arg1 <= 0 /\ 2-arg1 <= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0), cost: 1+arg2P8
  44: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P8, (-4-arg1+arg1P12 <= 0 /\ arg4P12 > 0 /\ -1+arg2P8 >= 0 /\ -5+arg1P12 > 0), cost: 1+arg2P8
  46: f731_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P8, (-1+arg2P8 >= 0 /\ arg4P13 > 0 /\ -4-arg1+arg1P13 <= 0 /\ -5+arg1P13 > 0), cost: 1+arg2P8
  21: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=arg2P7, arg4'=1+x220, arg1'=arg1P7, arg3'=arg3P7, (x220 > 0 /\ -3-arg1+arg1P7 <= 0 /\ 1+arg2P7 > 0 /\ -3+arg1P7 > 0), cost: 1
  37: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=-1+arg2P7, arg4'=1+x220, arg1'=arg1P9, arg3'=arg3P7, (-1-arg1+arg1P9 <= 0 /\ 1+arg1P9 > 0 /\ x220 > 0 /\ arg2P7 > 0 /\ 1-arg1 <= 0), cost: 2
  39: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P7, (-1+arg2P7 >= 0 /\ -3+arg1P10 > 0 /\ arg4P10 > 0 /\ -5+arg1P10-arg1 <= 0 /\ 1-arg1 <= 0), cost: 1+arg2P7
  41: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P7, (-5+arg1P11-arg1 <= 0 /\ -1+arg2P7 >= 0 /\ arg4P11 > 0 /\ -3+arg1P11 > 0 /\ 1-arg1 <= 0), cost: 1+arg2P7
  43: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P7, (arg4P12 > 0 /\ -6-arg1+arg1P12 <= 0 /\ -1+arg2P7 >= 0 /\ -5+arg1P12 > 0 /\ 1-arg1 <= 0), cost: 1+arg2P7
  45: f750_0_random_ArrayAccess -> f1551_0_createTree_LE : arg2'=0, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P7, (arg4P13 > 0 /\ -1+arg2P7 >= 0 /\ -6-arg1+arg1P13 <= 0 /\ -5+arg1P13 > 0 /\ 1-arg1 <= 0), cost: 1+arg2P7
  17: __init -> f1_0_main_Load : arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

