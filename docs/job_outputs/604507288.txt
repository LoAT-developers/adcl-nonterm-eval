NO

Initial ITS

Start location: l7
Program variables: __const_100^0 __const_10^0 __const_11^0 copied^0 e^0 n^0 olde^0 oldn^0
   0: l0 -> l1 : __const_100^0'=__const_100^post1, __const_10^0'=__const_10^post1, __const_11^0'=__const_11^post1, copied^0'=copied^post1, e^0'=e^post1, n^0'=n^post1, olde^0'=olde^post1, oldn^0'=oldn^post1, (__const_10^0-__const_10^post1 == 0 /\ copied^0-copied^post1 == 0 /\ -oldn^post1+oldn^0 == 0 /\ -n^post1+n^0 == 0 /\ 1-copied^0 <= 0 /\ -olde^post1+olde^0 == 0 /\ -e^post1+e^0 == 0 /\ -__const_100^post1+__const_100^0 == 0 /\ n^0-oldn^0 <= 0 /\ __const_11^0-__const_11^post1 == 0 /\ -e^0+olde^0 <= 0), cost: 1
   1: l0 -> l2 : __const_100^0'=__const_100^post2, __const_10^0'=__const_10^post2, __const_11^0'=__const_11^post2, copied^0'=copied^post2, e^0'=e^post2, n^0'=n^post2, olde^0'=olde^post2, oldn^0'=oldn^post2, (__const_10^0-__const_10^post2 == 0 /\ -__const_11^post2+__const_11^0 == 0 /\ oldn^post2-n^0 == 0 /\ -__const_100^post2+__const_100^0 == 0 /\ 1-e^0 <= 0 /\ -1-e^0+e^post2 == 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0 /\ -__const_11^0-n^0+n^post2 == 0 /\ -1+copied^post2 == 0 /\ olde^post2-e^0 == 0), cost: 1
   3: l0 -> l3 : __const_100^0'=__const_100^post4, __const_10^0'=__const_10^post4, __const_11^0'=__const_11^post4, copied^0'=copied^post4, e^0'=e^post4, n^0'=n^post4, olde^0'=olde^post4, oldn^0'=oldn^post4, (__const_11^0-__const_11^post4 == 0 /\ 1-e^0+e^post4 == 0 /\ -n^0+oldn^post4 == 0 /\ -1+copied^post4 == 0 /\ -e^0+olde^post4 == 0 /\ 1-e^0 <= 0 /\ copied^0 <= 0 /\ -__const_100^post4+__const_100^0 == 0 /\ __const_10^0-__const_10^post4 == 0 /\ __const_10^0-n^0+n^post4 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
   5: l0 -> l4 : __const_100^0'=__const_100^post6, __const_10^0'=__const_10^post6, __const_11^0'=__const_11^post6, copied^0'=copied^post6, e^0'=e^post6, n^0'=n^post6, olde^0'=olde^post6, oldn^0'=oldn^post6, (-__const_100^post6+__const_100^0 == 0 /\ -1-e^0+e^post6 == 0 /\ -copied^post6+copied^0 == 0 /\ -oldn^post6+oldn^0 == 0 /\ -olde^post6+olde^0 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ -__const_11^post6+__const_11^0 == 0 /\ n^post6-__const_11^0-n^0 == 0 /\ __const_10^0-__const_10^post6 == 0), cost: 1
   7: l0 -> l5 : __const_100^0'=__const_100^post8, __const_10^0'=__const_10^post8, __const_11^0'=__const_11^post8, copied^0'=copied^post8, e^0'=e^post8, n^0'=n^post8, olde^0'=olde^post8, oldn^0'=oldn^post8, (-copied^post8+copied^0 == 0 /\ oldn^0-oldn^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ -olde^post8+olde^0 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ __const_10^0+n^post8-n^0 == 0 /\ 1-e^0 <= 0 /\ -__const_11^post8+__const_11^0 == 0 /\ 1+e^post8-e^0 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
   2: l2 -> l0 : __const_100^0'=__const_100^post3, __const_10^0'=__const_10^post3, __const_11^0'=__const_11^post3, copied^0'=copied^post3, e^0'=e^post3, n^0'=n^post3, olde^0'=olde^post3, oldn^0'=oldn^post3, (-olde^post3+olde^0 == 0 /\ __const_11^0-__const_11^post3 == 0 /\ copied^0-copied^post3 == 0 /\ __const_100^0-__const_100^post3 == 0 /\ -n^post3+n^0 == 0 /\ -oldn^post3+oldn^0 == 0 /\ -e^post3+e^0 == 0 /\ -__const_10^post3+__const_10^0 == 0), cost: 1
   4: l3 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, copied^0'=copied^post5, e^0'=e^post5, n^0'=n^post5, olde^0'=olde^post5, oldn^0'=oldn^post5, (-e^post5+e^0 == 0 /\ copied^0-copied^post5 == 0 /\ -oldn^post5+oldn^0 == 0 /\ __const_11^0-__const_11^post5 == 0 /\ __const_10^0-__const_10^post5 == 0 /\ -olde^post5+olde^0 == 0 /\ __const_100^0-__const_100^post5 == 0 /\ -n^post5+n^0 == 0), cost: 1
   6: l4 -> l0 : __const_100^0'=__const_100^post7, __const_10^0'=__const_10^post7, __const_11^0'=__const_11^post7, copied^0'=copied^post7, e^0'=e^post7, n^0'=n^post7, olde^0'=olde^post7, oldn^0'=oldn^post7, (__const_11^0-__const_11^post7 == 0 /\ -__const_100^post7+__const_100^0 == 0 /\ n^0-n^post7 == 0 /\ -oldn^post7+oldn^0 == 0 /\ e^0-e^post7 == 0 /\ __const_10^0-__const_10^post7 == 0 /\ -olde^post7+olde^0 == 0 /\ -copied^post7+copied^0 == 0), cost: 1
   8: l5 -> l0 : __const_100^0'=__const_100^post9, __const_10^0'=__const_10^post9, __const_11^0'=__const_11^post9, copied^0'=copied^post9, e^0'=e^post9, n^0'=n^post9, olde^0'=olde^post9, oldn^0'=oldn^post9, (-oldn^post9+oldn^0 == 0 /\ __const_11^0-__const_11^post9 == 0 /\ -__const_100^post9+__const_100^0 == 0 /\ __const_10^0-__const_10^post9 == 0 /\ n^0-n^post9 == 0 /\ -olde^post9+olde^0 == 0 /\ e^0-e^post9 == 0 /\ -copied^post9+copied^0 == 0), cost: 1
   9: l6 -> l0 : __const_100^0'=__const_100^post10, __const_10^0'=__const_10^post10, __const_11^0'=__const_11^post10, copied^0'=copied^post10, e^0'=e^post10, n^0'=n^post10, olde^0'=olde^post10, oldn^0'=oldn^post10, (0 == 0 /\ -olde^post10+olde^0 == 0 /\ -__const_100^post10+__const_100^0 == 0 /\ -__const_10^post10+__const_10^0 == 0 /\ -__const_11^post10+__const_11^0 == 0 /\ copied^post10 == 0 /\ -1+e^post10 == 0 /\ -oldn^post10+oldn^0 == 0), cost: 1
  10: l7 -> l6 : __const_100^0'=__const_100^post11, __const_10^0'=__const_10^post11, __const_11^0'=__const_11^post11, copied^0'=copied^post11, e^0'=e^post11, n^0'=n^post11, olde^0'=olde^post11, oldn^0'=oldn^post11, (-olde^post11+olde^0 == 0 /\ n^0-n^post11 == 0 /\ -copied^post11+copied^0 == 0 /\ __const_10^0-__const_10^post11 == 0 /\ __const_11^0-__const_11^post11 == 0 /\ -__const_100^post11+__const_100^0 == 0 /\ e^0-e^post11 == 0 /\ -oldn^post11+oldn^0 == 0), cost: 1

Chained Linear Paths

Start location: l7
Program variables: __const_100^0 __const_10^0 __const_11^0 copied^0 e^0 n^0 olde^0 oldn^0
   0: l0 -> l1 : __const_100^0'=__const_100^post1, __const_10^0'=__const_10^post1, __const_11^0'=__const_11^post1, copied^0'=copied^post1, e^0'=e^post1, n^0'=n^post1, olde^0'=olde^post1, oldn^0'=oldn^post1, (__const_10^0-__const_10^post1 == 0 /\ copied^0-copied^post1 == 0 /\ -oldn^post1+oldn^0 == 0 /\ -n^post1+n^0 == 0 /\ 1-copied^0 <= 0 /\ -olde^post1+olde^0 == 0 /\ -e^post1+e^0 == 0 /\ -__const_100^post1+__const_100^0 == 0 /\ n^0-oldn^0 <= 0 /\ __const_11^0-__const_11^post1 == 0 /\ -e^0+olde^0 <= 0), cost: 1
  12: l0 -> l0 : __const_100^0'=__const_100^post3, __const_10^0'=__const_10^post3, __const_11^0'=__const_11^post3, copied^0'=copied^post3, e^0'=e^post3, n^0'=n^post3, olde^0'=olde^post3, oldn^0'=oldn^post3, (-e^post3+e^post2 == 0 /\ olde^post2-olde^post3 == 0 /\ -oldn^post3+oldn^post2 == 0 /\ __const_10^0-__const_10^post2 == 0 /\ __const_11^post2-__const_11^post3 == 0 /\ -__const_10^post3+__const_10^post2 == 0 /\ -__const_11^post2+__const_11^0 == 0 /\ copied^post2-copied^post3 == 0 /\ oldn^post2-n^0 == 0 /\ -n^post3+n^post2 == 0 /\ -__const_100^post2+__const_100^0 == 0 /\ 1-e^0 <= 0 /\ -1-e^0+e^post2 == 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0 /\ -__const_11^0-n^0+n^post2 == 0 /\ -1+copied^post2 == 0 /\ __const_100^post2-__const_100^post3 == 0 /\ olde^post2-e^0 == 0), cost: 1
  13: l0 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, copied^0'=copied^post5, e^0'=e^post5, n^0'=n^post5, olde^0'=olde^post5, oldn^0'=oldn^post5, (-n^post5+n^post4 == 0 /\ __const_11^0-__const_11^post4 == 0 /\ -oldn^post5+oldn^post4 == 0 /\ 1-e^0+e^post4 == 0 /\ -n^0+oldn^post4 == 0 /\ -__const_10^post5+__const_10^post4 == 0 /\ -1+copied^post4 == 0 /\ -e^0+olde^post4 == 0 /\ 1-e^0 <= 0 /\ copied^0 <= 0 /\ copied^post4-copied^post5 == 0 /\ -__const_100^post4+__const_100^0 == 0 /\ olde^post4-olde^post5 == 0 /\ __const_100^post4-__const_100^post5 == 0 /\ -e^post5+e^post4 == 0 /\ -__const_11^post5+__const_11^post4 == 0 /\ __const_10^0-__const_10^post4 == 0 /\ __const_10^0-n^0+n^post4 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
  14: l0 -> l0 : __const_100^0'=__const_100^post7, __const_10^0'=__const_10^post7, __const_11^0'=__const_11^post7, copied^0'=copied^post7, e^0'=e^post7, n^0'=n^post7, olde^0'=olde^post7, oldn^0'=oldn^post7, (n^post6-n^post7 == 0 /\ -copied^post7+copied^post6 == 0 /\ -e^post7+e^post6 == 0 /\ -__const_100^post6+__const_100^0 == 0 /\ -olde^post7+olde^post6 == 0 /\ -1-e^0+e^post6 == 0 /\ -copied^post6+copied^0 == 0 /\ -__const_100^post7+__const_100^post6 == 0 /\ -__const_10^post7+__const_10^post6 == 0 /\ -oldn^post6+oldn^0 == 0 /\ -olde^post6+olde^0 == 0 /\ -oldn^post7+oldn^post6 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ __const_11^post6-__const_11^post7 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ n^post6-__const_11^0-n^0 == 0 /\ __const_10^0-__const_10^post6 == 0), cost: 1
  15: l0 -> l0 : __const_100^0'=__const_100^post9, __const_10^0'=__const_10^post9, __const_11^0'=__const_11^post9, copied^0'=copied^post9, e^0'=e^post9, n^0'=n^post9, olde^0'=olde^post9, oldn^0'=oldn^post9, (-copied^post8+copied^0 == 0 /\ -olde^post9+olde^post8 == 0 /\ oldn^0-oldn^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ -olde^post8+olde^0 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ __const_10^0+n^post8-n^0 == 0 /\ -oldn^post9+oldn^post8 == 0 /\ -__const_100^post9+__const_100^post8 == 0 /\ __const_11^post8-__const_11^post9 == 0 /\ e^post8-e^post9 == 0 /\ 1-e^0 <= 0 /\ -__const_10^post9+__const_10^post8 == 0 /\ n^post8-n^post9 == 0 /\ -copied^post9+copied^post8 == 0 /\ -__const_11^post8+__const_11^0 == 0 /\ 1+e^post8-e^0 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
  11: l7 -> l0 : __const_100^0'=__const_100^post10, __const_10^0'=__const_10^post10, __const_11^0'=__const_11^post10, copied^0'=copied^post10, e^0'=e^post10, n^0'=n^post10, olde^0'=olde^post10, oldn^0'=oldn^post10, (0 == 0 /\ -olde^post11+olde^0 == 0 /\ -olde^post10+olde^post11 == 0 /\ -__const_11^post10+__const_11^post11 == 0 /\ n^0-n^post11 == 0 /\ __const_100^post11-__const_100^post10 == 0 /\ -copied^post11+copied^0 == 0 /\ __const_10^0-__const_10^post11 == 0 /\ copied^post10 == 0 /\ -1+e^post10 == 0 /\ __const_11^0-__const_11^post11 == 0 /\ -__const_10^post10+__const_10^post11 == 0 /\ -__const_100^post11+__const_100^0 == 0 /\ e^0-e^post11 == 0 /\ oldn^post11-oldn^post10 == 0 /\ -oldn^post11+oldn^0 == 0), cost: 1

	Eliminating location l6 by chaining:

	Applied chaining

	First rule:
	l7 -> l6 : __const_100^0'=__const_100^post11, __const_10^0'=__const_10^post11, __const_11^0'=__const_11^post11, copied^0'=copied^post11, e^0'=e^post11, n^0'=n^post11, olde^0'=olde^post11, oldn^0'=oldn^post11, (-olde^post11+olde^0 == 0 /\ n^0-n^post11 == 0 /\ -copied^post11+copied^0 == 0 /\ __const_10^0-__const_10^post11 == 0 /\ __const_11^0-__const_11^post11 == 0 /\ -__const_100^post11+__const_100^0 == 0 /\ e^0-e^post11 == 0 /\ -oldn^post11+oldn^0 == 0), cost: 1
	Second rule:
	l6 -> l0 : __const_100^0'=__const_100^post10, __const_10^0'=__const_10^post10, __const_11^0'=__const_11^post10, copied^0'=copied^post10, e^0'=e^post10, n^0'=n^post10, olde^0'=olde^post10, oldn^0'=oldn^post10, (0 == 0 /\ -olde^post10+olde^0 == 0 /\ -__const_100^post10+__const_100^0 == 0 /\ -__const_10^post10+__const_10^0 == 0 /\ -__const_11^post10+__const_11^0 == 0 /\ copied^post10 == 0 /\ -1+e^post10 == 0 /\ -oldn^post10+oldn^0 == 0), cost: 1
	New rule:
	l7 -> l0 : __const_100^0'=__const_100^post10, __const_10^0'=__const_10^post10, __const_11^0'=__const_11^post10, copied^0'=copied^post10, e^0'=e^post10, n^0'=n^post10, olde^0'=olde^post10, oldn^0'=oldn^post10, (0 == 0 /\ -olde^post11+olde^0 == 0 /\ -olde^post10+olde^post11 == 0 /\ -__const_11^post10+__const_11^post11 == 0 /\ n^0-n^post11 == 0 /\ __const_100^post11-__const_100^post10 == 0 /\ -copied^post11+copied^0 == 0 /\ __const_10^0-__const_10^post11 == 0 /\ copied^post10 == 0 /\ -1+e^post10 == 0 /\ __const_11^0-__const_11^post11 == 0 /\ -__const_10^post10+__const_10^post11 == 0 /\ -__const_100^post11+__const_100^0 == 0 /\ e^0-e^post11 == 0 /\ oldn^post11-oldn^post10 == 0 /\ -oldn^post11+oldn^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 9 10
	
	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l0 -> l2 : __const_100^0'=__const_100^post2, __const_10^0'=__const_10^post2, __const_11^0'=__const_11^post2, copied^0'=copied^post2, e^0'=e^post2, n^0'=n^post2, olde^0'=olde^post2, oldn^0'=oldn^post2, (__const_10^0-__const_10^post2 == 0 /\ -__const_11^post2+__const_11^0 == 0 /\ oldn^post2-n^0 == 0 /\ -__const_100^post2+__const_100^0 == 0 /\ 1-e^0 <= 0 /\ -1-e^0+e^post2 == 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0 /\ -__const_11^0-n^0+n^post2 == 0 /\ -1+copied^post2 == 0 /\ olde^post2-e^0 == 0), cost: 1
	Second rule:
	l2 -> l0 : __const_100^0'=__const_100^post3, __const_10^0'=__const_10^post3, __const_11^0'=__const_11^post3, copied^0'=copied^post3, e^0'=e^post3, n^0'=n^post3, olde^0'=olde^post3, oldn^0'=oldn^post3, (-olde^post3+olde^0 == 0 /\ __const_11^0-__const_11^post3 == 0 /\ copied^0-copied^post3 == 0 /\ __const_100^0-__const_100^post3 == 0 /\ -n^post3+n^0 == 0 /\ -oldn^post3+oldn^0 == 0 /\ -e^post3+e^0 == 0 /\ -__const_10^post3+__const_10^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post3, __const_10^0'=__const_10^post3, __const_11^0'=__const_11^post3, copied^0'=copied^post3, e^0'=e^post3, n^0'=n^post3, olde^0'=olde^post3, oldn^0'=oldn^post3, (-e^post3+e^post2 == 0 /\ olde^post2-olde^post3 == 0 /\ -oldn^post3+oldn^post2 == 0 /\ __const_10^0-__const_10^post2 == 0 /\ __const_11^post2-__const_11^post3 == 0 /\ -__const_10^post3+__const_10^post2 == 0 /\ -__const_11^post2+__const_11^0 == 0 /\ copied^post2-copied^post3 == 0 /\ oldn^post2-n^0 == 0 /\ -n^post3+n^post2 == 0 /\ -__const_100^post2+__const_100^0 == 0 /\ 1-e^0 <= 0 /\ -1-e^0+e^post2 == 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0 /\ -__const_11^0-n^0+n^post2 == 0 /\ -1+copied^post2 == 0 /\ __const_100^post2-__const_100^post3 == 0 /\ olde^post2-e^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 1 2
	
	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l0 -> l3 : __const_100^0'=__const_100^post4, __const_10^0'=__const_10^post4, __const_11^0'=__const_11^post4, copied^0'=copied^post4, e^0'=e^post4, n^0'=n^post4, olde^0'=olde^post4, oldn^0'=oldn^post4, (__const_11^0-__const_11^post4 == 0 /\ 1-e^0+e^post4 == 0 /\ -n^0+oldn^post4 == 0 /\ -1+copied^post4 == 0 /\ -e^0+olde^post4 == 0 /\ 1-e^0 <= 0 /\ copied^0 <= 0 /\ -__const_100^post4+__const_100^0 == 0 /\ __const_10^0-__const_10^post4 == 0 /\ __const_10^0-n^0+n^post4 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	Second rule:
	l3 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, copied^0'=copied^post5, e^0'=e^post5, n^0'=n^post5, olde^0'=olde^post5, oldn^0'=oldn^post5, (-e^post5+e^0 == 0 /\ copied^0-copied^post5 == 0 /\ -oldn^post5+oldn^0 == 0 /\ __const_11^0-__const_11^post5 == 0 /\ __const_10^0-__const_10^post5 == 0 /\ -olde^post5+olde^0 == 0 /\ __const_100^0-__const_100^post5 == 0 /\ -n^post5+n^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, copied^0'=copied^post5, e^0'=e^post5, n^0'=n^post5, olde^0'=olde^post5, oldn^0'=oldn^post5, (-n^post5+n^post4 == 0 /\ __const_11^0-__const_11^post4 == 0 /\ -oldn^post5+oldn^post4 == 0 /\ 1-e^0+e^post4 == 0 /\ -n^0+oldn^post4 == 0 /\ -__const_10^post5+__const_10^post4 == 0 /\ -1+copied^post4 == 0 /\ -e^0+olde^post4 == 0 /\ 1-e^0 <= 0 /\ copied^0 <= 0 /\ copied^post4-copied^post5 == 0 /\ -__const_100^post4+__const_100^0 == 0 /\ olde^post4-olde^post5 == 0 /\ __const_100^post4-__const_100^post5 == 0 /\ -e^post5+e^post4 == 0 /\ -__const_11^post5+__const_11^post4 == 0 /\ __const_10^0-__const_10^post4 == 0 /\ __const_10^0-n^0+n^post4 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location l4 by chaining:

	Applied chaining

	First rule:
	l0 -> l4 : __const_100^0'=__const_100^post6, __const_10^0'=__const_10^post6, __const_11^0'=__const_11^post6, copied^0'=copied^post6, e^0'=e^post6, n^0'=n^post6, olde^0'=olde^post6, oldn^0'=oldn^post6, (-__const_100^post6+__const_100^0 == 0 /\ -1-e^0+e^post6 == 0 /\ -copied^post6+copied^0 == 0 /\ -oldn^post6+oldn^0 == 0 /\ -olde^post6+olde^0 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ -__const_11^post6+__const_11^0 == 0 /\ n^post6-__const_11^0-n^0 == 0 /\ __const_10^0-__const_10^post6 == 0), cost: 1
	Second rule:
	l4 -> l0 : __const_100^0'=__const_100^post7, __const_10^0'=__const_10^post7, __const_11^0'=__const_11^post7, copied^0'=copied^post7, e^0'=e^post7, n^0'=n^post7, olde^0'=olde^post7, oldn^0'=oldn^post7, (__const_11^0-__const_11^post7 == 0 /\ -__const_100^post7+__const_100^0 == 0 /\ n^0-n^post7 == 0 /\ -oldn^post7+oldn^0 == 0 /\ e^0-e^post7 == 0 /\ __const_10^0-__const_10^post7 == 0 /\ -olde^post7+olde^0 == 0 /\ -copied^post7+copied^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post7, __const_10^0'=__const_10^post7, __const_11^0'=__const_11^post7, copied^0'=copied^post7, e^0'=e^post7, n^0'=n^post7, olde^0'=olde^post7, oldn^0'=oldn^post7, (n^post6-n^post7 == 0 /\ -copied^post7+copied^post6 == 0 /\ -e^post7+e^post6 == 0 /\ -__const_100^post6+__const_100^0 == 0 /\ -olde^post7+olde^post6 == 0 /\ -1-e^0+e^post6 == 0 /\ -copied^post6+copied^0 == 0 /\ -__const_100^post7+__const_100^post6 == 0 /\ -__const_10^post7+__const_10^post6 == 0 /\ -oldn^post6+oldn^0 == 0 /\ -olde^post6+olde^0 == 0 /\ -oldn^post7+oldn^post6 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ __const_11^post6-__const_11^post7 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ n^post6-__const_11^0-n^0 == 0 /\ __const_10^0-__const_10^post6 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 6
	
	Eliminating location l5 by chaining:

	Applied chaining

	First rule:
	l0 -> l5 : __const_100^0'=__const_100^post8, __const_10^0'=__const_10^post8, __const_11^0'=__const_11^post8, copied^0'=copied^post8, e^0'=e^post8, n^0'=n^post8, olde^0'=olde^post8, oldn^0'=oldn^post8, (-copied^post8+copied^0 == 0 /\ oldn^0-oldn^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ -olde^post8+olde^0 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ __const_10^0+n^post8-n^0 == 0 /\ 1-e^0 <= 0 /\ -__const_11^post8+__const_11^0 == 0 /\ 1+e^post8-e^0 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	Second rule:
	l5 -> l0 : __const_100^0'=__const_100^post9, __const_10^0'=__const_10^post9, __const_11^0'=__const_11^post9, copied^0'=copied^post9, e^0'=e^post9, n^0'=n^post9, olde^0'=olde^post9, oldn^0'=oldn^post9, (-oldn^post9+oldn^0 == 0 /\ __const_11^0-__const_11^post9 == 0 /\ -__const_100^post9+__const_100^0 == 0 /\ __const_10^0-__const_10^post9 == 0 /\ n^0-n^post9 == 0 /\ -olde^post9+olde^0 == 0 /\ e^0-e^post9 == 0 /\ -copied^post9+copied^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post9, __const_10^0'=__const_10^post9, __const_11^0'=__const_11^post9, copied^0'=copied^post9, e^0'=e^post9, n^0'=n^post9, olde^0'=olde^post9, oldn^0'=oldn^post9, (-copied^post8+copied^0 == 0 /\ -olde^post9+olde^post8 == 0 /\ oldn^0-oldn^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ -olde^post8+olde^0 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ __const_10^0+n^post8-n^0 == 0 /\ -oldn^post9+oldn^post8 == 0 /\ -__const_100^post9+__const_100^post8 == 0 /\ __const_11^post8-__const_11^post9 == 0 /\ e^post8-e^post9 == 0 /\ 1-e^0 <= 0 /\ -__const_10^post9+__const_10^post8 == 0 /\ n^post8-n^post9 == 0 /\ -copied^post9+copied^post8 == 0 /\ -__const_11^post8+__const_11^0 == 0 /\ 1+e^post8-e^0 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 7 8

Simplified Transitions

Start location: l7
Program variables: __const_100^0 __const_10^0 __const_11^0 copied^0 e^0 n^0 olde^0 oldn^0
  16: l0 -> l1 : (1-copied^0 <= 0 /\ n^0-oldn^0 <= 0 /\ -e^0+olde^0 <= 0), cost: 1
  18: l0 -> l0 : copied^0'=1, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0), cost: 1
  19: l0 -> l0 : copied^0'=1, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ copied^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
  20: l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0), cost: 1
  21: l0 -> l0 : e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (1-e^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
  17: l7 -> l0 : copied^0'=0, e^0'=1, n^0'=n^post10, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : __const_100^0'=__const_100^post1, __const_10^0'=__const_10^post1, __const_11^0'=__const_11^post1, copied^0'=copied^post1, e^0'=e^post1, n^0'=n^post1, olde^0'=olde^post1, oldn^0'=oldn^post1, (__const_10^0-__const_10^post1 == 0 /\ copied^0-copied^post1 == 0 /\ -oldn^post1+oldn^0 == 0 /\ -n^post1+n^0 == 0 /\ 1-copied^0 <= 0 /\ -olde^post1+olde^0 == 0 /\ -e^post1+e^0 == 0 /\ -__const_100^post1+__const_100^0 == 0 /\ n^0-oldn^0 <= 0 /\ __const_11^0-__const_11^post1 == 0 /\ -e^0+olde^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=e^0, n^0'=n^0, olde^0'=olde^0, oldn^0'=oldn^0, (0 == 0 /\ 1-copied^0 <= 0 /\ n^0-oldn^0 <= 0 /\ -e^0+olde^0 <= 0), cost: 1
	
		propagated equality __const_10^post1 = __const_10^0
		
		propagated equality copied^post1 = copied^0
		
		propagated equality oldn^post1 = oldn^0
		
		propagated equality n^post1 = n^0
		
		propagated equality olde^post1 = olde^0
		
		propagated equality e^post1 = e^0
		
		propagated equality __const_100^post1 = __const_100^0
		
		propagated equality __const_11^post1 = __const_11^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=e^0, n^0'=n^0, olde^0'=olde^0, oldn^0'=oldn^0, (0 == 0 /\ 1-copied^0 <= 0 /\ n^0-oldn^0 <= 0 /\ -e^0+olde^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=e^0, n^0'=n^0, olde^0'=olde^0, oldn^0'=oldn^0, (1-copied^0 <= 0 /\ n^0-oldn^0 <= 0 /\ -e^0+olde^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=e^0, n^0'=n^0, olde^0'=olde^0, oldn^0'=oldn^0, (1-copied^0 <= 0 /\ n^0-oldn^0 <= 0 /\ -e^0+olde^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : (1-copied^0 <= 0 /\ n^0-oldn^0 <= 0 /\ -e^0+olde^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l7 -> l0 : __const_100^0'=__const_100^post10, __const_10^0'=__const_10^post10, __const_11^0'=__const_11^post10, copied^0'=copied^post10, e^0'=e^post10, n^0'=n^post10, olde^0'=olde^post10, oldn^0'=oldn^post10, (0 == 0 /\ -olde^post11+olde^0 == 0 /\ -olde^post10+olde^post11 == 0 /\ -__const_11^post10+__const_11^post11 == 0 /\ n^0-n^post11 == 0 /\ __const_100^post11-__const_100^post10 == 0 /\ -copied^post11+copied^0 == 0 /\ __const_10^0-__const_10^post11 == 0 /\ copied^post10 == 0 /\ -1+e^post10 == 0 /\ __const_11^0-__const_11^post11 == 0 /\ -__const_10^post10+__const_10^post11 == 0 /\ -__const_100^post11+__const_100^0 == 0 /\ e^0-e^post11 == 0 /\ oldn^post11-oldn^post10 == 0 /\ -oldn^post11+oldn^0 == 0), cost: 1
	New rule:
	l7 -> l0 : __const_100^0'=__const_100^post11, __const_10^0'=__const_10^post11, __const_11^0'=__const_11^post11, copied^0'=0, e^0'=1, n^0'=n^post10, olde^0'=olde^post11, oldn^0'=oldn^post11, (0 == 0 /\ -olde^post11+olde^0 == 0 /\ n^0-n^post11 == 0 /\ -copied^post11+copied^0 == 0 /\ __const_10^0-__const_10^post11 == 0 /\ __const_11^0-__const_11^post11 == 0 /\ -__const_100^post11+__const_100^0 == 0 /\ e^0-e^post11 == 0 /\ -oldn^post11+oldn^0 == 0), cost: 1
	
		propagated equality olde^post10 = olde^post11
		
		propagated equality __const_11^post10 = __const_11^post11
		
		propagated equality __const_100^post10 = __const_100^post11
		
		propagated equality copied^post10 = 0
		
		propagated equality e^post10 = 1
		
		propagated equality __const_10^post10 = __const_10^post11
		
		propagated equality oldn^post10 = oldn^post11
		
	Propagated Equalities

	Original rule:
	l7 -> l0 : __const_100^0'=__const_100^post11, __const_10^0'=__const_10^post11, __const_11^0'=__const_11^post11, copied^0'=0, e^0'=1, n^0'=n^post10, olde^0'=olde^post11, oldn^0'=oldn^post11, (0 == 0 /\ -olde^post11+olde^0 == 0 /\ n^0-n^post11 == 0 /\ -copied^post11+copied^0 == 0 /\ __const_10^0-__const_10^post11 == 0 /\ __const_11^0-__const_11^post11 == 0 /\ -__const_100^post11+__const_100^0 == 0 /\ e^0-e^post11 == 0 /\ -oldn^post11+oldn^0 == 0), cost: 1
	New rule:
	l7 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=0, e^0'=1, n^0'=n^post10, olde^0'=olde^0, oldn^0'=oldn^0, 0 == 0, cost: 1
	
		propagated equality olde^post11 = olde^0
		
		propagated equality n^post11 = n^0
		
		propagated equality copied^post11 = copied^0
		
		propagated equality __const_10^post11 = __const_10^0
		
		propagated equality __const_11^post11 = __const_11^0
		
		propagated equality __const_100^post11 = __const_100^0
		
		propagated equality e^post11 = e^0
		
		propagated equality oldn^post11 = oldn^0
		
	Simplified Guard

	Original rule:
	l7 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=0, e^0'=1, n^0'=n^post10, olde^0'=olde^0, oldn^0'=oldn^0, 0 == 0, cost: 1
	New rule:
	l7 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=0, e^0'=1, n^0'=n^post10, olde^0'=olde^0, oldn^0'=oldn^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l7 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=0, e^0'=1, n^0'=n^post10, olde^0'=olde^0, oldn^0'=oldn^0, T, cost: 1
	New rule:
	l7 -> l0 : copied^0'=0, e^0'=1, n^0'=n^post10, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post3, __const_10^0'=__const_10^post3, __const_11^0'=__const_11^post3, copied^0'=copied^post3, e^0'=e^post3, n^0'=n^post3, olde^0'=olde^post3, oldn^0'=oldn^post3, (-e^post3+e^post2 == 0 /\ olde^post2-olde^post3 == 0 /\ -oldn^post3+oldn^post2 == 0 /\ __const_10^0-__const_10^post2 == 0 /\ __const_11^post2-__const_11^post3 == 0 /\ -__const_10^post3+__const_10^post2 == 0 /\ -__const_11^post2+__const_11^0 == 0 /\ copied^post2-copied^post3 == 0 /\ oldn^post2-n^0 == 0 /\ -n^post3+n^post2 == 0 /\ -__const_100^post2+__const_100^0 == 0 /\ 1-e^0 <= 0 /\ -1-e^0+e^post2 == 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0 /\ -__const_11^0-n^0+n^post2 == 0 /\ -1+copied^post2 == 0 /\ __const_100^post2-__const_100^post3 == 0 /\ olde^post2-e^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post2, __const_10^0'=__const_10^post2, __const_11^0'=__const_11^post2, copied^0'=copied^post2, e^0'=e^post2, n^0'=n^post2, olde^0'=olde^post2, oldn^0'=oldn^post2, (0 == 0 /\ __const_10^0-__const_10^post2 == 0 /\ -__const_11^post2+__const_11^0 == 0 /\ oldn^post2-n^0 == 0 /\ -__const_100^post2+__const_100^0 == 0 /\ 1-e^0 <= 0 /\ -1-e^0+e^post2 == 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0 /\ -__const_11^0-n^0+n^post2 == 0 /\ -1+copied^post2 == 0 /\ olde^post2-e^0 == 0), cost: 1
	
		propagated equality e^post3 = e^post2
		
		propagated equality olde^post3 = olde^post2
		
		propagated equality oldn^post3 = oldn^post2
		
		propagated equality __const_11^post3 = __const_11^post2
		
		propagated equality __const_10^post3 = __const_10^post2
		
		propagated equality copied^post3 = copied^post2
		
		propagated equality n^post3 = n^post2
		
		propagated equality __const_100^post3 = __const_100^post2
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post2, __const_10^0'=__const_10^post2, __const_11^0'=__const_11^post2, copied^0'=copied^post2, e^0'=e^post2, n^0'=n^post2, olde^0'=olde^post2, oldn^0'=oldn^post2, (0 == 0 /\ __const_10^0-__const_10^post2 == 0 /\ -__const_11^post2+__const_11^0 == 0 /\ oldn^post2-n^0 == 0 /\ -__const_100^post2+__const_100^0 == 0 /\ 1-e^0 <= 0 /\ -1-e^0+e^post2 == 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0 /\ -__const_11^0-n^0+n^post2 == 0 /\ -1+copied^post2 == 0 /\ olde^post2-e^0 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=1, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=e^0, oldn^0'=n^0, (0 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0), cost: 1
	
		propagated equality __const_10^post2 = __const_10^0
		
		propagated equality __const_11^post2 = __const_11^0
		
		propagated equality oldn^post2 = n^0
		
		propagated equality __const_100^post2 = __const_100^0
		
		propagated equality e^post2 = 1+e^0
		
		propagated equality n^post2 = __const_11^0+n^0
		
		propagated equality copied^post2 = 1
		
		propagated equality olde^post2 = e^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=1, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=e^0, oldn^0'=n^0, (0 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=1, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=1, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : copied^0'=1, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post5, __const_10^0'=__const_10^post5, __const_11^0'=__const_11^post5, copied^0'=copied^post5, e^0'=e^post5, n^0'=n^post5, olde^0'=olde^post5, oldn^0'=oldn^post5, (-n^post5+n^post4 == 0 /\ __const_11^0-__const_11^post4 == 0 /\ -oldn^post5+oldn^post4 == 0 /\ 1-e^0+e^post4 == 0 /\ -n^0+oldn^post4 == 0 /\ -__const_10^post5+__const_10^post4 == 0 /\ -1+copied^post4 == 0 /\ -e^0+olde^post4 == 0 /\ 1-e^0 <= 0 /\ copied^0 <= 0 /\ copied^post4-copied^post5 == 0 /\ -__const_100^post4+__const_100^0 == 0 /\ olde^post4-olde^post5 == 0 /\ __const_100^post4-__const_100^post5 == 0 /\ -e^post5+e^post4 == 0 /\ -__const_11^post5+__const_11^post4 == 0 /\ __const_10^0-__const_10^post4 == 0 /\ __const_10^0-n^0+n^post4 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post4, __const_10^0'=__const_10^post4, __const_11^0'=__const_11^post4, copied^0'=copied^post4, e^0'=e^post4, n^0'=n^post4, olde^0'=olde^post4, oldn^0'=oldn^post4, (0 == 0 /\ __const_11^0-__const_11^post4 == 0 /\ 1-e^0+e^post4 == 0 /\ -n^0+oldn^post4 == 0 /\ -1+copied^post4 == 0 /\ -e^0+olde^post4 == 0 /\ 1-e^0 <= 0 /\ copied^0 <= 0 /\ -__const_100^post4+__const_100^0 == 0 /\ __const_10^0-__const_10^post4 == 0 /\ __const_10^0-n^0+n^post4 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	
		propagated equality n^post5 = n^post4
		
		propagated equality oldn^post5 = oldn^post4
		
		propagated equality __const_10^post5 = __const_10^post4
		
		propagated equality copied^post5 = copied^post4
		
		propagated equality olde^post5 = olde^post4
		
		propagated equality __const_100^post5 = __const_100^post4
		
		propagated equality e^post5 = e^post4
		
		propagated equality __const_11^post5 = __const_11^post4
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post4, __const_10^0'=__const_10^post4, __const_11^0'=__const_11^post4, copied^0'=copied^post4, e^0'=e^post4, n^0'=n^post4, olde^0'=olde^post4, oldn^0'=oldn^post4, (0 == 0 /\ __const_11^0-__const_11^post4 == 0 /\ 1-e^0+e^post4 == 0 /\ -n^0+oldn^post4 == 0 /\ -1+copied^post4 == 0 /\ -e^0+olde^post4 == 0 /\ 1-e^0 <= 0 /\ copied^0 <= 0 /\ -__const_100^post4+__const_100^0 == 0 /\ __const_10^0-__const_10^post4 == 0 /\ __const_10^0-n^0+n^post4 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=1, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=e^0, oldn^0'=n^0, (0 == 0 /\ 1-e^0 <= 0 /\ copied^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	
		propagated equality __const_11^post4 = __const_11^0
		
		propagated equality e^post4 = -1+e^0
		
		propagated equality oldn^post4 = n^0
		
		propagated equality copied^post4 = 1
		
		propagated equality olde^post4 = e^0
		
		propagated equality __const_100^post4 = __const_100^0
		
		propagated equality __const_10^post4 = __const_10^0
		
		propagated equality n^post4 = -__const_10^0+n^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=1, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=e^0, oldn^0'=n^0, (0 == 0 /\ 1-e^0 <= 0 /\ copied^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=1, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ copied^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=1, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ copied^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : copied^0'=1, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ copied^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post7, __const_10^0'=__const_10^post7, __const_11^0'=__const_11^post7, copied^0'=copied^post7, e^0'=e^post7, n^0'=n^post7, olde^0'=olde^post7, oldn^0'=oldn^post7, (n^post6-n^post7 == 0 /\ -copied^post7+copied^post6 == 0 /\ -e^post7+e^post6 == 0 /\ -__const_100^post6+__const_100^0 == 0 /\ -olde^post7+olde^post6 == 0 /\ -1-e^0+e^post6 == 0 /\ -copied^post6+copied^0 == 0 /\ -__const_100^post7+__const_100^post6 == 0 /\ -__const_10^post7+__const_10^post6 == 0 /\ -oldn^post6+oldn^0 == 0 /\ -olde^post6+olde^0 == 0 /\ -oldn^post7+oldn^post6 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ __const_11^post6-__const_11^post7 == 0 /\ -__const_11^post6+__const_11^0 == 0 /\ n^post6-__const_11^0-n^0 == 0 /\ __const_10^0-__const_10^post6 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post6, __const_10^0'=__const_10^post6, __const_11^0'=__const_11^post6, copied^0'=copied^post6, e^0'=e^post6, n^0'=n^post6, olde^0'=olde^post6, oldn^0'=oldn^post6, (0 == 0 /\ -__const_100^post6+__const_100^0 == 0 /\ -1-e^0+e^post6 == 0 /\ -copied^post6+copied^0 == 0 /\ -oldn^post6+oldn^0 == 0 /\ -olde^post6+olde^0 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ -__const_11^post6+__const_11^0 == 0 /\ n^post6-__const_11^0-n^0 == 0 /\ __const_10^0-__const_10^post6 == 0), cost: 1
	
		propagated equality n^post7 = n^post6
		
		propagated equality copied^post7 = copied^post6
		
		propagated equality e^post7 = e^post6
		
		propagated equality olde^post7 = olde^post6
		
		propagated equality __const_100^post7 = __const_100^post6
		
		propagated equality __const_10^post7 = __const_10^post6
		
		propagated equality oldn^post7 = oldn^post6
		
		propagated equality __const_11^post7 = __const_11^post6
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post6, __const_10^0'=__const_10^post6, __const_11^0'=__const_11^post6, copied^0'=copied^post6, e^0'=e^post6, n^0'=n^post6, olde^0'=olde^post6, oldn^0'=oldn^post6, (0 == 0 /\ -__const_100^post6+__const_100^0 == 0 /\ -1-e^0+e^post6 == 0 /\ -copied^post6+copied^0 == 0 /\ -oldn^post6+oldn^0 == 0 /\ -olde^post6+olde^0 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ -__const_11^post6+__const_11^0 == 0 /\ n^post6-__const_11^0-n^0 == 0 /\ __const_10^0-__const_10^post6 == 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=olde^0, oldn^0'=oldn^0, (0 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0), cost: 1
	
		propagated equality __const_100^post6 = __const_100^0
		
		propagated equality e^post6 = 1+e^0
		
		propagated equality copied^post6 = copied^0
		
		propagated equality oldn^post6 = oldn^0
		
		propagated equality olde^post6 = olde^0
		
		propagated equality __const_11^post6 = __const_11^0
		
		propagated equality n^post6 = __const_11^0+n^0
		
		propagated equality __const_10^post6 = __const_10^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=olde^0, oldn^0'=oldn^0, (0 == 0 /\ 1-e^0 <= 0 /\ n^0-__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=olde^0, oldn^0'=oldn^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=olde^0, oldn^0'=oldn^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post9, __const_10^0'=__const_10^post9, __const_11^0'=__const_11^post9, copied^0'=copied^post9, e^0'=e^post9, n^0'=n^post9, olde^0'=olde^post9, oldn^0'=oldn^post9, (-copied^post8+copied^0 == 0 /\ -olde^post9+olde^post8 == 0 /\ oldn^0-oldn^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ -olde^post8+olde^0 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ __const_10^0+n^post8-n^0 == 0 /\ -oldn^post9+oldn^post8 == 0 /\ -__const_100^post9+__const_100^post8 == 0 /\ __const_11^post8-__const_11^post9 == 0 /\ e^post8-e^post9 == 0 /\ 1-e^0 <= 0 /\ -__const_10^post9+__const_10^post8 == 0 /\ n^post8-n^post9 == 0 /\ -copied^post9+copied^post8 == 0 /\ -__const_11^post8+__const_11^0 == 0 /\ 1+e^post8-e^0 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^post8, __const_10^0'=__const_10^post8, __const_11^0'=__const_11^post8, copied^0'=copied^post8, e^0'=e^post8, n^0'=n^post8, olde^0'=olde^post8, oldn^0'=oldn^post8, (0 == 0 /\ -copied^post8+copied^0 == 0 /\ oldn^0-oldn^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ -olde^post8+olde^0 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ __const_10^0+n^post8-n^0 == 0 /\ 1-e^0 <= 0 /\ -__const_11^post8+__const_11^0 == 0 /\ 1+e^post8-e^0 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	
		propagated equality olde^post9 = olde^post8
		
		propagated equality oldn^post9 = oldn^post8
		
		propagated equality __const_100^post9 = __const_100^post8
		
		propagated equality __const_11^post9 = __const_11^post8
		
		propagated equality e^post9 = e^post8
		
		propagated equality __const_10^post9 = __const_10^post8
		
		propagated equality n^post9 = n^post8
		
		propagated equality copied^post9 = copied^post8
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^post8, __const_10^0'=__const_10^post8, __const_11^0'=__const_11^post8, copied^0'=copied^post8, e^0'=e^post8, n^0'=n^post8, olde^0'=olde^post8, oldn^0'=oldn^post8, (0 == 0 /\ -copied^post8+copied^0 == 0 /\ oldn^0-oldn^post8 == 0 /\ -__const_100^post8+__const_100^0 == 0 /\ -olde^post8+olde^0 == 0 /\ __const_10^0-__const_10^post8 == 0 /\ __const_10^0+n^post8-n^0 == 0 /\ 1-e^0 <= 0 /\ -__const_11^post8+__const_11^0 == 0 /\ 1+e^post8-e^0 == 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=olde^0, oldn^0'=oldn^0, (0 == 0 /\ 1-e^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	
		propagated equality copied^post8 = copied^0
		
		propagated equality oldn^post8 = oldn^0
		
		propagated equality __const_100^post8 = __const_100^0
		
		propagated equality olde^post8 = olde^0
		
		propagated equality __const_10^post8 = __const_10^0
		
		propagated equality n^post8 = -__const_10^0+n^0
		
		propagated equality __const_11^post8 = __const_11^0
		
		propagated equality e^post8 = -1+e^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=olde^0, oldn^0'=oldn^0, (0 == 0 /\ 1-e^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=olde^0, oldn^0'=oldn^0, (1-e^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : __const_100^0'=__const_100^0, __const_10^0'=__const_10^0, __const_11^0'=__const_11^0, copied^0'=copied^0, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=olde^0, oldn^0'=oldn^0, (1-e^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (1-e^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1

Step with 17

	Trace

	17[T]
	
	Blocked

	[{}, {}]

Step with 18

	Trace

	17[T], 18[(1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 20

	Trace

	17[T], 18[(1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0)], 20[(1-e^0 <= 0 /\ n^0-__const_100^0 <= 0)]
	
	Blocked

	[{}, {16[T]}, {18[T], 19[T]}, {}]

Nonterm

Start location: l7
Program variables: __const_100^0 __const_10^0 __const_11^0 copied^0 e^0 n^0 olde^0 oldn^0
  16: l0 -> l1 : (1-copied^0 <= 0 /\ n^0-oldn^0 <= 0 /\ -e^0+olde^0 <= 0), cost: 1
  18: l0 -> l0 : copied^0'=1, e^0'=1+e^0, n^0'=__const_11^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0), cost: 1
  19: l0 -> l0 : copied^0'=1, e^0'=-1+e^0, n^0'=-__const_10^0+n^0, olde^0'=e^0, oldn^0'=n^0, (1-e^0 <= 0 /\ copied^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
  20: l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0), cost: 1
  21: l0 -> l0 : e^0'=-1+e^0, n^0'=-__const_10^0+n^0, (1-e^0 <= 0 /\ 1-n^0+__const_100^0 <= 0), cost: 1
  22: l0 -> LoAT_sink : (__const_11^0 <= 0 /\ -1+e^0 >= 0 /\ -n^0+__const_100^0 >= 0), cost: NONTERM
  23: l0 -> l0 : e^0'=e^0+n, n^0'=__const_11^0*n+n^0, (-__const_11^0*(-1+n)-n^0+__const_100^0 >= 0 /\ -1+e^0 >= 0 /\ -n^0+__const_100^0 >= 0 /\ -1+n >= 0), cost: 1
  17: l7 -> l0 : copied^0'=0, e^0'=1, n^0'=n^post10, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> LoAT_sink : (__const_11^0 <= 0 /\ -1+e^0 >= 0 /\ -n^0+__const_100^0 >= 0), cost: NONTERM

		-1+e^0 >= 0 [0]: monotonic increase yields -1+e^0 >= 0
		
		-n^0+__const_100^0 >= 0 [0]: eventual decrease yields (-__const_11^0*(-1+n)-n^0+__const_100^0 >= 0 /\ -n^0+__const_100^0 >= 0)
		
		-n^0+__const_100^0 >= 0 [1]: eventual increase yields (__const_11^0 <= 0 /\ -n^0+__const_100^0 >= 0)
		
		Replacement map: {-1+e^0 >= 0 -> -1+e^0 >= 0, -n^0+__const_100^0 >= 0 -> (__const_11^0 <= 0 /\ -n^0+__const_100^0 >= 0)}

	Loop Acceleration

	Original rule:
	l0 -> l0 : e^0'=1+e^0, n^0'=__const_11^0+n^0, (1-e^0 <= 0 /\ n^0-__const_100^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : e^0'=e^0+n, n^0'=__const_11^0*n+n^0, (-__const_11^0*(-1+n)-n^0+__const_100^0 >= 0 /\ -1+e^0 >= 0 /\ -n^0+__const_100^0 >= 0 /\ -1+n >= 0), cost: 1

		-1+e^0 >= 0 [0]: monotonic increase yields -1+e^0 >= 0
		
		-n^0+__const_100^0 >= 0 [0]: eventual decrease yields (-__const_11^0*(-1+n)-n^0+__const_100^0 >= 0 /\ -n^0+__const_100^0 >= 0)
		
		-n^0+__const_100^0 >= 0 [1]: eventual increase yields (__const_11^0 <= 0 /\ -n^0+__const_100^0 >= 0)
		
		Replacement map: {-1+e^0 >= 0 -> -1+e^0 >= 0, -n^0+__const_100^0 >= 0 -> (-__const_11^0*(-1+n)-n^0+__const_100^0 >= 0 /\ -n^0+__const_100^0 >= 0)}

Step with 22

	Trace

	17[T], 18[(1-e^0 <= 0 /\ n^0-__const_100^0 <= 0 /\ copied^0 <= 0)], 22[(__const_11^0 <= 0 /\ -1+e^0 >= 0 /\ -n^0+__const_100^0 >= 0)]
	
	Blocked

	[{}, {16[T]}, {18[T], 19[T]}, {22[T]}]

Refute

	Counterexample

	[ __const_100^0=0 __const_10^0=0 __const_11^0=0 copied^0=0 e^0=1 n^0=0 olde^0=0 oldn^0=0 ] 17 [ __const_100^0=0 __const_10^0=0 __const_11^0=0 copied^0=1 e^0=2 n^0=0 olde^0=1 oldn^0=0 ] 18 [ __const_100^0=0 __const_10^0=0 __const_11^0=0 copied^0=copied^0 e^0=e^0 n^0=n^0 olde^0=0 oldn^0=0 ] 22
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
