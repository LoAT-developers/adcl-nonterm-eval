NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, true, par{arg1 -> 1, arg2 -> 2, arg3 -> 3}>
<l2, l2, (arg3 < 5), par{arg1 -> (((arg1 - arg2) + arg2) - (arg1 - arg2)), arg2 -> ((arg1 - arg2) + arg2), arg3 -> ((((arg1 - arg2) + arg2) - (arg1 - arg2)) + ((arg1 - arg2) + arg2))}>
<l3, l1, true, par{arg1 -> undef7, arg2 -> undef8, arg3 -> undef9}>

Fresh variables:
undef7, undef8, undef9, 

Undef variables:
undef7, undef8, undef9, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = 1) /\ (arg2 = 2) /\ (arg3 = 3)>
<l2, l2, (arg3 < 5), par{arg1 -> (((arg1 - arg2) + arg2) - (arg1 - arg2)), arg2 -> ((arg1 - arg2) + arg2), arg3 -> ((((arg1 - arg2) + arg2) - (arg1 - arg2)) + ((arg1 - arg2) + arg2))}>

Fresh variables:
undef7, undef8, undef9, 

Undef variables:
undef7, undef8, undef9, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, arg3 <= 4, {arg1 -> arg2, arg2 -> arg1, arg3 -> arg1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Precedence: 
Graph 0

Graph 1
<l0, l2, arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.007557

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000672s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001692s
Trying to remove transition: <l2, l2, arg3 <= 4, {arg1 -> arg2, arg2 -> arg1, arg3 -> arg1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.005918s
Time used: 0.005778
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.079962s
Time used: 0.079585
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 3.956355s
Time used: 3.95593
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.003383s
Time used: 1.0001
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.078302s
Time used: 0.070831
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001076s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001174s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l2, l2, arg3 <= 4, {arg1 -> arg2, arg2 -> arg1, arg3 -> arg1 + arg2, rest remain the same}>
Variables:
arg1, arg2, arg3

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, 5 <= arg3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.007726s
Time used: 0.007625
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.040644s
Time used: 0.040079
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.052445s
Time used: 0.052439

LOG: SAT solveNonLinear - Elapsed time: 0.093089s
Cost: 0; Total time: 0.092518
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 + arg2 <= 3[0m
[36mQuasi-invariant at l2: arg3 <= 3[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 + arg2 <= 3 /\ arg3 <= 3, {arg1 -> arg2, arg2 -> arg1, arg3 -> arg1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: arg1 + arg2 <= 3, arg3 <= 3, 
OPEN EXITS: 
<l2, end, arg1 + arg2 <= 3 /\ arg3 <= 3, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>
Conditions: arg1 + arg2 <= 3, arg3 <= 3, 
OPEN EXITS: 
<l0, l2, arg1 + arg2 <= 3 /\ arg1 = 1 /\ arg2 = 2 /\ arg3 = 3, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
