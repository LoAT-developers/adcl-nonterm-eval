NO

Initial ITS
Start location: __init
   0: f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-6+arg2P0 > 0 /\ -9+arg1P0 > 0), cost: 1
   1: f1_0_main_New -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 3-arg3P1 == 0 /\ 1-arg4P1 == 0), cost: 1
   2: f1_0_main_New -> f580_0_main_InvokeMethod : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ 5-arg5P2 == 0 /\ -6+arg1P2 > 0), cost: 1
  12: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1-arg2+arg2P12 <= 0 /\ arg1P12-arg1 <= 0 /\ arg1P12 > 0 /\ arg2 > 0 /\ 1+arg2P12 > 0 /\ arg1 > 0 /\ -x530+x540 > 0), cost: 1
  13: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg1 > 0 /\ arg1P13 > 0 /\ arg2 > 0 /\ -arg2+arg2P13 <= 0 /\ 2+arg1P13-arg1 <= 0 /\ arg2P13 > 0 /\ x600-x590 <= 0), cost: 1
   5: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 6-arg2P5 == 0 /\ 2-arg2+arg4 <= 0 /\ 5-arg3P5 == 0), cost: 1
   7: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ 5-arg3P7 == 0 /\ 6-arg2P7 == 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1
  15: f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg5P15, arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (2-arg1+arg3 <= 0 /\ arg4-arg5P15 == 0 /\ -9+arg1P15 > 0 /\ -4+arg2P15 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3P15 > 0 /\ -2+arg2P15-arg2 <= 0 /\ 5-arg4P15 == 0), cost: 1
   4: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ 5-arg3P4 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1
   6: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0 /\ 5-arg3P6 == 0), cost: 1
  14: f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=arg5P14, arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (2-arg1+arg3 <= 0 /\ arg2P14-arg1 <= 0 /\ -6+arg2 > 0 /\ 5-arg4P14 == 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P14 > 0 /\ 1+arg3P14 > 0 /\ -arg2+arg2P14 <= 0 /\ -6+arg2P14 > 0 /\ 2-arg2+arg4 <= 0 /\ 1-arg5P14 == 0), cost: 1
  17: f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 5-arg3P17 == 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1P17 <= 0 /\ 1+arg2P17 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg2+arg1P17 <= 0 /\ -6+arg1P17 > 0), cost: 1
  20: f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=arg3P20, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 1+arg2P20 > 0 /\ -6+arg1P20 > 0 /\ arg1P20-arg1 <= 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ arg1P20-arg2 <= 0 /\ 5-arg3P20 == 0 /\ 2-arg2+arg4 <= 0), cost: 1
  23: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=arg3P23, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -arg1+arg1P23 <= 0 /\ 5-arg3P23 == 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
   3: f418_0_merge_Return -> f580_0_main_InvokeMethod : arg5'=arg5P3, arg2'=arg2P3, arg4'=arg4P3, arg1'=arg1P3, arg3'=arg3P3, (-6+arg2P3 > 0 /\ 2+arg2-arg1 <= 0 /\ -6+arg1 > 0 /\ 5-arg3 == 0 /\ -6+arg1P3 > 0 /\ 5-arg5P3 == 0), cost: 1
  10: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-6+arg1P10 > 0 /\ -6+arg1 > 0 /\ 5-arg3P10 == 0 /\ 4+arg2-arg1 <= 0 /\ arg2-arg2P10 == 0 /\ 5-arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
  11: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-arg2P11+arg2 == 0 /\ -6+arg1 > 0 /\ 5-arg3P11 == 0 /\ -arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ 5-arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
  18: f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (-6+arg1P18 > 0 /\ -6+arg1 > 0 /\ 1+arg2P18 > 0 /\ 5-arg3P18 == 0 /\ 4+arg2-arg1 <= 0 /\ arg1P18-arg1 <= 0 /\ 5-arg3 == 0), cost: 1
  21: f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=arg3P21, (5-arg3P21 == 0 /\ 1+arg2P21 > 0 /\ -arg1+arg1P21 <= 0 /\ -6+arg1 > 0 /\ 4+arg2-arg1 <= 0 /\ -6+arg1P21 > 0 /\ 5-arg3 == 0), cost: 1
   8: f747_0_append_Return -> f1500_0_main_InvokeMethod : arg5'=arg5P8, arg2'=arg2P8, arg4'=arg4P8, arg1'=arg1P8, arg3'=arg3P8, (-6+arg1 > 0 /\ -6+arg1P8 > 0 /\ arg1P8-arg1 <= 0 /\ 4+arg2-arg1 <= 0 /\ 5-arg4 == 0 /\ 4-arg1+arg3 <= 0 /\ 5-arg3P8 == 0 /\ -arg2P8+arg3 == 0), cost: 1
   9: f749_0_append_Return -> f1500_0_main_InvokeMethod : arg5'=arg5P9, arg2'=arg2P9, arg4'=arg4P9, arg1'=arg1P9, arg3'=arg3P9, (-9+arg1 > 0 /\ -9+arg1P9 > 0 /\ 5-arg3P9 == 0 /\ 6-arg2P9 == 0 /\ 4+arg2-arg1 <= 0 /\ 5-arg4 == 0 /\ -arg1+arg1P9 <= 0 /\ 6-arg3 == 0), cost: 1
  24: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=arg3P24, (5-arg3P24 == 0 /\ arg1P24-arg1 <= 0 /\ -6+arg1 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ 5-arg3 == 0), cost: 1
  16: f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg5-arg5P16 == 0 /\ arg2 > 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ 2+arg4-arg1 <= 0 /\ -arg2+arg2P16 <= 0 /\ arg2P16 > 0 /\ 2+arg5-arg2 <= 0 /\ arg3 > 0), cost: 1
  19: f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P19 > 0 /\ arg1P19 > 0), cost: 1
  22: f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 1
  25: f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P25 > 0 /\ arg1P25 > 0), cost: 1
  26: f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg5P26, arg2'=arg2P26, arg4'=arg4P26, arg1'=arg1P26, arg3'=arg3P26, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -1+arg1P26 > 0 /\ arg2 > 0 /\ 1+arg3P26 > 0 /\ -arg5P26+arg3 == 0 /\ -1+arg2P26 > 0 /\ -arg1+arg2P26 <= 0), cost: 1
  27: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg5P27, arg2'=arg2P27, arg4'=arg4P27, arg1'=arg1P27, arg3'=arg3P27, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2P27 > 0 /\ -arg5P27+arg3 == 0 /\ arg2P27-arg1 <= 0 /\ -2+arg1P27 > 0), cost: 1
  28: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg5P28, arg2'=arg2P28, arg4'=arg4P28, arg1'=arg1P28, arg3'=arg3P28, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -4+arg1P28 > 0 /\ arg2 > 0 /\ -arg5P28+arg3 == 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0), cost: 1
  29: f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg5'=arg5P29, arg2'=arg2P29, arg4'=arg4P29, arg1'=arg1P29, arg3'=arg3P29, (-2+arg1 > 0 /\ arg5-arg5P29 == 0 /\ arg1P29-arg1 <= 0 /\ -2+arg1P29 > 0 /\ -arg2+arg2P29 <= 0 /\ 2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P29 > 0 /\ 4-arg1+arg3 <= 0 /\ -1+arg2P29 > 0 /\ arg4-arg4P29 == 0), cost: 1
  30: __init -> f1_0_main_New : arg5'=arg5P30, arg2'=arg2P30, arg4'=arg4P30, arg1'=arg1P30, arg3'=arg3P30, TRUE, cost: 1


Removed unreachable rules and leafs
Start location: __init
   0: f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-6+arg2P0 > 0 /\ -9+arg1P0 > 0), cost: 1
   1: f1_0_main_New -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 3-arg3P1 == 0 /\ 1-arg4P1 == 0), cost: 1
   2: f1_0_main_New -> f580_0_main_InvokeMethod : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ 5-arg5P2 == 0 /\ -6+arg1P2 > 0), cost: 1
  12: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1-arg2+arg2P12 <= 0 /\ arg1P12-arg1 <= 0 /\ arg1P12 > 0 /\ arg2 > 0 /\ 1+arg2P12 > 0 /\ arg1 > 0 /\ -x530+x540 > 0), cost: 1
  13: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg1 > 0 /\ arg1P13 > 0 /\ arg2 > 0 /\ -arg2+arg2P13 <= 0 /\ 2+arg1P13-arg1 <= 0 /\ arg2P13 > 0 /\ x600-x590 <= 0), cost: 1
   5: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 6-arg2P5 == 0 /\ 2-arg2+arg4 <= 0 /\ 5-arg3P5 == 0), cost: 1
   7: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ 5-arg3P7 == 0 /\ 6-arg2P7 == 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1
  15: f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg5P15, arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (2-arg1+arg3 <= 0 /\ arg4-arg5P15 == 0 /\ -9+arg1P15 > 0 /\ -4+arg2P15 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3P15 > 0 /\ -2+arg2P15-arg2 <= 0 /\ 5-arg4P15 == 0), cost: 1
   4: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ 5-arg3P4 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1
   6: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0 /\ 5-arg3P6 == 0), cost: 1
  14: f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=arg5P14, arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (2-arg1+arg3 <= 0 /\ arg2P14-arg1 <= 0 /\ -6+arg2 > 0 /\ 5-arg4P14 == 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P14 > 0 /\ 1+arg3P14 > 0 /\ -arg2+arg2P14 <= 0 /\ -6+arg2P14 > 0 /\ 2-arg2+arg4 <= 0 /\ 1-arg5P14 == 0), cost: 1
  17: f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 5-arg3P17 == 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1P17 <= 0 /\ 1+arg2P17 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg2+arg1P17 <= 0 /\ -6+arg1P17 > 0), cost: 1
  20: f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=arg3P20, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 1+arg2P20 > 0 /\ -6+arg1P20 > 0 /\ arg1P20-arg1 <= 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ arg1P20-arg2 <= 0 /\ 5-arg3P20 == 0 /\ 2-arg2+arg4 <= 0), cost: 1
  23: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=arg3P23, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -arg1+arg1P23 <= 0 /\ 5-arg3P23 == 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  10: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-6+arg1P10 > 0 /\ -6+arg1 > 0 /\ 5-arg3P10 == 0 /\ 4+arg2-arg1 <= 0 /\ arg2-arg2P10 == 0 /\ 5-arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
  11: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-arg2P11+arg2 == 0 /\ -6+arg1 > 0 /\ 5-arg3P11 == 0 /\ -arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ 5-arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
  18: f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (-6+arg1P18 > 0 /\ -6+arg1 > 0 /\ 1+arg2P18 > 0 /\ 5-arg3P18 == 0 /\ 4+arg2-arg1 <= 0 /\ arg1P18-arg1 <= 0 /\ 5-arg3 == 0), cost: 1
  21: f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=arg3P21, (5-arg3P21 == 0 /\ 1+arg2P21 > 0 /\ -arg1+arg1P21 <= 0 /\ -6+arg1 > 0 /\ 4+arg2-arg1 <= 0 /\ -6+arg1P21 > 0 /\ 5-arg3 == 0), cost: 1
  24: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=arg3P24, (5-arg3P24 == 0 /\ arg1P24-arg1 <= 0 /\ -6+arg1 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ 5-arg3 == 0), cost: 1
  16: f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg5-arg5P16 == 0 /\ arg2 > 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ 2+arg4-arg1 <= 0 /\ -arg2+arg2P16 <= 0 /\ arg2P16 > 0 /\ 2+arg5-arg2 <= 0 /\ arg3 > 0), cost: 1
  19: f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P19 > 0 /\ arg1P19 > 0), cost: 1
  22: f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 1
  25: f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P25 > 0 /\ arg1P25 > 0), cost: 1
  26: f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg5P26, arg2'=arg2P26, arg4'=arg4P26, arg1'=arg1P26, arg3'=arg3P26, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -1+arg1P26 > 0 /\ arg2 > 0 /\ 1+arg3P26 > 0 /\ -arg5P26+arg3 == 0 /\ -1+arg2P26 > 0 /\ -arg1+arg2P26 <= 0), cost: 1
  27: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg5P27, arg2'=arg2P27, arg4'=arg4P27, arg1'=arg1P27, arg3'=arg3P27, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2P27 > 0 /\ -arg5P27+arg3 == 0 /\ arg2P27-arg1 <= 0 /\ -2+arg1P27 > 0), cost: 1
  28: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg5P28, arg2'=arg2P28, arg4'=arg4P28, arg1'=arg1P28, arg3'=arg3P28, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -4+arg1P28 > 0 /\ arg2 > 0 /\ -arg5P28+arg3 == 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0), cost: 1
  29: f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg5'=arg5P29, arg2'=arg2P29, arg4'=arg4P29, arg1'=arg1P29, arg3'=arg3P29, (-2+arg1 > 0 /\ arg5-arg5P29 == 0 /\ arg1P29-arg1 <= 0 /\ -2+arg1P29 > 0 /\ -arg2+arg2P29 <= 0 /\ 2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P29 > 0 /\ 4-arg1+arg3 <= 0 /\ -1+arg2P29 > 0 /\ arg4-arg4P29 == 0), cost: 1
  30: __init -> f1_0_main_New : arg5'=arg5P30, arg2'=arg2P30, arg4'=arg4P30, arg1'=arg1P30, arg3'=arg3P30, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_New -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=arg4P1, arg1'=arg1P1, arg3'=arg3P1, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 3-arg3P1 == 0 /\ 1-arg4P1 == 0), cost: 1
New rule:
f1_0_main_New -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_New -> f580_0_main_InvokeMethod : arg5'=arg5P2, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ 5-arg5P2 == 0 /\ -6+arg1P2 > 0), cost: 1
New rule:
f1_0_main_New -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 1

Applied preprocessing
Original rule:
f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=arg3P4, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ 5-arg3P4 == 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1
New rule:
f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1

Applied preprocessing
Original rule:
f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=arg2P5, arg4'=arg4P5, arg1'=arg1P5, arg3'=arg3P5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 6-arg2P5 == 0 /\ 2-arg2+arg4 <= 0 /\ 5-arg3P5 == 0), cost: 1
New rule:
f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0), cost: 1

Applied preprocessing
Original rule:
f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=arg3P6, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0 /\ 5-arg3P6 == 0), cost: 1
New rule:
f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0), cost: 1

Applied preprocessing
Original rule:
f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=arg2P7, arg4'=arg4P7, arg1'=arg1P7, arg3'=arg3P7, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ 5-arg3P7 == 0 /\ 6-arg2P7 == 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1
New rule:
f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1

Applied preprocessing
Original rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg2'=arg2P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=arg3P10, (-6+arg1P10 > 0 /\ -6+arg1 > 0 /\ 5-arg3P10 == 0 /\ 4+arg2-arg1 <= 0 /\ arg2-arg2P10 == 0 /\ 5-arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
New rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=5, (-6+arg1P10 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1

Applied preprocessing
Original rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg2'=arg2P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=arg3P11, (-arg2P11+arg2 == 0 /\ -6+arg1 > 0 /\ 5-arg3P11 == 0 /\ -arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ 5-arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
New rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=5, (-arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: 1

Applied preprocessing
Original rule:
f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1-arg2+arg2P12 <= 0 /\ arg1P12-arg1 <= 0 /\ arg1P12 > 0 /\ arg2 > 0 /\ 1+arg2P12 > 0 /\ arg1 > 0 /\ -x530+x540 > 0), cost: 1
New rule:
f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1-arg2+arg2P12 <= 0 /\ arg1P12-arg1 <= 0 /\ arg1P12 > 0 /\ 1+arg2P12 > 0), cost: 1

Applied preprocessing
Original rule:
f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (-2+arg1 > 0 /\ arg1P13 > 0 /\ arg2 > 0 /\ -arg2+arg2P13 <= 0 /\ 2+arg1P13-arg1 <= 0 /\ arg2P13 > 0 /\ x600-x590 <= 0), cost: 1
New rule:
f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ -arg2+arg2P13 <= 0 /\ 2+arg1P13-arg1 <= 0 /\ arg2P13 > 0), cost: 1

Applied preprocessing
Original rule:
f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=arg5P14, arg2'=arg2P14, arg4'=arg4P14, arg1'=arg1P14, arg3'=arg3P14, (2-arg1+arg3 <= 0 /\ arg2P14-arg1 <= 0 /\ -6+arg2 > 0 /\ 5-arg4P14 == 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P14 > 0 /\ 1+arg3P14 > 0 /\ -arg2+arg2P14 <= 0 /\ -6+arg2P14 > 0 /\ 2-arg2+arg4 <= 0 /\ 1-arg5P14 == 0), cost: 1
New rule:
f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=1, arg2'=arg2P14, arg4'=5, arg1'=arg1P14, arg3'=arg3P14, (2-arg1+arg3 <= 0 /\ arg2P14-arg1 <= 0 /\ -5+arg5 == 0 /\ -6+arg1P14 > 0 /\ 1+arg3P14 > 0 /\ -arg2+arg2P14 <= 0 /\ -6+arg2P14 > 0 /\ 2-arg2+arg4 <= 0), cost: 1

Applied preprocessing
Original rule:
f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg5P15, arg2'=arg2P15, arg4'=arg4P15, arg1'=arg1P15, arg3'=arg3P15, (2-arg1+arg3 <= 0 /\ arg4-arg5P15 == 0 /\ -9+arg1P15 > 0 /\ -4+arg2P15 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3P15 > 0 /\ -2+arg2P15-arg2 <= 0 /\ 5-arg4P15 == 0), cost: 1
New rule:
f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg4, arg2'=arg2P15, arg4'=5, arg1'=arg1P15, arg3'=arg3P15, (2-arg1+arg3 <= 0 /\ -9+arg1P15 > 0 /\ -4+arg2P15 > 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3P15 > 0 /\ -2+arg2P15-arg2 <= 0), cost: 1

Applied preprocessing
Original rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg5'=arg5P16, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg5-arg5P16 == 0 /\ arg2 > 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ 2+arg4-arg1 <= 0 /\ -arg2+arg2P16 <= 0 /\ arg2P16 > 0 /\ 2+arg5-arg2 <= 0 /\ arg3 > 0), cost: 1
New rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ 2+arg4-arg1 <= 0 /\ -arg2+arg2P16 <= 0 /\ arg2P16 > 0 /\ 2+arg5-arg2 <= 0 /\ arg3 > 0), cost: 1

Applied preprocessing
Original rule:
f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=arg3P17, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 5-arg3P17 == 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -arg1+arg1P17 <= 0 /\ 1+arg2P17 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg2+arg1P17 <= 0 /\ -6+arg1P17 > 0), cost: 1
New rule:
f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=5, (2-arg1+arg3 <= 0 /\ -5+arg5 == 0 /\ -arg1+arg1P17 <= 0 /\ 1+arg2P17 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg2+arg1P17 <= 0 /\ -6+arg1P17 > 0), cost: 1

Applied preprocessing
Original rule:
f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=arg3P18, (-6+arg1P18 > 0 /\ -6+arg1 > 0 /\ 1+arg2P18 > 0 /\ 5-arg3P18 == 0 /\ 4+arg2-arg1 <= 0 /\ arg1P18-arg1 <= 0 /\ 5-arg3 == 0), cost: 1
New rule:
f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=5, (-6+arg1P18 > 0 /\ 1+arg2P18 > 0 /\ 4+arg2-arg1 <= 0 /\ arg1P18-arg1 <= 0 /\ -5+arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=arg3P20, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ 1+arg2P20 > 0 /\ -6+arg1P20 > 0 /\ arg1P20-arg1 <= 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ arg1P20-arg2 <= 0 /\ 5-arg3P20 == 0 /\ 2-arg2+arg4 <= 0), cost: 1
New rule:
f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=5, (2-arg1+arg3 <= 0 /\ 1+arg2P20 > 0 /\ -6+arg1P20 > 0 /\ arg1P20-arg1 <= 0 /\ -5+arg5 == 0 /\ arg1P20-arg2 <= 0 /\ 2-arg2+arg4 <= 0), cost: 1

Applied preprocessing
Original rule:
f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=arg3P21, (5-arg3P21 == 0 /\ 1+arg2P21 > 0 /\ -arg1+arg1P21 <= 0 /\ -6+arg1 > 0 /\ 4+arg2-arg1 <= 0 /\ -6+arg1P21 > 0 /\ 5-arg3 == 0), cost: 1
New rule:
f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=5, (1+arg2P21 > 0 /\ -arg1+arg1P21 <= 0 /\ 4+arg2-arg1 <= 0 /\ -6+arg1P21 > 0 /\ -5+arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=arg3P23, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -arg1+arg1P23 <= 0 /\ 5-arg3P23 == 0 /\ 5-arg5 == 0 /\ -6+arg1 > 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
New rule:
f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (2-arg1+arg3 <= 0 /\ -arg1+arg1P23 <= 0 /\ -5+arg5 == 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1

Applied preprocessing
Original rule:
f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=arg3P24, (5-arg3P24 == 0 /\ arg1P24-arg1 <= 0 /\ -6+arg1 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ 5-arg3 == 0), cost: 1
New rule:
f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (arg1P24-arg1 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1

Applied preprocessing
Original rule:
f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg5P26, arg2'=arg2P26, arg4'=arg4P26, arg1'=arg1P26, arg3'=arg3P26, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -1+arg1P26 > 0 /\ arg2 > 0 /\ 1+arg3P26 > 0 /\ -arg5P26+arg3 == 0 /\ -1+arg2P26 > 0 /\ -arg1+arg2P26 <= 0), cost: 1
New rule:
f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg3, arg2'=arg2P26, arg4'=arg4P26, arg1'=arg1P26, arg3'=arg3P26, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -1+arg1P26 > 0 /\ arg2 > 0 /\ 1+arg3P26 > 0 /\ -1+arg2P26 > 0 /\ -arg1+arg2P26 <= 0), cost: 1

Applied preprocessing
Original rule:
f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg5P27, arg2'=arg2P27, arg4'=arg4P27, arg1'=arg1P27, arg3'=arg3P27, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2P27 > 0 /\ -arg5P27+arg3 == 0 /\ arg2P27-arg1 <= 0 /\ -2+arg1P27 > 0), cost: 1
New rule:
f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P27, arg4'=arg4P27, arg1'=arg1P27, arg3'=arg3P27, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2P27 > 0 /\ arg2P27-arg1 <= 0 /\ -2+arg1P27 > 0), cost: 1

Applied preprocessing
Original rule:
f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg5P28, arg2'=arg2P28, arg4'=arg4P28, arg1'=arg1P28, arg3'=arg3P28, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -4+arg1P28 > 0 /\ arg2 > 0 /\ -arg5P28+arg3 == 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0), cost: 1
New rule:
f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P28, arg4'=arg4P28, arg1'=arg1P28, arg3'=arg3P28, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -4+arg1P28 > 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0), cost: 1

Applied preprocessing
Original rule:
f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg5'=arg5P29, arg2'=arg2P29, arg4'=arg4P29, arg1'=arg1P29, arg3'=arg3P29, (-2+arg1 > 0 /\ arg5-arg5P29 == 0 /\ arg1P29-arg1 <= 0 /\ -2+arg1P29 > 0 /\ -arg2+arg2P29 <= 0 /\ 2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ -1+arg2 > 0 /\ 1+arg3P29 > 0 /\ 4-arg1+arg3 <= 0 /\ -1+arg2P29 > 0 /\ arg4-arg4P29 == 0), cost: 1
New rule:
f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg2'=arg2P29, arg1'=arg1P29, arg3'=arg3P29, (arg1P29-arg1 <= 0 /\ -2+arg1P29 > 0 /\ -arg2+arg2P29 <= 0 /\ 2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 1+arg3P29 > 0 /\ 4-arg1+arg3 <= 0 /\ -1+arg2P29 > 0), cost: 1

Simplified rules
Start location: __init
   0: f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-6+arg2P0 > 0 /\ -9+arg1P0 > 0), cost: 1
  31: f1_0_main_New -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 1
  32: f1_0_main_New -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 1
  39: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1-arg2+arg2P12 <= 0 /\ arg1P12-arg1 <= 0 /\ arg1P12 > 0 /\ 1+arg2P12 > 0), cost: 1
  40: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ -arg2+arg2P13 <= 0 /\ 2+arg1P13-arg1 <= 0 /\ arg2P13 > 0), cost: 1
  34: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  36: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1
  42: f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg4, arg2'=arg2P15, arg4'=5, arg1'=arg1P15, arg3'=arg3P15, (2-arg1+arg3 <= 0 /\ -9+arg1P15 > 0 /\ -4+arg2P15 > 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3P15 > 0 /\ -2+arg2P15-arg2 <= 0), cost: 1
  33: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1
  35: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  41: f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=1, arg2'=arg2P14, arg4'=5, arg1'=arg1P14, arg3'=arg3P14, (2-arg1+arg3 <= 0 /\ arg2P14-arg1 <= 0 /\ -5+arg5 == 0 /\ -6+arg1P14 > 0 /\ 1+arg3P14 > 0 /\ -arg2+arg2P14 <= 0 /\ -6+arg2P14 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  44: f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=5, (2-arg1+arg3 <= 0 /\ -5+arg5 == 0 /\ -arg1+arg1P17 <= 0 /\ 1+arg2P17 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg2+arg1P17 <= 0 /\ -6+arg1P17 > 0), cost: 1
  46: f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=5, (2-arg1+arg3 <= 0 /\ 1+arg2P20 > 0 /\ -6+arg1P20 > 0 /\ arg1P20-arg1 <= 0 /\ -5+arg5 == 0 /\ arg1P20-arg2 <= 0 /\ 2-arg2+arg4 <= 0), cost: 1
  48: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (2-arg1+arg3 <= 0 /\ -arg1+arg1P23 <= 0 /\ -5+arg5 == 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  37: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=5, (-6+arg1P10 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
  38: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=5, (-arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
  45: f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=5, (-6+arg1P18 > 0 /\ 1+arg2P18 > 0 /\ 4+arg2-arg1 <= 0 /\ arg1P18-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
  47: f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=5, (1+arg2P21 > 0 /\ -arg1+arg1P21 <= 0 /\ 4+arg2-arg1 <= 0 /\ -6+arg1P21 > 0 /\ -5+arg3 == 0), cost: 1
  49: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (arg1P24-arg1 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
  43: f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ 2+arg4-arg1 <= 0 /\ -arg2+arg2P16 <= 0 /\ arg2P16 > 0 /\ 2+arg5-arg2 <= 0 /\ arg3 > 0), cost: 1
  19: f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P19 > 0 /\ arg1P19 > 0), cost: 1
  22: f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 1
  25: f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P25 > 0 /\ arg1P25 > 0), cost: 1
  50: f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg3, arg2'=arg2P26, arg4'=arg4P26, arg1'=arg1P26, arg3'=arg3P26, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -1+arg1P26 > 0 /\ arg2 > 0 /\ 1+arg3P26 > 0 /\ -1+arg2P26 > 0 /\ -arg1+arg2P26 <= 0), cost: 1
  51: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P27, arg4'=arg4P27, arg1'=arg1P27, arg3'=arg3P27, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2P27 > 0 /\ arg2P27-arg1 <= 0 /\ -2+arg1P27 > 0), cost: 1
  52: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P28, arg4'=arg4P28, arg1'=arg1P28, arg3'=arg3P28, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -4+arg1P28 > 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0), cost: 1
  53: f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg2'=arg2P29, arg1'=arg1P29, arg3'=arg3P29, (arg1P29-arg1 <= 0 /\ -2+arg1P29 > 0 /\ -arg2+arg2P29 <= 0 /\ 2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 1+arg3P29 > 0 /\ 4-arg1+arg3 <= 0 /\ -1+arg2P29 > 0), cost: 1
  30: __init -> f1_0_main_New : arg5'=arg5P30, arg2'=arg2P30, arg4'=arg4P30, arg1'=arg1P30, arg3'=arg3P30, TRUE, cost: 1


Applied acceleration
Original rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ 2+arg4-arg1 <= 0 /\ -arg2+arg2P16 <= 0 /\ arg2P16 > 0 /\ 2+arg5-arg2 <= 0 /\ arg3 > 0), cost: 1
New rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2-arg2P16 >= 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ -2-arg4+arg1 >= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ arg3 > 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_iKCLka.txt

Applied nonterm
Original rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ 2+arg4-arg1 <= 0 /\ -arg2+arg2P16 <= 0 /\ arg2P16 > 0 /\ 2+arg5-arg2 <= 0 /\ arg3 > 0), cost: 1
New rule:
f1341_0_append_NONNULL -> [16] : (-arg1P16+arg1 <= 0 /\ -2+arg1 > 0 /\ arg2-arg2P16 <= 0 /\ arg2-arg2P16 >= 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ -arg3P16+arg3 <= 0 /\ -2-arg4+arg1 >= 0 /\ arg2P16 > 0 /\ -2-arg5+arg2 >= 0 /\ -arg1P16-arg4+arg1+arg4P16 <= 0 /\ arg3 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lcIGNF.txt

Applied simplification
Original rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2-arg2P16 >= 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ -2-arg4+arg1 >= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ arg3 > 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: n3
New rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2-arg2P16 >= 0 /\ -2-arg4+arg1 >= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ arg3 > 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: n3

Applied simplification
Original rule:
f1341_0_append_NONNULL -> [16] : (-arg1P16+arg1 <= 0 /\ -2+arg1 > 0 /\ arg2-arg2P16 <= 0 /\ arg2-arg2P16 >= 0 /\ arg1P16 > 0 /\ 1+arg3P16 > 0 /\ -arg3P16+arg3 <= 0 /\ -2-arg4+arg1 >= 0 /\ arg2P16 > 0 /\ -2-arg5+arg2 >= 0 /\ -arg1P16-arg4+arg1+arg4P16 <= 0 /\ arg3 > 0), cost: NONTERM
New rule:
f1341_0_append_NONNULL -> [16] : (-arg1P16+arg1 <= 0 /\ -2+arg1 > 0 /\ arg2-arg2P16 <= 0 /\ arg2-arg2P16 >= 0 /\ -arg3P16+arg3 <= 0 /\ -2-arg4+arg1 >= 0 /\ arg2P16 > 0 /\ -2-arg5+arg2 >= 0 /\ -arg1P16-arg4+arg1+arg4P16 <= 0 /\ arg3 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 43

Applied acceleration
Original rule:
f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P19 > 0 /\ arg1P19 > 0), cost: 1
New rule:
f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ -2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P19 > 0 /\ 1+arg2P19 > 0 /\ -1+n4 >= 0 /\ arg1P19 > 0), cost: n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_pJFOfp.txt

Applied nonterm
Original rule:
f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P19 > 0 /\ arg1P19 > 0), cost: 1
New rule:
f1472_0_iter_NULL -> [17] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P19 > 0 /\ arg1-arg1P19-arg3+arg3P19 <= 0 /\ arg1-arg1P19 <= 0 /\ -arg2P19+arg2 <= 0 /\ arg1P19 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_efhiNm.txt

Applied simplification
Original rule:
f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ -2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P19 > 0 /\ 1+arg2P19 > 0 /\ -1+n4 >= 0 /\ arg1P19 > 0), cost: n4
New rule:
f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ -2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P19 > 0 /\ -1+n4 >= 0), cost: n4

Applied simplification
Original rule:
f1472_0_iter_NULL -> [17] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P19 > 0 /\ arg1-arg1P19-arg3+arg3P19 <= 0 /\ arg1-arg1P19 <= 0 /\ -arg2P19+arg2 <= 0 /\ arg1P19 > 0), cost: NONTERM
New rule:
f1472_0_iter_NULL -> [17] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P19-arg3+arg3P19 <= 0 /\ arg1-arg1P19 <= 0 /\ -arg2P19+arg2 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 19

Applied acceleration
Original rule:
f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 1
New rule:
f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1P22 > 0 /\ -2+arg1P22-arg3P22 >= 0 /\ -2+arg1P22 > 0 /\ 1+arg2P22 > 0 /\ arg2P22 > 0 /\ -1+n5 >= 0), cost: n5
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lCcLje.txt

Applied nonterm
Original rule:
f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1P22 > 0 /\ 1+arg2P22 > 0), cost: 1
New rule:
f1570_0_reverseAcc_NONNULL -> [18] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -arg1P22+arg1+arg3P22-arg3 <= 0 /\ arg1P22 > 0 /\ -arg1P22+arg1 <= 0 /\ arg2-arg2P22 <= 0 /\ 1+arg2P22 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ohaKPI.txt

Applied simplification
Original rule:
f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1P22 > 0 /\ -2+arg1P22-arg3P22 >= 0 /\ -2+arg1P22 > 0 /\ 1+arg2P22 > 0 /\ arg2P22 > 0 /\ -1+n5 >= 0), cost: n5
New rule:
f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P22-arg3P22 >= 0 /\ -2+arg1P22 > 0 /\ arg2P22 > 0 /\ -1+n5 >= 0), cost: n5

Applied simplification
Original rule:
f1570_0_reverseAcc_NONNULL -> [18] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -arg1P22+arg1+arg3P22-arg3 <= 0 /\ arg1P22 > 0 /\ -arg1P22+arg1 <= 0 /\ arg2-arg2P22 <= 0 /\ 1+arg2P22 > 0), cost: NONTERM
New rule:
f1570_0_reverseAcc_NONNULL -> [18] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -arg1P22+arg1+arg3P22-arg3 <= 0 /\ -arg1P22+arg1 <= 0 /\ arg2-arg2P22 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 22

Applied acceleration
Original rule:
f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P25 > 0 /\ arg1P25 > 0), cost: 1
New rule:
f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 1+arg2P25 > 0 /\ -2+arg1P25 > 0 /\ arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: n6
Sub-proof via acceration calculus written to file:///tmp/tmpnam_PcoPeP.txt

Applied nonterm
Original rule:
f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 1+arg2P25 > 0 /\ arg1P25 > 0), cost: 1
New rule:
f1682_0_reverse_NONNULL -> [19] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P25 <= 0 /\ 1+arg2P25 > 0 /\ arg2-arg2P25 <= 0 /\ arg3P25+arg1-arg3-arg1P25 <= 0 /\ arg1P25 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_kFBoGL.txt

Applied simplification
Original rule:
f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 1+arg2P25 > 0 /\ -2+arg1P25 > 0 /\ arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: n6
New rule:
f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: n6

Applied simplification
Original rule:
f1682_0_reverse_NONNULL -> [19] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P25 <= 0 /\ 1+arg2P25 > 0 /\ arg2-arg2P25 <= 0 /\ arg3P25+arg1-arg3-arg1P25 <= 0 /\ arg1P25 > 0), cost: NONTERM
New rule:
f1682_0_reverse_NONNULL -> [19] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P25 <= 0 /\ arg2-arg2P25 <= 0 /\ arg3P25+arg1-arg3-arg1P25 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 25

Accelerated simple loops
Start location: __init
   0: f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-6+arg2P0 > 0 /\ -9+arg1P0 > 0), cost: 1
  31: f1_0_main_New -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 1
  32: f1_0_main_New -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 1
  39: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1-arg2+arg2P12 <= 0 /\ arg1P12-arg1 <= 0 /\ arg1P12 > 0 /\ 1+arg2P12 > 0), cost: 1
  40: f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ -arg2+arg2P13 <= 0 /\ 2+arg1P13-arg1 <= 0 /\ arg2P13 > 0), cost: 1
  34: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  36: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1
  42: f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg4, arg2'=arg2P15, arg4'=5, arg1'=arg1P15, arg3'=arg3P15, (2-arg1+arg3 <= 0 /\ -9+arg1P15 > 0 /\ -4+arg2P15 > 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3P15 > 0 /\ -2+arg2P15-arg2 <= 0), cost: 1
  33: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1
  35: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  41: f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=1, arg2'=arg2P14, arg4'=5, arg1'=arg1P14, arg3'=arg3P14, (2-arg1+arg3 <= 0 /\ arg2P14-arg1 <= 0 /\ -5+arg5 == 0 /\ -6+arg1P14 > 0 /\ 1+arg3P14 > 0 /\ -arg2+arg2P14 <= 0 /\ -6+arg2P14 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  44: f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=5, (2-arg1+arg3 <= 0 /\ -5+arg5 == 0 /\ -arg1+arg1P17 <= 0 /\ 1+arg2P17 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg2+arg1P17 <= 0 /\ -6+arg1P17 > 0), cost: 1
  46: f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=5, (2-arg1+arg3 <= 0 /\ 1+arg2P20 > 0 /\ -6+arg1P20 > 0 /\ arg1P20-arg1 <= 0 /\ -5+arg5 == 0 /\ arg1P20-arg2 <= 0 /\ 2-arg2+arg4 <= 0), cost: 1
  48: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (2-arg1+arg3 <= 0 /\ -arg1+arg1P23 <= 0 /\ -5+arg5 == 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  37: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=5, (-6+arg1P10 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
  38: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=5, (-arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
  45: f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=5, (-6+arg1P18 > 0 /\ 1+arg2P18 > 0 /\ 4+arg2-arg1 <= 0 /\ arg1P18-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
  47: f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=5, (1+arg2P21 > 0 /\ -arg1+arg1P21 <= 0 /\ 4+arg2-arg1 <= 0 /\ -6+arg1P21 > 0 /\ -5+arg3 == 0), cost: 1
  49: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (arg1P24-arg1 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
  56: f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2-arg2P16 >= 0 /\ -2-arg4+arg1 >= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ arg3 > 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: n3
  57: f1341_0_append_NONNULL -> [16] : (-arg1P16+arg1 <= 0 /\ -2+arg1 > 0 /\ arg2-arg2P16 <= 0 /\ arg2-arg2P16 >= 0 /\ -arg3P16+arg3 <= 0 /\ -2-arg4+arg1 >= 0 /\ arg2P16 > 0 /\ -2-arg5+arg2 >= 0 /\ -arg1P16-arg4+arg1+arg4P16 <= 0 /\ arg3 > 0), cost: NONTERM
  60: f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ -2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P19 > 0 /\ -1+n4 >= 0), cost: n4
  61: f1472_0_iter_NULL -> [17] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P19-arg3+arg3P19 <= 0 /\ arg1-arg1P19 <= 0 /\ -arg2P19+arg2 <= 0), cost: NONTERM
  64: f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P22-arg3P22 >= 0 /\ -2+arg1P22 > 0 /\ arg2P22 > 0 /\ -1+n5 >= 0), cost: n5
  65: f1570_0_reverseAcc_NONNULL -> [18] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -arg1P22+arg1+arg3P22-arg3 <= 0 /\ -arg1P22+arg1 <= 0 /\ arg2-arg2P22 <= 0), cost: NONTERM
  50: f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg3, arg2'=arg2P26, arg4'=arg4P26, arg1'=arg1P26, arg3'=arg3P26, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -1+arg1P26 > 0 /\ arg2 > 0 /\ 1+arg3P26 > 0 /\ -1+arg2P26 > 0 /\ -arg1+arg2P26 <= 0), cost: 1
  51: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P27, arg4'=arg4P27, arg1'=arg1P27, arg3'=arg3P27, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2P27 > 0 /\ arg2P27-arg1 <= 0 /\ -2+arg1P27 > 0), cost: 1
  52: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P28, arg4'=arg4P28, arg1'=arg1P28, arg3'=arg3P28, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -4+arg1P28 > 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0), cost: 1
  68: f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: n6
  69: f1682_0_reverse_NONNULL -> [19] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P25 <= 0 /\ arg2-arg2P25 <= 0 /\ arg3P25+arg1-arg3-arg1P25 <= 0), cost: NONTERM
  53: f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg2'=arg2P29, arg1'=arg1P29, arg3'=arg3P29, (arg1P29-arg1 <= 0 /\ -2+arg1P29 > 0 /\ -arg2+arg2P29 <= 0 /\ 2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 1+arg3P29 > 0 /\ 4-arg1+arg3 <= 0 /\ -1+arg2P29 > 0), cost: 1
  30: __init -> f1_0_main_New : arg5'=arg5P30, arg2'=arg2P30, arg4'=arg4P30, arg1'=arg1P30, arg3'=arg3P30, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-6+arg2P0 > 0 /\ -9+arg1P0 > 0), cost: 1
Second rule:
f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (1-arg2+arg2P12 <= 0 /\ arg1P12-arg1 <= 0 /\ arg1P12 > 0 /\ 1+arg2P12 > 0), cost: 1
New rule:
f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (arg1P12 > 0 /\ 1+arg2P12 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-6+arg2P0 > 0 /\ -9+arg1P0 > 0), cost: 1
Second rule:
f217_0_merge_NONNULL -> f217_0_merge_NONNULL : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ -arg2+arg2P13 <= 0 /\ 2+arg1P13-arg1 <= 0 /\ arg2P13 > 0), cost: 1
New rule:
f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ arg2P13 > 0), cost: 2

Applied deletion
Removed the following rules: 39 40

Applied chaining
First rule:
f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=1, arg2'=arg2P14, arg4'=5, arg1'=arg1P14, arg3'=arg3P14, (2-arg1+arg3 <= 0 /\ arg2P14-arg1 <= 0 /\ -5+arg5 == 0 /\ -6+arg1P14 > 0 /\ 1+arg3P14 > 0 /\ -arg2+arg2P14 <= 0 /\ -6+arg2P14 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
Second rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2-arg2P16 >= 0 /\ -2-arg4+arg1 >= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ arg3 > 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: n3
New rule:
f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=1, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg3 <= 0 /\ -3+arg2P16 >= 0 /\ -7+arg2 >= 0 /\ -arg2+arg2P16 <= 0 /\ -5+arg5 == 0 /\ -2+arg1P16 > 0 /\ 7-arg1 <= 0 /\ arg3P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ 2-arg2+arg4 <= 0 /\ -arg1+arg2P16 <= 0 /\ -1+n3 >= 0), cost: 1+n3

Applied chaining
First rule:
f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg4, arg2'=arg2P15, arg4'=5, arg1'=arg1P15, arg3'=arg3P15, (2-arg1+arg3 <= 0 /\ -9+arg1P15 > 0 /\ -4+arg2P15 > 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3P15 > 0 /\ -2+arg2P15-arg2 <= 0), cost: 1
Second rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2-arg2P16 >= 0 /\ -2-arg4+arg1 >= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ arg3 > 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: n3
New rule:
f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg4, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg3 <= 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg1P16 > 0 /\ -2-arg4+arg2P16 >= 0 /\ -2-arg2+arg2P16 <= 0 /\ arg3P16 > 0 /\ arg1 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ 2-arg2+arg4 <= 0 /\ -1+n3 >= 0 /\ 3-arg2 <= 0), cost: 1+n3

Applied chaining
First rule:
f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg3, arg2'=arg2P26, arg4'=arg4P26, arg1'=arg1P26, arg3'=arg3P26, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -1+arg1P26 > 0 /\ arg2 > 0 /\ 1+arg3P26 > 0 /\ -1+arg2P26 > 0 /\ -arg1+arg2P26 <= 0), cost: 1
Second rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2-arg2P16 >= 0 /\ -2-arg4+arg1 >= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ arg3 > 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: n3
New rule:
f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg3, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P16 > 0 /\ -2+arg2P16-arg3 >= 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ -arg1+arg2P16 <= 0 /\ -1+n3 >= 0), cost: 1+n3

Applied chaining
First rule:
f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg2'=arg2P29, arg1'=arg1P29, arg3'=arg3P29, (arg1P29-arg1 <= 0 /\ -2+arg1P29 > 0 /\ -arg2+arg2P29 <= 0 /\ 2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 1+arg3P29 > 0 /\ 4-arg1+arg3 <= 0 /\ -1+arg2P29 > 0), cost: 1
Second rule:
f1341_0_append_NONNULL -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2-arg2P16 >= 0 /\ -2-arg4+arg1 >= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ arg3 > 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: n3
New rule:
f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (2+arg4-arg1 <= 0 /\ -arg2+arg2P16 <= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ 3-arg1 <= 0 /\ 2-arg2 <= 0 /\ 4-arg1+arg3 <= 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: 1+n3

Applied chaining
First rule:
f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=1, arg2'=arg2P14, arg4'=5, arg1'=arg1P14, arg3'=arg3P14, (2-arg1+arg3 <= 0 /\ arg2P14-arg1 <= 0 /\ -5+arg5 == 0 /\ -6+arg1P14 > 0 /\ 1+arg3P14 > 0 /\ -arg2+arg2P14 <= 0 /\ -6+arg2P14 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
Second rule:
f1341_0_append_NONNULL -> [16] : (-arg1P16+arg1 <= 0 /\ -2+arg1 > 0 /\ arg2-arg2P16 <= 0 /\ arg2-arg2P16 >= 0 /\ -arg3P16+arg3 <= 0 /\ -2-arg4+arg1 >= 0 /\ arg2P16 > 0 /\ -2-arg5+arg2 >= 0 /\ -arg1P16-arg4+arg1+arg4P16 <= 0 /\ arg3 > 0), cost: NONTERM
New rule:
f580_0_main_InvokeMethod -> [16] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM

Applied chaining
First rule:
f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg4, arg2'=arg2P15, arg4'=5, arg1'=arg1P15, arg3'=arg3P15, (2-arg1+arg3 <= 0 /\ -9+arg1P15 > 0 /\ -4+arg2P15 > 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3P15 > 0 /\ -2+arg2P15-arg2 <= 0), cost: 1
Second rule:
f1341_0_append_NONNULL -> [16] : (-arg1P16+arg1 <= 0 /\ -2+arg1 > 0 /\ arg2-arg2P16 <= 0 /\ arg2-arg2P16 >= 0 /\ -arg3P16+arg3 <= 0 /\ -2-arg4+arg1 >= 0 /\ arg2P16 > 0 /\ -2-arg5+arg2 >= 0 /\ -arg1P16-arg4+arg1+arg4P16 <= 0 /\ arg3 > 0), cost: NONTERM
New rule:
f561_0_main_FieldAccess -> [16] : (2-arg1+arg3 <= 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 3-arg2 <= 0), cost: NONTERM

Applied chaining
First rule:
f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg3, arg2'=arg2P26, arg4'=arg4P26, arg1'=arg1P26, arg3'=arg3P26, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -1+arg1P26 > 0 /\ arg2 > 0 /\ 1+arg3P26 > 0 /\ -1+arg2P26 > 0 /\ -arg1+arg2P26 <= 0), cost: 1
Second rule:
f1341_0_append_NONNULL -> [16] : (-arg1P16+arg1 <= 0 /\ -2+arg1 > 0 /\ arg2-arg2P16 <= 0 /\ arg2-arg2P16 >= 0 /\ -arg3P16+arg3 <= 0 /\ -2-arg4+arg1 >= 0 /\ arg2P16 > 0 /\ -2-arg5+arg2 >= 0 /\ -arg1P16-arg4+arg1+arg4P16 <= 0 /\ arg3 > 0), cost: NONTERM
New rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM

Applied chaining
First rule:
f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg2'=arg2P29, arg1'=arg1P29, arg3'=arg3P29, (arg1P29-arg1 <= 0 /\ -2+arg1P29 > 0 /\ -arg2+arg2P29 <= 0 /\ 2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 1+arg3P29 > 0 /\ 4-arg1+arg3 <= 0 /\ -1+arg2P29 > 0), cost: 1
Second rule:
f1341_0_append_NONNULL -> [16] : (-arg1P16+arg1 <= 0 /\ -2+arg1 > 0 /\ arg2-arg2P16 <= 0 /\ arg2-arg2P16 >= 0 /\ -arg3P16+arg3 <= 0 /\ -2-arg4+arg1 >= 0 /\ arg2P16 > 0 /\ -2-arg5+arg2 >= 0 /\ -arg1P16-arg4+arg1+arg4P16 <= 0 /\ arg3 > 0), cost: NONTERM
New rule:
f1748_0_reverse_InvokeMethod -> [16] : (2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 3-arg1 <= 0 /\ 2-arg2 <= 0 /\ 4-arg1+arg3 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 56 57

Applied chaining
First rule:
f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=5, (2-arg1+arg3 <= 0 /\ -5+arg5 == 0 /\ -arg1+arg1P17 <= 0 /\ 1+arg2P17 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg2+arg1P17 <= 0 /\ -6+arg1P17 > 0), cost: 1
Second rule:
f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ -2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P19 > 0 /\ -1+n4 >= 0), cost: n4
New rule:
f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ 2-arg1+arg3 <= 0 /\ -2+arg1P19 > 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ -1+n4 >= 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: 1+n4

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=5, (-6+arg1P18 > 0 /\ 1+arg2P18 > 0 /\ 4+arg2-arg1 <= 0 /\ arg1P18-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
Second rule:
f1472_0_iter_NULL -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ -2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P19 > 0 /\ -1+n4 >= 0), cost: n4
New rule:
f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ -2+arg1P19 > 0 /\ -1+n4 >= 0 /\ -7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1+n4

Applied chaining
First rule:
f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=5, (2-arg1+arg3 <= 0 /\ -5+arg5 == 0 /\ -arg1+arg1P17 <= 0 /\ 1+arg2P17 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg2+arg1P17 <= 0 /\ -6+arg1P17 > 0), cost: 1
Second rule:
f1472_0_iter_NULL -> [17] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P19-arg3+arg3P19 <= 0 /\ arg1-arg1P19 <= 0 /\ -arg2P19+arg2 <= 0), cost: NONTERM
New rule:
f580_0_main_InvokeMethod -> [17] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=5, (-6+arg1P18 > 0 /\ 1+arg2P18 > 0 /\ 4+arg2-arg1 <= 0 /\ arg1P18-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
Second rule:
f1472_0_iter_NULL -> [17] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P19-arg3+arg3P19 <= 0 /\ arg1-arg1P19 <= 0 /\ -arg2P19+arg2 <= 0), cost: NONTERM
New rule:
f1500_0_main_InvokeMethod -> [17] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM

Applied deletion
Removed the following rules: 60 61

Applied chaining
First rule:
f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=5, (2-arg1+arg3 <= 0 /\ 1+arg2P20 > 0 /\ -6+arg1P20 > 0 /\ arg1P20-arg1 <= 0 /\ -5+arg5 == 0 /\ arg1P20-arg2 <= 0 /\ 2-arg2+arg4 <= 0), cost: 1
Second rule:
f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P22-arg3P22 >= 0 /\ -2+arg1P22 > 0 /\ arg2P22 > 0 /\ -1+n5 >= 0), cost: n5
New rule:
f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ -2+arg1P22-arg3P22 >= 0 /\ -2+arg1P22 > 0 /\ arg2P22 > 0 /\ 2-arg2+arg4 <= 0 /\ -1+n5 >= 0), cost: 1+n5

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=5, (1+arg2P21 > 0 /\ -arg1+arg1P21 <= 0 /\ 4+arg2-arg1 <= 0 /\ -6+arg1P21 > 0 /\ -5+arg3 == 0), cost: 1
Second rule:
f1570_0_reverseAcc_NONNULL -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P22-arg3P22 >= 0 /\ -2+arg1P22 > 0 /\ arg2P22 > 0 /\ -1+n5 >= 0), cost: n5
New rule:
f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (-7+arg1 >= 0 /\ -2+arg1P22-arg3P22 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P22 > 0 /\ arg2P22 > 0 /\ -5+arg3 == 0 /\ -1+n5 >= 0), cost: 1+n5

Applied chaining
First rule:
f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=5, (2-arg1+arg3 <= 0 /\ 1+arg2P20 > 0 /\ -6+arg1P20 > 0 /\ arg1P20-arg1 <= 0 /\ -5+arg5 == 0 /\ arg1P20-arg2 <= 0 /\ 2-arg2+arg4 <= 0), cost: 1
Second rule:
f1570_0_reverseAcc_NONNULL -> [18] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -arg1P22+arg1+arg3P22-arg3 <= 0 /\ -arg1P22+arg1 <= 0 /\ arg2-arg2P22 <= 0), cost: NONTERM
New rule:
f580_0_main_InvokeMethod -> [18] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=5, (1+arg2P21 > 0 /\ -arg1+arg1P21 <= 0 /\ 4+arg2-arg1 <= 0 /\ -6+arg1P21 > 0 /\ -5+arg3 == 0), cost: 1
Second rule:
f1570_0_reverseAcc_NONNULL -> [18] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -arg1P22+arg1+arg3P22-arg3 <= 0 /\ -arg1P22+arg1 <= 0 /\ arg2-arg2P22 <= 0), cost: NONTERM
New rule:
f1500_0_main_InvokeMethod -> [18] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM

Applied deletion
Removed the following rules: 64 65

Applied chaining
First rule:
f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (2-arg1+arg3 <= 0 /\ -arg1+arg1P23 <= 0 /\ -5+arg5 == 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
Second rule:
f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: n6
New rule:
f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ arg2P25 > 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2+arg4 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6

Applied chaining
First rule:
f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (arg1P24-arg1 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
Second rule:
f1682_0_reverse_NONNULL -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: n6
New rule:
f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ -7+arg1 >= 0 /\ -1+n6 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6

Applied chaining
First rule:
f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (2-arg1+arg3 <= 0 /\ -arg1+arg1P23 <= 0 /\ -5+arg5 == 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
Second rule:
f1682_0_reverse_NONNULL -> [19] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P25 <= 0 /\ arg2-arg2P25 <= 0 /\ arg3P25+arg1-arg3-arg1P25 <= 0), cost: NONTERM
New rule:
f580_0_main_InvokeMethod -> [19] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM

Applied chaining
First rule:
f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (arg1P24-arg1 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
Second rule:
f1682_0_reverse_NONNULL -> [19] : (-2+arg1-arg3 >= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ arg1-arg1P25 <= 0 /\ arg2-arg2P25 <= 0 /\ arg3P25+arg1-arg3-arg1P25 <= 0), cost: NONTERM
New rule:
f1650_0_main_InvokeMethod -> [19] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM

Applied deletion
Removed the following rules: 68 69

Chained accelerated rules with incoming rules
Start location: __init
   0: f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P0, arg2'=arg2P0, arg4'=arg4P0, arg1'=arg1P0, arg3'=arg3P0, (-6+arg2P0 > 0 /\ -9+arg1P0 > 0), cost: 1
  31: f1_0_main_New -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 1
  32: f1_0_main_New -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 1
  70: f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P12, arg2'=arg2P12, arg4'=arg4P12, arg1'=arg1P12, arg3'=arg3P12, (arg1P12 > 0 /\ 1+arg2P12 > 0), cost: 2
  71: f1_0_main_New -> f217_0_merge_NONNULL : arg5'=arg5P13, arg2'=arg2P13, arg4'=arg4P13, arg1'=arg1P13, arg3'=arg3P13, (arg1P13 > 0 /\ arg2P13 > 0), cost: 2
  34: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  36: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1
  42: f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg4, arg2'=arg2P15, arg4'=5, arg1'=arg1P15, arg3'=arg3P15, (2-arg1+arg3 <= 0 /\ -9+arg1P15 > 0 /\ -4+arg2P15 > 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 1+arg3P15 > 0 /\ -2+arg2P15-arg2 <= 0), cost: 1
  73: f561_0_main_FieldAccess -> f1341_0_append_NONNULL : arg5'=arg4, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg3 <= 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg1P16 > 0 /\ -2-arg4+arg2P16 >= 0 /\ -2-arg2+arg2P16 <= 0 /\ arg3P16 > 0 /\ arg1 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ 2-arg2+arg4 <= 0 /\ -1+n3 >= 0 /\ 3-arg2 <= 0), cost: 1+n3
  77: f561_0_main_FieldAccess -> [16] : (2-arg1+arg3 <= 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 3-arg2 <= 0), cost: NONTERM
  33: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1
  35: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  41: f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=1, arg2'=arg2P14, arg4'=5, arg1'=arg1P14, arg3'=arg3P14, (2-arg1+arg3 <= 0 /\ arg2P14-arg1 <= 0 /\ -5+arg5 == 0 /\ -6+arg1P14 > 0 /\ 1+arg3P14 > 0 /\ -arg2+arg2P14 <= 0 /\ -6+arg2P14 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  44: f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P17, arg2'=arg2P17, arg4'=arg4P17, arg1'=arg1P17, arg3'=5, (2-arg1+arg3 <= 0 /\ -5+arg5 == 0 /\ -arg1+arg1P17 <= 0 /\ 1+arg2P17 > 0 /\ 2-arg2+arg4 <= 0 /\ -arg2+arg1P17 <= 0 /\ -6+arg1P17 > 0), cost: 1
  46: f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P20, arg2'=arg2P20, arg4'=arg4P20, arg1'=arg1P20, arg3'=5, (2-arg1+arg3 <= 0 /\ 1+arg2P20 > 0 /\ -6+arg1P20 > 0 /\ arg1P20-arg1 <= 0 /\ -5+arg5 == 0 /\ arg1P20-arg2 <= 0 /\ 2-arg2+arg4 <= 0), cost: 1
  48: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (2-arg1+arg3 <= 0 /\ -arg1+arg1P23 <= 0 /\ -5+arg5 == 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  72: f580_0_main_InvokeMethod -> f1341_0_append_NONNULL : arg5'=1, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (2-arg1+arg3 <= 0 /\ -3+arg2P16 >= 0 /\ -7+arg2 >= 0 /\ -arg2+arg2P16 <= 0 /\ -5+arg5 == 0 /\ -2+arg1P16 > 0 /\ 7-arg1 <= 0 /\ arg3P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ 2-arg2+arg4 <= 0 /\ -arg1+arg2P16 <= 0 /\ -1+n3 >= 0), cost: 1+n3
  76: f580_0_main_InvokeMethod -> [16] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  80: f580_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ 2-arg1+arg3 <= 0 /\ -2+arg1P19 > 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ -1+n4 >= 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: 1+n4
  82: f580_0_main_InvokeMethod -> [17] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  84: f580_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ -2+arg1P22-arg3P22 >= 0 /\ -2+arg1P22 > 0 /\ arg2P22 > 0 /\ 2-arg2+arg4 <= 0 /\ -1+n5 >= 0), cost: 1+n5
  86: f580_0_main_InvokeMethod -> [18] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  88: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ arg2P25 > 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2+arg4 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6
  90: f580_0_main_InvokeMethod -> [19] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  37: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=5, (-6+arg1P10 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
  38: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=5, (-arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
  45: f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P18, arg2'=arg2P18, arg4'=arg4P18, arg1'=arg1P18, arg3'=5, (-6+arg1P18 > 0 /\ 1+arg2P18 > 0 /\ 4+arg2-arg1 <= 0 /\ arg1P18-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
  47: f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P21, arg2'=arg2P21, arg4'=arg4P21, arg1'=arg1P21, arg3'=5, (1+arg2P21 > 0 /\ -arg1+arg1P21 <= 0 /\ 4+arg2-arg1 <= 0 /\ -6+arg1P21 > 0 /\ -5+arg3 == 0), cost: 1
  81: f1500_0_main_InvokeMethod -> f1472_0_iter_NULL : arg5'=arg5P19, arg2'=arg2P19, arg4'=arg4P19, arg1'=arg1P19, arg3'=arg3P19, (arg2P19 > 0 /\ -2+arg1P19-arg3P19 >= 0 /\ -2+arg1P19 > 0 /\ -1+n4 >= 0 /\ -7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1+n4
  83: f1500_0_main_InvokeMethod -> [17] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  85: f1500_0_main_InvokeMethod -> f1570_0_reverseAcc_NONNULL : arg5'=arg5P22, arg2'=arg2P22, arg4'=arg4P22, arg1'=arg1P22, arg3'=arg3P22, (-7+arg1 >= 0 /\ -2+arg1P22-arg3P22 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P22 > 0 /\ arg2P22 > 0 /\ -5+arg3 == 0 /\ -1+n5 >= 0), cost: 1+n5
  87: f1500_0_main_InvokeMethod -> [18] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  49: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (arg1P24-arg1 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
  89: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ -7+arg1 >= 0 /\ -1+n6 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6
  91: f1650_0_main_InvokeMethod -> [19] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  50: f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg3, arg2'=arg2P26, arg4'=arg4P26, arg1'=arg1P26, arg3'=arg3P26, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -1+arg1P26 > 0 /\ arg2 > 0 /\ 1+arg3P26 > 0 /\ -1+arg2P26 > 0 /\ -arg1+arg2P26 <= 0), cost: 1
  51: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P27, arg4'=arg4P27, arg1'=arg1P27, arg3'=arg3P27, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2P27 > 0 /\ arg2P27-arg1 <= 0 /\ -2+arg1P27 > 0), cost: 1
  52: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P28, arg4'=arg4P28, arg1'=arg1P28, arg3'=arg3P28, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -4+arg1P28 > 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0), cost: 1
  74: f1682_0_reverse_NONNULL -> f1341_0_append_NONNULL : arg5'=arg3, arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (-2+arg1 > 0 /\ arg2 > 0 /\ -2+arg1P16 > 0 /\ -2+arg2P16-arg3 >= 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ -arg1+arg2P16 <= 0 /\ -1+n3 >= 0), cost: 1+n3
  78: f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
  53: f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg2'=arg2P29, arg1'=arg1P29, arg3'=arg3P29, (arg1P29-arg1 <= 0 /\ -2+arg1P29 > 0 /\ -arg2+arg2P29 <= 0 /\ 2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 1+arg3P29 > 0 /\ 4-arg1+arg3 <= 0 /\ -1+arg2P29 > 0), cost: 1
  75: f1748_0_reverse_InvokeMethod -> f1341_0_append_NONNULL : arg2'=arg2P16, arg4'=arg4P16, arg1'=arg1P16, arg3'=arg3P16, (2+arg4-arg1 <= 0 /\ -arg2+arg2P16 <= 0 /\ -2+arg1P16 > 0 /\ arg3P16 > 0 /\ arg2P16 > 0 /\ -2+arg1P16-arg4P16 >= 0 /\ 3-arg1 <= 0 /\ 2-arg2 <= 0 /\ 4-arg1+arg3 <= 0 /\ -2-arg5+arg2P16 >= 0 /\ -1+n3 >= 0), cost: 1+n3
  79: f1748_0_reverse_InvokeMethod -> [16] : (2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 3-arg1 <= 0 /\ 2-arg2 <= 0 /\ 4-arg1+arg3 <= 0), cost: NONTERM
  30: __init -> f1_0_main_New : arg5'=arg5P30, arg2'=arg2P30, arg4'=arg4P30, arg1'=arg1P30, arg3'=arg3P30, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  31: f1_0_main_New -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 1
  32: f1_0_main_New -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 1
  34: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  36: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1
  77: f561_0_main_FieldAccess -> [16] : (2-arg1+arg3 <= 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 3-arg2 <= 0), cost: NONTERM
  33: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1
  35: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  48: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (2-arg1+arg3 <= 0 /\ -arg1+arg1P23 <= 0 /\ -5+arg5 == 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  76: f580_0_main_InvokeMethod -> [16] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  82: f580_0_main_InvokeMethod -> [17] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  86: f580_0_main_InvokeMethod -> [18] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  88: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ arg2P25 > 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2+arg4 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6
  90: f580_0_main_InvokeMethod -> [19] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  37: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=5, (-6+arg1P10 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
  38: f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=5, (-arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
  83: f1500_0_main_InvokeMethod -> [17] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  87: f1500_0_main_InvokeMethod -> [18] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  49: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (arg1P24-arg1 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
  89: f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ -7+arg1 >= 0 /\ -1+n6 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6
  91: f1650_0_main_InvokeMethod -> [19] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  51: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P27, arg4'=arg4P27, arg1'=arg1P27, arg3'=arg3P27, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2P27 > 0 /\ arg2P27-arg1 <= 0 /\ -2+arg1P27 > 0), cost: 1
  52: f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P28, arg4'=arg4P28, arg1'=arg1P28, arg3'=arg3P28, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -4+arg1P28 > 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0), cost: 1
  78: f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
  79: f1748_0_reverse_InvokeMethod -> [16] : (2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 3-arg1 <= 0 /\ 2-arg2 <= 0 /\ 4-arg1+arg3 <= 0), cost: NONTERM
  30: __init -> f1_0_main_New : arg5'=arg5P30, arg2'=arg2P30, arg4'=arg4P30, arg1'=arg1P30, arg3'=arg3P30, TRUE, cost: 1


Eliminating location f1_0_main_New by chaining:

Applied chaining
First rule:
__init -> f1_0_main_New : arg5'=arg5P30, arg2'=arg2P30, arg4'=arg4P30, arg1'=arg1P30, arg3'=arg3P30, TRUE, cost: 1
Second rule:
f1_0_main_New -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 1
New rule:
__init -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_New : arg5'=arg5P30, arg2'=arg2P30, arg4'=arg4P30, arg1'=arg1P30, arg3'=arg3P30, TRUE, cost: 1
Second rule:
f1_0_main_New -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 1
New rule:
__init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2

Applied deletion
Removed the following rules: 30 31 32

Eliminating location f1650_0_main_InvokeMethod by chaining:

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=5, (-6+arg1P10 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
Second rule:
f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (arg1P24-arg1 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
New rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -6+arg1P10 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 2

Applied simplification
Original rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -6+arg1P10 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 2
New rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4-arg1P10+arg2 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 2

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=5, (-6+arg1P10 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
Second rule:
f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ -7+arg1 >= 0 /\ -1+n6 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6
New rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -6+arg1P10 > 0 /\ arg2P25 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 2+n6

Applied simplification
Original rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -6+arg1P10 > 0 /\ arg2P25 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 2+n6
New rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 2+n6

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P10, arg4'=arg4P10, arg1'=arg1P10, arg3'=5, (-6+arg1P10 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 1
Second rule:
f1650_0_main_InvokeMethod -> [19] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
f1500_0_main_InvokeMethod -> [19] : (0 == 0 /\ -6+arg1P10 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: NONTERM

Applied simplification
Original rule:
f1500_0_main_InvokeMethod -> [19] : (0 == 0 /\ -6+arg1P10 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: NONTERM
New rule:
f1500_0_main_InvokeMethod -> [19] : (4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: NONTERM

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=5, (-arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
Second rule:
f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (arg1P24-arg1 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: 1
New rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P11 > 0), cost: 2

Applied simplification
Original rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P11 > 0), cost: 2
New rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P24-arg1P11 <= 0), cost: 2

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=5, (-arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
Second rule:
f1650_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ -7+arg1 >= 0 /\ -1+n6 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6
New rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 4+arg2-arg1P11 <= 0 /\ arg2P25 > 0 /\ -arg1+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P11 >= 0 /\ -6+arg1P11 > 0), cost: 2+n6

Applied simplification
Original rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 4+arg2-arg1P11 <= 0 /\ arg2P25 > 0 /\ -arg1+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 4+arg2-arg1 <= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P11 >= 0 /\ -6+arg1P11 > 0), cost: 2+n6
New rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2-arg1P11 <= 0 /\ arg2P25 > 0 /\ -arg1+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0), cost: 2+n6

Applied chaining
First rule:
f1500_0_main_InvokeMethod -> f1650_0_main_InvokeMethod : arg5'=arg5P11, arg4'=arg4P11, arg1'=arg1P11, arg3'=5, (-arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: 1
Second rule:
f1650_0_main_InvokeMethod -> [19] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
f1500_0_main_InvokeMethod -> [19] : (0 == 0 /\ 4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -7+arg1P11 >= 0 /\ -6+arg1P11 > 0), cost: NONTERM

Applied simplification
Original rule:
f1500_0_main_InvokeMethod -> [19] : (0 == 0 /\ 4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0 /\ -7+arg1P11 >= 0 /\ -6+arg1P11 > 0), cost: NONTERM
New rule:
f1500_0_main_InvokeMethod -> [19] : (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 37 38 49 89 91

Eliminating location f1748_0_reverse_InvokeMethod by chaining:

Applied chaining
First rule:
f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P27, arg4'=arg4P27, arg1'=arg1P27, arg3'=arg3P27, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ -1+arg2P27 > 0 /\ arg2P27-arg1 <= 0 /\ -2+arg1P27 > 0), cost: 1
Second rule:
f1748_0_reverse_InvokeMethod -> [16] : (2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 3-arg1 <= 0 /\ 2-arg2 <= 0 /\ 4-arg1+arg3 <= 0), cost: NONTERM
New rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27 <= 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 3-arg1P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied simplification
Original rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27 <= 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 3-arg1P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied chaining
First rule:
f1682_0_reverse_NONNULL -> f1748_0_reverse_InvokeMethod : arg5'=arg3, arg2'=arg2P28, arg4'=arg4P28, arg1'=arg1P28, arg3'=arg3P28, (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ -4+arg1P28 > 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0), cost: 1
Second rule:
f1748_0_reverse_InvokeMethod -> [16] : (2+arg4-arg1 <= 0 /\ 2+arg5-arg2 <= 0 /\ 3-arg1 <= 0 /\ 2-arg2 <= 0 /\ 4-arg1+arg3 <= 0), cost: NONTERM
New rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ 2-arg2P28 <= 0 /\ arg2P28-arg1 <= 0 /\ 3-arg1P28 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM

Applied simplification
Original rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ 2-arg2P28 <= 0 /\ arg2P28-arg1 <= 0 /\ 3-arg1P28 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM

Applied deletion
Removed the following rules: 51 52 79

Eliminated locations on tree-shaped paths
Start location: __init
  34: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  36: f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1
  77: f561_0_main_FieldAccess -> [16] : (2-arg1+arg3 <= 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 3-arg2 <= 0), cost: NONTERM
  33: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1
  35: f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  48: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (2-arg1+arg3 <= 0 /\ -arg1+arg1P23 <= 0 /\ -5+arg5 == 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
  76: f580_0_main_InvokeMethod -> [16] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  82: f580_0_main_InvokeMethod -> [17] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  86: f580_0_main_InvokeMethod -> [18] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  88: f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ arg2P25 > 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2+arg4 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6
  90: f580_0_main_InvokeMethod -> [19] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
  83: f1500_0_main_InvokeMethod -> [17] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  87: f1500_0_main_InvokeMethod -> [18] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  94: f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4-arg1P10+arg2 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 2
  95: f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 2+n6
  96: f1500_0_main_InvokeMethod -> [19] : (4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: NONTERM
  97: f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P24-arg1P11 <= 0), cost: 2
  98: f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2-arg1P11 <= 0 /\ arg2P25 > 0 /\ -arg1+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0), cost: 2+n6
  99: f1500_0_main_InvokeMethod -> [19] : (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: NONTERM
  78: f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
 100: f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 101: f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
  92: __init -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 2
  93: __init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2


Eliminating location f561_0_main_FieldAccess by chaining:

Applied chaining
First rule:
__init -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 2
Second rule:
f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (2-arg1+arg3 <= 0 /\ -9+arg1P5 > 0 /\ 4-arg2+arg3 <= 0 /\ -2+arg2 > 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
New rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (7-arg2P1 <= 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 5-arg1P1 <= 0 /\ -4+arg1P1 > 0 /\ arg1P1 > 0 /\ -2+arg2P1 > 0 /\ 3-arg2P1 <= 0), cost: 3

Applied simplification
Original rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (7-arg2P1 <= 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 5-arg1P1 <= 0 /\ -4+arg1P1 > 0 /\ arg1P1 > 0 /\ -2+arg2P1 > 0 /\ 3-arg2P1 <= 0), cost: 3
New rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3

Applied chaining
First rule:
__init -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 2
Second rule:
f561_0_main_FieldAccess -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (2-arg1+arg3 <= 0 /\ -7-arg2+arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ 4-arg2+arg3 <= 0 /\ 2-arg2+arg4 <= 0 /\ -9-arg1+arg1P7 <= 0), cost: 1
New rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (7-arg2P1 <= 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 5-arg1P1 <= 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ 3-arg2P1 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3

Applied simplification
Original rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (7-arg2P1 <= 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 5-arg1P1 <= 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ 3-arg2P1 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
New rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3

Applied chaining
First rule:
__init -> f561_0_main_FieldAccess : arg5'=arg5P1, arg2'=arg2P1, arg4'=1, arg1'=arg1P1, arg3'=3, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 2
Second rule:
f561_0_main_FieldAccess -> [16] : (2-arg1+arg3 <= 0 /\ 4-arg2+arg3 <= 0 /\ arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ 3-arg2 <= 0), cost: NONTERM
New rule:
__init -> [16] : (7-arg2P1 <= 0 /\ -6+arg2P1 > 0 /\ 5-arg1P1 <= 0 /\ -4+arg1P1 > 0 /\ arg1P1 > 0 /\ 3-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (7-arg2P1 <= 0 /\ -6+arg2P1 > 0 /\ 5-arg1P1 <= 0 /\ -4+arg1P1 > 0 /\ arg1P1 > 0 /\ 3-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 34 36 77 92

Eliminating location f580_0_main_InvokeMethod by chaining:

Applied chaining
First rule:
__init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2
Second rule:
f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ 2-arg2+arg4 <= 0 /\ -6+arg1P4 > 0), cost: 1
New rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3

Applied simplification
Original rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
New rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3

Applied chaining
First rule:
__init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2
Second rule:
f580_0_main_InvokeMethod -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2-arg1+arg3 <= 0 /\ -6+arg2 > 0 /\ -5+arg5 == 0 /\ -6+arg1 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
New rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3

Applied simplification
Original rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
New rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3

Applied chaining
First rule:
__init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2
Second rule:
f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (2-arg1+arg3 <= 0 /\ -arg1+arg1P23 <= 0 /\ -5+arg5 == 0 /\ -arg2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2+arg4 <= 0), cost: 1
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (0 == 0 /\ -arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (0 == 0 /\ -arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0), cost: 3

Applied chaining
First rule:
__init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2
Second rule:
f580_0_main_InvokeMethod -> [16] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
New rule:
__init -> [16] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2
Second rule:
f580_0_main_InvokeMethod -> [17] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
New rule:
__init -> [17] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [17] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [17] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2
Second rule:
f580_0_main_InvokeMethod -> [18] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
New rule:
__init -> [18] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [18] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [18] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2
Second rule:
f580_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ arg2P25 > 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2+arg4 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 1+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 3+n6

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 3+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 3+n6

Applied chaining
First rule:
__init -> f580_0_main_InvokeMethod : arg5'=5, arg2'=arg2P2, arg4'=arg4P2, arg1'=arg1P2, arg3'=arg3P2, (-6+arg2P2 > 0 /\ -6+arg1P2 > 0), cost: 2
Second rule:
f580_0_main_InvokeMethod -> [19] : (2-arg1+arg3 <= 0 /\ -7+arg2 >= 0 /\ -5+arg5 == 0 /\ 7-arg1 <= 0 /\ 2-arg2+arg4 <= 0), cost: NONTERM
New rule:
__init -> [19] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [19] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -7+arg2P2 >= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 7-arg1P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 33 35 48 76 82 86 88 90 93

Eliminated locations on tree-shaped paths
Start location: __init
  83: f1500_0_main_InvokeMethod -> [17] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  87: f1500_0_main_InvokeMethod -> [18] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
  94: f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4-arg1P10+arg2 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 2
  95: f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 2+n6
  96: f1500_0_main_InvokeMethod -> [19] : (4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: NONTERM
  97: f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P24-arg1P11 <= 0), cost: 2
  98: f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2-arg1P11 <= 0 /\ arg2P25 > 0 /\ -arg1+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0), cost: 2+n6
  99: f1500_0_main_InvokeMethod -> [19] : (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: NONTERM
  78: f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
 100: f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 101: f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
 102: __init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3
 103: __init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
 104: __init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: NONTERM
 105: __init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
 106: __init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
 107: __init -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0), cost: 3
 108: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 109: __init -> [17] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 110: __init -> [18] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 111: __init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 3+n6
 112: __init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM


Eliminating location f1500_0_main_InvokeMethod by chaining:

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [17] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
__init -> [17] : (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P5 <= 0 /\ -4+arg1P1 > 0 /\ -7+arg1P5 >= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [17] : (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P5 <= 0 /\ -4+arg1P1 > 0 /\ -7+arg1P5 >= 0), cost: NONTERM
New rule:
__init -> [17] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P5 >= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [18] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
__init -> [18] : (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P5 <= 0 /\ -4+arg1P1 > 0 /\ -7+arg1P5 >= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [18] : (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P5 <= 0 /\ -4+arg1P1 > 0 /\ -7+arg1P5 >= 0), cost: NONTERM
New rule:
__init -> [18] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P5 >= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4-arg1P10+arg2 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 2
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P10-arg1P5 <= 0), cost: 5

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P10-arg1P5 <= 0), cost: 5
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 2+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5+n6

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5+n6

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [19] : (4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: NONTERM
New rule:
__init -> [19] : (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -7+arg1P10 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [19] : (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -7+arg1P10 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
New rule:
__init -> [19] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P24-arg1P11 <= 0), cost: 2
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 10-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0), cost: 5

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 10-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0), cost: 5
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0), cost: 5

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2-arg1P11 <= 0 /\ arg2P25 > 0 /\ -arg1+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0), cost: 2+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 10-arg1P11 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0), cost: 5+n6

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 10-arg1P11 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0), cost: 5+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 5+n6

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P5, arg2'=6, arg4'=arg4P5, arg1'=arg1P5, arg3'=5, (-9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [19] : (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: NONTERM
New rule:
__init -> [19] : (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 10-arg1P11 <= 0 /\ -6+arg1P11 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [19] : (0 == 0 /\ -9+arg1P5 > 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 10-arg1P11 <= 0 /\ -6+arg1P11 > 0), cost: NONTERM
New rule:
__init -> [19] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [17] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
__init -> [17] : (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 10-arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [17] : (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 10-arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [17] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [18] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
__init -> [18] : (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 10-arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [18] : (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 10-arg1P7 <= 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [18] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4-arg1P10+arg2 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 2
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 2+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [19] : (4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: NONTERM
New rule:
__init -> [19] : (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [19] : (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 10-arg1P10 <= 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [19] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P24-arg1P11 <= 0), cost: 2
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ 10-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ 10-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2-arg1P11 <= 0 /\ arg2P25 > 0 /\ -arg1+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0), cost: 2+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 10-arg1P11 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 10-arg1P11 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P7, arg2'=6, arg4'=arg4P7, arg1'=arg1P7, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [19] : (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: NONTERM
New rule:
__init -> [19] : (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ 10-arg1P11 <= 0 /\ -6+arg1P11 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [19] : (0 == 0 /\ -9-arg1P1+arg1P7 <= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ 10-arg1P11 <= 0 /\ -6+arg1P11 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [19] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [17] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
__init -> [17] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -7+arg1P4 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [17] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -7+arg1P4 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [17] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -7+arg1P4 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [18] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
__init -> [18] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -7+arg1P4 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [18] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -7+arg1P4 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [18] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -7+arg1P4 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4-arg1P10+arg2 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 2
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 5

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 5
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 5

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 2+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [19] : (4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: NONTERM
New rule:
__init -> [19] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [19] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P24-arg1P11 <= 0), cost: 2
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2-arg1P11 <= 0 /\ arg2P25 > 0 /\ -arg1+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0), cost: 2+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P4, arg2'=arg2P4, arg4'=arg4P4, arg1'=arg1P4, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [19] : (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: NONTERM
New rule:
__init -> [19] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [19] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P4 > 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [17] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
__init -> [17] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ -7+arg1P6 >= 0 /\ 4-arg1P6+arg2P6 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [17] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ -7+arg1P6 >= 0 /\ 4-arg1P6+arg2P6 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [17] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P6 >= 0 /\ 4-arg1P6+arg2P6 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [18] : (-7+arg1 >= 0 /\ 4+arg2-arg1 <= 0 /\ -5+arg3 == 0), cost: NONTERM
New rule:
__init -> [18] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ -7+arg1P6 >= 0 /\ 4-arg1P6+arg2P6 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [18] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ -7+arg1P6 >= 0 /\ 4-arg1P6+arg2P6 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [18] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P6 >= 0 /\ 4-arg1P6+arg2P6 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4-arg1P10+arg2 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: 2
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P6 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: 5

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P6 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: 5
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: 5

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (arg2P25 > 0 /\ 4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 2+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -6+arg1P6 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -6+arg1P6 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [19] : (4-arg1P10+arg2 <= 0 /\ -7+arg1P10 >= 0 /\ -5+arg3 == 0 /\ arg1P10-arg1 <= 0), cost: NONTERM
New rule:
__init -> [19] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P10 >= 0 /\ -6+arg1P6 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [19] : (0 == 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P10 >= 0 /\ -6+arg1P6 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P10 >= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -5+arg3 == 0 /\ arg1P24-arg1P11 <= 0), cost: 2
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (0 == 0 /\ 4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2-arg1P11 <= 0 /\ arg2P25 > 0 /\ -arg1+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -5+arg3 == 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0), cost: 2+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -6+arg1P6 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6

Applied simplification
Original rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (0 == 0 /\ 4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -6+arg1P6 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6
New rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6

Applied chaining
First rule:
__init -> f1500_0_main_InvokeMethod : arg5'=arg5P6, arg2'=arg2P6, arg4'=arg4P6, arg1'=arg1P6, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 3
Second rule:
f1500_0_main_InvokeMethod -> [19] : (4+arg2-arg1P11 <= 0 /\ -arg1+arg1P11 <= 0 /\ -5+arg3 == 0 /\ -6+arg1P11 > 0), cost: NONTERM
New rule:
__init -> [19] : (0 == 0 /\ 4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [19] : (0 == 0 /\ 4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -6+arg1P6 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [19] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 83 87 94 95 96 97 98 99 102 103 105 106

Eliminating location f1682_0_reverse_NONNULL by chaining:

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0), cost: 3
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 7-arg1P23 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2+arg1P23 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 7-arg1P23 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2+arg1P23 > 0), cost: NONTERM
New rule:
__init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ -7+arg1P23 >= 0 /\ 2-arg2P2+arg4P2 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0), cost: 3
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P27-arg1P23 <= 0 /\ -1+arg2P27 > 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2+arg1P23 > 0 /\ 7-arg2P27 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P27-arg1P23 <= 0 /\ -1+arg2P27 > 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2+arg1P23 > 0 /\ 7-arg2P27 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P27-arg1P23 <= 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P23, arg2'=arg2P23, arg4'=arg4P23, arg1'=arg1P23, arg3'=5, (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0), cost: 3
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P28-arg1P23 <= 0 /\ arg2P23 > 0 /\ 7-arg2P28 <= 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2+arg1P23 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P28-arg1P23 <= 0 /\ arg2P23 > 0 /\ 7-arg2P28 <= 0 /\ -arg2P2+arg1P23 <= 0 /\ 1+arg2P23 > 0 /\ -6+arg1P23 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2+arg1P23 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P28-arg1P23 <= 0 /\ arg2P23 > 0 /\ -7+arg2P28 >= 0 /\ -arg2P2+arg1P23 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 3+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 3+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 3+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -1+arg2P27 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -1+arg2P27 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -1+arg2P27 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -1+arg2P27 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -1+arg2P27 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -1+arg2P27 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ arg1P10-arg1P7 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -1+arg2P27 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -1+arg2P27 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
New rule:
__init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -1+arg2P27 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -1+arg2P27 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ -1+arg2P27 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ -1+arg2P27 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -1+arg2P27 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -1+arg2P27 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 7-arg1P24 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -1+arg2P27 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -1+arg2P27 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ 7-arg2P27 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P24, arg2'=arg2P24, arg4'=arg4P24, arg1'=arg1P24, arg3'=5, (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: 5
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 7-arg2P28 <= 0 /\ arg2P28-arg1P24 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ 1+arg2P24 > 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -2+arg1P24 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (2-arg1+arg3 <= 0 /\ -2+arg1 > 0 /\ arg2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg3P25-arg1P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ arg2 > 0 /\ 2-arg2P27+arg3 <= 0 /\ -1+arg2P27 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P27-arg1 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1682_0_reverse_NONNULL : arg5'=arg5P25, arg2'=arg2P25, arg4'=arg4P25, arg1'=arg1P25, arg3'=arg3P25, (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: 5+n6
Second rule:
f1682_0_reverse_NONNULL -> [16] : (-2+arg1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2-arg2P28+arg3 <= 0 /\ arg2 > 0 /\ arg2P28-arg1 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied simplification
Original rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
New rule:
__init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 78 100 101 107 111 115 116 118 119 123 124 126 127 131 132 134 135 139 140 142 143

Eliminated locations on tree-shaped paths
Start location: __init
 104: __init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: NONTERM
 108: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 109: __init -> [17] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 110: __init -> [18] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 112: __init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 113: __init -> [17] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P5 >= 0), cost: NONTERM
 114: __init -> [18] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P5 >= 0), cost: NONTERM
 117: __init -> [19] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 120: __init -> [19] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0), cost: NONTERM
 121: __init -> [17] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 122: __init -> [18] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 125: __init -> [19] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 128: __init -> [19] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 129: __init -> [17] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -7+arg1P4 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 130: __init -> [18] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -7+arg1P4 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 133: __init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 136: __init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 137: __init -> [17] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P6 >= 0 /\ 4-arg1P6+arg2P6 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 138: __init -> [18] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P6 >= 0 /\ 4-arg1P6+arg2P6 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 141: __init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P10 >= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 144: __init -> [19] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 145: __init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ -7+arg1P23 >= 0 /\ 2-arg2P2+arg4P2 <= 0), cost: NONTERM
 146: __init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P27-arg1P23 <= 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 147: __init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P28-arg1P23 <= 0 /\ arg2P23 > 0 /\ -7+arg2P28 >= 0 /\ -arg2P2+arg1P23 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
 148: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 149: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 150: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 151: __init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 152: __init -> [16] : (-6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 153: __init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 154: __init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 155: __init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 156: __init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 157: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0), cost: NONTERM
 158: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 159: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
 160: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: NONTERM
 161: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 162: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
 163: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 164: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 165: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 166: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 167: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 168: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ arg1P10-arg1P7 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 169: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 170: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 171: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 172: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 173: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 174: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 175: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 176: __init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 177: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 178: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 179: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 180: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 181: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 182: __init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 183: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 184: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 185: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 186: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 187: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 188: __init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 189: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 190: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 191: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 192: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 193: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 194: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 195: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 196: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 197: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 198: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM


Removed duplicate rules (ignoring updates)
Start location: __init
 104: __init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0), cost: NONTERM
 112: __init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 114: __init -> [18] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P5 >= 0), cost: NONTERM
 117: __init -> [19] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 120: __init -> [19] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0), cost: NONTERM
 122: __init -> [18] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -9+arg1P7 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 125: __init -> [19] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 128: __init -> [19] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 130: __init -> [18] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -7+arg1P4 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 133: __init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 136: __init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 138: __init -> [18] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P6 >= 0 /\ 4-arg1P6+arg2P6 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 141: __init -> [19] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg1P10 >= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 144: __init -> [19] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 145: __init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ -7+arg1P23 >= 0 /\ 2-arg2P2+arg4P2 <= 0), cost: NONTERM
 146: __init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P27-arg1P23 <= 0 /\ arg2P23 > 0 /\ -arg2P2+arg1P23 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 147: __init -> [16] : (-arg1P2+arg1P23 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg2P28-arg1P23 <= 0 /\ arg2P23 > 0 /\ -7+arg2P28 >= 0 /\ -arg2P2+arg1P23 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
 148: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 149: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 150: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 151: __init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 152: __init -> [16] : (-6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 153: __init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 154: __init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 155: __init -> [16] : (-6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 156: __init -> [16] : (-6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ arg1P10-arg1P5 <= 0), cost: NONTERM
 157: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0), cost: NONTERM
 158: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 159: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
 160: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0), cost: NONTERM
 161: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 162: __init -> [16] : (-10+arg1P11 >= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -arg1P5+arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0), cost: NONTERM
 163: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P24 > 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 164: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 165: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -10+arg1P10 >= 0 /\ arg1P10-arg1P7 <= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 166: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 167: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ -10+arg1P10 >= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ arg1P10-arg1P7 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 168: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -10+arg1P10 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ arg1P10-arg1P7 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 169: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ -6+arg1P24 > 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 170: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ arg2P27-arg1P24 <= 0 /\ -4+arg1P1 > 0 /\ 2+arg4P27-arg1P27 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 171: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 172: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 173: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ -4+arg1P1 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -7+arg1P7-arg2P1 <= 0 /\ -2+arg1P27 > 0), cost: NONTERM
 174: __init -> [16] : (-9-arg1P1+arg1P7 <= 0 /\ -10+arg1P11 >= 0 /\ -arg1P7+arg1P11 <= 0 /\ -6+arg2P1 > 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ -4+arg1P1 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -7+arg1P7-arg2P1 <= 0), cost: NONTERM
 175: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 176: __init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 177: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg1P10-arg1P4 <= 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 178: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 179: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 180: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg1P10-arg1P4 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ 4-arg1P10+arg2P4 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 181: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 182: __init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 183: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 184: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 185: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 186: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ arg1P11-arg1P4 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ 4+arg2P4-arg1P11 <= 0 /\ arg2P28-arg1P25 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 187: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -6+arg1P24 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 188: __init -> [16] : (arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 189: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P10+arg1P24 <= 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ arg2P24 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 190: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 191: __init -> [16] : (2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 192: __init -> [16] : (4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -7+arg1P10 >= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ -arg1P6+arg1P10 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ 4-arg1P10+arg2P6 <= 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 193: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -6+arg1P24 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 194: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ arg2P27-arg1P24 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -arg1P6+arg1P11 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ -7+arg2P27 >= 0 /\ arg1P24-arg1P11 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 195: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ -7+arg2P28 >= 0 /\ arg2P28-arg1P24 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ 2-arg2P2+arg4P2 <= 0 /\ arg2P24 > 0 /\ arg1P24-arg1P11 <= 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM
 196: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ -2-arg3P25+arg1P25 >= 0 /\ -6+arg1P11 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 197: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P27-arg1P25 <= 0 /\ -1+arg2P27 > 0 /\ arg2P25 > 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ 2+arg3P25-arg2P27 <= 0 /\ 2+arg4P27-arg1P27 <= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 4+arg3P27-arg1P27 <= 0 /\ -6+arg1P11 > 0 /\ -2+arg1P27 > 0 /\ -6+arg1P2 > 0), cost: NONTERM
 198: __init -> [16] : (4+arg2P6-arg1P11 <= 0 /\ 4-arg1P28+arg3P28 <= 0 /\ -4+arg1P28 > 0 /\ 2+arg3P2-arg1P2 <= 0 /\ -6+arg2P2 > 0 /\ arg2P25 > 0 /\ arg2P28-arg1P25 <= 0 /\ -arg1P6+arg1P11 <= 0 /\ -1+n6 >= 0 /\ -2+arg1P25 > 0 /\ 2-arg2P2+arg4P2 <= 0 /\ 2-arg2P28+arg3P25 <= 0 /\ -6+arg1P11 > 0 /\ -1+arg2P28 > 0 /\ 2+arg4P28-arg1P28 <= 0 /\ -6+arg1P2 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 104 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-6+arg2P1 > 0 /\ -4+arg1P1 > 0)
