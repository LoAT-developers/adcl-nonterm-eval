YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l11, true>
<l1, l2, true, par{x^0 -> (2 + x^0)}>
<l1, l2, true>
<l3, l4, ((0 + N^0) <= (0 + i^0))>
<l3, l1, ((1 + i^0) <= (0 + N^0))>
<l5, l3, true>
<l6, l7, true, par{tmp^0 -> 0}>
<l8, l6, ((2 + N^0) <= (0 + x^0))>
<l8, l6, ((1 + x^0) <= (1 + N^0))>
<l8, l7, ((0 + x^0) <= (1 + N^0)) /\ ((1 + N^0) <= (0 + x^0)), par{tmp^0 -> 1}>
<l7, l9, true>
<l4, l8, ((1 + N^0) <= (0 + x^0))>
<l4, l8, ((1 + x^0) <= (0 + N^0))>
<l4, l7, ((0 + x^0) <= (0 + N^0)) /\ ((0 + N^0) <= (0 + x^0)), par{tmp^0 -> 1}>
<l2, l5, true, par{i^0 -> (1 + i^0)}>
<l10, l5, true, par{i^0 -> 0, x^0 -> 0}>
<l11, l10, true>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l5, (i^0 = 0) /\ (x^0 = 0)>
<l5, l9, ((0 + N^0) <= (0 + i^0)) /\ ((1 + N^0) <= (0 + x^0)) /\ ((2 + N^0) <= (0 + x^0))>
<l5, l9, ((0 + N^0) <= (0 + i^0)) /\ ((1 + N^0) <= (0 + x^0)) /\ ((0 + x^0) <= (1 + N^0)) /\ ((1 + N^0) <= (0 + x^0))>
<l5, l9, ((0 + N^0) <= (0 + i^0)) /\ ((1 + x^0) <= (0 + N^0)) /\ ((1 + x^0) <= (1 + N^0))>
<l5, l9, ((0 + N^0) <= (0 + i^0)) /\ ((0 + x^0) <= (0 + N^0)) /\ ((0 + N^0) <= (0 + x^0))>
<l5, l5, ((1 + i^0) <= (0 + N^0)), par{i^0 -> (1 + i^0), x^0 -> (2 + x^0)}>
<l5, l5, ((1 + i^0) <= (0 + N^0)), par{i^0 -> (1 + i^0)}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l5, l5, 1 + i^0 <= N^0, {i^0 -> 1 + i^0, x^0 -> 2 + x^0, rest remain the same}>
<l5, l5, 1 + i^0 <= N^0, {i^0 -> 1 + i^0, rest remain the same}>
Variables:
N^0, i^0, x^0

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l5, i^0 = 0 /\ x^0 = 0, {all remain the same}>

Graph 2
<l5, l9, 2 + N^0 <= x^0 /\ N^0 <= i^0, {all remain the same}>
<l5, l9, N^0 <= i^0 /\ 1 + N^0 = x^0, {all remain the same}>
<l5, l9, N^0 <= i^0 /\ 1 + x^0 <= N^0, {all remain the same}>
<l5, l9, N^0 <= i^0 /\ N^0 = x^0, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 5 , 1 )
( 9 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.003902

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000835s
[33mRanking function: [36m-1 + N^0 - i^0[0m
New Graphs: 
Proving termination of subgraph 2
Analyzing SCC {l9}...
No cycles found.

[32mProgram Terminates[0m
