NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l6, true>
<l1, l2, (undef1 <= arg1) /\ (arg1 > ~(1)) /\ (undef1 > ~(1)), par{arg1 -> undef1, arg2 -> undef2, arg3 -> undef3, arg4 -> undef4}>
<l3, l2, (arg1 > 0) /\ (undef5 > ~(1)), par{arg1 -> undef5, arg2 -> undef6, arg3 -> undef7, arg4 -> undef8}>
<l2, l2, ((undef9 + 2) <= arg1) /\ (arg1 > 2) /\ (undef9 > ~(1)), par{arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12}>
<l2, l2, ((undef13 + 2) <= arg1) /\ (arg1 > 1) /\ (undef13 > ~(1)), par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16}>
<l2, l2, (arg1 >= undef17) /\ (arg1 > 2) /\ (undef17 > 0), par{arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20}>
<l3, l4, (arg2 > ~(1)) /\ (undef22 > ~(1)) /\ (arg1 > 0), par{arg1 -> 0, arg2 -> undef22, arg3 -> 1, arg4 -> undef24}>
<l4, l5, (undef27 > ~(1)) /\ (arg2 > arg1) /\ (arg3 > 0), par{arg1 -> arg2, arg2 -> arg1, arg3 -> undef27, arg4 -> (arg3 + 1)}>
<l5, l4, (0 = arg3), par{arg1 -> (arg2 + 1), arg2 -> arg1, arg3 -> arg4, arg4 -> undef32}>
<l5, l5, (arg3 > 0), par{arg3 -> (arg3 - 1)}>
<l6, l3, true, par{arg1 -> undef37, arg2 -> undef38, arg3 -> undef39, arg4 -> undef40}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef22, undef24, undef27, undef32, undef37, undef38, undef39, undef40, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef22, undef24, undef27, undef32, undef37, undef38, undef39, undef40, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (undef37 > 0) /\ (undef5 > ~(1)), par{arg1 -> undef5, arg2 -> undef6, arg3 -> undef7, arg4 -> undef8}>
<l0, l5, (undef38 > ~(1)) /\ (undef22 > ~(1)) /\ (undef37 > 0) /\ (undef27 > ~(1)) /\ (undef22 > 0) /\ (1 > 0), par{arg1 -> undef22, arg2 -> 0, arg3 -> undef27, arg4 -> (1 + 1)}>
<l2, l2, ((undef9 + 2) <= arg1) /\ (arg1 > 2) /\ (undef9 > ~(1)), par{arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12}>
<l2, l2, ((undef13 + 2) <= arg1) /\ (arg1 > 1) /\ (undef13 > ~(1)), par{arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16}>
<l2, l2, (arg1 >= undef17) /\ (arg1 > 2) /\ (undef17 > 0), par{arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20}>
<l5, l5, (0 = arg3) /\ (undef27 > ~(1)) /\ (arg1 > (arg2 + 1)) /\ (arg4 > 0), par{arg1 -> arg1, arg2 -> (arg2 + 1), arg3 -> undef27, arg4 -> (arg4 + 1)}>
<l5, l5, (arg3 > 0), par{arg3 -> (arg3 - 1)}>

Fresh variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef22, undef24, undef27, undef32, undef37, undef38, undef39, undef40, 

Undef variables:
undef1, undef2, undef3, undef4, undef5, undef6, undef7, undef8, undef9, undef10, undef11, undef12, undef13, undef14, undef15, undef16, undef17, undef18, undef19, undef20, undef22, undef24, undef27, undef32, undef37, undef38, undef39, undef40, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l5, l5, 1 <= arg4 /\ 0 <= undef27 /\ 2 + arg2 <= arg1 /\ arg3 = 0, {arg2 -> 1 + arg2, arg3 -> undef27, arg4 -> 1 + arg4, rest remain the same}>
<l5, l5, 1 <= arg3, {arg3 -> -1 + arg3, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Graph 2:
Transitions:
<l2, l2, 0 <= undef9 /\ 2 + undef9 <= arg1 /\ 3 <= arg1, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12, rest remain the same}>
<l2, l2, 0 <= undef13 /\ 2 <= arg1 /\ 2 + undef13 <= arg1, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16, rest remain the same}>
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Precedence: 
Graph 0

Graph 1
<l0, l5, 1 <= undef22 /\ 1 <= undef37 /\ 0 <= undef27 /\ 0 <= undef38, {arg1 -> undef22, arg2 -> 0, arg3 -> undef27, arg4 -> 2, rest remain the same}>

Graph 2
<l0, l2, 1 <= undef37 /\ 0 <= undef5, {arg1 -> undef5, arg2 -> undef6, arg3 -> undef7, arg4 -> undef8, rest remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 2 )
( 5 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.005784

Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001155s
[33mRanking function: [36m-2 + 2*arg1 - 2*arg2 + arg4[0m
New Graphs: 
Transitions:
<l5, l5, 1 <= arg3, {arg3 -> -1 + arg3, rest remain the same}>
Variables:
arg3
Checking conditional termination of SCC {l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000249s
[33mRanking function: [36m-1 + arg3[0m
New Graphs: 
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.00376

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001178s
[33mRanking function: [36m-1 + (1 / 2)*arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000364s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001261s
Trying to remove transition: <l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003637s
Time used: 0.00353
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008522s
Time used: 0.008195
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.012677s
Time used: 0.012675

LOG: SAT solveNonLinear - Elapsed time: 0.021200s
Cost: 1; Total time: 0.02087
[31mFailed at location 2: arg1 <= 1[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 <= 1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002547s
Remaining time after improvement: 0.999157
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 <= 1[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= undef9 /\ 2 + undef9 <= arg1 /\ 3 <= arg1, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= undef13 /\ 2 <= arg1 /\ 2 + undef13 <= arg1, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 1 and entry <l0, l2, 1 <= undef37 /\ 0 <= undef5, {arg1 -> undef5, arg2 -> undef6, arg3 -> undef7, arg4 -> undef8, rest remain the same}>

LOG: CALL check - Post:arg1 <= 1 - Process 1
* Exit transition: <l0, l2, 1 <= undef37 /\ 0 <= undef5, {arg1 -> undef5, arg2 -> undef6, arg3 -> undef7, arg4 -> undef8, rest remain the same}>
* Postcondition  : arg1 <= 1

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000271s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000309s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 <= 1 , 
Narrowing transition: 
<l2, l2, 0 <= undef9 /\ 2 + undef9 <= arg1 /\ 3 <= arg1, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 0 <= undef13 /\ 2 <= arg1 /\ 2 + undef13 <= arg1, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 0 <= undef9 /\ 2 + undef9 <= arg1 /\ 3 <= arg1, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12, rest remain the same}>
<l2, l2, 0 <= undef13 /\ 2 <= arg1 /\ 2 + undef13 <= arg1, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16, rest remain the same}>
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000963s
[33mRanking function: [36m-1 + (1 / 2)*arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000342s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001205s
Trying to remove transition: <l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003559s
Time used: 0.00348
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.016848s
Time used: 0.016469
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.011680s
Time used: 0.011679

LOG: SAT solveNonLinear - Elapsed time: 0.028528s
Cost: 1; Total time: 0.028148
[31mFailed at location 2: arg1 <= 2[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 <= 2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002614s
Remaining time after improvement: 0.999111
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 <= 2[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= undef9 /\ 2 + undef9 <= arg1 /\ 3 <= arg1, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= undef13 /\ 2 + undef13 <= arg1 /\ arg1 = 2, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 2 and entry <l0, l2, 1 <= undef37 /\ 2 <= undef5, {arg1 -> undef5, arg2 -> undef6, arg3 -> undef7, arg4 -> undef8, rest remain the same}>

LOG: CALL check - Post:arg1 <= 2 - Process 2
* Exit transition: <l0, l2, 1 <= undef37 /\ 2 <= undef5, {arg1 -> undef5, arg2 -> undef6, arg3 -> undef7, arg4 -> undef8, rest remain the same}>
* Postcondition  : arg1 <= 2

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000221s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000258s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 <= 2 , 
Narrowing transition: 
<l2, l2, 0 <= undef9 /\ 2 + undef9 <= arg1 /\ 3 <= arg1, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 0 <= undef13 /\ 2 <= arg1 /\ 2 + undef13 <= arg1, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 0 <= undef9 /\ 2 + undef9 <= arg1 /\ 3 <= arg1, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12, rest remain the same}>
<l2, l2, 0 <= undef13 /\ 2 + undef13 <= arg1 /\ 3 <= arg1, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16, rest remain the same}>
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001016s
[33mRanking function: [36m(~(3) / 2) + (1 / 2)*arg1[0m
New Graphs: 
Transitions:
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000349s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001184s
Trying to remove transition: <l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003598s
Time used: 0.003518
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.017184s
Time used: 0.016864
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001035s
Time used: 4.00033
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005337s
Time used: 1.00002
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.021973s
Time used: 0.006541

Proving non-termination of subgraph 2
Transitions:
<l2, l2, 0 <= undef9 /\ 2 + undef9 <= arg1 /\ 3 <= arg1, {arg1 -> undef9, arg2 -> undef10, arg3 -> undef11, arg4 -> undef12, rest remain the same}>
<l2, l2, 0 <= undef13 /\ 2 + undef13 <= arg1 /\ 3 <= arg1, {arg1 -> undef13, arg2 -> undef14, arg3 -> undef15, arg4 -> undef16, rest remain the same}>
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Checking that every undef value has an assignment...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000921s
Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg1 <= 2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.000719s
Time used: 5.0006
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.014313s
Time used: 5.00072
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.016206s
Time used: 5.00004
> Checking if the negation of the conditions of every pending exit is quasi-invariant... NO

Proving non-termination of subgraph 2
Transitions:
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>
Variables:
arg1, arg2, arg3, arg4

Checking that every undef value has an assignment...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001465s
Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg1 <= 2, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.044404s
Time used: 0.044197
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.026424s
Time used: 0.026422

LOG: SAT solveNonLinear - Elapsed time: 0.070829s
Cost: 1; Total time: 0.070619
[31mFailed at location 2: 3 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: 3 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007573s
Remaining time after improvement: 0.998522
Minimizing number of undef constraints...

LOG: CALL solveNonLinear

LOG: RETURN solveNonLinear - Elapsed time: 0.002566s
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 3 <= arg1[0m
Constraint over undef 'arg1 <= undef17' in transition:
<l2, l2, 1 <= undef17 /\ undef17 <= arg1 /\ 3 <= arg1, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= undef17 /\ 3 <= arg1 /\ arg1 = undef17, {arg1 -> undef17, arg2 -> undef18, arg3 -> undef19, arg4 -> undef20, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 3 <= arg1, 
OPEN EXITS: 
<l2, end, 3 <= arg1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 1 <= undef37 /\ 0 <= undef5, {arg1 -> undef5, arg2 -> undef6, arg3 -> undef7, arg4 -> undef8, rest remain the same}>
Conditions: 3 <= arg1, 
OPEN EXITS: 
<l0, l2, 1 <= undef37 /\ 3 <= undef5, {arg1 -> undef5, arg2 -> undef6, arg3 -> undef7, arg4 -> undef8, rest remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
