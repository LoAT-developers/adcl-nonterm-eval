WORST_CASE(Omega(0),?)

Initial ITS
Start location: l4
   0: l0 -> l1 : y^0'=y^post0, x^0'=x^post0, (-x^post0+x^0 == 0 /\ 11-x^0 <= 0 /\ -y^post0+y^0 == 0), cost: 1
   1: l0 -> l2 : y^0'=y^post1, x^0'=x^post1, (-10+x^0+y^post1 == 0 /\ -10+x^0 <= 0 /\ -1-x^0+x^post1 == 0), cost: 1
   2: l2 -> l0 : y^0'=y^post2, x^0'=x^post2, (x^0-x^post2 == 0 /\ y^0-y^post2 == 0), cost: 1
   3: l3 -> l2 : y^0'=y^post3, x^0'=x^post3, (-1+x^post3 == 0 /\ y^0-y^post3 == 0), cost: 1
   4: l4 -> l3 : y^0'=y^post4, x^0'=x^post4, (y^0-y^post4 == 0 /\ x^0-x^post4 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l4
   1: l0 -> l2 : y^0'=y^post1, x^0'=x^post1, (-10+x^0+y^post1 == 0 /\ -10+x^0 <= 0 /\ -1-x^0+x^post1 == 0), cost: 1
   2: l2 -> l0 : y^0'=y^post2, x^0'=x^post2, (x^0-x^post2 == 0 /\ y^0-y^post2 == 0), cost: 1
   3: l3 -> l2 : y^0'=y^post3, x^0'=x^post3, (-1+x^post3 == 0 /\ y^0-y^post3 == 0), cost: 1
   4: l4 -> l3 : y^0'=y^post4, x^0'=x^post4, (y^0-y^post4 == 0 /\ x^0-x^post4 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l2 : y^0'=y^post1, x^0'=x^post1, (-10+x^0+y^post1 == 0 /\ -10+x^0 <= 0 /\ -1-x^0+x^post1 == 0), cost: 1
New rule:
l0 -> l2 : y^0'=10-x^0, x^0'=1+x^0, -10+x^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : y^0'=y^post2, x^0'=x^post2, (x^0-x^post2 == 0 /\ y^0-y^post2 == 0), cost: 1
New rule:
l2 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : y^0'=y^post3, x^0'=x^post3, (-1+x^post3 == 0 /\ y^0-y^post3 == 0), cost: 1
New rule:
l3 -> l2 : x^0'=1, TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l3 : y^0'=y^post4, x^0'=x^post4, (y^0-y^post4 == 0 /\ x^0-x^post4 == 0), cost: 1
New rule:
l4 -> l3 : TRUE, cost: 1

Simplified rules
Start location: l4
   5: l0 -> l2 : y^0'=10-x^0, x^0'=1+x^0, -10+x^0 <= 0, cost: 1
   6: l2 -> l0 : TRUE, cost: 1
   7: l3 -> l2 : x^0'=1, TRUE, cost: 1
   8: l4 -> l3 : TRUE, cost: 1


Eliminating location l3 by chaining:

Applied chaining
First rule:
l4 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l2 : x^0'=1, TRUE, cost: 1
New rule:
l4 -> l2 : x^0'=1, TRUE, cost: 2

Applied deletion
Removed the following rules: 7 8

Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l2 : y^0'=10-x^0, x^0'=1+x^0, -10+x^0 <= 0, cost: 1
New rule:
l2 -> l2 : y^0'=10-x^0, x^0'=1+x^0, -10+x^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 5 6

Eliminated locations on linear paths
Start location: l4
  10: l2 -> l2 : y^0'=10-x^0, x^0'=1+x^0, -10+x^0 <= 0, cost: 2
   9: l4 -> l2 : x^0'=1, TRUE, cost: 2


Applied acceleration
Original rule:
l2 -> l2 : y^0'=10-x^0, x^0'=1+x^0, -10+x^0 <= 0, cost: 2
New rule:
l2 -> l2 : y^0'=11-n-x^0, x^0'=n+x^0, (-1+n >= 0 /\ 11-n-x^0 >= 0), cost: 2*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NPnAbf.txt

Applied instantiation
Original rule:
l2 -> l2 : y^0'=11-n-x^0, x^0'=n+x^0, (-1+n >= 0 /\ 11-n-x^0 >= 0), cost: 2*n
New rule:
l2 -> l2 : y^0'=0, x^0'=11, (0 >= 0 /\ 10-x^0 >= 0), cost: 22-2*x^0

Applied simplification
Original rule:
l2 -> l2 : y^0'=0, x^0'=11, (0 >= 0 /\ 10-x^0 >= 0), cost: 22-2*x^0
New rule:
l2 -> l2 : y^0'=0, x^0'=11, -10+x^0 <= 0, cost: 22-2*x^0

Applied deletion
Removed the following rules: 10

Accelerated simple loops
Start location: l4
  12: l2 -> l2 : y^0'=0, x^0'=11, -10+x^0 <= 0, cost: 22-2*x^0
   9: l4 -> l2 : x^0'=1, TRUE, cost: 2


Applied chaining
First rule:
l4 -> l2 : x^0'=1, TRUE, cost: 2
Second rule:
l2 -> l2 : y^0'=0, x^0'=11, -10+x^0 <= 0, cost: 22-2*x^0
New rule:
l4 -> l2 : y^0'=0, x^0'=11, -9 <= 0, cost: 22

Applied deletion
Removed the following rules: 12

Chained accelerated rules with incoming rules
Start location: l4
   9: l4 -> l2 : x^0'=1, TRUE, cost: 2
  13: l4 -> l2 : y^0'=0, x^0'=11, -9 <= 0, cost: 22


Removed unreachable locations and irrelevant leafs
Start location: l4
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

