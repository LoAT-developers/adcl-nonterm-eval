NO

Initial ITS
Start location: l6
   0: l0 -> l1 : mid4^0'=mid4^post0, __const_8^0'=__const_8^post0, tmp^0'=tmp^post0, low6^0'=low6^post0, __const_14^0'=__const_14^post0, x2^0'=x2^post0, ret_binary_search7^0'=ret_binary_search7^post0, fvalue3^0'=fvalue3^post0, up5^0'=up5^post0, (__const_14^0-__const_14^post0 == 0 /\ -up5^post0+up5^0 == 0 /\ x2^0-x2^post0 == 0 /\ tmp^0-tmp^post0 == 0 /\ mid4^0-mid4^post0 == 0 /\ __const_8^0-__const_8^post0 == 0 /\ -fvalue3^post0+fvalue3^0 == 0 /\ -ret_binary_search7^post0+ret_binary_search7^0 == 0 /\ low6^0-low6^post0 == 0), cost: 1
   1: l0 -> l2 : mid4^0'=mid4^post1, __const_8^0'=__const_8^post1, tmp^0'=tmp^post1, low6^0'=low6^post1, __const_14^0'=__const_14^post1, x2^0'=x2^post1, ret_binary_search7^0'=ret_binary_search7^post1, fvalue3^0'=fvalue3^post1, up5^0'=up5^post1, (0 == 0 /\ -ret_binary_search7^post1+ret_binary_search7^0 == 0 /\ mid4^0-mid4^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ -__const_8^post1+__const_8^0 == 0 /\ -x2^post1+x2^0 == 0 /\ -__const_14^post1+__const_14^0 == 0 /\ low6^0-low6^post1 == 0 /\ 1-low6^0+up5^post1 == 0), cost: 1
   2: l0 -> l1 : mid4^0'=mid4^post2, __const_8^0'=__const_8^post2, tmp^0'=tmp^post2, low6^0'=low6^post2, __const_14^0'=__const_14^post2, x2^0'=x2^post2, ret_binary_search7^0'=ret_binary_search7^post2, fvalue3^0'=fvalue3^post2, up5^0'=up5^post2, (__const_8^0-__const_8^post2 == 0 /\ fvalue3^0-fvalue3^post2 == 0 /\ -up5^post2+up5^0 == 0 /\ low6^0-low6^post2 == 0 /\ -x2^post2+x2^0 == 0 /\ mid4^0-mid4^post2 == 0 /\ tmp^0-tmp^post2 == 0 /\ ret_binary_search7^0-ret_binary_search7^post2 == 0 /\ -__const_14^post2+__const_14^0 == 0), cost: 1
   6: l1 -> l2 : mid4^0'=mid4^post6, __const_8^0'=__const_8^post6, tmp^0'=tmp^post6, low6^0'=low6^post6, __const_14^0'=__const_14^post6, x2^0'=x2^post6, ret_binary_search7^0'=ret_binary_search7^post6, fvalue3^0'=fvalue3^post6, up5^0'=up5^post6, (-x2^post6+x2^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ -up5^post6+up5^0 == 0 /\ fvalue3^0-fvalue3^post6 == 0 /\ __const_8^0-__const_8^post6 == 0 /\ -1-mid4^0+low6^post6 == 0 /\ mid4^0-mid4^post6 == 0 /\ ret_binary_search7^0-ret_binary_search7^post6 == 0 /\ -__const_14^post6+__const_14^0 == 0), cost: 1
   7: l1 -> l2 : mid4^0'=mid4^post7, __const_8^0'=__const_8^post7, tmp^0'=tmp^post7, low6^0'=low6^post7, __const_14^0'=__const_14^post7, x2^0'=x2^post7, ret_binary_search7^0'=ret_binary_search7^post7, fvalue3^0'=fvalue3^post7, up5^0'=up5^post7, (__const_8^0-__const_8^post7 == 0 /\ 1-mid4^0+up5^post7 == 0 /\ -tmp^post7+tmp^0 == 0 /\ -x2^post7+x2^0 == 0 /\ -__const_14^post7+__const_14^0 == 0 /\ ret_binary_search7^0-ret_binary_search7^post7 == 0 /\ -fvalue3^post7+fvalue3^0 == 0 /\ low6^0-low6^post7 == 0 /\ -mid4^post7+mid4^0 == 0), cost: 1
   5: l2 -> l3 : mid4^0'=mid4^post5, __const_8^0'=__const_8^post5, tmp^0'=tmp^post5, low6^0'=low6^post5, __const_14^0'=__const_14^post5, x2^0'=x2^post5, ret_binary_search7^0'=ret_binary_search7^post5, fvalue3^0'=fvalue3^post5, up5^0'=up5^post5, (-low6^post5+low6^0 == 0 /\ -__const_8^post5+__const_8^0 == 0 /\ -up5^post5+up5^0 == 0 /\ x2^0-x2^post5 == 0 /\ -fvalue3^post5+fvalue3^0 == 0 /\ mid4^0-mid4^post5 == 0 /\ tmp^0-tmp^post5 == 0 /\ -ret_binary_search7^post5+ret_binary_search7^0 == 0 /\ __const_14^0-__const_14^post5 == 0), cost: 1
   3: l3 -> l4 : mid4^0'=mid4^post3, __const_8^0'=__const_8^post3, tmp^0'=tmp^post3, low6^0'=low6^post3, __const_14^0'=__const_14^post3, x2^0'=x2^post3, ret_binary_search7^0'=ret_binary_search7^post3, fvalue3^0'=fvalue3^post3, up5^0'=up5^post3, (tmp^post3-ret_binary_search7^post3 == 0 /\ -fvalue3^post3+fvalue3^0 == 0 /\ -up5^post3+up5^0 == 0 /\ -low6^post3+low6^0 == 0 /\ __const_14^0-__const_14^post3 == 0 /\ mid4^0-mid4^post3 == 0 /\ ret_binary_search7^post3-fvalue3^0 == 0 /\ 1-low6^0+up5^0 <= 0 /\ __const_8^0-__const_8^post3 == 0 /\ -x2^post3+x2^0 == 0), cost: 1
   4: l3 -> l0 : mid4^0'=mid4^post4, __const_8^0'=__const_8^post4, tmp^0'=tmp^post4, low6^0'=low6^post4, __const_14^0'=__const_14^post4, x2^0'=x2^post4, ret_binary_search7^0'=ret_binary_search7^post4, fvalue3^0'=fvalue3^post4, up5^0'=up5^post4, (0 == 0 /\ -ret_binary_search7^post4+ret_binary_search7^0 == 0 /\ -tmp^post4+tmp^0 == 0 /\ x2^0-x2^post4 == 0 /\ -low6^post4+low6^0 == 0 /\ -fvalue3^post4+fvalue3^0 == 0 /\ -up5^post4+up5^0 == 0 /\ __const_14^0-__const_14^post4 == 0 /\ low6^0-up5^0 <= 0 /\ __const_8^0-__const_8^post4 == 0), cost: 1
   8: l5 -> l2 : mid4^0'=mid4^post8, __const_8^0'=__const_8^post8, tmp^0'=tmp^post8, low6^0'=low6^post8, __const_14^0'=__const_14^post8, x2^0'=x2^post8, ret_binary_search7^0'=ret_binary_search7^post8, fvalue3^0'=fvalue3^post8, up5^0'=up5^post8, (1+fvalue3^post8 == 0 /\ __const_8^0-__const_8^post8 == 0 /\ __const_14^0-__const_14^post8 == 0 /\ ret_binary_search7^0-ret_binary_search7^post8 == 0 /\ low6^post8 == 0 /\ mid4^0-mid4^post8 == 0 /\ up5^post8-__const_14^0 == 0 /\ -tmp^post8+tmp^0 == 0 /\ x2^post8-__const_8^0 == 0), cost: 1
   9: l6 -> l5 : mid4^0'=mid4^post9, __const_8^0'=__const_8^post9, tmp^0'=tmp^post9, low6^0'=low6^post9, __const_14^0'=__const_14^post9, x2^0'=x2^post9, ret_binary_search7^0'=ret_binary_search7^post9, fvalue3^0'=fvalue3^post9, up5^0'=up5^post9, (-up5^post9+up5^0 == 0 /\ -fvalue3^post9+fvalue3^0 == 0 /\ __const_14^0-__const_14^post9 == 0 /\ -ret_binary_search7^post9+ret_binary_search7^0 == 0 /\ x2^0-x2^post9 == 0 /\ tmp^0-tmp^post9 == 0 /\ -low6^post9+low6^0 == 0 /\ -__const_8^post9+__const_8^0 == 0 /\ mid4^0-mid4^post9 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l6
   0: l0 -> l1 : mid4^0'=mid4^post0, __const_8^0'=__const_8^post0, tmp^0'=tmp^post0, low6^0'=low6^post0, __const_14^0'=__const_14^post0, x2^0'=x2^post0, ret_binary_search7^0'=ret_binary_search7^post0, fvalue3^0'=fvalue3^post0, up5^0'=up5^post0, (__const_14^0-__const_14^post0 == 0 /\ -up5^post0+up5^0 == 0 /\ x2^0-x2^post0 == 0 /\ tmp^0-tmp^post0 == 0 /\ mid4^0-mid4^post0 == 0 /\ __const_8^0-__const_8^post0 == 0 /\ -fvalue3^post0+fvalue3^0 == 0 /\ -ret_binary_search7^post0+ret_binary_search7^0 == 0 /\ low6^0-low6^post0 == 0), cost: 1
   1: l0 -> l2 : mid4^0'=mid4^post1, __const_8^0'=__const_8^post1, tmp^0'=tmp^post1, low6^0'=low6^post1, __const_14^0'=__const_14^post1, x2^0'=x2^post1, ret_binary_search7^0'=ret_binary_search7^post1, fvalue3^0'=fvalue3^post1, up5^0'=up5^post1, (0 == 0 /\ -ret_binary_search7^post1+ret_binary_search7^0 == 0 /\ mid4^0-mid4^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ -__const_8^post1+__const_8^0 == 0 /\ -x2^post1+x2^0 == 0 /\ -__const_14^post1+__const_14^0 == 0 /\ low6^0-low6^post1 == 0 /\ 1-low6^0+up5^post1 == 0), cost: 1
   2: l0 -> l1 : mid4^0'=mid4^post2, __const_8^0'=__const_8^post2, tmp^0'=tmp^post2, low6^0'=low6^post2, __const_14^0'=__const_14^post2, x2^0'=x2^post2, ret_binary_search7^0'=ret_binary_search7^post2, fvalue3^0'=fvalue3^post2, up5^0'=up5^post2, (__const_8^0-__const_8^post2 == 0 /\ fvalue3^0-fvalue3^post2 == 0 /\ -up5^post2+up5^0 == 0 /\ low6^0-low6^post2 == 0 /\ -x2^post2+x2^0 == 0 /\ mid4^0-mid4^post2 == 0 /\ tmp^0-tmp^post2 == 0 /\ ret_binary_search7^0-ret_binary_search7^post2 == 0 /\ -__const_14^post2+__const_14^0 == 0), cost: 1
   6: l1 -> l2 : mid4^0'=mid4^post6, __const_8^0'=__const_8^post6, tmp^0'=tmp^post6, low6^0'=low6^post6, __const_14^0'=__const_14^post6, x2^0'=x2^post6, ret_binary_search7^0'=ret_binary_search7^post6, fvalue3^0'=fvalue3^post6, up5^0'=up5^post6, (-x2^post6+x2^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ -up5^post6+up5^0 == 0 /\ fvalue3^0-fvalue3^post6 == 0 /\ __const_8^0-__const_8^post6 == 0 /\ -1-mid4^0+low6^post6 == 0 /\ mid4^0-mid4^post6 == 0 /\ ret_binary_search7^0-ret_binary_search7^post6 == 0 /\ -__const_14^post6+__const_14^0 == 0), cost: 1
   7: l1 -> l2 : mid4^0'=mid4^post7, __const_8^0'=__const_8^post7, tmp^0'=tmp^post7, low6^0'=low6^post7, __const_14^0'=__const_14^post7, x2^0'=x2^post7, ret_binary_search7^0'=ret_binary_search7^post7, fvalue3^0'=fvalue3^post7, up5^0'=up5^post7, (__const_8^0-__const_8^post7 == 0 /\ 1-mid4^0+up5^post7 == 0 /\ -tmp^post7+tmp^0 == 0 /\ -x2^post7+x2^0 == 0 /\ -__const_14^post7+__const_14^0 == 0 /\ ret_binary_search7^0-ret_binary_search7^post7 == 0 /\ -fvalue3^post7+fvalue3^0 == 0 /\ low6^0-low6^post7 == 0 /\ -mid4^post7+mid4^0 == 0), cost: 1
   5: l2 -> l3 : mid4^0'=mid4^post5, __const_8^0'=__const_8^post5, tmp^0'=tmp^post5, low6^0'=low6^post5, __const_14^0'=__const_14^post5, x2^0'=x2^post5, ret_binary_search7^0'=ret_binary_search7^post5, fvalue3^0'=fvalue3^post5, up5^0'=up5^post5, (-low6^post5+low6^0 == 0 /\ -__const_8^post5+__const_8^0 == 0 /\ -up5^post5+up5^0 == 0 /\ x2^0-x2^post5 == 0 /\ -fvalue3^post5+fvalue3^0 == 0 /\ mid4^0-mid4^post5 == 0 /\ tmp^0-tmp^post5 == 0 /\ -ret_binary_search7^post5+ret_binary_search7^0 == 0 /\ __const_14^0-__const_14^post5 == 0), cost: 1
   4: l3 -> l0 : mid4^0'=mid4^post4, __const_8^0'=__const_8^post4, tmp^0'=tmp^post4, low6^0'=low6^post4, __const_14^0'=__const_14^post4, x2^0'=x2^post4, ret_binary_search7^0'=ret_binary_search7^post4, fvalue3^0'=fvalue3^post4, up5^0'=up5^post4, (0 == 0 /\ -ret_binary_search7^post4+ret_binary_search7^0 == 0 /\ -tmp^post4+tmp^0 == 0 /\ x2^0-x2^post4 == 0 /\ -low6^post4+low6^0 == 0 /\ -fvalue3^post4+fvalue3^0 == 0 /\ -up5^post4+up5^0 == 0 /\ __const_14^0-__const_14^post4 == 0 /\ low6^0-up5^0 <= 0 /\ __const_8^0-__const_8^post4 == 0), cost: 1
   8: l5 -> l2 : mid4^0'=mid4^post8, __const_8^0'=__const_8^post8, tmp^0'=tmp^post8, low6^0'=low6^post8, __const_14^0'=__const_14^post8, x2^0'=x2^post8, ret_binary_search7^0'=ret_binary_search7^post8, fvalue3^0'=fvalue3^post8, up5^0'=up5^post8, (1+fvalue3^post8 == 0 /\ __const_8^0-__const_8^post8 == 0 /\ __const_14^0-__const_14^post8 == 0 /\ ret_binary_search7^0-ret_binary_search7^post8 == 0 /\ low6^post8 == 0 /\ mid4^0-mid4^post8 == 0 /\ up5^post8-__const_14^0 == 0 /\ -tmp^post8+tmp^0 == 0 /\ x2^post8-__const_8^0 == 0), cost: 1
   9: l6 -> l5 : mid4^0'=mid4^post9, __const_8^0'=__const_8^post9, tmp^0'=tmp^post9, low6^0'=low6^post9, __const_14^0'=__const_14^post9, x2^0'=x2^post9, ret_binary_search7^0'=ret_binary_search7^post9, fvalue3^0'=fvalue3^post9, up5^0'=up5^post9, (-up5^post9+up5^0 == 0 /\ -fvalue3^post9+fvalue3^0 == 0 /\ __const_14^0-__const_14^post9 == 0 /\ -ret_binary_search7^post9+ret_binary_search7^0 == 0 /\ x2^0-x2^post9 == 0 /\ tmp^0-tmp^post9 == 0 /\ -low6^post9+low6^0 == 0 /\ -__const_8^post9+__const_8^0 == 0 /\ mid4^0-mid4^post9 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : mid4^0'=mid4^post0, __const_8^0'=__const_8^post0, tmp^0'=tmp^post0, low6^0'=low6^post0, __const_14^0'=__const_14^post0, x2^0'=x2^post0, ret_binary_search7^0'=ret_binary_search7^post0, fvalue3^0'=fvalue3^post0, up5^0'=up5^post0, (__const_14^0-__const_14^post0 == 0 /\ -up5^post0+up5^0 == 0 /\ x2^0-x2^post0 == 0 /\ tmp^0-tmp^post0 == 0 /\ mid4^0-mid4^post0 == 0 /\ __const_8^0-__const_8^post0 == 0 /\ -fvalue3^post0+fvalue3^0 == 0 /\ -ret_binary_search7^post0+ret_binary_search7^0 == 0 /\ low6^0-low6^post0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l0 -> l2 : mid4^0'=mid4^post1, __const_8^0'=__const_8^post1, tmp^0'=tmp^post1, low6^0'=low6^post1, __const_14^0'=__const_14^post1, x2^0'=x2^post1, ret_binary_search7^0'=ret_binary_search7^post1, fvalue3^0'=fvalue3^post1, up5^0'=up5^post1, (0 == 0 /\ -ret_binary_search7^post1+ret_binary_search7^0 == 0 /\ mid4^0-mid4^post1 == 0 /\ tmp^0-tmp^post1 == 0 /\ -__const_8^post1+__const_8^0 == 0 /\ -x2^post1+x2^0 == 0 /\ -__const_14^post1+__const_14^0 == 0 /\ low6^0-low6^post1 == 0 /\ 1-low6^0+up5^post1 == 0), cost: 1
New rule:
l0 -> l2 : fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l1 : mid4^0'=mid4^post2, __const_8^0'=__const_8^post2, tmp^0'=tmp^post2, low6^0'=low6^post2, __const_14^0'=__const_14^post2, x2^0'=x2^post2, ret_binary_search7^0'=ret_binary_search7^post2, fvalue3^0'=fvalue3^post2, up5^0'=up5^post2, (__const_8^0-__const_8^post2 == 0 /\ fvalue3^0-fvalue3^post2 == 0 /\ -up5^post2+up5^0 == 0 /\ low6^0-low6^post2 == 0 /\ -x2^post2+x2^0 == 0 /\ mid4^0-mid4^post2 == 0 /\ tmp^0-tmp^post2 == 0 /\ ret_binary_search7^0-ret_binary_search7^post2 == 0 /\ -__const_14^post2+__const_14^0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l3 -> l0 : mid4^0'=mid4^post4, __const_8^0'=__const_8^post4, tmp^0'=tmp^post4, low6^0'=low6^post4, __const_14^0'=__const_14^post4, x2^0'=x2^post4, ret_binary_search7^0'=ret_binary_search7^post4, fvalue3^0'=fvalue3^post4, up5^0'=up5^post4, (0 == 0 /\ -ret_binary_search7^post4+ret_binary_search7^0 == 0 /\ -tmp^post4+tmp^0 == 0 /\ x2^0-x2^post4 == 0 /\ -low6^post4+low6^0 == 0 /\ -fvalue3^post4+fvalue3^0 == 0 /\ -up5^post4+up5^0 == 0 /\ __const_14^0-__const_14^post4 == 0 /\ low6^0-up5^0 <= 0 /\ __const_8^0-__const_8^post4 == 0), cost: 1
New rule:
l3 -> l0 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l3 : mid4^0'=mid4^post5, __const_8^0'=__const_8^post5, tmp^0'=tmp^post5, low6^0'=low6^post5, __const_14^0'=__const_14^post5, x2^0'=x2^post5, ret_binary_search7^0'=ret_binary_search7^post5, fvalue3^0'=fvalue3^post5, up5^0'=up5^post5, (-low6^post5+low6^0 == 0 /\ -__const_8^post5+__const_8^0 == 0 /\ -up5^post5+up5^0 == 0 /\ x2^0-x2^post5 == 0 /\ -fvalue3^post5+fvalue3^0 == 0 /\ mid4^0-mid4^post5 == 0 /\ tmp^0-tmp^post5 == 0 /\ -ret_binary_search7^post5+ret_binary_search7^0 == 0 /\ __const_14^0-__const_14^post5 == 0), cost: 1
New rule:
l2 -> l3 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l2 : mid4^0'=mid4^post6, __const_8^0'=__const_8^post6, tmp^0'=tmp^post6, low6^0'=low6^post6, __const_14^0'=__const_14^post6, x2^0'=x2^post6, ret_binary_search7^0'=ret_binary_search7^post6, fvalue3^0'=fvalue3^post6, up5^0'=up5^post6, (-x2^post6+x2^0 == 0 /\ tmp^0-tmp^post6 == 0 /\ -up5^post6+up5^0 == 0 /\ fvalue3^0-fvalue3^post6 == 0 /\ __const_8^0-__const_8^post6 == 0 /\ -1-mid4^0+low6^post6 == 0 /\ mid4^0-mid4^post6 == 0 /\ ret_binary_search7^0-ret_binary_search7^post6 == 0 /\ -__const_14^post6+__const_14^0 == 0), cost: 1
New rule:
l1 -> l2 : low6^0'=1+mid4^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l2 : mid4^0'=mid4^post7, __const_8^0'=__const_8^post7, tmp^0'=tmp^post7, low6^0'=low6^post7, __const_14^0'=__const_14^post7, x2^0'=x2^post7, ret_binary_search7^0'=ret_binary_search7^post7, fvalue3^0'=fvalue3^post7, up5^0'=up5^post7, (__const_8^0-__const_8^post7 == 0 /\ 1-mid4^0+up5^post7 == 0 /\ -tmp^post7+tmp^0 == 0 /\ -x2^post7+x2^0 == 0 /\ -__const_14^post7+__const_14^0 == 0 /\ ret_binary_search7^0-ret_binary_search7^post7 == 0 /\ -fvalue3^post7+fvalue3^0 == 0 /\ low6^0-low6^post7 == 0 /\ -mid4^post7+mid4^0 == 0), cost: 1
New rule:
l1 -> l2 : up5^0'=-1+mid4^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l2 : mid4^0'=mid4^post8, __const_8^0'=__const_8^post8, tmp^0'=tmp^post8, low6^0'=low6^post8, __const_14^0'=__const_14^post8, x2^0'=x2^post8, ret_binary_search7^0'=ret_binary_search7^post8, fvalue3^0'=fvalue3^post8, up5^0'=up5^post8, (1+fvalue3^post8 == 0 /\ __const_8^0-__const_8^post8 == 0 /\ __const_14^0-__const_14^post8 == 0 /\ ret_binary_search7^0-ret_binary_search7^post8 == 0 /\ low6^post8 == 0 /\ mid4^0-mid4^post8 == 0 /\ up5^post8-__const_14^0 == 0 /\ -tmp^post8+tmp^0 == 0 /\ x2^post8-__const_8^0 == 0), cost: 1
New rule:
l5 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l5 : mid4^0'=mid4^post9, __const_8^0'=__const_8^post9, tmp^0'=tmp^post9, low6^0'=low6^post9, __const_14^0'=__const_14^post9, x2^0'=x2^post9, ret_binary_search7^0'=ret_binary_search7^post9, fvalue3^0'=fvalue3^post9, up5^0'=up5^post9, (-up5^post9+up5^0 == 0 /\ -fvalue3^post9+fvalue3^0 == 0 /\ __const_14^0-__const_14^post9 == 0 /\ -ret_binary_search7^post9+ret_binary_search7^0 == 0 /\ x2^0-x2^post9 == 0 /\ tmp^0-tmp^post9 == 0 /\ -low6^post9+low6^0 == 0 /\ -__const_8^post9+__const_8^0 == 0 /\ mid4^0-mid4^post9 == 0), cost: 1
New rule:
l6 -> l5 : TRUE, cost: 1

Simplified rules
Start location: l6
  10: l0 -> l1 : TRUE, cost: 1
  11: l0 -> l2 : fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, 0 == 0, cost: 1
  14: l1 -> l2 : low6^0'=1+mid4^0, TRUE, cost: 1
  15: l1 -> l2 : up5^0'=-1+mid4^0, TRUE, cost: 1
  13: l2 -> l3 : TRUE, cost: 1
  12: l3 -> l0 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 1
  16: l5 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 1
  17: l6 -> l5 : TRUE, cost: 1


Eliminating location l5 by chaining:

Applied chaining
First rule:
l6 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 1
New rule:
l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2

Applied deletion
Removed the following rules: 16 17

Eliminating location l3 by chaining:

Applied chaining
First rule:
l2 -> l3 : TRUE, cost: 1
Second rule:
l3 -> l0 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 1
New rule:
l2 -> l0 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 12 13

Eliminated locations on linear paths
Start location: l6
  10: l0 -> l1 : TRUE, cost: 1
  11: l0 -> l2 : fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, 0 == 0, cost: 1
  14: l1 -> l2 : low6^0'=1+mid4^0, TRUE, cost: 1
  15: l1 -> l2 : up5^0'=-1+mid4^0, TRUE, cost: 1
  19: l2 -> l0 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 2
  18: l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l2 -> l0 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 2
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l2 -> l1 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 3

Applied chaining
First rule:
l2 -> l0 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 2
Second rule:
l0 -> l2 : fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, 0 == 0, cost: 1
New rule:
l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, (0 == 0 /\ low6^0-up5^0 <= 0), cost: 3

Applied simplification
Original rule:
l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, (0 == 0 /\ low6^0-up5^0 <= 0), cost: 3
New rule:
l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, low6^0-up5^0 <= 0, cost: 3

Applied deletion
Removed the following rules: 10 11 19

Eliminated locations on tree-shaped paths
Start location: l6
  14: l1 -> l2 : low6^0'=1+mid4^0, TRUE, cost: 1
  15: l1 -> l2 : up5^0'=-1+mid4^0, TRUE, cost: 1
  20: l2 -> l1 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 3
  21: l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, low6^0-up5^0 <= 0, cost: 3
  18: l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2


Accelerated simple loops
Start location: l6
  14: l1 -> l2 : low6^0'=1+mid4^0, TRUE, cost: 1
  15: l1 -> l2 : up5^0'=-1+mid4^0, TRUE, cost: 1
  20: l2 -> l1 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 3
  21: l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, low6^0-up5^0 <= 0, cost: 3
  18: l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2


Applied chaining
First rule:
l1 -> l2 : low6^0'=1+mid4^0, TRUE, cost: 1
Second rule:
l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, low6^0-up5^0 <= 0, cost: 3
New rule:
l1 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^0, fvalue3^0'=fvalue3^post1, up5^0'=mid4^0, 1+mid4^0-up5^0 <= 0, cost: 4

Applied chaining
First rule:
l1 -> l2 : up5^0'=-1+mid4^0, TRUE, cost: 1
Second rule:
l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, low6^0-up5^0 <= 0, cost: 3
New rule:
l1 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, 1-mid4^0+low6^0 <= 0, cost: 4

Applied chaining
First rule:
l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
Second rule:
l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, low6^0-up5^0 <= 0, cost: 3
New rule:
l6 -> l2 : mid4^0'=mid4^post4, low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=fvalue3^post1, up5^0'=-1, __const_14^0 >= 0, cost: 5

Applied deletion
Removed the following rules: 21

Chained accelerated rules with incoming rules
Start location: l6
  14: l1 -> l2 : low6^0'=1+mid4^0, TRUE, cost: 1
  15: l1 -> l2 : up5^0'=-1+mid4^0, TRUE, cost: 1
  22: l1 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^0, fvalue3^0'=fvalue3^post1, up5^0'=mid4^0, 1+mid4^0-up5^0 <= 0, cost: 4
  23: l1 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, 1-mid4^0+low6^0 <= 0, cost: 4
  20: l2 -> l1 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 3
  18: l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
  24: l6 -> l2 : mid4^0'=mid4^post4, low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=fvalue3^post1, up5^0'=-1, __const_14^0 >= 0, cost: 5


Eliminating location l1 by chaining:

Applied chaining
First rule:
l2 -> l1 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 3
Second rule:
l1 -> l2 : low6^0'=1+mid4^0, TRUE, cost: 1
New rule:
l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, low6^0-up5^0 <= 0, cost: 4

Applied chaining
First rule:
l2 -> l1 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 3
Second rule:
l1 -> l2 : up5^0'=-1+mid4^0, TRUE, cost: 1
New rule:
l2 -> l2 : mid4^0'=mid4^post4, up5^0'=-1+mid4^post4, low6^0-up5^0 <= 0, cost: 4

Applied chaining
First rule:
l2 -> l1 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 3
Second rule:
l1 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^0, fvalue3^0'=fvalue3^post1, up5^0'=mid4^0, 1+mid4^0-up5^0 <= 0, cost: 4
New rule:
l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=mid4^post4, (1+mid4^post4-up5^0 <= 0 /\ low6^0-up5^0 <= 0), cost: 7

Applied chaining
First rule:
l2 -> l1 : mid4^0'=mid4^post4, low6^0-up5^0 <= 0, cost: 3
Second rule:
l1 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, 1-mid4^0+low6^0 <= 0, cost: 4
New rule:
l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, (1+low6^0-mid4^post4 <= 0 /\ low6^0-up5^0 <= 0), cost: 7

Applied deletion
Removed the following rules: 14 15 20 22 23

Eliminated locations on tree-shaped paths
Start location: l6
  25: l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, low6^0-up5^0 <= 0, cost: 4
  26: l2 -> l2 : mid4^0'=mid4^post4, up5^0'=-1+mid4^post4, low6^0-up5^0 <= 0, cost: 4
  27: l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=mid4^post4, (1+mid4^post4-up5^0 <= 0 /\ low6^0-up5^0 <= 0), cost: 7
  28: l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, (1+low6^0-mid4^post4 <= 0 /\ low6^0-up5^0 <= 0), cost: 7
  18: l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
  24: l6 -> l2 : mid4^0'=mid4^post4, low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=fvalue3^post1, up5^0'=-1, __const_14^0 >= 0, cost: 5


Applied acceleration
Original rule:
l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, low6^0-up5^0 <= 0, cost: 4
New rule:
l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, (-1+n0 >= 0 /\ -low6^0+up5^0 >= 0 /\ -1-mid4^post4+up5^0 >= 0), cost: 4*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_comBLE.txt

Applied nonterm
Original rule:
l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, low6^0-up5^0 <= 0, cost: 4
New rule:
l2 -> [8] : (-low6^0+up5^0 >= 0 /\ 1-low6^0+mid4^post4 <= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_glLkbg.txt

Applied acceleration
Original rule:
l2 -> l2 : mid4^0'=mid4^post4, up5^0'=-1+mid4^post4, low6^0-up5^0 <= 0, cost: 4
New rule:
l2 -> l2 : mid4^0'=mid4^post4, up5^0'=-1+mid4^post4, (-1-low6^0+mid4^post4 >= 0 /\ -low6^0+up5^0 >= 0 /\ -1+n1 >= 0), cost: 4*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BONhOD.txt

Applied nonterm
Original rule:
l2 -> l2 : mid4^0'=mid4^post4, up5^0'=-1+mid4^post4, low6^0-up5^0 <= 0, cost: 4
New rule:
l2 -> [8] : (1-mid4^post4+up5^0 <= 0 /\ -low6^0+up5^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_helejg.txt

Applied deletion
Removed the following rules: 25 26

Accelerated simple loops
Start location: l6
  27: l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=mid4^post4, (1+mid4^post4-up5^0 <= 0 /\ low6^0-up5^0 <= 0), cost: 7
  28: l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, (1+low6^0-mid4^post4 <= 0 /\ low6^0-up5^0 <= 0), cost: 7
  29: l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, (-1+n0 >= 0 /\ -low6^0+up5^0 >= 0 /\ -1-mid4^post4+up5^0 >= 0), cost: 4*n0
  30: l2 -> [8] : (-low6^0+up5^0 >= 0 /\ 1-low6^0+mid4^post4 <= 0), cost: NONTERM
  31: l2 -> l2 : mid4^0'=mid4^post4, up5^0'=-1+mid4^post4, (-1-low6^0+mid4^post4 >= 0 /\ -low6^0+up5^0 >= 0 /\ -1+n1 >= 0), cost: 4*n1
  32: l2 -> [8] : (1-mid4^post4+up5^0 <= 0 /\ -low6^0+up5^0 >= 0), cost: NONTERM
  18: l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
  24: l6 -> l2 : mid4^0'=mid4^post4, low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=fvalue3^post1, up5^0'=-1, __const_14^0 >= 0, cost: 5


Applied chaining
First rule:
l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
Second rule:
l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=mid4^post4, (1+mid4^post4-up5^0 <= 0 /\ low6^0-up5^0 <= 0), cost: 7
New rule:
l6 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, x2^0'=__const_8^0, fvalue3^0'=fvalue3^post1, up5^0'=mid4^post4, (1-__const_14^0+mid4^post4 <= 0 /\ -__const_14^0 <= 0), cost: 9

Applied chaining
First rule:
l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
Second rule:
l2 -> l2 : mid4^0'=mid4^post4, fvalue3^0'=fvalue3^post1, up5^0'=-1+low6^0, (1+low6^0-mid4^post4 <= 0 /\ low6^0-up5^0 <= 0), cost: 7
New rule:
l6 -> l2 : mid4^0'=mid4^post4, low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=fvalue3^post1, up5^0'=-1, (-1+mid4^post4 >= 0 /\ __const_14^0 >= 0), cost: 9

Applied chaining
First rule:
l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
Second rule:
l2 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, (-1+n0 >= 0 /\ -low6^0+up5^0 >= 0 /\ -1-mid4^post4+up5^0 >= 0), cost: 4*n0
New rule:
l6 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, (-1+n0 >= 0 /\ __const_14^0 >= 0 /\ -1+__const_14^0-mid4^post4 >= 0), cost: 2+4*n0

Applied chaining
First rule:
l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
Second rule:
l2 -> [8] : (-low6^0+up5^0 >= 0 /\ 1-low6^0+mid4^post4 <= 0), cost: NONTERM
New rule:
l6 -> [8] : __const_14^0 >= 0, cost: NONTERM

Applied chaining
First rule:
l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
Second rule:
l2 -> l2 : mid4^0'=mid4^post4, up5^0'=-1+mid4^post4, (-1-low6^0+mid4^post4 >= 0 /\ -low6^0+up5^0 >= 0 /\ -1+n1 >= 0), cost: 4*n1
New rule:
l6 -> l2 : mid4^0'=mid4^post4, low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=-1+mid4^post4, (-1+mid4^post4 >= 0 /\ __const_14^0 >= 0 /\ -1+n1 >= 0), cost: 2+4*n1

Applied chaining
First rule:
l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
Second rule:
l2 -> [8] : (1-mid4^post4+up5^0 <= 0 /\ -low6^0+up5^0 >= 0), cost: NONTERM
New rule:
l6 -> [8] : __const_14^0 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 27 28 29 30 31 32

Chained accelerated rules with incoming rules
Start location: l6
  18: l6 -> l2 : low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, TRUE, cost: 2
  24: l6 -> l2 : mid4^0'=mid4^post4, low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=fvalue3^post1, up5^0'=-1, __const_14^0 >= 0, cost: 5
  33: l6 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, x2^0'=__const_8^0, fvalue3^0'=fvalue3^post1, up5^0'=mid4^post4, (1-__const_14^0+mid4^post4 <= 0 /\ -__const_14^0 <= 0), cost: 9
  34: l6 -> l2 : mid4^0'=mid4^post4, low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=fvalue3^post1, up5^0'=-1, (-1+mid4^post4 >= 0 /\ __const_14^0 >= 0), cost: 9
  35: l6 -> l2 : mid4^0'=mid4^post4, low6^0'=1+mid4^post4, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=__const_14^0, (-1+n0 >= 0 /\ __const_14^0 >= 0 /\ -1+__const_14^0-mid4^post4 >= 0), cost: 2+4*n0
  36: l6 -> [8] : __const_14^0 >= 0, cost: NONTERM
  37: l6 -> l2 : mid4^0'=mid4^post4, low6^0'=0, x2^0'=__const_8^0, fvalue3^0'=-1, up5^0'=-1+mid4^post4, (-1+mid4^post4 >= 0 /\ __const_14^0 >= 0 /\ -1+n1 >= 0), cost: 2+4*n1


Removed unreachable locations and irrelevant leafs
Start location: l6
  36: l6 -> [8] : __const_14^0 >= 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 36 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  __const_14^0 >= 0
