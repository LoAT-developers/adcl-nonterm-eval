NO

Initial ITS

Start location: __init
Program variables: arg1 arg10 arg11 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9
   0: f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p1, arg10'=arg10p1, arg11'=arg11p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ -arg2p1 == 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p2, arg10'=arg10p2, arg11'=arg11p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
   5: f1_0_main_Load -> f2736_0_main_InvokeMethod : arg1'=arg1p6, arg10'=arg10p6, arg11'=arg11p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, arg9'=arg9p6, (arg2p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
  13: f1_0_main_Load -> f716_0_random_GT : arg1'=arg1p14, arg10'=arg10p14, arg11'=arg11p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (arg1 > 0 /\ 1+arg2 > 0), cost: 1
   3: f243_0_main_InvokeMethod -> f337_0_createTree_Return : arg1'=arg1p4, arg10'=arg10p4, arg11'=arg11p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, arg8'=arg8p4, arg9'=arg9p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ arg1 > 0), cost: 1
   7: f243_0_main_InvokeMethod -> f2748_0_main_InvokeMethod : arg1'=arg1p8, arg10'=arg10p8, arg11'=arg11p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, arg9'=arg9p8, (arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
  14: f243_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p15, arg10'=arg10p15, arg11'=arg11p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+x79 > 0 /\ arg1 > 0), cost: 1
   2: f61_0_createTree_Return -> f243_0_main_InvokeMethod : arg1'=arg1p3, arg10'=arg10p3, arg11'=arg11p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, (-arg2p3 == 0 /\ arg1p3 > 0), cost: 1
   4: f337_0_createTree_Return -> f3774_0_lessleaves_NONNULL : arg1'=arg1p5, arg10'=arg10p5, arg11'=arg11p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (1+arg1p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ 1+arg4p5 > 0 /\ 1+arg2p5-arg1 <= 0 /\ 1+arg2p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ 1+arg3p5 > 0 /\ 1+arg4p5-arg1 <= 0 /\ arg1 > 0), cost: 1
  35: f3774_0_lessleaves_NONNULL -> f3815_0_append_Return : arg1'=arg1p36, arg10'=arg10p36, arg11'=arg11p36, arg2'=arg2p36, arg3'=arg3p36, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0), cost: 1
  36: f3774_0_lessleaves_NONNULL -> f3815_0_append_Return : arg1'=arg1p37, arg10'=arg10p37, arg11'=arg11p37, arg2'=arg2p37, arg3'=arg3p37, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (arg2p37-arg4 <= 0 /\ arg2p37 > 0 /\ arg3 > 0 /\ arg2p37-arg1 <= 0 /\ -4+arg1p37 > 0 /\ -arg2+arg1p37 <= 0 /\ -4+arg2 > 0 /\ 2+arg5p37-arg2 <= 0 /\ 4+arg6p37-arg2 <= 0 /\ arg4 > 0 /\ arg2p37-arg3 <= 0 /\ arg1 > 0 /\ -2+arg3p37 > 0), cost: 1
  37: f3774_0_lessleaves_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p38, arg10'=arg10p38, arg11'=arg11p38, arg2'=arg2p38, arg3'=arg3p38, arg4'=arg4p38, arg5'=arg5p38, arg6'=arg6p38, arg7'=arg7p38, arg8'=arg8p38, arg9'=arg9p38, (1+arg1p38 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ 1+arg1p38-arg2 <= 0 /\ arg1 > 0), cost: 1
  39: f3774_0_lessleaves_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p40, arg10'=arg10p40, arg11'=arg11p40, arg2'=arg2p40, arg3'=arg3p40, arg4'=arg4p40, arg5'=arg5p40, arg6'=arg6p40, arg7'=arg7p40, arg8'=arg8p40, arg9'=arg9p40, (arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg1p40-arg1 <= 0 /\ arg4 > 0 /\ 1+arg1p40 > 0 /\ arg1 > 0 /\ 1+arg1p40-arg4 <= 0 /\ 1-arg3+arg1p40 <= 0), cost: 1
  40: f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p41, arg10'=arg10p41, arg11'=arg11p41, arg2'=arg2p41, arg3'=arg3p41, arg4'=arg4p41, arg5'=arg5p41, arg6'=arg6p41, arg7'=arg7p41, arg8'=arg8p41, arg9'=arg9p41, (2+arg3p41-arg4 <= 0 /\ 2+arg4p41-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4p41 > 0 /\ 2+arg3p41-arg1 <= 0 /\ 2+arg2p41-arg2 <= 0 /\ 2+arg1p41-arg3 <= 0 /\ -1+arg3 > 0 /\ 2-arg3+arg4p41 <= 0 /\ 1+arg2p41 > 0 /\ 2+arg1p41-arg4 <= 0 /\ 1+arg3p41 > 0 /\ -1+arg4 > 0 /\ 2+arg1p41-arg1 <= 0 /\ 2-arg3+arg3p41 <= 0 /\ 1+arg1p41 > 0 /\ 2-arg4+arg4p41 <= 0 /\ -1+arg1 > 0), cost: 1
  42: f3774_0_lessleaves_NONNULL -> f4062_0_lessleaves_InvokeMethod : arg1'=arg1p43, arg10'=arg10p43, arg11'=arg11p43, arg2'=arg2p43, arg3'=arg3p43, arg4'=arg4p43, arg5'=arg5p43, arg6'=arg6p43, arg7'=arg7p43, arg8'=arg8p43, arg9'=arg9p43, (1+arg6p43 > 0 /\ 1+arg3p43 > 0 /\ -3+arg1 > 0 /\ arg2p43-arg3 <= 0 /\ 4+arg8p43-arg1 <= 0 /\ -arg2+arg1p43 <= 0 /\ 2+arg7p43-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg7p43-arg4 <= 0 /\ 4+arg8p43-arg4 <= 0 /\ -1+arg1p43 > 0 /\ -arg3+arg4p43 <= 0 /\ -3+arg4 > 0 /\ arg4p43-arg1 <= 0 /\ 2+arg6p43-arg2 <= 0 /\ 4+arg8p43-arg3 <= 0 /\ arg2p43-arg1 <= 0 /\ -3+arg3 > 0 /\ arg4p43 > 0 /\ -3+arg2p43 > 0 /\ arg4p43-arg4 <= 0 /\ arg2p43-arg4 <= 0 /\ 2+arg3p43-arg2 <= 0 /\ 2-arg3+arg7p43 <= 0), cost: 1
  43: f3774_0_lessleaves_NONNULL -> f4062_0_lessleaves_InvokeMethod : arg1'=arg1p44, arg10'=arg10p44, arg11'=arg11p44, arg2'=arg2p44, arg3'=arg3p44, arg4'=arg4p44, arg5'=arg5p44, arg6'=arg6p44, arg7'=arg7p44, arg8'=arg8p44, arg9'=arg9p44, (-4+arg4 > 0 /\ 2+arg7p44-arg3 <= 0 /\ 4+arg8p44-arg1 <= 0 /\ -1+arg2 > 0 /\ 4-arg3+arg8p44 <= 0 /\ -4+arg1 > 0 /\ 1+arg6p44 > 0 /\ 4+arg8p44-arg4 <= 0 /\ -1+arg1p44 > 0 /\ 1+arg3p44 > 0 /\ 2+arg7p44-arg1 <= 0 /\ 2-arg2+arg3p44 <= 0 /\ -2+arg4p44 > 0 /\ arg1p44-arg2 <= 0 /\ arg2p44-arg1 <= 0 /\ -4+arg2p44 > 0 /\ 2-arg2+arg6p44 <= 0 /\ -4+arg3 > 0 /\ 2+arg7p44-arg4 <= 0 /\ -arg3+arg2p44 <= 0 /\ arg2p44-arg4 <= 0), cost: 1
  10: f2736_0_main_InvokeMethod -> f2824_0_main_InvokeMethod : arg1'=arg1p11, arg10'=arg10p11, arg11'=arg11p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, arg7'=arg7p11, arg8'=arg8p11, arg9'=arg9p11, (arg2p11-arg2 <= 0 /\ arg1p11 > 0 /\ arg1p11-arg2 <= 0 /\ 2-arg2+arg4 <= 0 /\ arg1p11-arg1 <= 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ 2+arg4p11-arg2 <= 0 /\ arg1 > 0 /\ arg4-arg3p11 == 0), cost: 1
  12: f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p13, arg10'=arg10p13, arg11'=arg11p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, arg8'=arg8p13, arg9'=arg9p13, (arg4p13 > 0 /\ arg1p13 > 0 /\ arg2p13 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg3p13 > 0 /\ arg2p13-arg2 <= 0 /\ arg1 > 0), cost: 1
  15: f2736_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p16, arg10'=arg10p16, arg11'=arg11p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (1+x82 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
   6: f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (arg3-arg3p7 == 0 /\ -arg2+arg2p7 <= 0 /\ -arg4p7+arg4 == 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
   9: f2748_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p10, arg10'=arg10p10, arg11'=arg11p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, arg8'=arg8p10, arg9'=arg9p10, (1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
   8: f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ arg3-arg3p9 == 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
  11: f2824_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (arg2p12 > 0 /\ 1+arg3p12 > 0 /\ 1+arg3p12-arg1 <= 0 /\ arg2p12-arg2 <= 0 /\ 1-arg2+arg4p12 <= 0 /\ 1+arg4p12-arg1 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 1+arg1p12-arg1 <= 0 /\ 1-arg2+arg1p12 <= 0 /\ 1+arg3p12-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
  16: f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p17, arg10'=arg10p17, arg11'=arg11p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (-arg1p17 == 0 /\ 1+x88-arg3p17 == 0 /\ x88-arg2p17 < 0 /\ 1+x88 > 0), cost: 1
  17: f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p18, arg10'=arg10p18, arg11'=arg11p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (1-arg3p18+x90 == 0 /\ 1+x90 > 0 /\ 1+arg1p18 > 0 /\ -arg2p18+x90 < 0), cost: 1
  19: f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p20, arg10'=arg10p20, arg11'=arg11p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg3 > 0 /\ -arg4p20+arg2 == 0 /\ -1+arg1p20 > 0 /\ arg3-arg5p20 == 0 /\ -arg3p20+arg1 == 0 /\ arg1 > 0 /\ -1+arg2p20 > 0), cost: 1
  20: f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p21, arg10'=arg10p21, arg11'=arg11p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (-1+arg1p21 > 0 /\ arg3 > 0 /\ -arg3p21+arg1 == 0 /\ -1+arg2p21 > 0 /\ arg1 > 0 /\ arg2-arg4p21 == 0), cost: 1
  48: f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg2'=arg2p49, arg3'=arg3p49, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (-arg3p49+arg3 == 0 /\ arg3 > 0 /\ arg2-arg2p49 == 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
  18: f1037_0_createNode_Return -> f2703_0_createTree_LE : arg1'=arg1p19, arg10'=arg10p19, arg11'=arg11p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (-arg4p19+arg2 == 0 /\ -1+arg1p19 > 0 /\ arg3-arg5p19 == 0 /\ -arg3p19+arg1 == 0 /\ -1+arg2p19 > 0), cost: 1
  21: f2703_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1p22, arg10'=arg10p22, arg11'=arg11p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (arg5-arg4 >= 0 /\ -arg2+arg3p22 <= 0 /\ 1+arg4p22 > 0 /\ arg3 > 0 /\ 2+arg8p22-arg1 <= 0 /\ arg2p22 > 0 /\ -arg1p22+arg3 == 0 /\ 1+arg4 > 0 /\ -arg5p22+arg4 == 0 /\ 2+arg7p22-arg1 <= 0 /\ arg2 > 0 /\ arg3p22 > 0 /\ 1-arg2+arg4p22 <= 0 /\ arg5-arg6p22 == 0 /\ 2+arg9p22-arg2 <= 0 /\ arg2p22-arg1 <= 0 /\ arg1 > 0), cost: 1
  25: f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg1p26, arg10'=arg10p26, arg11'=arg11p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (arg5-arg4 < 0 /\ arg2p26 > 0 /\ arg3p26-arg2 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ -arg4p26 == 0 /\ arg3p26 > 0 /\ 1+arg4 > 0 /\ 2+arg8p26-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p26-arg1 <= 0 /\ arg2p26-arg1 <= 0 /\ 1-arg6p26+arg5 == 0 /\ arg3-arg1p26 == 0 /\ arg4-arg5p26 == 0 /\ arg1 > 0), cost: 1
  26: f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg1p27, arg10'=arg10p27, arg11'=arg11p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5p27, arg6'=arg6p27, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (arg5-arg4 < 0 /\ 1+arg4p27 > 0 /\ arg3p27 > 0 /\ arg3p27-arg2 <= 0 /\ 1+arg5 > 0 /\ arg2p27-arg1 <= 0 /\ -arg1p27+arg3 == 0 /\ arg3 > 0 /\ -arg5p27+arg4 == 0 /\ 1+arg4 > 0 /\ arg2p27 > 0 /\ 2+arg8p27-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p27-arg1 <= 0 /\ 1-arg6p27+arg5 == 0 /\ arg1 > 0), cost: 1
  22: f2820_0_createTree_NONNULL -> f2703_0_createTree_LE : arg1'=arg1p23, arg10'=arg10p23, arg11'=arg11p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (2-arg3+arg2p23 <= 0 /\ arg5-arg4p23 == 0 /\ 2+arg9-arg3 <= 0 /\ arg1p23-arg2 <= 0 /\ arg1p23 > 0 /\ -1-arg3p23+arg1 == 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg6-arg5p23 == 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p23 > 0 /\ -arg4+arg2p23 <= 0), cost: 1
  23: f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1p24, arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (arg9-arg7p24 == 0 /\ -1+arg3p24 > 0 /\ -arg5p24+arg6 == 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ -arg1p24+arg1 == 0 /\ 1+arg4 > 0 /\ -arg6p24+arg8 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg5-arg4p24 == 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
  24: f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1p25, arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (-arg1p25+arg1 == 0 /\ arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ arg8-arg6p25 == 0 /\ -arg4p25+arg5 == 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ arg9-arg7p25 == 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  49: f2820_0_createTree_NONNULL -> f2045_0_random_GT : arg1'=arg1p50, arg10'=arg10p50, arg11'=arg11p50, arg2'=arg2p50, arg3'=arg3p50, arg4'=arg4p50, arg5'=arg5p50, arg6'=arg6p50, arg7'=arg7p50, arg8'=arg8p50, arg9'=arg9p50, (1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2p50+arg5 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg6-arg3p50 == 0 /\ arg1 > 0), cost: 1
  27: f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg5p28, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ -arg5p28+arg5 == 0 /\ -arg4p28+arg4 == 0 /\ arg1p28 > 0 /\ -1-arg3p28+arg1 == 0), cost: 1
  28: f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg5p29, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (-2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg5-arg5p29 == 0 /\ -arg4p29+arg4 == 0 /\ -1+arg1-arg3p29 == 0 /\ arg6-arg7 == 0), cost: 1
  29: f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1p30, arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5p30, arg6'=arg6p30, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg3 > 0 /\ arg3p30 > 0 /\ arg6-arg6p30 == 0 /\ arg5-arg5p30 == 0 /\ arg8-arg8p30 == 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ -arg7p30+arg7 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg1p30+arg1 == 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
  30: f2969_0_createTree_LE -> f2703_0_createTree_LE : arg1'=arg1p31, arg10'=arg10p31, arg11'=arg11p31, arg2'=arg2p31, arg3'=arg3p31, arg4'=arg4p31, arg5'=arg5p31, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (arg1p31 > 0 /\ 2-arg3+arg2p31 <= 0 /\ arg2p31 > 0 /\ arg5-arg4p31 == 0 /\ arg1p31-arg2 <= 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1-arg3p31+arg1 == 0 /\ arg6-arg5p31 == 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0), cost: 1
  31: f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1p32, arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg4p32, arg5'=arg5p32, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ arg5-arg4p32 == 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ -arg1p32+arg1 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ arg6-arg5p32 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg6p32+arg7 == 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
  32: f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1p33, arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg4p33, arg5'=arg5p33, arg6'=arg6p33, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (arg6 > 0 /\ -arg4p33+arg5 == 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ -arg1p33+arg1 == 0 /\ 2+arg7p33-arg3 <= 0 /\ arg7-arg6p33 == 0 /\ arg1 > 0), cost: 1
  50: f2969_0_createTree_LE -> f2045_0_random_GT : arg1'=arg1p51, arg10'=arg10p51, arg11'=arg11p51, arg2'=arg2p51, arg3'=arg3p51, arg4'=arg4p51, arg5'=arg5p51, arg6'=arg6p51, arg7'=arg7p51, arg8'=arg8p51, arg9'=arg9p51, (arg6 > 0 /\ 1+arg5 > 0 /\ arg6-arg3p51 == 0 /\ -1+arg3 > 0 /\ arg5-arg2p51 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg1 > 0), cost: 1
  33: f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=arg3p34, arg4'=arg4p34, arg5'=arg5p34, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1-arg3p34+arg1 == 0 /\ -1+arg3 > 0 /\ arg5-arg5p34 == 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0 /\ -arg4p34+arg4 == 0), cost: 1
  34: f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=arg3p35, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (-arg5p35+arg5 == 0 /\ -arg4p35+arg4 == 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1-arg3p35+arg1 == 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
  38: f3815_0_append_Return -> f3836_0_append_NONNULL : arg1'=arg1p39, arg10'=arg10p39, arg11'=arg11p39, arg2'=arg2p39, arg3'=arg3p39, arg4'=arg4p39, arg5'=arg5p39, arg6'=arg6p39, arg7'=arg7p39, arg8'=arg8p39, arg9'=arg9p39, (-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg6-arg1 <= 0 /\ 1+arg1p39 > 0 /\ arg2 > 0 /\ 1+arg1p39-arg2 <= 0), cost: 1
  41: f3815_0_append_Return -> f3774_0_lessleaves_NONNULL : arg1'=arg1p42, arg10'=arg10p42, arg11'=arg11p42, arg2'=arg2p42, arg3'=arg3p42, arg4'=arg4p42, arg5'=arg5p42, arg6'=arg6p42, arg7'=arg7p42, arg8'=arg8p42, arg9'=arg9p42, (-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ 1+arg3p42 > 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg4p42-arg2 <= 0 /\ 1+arg4p42 > 0 /\ 1+arg1p42 > 0 /\ 2+arg1p42-arg2 <= 0 /\ 4+arg6-arg1 <= 0 /\ arg2p42 > 0 /\ -arg3+arg2p42 <= 0 /\ 2-arg2+arg3p42 <= 0), cost: 1
  44: f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p45, arg10'=arg10p45, arg11'=arg11p45, arg2'=arg2p45, arg3'=arg3p45, arg4'=arg4p45, arg5'=arg5p45, arg6'=arg6p45, arg7'=arg7p45, arg8'=arg8p45, arg9'=arg9p45, (-2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ arg6-arg10p45 == 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ arg4-arg5p45 == 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0 /\ -arg6p45+arg5 == 0), cost: 1
  45: f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p46, arg10'=arg10p46, arg11'=arg11p46, arg2'=arg2p46, arg3'=arg3p46, arg4'=arg4p46, arg5'=arg5p46, arg6'=arg6p46, arg7'=arg7p46, arg8'=arg8p46, arg9'=arg9p46, (arg2p46-arg2 <= 0 /\ arg5-arg6p46 == 0 /\ -2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ -arg3+arg3p46 <= 0 /\ arg1p46-arg1 <= 0 /\ arg3 > 0 /\ arg6-arg10p46 == 0 /\ 2+arg5-arg1 <= 0 /\ 4-arg2+arg11p46 <= 0 /\ 4+arg6-arg1 <= 0 /\ -4+arg2p46 > 0 /\ -arg5p46+arg4 == 0 /\ -2+arg4p46 > 0 /\ -4+arg2 > 0 /\ 4+arg7p46-arg1 <= 0 /\ -2+arg1p46 > 0 /\ 2-arg3+arg9p46 <= 0 /\ arg3p46 > 0 /\ 2+arg8p46-arg2 <= 0), cost: 1
  51: f3836_0_append_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p52, arg10'=arg10p52, arg11'=arg11p52, arg2'=arg2p52, arg3'=arg3p52, arg4'=arg4p52, arg5'=arg5p52, arg6'=arg6p52, arg7'=arg7p52, arg8'=arg8p52, arg9'=arg9p52, (1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0), cost: 1
  46: f4062_0_lessleaves_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p47, arg10'=arg10p47, arg11'=arg11p47, arg2'=arg2p47, arg3'=arg3p47, arg4'=arg4p47, arg5'=arg5p47, arg6'=arg6p47, arg7'=arg7p47, arg8'=arg8p47, arg9'=arg9p47, (2+arg8-arg4 <= 0 /\ -arg3+arg2p47 <= 0 /\ 1+arg2p47 > 0 /\ arg3p47 > 0 /\ 4+arg8-arg2 <= 0 /\ 2-arg1+arg2p47 <= 0 /\ arg1p47-arg4 <= 0 /\ -arg6+arg2p47 <= 0 /\ arg4p47 > 0 /\ 1+arg3 > 0 /\ arg4p47-arg4 <= 0 /\ arg1p47 > 0 /\ 2-arg2+arg7 <= 0 /\ -2+arg2 > 0 /\ arg4 > 0 /\ arg3p47-arg4 <= 0 /\ 1+arg6 > 0 /\ -1+arg1 > 0), cost: 1
  47: f4063_0_lessleaves_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-2+arg1 > 0 /\ 4+arg7-arg1 <= 0 /\ arg3 > 0 /\ arg2p48 > 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg2p48 <= 0 /\ arg3p48 > 0 /\ arg3p48-arg4 <= 0 /\ -arg4+arg1p48 <= 0 /\ 2+arg8-arg2 <= 0 /\ -arg4+arg4p48 <= 0 /\ 4+arg10-arg1 <= 0 /\ 2+arg6-arg1 <= 0 /\ 2+arg11-arg4 <= 0 /\ -2+arg2 > 0 /\ 2-arg3+arg10 <= 0 /\ arg4 > 0 /\ arg4p48 > 0 /\ arg1p48 > 0 /\ 4+arg11-arg2 <= 0), cost: 1
  52: __init -> f1_0_main_Load : arg1'=arg1p53, arg10'=arg10p53, arg11'=arg11p53, arg2'=arg2p53, arg3'=arg3p53, arg4'=arg4p53, arg5'=arg5p53, arg6'=arg6p53, arg7'=arg7p53, arg8'=arg8p53, arg9'=arg9p53, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg10 arg11 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9
   0: f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p1, arg10'=arg10p1, arg11'=arg11p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ -arg2p1 == 0 /\ arg1 > 0), cost: 1
   1: f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p2, arg10'=arg10p2, arg11'=arg11p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
   5: f1_0_main_Load -> f2736_0_main_InvokeMethod : arg1'=arg1p6, arg10'=arg10p6, arg11'=arg11p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, arg9'=arg9p6, (arg2p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
  13: f1_0_main_Load -> f716_0_random_GT : arg1'=arg1p14, arg10'=arg10p14, arg11'=arg11p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (arg1 > 0 /\ 1+arg2 > 0), cost: 1
   7: f243_0_main_InvokeMethod -> f2748_0_main_InvokeMethod : arg1'=arg1p8, arg10'=arg10p8, arg11'=arg11p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, arg9'=arg9p8, (arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
  14: f243_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p15, arg10'=arg10p15, arg11'=arg11p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+x79 > 0 /\ arg1 > 0), cost: 1
  53: f243_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p5, arg10'=arg10p5, arg11'=arg11p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (1+arg3p5-arg1p4 <= 0 /\ 1+arg1p5 > 0 /\ arg1p4-arg1 <= 0 /\ 1+arg4p5-arg1p4 <= 0 /\ 1+arg4p5 > 0 /\ 1-arg1p4+arg2p5 <= 0 /\ 1+arg2p5 > 0 /\ arg1p4 > 0 /\ 1+arg3p5 > 0 /\ 1+arg1p5-arg1p4 <= 0 /\ arg1 > 0), cost: 1
   2: f61_0_createTree_Return -> f243_0_main_InvokeMethod : arg1'=arg1p3, arg10'=arg10p3, arg11'=arg11p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, (-arg2p3 == 0 /\ arg1p3 > 0), cost: 1
  35: f3774_0_lessleaves_NONNULL -> f3815_0_append_Return : arg1'=arg1p36, arg10'=arg10p36, arg11'=arg11p36, arg2'=arg2p36, arg3'=arg3p36, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0), cost: 1
  36: f3774_0_lessleaves_NONNULL -> f3815_0_append_Return : arg1'=arg1p37, arg10'=arg10p37, arg11'=arg11p37, arg2'=arg2p37, arg3'=arg3p37, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (arg2p37-arg4 <= 0 /\ arg2p37 > 0 /\ arg3 > 0 /\ arg2p37-arg1 <= 0 /\ -4+arg1p37 > 0 /\ -arg2+arg1p37 <= 0 /\ -4+arg2 > 0 /\ 2+arg5p37-arg2 <= 0 /\ 4+arg6p37-arg2 <= 0 /\ arg4 > 0 /\ arg2p37-arg3 <= 0 /\ arg1 > 0 /\ -2+arg3p37 > 0), cost: 1
  37: f3774_0_lessleaves_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p38, arg10'=arg10p38, arg11'=arg11p38, arg2'=arg2p38, arg3'=arg3p38, arg4'=arg4p38, arg5'=arg5p38, arg6'=arg6p38, arg7'=arg7p38, arg8'=arg8p38, arg9'=arg9p38, (1+arg1p38 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ 1+arg1p38-arg2 <= 0 /\ arg1 > 0), cost: 1
  39: f3774_0_lessleaves_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p40, arg10'=arg10p40, arg11'=arg11p40, arg2'=arg2p40, arg3'=arg3p40, arg4'=arg4p40, arg5'=arg5p40, arg6'=arg6p40, arg7'=arg7p40, arg8'=arg8p40, arg9'=arg9p40, (arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg1p40-arg1 <= 0 /\ arg4 > 0 /\ 1+arg1p40 > 0 /\ arg1 > 0 /\ 1+arg1p40-arg4 <= 0 /\ 1-arg3+arg1p40 <= 0), cost: 1
  40: f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p41, arg10'=arg10p41, arg11'=arg11p41, arg2'=arg2p41, arg3'=arg3p41, arg4'=arg4p41, arg5'=arg5p41, arg6'=arg6p41, arg7'=arg7p41, arg8'=arg8p41, arg9'=arg9p41, (2+arg3p41-arg4 <= 0 /\ 2+arg4p41-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4p41 > 0 /\ 2+arg3p41-arg1 <= 0 /\ 2+arg2p41-arg2 <= 0 /\ 2+arg1p41-arg3 <= 0 /\ -1+arg3 > 0 /\ 2-arg3+arg4p41 <= 0 /\ 1+arg2p41 > 0 /\ 2+arg1p41-arg4 <= 0 /\ 1+arg3p41 > 0 /\ -1+arg4 > 0 /\ 2+arg1p41-arg1 <= 0 /\ 2-arg3+arg3p41 <= 0 /\ 1+arg1p41 > 0 /\ 2-arg4+arg4p41 <= 0 /\ -1+arg1 > 0), cost: 1
  42: f3774_0_lessleaves_NONNULL -> f4062_0_lessleaves_InvokeMethod : arg1'=arg1p43, arg10'=arg10p43, arg11'=arg11p43, arg2'=arg2p43, arg3'=arg3p43, arg4'=arg4p43, arg5'=arg5p43, arg6'=arg6p43, arg7'=arg7p43, arg8'=arg8p43, arg9'=arg9p43, (1+arg6p43 > 0 /\ 1+arg3p43 > 0 /\ -3+arg1 > 0 /\ arg2p43-arg3 <= 0 /\ 4+arg8p43-arg1 <= 0 /\ -arg2+arg1p43 <= 0 /\ 2+arg7p43-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg7p43-arg4 <= 0 /\ 4+arg8p43-arg4 <= 0 /\ -1+arg1p43 > 0 /\ -arg3+arg4p43 <= 0 /\ -3+arg4 > 0 /\ arg4p43-arg1 <= 0 /\ 2+arg6p43-arg2 <= 0 /\ 4+arg8p43-arg3 <= 0 /\ arg2p43-arg1 <= 0 /\ -3+arg3 > 0 /\ arg4p43 > 0 /\ -3+arg2p43 > 0 /\ arg4p43-arg4 <= 0 /\ arg2p43-arg4 <= 0 /\ 2+arg3p43-arg2 <= 0 /\ 2-arg3+arg7p43 <= 0), cost: 1
  43: f3774_0_lessleaves_NONNULL -> f4062_0_lessleaves_InvokeMethod : arg1'=arg1p44, arg10'=arg10p44, arg11'=arg11p44, arg2'=arg2p44, arg3'=arg3p44, arg4'=arg4p44, arg5'=arg5p44, arg6'=arg6p44, arg7'=arg7p44, arg8'=arg8p44, arg9'=arg9p44, (-4+arg4 > 0 /\ 2+arg7p44-arg3 <= 0 /\ 4+arg8p44-arg1 <= 0 /\ -1+arg2 > 0 /\ 4-arg3+arg8p44 <= 0 /\ -4+arg1 > 0 /\ 1+arg6p44 > 0 /\ 4+arg8p44-arg4 <= 0 /\ -1+arg1p44 > 0 /\ 1+arg3p44 > 0 /\ 2+arg7p44-arg1 <= 0 /\ 2-arg2+arg3p44 <= 0 /\ -2+arg4p44 > 0 /\ arg1p44-arg2 <= 0 /\ arg2p44-arg1 <= 0 /\ -4+arg2p44 > 0 /\ 2-arg2+arg6p44 <= 0 /\ -4+arg3 > 0 /\ 2+arg7p44-arg4 <= 0 /\ -arg3+arg2p44 <= 0 /\ arg2p44-arg4 <= 0), cost: 1
  12: f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p13, arg10'=arg10p13, arg11'=arg11p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, arg8'=arg8p13, arg9'=arg9p13, (arg4p13 > 0 /\ arg1p13 > 0 /\ arg2p13 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg3p13 > 0 /\ arg2p13-arg2 <= 0 /\ arg1 > 0), cost: 1
  15: f2736_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p16, arg10'=arg10p16, arg11'=arg11p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (1+x82 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
  54: f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (1-arg2p11+arg4p12 <= 0 /\ arg2p11-arg2 <= 0 /\ arg2p12 > 0 /\ 1+arg3p12 > 0 /\ arg2p12-arg2p11 <= 0 /\ 1-arg1p11+arg4p12 <= 0 /\ arg1p11 > 0 /\ arg1p11-arg2 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p11-arg1 <= 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 1-arg1p11+arg1p12 <= 0 /\ 2-arg2p11+arg3p11 <= 0 /\ 2+arg4p11-arg2 <= 0 /\ 2+arg4p11-arg2p11 <= 0 /\ arg1 > 0 /\ arg4-arg3p11 == 0 /\ 1-arg1p11+arg3p12 <= 0 /\ 1-arg2p11+arg1p12 <= 0 /\ 1+arg3p12-arg2p11 <= 0), cost: 1
   6: f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (arg3-arg3p7 == 0 /\ -arg2+arg2p7 <= 0 /\ -arg4p7+arg4 == 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
   9: f2748_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p10, arg10'=arg10p10, arg11'=arg11p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, arg8'=arg8p10, arg9'=arg9p10, (1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
   8: f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ arg3-arg3p9 == 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
  16: f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p17, arg10'=arg10p17, arg11'=arg11p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (-arg1p17 == 0 /\ 1+x88-arg3p17 == 0 /\ x88-arg2p17 < 0 /\ 1+x88 > 0), cost: 1
  17: f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p18, arg10'=arg10p18, arg11'=arg11p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (1-arg3p18+x90 == 0 /\ 1+x90 > 0 /\ 1+arg1p18 > 0 /\ -arg2p18+x90 < 0), cost: 1
  19: f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p20, arg10'=arg10p20, arg11'=arg11p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg3 > 0 /\ -arg4p20+arg2 == 0 /\ -1+arg1p20 > 0 /\ arg3-arg5p20 == 0 /\ -arg3p20+arg1 == 0 /\ arg1 > 0 /\ -1+arg2p20 > 0), cost: 1
  20: f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p21, arg10'=arg10p21, arg11'=arg11p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (-1+arg1p21 > 0 /\ arg3 > 0 /\ -arg3p21+arg1 == 0 /\ -1+arg2p21 > 0 /\ arg1 > 0 /\ arg2-arg4p21 == 0), cost: 1
  48: f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg2'=arg2p49, arg3'=arg3p49, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (-arg3p49+arg3 == 0 /\ arg3 > 0 /\ arg2-arg2p49 == 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
  18: f1037_0_createNode_Return -> f2703_0_createTree_LE : arg1'=arg1p19, arg10'=arg10p19, arg11'=arg11p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (-arg4p19+arg2 == 0 /\ -1+arg1p19 > 0 /\ arg3-arg5p19 == 0 /\ -arg3p19+arg1 == 0 /\ -1+arg2p19 > 0), cost: 1
  21: f2703_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1p22, arg10'=arg10p22, arg11'=arg11p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (arg5-arg4 >= 0 /\ -arg2+arg3p22 <= 0 /\ 1+arg4p22 > 0 /\ arg3 > 0 /\ 2+arg8p22-arg1 <= 0 /\ arg2p22 > 0 /\ -arg1p22+arg3 == 0 /\ 1+arg4 > 0 /\ -arg5p22+arg4 == 0 /\ 2+arg7p22-arg1 <= 0 /\ arg2 > 0 /\ arg3p22 > 0 /\ 1-arg2+arg4p22 <= 0 /\ arg5-arg6p22 == 0 /\ 2+arg9p22-arg2 <= 0 /\ arg2p22-arg1 <= 0 /\ arg1 > 0), cost: 1
  25: f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg1p26, arg10'=arg10p26, arg11'=arg11p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (arg5-arg4 < 0 /\ arg2p26 > 0 /\ arg3p26-arg2 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ -arg4p26 == 0 /\ arg3p26 > 0 /\ 1+arg4 > 0 /\ 2+arg8p26-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p26-arg1 <= 0 /\ arg2p26-arg1 <= 0 /\ 1-arg6p26+arg5 == 0 /\ arg3-arg1p26 == 0 /\ arg4-arg5p26 == 0 /\ arg1 > 0), cost: 1
  26: f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg1p27, arg10'=arg10p27, arg11'=arg11p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5p27, arg6'=arg6p27, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (arg5-arg4 < 0 /\ 1+arg4p27 > 0 /\ arg3p27 > 0 /\ arg3p27-arg2 <= 0 /\ 1+arg5 > 0 /\ arg2p27-arg1 <= 0 /\ -arg1p27+arg3 == 0 /\ arg3 > 0 /\ -arg5p27+arg4 == 0 /\ 1+arg4 > 0 /\ arg2p27 > 0 /\ 2+arg8p27-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p27-arg1 <= 0 /\ 1-arg6p27+arg5 == 0 /\ arg1 > 0), cost: 1
  22: f2820_0_createTree_NONNULL -> f2703_0_createTree_LE : arg1'=arg1p23, arg10'=arg10p23, arg11'=arg11p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (2-arg3+arg2p23 <= 0 /\ arg5-arg4p23 == 0 /\ 2+arg9-arg3 <= 0 /\ arg1p23-arg2 <= 0 /\ arg1p23 > 0 /\ -1-arg3p23+arg1 == 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg6-arg5p23 == 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p23 > 0 /\ -arg4+arg2p23 <= 0), cost: 1
  23: f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1p24, arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (arg9-arg7p24 == 0 /\ -1+arg3p24 > 0 /\ -arg5p24+arg6 == 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ -arg1p24+arg1 == 0 /\ 1+arg4 > 0 /\ -arg6p24+arg8 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg5-arg4p24 == 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
  24: f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1p25, arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (-arg1p25+arg1 == 0 /\ arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ arg8-arg6p25 == 0 /\ -arg4p25+arg5 == 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ arg9-arg7p25 == 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  49: f2820_0_createTree_NONNULL -> f2045_0_random_GT : arg1'=arg1p50, arg10'=arg10p50, arg11'=arg11p50, arg2'=arg2p50, arg3'=arg3p50, arg4'=arg4p50, arg5'=arg5p50, arg6'=arg6p50, arg7'=arg7p50, arg8'=arg8p50, arg9'=arg9p50, (1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2p50+arg5 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg6-arg3p50 == 0 /\ arg1 > 0), cost: 1
  27: f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg5p28, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ -arg5p28+arg5 == 0 /\ -arg4p28+arg4 == 0 /\ arg1p28 > 0 /\ -1-arg3p28+arg1 == 0), cost: 1
  28: f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg5p29, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (-2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg5-arg5p29 == 0 /\ -arg4p29+arg4 == 0 /\ -1+arg1-arg3p29 == 0 /\ arg6-arg7 == 0), cost: 1
  29: f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1p30, arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5p30, arg6'=arg6p30, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg3 > 0 /\ arg3p30 > 0 /\ arg6-arg6p30 == 0 /\ arg5-arg5p30 == 0 /\ arg8-arg8p30 == 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ -arg7p30+arg7 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg1p30+arg1 == 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
  30: f2969_0_createTree_LE -> f2703_0_createTree_LE : arg1'=arg1p31, arg10'=arg10p31, arg11'=arg11p31, arg2'=arg2p31, arg3'=arg3p31, arg4'=arg4p31, arg5'=arg5p31, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (arg1p31 > 0 /\ 2-arg3+arg2p31 <= 0 /\ arg2p31 > 0 /\ arg5-arg4p31 == 0 /\ arg1p31-arg2 <= 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1-arg3p31+arg1 == 0 /\ arg6-arg5p31 == 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0), cost: 1
  31: f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1p32, arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg4p32, arg5'=arg5p32, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ arg5-arg4p32 == 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ -arg1p32+arg1 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ arg6-arg5p32 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg6p32+arg7 == 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
  32: f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1p33, arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg4p33, arg5'=arg5p33, arg6'=arg6p33, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (arg6 > 0 /\ -arg4p33+arg5 == 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ -arg1p33+arg1 == 0 /\ 2+arg7p33-arg3 <= 0 /\ arg7-arg6p33 == 0 /\ arg1 > 0), cost: 1
  50: f2969_0_createTree_LE -> f2045_0_random_GT : arg1'=arg1p51, arg10'=arg10p51, arg11'=arg11p51, arg2'=arg2p51, arg3'=arg3p51, arg4'=arg4p51, arg5'=arg5p51, arg6'=arg6p51, arg7'=arg7p51, arg8'=arg8p51, arg9'=arg9p51, (arg6 > 0 /\ 1+arg5 > 0 /\ arg6-arg3p51 == 0 /\ -1+arg3 > 0 /\ arg5-arg2p51 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg1 > 0), cost: 1
  33: f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=arg3p34, arg4'=arg4p34, arg5'=arg5p34, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1-arg3p34+arg1 == 0 /\ -1+arg3 > 0 /\ arg5-arg5p34 == 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0 /\ -arg4p34+arg4 == 0), cost: 1
  34: f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=arg3p35, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (-arg5p35+arg5 == 0 /\ -arg4p35+arg4 == 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1-arg3p35+arg1 == 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
  38: f3815_0_append_Return -> f3836_0_append_NONNULL : arg1'=arg1p39, arg10'=arg10p39, arg11'=arg11p39, arg2'=arg2p39, arg3'=arg3p39, arg4'=arg4p39, arg5'=arg5p39, arg6'=arg6p39, arg7'=arg7p39, arg8'=arg8p39, arg9'=arg9p39, (-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg6-arg1 <= 0 /\ 1+arg1p39 > 0 /\ arg2 > 0 /\ 1+arg1p39-arg2 <= 0), cost: 1
  41: f3815_0_append_Return -> f3774_0_lessleaves_NONNULL : arg1'=arg1p42, arg10'=arg10p42, arg11'=arg11p42, arg2'=arg2p42, arg3'=arg3p42, arg4'=arg4p42, arg5'=arg5p42, arg6'=arg6p42, arg7'=arg7p42, arg8'=arg8p42, arg9'=arg9p42, (-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ 1+arg3p42 > 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg4p42-arg2 <= 0 /\ 1+arg4p42 > 0 /\ 1+arg1p42 > 0 /\ 2+arg1p42-arg2 <= 0 /\ 4+arg6-arg1 <= 0 /\ arg2p42 > 0 /\ -arg3+arg2p42 <= 0 /\ 2-arg2+arg3p42 <= 0), cost: 1
  44: f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p45, arg10'=arg10p45, arg11'=arg11p45, arg2'=arg2p45, arg3'=arg3p45, arg4'=arg4p45, arg5'=arg5p45, arg6'=arg6p45, arg7'=arg7p45, arg8'=arg8p45, arg9'=arg9p45, (-2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ arg6-arg10p45 == 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ arg4-arg5p45 == 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0 /\ -arg6p45+arg5 == 0), cost: 1
  45: f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p46, arg10'=arg10p46, arg11'=arg11p46, arg2'=arg2p46, arg3'=arg3p46, arg4'=arg4p46, arg5'=arg5p46, arg6'=arg6p46, arg7'=arg7p46, arg8'=arg8p46, arg9'=arg9p46, (arg2p46-arg2 <= 0 /\ arg5-arg6p46 == 0 /\ -2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ -arg3+arg3p46 <= 0 /\ arg1p46-arg1 <= 0 /\ arg3 > 0 /\ arg6-arg10p46 == 0 /\ 2+arg5-arg1 <= 0 /\ 4-arg2+arg11p46 <= 0 /\ 4+arg6-arg1 <= 0 /\ -4+arg2p46 > 0 /\ -arg5p46+arg4 == 0 /\ -2+arg4p46 > 0 /\ -4+arg2 > 0 /\ 4+arg7p46-arg1 <= 0 /\ -2+arg1p46 > 0 /\ 2-arg3+arg9p46 <= 0 /\ arg3p46 > 0 /\ 2+arg8p46-arg2 <= 0), cost: 1
  51: f3836_0_append_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p52, arg10'=arg10p52, arg11'=arg11p52, arg2'=arg2p52, arg3'=arg3p52, arg4'=arg4p52, arg5'=arg5p52, arg6'=arg6p52, arg7'=arg7p52, arg8'=arg8p52, arg9'=arg9p52, (1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0), cost: 1
  46: f4062_0_lessleaves_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p47, arg10'=arg10p47, arg11'=arg11p47, arg2'=arg2p47, arg3'=arg3p47, arg4'=arg4p47, arg5'=arg5p47, arg6'=arg6p47, arg7'=arg7p47, arg8'=arg8p47, arg9'=arg9p47, (2+arg8-arg4 <= 0 /\ -arg3+arg2p47 <= 0 /\ 1+arg2p47 > 0 /\ arg3p47 > 0 /\ 4+arg8-arg2 <= 0 /\ 2-arg1+arg2p47 <= 0 /\ arg1p47-arg4 <= 0 /\ -arg6+arg2p47 <= 0 /\ arg4p47 > 0 /\ 1+arg3 > 0 /\ arg4p47-arg4 <= 0 /\ arg1p47 > 0 /\ 2-arg2+arg7 <= 0 /\ -2+arg2 > 0 /\ arg4 > 0 /\ arg3p47-arg4 <= 0 /\ 1+arg6 > 0 /\ -1+arg1 > 0), cost: 1
  47: f4063_0_lessleaves_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-2+arg1 > 0 /\ 4+arg7-arg1 <= 0 /\ arg3 > 0 /\ arg2p48 > 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg2p48 <= 0 /\ arg3p48 > 0 /\ arg3p48-arg4 <= 0 /\ -arg4+arg1p48 <= 0 /\ 2+arg8-arg2 <= 0 /\ -arg4+arg4p48 <= 0 /\ 4+arg10-arg1 <= 0 /\ 2+arg6-arg1 <= 0 /\ 2+arg11-arg4 <= 0 /\ -2+arg2 > 0 /\ 2-arg3+arg10 <= 0 /\ arg4 > 0 /\ arg4p48 > 0 /\ arg1p48 > 0 /\ 4+arg11-arg2 <= 0), cost: 1
  52: __init -> f1_0_main_Load : arg1'=arg1p53, arg10'=arg10p53, arg11'=arg11p53, arg2'=arg2p53, arg3'=arg3p53, arg4'=arg4p53, arg5'=arg5p53, arg6'=arg6p53, arg7'=arg7p53, arg8'=arg8p53, arg9'=arg9p53, T, cost: 1

	Eliminating location f337_0_createTree_Return by chaining:

	Applied chaining

	First rule:
	f243_0_main_InvokeMethod -> f337_0_createTree_Return : arg1'=arg1p4, arg10'=arg10p4, arg11'=arg11p4, arg2'=arg2p4, arg3'=arg3p4, arg4'=arg4p4, arg5'=arg5p4, arg6'=arg6p4, arg7'=arg7p4, arg8'=arg8p4, arg9'=arg9p4, (arg1p4-arg1 <= 0 /\ arg1p4 > 0 /\ arg1 > 0), cost: 1
	Second rule:
	f337_0_createTree_Return -> f3774_0_lessleaves_NONNULL : arg1'=arg1p5, arg10'=arg10p5, arg11'=arg11p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (1+arg1p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ 1+arg4p5 > 0 /\ 1+arg2p5-arg1 <= 0 /\ 1+arg2p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ 1+arg3p5 > 0 /\ 1+arg4p5-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f243_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p5, arg10'=arg10p5, arg11'=arg11p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (1+arg3p5-arg1p4 <= 0 /\ 1+arg1p5 > 0 /\ arg1p4-arg1 <= 0 /\ 1+arg4p5-arg1p4 <= 0 /\ 1+arg4p5 > 0 /\ 1-arg1p4+arg2p5 <= 0 /\ 1+arg2p5 > 0 /\ arg1p4 > 0 /\ 1+arg3p5 > 0 /\ 1+arg1p5-arg1p4 <= 0 /\ arg1 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location f2824_0_main_InvokeMethod by chaining:

	Applied chaining

	First rule:
	f2736_0_main_InvokeMethod -> f2824_0_main_InvokeMethod : arg1'=arg1p11, arg10'=arg10p11, arg11'=arg11p11, arg2'=arg2p11, arg3'=arg3p11, arg4'=arg4p11, arg5'=arg5p11, arg6'=arg6p11, arg7'=arg7p11, arg8'=arg8p11, arg9'=arg9p11, (arg2p11-arg2 <= 0 /\ arg1p11 > 0 /\ arg1p11-arg2 <= 0 /\ 2-arg2+arg4 <= 0 /\ arg1p11-arg1 <= 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ 2+arg4p11-arg2 <= 0 /\ arg1 > 0 /\ arg4-arg3p11 == 0), cost: 1
	Second rule:
	f2824_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (arg2p12 > 0 /\ 1+arg3p12 > 0 /\ 1+arg3p12-arg1 <= 0 /\ arg2p12-arg2 <= 0 /\ 1-arg2+arg4p12 <= 0 /\ 1+arg4p12-arg1 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 1+arg1p12-arg1 <= 0 /\ 1-arg2+arg1p12 <= 0 /\ 1+arg3p12-arg2 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (1-arg2p11+arg4p12 <= 0 /\ arg2p11-arg2 <= 0 /\ arg2p12 > 0 /\ 1+arg3p12 > 0 /\ arg2p12-arg2p11 <= 0 /\ 1-arg1p11+arg4p12 <= 0 /\ arg1p11 > 0 /\ arg1p11-arg2 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p11-arg1 <= 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 1-arg1p11+arg1p12 <= 0 /\ 2-arg2p11+arg3p11 <= 0 /\ 2+arg4p11-arg2 <= 0 /\ 2+arg4p11-arg2p11 <= 0 /\ arg1 > 0 /\ arg4-arg3p11 == 0 /\ 1-arg1p11+arg3p12 <= 0 /\ 1-arg2p11+arg1p12 <= 0 /\ 1+arg3p12-arg2p11 <= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 10 11

Simplified Transitions

Start location: __init
Program variables: arg1 arg10 arg11 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9
   1: f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p2, arg10'=arg10p2, arg11'=arg11p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
   5: f1_0_main_Load -> f2736_0_main_InvokeMethod : arg1'=arg1p6, arg10'=arg10p6, arg11'=arg11p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, arg9'=arg9p6, (arg2p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
  13: f1_0_main_Load -> f716_0_random_GT : arg1'=arg1p14, arg10'=arg10p14, arg11'=arg11p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (arg1 > 0 /\ 1+arg2 > 0), cost: 1
  55: f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p1, arg10'=arg10p1, arg11'=arg11p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ arg1 > 0), cost: 1
   7: f243_0_main_InvokeMethod -> f2748_0_main_InvokeMethod : arg1'=arg1p8, arg10'=arg10p8, arg11'=arg11p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, arg9'=arg9p8, (arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
  59: f243_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p15, arg10'=arg10p15, arg11'=arg11p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (arg1 > 0), cost: 1
  85: f243_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p5, arg10'=arg10p5, arg11'=arg11p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (1+arg1p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ 1+arg4p5 > 0 /\ 1+arg2p5-arg1 <= 0 /\ 1+arg2p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ 1+arg3p5 > 0 /\ 1+arg4p5-arg1 <= 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1
  56: f61_0_createTree_Return -> f243_0_main_InvokeMethod : arg1'=arg1p3, arg10'=arg10p3, arg11'=arg11p3, arg2'=0, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, arg1p3 > 0, cost: 1
  35: f3774_0_lessleaves_NONNULL -> f3815_0_append_Return : arg1'=arg1p36, arg10'=arg10p36, arg11'=arg11p36, arg2'=arg2p36, arg3'=arg3p36, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0), cost: 1
  36: f3774_0_lessleaves_NONNULL -> f3815_0_append_Return : arg1'=arg1p37, arg10'=arg10p37, arg11'=arg11p37, arg2'=arg2p37, arg3'=arg3p37, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (arg2p37-arg4 <= 0 /\ arg2p37 > 0 /\ arg3 > 0 /\ arg2p37-arg1 <= 0 /\ -4+arg1p37 > 0 /\ -arg2+arg1p37 <= 0 /\ -4+arg2 > 0 /\ 2+arg5p37-arg2 <= 0 /\ 4+arg6p37-arg2 <= 0 /\ arg4 > 0 /\ arg2p37-arg3 <= 0 /\ arg1 > 0 /\ -2+arg3p37 > 0), cost: 1
  37: f3774_0_lessleaves_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p38, arg10'=arg10p38, arg11'=arg11p38, arg2'=arg2p38, arg3'=arg3p38, arg4'=arg4p38, arg5'=arg5p38, arg6'=arg6p38, arg7'=arg7p38, arg8'=arg8p38, arg9'=arg9p38, (1+arg1p38 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ 1+arg1p38-arg2 <= 0 /\ arg1 > 0), cost: 1
  39: f3774_0_lessleaves_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p40, arg10'=arg10p40, arg11'=arg11p40, arg2'=arg2p40, arg3'=arg3p40, arg4'=arg4p40, arg5'=arg5p40, arg6'=arg6p40, arg7'=arg7p40, arg8'=arg8p40, arg9'=arg9p40, (arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg1p40-arg1 <= 0 /\ arg4 > 0 /\ 1+arg1p40 > 0 /\ arg1 > 0 /\ 1+arg1p40-arg4 <= 0 /\ 1-arg3+arg1p40 <= 0), cost: 1
  40: f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p41, arg10'=arg10p41, arg11'=arg11p41, arg2'=arg2p41, arg3'=arg3p41, arg4'=arg4p41, arg5'=arg5p41, arg6'=arg6p41, arg7'=arg7p41, arg8'=arg8p41, arg9'=arg9p41, (2+arg3p41-arg4 <= 0 /\ 2+arg4p41-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4p41 > 0 /\ 2+arg3p41-arg1 <= 0 /\ 2+arg2p41-arg2 <= 0 /\ 2+arg1p41-arg3 <= 0 /\ -1+arg3 > 0 /\ 2-arg3+arg4p41 <= 0 /\ 1+arg2p41 > 0 /\ 2+arg1p41-arg4 <= 0 /\ 1+arg3p41 > 0 /\ -1+arg4 > 0 /\ 2+arg1p41-arg1 <= 0 /\ 2-arg3+arg3p41 <= 0 /\ 1+arg1p41 > 0 /\ 2-arg4+arg4p41 <= 0 /\ -1+arg1 > 0), cost: 1
  42: f3774_0_lessleaves_NONNULL -> f4062_0_lessleaves_InvokeMethod : arg1'=arg1p43, arg10'=arg10p43, arg11'=arg11p43, arg2'=arg2p43, arg3'=arg3p43, arg4'=arg4p43, arg5'=arg5p43, arg6'=arg6p43, arg7'=arg7p43, arg8'=arg8p43, arg9'=arg9p43, (1+arg6p43 > 0 /\ 1+arg3p43 > 0 /\ -3+arg1 > 0 /\ arg2p43-arg3 <= 0 /\ 4+arg8p43-arg1 <= 0 /\ -arg2+arg1p43 <= 0 /\ 2+arg7p43-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg7p43-arg4 <= 0 /\ 4+arg8p43-arg4 <= 0 /\ -1+arg1p43 > 0 /\ -arg3+arg4p43 <= 0 /\ -3+arg4 > 0 /\ arg4p43-arg1 <= 0 /\ 2+arg6p43-arg2 <= 0 /\ 4+arg8p43-arg3 <= 0 /\ arg2p43-arg1 <= 0 /\ -3+arg3 > 0 /\ arg4p43 > 0 /\ -3+arg2p43 > 0 /\ arg4p43-arg4 <= 0 /\ arg2p43-arg4 <= 0 /\ 2+arg3p43-arg2 <= 0 /\ 2-arg3+arg7p43 <= 0), cost: 1
  43: f3774_0_lessleaves_NONNULL -> f4062_0_lessleaves_InvokeMethod : arg1'=arg1p44, arg10'=arg10p44, arg11'=arg11p44, arg2'=arg2p44, arg3'=arg3p44, arg4'=arg4p44, arg5'=arg5p44, arg6'=arg6p44, arg7'=arg7p44, arg8'=arg8p44, arg9'=arg9p44, (-4+arg4 > 0 /\ 2+arg7p44-arg3 <= 0 /\ 4+arg8p44-arg1 <= 0 /\ -1+arg2 > 0 /\ 4-arg3+arg8p44 <= 0 /\ -4+arg1 > 0 /\ 1+arg6p44 > 0 /\ 4+arg8p44-arg4 <= 0 /\ -1+arg1p44 > 0 /\ 1+arg3p44 > 0 /\ 2+arg7p44-arg1 <= 0 /\ 2-arg2+arg3p44 <= 0 /\ -2+arg4p44 > 0 /\ arg1p44-arg2 <= 0 /\ arg2p44-arg1 <= 0 /\ -4+arg2p44 > 0 /\ 2-arg2+arg6p44 <= 0 /\ -4+arg3 > 0 /\ 2+arg7p44-arg4 <= 0 /\ -arg3+arg2p44 <= 0 /\ arg2p44-arg4 <= 0), cost: 1
  12: f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p13, arg10'=arg10p13, arg11'=arg11p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, arg8'=arg8p13, arg9'=arg9p13, (arg4p13 > 0 /\ arg1p13 > 0 /\ arg2p13 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg3p13 > 0 /\ arg2p13-arg2 <= 0 /\ arg1 > 0), cost: 1
  60: f2736_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p16, arg10'=arg10p16, arg11'=arg11p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
  86: f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (arg2p12 > 0 /\ 1+arg3p12 > 0 /\ 1+arg3p12-arg1 <= 0 /\ arg2p12-arg2 <= 0 /\ 1-arg2+arg4p12 <= 0 /\ 1-arg2 <= 0 /\ 1+arg4p12-arg1 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 1+arg1p12-arg1 <= 0 /\ 1-arg2+arg1p12 <= 0 /\ 1+arg3p12-arg2 <= 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1
  57: f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (-arg2+arg2p7 <= 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
   9: f2748_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p10, arg10'=arg10p10, arg11'=arg11p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, arg8'=arg8p10, arg9'=arg9p10, (1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
  58: f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
  61: f716_0_random_GT -> f835_0_createTree_NE : arg1'=0, arg10'=arg10p17, arg11'=arg11p17, arg2'=arg2p17, arg3'=1+x88, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (x88-arg2p17 < 0 /\ 1+x88 > 0), cost: 1
  62: f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p18, arg10'=arg10p18, arg11'=arg11p18, arg2'=arg2p18, arg3'=1+x90, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (1+x90 > 0 /\ 1+arg1p18 > 0 /\ -arg2p18+x90 < 0), cost: 1
  64: f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p20, arg10'=arg10p20, arg11'=arg11p20, arg2'=arg2p20, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg3 > 0 /\ -1+arg1p20 > 0 /\ arg1 > 0 /\ -1+arg2p20 > 0), cost: 1
  65: f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p21, arg10'=arg10p21, arg11'=arg11p21, arg2'=arg2p21, arg3'=arg1, arg4'=arg2, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (-1+arg1p21 > 0 /\ arg3 > 0 /\ -1+arg2p21 > 0 /\ arg1 > 0), cost: 1
  82: f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
  63: f1037_0_createNode_Return -> f2703_0_createTree_LE : arg1'=arg1p19, arg10'=arg10p19, arg11'=arg11p19, arg2'=arg2p19, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (-1+arg1p19 > 0 /\ -1+arg2p19 > 0), cost: 1
  66: f2703_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg3, arg10'=arg10p22, arg11'=arg11p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg4, arg6'=arg5, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (arg5-arg4 >= 0 /\ -arg2+arg3p22 <= 0 /\ 1+arg4p22 > 0 /\ arg3 > 0 /\ 2+arg8p22-arg1 <= 0 /\ arg2p22 > 0 /\ 1+arg4 > 0 /\ 2+arg7p22-arg1 <= 0 /\ arg2 > 0 /\ arg3p22 > 0 /\ 1-arg2+arg4p22 <= 0 /\ 2+arg9p22-arg2 <= 0 /\ arg2p22-arg1 <= 0 /\ arg1 > 0), cost: 1
  70: f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p26, arg11'=arg11p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (arg5-arg4 < 0 /\ arg2p26 > 0 /\ arg3p26-arg2 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg3p26 > 0 /\ 1+arg4 > 0 /\ 2+arg8p26-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p26-arg1 <= 0 /\ arg2p26-arg1 <= 0 /\ arg1 > 0), cost: 1
  71: f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p27, arg11'=arg11p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (arg5-arg4 < 0 /\ 1+arg4p27 > 0 /\ arg3p27 > 0 /\ arg3p27-arg2 <= 0 /\ 1+arg5 > 0 /\ arg2p27-arg1 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg2p27 > 0 /\ 2+arg8p27-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p27-arg1 <= 0 /\ arg1 > 0), cost: 1
  67: f2820_0_createTree_NONNULL -> f2703_0_createTree_LE : arg1'=arg1p23, arg10'=arg10p23, arg11'=arg11p23, arg2'=arg2p23, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (2-arg3+arg2p23 <= 0 /\ 2+arg9-arg3 <= 0 /\ arg1p23-arg2 <= 0 /\ arg1p23 > 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p23 > 0 /\ -arg4+arg2p23 <= 0), cost: 1
  68: f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p24, arg9'=arg9p24, (-1+arg3p24 > 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
  69: f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg5, arg5'=arg5p25, arg6'=arg8, arg7'=arg9, arg8'=arg8p25, arg9'=arg9p25, (arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  83: f2820_0_createTree_NONNULL -> f2045_0_random_GT : arg1'=arg1p50, arg10'=arg10p50, arg11'=arg11p50, arg2'=arg5, arg3'=arg6, arg4'=arg4p50, arg5'=arg5p50, arg6'=arg6p50, arg7'=arg7p50, arg8'=arg8p50, arg9'=arg9p50, (1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  72: f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=-1+arg1, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p28 > 0), cost: 1
  73: f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=-1+arg1, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (-2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg6-arg7 == 0), cost: 1
  74: f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg9'=arg9p30, (arg3 > 0 /\ arg3p30 > 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ 2-arg2+arg7 <= 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
  75: f2969_0_createTree_LE -> f2703_0_createTree_LE : arg1'=arg1p31, arg10'=arg10p31, arg11'=arg11p31, arg2'=arg2p31, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (arg1p31 > 0 /\ 2-arg3+arg2p31 <= 0 /\ arg2p31 > 0 /\ arg1p31-arg2 <= 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0), cost: 1
  76: f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
  77: f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg5, arg5'=arg5p33, arg6'=arg7, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (arg6 > 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ 2+arg7p33-arg3 <= 0 /\ arg1 > 0), cost: 1
  84: f2969_0_createTree_LE -> f2045_0_random_GT : arg1'=arg1p51, arg10'=arg10p51, arg11'=arg11p51, arg2'=arg5, arg3'=arg6, arg4'=arg4p51, arg5'=arg5p51, arg6'=arg6p51, arg7'=arg7p51, arg8'=arg8p51, arg9'=arg9p51, (arg6 > 0 /\ 1+arg5 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg1 > 0), cost: 1
  78: f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=-1+arg1, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0), cost: 1
  79: f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=-1+arg1, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
  38: f3815_0_append_Return -> f3836_0_append_NONNULL : arg1'=arg1p39, arg10'=arg10p39, arg11'=arg11p39, arg2'=arg2p39, arg3'=arg3p39, arg4'=arg4p39, arg5'=arg5p39, arg6'=arg6p39, arg7'=arg7p39, arg8'=arg8p39, arg9'=arg9p39, (-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg6-arg1 <= 0 /\ 1+arg1p39 > 0 /\ arg2 > 0 /\ 1+arg1p39-arg2 <= 0), cost: 1
  41: f3815_0_append_Return -> f3774_0_lessleaves_NONNULL : arg1'=arg1p42, arg10'=arg10p42, arg11'=arg11p42, arg2'=arg2p42, arg3'=arg3p42, arg4'=arg4p42, arg5'=arg5p42, arg6'=arg6p42, arg7'=arg7p42, arg8'=arg8p42, arg9'=arg9p42, (-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ 1+arg3p42 > 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg4p42-arg2 <= 0 /\ 1+arg4p42 > 0 /\ 1+arg1p42 > 0 /\ 2+arg1p42-arg2 <= 0 /\ 4+arg6-arg1 <= 0 /\ arg2p42 > 0 /\ -arg3+arg2p42 <= 0 /\ 2-arg2+arg3p42 <= 0), cost: 1
  80: f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p45, arg10'=arg6, arg11'=arg11p45, arg2'=arg2p45, arg3'=arg3p45, arg4'=arg4p45, arg5'=arg4, arg6'=arg5, arg7'=arg7p45, arg8'=arg8p45, arg9'=arg9p45, (-2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0), cost: 1
  81: f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p46, arg10'=arg6, arg11'=arg11p46, arg2'=arg2p46, arg3'=arg3p46, arg4'=arg4p46, arg5'=arg4, arg6'=arg5, arg7'=arg7p46, arg8'=arg8p46, arg9'=arg9p46, (arg2p46-arg2 <= 0 /\ -2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ -arg3+arg3p46 <= 0 /\ arg1p46-arg1 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4-arg2+arg11p46 <= 0 /\ 4+arg6-arg1 <= 0 /\ -4+arg2p46 > 0 /\ -2+arg4p46 > 0 /\ -4+arg2 > 0 /\ 4+arg7p46-arg1 <= 0 /\ -2+arg1p46 > 0 /\ 2-arg3+arg9p46 <= 0 /\ arg3p46 > 0 /\ 2+arg8p46-arg2 <= 0), cost: 1
  51: f3836_0_append_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p52, arg10'=arg10p52, arg11'=arg11p52, arg2'=arg2p52, arg3'=arg3p52, arg4'=arg4p52, arg5'=arg5p52, arg6'=arg6p52, arg7'=arg7p52, arg8'=arg8p52, arg9'=arg9p52, (1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0), cost: 1
  46: f4062_0_lessleaves_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p47, arg10'=arg10p47, arg11'=arg11p47, arg2'=arg2p47, arg3'=arg3p47, arg4'=arg4p47, arg5'=arg5p47, arg6'=arg6p47, arg7'=arg7p47, arg8'=arg8p47, arg9'=arg9p47, (2+arg8-arg4 <= 0 /\ -arg3+arg2p47 <= 0 /\ 1+arg2p47 > 0 /\ arg3p47 > 0 /\ 4+arg8-arg2 <= 0 /\ 2-arg1+arg2p47 <= 0 /\ arg1p47-arg4 <= 0 /\ -arg6+arg2p47 <= 0 /\ arg4p47 > 0 /\ 1+arg3 > 0 /\ arg4p47-arg4 <= 0 /\ arg1p47 > 0 /\ 2-arg2+arg7 <= 0 /\ -2+arg2 > 0 /\ arg4 > 0 /\ arg3p47-arg4 <= 0 /\ 1+arg6 > 0 /\ -1+arg1 > 0), cost: 1
  47: f4063_0_lessleaves_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-2+arg1 > 0 /\ 4+arg7-arg1 <= 0 /\ arg3 > 0 /\ arg2p48 > 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg2p48 <= 0 /\ arg3p48 > 0 /\ arg3p48-arg4 <= 0 /\ -arg4+arg1p48 <= 0 /\ 2+arg8-arg2 <= 0 /\ -arg4+arg4p48 <= 0 /\ 4+arg10-arg1 <= 0 /\ 2+arg6-arg1 <= 0 /\ 2+arg11-arg4 <= 0 /\ -2+arg2 > 0 /\ 2-arg3+arg10 <= 0 /\ arg4 > 0 /\ arg4p48 > 0 /\ arg1p48 > 0 /\ 4+arg11-arg2 <= 0), cost: 1
  52: __init -> f1_0_main_Load : arg1'=arg1p53, arg10'=arg10p53, arg11'=arg11p53, arg2'=arg2p53, arg3'=arg3p53, arg4'=arg4p53, arg5'=arg5p53, arg6'=arg6p53, arg7'=arg7p53, arg8'=arg8p53, arg9'=arg9p53, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p1, arg10'=arg10p1, arg11'=arg11p1, arg2'=arg2p1, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ -arg2p1 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p1, arg10'=arg10p1, arg11'=arg11p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (0 == 0 /\ arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p1 = 0
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p1, arg10'=arg10p1, arg11'=arg11p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (0 == 0 /\ arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p1, arg10'=arg10p1, arg11'=arg11p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f61_0_createTree_Return -> f243_0_main_InvokeMethod : arg1'=arg1p3, arg10'=arg10p3, arg11'=arg11p3, arg2'=arg2p3, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, (-arg2p3 == 0 /\ arg1p3 > 0), cost: 1
	New rule:
	f61_0_createTree_Return -> f243_0_main_InvokeMethod : arg1'=arg1p3, arg10'=arg10p3, arg11'=arg11p3, arg2'=0, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, (0 == 0 /\ arg1p3 > 0), cost: 1
	
		propagated equality arg2p3 = 0
		
	Simplified Guard

	Original rule:
	f61_0_createTree_Return -> f243_0_main_InvokeMethod : arg1'=arg1p3, arg10'=arg10p3, arg11'=arg11p3, arg2'=0, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, (0 == 0 /\ arg1p3 > 0), cost: 1
	New rule:
	f61_0_createTree_Return -> f243_0_main_InvokeMethod : arg1'=arg1p3, arg10'=arg10p3, arg11'=arg11p3, arg2'=0, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, arg1p3 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg3'=arg3p7, arg4'=arg4p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (arg3-arg3p7 == 0 /\ -arg2+arg2p7 <= 0 /\ -arg4p7+arg4 == 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg3'=arg3, arg4'=arg4, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (0 == 0 /\ -arg2+arg2p7 <= 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p7 = arg3
		
		propagated equality arg4p7 = arg4
		
	Simplified Guard

	Original rule:
	f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg3'=arg3, arg4'=arg4, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (0 == 0 /\ -arg2+arg2p7 <= 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg3'=arg3, arg4'=arg4, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (-arg2+arg2p7 <= 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg3'=arg3, arg4'=arg4, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (-arg2+arg2p7 <= 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (-arg2+arg2p7 <= 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg3'=arg3p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ arg3-arg3p9 == 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg3'=arg3, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (0 == 0 /\ arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p9 = arg3
		
	Simplified Guard

	Original rule:
	f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg3'=arg3, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (0 == 0 /\ arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg3'=arg3, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg3'=arg3, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f243_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p15, arg10'=arg10p15, arg11'=arg11p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (1+x79 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f243_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p15, arg10'=arg10p15, arg11'=arg11p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2736_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p16, arg10'=arg10p16, arg11'=arg11p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (1+x82 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2736_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p16, arg10'=arg10p16, arg11'=arg11p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p17, arg10'=arg10p17, arg11'=arg11p17, arg2'=arg2p17, arg3'=arg3p17, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (-arg1p17 == 0 /\ 1+x88-arg3p17 == 0 /\ x88-arg2p17 < 0 /\ 1+x88 > 0), cost: 1
	New rule:
	f716_0_random_GT -> f835_0_createTree_NE : arg1'=0, arg10'=arg10p17, arg11'=arg11p17, arg2'=arg2p17, arg3'=1+x88, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (0 == 0 /\ x88-arg2p17 < 0 /\ 1+x88 > 0), cost: 1
	
		propagated equality arg1p17 = 0
		
		propagated equality arg3p17 = 1+x88
		
	Simplified Guard

	Original rule:
	f716_0_random_GT -> f835_0_createTree_NE : arg1'=0, arg10'=arg10p17, arg11'=arg11p17, arg2'=arg2p17, arg3'=1+x88, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (0 == 0 /\ x88-arg2p17 < 0 /\ 1+x88 > 0), cost: 1
	New rule:
	f716_0_random_GT -> f835_0_createTree_NE : arg1'=0, arg10'=arg10p17, arg11'=arg11p17, arg2'=arg2p17, arg3'=1+x88, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (x88-arg2p17 < 0 /\ 1+x88 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p18, arg10'=arg10p18, arg11'=arg11p18, arg2'=arg2p18, arg3'=arg3p18, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (1-arg3p18+x90 == 0 /\ 1+x90 > 0 /\ 1+arg1p18 > 0 /\ -arg2p18+x90 < 0), cost: 1
	New rule:
	f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p18, arg10'=arg10p18, arg11'=arg11p18, arg2'=arg2p18, arg3'=1+x90, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (0 == 0 /\ 1+x90 > 0 /\ 1+arg1p18 > 0 /\ -arg2p18+x90 < 0), cost: 1
	
		propagated equality arg3p18 = 1+x90
		
	Simplified Guard

	Original rule:
	f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p18, arg10'=arg10p18, arg11'=arg11p18, arg2'=arg2p18, arg3'=1+x90, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (0 == 0 /\ 1+x90 > 0 /\ 1+arg1p18 > 0 /\ -arg2p18+x90 < 0), cost: 1
	New rule:
	f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p18, arg10'=arg10p18, arg11'=arg11p18, arg2'=arg2p18, arg3'=1+x90, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (1+x90 > 0 /\ 1+arg1p18 > 0 /\ -arg2p18+x90 < 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1037_0_createNode_Return -> f2703_0_createTree_LE : arg1'=arg1p19, arg10'=arg10p19, arg11'=arg11p19, arg2'=arg2p19, arg3'=arg3p19, arg4'=arg4p19, arg5'=arg5p19, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (-arg4p19+arg2 == 0 /\ -1+arg1p19 > 0 /\ arg3-arg5p19 == 0 /\ -arg3p19+arg1 == 0 /\ -1+arg2p19 > 0), cost: 1
	New rule:
	f1037_0_createNode_Return -> f2703_0_createTree_LE : arg1'=arg1p19, arg10'=arg10p19, arg11'=arg11p19, arg2'=arg2p19, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (0 == 0 /\ -1+arg1p19 > 0 /\ -1+arg2p19 > 0), cost: 1
	
		propagated equality arg4p19 = arg2
		
		propagated equality arg5p19 = arg3
		
		propagated equality arg3p19 = arg1
		
	Simplified Guard

	Original rule:
	f1037_0_createNode_Return -> f2703_0_createTree_LE : arg1'=arg1p19, arg10'=arg10p19, arg11'=arg11p19, arg2'=arg2p19, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (0 == 0 /\ -1+arg1p19 > 0 /\ -1+arg2p19 > 0), cost: 1
	New rule:
	f1037_0_createNode_Return -> f2703_0_createTree_LE : arg1'=arg1p19, arg10'=arg10p19, arg11'=arg11p19, arg2'=arg2p19, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (-1+arg1p19 > 0 /\ -1+arg2p19 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p20, arg10'=arg10p20, arg11'=arg11p20, arg2'=arg2p20, arg3'=arg3p20, arg4'=arg4p20, arg5'=arg5p20, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg3 > 0 /\ -arg4p20+arg2 == 0 /\ -1+arg1p20 > 0 /\ arg3-arg5p20 == 0 /\ -arg3p20+arg1 == 0 /\ arg1 > 0 /\ -1+arg2p20 > 0), cost: 1
	New rule:
	f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p20, arg10'=arg10p20, arg11'=arg11p20, arg2'=arg2p20, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (0 == 0 /\ arg3 > 0 /\ -1+arg1p20 > 0 /\ arg1 > 0 /\ -1+arg2p20 > 0), cost: 1
	
		propagated equality arg4p20 = arg2
		
		propagated equality arg5p20 = arg3
		
		propagated equality arg3p20 = arg1
		
	Simplified Guard

	Original rule:
	f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p20, arg10'=arg10p20, arg11'=arg11p20, arg2'=arg2p20, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (0 == 0 /\ arg3 > 0 /\ -1+arg1p20 > 0 /\ arg1 > 0 /\ -1+arg2p20 > 0), cost: 1
	New rule:
	f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p20, arg10'=arg10p20, arg11'=arg11p20, arg2'=arg2p20, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg3 > 0 /\ -1+arg1p20 > 0 /\ arg1 > 0 /\ -1+arg2p20 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p21, arg10'=arg10p21, arg11'=arg11p21, arg2'=arg2p21, arg3'=arg3p21, arg4'=arg4p21, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (-1+arg1p21 > 0 /\ arg3 > 0 /\ -arg3p21+arg1 == 0 /\ -1+arg2p21 > 0 /\ arg1 > 0 /\ arg2-arg4p21 == 0), cost: 1
	New rule:
	f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p21, arg10'=arg10p21, arg11'=arg11p21, arg2'=arg2p21, arg3'=arg1, arg4'=arg2, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (0 == 0 /\ -1+arg1p21 > 0 /\ arg3 > 0 /\ -1+arg2p21 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p21 = arg1
		
		propagated equality arg4p21 = arg2
		
	Simplified Guard

	Original rule:
	f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p21, arg10'=arg10p21, arg11'=arg11p21, arg2'=arg2p21, arg3'=arg1, arg4'=arg2, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (0 == 0 /\ -1+arg1p21 > 0 /\ arg3 > 0 /\ -1+arg2p21 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p21, arg10'=arg10p21, arg11'=arg11p21, arg2'=arg2p21, arg3'=arg1, arg4'=arg2, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (-1+arg1p21 > 0 /\ arg3 > 0 /\ -1+arg2p21 > 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2703_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1p22, arg10'=arg10p22, arg11'=arg11p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg5p22, arg6'=arg6p22, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (arg5-arg4 >= 0 /\ -arg2+arg3p22 <= 0 /\ 1+arg4p22 > 0 /\ arg3 > 0 /\ 2+arg8p22-arg1 <= 0 /\ arg2p22 > 0 /\ -arg1p22+arg3 == 0 /\ 1+arg4 > 0 /\ -arg5p22+arg4 == 0 /\ 2+arg7p22-arg1 <= 0 /\ arg2 > 0 /\ arg3p22 > 0 /\ 1-arg2+arg4p22 <= 0 /\ arg5-arg6p22 == 0 /\ 2+arg9p22-arg2 <= 0 /\ arg2p22-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2703_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg3, arg10'=arg10p22, arg11'=arg11p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg4, arg6'=arg5, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (0 == 0 /\ arg5-arg4 >= 0 /\ -arg2+arg3p22 <= 0 /\ 1+arg4p22 > 0 /\ arg3 > 0 /\ 2+arg8p22-arg1 <= 0 /\ arg2p22 > 0 /\ 1+arg4 > 0 /\ 2+arg7p22-arg1 <= 0 /\ arg2 > 0 /\ arg3p22 > 0 /\ 1-arg2+arg4p22 <= 0 /\ 2+arg9p22-arg2 <= 0 /\ arg2p22-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg1p22 = arg3
		
		propagated equality arg5p22 = arg4
		
		propagated equality arg6p22 = arg5
		
	Simplified Guard

	Original rule:
	f2703_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg3, arg10'=arg10p22, arg11'=arg11p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg4, arg6'=arg5, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (0 == 0 /\ arg5-arg4 >= 0 /\ -arg2+arg3p22 <= 0 /\ 1+arg4p22 > 0 /\ arg3 > 0 /\ 2+arg8p22-arg1 <= 0 /\ arg2p22 > 0 /\ 1+arg4 > 0 /\ 2+arg7p22-arg1 <= 0 /\ arg2 > 0 /\ arg3p22 > 0 /\ 1-arg2+arg4p22 <= 0 /\ 2+arg9p22-arg2 <= 0 /\ arg2p22-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2703_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg3, arg10'=arg10p22, arg11'=arg11p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg4, arg6'=arg5, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (arg5-arg4 >= 0 /\ -arg2+arg3p22 <= 0 /\ 1+arg4p22 > 0 /\ arg3 > 0 /\ 2+arg8p22-arg1 <= 0 /\ arg2p22 > 0 /\ 1+arg4 > 0 /\ 2+arg7p22-arg1 <= 0 /\ arg2 > 0 /\ arg3p22 > 0 /\ 1-arg2+arg4p22 <= 0 /\ 2+arg9p22-arg2 <= 0 /\ arg2p22-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2820_0_createTree_NONNULL -> f2703_0_createTree_LE : arg1'=arg1p23, arg10'=arg10p23, arg11'=arg11p23, arg2'=arg2p23, arg3'=arg3p23, arg4'=arg4p23, arg5'=arg5p23, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (2-arg3+arg2p23 <= 0 /\ arg5-arg4p23 == 0 /\ 2+arg9-arg3 <= 0 /\ arg1p23-arg2 <= 0 /\ arg1p23 > 0 /\ -1-arg3p23+arg1 == 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg6-arg5p23 == 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p23 > 0 /\ -arg4+arg2p23 <= 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2703_0_createTree_LE : arg1'=arg1p23, arg10'=arg10p23, arg11'=arg11p23, arg2'=arg2p23, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (0 == 0 /\ 2-arg3+arg2p23 <= 0 /\ 2+arg9-arg3 <= 0 /\ arg1p23-arg2 <= 0 /\ arg1p23 > 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p23 > 0 /\ -arg4+arg2p23 <= 0), cost: 1
	
		propagated equality arg4p23 = arg5
		
		propagated equality arg3p23 = -1+arg1
		
		propagated equality arg5p23 = arg6
		
	Simplified Guard

	Original rule:
	f2820_0_createTree_NONNULL -> f2703_0_createTree_LE : arg1'=arg1p23, arg10'=arg10p23, arg11'=arg11p23, arg2'=arg2p23, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (0 == 0 /\ 2-arg3+arg2p23 <= 0 /\ 2+arg9-arg3 <= 0 /\ arg1p23-arg2 <= 0 /\ arg1p23 > 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p23 > 0 /\ -arg4+arg2p23 <= 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2703_0_createTree_LE : arg1'=arg1p23, arg10'=arg10p23, arg11'=arg11p23, arg2'=arg2p23, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (2-arg3+arg2p23 <= 0 /\ 2+arg9-arg3 <= 0 /\ arg1p23-arg2 <= 0 /\ arg1p23 > 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p23 > 0 /\ -arg4+arg2p23 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1p24, arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg4p24, arg5'=arg5p24, arg6'=arg6p24, arg7'=arg7p24, arg8'=arg8p24, arg9'=arg9p24, (arg9-arg7p24 == 0 /\ -1+arg3p24 > 0 /\ -arg5p24+arg6 == 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ -arg1p24+arg1 == 0 /\ 1+arg4 > 0 /\ -arg6p24+arg8 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg5-arg4p24 == 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p24, arg9'=arg9p24, (0 == 0 /\ -1+arg3p24 > 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg7p24 = arg9
		
		propagated equality arg5p24 = arg6
		
		propagated equality arg1p24 = arg1
		
		propagated equality arg6p24 = arg8
		
		propagated equality arg4p24 = arg5
		
	Simplified Guard

	Original rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p24, arg9'=arg9p24, (0 == 0 /\ -1+arg3p24 > 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p24, arg9'=arg9p24, (-1+arg3p24 > 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p24, arg9'=arg9p24, (-1+arg3p24 > 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p24, arg9'=arg9p24, (-1+arg3p24 > 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1p25, arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg4p25, arg5'=arg5p25, arg6'=arg6p25, arg7'=arg7p25, arg8'=arg8p25, arg9'=arg9p25, (-arg1p25+arg1 == 0 /\ arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ arg8-arg6p25 == 0 /\ -arg4p25+arg5 == 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ arg9-arg7p25 == 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg5, arg5'=arg5p25, arg6'=arg8, arg7'=arg9, arg8'=arg8p25, arg9'=arg9p25, (0 == 0 /\ arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg1p25 = arg1
		
		propagated equality arg6p25 = arg8
		
		propagated equality arg4p25 = arg5
		
		propagated equality arg7p25 = arg9
		
	Simplified Guard

	Original rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg5, arg5'=arg5p25, arg6'=arg8, arg7'=arg9, arg8'=arg8p25, arg9'=arg9p25, (0 == 0 /\ arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg5, arg5'=arg5p25, arg6'=arg8, arg7'=arg9, arg8'=arg8p25, arg9'=arg9p25, (arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg5, arg5'=arg5p25, arg6'=arg8, arg7'=arg9, arg8'=arg8p25, arg9'=arg9p25, (arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg5, arg5'=arg5p25, arg6'=arg8, arg7'=arg9, arg8'=arg8p25, arg9'=arg9p25, (arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg1p26, arg10'=arg10p26, arg11'=arg11p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=arg4p26, arg5'=arg5p26, arg6'=arg6p26, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (arg5-arg4 < 0 /\ arg2p26 > 0 /\ arg3p26-arg2 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ -arg4p26 == 0 /\ arg3p26 > 0 /\ 1+arg4 > 0 /\ 2+arg8p26-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p26-arg1 <= 0 /\ arg2p26-arg1 <= 0 /\ 1-arg6p26+arg5 == 0 /\ arg3-arg1p26 == 0 /\ arg4-arg5p26 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p26, arg11'=arg11p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (0 == 0 /\ arg5-arg4 < 0 /\ arg2p26 > 0 /\ arg3p26-arg2 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg3p26 > 0 /\ 1+arg4 > 0 /\ 2+arg8p26-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p26-arg1 <= 0 /\ arg2p26-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p26 = 0
		
		propagated equality arg6p26 = 1+arg5
		
		propagated equality arg1p26 = arg3
		
		propagated equality arg5p26 = arg4
		
	Simplified Guard

	Original rule:
	f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p26, arg11'=arg11p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (0 == 0 /\ arg5-arg4 < 0 /\ arg2p26 > 0 /\ arg3p26-arg2 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg3p26 > 0 /\ 1+arg4 > 0 /\ 2+arg8p26-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p26-arg1 <= 0 /\ arg2p26-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p26, arg11'=arg11p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (arg5-arg4 < 0 /\ arg2p26 > 0 /\ arg3p26-arg2 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg3p26 > 0 /\ 1+arg4 > 0 /\ 2+arg8p26-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p26-arg1 <= 0 /\ arg2p26-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg1p27, arg10'=arg10p27, arg11'=arg11p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg5p27, arg6'=arg6p27, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (arg5-arg4 < 0 /\ 1+arg4p27 > 0 /\ arg3p27 > 0 /\ arg3p27-arg2 <= 0 /\ 1+arg5 > 0 /\ arg2p27-arg1 <= 0 /\ -arg1p27+arg3 == 0 /\ arg3 > 0 /\ -arg5p27+arg4 == 0 /\ 1+arg4 > 0 /\ arg2p27 > 0 /\ 2+arg8p27-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p27-arg1 <= 0 /\ 1-arg6p27+arg5 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p27, arg11'=arg11p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (0 == 0 /\ arg5-arg4 < 0 /\ 1+arg4p27 > 0 /\ arg3p27 > 0 /\ arg3p27-arg2 <= 0 /\ 1+arg5 > 0 /\ arg2p27-arg1 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg2p27 > 0 /\ 2+arg8p27-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p27-arg1 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg1p27 = arg3
		
		propagated equality arg5p27 = arg4
		
		propagated equality arg6p27 = 1+arg5
		
	Simplified Guard

	Original rule:
	f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p27, arg11'=arg11p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (0 == 0 /\ arg5-arg4 < 0 /\ 1+arg4p27 > 0 /\ arg3p27 > 0 /\ arg3p27-arg2 <= 0 /\ 1+arg5 > 0 /\ arg2p27-arg1 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg2p27 > 0 /\ 2+arg8p27-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p27-arg1 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p27, arg11'=arg11p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (arg5-arg4 < 0 /\ 1+arg4p27 > 0 /\ arg3p27 > 0 /\ arg3p27-arg2 <= 0 /\ 1+arg5 > 0 /\ arg2p27-arg1 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg2p27 > 0 /\ 2+arg8p27-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p27-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=arg3p28, arg4'=arg4p28, arg5'=arg5p28, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ -arg5p28+arg5 == 0 /\ -arg4p28+arg4 == 0 /\ arg1p28 > 0 /\ -1-arg3p28+arg1 == 0), cost: 1
	New rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (0 == 0 /\ 2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p28 > 0), cost: 1
	
		propagated equality arg5p28 = arg5
		
		propagated equality arg4p28 = arg4
		
		propagated equality arg3p28 = -1+arg1
		
	Simplified Guard

	Original rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (0 == 0 /\ 2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p28 > 0), cost: 1
	New rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p28 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p28 > 0), cost: 1
	New rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=-1+arg1, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p28 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=arg3p29, arg4'=arg4p29, arg5'=arg5p29, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (-2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg5-arg5p29 == 0 /\ -arg4p29+arg4 == 0 /\ -1+arg1-arg3p29 == 0 /\ arg6-arg7 == 0), cost: 1
	New rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (0 == 0 /\ -2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg6-arg7 == 0), cost: 1
	
		propagated equality arg5p29 = arg5
		
		propagated equality arg4p29 = arg4
		
		propagated equality arg3p29 = -1+arg1
		
	Simplified Guard

	Original rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (0 == 0 /\ -2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg6-arg7 == 0), cost: 1
	New rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (-2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg6-arg7 == 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (-2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg6-arg7 == 0), cost: 1
	New rule:
	f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=-1+arg1, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (-2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg6-arg7 == 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1p30, arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5p30, arg6'=arg6p30, arg7'=arg7p30, arg8'=arg8p30, arg9'=arg9p30, (arg3 > 0 /\ arg3p30 > 0 /\ arg6-arg6p30 == 0 /\ arg5-arg5p30 == 0 /\ arg8-arg8p30 == 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ -arg7p30+arg7 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg1p30+arg1 == 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1, arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8, arg9'=arg9p30, (0 == 0 /\ arg3 > 0 /\ arg3p30 > 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ 2-arg2+arg7 <= 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
	
		propagated equality arg6p30 = arg6
		
		propagated equality arg5p30 = arg5
		
		propagated equality arg8p30 = arg8
		
		propagated equality arg7p30 = arg7
		
		propagated equality arg1p30 = arg1
		
	Simplified Guard

	Original rule:
	f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1, arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8, arg9'=arg9p30, (0 == 0 /\ arg3 > 0 /\ arg3p30 > 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ 2-arg2+arg7 <= 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1, arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8, arg9'=arg9p30, (arg3 > 0 /\ arg3p30 > 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ 2-arg2+arg7 <= 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg1, arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg5'=arg5, arg6'=arg6, arg7'=arg7, arg8'=arg8, arg9'=arg9p30, (arg3 > 0 /\ arg3p30 > 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ 2-arg2+arg7 <= 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg9'=arg9p30, (arg3 > 0 /\ arg3p30 > 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ 2-arg2+arg7 <= 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2969_0_createTree_LE -> f2703_0_createTree_LE : arg1'=arg1p31, arg10'=arg10p31, arg11'=arg11p31, arg2'=arg2p31, arg3'=arg3p31, arg4'=arg4p31, arg5'=arg5p31, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (arg1p31 > 0 /\ 2-arg3+arg2p31 <= 0 /\ arg2p31 > 0 /\ arg5-arg4p31 == 0 /\ arg1p31-arg2 <= 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1-arg3p31+arg1 == 0 /\ arg6-arg5p31 == 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f2703_0_createTree_LE : arg1'=arg1p31, arg10'=arg10p31, arg11'=arg11p31, arg2'=arg2p31, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (0 == 0 /\ arg1p31 > 0 /\ 2-arg3+arg2p31 <= 0 /\ arg2p31 > 0 /\ arg1p31-arg2 <= 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0), cost: 1
	
		propagated equality arg4p31 = arg5
		
		propagated equality arg3p31 = -1+arg1
		
		propagated equality arg5p31 = arg6
		
	Simplified Guard

	Original rule:
	f2969_0_createTree_LE -> f2703_0_createTree_LE : arg1'=arg1p31, arg10'=arg10p31, arg11'=arg11p31, arg2'=arg2p31, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (0 == 0 /\ arg1p31 > 0 /\ 2-arg3+arg2p31 <= 0 /\ arg2p31 > 0 /\ arg1p31-arg2 <= 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f2703_0_createTree_LE : arg1'=arg1p31, arg10'=arg10p31, arg11'=arg11p31, arg2'=arg2p31, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (arg1p31 > 0 /\ 2-arg3+arg2p31 <= 0 /\ arg2p31 > 0 /\ arg1p31-arg2 <= 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1p32, arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg4p32, arg5'=arg5p32, arg6'=arg6p32, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ arg5-arg4p32 == 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ -arg1p32+arg1 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ arg6-arg5p32 == 0 /\ 2-arg2+arg7 <= 0 /\ -arg6p32+arg7 == 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (0 == 0 /\ arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
	
		propagated equality arg4p32 = arg5
		
		propagated equality arg1p32 = arg1
		
		propagated equality arg5p32 = arg6
		
		propagated equality arg6p32 = arg7
		
	Simplified Guard

	Original rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (0 == 0 /\ arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1p33, arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg4p33, arg5'=arg5p33, arg6'=arg6p33, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (arg6 > 0 /\ -arg4p33+arg5 == 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ -arg1p33+arg1 == 0 /\ 2+arg7p33-arg3 <= 0 /\ arg7-arg6p33 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg5, arg5'=arg5p33, arg6'=arg7, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (0 == 0 /\ arg6 > 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ 2+arg7p33-arg3 <= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg4p33 = arg5
		
		propagated equality arg1p33 = arg1
		
		propagated equality arg6p33 = arg7
		
	Simplified Guard

	Original rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg5, arg5'=arg5p33, arg6'=arg7, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (0 == 0 /\ arg6 > 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ 2+arg7p33-arg3 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg5, arg5'=arg5p33, arg6'=arg7, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (arg6 > 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ 2+arg7p33-arg3 <= 0 /\ arg1 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg1'=arg1, arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg5, arg5'=arg5p33, arg6'=arg7, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (arg6 > 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ 2+arg7p33-arg3 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg5, arg5'=arg5p33, arg6'=arg7, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (arg6 > 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ 2+arg7p33-arg3 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=arg3p34, arg4'=arg4p34, arg5'=arg5p34, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1-arg3p34+arg1 == 0 /\ -1+arg3 > 0 /\ arg5-arg5p34 == 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0 /\ -arg4p34+arg4 == 0), cost: 1
	New rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (0 == 0 /\ arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0), cost: 1
	
		propagated equality arg3p34 = -1+arg1
		
		propagated equality arg5p34 = arg5
		
		propagated equality arg4p34 = arg4
		
	Simplified Guard

	Original rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (0 == 0 /\ arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0), cost: 1
	New rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0), cost: 1
	New rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=-1+arg1, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=arg3p35, arg4'=arg4p35, arg5'=arg5p35, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (-arg5p35+arg5 == 0 /\ -arg4p35+arg4 == 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1-arg3p35+arg1 == 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
	New rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (0 == 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
	
		propagated equality arg5p35 = arg5
		
		propagated equality arg4p35 = arg4
		
		propagated equality arg3p35 = -1+arg1
		
	Simplified Guard

	Original rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (0 == 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
	New rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=-1+arg1, arg4'=arg4, arg5'=arg5, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
	New rule:
	f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=-1+arg1, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p45, arg10'=arg10p45, arg11'=arg11p45, arg2'=arg2p45, arg3'=arg3p45, arg4'=arg4p45, arg5'=arg5p45, arg6'=arg6p45, arg7'=arg7p45, arg8'=arg8p45, arg9'=arg9p45, (-2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ arg6-arg10p45 == 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ arg4-arg5p45 == 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0 /\ -arg6p45+arg5 == 0), cost: 1
	New rule:
	f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p45, arg10'=arg6, arg11'=arg11p45, arg2'=arg2p45, arg3'=arg3p45, arg4'=arg4p45, arg5'=arg4, arg6'=arg5, arg7'=arg7p45, arg8'=arg8p45, arg9'=arg9p45, (0 == 0 /\ -2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0), cost: 1
	
		propagated equality arg10p45 = arg6
		
		propagated equality arg5p45 = arg4
		
		propagated equality arg6p45 = arg5
		
	Simplified Guard

	Original rule:
	f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p45, arg10'=arg6, arg11'=arg11p45, arg2'=arg2p45, arg3'=arg3p45, arg4'=arg4p45, arg5'=arg4, arg6'=arg5, arg7'=arg7p45, arg8'=arg8p45, arg9'=arg9p45, (0 == 0 /\ -2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0), cost: 1
	New rule:
	f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p45, arg10'=arg6, arg11'=arg11p45, arg2'=arg2p45, arg3'=arg3p45, arg4'=arg4p45, arg5'=arg4, arg6'=arg5, arg7'=arg7p45, arg8'=arg8p45, arg9'=arg9p45, (-2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p46, arg10'=arg10p46, arg11'=arg11p46, arg2'=arg2p46, arg3'=arg3p46, arg4'=arg4p46, arg5'=arg5p46, arg6'=arg6p46, arg7'=arg7p46, arg8'=arg8p46, arg9'=arg9p46, (arg2p46-arg2 <= 0 /\ arg5-arg6p46 == 0 /\ -2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ -arg3+arg3p46 <= 0 /\ arg1p46-arg1 <= 0 /\ arg3 > 0 /\ arg6-arg10p46 == 0 /\ 2+arg5-arg1 <= 0 /\ 4-arg2+arg11p46 <= 0 /\ 4+arg6-arg1 <= 0 /\ -4+arg2p46 > 0 /\ -arg5p46+arg4 == 0 /\ -2+arg4p46 > 0 /\ -4+arg2 > 0 /\ 4+arg7p46-arg1 <= 0 /\ -2+arg1p46 > 0 /\ 2-arg3+arg9p46 <= 0 /\ arg3p46 > 0 /\ 2+arg8p46-arg2 <= 0), cost: 1
	New rule:
	f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p46, arg10'=arg6, arg11'=arg11p46, arg2'=arg2p46, arg3'=arg3p46, arg4'=arg4p46, arg5'=arg4, arg6'=arg5, arg7'=arg7p46, arg8'=arg8p46, arg9'=arg9p46, (0 == 0 /\ arg2p46-arg2 <= 0 /\ -2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ -arg3+arg3p46 <= 0 /\ arg1p46-arg1 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4-arg2+arg11p46 <= 0 /\ 4+arg6-arg1 <= 0 /\ -4+arg2p46 > 0 /\ -2+arg4p46 > 0 /\ -4+arg2 > 0 /\ 4+arg7p46-arg1 <= 0 /\ -2+arg1p46 > 0 /\ 2-arg3+arg9p46 <= 0 /\ arg3p46 > 0 /\ 2+arg8p46-arg2 <= 0), cost: 1
	
		propagated equality arg6p46 = arg5
		
		propagated equality arg10p46 = arg6
		
		propagated equality arg5p46 = arg4
		
	Simplified Guard

	Original rule:
	f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p46, arg10'=arg6, arg11'=arg11p46, arg2'=arg2p46, arg3'=arg3p46, arg4'=arg4p46, arg5'=arg4, arg6'=arg5, arg7'=arg7p46, arg8'=arg8p46, arg9'=arg9p46, (0 == 0 /\ arg2p46-arg2 <= 0 /\ -2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ -arg3+arg3p46 <= 0 /\ arg1p46-arg1 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4-arg2+arg11p46 <= 0 /\ 4+arg6-arg1 <= 0 /\ -4+arg2p46 > 0 /\ -2+arg4p46 > 0 /\ -4+arg2 > 0 /\ 4+arg7p46-arg1 <= 0 /\ -2+arg1p46 > 0 /\ 2-arg3+arg9p46 <= 0 /\ arg3p46 > 0 /\ 2+arg8p46-arg2 <= 0), cost: 1
	New rule:
	f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p46, arg10'=arg6, arg11'=arg11p46, arg2'=arg2p46, arg3'=arg3p46, arg4'=arg4p46, arg5'=arg4, arg6'=arg5, arg7'=arg7p46, arg8'=arg8p46, arg9'=arg9p46, (arg2p46-arg2 <= 0 /\ -2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ -arg3+arg3p46 <= 0 /\ arg1p46-arg1 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4-arg2+arg11p46 <= 0 /\ 4+arg6-arg1 <= 0 /\ -4+arg2p46 > 0 /\ -2+arg4p46 > 0 /\ -4+arg2 > 0 /\ 4+arg7p46-arg1 <= 0 /\ -2+arg1p46 > 0 /\ 2-arg3+arg9p46 <= 0 /\ arg3p46 > 0 /\ 2+arg8p46-arg2 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg2'=arg2p49, arg3'=arg3p49, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (-arg3p49+arg3 == 0 /\ arg3 > 0 /\ arg2-arg2p49 == 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg2'=arg2, arg3'=arg3, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (0 == 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	
		propagated equality arg3p49 = arg3
		
		propagated equality arg2p49 = arg2
		
	Simplified Guard

	Original rule:
	f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg2'=arg2, arg3'=arg3, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (0 == 0 /\ arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg2'=arg2, arg3'=arg3, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg2'=arg2, arg3'=arg3, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	New rule:
	f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2820_0_createTree_NONNULL -> f2045_0_random_GT : arg1'=arg1p50, arg10'=arg10p50, arg11'=arg11p50, arg2'=arg2p50, arg3'=arg3p50, arg4'=arg4p50, arg5'=arg5p50, arg6'=arg6p50, arg7'=arg7p50, arg8'=arg8p50, arg9'=arg9p50, (1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ -arg2p50+arg5 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg6-arg3p50 == 0 /\ arg1 > 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2045_0_random_GT : arg1'=arg1p50, arg10'=arg10p50, arg11'=arg11p50, arg2'=arg5, arg3'=arg6, arg4'=arg4p50, arg5'=arg5p50, arg6'=arg6p50, arg7'=arg7p50, arg8'=arg8p50, arg9'=arg9p50, (0 == 0 /\ 1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg2p50 = arg5
		
		propagated equality arg3p50 = arg6
		
	Simplified Guard

	Original rule:
	f2820_0_createTree_NONNULL -> f2045_0_random_GT : arg1'=arg1p50, arg10'=arg10p50, arg11'=arg11p50, arg2'=arg5, arg3'=arg6, arg4'=arg4p50, arg5'=arg5p50, arg6'=arg6p50, arg7'=arg7p50, arg8'=arg8p50, arg9'=arg9p50, (0 == 0 /\ 1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	New rule:
	f2820_0_createTree_NONNULL -> f2045_0_random_GT : arg1'=arg1p50, arg10'=arg10p50, arg11'=arg11p50, arg2'=arg5, arg3'=arg6, arg4'=arg4p50, arg5'=arg5p50, arg6'=arg6p50, arg7'=arg7p50, arg8'=arg8p50, arg9'=arg9p50, (1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2969_0_createTree_LE -> f2045_0_random_GT : arg1'=arg1p51, arg10'=arg10p51, arg11'=arg11p51, arg2'=arg2p51, arg3'=arg3p51, arg4'=arg4p51, arg5'=arg5p51, arg6'=arg6p51, arg7'=arg7p51, arg8'=arg8p51, arg9'=arg9p51, (arg6 > 0 /\ 1+arg5 > 0 /\ arg6-arg3p51 == 0 /\ -1+arg3 > 0 /\ arg5-arg2p51 == 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f2045_0_random_GT : arg1'=arg1p51, arg10'=arg10p51, arg11'=arg11p51, arg2'=arg5, arg3'=arg6, arg4'=arg4p51, arg5'=arg5p51, arg6'=arg6p51, arg7'=arg7p51, arg8'=arg8p51, arg9'=arg9p51, (0 == 0 /\ arg6 > 0 /\ 1+arg5 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg1 > 0), cost: 1
	
		propagated equality arg3p51 = arg6
		
		propagated equality arg2p51 = arg5
		
	Simplified Guard

	Original rule:
	f2969_0_createTree_LE -> f2045_0_random_GT : arg1'=arg1p51, arg10'=arg10p51, arg11'=arg11p51, arg2'=arg5, arg3'=arg6, arg4'=arg4p51, arg5'=arg5p51, arg6'=arg6p51, arg7'=arg7p51, arg8'=arg8p51, arg9'=arg9p51, (0 == 0 /\ arg6 > 0 /\ 1+arg5 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg1 > 0), cost: 1
	New rule:
	f2969_0_createTree_LE -> f2045_0_random_GT : arg1'=arg1p51, arg10'=arg10p51, arg11'=arg11p51, arg2'=arg5, arg3'=arg6, arg4'=arg4p51, arg5'=arg5p51, arg6'=arg6p51, arg7'=arg7p51, arg8'=arg8p51, arg9'=arg9p51, (arg6 > 0 /\ 1+arg5 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg1 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f243_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p5, arg10'=arg10p5, arg11'=arg11p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (1+arg3p5-arg1p4 <= 0 /\ 1+arg1p5 > 0 /\ arg1p4-arg1 <= 0 /\ 1+arg4p5-arg1p4 <= 0 /\ 1+arg4p5 > 0 /\ 1-arg1p4+arg2p5 <= 0 /\ 1+arg2p5 > 0 /\ arg1p4 > 0 /\ 1+arg3p5 > 0 /\ 1+arg1p5-arg1p4 <= 0 /\ arg1 > 0), cost: 1
	New rule:
	f243_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p5, arg10'=arg10p5, arg11'=arg11p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (1+arg1p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ 1+arg4p5 > 0 /\ 1+arg2p5-arg1 <= 0 /\ 1+arg2p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ 1+arg3p5 > 0 /\ 1+arg4p5-arg1 <= 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (1-arg2p11+arg4p12 <= 0 /\ arg2p11-arg2 <= 0 /\ arg2p12 > 0 /\ 1+arg3p12 > 0 /\ arg2p12-arg2p11 <= 0 /\ 1-arg1p11+arg4p12 <= 0 /\ arg1p11 > 0 /\ arg1p11-arg2 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p11-arg1 <= 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 1-arg1p11+arg1p12 <= 0 /\ 2-arg2p11+arg3p11 <= 0 /\ 2+arg4p11-arg2 <= 0 /\ 2+arg4p11-arg2p11 <= 0 /\ arg1 > 0 /\ arg4-arg3p11 == 0 /\ 1-arg1p11+arg3p12 <= 0 /\ 1-arg2p11+arg1p12 <= 0 /\ 1+arg3p12-arg2p11 <= 0), cost: 1
	New rule:
	f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (0 == 0 /\ 1-arg2p11+arg4p12 <= 0 /\ arg2p11-arg2 <= 0 /\ arg2p12 > 0 /\ 1+arg3p12 > 0 /\ arg2p12-arg2p11 <= 0 /\ 1-arg1p11+arg4p12 <= 0 /\ arg1p11 > 0 /\ arg1p11-arg2 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p11-arg1 <= 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 2-arg2p11+arg4 <= 0 /\ 1-arg1p11+arg1p12 <= 0 /\ 2+arg4p11-arg2 <= 0 /\ 2+arg4p11-arg2p11 <= 0 /\ arg1 > 0 /\ 1-arg1p11+arg3p12 <= 0 /\ 1-arg2p11+arg1p12 <= 0 /\ 1+arg3p12-arg2p11 <= 0), cost: 1
	
		propagated equality arg3p11 = arg4
		
	Simplified Guard

	Original rule:
	f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (0 == 0 /\ 1-arg2p11+arg4p12 <= 0 /\ arg2p11-arg2 <= 0 /\ arg2p12 > 0 /\ 1+arg3p12 > 0 /\ arg2p12-arg2p11 <= 0 /\ 1-arg1p11+arg4p12 <= 0 /\ arg1p11 > 0 /\ arg1p11-arg2 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p11-arg1 <= 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 2-arg2p11+arg4 <= 0 /\ 1-arg1p11+arg1p12 <= 0 /\ 2+arg4p11-arg2 <= 0 /\ 2+arg4p11-arg2p11 <= 0 /\ arg1 > 0 /\ 1-arg1p11+arg3p12 <= 0 /\ 1-arg2p11+arg1p12 <= 0 /\ 1+arg3p12-arg2p11 <= 0), cost: 1
	New rule:
	f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (1-arg2p11+arg4p12 <= 0 /\ arg2p11-arg2 <= 0 /\ arg2p12 > 0 /\ 1+arg3p12 > 0 /\ arg2p12-arg2p11 <= 0 /\ 1-arg1p11+arg4p12 <= 0 /\ arg1p11 > 0 /\ arg1p11-arg2 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p11-arg1 <= 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 2-arg2p11+arg4 <= 0 /\ 1-arg1p11+arg1p12 <= 0 /\ 2+arg4p11-arg2 <= 0 /\ 2+arg4p11-arg2p11 <= 0 /\ arg1 > 0 /\ 1-arg1p11+arg3p12 <= 0 /\ 1-arg2p11+arg1p12 <= 0 /\ 1+arg3p12-arg2p11 <= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (1-arg2p11+arg4p12 <= 0 /\ arg2p11-arg2 <= 0 /\ arg2p12 > 0 /\ 1+arg3p12 > 0 /\ arg2p12-arg2p11 <= 0 /\ 1-arg1p11+arg4p12 <= 0 /\ arg1p11 > 0 /\ arg1p11-arg2 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p11-arg1 <= 0 /\ arg2p11 > 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 2-arg2p11+arg4 <= 0 /\ 1-arg1p11+arg1p12 <= 0 /\ 2+arg4p11-arg2 <= 0 /\ 2+arg4p11-arg2p11 <= 0 /\ arg1 > 0 /\ 1-arg1p11+arg3p12 <= 0 /\ 1-arg2p11+arg1p12 <= 0 /\ 1+arg3p12-arg2p11 <= 0), cost: 1
	New rule:
	f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (arg2p12 > 0 /\ 1+arg3p12 > 0 /\ 1+arg3p12-arg1 <= 0 /\ arg2p12-arg2 <= 0 /\ 1-arg2+arg4p12 <= 0 /\ 1-arg2 <= 0 /\ 1+arg4p12-arg1 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 1+arg1p12-arg1 <= 0 /\ 1-arg2+arg1p12 <= 0 /\ 1+arg3p12-arg2 <= 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1

Step with 52

	Trace

	52[T]
	
	Blocked

	[{}, {}]

Step with 1

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 7

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 9

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Step with 37

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 37[(1+arg1p38 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ 1+arg1p38-arg2 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}]

Step with 51

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 37[(1+arg1p38 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ 1+arg1p38-arg2 <= 0 /\ arg1 > 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 51

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 37[(1+arg1p38 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ 1+arg1p38-arg2 <= 0 /\ arg1 > 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {}, {}]

Covered

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 37[(1+arg1p38 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ 1+arg1p38-arg2 <= 0 /\ arg1 > 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {}, {51[T]}]

Backtrack

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 37[(1+arg1p38 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ 1+arg1p38-arg2 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {}, {51[T]}]

Backtrack

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T]}]

Step with 39

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 39[(arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg1p40-arg1 <= 0 /\ arg4 > 0 /\ 1+arg1p40 > 0 /\ arg1 > 0 /\ 1+arg1p40-arg4 <= 0 /\ 1-arg3+arg1p40 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T]}, {}]

Step with 51

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 39[(arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg1p40-arg1 <= 0 /\ arg4 > 0 /\ 1+arg1p40 > 0 /\ arg1 > 0 /\ 1+arg1p40-arg4 <= 0 /\ 1-arg3+arg1p40 <= 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T]}, {}, {}]

Step with 51

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 39[(arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg1p40-arg1 <= 0 /\ arg4 > 0 /\ 1+arg1p40 > 0 /\ arg1 > 0 /\ 1+arg1p40-arg4 <= 0 /\ 1-arg3+arg1p40 <= 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T]}, {}, {}, {}]

Covered

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 39[(arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg1p40-arg1 <= 0 /\ arg4 > 0 /\ 1+arg1p40 > 0 /\ arg1 > 0 /\ 1+arg1p40-arg4 <= 0 /\ 1-arg3+arg1p40 <= 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T]}, {}, {51[T]}]

Backtrack

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 39[(arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg1p40-arg1 <= 0 /\ arg4 > 0 /\ 1+arg1p40 > 0 /\ arg1 > 0 /\ 1+arg1p40-arg4 <= 0 /\ 1-arg3+arg1p40 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T]}, {51[T]}]

Backtrack

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}]

Step with 35

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {}]

Step with 38

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 38[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg6-arg1 <= 0 /\ 1+arg1p39 > 0 /\ arg2 > 0 /\ 1+arg1p39-arg2 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {}, {}]

Step with 51

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 38[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg6-arg1 <= 0 /\ 1+arg1p39 > 0 /\ arg2 > 0 /\ 1+arg1p39-arg2 <= 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {}, {}, {}]

Step with 51

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 38[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg6-arg1 <= 0 /\ 1+arg1p39 > 0 /\ arg2 > 0 /\ 1+arg1p39-arg2 <= 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {}, {}, {}, {}]

Covered

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 38[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg6-arg1 <= 0 /\ 1+arg1p39 > 0 /\ arg2 > 0 /\ 1+arg1p39-arg2 <= 0)], 51[(1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {}, {}, {51[T]}]

Backtrack

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 38[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg6-arg1 <= 0 /\ 1+arg1p39 > 0 /\ arg2 > 0 /\ 1+arg1p39-arg2 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {}, {51[T]}]

Backtrack

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {38[T]}]

Step with 41

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 41[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ 1+arg3p42 > 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg4p42-arg2 <= 0 /\ 1+arg4p42 > 0 /\ 1+arg1p42 > 0 /\ 2+arg1p42-arg2 <= 0 /\ 4+arg6-arg1 <= 0 /\ arg2p42 > 0 /\ -arg3+arg2p42 <= 0 /\ 2-arg2+arg3p42 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {38[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 36

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 41[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ 1+arg3p42 > 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg4p42-arg2 <= 0 /\ 1+arg4p42 > 0 /\ 1+arg1p42 > 0 /\ 2+arg1p42-arg2 <= 0 /\ 4+arg6-arg1 <= 0 /\ arg2p42 > 0 /\ -arg3+arg2p42 <= 0 /\ 2-arg2+arg3p42 <= 0)], 36[(arg2p37-arg4 <= 0 /\ arg2p37 > 0 /\ arg3 > 0 /\ arg2p37-arg1 <= 0 /\ -4+arg1p37 > 0 /\ -arg2+arg1p37 <= 0 /\ -4+arg2 > 0 /\ 2+arg5p37-arg2 <= 0 /\ 4+arg6p37-arg2 <= 0 /\ arg4 > 0 /\ arg2p37-arg3 <= 0 /\ arg1 > 0 /\ -2+arg3p37 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {38[T]}, {35[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 80

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 41[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ 1+arg3p42 > 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg4p42-arg2 <= 0 /\ 1+arg4p42 > 0 /\ 1+arg1p42 > 0 /\ 2+arg1p42-arg2 <= 0 /\ 4+arg6-arg1 <= 0 /\ arg2p42 > 0 /\ -arg3+arg2p42 <= 0 /\ 2-arg2+arg3p42 <= 0)], 36[(arg2p37-arg4 <= 0 /\ arg2p37 > 0 /\ arg3 > 0 /\ arg2p37-arg1 <= 0 /\ -4+arg1p37 > 0 /\ -arg2+arg1p37 <= 0 /\ -4+arg2 > 0 /\ 2+arg5p37-arg2 <= 0 /\ 4+arg6p37-arg2 <= 0 /\ arg4 > 0 /\ arg2p37-arg3 <= 0 /\ arg1 > 0 /\ -2+arg3p37 > 0)], 80[(-2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {38[T]}, {35[T]}, {41[T]}, {}]

Step with 47

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 41[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ 1+arg3p42 > 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg4p42-arg2 <= 0 /\ 1+arg4p42 > 0 /\ 1+arg1p42 > 0 /\ 2+arg1p42-arg2 <= 0 /\ 4+arg6-arg1 <= 0 /\ arg2p42 > 0 /\ -arg3+arg2p42 <= 0 /\ 2-arg2+arg3p42 <= 0)], 36[(arg2p37-arg4 <= 0 /\ arg2p37 > 0 /\ arg3 > 0 /\ arg2p37-arg1 <= 0 /\ -4+arg1p37 > 0 /\ -arg2+arg1p37 <= 0 /\ -4+arg2 > 0 /\ 2+arg5p37-arg2 <= 0 /\ 4+arg6p37-arg2 <= 0 /\ arg4 > 0 /\ arg2p37-arg3 <= 0 /\ arg1 > 0 /\ -2+arg3p37 > 0)], 80[(-2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0)], 47[(-2+arg1 > 0 /\ 4+arg7-arg1 <= 0 /\ arg3 > 0 /\ arg2p48 > 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg2p48 <= 0 /\ arg3p48 > 0 /\ arg3p48-arg4 <= 0 /\ -arg4+arg1p48 <= 0 /\ 2+arg8-arg2 <= 0 /\ -arg4+arg4p48 <= 0 /\ 4+arg10-arg1 <= 0 /\ 2+arg6-arg1 <= 0 /\ 2+arg11-arg4 <= 0 /\ -2+arg2 > 0 /\ 2-arg3+arg10 <= 0 /\ arg4 > 0 /\ arg4p48 > 0 /\ arg1p48 > 0 /\ 4+arg11-arg2 <= 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {38[T]}, {35[T]}, {41[T]}, {}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg10 arg11 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9
   1: f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p2, arg10'=arg10p2, arg11'=arg11p2, arg2'=arg2p2, arg3'=arg3p2, arg4'=arg4p2, arg5'=arg5p2, arg6'=arg6p2, arg7'=arg7p2, arg8'=arg8p2, arg9'=arg9p2, (arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0), cost: 1
   5: f1_0_main_Load -> f2736_0_main_InvokeMethod : arg1'=arg1p6, arg10'=arg10p6, arg11'=arg11p6, arg2'=arg2p6, arg3'=arg3p6, arg4'=arg4p6, arg5'=arg5p6, arg6'=arg6p6, arg7'=arg7p6, arg8'=arg8p6, arg9'=arg9p6, (arg2p6 > 0 /\ arg1p6-arg1 <= 0 /\ arg1p6 > 0 /\ arg1 > 0), cost: 1
  13: f1_0_main_Load -> f716_0_random_GT : arg1'=arg1p14, arg10'=arg10p14, arg11'=arg11p14, arg2'=arg2p14, arg3'=arg3p14, arg4'=arg4p14, arg5'=arg5p14, arg6'=arg6p14, arg7'=arg7p14, arg8'=arg8p14, arg9'=arg9p14, (arg1 > 0 /\ 1+arg2 > 0), cost: 1
  55: f1_0_main_Load -> f243_0_main_InvokeMethod : arg1'=arg1p1, arg10'=arg10p1, arg11'=arg11p1, arg2'=0, arg3'=arg3p1, arg4'=arg4p1, arg5'=arg5p1, arg6'=arg6p1, arg7'=arg7p1, arg8'=arg8p1, arg9'=arg9p1, (arg1p1 > 0 /\ arg1p1-arg1 <= 0 /\ arg1 > 0), cost: 1
   7: f243_0_main_InvokeMethod -> f2748_0_main_InvokeMethod : arg1'=arg1p8, arg10'=arg10p8, arg11'=arg11p8, arg2'=arg2p8, arg3'=arg3p8, arg4'=arg4p8, arg5'=arg5p8, arg6'=arg6p8, arg7'=arg7p8, arg8'=arg8p8, arg9'=arg9p8, (arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0), cost: 1
  59: f243_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p15, arg10'=arg10p15, arg11'=arg11p15, arg2'=arg2p15, arg3'=arg3p15, arg4'=arg4p15, arg5'=arg5p15, arg6'=arg6p15, arg7'=arg7p15, arg8'=arg8p15, arg9'=arg9p15, (arg1 > 0), cost: 1
  85: f243_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p5, arg10'=arg10p5, arg11'=arg11p5, arg2'=arg2p5, arg3'=arg3p5, arg4'=arg4p5, arg5'=arg5p5, arg6'=arg6p5, arg7'=arg7p5, arg8'=arg8p5, arg9'=arg9p5, (1+arg1p5 > 0 /\ 1+arg1p5-arg1 <= 0 /\ 1+arg4p5 > 0 /\ 1+arg2p5-arg1 <= 0 /\ 1+arg2p5 > 0 /\ 1+arg3p5-arg1 <= 0 /\ 1+arg3p5 > 0 /\ 1+arg4p5-arg1 <= 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1
  56: f61_0_createTree_Return -> f243_0_main_InvokeMethod : arg1'=arg1p3, arg10'=arg10p3, arg11'=arg11p3, arg2'=0, arg3'=arg3p3, arg4'=arg4p3, arg5'=arg5p3, arg6'=arg6p3, arg7'=arg7p3, arg8'=arg8p3, arg9'=arg9p3, arg1p3 > 0, cost: 1
  35: f3774_0_lessleaves_NONNULL -> f3815_0_append_Return : arg1'=arg1p36, arg10'=arg10p36, arg11'=arg11p36, arg2'=arg2p36, arg3'=arg3p36, arg4'=arg4p36, arg5'=arg5p36, arg6'=arg6p36, arg7'=arg7p36, arg8'=arg8p36, arg9'=arg9p36, (arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0), cost: 1
  36: f3774_0_lessleaves_NONNULL -> f3815_0_append_Return : arg1'=arg1p37, arg10'=arg10p37, arg11'=arg11p37, arg2'=arg2p37, arg3'=arg3p37, arg4'=arg4p37, arg5'=arg5p37, arg6'=arg6p37, arg7'=arg7p37, arg8'=arg8p37, arg9'=arg9p37, (arg2p37-arg4 <= 0 /\ arg2p37 > 0 /\ arg3 > 0 /\ arg2p37-arg1 <= 0 /\ -4+arg1p37 > 0 /\ -arg2+arg1p37 <= 0 /\ -4+arg2 > 0 /\ 2+arg5p37-arg2 <= 0 /\ 4+arg6p37-arg2 <= 0 /\ arg4 > 0 /\ arg2p37-arg3 <= 0 /\ arg1 > 0 /\ -2+arg3p37 > 0), cost: 1
  37: f3774_0_lessleaves_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p38, arg10'=arg10p38, arg11'=arg11p38, arg2'=arg2p38, arg3'=arg3p38, arg4'=arg4p38, arg5'=arg5p38, arg6'=arg6p38, arg7'=arg7p38, arg8'=arg8p38, arg9'=arg9p38, (1+arg1p38 > 0 /\ arg3 > 0 /\ arg2 > 0 /\ arg4 > 0 /\ 1+arg1p38-arg2 <= 0 /\ arg1 > 0), cost: 1
  39: f3774_0_lessleaves_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p40, arg10'=arg10p40, arg11'=arg11p40, arg2'=arg2p40, arg3'=arg3p40, arg4'=arg4p40, arg5'=arg5p40, arg6'=arg6p40, arg7'=arg7p40, arg8'=arg8p40, arg9'=arg9p40, (arg3 > 0 /\ -1+arg2 > 0 /\ 1+arg1p40-arg1 <= 0 /\ arg4 > 0 /\ 1+arg1p40 > 0 /\ arg1 > 0 /\ 1+arg1p40-arg4 <= 0 /\ 1-arg3+arg1p40 <= 0), cost: 1
  40: f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p41, arg10'=arg10p41, arg11'=arg11p41, arg2'=arg2p41, arg3'=arg3p41, arg4'=arg4p41, arg5'=arg5p41, arg6'=arg6p41, arg7'=arg7p41, arg8'=arg8p41, arg9'=arg9p41, (2+arg3p41-arg4 <= 0 /\ 2+arg4p41-arg1 <= 0 /\ -1+arg2 > 0 /\ 1+arg4p41 > 0 /\ 2+arg3p41-arg1 <= 0 /\ 2+arg2p41-arg2 <= 0 /\ 2+arg1p41-arg3 <= 0 /\ -1+arg3 > 0 /\ 2-arg3+arg4p41 <= 0 /\ 1+arg2p41 > 0 /\ 2+arg1p41-arg4 <= 0 /\ 1+arg3p41 > 0 /\ -1+arg4 > 0 /\ 2+arg1p41-arg1 <= 0 /\ 2-arg3+arg3p41 <= 0 /\ 1+arg1p41 > 0 /\ 2-arg4+arg4p41 <= 0 /\ -1+arg1 > 0), cost: 1
  42: f3774_0_lessleaves_NONNULL -> f4062_0_lessleaves_InvokeMethod : arg1'=arg1p43, arg10'=arg10p43, arg11'=arg11p43, arg2'=arg2p43, arg3'=arg3p43, arg4'=arg4p43, arg5'=arg5p43, arg6'=arg6p43, arg7'=arg7p43, arg8'=arg8p43, arg9'=arg9p43, (1+arg6p43 > 0 /\ 1+arg3p43 > 0 /\ -3+arg1 > 0 /\ arg2p43-arg3 <= 0 /\ 4+arg8p43-arg1 <= 0 /\ -arg2+arg1p43 <= 0 /\ 2+arg7p43-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg7p43-arg4 <= 0 /\ 4+arg8p43-arg4 <= 0 /\ -1+arg1p43 > 0 /\ -arg3+arg4p43 <= 0 /\ -3+arg4 > 0 /\ arg4p43-arg1 <= 0 /\ 2+arg6p43-arg2 <= 0 /\ 4+arg8p43-arg3 <= 0 /\ arg2p43-arg1 <= 0 /\ -3+arg3 > 0 /\ arg4p43 > 0 /\ -3+arg2p43 > 0 /\ arg4p43-arg4 <= 0 /\ arg2p43-arg4 <= 0 /\ 2+arg3p43-arg2 <= 0 /\ 2-arg3+arg7p43 <= 0), cost: 1
  43: f3774_0_lessleaves_NONNULL -> f4062_0_lessleaves_InvokeMethod : arg1'=arg1p44, arg10'=arg10p44, arg11'=arg11p44, arg2'=arg2p44, arg3'=arg3p44, arg4'=arg4p44, arg5'=arg5p44, arg6'=arg6p44, arg7'=arg7p44, arg8'=arg8p44, arg9'=arg9p44, (-4+arg4 > 0 /\ 2+arg7p44-arg3 <= 0 /\ 4+arg8p44-arg1 <= 0 /\ -1+arg2 > 0 /\ 4-arg3+arg8p44 <= 0 /\ -4+arg1 > 0 /\ 1+arg6p44 > 0 /\ 4+arg8p44-arg4 <= 0 /\ -1+arg1p44 > 0 /\ 1+arg3p44 > 0 /\ 2+arg7p44-arg1 <= 0 /\ 2-arg2+arg3p44 <= 0 /\ -2+arg4p44 > 0 /\ arg1p44-arg2 <= 0 /\ arg2p44-arg1 <= 0 /\ -4+arg2p44 > 0 /\ 2-arg2+arg6p44 <= 0 /\ -4+arg3 > 0 /\ 2+arg7p44-arg4 <= 0 /\ -arg3+arg2p44 <= 0 /\ arg2p44-arg4 <= 0), cost: 1
  87: f3774_0_lessleaves_NONNULL -> LoAT_sink : (-arg2p48+arg2 <= 0 /\ -4+arg4 >= 0 /\ -arg1p48+arg1 <= 0 /\ -arg1p48+arg1 >= 0 /\ -3+arg1 >= 0 /\ arg3 > 0 /\ arg2p48 > 0 /\ arg3-arg1p48 >= 0 /\ -4+arg1 >= 0 /\ -arg4p48+arg1 >= 0 /\ -1+arg3 >= 0 /\ -3+arg4 >= 0 /\ arg3-arg4p48 >= 0 /\ -arg3p48+arg1 >= 0 /\ -5+arg2 >= 0 /\ arg3-arg3p48 <= 0 /\ arg3-arg3p48 >= 0 /\ arg3p48 > 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ -3+arg3 >= 0 /\ -4+arg3 >= 0 /\ arg4 > 0 /\ -arg3p48+arg4 >= 0 /\ arg4-arg1p48 >= 0 /\ -3+arg2 >= 0 /\ arg4p48 > 0 /\ arg4-arg4p48 <= 0 /\ arg4-arg4p48 >= 0 /\ arg1p48 > 0 /\ -1+arg1 >= 0 /\ arg1 > 0), cost: NONTERM
  88: f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg4p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg4p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-arg2p48+arg2 <= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ arg2p48 > 0 /\ -3+arg2p48 >= 0 /\ -arg4p48+arg1 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ arg3-arg4p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ arg4p48 > 0 /\ arg4-arg4p48 >= 0 /\ -1+arg1 >= 0), cost: 1
  12: f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p13, arg10'=arg10p13, arg11'=arg11p13, arg2'=arg2p13, arg3'=arg3p13, arg4'=arg4p13, arg5'=arg5p13, arg6'=arg6p13, arg7'=arg7p13, arg8'=arg8p13, arg9'=arg9p13, (arg4p13 > 0 /\ arg1p13 > 0 /\ arg2p13 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg3p13 > 0 /\ arg2p13-arg2 <= 0 /\ arg1 > 0), cost: 1
  60: f2736_0_main_InvokeMethod -> f716_0_random_GT : arg1'=arg1p16, arg10'=arg10p16, arg11'=arg11p16, arg2'=arg2p16, arg3'=arg3p16, arg4'=arg4p16, arg5'=arg5p16, arg6'=arg6p16, arg7'=arg7p16, arg8'=arg8p16, arg9'=arg9p16, (2-arg2+arg4 <= 0 /\ arg2 > 0 /\ arg1 > 0), cost: 1
  86: f2736_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p12, arg10'=arg10p12, arg11'=arg11p12, arg2'=arg2p12, arg3'=arg3p12, arg4'=arg4p12, arg5'=arg5p12, arg6'=arg6p12, arg7'=arg7p12, arg8'=arg8p12, arg9'=arg9p12, (arg2p12 > 0 /\ 1+arg3p12 > 0 /\ 1+arg3p12-arg1 <= 0 /\ arg2p12-arg2 <= 0 /\ 1-arg2+arg4p12 <= 0 /\ 1-arg2 <= 0 /\ 1+arg4p12-arg1 <= 0 /\ 1+arg1p12 > 0 /\ 2-arg2+arg4 <= 0 /\ arg2 > 0 /\ 1+arg4p12 > 0 /\ 1+arg1p12-arg1 <= 0 /\ 1-arg2+arg1p12 <= 0 /\ 1+arg3p12-arg2 <= 0 /\ 1-arg1 <= 0 /\ arg1 > 0), cost: 1
  57: f674_0_createTree_Return -> f2736_0_main_InvokeMethod : arg1'=arg1p7, arg10'=arg10p7, arg11'=arg11p7, arg2'=arg2p7, arg5'=arg5p7, arg6'=arg6p7, arg7'=arg7p7, arg8'=arg8p7, arg9'=arg9p7, (-arg2+arg2p7 <= 0 /\ 1+arg1p7-arg2 <= 0 /\ -1+arg2 > 0 /\ arg1p7 > 0 /\ -1+arg2p7 > 0 /\ 2-arg2+arg4 <= 0 /\ arg1p7-arg1 <= 0 /\ arg1 > 0), cost: 1
   9: f2748_0_main_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p10, arg10'=arg10p10, arg11'=arg11p10, arg2'=arg2p10, arg3'=arg3p10, arg4'=arg4p10, arg5'=arg5p10, arg6'=arg6p10, arg7'=arg7p10, arg8'=arg8p10, arg9'=arg9p10, (1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
  58: f675_0_createTree_Return -> f2748_0_main_InvokeMethod : arg1'=arg1p9, arg10'=arg10p9, arg11'=arg11p9, arg2'=arg2p9, arg4'=arg4p9, arg5'=arg5p9, arg6'=arg6p9, arg7'=arg7p9, arg8'=arg8p9, arg9'=arg9p9, (arg1p9-arg1 <= 0 /\ arg1p9 > 0 /\ -1+arg2 > 0 /\ arg2p9-arg2 <= 0 /\ 1+arg1p9-arg2 <= 0 /\ -1+arg2p9 > 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0), cost: 1
  61: f716_0_random_GT -> f835_0_createTree_NE : arg1'=0, arg10'=arg10p17, arg11'=arg11p17, arg2'=arg2p17, arg3'=1+x88, arg4'=arg4p17, arg5'=arg5p17, arg6'=arg6p17, arg7'=arg7p17, arg8'=arg8p17, arg9'=arg9p17, (x88-arg2p17 < 0 /\ 1+x88 > 0), cost: 1
  62: f716_0_random_GT -> f835_0_createTree_NE : arg1'=arg1p18, arg10'=arg10p18, arg11'=arg11p18, arg2'=arg2p18, arg3'=1+x90, arg4'=arg4p18, arg5'=arg5p18, arg6'=arg6p18, arg7'=arg7p18, arg8'=arg8p18, arg9'=arg9p18, (1+x90 > 0 /\ 1+arg1p18 > 0 /\ -arg2p18+x90 < 0), cost: 1
  64: f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p20, arg10'=arg10p20, arg11'=arg11p20, arg2'=arg2p20, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p20, arg7'=arg7p20, arg8'=arg8p20, arg9'=arg9p20, (arg3 > 0 /\ -1+arg1p20 > 0 /\ arg1 > 0 /\ -1+arg2p20 > 0), cost: 1
  65: f835_0_createTree_NE -> f2703_0_createTree_LE : arg1'=arg1p21, arg10'=arg10p21, arg11'=arg11p21, arg2'=arg2p21, arg3'=arg1, arg4'=arg2, arg5'=arg5p21, arg6'=arg6p21, arg7'=arg7p21, arg8'=arg8p21, arg9'=arg9p21, (-1+arg1p21 > 0 /\ arg3 > 0 /\ -1+arg2p21 > 0 /\ arg1 > 0), cost: 1
  82: f835_0_createTree_NE -> f2045_0_random_GT : arg1'=arg1p49, arg10'=arg10p49, arg11'=arg11p49, arg4'=arg4p49, arg5'=arg5p49, arg6'=arg6p49, arg7'=arg7p49, arg8'=arg8p49, arg9'=arg9p49, (arg3 > 0 /\ arg1 > 0 /\ 1+arg2 > 0), cost: 1
  63: f1037_0_createNode_Return -> f2703_0_createTree_LE : arg1'=arg1p19, arg10'=arg10p19, arg11'=arg11p19, arg2'=arg2p19, arg3'=arg1, arg4'=arg2, arg5'=arg3, arg6'=arg6p19, arg7'=arg7p19, arg8'=arg8p19, arg9'=arg9p19, (-1+arg1p19 > 0 /\ -1+arg2p19 > 0), cost: 1
  66: f2703_0_createTree_LE -> f2820_0_createTree_NONNULL : arg1'=arg3, arg10'=arg10p22, arg11'=arg11p22, arg2'=arg2p22, arg3'=arg3p22, arg4'=arg4p22, arg5'=arg4, arg6'=arg5, arg7'=arg7p22, arg8'=arg8p22, arg9'=arg9p22, (arg5-arg4 >= 0 /\ -arg2+arg3p22 <= 0 /\ 1+arg4p22 > 0 /\ arg3 > 0 /\ 2+arg8p22-arg1 <= 0 /\ arg2p22 > 0 /\ 1+arg4 > 0 /\ 2+arg7p22-arg1 <= 0 /\ arg2 > 0 /\ arg3p22 > 0 /\ 1-arg2+arg4p22 <= 0 /\ 2+arg9p22-arg2 <= 0 /\ arg2p22-arg1 <= 0 /\ arg1 > 0), cost: 1
  70: f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p26, arg11'=arg11p26, arg2'=arg2p26, arg3'=arg3p26, arg4'=0, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p26, arg8'=arg8p26, arg9'=arg9p26, (arg5-arg4 < 0 /\ arg2p26 > 0 /\ arg3p26-arg2 <= 0 /\ 1+arg5 > 0 /\ arg3 > 0 /\ arg3p26 > 0 /\ 1+arg4 > 0 /\ 2+arg8p26-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p26-arg1 <= 0 /\ arg2p26-arg1 <= 0 /\ arg1 > 0), cost: 1
  71: f2703_0_createTree_LE -> f2969_0_createTree_LE : arg1'=arg3, arg10'=arg10p27, arg11'=arg11p27, arg2'=arg2p27, arg3'=arg3p27, arg4'=arg4p27, arg5'=arg4, arg6'=1+arg5, arg7'=arg7p27, arg8'=arg8p27, arg9'=arg9p27, (arg5-arg4 < 0 /\ 1+arg4p27 > 0 /\ arg3p27 > 0 /\ arg3p27-arg2 <= 0 /\ 1+arg5 > 0 /\ arg2p27-arg1 <= 0 /\ arg3 > 0 /\ 1+arg4 > 0 /\ arg2p27 > 0 /\ 2+arg8p27-arg1 <= 0 /\ arg2 > 0 /\ 2+arg7p27-arg1 <= 0 /\ arg1 > 0), cost: 1
  67: f2820_0_createTree_NONNULL -> f2703_0_createTree_LE : arg1'=arg1p23, arg10'=arg10p23, arg11'=arg11p23, arg2'=arg2p23, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p23, arg7'=arg7p23, arg8'=arg8p23, arg9'=arg9p23, (2-arg3+arg2p23 <= 0 /\ 2+arg9-arg3 <= 0 /\ arg1p23-arg2 <= 0 /\ arg1p23 > 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p23 > 0 /\ -arg4+arg2p23 <= 0), cost: 1
  68: f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg10'=arg10p24, arg11'=arg11p24, arg2'=arg2p24, arg3'=arg3p24, arg4'=arg5, arg5'=arg6, arg6'=arg8, arg7'=arg9, arg8'=arg8p24, arg9'=arg9p24, (-1+arg3p24 > 0 /\ arg2p24 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg2p24-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ -arg3+arg3p24 <= 0 /\ arg1 > 0), cost: 1
  69: f2820_0_createTree_NONNULL -> f2917_0_createTree_FieldAccess : arg10'=arg10p25, arg11'=arg11p25, arg2'=arg2p25, arg3'=arg3p25, arg4'=arg5, arg5'=arg5p25, arg6'=arg8, arg7'=arg9, arg8'=arg8p25, arg9'=arg9p25, (arg2p25-arg2 <= 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg3p25 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2p25 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -1+arg3p25 > 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  83: f2820_0_createTree_NONNULL -> f2045_0_random_GT : arg1'=arg1p50, arg10'=arg10p50, arg11'=arg11p50, arg2'=arg5, arg3'=arg6, arg4'=arg4p50, arg5'=arg5p50, arg6'=arg6p50, arg7'=arg7p50, arg8'=arg8p50, arg9'=arg9p50, (1+arg5 > 0 /\ 2+arg9-arg3 <= 0 /\ -1+arg3 > 0 /\ 1+arg4 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg6-arg5 >= 0 /\ arg1 > 0), cost: 1
  72: f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p28, arg10'=arg10p28, arg11'=arg11p28, arg2'=arg2p28, arg3'=-1+arg1, arg6'=arg6p28, arg7'=arg7p28, arg8'=arg8p28, arg9'=arg9p28, (2-arg3+arg7 <= 0 /\ arg2p28 > 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p28 > 0), cost: 1
  73: f2917_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p29, arg10'=arg10p29, arg11'=arg11p29, arg2'=arg2p29, arg3'=-1+arg1, arg6'=arg6p29, arg7'=arg7p29, arg8'=arg8p29, arg9'=arg9p29, (-2+arg1p29-arg2 <= 0 /\ 2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -2-arg2+arg2p29 <= 0 /\ -1+arg3 > 0 /\ -2-arg3+arg1p29 <= 0 /\ -3+arg1p29 > 0 /\ 2+arg6-arg2 <= 0 /\ -2-arg3+arg2p29 <= 0 /\ -3+arg2p29 > 0 /\ arg6-arg7 == 0), cost: 1
  74: f2969_0_createTree_LE -> f2820_0_createTree_NONNULL : arg10'=arg10p30, arg11'=arg11p30, arg2'=arg2p30, arg3'=arg3p30, arg4'=arg4p30, arg9'=arg9p30, (arg3 > 0 /\ arg3p30 > 0 /\ -arg3+arg3p30 <= 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ -arg4 == 0 /\ -arg2+arg2p30 <= 0 /\ 2-arg2+arg7 <= 0 /\ 1-arg3+arg4p30 <= 0 /\ 1+arg4p30 > 0 /\ 2+arg9p30-arg3 <= 0 /\ arg2p30 > 0), cost: 1
  75: f2969_0_createTree_LE -> f2703_0_createTree_LE : arg1'=arg1p31, arg10'=arg10p31, arg11'=arg11p31, arg2'=arg2p31, arg3'=-1+arg1, arg4'=arg5, arg5'=arg6, arg6'=arg6p31, arg7'=arg7p31, arg8'=arg8p31, arg9'=arg9p31, (arg1p31 > 0 /\ 2-arg3+arg2p31 <= 0 /\ arg2p31 > 0 /\ arg1p31-arg2 <= 0 /\ -2+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0), cost: 1
  76: f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg10'=arg10p32, arg11'=arg11p32, arg2'=arg2p32, arg3'=arg3p32, arg4'=arg5, arg5'=arg6, arg6'=arg7, arg7'=arg7p32, arg8'=arg8p32, arg9'=arg9p32, (arg6 > 0 /\ 2-arg3+arg7p32 <= 0 /\ -1+arg3p32 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ arg3p32-arg3 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg2p32 > 0 /\ arg1 > 0 /\ -arg2+arg2p32 <= 0), cost: 1
  77: f2969_0_createTree_LE -> f3061_0_createTree_FieldAccess : arg10'=arg10p33, arg11'=arg11p33, arg2'=arg2p33, arg3'=arg3p33, arg4'=arg5, arg5'=arg5p33, arg6'=arg7, arg7'=arg7p33, arg8'=arg8p33, arg9'=arg9p33, (arg6 > 0 /\ -arg3+arg3p33 <= 0 /\ -1+arg3 > 0 /\ -arg2+arg2p33 <= 0 /\ arg2 > 0 /\ arg2p33 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ -1+arg3p33 > 0 /\ 2+arg7p33-arg3 <= 0 /\ arg1 > 0), cost: 1
  84: f2969_0_createTree_LE -> f2045_0_random_GT : arg1'=arg1p51, arg10'=arg10p51, arg11'=arg11p51, arg2'=arg5, arg3'=arg6, arg4'=arg4p51, arg5'=arg5p51, arg6'=arg6p51, arg7'=arg7p51, arg8'=arg8p51, arg9'=arg9p51, (arg6 > 0 /\ 1+arg5 > 0 /\ -1+arg3 > 0 /\ arg2 > 0 /\ 2+arg8-arg2 <= 0 /\ 2-arg2+arg7 <= 0 /\ arg4 > 0 /\ arg1 > 0), cost: 1
  78: f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p34, arg10'=arg10p34, arg11'=arg11p34, arg2'=arg2p34, arg3'=-1+arg1, arg6'=arg6p34, arg7'=arg7p34, arg8'=arg8p34, arg9'=arg9p34, (arg2p34 > 0 /\ 2-arg3+arg7 <= 0 /\ -1+arg3 > 0 /\ 2+arg6-arg2 <= 0 /\ arg2 > 0 /\ arg1p34 > 0), cost: 1
  79: f3061_0_createTree_FieldAccess -> f2703_0_createTree_LE : arg1'=arg1p35, arg10'=arg10p35, arg11'=arg11p35, arg2'=arg2p35, arg3'=-1+arg1, arg6'=arg6p35, arg7'=arg7p35, arg8'=arg8p35, arg9'=arg9p35, (2+arg6-arg3 <= 0 /\ -1+arg2 > 0 /\ -1+arg3 > 0 /\ -2+arg2p35-arg2 <= 0 /\ 2+arg6-arg2 <= 0 /\ -2+arg1p35-arg2 <= 0 /\ arg6-arg7 == 0 /\ -3+arg1p35 > 0 /\ -2-arg3+arg2p35 <= 0 /\ -3+arg2p35 > 0 /\ -2+arg1p35-arg3 <= 0), cost: 1
  38: f3815_0_append_Return -> f3836_0_append_NONNULL : arg1'=arg1p39, arg10'=arg10p39, arg11'=arg11p39, arg2'=arg2p39, arg3'=arg3p39, arg4'=arg4p39, arg5'=arg5p39, arg6'=arg6p39, arg7'=arg7p39, arg8'=arg8p39, arg9'=arg9p39, (-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg6-arg1 <= 0 /\ 1+arg1p39 > 0 /\ arg2 > 0 /\ 1+arg1p39-arg2 <= 0), cost: 1
  41: f3815_0_append_Return -> f3774_0_lessleaves_NONNULL : arg1'=arg1p42, arg10'=arg10p42, arg11'=arg11p42, arg2'=arg2p42, arg3'=arg3p42, arg4'=arg4p42, arg5'=arg5p42, arg6'=arg6p42, arg7'=arg7p42, arg8'=arg8p42, arg9'=arg9p42, (-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ 1+arg3p42 > 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg4p42-arg2 <= 0 /\ 1+arg4p42 > 0 /\ 1+arg1p42 > 0 /\ 2+arg1p42-arg2 <= 0 /\ 4+arg6-arg1 <= 0 /\ arg2p42 > 0 /\ -arg3+arg2p42 <= 0 /\ 2-arg2+arg3p42 <= 0), cost: 1
  80: f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p45, arg10'=arg6, arg11'=arg11p45, arg2'=arg2p45, arg3'=arg3p45, arg4'=arg4p45, arg5'=arg4, arg6'=arg5, arg7'=arg7p45, arg8'=arg8p45, arg9'=arg9p45, (-2+arg1 > 0 /\ arg2p45-arg2 <= 0 /\ -arg2+arg4p45 <= 0 /\ 2+arg6-arg3 <= 0 /\ 4+arg11p45-arg2 <= 0 /\ arg3 > 0 /\ -arg3+arg3p45 <= 0 /\ 2+arg5-arg1 <= 0 /\ 4+arg7p45-arg1 <= 0 /\ arg3p45 > 0 /\ 4+arg6-arg1 <= 0 /\ -2+arg1p45 > 0 /\ arg1p45-arg1 <= 0 /\ arg4p45 > 0 /\ -3+arg2 > 0 /\ 2-arg3+arg9p45 <= 0 /\ -3+arg2p45 > 0 /\ 2-arg2+arg8p45 <= 0), cost: 1
  81: f3815_0_append_Return -> f4063_0_lessleaves_InvokeMethod : arg1'=arg1p46, arg10'=arg6, arg11'=arg11p46, arg2'=arg2p46, arg3'=arg3p46, arg4'=arg4p46, arg5'=arg4, arg6'=arg5, arg7'=arg7p46, arg8'=arg8p46, arg9'=arg9p46, (arg2p46-arg2 <= 0 /\ -2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ -arg3+arg3p46 <= 0 /\ arg1p46-arg1 <= 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ 4-arg2+arg11p46 <= 0 /\ 4+arg6-arg1 <= 0 /\ -4+arg2p46 > 0 /\ -2+arg4p46 > 0 /\ -4+arg2 > 0 /\ 4+arg7p46-arg1 <= 0 /\ -2+arg1p46 > 0 /\ 2-arg3+arg9p46 <= 0 /\ arg3p46 > 0 /\ 2+arg8p46-arg2 <= 0), cost: 1
  51: f3836_0_append_NONNULL -> f3836_0_append_NONNULL : arg1'=arg1p52, arg10'=arg10p52, arg11'=arg11p52, arg2'=arg2p52, arg3'=arg3p52, arg4'=arg4p52, arg5'=arg5p52, arg6'=arg6p52, arg7'=arg7p52, arg8'=arg8p52, arg9'=arg9p52, (1+arg1p52-arg1 <= 0 /\ 1+arg1p52 > 0 /\ arg1 > 0), cost: 1
  46: f4062_0_lessleaves_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p47, arg10'=arg10p47, arg11'=arg11p47, arg2'=arg2p47, arg3'=arg3p47, arg4'=arg4p47, arg5'=arg5p47, arg6'=arg6p47, arg7'=arg7p47, arg8'=arg8p47, arg9'=arg9p47, (2+arg8-arg4 <= 0 /\ -arg3+arg2p47 <= 0 /\ 1+arg2p47 > 0 /\ arg3p47 > 0 /\ 4+arg8-arg2 <= 0 /\ 2-arg1+arg2p47 <= 0 /\ arg1p47-arg4 <= 0 /\ -arg6+arg2p47 <= 0 /\ arg4p47 > 0 /\ 1+arg3 > 0 /\ arg4p47-arg4 <= 0 /\ arg1p47 > 0 /\ 2-arg2+arg7 <= 0 /\ -2+arg2 > 0 /\ arg4 > 0 /\ arg3p47-arg4 <= 0 /\ 1+arg6 > 0 /\ -1+arg1 > 0), cost: 1
  47: f4063_0_lessleaves_InvokeMethod -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-2+arg1 > 0 /\ 4+arg7-arg1 <= 0 /\ arg3 > 0 /\ arg2p48 > 0 /\ 2+arg9-arg3 <= 0 /\ -arg3+arg2p48 <= 0 /\ arg3p48 > 0 /\ arg3p48-arg4 <= 0 /\ -arg4+arg1p48 <= 0 /\ 2+arg8-arg2 <= 0 /\ -arg4+arg4p48 <= 0 /\ 4+arg10-arg1 <= 0 /\ 2+arg6-arg1 <= 0 /\ 2+arg11-arg4 <= 0 /\ -2+arg2 > 0 /\ 2-arg3+arg10 <= 0 /\ arg4 > 0 /\ arg4p48 > 0 /\ arg1p48 > 0 /\ 4+arg11-arg2 <= 0), cost: 1
  52: __init -> f1_0_main_Load : arg1'=arg1p53, arg10'=arg10p53, arg11'=arg11p53, arg2'=arg2p53, arg3'=arg3p53, arg4'=arg4p53, arg5'=arg5p53, arg6'=arg6p53, arg7'=arg7p53, arg8'=arg8p53, arg9'=arg9p53, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (4-arg4 <= 0 /\ -arg3+arg1p48 <= 0 /\ arg4p48-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg4p48 <= 0 /\ 3-arg3 <= 0 /\ arg2p48 > 0 /\ arg1p48-arg1 <= 0 /\ 4-arg1 <= 0 /\ 1-arg3 <= 0 /\ 3-arg2 <= 0 /\ 5-arg2 <= 0 /\ arg3p48 > 0 /\ arg3p48-arg4 <= 0 /\ -arg4+arg1p48 <= 0 /\ -4+arg2 > 0 /\ 1-arg4 <= 0 /\ 3-arg1 <= 0 /\ -arg4+arg4p48 <= 0 /\ arg3p48-arg1 <= 0 /\ 4-arg3 <= 0 /\ -arg3+arg3p48 <= 0 /\ arg4 > 0 /\ arg4p48 > 0 /\ arg1p48 > 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 3-arg4 <= 0), cost: 1
	New rule:
	f3774_0_lessleaves_NONNULL -> LoAT_sink : (-arg2p48+arg2 <= 0 /\ -4+arg4 >= 0 /\ -arg1p48+arg1 <= 0 /\ -arg1p48+arg1 >= 0 /\ -3+arg1 >= 0 /\ arg3 > 0 /\ arg2p48 > 0 /\ arg3-arg1p48 >= 0 /\ -4+arg1 >= 0 /\ -arg4p48+arg1 >= 0 /\ -1+arg3 >= 0 /\ -3+arg4 >= 0 /\ arg3-arg4p48 >= 0 /\ -arg3p48+arg1 >= 0 /\ -5+arg2 >= 0 /\ arg3-arg3p48 <= 0 /\ arg3-arg3p48 >= 0 /\ arg3p48 > 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ -3+arg3 >= 0 /\ -4+arg3 >= 0 /\ arg4 > 0 /\ -arg3p48+arg4 >= 0 /\ arg4-arg1p48 >= 0 /\ -3+arg2 >= 0 /\ arg4p48 > 0 /\ arg4-arg4p48 <= 0 /\ arg4-arg4p48 >= 0 /\ arg1p48 > 0 /\ -1+arg1 >= 0 /\ arg1 > 0), cost: NONTERM

		-4+arg4 >= 0 [0]: montonic decrease yields -4+arg4p48 >= 0, dependencies: arg4-arg4p48 >= 0
		
		-4+arg4 >= 0 [1]: eventual decrease yields (-4+arg4 >= 0 /\ -4+arg4p48 >= 0)
		
		-4+arg4 >= 0 [2]: eventual increase yields (-4+arg4 >= 0 /\ arg4-arg4p48 <= 0)
		
		-arg1p48+arg1 >= 0 [0]: monotonic increase yields -arg1p48+arg1 >= 0
		
		-3+arg1 >= 0 [0]: montonic decrease yields -3+arg1p48 >= 0, dependencies: -arg1p48+arg1 >= 0
		
		-3+arg1 >= 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ -3+arg1 >= 0)
		
		arg3 > 0 [0]: montonic decrease yields arg3p48 > 0, dependencies: -1+arg3 >= 0
		
		arg3 > 0 [1]: eventual decrease yields (arg3 > 0 /\ arg3p48 > 0)
		
		arg3 > 0 [2]: eventual increase yields (arg3 > 0 /\ arg3-arg3p48 <= 0)
		
		arg2p48 > 0 [0]: monotonic increase yields arg2p48 > 0
		
		arg3-arg1p48 >= 0 [0]: montonic decrease yields arg3p48-arg1p48 >= 0, dependencies: arg3-arg3p48 >= 0
		
		arg3-arg1p48 >= 0 [1]: eventual decrease yields (arg3-arg1p48 >= 0 /\ arg3p48-arg1p48 >= 0)
		
		arg3-arg1p48 >= 0 [2]: eventual increase yields (arg3-arg1p48 >= 0 /\ arg3-arg3p48 <= 0)
		
		-4+arg1 >= 0 [0]: montonic decrease yields -4+arg1p48 >= 0, dependencies: -arg1p48+arg1 >= 0
		
		-4+arg1 >= 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ -4+arg1 >= 0)
		
		-arg4p48+arg1 >= 0 [0]: montonic decrease yields -arg4p48+arg1p48 >= 0, dependencies: -arg1p48+arg1 >= 0
		
		-arg4p48+arg1 >= 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ -arg4p48+arg1 >= 0)
		
		-1+arg3 >= 0 [0]: monotonic increase yields -1+arg3 >= 0, dependencies: arg3p48 > 0
		
		-1+arg3 >= 0 [1]: montonic decrease yields -1+arg3p48 >= 0, dependencies: arg3 > 0
		
		-1+arg3 >= 0 [2]: eventual increase yields (-1+arg3 >= 0 /\ arg3-arg3p48 <= 0)
		
		-3+arg4 >= 0 [0]: montonic decrease yields -3+arg4p48 >= 0, dependencies: -4+arg4 >= 0
		
		-3+arg4 >= 0 [1]: eventual increase yields (-3+arg4 >= 0 /\ arg4-arg4p48 <= 0)
		
		arg3-arg4p48 >= 0 [0]: montonic decrease yields arg3p48-arg4p48 >= 0, dependencies: arg3-arg3p48 >= 0
		
		arg3-arg4p48 >= 0 [1]: eventual decrease yields (arg3-arg4p48 >= 0 /\ arg3p48-arg4p48 >= 0)
		
		arg3-arg4p48 >= 0 [2]: eventual increase yields (arg3-arg4p48 >= 0 /\ arg3-arg3p48 <= 0)
		
		-arg3p48+arg1 >= 0 [0]: montonic decrease yields -arg3p48+arg1p48 >= 0, dependencies: -arg1p48+arg1 >= 0
		
		-arg3p48+arg1 >= 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ -arg3p48+arg1 >= 0)
		
		-5+arg2 >= 0 [0]: montonic decrease yields -5+arg2p48 >= 0, dependencies: -4+arg2 > 0
		
		-5+arg2 >= 0 [1]: eventual decrease yields (-5+arg2p48 >= 0 /\ -5+arg2 >= 0)
		
		-5+arg2 >= 0 [2]: eventual increase yields (-arg2p48+arg2 <= 0 /\ -5+arg2 >= 0)
		
		arg3-arg3p48 >= 0 [0]: monotonic increase yields arg3-arg3p48 >= 0
		
		arg3p48 > 0 [0]: monotonic increase yields arg3p48 > 0
		
		-4+arg2 > 0 [0]: montonic decrease yields -4+arg2p48 > 0, dependencies: -5+arg2 >= 0
		
		-4+arg2 > 0 [1]: eventual increase yields (-arg2p48+arg2 <= 0 /\ -4+arg2 > 0)
		
		-1+arg4 >= 0 [0]: monotonic increase yields -1+arg4 >= 0, dependencies: arg4p48 > 0
		
		-1+arg4 >= 0 [1]: montonic decrease yields -1+arg4p48 >= 0, dependencies: -4+arg4 >= 0
		
		-1+arg4 >= 0 [2]: eventual increase yields (-1+arg4 >= 0 /\ arg4-arg4p48 <= 0)
		
		-3+arg3 >= 0 [0]: montonic decrease yields -3+arg3p48 >= 0, dependencies: -4+arg3 >= 0
		
		-3+arg3 >= 0 [1]: eventual decrease yields (-3+arg3 >= 0 /\ -3+arg3p48 >= 0)
		
		-3+arg3 >= 0 [2]: eventual increase yields (arg3-arg3p48 <= 0 /\ -3+arg3 >= 0)
		
		-4+arg3 >= 0 [0]: montonic decrease yields -4+arg3p48 >= 0, dependencies: arg3-arg3p48 >= 0
		
		-4+arg3 >= 0 [1]: eventual increase yields (arg3-arg3p48 <= 0 /\ -4+arg3 >= 0)
		
		arg4 > 0 [0]: montonic decrease yields arg4p48 > 0, dependencies: -4+arg4 >= 0
		
		arg4 > 0 [1]: eventual increase yields (arg4 > 0 /\ arg4-arg4p48 <= 0)
		
		-arg3p48+arg4 >= 0 [0]: montonic decrease yields -arg3p48+arg4p48 >= 0, dependencies: arg4-arg4p48 >= 0
		
		-arg3p48+arg4 >= 0 [1]: eventual decrease yields (-arg3p48+arg4p48 >= 0 /\ -arg3p48+arg4 >= 0)
		
		-arg3p48+arg4 >= 0 [2]: eventual increase yields (-arg3p48+arg4 >= 0 /\ arg4-arg4p48 <= 0)
		
		arg4-arg1p48 >= 0 [0]: montonic decrease yields arg4p48-arg1p48 >= 0, dependencies: arg4-arg4p48 >= 0
		
		arg4-arg1p48 >= 0 [1]: eventual decrease yields (arg4p48-arg1p48 >= 0 /\ arg4-arg1p48 >= 0)
		
		arg4-arg1p48 >= 0 [2]: eventual increase yields (arg4-arg1p48 >= 0 /\ arg4-arg4p48 <= 0)
		
		-3+arg2 >= 0 [0]: montonic decrease yields -3+arg2p48 >= 0, dependencies: -5+arg2 >= 0
		
		-3+arg2 >= 0 [1]: eventual increase yields (-arg2p48+arg2 <= 0 /\ -3+arg2 >= 0)
		
		arg4p48 > 0 [0]: monotonic increase yields arg4p48 > 0
		
		arg4-arg4p48 >= 0 [0]: monotonic increase yields arg4-arg4p48 >= 0
		
		arg1p48 > 0 [0]: monotonic increase yields arg1p48 > 0
		
		-1+arg1 >= 0 [0]: monotonic increase yields -1+arg1 >= 0, dependencies: arg1p48 > 0
		
		arg1 > 0 [0]: montonic decrease yields arg1p48 > 0, dependencies: -3+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {-4+arg4 >= 0 -> (-4+arg4 >= 0 /\ arg4-arg4p48 <= 0), -arg1p48+arg1 >= 0 -> -arg1p48+arg1 >= 0, -3+arg1 >= 0 -> (-arg1p48+arg1 <= 0 /\ -3+arg1 >= 0), arg3 > 0 -> (arg3 > 0 /\ arg3-arg3p48 <= 0), arg2p48 > 0 -> arg2p48 > 0, arg3-arg1p48 >= 0 -> (arg3-arg1p48 >= 0 /\ arg3-arg3p48 <= 0), -4+arg1 >= 0 -> (-arg1p48+arg1 <= 0 /\ -4+arg1 >= 0), -arg4p48+arg1 >= 0 -> (-arg1p48+arg1 <= 0 /\ -arg4p48+arg1 >= 0), -1+arg3 >= 0 -> -1+arg3 >= 0, -3+arg4 >= 0 -> (-3+arg4 >= 0 /\ arg4-arg4p48 <= 0), arg3-arg4p48 >= 0 -> (arg3-arg4p48 >= 0 /\ arg3-arg3p48 <= 0), -arg3p48+arg1 >= 0 -> (-arg1p48+arg1 <= 0 /\ -arg3p48+arg1 >= 0), -5+arg2 >= 0 -> (-arg2p48+arg2 <= 0 /\ -5+arg2 >= 0), arg3-arg3p48 >= 0 -> arg3-arg3p48 >= 0, arg3p48 > 0 -> arg3p48 > 0, -4+arg2 > 0 -> (-arg2p48+arg2 <= 0 /\ -4+arg2 > 0), -1+arg4 >= 0 -> -1+arg4 >= 0, -3+arg3 >= 0 -> (arg3-arg3p48 <= 0 /\ -3+arg3 >= 0), -4+arg3 >= 0 -> (arg3-arg3p48 <= 0 /\ -4+arg3 >= 0), arg4 > 0 -> (arg4 > 0 /\ arg4-arg4p48 <= 0), -arg3p48+arg4 >= 0 -> (-arg3p48+arg4 >= 0 /\ arg4-arg4p48 <= 0), arg4-arg1p48 >= 0 -> (arg4-arg1p48 >= 0 /\ arg4-arg4p48 <= 0), -3+arg2 >= 0 -> (-arg2p48+arg2 <= 0 /\ -3+arg2 >= 0), arg4p48 > 0 -> arg4p48 > 0, arg4-arg4p48 >= 0 -> arg4-arg4p48 >= 0, arg1p48 > 0 -> arg1p48 > 0, -1+arg1 >= 0 -> -1+arg1 >= 0, arg1 > 0 -> (-arg1p48+arg1 <= 0 /\ arg1 > 0)}

	Loop Acceleration

	Original rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (4-arg4 <= 0 /\ -arg3+arg1p48 <= 0 /\ arg4p48-arg1 <= 0 /\ arg3 > 0 /\ -arg3+arg4p48 <= 0 /\ 3-arg3 <= 0 /\ arg2p48 > 0 /\ arg1p48-arg1 <= 0 /\ 4-arg1 <= 0 /\ 1-arg3 <= 0 /\ 3-arg2 <= 0 /\ 5-arg2 <= 0 /\ arg3p48 > 0 /\ arg3p48-arg4 <= 0 /\ -arg4+arg1p48 <= 0 /\ -4+arg2 > 0 /\ 1-arg4 <= 0 /\ 3-arg1 <= 0 /\ -arg4+arg4p48 <= 0 /\ arg3p48-arg1 <= 0 /\ 4-arg3 <= 0 /\ -arg3+arg3p48 <= 0 /\ arg4 > 0 /\ arg4p48 > 0 /\ arg1p48 > 0 /\ 1-arg1 <= 0 /\ arg1 > 0 /\ 3-arg4 <= 0), cost: 1
	New rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-arg2p48+arg2 <= 0 /\ arg4p48-arg1p48 >= 0 /\ -arg1p48+arg1 >= 0 /\ -1+n >= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ -3+arg1p48 >= 0 /\ -4+arg1p48 >= 0 /\ arg2p48 > 0 /\ -arg4p48+arg1p48 >= 0 /\ -3+arg2p48 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ -4+arg3p48 >= 0 /\ arg3-arg3p48 >= 0 /\ arg3p48 > 0 /\ -arg3p48+arg1p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ -arg3p48+arg4p48 >= 0 /\ arg3p48-arg1p48 >= 0 /\ arg4p48 > 0 /\ arg3p48-arg4p48 >= 0 /\ arg4-arg4p48 >= 0 /\ arg1p48 > 0 /\ -3+arg3p48 >= 0 /\ -1+arg1 >= 0), cost: 1

		-4+arg4 >= 0 [0]: montonic decrease yields -4+arg4p48 >= 0, dependencies: arg4-arg4p48 >= 0
		
		-4+arg4 >= 0 [1]: eventual decrease yields (-4+arg4 >= 0 /\ -4+arg4p48 >= 0)
		
		-4+arg4 >= 0 [2]: eventual increase yields (-4+arg4 >= 0 /\ arg4-arg4p48 <= 0)
		
		-arg1p48+arg1 >= 0 [0]: monotonic increase yields -arg1p48+arg1 >= 0
		
		-3+arg1 >= 0 [0]: montonic decrease yields -3+arg1p48 >= 0, dependencies: -arg1p48+arg1 >= 0
		
		-3+arg1 >= 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ -3+arg1 >= 0)
		
		arg3 > 0 [0]: montonic decrease yields arg3p48 > 0, dependencies: -1+arg3 >= 0
		
		arg3 > 0 [1]: eventual decrease yields (arg3 > 0 /\ arg3p48 > 0)
		
		arg3 > 0 [2]: eventual increase yields (arg3 > 0 /\ arg3-arg3p48 <= 0)
		
		arg2p48 > 0 [0]: monotonic increase yields arg2p48 > 0
		
		arg3-arg1p48 >= 0 [0]: montonic decrease yields arg3p48-arg1p48 >= 0, dependencies: arg3-arg3p48 >= 0
		
		arg3-arg1p48 >= 0 [1]: eventual decrease yields (arg3-arg1p48 >= 0 /\ arg3p48-arg1p48 >= 0)
		
		arg3-arg1p48 >= 0 [2]: eventual increase yields (arg3-arg1p48 >= 0 /\ arg3-arg3p48 <= 0)
		
		-4+arg1 >= 0 [0]: montonic decrease yields -4+arg1p48 >= 0, dependencies: -arg1p48+arg1 >= 0
		
		-4+arg1 >= 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ -4+arg1 >= 0)
		
		-arg4p48+arg1 >= 0 [0]: montonic decrease yields -arg4p48+arg1p48 >= 0, dependencies: -arg1p48+arg1 >= 0
		
		-arg4p48+arg1 >= 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ -arg4p48+arg1 >= 0)
		
		-1+arg3 >= 0 [0]: monotonic increase yields -1+arg3 >= 0, dependencies: arg3p48 > 0
		
		-1+arg3 >= 0 [1]: montonic decrease yields -1+arg3p48 >= 0, dependencies: arg3 > 0
		
		-1+arg3 >= 0 [2]: eventual increase yields (-1+arg3 >= 0 /\ arg3-arg3p48 <= 0)
		
		-3+arg4 >= 0 [0]: montonic decrease yields -3+arg4p48 >= 0, dependencies: -4+arg4 >= 0
		
		-3+arg4 >= 0 [1]: eventual increase yields (-3+arg4 >= 0 /\ arg4-arg4p48 <= 0)
		
		arg3-arg4p48 >= 0 [0]: montonic decrease yields arg3p48-arg4p48 >= 0, dependencies: arg3-arg3p48 >= 0
		
		arg3-arg4p48 >= 0 [1]: eventual decrease yields (arg3-arg4p48 >= 0 /\ arg3p48-arg4p48 >= 0)
		
		arg3-arg4p48 >= 0 [2]: eventual increase yields (arg3-arg4p48 >= 0 /\ arg3-arg3p48 <= 0)
		
		-arg3p48+arg1 >= 0 [0]: montonic decrease yields -arg3p48+arg1p48 >= 0, dependencies: -arg1p48+arg1 >= 0
		
		-arg3p48+arg1 >= 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ -arg3p48+arg1 >= 0)
		
		-5+arg2 >= 0 [0]: montonic decrease yields -5+arg2p48 >= 0, dependencies: -4+arg2 > 0
		
		-5+arg2 >= 0 [1]: eventual decrease yields (-5+arg2p48 >= 0 /\ -5+arg2 >= 0)
		
		-5+arg2 >= 0 [2]: eventual increase yields (-arg2p48+arg2 <= 0 /\ -5+arg2 >= 0)
		
		arg3-arg3p48 >= 0 [0]: monotonic increase yields arg3-arg3p48 >= 0
		
		arg3p48 > 0 [0]: monotonic increase yields arg3p48 > 0
		
		-4+arg2 > 0 [0]: montonic decrease yields -4+arg2p48 > 0, dependencies: -5+arg2 >= 0
		
		-4+arg2 > 0 [1]: eventual increase yields (-arg2p48+arg2 <= 0 /\ -4+arg2 > 0)
		
		-1+arg4 >= 0 [0]: monotonic increase yields -1+arg4 >= 0, dependencies: arg4p48 > 0
		
		-1+arg4 >= 0 [1]: montonic decrease yields -1+arg4p48 >= 0, dependencies: -4+arg4 >= 0
		
		-1+arg4 >= 0 [2]: eventual increase yields (-1+arg4 >= 0 /\ arg4-arg4p48 <= 0)
		
		-3+arg3 >= 0 [0]: montonic decrease yields -3+arg3p48 >= 0, dependencies: -4+arg3 >= 0
		
		-3+arg3 >= 0 [1]: eventual decrease yields (-3+arg3 >= 0 /\ -3+arg3p48 >= 0)
		
		-3+arg3 >= 0 [2]: eventual increase yields (arg3-arg3p48 <= 0 /\ -3+arg3 >= 0)
		
		-4+arg3 >= 0 [0]: montonic decrease yields -4+arg3p48 >= 0, dependencies: arg3-arg3p48 >= 0
		
		-4+arg3 >= 0 [1]: eventual increase yields (arg3-arg3p48 <= 0 /\ -4+arg3 >= 0)
		
		arg4 > 0 [0]: montonic decrease yields arg4p48 > 0, dependencies: -4+arg4 >= 0
		
		arg4 > 0 [1]: eventual increase yields (arg4 > 0 /\ arg4-arg4p48 <= 0)
		
		-arg3p48+arg4 >= 0 [0]: montonic decrease yields -arg3p48+arg4p48 >= 0, dependencies: arg4-arg4p48 >= 0
		
		-arg3p48+arg4 >= 0 [1]: eventual decrease yields (-arg3p48+arg4p48 >= 0 /\ -arg3p48+arg4 >= 0)
		
		-arg3p48+arg4 >= 0 [2]: eventual increase yields (-arg3p48+arg4 >= 0 /\ arg4-arg4p48 <= 0)
		
		arg4-arg1p48 >= 0 [0]: montonic decrease yields arg4p48-arg1p48 >= 0, dependencies: arg4-arg4p48 >= 0
		
		arg4-arg1p48 >= 0 [1]: eventual decrease yields (arg4p48-arg1p48 >= 0 /\ arg4-arg1p48 >= 0)
		
		arg4-arg1p48 >= 0 [2]: eventual increase yields (arg4-arg1p48 >= 0 /\ arg4-arg4p48 <= 0)
		
		-3+arg2 >= 0 [0]: montonic decrease yields -3+arg2p48 >= 0, dependencies: -5+arg2 >= 0
		
		-3+arg2 >= 0 [1]: eventual increase yields (-arg2p48+arg2 <= 0 /\ -3+arg2 >= 0)
		
		arg4p48 > 0 [0]: monotonic increase yields arg4p48 > 0
		
		arg4-arg4p48 >= 0 [0]: monotonic increase yields arg4-arg4p48 >= 0
		
		arg1p48 > 0 [0]: monotonic increase yields arg1p48 > 0
		
		-1+arg1 >= 0 [0]: monotonic increase yields -1+arg1 >= 0, dependencies: arg1p48 > 0
		
		arg1 > 0 [0]: montonic decrease yields arg1p48 > 0, dependencies: -3+arg1 >= 0
		
		arg1 > 0 [1]: eventual increase yields (-arg1p48+arg1 <= 0 /\ arg1 > 0)
		
		Replacement map: {-4+arg4 >= 0 -> -4+arg4p48 >= 0, -arg1p48+arg1 >= 0 -> -arg1p48+arg1 >= 0, -3+arg1 >= 0 -> -3+arg1p48 >= 0, arg3 > 0 -> arg3p48 > 0, arg2p48 > 0 -> arg2p48 > 0, arg3-arg1p48 >= 0 -> arg3p48-arg1p48 >= 0, -4+arg1 >= 0 -> -4+arg1p48 >= 0, -arg4p48+arg1 >= 0 -> -arg4p48+arg1p48 >= 0, -1+arg3 >= 0 -> -1+arg3 >= 0, -3+arg4 >= 0 -> -3+arg4p48 >= 0, arg3-arg4p48 >= 0 -> arg3p48-arg4p48 >= 0, -arg3p48+arg1 >= 0 -> -arg3p48+arg1p48 >= 0, -5+arg2 >= 0 -> -5+arg2p48 >= 0, arg3-arg3p48 >= 0 -> arg3-arg3p48 >= 0, arg3p48 > 0 -> arg3p48 > 0, -4+arg2 > 0 -> (-arg2p48+arg2 <= 0 /\ -4+arg2 > 0), -1+arg4 >= 0 -> -1+arg4 >= 0, -3+arg3 >= 0 -> -3+arg3p48 >= 0, -4+arg3 >= 0 -> -4+arg3p48 >= 0, arg4 > 0 -> arg4p48 > 0, -arg3p48+arg4 >= 0 -> -arg3p48+arg4p48 >= 0, arg4-arg1p48 >= 0 -> arg4p48-arg1p48 >= 0, -3+arg2 >= 0 -> -3+arg2p48 >= 0, arg4p48 > 0 -> arg4p48 > 0, arg4-arg4p48 >= 0 -> arg4-arg4p48 >= 0, arg1p48 > 0 -> arg1p48 > 0, -1+arg1 >= 0 -> -1+arg1 >= 0, arg1 > 0 -> arg1p48 > 0}

	made implied equalities explicit

	Original rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-arg2p48+arg2 <= 0 /\ arg4p48-arg1p48 >= 0 /\ -arg1p48+arg1 >= 0 /\ -1+n >= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ -3+arg1p48 >= 0 /\ -4+arg1p48 >= 0 /\ arg2p48 > 0 /\ -arg4p48+arg1p48 >= 0 /\ -3+arg2p48 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ -4+arg3p48 >= 0 /\ arg3-arg3p48 >= 0 /\ arg3p48 > 0 /\ -arg3p48+arg1p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ -arg3p48+arg4p48 >= 0 /\ arg3p48-arg1p48 >= 0 /\ arg4p48 > 0 /\ arg3p48-arg4p48 >= 0 /\ arg4-arg4p48 >= 0 /\ arg1p48 > 0 /\ -3+arg3p48 >= 0 /\ -1+arg1 >= 0), cost: 1
	New rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-arg2p48+arg2 <= 0 /\ arg4p48-arg1p48 >= 0 /\ -arg1p48+arg1 >= 0 /\ -1+n >= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ -3+arg1p48 >= 0 /\ -4+arg1p48 >= 0 /\ arg2p48 > 0 /\ -arg4p48+arg1p48 >= 0 /\ -arg4p48+arg1p48 == 0 /\ -3+arg2p48 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ -4+arg3p48 >= 0 /\ arg3-arg3p48 >= 0 /\ arg3p48 > 0 /\ -arg3p48+arg1p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ -arg3p48+arg4p48 >= 0 /\ arg3p48-arg1p48 >= 0 /\ arg3p48-arg1p48 == 0 /\ arg4p48 > 0 /\ arg3p48-arg4p48 >= 0 /\ arg3p48-arg4p48 == 0 /\ arg4-arg4p48 >= 0 /\ arg1p48 > 0 /\ -3+arg3p48 >= 0 /\ -1+arg1 >= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg1p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg3p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-arg2p48+arg2 <= 0 /\ arg4p48-arg1p48 >= 0 /\ -arg1p48+arg1 >= 0 /\ -1+n >= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ -3+arg1p48 >= 0 /\ -4+arg1p48 >= 0 /\ arg2p48 > 0 /\ -arg4p48+arg1p48 >= 0 /\ -arg4p48+arg1p48 == 0 /\ -3+arg2p48 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ -4+arg3p48 >= 0 /\ arg3-arg3p48 >= 0 /\ arg3p48 > 0 /\ -arg3p48+arg1p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ -arg3p48+arg4p48 >= 0 /\ arg3p48-arg1p48 >= 0 /\ arg3p48-arg1p48 == 0 /\ arg4p48 > 0 /\ arg3p48-arg4p48 >= 0 /\ arg3p48-arg4p48 == 0 /\ arg4-arg4p48 >= 0 /\ arg1p48 > 0 /\ -3+arg3p48 >= 0 /\ -1+arg1 >= 0), cost: 1
	New rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg4p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg4p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (0 >= 0 /\ 0 == 0 /\ -arg2p48+arg2 <= 0 /\ -1+n >= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ arg2p48 > 0 /\ -3+arg2p48 >= 0 /\ -arg4p48+arg1 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ arg3-arg4p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ arg4p48 > 0 /\ arg4-arg4p48 >= 0 /\ -1+arg1 >= 0), cost: 1
	
		propagated equality arg1p48 = arg4p48
		
		propagated equality arg3p48 = arg4p48
		
	Simplified Guard

	Original rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg4p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg4p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (0 >= 0 /\ 0 == 0 /\ -arg2p48+arg2 <= 0 /\ -1+n >= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ arg2p48 > 0 /\ -3+arg2p48 >= 0 /\ -arg4p48+arg1 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ arg3-arg4p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ arg4p48 > 0 /\ arg4-arg4p48 >= 0 /\ -1+arg1 >= 0), cost: 1
	New rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg4p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg4p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-arg2p48+arg2 <= 0 /\ -1+n >= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ arg2p48 > 0 /\ -3+arg2p48 >= 0 /\ -arg4p48+arg1 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ arg3-arg4p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ arg4p48 > 0 /\ arg4-arg4p48 >= 0 /\ -1+arg1 >= 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg4p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg4p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-arg2p48+arg2 <= 0 /\ -1+n >= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ arg2p48 > 0 /\ -3+arg2p48 >= 0 /\ -arg4p48+arg1 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ arg3-arg4p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ arg4p48 > 0 /\ arg4-arg4p48 >= 0 /\ -1+arg1 >= 0), cost: 1
	New rule:
	f3774_0_lessleaves_NONNULL -> f3774_0_lessleaves_NONNULL : arg1'=arg4p48, arg10'=arg10p48, arg11'=arg11p48, arg2'=arg2p48, arg3'=arg4p48, arg4'=arg4p48, arg5'=arg5p48, arg6'=arg6p48, arg7'=arg7p48, arg8'=arg8p48, arg9'=arg9p48, (-arg2p48+arg2 <= 0 /\ -3+arg4p48 >= 0 /\ -5+arg2p48 >= 0 /\ arg2p48 > 0 /\ -3+arg2p48 >= 0 /\ -arg4p48+arg1 >= 0 /\ -1+arg3 >= 0 /\ -4+arg4p48 >= 0 /\ arg3-arg4p48 >= 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ arg4p48 > 0 /\ arg4-arg4p48 >= 0 /\ -1+arg1 >= 0), cost: 1

Step with 87

	Trace

	52[T], 1[(arg1p2-arg1 <= 0 /\ arg1p2 > 0 /\ arg1 > 0)], 7[(arg1p8-arg1 <= 0 /\ arg1p8 > 0 /\ arg2p8 > 0 /\ arg1 > 0)], 9[(1+arg2p10-arg1 <= 0 /\ arg1p10-arg2 <= 0 /\ arg3p10 > 0 /\ 1+arg2p10-arg2 <= 0 /\ arg1p10 > 0 /\ arg2 > 0 /\ arg3p10-arg2 <= 0 /\ 1+arg2p10 > 0 /\ arg4p10 > 0 /\ -arg2+arg4p10 <= 0 /\ 2+arg3-arg2 <= 0 /\ arg1 > 0)], 35[(arg3p36 > 0 /\ arg3p36-arg2 <= 0 /\ -3+arg1p36 > 0 /\ arg3 > 0 /\ 2-arg2+arg5p36 <= 0 /\ -arg3+arg2p36 <= 0 /\ arg1p36-arg2 <= 0 /\ arg2p36-arg1 <= 0 /\ 4+arg6p36-arg2 <= 0 /\ arg2p36 > 0 /\ arg4 > 0 /\ -3+arg2 > 0 /\ arg2p36-arg4 <= 0 /\ arg1 > 0)], 41[(-2+arg1 > 0 /\ 2+arg6-arg3 <= 0 /\ 1+arg3p42 > 0 /\ arg3 > 0 /\ 2+arg5-arg1 <= 0 /\ -1+arg2 > 0 /\ 2+arg4p42-arg2 <= 0 /\ 1+arg4p42 > 0 /\ 1+arg1p42 > 0 /\ 2+arg1p42-arg2 <= 0 /\ 4+arg6-arg1 <= 0 /\ arg2p42 > 0 /\ -arg3+arg2p42 <= 0 /\ 2-arg2+arg3p42 <= 0)], 87[(-arg2p48+arg2 <= 0 /\ -4+arg4 >= 0 /\ -arg1p48+arg1 <= 0 /\ -arg1p48+arg1 >= 0 /\ -3+arg1 >= 0 /\ arg3 > 0 /\ arg2p48 > 0 /\ arg3-arg1p48 >= 0 /\ -4+arg1 >= 0 /\ -arg4p48+arg1 >= 0 /\ -1+arg3 >= 0 /\ -3+arg4 >= 0 /\ arg3-arg4p48 >= 0 /\ -arg3p48+arg1 >= 0 /\ -5+arg2 >= 0 /\ arg3-arg3p48 <= 0 /\ arg3-arg3p48 >= 0 /\ arg3p48 > 0 /\ -4+arg2 > 0 /\ -1+arg4 >= 0 /\ -3+arg3 >= 0 /\ -4+arg3 >= 0 /\ arg4 > 0 /\ -arg3p48+arg4 >= 0 /\ arg4-arg1p48 >= 0 /\ -3+arg2 >= 0 /\ arg4p48 > 0 /\ arg4-arg4p48 <= 0 /\ arg4-arg4p48 >= 0 /\ arg1p48 > 0 /\ -1+arg1 >= 0 /\ arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {}, {37[T], 39[T]}, {38[T]}, {35[T]}, {87[T]}]

Refute

	Counterexample

	[ arg1=6 arg10=0 arg11=0 arg2=0 arg3=0 arg4=0 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 52 [ arg1=6 arg10=0 arg11=0 arg2=0 arg3=0 arg4=0 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 1 [ arg1=6 arg10=0 arg11=0 arg2=6 arg3=-1 arg4=0 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 7 [ arg1=6 arg10=0 arg11=0 arg2=5 arg3=6 arg4=6 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 9 [ arg1=4 arg10=0 arg11=0 arg2=6 arg3=5 arg4=0 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 35 [ arg1=4 arg10=0 arg11=0 arg2=5 arg3=4 arg4=4 arg5=0 arg6=0 arg7=0 arg8=0 arg9=0 ] 41 [ arg1=arg1 arg10=arg10 arg11=arg11 arg2=arg2 arg3=arg3 arg4=arg4 arg5=arg5 arg6=arg6 arg7=arg7 arg8=arg8 arg9=arg9 ] 87
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
