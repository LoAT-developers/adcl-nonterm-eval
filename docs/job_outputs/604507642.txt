NO

Initial ITS

Start location: l4
Program variables: ct_12^0 ct_13^0 ct_21^0 ct_27^0 lt_10^0 lt_11^0 lt_9^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l1 : ct_12^0'=ct_12^post1, ct_13^0'=ct_13^post1, ct_21^0'=ct_21^post1, ct_27^0'=ct_27^post1, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_9^0'=lt_9^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ -ct_13^post1+ct_13^0 == 0 /\ lt_11^1-lt_10^1 <= 0 /\ -lt_9^post1+lt_9^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ y_6^0-y_6^post1 == 0 /\ lt_11^1-ct_27^0 == 0 /\ ct_27^0-ct_27^post1 == 0 /\ -ct_21^post1+ct_21^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ ct_12^0-ct_12^post1 == 0), cost: 1
   1: l0 -> l2 : ct_12^0'=ct_12^post2, ct_13^0'=ct_13^post2, ct_21^0'=ct_21^post2, ct_27^0'=ct_27^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -ct_12^post2+ct_12^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ 1-lt_11^1+lt_10^1 <= 0 /\ ct_13^0-ct_13^post2 == 0 /\ lt_11^1-ct_27^0 == 0 /\ -ct_27^post2+ct_27^0 == 0 /\ x_5^0-x_5^post2 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_9^1-ct_21^0 == 0 /\ -ct_21^post2+ct_21^0 == 0), cost: 1
   2: l2 -> l0 : ct_12^0'=ct_12^post3, ct_13^0'=ct_13^post3, ct_21^0'=ct_21^post3, ct_27^0'=ct_27^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_9^0'=lt_9^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (y_6^0-y_6^post3 == 0 /\ -ct_27^post3+ct_27^0 == 0 /\ -result_4^post3+result_4^0 == 0 /\ -lt_9^post3+lt_9^0 == 0 /\ ct_21^0-ct_21^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -ct_12^post3+ct_12^0 == 0 /\ lt_11^0-lt_11^post3 == 0 /\ -lt_10^post3+lt_10^0 == 0 /\ ct_13^0-ct_13^post3 == 0), cost: 1
   3: l3 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^post4, ct_27^0'=ct_27^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_9^0'=lt_9^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ -ct_21^post4+ct_21^0 == 0 /\ -ct_27^post4+ct_27^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ lt_11^0-lt_11^post4 == 0 /\ -lt_9^post4+lt_9^0 == 0), cost: 1
   4: l4 -> l3 : ct_12^0'=ct_12^post5, ct_13^0'=ct_13^post5, ct_21^0'=ct_21^post5, ct_27^0'=ct_27^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (ct_13^0-ct_13^post5 == 0 /\ x_5^0-x_5^post5 == 0 /\ -lt_10^post5+lt_10^0 == 0 /\ -ct_21^post5+ct_21^0 == 0 /\ -ct_12^post5+ct_12^0 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ -lt_9^post5+lt_9^0 == 0 /\ y_6^0-y_6^post5 == 0 /\ -ct_27^post5+ct_27^0 == 0), cost: 1

Chained Linear Paths

Start location: l4
Program variables: ct_12^0 ct_13^0 ct_21^0 ct_27^0 lt_10^0 lt_11^0 lt_9^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l1 : ct_12^0'=ct_12^post1, ct_13^0'=ct_13^post1, ct_21^0'=ct_21^post1, ct_27^0'=ct_27^post1, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_9^0'=lt_9^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ -ct_13^post1+ct_13^0 == 0 /\ lt_11^1-lt_10^1 <= 0 /\ -lt_9^post1+lt_9^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ y_6^0-y_6^post1 == 0 /\ lt_11^1-ct_27^0 == 0 /\ ct_27^0-ct_27^post1 == 0 /\ -ct_21^post1+ct_21^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ ct_12^0-ct_12^post1 == 0), cost: 1
   6: l0 -> l0 : ct_12^0'=ct_12^post3, ct_13^0'=ct_13^post3, ct_21^0'=ct_21^post3, ct_27^0'=ct_27^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_9^0'=lt_9^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ result_4^post2-result_4^post3 == 0 /\ lt_9^post2-lt_9^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -ct_12^post2+ct_12^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ x_5^post2-x_5^post3 == 0 /\ 1-lt_11^1+lt_10^1 <= 0 /\ ct_13^0-ct_13^post2 == 0 /\ ct_12^post2-ct_12^post3 == 0 /\ lt_11^post2-lt_11^post3 == 0 /\ -y_6^post3+y_6^post2 == 0 /\ lt_11^1-ct_27^0 == 0 /\ -ct_27^post2+ct_27^0 == 0 /\ x_5^0-x_5^post2 == 0 /\ ct_27^post2-ct_27^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ ct_21^post2-ct_21^post3 == 0 /\ lt_9^1-ct_21^0 == 0 /\ ct_13^post2-ct_13^post3 == 0 /\ lt_10^post2-lt_10^post3 == 0 /\ -ct_21^post2+ct_21^0 == 0), cost: 1
   5: l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^post4, ct_27^0'=ct_27^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_9^0'=lt_9^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ ct_13^0-ct_13^post5 == 0 /\ -lt_10^post4+lt_10^post5 == 0 /\ -result_4^post4+result_4^post5 == 0 /\ x_5^0-x_5^post5 == 0 /\ -lt_10^post5+lt_10^0 == 0 /\ -ct_21^post5+ct_21^0 == 0 /\ -ct_12^post5+ct_12^0 == 0 /\ -lt_9^post4+lt_9^post5 == 0 /\ ct_21^post5-ct_21^post4 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ lt_11^post5-lt_11^post4 == 0 /\ -ct_27^post4+ct_27^post5 == 0 /\ -lt_9^post5+lt_9^0 == 0 /\ y_6^0-y_6^post5 == 0 /\ -ct_27^post5+ct_27^0 == 0), cost: 1

	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l4 -> l3 : ct_12^0'=ct_12^post5, ct_13^0'=ct_13^post5, ct_21^0'=ct_21^post5, ct_27^0'=ct_27^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (ct_13^0-ct_13^post5 == 0 /\ x_5^0-x_5^post5 == 0 /\ -lt_10^post5+lt_10^0 == 0 /\ -ct_21^post5+ct_21^0 == 0 /\ -ct_12^post5+ct_12^0 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ -lt_9^post5+lt_9^0 == 0 /\ y_6^0-y_6^post5 == 0 /\ -ct_27^post5+ct_27^0 == 0), cost: 1
	Second rule:
	l3 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^post4, ct_27^0'=ct_27^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_9^0'=lt_9^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ -ct_21^post4+ct_21^0 == 0 /\ -ct_27^post4+ct_27^0 == 0 /\ -result_4^post4+result_4^0 == 0 /\ -lt_10^post4+lt_10^0 == 0 /\ lt_11^0-lt_11^post4 == 0 /\ -lt_9^post4+lt_9^0 == 0), cost: 1
	New rule:
	l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^post4, ct_27^0'=ct_27^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_9^0'=lt_9^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ ct_13^0-ct_13^post5 == 0 /\ -lt_10^post4+lt_10^post5 == 0 /\ -result_4^post4+result_4^post5 == 0 /\ x_5^0-x_5^post5 == 0 /\ -lt_10^post5+lt_10^0 == 0 /\ -ct_21^post5+ct_21^0 == 0 /\ -ct_12^post5+ct_12^0 == 0 /\ -lt_9^post4+lt_9^post5 == 0 /\ ct_21^post5-ct_21^post4 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ lt_11^post5-lt_11^post4 == 0 /\ -ct_27^post4+ct_27^post5 == 0 /\ -lt_9^post5+lt_9^0 == 0 /\ y_6^0-y_6^post5 == 0 /\ -ct_27^post5+ct_27^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 3 4
	
	Eliminating location l2 by chaining:

	Applied chaining

	First rule:
	l0 -> l2 : ct_12^0'=ct_12^post2, ct_13^0'=ct_13^post2, ct_21^0'=ct_21^post2, ct_27^0'=ct_27^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -ct_12^post2+ct_12^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ 1-lt_11^1+lt_10^1 <= 0 /\ ct_13^0-ct_13^post2 == 0 /\ lt_11^1-ct_27^0 == 0 /\ -ct_27^post2+ct_27^0 == 0 /\ x_5^0-x_5^post2 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_9^1-ct_21^0 == 0 /\ -ct_21^post2+ct_21^0 == 0), cost: 1
	Second rule:
	l2 -> l0 : ct_12^0'=ct_12^post3, ct_13^0'=ct_13^post3, ct_21^0'=ct_21^post3, ct_27^0'=ct_27^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_9^0'=lt_9^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (y_6^0-y_6^post3 == 0 /\ -ct_27^post3+ct_27^0 == 0 /\ -result_4^post3+result_4^0 == 0 /\ -lt_9^post3+lt_9^0 == 0 /\ ct_21^0-ct_21^post3 == 0 /\ x_5^0-x_5^post3 == 0 /\ -ct_12^post3+ct_12^0 == 0 /\ lt_11^0-lt_11^post3 == 0 /\ -lt_10^post3+lt_10^0 == 0 /\ ct_13^0-ct_13^post3 == 0), cost: 1
	New rule:
	l0 -> l0 : ct_12^0'=ct_12^post3, ct_13^0'=ct_13^post3, ct_21^0'=ct_21^post3, ct_27^0'=ct_27^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_9^0'=lt_9^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ result_4^post2-result_4^post3 == 0 /\ lt_9^post2-lt_9^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -ct_12^post2+ct_12^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ x_5^post2-x_5^post3 == 0 /\ 1-lt_11^1+lt_10^1 <= 0 /\ ct_13^0-ct_13^post2 == 0 /\ ct_12^post2-ct_12^post3 == 0 /\ lt_11^post2-lt_11^post3 == 0 /\ -y_6^post3+y_6^post2 == 0 /\ lt_11^1-ct_27^0 == 0 /\ -ct_27^post2+ct_27^0 == 0 /\ x_5^0-x_5^post2 == 0 /\ ct_27^post2-ct_27^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ ct_21^post2-ct_21^post3 == 0 /\ lt_9^1-ct_21^0 == 0 /\ ct_13^post2-ct_13^post3 == 0 /\ lt_10^post2-lt_10^post3 == 0 /\ -ct_21^post2+ct_21^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 1 2

Simplified Transitions

Start location: l4
Program variables: ct_12^0 ct_13^0 ct_21^0 ct_27^0 lt_10^0 lt_11^0 lt_9^0 result_4^0 x_5^0 y_6^0
   7: l0 -> l1 : lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, result_4^0'=result_4^post1, ct_27^0-ct_21^0 <= 0, cost: 1
   9: l0 -> l0 : lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, 1-ct_27^0+ct_21^0 <= 0, cost: 1
   8: l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : ct_12^0'=ct_12^post1, ct_13^0'=ct_13^post1, ct_21^0'=ct_21^post1, ct_27^0'=ct_27^post1, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_9^0'=lt_9^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (0 == 0 /\ -ct_13^post1+ct_13^0 == 0 /\ lt_11^1-lt_10^1 <= 0 /\ -lt_9^post1+lt_9^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ y_6^0-y_6^post1 == 0 /\ lt_11^1-ct_27^0 == 0 /\ ct_27^0-ct_27^post1 == 0 /\ -ct_21^post1+ct_21^0 == 0 /\ -x_5^post1+x_5^0 == 0 /\ ct_12^0-ct_12^post1 == 0), cost: 1
	New rule:
	l0 -> l1 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_9^0'=lt_9^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ lt_11^1-lt_10^1 <= 0 /\ lt_10^1-ct_21^0 == 0 /\ lt_11^1-ct_27^0 == 0), cost: 1
	
		propagated equality ct_13^post1 = ct_13^0
		
		propagated equality lt_9^post1 = lt_9^0
		
		propagated equality y_6^post1 = y_6^0
		
		propagated equality ct_27^post1 = ct_27^0
		
		propagated equality ct_21^post1 = ct_21^0
		
		propagated equality x_5^post1 = x_5^0
		
		propagated equality ct_12^post1 = ct_12^0
		
	Propagated Equalities

	Original rule:
	l0 -> l1 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_9^0'=lt_9^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ lt_11^1-lt_10^1 <= 0 /\ lt_10^1-ct_21^0 == 0 /\ lt_11^1-ct_27^0 == 0), cost: 1
	New rule:
	l0 -> l1 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_9^0'=lt_9^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ ct_27^0-ct_21^0 <= 0), cost: 1
	
		propagated equality lt_10^1 = ct_21^0
		
		propagated equality lt_11^1 = ct_27^0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_9^0'=lt_9^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ ct_27^0-ct_21^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_9^0'=lt_9^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, ct_27^0-ct_21^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, lt_9^0'=lt_9^0, result_4^0'=result_4^post1, x_5^0'=x_5^0, y_6^0'=y_6^0, ct_27^0-ct_21^0 <= 0, cost: 1
	New rule:
	l0 -> l1 : lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, result_4^0'=result_4^post1, ct_27^0-ct_21^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^post4, ct_27^0'=ct_27^post4, lt_10^0'=lt_10^post4, lt_11^0'=lt_11^post4, lt_9^0'=lt_9^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ ct_13^0-ct_13^post5 == 0 /\ -lt_10^post4+lt_10^post5 == 0 /\ -result_4^post4+result_4^post5 == 0 /\ x_5^0-x_5^post5 == 0 /\ -lt_10^post5+lt_10^0 == 0 /\ -ct_21^post5+ct_21^0 == 0 /\ -ct_12^post5+ct_12^0 == 0 /\ -lt_9^post4+lt_9^post5 == 0 /\ ct_21^post5-ct_21^post4 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ lt_11^post5-lt_11^post4 == 0 /\ -ct_27^post4+ct_27^post5 == 0 /\ -lt_9^post5+lt_9^0 == 0 /\ y_6^0-y_6^post5 == 0 /\ -ct_27^post5+ct_27^0 == 0), cost: 1
	New rule:
	l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^post5, ct_27^0'=ct_27^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ ct_13^0-ct_13^post5 == 0 /\ x_5^0-x_5^post5 == 0 /\ -lt_10^post5+lt_10^0 == 0 /\ -ct_21^post5+ct_21^0 == 0 /\ -ct_12^post5+ct_12^0 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ -lt_9^post5+lt_9^0 == 0 /\ y_6^0-y_6^post5 == 0 /\ -ct_27^post5+ct_27^0 == 0), cost: 1
	
		propagated equality lt_10^post4 = lt_10^post5
		
		propagated equality result_4^post4 = result_4^post5
		
		propagated equality lt_9^post4 = lt_9^post5
		
		propagated equality ct_21^post4 = ct_21^post5
		
		propagated equality lt_11^post4 = lt_11^post5
		
		propagated equality ct_27^post4 = ct_27^post5
		
	Propagated Equalities

	Original rule:
	l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^post5, ct_27^0'=ct_27^post5, lt_10^0'=lt_10^post5, lt_11^0'=lt_11^post5, lt_9^0'=lt_9^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (0 == 0 /\ ct_13^0-ct_13^post5 == 0 /\ x_5^0-x_5^post5 == 0 /\ -lt_10^post5+lt_10^0 == 0 /\ -ct_21^post5+ct_21^0 == 0 /\ -ct_12^post5+ct_12^0 == 0 /\ -lt_11^post5+lt_11^0 == 0 /\ result_4^0-result_4^post5 == 0 /\ -lt_9^post5+lt_9^0 == 0 /\ y_6^0-y_6^post5 == 0 /\ -ct_27^post5+ct_27^0 == 0), cost: 1
	New rule:
	l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_9^0'=lt_9^0, result_4^0'=result_4^0, x_5^0'=x_5^post4, y_6^0'=y_6^post4, 0 == 0, cost: 1
	
		propagated equality ct_13^post5 = ct_13^0
		
		propagated equality x_5^post5 = x_5^0
		
		propagated equality lt_10^post5 = lt_10^0
		
		propagated equality ct_21^post5 = ct_21^0
		
		propagated equality ct_12^post5 = ct_12^0
		
		propagated equality lt_11^post5 = lt_11^0
		
		propagated equality result_4^post5 = result_4^0
		
		propagated equality lt_9^post5 = lt_9^0
		
		propagated equality y_6^post5 = y_6^0
		
		propagated equality ct_27^post5 = ct_27^0
		
	Simplified Guard

	Original rule:
	l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_9^0'=lt_9^0, result_4^0'=result_4^0, x_5^0'=x_5^post4, y_6^0'=y_6^post4, 0 == 0, cost: 1
	New rule:
	l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_9^0'=lt_9^0, result_4^0'=result_4^0, x_5^0'=x_5^post4, y_6^0'=y_6^post4, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^0, lt_11^0'=lt_11^0, lt_9^0'=lt_9^0, result_4^0'=result_4^0, x_5^0'=x_5^post4, y_6^0'=y_6^post4, T, cost: 1
	New rule:
	l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, T, cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l0 : ct_12^0'=ct_12^post3, ct_13^0'=ct_13^post3, ct_21^0'=ct_21^post3, ct_27^0'=ct_27^post3, lt_10^0'=lt_10^post3, lt_11^0'=lt_11^post3, lt_9^0'=lt_9^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (0 == 0 /\ result_4^post2-result_4^post3 == 0 /\ lt_9^post2-lt_9^post3 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -ct_12^post2+ct_12^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ x_5^post2-x_5^post3 == 0 /\ 1-lt_11^1+lt_10^1 <= 0 /\ ct_13^0-ct_13^post2 == 0 /\ ct_12^post2-ct_12^post3 == 0 /\ lt_11^post2-lt_11^post3 == 0 /\ -y_6^post3+y_6^post2 == 0 /\ lt_11^1-ct_27^0 == 0 /\ -ct_27^post2+ct_27^0 == 0 /\ x_5^0-x_5^post2 == 0 /\ ct_27^post2-ct_27^post3 == 0 /\ y_6^0-y_6^post2 == 0 /\ ct_21^post2-ct_21^post3 == 0 /\ lt_9^1-ct_21^0 == 0 /\ ct_13^post2-ct_13^post3 == 0 /\ lt_10^post2-lt_10^post3 == 0 /\ -ct_21^post2+ct_21^0 == 0), cost: 1
	New rule:
	l0 -> l0 : ct_12^0'=ct_12^post2, ct_13^0'=ct_13^post2, ct_21^0'=ct_21^post2, ct_27^0'=ct_27^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -ct_12^post2+ct_12^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ 1-lt_11^1+lt_10^1 <= 0 /\ ct_13^0-ct_13^post2 == 0 /\ lt_11^1-ct_27^0 == 0 /\ -ct_27^post2+ct_27^0 == 0 /\ x_5^0-x_5^post2 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_9^1-ct_21^0 == 0 /\ -ct_21^post2+ct_21^0 == 0), cost: 1
	
		propagated equality result_4^post3 = result_4^post2
		
		propagated equality lt_9^post3 = lt_9^post2
		
		propagated equality x_5^post3 = x_5^post2
		
		propagated equality ct_12^post3 = ct_12^post2
		
		propagated equality lt_11^post3 = lt_11^post2
		
		propagated equality y_6^post3 = y_6^post2
		
		propagated equality ct_27^post3 = ct_27^post2
		
		propagated equality ct_21^post3 = ct_21^post2
		
		propagated equality ct_13^post3 = ct_13^post2
		
		propagated equality lt_10^post3 = lt_10^post2
		
	Propagated Equalities

	Original rule:
	l0 -> l0 : ct_12^0'=ct_12^post2, ct_13^0'=ct_13^post2, ct_21^0'=ct_21^post2, ct_27^0'=ct_27^post2, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ -result_4^post2+result_4^0 == 0 /\ -ct_12^post2+ct_12^0 == 0 /\ lt_10^1-ct_21^0 == 0 /\ 1-lt_11^1+lt_10^1 <= 0 /\ ct_13^0-ct_13^post2 == 0 /\ lt_11^1-ct_27^0 == 0 /\ -ct_27^post2+ct_27^0 == 0 /\ x_5^0-x_5^post2 == 0 /\ y_6^0-y_6^post2 == 0 /\ lt_9^1-ct_21^0 == 0 /\ -ct_21^post2+ct_21^0 == 0), cost: 1
	New rule:
	l0 -> l0 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-ct_27^0+ct_21^0 <= 0), cost: 1
	
		propagated equality result_4^post2 = result_4^0
		
		propagated equality ct_12^post2 = ct_12^0
		
		propagated equality lt_10^1 = ct_21^0
		
		propagated equality ct_13^post2 = ct_13^0
		
		propagated equality lt_11^1 = ct_27^0
		
		propagated equality ct_27^post2 = ct_27^0
		
		propagated equality x_5^post2 = x_5^0
		
		propagated equality y_6^post2 = y_6^0
		
		propagated equality lt_9^1 = ct_21^0
		
		propagated equality ct_21^post2 = ct_21^0
		
	Simplified Guard

	Original rule:
	l0 -> l0 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1-ct_27^0+ct_21^0 <= 0), cost: 1
	New rule:
	l0 -> l0 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-ct_27^0+ct_21^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l0 : ct_12^0'=ct_12^0, ct_13^0'=ct_13^0, ct_21^0'=ct_21^0, ct_27^0'=ct_27^0, lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 1-ct_27^0+ct_21^0 <= 0, cost: 1
	New rule:
	l0 -> l0 : lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, 1-ct_27^0+ct_21^0 <= 0, cost: 1

Step with 8

	Trace

	8[T]
	
	Blocked

	[{}, {}]

Step with 7

	Trace

	8[T], 7[(ct_27^0-ct_21^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	8[T]
	
	Blocked

	[{}, {7[T]}]

Step with 9

	Trace

	8[T], 9[(1-ct_27^0+ct_21^0 <= 0)]
	
	Blocked

	[{}, {7[T]}, {}]

Nonterm

Start location: l4
Program variables: ct_12^0 ct_13^0 ct_21^0 ct_27^0 lt_10^0 lt_11^0 lt_9^0 result_4^0 x_5^0 y_6^0
   7: l0 -> l1 : lt_10^0'=lt_10^post1, lt_11^0'=lt_11^post1, result_4^0'=result_4^post1, ct_27^0-ct_21^0 <= 0, cost: 1
   9: l0 -> l0 : lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, 1-ct_27^0+ct_21^0 <= 0, cost: 1
  10: l0 -> LoAT_sink : (-1+n >= 0 /\ -1+ct_27^0-ct_21^0 >= 0), cost: NONTERM
   8: l4 -> l0 : ct_12^0'=ct_12^post4, ct_13^0'=ct_13^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	l0 -> l0 : lt_10^0'=lt_10^post2, lt_11^0'=lt_11^post2, lt_9^0'=lt_9^post2, (1-ct_27^0+ct_21^0 <= 0), cost: 1
	New rule:
	l0 -> LoAT_sink : (-1+n >= 0 /\ -1+ct_27^0-ct_21^0 >= 0), cost: NONTERM

		-1+ct_27^0-ct_21^0 >= 0 [0]: monotonic increase yields -1+ct_27^0-ct_21^0 >= 0
		
		Replacement map: {-1+ct_27^0-ct_21^0 >= 0 -> -1+ct_27^0-ct_21^0 >= 0}

Step with 10

	Trace

	8[T], 10[(-1+n >= 0 /\ -1+ct_27^0-ct_21^0 >= 0)]
	
	Blocked

	[{}, {7[T]}, {10[T]}]

Refute

	Counterexample

	[ ct_12^0=0 ct_13^0=0 ct_21^0=0 ct_27^0=1 lt_10^0=0 lt_11^0=0 lt_9^0=0 result_4^0=0 x_5^0=0 y_6^0=0 ] 8 [ ct_12^0=ct_12^0 ct_13^0=ct_13^0 ct_21^0=0 ct_27^0=1 lt_10^0=0 lt_11^0=0 lt_9^0=0 result_4^0=0 x_5^0=x_5^0 y_6^0=y_6^0 ] 10
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
