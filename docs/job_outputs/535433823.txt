NO

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=arg2P0, arg1'=arg1P0, (-arg1P0 == 0 /\ 100-arg2P0 == 0), cost: 1
   1: f79_0_main_GE -> f79_0_main_GE : arg2'=arg2P1, arg1'=arg1P1, (arg2-arg1 > 0 /\ 1+arg2-arg2P1 == 0 /\ -1+arg1-arg1P1 == 0 /\ -52+arg2 < 0), cost: 1
   2: f79_0_main_GE -> f79_0_main_GE : arg2'=arg2P2, arg1'=arg1P2, (-1+arg2-arg2P2 == 0 /\ arg2-arg1 > 0 /\ -51+arg2 > 0 /\ 1+arg1-arg1P2 == 0), cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=arg2P0, arg1'=arg1P0, (-arg1P0 == 0 /\ 100-arg2P0 == 0), cost: 1
New rule:
f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=arg2P1, arg1'=arg1P1, (arg2-arg1 > 0 /\ 1+arg2-arg2P1 == 0 /\ -1+arg1-arg1P1 == 0 /\ -52+arg2 < 0), cost: 1
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=1+arg2, arg1'=-1+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=arg2P2, arg1'=arg1P2, (-1+arg2-arg2P2 == 0 /\ arg2-arg1 > 0 /\ -51+arg2 > 0 /\ 1+arg1-arg1P2 == 0), cost: 1
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=-1+arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ -51+arg2 > 0), cost: 1

Simplified rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
   5: f79_0_main_GE -> f79_0_main_GE : arg2'=1+arg2, arg1'=-1+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0), cost: 1
   6: f79_0_main_GE -> f79_0_main_GE : arg2'=-1+arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ -51+arg2 > 0), cost: 1
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied acceleration
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=1+arg2, arg1'=-1+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0), cost: 1
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=arg2+n, arg1'=arg1-n, (53-arg2-n > 0 /\ arg2-arg1 > 0 /\ n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_mfflIG.txt

Applied instantiation
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=arg2+n, arg1'=arg1-n, (53-arg2-n > 0 /\ arg2-arg1 > 0 /\ n >= 0), cost: n
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0), cost: 52-arg2

Applied acceleration
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=-1+arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ -51+arg2 > 0), cost: 1
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=arg2-n0, arg1'=n0+arg1, (-50+arg2-n0 > 0 /\ n0 >= 0 /\ 2+arg2-2*n0-arg1 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_bnljlL.txt

Applied instantiation
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=arg2-n0, arg1'=n0+arg1, (-50+arg2-n0 > 0 /\ n0 >= 0 /\ 2+arg2-2*n0-arg1 > 0), cost: n0
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (1 > 0 /\ -51+arg2 >= 0 /\ 104-arg2-arg1 > 0), cost: -51+arg2

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=-1+arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ -51+arg2 > 0), cost: 1
Second rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=1+arg2, arg1'=-1+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0), cost: 1
New rule:
f79_0_main_GE -> f79_0_main_GE : (-2+arg2-arg1 > 0 /\ -52+arg2 == 0), cost: 2

Applied nonterm
Original rule:
f79_0_main_GE -> f79_0_main_GE : (-2+arg2-arg1 > 0 /\ -52+arg2 == 0), cost: 2
New rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ 52-arg2 >= 0 /\ n1 >= 0 /\ -52+arg2 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fMlmhL.txt

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=1+arg2, arg1'=-1+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0), cost: 1
Second rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ 52-arg2 >= 0 /\ n1 >= 0 /\ -52+arg2 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -51+arg2 >= 0 /\ n1 >= 0 /\ 51-arg2 >= 0), cost: NONTERM

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=1+arg2, arg1'=-1+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0), cost: 1
Second rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=-1+arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ -51+arg2 > 0), cost: 1
New rule:
f79_0_main_GE -> f79_0_main_GE : (arg2-arg1 > 0 /\ -51+arg2 == 0), cost: 2

Applied nonterm
Original rule:
f79_0_main_GE -> f79_0_main_GE : (arg2-arg1 > 0 /\ -51+arg2 == 0), cost: 2
New rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ n2 >= 0 /\ -51+arg2 >= 0 /\ 51-arg2 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_DLccAi.txt

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=-1+arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ -51+arg2 > 0), cost: 1
Second rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ n2 >= 0 /\ -51+arg2 >= 0 /\ 51-arg2 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0 /\ n2 >= 0 /\ -51+arg2 > 0 /\ -52+arg2 >= 0), cost: NONTERM

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=-1+arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ -51+arg2 > 0), cost: 1
Second rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0), cost: 52-arg2
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (-2+arg2-arg1 > 0 /\ -53+arg2 <= 0 /\ -51+arg2 > 0), cost: 54-arg2

Applied acceleration
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (-2+arg2-arg1 > 0 /\ -53+arg2 <= 0 /\ -51+arg2 > 0), cost: 54-arg2
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=arg1, (53-arg2 >= 0 /\ 50-arg1 > 0 /\ -51+arg2 > 0 /\ -1+n3 >= 0), cost: 2*n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ePnpAO.txt

Applied nonterm
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (-2+arg2-arg1 > 0 /\ -53+arg2 <= 0 /\ -51+arg2 > 0), cost: 54-arg2
New rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ -104+2*arg2 <= 0 /\ 53-arg2 >= 0 /\ -51+arg2 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_clfNIp.txt

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0), cost: 52-arg2
Second rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ -104+2*arg2 <= 0 /\ 53-arg2 >= 0 /\ -51+arg2 > 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (0 <= 0 /\ 102-arg2-arg1 > 0 /\ 1 > 0 /\ 1 >= 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0), cost: NONTERM

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0), cost: 52-arg2
Second rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=-1+arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ -51+arg2 > 0), cost: 1
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (arg2-arg1 > 0 /\ -52+arg2 <= 0), cost: 53-arg2

Applied acceleration
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (arg2-arg1 > 0 /\ -52+arg2 <= 0), cost: 53-arg2
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=arg1, (arg2-arg1 > 0 /\ -1+n4 >= 0 /\ 52-arg2 >= 0 /\ 51-arg1 > 0), cost: 2*n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ladDGl.txt

Applied nonterm
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (arg2-arg1 > 0 /\ -52+arg2 <= 0), cost: 53-arg2
New rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 >= 0 /\ -102+2*arg2 <= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_imppPd.txt

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=-1+arg2, arg1'=1+arg1, (arg2-arg1 > 0 /\ -51+arg2 > 0), cost: 1
Second rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 >= 0 /\ -102+2*arg2 <= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ -104+2*arg2 <= 0 /\ arg2-arg1 > 0 /\ 53-arg2 >= 0 /\ -51+arg2 > 0), cost: NONTERM

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=1+arg2, arg1'=-1+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0), cost: 1
Second rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (1 > 0 /\ -51+arg2 >= 0 /\ 104-arg2-arg1 > 0), cost: -51+arg2
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -50+arg2 >= 0), cost: -49+arg2

Applied nonterm
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -50+arg2 >= 0), cost: -49+arg2
New rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -1+n5 >= 0 /\ -50+arg2 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_dkaglf.txt

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (1 > 0 /\ -51+arg2 >= 0 /\ 104-arg2-arg1 > 0), cost: -51+arg2
Second rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -1+n5 >= 0 /\ -50+arg2 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ 1 > 0 /\ 1 >= 0 /\ -51+arg2 >= 0 /\ -1+n5 >= 0 /\ 104-arg2-arg1 > 0), cost: NONTERM

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (1 > 0 /\ -51+arg2 >= 0 /\ 104-arg2-arg1 > 0), cost: -51+arg2
Second rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=1+arg2, arg1'=-1+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0), cost: 1
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (102-arg2-arg1 > 0 /\ -51+arg2 >= 0), cost: -50+arg2

Applied nonterm
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (102-arg2-arg1 > 0 /\ -51+arg2 >= 0), cost: -50+arg2
New rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ -51+arg2 >= 0 /\ -1+n6 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_kkGOCA.txt

Applied chaining
First rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=1+arg2, arg1'=-1+arg1, (arg2-arg1 > 0 /\ 52-arg2 > 0), cost: 1
Second rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ -51+arg2 >= 0 /\ -1+n6 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -1+n6 >= 0 /\ -50+arg2 >= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0), cost: 52-arg2
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (arg2-arg1 > 0 /\ -52+arg2 <= 0), cost: 52-arg2

Applied simplification
Original rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (1 > 0 /\ -51+arg2 >= 0 /\ 104-arg2-arg1 > 0), cost: -51+arg2
New rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (-51+arg2 >= 0 /\ 104-arg2-arg1 > 0), cost: -51+arg2

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ 52-arg2 >= 0 /\ n1 >= 0 /\ -52+arg2 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ n1 >= 0 /\ -52+arg2 <= 0 /\ -52+arg2 >= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -51+arg2 >= 0 /\ n1 >= 0 /\ 51-arg2 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ -51+arg2 <= 0 /\ -51+arg2 >= 0 /\ n1 >= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ n2 >= 0 /\ -51+arg2 >= 0 /\ 51-arg2 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ n2 >= 0 /\ -51+arg2 <= 0 /\ -51+arg2 >= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0 /\ n2 >= 0 /\ -51+arg2 > 0 /\ -52+arg2 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ n2 >= 0 /\ -52+arg2 <= 0 /\ -52+arg2 >= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ -104+2*arg2 <= 0 /\ 53-arg2 >= 0 /\ -51+arg2 > 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ -51+arg2 > 0 /\ -52+arg2 <= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (0 <= 0 /\ 102-arg2-arg1 > 0 /\ 1 > 0 /\ 1 >= 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 >= 0 /\ -102+2*arg2 <= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ -51+arg2 <= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ -104+2*arg2 <= 0 /\ arg2-arg1 > 0 /\ 53-arg2 >= 0 /\ -51+arg2 > 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ -51+arg2 > 0 /\ -52+arg2 <= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ 1 > 0 /\ 1 >= 0 /\ -51+arg2 >= 0 /\ -1+n5 >= 0 /\ 104-arg2-arg1 > 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ -51+arg2 >= 0 /\ -1+n5 >= 0), cost: NONTERM

Applied simplification
Original rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -1+n6 >= 0 /\ -50+arg2 >= 0), cost: NONTERM
New rule:
f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -1+n6 >= 0 /\ -50+arg2 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 5 6

Accelerated simple loops
Start location: __init
   4: f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
  17: f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -1+n5 >= 0 /\ -50+arg2 >= 0), cost: NONTERM
  19: f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ -51+arg2 >= 0 /\ -1+n6 >= 0), cost: NONTERM
  21: f79_0_main_GE -> f79_0_main_GE : arg2'=52, arg1'=-52+arg2+arg1, (arg2-arg1 > 0 /\ -52+arg2 <= 0), cost: 52-arg2
  22: f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (-51+arg2 >= 0 /\ 104-arg2-arg1 > 0), cost: -51+arg2
  23: f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ n1 >= 0 /\ -52+arg2 <= 0 /\ -52+arg2 >= 0), cost: NONTERM
  24: f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ -51+arg2 <= 0 /\ -51+arg2 >= 0 /\ n1 >= 0), cost: NONTERM
  25: f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ n2 >= 0 /\ -51+arg2 <= 0 /\ -51+arg2 >= 0), cost: NONTERM
  26: f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ n2 >= 0 /\ -52+arg2 <= 0 /\ -52+arg2 >= 0), cost: NONTERM
  27: f79_0_main_GE -> [3] : (-2+arg2-arg1 > 0 /\ -51+arg2 > 0 /\ -52+arg2 <= 0), cost: NONTERM
  28: f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ arg2-arg1 > 0 /\ 52-arg2 >= 0), cost: NONTERM
  29: f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ -51+arg2 <= 0), cost: NONTERM
  30: f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ -51+arg2 >= 0 /\ -1+n5 >= 0), cost: NONTERM
  31: f79_0_main_GE -> [3] : (arg2-arg1 > 0 /\ 52-arg2 > 0 /\ -1+n6 >= 0 /\ -50+arg2 >= 0), cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
Second rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ -51+arg2 >= 0 /\ -1+n6 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : (49 >= 0 /\ 2 > 0), cost: NONTERM

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
Second rule:
f79_0_main_GE -> f79_0_main_GE : arg2'=51, arg1'=-51+arg2+arg1, (-51+arg2 >= 0 /\ 104-arg2-arg1 > 0), cost: -51+arg2
New rule:
f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=51, arg1'=49, (49 >= 0 /\ 4 > 0), cost: 50

Applied chaining
First rule:
f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
Second rule:
f79_0_main_GE -> [3] : (102-arg2-arg1 > 0 /\ -51+arg2 >= 0 /\ -1+n5 >= 0), cost: NONTERM
New rule:
f1_0_main_ConstantStackPush -> [3] : (49 >= 0 /\ 2 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 17 19 21 22 23 24 25 26 27 28 29 30 31

Chained accelerated rules with incoming rules
Start location: __init
   4: f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=100, arg1'=0, TRUE, cost: 1
  32: f1_0_main_ConstantStackPush -> [3] : (49 >= 0 /\ 2 > 0), cost: NONTERM
  33: f1_0_main_ConstantStackPush -> f79_0_main_GE : arg2'=51, arg1'=49, (49 >= 0 /\ 4 > 0), cost: 50
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  32: f1_0_main_ConstantStackPush -> [3] : (49 >= 0 /\ 2 > 0), cost: NONTERM
   3: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1


Eliminating location f1_0_main_ConstantStackPush by chaining:

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg2'=arg2P3, arg1'=arg1P3, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> [3] : (49 >= 0 /\ 2 > 0), cost: NONTERM
New rule:
__init -> [3] : (49 >= 0 /\ 2 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 3 32

Eliminated locations on linear paths
Start location: __init
  34: __init -> [3] : (49 >= 0 /\ 2 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 34 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (49 >= 0 /\ 2 > 0)
