unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2
   0: f1_0_main_Load -> f145_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
   1: f145_0_main_LE -> f145_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, (-arg1p2+arg2 == 0 /\ -arg2p2+arg1 == 0 /\ -arg1+arg2 < 0), cost: 1
   2: __init -> f1_0_main_Load : arg1'=arg1p3, arg2'=arg2p3, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2
   1: f145_0_main_LE -> f145_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, (-arg1p2+arg2 == 0 /\ -arg2p2+arg1 == 0 /\ -arg1+arg2 < 0), cost: 1
   3: __init -> f145_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, (1+arg2p3 > 0 /\ arg1p3 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Eliminating location f1_0_main_Load by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_Load : arg1'=arg1p3, arg2'=arg2p3, T, cost: 1
	Second rule:
	f1_0_main_Load -> f145_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, (1+arg2 > 0 /\ arg1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
	New rule:
	__init -> f145_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, (1+arg2p3 > 0 /\ arg1p3 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 2

Simplified Transitions

Start location: __init
Program variables: arg1 arg2
   4: f145_0_main_LE -> f145_0_main_LE : arg1'=arg2, arg2'=arg1, -arg1+arg2 < 0, cost: 1
   5: __init -> f145_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, (1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f145_0_main_LE -> f145_0_main_LE : arg1'=arg1p2, arg2'=arg2p2, (-arg1p2+arg2 == 0 /\ -arg2p2+arg1 == 0 /\ -arg1+arg2 < 0), cost: 1
	New rule:
	f145_0_main_LE -> f145_0_main_LE : arg1'=arg2, arg2'=arg1, (0 == 0 /\ -arg1+arg2 < 0), cost: 1
	
		propagated equality arg1p2 = arg2
		
		propagated equality arg2p2 = arg1
		
	Simplified Guard

	Original rule:
	f145_0_main_LE -> f145_0_main_LE : arg1'=arg2, arg2'=arg1, (0 == 0 /\ -arg1+arg2 < 0), cost: 1
	New rule:
	f145_0_main_LE -> f145_0_main_LE : arg1'=arg2, arg2'=arg1, -arg1+arg2 < 0, cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f145_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, (1+arg2p3 > 0 /\ arg1p3 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1
	New rule:
	__init -> f145_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, (1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

Unrolled Loops

Start location: __init
Program variables: arg1 arg2
   4: f145_0_main_LE -> f145_0_main_LE : arg1'=arg2, arg2'=arg1, -arg1+arg2 < 0, cost: 1
   6: f145_0_main_LE -> f145_0_main_LE : (-arg1+arg2 < 0 /\ arg1-arg2 < 0), cost: 1
   5: __init -> f145_0_main_LE : arg1'=arg1p1, arg2'=arg2p1, (1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Unrolling

	Original rule:
	f145_0_main_LE -> f145_0_main_LE : arg1'=arg2, arg2'=arg1, -arg1+arg2 < 0, cost: 1
	New rule:
	f145_0_main_LE -> f145_0_main_LE : arg1'=arg1, arg2'=arg2, (-arg1+arg2 < 0 /\ arg1-arg2 < 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f145_0_main_LE -> f145_0_main_LE : arg1'=arg1, arg2'=arg2, (-arg1+arg2 < 0 /\ arg1-arg2 < 0), cost: 1
	New rule:
	f145_0_main_LE -> f145_0_main_LE : (-arg1+arg2 < 0 /\ arg1-arg2 < 0), cost: 1

Step with 5

	Trace

	5[(1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {}]

Step with 4

	Trace

	5[(1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 4[(-arg1+arg2 < 0)]
	
	Blocked

	[{}, {}, {}]

Acceleration Failed

marked recursive suffix as redundant

Backtrack

	Trace

	5[(1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {4[T]}]

Backtrack

	Trace

	Blocked

	[{5[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
