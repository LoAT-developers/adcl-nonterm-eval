NO

Initial ITS

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : -10+x < 0, cost: 1
   6: [3] -> [7] : -10+x >= 0, cost: 1
   3: [4] -> [5] : x'=-y, T, cost: 1
   4: [5] -> [6] : y'=1+y, T, cost: 1
   5: [6] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x y
   7: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   6: [3] -> [7] : -10+x >= 0, cost: 1
  10: [3] -> [3] : x'=-y, y'=1+y, -10+x < 0, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : -10+x < 0, cost: 1
	Second rule:
	[4] -> [5] : x'=-y, T, cost: 1
	New rule:
	[3] -> [5] : x'=-y, -10+x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : x'=-y, -10+x < 0, cost: 1
	Second rule:
	[5] -> [6] : y'=1+y, T, cost: 1
	New rule:
	[3] -> [6] : x'=-y, y'=1+y, -10+x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 4 8
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[3] -> [6] : x'=-y, y'=1+y, -10+x < 0, cost: 1
	Second rule:
	[6] -> [3] : T, cost: 1
	New rule:
	[3] -> [3] : x'=-y, y'=1+y, -10+x < 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 9

Step with 7

	Trace

	7[T]
	
	Blocked

	[{}, {}]

Step with 6

	Trace

	7[T], 6[(-10+x >= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {6[T]}]

Step with 10

	Trace

	7[T], 10[(-10+x < 0)]
	
	Blocked

	[{}, {6[T]}, {}]

Nonterm

Start location: [1]
Program variables: x y
   7: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   6: [3] -> [7] : -10+x >= 0, cost: 1
  10: [3] -> [3] : x'=-y, y'=1+y, -10+x < 0, cost: 1
  11: [3] -> LoAT_sink : (10-x > 0 /\ -1+n >= 0 /\ -y-x <= 0), cost: NONTERM
  12: [3] -> [3] : x'=1-n-y, y'=n+y, (10-x > 0 /\ -1+n >= 0 /\ -y-x <= 0), cost: 1

	Certificate of Non-Termination

	Original rule:
	[3] -> [3] : x'=-y, y'=1+y, (-10+x < 0), cost: 1
	New rule:
	[3] -> LoAT_sink : (10-x > 0 /\ -1+n >= 0 /\ -y-x <= 0), cost: NONTERM

		10-x > 0 [0]: eventual increase yields (10-x > 0 /\ -y-x <= 0)
		
		Replacement map: {10-x > 0 -> (10-x > 0 /\ -y-x <= 0)}

	Loop Acceleration

	Original rule:
	[3] -> [3] : x'=-y, y'=1+y, (-10+x < 0), cost: 1
	New rule:
	[3] -> [3] : x'=1-n-y, y'=n+y, (10-x > 0 /\ -1+n >= 0 /\ -y-x <= 0), cost: 1

		10-x > 0 [0]: eventual increase yields (10-x > 0 /\ -y-x <= 0)
		
		Replacement map: {10-x > 0 -> (10-x > 0 /\ -y-x <= 0)}

Step with 11

	Trace

	7[T], 11[(10-x > 0 /\ -1+n >= 0 /\ -y-x <= 0)]
	
	Blocked

	[{}, {6[T]}, {11[T]}]

Refute

	Counterexample

	[ x=9 y=0 ] 7 [ x=x y=y ] 11
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
