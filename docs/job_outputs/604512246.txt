unknown

Initial ITS

Start location: [1]
Program variables: c x y z
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : z'=nondet2, T, cost: 1
   3: [4] -> [5] : c'=0, T, cost: 1
   4: [5] -> [6] : -z+x > 0, cost: 1
  13: [5] -> [13] : -z+x <= 0, cost: 1
   5: [6] -> [7] : -z+y > 0, cost: 1
   9: [6] -> [10] : -z+y <= 0, cost: 1
   6: [7] -> [8] : y'=-1+y, T, cost: 1
   7: [8] -> [9] : c'=1+c, T, cost: 1
   8: [9] -> [6] : T, cost: 1
  10: [10] -> [11] : c'=1+c, T, cost: 1
  11: [11] -> [12] : x'=-1+x, T, cost: 1
  12: [12] -> [5] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: c x y z
  16: [1] -> [5] : c'=0, x'=nondet, y'=nondet1, z'=nondet2, T, cost: 1
   4: [5] -> [6] : -z+x > 0, cost: 1
  13: [5] -> [13] : -z+x <= 0, cost: 1
  21: [6] -> [6] : c'=1+c, y'=-1+y, -z+y > 0, cost: 1
  22: [6] -> [5] : c'=1+c, x'=-1+x, -z+y <= 0, cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [3] by chaining:

	Applied chaining

	First rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	Second rule:
	[3] -> [4] : z'=nondet2, T, cost: 1
	New rule:
	[1] -> [4] : x'=nondet, y'=nondet1, z'=nondet2, T, cost: 1
	
	Applied deletion

	Removed the following rules: 2 14
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[1] -> [4] : x'=nondet, y'=nondet1, z'=nondet2, T, cost: 1
	Second rule:
	[4] -> [5] : c'=0, T, cost: 1
	New rule:
	[1] -> [5] : c'=0, x'=nondet, y'=nondet1, z'=nondet2, T, cost: 1
	
	Applied deletion

	Removed the following rules: 3 15
	
	Eliminating location [7] by chaining:

	Applied chaining

	First rule:
	[6] -> [7] : -z+y > 0, cost: 1
	Second rule:
	[7] -> [8] : y'=-1+y, T, cost: 1
	New rule:
	[6] -> [8] : y'=-1+y, -z+y > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 5 6
	
	Eliminating location [10] by chaining:

	Applied chaining

	First rule:
	[6] -> [10] : -z+y <= 0, cost: 1
	Second rule:
	[10] -> [11] : c'=1+c, T, cost: 1
	New rule:
	[6] -> [11] : c'=1+c, -z+y <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 9 10
	
	Eliminating location [8] by chaining:

	Applied chaining

	First rule:
	[6] -> [8] : y'=-1+y, -z+y > 0, cost: 1
	Second rule:
	[8] -> [9] : c'=1+c, T, cost: 1
	New rule:
	[6] -> [9] : c'=1+c, y'=-1+y, -z+y > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 7 17
	
	Eliminating location [11] by chaining:

	Applied chaining

	First rule:
	[6] -> [11] : c'=1+c, -z+y <= 0, cost: 1
	Second rule:
	[11] -> [12] : x'=-1+x, T, cost: 1
	New rule:
	[6] -> [12] : c'=1+c, x'=-1+x, -z+y <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 11 18
	
	Eliminating location [9] by chaining:

	Applied chaining

	First rule:
	[6] -> [9] : c'=1+c, y'=-1+y, -z+y > 0, cost: 1
	Second rule:
	[9] -> [6] : T, cost: 1
	New rule:
	[6] -> [6] : c'=1+c, y'=-1+y, -z+y > 0, cost: 1
	
	Applied deletion

	Removed the following rules: 8 19
	
	Eliminating location [12] by chaining:

	Applied chaining

	First rule:
	[6] -> [12] : c'=1+c, x'=-1+x, -z+y <= 0, cost: 1
	Second rule:
	[12] -> [5] : T, cost: 1
	New rule:
	[6] -> [5] : c'=1+c, x'=-1+x, -z+y <= 0, cost: 1
	
	Applied deletion

	Removed the following rules: 12 20

Step with 16

	Trace

	16[T]
	
	Blocked

	[{}, {}]

Step with 13

	Trace

	16[T], 13[(-z+x <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {13[T]}]

Step with 4

	Trace

	16[T], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T]}, {}]

Step with 21

	Trace

	16[T], 4[(-z+x > 0)], 21[(-z+y > 0)]
	
	Blocked

	[{}, {13[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: c x y z
  16: [1] -> [5] : c'=0, x'=nondet, y'=nondet1, z'=nondet2, T, cost: 1
   4: [5] -> [6] : -z+x > 0, cost: 1
  13: [5] -> [13] : -z+x <= 0, cost: 1
  21: [6] -> [6] : c'=1+c, y'=-1+y, -z+y > 0, cost: 1
  22: [6] -> [5] : c'=1+c, x'=-1+x, -z+y <= 0, cost: 1
  23: [6] -> [6] : c'=n+c, y'=-n+y, (-1+n >= 0 /\ 1-z-n+y > 0), cost: 1

	Loop Acceleration

	Original rule:
	[6] -> [6] : c'=1+c, y'=-1+y, (-z+y > 0), cost: 1
	New rule:
	[6] -> [6] : c'=n+c, y'=-n+y, (-1+n >= 0 /\ 1-z-n+y > 0), cost: 1

		-z+y > 0 [0]: montonic decrease yields 1-z-n+y > 0
		
		-z+y > 0 [1]: eventual increase yields (1 <= 0 /\ -z+y > 0)
		
		Replacement map: {-z+y > 0 -> 1-z-n+y > 0}

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}]

Step with 22

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 4

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}, {}, {}]

Accelerate

Start location: [1]
Program variables: c x y z
  16: [1] -> [5] : c'=0, x'=nondet, y'=nondet1, z'=nondet2, T, cost: 1
   4: [5] -> [6] : -z+x > 0, cost: 1
  13: [5] -> [13] : -z+x <= 0, cost: 1
  21: [6] -> [6] : c'=1+c, y'=-1+y, -z+y > 0, cost: 1
  22: [6] -> [5] : c'=1+c, x'=-1+x, -z+y <= 0, cost: 1
  23: [6] -> [6] : c'=n+c, y'=-n+y, (-1+n >= 0 /\ 1-z-n+y > 0), cost: 1
  24: [6] -> [6] : c'=n2+c, x'=-n2+x, (-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[6] -> [6] : c'=1+c, x'=-1+x, (-1-z+x > 0 /\ -z+y <= 0), cost: 1
	New rule:
	[6] -> [6] : c'=n2+c, x'=-n2+x, (-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0), cost: 1

		-1-z+x > 0 [0]: montonic decrease yields -n2-z+x > 0
		
		-1-z+x > 0 [1]: eventual increase yields (1 <= 0 /\ -1-z+x > 0)
		
		z-y >= 0 [0]: monotonic increase yields z-y >= 0
		
		Replacement map: {-1-z+x > 0 -> -n2-z+x > 0, z-y >= 0 -> z-y >= 0}

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}, {24[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 22

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}, {21[T], 24[T]}, {}]

Acceleration Failed

marked recursive suffix as redundant

Step with 4

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}, {21[T], 24[T]}, {}, {}]

Covered

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}, {21[T], 24[T]}, {4[T]}]

Step with 13

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)], 13[(-z+x <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}, {21[T], 24[T]}, {4[T]}, {}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}, {21[T], 24[T]}, {4[T], 13[T]}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T]}, {21[T], 22[T], 24[T]}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T], 24[T]}]

Step with 22

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T], 24[T]}, {}]

Step with 13

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)], 13[(-z+x <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T], 24[T]}, {}, {}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T], 24[T]}, {13[T]}]

Step with 4

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T], 24[T]}, {13[T]}, {}]

Covered

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 23[T], 24[T]}, {4[T], 13[T]}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)]
	
	Blocked

	[{}, {13[T]}, {}, {21[T], 22[T], 23[T], 24[T]}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T]}, {23[T]}]

Step with 22

	Trace

	16[T], 4[(-z+x > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {23[T]}, {}]

Accelerate

Start location: [1]
Program variables: c x y z
  16: [1] -> [5] : c'=0, x'=nondet, y'=nondet1, z'=nondet2, T, cost: 1
   4: [5] -> [6] : -z+x > 0, cost: 1
  13: [5] -> [13] : -z+x <= 0, cost: 1
  25: [5] -> [5] : c'=n3+c, x'=-n3+x, (1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0), cost: 1
  21: [6] -> [6] : c'=1+c, y'=-1+y, -z+y > 0, cost: 1
  22: [6] -> [5] : c'=1+c, x'=-1+x, -z+y <= 0, cost: 1
  23: [6] -> [6] : c'=n+c, y'=-n+y, (-1+n >= 0 /\ 1-z-n+y > 0), cost: 1
  24: [6] -> [6] : c'=n2+c, x'=-n2+x, (-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[5] -> [5] : c'=1+c, x'=-1+x, (-z+x > 0 /\ -z+y <= 0), cost: 1
	New rule:
	[5] -> [5] : c'=n3+c, x'=-n3+x, (1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0), cost: 1

		z-y >= 0 [0]: monotonic increase yields z-y >= 0
		
		-z+x > 0 [0]: montonic decrease yields 1-n3-z+x > 0
		
		-z+x > 0 [1]: eventual increase yields (1 <= 0 /\ -z+x > 0)
		
		Replacement map: {z-y >= 0 -> z-y >= 0, -z+x > 0 -> 1-n3-z+x > 0}

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T]}, {25[T]}]

Step with 13

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)], 13[(-z+x <= 0)]
	
	Blocked

	[{}, {13[T]}, {25[T]}, {}]

Backtrack

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 25[T]}]

Step with 4

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 25[T]}, {}]

Step with 22

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)], 4[(-z+x > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 25[T]}, {}, {}]

Covered

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 25[T]}, {22[T]}]

Step with 24

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)], 4[(-z+x > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 25[T]}, {22[T], 23[T]}, {24[T]}]

Step with 22

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)], 4[(-z+x > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 25[T]}, {22[T], 23[T]}, {21[T], 24[T]}, {}]

Covered

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)], 4[(-z+x > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 25[T]}, {22[T], 23[T]}, {21[T], 22[T], 24[T]}]

Backtrack

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T]}, {13[T], 25[T]}, {22[T], 23[T], 24[T]}]

Backtrack

	Trace

	16[T], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T]}, {4[T], 13[T], 25[T]}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {13[T], 25[T]}]

Step with 4

	Trace

	16[T], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {}]

Step with 22

	Trace

	16[T], 4[(-z+x > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {}, {}]

Covered

	Trace

	16[T], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}]

Step with 23

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}]

Step with 24

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}, {24[T]}]

Step with 22

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}, {21[T], 24[T]}, {}]

Step with 4

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}, {21[T], 24[T]}, {}, {}]

Covered

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}, {21[T], 24[T]}, {4[T]}]

Step with 25

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}, {21[T], 24[T]}, {4[T]}, {25[T]}]

Covered

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}, {21[T], 24[T]}, {4[T], 25[T]}]

Step with 13

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)], 13[(-z+x <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}, {21[T], 24[T]}, {4[T], 25[T]}, {}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}, {21[T], 24[T]}, {4[T], 13[T], 25[T]}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T]}, {21[T], 22[T], 24[T]}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T], 24[T]}]

Step with 22

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T], 24[T]}, {}]

Step with 13

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)], 13[(-z+x <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T], 24[T]}, {}, {}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T], 24[T]}, {13[T]}]

Step with 4

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T], 24[T]}, {13[T]}, {}]

Covered

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T], 24[T]}, {4[T], 13[T]}]

Step with 25

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)], 25[(1-n3-z+x > 0 /\ -1+n3 >= 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T], 24[T]}, {4[T], 13[T]}, {25[T]}]

Covered

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {23[T], 24[T]}, {4[T], 13[T], 25[T]}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {22[T], 23[T], 24[T]}]

Step with 21

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)], 21[(-z+y > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {22[T], 23[T], 24[T]}, {}]

Covered

	Trace

	16[T], 4[(-z+x > 0)], 23[(-1+n >= 0 /\ 1-z-n+y > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T]}, {21[T], 22[T], 23[T], 24[T]}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T], 23[T]}]

Step with 21

	Trace

	16[T], 4[(-z+x > 0)], 21[(-z+y > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {22[T], 23[T]}, {}]

Covered

	Trace

	16[T], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {21[T], 22[T], 23[T]}]

Step with 24

	Trace

	16[T], 4[(-z+x > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {21[T], 22[T], 23[T]}, {24[T]}]

Step with 22

	Trace

	16[T], 4[(-z+x > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)], 22[(-z+y <= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {21[T], 22[T], 23[T]}, {21[T], 24[T]}, {}]

Covered

	Trace

	16[T], 4[(-z+x > 0)], 24[(-1+n2 >= 0 /\ -n2-z+x > 0 /\ z-y >= 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {21[T], 22[T], 23[T]}, {21[T], 22[T], 24[T]}]

Backtrack

	Trace

	16[T], 4[(-z+x > 0)]
	
	Blocked

	[{}, {13[T], 25[T]}, {21[T], 22[T], 23[T], 24[T]}]

Backtrack

	Trace

	16[T]
	
	Blocked

	[{}, {4[T], 13[T], 25[T]}]

Backtrack

	Trace

	Blocked

	[{16[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
