YES

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l31, true>
<l1, l2, (undef1 = (0 + x0^0)) /\ (undef6 = (0 + x1^0)) /\ (undef7 = (0 + x2^0)) /\ (undef8 = (0 + x3^0)) /\ (undef9 = (0 + x4^0)) /\ (undef12 = undef12) /\ (undef13 = undef13) /\ ((0 + undef9) <= 3), par{oldX0^0 -> undef1, oldX1^0 -> undef6, oldX2^0 -> undef7, oldX3^0 -> undef8, oldX4^0 -> undef9, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef12, oldX8^0 -> undef13, x0^0 -> (0 + undef1), x1^0 -> (0 + undef6), x2^0 -> (0 + undef7), x3^0 -> (0 + undef8), x4^0 -> (0 + undef9), x5^0 -> (0 + undef12), x6^0 -> (0 + undef13)}>
<l1, l3, (undef22 = (0 + x0^0)) /\ (undef27 = (0 + x1^0)) /\ (undef28 = (0 + x2^0)) /\ (undef29 = (0 + x3^0)) /\ (undef30 = (0 + x4^0)) /\ (undef33 = undef33) /\ (undef34 = undef34) /\ (4 <= (0 + undef30)), par{oldX0^0 -> undef22, oldX1^0 -> undef27, oldX2^0 -> undef28, oldX3^0 -> undef29, oldX4^0 -> undef30, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef33, oldX8^0 -> undef34, x0^0 -> (0 + undef22), x1^0 -> (0 + undef27), x2^0 -> (0 + undef28), x3^0 -> (0 + undef29), x4^0 -> (0 + undef30), x5^0 -> (0 + undef33), x6^0 -> (0 + undef34)}>
<l4, l5, (undef43 = (0 + x0^0)) /\ (undef48 = (0 + x1^0)) /\ (undef49 = (0 + x2^0)) /\ (undef50 = (0 + x3^0)) /\ (undef54 = undef54) /\ (undef55 = undef55) /\ (undef56 = undef56), par{oldX0^0 -> undef43, oldX1^0 -> undef48, oldX2^0 -> undef49, oldX3^0 -> undef50, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef54, oldX8^0 -> undef55, oldX9^0 -> undef56, x0^0 -> (0 + undef43), x1^0 -> (0 + undef48), x2^0 -> (0 + undef49), x3^0 -> (~(32) + undef50), x4^0 -> (0 + undef54), x5^0 -> (0 + undef55), x6^0 -> (0 + undef56)}>
<l5, l1, (undef64 = (0 + x0^0)) /\ (undef69 = (0 + x1^0)) /\ (undef70 = (0 + x2^0)) /\ (undef71 = (0 + x3^0)) /\ (undef75 = undef75) /\ (undef76 = undef76) /\ ((0 + undef71) <= 31), par{oldX0^0 -> undef64, oldX1^0 -> undef69, oldX2^0 -> undef70, oldX3^0 -> undef71, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef75, oldX8^0 -> undef76, x0^0 -> (0 + undef64), x1^0 -> (0 + undef69), x2^0 -> (0 + undef70), x3^0 -> (0 + undef71), x4^0 -> (0 + undef71), x5^0 -> (0 + undef75), x6^0 -> (0 + undef76)}>
<l5, l4, (undef85 = (0 + x0^0)) /\ (undef90 = (0 + x1^0)) /\ (undef91 = (0 + x2^0)) /\ (undef92 = (0 + x3^0)) /\ (undef96 = undef96) /\ (undef97 = undef97) /\ (undef98 = undef98) /\ (32 <= (0 + undef92)), par{oldX0^0 -> undef85, oldX1^0 -> undef90, oldX2^0 -> undef91, oldX3^0 -> undef92, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef96, oldX8^0 -> undef97, oldX9^0 -> undef98, x0^0 -> (0 + undef85), x1^0 -> (0 + undef90), x2^0 -> (0 + undef91), x3^0 -> (0 + undef92), x4^0 -> (0 + undef96), x5^0 -> (0 + undef97), x6^0 -> (0 + undef98)}>
<l6, l7, (undef106 = (0 + x0^0)) /\ (undef111 = (0 + x1^0)) /\ (undef112 = (0 + x2^0)) /\ (undef117 = undef117) /\ (undef118 = undef118) /\ (undef119 = undef119) /\ (undef107 = undef107), par{oldX0^0 -> undef106, oldX10^0 -> undef107, oldX1^0 -> undef111, oldX2^0 -> undef112, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef117, oldX8^0 -> undef118, oldX9^0 -> undef119, x0^0 -> (0 + undef106), x1^0 -> (0 + undef111), x2^0 -> (~(1) + undef112), x3^0 -> (0 + undef117), x4^0 -> (0 + undef118), x5^0 -> (0 + undef119), x6^0 -> (0 + undef107)}>
<l8, l9, (undef127 = (0 + x0^0)) /\ (undef132 = (0 + x1^0)) /\ (undef133 = (0 + x2^0)) /\ (undef138 = undef138) /\ (undef139 = undef139) /\ (undef140 = undef140) /\ (undef128 = undef128) /\ (undef129 = undef129) /\ ((0 + undef129) <= 0) /\ (0 <= (0 + undef129)), par{oldX0^0 -> undef127, oldX10^0 -> undef128, oldX11^0 -> undef129, oldX1^0 -> undef132, oldX2^0 -> undef133, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef138, oldX8^0 -> undef139, oldX9^0 -> undef140, x0^0 -> (0 + undef127), x1^0 -> (0 + undef132), x2^0 -> (0 + undef133), x3^0 -> (0 + undef138), x4^0 -> (0 + undef139), x5^0 -> (0 + undef140), x6^0 -> (0 + undef128)}>
<l8, l6, (undef148 = (0 + x0^0)) /\ (undef153 = (0 + x1^0)) /\ (undef154 = (0 + x2^0)) /\ (undef159 = undef159) /\ (undef160 = undef160) /\ (undef161 = undef161) /\ (undef149 = undef149) /\ (undef150 = undef150) /\ (1 <= (0 + undef150)), par{oldX0^0 -> undef148, oldX10^0 -> undef149, oldX11^0 -> undef150, oldX1^0 -> undef153, oldX2^0 -> undef154, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef159, oldX8^0 -> undef160, oldX9^0 -> undef161, x0^0 -> (0 + undef148), x1^0 -> (0 + undef153), x2^0 -> (0 + undef154), x3^0 -> (0 + undef159), x4^0 -> (0 + undef160), x5^0 -> (0 + undef161), x6^0 -> (0 + undef149)}>
<l8, l6, (undef169 = (0 + x0^0)) /\ (undef174 = (0 + x1^0)) /\ (undef175 = (0 + x2^0)) /\ (undef180 = undef180) /\ (undef181 = undef181) /\ (undef182 = undef182) /\ (undef170 = undef170) /\ (undef171 = undef171) /\ ((1 + undef171) <= 0), par{oldX0^0 -> undef169, oldX10^0 -> undef170, oldX11^0 -> undef171, oldX1^0 -> undef174, oldX2^0 -> undef175, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef180, oldX8^0 -> undef181, oldX9^0 -> undef182, x0^0 -> (0 + undef169), x1^0 -> (0 + undef174), x2^0 -> (0 + undef175), x3^0 -> (0 + undef180), x4^0 -> (0 + undef181), x5^0 -> (0 + undef182), x6^0 -> (0 + undef170)}>
<l9, l5, (undef190 = (0 + x0^0)) /\ (undef195 = (0 + x1^0)) /\ (undef196 = (0 + x2^0)) /\ (undef201 = undef201) /\ (undef202 = undef202) /\ (undef203 = undef203), par{oldX0^0 -> undef190, oldX1^0 -> undef195, oldX2^0 -> undef196, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef201, oldX8^0 -> undef202, oldX9^0 -> undef203, x0^0 -> (0 + undef190), x1^0 -> (0 + undef195), x2^0 -> (0 + undef196), x3^0 -> (0 + undef196), x4^0 -> (0 + undef201), x5^0 -> (0 + undef202), x6^0 -> (0 + undef203)}>
<l7, l8, (undef211 = (0 + x0^0)) /\ (undef216 = (0 + x1^0)) /\ (undef217 = (0 + x2^0)) /\ (undef222 = undef222) /\ (undef223 = undef223) /\ (undef224 = undef224) /\ (undef212 = undef212) /\ (1 <= (0 + undef217)), par{oldX0^0 -> undef211, oldX10^0 -> undef212, oldX1^0 -> undef216, oldX2^0 -> undef217, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef222, oldX8^0 -> undef223, oldX9^0 -> undef224, x0^0 -> (0 + undef211), x1^0 -> (0 + undef216), x2^0 -> (0 + undef217), x3^0 -> (0 + undef222), x4^0 -> (0 + undef223), x5^0 -> (0 + undef224), x6^0 -> (0 + undef212)}>
<l7, l9, (undef232 = (0 + x0^0)) /\ (undef237 = (0 + x1^0)) /\ (undef238 = (0 + x2^0)) /\ (undef243 = undef243) /\ (undef244 = undef244) /\ (undef245 = undef245) /\ (undef233 = undef233) /\ ((0 + undef238) <= 0), par{oldX0^0 -> undef232, oldX10^0 -> undef233, oldX1^0 -> undef237, oldX2^0 -> undef238, oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef243, oldX8^0 -> undef244, oldX9^0 -> undef245, x0^0 -> (0 + undef232), x1^0 -> (0 + undef237), x2^0 -> (0 + undef238), x3^0 -> (0 + undef243), x4^0 -> (0 + undef244), x5^0 -> (0 + undef245), x6^0 -> (0 + undef233)}>
<l10, l11, (undef264 = undef264) /\ (undef265 = undef265) /\ (undef266 = undef266) /\ (undef254 = undef254) /\ (undef255 = undef255) /\ (undef256 = undef256) /\ (undef257 = undef257), par{oldX0^0 -> (0 + x0^0), oldX10^0 -> undef254, oldX11^0 -> undef255, oldX12^0 -> undef256, oldX13^0 -> undef257, oldX1^0 -> (0 + x1^0), oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef264, oldX8^0 -> undef265, oldX9^0 -> undef266, x0^0 -> (0 + undef264), x1^0 -> (0 + undef265), x2^0 -> (0 + undef266), x3^0 -> (0 + undef254), x4^0 -> (0 + undef255), x5^0 -> (0 + undef256), x6^0 -> (0 + undef257)}>
<l12, l10, (undef274 = (0 + x0^0)) /\ (undef279 = (0 + x1^0)) /\ (undef280 = (0 + x2^0)) /\ (undef281 = (0 + x3^0)) /\ (undef282 = (0 + x4^0)) /\ (undef283 = (0 + x5^0)) /\ (undef284 = (0 + x6^0)) /\ ((~(1) + undef284) <= 0), par{oldX0^0 -> undef274, oldX1^0 -> undef279, oldX2^0 -> undef280, oldX3^0 -> undef281, oldX4^0 -> undef282, oldX5^0 -> undef283, oldX6^0 -> undef284, x0^0 -> (0 + undef274), x1^0 -> (0 + undef279), x2^0 -> (0 + undef280), x3^0 -> (0 + undef281), x4^0 -> (0 + undef282), x5^0 -> (0 + undef283), x6^0 -> (0 + undef284)}>
<l12, l13, (undef295 = (0 + x0^0)) /\ (undef300 = (0 + x1^0)) /\ (undef301 = (0 + x2^0)) /\ (undef302 = (0 + x3^0)) /\ (undef303 = (0 + x4^0)) /\ (undef304 = (0 + x5^0)) /\ (undef305 = (0 + x6^0)) /\ (1 <= (~(1) + undef305)), par{oldX0^0 -> undef295, oldX1^0 -> undef300, oldX2^0 -> undef301, oldX3^0 -> undef302, oldX4^0 -> undef303, oldX5^0 -> undef304, oldX6^0 -> undef305, x0^0 -> (0 + undef295), x1^0 -> (0 + undef300), x2^0 -> (0 + undef301), x3^0 -> (0 + undef302), x4^0 -> (0 + undef303), x5^0 -> (0 + undef304), x6^0 -> (~(1) + undef305)}>
<l13, l12, true>
<l14, l10, (undef337 = (0 + x0^0)) /\ (undef342 = (0 + x1^0)) /\ (undef343 = (0 + x2^0)) /\ (undef344 = (0 + x3^0)) /\ (undef345 = (0 + x4^0)) /\ (undef346 = (0 + x5^0)) /\ (undef348 = undef348) /\ ((0 + undef346) <= 0), par{oldX0^0 -> undef337, oldX1^0 -> undef342, oldX2^0 -> undef343, oldX3^0 -> undef344, oldX4^0 -> undef345, oldX5^0 -> undef346, oldX6^0 -> (0 + x6^0), oldX7^0 -> undef348, x0^0 -> (0 + undef337), x1^0 -> (0 + undef342), x2^0 -> (0 + undef343), x3^0 -> (0 + undef344), x4^0 -> (0 + undef345), x5^0 -> (0 + undef346), x6^0 -> (0 + undef348)}>
<l14, l12, (undef358 = (0 + x0^0)) /\ (undef363 = (0 + x1^0)) /\ (undef364 = (0 + x2^0)) /\ (undef365 = (0 + x3^0)) /\ (undef366 = (0 + x4^0)) /\ (undef367 = (0 + x5^0)) /\ (1 <= (0 + undef367)), par{oldX0^0 -> undef358, oldX1^0 -> undef363, oldX2^0 -> undef364, oldX3^0 -> undef365, oldX4^0 -> undef366, oldX5^0 -> undef367, oldX6^0 -> (0 + x6^0), x0^0 -> (0 + undef358), x1^0 -> (0 + undef363), x2^0 -> (0 + undef364), x3^0 -> (0 + undef365), x4^0 -> (0 + undef366), x5^0 -> (0 + undef367), x6^0 -> (0 + undef367)}>
<l15, l16, (undef379 = (0 + x0^0)) /\ (undef384 = (0 + x1^0)) /\ (undef385 = (0 + x2^0)) /\ (undef386 = (0 + x3^0)) /\ (undef387 = (0 + x4^0)) /\ (undef388 = (0 + x5^0)) /\ (undef390 = undef390), par{oldX0^0 -> undef379, oldX1^0 -> undef384, oldX2^0 -> undef385, oldX3^0 -> undef386, oldX4^0 -> undef387, oldX5^0 -> undef388, oldX6^0 -> (0 + x6^0), oldX7^0 -> undef390, x0^0 -> (0 + undef379), x1^0 -> (0 + undef384), x2^0 -> (0 + undef385), x3^0 -> (0 + undef386), x4^0 -> (0 + undef387), x5^0 -> (~(4) + undef388), x6^0 -> (0 + undef390)}>
<l16, l14, (undef400 = (0 + x0^0)) /\ (undef405 = (0 + x1^0)) /\ (undef406 = (0 + x2^0)) /\ (undef407 = (0 + x3^0)) /\ (undef408 = (0 + x4^0)) /\ (undef409 = (0 + x5^0)) /\ (undef411 = undef411) /\ ((0 + undef409) <= 3), par{oldX0^0 -> undef400, oldX1^0 -> undef405, oldX2^0 -> undef406, oldX3^0 -> undef407, oldX4^0 -> undef408, oldX5^0 -> undef409, oldX6^0 -> (0 + x6^0), oldX7^0 -> undef411, x0^0 -> (0 + undef400), x1^0 -> (0 + undef405), x2^0 -> (0 + undef406), x3^0 -> (0 + undef407), x4^0 -> (0 + undef408), x5^0 -> (0 + undef409), x6^0 -> (0 + undef411)}>
<l16, l15, (undef421 = (0 + x0^0)) /\ (undef426 = (0 + x1^0)) /\ (undef427 = (0 + x2^0)) /\ (undef428 = (0 + x3^0)) /\ (undef429 = (0 + x4^0)) /\ (undef430 = (0 + x5^0)) /\ (undef432 = undef432) /\ (4 <= (0 + undef430)), par{oldX0^0 -> undef421, oldX1^0 -> undef426, oldX2^0 -> undef427, oldX3^0 -> undef428, oldX4^0 -> undef429, oldX5^0 -> undef430, oldX6^0 -> (0 + x6^0), oldX7^0 -> undef432, x0^0 -> (0 + undef421), x1^0 -> (0 + undef426), x2^0 -> (0 + undef427), x3^0 -> (0 + undef428), x4^0 -> (0 + undef429), x5^0 -> (0 + undef430), x6^0 -> (0 + undef432)}>
<l17, l18, (undef442 = (0 + x0^0)) /\ (undef447 = (0 + x1^0)) /\ (undef448 = (0 + x2^0)) /\ (undef449 = (0 + x3^0)) /\ (undef450 = (0 + x4^0)) /\ (undef453 = undef453) /\ (undef454 = undef454), par{oldX0^0 -> undef442, oldX1^0 -> undef447, oldX2^0 -> undef448, oldX3^0 -> undef449, oldX4^0 -> undef450, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef453, oldX8^0 -> undef454, x0^0 -> (0 + undef442), x1^0 -> (0 + undef447), x2^0 -> (0 + undef448), x3^0 -> (0 + undef449), x4^0 -> (~(32) + undef450), x5^0 -> (0 + undef453), x6^0 -> (0 + undef454)}>
<l18, l16, (undef463 = (0 + x0^0)) /\ (undef468 = (0 + x1^0)) /\ (undef469 = (0 + x2^0)) /\ (undef470 = (0 + x3^0)) /\ (undef471 = (0 + x4^0)) /\ (undef474 = undef474) /\ ((0 + undef471) <= 31), par{oldX0^0 -> undef463, oldX1^0 -> undef468, oldX2^0 -> undef469, oldX3^0 -> undef470, oldX4^0 -> undef471, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef474, x0^0 -> (0 + undef463), x1^0 -> (0 + undef468), x2^0 -> (0 + undef469), x3^0 -> (0 + undef470), x4^0 -> (0 + undef471), x5^0 -> (0 + undef471), x6^0 -> (0 + undef474)}>
<l18, l17, (undef484 = (0 + x0^0)) /\ (undef489 = (0 + x1^0)) /\ (undef490 = (0 + x2^0)) /\ (undef491 = (0 + x3^0)) /\ (undef492 = (0 + x4^0)) /\ (undef495 = undef495) /\ (undef496 = undef496) /\ (32 <= (0 + undef492)), par{oldX0^0 -> undef484, oldX1^0 -> undef489, oldX2^0 -> undef490, oldX3^0 -> undef491, oldX4^0 -> undef492, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef495, oldX8^0 -> undef496, x0^0 -> (0 + undef484), x1^0 -> (0 + undef489), x2^0 -> (0 + undef490), x3^0 -> (0 + undef491), x4^0 -> (0 + undef492), x5^0 -> (0 + undef495), x6^0 -> (0 + undef496)}>
<l19, l20, (undef505 = (0 + x0^0)) /\ (undef510 = (0 + x1^0)) /\ (undef512 = (0 + x3^0)) /\ (undef516 = undef516) /\ (undef517 = undef517) /\ (undef518 = undef518) /\ (undef506 = undef506), par{oldX0^0 -> undef505, oldX10^0 -> undef506, oldX1^0 -> undef510, oldX2^0 -> (0 + x2^0), oldX3^0 -> undef512, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef516, oldX8^0 -> undef517, oldX9^0 -> undef518, x0^0 -> (0 + undef505), x1^0 -> (0 + undef510), x2^0 -> (0 + undef516), x3^0 -> (~(1) + undef512), x4^0 -> (0 + undef517), x5^0 -> (0 + undef518), x6^0 -> (0 + undef506)}>
<l21, l7, (undef526 = (0 + x0^0)) /\ (undef531 = (0 + x1^0)) /\ (undef537 = undef537) /\ (undef538 = undef538) /\ (undef539 = undef539) /\ (undef527 = undef527), par{oldX0^0 -> undef526, oldX10^0 -> undef527, oldX1^0 -> undef531, oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef537, oldX8^0 -> undef538, oldX9^0 -> undef539, x0^0 -> (0 + undef526), x1^0 -> (0 + undef531), x2^0 -> (0 + undef531), x3^0 -> (0 + undef537), x4^0 -> (0 + undef538), x5^0 -> (0 + undef539), x6^0 -> (0 + undef527)}>
<l22, l23, (undef547 = (0 + x0^0)) /\ (undef552 = (0 + x1^0)) /\ (undef553 = (0 + x2^0)) /\ (undef554 = (0 + x3^0)) /\ (undef558 = undef558) /\ (undef559 = undef559) /\ (undef560 = undef560) /\ (undef548 = undef548) /\ ((0 + undef548) <= 0) /\ (0 <= (0 + undef548)), par{oldX0^0 -> undef547, oldX10^0 -> undef548, oldX1^0 -> undef552, oldX2^0 -> undef553, oldX3^0 -> undef554, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef558, oldX8^0 -> undef559, oldX9^0 -> undef560, x0^0 -> (0 + undef547), x1^0 -> (0 + undef552), x2^0 -> (0 + undef553), x3^0 -> (0 + undef554), x4^0 -> (0 + undef558), x5^0 -> (0 + undef559), x6^0 -> (0 + undef560)}>
<l22, l19, (undef568 = (0 + x0^0)) /\ (undef573 = (0 + x1^0)) /\ (undef574 = (0 + x2^0)) /\ (undef575 = (0 + x3^0)) /\ (undef579 = undef579) /\ (undef580 = undef580) /\ (undef581 = undef581) /\ (undef569 = undef569) /\ (1 <= (0 + undef569)), par{oldX0^0 -> undef568, oldX10^0 -> undef569, oldX1^0 -> undef573, oldX2^0 -> undef574, oldX3^0 -> undef575, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef579, oldX8^0 -> undef580, oldX9^0 -> undef581, x0^0 -> (0 + undef568), x1^0 -> (0 + undef573), x2^0 -> (0 + undef574), x3^0 -> (0 + undef575), x4^0 -> (0 + undef579), x5^0 -> (0 + undef580), x6^0 -> (0 + undef581)}>
<l22, l19, (undef589 = (0 + x0^0)) /\ (undef594 = (0 + x1^0)) /\ (undef595 = (0 + x2^0)) /\ (undef596 = (0 + x3^0)) /\ (undef600 = undef600) /\ (undef601 = undef601) /\ (undef602 = undef602) /\ (undef590 = undef590) /\ ((1 + undef590) <= 0), par{oldX0^0 -> undef589, oldX10^0 -> undef590, oldX1^0 -> undef594, oldX2^0 -> undef595, oldX3^0 -> undef596, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef600, oldX8^0 -> undef601, oldX9^0 -> undef602, x0^0 -> (0 + undef589), x1^0 -> (0 + undef594), x2^0 -> (0 + undef595), x3^0 -> (0 + undef596), x4^0 -> (0 + undef600), x5^0 -> (0 + undef601), x6^0 -> (0 + undef602)}>
<l23, l18, (undef610 = (0 + x0^0)) /\ (undef615 = (0 + x1^0)) /\ (undef616 = (0 + x2^0)) /\ (undef617 = (0 + x3^0)) /\ (undef621 = undef621) /\ (undef622 = undef622), par{oldX0^0 -> undef610, oldX1^0 -> undef615, oldX2^0 -> undef616, oldX3^0 -> undef617, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef621, oldX8^0 -> undef622, x0^0 -> (0 + undef610), x1^0 -> (0 + undef615), x2^0 -> (0 + undef616), x3^0 -> (0 + undef617), x4^0 -> (0 + undef617), x5^0 -> (0 + undef621), x6^0 -> (0 + undef622)}>
<l20, l22, (undef631 = (0 + x0^0)) /\ (undef636 = (0 + x1^0)) /\ (undef637 = (0 + x2^0)) /\ (undef638 = (0 + x3^0)) /\ (undef642 = undef642) /\ (undef643 = undef643) /\ (undef644 = undef644) /\ (1 <= (0 + undef638)), par{oldX0^0 -> undef631, oldX1^0 -> undef636, oldX2^0 -> undef637, oldX3^0 -> undef638, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef642, oldX8^0 -> undef643, oldX9^0 -> undef644, x0^0 -> (0 + undef631), x1^0 -> (0 + undef636), x2^0 -> (0 + undef637), x3^0 -> (0 + undef638), x4^0 -> (0 + undef642), x5^0 -> (0 + undef643), x6^0 -> (0 + undef644)}>
<l20, l23, (undef652 = (0 + x0^0)) /\ (undef657 = (0 + x1^0)) /\ (undef658 = (0 + x2^0)) /\ (undef659 = (0 + x3^0)) /\ (undef663 = undef663) /\ (undef664 = undef664) /\ (undef665 = undef665) /\ ((0 + undef659) <= 0), par{oldX0^0 -> undef652, oldX1^0 -> undef657, oldX2^0 -> undef658, oldX3^0 -> undef659, oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef663, oldX8^0 -> undef664, oldX9^0 -> undef665, x0^0 -> (0 + undef652), x1^0 -> (0 + undef657), x2^0 -> (0 + undef658), x3^0 -> (0 + undef659), x4^0 -> (0 + undef663), x5^0 -> (0 + undef664), x6^0 -> (0 + undef665)}>
<l24, l20, (undef673 = (0 + x0^0)) /\ (undef678 = (0 + x1^0)) /\ (undef684 = undef684) /\ (undef685 = undef685) /\ (undef686 = undef686) /\ (undef674 = undef674) /\ (undef675 = undef675) /\ (undef676 = undef676) /\ (undef677 = undef677), par{oldX0^0 -> undef673, oldX10^0 -> undef674, oldX11^0 -> undef675, oldX12^0 -> undef676, oldX13^0 -> undef677, oldX1^0 -> undef678, oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef684, oldX8^0 -> undef685, oldX9^0 -> undef686, x0^0 -> (0 + undef673), x1^0 -> (0 + undef678), x2^0 -> ((((~(1) + (~(1) * undef674)) + (~(1) * undef684)) + (~(1) * undef685)) + (~(1) * undef686)), x3^0 -> (0 + undef678), x4^0 -> (0 + undef675), x5^0 -> (0 + undef676), x6^0 -> (0 + undef677)}>
<l25, l26, (undef705 = undef705) /\ (undef706 = undef706) /\ (undef707 = undef707) /\ (undef695 = undef695) /\ (undef696 = undef696) /\ (undef697 = undef697) /\ (undef698 = undef698), par{oldX0^0 -> (0 + x0^0), oldX10^0 -> undef695, oldX11^0 -> undef696, oldX12^0 -> undef697, oldX13^0 -> undef698, oldX1^0 -> (0 + x1^0), oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef705, oldX8^0 -> undef706, oldX9^0 -> undef707, x0^0 -> (0 + undef705), x1^0 -> (0 + undef706), x2^0 -> (0 + undef707), x3^0 -> (0 + undef695), x4^0 -> (0 + undef696), x5^0 -> (0 + undef697), x6^0 -> (0 + undef698)}>
<l27, l25, (undef715 = (0 + x0^0)) /\ (undef720 = (0 + x1^0)) /\ (undef721 = (0 + x2^0)) /\ (undef722 = (0 + x3^0)) /\ (undef723 = (0 + x4^0)) /\ (undef724 = (0 + x5^0)) /\ (undef726 = undef726) /\ ((~(1) + undef724) <= 0), par{oldX0^0 -> undef715, oldX1^0 -> undef720, oldX2^0 -> undef721, oldX3^0 -> undef722, oldX4^0 -> undef723, oldX5^0 -> undef724, oldX6^0 -> (0 + x6^0), oldX7^0 -> undef726, x0^0 -> (0 + undef715), x1^0 -> (0 + undef720), x2^0 -> (0 + undef721), x3^0 -> (0 + undef722), x4^0 -> (0 + undef723), x5^0 -> (0 + undef724), x6^0 -> (0 + undef726)}>
<l27, l28, (undef736 = (0 + x0^0)) /\ (undef741 = (0 + x1^0)) /\ (undef742 = (0 + x2^0)) /\ (undef743 = (0 + x3^0)) /\ (undef744 = (0 + x4^0)) /\ (undef745 = (0 + x5^0)) /\ (undef747 = undef747) /\ (1 <= (~(1) + undef745)), par{oldX0^0 -> undef736, oldX1^0 -> undef741, oldX2^0 -> undef742, oldX3^0 -> undef743, oldX4^0 -> undef744, oldX5^0 -> undef745, oldX6^0 -> (0 + x6^0), oldX7^0 -> undef747, x0^0 -> (0 + undef736), x1^0 -> (0 + undef741), x2^0 -> (0 + undef742), x3^0 -> (0 + undef743), x4^0 -> (0 + undef744), x5^0 -> (~(1) + undef745), x6^0 -> (0 + undef747)}>
<l28, l27, true>
<l2, l25, (undef778 = (0 + x0^0)) /\ (undef783 = (0 + x1^0)) /\ (undef784 = (0 + x2^0)) /\ (undef785 = (0 + x3^0)) /\ (undef786 = (0 + x4^0)) /\ (undef789 = undef789) /\ (undef790 = undef790) /\ ((0 + undef786) <= 0), par{oldX0^0 -> undef778, oldX1^0 -> undef783, oldX2^0 -> undef784, oldX3^0 -> undef785, oldX4^0 -> undef786, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef789, oldX8^0 -> undef790, x0^0 -> (0 + undef778), x1^0 -> (0 + undef783), x2^0 -> (0 + undef784), x3^0 -> (0 + undef785), x4^0 -> (0 + undef786), x5^0 -> (0 + undef789), x6^0 -> (0 + undef790)}>
<l2, l27, (undef799 = (0 + x0^0)) /\ (undef804 = (0 + x1^0)) /\ (undef805 = (0 + x2^0)) /\ (undef806 = (0 + x3^0)) /\ (undef807 = (0 + x4^0)) /\ (undef810 = undef810) /\ (1 <= (0 + undef807)), par{oldX0^0 -> undef799, oldX1^0 -> undef804, oldX2^0 -> undef805, oldX3^0 -> undef806, oldX4^0 -> undef807, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef810, x0^0 -> (0 + undef799), x1^0 -> (0 + undef804), x2^0 -> (0 + undef805), x3^0 -> (0 + undef806), x4^0 -> (0 + undef807), x5^0 -> (0 + undef807), x6^0 -> (0 + undef810)}>
<l3, l1, (undef820 = (0 + x0^0)) /\ (undef825 = (0 + x1^0)) /\ (undef826 = (0 + x2^0)) /\ (undef827 = (0 + x3^0)) /\ (undef828 = (0 + x4^0)) /\ (undef831 = undef831) /\ (undef832 = undef832), par{oldX0^0 -> undef820, oldX1^0 -> undef825, oldX2^0 -> undef826, oldX3^0 -> undef827, oldX4^0 -> undef828, oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef831, oldX8^0 -> undef832, x0^0 -> (0 + undef820), x1^0 -> (0 + undef825), x2^0 -> (0 + undef826), x3^0 -> (0 + undef827), x4^0 -> (~(4) + undef828), x5^0 -> (0 + undef831), x6^0 -> (0 + undef832)}>
<l29, l30, (undef852 = undef852) /\ (undef853 = undef853) /\ (undef854 = undef854) /\ (undef842 = undef842) /\ (undef843 = undef843) /\ (undef844 = undef844) /\ (undef845 = undef845), par{oldX0^0 -> (0 + x0^0), oldX10^0 -> undef842, oldX11^0 -> undef843, oldX12^0 -> undef844, oldX13^0 -> undef845, oldX1^0 -> (0 + x1^0), oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef852, oldX8^0 -> undef853, oldX9^0 -> undef854, x0^0 -> (0 + undef852), x1^0 -> (0 + undef853), x2^0 -> (0 + undef854), x3^0 -> (0 + undef842), x4^0 -> (0 + undef843), x5^0 -> (0 + undef844), x6^0 -> (0 + undef845)}>
<l29, l24, (undef862 = (0 + x0^0)) /\ (undef867 = (0 + x1^0)) /\ (undef873 = undef873) /\ (undef874 = undef874) /\ (undef875 = undef875) /\ (undef863 = undef863) /\ (undef864 = undef864), par{oldX0^0 -> undef862, oldX10^0 -> undef863, oldX11^0 -> undef864, oldX1^0 -> undef867, oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef873, oldX8^0 -> undef874, oldX9^0 -> undef875, x0^0 -> (0 + undef862), x1^0 -> (0 + undef867), x2^0 -> (0 + undef873), x3^0 -> (0 + undef874), x4^0 -> (0 + undef875), x5^0 -> (0 + undef863), x6^0 -> (0 + undef864)}>
<l29, l21, (undef883 = (0 + x0^0)) /\ (undef888 = (0 + x1^0)) /\ (undef894 = undef894) /\ (undef895 = undef895) /\ (undef896 = undef896) /\ (undef884 = undef884) /\ (undef885 = undef885), par{oldX0^0 -> undef883, oldX10^0 -> undef884, oldX11^0 -> undef885, oldX1^0 -> undef888, oldX2^0 -> (0 + x2^0), oldX3^0 -> (0 + x3^0), oldX4^0 -> (0 + x4^0), oldX5^0 -> (0 + x5^0), oldX6^0 -> (0 + x6^0), oldX7^0 -> undef894, oldX8^0 -> undef895, oldX9^0 -> undef896, x0^0 -> (0 + undef883), x1^0 -> (0 + undef888), x2^0 -> (0 + undef894), x3^0 -> (0 + undef895), x4^0 -> (0 + undef896), x5^0 -> (0 + undef884), x6^0 -> (0 + undef885)}>
<l29, l1, true>
<l29, l4, true>
<l29, l5, true>
<l29, l6, true>
<l29, l8, true>
<l29, l9, true>
<l29, l30, true>
<l29, l7, true>
<l29, l11, true>
<l29, l10, true>
<l29, l12, true>
<l29, l14, true>
<l29, l15, true>
<l29, l16, true>
<l29, l17, true>
<l29, l18, true>
<l29, l19, true>
<l29, l21, true>
<l29, l22, true>
<l29, l23, true>
<l29, l20, true>
<l29, l24, true>
<l29, l26, true>
<l29, l25, true>
<l29, l27, true>
<l29, l2, true>
<l29, l3, true>
<l31, l29, true>

Fresh variables:
undef1, undef6, undef7, undef8, undef9, undef12, undef13, undef22, undef27, undef28, undef29, undef30, undef33, undef34, undef43, undef48, undef49, undef50, undef54, undef55, undef56, undef64, undef69, undef70, undef71, undef75, undef76, undef85, undef90, undef91, undef92, undef96, undef97, undef98, undef106, undef107, undef111, undef112, undef117, undef118, undef119, undef127, undef128, undef129, undef132, undef133, undef138, undef139, undef140, undef148, undef149, undef150, undef153, undef154, undef159, undef160, undef161, undef169, undef170, undef171, undef174, undef175, undef180, undef181, undef182, undef190, undef195, undef196, undef201, undef202, undef203, undef211, undef212, undef216, undef217, undef222, undef223, undef224, undef232, undef233, undef237, undef238, undef243, undef244, undef245, undef254, undef255, undef256, undef257, undef264, undef265, undef266, undef274, undef279, undef280, undef281, undef282, undef283, undef284, undef295, undef300, undef301, undef302, undef303, undef304, undef305, undef337, undef342, undef343, undef344, undef345, undef346, undef348, undef358, undef363, undef364, undef365, undef366, undef367, undef379, undef384, undef385, undef386, undef387, undef388, undef390, undef400, undef405, undef406, undef407, undef408, undef409, undef411, undef421, undef426, undef427, undef428, undef429, undef430, undef432, undef442, undef447, undef448, undef449, undef450, undef453, undef454, undef463, undef468, undef469, undef470, undef471, undef474, undef484, undef489, undef490, undef491, undef492, undef495, undef496, undef505, undef506, undef510, undef512, undef516, undef517, undef518, undef526, undef527, undef531, undef537, undef538, undef539, undef547, undef548, undef552, undef553, undef554, undef558, undef559, undef560, undef568, undef569, undef573, undef574, undef575, undef579, undef580, undef581, undef589, undef590, undef594, undef595, undef596, undef600, undef601, undef602, undef610, undef615, undef616, undef617, undef621, undef622, undef631, undef636, undef637, undef638, undef642, undef643, undef644, undef652, undef657, undef658, undef659, undef663, undef664, undef665, undef673, undef674, undef675, undef676, undef677, undef678, undef684, undef685, undef686, undef695, undef696, undef697, undef698, undef705, undef706, undef707, undef715, undef720, undef721, undef722, undef723, undef724, undef726, undef736, undef741, undef742, undef743, undef744, undef745, undef747, undef778, undef783, undef784, undef785, undef786, undef789, undef790, undef799, undef804, undef805, undef806, undef807, undef810, undef820, undef825, undef826, undef827, undef828, undef831, undef832, undef842, undef843, undef844, undef845, undef852, undef853, undef854, undef862, undef863, undef864, undef867, undef873, undef874, undef875, undef883, undef884, undef885, undef888, undef894, undef895, undef896, 

Undef variables:
undef1, undef6, undef7, undef8, undef9, undef12, undef13, undef22, undef27, undef28, undef29, undef30, undef33, undef34, undef43, undef48, undef49, undef50, undef54, undef55, undef56, undef64, undef69, undef70, undef71, undef75, undef76, undef85, undef90, undef91, undef92, undef96, undef97, undef98, undef106, undef107, undef111, undef112, undef117, undef118, undef119, undef127, undef128, undef129, undef132, undef133, undef138, undef139, undef140, undef148, undef149, undef150, undef153, undef154, undef159, undef160, undef161, undef169, undef170, undef171, undef174, undef175, undef180, undef181, undef182, undef190, undef195, undef196, undef201, undef202, undef203, undef211, undef212, undef216, undef217, undef222, undef223, undef224, undef232, undef233, undef237, undef238, undef243, undef244, undef245, undef254, undef255, undef256, undef257, undef264, undef265, undef266, undef274, undef279, undef280, undef281, undef282, undef283, undef284, undef295, undef300, undef301, undef302, undef303, undef304, undef305, undef337, undef342, undef343, undef344, undef345, undef346, undef348, undef358, undef363, undef364, undef365, undef366, undef367, undef379, undef384, undef385, undef386, undef387, undef388, undef390, undef400, undef405, undef406, undef407, undef408, undef409, undef411, undef421, undef426, undef427, undef428, undef429, undef430, undef432, undef442, undef447, undef448, undef449, undef450, undef453, undef454, undef463, undef468, undef469, undef470, undef471, undef474, undef484, undef489, undef490, undef491, undef492, undef495, undef496, undef505, undef506, undef510, undef512, undef516, undef517, undef518, undef526, undef527, undef531, undef537, undef538, undef539, undef547, undef548, undef552, undef553, undef554, undef558, undef559, undef560, undef568, undef569, undef573, undef574, undef575, undef579, undef580, undef581, undef589, undef590, undef594, undef595, undef596, undef600, undef601, undef602, undef610, undef615, undef616, undef617, undef621, undef622, undef631, undef636, undef637, undef638, undef642, undef643, undef644, undef652, undef657, undef658, undef659, undef663, undef664, undef665, undef673, undef674, undef675, undef676, undef677, undef678, undef684, undef685, undef686, undef695, undef696, undef697, undef698, undef705, undef706, undef707, undef715, undef720, undef721, undef722, undef723, undef724, undef726, undef736, undef741, undef742, undef743, undef744, undef745, undef747, undef778, undef783, undef784, undef785, undef786, undef789, undef790, undef799, undef804, undef805, undef806, undef807, undef810, undef820, undef825, undef826, undef827, undef828, undef831, undef832, undef842, undef843, undef844, undef845, undef852, undef853, undef854, undef862, undef863, undef864, undef867, undef873, undef874, undef875, undef883, undef884, undef885, undef888, undef894, undef895, undef896, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l30, (undef852 = undef852) /\ (undef853 = undef853) /\ (undef854 = undef854) /\ (undef842 = undef842) /\ (undef843 = undef843) /\ (undef844 = undef844) /\ (undef845 = undef845), par{x0^0 -> (0 + undef852), x1^0 -> (0 + undef853), x2^0 -> (0 + undef854), x3^0 -> (0 + undef842), x4^0 -> (0 + undef843), x5^0 -> (0 + undef844), x6^0 -> (0 + undef845)}>
<l0, l20, (undef862 = (0 + x0^0)) /\ (undef867 = (0 + x1^0)) /\ (undef873 = undef873) /\ (undef874 = undef874) /\ (undef875 = undef875) /\ (undef863 = undef863) /\ (undef864 = undef864) /\ (undef673 = (0 + (0 + undef862))) /\ (undef678 = (0 + (0 + undef867))) /\ (undef684 = undef684) /\ (undef685 = undef685) /\ (undef686 = undef686) /\ (undef674 = undef674) /\ (undef675 = undef675) /\ (undef676 = undef676) /\ (undef677 = undef677), par{x0^0 -> (0 + undef673), x1^0 -> (0 + undef678), x2^0 -> ((((~(1) + (~(1) * undef674)) + (~(1) * undef684)) + (~(1) * undef685)) + (~(1) * undef686)), x3^0 -> (0 + undef678), x4^0 -> (0 + undef675), x5^0 -> (0 + undef676), x6^0 -> (0 + undef677)}>
<l0, l7, (undef883 = (0 + x0^0)) /\ (undef888 = (0 + x1^0)) /\ (undef894 = undef894) /\ (undef895 = undef895) /\ (undef896 = undef896) /\ (undef884 = undef884) /\ (undef885 = undef885) /\ (undef526 = (0 + (0 + undef883))) /\ (undef531 = (0 + (0 + undef888))) /\ (undef537 = undef537) /\ (undef538 = undef538) /\ (undef539 = undef539) /\ (undef527 = undef527), par{x0^0 -> (0 + undef526), x1^0 -> (0 + undef531), x2^0 -> (0 + undef531), x3^0 -> (0 + undef537), x4^0 -> (0 + undef538), x5^0 -> (0 + undef539), x6^0 -> (0 + undef527)}>
<l0, l1, true>
<l0, l4, true>
<l0, l5, true>
<l0, l6, true>
<l0, l8, true>
<l0, l5, (undef190 = (0 + x0^0)) /\ (undef195 = (0 + x1^0)) /\ (undef196 = (0 + x2^0)) /\ (undef201 = undef201) /\ (undef202 = undef202) /\ (undef203 = undef203), par{x0^0 -> (0 + undef190), x1^0 -> (0 + undef195), x2^0 -> (0 + undef196), x3^0 -> (0 + undef196), x4^0 -> (0 + undef201), x5^0 -> (0 + undef202), x6^0 -> (0 + undef203)}>
<l0, l30, true>
<l0, l7, true>
<l0, l11, true>
<l0, l11, (undef264 = undef264) /\ (undef265 = undef265) /\ (undef266 = undef266) /\ (undef254 = undef254) /\ (undef255 = undef255) /\ (undef256 = undef256) /\ (undef257 = undef257), par{x0^0 -> (0 + undef264), x1^0 -> (0 + undef265), x2^0 -> (0 + undef266), x3^0 -> (0 + undef254), x4^0 -> (0 + undef255), x5^0 -> (0 + undef256), x6^0 -> (0 + undef257)}>
<l0, l12, true>
<l0, l14, true>
<l0, l15, true>
<l0, l16, true>
<l0, l17, true>
<l0, l18, true>
<l0, l19, true>
<l0, l7, (undef526 = (0 + x0^0)) /\ (undef531 = (0 + x1^0)) /\ (undef537 = undef537) /\ (undef538 = undef538) /\ (undef539 = undef539) /\ (undef527 = undef527), par{x0^0 -> (0 + undef526), x1^0 -> (0 + undef531), x2^0 -> (0 + undef531), x3^0 -> (0 + undef537), x4^0 -> (0 + undef538), x5^0 -> (0 + undef539), x6^0 -> (0 + undef527)}>
<l0, l22, true>
<l0, l18, (undef610 = (0 + x0^0)) /\ (undef615 = (0 + x1^0)) /\ (undef616 = (0 + x2^0)) /\ (undef617 = (0 + x3^0)) /\ (undef621 = undef621) /\ (undef622 = undef622), par{x0^0 -> (0 + undef610), x1^0 -> (0 + undef615), x2^0 -> (0 + undef616), x3^0 -> (0 + undef617), x4^0 -> (0 + undef617), x5^0 -> (0 + undef621), x6^0 -> (0 + undef622)}>
<l0, l20, true>
<l0, l20, (undef673 = (0 + x0^0)) /\ (undef678 = (0 + x1^0)) /\ (undef684 = undef684) /\ (undef685 = undef685) /\ (undef686 = undef686) /\ (undef674 = undef674) /\ (undef675 = undef675) /\ (undef676 = undef676) /\ (undef677 = undef677), par{x0^0 -> (0 + undef673), x1^0 -> (0 + undef678), x2^0 -> ((((~(1) + (~(1) * undef674)) + (~(1) * undef684)) + (~(1) * undef685)) + (~(1) * undef686)), x3^0 -> (0 + undef678), x4^0 -> (0 + undef675), x5^0 -> (0 + undef676), x6^0 -> (0 + undef677)}>
<l0, l26, true>
<l0, l26, (undef705 = undef705) /\ (undef706 = undef706) /\ (undef707 = undef707) /\ (undef695 = undef695) /\ (undef696 = undef696) /\ (undef697 = undef697) /\ (undef698 = undef698), par{x0^0 -> (0 + undef705), x1^0 -> (0 + undef706), x2^0 -> (0 + undef707), x3^0 -> (0 + undef695), x4^0 -> (0 + undef696), x5^0 -> (0 + undef697), x6^0 -> (0 + undef698)}>
<l0, l27, true>
<l0, l2, true>
<l0, l1, (undef820 = (0 + x0^0)) /\ (undef825 = (0 + x1^0)) /\ (undef826 = (0 + x2^0)) /\ (undef827 = (0 + x3^0)) /\ (undef828 = (0 + x4^0)) /\ (undef831 = undef831) /\ (undef832 = undef832), par{x0^0 -> (0 + undef820), x1^0 -> (0 + undef825), x2^0 -> (0 + undef826), x3^0 -> (0 + undef827), x4^0 -> (~(4) + undef828), x5^0 -> (0 + undef831), x6^0 -> (0 + undef832)}>
<l1, l2, (undef1 = (0 + x0^0)) /\ (undef6 = (0 + x1^0)) /\ (undef7 = (0 + x2^0)) /\ (undef8 = (0 + x3^0)) /\ (undef9 = (0 + x4^0)) /\ (undef12 = undef12) /\ (undef13 = undef13) /\ ((0 + undef9) <= 3), par{x0^0 -> (0 + undef1), x1^0 -> (0 + undef6), x2^0 -> (0 + undef7), x3^0 -> (0 + undef8), x4^0 -> (0 + undef9), x5^0 -> (0 + undef12), x6^0 -> (0 + undef13)}>
<l1, l1, (undef22 = (0 + x0^0)) /\ (undef27 = (0 + x1^0)) /\ (undef28 = (0 + x2^0)) /\ (undef29 = (0 + x3^0)) /\ (undef30 = (0 + x4^0)) /\ (undef33 = undef33) /\ (undef34 = undef34) /\ (4 <= (0 + undef30)) /\ (undef820 = (0 + (0 + undef22))) /\ (undef825 = (0 + (0 + undef27))) /\ (undef826 = (0 + (0 + undef28))) /\ (undef827 = (0 + (0 + undef29))) /\ (undef828 = (0 + (0 + undef30))) /\ (undef831 = undef831) /\ (undef832 = undef832), par{x0^0 -> (0 + undef820), x1^0 -> (0 + undef825), x2^0 -> (0 + undef826), x3^0 -> (0 + undef827), x4^0 -> (~(4) + undef828), x5^0 -> (0 + undef831), x6^0 -> (0 + undef832)}>
<l2, l26, (undef778 = (0 + x0^0)) /\ (undef783 = (0 + x1^0)) /\ (undef784 = (0 + x2^0)) /\ (undef785 = (0 + x3^0)) /\ (undef786 = (0 + x4^0)) /\ (undef789 = undef789) /\ (undef790 = undef790) /\ ((0 + undef786) <= 0) /\ (undef705 = undef705) /\ (undef706 = undef706) /\ (undef707 = undef707) /\ (undef695 = undef695) /\ (undef696 = undef696) /\ (undef697 = undef697) /\ (undef698 = undef698), par{x0^0 -> (0 + undef705), x1^0 -> (0 + undef706), x2^0 -> (0 + undef707), x3^0 -> (0 + undef695), x4^0 -> (0 + undef696), x5^0 -> (0 + undef697), x6^0 -> (0 + undef698)}>
<l2, l27, (undef799 = (0 + x0^0)) /\ (undef804 = (0 + x1^0)) /\ (undef805 = (0 + x2^0)) /\ (undef806 = (0 + x3^0)) /\ (undef807 = (0 + x4^0)) /\ (undef810 = undef810) /\ (1 <= (0 + undef807)), par{x0^0 -> (0 + undef799), x1^0 -> (0 + undef804), x2^0 -> (0 + undef805), x3^0 -> (0 + undef806), x4^0 -> (0 + undef807), x5^0 -> (0 + undef807), x6^0 -> (0 + undef810)}>
<l4, l5, (undef43 = (0 + x0^0)) /\ (undef48 = (0 + x1^0)) /\ (undef49 = (0 + x2^0)) /\ (undef50 = (0 + x3^0)) /\ (undef54 = undef54) /\ (undef55 = undef55) /\ (undef56 = undef56), par{x0^0 -> (0 + undef43), x1^0 -> (0 + undef48), x2^0 -> (0 + undef49), x3^0 -> (~(32) + undef50), x4^0 -> (0 + undef54), x5^0 -> (0 + undef55), x6^0 -> (0 + undef56)}>
<l5, l1, (undef64 = (0 + x0^0)) /\ (undef69 = (0 + x1^0)) /\ (undef70 = (0 + x2^0)) /\ (undef71 = (0 + x3^0)) /\ (undef75 = undef75) /\ (undef76 = undef76) /\ ((0 + undef71) <= 31), par{x0^0 -> (0 + undef64), x1^0 -> (0 + undef69), x2^0 -> (0 + undef70), x3^0 -> (0 + undef71), x4^0 -> (0 + undef71), x5^0 -> (0 + undef75), x6^0 -> (0 + undef76)}>
<l5, l4, (undef85 = (0 + x0^0)) /\ (undef90 = (0 + x1^0)) /\ (undef91 = (0 + x2^0)) /\ (undef92 = (0 + x3^0)) /\ (undef96 = undef96) /\ (undef97 = undef97) /\ (undef98 = undef98) /\ (32 <= (0 + undef92)), par{x0^0 -> (0 + undef85), x1^0 -> (0 + undef90), x2^0 -> (0 + undef91), x3^0 -> (0 + undef92), x4^0 -> (0 + undef96), x5^0 -> (0 + undef97), x6^0 -> (0 + undef98)}>
<l6, l7, (undef106 = (0 + x0^0)) /\ (undef111 = (0 + x1^0)) /\ (undef112 = (0 + x2^0)) /\ (undef117 = undef117) /\ (undef118 = undef118) /\ (undef119 = undef119) /\ (undef107 = undef107), par{x0^0 -> (0 + undef106), x1^0 -> (0 + undef111), x2^0 -> (~(1) + undef112), x3^0 -> (0 + undef117), x4^0 -> (0 + undef118), x5^0 -> (0 + undef119), x6^0 -> (0 + undef107)}>
<l7, l8, (undef211 = (0 + x0^0)) /\ (undef216 = (0 + x1^0)) /\ (undef217 = (0 + x2^0)) /\ (undef222 = undef222) /\ (undef223 = undef223) /\ (undef224 = undef224) /\ (undef212 = undef212) /\ (1 <= (0 + undef217)), par{x0^0 -> (0 + undef211), x1^0 -> (0 + undef216), x2^0 -> (0 + undef217), x3^0 -> (0 + undef222), x4^0 -> (0 + undef223), x5^0 -> (0 + undef224), x6^0 -> (0 + undef212)}>
<l7, l5, (undef232 = (0 + x0^0)) /\ (undef237 = (0 + x1^0)) /\ (undef238 = (0 + x2^0)) /\ (undef243 = undef243) /\ (undef244 = undef244) /\ (undef245 = undef245) /\ (undef233 = undef233) /\ ((0 + undef238) <= 0) /\ (undef190 = (0 + (0 + undef232))) /\ (undef195 = (0 + (0 + undef237))) /\ (undef196 = (0 + (0 + undef238))) /\ (undef201 = undef201) /\ (undef202 = undef202) /\ (undef203 = undef203), par{x0^0 -> (0 + undef190), x1^0 -> (0 + undef195), x2^0 -> (0 + undef196), x3^0 -> (0 + undef196), x4^0 -> (0 + undef201), x5^0 -> (0 + undef202), x6^0 -> (0 + undef203)}>
<l8, l5, (undef127 = (0 + x0^0)) /\ (undef132 = (0 + x1^0)) /\ (undef133 = (0 + x2^0)) /\ (undef138 = undef138) /\ (undef139 = undef139) /\ (undef140 = undef140) /\ (undef128 = undef128) /\ (undef129 = undef129) /\ ((0 + undef129) <= 0) /\ (0 <= (0 + undef129)) /\ (undef190 = (0 + (0 + undef127))) /\ (undef195 = (0 + (0 + undef132))) /\ (undef196 = (0 + (0 + undef133))) /\ (undef201 = undef201) /\ (undef202 = undef202) /\ (undef203 = undef203), par{x0^0 -> (0 + undef190), x1^0 -> (0 + undef195), x2^0 -> (0 + undef196), x3^0 -> (0 + undef196), x4^0 -> (0 + undef201), x5^0 -> (0 + undef202), x6^0 -> (0 + undef203)}>
<l8, l6, (undef148 = (0 + x0^0)) /\ (undef153 = (0 + x1^0)) /\ (undef154 = (0 + x2^0)) /\ (undef159 = undef159) /\ (undef160 = undef160) /\ (undef161 = undef161) /\ (undef149 = undef149) /\ (undef150 = undef150) /\ (1 <= (0 + undef150)), par{x0^0 -> (0 + undef148), x1^0 -> (0 + undef153), x2^0 -> (0 + undef154), x3^0 -> (0 + undef159), x4^0 -> (0 + undef160), x5^0 -> (0 + undef161), x6^0 -> (0 + undef149)}>
<l8, l6, (undef169 = (0 + x0^0)) /\ (undef174 = (0 + x1^0)) /\ (undef175 = (0 + x2^0)) /\ (undef180 = undef180) /\ (undef181 = undef181) /\ (undef182 = undef182) /\ (undef170 = undef170) /\ (undef171 = undef171) /\ ((1 + undef171) <= 0), par{x0^0 -> (0 + undef169), x1^0 -> (0 + undef174), x2^0 -> (0 + undef175), x3^0 -> (0 + undef180), x4^0 -> (0 + undef181), x5^0 -> (0 + undef182), x6^0 -> (0 + undef170)}>
<l12, l11, (undef274 = (0 + x0^0)) /\ (undef279 = (0 + x1^0)) /\ (undef280 = (0 + x2^0)) /\ (undef281 = (0 + x3^0)) /\ (undef282 = (0 + x4^0)) /\ (undef283 = (0 + x5^0)) /\ (undef284 = (0 + x6^0)) /\ ((~(1) + undef284) <= 0) /\ (undef264 = undef264) /\ (undef265 = undef265) /\ (undef266 = undef266) /\ (undef254 = undef254) /\ (undef255 = undef255) /\ (undef256 = undef256) /\ (undef257 = undef257), par{x0^0 -> (0 + undef264), x1^0 -> (0 + undef265), x2^0 -> (0 + undef266), x3^0 -> (0 + undef254), x4^0 -> (0 + undef255), x5^0 -> (0 + undef256), x6^0 -> (0 + undef257)}>
<l12, l12, (undef295 = (0 + x0^0)) /\ (undef300 = (0 + x1^0)) /\ (undef301 = (0 + x2^0)) /\ (undef302 = (0 + x3^0)) /\ (undef303 = (0 + x4^0)) /\ (undef304 = (0 + x5^0)) /\ (undef305 = (0 + x6^0)) /\ (1 <= (~(1) + undef305)), par{x0^0 -> (0 + undef295), x1^0 -> (0 + undef300), x2^0 -> (0 + undef301), x3^0 -> (0 + undef302), x4^0 -> (0 + undef303), x5^0 -> (0 + undef304), x6^0 -> (~(1) + undef305)}>
<l14, l11, (undef337 = (0 + x0^0)) /\ (undef342 = (0 + x1^0)) /\ (undef343 = (0 + x2^0)) /\ (undef344 = (0 + x3^0)) /\ (undef345 = (0 + x4^0)) /\ (undef346 = (0 + x5^0)) /\ (undef348 = undef348) /\ ((0 + undef346) <= 0) /\ (undef264 = undef264) /\ (undef265 = undef265) /\ (undef266 = undef266) /\ (undef254 = undef254) /\ (undef255 = undef255) /\ (undef256 = undef256) /\ (undef257 = undef257), par{x0^0 -> (0 + undef264), x1^0 -> (0 + undef265), x2^0 -> (0 + undef266), x3^0 -> (0 + undef254), x4^0 -> (0 + undef255), x5^0 -> (0 + undef256), x6^0 -> (0 + undef257)}>
<l14, l12, (undef358 = (0 + x0^0)) /\ (undef363 = (0 + x1^0)) /\ (undef364 = (0 + x2^0)) /\ (undef365 = (0 + x3^0)) /\ (undef366 = (0 + x4^0)) /\ (undef367 = (0 + x5^0)) /\ (1 <= (0 + undef367)), par{x0^0 -> (0 + undef358), x1^0 -> (0 + undef363), x2^0 -> (0 + undef364), x3^0 -> (0 + undef365), x4^0 -> (0 + undef366), x5^0 -> (0 + undef367), x6^0 -> (0 + undef367)}>
<l15, l16, (undef379 = (0 + x0^0)) /\ (undef384 = (0 + x1^0)) /\ (undef385 = (0 + x2^0)) /\ (undef386 = (0 + x3^0)) /\ (undef387 = (0 + x4^0)) /\ (undef388 = (0 + x5^0)) /\ (undef390 = undef390), par{x0^0 -> (0 + undef379), x1^0 -> (0 + undef384), x2^0 -> (0 + undef385), x3^0 -> (0 + undef386), x4^0 -> (0 + undef387), x5^0 -> (~(4) + undef388), x6^0 -> (0 + undef390)}>
<l16, l14, (undef400 = (0 + x0^0)) /\ (undef405 = (0 + x1^0)) /\ (undef406 = (0 + x2^0)) /\ (undef407 = (0 + x3^0)) /\ (undef408 = (0 + x4^0)) /\ (undef409 = (0 + x5^0)) /\ (undef411 = undef411) /\ ((0 + undef409) <= 3), par{x0^0 -> (0 + undef400), x1^0 -> (0 + undef405), x2^0 -> (0 + undef406), x3^0 -> (0 + undef407), x4^0 -> (0 + undef408), x5^0 -> (0 + undef409), x6^0 -> (0 + undef411)}>
<l16, l15, (undef421 = (0 + x0^0)) /\ (undef426 = (0 + x1^0)) /\ (undef427 = (0 + x2^0)) /\ (undef428 = (0 + x3^0)) /\ (undef429 = (0 + x4^0)) /\ (undef430 = (0 + x5^0)) /\ (undef432 = undef432) /\ (4 <= (0 + undef430)), par{x0^0 -> (0 + undef421), x1^0 -> (0 + undef426), x2^0 -> (0 + undef427), x3^0 -> (0 + undef428), x4^0 -> (0 + undef429), x5^0 -> (0 + undef430), x6^0 -> (0 + undef432)}>
<l17, l18, (undef442 = (0 + x0^0)) /\ (undef447 = (0 + x1^0)) /\ (undef448 = (0 + x2^0)) /\ (undef449 = (0 + x3^0)) /\ (undef450 = (0 + x4^0)) /\ (undef453 = undef453) /\ (undef454 = undef454), par{x0^0 -> (0 + undef442), x1^0 -> (0 + undef447), x2^0 -> (0 + undef448), x3^0 -> (0 + undef449), x4^0 -> (~(32) + undef450), x5^0 -> (0 + undef453), x6^0 -> (0 + undef454)}>
<l18, l16, (undef463 = (0 + x0^0)) /\ (undef468 = (0 + x1^0)) /\ (undef469 = (0 + x2^0)) /\ (undef470 = (0 + x3^0)) /\ (undef471 = (0 + x4^0)) /\ (undef474 = undef474) /\ ((0 + undef471) <= 31), par{x0^0 -> (0 + undef463), x1^0 -> (0 + undef468), x2^0 -> (0 + undef469), x3^0 -> (0 + undef470), x4^0 -> (0 + undef471), x5^0 -> (0 + undef471), x6^0 -> (0 + undef474)}>
<l18, l17, (undef484 = (0 + x0^0)) /\ (undef489 = (0 + x1^0)) /\ (undef490 = (0 + x2^0)) /\ (undef491 = (0 + x3^0)) /\ (undef492 = (0 + x4^0)) /\ (undef495 = undef495) /\ (undef496 = undef496) /\ (32 <= (0 + undef492)), par{x0^0 -> (0 + undef484), x1^0 -> (0 + undef489), x2^0 -> (0 + undef490), x3^0 -> (0 + undef491), x4^0 -> (0 + undef492), x5^0 -> (0 + undef495), x6^0 -> (0 + undef496)}>
<l19, l20, (undef505 = (0 + x0^0)) /\ (undef510 = (0 + x1^0)) /\ (undef512 = (0 + x3^0)) /\ (undef516 = undef516) /\ (undef517 = undef517) /\ (undef518 = undef518) /\ (undef506 = undef506), par{x0^0 -> (0 + undef505), x1^0 -> (0 + undef510), x2^0 -> (0 + undef516), x3^0 -> (~(1) + undef512), x4^0 -> (0 + undef517), x5^0 -> (0 + undef518), x6^0 -> (0 + undef506)}>
<l20, l22, (undef631 = (0 + x0^0)) /\ (undef636 = (0 + x1^0)) /\ (undef637 = (0 + x2^0)) /\ (undef638 = (0 + x3^0)) /\ (undef642 = undef642) /\ (undef643 = undef643) /\ (undef644 = undef644) /\ (1 <= (0 + undef638)), par{x0^0 -> (0 + undef631), x1^0 -> (0 + undef636), x2^0 -> (0 + undef637), x3^0 -> (0 + undef638), x4^0 -> (0 + undef642), x5^0 -> (0 + undef643), x6^0 -> (0 + undef644)}>
<l20, l18, (undef652 = (0 + x0^0)) /\ (undef657 = (0 + x1^0)) /\ (undef658 = (0 + x2^0)) /\ (undef659 = (0 + x3^0)) /\ (undef663 = undef663) /\ (undef664 = undef664) /\ (undef665 = undef665) /\ ((0 + undef659) <= 0) /\ (undef610 = (0 + (0 + undef652))) /\ (undef615 = (0 + (0 + undef657))) /\ (undef616 = (0 + (0 + undef658))) /\ (undef617 = (0 + (0 + undef659))) /\ (undef621 = undef621) /\ (undef622 = undef622), par{x0^0 -> (0 + undef610), x1^0 -> (0 + undef615), x2^0 -> (0 + undef616), x3^0 -> (0 + undef617), x4^0 -> (0 + undef617), x5^0 -> (0 + undef621), x6^0 -> (0 + undef622)}>
<l22, l18, (undef547 = (0 + x0^0)) /\ (undef552 = (0 + x1^0)) /\ (undef553 = (0 + x2^0)) /\ (undef554 = (0 + x3^0)) /\ (undef558 = undef558) /\ (undef559 = undef559) /\ (undef560 = undef560) /\ (undef548 = undef548) /\ ((0 + undef548) <= 0) /\ (0 <= (0 + undef548)) /\ (undef610 = (0 + (0 + undef547))) /\ (undef615 = (0 + (0 + undef552))) /\ (undef616 = (0 + (0 + undef553))) /\ (undef617 = (0 + (0 + undef554))) /\ (undef621 = undef621) /\ (undef622 = undef622), par{x0^0 -> (0 + undef610), x1^0 -> (0 + undef615), x2^0 -> (0 + undef616), x3^0 -> (0 + undef617), x4^0 -> (0 + undef617), x5^0 -> (0 + undef621), x6^0 -> (0 + undef622)}>
<l22, l19, (undef568 = (0 + x0^0)) /\ (undef573 = (0 + x1^0)) /\ (undef574 = (0 + x2^0)) /\ (undef575 = (0 + x3^0)) /\ (undef579 = undef579) /\ (undef580 = undef580) /\ (undef581 = undef581) /\ (undef569 = undef569) /\ (1 <= (0 + undef569)), par{x0^0 -> (0 + undef568), x1^0 -> (0 + undef573), x2^0 -> (0 + undef574), x3^0 -> (0 + undef575), x4^0 -> (0 + undef579), x5^0 -> (0 + undef580), x6^0 -> (0 + undef581)}>
<l22, l19, (undef589 = (0 + x0^0)) /\ (undef594 = (0 + x1^0)) /\ (undef595 = (0 + x2^0)) /\ (undef596 = (0 + x3^0)) /\ (undef600 = undef600) /\ (undef601 = undef601) /\ (undef602 = undef602) /\ (undef590 = undef590) /\ ((1 + undef590) <= 0), par{x0^0 -> (0 + undef589), x1^0 -> (0 + undef594), x2^0 -> (0 + undef595), x3^0 -> (0 + undef596), x4^0 -> (0 + undef600), x5^0 -> (0 + undef601), x6^0 -> (0 + undef602)}>
<l27, l26, (undef715 = (0 + x0^0)) /\ (undef720 = (0 + x1^0)) /\ (undef721 = (0 + x2^0)) /\ (undef722 = (0 + x3^0)) /\ (undef723 = (0 + x4^0)) /\ (undef724 = (0 + x5^0)) /\ (undef726 = undef726) /\ ((~(1) + undef724) <= 0) /\ (undef705 = undef705) /\ (undef706 = undef706) /\ (undef707 = undef707) /\ (undef695 = undef695) /\ (undef696 = undef696) /\ (undef697 = undef697) /\ (undef698 = undef698), par{x0^0 -> (0 + undef705), x1^0 -> (0 + undef706), x2^0 -> (0 + undef707), x3^0 -> (0 + undef695), x4^0 -> (0 + undef696), x5^0 -> (0 + undef697), x6^0 -> (0 + undef698)}>
<l27, l27, (undef736 = (0 + x0^0)) /\ (undef741 = (0 + x1^0)) /\ (undef742 = (0 + x2^0)) /\ (undef743 = (0 + x3^0)) /\ (undef744 = (0 + x4^0)) /\ (undef745 = (0 + x5^0)) /\ (undef747 = undef747) /\ (1 <= (~(1) + undef745)), par{x0^0 -> (0 + undef736), x1^0 -> (0 + undef741), x2^0 -> (0 + undef742), x3^0 -> (0 + undef743), x4^0 -> (0 + undef744), x5^0 -> (~(1) + undef745), x6^0 -> (0 + undef747)}>

Fresh variables:
undef1, undef6, undef7, undef8, undef9, undef12, undef13, undef22, undef27, undef28, undef29, undef30, undef33, undef34, undef43, undef48, undef49, undef50, undef54, undef55, undef56, undef64, undef69, undef70, undef71, undef75, undef76, undef85, undef90, undef91, undef92, undef96, undef97, undef98, undef106, undef107, undef111, undef112, undef117, undef118, undef119, undef127, undef128, undef129, undef132, undef133, undef138, undef139, undef140, undef148, undef149, undef150, undef153, undef154, undef159, undef160, undef161, undef169, undef170, undef171, undef174, undef175, undef180, undef181, undef182, undef190, undef195, undef196, undef201, undef202, undef203, undef211, undef212, undef216, undef217, undef222, undef223, undef224, undef232, undef233, undef237, undef238, undef243, undef244, undef245, undef254, undef255, undef256, undef257, undef264, undef265, undef266, undef274, undef279, undef280, undef281, undef282, undef283, undef284, undef295, undef300, undef301, undef302, undef303, undef304, undef305, undef337, undef342, undef343, undef344, undef345, undef346, undef348, undef358, undef363, undef364, undef365, undef366, undef367, undef379, undef384, undef385, undef386, undef387, undef388, undef390, undef400, undef405, undef406, undef407, undef408, undef409, undef411, undef421, undef426, undef427, undef428, undef429, undef430, undef432, undef442, undef447, undef448, undef449, undef450, undef453, undef454, undef463, undef468, undef469, undef470, undef471, undef474, undef484, undef489, undef490, undef491, undef492, undef495, undef496, undef505, undef506, undef510, undef512, undef516, undef517, undef518, undef526, undef527, undef531, undef537, undef538, undef539, undef547, undef548, undef552, undef553, undef554, undef558, undef559, undef560, undef568, undef569, undef573, undef574, undef575, undef579, undef580, undef581, undef589, undef590, undef594, undef595, undef596, undef600, undef601, undef602, undef610, undef615, undef616, undef617, undef621, undef622, undef631, undef636, undef637, undef638, undef642, undef643, undef644, undef652, undef657, undef658, undef659, undef663, undef664, undef665, undef673, undef674, undef675, undef676, undef677, undef678, undef684, undef685, undef686, undef695, undef696, undef697, undef698, undef705, undef706, undef707, undef715, undef720, undef721, undef722, undef723, undef724, undef726, undef736, undef741, undef742, undef743, undef744, undef745, undef747, undef778, undef783, undef784, undef785, undef786, undef789, undef790, undef799, undef804, undef805, undef806, undef807, undef810, undef820, undef825, undef826, undef827, undef828, undef831, undef832, undef842, undef843, undef844, undef845, undef852, undef853, undef854, undef862, undef863, undef864, undef867, undef873, undef874, undef875, undef883, undef884, undef885, undef888, undef894, undef895, undef896, 

Undef variables:
undef1, undef6, undef7, undef8, undef9, undef12, undef13, undef22, undef27, undef28, undef29, undef30, undef33, undef34, undef43, undef48, undef49, undef50, undef54, undef55, undef56, undef64, undef69, undef70, undef71, undef75, undef76, undef85, undef90, undef91, undef92, undef96, undef97, undef98, undef106, undef107, undef111, undef112, undef117, undef118, undef119, undef127, undef128, undef129, undef132, undef133, undef138, undef139, undef140, undef148, undef149, undef150, undef153, undef154, undef159, undef160, undef161, undef169, undef170, undef171, undef174, undef175, undef180, undef181, undef182, undef190, undef195, undef196, undef201, undef202, undef203, undef211, undef212, undef216, undef217, undef222, undef223, undef224, undef232, undef233, undef237, undef238, undef243, undef244, undef245, undef254, undef255, undef256, undef257, undef264, undef265, undef266, undef274, undef279, undef280, undef281, undef282, undef283, undef284, undef295, undef300, undef301, undef302, undef303, undef304, undef305, undef337, undef342, undef343, undef344, undef345, undef346, undef348, undef358, undef363, undef364, undef365, undef366, undef367, undef379, undef384, undef385, undef386, undef387, undef388, undef390, undef400, undef405, undef406, undef407, undef408, undef409, undef411, undef421, undef426, undef427, undef428, undef429, undef430, undef432, undef442, undef447, undef448, undef449, undef450, undef453, undef454, undef463, undef468, undef469, undef470, undef471, undef474, undef484, undef489, undef490, undef491, undef492, undef495, undef496, undef505, undef506, undef510, undef512, undef516, undef517, undef518, undef526, undef527, undef531, undef537, undef538, undef539, undef547, undef548, undef552, undef553, undef554, undef558, undef559, undef560, undef568, undef569, undef573, undef574, undef575, undef579, undef580, undef581, undef589, undef590, undef594, undef595, undef596, undef600, undef601, undef602, undef610, undef615, undef616, undef617, undef621, undef622, undef631, undef636, undef637, undef638, undef642, undef643, undef644, undef652, undef657, undef658, undef659, undef663, undef664, undef665, undef673, undef674, undef675, undef676, undef677, undef678, undef684, undef685, undef686, undef695, undef696, undef697, undef698, undef705, undef706, undef707, undef715, undef720, undef721, undef722, undef723, undef724, undef726, undef736, undef741, undef742, undef743, undef744, undef745, undef747, undef778, undef783, undef784, undef785, undef786, undef789, undef790, undef799, undef804, undef805, undef806, undef807, undef810, undef820, undef825, undef826, undef827, undef828, undef831, undef832, undef842, undef843, undef844, undef845, undef852, undef853, undef854, undef862, undef863, undef864, undef867, undef873, undef874, undef875, undef883, undef884, undef885, undef888, undef894, undef895, undef896, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l6, l7, x0^0 = undef106 /\ x1^0 = undef111 /\ x2^0 = undef112, {x0^0 -> undef106, x1^0 -> undef111, x2^0 -> -1 + undef112, x3^0 -> undef117, x4^0 -> undef118, x5^0 -> undef119, x6^0 -> undef107, rest remain the same}>
<l7, l8, 1 <= undef217 /\ x0^0 = undef211 /\ x1^0 = undef216 /\ x2^0 = undef217, {x0^0 -> undef211, x1^0 -> undef216, x2^0 -> undef217, x3^0 -> undef222, x4^0 -> undef223, x5^0 -> undef224, x6^0 -> undef212, rest remain the same}>
<l8, l6, 1 <= undef150 /\ x0^0 = undef148 /\ x1^0 = undef153 /\ x2^0 = undef154, {x0^0 -> undef148, x1^0 -> undef153, x2^0 -> undef154, x3^0 -> undef159, x4^0 -> undef160, x5^0 -> undef161, x6^0 -> undef149, rest remain the same}>
<l8, l6, 1 + undef171 <= 0 /\ x0^0 = undef169 /\ x1^0 = undef174 /\ x2^0 = undef175, {x0^0 -> undef169, x1^0 -> undef174, x2^0 -> undef175, x3^0 -> undef180, x4^0 -> undef181, x5^0 -> undef182, x6^0 -> undef170, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0

Graph 2:
Transitions:
<l4, l5, x0^0 = undef43 /\ x1^0 = undef48 /\ x2^0 = undef49 /\ x3^0 = undef50, {x0^0 -> undef43, x1^0 -> undef48, x2^0 -> undef49, x3^0 -> -32 + undef50, x4^0 -> undef54, x5^0 -> undef55, x6^0 -> undef56, rest remain the same}>
<l5, l4, 32 <= undef92 /\ x0^0 = undef85 /\ x1^0 = undef90 /\ x2^0 = undef91 /\ x3^0 = undef92, {x0^0 -> undef85, x1^0 -> undef90, x2^0 -> undef91, x3^0 -> undef92, x4^0 -> undef96, x5^0 -> undef97, x6^0 -> undef98, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0

Graph 3:
Transitions:
<l1, l1, 4 <= undef30 /\ x0^0 = undef22 /\ x1^0 = undef27 /\ x2^0 = undef28 /\ x3^0 = undef29 /\ x4^0 = undef30 /\ undef22 = undef820 /\ undef27 = undef825 /\ undef28 = undef826 /\ undef29 = undef827 /\ undef30 = undef828, {x0^0 -> undef820, x1^0 -> undef825, x2^0 -> undef826, x3^0 -> undef827, x4^0 -> -4 + undef828, x5^0 -> undef831, x6^0 -> undef832, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0

Graph 4:
Transitions:
Variables:

Graph 5:
Transitions:
<l27, l27, 2 <= undef745 /\ x0^0 = undef736 /\ x1^0 = undef741 /\ x2^0 = undef742 /\ x3^0 = undef743 /\ x4^0 = undef744 /\ x5^0 = undef745, {x0^0 -> undef736, x1^0 -> undef741, x2^0 -> undef742, x3^0 -> undef743, x4^0 -> undef744, x5^0 -> -1 + undef745, x6^0 -> undef747, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0

Graph 6:
Transitions:
Variables:

Graph 7:
Transitions:
<l19, l20, x0^0 = undef505 /\ x1^0 = undef510 /\ x3^0 = undef512, {x0^0 -> undef505, x1^0 -> undef510, x2^0 -> undef516, x3^0 -> -1 + undef512, x4^0 -> undef517, x5^0 -> undef518, x6^0 -> undef506, rest remain the same}>
<l20, l22, 1 <= undef638 /\ x0^0 = undef631 /\ x1^0 = undef636 /\ x2^0 = undef637 /\ x3^0 = undef638, {x0^0 -> undef631, x1^0 -> undef636, x2^0 -> undef637, x3^0 -> undef638, x4^0 -> undef642, x5^0 -> undef643, x6^0 -> undef644, rest remain the same}>
<l22, l19, 1 <= undef569 /\ x0^0 = undef568 /\ x1^0 = undef573 /\ x2^0 = undef574 /\ x3^0 = undef575, {x0^0 -> undef568, x1^0 -> undef573, x2^0 -> undef574, x3^0 -> undef575, x4^0 -> undef579, x5^0 -> undef580, x6^0 -> undef581, rest remain the same}>
<l22, l19, 1 + undef590 <= 0 /\ x0^0 = undef589 /\ x1^0 = undef594 /\ x2^0 = undef595 /\ x3^0 = undef596, {x0^0 -> undef589, x1^0 -> undef594, x2^0 -> undef595, x3^0 -> undef596, x4^0 -> undef600, x5^0 -> undef601, x6^0 -> undef602, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0

Graph 8:
Transitions:
<l17, l18, x0^0 = undef442 /\ x1^0 = undef447 /\ x2^0 = undef448 /\ x3^0 = undef449 /\ x4^0 = undef450, {x0^0 -> undef442, x1^0 -> undef447, x2^0 -> undef448, x3^0 -> undef449, x4^0 -> -32 + undef450, x5^0 -> undef453, x6^0 -> undef454, rest remain the same}>
<l18, l17, 32 <= undef492 /\ x0^0 = undef484 /\ x1^0 = undef489 /\ x2^0 = undef490 /\ x3^0 = undef491 /\ x4^0 = undef492, {x0^0 -> undef484, x1^0 -> undef489, x2^0 -> undef490, x3^0 -> undef491, x4^0 -> undef492, x5^0 -> undef495, x6^0 -> undef496, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0

Graph 9:
Transitions:
<l15, l16, x0^0 = undef379 /\ x1^0 = undef384 /\ x2^0 = undef385 /\ x3^0 = undef386 /\ x4^0 = undef387 /\ x5^0 = undef388, {x0^0 -> undef379, x1^0 -> undef384, x2^0 -> undef385, x3^0 -> undef386, x4^0 -> undef387, x5^0 -> -4 + undef388, x6^0 -> undef390, rest remain the same}>
<l16, l15, 4 <= undef430 /\ x0^0 = undef421 /\ x1^0 = undef426 /\ x2^0 = undef427 /\ x3^0 = undef428 /\ x4^0 = undef429 /\ x5^0 = undef430, {x0^0 -> undef421, x1^0 -> undef426, x2^0 -> undef427, x3^0 -> undef428, x4^0 -> undef429, x5^0 -> undef430, x6^0 -> undef432, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0

Graph 10:
Transitions:
Variables:

Graph 11:
Transitions:
<l12, l12, 2 <= undef305 /\ x0^0 = undef295 /\ x1^0 = undef300 /\ x2^0 = undef301 /\ x3^0 = undef302 /\ x4^0 = undef303 /\ x5^0 = undef304 /\ x6^0 = undef305, {x0^0 -> undef295, x1^0 -> undef300, x2^0 -> undef301, x3^0 -> undef302, x4^0 -> undef303, x5^0 -> undef304, x6^0 -> -1 + undef305, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0

Graph 12:
Transitions:
Variables:

Graph 13:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l7, x0^0 = undef883 /\ x1^0 = undef888 /\ undef526 = undef883 /\ undef531 = undef888, {x0^0 -> undef526, x1^0 -> undef531, x2^0 -> undef531, x3^0 -> undef537, x4^0 -> undef538, x5^0 -> undef539, x6^0 -> undef527, rest remain the same}>
<l0, l6, true, {all remain the same}>
<l0, l8, true, {all remain the same}>
<l0, l7, true, {all remain the same}>
<l0, l7, x0^0 = undef526 /\ x1^0 = undef531, {x0^0 -> undef526, x1^0 -> undef531, x2^0 -> undef531, x3^0 -> undef537, x4^0 -> undef538, x5^0 -> undef539, x6^0 -> undef527, rest remain the same}>

Graph 2
<l0, l4, true, {all remain the same}>
<l0, l5, true, {all remain the same}>
<l0, l5, x0^0 = undef190 /\ x1^0 = undef195 /\ x2^0 = undef196, {x0^0 -> undef190, x1^0 -> undef195, x2^0 -> undef196, x3^0 -> undef196, x4^0 -> undef201, x5^0 -> undef202, x6^0 -> undef203, rest remain the same}>
<l7, l5, undef238 <= 0 /\ x0^0 = undef232 /\ x1^0 = undef237 /\ x2^0 = undef238 /\ undef190 = undef232 /\ undef195 = undef237 /\ undef196 = undef238, {x0^0 -> undef190, x1^0 -> undef195, x2^0 -> undef196, x3^0 -> undef196, x4^0 -> undef201, x5^0 -> undef202, x6^0 -> undef203, rest remain the same}>
<l8, l5, x0^0 = undef127 /\ x1^0 = undef132 /\ x2^0 = undef133 /\ undef127 = undef190 /\ undef129 = 0 /\ undef132 = undef195 /\ undef133 = undef196, {x0^0 -> undef190, x1^0 -> undef195, x2^0 -> undef196, x3^0 -> undef196, x4^0 -> undef201, x5^0 -> undef202, x6^0 -> undef203, rest remain the same}>

Graph 3
<l0, l1, true, {all remain the same}>
<l0, l1, x0^0 = undef820 /\ x1^0 = undef825 /\ x2^0 = undef826 /\ x3^0 = undef827 /\ x4^0 = undef828, {x0^0 -> undef820, x1^0 -> undef825, x2^0 -> undef826, x3^0 -> undef827, x4^0 -> -4 + undef828, x5^0 -> undef831, x6^0 -> undef832, rest remain the same}>
<l5, l1, undef71 <= 31 /\ x0^0 = undef64 /\ x1^0 = undef69 /\ x2^0 = undef70 /\ x3^0 = undef71, {x0^0 -> undef64, x1^0 -> undef69, x2^0 -> undef70, x3^0 -> undef71, x4^0 -> undef71, x5^0 -> undef75, x6^0 -> undef76, rest remain the same}>

Graph 4
<l0, l2, true, {all remain the same}>
<l1, l2, undef9 <= 3 /\ x0^0 = undef1 /\ x1^0 = undef6 /\ x2^0 = undef7 /\ x3^0 = undef8 /\ x4^0 = undef9, {x0^0 -> undef1, x1^0 -> undef6, x2^0 -> undef7, x3^0 -> undef8, x4^0 -> undef9, x5^0 -> undef12, x6^0 -> undef13, rest remain the same}>

Graph 5
<l0, l27, true, {all remain the same}>
<l2, l27, 1 <= undef807 /\ x0^0 = undef799 /\ x1^0 = undef804 /\ x2^0 = undef805 /\ x3^0 = undef806 /\ x4^0 = undef807, {x0^0 -> undef799, x1^0 -> undef804, x2^0 -> undef805, x3^0 -> undef806, x4^0 -> undef807, x5^0 -> undef807, x6^0 -> undef810, rest remain the same}>

Graph 6
<l0, l26, true, {all remain the same}>
<l0, l26, true, {x0^0 -> undef705, x1^0 -> undef706, x2^0 -> undef707, x3^0 -> undef695, x4^0 -> undef696, x5^0 -> undef697, x6^0 -> undef698, rest remain the same}>
<l2, l26, undef786 <= 0 /\ x0^0 = undef778 /\ x1^0 = undef783 /\ x2^0 = undef784 /\ x3^0 = undef785 /\ x4^0 = undef786, {x0^0 -> undef705, x1^0 -> undef706, x2^0 -> undef707, x3^0 -> undef695, x4^0 -> undef696, x5^0 -> undef697, x6^0 -> undef698, rest remain the same}>
<l27, l26, undef724 <= 1 /\ x0^0 = undef715 /\ x1^0 = undef720 /\ x2^0 = undef721 /\ x3^0 = undef722 /\ x4^0 = undef723 /\ x5^0 = undef724, {x0^0 -> undef705, x1^0 -> undef706, x2^0 -> undef707, x3^0 -> undef695, x4^0 -> undef696, x5^0 -> undef697, x6^0 -> undef698, rest remain the same}>

Graph 7
<l0, l20, x0^0 = undef862 /\ x1^0 = undef867 /\ undef673 = undef862 /\ undef678 = undef867, {x0^0 -> undef673, x1^0 -> undef678, x2^0 -> -1 - undef674 - undef684 - undef685 - undef686, x3^0 -> undef678, x4^0 -> undef675, x5^0 -> undef676, x6^0 -> undef677, rest remain the same}>
<l0, l19, true, {all remain the same}>
<l0, l22, true, {all remain the same}>
<l0, l20, true, {all remain the same}>
<l0, l20, x0^0 = undef673 /\ x1^0 = undef678, {x0^0 -> undef673, x1^0 -> undef678, x2^0 -> -1 - undef674 - undef684 - undef685 - undef686, x3^0 -> undef678, x4^0 -> undef675, x5^0 -> undef676, x6^0 -> undef677, rest remain the same}>

Graph 8
<l0, l17, true, {all remain the same}>
<l0, l18, true, {all remain the same}>
<l0, l18, x0^0 = undef610 /\ x1^0 = undef615 /\ x2^0 = undef616 /\ x3^0 = undef617, {x0^0 -> undef610, x1^0 -> undef615, x2^0 -> undef616, x3^0 -> undef617, x4^0 -> undef617, x5^0 -> undef621, x6^0 -> undef622, rest remain the same}>
<l20, l18, undef659 <= 0 /\ x0^0 = undef652 /\ x1^0 = undef657 /\ x2^0 = undef658 /\ x3^0 = undef659 /\ undef610 = undef652 /\ undef615 = undef657 /\ undef616 = undef658 /\ undef617 = undef659, {x0^0 -> undef610, x1^0 -> undef615, x2^0 -> undef616, x3^0 -> undef617, x4^0 -> undef617, x5^0 -> undef621, x6^0 -> undef622, rest remain the same}>
<l22, l18, x0^0 = undef547 /\ x1^0 = undef552 /\ x2^0 = undef553 /\ x3^0 = undef554 /\ undef547 = undef610 /\ undef548 = 0 /\ undef552 = undef615 /\ undef553 = undef616 /\ undef554 = undef617, {x0^0 -> undef610, x1^0 -> undef615, x2^0 -> undef616, x3^0 -> undef617, x4^0 -> undef617, x5^0 -> undef621, x6^0 -> undef622, rest remain the same}>

Graph 9
<l0, l15, true, {all remain the same}>
<l0, l16, true, {all remain the same}>
<l18, l16, undef471 <= 31 /\ x0^0 = undef463 /\ x1^0 = undef468 /\ x2^0 = undef469 /\ x3^0 = undef470 /\ x4^0 = undef471, {x0^0 -> undef463, x1^0 -> undef468, x2^0 -> undef469, x3^0 -> undef470, x4^0 -> undef471, x5^0 -> undef471, x6^0 -> undef474, rest remain the same}>

Graph 10
<l0, l14, true, {all remain the same}>
<l16, l14, undef409 <= 3 /\ x0^0 = undef400 /\ x1^0 = undef405 /\ x2^0 = undef406 /\ x3^0 = undef407 /\ x4^0 = undef408 /\ x5^0 = undef409, {x0^0 -> undef400, x1^0 -> undef405, x2^0 -> undef406, x3^0 -> undef407, x4^0 -> undef408, x5^0 -> undef409, x6^0 -> undef411, rest remain the same}>

Graph 11
<l0, l12, true, {all remain the same}>
<l14, l12, 1 <= undef367 /\ x0^0 = undef358 /\ x1^0 = undef363 /\ x2^0 = undef364 /\ x3^0 = undef365 /\ x4^0 = undef366 /\ x5^0 = undef367, {x0^0 -> undef358, x1^0 -> undef363, x2^0 -> undef364, x3^0 -> undef365, x4^0 -> undef366, x5^0 -> undef367, x6^0 -> undef367, rest remain the same}>

Graph 12
<l0, l11, true, {all remain the same}>
<l0, l11, true, {x0^0 -> undef264, x1^0 -> undef265, x2^0 -> undef266, x3^0 -> undef254, x4^0 -> undef255, x5^0 -> undef256, x6^0 -> undef257, rest remain the same}>
<l12, l11, undef284 <= 1 /\ x0^0 = undef274 /\ x1^0 = undef279 /\ x2^0 = undef280 /\ x3^0 = undef281 /\ x4^0 = undef282 /\ x5^0 = undef283 /\ x6^0 = undef284, {x0^0 -> undef264, x1^0 -> undef265, x2^0 -> undef266, x3^0 -> undef254, x4^0 -> undef255, x5^0 -> undef256, x6^0 -> undef257, rest remain the same}>
<l14, l11, undef346 <= 0 /\ x0^0 = undef337 /\ x1^0 = undef342 /\ x2^0 = undef343 /\ x3^0 = undef344 /\ x4^0 = undef345 /\ x5^0 = undef346, {x0^0 -> undef264, x1^0 -> undef265, x2^0 -> undef266, x3^0 -> undef254, x4^0 -> undef255, x5^0 -> undef256, x6^0 -> undef257, rest remain the same}>

Graph 13
<l0, l30, true, {x0^0 -> undef852, x1^0 -> undef853, x2^0 -> undef854, x3^0 -> undef842, x4^0 -> undef843, x5^0 -> undef844, x6^0 -> undef845, rest remain the same}>
<l0, l30, true, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 1 , 3 )
( 2 , 4 )
( 4 , 2 )
( 5 , 2 )
( 6 , 1 )
( 7 , 1 )
( 8 , 1 )
( 11 , 12 )
( 12 , 11 )
( 14 , 10 )
( 15 , 9 )
( 16 , 9 )
( 17 , 8 )
( 18 , 8 )
( 19 , 7 )
( 20 , 7 )
( 22 , 7 )
( 26 , 6 )
( 27 , 5 )
( 30 , 13 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.023898

Checking conditional termination of SCC {l6, l7, l8}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004127s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.014815s
Trying to remove transition: <l8, l6, 1 + undef171 <= 0 /\ x0^0 = undef169 /\ x1^0 = undef174 /\ x2^0 = undef175, {x0^0 -> undef169, x1^0 -> undef174, x2^0 -> undef175, x3^0 -> undef180, x4^0 -> undef181, x5^0 -> undef182, x6^0 -> undef170, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.042214s
Time used: 0.041023
Trying to remove transition: <l8, l6, 1 <= undef150 /\ x0^0 = undef148 /\ x1^0 = undef153 /\ x2^0 = undef154, {x0^0 -> undef148, x1^0 -> undef153, x2^0 -> undef154, x3^0 -> undef159, x4^0 -> undef160, x5^0 -> undef161, x6^0 -> undef149, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.030790s
Time used: 0.026191
Trying to remove transition: <l7, l8, 1 <= undef217 /\ x0^0 = undef211 /\ x1^0 = undef216 /\ x2^0 = undef217, {x0^0 -> undef211, x1^0 -> undef216, x2^0 -> undef217, x3^0 -> undef222, x4^0 -> undef223, x5^0 -> undef224, x6^0 -> undef212, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.030788s
Time used: 0.026101
Trying to remove transition: <l6, l7, x0^0 = undef106 /\ x1^0 = undef111 /\ x2^0 = undef112, {x0^0 -> undef106, x1^0 -> undef111, x2^0 -> -1 + undef112, x3^0 -> undef117, x4^0 -> undef118, x5^0 -> undef119, x6^0 -> undef107, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.030420s
Time used: 0.025629
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.139762s
Time used: 0.134459
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.398820s
Time used: 0.398811

LOG: SAT solveNonLinear - Elapsed time: 0.538582s
Cost: 2; Total time: 0.53327
[31mFailed at location 6: 0 <= x2^0[0m
[31mFailed at location 8: 0 <= x2^0[0m
Before Improving: 
[36mQuasi-invariant at l6: 0 <= x2^0[0m
[36mQuasi-invariant at l8: 0 <= x2^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.032502s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008660s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008369s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008335s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008347s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008345s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008385s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008351s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008407s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008386s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008395s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008416s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008436s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008443s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008685s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008699s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008506s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008525s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008558s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008524s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008518s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008541s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008563s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008600s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008551s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008541s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008551s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008554s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008547s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008561s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008568s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008578s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008592s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008594s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008572s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008589s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008590s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008622s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008630s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008603s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008639s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008640s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008621s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008612s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008653s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008644s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008615s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008660s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008643s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008667s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008681s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008687s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008668s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008676s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008681s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008681s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008670s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008687s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008713s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008685s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008728s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008689s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008709s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008703s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008703s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008714s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008724s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008724s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008717s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008698s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008722s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008717s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008699s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008693s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008706s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008727s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008910s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008885s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008795s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008754s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008907s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008751s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008756s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008774s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008762s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008756s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008759s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008759s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008746s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008773s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008747s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008753s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008756s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008778s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008774s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008764s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008764s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008790s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008786s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008797s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008808s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008791s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008795s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008774s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008777s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008819s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008970s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008865s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008831s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008828s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008827s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008802s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008789s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008791s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008793s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008812s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008813s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008807s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008817s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.014515s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009202s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008953s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008914s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008877s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008866s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008871s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008879s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008867s
Quasi-invariant improved
Remaining time after improvement: -0.000107
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l6: 0 <= 128 + x2^0[0m
[36mQuasi-invariant at l8: 0 <= 128 + x2^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l7, 0 <= 128 + x2^0 /\ x0^0 = undef106 /\ x1^0 = undef111 /\ x2^0 = undef112, {x0^0 -> undef106, x1^0 -> undef111, x2^0 -> -1 + undef112, x3^0 -> undef117, x4^0 -> undef118, x5^0 -> undef119, x6^0 -> undef107, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l8, l6, 1 <= undef150 /\ 0 <= 128 + x2^0 /\ x0^0 = undef148 /\ x1^0 = undef153 /\ x2^0 = undef154, {x0^0 -> undef148, x1^0 -> undef153, x2^0 -> undef154, x3^0 -> undef159, x4^0 -> undef160, x5^0 -> undef161, x6^0 -> undef149, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l8, l6, 1 + undef171 <= 0 /\ 0 <= 128 + x2^0 /\ x0^0 = undef169 /\ x1^0 = undef174 /\ x2^0 = undef175, {x0^0 -> undef169, x1^0 -> undef174, x2^0 -> undef175, x3^0 -> undef180, x4^0 -> undef181, x5^0 -> undef182, x6^0 -> undef170, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l6, l7, 0 <= 128 + x2^0 /\ x0^0 = undef106 /\ x1^0 = undef111 /\ x2^0 = undef112, {x0^0 -> undef106, x1^0 -> undef111, x2^0 -> -1 + undef112, x3^0 -> undef117, x4^0 -> undef118, x5^0 -> undef119, x6^0 -> undef107, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l8, l6, 1 <= undef150 /\ 0 <= 128 + x2^0 /\ x0^0 = undef148 /\ x1^0 = undef153 /\ x2^0 = undef154, {x0^0 -> undef148, x1^0 -> undef153, x2^0 -> undef154, x3^0 -> undef159, x4^0 -> undef160, x5^0 -> undef161, x6^0 -> undef149, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l8, l6, 1 + undef171 <= 0 /\ 0 <= 128 + x2^0 /\ x0^0 = undef169 /\ x1^0 = undef174 /\ x2^0 = undef175, {x0^0 -> undef169, x1^0 -> undef174, x2^0 -> undef175, x3^0 -> undef180, x4^0 -> undef181, x5^0 -> undef182, x6^0 -> undef170, rest remain the same}>
[33mRanking function: [36m128 + x2^0[0m
New Graphs: 
Calling Safety with literal 0 <= 128 + x2^0 and entry <l0, l6, true, {all remain the same}>

LOG: CALL check - Post:0 <= 128 + x2^0 - Process 1
* Exit transition: <l0, l6, true, {all remain the same}>
* Postcondition  : 0 <= 128 + x2^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001352s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001422s
Calling Safety with literal 0 <= 128 + x2^0 and entry <l0, l8, true, {all remain the same}>

LOG: CALL check - Post:0 <= 128 + x2^0 - Process 2
* Exit transition: <l0, l8, true, {all remain the same}>
* Postcondition  : 0 <= 128 + x2^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001327s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001388s
INVARIANTS: 
6: 
8: 
Quasi-INVARIANTS to narrow Graph: 
6: 0 <= 128 + x2^0 , 
8: 0 <= 128 + x2^0 , 
Narrowing transition: 
<l6, l7, x0^0 = undef106 /\ x1^0 = undef111 /\ x2^0 = undef112, {x0^0 -> undef106, x1^0 -> undef111, x2^0 -> -1 + undef112, x3^0 -> undef117, x4^0 -> undef118, x5^0 -> undef119, x6^0 -> undef107, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l7, l8, 1 <= undef217 /\ x0^0 = undef211 /\ x1^0 = undef216 /\ x2^0 = undef217, {x0^0 -> undef211, x1^0 -> undef216, x2^0 -> undef217, x3^0 -> undef222, x4^0 -> undef223, x5^0 -> undef224, x6^0 -> undef212, rest remain the same}>
Narrowing transition: 
<l8, l6, 1 <= undef150 /\ x0^0 = undef148 /\ x1^0 = undef153 /\ x2^0 = undef154, {x0^0 -> undef148, x1^0 -> undef153, x2^0 -> undef154, x3^0 -> undef159, x4^0 -> undef160, x5^0 -> undef161, x6^0 -> undef149, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l8, l6, 1 + undef171 <= 0 /\ x0^0 = undef169 /\ x1^0 = undef174 /\ x2^0 = undef175, {x0^0 -> undef169, x1^0 -> undef174, x2^0 -> undef175, x3^0 -> undef180, x4^0 -> undef181, x5^0 -> undef182, x6^0 -> undef170, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l6, l7, 129 + x2^0 <= 0 /\ x0^0 = undef106 /\ x1^0 = undef111 /\ x2^0 = undef112, {x0^0 -> undef106, x1^0 -> undef111, x2^0 -> -1 + undef112, x3^0 -> undef117, x4^0 -> undef118, x5^0 -> undef119, x6^0 -> undef107, rest remain the same}>
<l8, l6, 1 <= undef150 /\ 129 + x2^0 <= 0 /\ x0^0 = undef148 /\ x1^0 = undef153 /\ x2^0 = undef154, {x0^0 -> undef148, x1^0 -> undef153, x2^0 -> undef154, x3^0 -> undef159, x4^0 -> undef160, x5^0 -> undef161, x6^0 -> undef149, rest remain the same}>
<l8, l6, 1 + undef171 <= 0 /\ 129 + x2^0 <= 0 /\ x0^0 = undef169 /\ x1^0 = undef174 /\ x2^0 = undef175, {x0^0 -> undef169, x1^0 -> undef174, x2^0 -> undef175, x3^0 -> undef180, x4^0 -> undef181, x5^0 -> undef182, x6^0 -> undef170, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0
Proving termination of subgraph 2
Checking unfeasibility...
Time used: 0.013868

Checking conditional termination of SCC {l4, l5}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003106s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009648s
Trying to remove transition: <l5, l4, 32 <= undef92 /\ x0^0 = undef85 /\ x1^0 = undef90 /\ x2^0 = undef91 /\ x3^0 = undef92, {x0^0 -> undef85, x1^0 -> undef90, x2^0 -> undef91, x3^0 -> undef92, x4^0 -> undef96, x5^0 -> undef97, x6^0 -> undef98, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.029453s
Time used: 0.028659
Trying to remove transition: <l4, l5, x0^0 = undef43 /\ x1^0 = undef48 /\ x2^0 = undef49 /\ x3^0 = undef50, {x0^0 -> undef43, x1^0 -> undef48, x2^0 -> undef49, x3^0 -> -32 + undef50, x4^0 -> undef54, x5^0 -> undef55, x6^0 -> undef56, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.034743s
Time used: 0.031159
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.082157s
Time used: 0.078224
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.163661s
Time used: 0.163656

LOG: SAT solveNonLinear - Elapsed time: 0.245817s
Cost: 1; Total time: 0.24188
[31mFailed at location 4: 1 <= x3^0[0m
Before Improving: 
[36mQuasi-invariant at l4: 1 <= x3^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012733s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008227s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007862s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007898s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007871s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007893s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007898s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007879s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007886s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007869s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007883s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007893s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007880s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007884s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007906s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007953s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007899s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007941s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007928s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007938s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007918s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007938s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007956s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007998s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008050s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008016s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008004s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008178s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008273s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008128s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008075s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008052s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008077s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008046s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008054s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008046s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008063s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008075s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008054s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008055s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008070s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008083s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008060s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008076s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008098s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008105s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008102s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008088s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008094s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008105s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008191s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008154s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008132s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008125s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008125s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008124s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008119s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008135s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008115s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008148s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008127s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008126s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008133s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008122s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008149s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008131s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008130s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008144s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008404s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008478s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008135s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008136s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008134s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008144s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008132s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008153s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008144s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008146s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008146s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008137s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008156s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008169s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008157s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008157s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008170s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008162s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008154s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008141s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008168s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008185s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008168s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008173s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008176s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008176s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008167s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008224s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008441s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008315s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008239s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008232s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008217s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008286s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008239s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008221s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008213s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008196s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008205s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008230s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008204s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008202s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008188s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008207s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008200s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008196s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008193s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008221s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008211s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008239s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008217s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008223s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008226s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008219s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008223s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008245s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008240s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008220s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008225s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008230s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008233s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008237s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.005673s
Remaining time after improvement: -0.000569
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l4: 0 <= 129 + x3^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l5, 0 <= 129 + x3^0 /\ x0^0 = undef43 /\ x1^0 = undef48 /\ x2^0 = undef49 /\ x3^0 = undef50, {x0^0 -> undef43, x1^0 -> undef48, x2^0 -> undef49, x3^0 -> -32 + undef50, x4^0 -> undef54, x5^0 -> undef55, x6^0 -> undef56, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l4, l5, 0 <= 129 + x3^0 /\ x0^0 = undef43 /\ x1^0 = undef48 /\ x2^0 = undef49 /\ x3^0 = undef50, {x0^0 -> undef43, x1^0 -> undef48, x2^0 -> undef49, x3^0 -> -32 + undef50, x4^0 -> undef54, x5^0 -> undef55, x6^0 -> undef56, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
[33mRanking function: [36m129 + x3^0[0m
New Graphs: 
Calling Safety with literal 0 <= 129 + x3^0 and entry <l0, l4, true, {all remain the same}>

LOG: CALL check - Post:0 <= 129 + x3^0 - Process 3
* Exit transition: <l0, l4, true, {all remain the same}>
* Postcondition  : 0 <= 129 + x3^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001579s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001644s
INVARIANTS: 
4: 
Quasi-INVARIANTS to narrow Graph: 
4: 0 <= 129 + x3^0 , 
Narrowing transition: 
<l4, l5, x0^0 = undef43 /\ x1^0 = undef48 /\ x2^0 = undef49 /\ x3^0 = undef50, {x0^0 -> undef43, x1^0 -> undef48, x2^0 -> undef49, x3^0 -> -32 + undef50, x4^0 -> undef54, x5^0 -> undef55, x6^0 -> undef56, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l5, l4, 32 <= undef92 /\ x0^0 = undef85 /\ x1^0 = undef90 /\ x2^0 = undef91 /\ x3^0 = undef92, {x0^0 -> undef85, x1^0 -> undef90, x2^0 -> undef91, x3^0 -> undef92, x4^0 -> undef96, x5^0 -> undef97, x6^0 -> undef98, rest remain the same}>
invGraph after Narrowing: 
Transitions:
<l4, l5, 130 + x3^0 <= 0 /\ x0^0 = undef43 /\ x1^0 = undef48 /\ x2^0 = undef49 /\ x3^0 = undef50, {x0^0 -> undef43, x1^0 -> undef48, x2^0 -> undef49, x3^0 -> -32 + undef50, x4^0 -> undef54, x5^0 -> undef55, x6^0 -> undef56, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0
Proving termination of subgraph 3
Checking unfeasibility...
Time used: 0.007605

Checking conditional termination of SCC {l1}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003933s
[33mRanking function: [36m-1 + (1 / 4)*x4^0[0m
New Graphs: 
Proving termination of subgraph 4
Analyzing SCC {l2}...
No cycles found.

Proving termination of subgraph 5
Checking unfeasibility...
Time used: 0.005747

Checking conditional termination of SCC {l27}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003221s
[33mRanking function: [36m-2 + x5^0[0m
New Graphs: 
Proving termination of subgraph 6
Analyzing SCC {l26}...
No cycles found.

Proving termination of subgraph 7
Checking unfeasibility...
Time used: 0.018965

Checking conditional termination of SCC {l19, l20, l22}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004822s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.018316s
Trying to remove transition: <l22, l19, 1 + undef590 <= 0 /\ x0^0 = undef589 /\ x1^0 = undef594 /\ x2^0 = undef595 /\ x3^0 = undef596, {x0^0 -> undef589, x1^0 -> undef594, x2^0 -> undef595, x3^0 -> undef596, x4^0 -> undef600, x5^0 -> undef601, x6^0 -> undef602, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.028239s
Time used: 0.026367
Trying to remove transition: <l22, l19, 1 <= undef569 /\ x0^0 = undef568 /\ x1^0 = undef573 /\ x2^0 = undef574 /\ x3^0 = undef575, {x0^0 -> undef568, x1^0 -> undef573, x2^0 -> undef574, x3^0 -> undef575, x4^0 -> undef579, x5^0 -> undef580, x6^0 -> undef581, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.031523s
Time used: 0.026986
Trying to remove transition: <l20, l22, 1 <= undef638 /\ x0^0 = undef631 /\ x1^0 = undef636 /\ x2^0 = undef637 /\ x3^0 = undef638, {x0^0 -> undef631, x1^0 -> undef636, x2^0 -> undef637, x3^0 -> undef638, x4^0 -> undef642, x5^0 -> undef643, x6^0 -> undef644, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.032262s
Time used: 0.02772
Trying to remove transition: <l19, l20, x0^0 = undef505 /\ x1^0 = undef510 /\ x3^0 = undef512, {x0^0 -> undef505, x1^0 -> undef510, x2^0 -> undef516, x3^0 -> -1 + undef512, x4^0 -> undef517, x5^0 -> undef518, x6^0 -> undef506, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.032376s
Time used: 0.027756
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.120619s
Time used: 0.115337
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.225410s
Time used: 0.225405

LOG: SAT solveNonLinear - Elapsed time: 0.346029s
Cost: 2; Total time: 0.340742
[31mFailed at location 19: 0 <= 1 + x3^0[0m
[31mFailed at location 22: 1 <= x3^0[0m
Before Improving: 
[36mQuasi-invariant at l19: 0 <= 1 + x3^0[0m
[36mQuasi-invariant at l22: 1 <= x3^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.035966s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011048s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010681s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010574s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010670s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010574s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010601s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010588s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010672s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010549s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010637s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010541s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010631s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010567s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010664s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010597s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010667s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010573s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010645s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010831s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011268s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010864s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010766s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010680s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010698s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010659s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010698s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010762s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010695s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010768s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010704s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010768s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010792s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010827s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010855s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010826s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010788s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010743s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010747s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010760s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010803s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010837s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010852s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010810s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010843s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010795s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010805s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010905s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010850s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010813s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010780s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010805s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.018509s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.012396s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011230s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011069s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010983s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010966s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010897s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010983s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010920s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010922s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010896s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010863s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011197s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011165s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011060s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010928s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011451s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011279s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010981s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010919s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010880s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010879s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010926s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010994s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010906s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010892s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010906s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010907s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010929s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010912s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010976s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010949s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010895s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010993s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010946s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010995s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010903s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010889s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010950s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010895s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010872s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010916s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010902s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011060s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010958s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010957s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010914s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010947s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010954s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011026s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007406s
Remaining time after improvement: -0.002364
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l19: 0 <= 103 + x3^0[0m
[36mQuasi-invariant at l22: 1 <= x3^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l19, l20, 0 <= 103 + x3^0 /\ x0^0 = undef505 /\ x1^0 = undef510 /\ x3^0 = undef512, {x0^0 -> undef505, x1^0 -> undef510, x2^0 -> undef516, x3^0 -> -1 + undef512, x4^0 -> undef517, x5^0 -> undef518, x6^0 -> undef506, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l22, l19, 1 <= x3^0 /\ 1 <= undef569 /\ x0^0 = undef568 /\ x1^0 = undef573 /\ x2^0 = undef574 /\ x3^0 = undef575, {x0^0 -> undef568, x1^0 -> undef573, x2^0 -> undef574, x3^0 -> undef575, x4^0 -> undef579, x5^0 -> undef580, x6^0 -> undef581, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l22, l19, 1 <= x3^0 /\ 1 + undef590 <= 0 /\ x0^0 = undef589 /\ x1^0 = undef594 /\ x2^0 = undef595 /\ x3^0 = undef596, {x0^0 -> undef589, x1^0 -> undef594, x2^0 -> undef595, x3^0 -> undef596, x4^0 -> undef600, x5^0 -> undef601, x6^0 -> undef602, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l19, l20, 0 <= 103 + x3^0 /\ x0^0 = undef505 /\ x1^0 = undef510 /\ x3^0 = undef512, {x0^0 -> undef505, x1^0 -> undef510, x2^0 -> undef516, x3^0 -> -1 + undef512, x4^0 -> undef517, x5^0 -> undef518, x6^0 -> undef506, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l22, l19, 1 <= x3^0 /\ 1 <= undef569 /\ x0^0 = undef568 /\ x1^0 = undef573 /\ x2^0 = undef574 /\ x3^0 = undef575, {x0^0 -> undef568, x1^0 -> undef573, x2^0 -> undef574, x3^0 -> undef575, x4^0 -> undef579, x5^0 -> undef580, x6^0 -> undef581, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l22, l19, 1 <= x3^0 /\ 1 + undef590 <= 0 /\ x0^0 = undef589 /\ x1^0 = undef594 /\ x2^0 = undef595 /\ x3^0 = undef596, {x0^0 -> undef589, x1^0 -> undef594, x2^0 -> undef595, x3^0 -> undef596, x4^0 -> undef600, x5^0 -> undef601, x6^0 -> undef602, rest remain the same}>
[33mRanking function: [36m103 + x3^0[0m
New Graphs: 
Calling Safety with literal 0 <= 103 + x3^0 and entry <l0, l19, true, {all remain the same}>

LOG: CALL check - Post:0 <= 103 + x3^0 - Process 4
* Exit transition: <l0, l19, true, {all remain the same}>
* Postcondition  : 0 <= 103 + x3^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001906s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001972s
Calling Safety with literal 1 <= x3^0 and entry <l0, l22, true, {all remain the same}>

LOG: CALL check - Post:1 <= x3^0 - Process 5
* Exit transition: <l0, l22, true, {all remain the same}>
* Postcondition  : 1 <= x3^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001863s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001923s
INVARIANTS: 
19: 
22: 
Quasi-INVARIANTS to narrow Graph: 
19: 0 <= 103 + x3^0 , 
22: 1 <= x3^0 , 
Narrowing transition: 
<l19, l20, x0^0 = undef505 /\ x1^0 = undef510 /\ x3^0 = undef512, {x0^0 -> undef505, x1^0 -> undef510, x2^0 -> undef516, x3^0 -> -1 + undef512, x4^0 -> undef517, x5^0 -> undef518, x6^0 -> undef506, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l20, l22, 1 <= undef638 /\ x0^0 = undef631 /\ x1^0 = undef636 /\ x2^0 = undef637 /\ x3^0 = undef638, {x0^0 -> undef631, x1^0 -> undef636, x2^0 -> undef637, x3^0 -> undef638, x4^0 -> undef642, x5^0 -> undef643, x6^0 -> undef644, rest remain the same}>
Narrowing transition: 
<l22, l19, 1 <= undef569 /\ x0^0 = undef568 /\ x1^0 = undef573 /\ x2^0 = undef574 /\ x3^0 = undef575, {x0^0 -> undef568, x1^0 -> undef573, x2^0 -> undef574, x3^0 -> undef575, x4^0 -> undef579, x5^0 -> undef580, x6^0 -> undef581, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l22, l19, 1 + undef590 <= 0 /\ x0^0 = undef589 /\ x1^0 = undef594 /\ x2^0 = undef595 /\ x3^0 = undef596, {x0^0 -> undef589, x1^0 -> undef594, x2^0 -> undef595, x3^0 -> undef596, x4^0 -> undef600, x5^0 -> undef601, x6^0 -> undef602, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l19, l20, 104 + x3^0 <= 0 /\ x0^0 = undef505 /\ x1^0 = undef510 /\ x3^0 = undef512, {x0^0 -> undef505, x1^0 -> undef510, x2^0 -> undef516, x3^0 -> -1 + undef512, x4^0 -> undef517, x5^0 -> undef518, x6^0 -> undef506, rest remain the same}>
<l22, l19, x3^0 <= 0 /\ 1 <= undef569 /\ x0^0 = undef568 /\ x1^0 = undef573 /\ x2^0 = undef574 /\ x3^0 = undef575, {x0^0 -> undef568, x1^0 -> undef573, x2^0 -> undef574, x3^0 -> undef575, x4^0 -> undef579, x5^0 -> undef580, x6^0 -> undef581, rest remain the same}>
<l22, l19, x3^0 <= 0 /\ 1 + undef590 <= 0 /\ x0^0 = undef589 /\ x1^0 = undef594 /\ x2^0 = undef595 /\ x3^0 = undef596, {x0^0 -> undef589, x1^0 -> undef594, x2^0 -> undef595, x3^0 -> undef596, x4^0 -> undef600, x5^0 -> undef601, x6^0 -> undef602, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0
Proving termination of subgraph 8
Checking unfeasibility...
Time used: 0.017311

Checking conditional termination of SCC {l17, l18}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003924s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011041s
Trying to remove transition: <l18, l17, 32 <= undef492 /\ x0^0 = undef484 /\ x1^0 = undef489 /\ x2^0 = undef490 /\ x3^0 = undef491 /\ x4^0 = undef492, {x0^0 -> undef484, x1^0 -> undef489, x2^0 -> undef490, x3^0 -> undef491, x4^0 -> undef492, x5^0 -> undef495, x6^0 -> undef496, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.033287s
Time used: 0.032119
Trying to remove transition: <l17, l18, x0^0 = undef442 /\ x1^0 = undef447 /\ x2^0 = undef448 /\ x3^0 = undef449 /\ x4^0 = undef450, {x0^0 -> undef442, x1^0 -> undef447, x2^0 -> undef448, x3^0 -> undef449, x4^0 -> -32 + undef450, x5^0 -> undef453, x6^0 -> undef454, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.033210s
Time used: 0.02899
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.076649s
Time used: 0.072094
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.172812s
Time used: 0.172652

LOG: SAT solveNonLinear - Elapsed time: 0.249460s
Cost: 1; Total time: 0.244746
[31mFailed at location 17: 1 <= x4^0[0m
Before Improving: 
[36mQuasi-invariant at l17: 1 <= x4^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.015610s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011128s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010787s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010902s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010708s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010909s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010767s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010808s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010794s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010860s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010745s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010799s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010728s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010821s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011040s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010834s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010821s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010847s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010800s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010808s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010774s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010784s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010730s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010733s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010822s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010798s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010765s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010747s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010723s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010712s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010760s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010748s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010711s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010740s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010703s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010736s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010736s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010766s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010753s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010802s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010826s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010790s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011024s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011168s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010909s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010873s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010905s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010842s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010813s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010787s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010791s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010793s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010785s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010807s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010809s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010866s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010820s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010809s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010795s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010829s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010821s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010860s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010807s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010832s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010841s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010830s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010843s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010857s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011156s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010911s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010807s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010853s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010820s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010844s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010829s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010899s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010882s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010852s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010836s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010902s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010857s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010856s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010879s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010886s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010829s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010871s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010880s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010844s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010836s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010843s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010856s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010889s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010915s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010874s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010866s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010896s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010906s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010923s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010936s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010946s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010893s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007547s
Remaining time after improvement: -0.002351
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l17: 0 <= 100 + x4^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l17, l18, 0 <= 100 + x4^0 /\ x0^0 = undef442 /\ x1^0 = undef447 /\ x2^0 = undef448 /\ x3^0 = undef449 /\ x4^0 = undef450, {x0^0 -> undef442, x1^0 -> undef447, x2^0 -> undef448, x3^0 -> undef449, x4^0 -> -32 + undef450, x5^0 -> undef453, x6^0 -> undef454, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l17, l18, 0 <= 100 + x4^0 /\ x0^0 = undef442 /\ x1^0 = undef447 /\ x2^0 = undef448 /\ x3^0 = undef449 /\ x4^0 = undef450, {x0^0 -> undef442, x1^0 -> undef447, x2^0 -> undef448, x3^0 -> undef449, x4^0 -> -32 + undef450, x5^0 -> undef453, x6^0 -> undef454, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
[33mRanking function: [36m100 + x4^0[0m
New Graphs: 
Calling Safety with literal 0 <= 100 + x4^0 and entry <l0, l17, true, {all remain the same}>

LOG: CALL check - Post:0 <= 100 + x4^0 - Process 6
* Exit transition: <l0, l17, true, {all remain the same}>
* Postcondition  : 0 <= 100 + x4^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002155s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.002222s
INVARIANTS: 
17: 
Quasi-INVARIANTS to narrow Graph: 
17: 0 <= 100 + x4^0 , 
Narrowing transition: 
<l17, l18, x0^0 = undef442 /\ x1^0 = undef447 /\ x2^0 = undef448 /\ x3^0 = undef449 /\ x4^0 = undef450, {x0^0 -> undef442, x1^0 -> undef447, x2^0 -> undef448, x3^0 -> undef449, x4^0 -> -32 + undef450, x5^0 -> undef453, x6^0 -> undef454, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l18, l17, 32 <= undef492 /\ x0^0 = undef484 /\ x1^0 = undef489 /\ x2^0 = undef490 /\ x3^0 = undef491 /\ x4^0 = undef492, {x0^0 -> undef484, x1^0 -> undef489, x2^0 -> undef490, x3^0 -> undef491, x4^0 -> undef492, x5^0 -> undef495, x6^0 -> undef496, rest remain the same}>
invGraph after Narrowing: 
Transitions:
<l17, l18, 101 + x4^0 <= 0 /\ x0^0 = undef442 /\ x1^0 = undef447 /\ x2^0 = undef448 /\ x3^0 = undef449 /\ x4^0 = undef450, {x0^0 -> undef442, x1^0 -> undef447, x2^0 -> undef448, x3^0 -> undef449, x4^0 -> -32 + undef450, x5^0 -> undef453, x6^0 -> undef454, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0
Proving termination of subgraph 9
Checking unfeasibility...
Time used: 0.013489

Checking conditional termination of SCC {l15, l16}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003730s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.011892s
Trying to remove transition: <l16, l15, 4 <= undef430 /\ x0^0 = undef421 /\ x1^0 = undef426 /\ x2^0 = undef427 /\ x3^0 = undef428 /\ x4^0 = undef429 /\ x5^0 = undef430, {x0^0 -> undef421, x1^0 -> undef426, x2^0 -> undef427, x3^0 -> undef428, x4^0 -> undef429, x5^0 -> undef430, x6^0 -> undef432, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.029437s
Time used: 0.028174
Trying to remove transition: <l15, l16, x0^0 = undef379 /\ x1^0 = undef384 /\ x2^0 = undef385 /\ x3^0 = undef386 /\ x4^0 = undef387 /\ x5^0 = undef388, {x0^0 -> undef379, x1^0 -> undef384, x2^0 -> undef385, x3^0 -> undef386, x4^0 -> undef387, x5^0 -> -4 + undef388, x6^0 -> undef390, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.034596s
Time used: 0.030759
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.068433s
Time used: 0.064119
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.136945s
Time used: 0.13694

LOG: SAT solveNonLinear - Elapsed time: 0.205378s
Cost: 1; Total time: 0.201059
[31mFailed at location 15: 0 <= x5^0[0m
Before Improving: 
[36mQuasi-invariant at l15: 0 <= x5^0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.032980s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010214s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009881s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009858s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009933s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009950s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009901s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009856s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010077s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009960s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009969s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009894s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009909s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009897s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009919s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009874s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009855s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009857s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009872s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009862s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009887s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009881s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009909s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009962s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009928s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009912s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009922s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009925s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010030s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009956s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009949s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009945s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009936s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009952s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010412s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010333s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010109s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010025s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010005s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010004s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010020s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010037s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009998s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010034s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010251s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010014s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010030s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009999s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.009987s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010004s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010027s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010058s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010050s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010010s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010039s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010024s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010045s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010050s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010038s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010031s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010023s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010033s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010026s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010046s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010075s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010061s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010105s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010074s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010270s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010162s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010138s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010114s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010095s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010118s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010098s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010095s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010104s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010072s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010053s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010059s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010062s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010124s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010137s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010106s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010091s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010075s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010361s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010477s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010227s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010140s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010129s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010112s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010115s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010110s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010196s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010135s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010188s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010437s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010114s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010126s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010197s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010170s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010167s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010117s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.010100s
Quasi-invariant improved
Remaining time after improvement: -0.002525
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l15: 0 <= 105 + x5^0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l15, l16, 0 <= 105 + x5^0 /\ x0^0 = undef379 /\ x1^0 = undef384 /\ x2^0 = undef385 /\ x3^0 = undef386 /\ x4^0 = undef387 /\ x5^0 = undef388, {x0^0 -> undef379, x1^0 -> undef384, x2^0 -> undef385, x3^0 -> undef386, x4^0 -> undef387, x5^0 -> -4 + undef388, x6^0 -> undef390, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l15, l16, 0 <= 105 + x5^0 /\ x0^0 = undef379 /\ x1^0 = undef384 /\ x2^0 = undef385 /\ x3^0 = undef386 /\ x4^0 = undef387 /\ x5^0 = undef388, {x0^0 -> undef379, x1^0 -> undef384, x2^0 -> undef385, x3^0 -> undef386, x4^0 -> undef387, x5^0 -> -4 + undef388, x6^0 -> undef390, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
[33mRanking function: [36m105 + x5^0[0m
New Graphs: 
Calling Safety with literal 0 <= 105 + x5^0 and entry <l0, l15, true, {all remain the same}>

LOG: CALL check - Post:0 <= 105 + x5^0 - Process 7
* Exit transition: <l0, l15, true, {all remain the same}>
* Postcondition  : 0 <= 105 + x5^0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002424s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.002489s
INVARIANTS: 
15: 
Quasi-INVARIANTS to narrow Graph: 
15: 0 <= 105 + x5^0 , 
Narrowing transition: 
<l15, l16, x0^0 = undef379 /\ x1^0 = undef384 /\ x2^0 = undef385 /\ x3^0 = undef386 /\ x4^0 = undef387 /\ x5^0 = undef388, {x0^0 -> undef379, x1^0 -> undef384, x2^0 -> undef385, x3^0 -> undef386, x4^0 -> undef387, x5^0 -> -4 + undef388, x6^0 -> undef390, rest remain the same}>

LOG: Narrow transition size 1
It's unfeasible. Removing transition: 
<l16, l15, 4 <= undef430 /\ x0^0 = undef421 /\ x1^0 = undef426 /\ x2^0 = undef427 /\ x3^0 = undef428 /\ x4^0 = undef429 /\ x5^0 = undef430, {x0^0 -> undef421, x1^0 -> undef426, x2^0 -> undef427, x3^0 -> undef428, x4^0 -> undef429, x5^0 -> undef430, x6^0 -> undef432, rest remain the same}>
invGraph after Narrowing: 
Transitions:
<l15, l16, 106 + x5^0 <= 0 /\ x0^0 = undef379 /\ x1^0 = undef384 /\ x2^0 = undef385 /\ x3^0 = undef386 /\ x4^0 = undef387 /\ x5^0 = undef388, {x0^0 -> undef379, x1^0 -> undef384, x2^0 -> undef385, x3^0 -> undef386, x4^0 -> undef387, x5^0 -> -4 + undef388, x6^0 -> undef390, rest remain the same}>
Variables:
x0^0, x1^0, x2^0, x3^0, x4^0, x5^0, x6^0
Proving termination of subgraph 10
Analyzing SCC {l14}...
No cycles found.

Proving termination of subgraph 11
Checking unfeasibility...
Time used: 0.007807

Checking conditional termination of SCC {l12}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004329s
[33mRanking function: [36m-2 + x6^0[0m
New Graphs: 
Proving termination of subgraph 12
Analyzing SCC {l11}...
No cycles found.

Proving termination of subgraph 13
Analyzing SCC {l30}...
No cycles found.

[32mProgram Terminates[0m
