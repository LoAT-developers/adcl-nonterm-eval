NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2}>
<l2, l2, (arg1 > 4) /\ (arg2 > 0) /\ (arg2 >= arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) <= 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 2), arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) > 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 1)}>
<l2, l2, (arg2 < arg1) /\ (arg1 > 1) /\ ((arg2 + 1) >= (2 * arg1)) /\ (arg2 > 0), par{arg1 -> (arg1 + 1), arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 < arg1) /\ (arg1 > 1) /\ ((arg2 + 1) < (2 * arg1)) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l3, l1, true, par{arg1 -> undef13, arg2 -> undef14}>

Fresh variables:
undef13, undef14, 

Undef variables:
undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef14) /\ (arg2 = undef14) /\ (undef13 > 0) /\ (undef14 > ~(1))>
<l2, l2, (arg1 > 4) /\ (arg2 > 0) /\ (arg2 >= arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) <= 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 2), arg2 -> (arg2 - 1)}>
<l2, l2, (arg2 > 0) /\ (arg2 >= arg1) /\ (arg1 < 5) /\ (((arg2 - 1) - (arg1 + 1)) > 2) /\ (arg1 > ~(1)), par{arg1 -> (arg1 + 1)}>
<l2, l2, (arg2 < arg1) /\ (arg1 > 1) /\ ((arg2 + 1) < (2 * arg1)) /\ (arg2 > 0), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>

Fresh variables:
undef13, undef14, 

Undef variables:
undef13, undef14, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg1 <= 4 /\ arg2 <= 4 + arg1, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 0 <= arg1 /\ 1 <= arg2 /\ 5 + arg1 <= arg2 /\ arg1 <= 4, {arg1 -> 1 + arg1, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.009057
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l2: arg2 <= 1 + arg1[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 0 <= arg1 /\ 1 <= arg2 /\ 5 + arg1 <= arg2 /\ arg1 <= 4, {arg1 -> 1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Checking unfeasibility...
Time used: 0.022374

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001031s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.144394s
Trying to remove transition: <l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.116304s
Time used: 0.11602
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.470669s
Time used: 0.46989
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.013049s
Time used: 1.01112
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.026008s
Time used: 0.023362
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.090544s
Time used: 0.090542

LOG: SAT solveNonLinear - Elapsed time: 0.116552s
Cost: 1; Total time: 0.113904
[31mFailed at location 2: arg1 + arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 + arg2 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006033s
Remaining time after improvement: 0.998344
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 + arg2 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 + arg2 <= 0 and entry <l0, l2, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

LOG: CALL check - Post:arg1 + arg2 <= 0 - Process 1
* Exit transition: <l0, l2, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>
* Postcondition  : arg1 + arg2 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000405s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000450s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 + arg2 <= 0 , 
Narrowing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000959s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.136986s
Trying to remove transition: <l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.109392s
Time used: 0.108916
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.423443s
Time used: 0.422458
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.048462s
Time used: 1.04636
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.265734s
Time used: 0.262962
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.139837s
Time used: 0.139834

LOG: SAT solveNonLinear - Elapsed time: 0.405571s
Cost: 1; Total time: 0.402796
[31mFailed at location 2: arg1 + 2*arg2 <= 3[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 + 2*arg2 <= 3[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007359s
Remaining time after improvement: 0.997977
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 + 2*arg2 <= 3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
[33mRanking function: [36marg1 + 3*arg2[0m
New Graphs: 
Calling Safety with literal arg1 + 2*arg2 <= 3 and entry <l0, l2, 0 <= undef14 /\ 1 <= arg1 + arg2 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

LOG: CALL check - Post:arg1 + 2*arg2 <= 3 - Process 2
* Exit transition: <l0, l2, 0 <= undef14 /\ 1 <= arg1 + arg2 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>
* Postcondition  : arg1 + 2*arg2 <= 3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000320s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000374s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 + 2*arg2 <= 3 , 
Narrowing transition: 
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001152s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.197107s
Trying to remove transition: <l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.124711s
Time used: 0.124302
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.924337s
Time used: 0.923236
Trying to remove transition: <l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.124633s
Time used: 1.12219
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.002950s
Time used: 4.00045
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.006790s
Time used: 4.00042
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.005911s
Time used: 1.00034
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.469614s
Time used: 0.457398

Proving non-termination of subgraph 1
Transitions:
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {all remain the same}>
<l2, end, arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 5 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, 0 <= arg1 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 2 + arg2 <= 2*arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 5 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ arg1 <= 4 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ 0 <= arg1 /\ arg2 <= 0 /\ 1 + arg2 <= arg1 /\ arg1 <= 1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg2 <= 0 /\ 1 + arg1 <= 0 /\ 1 + arg2 <= arg1 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg1 <= arg2 /\ 0 <= arg1 /\ arg2 <= 0 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>
<l2, end, arg1 + arg2 <= 0 /\ arg1 <= arg2 /\ arg2 <= 0 /\ 1 + arg1 <= 0 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.018293s
Time used: 0.018029
Improving Solution with cost 3 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000437s
Time used: 1.00042

LOG: SAT solveNonLinear - Elapsed time: 1.018730s
Cost: 3; Total time: 1.01845
[31mFailed at location 2: 1 <= arg2[0m
Before Improving: 
[36mQuasi-invariant at l2: 1 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.008027s
Remaining time after improvement: 0.997725
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 1 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 9
Strengthening exit transition (result): 
<l2, end, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg1 <= arg2 /\ 1 <= arg1 + arg2 /\ 1 <= arg2 /\ arg1 <= 1 /\ arg2 <= 1 + arg1 /\ 2*arg1 <= 1 + arg2 /\ arg1 + 2*arg2 <= 3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.025264s
Time used: 0.025106
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.007075s
Time used: 0.007071

LOG: SAT solveNonLinear - Elapsed time: 0.032338s
Cost: 1; Total time: 0.032177
[31mFailed at location 2: 3 <= arg1 + arg2[0m
Before Improving: 
[36mQuasi-invariant at l2: 3 <= arg1 + arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002444s
Remaining time after improvement: 0.998929
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 3 <= arg1 + arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ 5 <= arg1 /\ 3 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, arg1 <= arg2 /\ 0 <= arg1 /\ 1 <= arg2 /\ arg2 <= 1 + arg1 /\ 4 <= arg1 + 2*arg2 /\ arg1 <= 4 /\ 3 <= arg1 + arg2, {arg1 -> 2 + arg1, arg2 -> -1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg2 <= arg1 /\ 1 <= arg2 /\ 4 <= arg1 + 2*arg2 /\ 2 <= arg1 /\ 2 + arg2 <= 2*arg1 /\ 3 <= arg1 + arg2, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 1 <= arg2, 3 <= arg1 + arg2, 
OPEN EXITS: 
<l2, end, 1 <= arg2 /\ 3 <= arg1 + arg2, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 0 <= undef14 /\ 1 <= undef13 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>
Conditions: 1 <= arg2, 3 <= arg1 + arg2, 
OPEN EXITS: 
<l0, l2, 0 <= undef14 /\ 1 <= arg2 /\ 1 <= undef13 /\ 3 <= arg1 + arg2 /\ arg1 = undef14 /\ arg2 = undef14, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
