NO

Initial ITS
Start location: l9
   0: l0 -> l1 : resp^0'=resp^post0, ___rho_2_^0'=___rho_2_^post0, curr_serv^0'=curr_serv^post0, ___rho_1_^0'=___rho_1_^post0, servers^0'=servers^post0, c^0'=c^post0, (___rho_2_^0-___rho_2_^post0 == 0 /\ -curr_serv^post0+curr_serv^0 == 0 /\ -___rho_1_^post0+___rho_1_^0 == 0 /\ -c^post0+c^0 == 0 /\ servers^0-servers^post0 == 0 /\ resp^0-resp^post0 == 0), cost: 1
   6: l1 -> l6 : resp^0'=resp^post6, ___rho_2_^0'=___rho_2_^post6, curr_serv^0'=curr_serv^post6, ___rho_1_^0'=___rho_1_^post6, servers^0'=servers^post6, c^0'=c^post6, (0 == 0 /\ resp^0-resp^post6 == 0 /\ 1-curr_serv^0 <= 0 /\ -c^post6+c^0 == 0 /\ -curr_serv^post6+curr_serv^0 == 0 /\ servers^0-servers^post6 == 0 /\ ___rho_2_^0-___rho_2_^post6 == 0), cost: 1
   7: l1 -> l4 : resp^0'=resp^post7, ___rho_2_^0'=___rho_2_^post7, curr_serv^0'=curr_serv^post7, ___rho_1_^0'=___rho_1_^post7, servers^0'=servers^post7, c^0'=c^post7, (c^0-c^post7 == 0 /\ curr_serv^0 <= 0 /\ -servers^post7+servers^0 == 0 /\ resp^0-resp^post7 == 0 /\ curr_serv^0-curr_serv^post7 == 0 /\ ___rho_2_^0-___rho_2_^post7 == 0 /\ -___rho_1_^post7+___rho_1_^0 == 0), cost: 1
   1: l2 -> l3 : resp^0'=resp^post1, ___rho_2_^0'=___rho_2_^post1, curr_serv^0'=curr_serv^post1, ___rho_1_^0'=___rho_1_^post1, servers^0'=servers^post1, c^0'=c^post1, (-servers^post1+servers^0 == 0 /\ -___rho_1_^post1+___rho_1_^0 == 0 /\ -c^post1+c^0 == 0 /\ resp^0-resp^post1 == 0 /\ curr_serv^0-curr_serv^post1 == 0 /\ ___rho_2_^0-___rho_2_^post1 == 0), cost: 1
   2: l4 -> l5 : resp^0'=resp^post2, ___rho_2_^0'=___rho_2_^post2, curr_serv^0'=curr_serv^post2, ___rho_1_^0'=___rho_1_^post2, servers^0'=servers^post2, c^0'=c^post2, (-c^post2+c^0 == 0 /\ ___rho_1_^0-___rho_1_^post2 == 0 /\ ___rho_2_^0-___rho_2_^post2 == 0 /\ resp^0-resp^post2 == 0 /\ curr_serv^0-curr_serv^post2 == 0 /\ -servers^post2+servers^0 == 0), cost: 1
   3: l5 -> l4 : resp^0'=resp^post3, ___rho_2_^0'=___rho_2_^post3, curr_serv^0'=curr_serv^post3, ___rho_1_^0'=___rho_1_^post3, servers^0'=servers^post3, c^0'=c^post3, (___rho_1_^0-___rho_1_^post3 == 0 /\ -c^post3+c^0 == 0 /\ curr_serv^0-curr_serv^post3 == 0 /\ ___rho_2_^0-___rho_2_^post3 == 0 /\ resp^0-resp^post3 == 0 /\ -servers^post3+servers^0 == 0), cost: 1
   4: l6 -> l0 : resp^0'=resp^post4, ___rho_2_^0'=___rho_2_^post4, curr_serv^0'=curr_serv^post4, ___rho_1_^0'=___rho_1_^post4, servers^0'=servers^post4, c^0'=c^post4, (___rho_1_^0-___rho_1_^post4 == 0 /\ 1-curr_serv^0+curr_serv^post4 == 0 /\ ___rho_1_^0 <= 0 /\ -___rho_2_^post4+___rho_2_^0 == 0 /\ resp^0-resp^post4 == 0 /\ 1-curr_serv^0+c^0 <= 0 /\ -c^post4+c^0 == 0 /\ -servers^post4+servers^0 == 0), cost: 1
   5: l6 -> l0 : resp^0'=resp^post5, ___rho_2_^0'=___rho_2_^post5, curr_serv^0'=curr_serv^post5, ___rho_1_^0'=___rho_1_^post5, servers^0'=servers^post5, c^0'=c^post5, (-1-resp^0+resp^post5 == 0 /\ 1+c^post5-c^0 == 0 /\ 1+curr_serv^post5-curr_serv^0 == 0 /\ 1-___rho_1_^0 <= 0 /\ ___rho_1_^0-___rho_1_^post5 == 0 /\ servers^0-servers^post5 == 0 /\ ___rho_2_^0-___rho_2_^post5 == 0), cost: 1
   8: l7 -> l4 : resp^0'=resp^post8, ___rho_2_^0'=___rho_2_^post8, curr_serv^0'=curr_serv^post8, ___rho_1_^0'=___rho_1_^post8, servers^0'=servers^post8, c^0'=c^post8, (-servers^post8+servers^0 == 0 /\ -c^post8+c^0 == 0 /\ -___rho_1_^post8+___rho_1_^0 == 0 /\ curr_serv^0-curr_serv^post8 == 0 /\ ___rho_2_^0-___rho_2_^post8 == 0 /\ 6-c^0 <= 0 /\ resp^0-resp^post8 == 0), cost: 1
   9: l7 -> l0 : resp^0'=resp^post9, ___rho_2_^0'=___rho_2_^post9, curr_serv^0'=curr_serv^post9, ___rho_1_^0'=___rho_1_^post9, servers^0'=servers^post9, c^0'=c^post9, (-servers^post9+servers^0 == 0 /\ -___rho_1_^post9+___rho_1_^0 == 0 /\ ___rho_2_^0-___rho_2_^post9 == 0 /\ -c^post9+c^0 == 0 /\ curr_serv^0-curr_serv^post9 == 0 /\ -5+c^0 <= 0 /\ -resp^post9+resp^0 == 0), cost: 1
  10: l8 -> l7 : resp^0'=resp^post10, ___rho_2_^0'=___rho_2_^post10, curr_serv^0'=curr_serv^post10, ___rho_1_^0'=___rho_1_^post10, servers^0'=servers^post10, c^0'=c^post10, (0 == 0 /\ -4+servers^post10 == 0 /\ ___rho_1_^0-___rho_1_^post10 == 0 /\ -___rho_2_^post10+c^post10 == 0 /\ -servers^post10+curr_serv^post10 == 0 /\ resp^post10 == 0 /\ 1-c^post10 <= 0), cost: 1
  11: l9 -> l8 : resp^0'=resp^post11, ___rho_2_^0'=___rho_2_^post11, curr_serv^0'=curr_serv^post11, ___rho_1_^0'=___rho_1_^post11, servers^0'=servers^post11, c^0'=c^post11, (___rho_1_^0-___rho_1_^post11 == 0 /\ -c^post11+c^0 == 0 /\ resp^0-resp^post11 == 0 /\ curr_serv^0-curr_serv^post11 == 0 /\ ___rho_2_^0-___rho_2_^post11 == 0 /\ servers^0-servers^post11 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l9
   0: l0 -> l1 : resp^0'=resp^post0, ___rho_2_^0'=___rho_2_^post0, curr_serv^0'=curr_serv^post0, ___rho_1_^0'=___rho_1_^post0, servers^0'=servers^post0, c^0'=c^post0, (___rho_2_^0-___rho_2_^post0 == 0 /\ -curr_serv^post0+curr_serv^0 == 0 /\ -___rho_1_^post0+___rho_1_^0 == 0 /\ -c^post0+c^0 == 0 /\ servers^0-servers^post0 == 0 /\ resp^0-resp^post0 == 0), cost: 1
   6: l1 -> l6 : resp^0'=resp^post6, ___rho_2_^0'=___rho_2_^post6, curr_serv^0'=curr_serv^post6, ___rho_1_^0'=___rho_1_^post6, servers^0'=servers^post6, c^0'=c^post6, (0 == 0 /\ resp^0-resp^post6 == 0 /\ 1-curr_serv^0 <= 0 /\ -c^post6+c^0 == 0 /\ -curr_serv^post6+curr_serv^0 == 0 /\ servers^0-servers^post6 == 0 /\ ___rho_2_^0-___rho_2_^post6 == 0), cost: 1
   7: l1 -> l4 : resp^0'=resp^post7, ___rho_2_^0'=___rho_2_^post7, curr_serv^0'=curr_serv^post7, ___rho_1_^0'=___rho_1_^post7, servers^0'=servers^post7, c^0'=c^post7, (c^0-c^post7 == 0 /\ curr_serv^0 <= 0 /\ -servers^post7+servers^0 == 0 /\ resp^0-resp^post7 == 0 /\ curr_serv^0-curr_serv^post7 == 0 /\ ___rho_2_^0-___rho_2_^post7 == 0 /\ -___rho_1_^post7+___rho_1_^0 == 0), cost: 1
   2: l4 -> l5 : resp^0'=resp^post2, ___rho_2_^0'=___rho_2_^post2, curr_serv^0'=curr_serv^post2, ___rho_1_^0'=___rho_1_^post2, servers^0'=servers^post2, c^0'=c^post2, (-c^post2+c^0 == 0 /\ ___rho_1_^0-___rho_1_^post2 == 0 /\ ___rho_2_^0-___rho_2_^post2 == 0 /\ resp^0-resp^post2 == 0 /\ curr_serv^0-curr_serv^post2 == 0 /\ -servers^post2+servers^0 == 0), cost: 1
   3: l5 -> l4 : resp^0'=resp^post3, ___rho_2_^0'=___rho_2_^post3, curr_serv^0'=curr_serv^post3, ___rho_1_^0'=___rho_1_^post3, servers^0'=servers^post3, c^0'=c^post3, (___rho_1_^0-___rho_1_^post3 == 0 /\ -c^post3+c^0 == 0 /\ curr_serv^0-curr_serv^post3 == 0 /\ ___rho_2_^0-___rho_2_^post3 == 0 /\ resp^0-resp^post3 == 0 /\ -servers^post3+servers^0 == 0), cost: 1
   4: l6 -> l0 : resp^0'=resp^post4, ___rho_2_^0'=___rho_2_^post4, curr_serv^0'=curr_serv^post4, ___rho_1_^0'=___rho_1_^post4, servers^0'=servers^post4, c^0'=c^post4, (___rho_1_^0-___rho_1_^post4 == 0 /\ 1-curr_serv^0+curr_serv^post4 == 0 /\ ___rho_1_^0 <= 0 /\ -___rho_2_^post4+___rho_2_^0 == 0 /\ resp^0-resp^post4 == 0 /\ 1-curr_serv^0+c^0 <= 0 /\ -c^post4+c^0 == 0 /\ -servers^post4+servers^0 == 0), cost: 1
   5: l6 -> l0 : resp^0'=resp^post5, ___rho_2_^0'=___rho_2_^post5, curr_serv^0'=curr_serv^post5, ___rho_1_^0'=___rho_1_^post5, servers^0'=servers^post5, c^0'=c^post5, (-1-resp^0+resp^post5 == 0 /\ 1+c^post5-c^0 == 0 /\ 1+curr_serv^post5-curr_serv^0 == 0 /\ 1-___rho_1_^0 <= 0 /\ ___rho_1_^0-___rho_1_^post5 == 0 /\ servers^0-servers^post5 == 0 /\ ___rho_2_^0-___rho_2_^post5 == 0), cost: 1
   8: l7 -> l4 : resp^0'=resp^post8, ___rho_2_^0'=___rho_2_^post8, curr_serv^0'=curr_serv^post8, ___rho_1_^0'=___rho_1_^post8, servers^0'=servers^post8, c^0'=c^post8, (-servers^post8+servers^0 == 0 /\ -c^post8+c^0 == 0 /\ -___rho_1_^post8+___rho_1_^0 == 0 /\ curr_serv^0-curr_serv^post8 == 0 /\ ___rho_2_^0-___rho_2_^post8 == 0 /\ 6-c^0 <= 0 /\ resp^0-resp^post8 == 0), cost: 1
   9: l7 -> l0 : resp^0'=resp^post9, ___rho_2_^0'=___rho_2_^post9, curr_serv^0'=curr_serv^post9, ___rho_1_^0'=___rho_1_^post9, servers^0'=servers^post9, c^0'=c^post9, (-servers^post9+servers^0 == 0 /\ -___rho_1_^post9+___rho_1_^0 == 0 /\ ___rho_2_^0-___rho_2_^post9 == 0 /\ -c^post9+c^0 == 0 /\ curr_serv^0-curr_serv^post9 == 0 /\ -5+c^0 <= 0 /\ -resp^post9+resp^0 == 0), cost: 1
  10: l8 -> l7 : resp^0'=resp^post10, ___rho_2_^0'=___rho_2_^post10, curr_serv^0'=curr_serv^post10, ___rho_1_^0'=___rho_1_^post10, servers^0'=servers^post10, c^0'=c^post10, (0 == 0 /\ -4+servers^post10 == 0 /\ ___rho_1_^0-___rho_1_^post10 == 0 /\ -___rho_2_^post10+c^post10 == 0 /\ -servers^post10+curr_serv^post10 == 0 /\ resp^post10 == 0 /\ 1-c^post10 <= 0), cost: 1
  11: l9 -> l8 : resp^0'=resp^post11, ___rho_2_^0'=___rho_2_^post11, curr_serv^0'=curr_serv^post11, ___rho_1_^0'=___rho_1_^post11, servers^0'=servers^post11, c^0'=c^post11, (___rho_1_^0-___rho_1_^post11 == 0 /\ -c^post11+c^0 == 0 /\ resp^0-resp^post11 == 0 /\ curr_serv^0-curr_serv^post11 == 0 /\ ___rho_2_^0-___rho_2_^post11 == 0 /\ servers^0-servers^post11 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : resp^0'=resp^post0, ___rho_2_^0'=___rho_2_^post0, curr_serv^0'=curr_serv^post0, ___rho_1_^0'=___rho_1_^post0, servers^0'=servers^post0, c^0'=c^post0, (___rho_2_^0-___rho_2_^post0 == 0 /\ -curr_serv^post0+curr_serv^0 == 0 /\ -___rho_1_^post0+___rho_1_^0 == 0 /\ -c^post0+c^0 == 0 /\ servers^0-servers^post0 == 0 /\ resp^0-resp^post0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : resp^0'=resp^post2, ___rho_2_^0'=___rho_2_^post2, curr_serv^0'=curr_serv^post2, ___rho_1_^0'=___rho_1_^post2, servers^0'=servers^post2, c^0'=c^post2, (-c^post2+c^0 == 0 /\ ___rho_1_^0-___rho_1_^post2 == 0 /\ ___rho_2_^0-___rho_2_^post2 == 0 /\ resp^0-resp^post2 == 0 /\ curr_serv^0-curr_serv^post2 == 0 /\ -servers^post2+servers^0 == 0), cost: 1
New rule:
l4 -> l5 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : resp^0'=resp^post3, ___rho_2_^0'=___rho_2_^post3, curr_serv^0'=curr_serv^post3, ___rho_1_^0'=___rho_1_^post3, servers^0'=servers^post3, c^0'=c^post3, (___rho_1_^0-___rho_1_^post3 == 0 /\ -c^post3+c^0 == 0 /\ curr_serv^0-curr_serv^post3 == 0 /\ ___rho_2_^0-___rho_2_^post3 == 0 /\ resp^0-resp^post3 == 0 /\ -servers^post3+servers^0 == 0), cost: 1
New rule:
l5 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l0 : resp^0'=resp^post4, ___rho_2_^0'=___rho_2_^post4, curr_serv^0'=curr_serv^post4, ___rho_1_^0'=___rho_1_^post4, servers^0'=servers^post4, c^0'=c^post4, (___rho_1_^0-___rho_1_^post4 == 0 /\ 1-curr_serv^0+curr_serv^post4 == 0 /\ ___rho_1_^0 <= 0 /\ -___rho_2_^post4+___rho_2_^0 == 0 /\ resp^0-resp^post4 == 0 /\ 1-curr_serv^0+c^0 <= 0 /\ -c^post4+c^0 == 0 /\ -servers^post4+servers^0 == 0), cost: 1
New rule:
l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1

Applied preprocessing
Original rule:
l6 -> l0 : resp^0'=resp^post5, ___rho_2_^0'=___rho_2_^post5, curr_serv^0'=curr_serv^post5, ___rho_1_^0'=___rho_1_^post5, servers^0'=servers^post5, c^0'=c^post5, (-1-resp^0+resp^post5 == 0 /\ 1+c^post5-c^0 == 0 /\ 1+curr_serv^post5-curr_serv^0 == 0 /\ 1-___rho_1_^0 <= 0 /\ ___rho_1_^0-___rho_1_^post5 == 0 /\ servers^0-servers^post5 == 0 /\ ___rho_2_^0-___rho_2_^post5 == 0), cost: 1
New rule:
l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l6 : resp^0'=resp^post6, ___rho_2_^0'=___rho_2_^post6, curr_serv^0'=curr_serv^post6, ___rho_1_^0'=___rho_1_^post6, servers^0'=servers^post6, c^0'=c^post6, (0 == 0 /\ resp^0-resp^post6 == 0 /\ 1-curr_serv^0 <= 0 /\ -c^post6+c^0 == 0 /\ -curr_serv^post6+curr_serv^0 == 0 /\ servers^0-servers^post6 == 0 /\ ___rho_2_^0-___rho_2_^post6 == 0), cost: 1
New rule:
l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : resp^0'=resp^post7, ___rho_2_^0'=___rho_2_^post7, curr_serv^0'=curr_serv^post7, ___rho_1_^0'=___rho_1_^post7, servers^0'=servers^post7, c^0'=c^post7, (c^0-c^post7 == 0 /\ curr_serv^0 <= 0 /\ -servers^post7+servers^0 == 0 /\ resp^0-resp^post7 == 0 /\ curr_serv^0-curr_serv^post7 == 0 /\ ___rho_2_^0-___rho_2_^post7 == 0 /\ -___rho_1_^post7+___rho_1_^0 == 0), cost: 1
New rule:
l1 -> l4 : curr_serv^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l4 : resp^0'=resp^post8, ___rho_2_^0'=___rho_2_^post8, curr_serv^0'=curr_serv^post8, ___rho_1_^0'=___rho_1_^post8, servers^0'=servers^post8, c^0'=c^post8, (-servers^post8+servers^0 == 0 /\ -c^post8+c^0 == 0 /\ -___rho_1_^post8+___rho_1_^0 == 0 /\ curr_serv^0-curr_serv^post8 == 0 /\ ___rho_2_^0-___rho_2_^post8 == 0 /\ 6-c^0 <= 0 /\ resp^0-resp^post8 == 0), cost: 1
New rule:
l7 -> l4 : -6+c^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l0 : resp^0'=resp^post9, ___rho_2_^0'=___rho_2_^post9, curr_serv^0'=curr_serv^post9, ___rho_1_^0'=___rho_1_^post9, servers^0'=servers^post9, c^0'=c^post9, (-servers^post9+servers^0 == 0 /\ -___rho_1_^post9+___rho_1_^0 == 0 /\ ___rho_2_^0-___rho_2_^post9 == 0 /\ -c^post9+c^0 == 0 /\ curr_serv^0-curr_serv^post9 == 0 /\ -5+c^0 <= 0 /\ -resp^post9+resp^0 == 0), cost: 1
New rule:
l7 -> l0 : -5+c^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l8 -> l7 : resp^0'=resp^post10, ___rho_2_^0'=___rho_2_^post10, curr_serv^0'=curr_serv^post10, ___rho_1_^0'=___rho_1_^post10, servers^0'=servers^post10, c^0'=c^post10, (0 == 0 /\ -4+servers^post10 == 0 /\ ___rho_1_^0-___rho_1_^post10 == 0 /\ -___rho_2_^post10+c^post10 == 0 /\ -servers^post10+curr_serv^post10 == 0 /\ resp^post10 == 0 /\ 1-c^post10 <= 0), cost: 1
New rule:
l8 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 1

Applied preprocessing
Original rule:
l9 -> l8 : resp^0'=resp^post11, ___rho_2_^0'=___rho_2_^post11, curr_serv^0'=curr_serv^post11, ___rho_1_^0'=___rho_1_^post11, servers^0'=servers^post11, c^0'=c^post11, (___rho_1_^0-___rho_1_^post11 == 0 /\ -c^post11+c^0 == 0 /\ resp^0-resp^post11 == 0 /\ curr_serv^0-curr_serv^post11 == 0 /\ ___rho_2_^0-___rho_2_^post11 == 0 /\ servers^0-servers^post11 == 0), cost: 1
New rule:
l9 -> l8 : TRUE, cost: 1

Simplified rules
Start location: l9
  12: l0 -> l1 : TRUE, cost: 1
  17: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  18: l1 -> l4 : curr_serv^0 <= 0, cost: 1
  13: l4 -> l5 : TRUE, cost: 1
  14: l5 -> l4 : TRUE, cost: 1
  15: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  16: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  19: l7 -> l4 : -6+c^0 >= 0, cost: 1
  20: l7 -> l0 : -5+c^0 <= 0, cost: 1
  21: l8 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 1
  22: l9 -> l8 : TRUE, cost: 1


Eliminating location l8 by chaining:

Applied chaining
First rule:
l9 -> l8 : TRUE, cost: 1
Second rule:
l8 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 1
New rule:
l9 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 2

Applied deletion
Removed the following rules: 21 22

Eliminating location l5 by chaining:

Applied chaining
First rule:
l4 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l4 : TRUE, cost: 1
New rule:
l4 -> l4 : TRUE, cost: 2

Applied deletion
Removed the following rules: 13 14

Eliminated locations on linear paths
Start location: l9
  12: l0 -> l1 : TRUE, cost: 1
  17: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  18: l1 -> l4 : curr_serv^0 <= 0, cost: 1
  24: l4 -> l4 : TRUE, cost: 2
  15: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  16: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  19: l7 -> l4 : -6+c^0 >= 0, cost: 1
  20: l7 -> l0 : -5+c^0 <= 0, cost: 1
  23: l9 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 2


Applied nonterm
Original rule:
l4 -> l4 : TRUE, cost: 2
New rule:
l4 -> [10] : n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_omgfji.txt

Applied deletion
Removed the following rules: 24

Accelerated simple loops
Start location: l9
  12: l0 -> l1 : TRUE, cost: 1
  17: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  18: l1 -> l4 : curr_serv^0 <= 0, cost: 1
  25: l4 -> [10] : n >= 0, cost: NONTERM
  15: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  16: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  19: l7 -> l4 : -6+c^0 >= 0, cost: 1
  20: l7 -> l0 : -5+c^0 <= 0, cost: 1
  23: l9 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 2


Applied chaining
First rule:
l1 -> l4 : curr_serv^0 <= 0, cost: 1
Second rule:
l4 -> [10] : n >= 0, cost: NONTERM
New rule:
l1 -> [10] : curr_serv^0 <= 0, cost: NONTERM

Applied chaining
First rule:
l7 -> l4 : -6+c^0 >= 0, cost: 1
Second rule:
l4 -> [10] : n >= 0, cost: NONTERM
New rule:
l7 -> [10] : -6+c^0 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 25

Chained accelerated rules with incoming rules
Start location: l9
  12: l0 -> l1 : TRUE, cost: 1
  17: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  18: l1 -> l4 : curr_serv^0 <= 0, cost: 1
  26: l1 -> [10] : curr_serv^0 <= 0, cost: NONTERM
  15: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  16: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  19: l7 -> l4 : -6+c^0 >= 0, cost: 1
  20: l7 -> l0 : -5+c^0 <= 0, cost: 1
  27: l7 -> [10] : -6+c^0 >= 0, cost: NONTERM
  23: l9 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l9
  12: l0 -> l1 : TRUE, cost: 1
  17: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  26: l1 -> [10] : curr_serv^0 <= 0, cost: NONTERM
  15: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  16: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  20: l7 -> l0 : -5+c^0 <= 0, cost: 1
  27: l7 -> [10] : -6+c^0 >= 0, cost: NONTERM
  23: l9 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 2


Eliminating location l7 by chaining:

Applied chaining
First rule:
l9 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 2
Second rule:
l7 -> l0 : -5+c^0 <= 0, cost: 1
New rule:
l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, (-5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 3

Applied chaining
First rule:
l9 -> l7 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, -1+c^post10 >= 0, cost: 2
Second rule:
l7 -> [10] : -6+c^0 >= 0, cost: NONTERM
New rule:
l9 -> [10] : (-6+c^post10 >= 0 /\ -1+c^post10 >= 0), cost: NONTERM

Applied simplification
Original rule:
l9 -> [10] : (-6+c^post10 >= 0 /\ -1+c^post10 >= 0), cost: NONTERM
New rule:
l9 -> [10] : -6+c^post10 >= 0, cost: NONTERM

Applied deletion
Removed the following rules: 20 23 27

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : TRUE, cost: 1
Second rule:
l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
New rule:
l0 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 2

Applied chaining
First rule:
l0 -> l1 : TRUE, cost: 1
Second rule:
l1 -> [10] : curr_serv^0 <= 0, cost: NONTERM
New rule:
l0 -> [10] : curr_serv^0 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 12 17 26

Eliminated locations on tree-shaped paths
Start location: l9
  30: l0 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 2
  31: l0 -> [10] : curr_serv^0 <= 0, cost: NONTERM
  15: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  16: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  28: l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, (-5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 3
  29: l9 -> [10] : -6+c^post10 >= 0, cost: NONTERM


Eliminating location l6 by chaining:

Applied chaining
First rule:
l0 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 2
Second rule:
l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
New rule:
l0 -> l0 : curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 3

Applied chaining
First rule:
l0 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 2
Second rule:
l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
New rule:
l0 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-1+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3

Applied deletion
Removed the following rules: 15 16 30

Eliminated locations on tree-shaped paths
Start location: l9
  31: l0 -> [10] : curr_serv^0 <= 0, cost: NONTERM
  32: l0 -> l0 : curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 3
  33: l0 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-1+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3
  28: l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, (-5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 3
  29: l9 -> [10] : -6+c^post10 >= 0, cost: NONTERM


Applied acceleration
Original rule:
l0 -> l0 : curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 3
New rule:
l0 -> l0 : curr_serv^0'=-n0+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, (-___rho_1_^post6 >= 0 /\ -n0+curr_serv^0 >= 0 /\ -n0+curr_serv^0-c^0 >= 0 /\ -1+n0 >= 0), cost: 3*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_Ecfbgd.txt

Applied instantiation
Original rule:
l0 -> l0 : curr_serv^0'=-n0+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, (-___rho_1_^post6 >= 0 /\ -n0+curr_serv^0 >= 0 /\ -n0+curr_serv^0-c^0 >= 0 /\ -1+n0 >= 0), cost: 3*n0
New rule:
l0 -> l0 : curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, (0 >= 0 /\ -___rho_1_^post6 >= 0 /\ -1+curr_serv^0 >= 0 /\ -c^0 >= 0), cost: 3*curr_serv^0

Applied instantiation
Original rule:
l0 -> l0 : curr_serv^0'=-n0+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, (-___rho_1_^post6 >= 0 /\ -n0+curr_serv^0 >= 0 /\ -n0+curr_serv^0-c^0 >= 0 /\ -1+n0 >= 0), cost: 3*n0
New rule:
l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (0 >= 0 /\ -___rho_1_^post6 >= 0 /\ -1+curr_serv^0-c^0 >= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0

Applied acceleration
Original rule:
l0 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-1+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3
New rule:
l0 -> l0 : resp^0'=resp^0+n1, curr_serv^0'=-n1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-n1+c^0, (-1+___rho_1_^post6 >= 0 /\ -1+n1 >= 0 /\ -n1+curr_serv^0 >= 0), cost: 3*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_iJOAKK.txt

Applied instantiation
Original rule:
l0 -> l0 : resp^0'=resp^0+n1, curr_serv^0'=-n1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-n1+c^0, (-1+___rho_1_^post6 >= 0 /\ -1+n1 >= 0 /\ -n1+curr_serv^0 >= 0), cost: 3*n1
New rule:
l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (0 >= 0 /\ -1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0

Applied simplification
Original rule:
l0 -> l0 : curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, (0 >= 0 /\ -___rho_1_^post6 >= 0 /\ -1+curr_serv^0 >= 0 /\ -c^0 >= 0), cost: 3*curr_serv^0
New rule:
l0 -> l0 : curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 <= 0), cost: 3*curr_serv^0

Applied simplification
Original rule:
l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (0 >= 0 /\ -___rho_1_^post6 >= 0 /\ -1+curr_serv^0-c^0 >= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0
New rule:
l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0-c^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0

Applied simplification
Original rule:
l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (0 >= 0 /\ -1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0
New rule:
l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0

Applied deletion
Removed the following rules: 32 33

Accelerated simple loops
Start location: l9
  31: l0 -> [10] : curr_serv^0 <= 0, cost: NONTERM
  37: l0 -> l0 : curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 <= 0), cost: 3*curr_serv^0
  38: l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0-c^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0
  39: l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0
  28: l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, (-5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 3
  29: l9 -> [10] : -6+c^post10 >= 0, cost: NONTERM


Applied chaining
First rule:
l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, (-5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 3
Second rule:
l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0-c^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0
New rule:
l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=c^post10, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=c^post10, (-3+c^post10 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post10 >= 0), cost: 15-3*c^post10

Applied chaining
First rule:
l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, (-5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 3
Second rule:
l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0
New rule:
l9 -> l0 : resp^0'=4, ___rho_2_^0'=c^post10, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=-4+c^post10, (-1+___rho_1_^post6 >= 0 /\ -5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 15

Applied deletion
Removed the following rules: 37 38 39

Chained accelerated rules with incoming rules
Start location: l9
  31: l0 -> [10] : curr_serv^0 <= 0, cost: NONTERM
  28: l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=4, servers^0'=4, c^0'=c^post10, (-5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 3
  29: l9 -> [10] : -6+c^post10 >= 0, cost: NONTERM
  40: l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=c^post10, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=c^post10, (-3+c^post10 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post10 >= 0), cost: 15-3*c^post10
  41: l9 -> l0 : resp^0'=4, ___rho_2_^0'=c^post10, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=-4+c^post10, (-1+___rho_1_^post6 >= 0 /\ -5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 15


Eliminating location l0 by chaining:

Applied chaining
First rule:
l9 -> l0 : resp^0'=4, ___rho_2_^0'=c^post10, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=-4+c^post10, (-1+___rho_1_^post6 >= 0 /\ -5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: 15
Second rule:
l0 -> [10] : curr_serv^0 <= 0, cost: NONTERM
New rule:
l9 -> [10] : (0 <= 0 /\ -1+___rho_1_^post6 >= 0 /\ -5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: NONTERM

Applied simplification
Original rule:
l9 -> [10] : (0 <= 0 /\ -1+___rho_1_^post6 >= 0 /\ -5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: NONTERM
New rule:
l9 -> [10] : (-1+___rho_1_^post6 >= 0 /\ -5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: NONTERM

Applied partial deletion
Original rule:
l9 -> l0 : resp^0'=0, ___rho_2_^0'=c^post10, curr_serv^0'=c^post10, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=c^post10, (-3+c^post10 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post10 >= 0), cost: 15-3*c^post10
New rule:
l9 -> [12] : (-3+c^post10 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post10 >= 0), cost: 15-3*c^post10

Applied deletion
Removed the following rules: 28 31 40 41

Eliminated locations on tree-shaped paths
Start location: l9
  29: l9 -> [10] : -6+c^post10 >= 0, cost: NONTERM
  42: l9 -> [10] : (-1+___rho_1_^post6 >= 0 /\ -5+c^post10 <= 0 /\ -1+c^post10 >= 0), cost: NONTERM
  43: l9 -> [12] : (-3+c^post10 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post10 >= 0), cost: 15-3*c^post10


Computing asymptotic complexity
Proved nontermination of rule 29 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  -6+c^post10 >= 0
