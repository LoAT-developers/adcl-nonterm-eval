WORST_CASE(Omega(0),?)

Initial ITS
Start location: l8
   0: l0 -> l1 : maxId^0'=maxId^post0, tmp___0^0'=tmp___0^post0, id^0'=id^post0, tmp^0'=tmp^post0, (tmp___0^0-tmp___0^post0 == 0 /\ maxId^0-maxId^post0 == 0 /\ id^0-id^post0 == 0 /\ 1+maxId^0-tmp^0 <= 0 /\ tmp^post0 == 0), cost: 1
   1: l0 -> l1 : maxId^0'=maxId^post1, tmp___0^0'=tmp___0^post1, id^0'=id^post1, tmp^0'=tmp^post1, (id^0-id^post1 == 0 /\ -1+tmp^post1-tmp^0 == 0 /\ tmp___0^0-tmp___0^post1 == 0 /\ maxId^0-maxId^post1 == 0 /\ -maxId^0+tmp^0 <= 0), cost: 1
   9: l1 -> l5 : maxId^0'=maxId^post9, tmp___0^0'=tmp___0^post9, id^0'=id^post9, tmp^0'=tmp^post9, (-tmp^post9+tmp^0 == 0 /\ tmp___0^0-tmp___0^post9 == 0 /\ maxId^0-maxId^post9 == 0 /\ id^0-id^post9 == 0), cost: 1
   2: l2 -> l3 : maxId^0'=maxId^post2, tmp___0^0'=tmp___0^post2, id^0'=id^post2, tmp^0'=tmp^post2, (-tmp___0^0 <= 0 /\ -tmp___0^post2+tmp___0^0 == 0 /\ maxId^0-maxId^post2 == 0 /\ tmp___0^0 <= 0 /\ -id^post2+id^0 == 0 /\ -tmp^post2+tmp^0 == 0), cost: 1
   3: l2 -> l0 : maxId^0'=maxId^post3, tmp___0^0'=tmp___0^post3, id^0'=id^post3, tmp^0'=tmp^post3, (-id^post3+id^0 == 0 /\ 1-tmp___0^0 <= 0 /\ -tmp^post3+tmp^0 == 0 /\ -tmp___0^post3+tmp___0^0 == 0 /\ maxId^0-maxId^post3 == 0), cost: 1
   4: l2 -> l0 : maxId^0'=maxId^post4, tmp___0^0'=tmp___0^post4, id^0'=id^post4, tmp^0'=tmp^post4, (-id^post4+id^0 == 0 /\ -tmp^post4+tmp^0 == 0 /\ -tmp___0^post4+tmp___0^0 == 0 /\ -maxId^post4+maxId^0 == 0 /\ 1+tmp___0^0 <= 0), cost: 1
  10: l3 -> l6 : maxId^0'=maxId^post10, tmp___0^0'=tmp___0^post10, id^0'=id^post10, tmp^0'=tmp^post10, (maxId^0-maxId^post10 == 0 /\ id^0-id^post10 == 0 /\ -tmp^post10+tmp^0 == 0 /\ tmp___0^0-tmp___0^post10 == 0), cost: 1
   5: l4 -> l2 : maxId^0'=maxId^post5, tmp___0^0'=tmp___0^post5, id^0'=id^post5, tmp^0'=tmp^post5, (0 == 0 /\ tmp^0-tmp^post5 == 0 /\ maxId^0-maxId^post5 == 0 /\ id^0-id^post5 == 0), cost: 1
   6: l5 -> l3 : maxId^0'=maxId^post6, tmp___0^0'=tmp___0^post6, id^0'=id^post6, tmp^0'=tmp^post6, (maxId^0-maxId^post6 == 0 /\ id^0-tmp^0 <= 0 /\ id^0-id^post6 == 0 /\ -id^0+tmp^0 <= 0 /\ tmp___0^0-tmp___0^post6 == 0 /\ -tmp^post6+tmp^0 == 0), cost: 1
   7: l5 -> l4 : maxId^0'=maxId^post7, tmp___0^0'=tmp___0^post7, id^0'=id^post7, tmp^0'=tmp^post7, (-tmp^post7+tmp^0 == 0 /\ 1+id^0-tmp^0 <= 0 /\ -id^post7+id^0 == 0 /\ -tmp___0^post7+tmp___0^0 == 0 /\ maxId^0-maxId^post7 == 0), cost: 1
   8: l5 -> l4 : maxId^0'=maxId^post8, tmp___0^0'=tmp___0^post8, id^0'=id^post8, tmp^0'=tmp^post8, (tmp^0-tmp^post8 == 0 /\ 1-id^0+tmp^0 <= 0 /\ -id^post8+id^0 == 0 /\ -maxId^post8+maxId^0 == 0 /\ tmp___0^0-tmp___0^post8 == 0), cost: 1
  11: l7 -> l1 : maxId^0'=maxId^post11, tmp___0^0'=tmp___0^post11, id^0'=id^post11, tmp^0'=tmp^post11, (-tmp___0^post11+tmp___0^0 == 0 /\ maxId^0-maxId^post11 == 0 /\ -maxId^0+id^0 <= 0 /\ -id^post11+id^0 == 0 /\ -id^0 <= 0 /\ -1+tmp^post11-id^0 == 0), cost: 1
  12: l8 -> l7 : maxId^0'=maxId^post12, tmp___0^0'=tmp___0^post12, id^0'=id^post12, tmp^0'=tmp^post12, (-tmp___0^post12+tmp___0^0 == 0 /\ -id^post12+id^0 == 0 /\ -tmp^post12+tmp^0 == 0 /\ maxId^0-maxId^post12 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l8
   0: l0 -> l1 : maxId^0'=maxId^post0, tmp___0^0'=tmp___0^post0, id^0'=id^post0, tmp^0'=tmp^post0, (tmp___0^0-tmp___0^post0 == 0 /\ maxId^0-maxId^post0 == 0 /\ id^0-id^post0 == 0 /\ 1+maxId^0-tmp^0 <= 0 /\ tmp^post0 == 0), cost: 1
   1: l0 -> l1 : maxId^0'=maxId^post1, tmp___0^0'=tmp___0^post1, id^0'=id^post1, tmp^0'=tmp^post1, (id^0-id^post1 == 0 /\ -1+tmp^post1-tmp^0 == 0 /\ tmp___0^0-tmp___0^post1 == 0 /\ maxId^0-maxId^post1 == 0 /\ -maxId^0+tmp^0 <= 0), cost: 1
   9: l1 -> l5 : maxId^0'=maxId^post9, tmp___0^0'=tmp___0^post9, id^0'=id^post9, tmp^0'=tmp^post9, (-tmp^post9+tmp^0 == 0 /\ tmp___0^0-tmp___0^post9 == 0 /\ maxId^0-maxId^post9 == 0 /\ id^0-id^post9 == 0), cost: 1
   3: l2 -> l0 : maxId^0'=maxId^post3, tmp___0^0'=tmp___0^post3, id^0'=id^post3, tmp^0'=tmp^post3, (-id^post3+id^0 == 0 /\ 1-tmp___0^0 <= 0 /\ -tmp^post3+tmp^0 == 0 /\ -tmp___0^post3+tmp___0^0 == 0 /\ maxId^0-maxId^post3 == 0), cost: 1
   4: l2 -> l0 : maxId^0'=maxId^post4, tmp___0^0'=tmp___0^post4, id^0'=id^post4, tmp^0'=tmp^post4, (-id^post4+id^0 == 0 /\ -tmp^post4+tmp^0 == 0 /\ -tmp___0^post4+tmp___0^0 == 0 /\ -maxId^post4+maxId^0 == 0 /\ 1+tmp___0^0 <= 0), cost: 1
   5: l4 -> l2 : maxId^0'=maxId^post5, tmp___0^0'=tmp___0^post5, id^0'=id^post5, tmp^0'=tmp^post5, (0 == 0 /\ tmp^0-tmp^post5 == 0 /\ maxId^0-maxId^post5 == 0 /\ id^0-id^post5 == 0), cost: 1
   7: l5 -> l4 : maxId^0'=maxId^post7, tmp___0^0'=tmp___0^post7, id^0'=id^post7, tmp^0'=tmp^post7, (-tmp^post7+tmp^0 == 0 /\ 1+id^0-tmp^0 <= 0 /\ -id^post7+id^0 == 0 /\ -tmp___0^post7+tmp___0^0 == 0 /\ maxId^0-maxId^post7 == 0), cost: 1
   8: l5 -> l4 : maxId^0'=maxId^post8, tmp___0^0'=tmp___0^post8, id^0'=id^post8, tmp^0'=tmp^post8, (tmp^0-tmp^post8 == 0 /\ 1-id^0+tmp^0 <= 0 /\ -id^post8+id^0 == 0 /\ -maxId^post8+maxId^0 == 0 /\ tmp___0^0-tmp___0^post8 == 0), cost: 1
  11: l7 -> l1 : maxId^0'=maxId^post11, tmp___0^0'=tmp___0^post11, id^0'=id^post11, tmp^0'=tmp^post11, (-tmp___0^post11+tmp___0^0 == 0 /\ maxId^0-maxId^post11 == 0 /\ -maxId^0+id^0 <= 0 /\ -id^post11+id^0 == 0 /\ -id^0 <= 0 /\ -1+tmp^post11-id^0 == 0), cost: 1
  12: l8 -> l7 : maxId^0'=maxId^post12, tmp___0^0'=tmp___0^post12, id^0'=id^post12, tmp^0'=tmp^post12, (-tmp___0^post12+tmp___0^0 == 0 /\ -id^post12+id^0 == 0 /\ -tmp^post12+tmp^0 == 0 /\ maxId^0-maxId^post12 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : maxId^0'=maxId^post0, tmp___0^0'=tmp___0^post0, id^0'=id^post0, tmp^0'=tmp^post0, (tmp___0^0-tmp___0^post0 == 0 /\ maxId^0-maxId^post0 == 0 /\ id^0-id^post0 == 0 /\ 1+maxId^0-tmp^0 <= 0 /\ tmp^post0 == 0), cost: 1
New rule:
l0 -> l1 : tmp^0'=0, 1+maxId^0-tmp^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l0 -> l1 : maxId^0'=maxId^post1, tmp___0^0'=tmp___0^post1, id^0'=id^post1, tmp^0'=tmp^post1, (id^0-id^post1 == 0 /\ -1+tmp^post1-tmp^0 == 0 /\ tmp___0^0-tmp___0^post1 == 0 /\ maxId^0-maxId^post1 == 0 /\ -maxId^0+tmp^0 <= 0), cost: 1
New rule:
l0 -> l1 : tmp^0'=1+tmp^0, -maxId^0+tmp^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : maxId^0'=maxId^post3, tmp___0^0'=tmp___0^post3, id^0'=id^post3, tmp^0'=tmp^post3, (-id^post3+id^0 == 0 /\ 1-tmp___0^0 <= 0 /\ -tmp^post3+tmp^0 == 0 /\ -tmp___0^post3+tmp___0^0 == 0 /\ maxId^0-maxId^post3 == 0), cost: 1
New rule:
l2 -> l0 : -1+tmp___0^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : maxId^0'=maxId^post4, tmp___0^0'=tmp___0^post4, id^0'=id^post4, tmp^0'=tmp^post4, (-id^post4+id^0 == 0 /\ -tmp^post4+tmp^0 == 0 /\ -tmp___0^post4+tmp___0^0 == 0 /\ -maxId^post4+maxId^0 == 0 /\ 1+tmp___0^0 <= 0), cost: 1
New rule:
l2 -> l0 : 1+tmp___0^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l4 -> l2 : maxId^0'=maxId^post5, tmp___0^0'=tmp___0^post5, id^0'=id^post5, tmp^0'=tmp^post5, (0 == 0 /\ tmp^0-tmp^post5 == 0 /\ maxId^0-maxId^post5 == 0 /\ id^0-id^post5 == 0), cost: 1
New rule:
l4 -> l2 : tmp___0^0'=tmp___0^post5, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : maxId^0'=maxId^post7, tmp___0^0'=tmp___0^post7, id^0'=id^post7, tmp^0'=tmp^post7, (-tmp^post7+tmp^0 == 0 /\ 1+id^0-tmp^0 <= 0 /\ -id^post7+id^0 == 0 /\ -tmp___0^post7+tmp___0^0 == 0 /\ maxId^0-maxId^post7 == 0), cost: 1
New rule:
l5 -> l4 : 1+id^0-tmp^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : maxId^0'=maxId^post8, tmp___0^0'=tmp___0^post8, id^0'=id^post8, tmp^0'=tmp^post8, (tmp^0-tmp^post8 == 0 /\ 1-id^0+tmp^0 <= 0 /\ -id^post8+id^0 == 0 /\ -maxId^post8+maxId^0 == 0 /\ tmp___0^0-tmp___0^post8 == 0), cost: 1
New rule:
l5 -> l4 : 1-id^0+tmp^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l5 : maxId^0'=maxId^post9, tmp___0^0'=tmp___0^post9, id^0'=id^post9, tmp^0'=tmp^post9, (-tmp^post9+tmp^0 == 0 /\ tmp___0^0-tmp___0^post9 == 0 /\ maxId^0-maxId^post9 == 0 /\ id^0-id^post9 == 0), cost: 1
New rule:
l1 -> l5 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l1 : maxId^0'=maxId^post11, tmp___0^0'=tmp___0^post11, id^0'=id^post11, tmp^0'=tmp^post11, (-tmp___0^post11+tmp___0^0 == 0 /\ maxId^0-maxId^post11 == 0 /\ -maxId^0+id^0 <= 0 /\ -id^post11+id^0 == 0 /\ -id^0 <= 0 /\ -1+tmp^post11-id^0 == 0), cost: 1
New rule:
l7 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 1

Applied preprocessing
Original rule:
l8 -> l7 : maxId^0'=maxId^post12, tmp___0^0'=tmp___0^post12, id^0'=id^post12, tmp^0'=tmp^post12, (-tmp___0^post12+tmp___0^0 == 0 /\ -id^post12+id^0 == 0 /\ -tmp^post12+tmp^0 == 0 /\ maxId^0-maxId^post12 == 0), cost: 1
New rule:
l8 -> l7 : TRUE, cost: 1

Simplified rules
Start location: l8
  13: l0 -> l1 : tmp^0'=0, 1+maxId^0-tmp^0 <= 0, cost: 1
  14: l0 -> l1 : tmp^0'=1+tmp^0, -maxId^0+tmp^0 <= 0, cost: 1
  20: l1 -> l5 : TRUE, cost: 1
  15: l2 -> l0 : -1+tmp___0^0 >= 0, cost: 1
  16: l2 -> l0 : 1+tmp___0^0 <= 0, cost: 1
  17: l4 -> l2 : tmp___0^0'=tmp___0^post5, 0 == 0, cost: 1
  18: l5 -> l4 : 1+id^0-tmp^0 <= 0, cost: 1
  19: l5 -> l4 : 1-id^0+tmp^0 <= 0, cost: 1
  21: l7 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 1
  22: l8 -> l7 : TRUE, cost: 1


Eliminating location l7 by chaining:

Applied chaining
First rule:
l8 -> l7 : TRUE, cost: 1
Second rule:
l7 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 1
New rule:
l8 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 2

Applied deletion
Removed the following rules: 21 22

Eliminated locations on linear paths
Start location: l8
  13: l0 -> l1 : tmp^0'=0, 1+maxId^0-tmp^0 <= 0, cost: 1
  14: l0 -> l1 : tmp^0'=1+tmp^0, -maxId^0+tmp^0 <= 0, cost: 1
  20: l1 -> l5 : TRUE, cost: 1
  15: l2 -> l0 : -1+tmp___0^0 >= 0, cost: 1
  16: l2 -> l0 : 1+tmp___0^0 <= 0, cost: 1
  17: l4 -> l2 : tmp___0^0'=tmp___0^post5, 0 == 0, cost: 1
  18: l5 -> l4 : 1+id^0-tmp^0 <= 0, cost: 1
  19: l5 -> l4 : 1-id^0+tmp^0 <= 0, cost: 1
  23: l8 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 2


Eliminating location l5 by chaining:

Applied chaining
First rule:
l1 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l4 : 1+id^0-tmp^0 <= 0, cost: 1
New rule:
l1 -> l4 : 1+id^0-tmp^0 <= 0, cost: 2

Applied chaining
First rule:
l1 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l4 : 1-id^0+tmp^0 <= 0, cost: 1
New rule:
l1 -> l4 : 1-id^0+tmp^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 18 19 20

Eliminating location l2 by chaining:

Applied chaining
First rule:
l4 -> l2 : tmp___0^0'=tmp___0^post5, 0 == 0, cost: 1
Second rule:
l2 -> l0 : -1+tmp___0^0 >= 0, cost: 1
New rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, (0 == 0 /\ -1+tmp___0^post5 >= 0), cost: 2

Applied simplification
Original rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, (0 == 0 /\ -1+tmp___0^post5 >= 0), cost: 2
New rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, -1+tmp___0^post5 >= 0, cost: 2

Applied chaining
First rule:
l4 -> l2 : tmp___0^0'=tmp___0^post5, 0 == 0, cost: 1
Second rule:
l2 -> l0 : 1+tmp___0^0 <= 0, cost: 1
New rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, (0 == 0 /\ 1+tmp___0^post5 <= 0), cost: 2

Applied simplification
Original rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, (0 == 0 /\ 1+tmp___0^post5 <= 0), cost: 2
New rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, 1+tmp___0^post5 <= 0, cost: 2

Applied deletion
Removed the following rules: 15 16 17

Eliminated locations on tree-shaped paths
Start location: l8
  13: l0 -> l1 : tmp^0'=0, 1+maxId^0-tmp^0 <= 0, cost: 1
  14: l0 -> l1 : tmp^0'=1+tmp^0, -maxId^0+tmp^0 <= 0, cost: 1
  24: l1 -> l4 : 1+id^0-tmp^0 <= 0, cost: 2
  25: l1 -> l4 : 1-id^0+tmp^0 <= 0, cost: 2
  26: l4 -> l0 : tmp___0^0'=tmp___0^post5, -1+tmp___0^post5 >= 0, cost: 2
  27: l4 -> l0 : tmp___0^0'=tmp___0^post5, 1+tmp___0^post5 <= 0, cost: 2
  23: l8 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 2


Eliminating location l4 by chaining:

Applied chaining
First rule:
l1 -> l4 : 1+id^0-tmp^0 <= 0, cost: 2
Second rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, -1+tmp___0^post5 >= 0, cost: 2
New rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 4

Applied chaining
First rule:
l1 -> l4 : 1+id^0-tmp^0 <= 0, cost: 2
Second rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, 1+tmp___0^post5 <= 0, cost: 2
New rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0), cost: 4

Applied chaining
First rule:
l1 -> l4 : 1-id^0+tmp^0 <= 0, cost: 2
Second rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, -1+tmp___0^post5 >= 0, cost: 2
New rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 4

Applied chaining
First rule:
l1 -> l4 : 1-id^0+tmp^0 <= 0, cost: 2
Second rule:
l4 -> l0 : tmp___0^0'=tmp___0^post5, 1+tmp___0^post5 <= 0, cost: 2
New rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0), cost: 4

Applied deletion
Removed the following rules: 24 25 26 27

Eliminated locations on tree-shaped paths
Start location: l8
  13: l0 -> l1 : tmp^0'=0, 1+maxId^0-tmp^0 <= 0, cost: 1
  14: l0 -> l1 : tmp^0'=1+tmp^0, -maxId^0+tmp^0 <= 0, cost: 1
  28: l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 4
  29: l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0), cost: 4
  30: l1 -> l0 : tmp___0^0'=tmp___0^post5, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 4
  31: l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0), cost: 4
  23: l8 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 2


Eliminating location l0 by chaining:

Applied chaining
First rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 4
Second rule:
l0 -> l1 : tmp^0'=0, 1+maxId^0-tmp^0 <= 0, cost: 1
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5

Applied chaining
First rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 4
Second rule:
l0 -> l1 : tmp^0'=1+tmp^0, -maxId^0+tmp^0 <= 0, cost: 1
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5

Applied chaining
First rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0), cost: 4
Second rule:
l0 -> l1 : tmp^0'=0, 1+maxId^0-tmp^0 <= 0, cost: 1
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5

Applied chaining
First rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0), cost: 4
Second rule:
l0 -> l1 : tmp^0'=1+tmp^0, -maxId^0+tmp^0 <= 0, cost: 1
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5

Applied chaining
First rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 4
Second rule:
l0 -> l1 : tmp^0'=0, 1+maxId^0-tmp^0 <= 0, cost: 1
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5

Applied chaining
First rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 4
Second rule:
l0 -> l1 : tmp^0'=1+tmp^0, -maxId^0+tmp^0 <= 0, cost: 1
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5

Applied chaining
First rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0), cost: 4
Second rule:
l0 -> l1 : tmp^0'=0, 1+maxId^0-tmp^0 <= 0, cost: 1
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5

Applied chaining
First rule:
l1 -> l0 : tmp___0^0'=tmp___0^post5, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0), cost: 4
Second rule:
l0 -> l1 : tmp^0'=1+tmp^0, -maxId^0+tmp^0 <= 0, cost: 1
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5

Applied deletion
Removed the following rules: 13 14 28 29 30 31

Eliminated locations on tree-shaped paths
Start location: l8
  32: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
  33: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
  34: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
  35: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
  36: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
  37: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
  38: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
  39: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
  23: l8 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 2


Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-id^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+n >= 0), cost: 5*n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_MmGdNH.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
New rule:
l1 -> [9] : (-1-maxId^0+tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gCkeaJ.txt

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n0+tmp^0, (-1+n0 >= 0 /\ 1+maxId^0-n0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hFACDE.txt

Applied instantiation
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n0+tmp^0, (-1+n0 >= 0 /\ 1+maxId^0-n0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5*n0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-tmp___0^post5 >= 0 /\ -1+n1 >= 0 /\ -1-id^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ilIICL.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_IhPLlc.txt

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n2+tmp^0, (-1-tmp___0^post5 >= 0 /\ 1+maxId^0-n2-tmp^0 >= 0 /\ -1+n2 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fdbKdG.txt

Applied instantiation
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n2+tmp^0, (-1-tmp___0^post5 >= 0 /\ 1+maxId^0-n2-tmp^0 >= 0 /\ -1+n2 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5*n2
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5+5*maxId^0-5*tmp^0

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+n3 >= 0 /\ -1+id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*n3
Sub-proof via acceration calculus written to file:///tmp/tmpnam_CjHPDB.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
New rule:
l1 -> [9] : (-1-maxId^0+tmp^0 >= 0 /\ -tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_jjpjDb.txt

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n4+tmp^0, (1-n4+maxId^0-tmp^0 >= 0 /\ -n4+id^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+n4 >= 0), cost: 5*n4
Sub-proof via acceration calculus written to file:///tmp/tmpnam_licCpi.txt

Applied instantiation
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n4+tmp^0, (1-n4+maxId^0-tmp^0 >= 0 /\ -n4+id^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+n4 >= 0), cost: 5*n4
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=id^0, (0 >= 0 /\ 1+maxId^0-id^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*id^0-5*tmp^0

Applied instantiation
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n4+tmp^0, (1-n4+maxId^0-tmp^0 >= 0 /\ -n4+id^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+n4 >= 0), cost: 5*n4
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-tmp___0^post5 >= 0 /\ -1+n5 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1+id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*n5
Sub-proof via acceration calculus written to file:///tmp/tmpnam_DdcKEi.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -tmp^0 <= 0 /\ tmp^0 <= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FcfBGO.txt

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n6+tmp^0, (-1-tmp___0^post5 >= 0 /\ -n6+id^0-tmp^0 >= 0 /\ -1+n6 >= 0 /\ 1-n6+maxId^0-tmp^0 >= 0), cost: 5*n6
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GmAGpE.txt

Applied instantiation
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n6+tmp^0, (-1-tmp___0^post5 >= 0 /\ -n6+id^0-tmp^0 >= 0 /\ -1+n6 >= 0 /\ 1-n6+maxId^0-tmp^0 >= 0), cost: 5*n6
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=id^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ 1+maxId^0-id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*id^0-5*tmp^0

Applied instantiation
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=n6+tmp^0, (-1-tmp___0^post5 >= 0 /\ -n6+id^0-tmp^0 >= 0 /\ -1+n6 >= 0 /\ 1-n6+maxId^0-tmp^0 >= 0), cost: 5*n6
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0), cost: 5+5*maxId^0-5*tmp^0

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 2-id^0+tmp^0 <= 0 /\ maxId^0-tmp^0 == 0), cost: 10

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 2-id^0+tmp^0 <= 0 /\ maxId^0-tmp^0 == 0), cost: 10
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-tmp___0^post5 >= 0 /\ -2+id^0-tmp^0 >= 0 /\ -1+n7 >= 0 /\ -2+id^0 >= 0 /\ maxId^0 >= 0 /\ -maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -maxId^0+tmp^0 >= 0), cost: 10*n7
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JCHMDB.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 2-id^0+tmp^0 <= 0 /\ maxId^0-tmp^0 == 0), cost: 10
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -2+id^0-tmp^0 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_fOapkA.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
Second rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -2+id^0-tmp^0 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 <= 0 /\ 1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -2+id^0 >= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (-1-tmp___0^post5 >= 0 /\ -1+n8 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -maxId^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 10*n8
Sub-proof via acceration calculus written to file:///tmp/tmpnam_AhOPmd.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cAdcck.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
Second rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -2+id^0-tmp^0 >= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (2-id^0+tmp^0 <= 0 /\ maxId^0-tmp^0 == 0 /\ -1+tmp___0^post5 >= 0), cost: 10

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (2-id^0+tmp^0 <= 0 /\ maxId^0-tmp^0 == 0 /\ -1+tmp___0^post5 >= 0), cost: 10
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-2+id^0-tmp^0 >= 0 /\ -2+id^0 >= 0 /\ maxId^0 >= 0 /\ -maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+n10 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 >= 0), cost: 10*n10
Sub-proof via acceration calculus written to file:///tmp/tmpnam_hlJHlg.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (2-id^0+tmp^0 <= 0 /\ maxId^0-tmp^0 == 0 /\ -1+tmp___0^post5 >= 0), cost: 10
New rule:
l1 -> [9] : (-2+id^0-tmp^0 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_maDbCj.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
Second rule:
l1 -> [9] : (-2+id^0-tmp^0 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 <= 0 /\ -2+id^0 >= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n11 >= 0 /\ -maxId^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 10*n11
Sub-proof via acceration calculus written to file:///tmp/tmpnam_odLfCJ.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10
New rule:
l1 -> [9] : (maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lpCokE.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
Second rule:
l1 -> [9] : (maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (-2+id^0-tmp^0 >= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ maxId^0-tmp^0 == 0), cost: 10

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ maxId^0-tmp^0 == 0), cost: 10
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ -maxId^0 >= 0 /\ -1+n13 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -maxId^0+tmp^0 >= 0), cost: 10*n13
Sub-proof via acceration calculus written to file:///tmp/tmpnam_IDeFhJ.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ maxId^0-tmp^0 == 0), cost: 10
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_EEpJed.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
Second rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 <= 0 /\ 1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (-1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -maxId^0 >= 0 /\ -1+n16 >= 0), cost: 10*n16
Sub-proof via acceration calculus written to file:///tmp/tmpnam_meLmLK.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_HBKJBf.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
Second rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ maxId^0-tmp^0 == 0 /\ -1+tmp___0^post5 >= 0), cost: 10

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ maxId^0-tmp^0 == 0 /\ -1+tmp___0^post5 >= 0), cost: 10
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-id^0 >= 0 /\ maxId^0 >= 0 /\ -maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 >= 0 /\ -1+n17 >= 0), cost: 10*n17
Sub-proof via acceration calculus written to file:///tmp/tmpnam_oigNKN.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ maxId^0-tmp^0 == 0 /\ -1+tmp___0^post5 >= 0), cost: 10
New rule:
l1 -> [9] : (-tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_GFkjBf.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
Second rule:
l1 -> [9] : (-tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 <= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (-1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -maxId^0 >= 0 /\ -1+n20 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 10*n20
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FHMMek.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1, (1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10
New rule:
l1 -> [9] : (-1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_AgHbhD.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+tmp^0, (1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -maxId^0+tmp^0 <= 0), cost: 5
Second rule:
l1 -> [9] : (-1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (-1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10+5*maxId^0

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10+5*maxId^0
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n23 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_KMfjIJ.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
Second rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n23 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ -1+n23 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 2+maxId^0-id^0 <= 0 /\ maxId^0-tmp^0 >= 0), cost: 10+5*maxId^0-5*tmp^0

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 2+maxId^0-id^0 <= 0 /\ maxId^0-tmp^0 >= 0), cost: 10+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ -1+n24 >= 0 /\ maxId^0-tmp^0 >= 0), cost: 10*n24+5*maxId^0*n24
Sub-proof via acceration calculus written to file:///tmp/tmpnam_CIcDmA.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 2+maxId^0-id^0 <= 0 /\ maxId^0-tmp^0 >= 0), cost: 10+5*maxId^0-5*tmp^0
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -tmp^0 <= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ecekhK.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
Second rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -tmp^0 <= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 <= 0 /\ 1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0
New rule:
l1 -> [9] : (-1+n27 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NKMJME.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
Second rule:
l1 -> [9] : (-1+n27 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 >= 0 /\ -1+n27 >= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (2+maxId^0-id^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0-5*tmp^0

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (2+maxId^0-id^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ -1+n28 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5*maxId^0*n28+10*n28
Sub-proof via acceration calculus written to file:///tmp/tmpnam_ANIMdm.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (2+maxId^0-id^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0-5*tmp^0
New rule:
l1 -> [9] : (-tmp^0 <= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_INMpME.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
Second rule:
l1 -> [9] : (-tmp^0 <= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 <= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10+5*maxId^0

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 10+5*maxId^0
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n30 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FHJjgc.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
Second rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n30 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+n30 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 10+5*maxId^0-5*tmp^0

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 10+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+n31 >= 0), cost: 10*n31+5*maxId^0*n31
Sub-proof via acceration calculus written to file:///tmp/tmpnam_nkcMfA.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 10+5*maxId^0-5*tmp^0
New rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BLOHej.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: 5
Second rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 <= 0 /\ 1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0
New rule:
l1 -> [9] : (-1-id^0 >= 0 /\ -1+n36 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_JKhgdI.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
Second rule:
l1 -> [9] : (-1-id^0 >= 0 /\ -1+n36 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 >= 0 /\ -1-id^0 >= 0 /\ -1+n36 >= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0-5*tmp^0

Applied acceleration
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-id^0 >= 0 /\ -1+n37 >= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5*maxId^0*n37+10*n37
Sub-proof via acceration calculus written to file:///tmp/tmpnam_kfGpDI.txt

Applied nonterm
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 10+5*maxId^0-5*tmp^0
New rule:
l1 -> [9] : (-tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_pGobBj.txt

Applied chaining
First rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: 5
Second rule:
l1 -> [9] : (-tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (0 <= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-id^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+n >= 0), cost: 5*n
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0 <= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+n >= 0), cost: 5*n

Applied simplification
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0

Applied simplification
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-tmp___0^post5 >= 0 /\ -1+n1 >= 0 /\ -1-id^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5*n1
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ -1+n1 >= 0 /\ 1+id^0 <= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5*n1

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5+5*maxId^0-5*tmp^0

Applied simplification
Original rule:
l1 -> [9] : (-1-maxId^0+tmp^0 >= 0 /\ -tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (-1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=id^0, (0 >= 0 /\ 1+maxId^0-id^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*id^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=id^0, (1+maxId^0-id^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*id^0-5*tmp^0

Applied simplification
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0

Applied simplification
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-tmp___0^post5 >= 0 /\ -1+n5 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1+id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*n5
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ -1+n5 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1+id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*n5

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -tmp^0 <= 0 /\ tmp^0 <= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=id^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ 1+maxId^0-id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*id^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=id^0, (1+tmp___0^post5 <= 0 /\ 1+maxId^0-id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*id^0-5*tmp^0

Applied simplification
Original rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0), cost: 5+5*maxId^0-5*tmp^0

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -2+id^0-tmp^0 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -2+id^0-tmp^0 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 <= 0 /\ 1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -2+id^0 >= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -2+id^0-tmp^0 >= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -2+id^0-tmp^0 >= 0 /\ maxId^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 <= 0 /\ -2+id^0 >= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ -maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (maxId^0 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-2+id^0-tmp^0 >= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (-2+id^0-tmp^0 >= 0 /\ maxId^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 <= 0 /\ 1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 <= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ -maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+id^0 <= 0 /\ maxId^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+id^0 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n23 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n23 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ -1+n23 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ -1+n23 >= 0 /\ maxId^0-tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -tmp^0 <= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 <= 0 /\ 1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 >= 0 /\ -1+n27 >= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (-1+n27 >= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-tmp^0 <= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (-2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 <= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n30 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n30 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 >= 0 /\ -1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+n30 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+n30 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-tmp___0^post5 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 <= 0 /\ 1+tmp___0^post5 <= 0 /\ -1-tmp___0^post5 >= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-1-id^0 >= 0 /\ -1+n36 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+id^0 <= 0 /\ -1+n36 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 >= 0 /\ -1-id^0 >= 0 /\ -1+n36 >= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+id^0 <= 0 /\ -1+n36 >= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (-tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0), cost: NONTERM
New rule:
l1 -> [9] : (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0), cost: NONTERM

Applied simplification
Original rule:
l1 -> [9] : (0 <= 0 /\ -1-id^0 >= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
New rule:
l1 -> [9] : (1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM

Applied deletion
Removed the following rules: 32 33 34 35 36 37 38 39

Accelerated simple loops
Start location: l8
  41: l1 -> [9] : (-1-maxId^0+tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0), cost: NONTERM
  46: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (-1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+n3 >= 0 /\ -1+id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*n3
  58: l1 -> [9] : (-2+id^0-tmp^0 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
  60: l1 -> [9] : (maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
  74: l1 -> [9] : (-1+n27 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
  86: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+id^0 <= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+n >= 0), cost: 5*n
  87: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
  88: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ -1+n1 >= 0 /\ 1+id^0 <= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5*n1
  89: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0), cost: NONTERM
  90: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
  91: l1 -> [9] : (-1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
  92: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=id^0, (1+maxId^0-id^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*id^0-5*tmp^0
  93: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
  94: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=0, (1+tmp___0^post5 <= 0 /\ -1+n5 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1-maxId^0 >= 0 /\ -1+id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*n5
  95: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
  96: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=id^0, (1+tmp___0^post5 <= 0 /\ 1+maxId^0-id^0 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: 5*id^0-5*tmp^0
  97: l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-maxId^0+id^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
  98: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -2+id^0-tmp^0 >= 0 /\ -tmp^0 <= 0 /\ maxId^0-tmp^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
  99: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM
 100: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
 101: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -2+id^0-tmp^0 >= 0 /\ maxId^0 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
 102: l1 -> [9] : (maxId^0 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
 103: l1 -> [9] : (-2+id^0-tmp^0 >= 0 /\ maxId^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
 104: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
 105: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM
 106: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0), cost: NONTERM
 107: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
 108: l1 -> [9] : (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
 109: l1 -> [9] : (1+id^0 <= 0 /\ maxId^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
 110: l1 -> [9] : (1+id^0 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
 111: l1 -> [9] : (maxId^0 >= 0 /\ 1+id^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ -maxId^0+tmp^0 >= 0), cost: NONTERM
 112: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n23 >= 0 /\ -1+id^0-tmp^0 >= 0), cost: NONTERM
 113: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ -1+n23 >= 0 /\ maxId^0-tmp^0 >= 0), cost: NONTERM
 114: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ tmp^0 >= 0), cost: NONTERM
 115: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM
 116: l1 -> [9] : (-1+n27 >= 0 /\ maxId^0 >= 0 /\ -2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
 117: l1 -> [9] : (-2-maxId^0+id^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 >= 0), cost: NONTERM
 118: l1 -> [9] : (maxId^0 >= 0 /\ 1-id^0+tmp^0 <= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
 119: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+n30 >= 0), cost: NONTERM
 120: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+n30 >= 0), cost: NONTERM
 121: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0), cost: NONTERM
 122: l1 -> [9] : (1+tmp___0^post5 <= 0 /\ 1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0), cost: NONTERM
 123: l1 -> [9] : (1+id^0 <= 0 /\ -1+n36 >= 0 /\ maxId^0 >= 0 /\ -1-maxId^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
 124: l1 -> [9] : (1+id^0 <= 0 /\ -1+n36 >= 0 /\ maxId^0 >= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
 125: l1 -> [9] : (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ tmp^0 <= 0 /\ tmp^0 >= 0), cost: NONTERM
 126: l1 -> [9] : (1+id^0 <= 0 /\ maxId^0 >= 0 /\ 1+maxId^0-tmp^0 <= 0 /\ -1+tmp___0^post5 >= 0), cost: NONTERM
  23: l8 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 2


Applied chaining
First rule:
l8 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 2
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0 /\ -1+tmp___0^post5 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l8 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (id^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+maxId^0-id^0 >= 0), cost: 2+5*maxId^0-5*id^0

Applied chaining
First rule:
l8 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 2
Second rule:
l1 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ maxId^0-tmp^0 >= 0 /\ -1-id^0+tmp^0 >= 0), cost: 5+5*maxId^0-5*tmp^0
New rule:
l8 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ id^0 >= 0 /\ -1+maxId^0-id^0 >= 0), cost: 2+5*maxId^0-5*id^0

Applied deletion
Removed the following rules: 41 46 58 60 74 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126

Chained accelerated rules with incoming rules
Start location: l8
  23: l8 -> l1 : tmp^0'=1+id^0, (-maxId^0+id^0 <= 0 /\ id^0 >= 0), cost: 2
 127: l8 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (id^0 >= 0 /\ -1+tmp___0^post5 >= 0 /\ -1+maxId^0-id^0 >= 0), cost: 2+5*maxId^0-5*id^0
 128: l8 -> l1 : tmp___0^0'=tmp___0^post5, tmp^0'=1+maxId^0, (1+tmp___0^post5 <= 0 /\ id^0 >= 0 /\ -1+maxId^0-id^0 >= 0), cost: 2+5*maxId^0-5*id^0


Removed unreachable locations and irrelevant leafs
Start location: l8
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

