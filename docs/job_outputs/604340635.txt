NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_x -> Â¿functionCall(__VERIFIER_nondet_int), main_y -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l1, l2, true>
<l2, l16, (main_y = 0)>
<l2, l3, not((main_y = 0))>
<l3, l16, not((main_x >= 0))>
<l3, l4, (main_x >= 0)>
<l4, l16, not((main_y >= 0))>
<l4, l5, (main_y >= 0)>
<l5, l6, true, seq{main_tmp -> main_y, main_xtmp -> main_x}>
<l6, l7, (main_x = main_y)>
<l6, l9, not((main_x = main_y))>
<l7, l8, true, seq{main_y -> 0}>
<l8, l14, true>
<l9, l10, true>
<l10, l13, not((main_xtmp > main_y))>
<l10, l11, (main_xtmp > main_y)>
<l11, l12, true, seq{main_xtmp -> (main_xtmp - main_y)}>
<l12, l10, true>
<l13, l14, true>
<l14, l15, true, seq{main_y -> main_xtmp, main_x -> main_tmp}>
<l15, l2, true>
<l16, l17, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l18, true, seq{main__func_return_ -> 0}>
<l18, l19, true, seq{varCall_1 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l19, l20, true, seq{main_x -> varCall_1}>
<l20, l21, true, seq{varCall_2 -> Â¿functionCall(__VERIFIER_nondet_int)}>
<l21, l1, true, seq{main_y -> varCall_2}>
<l1, l2, true>
<l2, l16, (main_y = 0)>
<l2, l3, not((main_y = 0))>
<l3, l4, (main_x >= 0)>
<l3, l16, not((main_x >= 0))>
<l4, l5, (main_y >= 0)>
<l4, l16, not((main_y >= 0))>
<l5, l6, true, seq{main_tmp -> main_y, main_xtmp -> main_x}>
<l6, l7, (main_x = main_y)>
<l6, l9, not((main_x = main_y))>
<l7, l8, true, seq{main_y -> 0}>
<l8, l14, true>
<l9, l10, true>
<l10, l11, (main_xtmp > main_y)>
<l10, l13, not((main_xtmp > main_y))>
<l11, l12, true, seq{main_xtmp -> (main_xtmp - main_y)}>
<l12, l10, true>
<l13, l14, true>
<l14, l15, true, seq{main_y -> main_xtmp, main_x -> main_tmp}>
<l15, l2, true>
<l16, l17, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
17, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [2 functions]:
    function name: __VERIFIER_nondet_int [1 return + 0 parameters]        demangled: __VERIFIER_nondet_int
        __VERIFIER_nondet_int__func_return_      [function result] : int
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [6 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1> | <line: 10, col: 9> <line: 11, col: 9>
main | function | [integer, ()] | <line: 5, col: 1>
x | local variable | integer | <line: 6, col: 5> | <line: 10, col: 5> <line: 13, col: 22> <line: 15, col: 16> <line: 17, col: 13> <line: 27, col: 9>
y | local variable | integer | <line: 7, col: 5> | <line: 11, col: 5> <line: 13, col: 12> <line: 13, col: 33> <line: 14, col: 15> <line: 17, col: 18> <line: 18, col: 13> <line: 21, col: 24> <line: 22, col: 31> <line: 26, col: 9>
tmp | local variable | integer | <line: 8, col: 5> | <line: 14, col: 9> <line: 27, col: 13>
xtmp | local variable | integer | <line: 9, col: 5> | <line: 15, col: 9> <line: 21, col: 19> <line: 22, col: 17> <line: 22, col: 24> <line: 26, col: 13>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (main_x = undef3) /\ (main_y = undef4)>
<l2, l17, (main_y = 0)>
<l2, l17, (main_y < 0) /\ (main_x >= 0) /\ not((main_y >= 0))>
<l2, l17, (main_y < 0) /\ not((main_x >= 0))>
<l2, l2, (main_y > 0) /\ (main_x >= 0) /\ (main_y >= 0) /\ (main_x = main_y), par{main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x}>
<l2, l10, (main_y > 0) /\ (main_x >= 0) /\ (main_y >= 0) /\ (main_x < main_y), par{main_tmp -> main_y, main_xtmp -> main_x}>
<l2, l10, (main_y > 0) /\ (main_x >= 0) /\ (main_y >= 0) /\ (main_x > main_y), par{main_tmp -> main_y, main_xtmp -> main_x}>
<l2, l17, (main_y > 0) /\ not((main_x >= 0))>
<l10, l10, (main_xtmp > main_y), par{main_xtmp -> (main_xtmp - main_y)}>
<l10, l2, not((main_xtmp > main_y)), par{main_x -> main_tmp, main_y -> main_xtmp}>

Fresh variables:
undef3, undef4, 

Undef variables:
undef3, undef4, 

Abstraction variables:

Exit nodes:
17, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l10, l10, 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>
<l10, l2, main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
Variables:
main_x, main_y, main_tmp, main_xtmp

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_x = undef3 /\ main_y = undef4, {all remain the same}>

Graph 2
<l2, l17, main_y = 0, {all remain the same}>
<l2, l17, 0 <= main_x /\ 1 + main_y <= 0, {all remain the same}>
<l2, l17, 1 + main_x <= 0 /\ 1 + main_y <= 0, {all remain the same}>
<l2, l17, 1 + main_x <= 0 /\ 1 <= main_y, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 10 , 1 )
( 17 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.011501

Checking conditional termination of SCC {l2, l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001458s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006005s
[18420 : 18422]
[18420 : 18423]
Successful child: 18422
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l10, 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l2, main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l10, 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l2, main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:1 + main_x <= 0 - Process 1
* Exit transition: <l0, l2, main_x = undef3 /\ main_y = undef4, {all remain the same}>
* Postcondition  : 1 + main_x <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000382s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000429s
INVARIANTS: 
2: 
10: 
Quasi-INVARIANTS to narrow Graph: 
2: 1 + main_x <= 0 , 
10: 1 <= 0 , 
Narrowing transition: 
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l10, l10, 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l10, l2, main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l10, l10, 0 <= 0 /\ 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>
<l10, l2, 0 <= 0 /\ main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
Variables:
main_x, main_y, main_tmp, main_xtmp
Checking conditional termination of SCC {l2, l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001196s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006810s
[18420 : 18427]
[18420 : 18428]
Successful child: 18427
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l10, 0 <= 0 /\ 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l2, 0 <= 0 /\ main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l10, 0 <= 0 /\ 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l10, l2, 0 <= 0 /\ main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
New Graphs: 

LOG: CALL check - Post:main_y <= 0 - Process 2
* Exit transition: <l0, l2, 0 <= main_x /\ main_x = undef3 /\ main_y = undef4, {all remain the same}>
* Postcondition  : main_y <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000444s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000483s
INVARIANTS: 
2: 
10: 
Quasi-INVARIANTS to narrow Graph: 
2: main_y <= 0 , 
10: 1 <= 0 , 
Narrowing transition: 
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l10, l10, 0 <= 0 /\ 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l10, l2, 0 <= 0 /\ main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l10, l10, 0 <= 0 /\ 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>
<l10, l2, 0 <= 0 /\ main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
Variables:
main_x, main_y, main_tmp, main_xtmp
Checking conditional termination of SCC {l2, l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001433s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.007377s
[18420 : 18432]
[18420 : 18433]
Successful child: 18432
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l10, 0 <= 0 /\ main_y <= main_tmp /\ 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l2, 0 <= 0 /\ main_y <= main_tmp /\ main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l10, 0 <= main_x /\ 1 + main_x <= main_y /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l10, 0 <= 0 /\ main_y <= main_tmp /\ 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l2, 0 <= 0 /\ main_y <= main_tmp /\ main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
New Graphs: 
Transitions:
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l2, l10, 0 <= main_x /\ 1 + main_y <= main_x /\ 1 <= main_y, {main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
<l10, l10, 0 <= 0 /\ main_y <= main_tmp /\ 1 + main_y <= main_xtmp, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>
<l10, l2, 0 <= 0 /\ main_y <= main_tmp /\ main_xtmp <= main_y, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
Variables:
main_x, main_y, main_tmp, main_xtmp
Checking conditional termination of SCC {l2, l10}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001315s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006331s
[18420 : 18437]
[18420 : 18438]
Successful child: 18437
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l10, 0 <= 0 /\ main_y <= main_tmp /\ 1 + main_tmp <= main_x /\ 1 + main_y <= main_xtmp /\ 0 <= 1 + main_x, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l2, 0 <= 0 /\ main_y <= main_tmp /\ main_xtmp <= main_y /\ 1 + main_tmp <= main_x /\ 0 <= 1 + main_x, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l10, 0 <= 0 /\ main_y <= main_tmp /\ 1 + main_tmp <= main_x /\ 1 + main_y <= main_xtmp /\ 0 <= 1 + main_x, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l10, l2, 0 <= 0 /\ main_y <= main_tmp /\ main_xtmp <= main_y /\ 1 + main_tmp <= main_x /\ 0 <= 1 + main_x, {main_x -> main_tmp, main_y -> main_xtmp, rest remain the same}>
[33mRanking function: [36m1 + main_x[0m
New Graphs: 
Transitions:
<l2, l2, 0 <= main_x /\ 1 <= main_y /\ main_x = main_y, {main_x -> main_y, main_y -> main_x, main_tmp -> main_y, main_xtmp -> main_x, rest remain the same}>
Variables:
main_x, main_y, main_tmp, main_xtmp
Transitions:
<l10, l10, 0 <= 0 /\ main_y <= main_tmp /\ 1 + main_tmp <= main_x /\ 1 + main_y <= main_xtmp /\ 0 <= 1 + main_x, {main_xtmp -> -main_y + main_xtmp, rest remain the same}>
Variables:
main_x, main_y, main_tmp, main_xtmp
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000381s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001270s
[18420 : 18442]
[18420 : 18443]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.027729s
Time used: 0.027082

[18420 : 18447]
[18420 : 18451]
Successful child: 18447

[32mProgram does NOT terminate[0m
