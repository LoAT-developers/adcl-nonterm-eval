unknown

Initial ITS

Start location: l4
Program variables: b_7^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l1 : b_7^0'=b_7^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (1+y_6^post1-y_6^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -x_5^post1+x_5^0 == 0 /\ result_4^0-result_4^post1 == 0 /\ b_7^post1 == 0 /\ 1-b_7^0 <= 0), cost: 1
   1: l0 -> l2 : b_7^0'=b_7^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ -y_6^post2+y_6^0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ b_7^0-b_7^post2 == 0 /\ -x_5^post2+x_5^0 == 0), cost: 1
   3: l1 -> l0 : b_7^0'=b_7^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (-y_6^post4+y_6^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0 /\ -1+b_7^post4 == 0 /\ result_4^0-result_4^post4 == 0 /\ -1-x_5^0+x_5^post4 == 0), cost: 1
   4: l1 -> l2 : b_7^0'=b_7^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ b_7^0-b_7^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
   2: l3 -> l1 : b_7^0'=b_7^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (b_7^post3 == 0 /\ -y_6^post3+y_6^0 == 0 /\ result_4^0-result_4^post3 == 0 /\ -x_5^post3+x_5^0 == 0), cost: 1
   5: l4 -> l3 : b_7^0'=b_7^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (b_7^0-b_7^post6 == 0 /\ result_4^0-result_4^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1

Chained Linear Paths

Start location: l4
Program variables: b_7^0 result_4^0 x_5^0 y_6^0
   0: l0 -> l1 : b_7^0'=b_7^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (1+y_6^post1-y_6^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -x_5^post1+x_5^0 == 0 /\ result_4^0-result_4^post1 == 0 /\ b_7^post1 == 0 /\ 1-b_7^0 <= 0), cost: 1
   1: l0 -> l2 : b_7^0'=b_7^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ -y_6^post2+y_6^0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ b_7^0-b_7^post2 == 0 /\ -x_5^post2+x_5^0 == 0), cost: 1
   3: l1 -> l0 : b_7^0'=b_7^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (-y_6^post4+y_6^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0 /\ -1+b_7^post4 == 0 /\ result_4^0-result_4^post4 == 0 /\ -1-x_5^0+x_5^post4 == 0), cost: 1
   4: l1 -> l2 : b_7^0'=b_7^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ b_7^0-b_7^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
   6: l4 -> l1 : b_7^0'=b_7^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (b_7^post3 == 0 /\ b_7^0-b_7^post6 == 0 /\ x_5^post6-x_5^post3 == 0 /\ result_4^0-result_4^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -result_4^post3+result_4^post6 == 0 /\ y_6^post6-y_6^post3 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1

	Eliminating location l3 by chaining:

	Applied chaining

	First rule:
	l4 -> l3 : b_7^0'=b_7^post6, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (b_7^0-b_7^post6 == 0 /\ result_4^0-result_4^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
	Second rule:
	l3 -> l1 : b_7^0'=b_7^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (b_7^post3 == 0 /\ -y_6^post3+y_6^0 == 0 /\ result_4^0-result_4^post3 == 0 /\ -x_5^post3+x_5^0 == 0), cost: 1
	New rule:
	l4 -> l1 : b_7^0'=b_7^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (b_7^post3 == 0 /\ b_7^0-b_7^post6 == 0 /\ x_5^post6-x_5^post3 == 0 /\ result_4^0-result_4^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -result_4^post3+result_4^post6 == 0 /\ y_6^post6-y_6^post3 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 5

Simplified Transitions

Start location: l4
Program variables: b_7^0 result_4^0 x_5^0 y_6^0
   7: l0 -> l1 : b_7^0'=0, y_6^0'=-1+y_6^0, (1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0), cost: 1
   8: l0 -> l2 : result_4^0'=result_4^post2, -x_5^0+y_6^0 <= 0, cost: 1
   9: l1 -> l0 : b_7^0'=1, x_5^0'=1+x_5^0, (1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0), cost: 1
  10: l1 -> l2 : result_4^0'=result_4^post5, -x_5^0+y_6^0 <= 0, cost: 1
  11: l4 -> l1 : b_7^0'=0, T, cost: 1

	Propagated Equalities

	Original rule:
	l0 -> l1 : b_7^0'=b_7^post1, result_4^0'=result_4^post1, x_5^0'=x_5^post1, y_6^0'=y_6^post1, (1+y_6^post1-y_6^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -x_5^post1+x_5^0 == 0 /\ result_4^0-result_4^post1 == 0 /\ b_7^post1 == 0 /\ 1-b_7^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, (0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0), cost: 1
	
		propagated equality y_6^post1 = -1+y_6^0
		
		propagated equality x_5^post1 = x_5^0
		
		propagated equality result_4^post1 = result_4^0
		
		propagated equality b_7^post1 = 0
		
	Simplified Guard

	Original rule:
	l0 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, (0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, (1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=-1+y_6^0, (1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0), cost: 1
	New rule:
	l0 -> l1 : b_7^0'=0, y_6^0'=-1+y_6^0, (1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l0 -> l2 : b_7^0'=b_7^post2, result_4^0'=result_4^post2, x_5^0'=x_5^post2, y_6^0'=y_6^post2, (0 == 0 /\ -y_6^post2+y_6^0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ b_7^0-b_7^post2 == 0 /\ -x_5^post2+x_5^0 == 0), cost: 1
	New rule:
	l0 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
	
		propagated equality y_6^post2 = y_6^0
		
		propagated equality b_7^post2 = b_7^0
		
		propagated equality x_5^post2 = x_5^0
		
	Simplified Guard

	Original rule:
	l0 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
	New rule:
	l0 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, -x_5^0+y_6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l0 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^post2, x_5^0'=x_5^0, y_6^0'=y_6^0, -x_5^0+y_6^0 <= 0, cost: 1
	New rule:
	l0 -> l2 : result_4^0'=result_4^post2, -x_5^0+y_6^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l0 : b_7^0'=b_7^post4, result_4^0'=result_4^post4, x_5^0'=x_5^post4, y_6^0'=y_6^post4, (-y_6^post4+y_6^0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0 /\ -1+b_7^post4 == 0 /\ result_4^0-result_4^post4 == 0 /\ -1-x_5^0+x_5^post4 == 0), cost: 1
	New rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0), cost: 1
	
		propagated equality y_6^post4 = y_6^0
		
		propagated equality b_7^post4 = 1
		
		propagated equality result_4^post4 = result_4^0
		
		propagated equality x_5^post4 = 1+x_5^0
		
	Simplified Guard

	Original rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (0 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0), cost: 1
	New rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l0 : b_7^0'=1, result_4^0'=result_4^0, x_5^0'=1+x_5^0, y_6^0'=y_6^0, (1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0), cost: 1
	New rule:
	l1 -> l0 : b_7^0'=1, x_5^0'=1+x_5^0, (1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	l1 -> l2 : b_7^0'=b_7^post5, result_4^0'=result_4^post5, x_5^0'=x_5^post5, y_6^0'=y_6^post5, (0 == 0 /\ b_7^0-b_7^post5 == 0 /\ -y_6^post5+y_6^0 == 0 /\ -x_5^0+y_6^0 <= 0 /\ -x_5^post5+x_5^0 == 0), cost: 1
	New rule:
	l1 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
	
		propagated equality b_7^post5 = b_7^0
		
		propagated equality y_6^post5 = y_6^0
		
		propagated equality x_5^post5 = x_5^0
		
	Simplified Guard

	Original rule:
	l1 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, (0 == 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
	New rule:
	l1 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, -x_5^0+y_6^0 <= 0, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l1 -> l2 : b_7^0'=b_7^0, result_4^0'=result_4^post5, x_5^0'=x_5^0, y_6^0'=y_6^0, -x_5^0+y_6^0 <= 0, cost: 1
	New rule:
	l1 -> l2 : result_4^0'=result_4^post5, -x_5^0+y_6^0 <= 0, cost: 1
	
	Propagated Equalities

	Original rule:
	l4 -> l1 : b_7^0'=b_7^post3, result_4^0'=result_4^post3, x_5^0'=x_5^post3, y_6^0'=y_6^post3, (b_7^post3 == 0 /\ b_7^0-b_7^post6 == 0 /\ x_5^post6-x_5^post3 == 0 /\ result_4^0-result_4^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -result_4^post3+result_4^post6 == 0 /\ y_6^post6-y_6^post3 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
	New rule:
	l4 -> l1 : b_7^0'=0, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ b_7^0-b_7^post6 == 0 /\ result_4^0-result_4^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
	
		propagated equality b_7^post3 = 0
		
		propagated equality x_5^post3 = x_5^post6
		
		propagated equality result_4^post3 = result_4^post6
		
		propagated equality y_6^post3 = y_6^post6
		
	Propagated Equalities

	Original rule:
	l4 -> l1 : b_7^0'=0, result_4^0'=result_4^post6, x_5^0'=x_5^post6, y_6^0'=y_6^post6, (0 == 0 /\ b_7^0-b_7^post6 == 0 /\ result_4^0-result_4^post6 == 0 /\ -x_5^post6+x_5^0 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
	New rule:
	l4 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	
		propagated equality b_7^post6 = b_7^0
		
		propagated equality result_4^post6 = result_4^0
		
		propagated equality x_5^post6 = x_5^0
		
		propagated equality y_6^post6 = y_6^0
		
	Simplified Guard

	Original rule:
	l4 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, 0 == 0, cost: 1
	New rule:
	l4 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	
	Removed Trivial Updates

	Original rule:
	l4 -> l1 : b_7^0'=0, result_4^0'=result_4^0, x_5^0'=x_5^0, y_6^0'=y_6^0, T, cost: 1
	New rule:
	l4 -> l1 : b_7^0'=0, T, cost: 1

Step with 11

	Trace

	11[T]
	
	Blocked

	[{}, {}]

Step with 10

	Trace

	11[T], 10[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T]}]

Step with 9

	Trace

	11[T], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {}]

Step with 8

	Trace

	11[T], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)], 8[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {}, {}]

Backtrack

	Trace

	11[T], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {8[T]}]

Step with 7

	Trace

	11[T], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)], 7[(1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {8[T]}, {}]

Accelerate

Start location: l4
Program variables: b_7^0 result_4^0 x_5^0 y_6^0
   7: l0 -> l1 : b_7^0'=0, y_6^0'=-1+y_6^0, (1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0), cost: 1
   8: l0 -> l2 : result_4^0'=result_4^post2, -x_5^0+y_6^0 <= 0, cost: 1
   9: l1 -> l0 : b_7^0'=1, x_5^0'=1+x_5^0, (1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0), cost: 1
  10: l1 -> l2 : result_4^0'=result_4^post5, -x_5^0+y_6^0 <= 0, cost: 1
  12: l1 -> l1 : b_7^0'=0, x_5^0'=x_5^0+n, y_6^0'=-n+y_6^0, (-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0), cost: 1
  11: l4 -> l1 : b_7^0'=0, T, cost: 1

	Loop Acceleration

	Original rule:
	l1 -> l1 : b_7^0'=0, x_5^0'=1+x_5^0, y_6^0'=-1+y_6^0, (1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0 /\ 2+x_5^0-y_6^0 <= 0), cost: 1
	New rule:
	l1 -> l1 : b_7^0'=0, x_5^0'=x_5^0+n, y_6^0'=-n+y_6^0, (-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0), cost: 1

		-2-x_5^0+y_6^0 >= 0 [0]: montonic decrease yields -x_5^0-2*n+y_6^0 >= 0
		
		-2-x_5^0+y_6^0 >= 0 [1]: eventual increase yields (-2-x_5^0+y_6^0 >= 0 /\ 2 <= 0)
		
		-b_7^0 >= 0 [0]: monotonic increase yields -b_7^0 >= 0
		
		-1-x_5^0+y_6^0 >= 0 [0]: montonic decrease yields 1-x_5^0-2*n+y_6^0 >= 0, dependencies: -2-x_5^0+y_6^0 >= 0
		
		-1-x_5^0+y_6^0 >= 0 [1]: eventual increase yields (2 <= 0 /\ -1-x_5^0+y_6^0 >= 0)
		
		Replacement map: {-2-x_5^0+y_6^0 >= 0 -> -x_5^0-2*n+y_6^0 >= 0, -b_7^0 >= 0 -> -b_7^0 >= 0, -1-x_5^0+y_6^0 >= 0 -> 1-x_5^0-2*n+y_6^0 >= 0}

	Trace

	11[T], 12[(-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0)]
	
	Blocked

	[{}, {10[T]}, {12[T]}]

Step with 10

	Trace

	11[T], 12[(-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0)], 10[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {12[T]}, {}]

Backtrack

	Trace

	11[T], 12[(-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 12[T]}]

Step with 9

	Trace

	11[T], 12[(-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0)], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 12[T]}, {}]

Step with 7

	Trace

	11[T], 12[(-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0)], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)], 7[(1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 12[T]}, {}, {}]

Covered

	Trace

	11[T], 12[(-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0)], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 12[T]}, {7[T]}]

Step with 8

	Trace

	11[T], 12[(-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0)], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)], 8[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 12[T]}, {7[T]}, {}]

Backtrack

	Trace

	11[T], 12[(-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0)], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T]}, {10[T], 12[T]}, {7[T], 8[T]}]

Backtrack

	Trace

	11[T], 12[(-x_5^0-2*n+y_6^0 >= 0 /\ -1+n >= 0 /\ 1-x_5^0-2*n+y_6^0 >= 0 /\ -b_7^0 >= 0)]
	
	Blocked

	[{}, {10[T]}, {9[T], 10[T], 12[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {10[T], 12[T]}]

Step with 9

	Trace

	11[T], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T], 12[T]}, {}]

Step with 8

	Trace

	11[T], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)], 8[(-x_5^0+y_6^0 <= 0)]
	
	Blocked

	[{}, {10[T], 12[T]}, {}, {}]

Backtrack

	Trace

	11[T], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T], 12[T]}, {8[T]}]

Step with 7

	Trace

	11[T], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)], 7[(1+x_5^0-y_6^0 <= 0 /\ 1-b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T], 12[T]}, {8[T]}, {}]

Covered

	Trace

	11[T], 9[(1+x_5^0-y_6^0 <= 0 /\ b_7^0 <= 0)]
	
	Blocked

	[{}, {10[T], 12[T]}, {7[T], 8[T]}]

Backtrack

	Trace

	11[T]
	
	Blocked

	[{}, {9[T], 10[T], 12[T]}]

Backtrack

	Trace

	Blocked

	[{11[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
