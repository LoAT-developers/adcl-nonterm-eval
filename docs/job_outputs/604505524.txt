WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_ConstantStackPush -> f142_0_main_GE : arg2'=arg2P0, arg1'=arg1P0, -arg1P0 == 0, cost: 1
   1: f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=arg1P1, (-9+arg1 > 0 /\ 1+arg1-arg1P1 == 0 /\ -50+arg1 < 0 /\ -100+arg1 < 0), cost: 1
   3: f142_0_main_GE -> f181_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, (-49+arg1 > 0 /\ -arg1P3+arg1 == 0 /\ -100+arg1 < 0), cost: 1
   4: f142_0_main_GE -> f191_0_main_GE : arg2'=arg2P4, arg1'=arg1P4, (arg1-arg1P4 == 0 /\ -10+arg1 < 0 /\ -arg2P4 == 0 /\ -100+arg1 < 0), cost: 1
   2: f181_0_main_Load -> f181_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, arg1-arg1P2 == 0, cost: 1
   5: f191_0_main_GE -> f191_0_main_GE : arg2'=arg2P5, arg1'=arg1P5, (1+arg2-arg2P5 == 0 /\ -15+arg2 < 0 /\ -arg1P5+arg1 == 0), cost: 1
   6: f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=arg1P6, (1-arg1P6+arg1 == 0 /\ -14+arg2 > 0), cost: 1
   7: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_ConstantStackPush -> f142_0_main_GE : arg2'=arg2P0, arg1'=arg1P0, -arg1P0 == 0, cost: 1
New rule:
f1_0_main_ConstantStackPush -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1

Applied preprocessing
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=arg1P1, (-9+arg1 > 0 /\ 1+arg1-arg1P1 == 0 /\ -50+arg1 < 0 /\ -100+arg1 < 0), cost: 1
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=1+arg1, (-9+arg1 > 0 /\ 50-arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f181_0_main_Load -> f181_0_main_Load : arg2'=arg2P2, arg1'=arg1P2, arg1-arg1P2 == 0, cost: 1
New rule:
f181_0_main_Load -> f181_0_main_Load : arg2'=arg2P2, TRUE, cost: 1

Applied preprocessing
Original rule:
f142_0_main_GE -> f181_0_main_Load : arg2'=arg2P3, arg1'=arg1P3, (-49+arg1 > 0 /\ -arg1P3+arg1 == 0 /\ -100+arg1 < 0), cost: 1
New rule:
f142_0_main_GE -> f181_0_main_Load : arg2'=arg2P3, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f142_0_main_GE -> f191_0_main_GE : arg2'=arg2P4, arg1'=arg1P4, (arg1-arg1P4 == 0 /\ -10+arg1 < 0 /\ -arg2P4 == 0 /\ -100+arg1 < 0), cost: 1
New rule:
f142_0_main_GE -> f191_0_main_GE : arg2'=0, 10-arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f191_0_main_GE -> f191_0_main_GE : arg2'=arg2P5, arg1'=arg1P5, (1+arg2-arg2P5 == 0 /\ -15+arg2 < 0 /\ -arg1P5+arg1 == 0), cost: 1
New rule:
f191_0_main_GE -> f191_0_main_GE : arg2'=1+arg2, 15-arg2 > 0, cost: 1

Applied preprocessing
Original rule:
f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=arg1P6, (1-arg1P6+arg1 == 0 /\ -14+arg2 > 0), cost: 1
New rule:
f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, -14+arg2 > 0, cost: 1

Simplified rules
Start location: __init
   8: f1_0_main_ConstantStackPush -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1
   9: f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=1+arg1, (-9+arg1 > 0 /\ 50-arg1 > 0), cost: 1
  11: f142_0_main_GE -> f181_0_main_Load : arg2'=arg2P3, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
  12: f142_0_main_GE -> f191_0_main_GE : arg2'=0, 10-arg1 > 0, cost: 1
  10: f181_0_main_Load -> f181_0_main_Load : arg2'=arg2P2, TRUE, cost: 1
  13: f191_0_main_GE -> f191_0_main_GE : arg2'=1+arg2, 15-arg2 > 0, cost: 1
  14: f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, -14+arg2 > 0, cost: 1
   7: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Applied acceleration
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=1+arg1, (-9+arg1 > 0 /\ 50-arg1 > 0), cost: 1
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=n+arg1, (-9+arg1 > 0 /\ 51-n-arg1 > 0 /\ -1+n >= 0), cost: n
Sub-proof via acceration calculus written to file:///tmp/tmpnam_dfgMLn.txt

Applied instantiation
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=n+arg1, (-9+arg1 > 0 /\ 51-n-arg1 > 0 /\ -1+n >= 0), cost: n
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-9+arg1 > 0 /\ 1 > 0 /\ 49-arg1 >= 0), cost: 50-arg1

Applied simplification
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-9+arg1 > 0 /\ 1 > 0 /\ 49-arg1 >= 0), cost: 50-arg1
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-9+arg1 > 0 /\ -49+arg1 <= 0), cost: 50-arg1

Applied deletion
Removed the following rules: 9

Applied nonterm
Original rule:
f181_0_main_Load -> f181_0_main_Load : arg2'=arg2P2, TRUE, cost: 1
New rule:
f181_0_main_Load -> [6] : -1+n0 >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_NbbBeh.txt

Applied deletion
Removed the following rules: 10

Applied acceleration
Original rule:
f191_0_main_GE -> f191_0_main_GE : arg2'=1+arg2, 15-arg2 > 0, cost: 1
New rule:
f191_0_main_GE -> f191_0_main_GE : arg2'=arg2+n1, (16-arg2-n1 > 0 /\ n1 >= 0), cost: n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_FcBjDg.txt

Applied instantiation
Original rule:
f191_0_main_GE -> f191_0_main_GE : arg2'=arg2+n1, (16-arg2-n1 > 0 /\ n1 >= 0), cost: n1
New rule:
f191_0_main_GE -> f191_0_main_GE : arg2'=15, (1 > 0 /\ 15-arg2 >= 0), cost: 15-arg2

Applied simplification
Original rule:
f191_0_main_GE -> f191_0_main_GE : arg2'=15, (1 > 0 /\ 15-arg2 >= 0), cost: 15-arg2
New rule:
f191_0_main_GE -> f191_0_main_GE : arg2'=15, -15+arg2 <= 0, cost: 15-arg2

Applied deletion
Removed the following rules: 13

Accelerated simple loops
Start location: __init
   8: f1_0_main_ConstantStackPush -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1
  11: f142_0_main_GE -> f181_0_main_Load : arg2'=arg2P3, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
  12: f142_0_main_GE -> f191_0_main_GE : arg2'=0, 10-arg1 > 0, cost: 1
  16: f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-9+arg1 > 0 /\ -49+arg1 <= 0), cost: 50-arg1
  17: f181_0_main_Load -> [6] : -1+n0 >= 0, cost: NONTERM
  14: f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, -14+arg2 > 0, cost: 1
  19: f191_0_main_GE -> f191_0_main_GE : arg2'=15, -15+arg2 <= 0, cost: 15-arg2
   7: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Applied chaining
First rule:
f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, -14+arg2 > 0, cost: 1
Second rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-9+arg1 > 0 /\ -49+arg1 <= 0), cost: 50-arg1
New rule:
f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-48+arg1 <= 0 /\ -14+arg2 > 0 /\ -8+arg1 > 0), cost: 50-arg1

Applied deletion
Removed the following rules: 16

Applied chaining
First rule:
f142_0_main_GE -> f181_0_main_Load : arg2'=arg2P3, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
Second rule:
f181_0_main_Load -> [6] : -1+n0 >= 0, cost: NONTERM
New rule:
f142_0_main_GE -> [6] : (-49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 17

Applied chaining
First rule:
f142_0_main_GE -> f191_0_main_GE : arg2'=0, 10-arg1 > 0, cost: 1
Second rule:
f191_0_main_GE -> f191_0_main_GE : arg2'=15, -15+arg2 <= 0, cost: 15-arg2
New rule:
f142_0_main_GE -> f191_0_main_GE : arg2'=15, 10-arg1 > 0, cost: 16

Applied deletion
Removed the following rules: 19

Chained accelerated rules with incoming rules
Start location: __init
   8: f1_0_main_ConstantStackPush -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1
  11: f142_0_main_GE -> f181_0_main_Load : arg2'=arg2P3, (-49+arg1 > 0 /\ 100-arg1 > 0), cost: 1
  12: f142_0_main_GE -> f191_0_main_GE : arg2'=0, 10-arg1 > 0, cost: 1
  21: f142_0_main_GE -> [6] : (-49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM
  22: f142_0_main_GE -> f191_0_main_GE : arg2'=15, 10-arg1 > 0, cost: 16
  14: f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, -14+arg2 > 0, cost: 1
  20: f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-48+arg1 <= 0 /\ -14+arg2 > 0 /\ -8+arg1 > 0), cost: 50-arg1
   7: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
   8: f1_0_main_ConstantStackPush -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1
  12: f142_0_main_GE -> f191_0_main_GE : arg2'=0, 10-arg1 > 0, cost: 1
  21: f142_0_main_GE -> [6] : (-49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM
  22: f142_0_main_GE -> f191_0_main_GE : arg2'=15, 10-arg1 > 0, cost: 16
  14: f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, -14+arg2 > 0, cost: 1
  20: f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-48+arg1 <= 0 /\ -14+arg2 > 0 /\ -8+arg1 > 0), cost: 50-arg1
   7: __init -> f1_0_main_ConstantStackPush : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1


Eliminating location f1_0_main_ConstantStackPush by chaining:

Applied chaining
First rule:
__init -> f1_0_main_ConstantStackPush : arg2'=arg2P7, arg1'=arg1P7, TRUE, cost: 1
Second rule:
f1_0_main_ConstantStackPush -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 1
New rule:
__init -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2

Applied deletion
Removed the following rules: 7 8

Eliminated locations on linear paths
Start location: __init
  12: f142_0_main_GE -> f191_0_main_GE : arg2'=0, 10-arg1 > 0, cost: 1
  21: f142_0_main_GE -> [6] : (-49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM
  22: f142_0_main_GE -> f191_0_main_GE : arg2'=15, 10-arg1 > 0, cost: 16
  14: f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, -14+arg2 > 0, cost: 1
  20: f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-48+arg1 <= 0 /\ -14+arg2 > 0 /\ -8+arg1 > 0), cost: 50-arg1
  23: __init -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2


Eliminating location f191_0_main_GE by chaining:

Applied chaining
First rule:
f142_0_main_GE -> f191_0_main_GE : arg2'=15, 10-arg1 > 0, cost: 16
Second rule:
f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, -14+arg2 > 0, cost: 1
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, (10-arg1 > 0 /\ 1 > 0), cost: 17

Applied simplification
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, (10-arg1 > 0 /\ 1 > 0), cost: 17
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, 10-arg1 > 0, cost: 17

Applied chaining
First rule:
f142_0_main_GE -> f191_0_main_GE : arg2'=15, 10-arg1 > 0, cost: 16
Second rule:
f191_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (-48+arg1 <= 0 /\ -14+arg2 > 0 /\ -8+arg1 > 0), cost: 50-arg1
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (10-arg1 > 0 /\ 1 > 0 /\ -48+arg1 <= 0 /\ -8+arg1 > 0), cost: 66-arg1

Applied simplification
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (10-arg1 > 0 /\ 1 > 0 /\ -48+arg1 <= 0 /\ -8+arg1 > 0), cost: 66-arg1
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (10-arg1 > 0 /\ -8+arg1 > 0), cost: 66-arg1

Applied deletion
Removed the following rules: 12 14 20 22

Eliminated locations on tree-shaped paths
Start location: __init
  21: f142_0_main_GE -> [6] : (-49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM
  24: f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, 10-arg1 > 0, cost: 17
  25: f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (10-arg1 > 0 /\ -8+arg1 > 0), cost: 66-arg1
  23: __init -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2


Applied simplification
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, (10-arg1 > 0 /\ -8+arg1 > 0), cost: 66-arg1
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, -9+arg1 == 0, cost: 66-arg1

Simplified simple loops
Start location: __init
  21: f142_0_main_GE -> [6] : (-49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM
  24: f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, 10-arg1 > 0, cost: 17
  26: f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, -9+arg1 == 0, cost: 66-arg1
  23: __init -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2


Applied acceleration
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=1+arg1, 10-arg1 > 0, cost: 17
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=arg1+n2, (-1+n2 >= 0 /\ 11-arg1-n2 > 0), cost: 17*n2
Sub-proof via acceration calculus written to file:///tmp/tmpnam_lNEcaa.txt

Applied instantiation
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=arg1+n2, (-1+n2 >= 0 /\ 11-arg1-n2 > 0), cost: 17*n2
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=10, (1 > 0 /\ 9-arg1 >= 0), cost: 170-17*arg1

Applied simplification
Original rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=10, (1 > 0 /\ 9-arg1 >= 0), cost: 170-17*arg1
New rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=10, -9+arg1 <= 0, cost: 170-17*arg1

Applied deletion
Removed the following rules: 24

Accelerated simple loops
Start location: __init
  21: f142_0_main_GE -> [6] : (-49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM
  26: f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P1, arg1'=50, -9+arg1 == 0, cost: 66-arg1
  28: f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=10, -9+arg1 <= 0, cost: 170-17*arg1
  23: __init -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2


Applied chaining
First rule:
__init -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2
Second rule:
f142_0_main_GE -> f142_0_main_GE : arg2'=arg2P6, arg1'=10, -9+arg1 <= 0, cost: 170-17*arg1
New rule:
__init -> f142_0_main_GE : arg2'=arg2P6, arg1'=10, -9 <= 0, cost: 172

Applied deletion
Removed the following rules: 26 28

Chained accelerated rules with incoming rules
Start location: __init
  21: f142_0_main_GE -> [6] : (-49+arg1 > 0 /\ 100-arg1 > 0), cost: NONTERM
  23: __init -> f142_0_main_GE : arg2'=arg2P0, arg1'=0, TRUE, cost: 2
  29: __init -> f142_0_main_GE : arg2'=arg2P6, arg1'=10, -9 <= 0, cost: 172


Eliminating location f142_0_main_GE by chaining:

Applied deletion
Removed the following rules: 21 23 29

Eliminated locations on tree-shaped paths
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

