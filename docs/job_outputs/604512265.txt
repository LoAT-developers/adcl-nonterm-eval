unknown

Initial ITS

Start location: [1]
Program variables: x y
   0: [1] -> [2] : x'=nondet, T, cost: 1
   1: [2] -> [3] : y'=nondet1, T, cost: 1
   2: [3] -> [4] : (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1
   6: [3] -> [7] : (-2+y > 0 \/ -y+x <= 0 \/ -1+y < 0), cost: 1
   3: [4] -> [5] : x'=-y+x, T, cost: 1
   4: [5] -> [6] : y'=nondet2, T, cost: 1
   5: [6] -> [3] : T, cost: 1

Chained Linear Paths

Start location: [1]
Program variables: x y
   7: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   6: [3] -> [7] : (-2+y > 0 \/ -y+x <= 0 \/ -1+y < 0), cost: 1
  10: [3] -> [3] : x'=-y+x, y'=nondet2, (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1

	Eliminating location [2] by chaining:

	Applied chaining

	First rule:
	[1] -> [2] : x'=nondet, T, cost: 1
	Second rule:
	[2] -> [3] : y'=nondet1, T, cost: 1
	New rule:
	[1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
	
	Applied deletion

	Removed the following rules: 0 1
	
	Eliminating location [4] by chaining:

	Applied chaining

	First rule:
	[3] -> [4] : (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1
	Second rule:
	[4] -> [5] : x'=-y+x, T, cost: 1
	New rule:
	[3] -> [5] : x'=-y+x, (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 2 3
	
	Eliminating location [5] by chaining:

	Applied chaining

	First rule:
	[3] -> [5] : x'=-y+x, (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1
	Second rule:
	[5] -> [6] : y'=nondet2, T, cost: 1
	New rule:
	[3] -> [6] : x'=-y+x, y'=nondet2, (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 4 8
	
	Eliminating location [6] by chaining:

	Applied chaining

	First rule:
	[3] -> [6] : x'=-y+x, y'=nondet2, (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1
	Second rule:
	[6] -> [3] : T, cost: 1
	New rule:
	[3] -> [3] : x'=-y+x, y'=nondet2, (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1
	
	Applied deletion

	Removed the following rules: 5 9

Step with 7

	Trace

	7[T]
	
	Blocked

	[{}, {}]

Step with 6

	Trace

	7[T], 6[(-y+x <= 0)]
	
	Blocked

	[{}, {}, {}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {6[-y+x <= 0]}]

Step with 6

	Trace

	7[T], 6[(-1+y < 0)]
	
	Blocked

	[{}, {6[-y+x <= 0]}, {}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {6[(-y+x <= 0 /\ -1+y < 0)]}]

Step with 6

	Trace

	7[T], 6[(-2+y > 0)]
	
	Blocked

	[{}, {6[(-y+x <= 0 /\ -1+y < 0)]}, {}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {6[(-2+y > 0 /\ -y+x <= 0 /\ -1+y < 0)]}]

Step with 10

	Trace

	7[T], 10[(-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0)]
	
	Blocked

	[{}, {6[T]}, {}]

Accelerate

Start location: [1]
Program variables: x y
   7: [1] -> [3] : x'=nondet, y'=nondet1, T, cost: 1
   6: [3] -> [7] : (-2+y > 0 \/ -y+x <= 0 \/ -1+y < 0), cost: 1
  10: [3] -> [3] : x'=-y+x, y'=nondet2, (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1
  11: [3] -> [3] : x'=-nondet2*n+x, y'=nondet2, (2-nondet2 >= 0 /\ -1+nondet2 >= 0 /\ -y+x > 0 /\ -nondet2-nondet2*(-1+n)+x > 0 /\ 2-y >= 0 /\ -1+y >= 0 /\ -1+n >= 0), cost: 1

	Loop Acceleration

	Original rule:
	[3] -> [3] : x'=-y+x, y'=nondet2, (-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0), cost: 1
	New rule:
	[3] -> [3] : x'=-nondet2*n+x, y'=nondet2, (2-nondet2 >= 0 /\ -1+nondet2 >= 0 /\ -y+x > 0 /\ -nondet2-nondet2*(-1+n)+x > 0 /\ 2-y >= 0 /\ -1+y >= 0 /\ -1+n >= 0), cost: 1

		-y+x > 0 [0]: eventual decrease yields (-y+x > 0 /\ -nondet2-nondet2*(-1+n)+x > 0)
		
		-y+x > 0 [1]: eventual increase yields (nondet2 <= 0 /\ -y+x > 0)
		
		2-y >= 0 [0]: eventual decrease yields (2-nondet2 >= 0 /\ 2-y >= 0)
		
		2-y >= 0 [1]: eventual increase yields (nondet2-y <= 0 /\ 2-y >= 0)
		
		-1+y >= 0 [0]: eventual decrease yields (-1+nondet2 >= 0 /\ -1+y >= 0)
		
		-1+y >= 0 [1]: eventual increase yields (-nondet2+y <= 0 /\ -1+y >= 0)
		
		Replacement map: {-y+x > 0 -> (-y+x > 0 /\ -nondet2-nondet2*(-1+n)+x > 0), 2-y >= 0 -> (2-nondet2 >= 0 /\ 2-y >= 0), -1+y >= 0 -> (-1+nondet2 >= 0 /\ -1+y >= 0)}

	Trace

	7[T], 11[(2-nondet2 >= 0 /\ -1+nondet2 >= 0 /\ -y+x > 0 /\ -nondet2-nondet2*(-1+n)+x > 0 /\ 2-y >= 0 /\ -1+y >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {6[T]}, {10[T], 11[T]}]

Step with 6

	Trace

	7[T], 11[(2-nondet2 >= 0 /\ -1+nondet2 >= 0 /\ -y+x > 0 /\ -nondet2-nondet2*(-1+n)+x > 0 /\ 2-y >= 0 /\ -1+y >= 0 /\ -1+n >= 0)], 6[(-y+x <= 0)]
	
	Blocked

	[{}, {6[T]}, {10[T], 11[T]}, {}]

Backtrack

	Trace

	7[T], 11[(2-nondet2 >= 0 /\ -1+nondet2 >= 0 /\ -y+x > 0 /\ -nondet2-nondet2*(-1+n)+x > 0 /\ 2-y >= 0 /\ -1+y >= 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {6[T]}, {6[-y+x <= 0], 10[T], 11[T]}]

Backtrack

	Trace

	7[T]
	
	Blocked

	[{}, {6[T], 11[T]}]

Step with 10

	Trace

	7[T], 10[(-2+y <= 0 /\ -y+x > 0 /\ -1+y >= 0)]
	
	Blocked

	[{}, {6[T], 11[T]}, {}]

Covered

	Trace

	7[T]
	
	Blocked

	[{}, {6[T], 10[T], 11[T]}]

Backtrack

	Trace

	Blocked

	[{7[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
