NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, true, par{arg1 -> 0, arg2 -> 100}>
<l2, l2, (arg2 < 52) /\ (arg2 > arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 > 51) /\ (arg2 > arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 - 1)}>
<l3, l1, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = 0) /\ (arg2 = 100)>
<l2, l2, (arg2 < 52) /\ (arg2 > arg1), par{arg1 -> (arg1 - 1), arg2 -> (arg2 + 1)}>
<l2, l2, (arg2 > 51) /\ (arg2 > arg1), par{arg1 -> (arg1 + 1), arg2 -> (arg2 - 1)}>

Fresh variables:
undef7, undef8, 

Undef variables:
undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + arg1 <= arg2 /\ arg2 <= 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 52 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Precedence: 
Graph 0

Graph 1
<l0, l2, arg1 = 0 /\ arg2 = 100, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 1.03403

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006308s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006847s
Trying to remove transition: <l2, l2, 52 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.467981s
Time used: 0.46785
Trying to remove transition: <l2, l2, 1 + arg1 <= arg2 /\ arg2 <= 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.004444s
Time used: 4.00015
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.012615s
Time used: 4.00009
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.013559s
Time used: 4.00003
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.010172s
Time used: 1.00008
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.006154s
Time used: 4.00003
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, arg1 = 0 /\ arg2 = 100, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, arg1 = 0 /\ arg2 = 100, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.006336s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.006385s
Cannot prove unreachability

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 1 + arg1 <= arg2 /\ arg2 <= 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>
<l2, l2, 52 <= arg2 /\ 1 + arg1 <= arg2, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>
Variables:
arg1, arg2

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg2 <= arg1, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 5.003795s
Time used: 5.00264
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.020609s
Time used: 0.016384
Improving Solution with cost 2 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 1.000974s
Time used: 1.00067

LOG: SAT solveNonLinear - Elapsed time: 1.021583s
Cost: 2; Total time: 1.01705
[31mFailed at location 2: 1 + arg1 + arg2 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l2: 1 + arg1 + arg2 <= 0[0m
[36mQuasi-invariant at l2: 0 <= arg2[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.004787s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001221s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000976s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000965s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000928s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000929s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000927s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000901s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000907s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000888s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000883s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000913s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000893s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000884s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000908s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000893s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000896s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000890s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000879s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000900s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000900s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000885s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000877s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000904s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000885s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000885s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000953s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000912s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000930s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000902s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000908s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000913s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000897s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000905s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000918s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000908s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000920s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000901s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000901s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000915s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000907s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000928s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000912s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000906s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000924s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000912s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000930s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000925s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000937s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000917s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000935s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000915s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000733s
Remaining time after improvement: 0.955457
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 + arg2 <= 101[0m
[36mQuasi-invariant at l2: 51 <= arg2[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 + arg1 <= arg2 /\ arg1 + arg2 <= 101 /\ arg2 = 51, {arg1 -> -1 + arg1, arg2 -> 1 + arg2, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 52 <= arg2 /\ 1 + arg1 <= arg2 /\ arg1 + arg2 <= 101, {arg1 -> 1 + arg1, arg2 -> -1 + arg2, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: arg1 + arg2 <= 101, 51 <= arg2, 
OPEN EXITS: 
<l2, end, 51 <= arg2 /\ arg1 + arg2 <= 101, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, arg1 = 0 /\ arg2 = 100, {all remain the same}>
Conditions: 51 <= arg2, arg1 + arg2 <= 101, 
OPEN EXITS: 
<l0, l2, arg1 + arg2 <= 101 /\ arg1 = 0 /\ arg2 = 100, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
