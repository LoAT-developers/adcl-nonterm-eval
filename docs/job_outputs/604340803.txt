NO

Solver Timeout: 4
Global Timeout: 300
Maximum number of concurrent processes: 900
*******************************************************************************************
*********************** UNPROCESSED TRANSITION SYSTEMS PER FUNCTION ***********************
*******************************************************************************************


List of LLVMGraphs + assumeNodes + staticAssertNodes [1] :

+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++
+                                                                  +
Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_choose -> 2, main_life -> 13, main_death -> 17}>
<l1, l2, true>
<l2, l9, not((main_life < main_death))>
<l2, l3, (main_life < main_death)>
<l3, l4, true, seq{main_temp -> main_death, main_death -> (main_life + 1), main_life -> main_temp}>
<l4, l6, (main_choose < main_life)>
<l4, l5, not((main_choose < main_life))>
<l5, l6, (main_choose < main_death)>
<l5, l8, not((main_choose < main_death))>
<l6, l7, true, seq{main_life -> main_choose}>
<l7, l8, true>
<l8, l2, true>
<l9, l10, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

+ Assume Nodes [0]: ++++++++++++++++++++++++++++++++++++++++++++++++
       
+ Static Assert Nodes [0]: +++++++++++++++++++++++++++++++++++++++++
       
+ After preprocess (paralelization): ++++++++++++++++++++++++++++++

Init Location: 0
Transitions:
<l0, l1, true, seq{main__func_return_ -> 0, main_choose -> 2, main_life -> 13, main_death -> 17}>
<l1, l2, true>
<l2, l3, (main_life < main_death)>
<l2, l9, not((main_life < main_death))>
<l3, l4, true, seq{main_temp -> main_death, main_death -> (main_life + 1), main_life -> main_temp}>
<l4, l6, (main_choose < main_life)>
<l4, l5, not((main_choose < main_life))>
<l5, l6, (main_choose < main_death)>
<l5, l8, not((main_choose < main_death))>
<l6, l7, true, seq{main_life -> main_choose}>
<l7, l8, true>
<l8, l2, true>
<l9, l10, true, seq{main__func_return_ -> 0}>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
10, 
Accepting locations:

Asserts:

+                                                                  +
+++++++++++++++++++++++++++++++ main +++++++++++++++++++++++++++++++


Function Return and Parameters Information [1 functions]:
    function name: main [1 return + 0 parameters]        demangled: main
        main__func_return_      [function result] : int


AST Ident Scanner Information [6 idents]:
__VERIFIER_nondet_int | function | [integer, ()] | <line: 3, col: 1>
main | function | [integer, ()] | <line: 5, col: 1>
choose | local variable | integer | <line: 6, col: 5> | <line: 10, col: 5> <line: 19, col: 13> <line: 19, col: 30> <line: 20, col: 20>
life | local variable | integer | <line: 7, col: 5> | <line: 11, col: 5> <line: 14, col: 12> <line: 16, col: 17> <line: 17, col: 9> <line: 19, col: 22> <line: 20, col: 13>
death | local variable | integer | <line: 8, col: 5> | <line: 12, col: 5> <line: 14, col: 19> <line: 15, col: 16> <line: 16, col: 9> <line: 19, col: 39>
temp | local variable | integer | <line: 9, col: 5> | <line: 15, col: 9> <line: 17, col: 16>

Main function: main
Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (2 = 2) /\ (main_life = 13) /\ (main_death = 17)>
<l2, l2, (main_life < main_death) /\ (2 < main_death), par{main_life -> 2, main_death -> (main_life + 1)}>
<l2, l2, (main_life < main_death) /\ not((2 < main_death)) /\ not((2 < (main_life + 1))), par{main_life -> main_death, main_death -> (main_life + 1)}>
<l2, l10, not((main_life < main_death))>

Fresh variables:

Undef variables:

Abstraction variables:

Exit nodes:
10, 
Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 + main_life <= main_death /\ 3 <= main_death, {main_life -> 2, main_death -> 1 + main_life, rest remain the same}>
<l2, l2, 1 + main_life <= main_death /\ main_death <= 2 /\ main_life <= 1, {main_life -> main_death, main_death -> 1 + main_life, rest remain the same}>
Variables:
main_life, main_death

Graph 2:
Transitions:
Variables:

Precedence: 
Graph 0

Graph 1
<l0, l2, main_life = 13 /\ main_death = 17, {all remain the same}>

Graph 2
<l2, l10, main_death <= main_life, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )
( 10 , 2 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.016022
[33mSome transition disabled by a set of invariant(s):[0m
[36mInvariant at l2: 2 <= main_life[0m

[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 1 + main_life <= main_death /\ main_death <= 2 /\ main_life <= 1, {main_life -> main_death, main_death -> 1 + main_life, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 2 <= main_life /\ 1 + main_life <= main_death /\ 3 <= main_death, {main_life -> 2, main_death -> 1 + main_life, rest remain the same}>
Checking unfeasibility...
Time used: 0.015096

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000485s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001027s
[7198 : 7200]
[7198 : 7201]
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.358531s
Time used: 0.356431
Termination failed. Trying to show unreachability...
Proving unreachability of entry: <l0, l2, main_life = 13 /\ main_death = 17, {all remain the same}>

LOG: CALL check - Post:1 <= 0 - Process 1
* Exit transition: <l0, l2, main_life = 13 /\ main_death = 17, {all remain the same}>
* Postcondition  : 1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001779s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.001822s
Cannot prove unreachability

[7198 : 7205]
[7198 : 7208]
Successful child: 7205

[32mProgram does NOT terminate[0m
