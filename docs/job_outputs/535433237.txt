WORST_CASE(Omega(0),?)

Initial ITS
Start location: l7
   0: l0 -> l1 : x_5^0'=x_5^post0, Result_4^0'=Result_4^post0, y_6^0'=y_6^post0, (y_6^0-y_6^post0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ x_5^0-x_5^post0 == 0), cost: 1
   1: l1 -> l3 : x_5^0'=x_5^post1, Result_4^0'=Result_4^post1, y_6^0'=y_6^post1, (y_6^0-y_6^post1 == 0 /\ Result_4^0-Result_4^post1 == 0 /\ x_5^0-x_5^post1 == 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
   5: l1 -> l5 : x_5^0'=x_5^post5, Result_4^0'=Result_4^post5, y_6^0'=y_6^post5, (-Result_4^post5+Result_4^0 == 0 /\ -1+x_5^post5-x_5^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ x_5^0-y_6^0 <= 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
   7: l1 -> l6 : x_5^0'=x_5^post7, Result_4^0'=Result_4^post7, y_6^0'=y_6^post7, (-1-x_5^0+x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -Result_4^post7+Result_4^0 == 0 /\ 1+x_5^0-y_6^0 <= 0), cost: 1
   2: l3 -> l4 : x_5^0'=x_5^post2, Result_4^0'=Result_4^post2, y_6^0'=y_6^post2, (y_6^0-y_6^post2 == 0 /\ x_5^0-x_5^post2 == 0 /\ 1+x_5^0-y_6^0 <= 0 /\ -Result_4^post2+Result_4^0 == 0), cost: 1
   3: l3 -> l4 : x_5^0'=x_5^post3, Result_4^0'=Result_4^post3, y_6^0'=y_6^post3, (-Result_4^post3+Result_4^0 == 0 /\ -x_5^post3+x_5^0 == 0 /\ -y_6^post3+y_6^0 == 0 /\ 1-x_5^0+y_6^0 <= 0), cost: 1
   4: l4 -> l2 : x_5^0'=x_5^post4, Result_4^0'=Result_4^post4, y_6^0'=y_6^post4, (0 == 0 /\ -y_6^post4+y_6^0 == 0 /\ -x_5^post4+x_5^0 == 0), cost: 1
   6: l5 -> l1 : x_5^0'=x_5^post6, Result_4^0'=Result_4^post6, y_6^0'=y_6^post6, (-Result_4^post6+Result_4^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
   8: l6 -> l1 : x_5^0'=x_5^post8, Result_4^0'=Result_4^post8, y_6^0'=y_6^post8, (Result_4^0-Result_4^post8 == 0 /\ -y_6^post8+y_6^0 == 0 /\ x_5^0-x_5^post8 == 0), cost: 1
   9: l7 -> l0 : x_5^0'=x_5^post9, Result_4^0'=Result_4^post9, y_6^0'=y_6^post9, (x_5^0-x_5^post9 == 0 /\ Result_4^0-Result_4^post9 == 0 /\ -y_6^post9+y_6^0 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l7
   0: l0 -> l1 : x_5^0'=x_5^post0, Result_4^0'=Result_4^post0, y_6^0'=y_6^post0, (y_6^0-y_6^post0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ x_5^0-x_5^post0 == 0), cost: 1
   5: l1 -> l5 : x_5^0'=x_5^post5, Result_4^0'=Result_4^post5, y_6^0'=y_6^post5, (-Result_4^post5+Result_4^0 == 0 /\ -1+x_5^post5-x_5^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ x_5^0-y_6^0 <= 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
   7: l1 -> l6 : x_5^0'=x_5^post7, Result_4^0'=Result_4^post7, y_6^0'=y_6^post7, (-1-x_5^0+x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -Result_4^post7+Result_4^0 == 0 /\ 1+x_5^0-y_6^0 <= 0), cost: 1
   6: l5 -> l1 : x_5^0'=x_5^post6, Result_4^0'=Result_4^post6, y_6^0'=y_6^post6, (-Result_4^post6+Result_4^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
   8: l6 -> l1 : x_5^0'=x_5^post8, Result_4^0'=Result_4^post8, y_6^0'=y_6^post8, (Result_4^0-Result_4^post8 == 0 /\ -y_6^post8+y_6^0 == 0 /\ x_5^0-x_5^post8 == 0), cost: 1
   9: l7 -> l0 : x_5^0'=x_5^post9, Result_4^0'=Result_4^post9, y_6^0'=y_6^post9, (x_5^0-x_5^post9 == 0 /\ Result_4^0-Result_4^post9 == 0 /\ -y_6^post9+y_6^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x_5^0'=x_5^post0, Result_4^0'=Result_4^post0, y_6^0'=y_6^post0, (y_6^0-y_6^post0 == 0 /\ Result_4^0-Result_4^post0 == 0 /\ x_5^0-x_5^post0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l5 : x_5^0'=x_5^post5, Result_4^0'=Result_4^post5, y_6^0'=y_6^post5, (-Result_4^post5+Result_4^0 == 0 /\ -1+x_5^post5-x_5^0 == 0 /\ -y_6^post5+y_6^0 == 0 /\ x_5^0-y_6^0 <= 0 /\ -x_5^0+y_6^0 <= 0), cost: 1
New rule:
l1 -> l5 : x_5^0'=1+x_5^0, x_5^0-y_6^0 == 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l1 : x_5^0'=x_5^post6, Result_4^0'=Result_4^post6, y_6^0'=y_6^post6, (-Result_4^post6+Result_4^0 == 0 /\ x_5^0-x_5^post6 == 0 /\ -y_6^post6+y_6^0 == 0), cost: 1
New rule:
l5 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l6 : x_5^0'=x_5^post7, Result_4^0'=Result_4^post7, y_6^0'=y_6^post7, (-1-x_5^0+x_5^post7 == 0 /\ -y_6^post7+y_6^0 == 0 /\ -Result_4^post7+Result_4^0 == 0 /\ 1+x_5^0-y_6^0 <= 0), cost: 1
New rule:
l1 -> l6 : x_5^0'=1+x_5^0, 1+x_5^0-y_6^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l6 -> l1 : x_5^0'=x_5^post8, Result_4^0'=Result_4^post8, y_6^0'=y_6^post8, (Result_4^0-Result_4^post8 == 0 /\ -y_6^post8+y_6^0 == 0 /\ x_5^0-x_5^post8 == 0), cost: 1
New rule:
l6 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l7 -> l0 : x_5^0'=x_5^post9, Result_4^0'=Result_4^post9, y_6^0'=y_6^post9, (x_5^0-x_5^post9 == 0 /\ Result_4^0-Result_4^post9 == 0 /\ -y_6^post9+y_6^0 == 0), cost: 1
New rule:
l7 -> l0 : TRUE, cost: 1

Simplified rules
Start location: l7
  10: l0 -> l1 : TRUE, cost: 1
  11: l1 -> l5 : x_5^0'=1+x_5^0, x_5^0-y_6^0 == 0, cost: 1
  13: l1 -> l6 : x_5^0'=1+x_5^0, 1+x_5^0-y_6^0 <= 0, cost: 1
  12: l5 -> l1 : TRUE, cost: 1
  14: l6 -> l1 : TRUE, cost: 1
  15: l7 -> l0 : TRUE, cost: 1


Eliminating location l0 by chaining:

Applied chaining
First rule:
l7 -> l0 : TRUE, cost: 1
Second rule:
l0 -> l1 : TRUE, cost: 1
New rule:
l7 -> l1 : TRUE, cost: 2

Applied deletion
Removed the following rules: 10 15

Eliminating location l5 by chaining:

Applied chaining
First rule:
l1 -> l5 : x_5^0'=1+x_5^0, x_5^0-y_6^0 == 0, cost: 1
Second rule:
l5 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : x_5^0'=1+x_5^0, x_5^0-y_6^0 == 0, cost: 2

Applied deletion
Removed the following rules: 11 12

Eliminating location l6 by chaining:

Applied chaining
First rule:
l1 -> l6 : x_5^0'=1+x_5^0, 1+x_5^0-y_6^0 <= 0, cost: 1
Second rule:
l6 -> l1 : TRUE, cost: 1
New rule:
l1 -> l1 : x_5^0'=1+x_5^0, 1+x_5^0-y_6^0 <= 0, cost: 2

Applied deletion
Removed the following rules: 13 14

Eliminated locations on linear paths
Start location: l7
  17: l1 -> l1 : x_5^0'=1+x_5^0, x_5^0-y_6^0 == 0, cost: 2
  18: l1 -> l1 : x_5^0'=1+x_5^0, 1+x_5^0-y_6^0 <= 0, cost: 2
  16: l7 -> l1 : TRUE, cost: 2


Applied acceleration
Original rule:
l1 -> l1 : x_5^0'=1+x_5^0, 1+x_5^0-y_6^0 <= 0, cost: 2
New rule:
l1 -> l1 : x_5^0'=n0+x_5^0, (n0 >= 0 /\ -n0-x_5^0+y_6^0 >= 0), cost: 2*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_cIdngA.txt

Applied instantiation
Original rule:
l1 -> l1 : x_5^0'=n0+x_5^0, (n0 >= 0 /\ -n0-x_5^0+y_6^0 >= 0), cost: 2*n0
New rule:
l1 -> l1 : x_5^0'=y_6^0, (0 >= 0 /\ -x_5^0+y_6^0 >= 0), cost: -2*x_5^0+2*y_6^0

Applied simplification
Original rule:
l1 -> l1 : x_5^0'=y_6^0, (0 >= 0 /\ -x_5^0+y_6^0 >= 0), cost: -2*x_5^0+2*y_6^0
New rule:
l1 -> l1 : x_5^0'=y_6^0, -x_5^0+y_6^0 >= 0, cost: -2*x_5^0+2*y_6^0

Applied deletion
Removed the following rules: 18

Accelerated simple loops
Start location: l7
  17: l1 -> l1 : x_5^0'=1+x_5^0, x_5^0-y_6^0 == 0, cost: 2
  20: l1 -> l1 : x_5^0'=y_6^0, -x_5^0+y_6^0 >= 0, cost: -2*x_5^0+2*y_6^0
  16: l7 -> l1 : TRUE, cost: 2


Applied chaining
First rule:
l7 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : x_5^0'=1+x_5^0, x_5^0-y_6^0 == 0, cost: 2
New rule:
l7 -> l1 : x_5^0'=1+x_5^0, x_5^0-y_6^0 == 0, cost: 4

Applied chaining
First rule:
l7 -> l1 : TRUE, cost: 2
Second rule:
l1 -> l1 : x_5^0'=y_6^0, -x_5^0+y_6^0 >= 0, cost: -2*x_5^0+2*y_6^0
New rule:
l7 -> l1 : x_5^0'=y_6^0, -x_5^0+y_6^0 >= 0, cost: 2-2*x_5^0+2*y_6^0

Applied deletion
Removed the following rules: 17 20

Chained accelerated rules with incoming rules
Start location: l7
  16: l7 -> l1 : TRUE, cost: 2
  21: l7 -> l1 : x_5^0'=1+x_5^0, x_5^0-y_6^0 == 0, cost: 4
  22: l7 -> l1 : x_5^0'=y_6^0, -x_5^0+y_6^0 >= 0, cost: 2-2*x_5^0+2*y_6^0


Removed unreachable locations and irrelevant leafs
Start location: l7
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

