NO

Solver Timeout: 4
Global Timeout: 300
No parsing errors!
Init Location: 0
Transitions:
<l0, l3, true>
<l1, l2, (arg1 > 0) /\ (arg2 > ~(1)), par{arg1 -> arg2, arg2 -> undef2}>
<l2, l2, (arg1 > 0) /\ (arg1 < 4), par{arg1 -> (arg1 - 1), arg2 -> undef4}>
<l2, l2, (arg1 > 3), par{arg1 -> (arg1 + 1), arg2 -> undef6}>
<l3, l1, true, par{arg1 -> undef7, arg2 -> undef8}>

Fresh variables:
undef2, undef4, undef6, undef7, undef8, 

Undef variables:
undef2, undef4, undef6, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

Preprocessed LLVMGraph
Init Location: 0
Transitions:
<l0, l2, (arg1 = undef8) /\ (undef7 > 0) /\ (undef8 > ~(1))>
<l2, l2, (arg1 > 0) /\ (arg1 < 4), par{arg1 -> (arg1 - 1)}>
<l2, l2, (arg1 > 3), par{arg1 -> (arg1 + 1)}>

Fresh variables:
undef2, undef4, undef6, undef7, undef8, 

Undef variables:
undef2, undef4, undef6, undef7, undef8, 

Abstraction variables:

Exit nodes:

Accepting locations:

Asserts:

*************************************************************
*******************************************************************************************
***********************       WORKING TRANSITION SYSTEM (DAG)       ***********************
*******************************************************************************************

Init Location: 0
Graph 0:
Transitions:
Variables:

Graph 1:
Transitions:
<l2, l2, 1 <= arg1 /\ arg1 <= 3, {arg1 -> -1 + arg1, rest remain the same}>
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Precedence: 
Graph 0

Graph 1
<l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>

Map Locations to Subgraph:
( 0 , 0 )
( 2 , 1 )

*******************************************************************************************
********************************    CHECKING ASSERTIONS    ********************************
*******************************************************************************************

Proving termination of subgraph 0
Proving termination of subgraph 1
Checking unfeasibility...
Time used: 0.002907

Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000761s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.003078s
[33mPiecewise ranking function: [36mmin(-5 + 5*arg1,79 - 21*arg1)[0m
New Graphs: 
Transitions:
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000397s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001159s
Trying to remove transition: <l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003526s
Time used: 0.003404
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006630s
Time used: 0.006357
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.020070s
Time used: 0.020065

LOG: SAT solveNonLinear - Elapsed time: 0.026700s
Cost: 1; Total time: 0.026422
[31mFailed at location 2: arg1 <= 0[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 <= 0[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002165s
Remaining time after improvement: 0.999108
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 <= 0[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ arg1 <= 3, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m
> It's unfeasible. Removing transition: 
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 0 and entry <l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>

LOG: CALL check - Post:arg1 <= 0 - Process 1
* Exit transition: <l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>
* Postcondition  : arg1 <= 0

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000512s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000614s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 <= 0 , 
Narrowing transition: 
<l2, l2, 1 <= arg1 /\ arg1 <= 3, {arg1 -> -1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
Narrowing transition: 
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 1 <= arg1 /\ arg1 <= 3, {arg1 -> -1 + arg1, rest remain the same}>
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000700s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002969s
[33mPiecewise ranking function: [36mmin(-5 + 5*arg1,79 - 21*arg1)[0m
New Graphs: 
Transitions:
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000401s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001202s
Trying to remove transition: <l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003379s
Time used: 0.003255
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.006755s
Time used: 0.006436
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.017458s
Time used: 0.017453

LOG: SAT solveNonLinear - Elapsed time: 0.024212s
Cost: 1; Total time: 0.023889
[31mFailed at location 2: arg1 <= 1[0m
Before Improving: 
[36mQuasi-invariant at l2: arg1 <= 1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.002413s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001385s
Quasi-invariant improved

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001021s
Remaining time after improvement: 0.99665
[33mTermination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: arg1 <= 3[0m
[ Invariant Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 1 <= arg1 /\ arg1 <= 3, {arg1 -> -1 + arg1, rest remain the same}>

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
[ Termination Graph ]
[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
It's unfeasible. Removing transition: 
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
New Graphs: 
Calling Safety with literal arg1 <= 3 and entry <l0, l2, 0 <= undef8 /\ 1 <= arg1 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>

LOG: CALL check - Post:arg1 <= 3 - Process 2
* Exit transition: <l0, l2, 0 <= undef8 /\ 1 <= arg1 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>
* Postcondition  : arg1 <= 3

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000501s
[31m> Postcondition is not implied![0m

LOG: RETURN check - Elapsed time: 0.000614s
INVARIANTS: 
2: 
Quasi-INVARIANTS to narrow Graph: 
2: arg1 <= 3 , 
It's unfeasible. Removing transition: 
<l2, l2, 1 <= arg1 /\ arg1 <= 3, {arg1 -> -1 + arg1, rest remain the same}>
Narrowing transition: 
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>

LOG: Narrow transition size 1
invGraph after Narrowing: 
Transitions:
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000391s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001207s
Trying to remove transition: <l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003386s
Time used: 0.003262
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.044533s
Time used: 4.04461
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.006382s
Time used: 4.00113
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.006121s
Time used: 1.00082
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008725s
Time used: 0.005582
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.013412s
Time used: 0.013407

LOG: SAT solveNonLinear - Elapsed time: 0.022137s
Cost: 1; Total time: 0.018989
[33mQuasi-ranking function: [36m50000 - arg1[0m
New Graphs: 
Transitions:
<l2, l2, 50001 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1
Checking conditional termination of SCC {l2}...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.000412s

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001302s
Trying to remove transition: <l2, l2, 50001 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.003688s
Time used: 0.00356
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.001381s
Time used: 4.0014
Solving with 2 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 4.006999s
Time used: 4.0008
Solving with 3 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 1.006364s
Time used: 1.00115
Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.008524s
Time used: 0.005005

Proving non-termination of subgraph 1
Transitions:
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>
Variables:
arg1

Checking conditional non-termination of SCC {l2}...
EXIT TRANSITIONS:
<l2, end, arg1 <= 3, {all remain the same}>

Solving with 1 template(s).

LOG: CALL solveNonLinearGetFirstSolution

LOG: RETURN solveNonLinearGetFirstSolution - Elapsed time: 0.014307s
Time used: 0.014144
Improving Solution with cost 1 ...

LOG: CALL solveNonLinearGetNextSolution

LOG: RETURN solveNonLinearGetNextSolution - Elapsed time: 0.004426s
Time used: 0.004421

LOG: SAT solveNonLinear - Elapsed time: 0.018733s
Cost: 1; Total time: 0.018565
[31mFailed at location 2: 4 <= arg1[0m
Before Improving: 
[36mQuasi-invariant at l2: 4 <= arg1[0m
Optimizing invariants...

LOG: CALL solveLinear

LOG: RETURN solveLinear - Elapsed time: 0.001417s
Remaining time after improvement: 0.999174
[33mNon-termination implied by a set of quasi-invariant(s):[0m
[36mQuasi-invariant at l2: 4 <= arg1[0m

[33mStrengthening and disabling EXIT transitions...[0m
Closed exits from l2: 1

[33mStrengthening and disabling transitions...[0m

LOG: CALL solverLinear in Graph for feasibility

LOG: RETURN solveLinear in Graph for feasibility
Strengthening transition (result): 
<l2, l2, 4 <= arg1, {arg1 -> 1 + arg1, rest remain the same}>

Calling reachability with...
Transition: <l2, end, true, {all remain the same}>
Conditions: 4 <= arg1, 
OPEN EXITS: 
<l2, end, 4 <= arg1, {all remain the same}>

--- Reachability graph ---
> Graph without transitions.

Calling reachability with...
Transition: <l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ arg1 = undef8, {all remain the same}>
Conditions: 4 <= arg1, 
OPEN EXITS: 
<l0, l2, 0 <= undef8 /\ 1 <= undef7 /\ 4 <= arg1 /\ arg1 = undef8, {all remain the same}>

[32m> Conditions are reachable![0m

[32mProgram does NOT terminate[0m
