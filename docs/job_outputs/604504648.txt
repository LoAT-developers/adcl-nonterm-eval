NO

Initial ITS
Start location: l5
   0: l0 -> l1 : x^0'=x^post0, n^0'=n^post0, (-n^post0+n^0 == 0 /\ -x^post0+x^0 == 0), cost: 1
   1: l1 -> l0 : x^0'=x^post1, n^0'=n^post1, (n^0-n^post1 == 0 /\ x^0-x^post1 == 0), cost: 1
   2: l2 -> l0 : x^0'=x^post2, n^0'=n^post2, (-1+x^post2 == 0 /\ n^0-n^post2 == 0 /\ n^0 <= 0 /\ x^10 == 0), cost: 1
   3: l2 -> l3 : x^0'=x^post3, n^0'=n^post3, (-n^post3+n^0 == 0 /\ 1-n^0 <= 0 /\ x^0-x^post3 == 0), cost: 1
   4: l3 -> l2 : x^0'=x^post4, n^0'=n^post4, (n^0-n^post4 == 0 /\ x^0-x^post4 == 0), cost: 1
   5: l4 -> l2 : x^0'=x^post5, n^0'=n^post5, (0 == 0 /\ -1+x^post5 == 0), cost: 1
   6: l5 -> l4 : x^0'=x^post6, n^0'=n^post6, (-n^post6+n^0 == 0 /\ x^0-x^post6 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : x^0'=x^post0, n^0'=n^post0, (-n^post0+n^0 == 0 /\ -x^post0+x^0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l1 -> l0 : x^0'=x^post1, n^0'=n^post1, (n^0-n^post1 == 0 /\ x^0-x^post1 == 0), cost: 1
New rule:
l1 -> l0 : TRUE, cost: 1

Applied preprocessing
Original rule:
l2 -> l0 : x^0'=x^post2, n^0'=n^post2, (-1+x^post2 == 0 /\ n^0-n^post2 == 0 /\ n^0 <= 0 /\ x^10 == 0), cost: 1
New rule:
l2 -> l0 : x^0'=1, n^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l2 -> l3 : x^0'=x^post3, n^0'=n^post3, (-n^post3+n^0 == 0 /\ 1-n^0 <= 0 /\ x^0-x^post3 == 0), cost: 1
New rule:
l2 -> l3 : -1+n^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l3 -> l2 : x^0'=x^post4, n^0'=n^post4, (n^0-n^post4 == 0 /\ x^0-x^post4 == 0), cost: 1
New rule:
l3 -> l2 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l2 : x^0'=x^post5, n^0'=n^post5, (0 == 0 /\ -1+x^post5 == 0), cost: 1
New rule:
l4 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : x^0'=x^post6, n^0'=n^post6, (-n^post6+n^0 == 0 /\ x^0-x^post6 == 0), cost: 1
New rule:
l5 -> l4 : TRUE, cost: 1

Simplified rules
Start location: l5
   7: l0 -> l1 : TRUE, cost: 1
   8: l1 -> l0 : TRUE, cost: 1
   9: l2 -> l0 : x^0'=1, n^0 <= 0, cost: 1
  10: l2 -> l3 : -1+n^0 >= 0, cost: 1
  11: l3 -> l2 : TRUE, cost: 1
  12: l4 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 1
  13: l5 -> l4 : TRUE, cost: 1


Eliminating location l4 by chaining:

Applied chaining
First rule:
l5 -> l4 : TRUE, cost: 1
Second rule:
l4 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 1
New rule:
l5 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 2

Applied deletion
Removed the following rules: 12 13

Eliminating location l3 by chaining:

Applied chaining
First rule:
l2 -> l3 : -1+n^0 >= 0, cost: 1
Second rule:
l3 -> l2 : TRUE, cost: 1
New rule:
l2 -> l2 : -1+n^0 >= 0, cost: 2

Applied deletion
Removed the following rules: 10 11

Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : TRUE, cost: 1
Second rule:
l1 -> l0 : TRUE, cost: 1
New rule:
l0 -> l0 : TRUE, cost: 2

Applied deletion
Removed the following rules: 7 8

Eliminated locations on linear paths
Start location: l5
  16: l0 -> l0 : TRUE, cost: 2
   9: l2 -> l0 : x^0'=1, n^0 <= 0, cost: 1
  15: l2 -> l2 : -1+n^0 >= 0, cost: 2
  14: l5 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 2


Applied nonterm
Original rule:
l0 -> l0 : TRUE, cost: 2
New rule:
l0 -> [6] : n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_BKAeDC.txt

Applied deletion
Removed the following rules: 16

Applied nonterm
Original rule:
l2 -> l2 : -1+n^0 >= 0, cost: 2
New rule:
l2 -> [7] : (n0 >= 0 /\ -1+n^0 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_clPEDD.txt

Applied deletion
Removed the following rules: 15

Accelerated simple loops
Start location: l5
  17: l0 -> [6] : n >= 0, cost: NONTERM
   9: l2 -> l0 : x^0'=1, n^0 <= 0, cost: 1
  18: l2 -> [7] : (n0 >= 0 /\ -1+n^0 >= 0), cost: NONTERM
  14: l5 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 2


Applied chaining
First rule:
l2 -> l0 : x^0'=1, n^0 <= 0, cost: 1
Second rule:
l0 -> [6] : n >= 0, cost: NONTERM
New rule:
l2 -> [6] : n^0 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 17

Applied chaining
First rule:
l5 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 2
Second rule:
l2 -> [7] : (n0 >= 0 /\ -1+n^0 >= 0), cost: NONTERM
New rule:
l5 -> [7] : 0 == 0, cost: NONTERM

Applied deletion
Removed the following rules: 18

Chained accelerated rules with incoming rules
Start location: l5
   9: l2 -> l0 : x^0'=1, n^0 <= 0, cost: 1
  19: l2 -> [6] : n^0 <= 0, cost: NONTERM
  14: l5 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 2
  20: l5 -> [7] : 0 == 0, cost: NONTERM


Removed unreachable locations and irrelevant leafs
Start location: l5
  19: l2 -> [6] : n^0 <= 0, cost: NONTERM
  14: l5 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 2
  20: l5 -> [7] : 0 == 0, cost: NONTERM


Eliminating location l2 by chaining:

Applied chaining
First rule:
l5 -> l2 : x^0'=1, n^0'=n^post5, 0 == 0, cost: 2
Second rule:
l2 -> [6] : n^0 <= 0, cost: NONTERM
New rule:
l5 -> [6] : (0 == 0 /\ n^post5 <= 0), cost: NONTERM

Applied simplification
Original rule:
l5 -> [6] : (0 == 0 /\ n^post5 <= 0), cost: NONTERM
New rule:
l5 -> [6] : n^post5 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 14 19

Eliminated locations on linear paths
Start location: l5
  20: l5 -> [7] : 0 == 0, cost: NONTERM
  21: l5 -> [6] : n^post5 <= 0, cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 20 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  0 == 0
