WORST_CASE(Omega(0),?)

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f209_0_loop_GT : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P0 == 0 /\ 20-arg2P0 == 0), cost: 1
   1: f209_0_loop_GT -> f209_0_loop_GT : arg2'=arg2P1, arg1'=arg1P1, (-arg1P1 == 0 /\ -arg2 == 0 /\ -arg2P1 == 0 /\ -arg1 == 0), cost: 1
   2: f209_0_loop_GT -> f209_0_loop_GT : arg2'=arg2P2, arg1'=arg1P2, (arg2-arg1 > 0 /\ arg1 > 0 /\ 1+arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0), cost: 1
   3: f209_0_loop_GT -> f209_0_loop_GT : arg2'=arg2P3, arg1'=arg1P3, (-arg1P3 == 0 /\ -arg2+arg1 == 0 /\ arg1 > 0 /\ -1+arg1-arg2P3 == 0), cost: 1
   4: f209_0_loop_GT -> f209_0_loop_GT : arg2'=arg2P4, arg1'=arg1P4, (arg2-arg2P4 == 0 /\ 1-arg1P4 == 0 /\ arg2 > 0 /\ -arg1 == 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f209_0_loop_GT : arg2'=arg2P0, arg1'=arg1P0, (1+arg2 > 0 /\ arg1 > 0 /\ arg2-arg1P0 == 0 /\ 20-arg2P0 == 0), cost: 1
New rule:
f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f209_0_loop_GT -> f209_0_loop_GT : arg2'=arg2P1, arg1'=arg1P1, (-arg1P1 == 0 /\ -arg2 == 0 /\ -arg2P1 == 0 /\ -arg1 == 0), cost: 1
New rule:
f209_0_loop_GT -> f209_0_loop_GT : arg2'=0, arg1'=0, (arg2 == 0 /\ arg1 == 0), cost: 1

Applied preprocessing
Original rule:
f209_0_loop_GT -> f209_0_loop_GT : arg2'=arg2P2, arg1'=arg1P2, (arg2-arg1 > 0 /\ arg1 > 0 /\ 1+arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0), cost: 1
New rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=1+arg1, (arg2-arg1 > 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f209_0_loop_GT -> f209_0_loop_GT : arg2'=arg2P3, arg1'=arg1P3, (-arg1P3 == 0 /\ -arg2+arg1 == 0 /\ arg1 > 0 /\ -1+arg1-arg2P3 == 0), cost: 1
New rule:
f209_0_loop_GT -> f209_0_loop_GT : arg2'=-1+arg1, arg1'=0, (-arg2+arg1 == 0 /\ arg1 > 0), cost: 1

Applied preprocessing
Original rule:
f209_0_loop_GT -> f209_0_loop_GT : arg2'=arg2P4, arg1'=arg1P4, (arg2-arg2P4 == 0 /\ 1-arg1P4 == 0 /\ arg2 > 0 /\ -arg1 == 0), cost: 1
New rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=1, (arg2 > 0 /\ arg1 == 0), cost: 1

Simplified rules
Start location: __init
   6: f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   7: f209_0_loop_GT -> f209_0_loop_GT : arg2'=0, arg1'=0, (arg2 == 0 /\ arg1 == 0), cost: 1
   8: f209_0_loop_GT -> f209_0_loop_GT : arg1'=1+arg1, (arg2-arg1 > 0 /\ arg1 > 0), cost: 1
   9: f209_0_loop_GT -> f209_0_loop_GT : arg2'=-1+arg1, arg1'=0, (-arg2+arg1 == 0 /\ arg1 > 0), cost: 1
  10: f209_0_loop_GT -> f209_0_loop_GT : arg1'=1, (arg2 > 0 /\ arg1 == 0), cost: 1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Applied nonterm
Original rule:
f209_0_loop_GT -> f209_0_loop_GT : arg2'=0, arg1'=0, (arg2 == 0 /\ arg1 == 0), cost: 1
New rule:
f209_0_loop_GT -> [3] : (arg2 >= 0 /\ -1+n >= 0 /\ -arg2 >= 0 /\ arg1 >= 0 /\ -arg1 >= 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_gKMjAc.txt

Applied acceleration
Original rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=1+arg1, (arg2-arg1 > 0 /\ arg1 > 0), cost: 1
New rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=n0+arg1, (n0 >= 0 /\ 1-n0+arg2-arg1 > 0 /\ arg1 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_mAjmcf.txt

Applied instantiation
Original rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=n0+arg1, (n0 >= 0 /\ 1-n0+arg2-arg1 > 0 /\ arg1 > 0), cost: n0
New rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=arg2, (1 > 0 /\ arg2-arg1 >= 0 /\ arg1 > 0), cost: arg2-arg1

Applied simplification
Original rule:
f209_0_loop_GT -> [3] : (arg2 >= 0 /\ -1+n >= 0 /\ -arg2 >= 0 /\ arg1 >= 0 /\ -arg1 >= 0), cost: NONTERM
New rule:
f209_0_loop_GT -> [3] : (arg2 <= 0 /\ arg2 >= 0 /\ -1+n >= 0 /\ arg1 <= 0 /\ arg1 >= 0), cost: NONTERM

Applied simplification
Original rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=arg2, (1 > 0 /\ arg2-arg1 >= 0 /\ arg1 > 0), cost: arg2-arg1
New rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=arg2, (arg2-arg1 >= 0 /\ arg1 > 0), cost: arg2-arg1

Applied deletion
Removed the following rules: 7 8

Accelerated simple loops
Start location: __init
   6: f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
   9: f209_0_loop_GT -> f209_0_loop_GT : arg2'=-1+arg1, arg1'=0, (-arg2+arg1 == 0 /\ arg1 > 0), cost: 1
  10: f209_0_loop_GT -> f209_0_loop_GT : arg1'=1, (arg2 > 0 /\ arg1 == 0), cost: 1
  13: f209_0_loop_GT -> [3] : (arg2 <= 0 /\ arg2 >= 0 /\ -1+n >= 0 /\ arg1 <= 0 /\ arg1 >= 0), cost: NONTERM
  14: f209_0_loop_GT -> f209_0_loop_GT : arg1'=arg2, (arg2-arg1 >= 0 /\ arg1 > 0), cost: arg2-arg1
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f209_0_loop_GT -> f209_0_loop_GT : arg2'=-1+arg1, arg1'=0, (-arg2+arg1 == 0 /\ arg1 > 0), cost: 1
New rule:
f1_0_main_Load -> f209_0_loop_GT : arg2'=-1+arg2, arg1'=0, (-20+arg2 == 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=1, (arg2 > 0 /\ arg1 == 0), cost: 1
New rule:
f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=1, (arg2 == 0 /\ arg1 > 0), cost: 2

Applied chaining
First rule:
f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
Second rule:
f209_0_loop_GT -> f209_0_loop_GT : arg1'=arg2, (arg2-arg1 >= 0 /\ arg1 > 0), cost: arg2-arg1
New rule:
f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=20, (arg2 > 0 /\ -20+arg2 <= 0 /\ arg1 > 0), cost: 21-arg2

Applied deletion
Removed the following rules: 9 10 13 14

Chained accelerated rules with incoming rules
Start location: __init
   6: f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=arg2, (1+arg2 > 0 /\ arg1 > 0), cost: 1
  15: f1_0_main_Load -> f209_0_loop_GT : arg2'=-1+arg2, arg1'=0, (-20+arg2 == 0 /\ arg1 > 0), cost: 2
  16: f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=1, (arg2 == 0 /\ arg1 > 0), cost: 2
  17: f1_0_main_Load -> f209_0_loop_GT : arg2'=20, arg1'=20, (arg2 > 0 /\ -20+arg2 <= 0 /\ arg1 > 0), cost: 21-arg2
   5: __init -> f1_0_main_Load : arg2'=arg2P5, arg1'=arg1P5, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
  <empty>


Computing asymptotic complexity

Proved the following lower bound
Complexity:  Unknown
Cpx degree: ?

Solved cost: 0
Rule cost:   0

