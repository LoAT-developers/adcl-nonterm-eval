NO

Initial ITS
Start location: __init
   0: f1_0_main_Load -> f1_0_main_Load\' : arg2'=arg2P0, arg1'=arg1P0, (arg2-arg2P0 == 0 /\ -arg1P0+arg1 == 0 /\ arg1 > 0 /\ 1+x110 > 0 /\ -1+arg2 > 0 /\ -1-2*x130+x120 == 0 /\ 1+x120 > 0), cost: 1
   2: f1_0_main_Load -> f1_0_main_Load\' : arg2'=arg2P2, arg1'=arg1P2, (-2*x230+x220 == 0 /\ 1+x210 > 0 /\ arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x220 > 0), cost: 1
   1: f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P1, arg1'=arg1P1, (-2-2*x180+x170 < 0 /\ -2*x180+x170 >= 0 /\ 1+arg1P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x170 > 0 /\ -1-2*x180+x170 == 0), cost: 1
   3: f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P3, arg1'=arg1P3, (-arg1P3-x260 == 0 /\ -2+x270-2*x280 < 0 /\ x270-2*x280 >= 0 /\ x270-2*x280 == 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x270 > 0 /\ 1+x260 > 0), cost: 1
   4: f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P4, arg1'=arg1P4, (-1-arg1P4+arg1 == 0 /\ arg1 < 0), cost: 1
   5: f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=arg1P5, (-1+arg1-arg1P5 == 0 /\ arg1 > 0), cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied preprocessing
Original rule:
f1_0_main_Load -> f1_0_main_Load\' : arg2'=arg2P0, arg1'=arg1P0, (arg2-arg2P0 == 0 /\ -arg1P0+arg1 == 0 /\ arg1 > 0 /\ 1+x110 > 0 /\ -1+arg2 > 0 /\ -1-2*x130+x120 == 0 /\ 1+x120 > 0), cost: 1
New rule:
f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x130 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P1, arg1'=arg1P1, (-2-2*x180+x170 < 0 /\ -2*x180+x170 >= 0 /\ 1+arg1P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x170 > 0 /\ -1-2*x180+x170 == 0), cost: 1
New rule:
f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P1, arg1'=arg1P1, (1+arg1P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x180 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load -> f1_0_main_Load\' : arg2'=arg2P2, arg1'=arg1P2, (-2*x230+x220 == 0 /\ 1+x210 > 0 /\ arg1-arg1P2 == 0 /\ arg2-arg2P2 == 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x220 > 0), cost: 1
New rule:
f1_0_main_Load -> f1_0_main_Load\' : (1+2*x230 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1

Applied preprocessing
Original rule:
f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P3, arg1'=arg1P3, (-arg1P3-x260 == 0 /\ -2+x270-2*x280 < 0 /\ x270-2*x280 >= 0 /\ x270-2*x280 == 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x270 > 0 /\ 1+x260 > 0), cost: 1
New rule:
f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P3, arg1'=-x260, (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x260 > 0), cost: 1

Applied preprocessing
Original rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P4, arg1'=arg1P4, (-1-arg1P4+arg1 == 0 /\ arg1 < 0), cost: 1
New rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P4, arg1'=-1+arg1, -arg1 > 0, cost: 1

Applied preprocessing
Original rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=arg1P5, (-1+arg1-arg1P5 == 0 /\ arg1 > 0), cost: 1
New rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=-1+arg1, arg1 > 0, cost: 1

Simplified rules
Start location: __init
   7: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x130 > 0), cost: 1
   9: f1_0_main_Load -> f1_0_main_Load\' : (1+2*x230 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   8: f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P1, arg1'=arg1P1, (1+arg1P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x180 > 0), cost: 1
  10: f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P3, arg1'=-x260, (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x260 > 0), cost: 1
  11: f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P4, arg1'=-1+arg1, -arg1 > 0, cost: 1
  12: f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=-1+arg1, arg1 > 0, cost: 1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied nonterm
Original rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P4, arg1'=-1+arg1, -arg1 > 0, cost: 1
New rule:
f171_0_sum_EQ -> [4] : (-1+n >= 0 /\ -arg1 > 0), cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_OdEKoe.txt

Applied acceleration
Original rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=-1+arg1, arg1 > 0, cost: 1
New rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=arg1-n0, (-1+n0 >= 0 /\ 1+arg1-n0 > 0), cost: n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_dMofhC.txt

Applied instantiation
Original rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=arg1-n0, (-1+n0 >= 0 /\ 1+arg1-n0 > 0), cost: n0
New rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=0, (1 > 0 /\ -1+arg1 >= 0), cost: arg1

Applied simplification
Original rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=0, (1 > 0 /\ -1+arg1 >= 0), cost: arg1
New rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=0, -1+arg1 >= 0, cost: arg1

Applied deletion
Removed the following rules: 11 12

Accelerated simple loops
Start location: __init
   7: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x130 > 0), cost: 1
   9: f1_0_main_Load -> f1_0_main_Load\' : (1+2*x230 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   8: f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P1, arg1'=arg1P1, (1+arg1P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x180 > 0), cost: 1
  10: f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P3, arg1'=-x260, (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x260 > 0), cost: 1
  13: f171_0_sum_EQ -> [4] : (-1+n >= 0 /\ -arg1 > 0), cost: NONTERM
  15: f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=0, -1+arg1 >= 0, cost: arg1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Applied chaining
First rule:
f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P3, arg1'=-x260, (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x260 > 0), cost: 1
Second rule:
f171_0_sum_EQ -> [4] : (-1+n >= 0 /\ -arg1 > 0), cost: NONTERM
New rule:
f1_0_main_Load\' -> [4] : (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM

Applied chaining
First rule:
f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P1, arg1'=arg1P1, (1+arg1P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x180 > 0), cost: 1
Second rule:
f171_0_sum_EQ -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=0, -1+arg1 >= 0, cost: arg1
New rule:
f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=0, (arg1 > 0 /\ -1+arg1P1 >= 0 /\ -1+arg2 > 0 /\ 2+2*x180 > 0), cost: 1+arg1P1

Applied deletion
Removed the following rules: 13 15

Chained accelerated rules with incoming rules
Start location: __init
   7: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x130 > 0), cost: 1
   9: f1_0_main_Load -> f1_0_main_Load\' : (1+2*x230 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   8: f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P1, arg1'=arg1P1, (1+arg1P1 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x180 > 0), cost: 1
  10: f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P3, arg1'=-x260, (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 1+x260 > 0), cost: 1
  16: f1_0_main_Load\' -> [4] : (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
  17: f1_0_main_Load\' -> f171_0_sum_EQ : arg2'=arg2P5, arg1'=0, (arg1 > 0 /\ -1+arg1P1 >= 0 /\ -1+arg2 > 0 /\ 2+2*x180 > 0), cost: 1+arg1P1
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Removed unreachable locations and irrelevant leafs
Start location: __init
   7: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x130 > 0), cost: 1
   9: f1_0_main_Load -> f1_0_main_Load\' : (1+2*x230 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  16: f1_0_main_Load\' -> [4] : (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
   6: __init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1


Eliminating location f1_0_main_Load by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x130 > 0), cost: 1
New rule:
__init -> f1_0_main_Load\' : arg2'=arg2P6, arg1'=arg1P6, (arg1P6 > 0 /\ 2+2*x130 > 0 /\ -1+arg2P6 > 0), cost: 2

Applied chaining
First rule:
__init -> f1_0_main_Load : arg2'=arg2P6, arg1'=arg1P6, TRUE, cost: 1
Second rule:
f1_0_main_Load -> f1_0_main_Load\' : (1+2*x230 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
New rule:
__init -> f1_0_main_Load\' : arg2'=arg2P6, arg1'=arg1P6, (1+2*x230 > 0 /\ arg1P6 > 0 /\ -1+arg2P6 > 0), cost: 2

Applied deletion
Removed the following rules: 6 7 9

Eliminated locations on tree-shaped paths
Start location: __init
  16: f1_0_main_Load\' -> [4] : (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
  18: __init -> f1_0_main_Load\' : arg2'=arg2P6, arg1'=arg1P6, (arg1P6 > 0 /\ 2+2*x130 > 0 /\ -1+arg2P6 > 0), cost: 2
  19: __init -> f1_0_main_Load\' : arg2'=arg2P6, arg1'=arg1P6, (1+2*x230 > 0 /\ arg1P6 > 0 /\ -1+arg2P6 > 0), cost: 2


Eliminating location f1_0_main_Load\' by chaining:

Applied chaining
First rule:
__init -> f1_0_main_Load\' : arg2'=arg2P6, arg1'=arg1P6, (arg1P6 > 0 /\ 2+2*x130 > 0 /\ -1+arg2P6 > 0), cost: 2
Second rule:
f1_0_main_Load\' -> [4] : (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
New rule:
__init -> [4] : (1+2*x280 > 0 /\ arg1P6 > 0 /\ 2+2*x130 > 0 /\ -1+arg2P6 > 0), cost: NONTERM

Applied chaining
First rule:
__init -> f1_0_main_Load\' : arg2'=arg2P6, arg1'=arg1P6, (1+2*x230 > 0 /\ arg1P6 > 0 /\ -1+arg2P6 > 0), cost: 2
Second rule:
f1_0_main_Load\' -> [4] : (1+2*x280 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: NONTERM
New rule:
__init -> [4] : (1+2*x230 > 0 /\ 1+2*x280 > 0 /\ arg1P6 > 0 /\ -1+arg2P6 > 0), cost: NONTERM

Applied deletion
Removed the following rules: 16 18 19

Eliminated locations on tree-shaped paths
Start location: __init
  20: __init -> [4] : (1+2*x280 > 0 /\ arg1P6 > 0 /\ 2+2*x130 > 0 /\ -1+arg2P6 > 0), cost: NONTERM
  21: __init -> [4] : (1+2*x230 > 0 /\ 1+2*x280 > 0 /\ arg1P6 > 0 /\ -1+arg2P6 > 0), cost: NONTERM


Computing asymptotic complexity
Proved nontermination of rule 20 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (1+2*x280 > 0 /\ arg1P6 > 0 /\ 2+2*x130 > 0 /\ -1+arg2P6 > 0)
