NO

Initial ITS

Start location: __init
Program variables: arg1 arg2
   0: f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1p1, arg2'=arg2p1, (-arg2p1+arg2 == 0 /\ -1+x13-2*x14 == 0 /\ 1+x13 > 0 /\ -arg1p1+arg1 == 0 /\ 1+x12 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   3: f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1p4, arg2'=arg2p4, (x23-2*x24 == 0 /\ -arg2p4+arg2 == 0 /\ -arg1p4+arg1 == 0 /\ 1+x22 > 0 /\ 1+x23 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   1: f1_0_main_Load\' -> f122_0_even_EQ : arg1'=arg1p2, arg2'=arg2p2, (1+arg1p2 > 0 /\ -2*x19+x18 >= 0 /\ -2-2*x19+x18 < 0 /\ 1+x18 > 0 /\ -1-2*x19+x18 == 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   4: f1_0_main_Load\' -> f146_0_even_EQ : arg1'=arg1p5, arg2'=arg2p5, (x28-2*x29 >= 0 /\ x28-2*x29 == 0 /\ -2+x28-2*x29 < 0 /\ 1+x27 > 0 /\ -arg1p5-x27 == 0 /\ 1+x28 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   2: f122_0_even_EQ -> f146_0_even_EQ : arg1'=arg1p3, arg2'=arg2p3, (-arg1p3 == 0 /\ -arg1 == 0), cost: 1
   5: f122_0_even_EQ -> f122_0_even_EQ : arg1'=arg1p6, arg2'=arg2p6, (-2-arg1p6+arg1 == 0 /\ -1+arg1 > 0), cost: 1
   6: f146_0_even_EQ -> f146_0_even_EQ : arg1'=arg1p7, arg2'=arg2p7, (-3+arg1 < 0 /\ -2-arg1p7+arg1 == 0 /\ arg1 < 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, T, cost: 1

Simplified Transitions

Start location: __init
Program variables: arg1 arg2
   8: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
  11: f1_0_main_Load -> f1_0_main_Load\' : (1+2*x24 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   9: f1_0_main_Load\' -> f122_0_even_EQ : arg1'=arg1p2, arg2'=arg2p2, (1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0), cost: 1
  12: f1_0_main_Load\' -> f146_0_even_EQ : arg1'=-x27, arg2'=arg2p5, (1+x27 > 0 /\ 1+2*x29 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  10: f122_0_even_EQ -> f146_0_even_EQ : arg1'=0, arg2'=arg2p3, -arg1 == 0, cost: 1
  13: f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p6, -1+arg1 > 0, cost: 1
  14: f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p7, (-3+arg1 < 0 /\ arg1 < 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, T, cost: 1

	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1p1, arg2'=arg2p1, (-arg2p1+arg2 == 0 /\ -1+x13-2*x14 == 0 /\ 1+x13 > 0 /\ -arg1p1+arg1 == 0 /\ 1+x12 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ -1+x13-2*x14 == 0 /\ 1+x13 > 0 /\ 1+x12 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg2p1 = arg2
		
		propagated equality arg1p1 = arg1
		
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ -1+x13-2*x14 == 0 /\ 1+x13 > 0 /\ 1+x12 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ 1+x12 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
	
		propagated equality x13 = 1+2*x14
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ 1+x12 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (1+x12 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (1+x12 > 0 /\ arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load\' -> f122_0_even_EQ : arg1'=arg1p2, arg2'=arg2p2, (1+arg1p2 > 0 /\ -2*x19+x18 >= 0 /\ -2-2*x19+x18 < 0 /\ 1+x18 > 0 /\ -1-2*x19+x18 == 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f122_0_even_EQ : arg1'=arg1p2, arg2'=arg2p2, (0 == 0 /\ 1+arg1p2 > 0 /\ 1 >= 0 /\ -1 < 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality x18 = 1+2*x19
		
	Simplified Guard

	Original rule:
	f1_0_main_Load\' -> f122_0_even_EQ : arg1'=arg1p2, arg2'=arg2p2, (0 == 0 /\ 1+arg1p2 > 0 /\ 1 >= 0 /\ -1 < 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f122_0_even_EQ : arg1'=arg1p2, arg2'=arg2p2, (1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f122_0_even_EQ -> f146_0_even_EQ : arg1'=arg1p3, arg2'=arg2p3, (-arg1p3 == 0 /\ -arg1 == 0), cost: 1
	New rule:
	f122_0_even_EQ -> f146_0_even_EQ : arg1'=0, arg2'=arg2p3, (0 == 0 /\ -arg1 == 0), cost: 1
	
		propagated equality arg1p3 = 0
		
	Simplified Guard

	Original rule:
	f122_0_even_EQ -> f146_0_even_EQ : arg1'=0, arg2'=arg2p3, (0 == 0 /\ -arg1 == 0), cost: 1
	New rule:
	f122_0_even_EQ -> f146_0_even_EQ : arg1'=0, arg2'=arg2p3, -arg1 == 0, cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1p4, arg2'=arg2p4, (x23-2*x24 == 0 /\ -arg2p4+arg2 == 0 /\ -arg1p4+arg1 == 0 /\ 1+x22 > 0 /\ 1+x23 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ x23-2*x24 == 0 /\ 1+x22 > 0 /\ 1+x23 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg2p4 = arg2
		
		propagated equality arg1p4 = arg1
		
	Propagated Equalities

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ x23-2*x24 == 0 /\ 1+x22 > 0 /\ 1+x23 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ 1+2*x24 > 0 /\ 1+x22 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality x23 = 2*x24
		
	Simplified Guard

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (0 == 0 /\ 1+2*x24 > 0 /\ 1+x22 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (1+2*x24 > 0 /\ 1+x22 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (1+2*x24 > 0 /\ 1+x22 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (1+2*x24 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f1_0_main_Load -> f1_0_main_Load\' : arg1'=arg1, arg2'=arg2, (1+2*x24 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load -> f1_0_main_Load\' : (1+2*x24 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f1_0_main_Load\' -> f146_0_even_EQ : arg1'=arg1p5, arg2'=arg2p5, (x28-2*x29 >= 0 /\ x28-2*x29 == 0 /\ -2+x28-2*x29 < 0 /\ 1+x27 > 0 /\ -arg1p5-x27 == 0 /\ 1+x28 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f146_0_even_EQ : arg1'=-x27, arg2'=arg2p5, (0 == 0 /\ x28-2*x29 >= 0 /\ x28-2*x29 == 0 /\ -2+x28-2*x29 < 0 /\ 1+x27 > 0 /\ 1+x28 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality arg1p5 = -x27
		
	Propagated Equalities

	Original rule:
	f1_0_main_Load\' -> f146_0_even_EQ : arg1'=-x27, arg2'=arg2p5, (0 == 0 /\ x28-2*x29 >= 0 /\ x28-2*x29 == 0 /\ -2+x28-2*x29 < 0 /\ 1+x27 > 0 /\ 1+x28 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f146_0_even_EQ : arg1'=-x27, arg2'=arg2p5, (0 >= 0 /\ 0 == 0 /\ -2 < 0 /\ 1+x27 > 0 /\ 1+2*x29 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
		propagated equality x28 = 2*x29
		
	Simplified Guard

	Original rule:
	f1_0_main_Load\' -> f146_0_even_EQ : arg1'=-x27, arg2'=arg2p5, (0 >= 0 /\ 0 == 0 /\ -2 < 0 /\ 1+x27 > 0 /\ 1+2*x29 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	New rule:
	f1_0_main_Load\' -> f146_0_even_EQ : arg1'=-x27, arg2'=arg2p5, (1+x27 > 0 /\ 1+2*x29 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f122_0_even_EQ -> f122_0_even_EQ : arg1'=arg1p6, arg2'=arg2p6, (-2-arg1p6+arg1 == 0 /\ -1+arg1 > 0), cost: 1
	New rule:
	f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p6, (0 == 0 /\ -1+arg1 > 0), cost: 1
	
		propagated equality arg1p6 = -2+arg1
		
	Simplified Guard

	Original rule:
	f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p6, (0 == 0 /\ -1+arg1 > 0), cost: 1
	New rule:
	f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p6, -1+arg1 > 0, cost: 1
	
	Propagated Equalities

	Original rule:
	f146_0_even_EQ -> f146_0_even_EQ : arg1'=arg1p7, arg2'=arg2p7, (-3+arg1 < 0 /\ -2-arg1p7+arg1 == 0 /\ arg1 < 0), cost: 1
	New rule:
	f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p7, (0 == 0 /\ -3+arg1 < 0 /\ arg1 < 0), cost: 1
	
		propagated equality arg1p7 = -2+arg1
		
	Simplified Guard

	Original rule:
	f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p7, (0 == 0 /\ -3+arg1 < 0 /\ arg1 < 0), cost: 1
	New rule:
	f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p7, (-3+arg1 < 0 /\ arg1 < 0), cost: 1

Step with 7

	Trace

	7[T]
	
	Blocked

	[{}, {}]

Step with 8

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)]
	
	Blocked

	[{}, {}, {}]

Step with 9

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {}]

Step with 10

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)], 10[(-arg1 == 0)]
	
	Blocked

	[{}, {}, {}, {}, {}]

Backtrack

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}]

Step with 13

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)], 13[(-1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2
   8: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
  11: f1_0_main_Load -> f1_0_main_Load\' : (1+2*x24 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   9: f1_0_main_Load\' -> f122_0_even_EQ : arg1'=arg1p2, arg2'=arg2p2, (1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0), cost: 1
  12: f1_0_main_Load\' -> f146_0_even_EQ : arg1'=-x27, arg2'=arg2p5, (1+x27 > 0 /\ 1+2*x29 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  10: f122_0_even_EQ -> f146_0_even_EQ : arg1'=0, arg2'=arg2p3, -arg1 == 0, cost: 1
  13: f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p6, -1+arg1 > 0, cost: 1
  15: f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2*n+arg1, arg2'=arg2p6, (1-2*n+arg1 > 0 /\ -1+n >= 0), cost: 1
  14: f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p7, (-3+arg1 < 0 /\ arg1 < 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, T, cost: 1

	Loop Acceleration

	Original rule:
	f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p6, (-1+arg1 > 0), cost: 1
	New rule:
	f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2*n+arg1, arg2'=arg2p6, (1-2*n+arg1 > 0 /\ -1+n >= 0), cost: 1

		-1+arg1 > 0 [0]: montonic decrease yields 1-2*n+arg1 > 0
		
		-1+arg1 > 0 [1]: eventual increase yields (2 <= 0 /\ -1+arg1 > 0)
		
		Replacement map: {-1+arg1 > 0 -> 1-2*n+arg1 > 0}

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)], 15[(1-2*n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}, {13[T], 15[T]}]

Step with 10

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)], 15[(1-2*n+arg1 > 0 /\ -1+n >= 0)], 10[(-arg1 == 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}, {13[T], 15[T]}, {}]

Backtrack

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)], 15[(1-2*n+arg1 > 0 /\ -1+n >= 0)]
	
	Blocked

	[{}, {}, {}, {10[T]}, {10[T], 13[T], 15[T]}]

Backtrack

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {10[T], 15[T]}]

Step with 13

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)], 13[(-1+arg1 > 0)]
	
	Blocked

	[{}, {}, {}, {10[T], 15[T]}, {}]

Covered

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 9[(1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {}, {10[T], 13[T], 15[T]}]

Backtrack

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)]
	
	Blocked

	[{}, {}, {9[T]}]

Step with 12

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 12[(1+x27 > 0 /\ 1+2*x29 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)]
	
	Blocked

	[{}, {}, {9[T]}, {}]

Step with 14

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 12[(1+x27 > 0 /\ 1+2*x29 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)], 14[(-3+arg1 < 0 /\ arg1 < 0)]
	
	Blocked

	[{}, {}, {9[T]}, {}, {}]

Nonterm

Start location: __init
Program variables: arg1 arg2
   8: f1_0_main_Load -> f1_0_main_Load\' : (arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0), cost: 1
  11: f1_0_main_Load -> f1_0_main_Load\' : (1+2*x24 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
   9: f1_0_main_Load\' -> f122_0_even_EQ : arg1'=arg1p2, arg2'=arg2p2, (1+arg1p2 > 0 /\ arg1 > 0 /\ 2+2*x19 > 0 /\ -1+arg2 > 0), cost: 1
  12: f1_0_main_Load\' -> f146_0_even_EQ : arg1'=-x27, arg2'=arg2p5, (1+x27 > 0 /\ 1+2*x29 > 0 /\ arg1 > 0 /\ -1+arg2 > 0), cost: 1
  10: f122_0_even_EQ -> f146_0_even_EQ : arg1'=0, arg2'=arg2p3, -arg1 == 0, cost: 1
  13: f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p6, -1+arg1 > 0, cost: 1
  15: f122_0_even_EQ -> f122_0_even_EQ : arg1'=-2*n+arg1, arg2'=arg2p6, (1-2*n+arg1 > 0 /\ -1+n >= 0), cost: 1
  14: f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p7, (-3+arg1 < 0 /\ arg1 < 0), cost: 1
  16: f146_0_even_EQ -> LoAT_sink : (-1+n2 >= 0 /\ 3-arg1 > 0 /\ -arg1 > 0), cost: NONTERM
  17: f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2*n2+arg1, arg2'=arg2p7, (-1+n2 >= 0 /\ 3-arg1 > 0 /\ -arg1 > 0), cost: 1
   7: __init -> f1_0_main_Load : arg1'=arg1p8, arg2'=arg2p8, T, cost: 1

	Certificate of Non-Termination

	Original rule:
	f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p7, (-3+arg1 < 0 /\ arg1 < 0), cost: 1
	New rule:
	f146_0_even_EQ -> LoAT_sink : (-1+n2 >= 0 /\ 3-arg1 > 0 /\ -arg1 > 0), cost: NONTERM

		3-arg1 > 0 [0]: monotonic increase yields 3-arg1 > 0
		
		-arg1 > 0 [0]: monotonic increase yields -arg1 > 0
		
		Replacement map: {3-arg1 > 0 -> 3-arg1 > 0, -arg1 > 0 -> -arg1 > 0}

	Loop Acceleration

	Original rule:
	f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2+arg1, arg2'=arg2p7, (-3+arg1 < 0 /\ arg1 < 0), cost: 1
	New rule:
	f146_0_even_EQ -> f146_0_even_EQ : arg1'=-2*n2+arg1, arg2'=arg2p7, (-1+n2 >= 0 /\ 3-arg1 > 0 /\ -arg1 > 0), cost: 1

		3-arg1 > 0 [0]: monotonic increase yields 3-arg1 > 0
		
		-arg1 > 0 [0]: monotonic increase yields -arg1 > 0
		
		Replacement map: {3-arg1 > 0 -> 3-arg1 > 0, -arg1 > 0 -> -arg1 > 0}

Step with 16

	Trace

	7[T], 8[(arg1 > 0 /\ -1+arg2 > 0 /\ 2+2*x14 > 0)], 12[(1+x27 > 0 /\ 1+2*x29 > 0 /\ arg1 > 0 /\ -1+arg2 > 0)], 16[(-1+n2 >= 0 /\ 3-arg1 > 0 /\ -arg1 > 0)]
	
	Blocked

	[{}, {}, {9[T]}, {}, {16[T]}]

Refute

	Counterexample

	[ arg1=1 arg2=2 ] 7 [ arg1=1 arg2=2 ] 8 [ arg1=-1 arg2=0 ] 12 [ arg1=arg1 arg2=arg2 ] 16
	
NO

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
