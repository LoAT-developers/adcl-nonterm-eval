unknown

Initial ITS

Start location: __init
Program variables: arg1 arg2 arg3
   0: f1_0_main_Load -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0), cost: 1
   1: f213_0_main_GE -> f213_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0 /\ arg3-arg3p2 == 0 /\ -arg2p2+arg2 == 0 /\ 1-arg1p2+arg1 == 0), cost: 1
   2: f213_0_main_GE -> f213_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 < 0 /\ arg3-arg3p3 == 0 /\ -arg1+arg2 < 0 /\ 1-arg2p3+arg2 == 0 /\ -arg1p3+arg1 == 0), cost: 1
   3: __init -> f1_0_main_Load : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, T, cost: 1

Chained Linear Paths

Start location: __init
Program variables: arg1 arg2 arg3
   1: f213_0_main_GE -> f213_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0 /\ arg3-arg3p2 == 0 /\ -arg2p2+arg2 == 0 /\ 1-arg1p2+arg1 == 0), cost: 1
   2: f213_0_main_GE -> f213_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 < 0 /\ arg3-arg3p3 == 0 /\ -arg1+arg2 < 0 /\ 1-arg2p3+arg2 == 0 /\ -arg1p3+arg1 == 0), cost: 1
   4: __init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1p4 > 0 /\ 1+arg2p4 > 0), cost: 1

	Eliminating location f1_0_main_Load by chaining:

	Applied chaining

	First rule:
	__init -> f1_0_main_Load : arg1'=arg1p4, arg2'=arg2p4, arg3'=arg3p4, T, cost: 1
	Second rule:
	f1_0_main_Load -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg2 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1 > 0), cost: 1
	New rule:
	__init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1p4 > 0 /\ 1+arg2p4 > 0), cost: 1
	
	Applied deletion

	Removed the following rules: 0 3

Simplified Transitions

Start location: __init
Program variables: arg1 arg2 arg3
   5: f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
   6: f213_0_main_GE -> f213_0_main_GE : arg2'=1+arg2, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
   7: __init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Propagated Equalities

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=arg1p2, arg2'=arg2p2, arg3'=arg3p2, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0 /\ arg3-arg3p2 == 0 /\ -arg2p2+arg2 == 0 /\ 1-arg1p2+arg1 == 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, arg2'=arg2, arg3'=arg3, (0 == 0 /\ arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
	
		propagated equality arg3p2 = arg3
		
		propagated equality arg2p2 = arg2
		
		propagated equality arg1p2 = 1+arg1
		
	Simplified Guard

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, arg2'=arg2, arg3'=arg3, (0 == 0 /\ arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, arg2'=arg2, arg3'=arg3, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, arg2'=arg2, arg3'=arg3, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
	
	Propagated Equalities

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=arg1p3, arg2'=arg2p3, arg3'=arg3p3, (-arg3+arg2 < 0 /\ arg3-arg3p3 == 0 /\ -arg1+arg2 < 0 /\ 1-arg2p3+arg2 == 0 /\ -arg1p3+arg1 == 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=arg1, arg2'=1+arg2, arg3'=arg3, (0 == 0 /\ -arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
	
		propagated equality arg3p3 = arg3
		
		propagated equality arg2p3 = 1+arg2
		
		propagated equality arg1p3 = arg1
		
	Simplified Guard

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=arg1, arg2'=1+arg2, arg3'=arg3, (0 == 0 /\ -arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=arg1, arg2'=1+arg2, arg3'=arg3, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
	
	Removed Trivial Updates

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=arg1, arg2'=1+arg2, arg3'=arg3, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg2'=1+arg2, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
	
	Eliminated Temporary Variables via Transitive Closure

	Original rule:
	__init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0 /\ arg1p4 > 0 /\ 1+arg2p4 > 0), cost: 1
	New rule:
	__init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

Step with 7

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {}]

Step with 5

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 5[(arg3-arg2 > 0 /\ -arg1+arg2 >= 0)]
	
	Blocked

	[{}, {}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   5: f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
   6: f213_0_main_GE -> f213_0_main_GE : arg2'=1+arg2, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
   8: f213_0_main_GE -> f213_0_main_GE : arg1'=n+arg1, (arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0), cost: 1
   7: __init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=n+arg1, (arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0), cost: 1

		arg3-arg2 > 0 [0]: monotonic increase yields arg3-arg2 > 0
		
		-arg1+arg2 >= 0 [0]: montonic decrease yields 1-n-arg1+arg2 >= 0
		
		-arg1+arg2 >= 0 [1]: eventual increase yields (1 <= 0 /\ -arg1+arg2 >= 0)
		
		Replacement map: {arg3-arg2 > 0 -> arg3-arg2 > 0, -arg1+arg2 >= 0 -> 1-n-arg1+arg2 >= 0}

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {}, {5[T], 8[T]}]

Step with 6

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)], 6[(-arg3+arg2 < 0 /\ -arg1+arg2 < 0)]
	
	Blocked

	[{}, {}, {5[T], 8[T]}, {}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   5: f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
   6: f213_0_main_GE -> f213_0_main_GE : arg2'=1+arg2, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
   8: f213_0_main_GE -> f213_0_main_GE : arg1'=n+arg1, (arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0), cost: 1
   9: f213_0_main_GE -> f213_0_main_GE : arg2'=n2+arg2, (1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0), cost: 1
   7: __init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg2'=1+arg2, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg2'=n2+arg2, (1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0), cost: 1

		arg1-arg2 > 0 [0]: montonic decrease yields 1-n2+arg1-arg2 > 0
		
		arg1-arg2 > 0 [1]: eventual increase yields (1 <= 0 /\ arg1-arg2 > 0)
		
		arg3-arg2 > 0 [0]: montonic decrease yields 1+arg3-n2-arg2 > 0
		
		arg3-arg2 > 0 [1]: eventual increase yields (1 <= 0 /\ arg3-arg2 > 0)
		
		Replacement map: {arg1-arg2 > 0 -> 1-n2+arg1-arg2 > 0, arg3-arg2 > 0 -> 1+arg3-n2-arg2 > 0}

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {}, {5[T], 8[T]}, {6[T], 9[T]}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   5: f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
   6: f213_0_main_GE -> f213_0_main_GE : arg2'=1+arg2, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
   8: f213_0_main_GE -> f213_0_main_GE : arg1'=n+arg1, (arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0), cost: 1
   9: f213_0_main_GE -> f213_0_main_GE : arg2'=n2+arg2, (1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0), cost: 1
  10: f213_0_main_GE -> f213_0_main_GE : arg1'=n1*n3+arg1, arg2'=n2*n3+arg2, (-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0), cost: 1
   7: __init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=n1+arg1, arg2'=n2+arg2, (-1+n1 >= 0 /\ 1+arg3-n2-arg2 > 0 /\ arg3-arg2 > 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ -1+n2 >= 0 /\ 1-n1-arg1+arg2 >= 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=n1*n3+arg1, arg2'=n2*n3+arg2, (-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0), cost: 1

		-1+n1 >= 0 [0]: monotonic increase yields -1+n1 >= 0
		
		1+arg3-n2-arg2 > 0 [0]: montonic decrease yields 1+arg3-n2*(-1+n3)-n2-arg2 > 0, dependencies: arg3-arg2 > 0
		
		1+arg3-n2-arg2 > 0 [1]: eventual decrease yields (1+arg3-n2-arg2 > 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0), dependencies: -1+n2 >= 0
		
		1+arg3-n2-arg2 > 0 [2]: eventual increase yields (1+arg3-n2-arg2 > 0 /\ n2 <= 0), dependencies: -1+n2 >= 0
		
		arg3-arg2 > 0 [0]: montonic decrease yields arg3-n2*(-1+n3)-arg2 > 0, dependencies: -1+n2 >= 0
		
		arg3-arg2 > 0 [1]: eventual decrease yields (arg3-arg2 > 0 /\ arg3-n2*(-1+n3)-arg2 > 0), dependencies: -1+n2 >= 0
		
		arg3-arg2 > 0 [2]: eventual increase yields (arg3-arg2 > 0 /\ n2 <= 0), dependencies: -1+n2 >= 0
		
		1+n1-n2+arg1-arg2 > 0 [0]: monotonic increase yields 1+n1-n2+arg1-arg2 > 0, dependencies: -1+n1 >= 0 1-n1-arg1+arg2 >= 0
		
		1+n1-n2+arg1-arg2 > 0 [1]: eventual decrease yields (1+n1-n2+arg1-arg2 > 0 /\ 1+n1-n2*(-1+n3)+n1*(-1+n3)-n2+arg1-arg2 > 0)
		
		1+n1-n2+arg1-arg2 > 0 [2]: eventual increase yields (1+n1-n2+arg1-arg2 > 0 /\ -n1+n2 <= 0)
		
		-1+n2 >= 0 [0]: monotonic increase yields -1+n2 >= 0
		
		1-n1-arg1+arg2 >= 0 [0]: eventual decrease yields (1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ 1-n1-arg1+arg2 >= 0)
		
		1-n1-arg1+arg2 >= 0 [1]: eventual increase yields (1-n1-arg1+arg2 >= 0 /\ n1-n2 <= 0)
		
		Replacement map: {-1+n1 >= 0 -> -1+n1 >= 0, 1+arg3-n2-arg2 > 0 -> 1+arg3-n2*(-1+n3)-n2-arg2 > 0, arg3-arg2 > 0 -> arg3-n2*(-1+n3)-arg2 > 0, 1+n1-n2+arg1-arg2 > 0 -> 1+n1-n2+arg1-arg2 > 0, -1+n2 >= 0 -> -1+n2 >= 0, 1-n1-arg1+arg2 >= 0 -> (1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ 1-n1-arg1+arg2 >= 0)}

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {}, {10[T]}]

Step with 5

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 5[(arg3-arg2 > 0 /\ -arg1+arg2 >= 0)]
	
	Blocked

	[{}, {}, {10[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {}, {5[T], 10[T]}]

Step with 8

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {}, {5[T], 6[T], 10[T]}, {8[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 9

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {}, {5[T], 6[T], 10[T]}, {8[T]}, {9[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {}, {5[T], 6[T], 10[T]}, {8[T], 9[T]}]

Step with 6

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)], 6[(-arg3+arg2 < 0 /\ -arg1+arg2 < 0)]
	
	Blocked

	[{}, {}, {5[T], 6[T], 10[T]}, {5[T], 8[T], 9[T], 10[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {}, {5[T], 6[T], 10[T]}, {5[T], 6[T], 8[T], 9[T], 10[T]}]

Backtrack

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {}, {5[T], 6[T], 8[T], 10[T]}]

Backtrack

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {10[T]}]

Step with 6

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 6[(-arg3+arg2 < 0 /\ -arg1+arg2 < 0)]
	
	Blocked

	[{}, {10[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {6[T], 10[T]}]

Step with 8

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 10[T]}, {8[T]}]

Step with 9

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {6[T], 10[T]}, {8[T]}, {9[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 10[T]}, {8[T], 9[T]}]

Step with 10

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {6[T], 10[T]}, {8[T], 9[T]}, {10[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 10[T]}, {8[T], 9[T], 10[T]}]

Step with 5

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)], 5[(arg3-arg2 > 0 /\ -arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 10[T]}, {8[T], 9[T], 10[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 10[T]}, {5[T], 8[T], 9[T], 10[T]}]

Step with 6

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)], 6[(-arg3+arg2 < 0 /\ -arg1+arg2 < 0)]
	
	Blocked

	[{}, {6[T], 10[T]}, {5[T], 8[T], 9[T], 10[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 10[T]}, {5[T], 6[T], 8[T], 9[T], 10[T]}]

Backtrack

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}]

Step with 9

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {9[T]}]

Step with 10

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {9[T]}, {10[T]}]

Acceleration Failed

marked recursive suffix as redundant

Step with 5

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 5[(arg3-arg2 > 0 /\ -arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {9[T]}, {10[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {9[T]}, {5[T], 10[T]}]

Step with 8

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {9[T]}, {5[T], 6[T], 10[T]}, {8[T]}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   5: f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
   6: f213_0_main_GE -> f213_0_main_GE : arg2'=1+arg2, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
   8: f213_0_main_GE -> f213_0_main_GE : arg1'=n+arg1, (arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0), cost: 1
   9: f213_0_main_GE -> f213_0_main_GE : arg2'=n2+arg2, (1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0), cost: 1
  10: f213_0_main_GE -> f213_0_main_GE : arg1'=n1*n3+arg1, arg2'=n2*n3+arg2, (-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0), cost: 1
  11: f213_0_main_GE -> f213_0_main_GE : arg1'=n7*n13*n33+n7*n+arg1, arg2'=n7*n27*n33+n7*n26+arg2, (-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0), cost: 1
   7: __init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=n+n13*n33+arg1, arg2'=n26+n27*n33+arg2, (arg3-n27*(-1+n33)-n26-arg2 > 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+arg3-n26-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+n13-n27-n26+arg1-arg2 > 0 /\ arg3-n26-n27*n33-arg2 > 0 /\ 1+arg3-n27*(-1+n33)-n27-n26-arg2 > 0 /\ -1+n27 >= 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=n7*n13*n33+n7*n+arg1, arg2'=n7*n27*n33+n7*n26+arg2, (-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0), cost: 1

		arg3-n27*(-1+n33)-n26-arg2 > 0 [0]: montonic decrease yields arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0, dependencies: -1+n26 >= 0 1+arg3-n26-arg2 > 0 -1+n27 >= 0
		
		arg3-n27*(-1+n33)-n26-arg2 > 0 [1]: eventual decrease yields (arg3-n27*(-1+n33)-n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0)
		
		arg3-n27*(-1+n33)-n26-arg2 > 0 [2]: eventual increase yields (arg3-n27*(-1+n33)-n26-arg2 > 0 /\ n26+n27*n33 <= 0)
		
		1-n26+arg1-arg2 > 0 [0]: eventual decrease yields (1-n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0)
		
		1-n26+arg1-arg2 > 0 [1]: eventual increase yields (1-n26+arg1-arg2 > 0 /\ n26-n+n27*n33-n13*n33 <= 0)
		
		-1+n26 >= 0 [0]: monotonic increase yields -1+n26 >= 0
		
		1+arg3-n26-arg2 > 0 [0]: montonic decrease yields 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0, dependencies: -1+n26 >= 0 -1+n33 >= 0 -1+n27 >= 0
		
		1+arg3-n26-arg2 > 0 [1]: eventual decrease yields (1+arg3-n26-arg2 > 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0)
		
		1+arg3-n26-arg2 > 0 [2]: eventual increase yields (1+arg3-n26-arg2 > 0 /\ n26+n27*n33 <= 0)
		
		-1+n13 >= 0 [0]: monotonic increase yields -1+n13 >= 0
		
		1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 [0]: monotonic increase yields 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0, dependencies: 1-n26+arg1-arg2 > 0 -1+n26 >= 0
		
		1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 [0]: monotonic increase yields 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0, dependencies: 1-n26+arg1-arg2 > 0 -1+n26 >= 0 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0
		
		-1+n33 >= 0 [0]: monotonic increase yields -1+n33 >= 0
		
		-1+n >= 0 [0]: monotonic increase yields -1+n >= 0
		
		1-n13+n26-arg1+arg2 >= 0 [0]: monotonic increase yields 1-n13+n26-arg1+arg2 >= 0, dependencies: 1-n26+arg1-arg2 > 0 -1+n26 >= 0 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0
		
		1+n13-n27-n26+arg1-arg2 > 0 [0]: montonic decrease yields 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0, dependencies: 1-n26+arg1-arg2 > 0 -1+n26 >= 0 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0
		
		1+n13-n27-n26+arg1-arg2 > 0 [1]: eventual increase yields (n26-n+n27*n33-n13*n33 <= 0 /\ 1+n13-n27-n26+arg1-arg2 > 0)
		
		arg3-n26-n27*n33-arg2 > 0 [0]: montonic decrease yields arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0, dependencies: -1+n26 >= 0 1+arg3-n26-arg2 > 0
		
		arg3-n26-n27*n33-arg2 > 0 [1]: eventual increase yields (n26+n27*n33 <= 0 /\ arg3-n26-n27*n33-arg2 > 0)
		
		1+arg3-n27*(-1+n33)-n27-n26-arg2 > 0 [0]: montonic decrease yields 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0, dependencies: arg3-n26-n27*n33-arg2 > 0
		
		1+arg3-n27*(-1+n33)-n27-n26-arg2 > 0 [1]: eventual increase yields (n26+n27*n33 <= 0 /\ 1+arg3-n27*(-1+n33)-n27-n26-arg2 > 0)
		
		-1+n27 >= 0 [0]: monotonic increase yields -1+n27 >= 0
		
		Replacement map: {arg3-n27*(-1+n33)-n26-arg2 > 0 -> arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0, 1-n26+arg1-arg2 > 0 -> (1-n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0), -1+n26 >= 0 -> -1+n26 >= 0, 1+arg3-n26-arg2 > 0 -> 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0, -1+n13 >= 0 -> -1+n13 >= 0, 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 -> 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0, 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 -> 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0, -1+n33 >= 0 -> -1+n33 >= 0, -1+n >= 0 -> -1+n >= 0, 1-n13+n26-arg1+arg2 >= 0 -> 1-n13+n26-arg1+arg2 >= 0, 1+n13-n27-n26+arg1-arg2 > 0 -> 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0, arg3-n26-n27*n33-arg2 > 0 -> arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0, 1+arg3-n27*(-1+n33)-n27-n26-arg2 > 0 -> 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0, -1+n27 >= 0 -> -1+n27 >= 0}

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 11[(-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {11[T]}]

Step with 6

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 11[(-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0)], 6[(-arg3+arg2 < 0 /\ -arg1+arg2 < 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {5[T], 11[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 11[(-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {5[T], 6[T], 11[T]}]

Step with 9

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 11[(-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {5[T], 6[T], 8[T], 11[T]}, {9[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 11[(-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T]}, {5[T], 6[T], 8[T], 9[T], 11[T]}]

Backtrack

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}]

Step with 9

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {9[T]}]

Step with 10

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {9[T]}, {10[T]}]

Step with 5

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 5[(arg3-arg2 > 0 /\ -arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {9[T]}, {10[T], 11[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {9[T]}, {5[T], 10[T], 11[T]}]

Step with 8

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {9[T]}, {5[T], 6[T], 10[T], 11[T]}, {8[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {9[T]}, {5[T], 6[T], 8[T], 10[T], 11[T]}]

Backtrack

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {9[T], 10[T]}]

Step with 8

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {9[T], 10[T]}, {8[T]}]

Accelerate

Start location: __init
Program variables: arg1 arg2 arg3
   5: f213_0_main_GE -> f213_0_main_GE : arg1'=1+arg1, (arg3-arg2 > 0 /\ -arg1+arg2 >= 0), cost: 1
   6: f213_0_main_GE -> f213_0_main_GE : arg2'=1+arg2, (-arg3+arg2 < 0 /\ -arg1+arg2 < 0), cost: 1
   8: f213_0_main_GE -> f213_0_main_GE : arg1'=n+arg1, (arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0), cost: 1
   9: f213_0_main_GE -> f213_0_main_GE : arg2'=n2+arg2, (1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0), cost: 1
  10: f213_0_main_GE -> f213_0_main_GE : arg1'=n1*n3+arg1, arg2'=n2*n3+arg2, (-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0), cost: 1
  11: f213_0_main_GE -> f213_0_main_GE : arg1'=n7*n13*n33+n7*n+arg1, arg2'=n7*n27*n33+n7*n26+arg2, (-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0), cost: 1
  12: f213_0_main_GE -> f213_0_main_GE : arg1'=n15*n+arg1, arg2'=n29*n15+arg2, (-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0), cost: 1
   7: __init -> f213_0_main_GE : arg1'=arg1p1, arg2'=arg2p1, arg3'=arg3p1, (1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0), cost: 1

	Loop Acceleration

	Original rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=n+arg1, arg2'=n29+arg2, (arg3-n29-arg2 > 0 /\ 1+arg3-n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0), cost: 1
	New rule:
	f213_0_main_GE -> f213_0_main_GE : arg1'=n15*n+arg1, arg2'=n29*n15+arg2, (-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0), cost: 1

		arg3-n29-arg2 > 0 [0]: montonic decrease yields arg3-n29-(-1+n15)*n29-arg2 > 0, dependencies: -1+n29 >= 0
		
		arg3-n29-arg2 > 0 [1]: eventual decrease yields (arg3-n29-arg2 > 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0)
		
		arg3-n29-arg2 > 0 [2]: eventual increase yields (n29 <= 0 /\ arg3-n29-arg2 > 0)
		
		1+arg3-n29-arg2 > 0 [0]: montonic decrease yields 1+arg3-n29-(-1+n15)*n29-arg2 > 0, dependencies: arg3-n29-arg2 > 0
		
		1+arg3-n29-arg2 > 0 [1]: eventual increase yields (n29 <= 0 /\ 1+arg3-n29-arg2 > 0)
		
		-1+n29 >= 0 [0]: monotonic increase yields -1+n29 >= 0
		
		-1+n >= 0 [0]: monotonic increase yields -1+n >= 0
		
		1-n29+arg1-arg2 > 0 [0]: eventual decrease yields (1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1-n29+arg1-arg2 > 0)
		
		1-n29+arg1-arg2 > 0 [1]: eventual increase yields (1-n29+arg1-arg2 > 0 /\ n29-n <= 0)
		
		1+n29-n-arg1+arg2 >= 0 [0]: monotonic increase yields 1+n29-n-arg1+arg2 >= 0, dependencies: -1+n29 >= 0 1-n29+arg1-arg2 > 0
		
		Replacement map: {arg3-n29-arg2 > 0 -> arg3-n29-(-1+n15)*n29-arg2 > 0, 1+arg3-n29-arg2 > 0 -> 1+arg3-n29-(-1+n15)*n29-arg2 > 0, -1+n29 >= 0 -> -1+n29 >= 0, -1+n >= 0 -> -1+n >= 0, 1-n29+arg1-arg2 > 0 -> (1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1-n29+arg1-arg2 > 0), 1+n29-n-arg1+arg2 >= 0 -> 1+n29-n-arg1+arg2 >= 0}

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 12[(-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {12[T]}]

Step with 6

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 12[(-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0)], 6[(-arg3+arg2 < 0 /\ -arg1+arg2 < 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {5[T], 12[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 12[(-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {5[T], 6[T], 12[T]}]

Step with 9

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 12[(-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {5[T], 6[T], 8[T], 12[T]}, {9[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 12[(-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {5[T], 6[T], 8[T], 9[T], 12[T]}]

Step with 11

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 12[(-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0)], 11[(-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {5[T], 6[T], 8[T], 9[T], 10[T], 12[T]}, {11[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 12[(-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T]}, {5[T], 6[T], 8[T], 9[T], 10[T], 11[T], 12[T]}]

Backtrack

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T], 12[T]}]

Step with 5

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 5[(arg3-arg2 > 0 /\ -arg1+arg2 >= 0)]
	
	Blocked

	[{}, {6[T], 8[T], 10[T], 11[T], 12[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}]

Step with 9

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {9[T]}]

Step with 10

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {9[T]}, {10[T]}]

Step with 5

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 5[(arg3-arg2 > 0 /\ -arg1+arg2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {9[T]}, {10[T], 11[T], 12[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {9[T]}, {5[T], 10[T], 11[T], 12[T]}]

Step with 8

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {9[T]}, {5[T], 6[T], 10[T], 11[T], 12[T]}, {8[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 10[(-1+n1 >= 0 /\ 1+n1-n2+arg1-arg2 > 0 /\ 1-n1+n2*(-1+n3)-n1*(-1+n3)-arg1+arg2 >= 0 /\ arg3-n2*(-1+n3)-arg2 > 0 /\ -1+n2 >= 0 /\ 1+arg3-n2*(-1+n3)-n2-arg2 > 0 /\ 1-n1-arg1+arg2 >= 0 /\ -1+n3 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {9[T]}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}]

Backtrack

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {9[T], 10[T]}]

Step with 8

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 8[(arg3-arg2 > 0 /\ -1+n >= 0 /\ 1-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {9[T], 10[T]}, {8[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {8[T], 9[T], 10[T]}]

Step with 11

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 11[(-1+n7 >= 0 /\ 1-n26+arg1-arg2 > 0 /\ -1+n26 >= 0 /\ 1+(-1+n7)*n+n13-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n27-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ 1+(-1+n7)*n-(-1+n7)*n27*n33+(-1+n7)*n13*n33-n26-(-1+n7)*n26+arg1-arg2 > 0 /\ -1+n13 >= 0 /\ 1+n26-n+n27*n33-n13*n33-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n27-n26-(-1+n7)*n26-arg2 > 0 /\ 1-n13-n13*(-1+n33)+n27*(-1+n33)+n26-arg1+arg2 >= 0 /\ -1+n33 >= 0 /\ arg3-(-1+n7)*n27*n33-n27*(-1+n33)-n26-(-1+n7)*n26-arg2 > 0 /\ -1+n >= 0 /\ 1-n13+n26-arg1+arg2 >= 0 /\ 1+arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-arg2 > 0 /\ arg3-(-1+n7)*n27*n33-n26-(-1+n7)*n26-n27*n33-arg2 > 0 /\ -1+n27 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {8[T], 9[T], 10[T]}, {11[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {8[T], 9[T], 10[T], 11[T]}]

Step with 12

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 12[(-1+n15 >= 0 /\ 1-n29-(-1+n15)*n29+(-1+n15)*n+arg1-arg2 > 0 /\ 1+arg3-n29-(-1+n15)*n29-arg2 > 0 /\ -1+n29 >= 0 /\ -1+n >= 0 /\ arg3-n29-(-1+n15)*n29-arg2 > 0 /\ 1-n29+arg1-arg2 > 0 /\ 1+n29-n-arg1+arg2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {8[T], 9[T], 10[T], 11[T]}, {12[T]}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {8[T], 9[T], 10[T], 11[T], 12[T]}]

Step with 5

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 5[(arg3-arg2 > 0 /\ -arg1+arg2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {8[T], 9[T], 10[T], 11[T], 12[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {5[T], 8[T], 9[T], 10[T], 11[T], 12[T]}]

Step with 6

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)], 6[(-arg3+arg2 < 0 /\ -arg1+arg2 < 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {5[T], 8[T], 9[T], 10[T], 11[T], 12[T]}, {}]

Covered

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)], 9[(1-n2+arg1-arg2 > 0 /\ 1+arg3-n2-arg2 > 0 /\ -1+n2 >= 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 10[T], 11[T], 12[T]}, {5[T], 6[T], 8[T], 9[T], 10[T], 11[T], 12[T]}]

Backtrack

	Trace

	7[(1+arg3p1 > 0 /\ 1+arg1p1 > 0 /\ 1+arg2p1 > 0)]
	
	Blocked

	[{}, {5[T], 6[T], 8[T], 9[T], 10[T], 11[T], 12[T]}]

Backtrack

	Trace

	Blocked

	[{7[T]}]

Accept

unknown

Build SHA: a05f16bf13df659c382799650051f91bf6828c7b
