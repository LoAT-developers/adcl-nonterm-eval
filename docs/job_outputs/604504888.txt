NO

Initial ITS
Start location: l8
   0: l0 -> l1 : resp^0'=resp^post0, ___rho_2_^0'=___rho_2_^post0, curr_serv^0'=curr_serv^post0, ___rho_1_^0'=___rho_1_^post0, servers^0'=servers^post0, c^0'=c^post0, (___rho_2_^0-___rho_2_^post0 == 0 /\ -curr_serv^post0+curr_serv^0 == 0 /\ -___rho_1_^post0+___rho_1_^0 == 0 /\ -c^post0+c^0 == 0 /\ servers^0-servers^post0 == 0 /\ resp^0-resp^post0 == 0), cost: 1
   6: l1 -> l6 : resp^0'=resp^post6, ___rho_2_^0'=___rho_2_^post6, curr_serv^0'=curr_serv^post6, ___rho_1_^0'=___rho_1_^post6, servers^0'=servers^post6, c^0'=c^post6, (0 == 0 /\ resp^0-resp^post6 == 0 /\ 1-curr_serv^0 <= 0 /\ -c^post6+c^0 == 0 /\ -curr_serv^post6+curr_serv^0 == 0 /\ servers^0-servers^post6 == 0 /\ ___rho_2_^0-___rho_2_^post6 == 0), cost: 1
   7: l1 -> l4 : resp^0'=resp^post7, ___rho_2_^0'=___rho_2_^post7, curr_serv^0'=curr_serv^post7, ___rho_1_^0'=___rho_1_^post7, servers^0'=servers^post7, c^0'=c^post7, (c^0-c^post7 == 0 /\ curr_serv^0 <= 0 /\ -servers^post7+servers^0 == 0 /\ resp^0-resp^post7 == 0 /\ curr_serv^0-curr_serv^post7 == 0 /\ ___rho_2_^0-___rho_2_^post7 == 0 /\ -___rho_1_^post7+___rho_1_^0 == 0), cost: 1
   1: l2 -> l3 : resp^0'=resp^post1, ___rho_2_^0'=___rho_2_^post1, curr_serv^0'=curr_serv^post1, ___rho_1_^0'=___rho_1_^post1, servers^0'=servers^post1, c^0'=c^post1, (-servers^post1+servers^0 == 0 /\ -___rho_1_^post1+___rho_1_^0 == 0 /\ -c^post1+c^0 == 0 /\ resp^0-resp^post1 == 0 /\ curr_serv^0-curr_serv^post1 == 0 /\ ___rho_2_^0-___rho_2_^post1 == 0), cost: 1
   2: l4 -> l5 : resp^0'=resp^post2, ___rho_2_^0'=___rho_2_^post2, curr_serv^0'=curr_serv^post2, ___rho_1_^0'=___rho_1_^post2, servers^0'=servers^post2, c^0'=c^post2, (-c^post2+c^0 == 0 /\ ___rho_1_^0-___rho_1_^post2 == 0 /\ ___rho_2_^0-___rho_2_^post2 == 0 /\ resp^0-resp^post2 == 0 /\ curr_serv^0-curr_serv^post2 == 0 /\ -servers^post2+servers^0 == 0), cost: 1
   3: l5 -> l4 : resp^0'=resp^post3, ___rho_2_^0'=___rho_2_^post3, curr_serv^0'=curr_serv^post3, ___rho_1_^0'=___rho_1_^post3, servers^0'=servers^post3, c^0'=c^post3, (___rho_1_^0-___rho_1_^post3 == 0 /\ -c^post3+c^0 == 0 /\ curr_serv^0-curr_serv^post3 == 0 /\ ___rho_2_^0-___rho_2_^post3 == 0 /\ resp^0-resp^post3 == 0 /\ -servers^post3+servers^0 == 0), cost: 1
   4: l6 -> l0 : resp^0'=resp^post4, ___rho_2_^0'=___rho_2_^post4, curr_serv^0'=curr_serv^post4, ___rho_1_^0'=___rho_1_^post4, servers^0'=servers^post4, c^0'=c^post4, (___rho_1_^0-___rho_1_^post4 == 0 /\ 1-curr_serv^0+curr_serv^post4 == 0 /\ ___rho_1_^0 <= 0 /\ -___rho_2_^post4+___rho_2_^0 == 0 /\ resp^0-resp^post4 == 0 /\ 1-curr_serv^0+c^0 <= 0 /\ -c^post4+c^0 == 0 /\ -servers^post4+servers^0 == 0), cost: 1
   5: l6 -> l0 : resp^0'=resp^post5, ___rho_2_^0'=___rho_2_^post5, curr_serv^0'=curr_serv^post5, ___rho_1_^0'=___rho_1_^post5, servers^0'=servers^post5, c^0'=c^post5, (-1-resp^0+resp^post5 == 0 /\ 1+c^post5-c^0 == 0 /\ 1+curr_serv^post5-curr_serv^0 == 0 /\ 1-___rho_1_^0 <= 0 /\ ___rho_1_^0-___rho_1_^post5 == 0 /\ servers^0-servers^post5 == 0 /\ ___rho_2_^0-___rho_2_^post5 == 0), cost: 1
   8: l7 -> l0 : resp^0'=resp^post8, ___rho_2_^0'=___rho_2_^post8, curr_serv^0'=curr_serv^post8, ___rho_1_^0'=___rho_1_^post8, servers^0'=servers^post8, c^0'=c^post8, (0 == 0 /\ resp^post8 == 0 /\ -___rho_2_^post8+c^post8 == 0 /\ -4+servers^post8 == 0 /\ 1-c^post8 <= 0 /\ -___rho_1_^post8+___rho_1_^0 == 0 /\ -servers^post8+curr_serv^post8 == 0), cost: 1
   9: l8 -> l7 : resp^0'=resp^post9, ___rho_2_^0'=___rho_2_^post9, curr_serv^0'=curr_serv^post9, ___rho_1_^0'=___rho_1_^post9, servers^0'=servers^post9, c^0'=c^post9, (-servers^post9+servers^0 == 0 /\ -___rho_1_^post9+___rho_1_^0 == 0 /\ ___rho_2_^0-___rho_2_^post9 == 0 /\ -c^post9+c^0 == 0 /\ curr_serv^0-curr_serv^post9 == 0 /\ -resp^post9+resp^0 == 0), cost: 1


Removed unreachable rules and leafs
Start location: l8
   0: l0 -> l1 : resp^0'=resp^post0, ___rho_2_^0'=___rho_2_^post0, curr_serv^0'=curr_serv^post0, ___rho_1_^0'=___rho_1_^post0, servers^0'=servers^post0, c^0'=c^post0, (___rho_2_^0-___rho_2_^post0 == 0 /\ -curr_serv^post0+curr_serv^0 == 0 /\ -___rho_1_^post0+___rho_1_^0 == 0 /\ -c^post0+c^0 == 0 /\ servers^0-servers^post0 == 0 /\ resp^0-resp^post0 == 0), cost: 1
   6: l1 -> l6 : resp^0'=resp^post6, ___rho_2_^0'=___rho_2_^post6, curr_serv^0'=curr_serv^post6, ___rho_1_^0'=___rho_1_^post6, servers^0'=servers^post6, c^0'=c^post6, (0 == 0 /\ resp^0-resp^post6 == 0 /\ 1-curr_serv^0 <= 0 /\ -c^post6+c^0 == 0 /\ -curr_serv^post6+curr_serv^0 == 0 /\ servers^0-servers^post6 == 0 /\ ___rho_2_^0-___rho_2_^post6 == 0), cost: 1
   7: l1 -> l4 : resp^0'=resp^post7, ___rho_2_^0'=___rho_2_^post7, curr_serv^0'=curr_serv^post7, ___rho_1_^0'=___rho_1_^post7, servers^0'=servers^post7, c^0'=c^post7, (c^0-c^post7 == 0 /\ curr_serv^0 <= 0 /\ -servers^post7+servers^0 == 0 /\ resp^0-resp^post7 == 0 /\ curr_serv^0-curr_serv^post7 == 0 /\ ___rho_2_^0-___rho_2_^post7 == 0 /\ -___rho_1_^post7+___rho_1_^0 == 0), cost: 1
   2: l4 -> l5 : resp^0'=resp^post2, ___rho_2_^0'=___rho_2_^post2, curr_serv^0'=curr_serv^post2, ___rho_1_^0'=___rho_1_^post2, servers^0'=servers^post2, c^0'=c^post2, (-c^post2+c^0 == 0 /\ ___rho_1_^0-___rho_1_^post2 == 0 /\ ___rho_2_^0-___rho_2_^post2 == 0 /\ resp^0-resp^post2 == 0 /\ curr_serv^0-curr_serv^post2 == 0 /\ -servers^post2+servers^0 == 0), cost: 1
   3: l5 -> l4 : resp^0'=resp^post3, ___rho_2_^0'=___rho_2_^post3, curr_serv^0'=curr_serv^post3, ___rho_1_^0'=___rho_1_^post3, servers^0'=servers^post3, c^0'=c^post3, (___rho_1_^0-___rho_1_^post3 == 0 /\ -c^post3+c^0 == 0 /\ curr_serv^0-curr_serv^post3 == 0 /\ ___rho_2_^0-___rho_2_^post3 == 0 /\ resp^0-resp^post3 == 0 /\ -servers^post3+servers^0 == 0), cost: 1
   4: l6 -> l0 : resp^0'=resp^post4, ___rho_2_^0'=___rho_2_^post4, curr_serv^0'=curr_serv^post4, ___rho_1_^0'=___rho_1_^post4, servers^0'=servers^post4, c^0'=c^post4, (___rho_1_^0-___rho_1_^post4 == 0 /\ 1-curr_serv^0+curr_serv^post4 == 0 /\ ___rho_1_^0 <= 0 /\ -___rho_2_^post4+___rho_2_^0 == 0 /\ resp^0-resp^post4 == 0 /\ 1-curr_serv^0+c^0 <= 0 /\ -c^post4+c^0 == 0 /\ -servers^post4+servers^0 == 0), cost: 1
   5: l6 -> l0 : resp^0'=resp^post5, ___rho_2_^0'=___rho_2_^post5, curr_serv^0'=curr_serv^post5, ___rho_1_^0'=___rho_1_^post5, servers^0'=servers^post5, c^0'=c^post5, (-1-resp^0+resp^post5 == 0 /\ 1+c^post5-c^0 == 0 /\ 1+curr_serv^post5-curr_serv^0 == 0 /\ 1-___rho_1_^0 <= 0 /\ ___rho_1_^0-___rho_1_^post5 == 0 /\ servers^0-servers^post5 == 0 /\ ___rho_2_^0-___rho_2_^post5 == 0), cost: 1
   8: l7 -> l0 : resp^0'=resp^post8, ___rho_2_^0'=___rho_2_^post8, curr_serv^0'=curr_serv^post8, ___rho_1_^0'=___rho_1_^post8, servers^0'=servers^post8, c^0'=c^post8, (0 == 0 /\ resp^post8 == 0 /\ -___rho_2_^post8+c^post8 == 0 /\ -4+servers^post8 == 0 /\ 1-c^post8 <= 0 /\ -___rho_1_^post8+___rho_1_^0 == 0 /\ -servers^post8+curr_serv^post8 == 0), cost: 1
   9: l8 -> l7 : resp^0'=resp^post9, ___rho_2_^0'=___rho_2_^post9, curr_serv^0'=curr_serv^post9, ___rho_1_^0'=___rho_1_^post9, servers^0'=servers^post9, c^0'=c^post9, (-servers^post9+servers^0 == 0 /\ -___rho_1_^post9+___rho_1_^0 == 0 /\ ___rho_2_^0-___rho_2_^post9 == 0 /\ -c^post9+c^0 == 0 /\ curr_serv^0-curr_serv^post9 == 0 /\ -resp^post9+resp^0 == 0), cost: 1


Applied preprocessing
Original rule:
l0 -> l1 : resp^0'=resp^post0, ___rho_2_^0'=___rho_2_^post0, curr_serv^0'=curr_serv^post0, ___rho_1_^0'=___rho_1_^post0, servers^0'=servers^post0, c^0'=c^post0, (___rho_2_^0-___rho_2_^post0 == 0 /\ -curr_serv^post0+curr_serv^0 == 0 /\ -___rho_1_^post0+___rho_1_^0 == 0 /\ -c^post0+c^0 == 0 /\ servers^0-servers^post0 == 0 /\ resp^0-resp^post0 == 0), cost: 1
New rule:
l0 -> l1 : TRUE, cost: 1

Applied preprocessing
Original rule:
l4 -> l5 : resp^0'=resp^post2, ___rho_2_^0'=___rho_2_^post2, curr_serv^0'=curr_serv^post2, ___rho_1_^0'=___rho_1_^post2, servers^0'=servers^post2, c^0'=c^post2, (-c^post2+c^0 == 0 /\ ___rho_1_^0-___rho_1_^post2 == 0 /\ ___rho_2_^0-___rho_2_^post2 == 0 /\ resp^0-resp^post2 == 0 /\ curr_serv^0-curr_serv^post2 == 0 /\ -servers^post2+servers^0 == 0), cost: 1
New rule:
l4 -> l5 : TRUE, cost: 1

Applied preprocessing
Original rule:
l5 -> l4 : resp^0'=resp^post3, ___rho_2_^0'=___rho_2_^post3, curr_serv^0'=curr_serv^post3, ___rho_1_^0'=___rho_1_^post3, servers^0'=servers^post3, c^0'=c^post3, (___rho_1_^0-___rho_1_^post3 == 0 /\ -c^post3+c^0 == 0 /\ curr_serv^0-curr_serv^post3 == 0 /\ ___rho_2_^0-___rho_2_^post3 == 0 /\ resp^0-resp^post3 == 0 /\ -servers^post3+servers^0 == 0), cost: 1
New rule:
l5 -> l4 : TRUE, cost: 1

Applied preprocessing
Original rule:
l6 -> l0 : resp^0'=resp^post4, ___rho_2_^0'=___rho_2_^post4, curr_serv^0'=curr_serv^post4, ___rho_1_^0'=___rho_1_^post4, servers^0'=servers^post4, c^0'=c^post4, (___rho_1_^0-___rho_1_^post4 == 0 /\ 1-curr_serv^0+curr_serv^post4 == 0 /\ ___rho_1_^0 <= 0 /\ -___rho_2_^post4+___rho_2_^0 == 0 /\ resp^0-resp^post4 == 0 /\ 1-curr_serv^0+c^0 <= 0 /\ -c^post4+c^0 == 0 /\ -servers^post4+servers^0 == 0), cost: 1
New rule:
l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1

Applied preprocessing
Original rule:
l6 -> l0 : resp^0'=resp^post5, ___rho_2_^0'=___rho_2_^post5, curr_serv^0'=curr_serv^post5, ___rho_1_^0'=___rho_1_^post5, servers^0'=servers^post5, c^0'=c^post5, (-1-resp^0+resp^post5 == 0 /\ 1+c^post5-c^0 == 0 /\ 1+curr_serv^post5-curr_serv^0 == 0 /\ 1-___rho_1_^0 <= 0 /\ ___rho_1_^0-___rho_1_^post5 == 0 /\ servers^0-servers^post5 == 0 /\ ___rho_2_^0-___rho_2_^post5 == 0), cost: 1
New rule:
l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l6 : resp^0'=resp^post6, ___rho_2_^0'=___rho_2_^post6, curr_serv^0'=curr_serv^post6, ___rho_1_^0'=___rho_1_^post6, servers^0'=servers^post6, c^0'=c^post6, (0 == 0 /\ resp^0-resp^post6 == 0 /\ 1-curr_serv^0 <= 0 /\ -c^post6+c^0 == 0 /\ -curr_serv^post6+curr_serv^0 == 0 /\ servers^0-servers^post6 == 0 /\ ___rho_2_^0-___rho_2_^post6 == 0), cost: 1
New rule:
l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1

Applied preprocessing
Original rule:
l1 -> l4 : resp^0'=resp^post7, ___rho_2_^0'=___rho_2_^post7, curr_serv^0'=curr_serv^post7, ___rho_1_^0'=___rho_1_^post7, servers^0'=servers^post7, c^0'=c^post7, (c^0-c^post7 == 0 /\ curr_serv^0 <= 0 /\ -servers^post7+servers^0 == 0 /\ resp^0-resp^post7 == 0 /\ curr_serv^0-curr_serv^post7 == 0 /\ ___rho_2_^0-___rho_2_^post7 == 0 /\ -___rho_1_^post7+___rho_1_^0 == 0), cost: 1
New rule:
l1 -> l4 : curr_serv^0 <= 0, cost: 1

Applied preprocessing
Original rule:
l7 -> l0 : resp^0'=resp^post8, ___rho_2_^0'=___rho_2_^post8, curr_serv^0'=curr_serv^post8, ___rho_1_^0'=___rho_1_^post8, servers^0'=servers^post8, c^0'=c^post8, (0 == 0 /\ resp^post8 == 0 /\ -___rho_2_^post8+c^post8 == 0 /\ -4+servers^post8 == 0 /\ 1-c^post8 <= 0 /\ -___rho_1_^post8+___rho_1_^0 == 0 /\ -servers^post8+curr_serv^post8 == 0), cost: 1
New rule:
l7 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 1

Applied preprocessing
Original rule:
l8 -> l7 : resp^0'=resp^post9, ___rho_2_^0'=___rho_2_^post9, curr_serv^0'=curr_serv^post9, ___rho_1_^0'=___rho_1_^post9, servers^0'=servers^post9, c^0'=c^post9, (-servers^post9+servers^0 == 0 /\ -___rho_1_^post9+___rho_1_^0 == 0 /\ ___rho_2_^0-___rho_2_^post9 == 0 /\ -c^post9+c^0 == 0 /\ curr_serv^0-curr_serv^post9 == 0 /\ -resp^post9+resp^0 == 0), cost: 1
New rule:
l8 -> l7 : TRUE, cost: 1

Simplified rules
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  15: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  16: l1 -> l4 : curr_serv^0 <= 0, cost: 1
  11: l4 -> l5 : TRUE, cost: 1
  12: l5 -> l4 : TRUE, cost: 1
  13: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  14: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  17: l7 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 1
  18: l8 -> l7 : TRUE, cost: 1


Eliminating location l7 by chaining:

Applied chaining
First rule:
l8 -> l7 : TRUE, cost: 1
Second rule:
l7 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 1
New rule:
l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2

Applied deletion
Removed the following rules: 17 18

Eliminating location l5 by chaining:

Applied chaining
First rule:
l4 -> l5 : TRUE, cost: 1
Second rule:
l5 -> l4 : TRUE, cost: 1
New rule:
l4 -> l4 : TRUE, cost: 2

Applied deletion
Removed the following rules: 11 12

Eliminated locations on linear paths
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  15: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  16: l1 -> l4 : curr_serv^0 <= 0, cost: 1
  20: l4 -> l4 : TRUE, cost: 2
  13: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  14: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  19: l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2


Applied nonterm
Original rule:
l4 -> l4 : TRUE, cost: 2
New rule:
l4 -> [9] : n >= 0, cost: NONTERM
Sub-proof via acceration calculus written to file:///tmp/tmpnam_LopNKp.txt

Applied deletion
Removed the following rules: 20

Accelerated simple loops
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  15: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  16: l1 -> l4 : curr_serv^0 <= 0, cost: 1
  21: l4 -> [9] : n >= 0, cost: NONTERM
  13: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  14: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  19: l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2


Applied chaining
First rule:
l1 -> l4 : curr_serv^0 <= 0, cost: 1
Second rule:
l4 -> [9] : n >= 0, cost: NONTERM
New rule:
l1 -> [9] : curr_serv^0 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 21

Chained accelerated rules with incoming rules
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  15: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  16: l1 -> l4 : curr_serv^0 <= 0, cost: 1
  22: l1 -> [9] : curr_serv^0 <= 0, cost: NONTERM
  13: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  14: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  19: l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2


Removed unreachable locations and irrelevant leafs
Start location: l8
  10: l0 -> l1 : TRUE, cost: 1
  15: l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
  22: l1 -> [9] : curr_serv^0 <= 0, cost: NONTERM
  13: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  14: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  19: l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2


Eliminating location l1 by chaining:

Applied chaining
First rule:
l0 -> l1 : TRUE, cost: 1
Second rule:
l1 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 1
New rule:
l0 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 2

Applied chaining
First rule:
l0 -> l1 : TRUE, cost: 1
Second rule:
l1 -> [9] : curr_serv^0 <= 0, cost: NONTERM
New rule:
l0 -> [9] : curr_serv^0 <= 0, cost: NONTERM

Applied deletion
Removed the following rules: 10 15 22

Eliminated locations on tree-shaped paths
Start location: l8
  23: l0 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 2
  24: l0 -> [9] : curr_serv^0 <= 0, cost: NONTERM
  13: l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
  14: l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
  19: l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2


Eliminating location l6 by chaining:

Applied chaining
First rule:
l0 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 2
Second rule:
l6 -> l0 : curr_serv^0'=-1+curr_serv^0, (___rho_1_^0 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 1
New rule:
l0 -> l0 : curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 3

Applied chaining
First rule:
l0 -> l6 : ___rho_1_^0'=___rho_1_^post6, -1+curr_serv^0 >= 0, cost: 2
Second rule:
l6 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, c^0'=-1+c^0, -1+___rho_1_^0 >= 0, cost: 1
New rule:
l0 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-1+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3

Applied deletion
Removed the following rules: 13 14 23

Eliminated locations on tree-shaped paths
Start location: l8
  24: l0 -> [9] : curr_serv^0 <= 0, cost: NONTERM
  25: l0 -> l0 : curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 3
  26: l0 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-1+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3
  19: l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2


Applied acceleration
Original rule:
l0 -> l0 : curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ 1-curr_serv^0+c^0 <= 0), cost: 3
New rule:
l0 -> l0 : curr_serv^0'=curr_serv^0-n0, ___rho_1_^0'=___rho_1_^post6, (-1+n0 >= 0 /\ -___rho_1_^post6 >= 0 /\ curr_serv^0-n0 >= 0 /\ curr_serv^0-n0-c^0 >= 0), cost: 3*n0
Sub-proof via acceration calculus written to file:///tmp/tmpnam_HjPpmm.txt

Applied instantiation
Original rule:
l0 -> l0 : curr_serv^0'=curr_serv^0-n0, ___rho_1_^0'=___rho_1_^post6, (-1+n0 >= 0 /\ -___rho_1_^post6 >= 0 /\ curr_serv^0-n0 >= 0 /\ curr_serv^0-n0-c^0 >= 0), cost: 3*n0
New rule:
l0 -> l0 : curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, (0 >= 0 /\ -___rho_1_^post6 >= 0 /\ -1+curr_serv^0 >= 0 /\ -c^0 >= 0), cost: 3*curr_serv^0

Applied instantiation
Original rule:
l0 -> l0 : curr_serv^0'=curr_serv^0-n0, ___rho_1_^0'=___rho_1_^post6, (-1+n0 >= 0 /\ -___rho_1_^post6 >= 0 /\ curr_serv^0-n0 >= 0 /\ curr_serv^0-n0-c^0 >= 0), cost: 3*n0
New rule:
l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (0 >= 0 /\ -___rho_1_^post6 >= 0 /\ -1+curr_serv^0-c^0 >= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0

Applied acceleration
Original rule:
l0 -> l0 : resp^0'=1+resp^0, curr_serv^0'=-1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-1+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3
New rule:
l0 -> l0 : resp^0'=resp^0+n1, curr_serv^0'=-n1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-n1+c^0, (-1+___rho_1_^post6 >= 0 /\ -1+n1 >= 0 /\ -n1+curr_serv^0 >= 0), cost: 3*n1
Sub-proof via acceration calculus written to file:///tmp/tmpnam_iClmFg.txt

Applied instantiation
Original rule:
l0 -> l0 : resp^0'=resp^0+n1, curr_serv^0'=-n1+curr_serv^0, ___rho_1_^0'=___rho_1_^post6, c^0'=-n1+c^0, (-1+___rho_1_^post6 >= 0 /\ -1+n1 >= 0 /\ -n1+curr_serv^0 >= 0), cost: 3*n1
New rule:
l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (0 >= 0 /\ -1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0

Applied simplification
Original rule:
l0 -> l0 : curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, (0 >= 0 /\ -___rho_1_^post6 >= 0 /\ -1+curr_serv^0 >= 0 /\ -c^0 >= 0), cost: 3*curr_serv^0
New rule:
l0 -> l0 : curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 <= 0), cost: 3*curr_serv^0

Applied simplification
Original rule:
l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (0 >= 0 /\ -___rho_1_^post6 >= 0 /\ -1+curr_serv^0-c^0 >= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0
New rule:
l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0-c^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0

Applied simplification
Original rule:
l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (0 >= 0 /\ -1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0
New rule:
l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0

Applied deletion
Removed the following rules: 25 26

Accelerated simple loops
Start location: l8
  24: l0 -> [9] : curr_serv^0 <= 0, cost: NONTERM
  30: l0 -> l0 : curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 <= 0), cost: 3*curr_serv^0
  31: l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0-c^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0
  32: l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0
  19: l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2


Applied chaining
First rule:
l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2
Second rule:
l0 -> l0 : curr_serv^0'=c^0, ___rho_1_^0'=___rho_1_^post6, (-1+curr_serv^0-c^0 >= 0 /\ ___rho_1_^post6 <= 0 /\ c^0 >= 0), cost: 3*curr_serv^0-3*c^0
New rule:
l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=c^post8, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=c^post8, (-3+c^post8 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post8 >= 0), cost: 14-3*c^post8

Applied chaining
First rule:
l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2
Second rule:
l0 -> l0 : resp^0'=resp^0+curr_serv^0, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, c^0'=-curr_serv^0+c^0, (-1+curr_serv^0 >= 0 /\ -1+___rho_1_^post6 >= 0), cost: 3*curr_serv^0
New rule:
l8 -> l0 : resp^0'=4, ___rho_2_^0'=c^post8, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=-4+c^post8, (-1+___rho_1_^post6 >= 0 /\ -1+c^post8 >= 0), cost: 14

Applied deletion
Removed the following rules: 30 31 32

Chained accelerated rules with incoming rules
Start location: l8
  24: l0 -> [9] : curr_serv^0 <= 0, cost: NONTERM
  19: l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=4, servers^0'=4, c^0'=c^post8, -1+c^post8 >= 0, cost: 2
  33: l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=c^post8, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=c^post8, (-3+c^post8 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post8 >= 0), cost: 14-3*c^post8
  34: l8 -> l0 : resp^0'=4, ___rho_2_^0'=c^post8, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=-4+c^post8, (-1+___rho_1_^post6 >= 0 /\ -1+c^post8 >= 0), cost: 14


Eliminating location l0 by chaining:

Applied chaining
First rule:
l8 -> l0 : resp^0'=4, ___rho_2_^0'=c^post8, curr_serv^0'=0, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=-4+c^post8, (-1+___rho_1_^post6 >= 0 /\ -1+c^post8 >= 0), cost: 14
Second rule:
l0 -> [9] : curr_serv^0 <= 0, cost: NONTERM
New rule:
l8 -> [9] : (0 <= 0 /\ -1+___rho_1_^post6 >= 0 /\ -1+c^post8 >= 0), cost: NONTERM

Applied simplification
Original rule:
l8 -> [9] : (0 <= 0 /\ -1+___rho_1_^post6 >= 0 /\ -1+c^post8 >= 0), cost: NONTERM
New rule:
l8 -> [9] : (-1+___rho_1_^post6 >= 0 /\ -1+c^post8 >= 0), cost: NONTERM

Applied partial deletion
Original rule:
l8 -> l0 : resp^0'=0, ___rho_2_^0'=c^post8, curr_serv^0'=c^post8, ___rho_1_^0'=___rho_1_^post6, servers^0'=4, c^0'=c^post8, (-3+c^post8 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post8 >= 0), cost: 14-3*c^post8
New rule:
l8 -> [11] : (-3+c^post8 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post8 >= 0), cost: 14-3*c^post8

Applied deletion
Removed the following rules: 19 24 33 34

Eliminated locations on tree-shaped paths
Start location: l8
  35: l8 -> [9] : (-1+___rho_1_^post6 >= 0 /\ -1+c^post8 >= 0), cost: NONTERM
  36: l8 -> [11] : (-3+c^post8 <= 0 /\ ___rho_1_^post6 <= 0 /\ -1+c^post8 >= 0), cost: 14-3*c^post8


Computing asymptotic complexity
Proved nontermination of rule 35 via SMT.

Proved the following lower bound
Complexity:  Nonterm
Cpx degree: Nonterm

Solved cost: NONTERM
Rule cost:   NONTERM
Rule guard:  (-1+___rho_1_^post6 >= 0 /\ -1+c^post8 >= 0)
